head	1.1;
access;
symbols
	UDLVideo-0_05:1.1
	UDLVideo-0_04:1.1
	UDLVideo-0_03:1.1
	UDLVideo-0_02:1.1
	UDLVideo-0_01:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.06.16.22.14.13;	author jlee;	state Exp;
branches;
next	;
commitid	32RVqXEWbjRXsNEx;


desc
@@


1.1
log
@Add first rough version of UDLVideo, a video driver for DisplayLink USB products
Detail:
  Based in part around both the OpenBSD 'udl' and the NetBSD 'udl' DisplayLink driver sources, this is a fully functional GraphicsV driver which should be compatible with almost all DL1xx series devices.
  However the current code does have several deficiencies which makes it unsuitable for real-world use:
  * Video memory allocation is a hack; PCI_RAMAlloc is used to claim and map in memory which will then be redundently mapped in again by the OS using OS_Memory 13.
  * The driver relies on manually scanning screen memory to look for any changes which need transmitting to the device. Consequently screen refresh rate is low, especially for high resolutions on older machines.
  * The driver only supports 16bpp and 32bpp colour depths. Palettised modes are not supported by the hardware, and so some kind of software emulation will be required in order to avoid bad things happening when an attempt is made to use a numbered screen mode.
  * Screen update functions aren't fully optimised. A cursory glance at the generated assembler suggests that at least some of them are spilling variables onto the stack, which will likely have a significant affect on performance.
  * Huffman compression needs reworking in order to fix issues seen on DL1x0 hardware (assuming it's worth it, from a performance point of view)
  * Error handling could do with some improvements
  Notable files:
  * c/udl, h/udl - The remaining bits of the OpenBSD driver. Only the basic initialisation code and command generation code remains.
  * c/netbsd, h/netbsd - The remaining bits of the NetBSD driver; only the LFSR function has been kept
  * c/screen, h/screen - New screen update functions to replace the BSD ones, tailor-made to match the requirements of the RISC OS driver
  * c/buildhuff - Utility to generate the encoded 16 bit huffman table
  * Resources/huff16 - Squashed version of the encoded huffman table. zlib compression works considerably better, so is worth considering in the future.
Admin:
  Tested on Iyonix, BB-xM with a DL120 & DL165 device


Version 0.01. Tagged as 'UDLVideo-0_01'
@
text
@@
