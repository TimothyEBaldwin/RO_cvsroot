head	1.7;
access;
symbols
	GC320Video-0_16:1.7
	GC320Video-0_15:1.6
	GC320Video-0_14:1.5
	GC320Video-0_13:1.4
	GC320Video-0_11:1.3
	GC320Video-0_10:1.2
	GC320Video-0_09:1.1;
locks; strict;
comment	@# @;


1.7
date	2017.08.12.09.12.03;	author rool;	state Exp;
branches;
next	1.6;
commitid	3j5nShJqjjKEYT2A;

1.6
date	2017.06.10.09.18.34;	author rool;	state Exp;
branches;
next	1.5;
commitid	qCUEORgu7Xal7OUz;

1.5
date	2017.05.27.08.40.20;	author rool;	state Exp;
branches;
next	1.4;
commitid	HB9B7oImV4Gqn0Tz;

1.4
date	2017.05.23.21.40.29;	author rsprowson;	state Exp;
branches;
next	1.3;

1.3
date	2016.01.31.22.21.43;	author rool;	state Exp;
branches;
next	1.2;
commitid	AbnqY37yRXsup8Ty;

1.2
date	2016.01.31.22.17.45;	author rool;	state Exp;
branches;
next	1.1;
commitid	2MGOLXyzecVRn8Ty;

1.1
date	2015.11.07.21.53.39;	author rool;	state Exp;
branches;
next	;
commitid	w41sHa8aRi6lFbIy;


desc
@@


1.7
log
@Kick GFX pipeline for the initial mode
Detail:
  If the first and only mode change was direct to 8bpp the blank GFX plane would be shown because no V-syncs had run yet, requiring a switch to a non 8bpp mode and back again to restore. Ordinarily the boot sequence does this 2 mode change as a side effect of entering the desktop, but
    *Configure Mode 28
    *Configure NoBoot
  would lead to a blank screen. The transition from GFX->8bpp now switches between pipelines without leaving the disabled one on show.
Admin:
  Submission from Elesar.

Version 0.16. Tagged as 'GC320Video-0_16'
@
text
@/* (0.16)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.16
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                09 Aug 2017

#define Module_MajorVersion             "0.16"
#define Module_Version                  16
#define Module_MinorVersion             ""
#define Module_Date                     "09 Aug 2017"

#define Module_ApplicationDate          "09-Aug-17"

#define Module_ComponentName            "GC320Video"
#define Module_ComponentPath            "bsd/RiscOS/Sources/Video/HWSupport/GC320Video"

#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (09 Aug 2017)"
#define Module_LibraryVersionInfo       "0:16"
@


1.6
log
@Add support for 8bpp paletted modes
Detail:
  The TRM originally made reference to a BITMAP8 mode, which was subsequently withdrawn - this seems to be a documentation error as there were 17 possible colour depths supported but only a 4 bit FORMAT field in the ATTRIBUTE register into which to program them. However, by careful rearranging of the blocks originally intended to do 4:2:0 YUV output it's possible to get the 8bpp mode the long way round, switching away from the GFX pipeline to do so.
  Therefore, the primary head now supports 1/2/4/8/12/15/16/32bpp and the secondary 8/12/15/16/32bpp.
Admin:
  Submission from Elesar.

Version 0.15. Tagged as 'GC320Video-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d9 1
a9 1
#define Module_Date_CMHG                05 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d14 1
a14 1
#define Module_Date                     "05 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (05 Jun 2017)"
#define Module_LibraryVersionInfo       "0:15"
@


1.5
log
@Give the AKF60 a little grace
Detail:
  The video controller uses 1's based horizontal porch values, so rejects HFP=0 (or HBP=0, though that's unlikely to exist as there'd be no time to restore the black level on a real CRT) due to the minimum being 1. For old MDFs like the AKF60 both horizontal porch values must also be a multiple of 2, which is a hangover from VIDC, and not a requirement here. So in the event of HFP=0 transfer 1 tick from the HBP to make it possible with 1's based regisers, but keep overall timings the same.
Admin:
  Submission from Elesar.

Version 0.14. Tagged as 'GC320Video-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d9 1
a9 1
#define Module_Date_CMHG                27 May 2017
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d14 1
a14 1
#define Module_Date                     "27 May 2017"
d16 1
a16 1
#define Module_ApplicationDate          "27-May-17"
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (27 May 2017)"
#define Module_LibraryVersionInfo       "0:14"
@


1.4
log
@Fix for flickery animations
The wrong address was being usef for the VDU render DAG, so accelerated ops were being plotted direct to the displayed image rather than off screen. Not noticeable in the desktop, but animations (eg. the Pogo screensaver) flickered annoyingly.

Version 0.13. Tagged as 'GC320Video-0_13'
@
text
@d1 1
a1 1
/* (0.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.13
d9 1
a9 1
#define Module_Date_CMHG                23 May 2017
d11 2
a12 2
#define Module_MajorVersion             "0.13"
#define Module_Version                  13
d14 1
a14 1
#define Module_Date                     "23 May 2017"
d16 1
a16 1
#define Module_ApplicationDate          "23-May-17"
d21 3
a23 3
#define Module_FullVersion              "0.13"
#define Module_HelpVersion              "0.13 (23 May 2017)"
#define Module_LibraryVersionInfo       "0:13"
@


1.3
log
@Adjust default skew
Detail:
  Changed TFP410 data skew to 6 (from 4). At high pixel rates some shades of grey came out as pink, empirical tests showed values of 5-7 worked, so pick the middle value.
Admin:
  Submission from Elesar.

Version 0.11. Tagged as 'GC320Video-0_11'
@
text
@d1 1
a1 1
/* (0.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.11
d9 1
a9 1
#define Module_Date_CMHG                14 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "0.11"
#define Module_Version                  11
d14 1
a14 1
#define Module_Date                     "14 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "0.11"
#define Module_HelpVersion              "0.11 (14 Jan 2016)"
#define Module_LibraryVersionInfo       "0:11"
@


1.2
log
@Switch round DMA priority
Detail:
  Reverted the fix from 0.09, as at 1920x1200x32bpp @@ 60Hz some flicker was still observed during large memory copy operations. Instead, make sure the line serialiser always has priority through MFLAG to gain access to the L3 bus if < 64 words are in the buffer with a hysterisis of 8 words.
Admin:
  Submission from Elesar.

Version 0.10. Tagged as 'GC320Video-0_10'
@
text
@d1 1
a1 1
/* (0.10)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.10
d9 1
a9 1
#define Module_Date_CMHG                28 Dec 2015
d11 2
a12 2
#define Module_MajorVersion             "0.10"
#define Module_Version                  10
d14 1
a14 1
#define Module_Date                     "28 Dec 2015"
d16 1
a16 1
#define Module_ApplicationDate          "28-Dec-15"
d21 3
a23 3
#define Module_FullVersion              "0.10"
#define Module_HelpVersion              "0.10 (28 Dec 2015)"
#define Module_LibraryVersionInfo       "0:10"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.09
d9 1
a9 1
#define Module_Date_CMHG                27 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "0.09"
#define Module_Version                  9
d14 1
a14 1
#define Module_Date                     "27 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "27-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "0.09"
#define Module_HelpVersion              "0.09 (27-Aug-2015)"
#define Module_LibraryVersionInfo       "0:9"
@

