head	1.1;
access;
symbols
	GPIO-1_00-1_11_2_5:1.1.2.1
	GPIO-1_00-1_11_2_4:1.1.2.1
	GPIO-1_00-1_11_2_3:1.1.2.1
	GPIO-1_00-1_11_2_2:1.1.2.1
	HAL:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2017.08.03.19.59.37;	author rsprowson;	state dead;
branches
	1.1.2.1;
next	;
commitid	jMkfGA3jss5TWN1A;

1.1.2.1
date	2017.08.03.19.59.37;	author rsprowson;	state Exp;
branches;
next	;
commitid	jMkfGA3jss5TWN1A;


desc
@@


1.1
log
@file GPIODevice was initially added on branch HAL.
@
text
@@


1.1.2.1
log
@Export C version of the device header
Move some of the struct definitions out into a new header file, which is appended at build time to the GPIODevice. Some minor renaming to follow the conventions from other devices (eg. whether to split with underscores or not).
Sync GPIO types in the docs.

Version 1.00, 1.11.2.2. Tagged as 'GPIO-1_00-1_11_2_2'
@
text
@a0 75
/*
 * Copyright (c) 2017, RISC OS Open Ltd
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef INTERFACE_GPIODEVICE_H
#define INTERFACE_GPIODEVICE_H

#pragma force_top_level
#pragma include_only_once

#include <stdint.h>
#include "Global/HALDevice.h"

typedef struct
{
  uint32_t number : 8;  /* The Nth of this type */
  uint32_t mode   : 5;  /* Opaque alternate mode */
  uint32_t unused : 3;
  uint32_t type   : 16; /* See GPIOType */
} gpio_grouplist_t;

typedef struct
{
  uint32_t pin:5;
  uint32_t can_output:1;
  uint32_t can_input:1;
  uint32_t unused:25;
  uint32_t modes_allowed; /* Bit field */
  gpio_grouplist_t modes[1];
} gpio_enumerate_t;

typedef struct gpiodevice
{
  struct device dev;
  uint32_t ports;
  uint32_t number;
  const gpio_enumerate_t *(*Enumerate)(struct device *, int *);
  int (*SetDataBits)(struct device *, int);
  int (*ClearDataBits)(struct device *, int);
  void (*ToggleDataBits)(struct device *, int);
  int (*ReadDataBits)(struct device *);
  int (*DataDirection)(struct device *, int, int);
  int /* 5 bit mode */ (*ReadMode)(struct device *, int);
  int /* 5 bit mode */ (*WriteMode)(struct device *, int, int /* 5 bit mode */);
  int (*PullControl)(struct device *, int, int);   
  int (*PullDirection)(struct device *, int, int);
  int (*EdgeControl)(struct device *, int, int *, int *, int *);
  int (*EdgePollStatus)(struct device *, int);
} gpiodevice_t;

#endif
/* In the exported copy of this file, the Hdr2H translation of hdr.GPIODevice will follow. */
@

