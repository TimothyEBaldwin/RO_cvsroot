head	1.8;
access;
symbols
	HAL:1.8.0.2
	GPIO-0_64:1.8
	GPIO-0_63:1.7
	GPIO-0_62:1.7
	GPIO-0_61:1.7
	GPIO-0_60:1.7
	GPIO-0_59:1.6
	GPIO-0_58:1.6
	GPIO-0_54:1.5
	GPIO-0_53:1.4
	GPIO-0_52:1.3
	GPIO-0_51:1.2
	initial:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2017.02.11.11.11.26;	author rool;	state Exp;
branches
	1.8.2.1;
next	1.7;
commitid	hDIEW2UWfNQuAwFz;

1.7
date	2015.02.25.21.47.14;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	mVXSMogYUaGt9rby;

1.6
date	2014.10.09.08.54.54;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	tlTUaFQNXeOAlvTx;

1.5
date	2014.10.09.08.29.20;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	YkZZZxjgfUDOcvTx;

1.4
date	2014.10.09.08.08.55;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	nysVx6oVq5iM5vTx;

1.3
date	2014.10.09.07.47.50;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	vGvClpBQnHezYuTx;

1.2
date	2014.04.29.13.43.23;	author bavison;	state Exp;
branches;
next	1.1;
commitid	bFQfXgztw15obAyx;

1.1
date	2014.04.29.13.25.09;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Ss9wdP7uZ2nQ4Ayx;

1.8.2.1
date	2017.02.11.15.12.45;	author rool;	state dead;
branches;
next	;
commitid	J69vqiljDCvfVxFz;

1.1.1.1
date	2014.04.29.13.25.09;	author bavison;	state Exp;
branches;
next	;
commitid	Ss9wdP7uZ2nQ4Ayx;


desc
@@


1.8
log
@Transition Pi HAL to API 1.00
Detail:
  Add extra definitions and structure layouts to GPIODevice header. Remove local inclusion of Hdr:HALDevice, in line with the other HAL device headers (BMU, Mixer, RTC, et al).
  Remove GPIOType/Revision definitions for Pi.
  Switch out the Pi machine checks in the module so it still builds.
Admin:
  GPIO module built, but not tested.

Version 0.64. Tagged as 'GPIO-0_64'
@
text
@;
; Copyright (c) 2011, Tank Stage Lighting
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of the copyright holder nor the names of their
;       contributors may be used to endorse or promote products derived from
;       this software without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
; WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
; DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
; ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;

;s.InitModule

 [ :LNOT::DEF: ROM
        GBLL    ROM
ROM     SETL    {FALSE}
 ]

 [ :LNOT: ROM
	IMPORT	|__RelocCode|		; Link symbol for relocation routine
 ]


;******************************************************************************
;
;       RM_Init - Initialisation entry point
;


RM_Init
        Push	"r0-r11,lr"
 [ :LNOT: ROM
        BL      |__RelocCode|		; initialise absolute code pointers
 ]
        MOV     r0,#ModHandReason_Claim	;
        LDR     r3,maxRMA		;
        SWI     XOS_Module		;
	BVS	initerror		;
        STR     r2,[r12]		; save RMA pointer
	MOV	r12,r2			;
	ADD	r0,r2,#MainTemp		; Clear only lower bits
        MOV     r1,#0			;
10					; clear memory
        STR	r1,[r2],#4		;
        CMP     r2,r0			;end ?
        BLT     %BT10
;get board type for maps
	MOV	r0,#HALDeviceType_Comms	;comms
	ADD	r0,r0,#HALDeviceComms_GPIO	;gpio
	MOV	r1,#0			;first call
	MOV	r8,#4			;OS_Hardware 4
	SWI	XOS_Hardware		;call it
	BVS	initerror1		;
	CMP	r1,#-1			;bad call ?
	MOVEQ	r1,#hal_dummy		;
	STREQ	r1,[r12,#halproc]	;
	MOVEQ	r1,#hal_dummy		;
	STREQ	r1,[r12,#halboard]	;
	MOVEQ	r1,#1			;
	STREQ	r1,[r12,#halrevision]	;
	MOVEQ	r0,#hal_rev_dummy	;board type default
	BEQ	%FT100			;
;check API matches our assumption
	LDR	r1,[r2,#HALDevice_Version]
	TEQ	r1,#0
	BNE	initerror1		;want API 0.00
;find real board type
	LDR	r1,[r2,#HALDevice_GPIORevision]
	STR	r1,[r12,#halrevision]	;
	LDR	r0,[r2,#HALDevice_GPIOType]
	STR	r0,[r12,#halboard]	;
	LDRH	r3,[r2,#HALDevice_ID]
	STR	r3,[r12,#halproc]	;
;omap3 section
	CMP	r3,#HALDeviceID_GPIO_OMAP3
	BNE	%FT400			;not omap3 try something else
	ADR	r2,omap3_gpio_tables	;pointer to board table
	CMP	r0,#GPIOType_OMAP3_BeagleBoard
	BNE	%FT20
	CMP	r1,#GPIORevision_BeagleBoard_xMC
	BLE	%FT99			;
20	CMP	r0,#GPIOType_OMAP3_DevKit8000
	BNE	%FT21
	CMP	r1,#GPIORevision_DevKit8000_Unknown
	BLE	%FT99			;
21	CMP	r0,#GPIOType_OMAP3_IGEPv2
	BNE	%FT22
	CMP	r1,#GPIORevision_IGEPv2_C
	BLE	%FT99			;
22	CMP	r0,#GPIOType_OMAP3_Pandora
	BNE	%FT23
	CMP	r1,#GPIORevision_Pandora_Unknown
	BLE	%FT99			;
23	ADR	r2,dummy_gpio_table	;pointer to board table
	MOV	r0,#hal_rev_dummy	;board type default if it falls through
	B	%FT100			;default if not any
;omap4 section
400
	CMP	r3,#HALDeviceID_GPIO_OMAP4
	BNE	%FT500			;not omap4 try something else
	ADR	r2,omap4_gpio_tables	;pointer to board table
	CMP	r0,#GPIOType_OMAP4_Panda
	BNE	%FT24
	CMP	r1,#GPIORevision_PandaES
	BLE	%FT99			;
24	ADR	r2,dummy_gpio_table	;pointer to board table
	MOV	r0,#hal_rev_dummy	;board type default if it falls through
	B	%FT100			;default if not any
;bcm section
500
	[ {FALSE}
	CMP	r3,#HALDeviceID_GPIO_BCM2835
	BNE	%FT600			;not pi try something else
	ADR	r2,bcm2835_gpio_tables	;pointer to board table
	CMP	r0,#GPIOType_BCM2835_RaspberryPi
	BNE	%FT28
	CMP	r1,#GPIORevision_RaspberryPi_Mk2_B_1
	BLE	%FT99			;
28	ADR	r2,dummy_gpio_table	;pointer to board table
	MOV	r0,#hal_rev_dummy	;board type default if it falls through
	B	%FT100			;default if not any
	]
;xxxx section
600
	ADR	r2,dummy_gpio_table	;pointer to board table
	MOV	r0,#hal_rev_dummy	;board type default if it falls through
	B	%FT100			;default if not any
;add more if needed
99	LDR	r0,[r2,r0, LSL #2]	;
	ADD	r0,r0,r1		;add revision to base
100	STR	r0,[r12,#machine]	;
	BL	Get_Board		;get name
;map in our memory
	MOV	r0,#-1			;setup logical store
	ADD	r5,r12,#logicalstore	;store for logical address
	ADD	r4,r12,#logicalstore1	;
101	STR	r0,[r5],#4		;
	CMP	r5,r4			;
	BLO	%BT101
	BL	get_table		;setup pointer
	LDR	r4,[r1,#physical_table]	;pointer to Physical memory
	CMP	r4,#-1			;no maps
	MOVEQ	r1,r4			;end table
	ADD	r5,r12,#logicalstore	;store for logical address
	BEQ	%FT30			;
20	MOV	r2,#mapsize		;size to map in
	MOV	r0,#13			;map in permanent
	LDR	r1,[r4],#4		;get first map
	CMP	r1,#-1			;last one ?
	BEQ	%FT30			;
	SWI	XOS_Memory		;
	BVS	initerror2		;
	STR	r3,[r5],#4		;store logical address
	B	%BT20			;next
30	STR	r1,[r5]			;store end flag
	BL	get_table		;setup pointer
	LDR	r4,[r1,#map]		;main control
	CMP	r4,#-1			;no map
	ADD	r5,r12,#logicalstore1	;store for logical address
	STREQ	r4,[r5]			;store logical address
	BEQ	%FT40			;
	MOV	r2,#padsize		;
	LDR	r1,[r4]			;
	SWINE	XOS_Memory		;
	BVS	initerror3		;
	STR	r3,[r5]			;store logical address
40	BL	get_table		;setup pointer
	LDR	r4,[r1,#srambase]	;map in sram
	CMP	r4,#-1			;no sram
	ADD	r5,r12,#logicalsram	;store for logical address
	STREQ	r4,[r5]			;store logical address
	BEQ	%FT50			;
	MOV	r2,#sramsize		;
	LDR	r1,[r4]			;
	SWI	XOS_Memory		;
	BVS	initerror4		;
	STR	r3,[r5]			;store logical address
50
	MOV	r0,#TickerV
	ADRL	r1,FlashVector		;
	MOV	r2,r12			;
	SWI	XOS_Claim		;
	BVS	initerrortick

	MOV	r0,#1			;protect i2c
	LDR	r10,[r12,#machine]	;get board type
	CMP	r10,#hal_rev_dummy	;is it unkown
	BEQ	%FT60
	[ {FALSE}
	CMP	r10,#hal_rev_pi		;is it a Pi
	BLGE	Pi_Enable_I2C		;
	BLLT	Enable_I2C		;
	BL	get_i2c_info		;get extender info
	]
60
	CLRV
	Pull	"r0-r11,pc"		;

maxRMA	DCD	RMAlimit
dummy_gpio_table
	DCD	hal_rev_dummy
omap3_gpio_tables
	DCD	hal_rev_beagle
	DCD	hal_rev_dev
	DCD	hal_rev_igep
	DCD	hal_rev_pandora
omap4_gpio_tables
	DCD	hal_rev_panda
	[ {FALSE}
bcm2835_gpio_tables
	DCD	hal_rev_pi
	]

;******************************************************************************
	END
@


1.8.2.1
log
@Implementation of API 1.00
Detail:
  By delagating the hardware access element to the underlying HAL, the GPIO module becomes much simpler.
  None of the platform specific SWIs (eg. GPIO_AuxAsUSB) are required, or implemented. This information can be obtained by enumerating the pins and switching members of the same group by setting their mode for example.
  A new SWI, GPIO_Features is added, though the returned flags are currently 0 the presence of the SWI demarks the HAL variant.
  A new command, *GPIODevices lists the GPIO controller(s) known and their basic input/output state at a glance.
  See the StrongHelp manual for full details.
Admin:
  Tested on not-a-Pi too, to ensure it doesn't attach to pre API 1.00.

Version 1.00, 1.11.2.1. Tagged as 'GPIO-1_00-1_11_2_1'
@
text
@@


1.7
log
@Add two more targets to the GPIO table, and other improvements
Docs/GPIO: StrongHelp updated
Resources/!PiLed/!Run: RMEnsure the GPIO module first
Resources/!PiLed/!RunImage: Clarifications and improvements
hdr/Reals: Make space for the Mk2 model B and model A+
s/I2CSWIs: Improvements to error reporting
s/InitModule: Add an API version check against the HAL
s/PiSWIs; s/SupportCode: Resolve some TODO's
s/Tables: The two extra tables for the two extra boards

Submission from Tank. Built, and module loaded, but no runtime testing.

Version 0.60. Tagged as 'GPIO-0_60'
@
text
@d114 2
a115 1
400	CMP	r3,#HALDeviceID_GPIO_OMAP4
a124 1

d126 3
a128 1
500	CMP	r3,#HALDeviceID_GPIO_BCM2835
d138 1
d140 2
a141 1
600	ADR	r2,dummy_gpio_table	;pointer to board table
d205 1
d210 1
d225 1
d228 1
@


1.6
log
@Use Push/Pull macros
This gets rid of ~200 mixed UAL warnings without having to use the -nowarn switch, which could hide some genuine warnings needing attention.
PUSH and POP are synonyms for their STM and LDM equivalent, according to the ARM ARM.
Version number bumped to +0.01 greater than Tank's latest binary.

Version 0.58. Tagged as 'GPIO-0_58'
@
text
@d79 4
d131 1
a131 1
	CMP	r1,#GPIORevision_RaspberryPi_C_1
@


1.5
log
@Post review fixups
Unknown SWIs now return the error with V set rather than calling OS_GenerateError.
A couple of non-X SWIs changed added 'X'.
Use SETV/CLRV now we have sight of central headers to simplify the exit points.
Query use of SWIEQ/SWINE pair.

Version 0.54. Tagged as 'GPIO-0_54'
@
text
@d47 1
a47 1
        PUSH	{r0-r11,lr}
d203 1
a203 1
	POP	{r0-r11,pc}		;
@


1.4
log
@Add GPIO table entries for OMAP4/Pi Compute/Pandora
Submission from TankStage.

Version 0.53. Tagged as 'GPIO-0_53'
@
text
@d187 1
a187 1
	MOV	r0,#&1C			;ticker
d190 2
a191 1
	SWI	OS_Claim		;
d201 3
a203 3
60	POP	{r0-r11,lr}		;
	MSR	CPSR_f,#0<<V_bit_number	;
	MOV	pc,lr
@


1.3
log
@Swap to central headers
First part of submission from TankStage.
Built, but not tested.

Version 0.52. Tagged as 'GPIO-0_52'
@
text
@d47 1
a47 1
        PUSH	{r1-r11,lr}
a80 1
	LDR	r1,[r2,#68]		;get revision type
d86 3
a88 2
	CMP	r3,#hal_omap3		;
	BNE	%FT500			;not omap try something else
d90 17
a106 9
	CMP	r0,#hal_beagle		;is it BB type
	BEQ	%FT99			;
	CMP	r0,#hal_devkit8000	;is it a devkit
	BEQ	%FT99			;
	CMP	r0,#hal_igep		;is it an igep
	BEQ	%FT99			;
	CMP	r0,#hal_pandora		;is it a pandora
	BEQ	%FT99			;
	ADR	r2,dummy_gpio_table	;pointer to board table
d109 12
d122 1
a122 1
500	CMP	r3,#hal_bcm2835		;
d125 5
a129 3
	CMP	r0,#hal_raspi		;is it a rasberrypi
	BEQ	%FT99			;
	ADR	r2,dummy_gpio_table	;pointer to board table
d133 3
a135 1
600
d200 2
a201 2
60	POP	{r1-r11,lr}		;
	MSR	CPSR_f,#0<<28		;
d211 2
@


1.2
log
@  Made GPIO module ROMmable
Detail:
  Changed to use CModule shared makefile.
  No need to call __RelocCode when targeting ROM (relocation is done at
  ROM link time instead). In fact, the linker doesn't create __RelocCode
  in this case, so link fails unless it's removed.
Admin:
  Tested on Raspberry Pi

Version 0.51. Tagged as 'GPIO-0_51'
@
text
@d51 1
a51 1
        MOV     r0,#OSModule_Alloc	;
d64 2
a65 2
	MOV	r0,#&400		;comms
	ADD	r0,r0,#&3		;gpio
d80 1
a80 1
;omap3 section
d83 1
a83 1
	LDR	r0,[r2,#64]		;get board type
d85 1
a85 1
	LDRH	r3,[r2,#2]		;get processor
@


1.1
log
@Initial revision
@
text
@d30 4
d35 1
d37 1
d48 1
d50 1
@


1.1.1.1
log
@  Initial import of GPIO module sources
Admin:
  Relicenced under the BSD licence with the permission of the author
@
text
@@
