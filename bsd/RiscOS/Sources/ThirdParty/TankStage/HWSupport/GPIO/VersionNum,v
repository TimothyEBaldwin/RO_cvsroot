head	1.11;
access;
symbols
	GPIO-1_00-1_11_2_5:1.11.2.5
	GPIO-1_00-1_11_2_4:1.11.2.4
	GPIO-1_00-1_11_2_3:1.11.2.3
	GPIO-1_00-1_11_2_2:1.11.2.2
	GPIO-1_00-1_11_2_1:1.11.2.1
	HAL:1.11.0.2
	GPIO-0_64:1.11
	GPIO-0_63:1.10
	GPIO-0_62:1.9
	GPIO-0_61:1.8
	GPIO-0_60:1.7
	GPIO-0_59:1.6
	GPIO-0_58:1.5
	GPIO-0_54:1.4
	GPIO-0_53:1.3
	GPIO-0_52:1.2
	GPIO-0_51:1.1;
locks; strict;
comment	@# @;


1.11
date	2017.02.11.11.11.22;	author rool;	state Exp;
branches
	1.11.2.1;
next	1.10;
commitid	hDIEW2UWfNQuAwFz;

1.10
date	2016.03.16.23.13.14;	author jballance;	state Exp;
branches;
next	1.9;
commitid	RsBxsSCAkGdMfVYy;

1.9
date	2015.11.30.09.56.41;	author jballance;	state Exp;
branches;
next	1.8;
commitid	mQhjAZaMbH3Lh6Ly;

1.8
date	2015.10.28.21.27.43;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	aAwyOOWADZhAaVGy;

1.7
date	2015.02.25.21.47.04;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	mVXSMogYUaGt9rby;

1.6
date	2014.10.13.07.19.56;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	fQVtVeuaFu63H0Ux;

1.5
date	2014.10.09.08.54.52;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	tlTUaFQNXeOAlvTx;

1.4
date	2014.10.09.08.29.16;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	YkZZZxjgfUDOcvTx;

1.3
date	2014.10.09.08.08.46;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	nysVx6oVq5iM5vTx;

1.2
date	2014.10.09.07.47.45;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	vGvClpBQnHezYuTx;

1.1
date	2014.04.29.13.43.20;	author bavison;	state Exp;
branches;
next	;
commitid	bFQfXgztw15obAyx;

1.11.2.1
date	2017.02.11.15.12.36;	author rool;	state Exp;
branches;
next	1.11.2.2;
commitid	J69vqiljDCvfVxFz;

1.11.2.2
date	2017.08.03.19.59.28;	author rsprowson;	state Exp;
branches;
next	1.11.2.3;
commitid	jMkfGA3jss5TWN1A;

1.11.2.3
date	2017.08.03.20.01.52;	author rsprowson;	state Exp;
branches;
next	1.11.2.4;
commitid	d9Lmb2DStI8JXN1A;

1.11.2.4
date	2018.03.30.08.21.54;	author rsprowson;	state Exp;
branches;
next	1.11.2.5;
commitid	fWUnp2jyrIMhpswA;

1.11.2.5
date	2018.03.31.20.21.26;	author rsprowson;	state Exp;
branches;
next	;
commitid	1Yt462h8VyG8mEwA;


desc
@@


1.11
log
@Transition Pi HAL to API 1.00
Detail:
  Add extra definitions and structure layouts to GPIODevice header. Remove local inclusion of Hdr:HALDevice, in line with the other HAL device headers (BMU, Mixer, RTC, et al).
  Remove GPIOType/Revision definitions for Pi.
  Switch out the Pi machine checks in the module so it still builds.
Admin:
  GPIO module built, but not tested.

Version 0.64. Tagged as 'GPIO-0_64'
@
text
@/* (0.64)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.64
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                11 Feb 2017

#define Module_MajorVersion             "0.64"
#define Module_Version                  64
#define Module_MinorVersion             ""
#define Module_Date                     "11 Feb 2017"

#define Module_ApplicationDate          "11-Feb-17"

#define Module_ComponentName            "GPIO"
#define Module_ComponentPath            "bsd/RiscOS/Sources/ThirdParty/TankStage/HWSupport/GPIO"

#define Module_FullVersion              "0.64"
#define Module_HelpVersion              "0.64 (11 Feb 2017)"
#define Module_LibraryVersionInfo       "0:64"
@


1.11.2.1
log
@Implementation of API 1.00
Detail:
  By delagating the hardware access element to the underlying HAL, the GPIO module becomes much simpler.
  None of the platform specific SWIs (eg. GPIO_AuxAsUSB) are required, or implemented. This information can be obtained by enumerating the pins and switching members of the same group by setting their mode for example.
  A new SWI, GPIO_Features is added, though the returned flags are currently 0 the presence of the SWI demarks the HAL variant.
  A new command, *GPIODevices lists the GPIO controller(s) known and their basic input/output state at a glance.
  See the StrongHelp manual for full details.
Admin:
  Tested on not-a-Pi too, to ensure it doesn't attach to pre API 1.00.

Version 1.00, 1.11.2.1. Tagged as 'GPIO-1_00-1_11_2_1'
@
text
@d1 1
a1 1
/* (1.00)
d7 2
a8 2
#define Module_MajorVersion_CMHG        1.00
#define Module_MinorVersion_CMHG        1.11.2.1
d11 3
a13 3
#define Module_MajorVersion             "1.00"
#define Module_Version                  100
#define Module_MinorVersion             "1.11.2.1"
d21 3
a23 3
#define Module_FullVersion              "1.00 (1.11.2.1)"
#define Module_HelpVersion              "1.00 (11 Feb 2017) 1.11.2.1"
#define Module_LibraryVersionInfo       "1:0"
@


1.11.2.2
log
@Export C version of the device header
Move some of the struct definitions out into a new header file, which is appended at build time to the GPIODevice. Some minor renaming to follow the conventions from other devices (eg. whether to split with underscores or not).
Sync GPIO types in the docs.

Version 1.00, 1.11.2.2. Tagged as 'GPIO-1_00-1_11_2_2'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.11.2.2
#define Module_Date_CMHG                03 Aug 2017
d13 2
a14 2
#define Module_MinorVersion             "1.11.2.2"
#define Module_Date                     "03 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "03-Aug-17"
d21 2
a22 2
#define Module_FullVersion              "1.00 (1.11.2.2)"
#define Module_HelpVersion              "1.00 (03 Aug 2017) 1.11.2.2"
@


1.11.2.3
log
@Fix for abort using GPIO_ReadEvent
Missing '&' meant an attempt to put the result to the wrong address.
Ref https://www.riscosopen.org/forum/forums/11/topics/9414

Version 1.00, 1.11.2.3. Tagged as 'GPIO-1_00-1_11_2_3'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.11.2.3
d13 1
a13 1
#define Module_MinorVersion             "1.11.2.3"
d21 2
a22 2
#define Module_FullVersion              "1.00 (1.11.2.3)"
#define Module_HelpVersion              "1.00 (03 Aug 2017) 1.11.2.3"
@


1.11.2.4
log
@Remove OMAP3/OMAP4 declarations
Now held privately within the respective HAL.
Added rev D revision for WandBoard Quad.

Version 1.00, 1.11.2.4. Tagged as 'GPIO-1_00-1_11_2_4'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.11.2.4
#define Module_Date_CMHG                30 Mar 2018
d13 2
a14 2
#define Module_MinorVersion             "1.11.2.4"
#define Module_Date                     "30 Mar 2018"
d16 1
a16 1
#define Module_ApplicationDate          "30-Mar-18"
d21 2
a22 2
#define Module_FullVersion              "1.00 (1.11.2.4)"
#define Module_HelpVersion              "1.00 (30 Mar 2018) 1.11.2.4"
@


1.11.2.5
log
@Fix for only returning the first and last GPIO controller's enumeration
The loop to search for the next controller to return for GPIO_Info would only find the first and last controller and skipped any intermediate ones.
For the Raspberry Pi, with 2, this went unnoticed.
Also, the inner loop would read off the end of the gpio_device array by 1 entry.

Tested on a Raspberry Pi (results unchanged) and OMAP3 (6 controllers).

Version 1.00, 1.11.2.5. Tagged as 'GPIO-1_00-1_11_2_5'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.11.2.5
#define Module_Date_CMHG                31 Mar 2018
d13 2
a14 2
#define Module_MinorVersion             "1.11.2.5"
#define Module_Date                     "31 Mar 2018"
d16 1
a16 1
#define Module_ApplicationDate          "31-Mar-18"
d21 2
a22 2
#define Module_FullVersion              "1.00 (1.11.2.5)"
#define Module_HelpVersion              "1.00 (31 Mar 2018) 1.11.2.5"
@


1.10
log
@ Update GPIODevice to contain entry points for iMx6 with API 0.1 with
  single pin based calls, and initial entry points for API 0.2 with
  register wide calls.
 Detail:
  iMx6 has GPIO calls in the HAL that are based on single pin calls, cf those in OMAP3/4
  which (in iMx6 case) are exposed via the GPIO HAPDevice. These are modelled on calls
  in the OMAP series HALs, though these latter are not yet exposed.
  Ongoing work in other HALs provides an extended series of register wide calls. Initial
  entry points for these are also provided.

Admin:
 tested on iMx6


Version 0.63. Tagged as 'GPIO-0_63'
@
text
@d1 1
a1 1
/* (0.63)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.63
d9 1
a9 1
#define Module_Date_CMHG                16 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "0.63"
#define Module_Version                  63
d14 1
a14 1
#define Module_Date                     "16 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "16-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "0.63"
#define Module_HelpVersion              "0.63 (16 Mar 2016)"
#define Module_LibraryVersionInfo       "0:63"
@


1.9
log
@  Added conditional include of HALDevice to enable standalone build
Detail:
  Hdr.GPIODevice
Admin:


Version 0.62. Tagged as 'GPIO-0_62'
@
text
@d1 1
a1 1
/* (0.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.62
d9 1
a9 1
#define Module_Date_CMHG                30 Nov 2015
d11 2
a12 2
#define Module_MajorVersion             "0.62"
#define Module_Version                  62
d14 1
a14 1
#define Module_Date                     "30 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "30-Nov-15"
d21 3
a23 3
#define Module_FullVersion              "0.62"
#define Module_HelpVersion              "0.62 (30 Nov 2015)"
#define Module_LibraryVersionInfo       "0:62"
@


1.8
log
@Export GPIODevice header
Thanks to Jeffrey Lee for permission to relicense this work alongside the GPIO module.

Version 0.61. Tagged as 'GPIO-0_61'
@
text
@d1 1
a1 1
/* (0.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.61
d9 1
a9 1
#define Module_Date_CMHG                28 Oct 2015
d11 2
a12 2
#define Module_MajorVersion             "0.61"
#define Module_Version                  61
d14 1
a14 1
#define Module_Date                     "28 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-15"
d21 3
a23 3
#define Module_FullVersion              "0.61"
#define Module_HelpVersion              "0.61 (28 Oct 2015)"
#define Module_LibraryVersionInfo       "0:61"
@


1.7
log
@Add two more targets to the GPIO table, and other improvements
Docs/GPIO: StrongHelp updated
Resources/!PiLed/!Run: RMEnsure the GPIO module first
Resources/!PiLed/!RunImage: Clarifications and improvements
hdr/Reals: Make space for the Mk2 model B and model A+
s/I2CSWIs: Improvements to error reporting
s/InitModule: Add an API version check against the HAL
s/PiSWIs; s/SupportCode: Resolve some TODO's
s/Tables: The two extra tables for the two extra boards

Submission from Tank. Built, and module loaded, but no runtime testing.

Version 0.60. Tagged as 'GPIO-0_60'
@
text
@d1 1
a1 1
/* (0.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.60
d9 1
a9 1
#define Module_Date_CMHG                25 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.60"
#define Module_Version                  60
d14 1
a14 1
#define Module_Date                     "25 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "25-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.60"
#define Module_HelpVersion              "0.60 (25 Feb 2015)"
#define Module_LibraryVersionInfo       "0:60"
@


1.6
log
@Restore workingness
The change to use macros for the "Pull" sequences hadn't spotted that several of them were on lines with numeric labels, and the $label term of the "Pull" macro copies that inside the macro, making it macro local. As there aren't any ROUT directives these were silently moved by objasm to whereever the nearest similar number label was - resulting in several non functional exits.
Also move the module flags word to not be immediately after the module header, per recommendation in case the header ever needs extending.
Syntax strings change in line with, for example, *TIME's.

Version 0.59. Tagged as 'GPIO-0_59'
@
text
@d1 1
a1 1
/* (0.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.59
d9 1
a9 1
#define Module_Date_CMHG                13 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.59"
#define Module_Version                  59
d14 1
a14 1
#define Module_Date                     "13 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.59"
#define Module_HelpVersion              "0.59 (13 Oct 2014)"
#define Module_LibraryVersionInfo       "0:59"
@


1.5
log
@Use Push/Pull macros
This gets rid of ~200 mixed UAL warnings without having to use the -nowarn switch, which could hide some genuine warnings needing attention.
PUSH and POP are synonyms for their STM and LDM equivalent, according to the ARM ARM.
Version number bumped to +0.01 greater than Tank's latest binary.

Version 0.58. Tagged as 'GPIO-0_58'
@
text
@d1 1
a1 1
/* (0.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.58
d9 1
a9 1
#define Module_Date_CMHG                09 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.58"
#define Module_Version                  58
d14 1
a14 1
#define Module_Date                     "09 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "09-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.58"
#define Module_HelpVersion              "0.58 (09 Oct 2014)"
#define Module_LibraryVersionInfo       "0:58"
@


1.4
log
@Post review fixups
Unknown SWIs now return the error with V set rather than calling OS_GenerateError.
A couple of non-X SWIs changed added 'X'.
Use SETV/CLRV now we have sight of central headers to simplify the exit points.
Query use of SWIEQ/SWINE pair.

Version 0.54. Tagged as 'GPIO-0_54'
@
text
@d1 1
a1 1
/* (0.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.54
d11 2
a12 2
#define Module_MajorVersion             "0.54"
#define Module_Version                  54
d21 3
a23 3
#define Module_FullVersion              "0.54"
#define Module_HelpVersion              "0.54 (09 Oct 2014)"
#define Module_LibraryVersionInfo       "0:54"
@


1.3
log
@Add GPIO table entries for OMAP4/Pi Compute/Pandora
Submission from TankStage.

Version 0.53. Tagged as 'GPIO-0_53'
@
text
@d1 1
a1 1
/* (0.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.53
d11 2
a12 2
#define Module_MajorVersion             "0.53"
#define Module_Version                  53
d21 3
a23 3
#define Module_FullVersion              "0.53"
#define Module_HelpVersion              "0.53 (09 Oct 2014)"
#define Module_LibraryVersionInfo       "0:53"
@


1.2
log
@Swap to central headers
First part of submission from TankStage.
Built, but not tested.

Version 0.52. Tagged as 'GPIO-0_52'
@
text
@d1 1
a1 1
/* (0.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.52
d11 2
a12 2
#define Module_MajorVersion             "0.52"
#define Module_Version                  52
d21 3
a23 3
#define Module_FullVersion              "0.52"
#define Module_HelpVersion              "0.52 (09 Oct 2014)"
#define Module_LibraryVersionInfo       "0:52"
@


1.1
log
@  Made GPIO module ROMmable
Detail:
  Changed to use CModule shared makefile.
  No need to call __RelocCode when targeting ROM (relocation is done at
  ROM link time instead). In fact, the linker doesn't create __RelocCode
  in this case, so link fails unless it's removed.
Admin:
  Tested on Raspberry Pi

Version 0.51. Tagged as 'GPIO-0_51'
@
text
@d1 1
a1 1
/* (0.51)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.51
d9 1
a9 1
#define Module_Date_CMHG                29 Apr 2014
d11 2
a12 2
#define Module_MajorVersion             "0.51"
#define Module_Version                  51
d14 1
a14 1
#define Module_Date                     "29 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "29-Apr-14"
d21 3
a23 3
#define Module_FullVersion              "0.51"
#define Module_HelpVersion              "0.51 (29 Apr 2014)"
#define Module_LibraryVersionInfo       "0:51"
@

