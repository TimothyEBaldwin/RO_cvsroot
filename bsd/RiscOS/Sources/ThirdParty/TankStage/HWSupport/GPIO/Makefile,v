head	1.4;
access;
symbols
	GPIO-1_00-1_11_2_5:1.4.2.2
	GPIO-1_00-1_11_2_4:1.4.2.2
	GPIO-1_00-1_11_2_3:1.4.2.2
	GPIO-1_00-1_11_2_2:1.4.2.2
	GPIO-1_00-1_11_2_1:1.4.2.1
	HAL:1.4.0.2
	GPIO-0_64:1.4
	GPIO-0_63:1.4
	GPIO-0_62:1.4
	GPIO-0_61:1.4
	GPIO-0_60:1.3
	GPIO-0_59:1.3
	GPIO-0_58:1.3
	GPIO-0_54:1.3
	GPIO-0_53:1.3
	GPIO-0_52:1.3
	GPIO-0_51:1.2
	initial:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.10.28.21.27.42;	author rsprowson;	state Exp;
branches
	1.4.2.1;
next	1.3;
commitid	aAwyOOWADZhAaVGy;

1.3
date	2014.10.09.07.47.45;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	vGvClpBQnHezYuTx;

1.2
date	2014.04.29.13.43.20;	author bavison;	state Exp;
branches;
next	1.1;
commitid	bFQfXgztw15obAyx;

1.1
date	2014.04.29.13.25.09;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Ss9wdP7uZ2nQ4Ayx;

1.4.2.1
date	2017.02.11.15.12.35;	author rool;	state Exp;
branches;
next	1.4.2.2;
commitid	J69vqiljDCvfVxFz;

1.4.2.2
date	2017.08.03.19.59.27;	author rsprowson;	state Exp;
branches;
next	;
commitid	jMkfGA3jss5TWN1A;

1.1.1.1
date	2014.04.29.13.25.09;	author bavison;	state Exp;
branches;
next	;
commitid	Ss9wdP7uZ2nQ4Ayx;


desc
@@


1.4
log
@Export GPIODevice header
Thanks to Jeffrey Lee for permission to relicense this work alongside the GPIO module.

Version 0.61. Tagged as 'GPIO-0_61'
@
text
@#
# Copyright (c) 2011, Tank Stage Lighting
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holder nor the names of their
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Makefile for GPIO
#

COMPONENT       = GPIO
ASMHDRS         = GPIODevice
ASMCHDRS        = GPIODevice
HDRS            =
OBJS            = GetAll
CMHGFILE        =
CUSTOMRES       = no
ROMASMDEFINES   = -pd "ROM SETL {TRUE}"

include CModule

# Dynamic dependencies:
@


1.4.2.1
log
@Implementation of API 1.00
Detail:
  By delagating the hardware access element to the underlying HAL, the GPIO module becomes much simpler.
  None of the platform specific SWIs (eg. GPIO_AuxAsUSB) are required, or implemented. This information can be obtained by enumerating the pins and switching members of the same group by setting their mode for example.
  A new SWI, GPIO_Features is added, though the returned flags are currently 0 the presence of the SWI demarks the HAL variant.
  A new command, *GPIODevices lists the GPIO controller(s) known and their basic input/output state at a glance.
  See the StrongHelp manual for full details.
Admin:
  Tested on not-a-Pi too, to ensure it doesn't attach to pre API 1.00.

Version 1.00, 1.11.2.1. Tagged as 'GPIO-1_00-1_11_2_1'
@
text
@d35 4
a38 3
OBJS            = gpio
CMHGDEPENDS     = gpio
ROMCDEFINES     = -DROM
@


1.4.2.2
log
@Export C version of the device header
Move some of the struct definitions out into a new header file, which is appended at build time to the GPIODevice. Some minor renaming to follow the conventions from other devices (eg. whether to split with underscores or not).
Sync GPIO types in the docs.

Version 1.00, 1.11.2.2. Tagged as 'GPIO-1_00-1_11_2_2'
@
text
@a40 4
expasmc.GPIODevice: hdr.GPIODevice h.GPIODevice
	${HDR2H} hdr.GPIODevice ${C_EXP_HDR}.GPIODevice
	${FAPPEND} ${C_EXP_HDR}.GPIODevice h.GPIODevice ${C_EXP_HDR}.GPIODevice

@


1.3
log
@Swap to central headers
First part of submission from TankStage.
Built, but not tested.

Version 0.52. Tagged as 'GPIO-0_52'
@
text
@d32 2
a35 1
RES_OBJ         =
d37 1
a37 1
CUSTOMRES       = custom
@


1.2
log
@  Made GPIO module ROMmable
Detail:
  Changed to use CModule shared makefile.
  No need to call __RelocCode when targeting ROM (relocation is done at
  ROM link time instead). In fact, the linker doesn't create __RelocCode
  in this case, so link fails unless it's removed.
Admin:
  Tested on Raspberry Pi

Version 0.51. Tagged as 'GPIO-0_51'
@
text
@d1 27
d29 1
d31 1
a31 1
COMPONENT	= GPIO
@


1.1
log
@Initial revision
@
text
@d4 6
a9 4
RESOURCES 	= No
ROM_SOURCE	= GetAll.s
ROM_MODULE	?= rm.${COMPONENT}
ROM_OBJECT 	?= o.${TARGET}
d11 1
a11 2
include StdTools
include AAsmModule
@


1.1.1.1
log
@  Initial import of GPIO module sources
Admin:
  Relicenced under the BSD licence with the permission of the author
@
text
@@
