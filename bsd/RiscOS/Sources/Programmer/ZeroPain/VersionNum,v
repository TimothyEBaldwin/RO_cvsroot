head	1.8;
access;
symbols
	ZeroPain-0_08:1.8
	ZeroPain-0_07:1.7
	ZeroPain-0_06:1.6
	ZeroPain-0_05:1.5
	ZeroPain-0_04:1.4
	ZeroPain-0_03:1.3
	ZeroPain-0_02:1.2
	ZeroPain-0_01:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2018.04.18.20.34.29;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	vk4lmWXjxJtKQXyA;

1.7
date	2017.08.19.17.10.53;	author jlee;	state Exp;
branches;
next	1.6;
commitid	KsmZ8i6eVVXavQ3A;

1.6
date	2016.04.05.20.57.58;	author jlee;	state Exp;
branches;
next	1.5;
commitid	fP6GuTPKZj3wRt1z;

1.5
date	2015.08.05.23.50.20;	author jballance;	state Exp;
branches;
next	1.4;
commitid	LX0VtjvX1PIUE8wy;

1.4
date	2015.07.21.20.07.31;	author jlee;	state Exp;
branches;
next	1.3;
commitid	0qzzvda1ORVmUbuy;

1.3
date	2015.07.05.09.56.31;	author jlee;	state Exp;
branches;
next	1.2;
commitid	qRhlXCNGfe8E25sy;

1.2
date	2015.07.04.16.29.42;	author jlee;	state Exp;
branches;
next	1.1;
commitid	kwYeTDLe4CnwfZry;

1.1
date	2015.07.01.21.44.02;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	a7idPnOv6AQc3Dry;

1.1.1.1
date	2015.07.01.21.44.02;	author jlee;	state Exp;
branches;
next	;
commitid	a7idPnOv6AQc3Dry;


desc
@@


1.8
log
@Enter logging only role
With the advent of the kernel's compatibility page in Kernel-5_87 and later, much of the utility of ZeroPain allowing buggy apps to plod on is redundant.
However, developers still find its logging useful, since it's easier to read than letting an abort happen (with the compatibility page turned off).
Move the kill switch to 5.26 and remove the emulation of kernel workspace values, leaving two states
a) you have the compatibility page for now, and silence for reads
b) you have ZeroPain loaded, and get logs for reads
and all writes in any mode aborts.

Version 0.08. Tagged as 'ZeroPain-0_08'
@
text
@/* (0.08)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.08
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                18 Apr 2018

#define Module_MajorVersion             "0.08"
#define Module_Version                  8
#define Module_MinorVersion             ""
#define Module_Date                     "18 Apr 2018"

#define Module_ApplicationDate          "18-Apr-18"

#define Module_ComponentName            "ZeroPain"
#define Module_ComponentPath            "bsd/RiscOS/Sources/Programmer/ZeroPain"

#define Module_FullVersion              "0.08"
#define Module_HelpVersion              "0.08 (18 Apr 2018)"
#define Module_LibraryVersionInfo       "0:8"
@


1.7
log
@Automatically disable the kernel's compatibility page
Detail:
  In order for ZeroPain to be useful for logging page zero accesses or emulating old zero page locations, it needs to be able to trap page zero reads. The new compatibility page introduced in Kernel-5_87 prevents this, so make sure the page is disabled whenever we're active.
  c/cmodule - Detect & disable the compatibility page on startup and on Service_PostInit (for when ZeroPain is in ROM). Re-enable the page on exit if necessary.
  c/handler_c - Emulate the same pattern that the kernel includes in the compatibility page for locations &0-&2f
  c/log, h/log - Root service call handler moved to c/module
  cmhg/modhead - Listen out for Service_PostInit
Admin:
  Tested on BB-xM


Version 0.07. Tagged as 'ZeroPain-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.07
d9 1
a9 1
#define Module_Date_CMHG                19 Aug 2017
d11 2
a12 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d14 1
a14 1
#define Module_Date                     "19 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "19-Aug-17"
d21 3
a23 3
#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (19 Aug 2017)"
#define Module_LibraryVersionInfo       "0:7"
@


1.6
log
@Leverage SeriousErrorV for producing more detailed log entries. Extend kill switch deadline to the release of RISC OS 5.24.
Detail:
  c/cmodule - Extend kill switch deadline to the release of RISC OS 5.24. Look up VecPtrTab so we can make a manual call to SeriousErrorV from ABT mode. Make sure the Debugger module is listening to SeriousErrorV.
  c/handler_c - Don't perform address translation for null pointers (zeroapgeaddrs currently has a null legacy address for VecPtrTab)
  c/log, h/log - Update log buffer handling to add support for detailed logs produced by SeriousErrorV/Debugger. Since the logs can be large we currently only allow one to be stored in memory at a time.
  s/handler_asm - Implement log_detailed function to decide (a) whether it's safe to call SeriousErrorV, and (b) deal with the fact that SeriousErrorV_Collect must be called in ABT mode in order to avoid overwriting any important SVC stack content
  h/handler - Adding VecPtrTab to rsi6val enum & log_detailed prototype
Admin:
  Tested on Raspberry Pi


Version 0.06. Tagged as 'ZeroPain-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                05 Apr 2016
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "05 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "05-Apr-16"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (05 Apr 2016)"
#define Module_LibraryVersionInfo       "0:6"
@


1.5
log
@  Makefile changes to track recent build system mods
Detail:
  (list files and functions that have changed)
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 0.05. Tagged as 'ZeroPain-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d9 1
a9 1
#define Module_Date_CMHG                06 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d14 1
a14 1
#define Module_Date                     "06 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (06 Aug 2015)"
#define Module_LibraryVersionInfo       "0:5"
@


1.4
log
@Add unaligned load support
Detail:
  s/handler_asm - Read system control register and pass it through to the C code
  h/handler - Updated function prototype for C abort handler code
  c/handler_c - Use the supplied system control register value to determine whether rotated or unaligned load behaviour is in effect, and whether all unaligned loads should fail (i.e. don't trap the zero page access) due to alignment exceptions being enabled
Admin:
  Tested on Raspberry Pi 1 with LDM/LDR/LDRB with all three unaligned access settings


Version 0.04. Tagged as 'ZeroPain-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                21 Jul 2015
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "21 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jul-15"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (21 Jul 2015)"
#define Module_LibraryVersionInfo       "0:4"
@


1.3
log
@Modify to allow inclusion in ROM builds
Detail:
  Makefile - Define ROM_MODULE when being built for ROM
  h/handler, s/handler_asm - Ensure abort handler stub is running from RAM (so it can use PC-relative LDR to get workspace values)
  c/cmodule - Disable ROM date check when running from ROM. Allow log configuration to fail when running from ROM.
  c/log - When running from ROM, wait until log configuration succeeds before outputing any logs
Admin:
  Tested on Iyonix


Version 0.03. Tagged as 'ZeroPain-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                05 Jul 2015
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "05 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jul-15"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (05 Jul 2015)"
#define Module_LibraryVersionInfo       "0:3"
@


1.2
log
@Change kill switch to be based around OS build date, rather than version number. Improve log output when code isn't in application space or a module.
Detail:
  c/cmodule - The built-in kill switch now checks the OS build date rather than the version number. This will give us a period of testing prior to the next stable OS release where zero page is relocated but ZeroPain is inactive. The kill switch is set to the end of 2015, which should be a reasonable amount of time for developers to respond.
  c/log - Use the new OS_DynamicArea 20 call to help identify the location of code if it's not in application space or not in a module.
Admin:
  Tested on Iyonix with zero page relocation


Version 0.02. Tagged as 'ZeroPain-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                04 Jul 2015
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "04 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jul-15"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (04 Jul 2015)"
#define Module_LibraryVersionInfo       "0:2"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                01 Jul 2015
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "01 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jul-15"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (01 Jul 2015)"
#define Module_LibraryVersionInfo       "0:1"
@


1.1.1.1
log
@Initial import of ZeroPain module
Detail:
  This is a compatibility/logging module designed to work with zero page
  relocation. It will trap any emulate LDR/LDRB/LDM which reads from the first
  16K of the logical address space. Attempts to access some known kernel
  workspace locations will cause the correct value to be returned, while all
  other locations will return zero. Whenever an instruction is trapped and
  emulated an entry will be added to a log file so that the user is aware of
  the issue.
Admin:
  Tested on Iyonix with zero page relocation

@
text
@@
