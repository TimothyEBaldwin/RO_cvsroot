head	1.8;
access;
symbols
	HangWatch-0_07:1.8
	HangWatch-0_06:1.7
	HangWatch-0_05:1.6
	HangWatch-0_04:1.5
	HangWatch-0_03:1.4
	HangWatch-0_02:1.3
	HangWatch-0_01:1.2;
locks; strict;
comment	@# @;


1.8
date	2018.06.10.22.36.03;	author jlee;	state Exp;
branches;
next	1.7;
commitid	6yfnKkGT10iPOMFA;

1.7
date	2018.04.06.23.07.16;	author jlee;	state Exp;
branches;
next	1.6;
commitid	whTnXoOgqhx45rxA;

1.6
date	2016.04.05.19.42.56;	author jlee;	state Exp;
branches;
next	1.5;
commitid	wN9ylRLbt7uMrt1z;

1.5
date	2015.01.12.20.14.29;	author jlee;	state Exp;
branches;
next	1.4;
commitid	16fnylfrj2Gp3M5y;

1.4
date	2014.10.18.19.23.06;	author jlee;	state Exp;
branches;
next	1.3;
commitid	w258HlK5KirbxIUx;

1.3
date	2014.01.19.12.25.27;	author jlee;	state Exp;
branches;
next	1.2;
commitid	zTuYaEj4gPVXXIlx;

1.2
date	2012.09.01.22.10.23;	author jlee;	state Exp;
branches;
next	1.1;
commitid	IEIJjt6aPU13rSiw;

1.1
date	2012.09.01.22.06.14;	author jlee;	state Exp;
branches;
next	;
commitid	qlkqqtNNVb0DpSiw;


desc
@@


1.8
log
@Fix missing PC value when outputting a dump from USR mode
Detail:
  s/Module - The code for skipping R13,R14 recovery was skipping one instruction too far, causing R15 to be missed from the register dump due to the limit value (R11) being set too low.
Admin:
  Tested on BB-xM


Version 0.07. Tagged as 'HangWatch-0_07'
@
text
@/* (0.07)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.07
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                10 Jun 2018

#define Module_MajorVersion             "0.07"
#define Module_Version                  7
#define Module_MinorVersion             ""
#define Module_Date                     "10 Jun 2018"

#define Module_ApplicationDate          "10-Jun-18"

#define Module_ComponentName            "HangWatch"
#define Module_ComponentPath            "bsd/RiscOS/Sources/Programmer/HangWatch"

#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (10 Jun 2018)"
#define Module_LibraryVersionInfo       "0:7"
@


1.7
log
@Add support for using an IRQ-based watchdog timer instead of FIQ-based
Detail:
  s/Module, Doc/HangWatch - Use bit 0 of the HangWatch_Start flags to control whether the watchdog generates IRQs or FIQs. Also fix workspace initialisation, which was overwriting the header word of the heap block.
Admin:
  Tested on Raspberry Pi 1


Version 0.06. Tagged as 'HangWatch-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                07 Apr 2018
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "07 Apr 2018"
d16 1
a16 1
#define Module_ApplicationDate          "07-Apr-18"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (07 Apr 2018)"
#define Module_LibraryVersionInfo       "0:6"
@


1.6
log
@Add SeriousErrorV integration
Detail:
  s/GetAll - Add new build option to enable a dump to be produced when SeriousErrorV is called
  s/Module - Implement the SeriousErrorV handling
Admin:
  Tested on Raspberry Pi


Version 0.05. Tagged as 'HangWatch-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d9 1
a9 1
#define Module_Date_CMHG                05 Apr 2016
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d14 1
a14 1
#define Module_Date                     "05 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "05-Apr-16"
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (05 Apr 2016)"
#define Module_LibraryVersionInfo       "0:5"
@


1.5
log
@Add option to wait for confirmation before producing a dump
Detail:
  s/GetAll, s/Module - Add compile-time ConfirmDump switch to wait for confirmation (via HAL_DebugRX) before any dump is output. Useful for long-term tests where the receiving machine might not always be available.
Admin:
  Tested on BB-xM


Version 0.04. Tagged as 'HangWatch-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                12 Jan 2015
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "12 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "12-Jan-15"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (12 Jan 2015)"
#define Module_LibraryVersionInfo       "0:4"
@


1.4
log
@Add functionality for dumping user-defined memory blocks
Detail:
  hdr/HangWatch, s/Module - Add new HangWatch_AddMemRegion and HangWatch_RemoveMemRegion SWIs to allow blocks of memory to be registered wit hthe module which will be dumped out whenever a hang occurs
  Doc/HangWatch - Updated docs
Admin:
  Tested on Raspberry Pi


Version 0.03. Tagged as 'HangWatch-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                18 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "18 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "18-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (18 Oct 2014)"
#define Module_LibraryVersionInfo       "0:3"
@


1.3
log
@Misc fixes
Detail:
  s/Module - Fixed HangWatch_Tick corrupting R0 if DADebug_Reset returns an error (e.g. DADebug not loaded). Fix HangWatch_Dump being missing from SWI name table.
Admin:
  Tested on Raspberry Pi


Version 0.02. Tagged as 'HangWatch-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                19 Jan 2014
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "19 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-14"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (19 Jan 2014)"
#define Module_LibraryVersionInfo       "0:2"
@


1.2
log
@Add HangWatch debugging module
Detail:
  HangWatch is a debugging module with a primary focus of acting as a watchdog process.
  Using a timer configured to generate FIQs, HangWatch monitors the system, and triggers a dump of debug data (registers, stacks, DADebug buffer) if the watchdog counter limit is hit
  A HangWatch_Dump SWI is also available, allowing a dump to be triggered manually if required.
Admin:
  Tested on OMAP3 & Raspberry Pi


Version 0.01. Tagged as 'HangWatch-0_01'
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                01 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "01 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "01-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (01 Sep 2012)"
#define Module_LibraryVersionInfo       "0:1"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.00)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.00
d11 2
a12 2
#define Module_MajorVersion             "0.00"
#define Module_Version                  0
d21 3
a23 3
#define Module_FullVersion              "0.00"
#define Module_HelpVersion              "0.00 (01 Sep 2012)"
#define Module_LibraryVersionInfo       "0:0"
@

