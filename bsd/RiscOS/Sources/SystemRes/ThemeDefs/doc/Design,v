head	1.8;
access;
symbols
	ThemeDefs-0_11:1.8
	ThemeDefs-0_10:1.7
	ThemeDefs-0_09:1.7
	ThemeDefs-0_08:1.6
	ThemeDefs-0_07:1.6
	ThemeDefs-0_06:1.5
	ThemeDefs-0_05:1.4
	ThemeDefs-0_04:1.4
	ThemeDefs-0_03:1.3
	ThemeDefs-0_02:1.2
	ThemeDefs-0_01:1.1.1.1
	ThemeDefs-0_00:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2013.08.25.11.13.22;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	3gzb2HUNHGN9iP2x;

1.7
date	2013.05.06.19.13.46;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	qXxExT6X8lzawBOw;

1.6
date	2012.09.18.08.03.56;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	71EeKGRe9rxKcZkw;

1.5
date	2012.09.05.16.39.48;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	1mcEhxWzKv3Dtmjw;

1.4
date	2012.08.22.17.40.05;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	xLlaSbvObBadgzhw;

1.3
date	2012.08.22.13.42.55;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	oybD62wodcXQWxhw;

1.2
date	2012.08.11.20.38.20;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	7IuvnbwVV0KhBagw;

1.1
date	2012.08.09.20.30.57;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	2JWc0IgoUCEHCUfw;

1.1.1.1
date	2012.08.09.20.30.57;	author rsprowson;	state Exp;
branches;
next	;
commitid	2JWc0IgoUCEHCUfw;


desc
@@


1.8
log
@Add support for optional theming of SCSIFiler and SDFSFiler
Table extended to look for alternate theme sprites for these filers, using the sprites from Chris Wraight.
New flag option to ensure the target already exists before adding to ResourceFS, so those versions of RISC OS that don't have certain modules don't needlessly load extra resources that aren't going to be used.
Tested on BBxM with RISC OS 5.20 and an Ursula theme selected.

Version 0.11. Tagged as 'ThemeDefs-0_11'
@
text
@Purpose
-------

To reside in !Boot.Resources and contain sets of sprites for differing desktop styles.
Is invoked on booting to try to locate and load the resources for that style, or quit 
leaving the ROM defaults if something goes wrong.

Structure
---------

!ThemeDefs.!Run                   Obey
          .!RunImage              BASIC
          .!Sprites               Sprite
          .Messages               Text
          .Themes.ThemeName1.Banner      [optional]
                            .Sprites     [optional]
                            .Sprites11   [may exist if Sprites does]
                            .Sprites22   [may exist if Sprites does]
                            .Tools       [optional]
                            .SDFSFiler   [optional]
                            .SCSIFiler   [optional]
                            .Paint       [optional]
                            .Paint22     [may exist if Paint does]
                            .Draw        [optional]
                            .Draw22      [may exist if Draw does]
                 .ThemeName2             } 
                  :        :             } Repeated for all installed themes
                 .ThemeNameN             }

Icon theme
----------

Wimp$IconTheme will be set on loading the Wimp based on the UserIF active at the time
the module was assembled, hence matching the ROM sprites.

In versions of the Wimp prior to this being preset it may also be set in the boot sequence in
  Choices:Boot.PreDesktop
in the absence of any user choice at this stage it is assumed that the default will simply be 
to match the contemporary ROM sprites. ie.

  RISC OS 3.50-3.71 => Morris4
  RISC OS 4.01-4.04 => Ursula (very similar to RISC OS Ltd icons, but avoiding copyright)
  RISC OS 5.00-5.18 => Iyonix (or Sovereign, which is similar bar blue jellybean branding)
  RISC OS 5.19+     => set by Wimp

and that it is at least defined.

The user's choice (set by a not-yet-written theme setup plugin for !Configure) is stored in
  Choices:Boot.PreDesk.ThemeSetup
alongside all the other plugin settings obey files. 

If the plugin settings defined ThemeDefs$Disabled no action will be taken, this is to allow
a theme to have been defined but to skip loading the extra theme resources (for example, if 
memory is tight).

The !ThemeDefs application does not set Wimp$IconTheme itself, because it resides in
  Boot:Resources
which is read only on a network boot system. The system administrator would set which themes are
available to network users, and the user's (writeable) choices would go into Choices$Write.

Action
------

Note the !ThemeDefs application is run in PreDesktop so that the resources can be
registered before the desktop starts (for example, the desktop banner) and so that the
various module tasks get the correct sprite heights when calculating how big things are.

Any application sprites encountered prior to this may be for the wrong theme. This should
be limited to (in order of appearance)
  !System
  !Territory
though !System is retouched by the Filer_Boot of everything in BootResources: and !Territory
by opening the directory viewer.

The Wimp sprite precedence CMOS bit is inspected. If RAM precedence then the theme sprites
will be *ICONSPRITES'd or *TOOLSPRITES'd as appropriate, if ROM precedence then the theme
sprites will be put in ResourceFS for the Wimp to use directly.
The actual *ICONSPRITES or *TOOLSPRITES command is deferred until the desktop is entered
by passing the chosen theme's path via two system variables ThemeDefs$ToBeIcons for the
sprites and ThemeDefs$ToBeTools for the tools. This must be done because the Wimp 
selects the resolution based on the current mode, the *WIMPMODE command is set in
  Choices:Boot.Configure
and doesn't take effect until *DESKTOP is executed, so the wrong resolution would be
selected.

The version of the Desktop module is inspected, post 2.70 supports squashed sprites and
unfortunately no longer loads unsquashed sprites. Therefore if there are desktop banner
sprites provided these will be compressed where necessary.

The version of the TaskManager module is inspected, prior to 1.19 uses the 'switcher'
sprite in both its info box, the Wimp's error boxes, and for the icon in the bottom 
right hand corner of the screen. If theme sprites are being loaded this module will
also be patched to use the alternate 'taskmanager' sprite name.

A check for dynamic areas is made, where not available a module is inserted into RMA 
containing the resources instead. 

Other theme items
-----------------

The backdrop and font might also be considered part of a theme, it is assumed that these 
might be rolled into the same not-yet-written theme setup plugin but continue to
write to the same 
  Choices:Boot.Tasks.PinSetup
  Choices:Boot.PreDesk.FontSetup
as presently for backwards compatibility.

Plugin operation
----------------
Scan !ThemeDefs.Themes for the names of the themes available.
Offer these to the user.
 => user selects one
 => this writes Wimp$IconTheme to Choices:Boot.PreDesk.ThemeSetup
Option to disable loading of theme (eg. to save memory)
 => this sets ThemeDefs$Disabled as true in Choices:Boot.PreDesk.ThemeSetup
Importing/exporting themes
 => suggest rolling them up into a squash file for export
 => allow 3rd party themes to be dropped onto the plugin & merged
How to redo disc based application icons
 => send fake Message_SaveDesktop to the Filer
 => this gets the list of 'seen' applications (as Filer_Boot commands)
 => might be useful?
@


1.7
log
@Add fixup step for task manager sprite pre RISC OS 5
We want two distinct sprites, 'switcher' for unknown error boxes and the OS info box, and 'taskmanager' for the tote in the bottom right of the iconbar.
If we find an older version of TaskManager where they're both 'switcher' the theme loader patches it to make them distinct.
Them, the same set of sprite resources works on everything.
Tested on RISC OS 3.50, 3.60, 3.70, 3.71, 4.02.

Version 0.09. Tagged as 'ThemeDefs-0_09'
@
text
@d20 2
@


1.6
log
@Fix 'sprite not found' from CDFSFiler pre RISC OS 3.80
The swap out of the CDFSFiler sprites was previously required because entering the desktop runs Desktop_CDFSFiler which then *ICONSPRITESd its private sprites if 'protect built in icons' option was off.
Now the disc pool is loaded after *DESKTOP that left CDFSFiler with no sprites prior to RISC OS 3.80.
The logic was rendered obsolete by the 'IconChange' tool, so can be removed.

Version 0.07. Tagged as 'ThemeDefs-0_07'
@
text
@d88 5
@


1.5
log
@Import of 180x180 90x90 90x45 resolution icons
Special thanks to Richard Hallas for providing these.
Also
* Makefile - swapped hard spaces for soft, install extra sprites
* Remove redundant termination step fixed in ThemeDefs-0_05
* Updated docs to not refer to Tools22 Tools11

Version 0.06. Tagged as 'ThemeDefs-0_06'
@
text
@a90 5
When present, the icons are assumed to include the CDFSFiler icons (acddisc/cddisc/pcddisc) 
and have featured in the Wimp pool since the Ursula project. Where the version of CDFSFiler 
present is pre 2.42 (when the duplicate set was removed) the private copy of the 
sprites are swapped out for a harmless sprites file.

d112 1
a112 1
How to redo disc app icons
@


1.4
log
@Different scheme to defer sprite loading
When run within the Desktop file, this app is too late to affect the banner and may also have to mess about re-iconspritesing applications from later in the boot sequence.
So, run !ThemeDefs earlier, and push the *ICON/TOOLSPRITES commands into system variables which are caught in the desktop boot file.

Version 0.04. Tagged as 'ThemeDefs-0_04'
@
text
@a19 2
                            .Tools11     [may exist if Tools does]
                            .Tools22     [may exist if Tools does]
@


1.3
log
@Get flags for RAM loaded resources right
When the 'protect ROM sprites' option is not in use the resources are loaded with *ICONSPRITES/*TOOLSPRITES.
However, the wrong flag bits were being used to decide which to use and ended up doing the operation 3 times over for each resolution: resulting in force loading Sprites11 (the last in the DATA statements) when not in that mode, resulting in a tiny mouse pointer and lots of badly aliased icons.
Removed the search for Tools22/Tools11 (the tools encode the other resolutions inside the sprite file, not by sprite file name).
Added possibility to have EX0 EY0 paint and draw tool palettes.
Removed the manual check for ThemeSetup obey file, the boot sequence can do this for us.
Docs updated.

Version 0.03. Tagged as 'ThemeDefs-0_03'
@
text
@a51 15
Note the !ThemeDefs application is run after the *DESKTOP command has been issued
This ensures the desktop mode has been set (from the pended *WIMPMODE set in
  PreDesk$Configure
so that any *ICONSPRITES/*TOOLSPRITES commands will be looking for the right resolution,
and that the softloading of the nested Wimp has occurred. 
Any application sprites encountered prior to this may be for the wrong theme. This should
be limited to (in order of appearance)
  !System
  !Territory
  Anything in Choices:Boot.PreDesk
  Anything in Choices:Boot.Tasks
though !System is retouched by the Filer_Boot of everything in BootResources: and !Territory
by opening the directory viewer. It is assumed there are no applications residing in the 
latter two.

d64 11
d78 7
@


1.2
log
@Add ability to skip loading with ThemeDefs$Disabled
Documentation and comments updated

Version 0.02. Tagged as 'ThemeDefs-0_02'
@
text
@d36 1
a36 1
In versions prior to this being done on loading the Wimp it may also be set in the boot sequence in
d50 16
a65 4
alongside all the other plugin settings. Note the !ThemeDefs application will check for this
manually since it is run earlier in the boot sequence than the PreDesk directory, this is to avoid
having to go back and revisit IconSprites commands encountered later in the boot sequence, but
late enough that the PreDesktop obey file has softloaded the nested Wimp.
d68 2
a69 1
a theme to have been defined but to skip loading the theme (for example, if memory is tight).
@


1.1
log
@Initial revision
@
text
@d3 1
d55 3
d92 15
@


1.1.1.1
log
@Import of ThemeDefs
@
text
@@
