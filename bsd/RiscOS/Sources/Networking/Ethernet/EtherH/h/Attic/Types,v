head	1.3;
access;
symbols
	EtherH-4_52:1.1.1.1 designit-4_52:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.10.13.20.45.45;	author rsprowson;	state dead;
branches;
next	1.2;
commitid	1E7Khr6vvCWfCgow;

1.2
date	2012.10.13.20.41.21;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	wjgMh8kSS5QCAgow;

1.1
date	2012.10.13.20.36.27;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	K58crg30YaBxygow;

1.1.1.1
date	2012.10.13.20.36.27;	author rsprowson;	state Exp;
branches;
next	;
commitid	K58crg30YaBxygow;


desc
@@


1.3
log
@Substitute 'mbuf', 'dcistructs', 'types', 'errors' from TCPIPLibs:
Insert version number from VersionNum.
Changed error numbers to use SETDCI4ERRNO(), a few were previously using the wrong offset from 0x20E00.
CMHG now generates a header file.
Textual SWI prefix is now "EtherH" for both EtherH8 and EtherH16 versions, since they use the same SWI base they can't coexist, and to match the prefix declared in the DIB block (slightly irrelevant for an ethernet driver since the DCI interface doesn't use SWI names).
Macro FREEM() replaced with m_freem(), also no longer checks for freeing NULL, since MbufManager does that.
Builds but not tested. 26 bit only.

Version 4.53. Tagged as 'EtherH-4_53'
@
text
@/*
 * $Header: /home/rool/cvsroot/bsd/RiscOS/Sources/Networking/Ethernet/EtherH/h/Types,v 1.2 2012/10/13 20:41:21 rsprowson Exp $
 * $Source: /home/rool/cvsroot/bsd/RiscOS/Sources/Networking/Ethernet/EtherH/h/Types,v $
 *
 * Copyright (c) 1988 Acorn Computers Ltd., Cambridge, England
 *
 * $Desc$
 * $Log: Types,v $
 * Revision 1.2  2012/10/13 20:41:21  rsprowson
 * Add explicit copyright header to all files
 * Builds but not tested. 26 bit only.
 *
 * Revision 1.3  88/06/17  20:22:16  beta
 * Acorn Unix initial beta version
 * 
 */
/* @@(#)types.h  1.4 87/09/03 3.2/4.3NFSSRC */
/*
 * Copyright (c) 1982, 1986 Regents of the University of California.
 * All rights reserved.  The Berkeley software License Agreement
 * specifies the terms and conditions for redistribution.
 *
 *      @@(#)types.h     7.1 (Berkeley) 6/4/86
 */

#ifndef _TYPES_
#define _TYPES_
/*
 * Basic system types and major/minor device constructing/busting macros.
 */

/* major part of a device */
#define major(x)        ((int)(((unsigned)(x)>>8)&0377))

/* minor part of a device */
#define minor(x)        ((int)((x)&0377))

/* make a device number */
#define makedev(x,y)    ((dev_t)(((x)<<8) | (y)))

typedef unsigned char   u_char, u_byte;
typedef unsigned short  u_short;
typedef unsigned int    u_int;
typedef unsigned long   u_long;
typedef unsigned short  ushort;         /* sys III compat */

#ifdef VAX
typedef struct  _physadr { int r[1]; } *physadr;
typedef struct  label_t {
        int     val[14];
} label_t;
#endif 

#ifdef ARM
typedef struct  _physadr { int r[1]; } *physadr;
typedef struct label_t {
        int     val[16];                /* bigger than need be, so what */
} label_t;
#endif 

typedef struct  _quad { long val[2]; } quad;
typedef long    daddr_t;
typedef char *  caddr_t;
typedef u_long  ino_t;
typedef long    swblk_t;
#ifdef KERNEL
#ifndef __size_t
#define __size_t 1
typedef long    size_t;
#endif
#endif
typedef long    time_t;
typedef short   dev_t;
typedef long    off_t;
typedef u_short uid_t;
typedef u_short gid_t;
typedef int     key_t;          /* For System V IPC calls */

#define NBBY    8               /* number of bits in a byte */
/*
 * Select uses bit masks of file descriptors in longs.
 * These macros manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here
 * should be >= NOFILE (param.h).
 */
#ifndef FD_SETSIZE
#define FD_SETSIZE      256
#endif

typedef long    fd_mask;
#define NFDBITS (sizeof(fd_mask) * NBBY)        /* bits per mask */
#ifndef howmany
#define howmany(x, y)   (((x)+((y)-1))/(y))
#endif

typedef struct fd_set {
        fd_mask fds_bits[howmany(FD_SETSIZE, NFDBITS)];
} fd_set;

#define FD_SET(n, p)    ((p)->fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
#define FD_CLR(n, p)    ((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define FD_ISSET(n, p)  ((p)->fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
#define FD_ZERO(p)      bzero((char *)(p), sizeof(*(p)))

#endif
@


1.2
log
@Add explicit copyright header to all files
Builds but not tested. 26 bit only.
@
text
@d2 2
a3 2
 * $Header: types.h,v 1.3 88/06/17 20:22:16 beta Beta1 $
 * $Source: /zigguratusr/LCU/src/sys/h/RCS/types.h,v $
d8 5
a12 1
 * $Log:        types.h,v $
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of EtherH driver for i-cubed/Acorn/DesignIT NIC
Special thanks to Rob Cowell of Design IT for taking the time to locate the sources, and agreeing to them being published. 
This is EtherH 4.52, the last public release. 
Only changes
 - makefile now creates empty dirs (to avoid importing empty dirs into CVS)
 - local copies of Hdr: removed, assembler files point to exported central copies
Builds but not tested. 26 bit only.
@
text
@@
