head	1.5;
access;
symbols
	EtherH-4_59:1.5
	EtherH-4_58:1.5
	EtherH-4_57:1.5
	EtherH-4_56:1.4
	EtherH-4_55:1.4
	EtherH-4_54:1.3
	EtherH-4_53:1.2
	EtherH-4_52:1.1.1.1
	designit-4_52:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2012.10.13.21.01.21;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	x8Jt9KAXLv3CHgow;

1.4
date	2012.10.13.20.55.28;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	iWEN5VZZYRYzFgow;

1.3
date	2012.10.13.20.49.30;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	wW7NhIHyp8SxDgow;

1.2
date	2012.10.13.20.45.44;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	1E7Khr6vvCWfCgow;

1.1
date	2012.10.13.20.36.27;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	K58crg30YaBxygow;

1.1.1.1
date	2012.10.13.20.36.27;	author rsprowson;	state Exp;
branches;
next	;
commitid	K58crg30YaBxygow;


desc
@@


1.5
log
@Recoded MICRODELAY to be processor speed/cache agnostic
Checked on a scope doing groups of 250/125/62us delays with interrupts disabled, wiggling an IO line.
Get podule/MEMC logical addresses from Podule_ReadInfo (falls back to table for pre RISC OS 3.50).

Version 4.57. Tagged as 'EtherH-4_57'
@
text
@/*
 * Copyright (c) 2002, Design IT
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
/**************************************************************************
 * Title:       RISC OS Ethernet Driver Source
 * Authors:     Douglas J. Berry, Gary Stephenson
 * File:        init.h
 *
 * Copyright © 1992 PSI Systems Innovations
 * Copyright © 1994 i-cubed Limited
 * Copyright © 1994 Network Solutions
 * Copyright © 2000 Design IT
 *
 * Initial Revision 1.0         1st December 1994 GS
 *
 * History
 *
 ***************************************************************************/

/*
 * memory testing
 */
#ifdef DRIVER16BIT
#define PAT_LEN         34
#else
#define PAT_LEN         18
#endif
#define PAT_MID         (PAT_LEN >> 1)
#define O(n)            (1 << n)
#define Z(n)            (O(n) ^ 0xffff)

/*
 * loopback testing
 */
#define LB_FIFOLEN      8           /* FIFO length during loopback */
#define TESTP_LEN       60          /* length of loopback test packet */
#define POLYNOMIAL      0x04c11db7  /* polynomial for CRC calculation */

/*
 * timeout values to use during POST
 */
#define CC_TIMEO        (HZ / 12)    /* cable checking (4) */
#define LB_TIMEO        (HZ / 8)    /* loopback transmissions */
#define STP_TIMEO       (HZ / 8)    /* STOP command to set RST */
#define EXCESSIVE_COLL  6          /* used during cable test */

/* no. of bytes to junk when reading CRC from FIFO */
#define N_JUNK          (TESTP_LEN % LB_FIFOLEN)

#if (N_JUNK > (LB_FIFOLEN - CRC_LEN))  /* does CRC wrap around end of FIFO? */
error "Bad value for TESTP_LEN"
#endif /* N_JUNK < 0 */

typedef struct _tp
{
    u_char src_addr[HW_ADDR_LEN];
    u_char dst_addr[HW_ADDR_LEN];
    u_short ptype;
    u_char bulk_data[TESTP_LEN - PACK_HDR_LEN];
    u_char crc_bytes[CRC_LEN];
} TestPacket;

/*
#if sizeof(TestPacket) != (TESTP_LEN + CRC_LEN)
 #ERROR: bad size for TestPacket typedef
#endif
*/

/* MEMC1a testing */
#define MEMC1a 0x112

/*
 * Public functions.
 */
int    eh_post(struct eh_softc *, int);
void   eh_postinit(void);
int    eh_setup(struct eh_softc *);
int    get_goodlink(struct eh_softc *);
void   eh_reset_card(struct eh_softc *);
u_int *eh_set_rom_page(struct eh_softc *, u_int);
u_long calc_crc(u_char *, int);

/*
 * Public data.
 */
extern int          ehcnt;
extern volatile int pre_init;
extern volatile int pre_reset;
extern char         eh_lasterr[];
extern struct       eh_softc *eh_softc[MAX_NUM_SLOTS];

/* EOF init.h */
@


1.4
log
@Replaced htons and friends with ${INETLIB} ones
Functions max() and min() changed for macros.
Made supporting assembler functions common -> support.s, so the IO sources just manipulate IO.
Unused header file 'int_hndlr.h' removed.
Resolved all the remaining compiler warnings.
File 'dma.c' compiles now, but is unused.
Substituted magic numbers for defines from exported header files where available.
Text for NIC slot 8 is now "Network slot" rather than "Expansion slot 8".
Builds but not tested. 26 bit only.

Version 4.55. Tagged as 'EtherH-4_55'
@
text
@a110 2
extern int          strongarm;
extern int          delay_shift;
@


1.3
log
@Makefile recreated from fragments
CMHG file inserts version from VersionNum.
Use ensure_irqs_on/irqs_restore from AsmUtils.
Trimmed revision history now the code is in CVS.
Debug switch SHOW_INFO removed - there was no supporting code.
Dozens of minor warning fixups as the shared makefiles have stricter checking enabled by default.
Builds, tested on RISC OS 3.70. 26 bit only.

Version 4.54. Tagged as 'EtherH-4_54'
@
text
@a43 3
#define DESCRIPTION     0xF5
#define LOADER          0x80

d96 3
d107 11
@


1.2
log
@Substitute 'mbuf', 'dcistructs', 'types', 'errors' from TCPIPLibs:
Insert version number from VersionNum.
Changed error numbers to use SETDCI4ERRNO(), a few were previously using the wrong offset from 0x20E00.
CMHG now generates a header file.
Textual SWI prefix is now "EtherH" for both EtherH8 and EtherH16 versions, since they use the same SWI base they can't coexist, and to match the prefix declared in the DIB block (slightly irrelevant for an ethernet driver since the DCI interface doesn't use SWI names).
Macro FREEM() replaced with m_freem(), also no longer checks for freeing NULL, since MbufManager does that.
Builds but not tested. 26 bit only.

Version 4.53. Tagged as 'EtherH-4_53'
@
text
@d77 2
a78 3
#if (N_JUNK > (LB_FIFOLEN - CRC_LEN))       /* does CRC wrap around
                                             * end of FIFO? */
 #ERROR: bad value for TESTP_LEN
a95 6
struct {
   u_char type;
   int    length;
   int    base;
} chunk_dir;

d99 8
@


1.1
log
@Initial revision
@
text
@d1 27
@


1.1.1.1
log
@Import of EtherH driver for i-cubed/Acorn/DesignIT NIC
Special thanks to Rob Cowell of Design IT for taking the time to locate the sources, and agreeing to them being published. 
This is EtherH 4.52, the last public release. 
Only changes
 - makefile now creates empty dirs (to avoid importing empty dirs into CVS)
 - local copies of Hdr: removed, assembler files point to exported central copies
Builds but not tested. 26 bit only.
@
text
@@
