head	1.8;
access;
symbols
	EtherH-4_59:1.8
	EtherH-4_58:1.7
	EtherH-4_57:1.6
	EtherH-4_56:1.5
	EtherH-4_55:1.4
	EtherH-4_54:1.3
	EtherH-4_53:1.2;
locks; strict;
comment	@# @;


1.8
date	2013.02.03.09.36.22;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	KsFXaENIUKMthJCw;

1.7
date	2012.10.13.21.06.35;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	gRDzXRcm019sJgow;

1.6
date	2012.10.13.21.01.13;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	x8Jt9KAXLv3CHgow;

1.5
date	2012.10.13.20.58.30;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	622MTy7PdZDGGgow;

1.4
date	2012.10.13.20.55.20;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	iWEN5VZZYRYzFgow;

1.3
date	2012.10.13.20.49.23;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	wW7NhIHyp8SxDgow;

1.2
date	2012.10.13.20.45.36;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	1E7Khr6vvCWfCgow;

1.1
date	2012.10.13.20.37.32;	author rsprowson;	state Exp;
branches;
next	;
commitid	KWHZotDYAz9vzgow;


desc
@@


1.8
log
@Fix for dropping excessive numbers of transmitted fragmented IP packets
When transmitting packets larger than the MTU the Internet module splits them and so ends up with mbufs with back to back packets. The timing of the network chip access wasn't right so the packets got scrambled in the buffer RAM, and were sent either too short or too long.
A simple "ping -s 1600 other_pc" would have ~25% dropped packets, and a large file transfer via LanManFS would stall (due to 2s TCP/IP backoffs).
The microdelay function polled on the ROM to implement the delay but on a NIC this also cranks the 12 bit ROM counter which seems to interfer with the other CPLD functions.
c/init: function prototype tweaked
h/module: microdelay macro now polls on a read of the control register
s/Support: comment updated to reflect change

Tested on StrongARM Risc PC w/5.19 and A7000 w/3.71. 200 oversized pings completed with 0% dropped.

Version 4.59. Tagged as 'EtherH-4_59'
@
text
@/* (4.59)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        4.59
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                03 Feb 2013

#define Module_MajorVersion             "4.59"
#define Module_Version                  459
#define Module_MinorVersion             ""
#define Module_Date                     "03 Feb 2013"

#define Module_ApplicationDate          "03-Feb-13"

#define Module_ComponentName            "EtherH"
#define Module_ComponentPath            "bsd/RiscOS/Sources/Networking/Ethernet/EtherH"

#define Module_FullVersion              "4.59"
#define Module_HelpVersion              "4.59 (03 Feb 2013)"
#define Module_LibraryVersionInfo       "4:59"
@


1.7
log
@Internationalised
Enabled podule speed setting code to ensure speed A.
In tx_done(), don't assume anything about the opaque value from ensure_irqs_off().
Fixed looping in eh_init() to not turn off interrupts repeatedly for non present podules, also removed the call to Podule_ReadID since Podule_ReadHeader will error if there is no podule fitted anyway.
Tested on RISC OS 3.70 and RISC OS 5.19, 10000+ pings, and doing some file transfer loops via LanManFS.

Version 4.58. Tagged as 'EtherH-4_58'
@
text
@d1 1
a1 1
/* (4.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        4.58
d9 1
a9 1
#define Module_Date_CMHG                13 Oct 2012
d11 2
a12 2
#define Module_MajorVersion             "4.58"
#define Module_Version                  458
d14 1
a14 1
#define Module_Date                     "13 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-12"
d21 3
a23 3
#define Module_FullVersion              "4.58"
#define Module_HelpVersion              "4.58 (13 Oct 2012)"
#define Module_LibraryVersionInfo       "4:58"
@


1.6
log
@Recoded MICRODELAY to be processor speed/cache agnostic
Checked on a scope doing groups of 250/125/62us delays with interrupts disabled, wiggling an IO line.
Get podule/MEMC logical addresses from Podule_ReadInfo (falls back to table for pre RISC OS 3.50).

Version 4.57. Tagged as 'EtherH-4_57'
@
text
@d1 1
a1 1
/* (4.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        4.57
d11 2
a12 2
#define Module_MajorVersion             "4.57"
#define Module_Version                  457
d21 3
a23 3
#define Module_FullVersion              "4.57"
#define Module_HelpVersion              "4.57 (13 Oct 2012)"
#define Module_LibraryVersionInfo       "4:57"
@


1.5
log
@32 bitted the assembler
Only a couple of places make OS interface calls, everything else is called from APCS-32 C, so doesn't need to flag preserve.
Fixed *CONFIGURE output to not show a "Syntax:" error prefix.
Now uses device number queried from podule manager (or falls back to hardwired assignments if Podule_ReadInfo missing).

Version 4.56. Tagged as 'EtherH-4_56'
@
text
@d1 1
a1 1
/* (4.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        4.56
d11 2
a12 2
#define Module_MajorVersion             "4.56"
#define Module_Version                  456
d21 3
a23 3
#define Module_FullVersion              "4.56"
#define Module_HelpVersion              "4.56 (13 Oct 2012)"
#define Module_LibraryVersionInfo       "4:56"
@


1.4
log
@Replaced htons and friends with ${INETLIB} ones
Functions max() and min() changed for macros.
Made supporting assembler functions common -> support.s, so the IO sources just manipulate IO.
Unused header file 'int_hndlr.h' removed.
Resolved all the remaining compiler warnings.
File 'dma.c' compiles now, but is unused.
Substituted magic numbers for defines from exported header files where available.
Text for NIC slot 8 is now "Network slot" rather than "Expansion slot 8".
Builds but not tested. 26 bit only.

Version 4.55. Tagged as 'EtherH-4_55'
@
text
@d1 1
a1 1
/* (4.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        4.55
d11 2
a12 2
#define Module_MajorVersion             "4.55"
#define Module_Version                  455
d21 3
a23 3
#define Module_FullVersion              "4.55"
#define Module_HelpVersion              "4.55 (13 Oct 2012)"
#define Module_LibraryVersionInfo       "4:55"
@


1.3
log
@Makefile recreated from fragments
CMHG file inserts version from VersionNum.
Use ensure_irqs_on/irqs_restore from AsmUtils.
Trimmed revision history now the code is in CVS.
Debug switch SHOW_INFO removed - there was no supporting code.
Dozens of minor warning fixups as the shared makefiles have stricter checking enabled by default.
Builds, tested on RISC OS 3.70. 26 bit only.

Version 4.54. Tagged as 'EtherH-4_54'
@
text
@d1 1
a1 1
/* (4.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        4.54
d11 2
a12 2
#define Module_MajorVersion             "4.54"
#define Module_Version                  454
d21 3
a23 3
#define Module_FullVersion              "4.54"
#define Module_HelpVersion              "4.54 (13 Oct 2012)"
#define Module_LibraryVersionInfo       "4:54"
@


1.2
log
@Substitute 'mbuf', 'dcistructs', 'types', 'errors' from TCPIPLibs:
Insert version number from VersionNum.
Changed error numbers to use SETDCI4ERRNO(), a few were previously using the wrong offset from 0x20E00.
CMHG now generates a header file.
Textual SWI prefix is now "EtherH" for both EtherH8 and EtherH16 versions, since they use the same SWI base they can't coexist, and to match the prefix declared in the DIB block (slightly irrelevant for an ethernet driver since the DCI interface doesn't use SWI names).
Macro FREEM() replaced with m_freem(), also no longer checks for freeing NULL, since MbufManager does that.
Builds but not tested. 26 bit only.

Version 4.53. Tagged as 'EtherH-4_53'
@
text
@d1 1
a1 1
/* (4.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        4.53
d11 2
a12 2
#define Module_MajorVersion             "4.53"
#define Module_Version                  453
d21 3
a23 3
#define Module_FullVersion              "4.53"
#define Module_HelpVersion              "4.53 (13 Oct 2012)"
#define Module_LibraryVersionInfo       "4:53"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (4.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        4.52
d11 2
a12 2
#define Module_MajorVersion             "4.52"
#define Module_Version                  452
d21 3
a23 3
#define Module_FullVersion              "4.52"
#define Module_HelpVersion              "4.52 (13 Oct 2012)"
#define Module_LibraryVersionInfo       "4:52"
@

