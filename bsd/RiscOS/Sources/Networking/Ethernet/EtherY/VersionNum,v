head	1.6;
access;
symbols
	EtherY-0_64:1.6
	EtherY-0_63:1.5
	EtherY-0_62:1.4
	EtherY-0_61:1.3
	EtherY-0_60:1.2;
locks; strict;
comment	@# @;


1.6
date	2017.06.02.07.32.48;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	XsDN8MFzqaijOLTz;

1.5
date	2015.11.24.08.19.20;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	e7NgwmAfPLVjWjKy;

1.4
date	2015.01.01.15.15.27;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	ZL4SYPRr68rKKk4y;

1.3
date	2014.11.06.21.37.45;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	osCd8I97ZwmvFaXx;

1.2
date	2013.09.21.08.34.03;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	cABGtFt8oyIJxh6x;

1.1
date	2013.09.21.07.52.37;	author rsprowson;	state Exp;
branches;
next	;
commitid	AQfU3FP1gG0wjh6x;


desc
@@


1.6
log
@Minor debug sync up and clearer pointers
Pass the NIC struct to the name_chip function, even though it's unused at present.
Add a few local pointers to struct ifnet so that the subsequent dereferences are clearer.
No functional change. Built, but not tested.

Version 0.64. Tagged as 'EtherY-0_64'
@
text
@/* (0.64)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.64
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                02 Jun 2017

#define Module_MajorVersion             "0.64"
#define Module_Version                  64
#define Module_MinorVersion             ""
#define Module_Date                     "02 Jun 2017"

#define Module_ApplicationDate          "02-Jun-17"

#define Module_ComponentName            "EtherY"
#define Module_ComponentPath            "bsd/RiscOS/Sources/Networking/Ethernet/EtherY"

#define Module_FullVersion              "0.64"
#define Module_HelpVersion              "0.64 (02 Jun 2017)"
#define Module_LibraryVersionInfo       "0:64"
@


1.5
log
@Debug correction, and fix for mbuf loop on fragmented packet
eymodule.c: Correction to debug message typo.
glue.c: On fast machines if you're unlucky while sending out a fragmented packet which has been provided as a list of mbufs length > 1, having sent the first chain in the list by using CAT() the chain is free'd but without cropping the hdr off which now points to a free'd mbuf. An incoming packet just at that moment would likely recycle the mbuf and the result is a circular linked list which MbufManager can't process. Unlink hdr before freeing to break the chain.

Version 0.63. Tagged as 'EtherY-0_63'
@
text
@d1 1
a1 1
/* (0.63)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.63
d9 1
a9 1
#define Module_Date_CMHG                24 Nov 2015
d11 2
a12 2
#define Module_MajorVersion             "0.63"
#define Module_Version                  63
d14 1
a14 1
#define Module_Date                     "24 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "24-Nov-15"
d21 3
a23 3
#define Module_FullVersion              "0.63"
#define Module_HelpVersion              "0.63 (24 Nov 2015)"
#define Module_LibraryVersionInfo       "0:63"
@


1.4
log
@Missing return added
In the unlikely event that the PHY is missing, don't plough on and register the interface, give up.

Version 0.62. Tagged as 'EtherY-0_62'
@
text
@d1 1
a1 1
/* (0.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.62
d9 1
a9 1
#define Module_Date_CMHG                01 Jan 2015
d11 2
a12 2
#define Module_MajorVersion             "0.62"
#define Module_Version                  62
d14 1
a14 1
#define Module_Date                     "01 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jan-15"
d21 3
a23 3
#define Module_FullVersion              "0.62"
#define Module_HelpVersion              "0.62 (01 Jan 2015)"
#define Module_LibraryVersionInfo       "0:62"
@


1.3
log
@Internationalise the unit number
The adjacent comment points out that the configure keyword (and the switches it accepts) mustn't be internationalised, like for all star commands. However the <unit number> can be since that is requested a numeric value in its place.
Built, but not tested.

Version 0.61. Tagged as 'EtherY-0_61'
@
text
@d1 1
a1 1
/* (0.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.61
d9 1
a9 1
#define Module_Date_CMHG                06 Nov 2014
d11 2
a12 2
#define Module_MajorVersion             "0.61"
#define Module_Version                  61
d14 1
a14 1
#define Module_Date                     "06 Nov 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-Nov-14"
d21 3
a23 3
#define Module_FullVersion              "0.61"
#define Module_HelpVersion              "0.61 (06 Nov 2014)"
#define Module_LibraryVersionInfo       "0:61"
@


1.2
log
@Import of EtherY driver for Net20/Net21 interfaces
This introduces a number of key changes over the last 0.57 version:
* Now based on NetBSD sources rather than Linux driver.
* Eliminated lots of baffling assembler.
* ErrorNoBuff was 0x804D3 (rather than 0x804D37).
* Error base 0x804D30 was not registered to Castle, now uses an allocated error number range.
* SWI base 0x55480 not registered to Castle due to a typo (should be 0x55840).
* Now probes all podules by looking at the podule header bytes via Podule manager rather than peeking/poking the 91C111 id reg, this would cause problems for other fitted expansion cards with registers at the same offset.
* Function InitChip() used to call Wimp_ReportError in module initialisation outside the desktop.
* Missing *EYTEST command added, required by DCI4.
* Now deregister filters when Internet reinitialised rather than adding a second duplicate set.
* System variable Inet$EtherType omitted the unit number (eg.'ey' not 'ey0').
* Cable detection and reporting of speed/duplex now works (was previously hardwired to "10baseT OK").
* Value for *STATUS no longer use a colon separator.
* Configuration of auto negotiate and speed/duplex options now use the same syntax as EtherK.

A few hardware notes:
* Unlike its counterparts in the 91Cxx family with 256B, the 91C111 has a very coarse 2kB page size for memory allocations. As the chip has a meagre 8k of packet memory that means no more than 3 packets can be queued for transmission, without the risk of an unexpected incoming packet getting dropped.
* The Net20 podule is unbuffered, and seems to not like coexisting with another NIC on the A7000.

Tested on a Risc PC with Net20 and Net21 fitted, on RISC OS 5.20 and RISC OS 3.70.

Version 0.60. Not tagged
@
text
@d1 1
a1 1
/* (0.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.60
d9 1
a9 1
#define Module_Date_CMHG                21 Sep 2013
d11 2
a12 2
#define Module_MajorVersion             "0.60"
#define Module_Version                  60
d14 1
a14 1
#define Module_Date                     "21 Sep 2013"
d16 1
a16 1
#define Module_ApplicationDate          "21-Sep-13"
d21 3
a23 3
#define Module_FullVersion              "0.60"
#define Module_HelpVersion              "0.60 (21 Sep 2013)"
#define Module_LibraryVersionInfo       "0:60"
@


1.1
log
@created by srccommit.
@
text
@d9 1
a9 1
#define Module_Date_CMHG                20 Sep 2013
d14 1
a14 1
#define Module_Date                     "20 Sep 2013"
d16 1
a16 1
#define Module_ApplicationDate          "20-Sep-13"
d22 1
a22 1
#define Module_HelpVersion              "0.60 (20 Sep 2013)"
@

