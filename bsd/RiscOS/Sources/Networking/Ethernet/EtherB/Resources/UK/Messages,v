head	1.2;
access;
symbols
	EtherB-4_32:1.2
	EtherB-4_31:1.1.1.1
	EtherB-4_30:1.1.1.1
	rsprowson-4_30:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.06.02.07.46.10;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	fUQBHbVxcYRRSLTz;

1.1
date	2012.10.13.19.56.45;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	nzHmSfuNnQVzjgow;

1.1.1.1
date	2012.10.13.19.56.45;	author rsprowson;	state Exp;
branches;
next	;
commitid	nzHmSfuNnQVzjgow;


desc
@@


1.2
log
@Flip round the concept of NICs and interfaces
Having subsequently used this as the breeding stock for EtherY and EtherCPSW, it became clear that the hierarchy was the wrong way round for EtherB.
Meaning EtherB = 1 chip, 2 interfaces per chip (1 real, 1 virtual)
        EtherY = many chips, 1 interface per chip (no virtual support)
        EtherCPSW = many chips, 2 interfaces per chip (1 real, 1 virtual)
This change is a bulk search & replace job changing the referencing around so that DCI unit numbers (which map directly to interfaces) can get to the interface pertinent data via 1 pointer.

ebmodule.c: lots of pointer changes, split out the creation of a DCI unit into etherb_add_interface(), move the mbuf session flag out of the NIC structure
filtering.c: sync this with EtherY/EtherCPSW, removing one level of indirection
selftest.c/selftest.h/glue.c: lots of pointer changes
ebmodule.h: nest the 2 interfaces inside the NIC structure, as they are logically arranged this way
Messages: rephrase the slot location

Tested on a RiscPC, with and without virtual interface, and setting/clearing the other configuration options.

Version 4.32. Tagged as 'EtherB-4_32'
@
text
@#{DictTokens}
# Unix errors
E01:Operation not permitted
E06:Invalid unit number
E12:Out of memory
E22:Invalid argument
E25:Inappropriate operation
E40:Oversized message
E50:Link is down
E55:Out of buffers
E135:Higher priority filter already claimed
# Private errors
E200:No podules supported
E201:Slot does not contain EtherB
E202:Machine has no hardware address
E203:Multiple instantiation forbidden
E204:Failed to detect SEEQ controller
E205:Interface not configured as active
# Messages
M00:Length--------------
M01:Interface driver
M02:Interface unit
M03:Interface location
M04:Interface EUI48
M05:Interface controller
M06:Running time
M07:Attribution
#{Default}
M08a:Copyright (c) 2000-2001 Ben Harris
M08b:Copyright (c) 1995-1998 Mark Brinicombe
M08c:All rights reserved.
M08d:THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
M08e:WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
M08f:MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
M08g:IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
M08h:INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
M08i:(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
M08j:SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
M08k:HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
M08l:LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
M08m:OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
M08n:SUCH DAMAGE.
#{DictTokens}
M09:%dd, %dh %dm %ds
M10:up
M11:down
M12:Network slot
M13:Expansion slot %d
M14:This product includes software developed by
M15:Mark Brinicombe for the NetBSD Project
M16:passed
M17:failed
M18:EtherB interface statistics
M19:
M20:Packets sent
M21:Packets received
M22:Bytes sent
M23:Bytes received
M24:Send errors
M25:Receive errors
M26:Undelivered packets
M27:IEEE 802.3 clients
M28:Monitor clients
M29:Sink clients
M30:Standard clients
M31:Type %04X (AddrLvl %02X, ErrLvl %02X) handler=(%p/%p)
M32:selftest
M33:Test location........
M34:Test interrupts......
M35:Test buffer memory...
M36:Test loopback........
M37:Test livewire........
M38:Test CRC engine......
@


1.1
log
@Initial revision
@
text
@d48 1
a48 1
M13:slot %d
@


1.1.1.1
log
@Import of EtherB driver for ANT NIC
This is a clean room reimplementation of the EtherB driver, as the sources are long since lost in the mists of time.
Based on the SEEQ8005 driver from NetBSD it has a few extra changes (demarked by 'RISCOS')
* Some power on self test (configured with *CONFIGURE ETHERB <option>)
* Support for a virtual interface, and seperate stats collection
* Allows up to 8 packets in flight so the dead time while waiting for the hardware to send one packet is used to copy in the next
Tested with a NIC fitted with a SEEQ80C04 and with SEEQ80C04A.
In theory a SEEQ8005 should work, but this has not been tested due to lack of available chips - they were discontinued in 1992, and all samples of ANT NICs seem to be 80C04 or 80C04A based.
@
text
@@
