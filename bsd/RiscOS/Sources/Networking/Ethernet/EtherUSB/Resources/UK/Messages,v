head	1.6;
access;
symbols
	EtherUSB-0_41:1.6
	EtherUSB-0_40:1.5
	EtherUSB-0_39:1.5
	EtherUSB-0_38:1.4
	EtherUSB-0_37:1.3
	EtherUSB-0_36:1.3
	EtherUSB-0_35:1.3
	EtherUSB-0_34:1.3
	EtherUSB-0_33:1.3
	EtherUSB-0_32:1.3
	EtherUSB-0_31:1.2
	EtherUSB-0_30:1.1
	EtherUSB-0_29:1.1
	EtherUSB-0_28:1.1
	EtherUSB-0_27:1.1
	EtherUSB-0_26:1.1;
locks; strict;
comment	@# @;


1.6
date	2018.03.21.23.54.39;	author jlee;	state Exp;
branches;
next	1.5;
commitid	FAdt578EOH7cRnvA;

1.5
date	2018.01.18.23.12.27;	author jlee;	state Exp;
branches;
next	1.4;
commitid	lRremJsVERKgCpnA;

1.4
date	2017.10.21.16.35.33;	author rool;	state Exp;
branches;
next	1.3;
commitid	RL2w4GqnhnkuhWbA;

1.3
date	2015.10.17.08.48.05;	author rool;	state Exp;
branches;
next	1.2;
commitid	rRqBp5gfBn0SjrFy;

1.2
date	2015.09.05.20.33.04;	author rool;	state Exp;
branches;
next	1.1;
commitid	hsW7lDmaNPcqz6Ay;

1.1
date	2013.10.13.13.54.38;	author rsprowson;	state Exp;
branches;
next	;
commitid	cLeOtNKk3nePB89x;


desc
@@


1.6
log
@Add SMSC78xx support
Detail:
  c/smsc78xx, c/module, c/products, h/backends, Makefile - Add SMSC78xx driver, for the chip used in the Raspberry Pi 3B+
  c/config, c/mii, h/mii - Add support for gigabit MIIs & associated (auto) configuration
  c/net, h/net - Handle gigabit link types. Pass verbose flag through to backend info function.
  c/smsc95xx - Make configure_link const-correct
  Resources/UK/CmdHelp - Update *EJConfig syntaxt text to include 1000 option
  Resources/UK/Messages - Add 78xx backend name & device-specific info tokens
Admin:
  Tested on Raspberry Pi 3B & 3B+
  Manually configured gigabit links aren't supported yet
  Gigabit half-duplex isn't supported (78xx MAC limitation)
  For the 78xx, manually-configured full-duplex links appear to suffer terrible RX performance (as seen on 95xx). All supported auto modes appear to work correctly.


Version 0.41. Tagged as 'EtherUSB-0_41'
@
text
@#{DictTokens}
DescAx1:ASIX AX88172
DescAx7:ASIX AX88772
DescCDC:USB Communications Class Ethernet [Not functional yet]
DescMos:MosChip MCS7830
DescPeg:Pegasus USB Ethernet Adapter
DescSMC9:SMSC 95xx
DescSMC7:SMSC 75xx
DescSMC78:SMSC 78xx
HV:Vendor
HP:Product
HB:Backend
HO:Options
Ign:Ignore
None:none
Bad:bad
Down:down
Up:up
Sp10:10Mb
Sp100:100Mb
Sp1000:1000Mb
Uni:Unicast
BCast:Broadcast
Loop:Loopback
ANeg:Auto negotiate
MutM:Mutable MAC
TxRxL:Tx-Rx loopback
EJC:*EJConfig
Dit3:10baseT
Dit12:100baseTX
Dit14:100baseT4
Dit21:1000baseT
Dit?/Dit??:Unknown
DupH:half duplex
DupF:full duplex
PolI:Incorrect
PolC:Correct
PolU:Uncertain
Mod000:Specific
Mod010:Normal
Mod0?1/Multi:Multicast
Mod1??/Prom:Promiscuous
Loc:USB bus %u, device %u, Devices:$.%s
AuthInf:%s driver for USB network adapters, version %s, by %s
DCI4Inf:DCI version %u.%02u, prefix '%s', maximum %u units
BackSup:Supported backends
BackInf:Backend information
CIEEE:IEEE 802.3 clients
CMon:Monitor clients
CSink:Sink clients
CStd:Standard clients
Type:Type %04X (AddrLvl %02X, ErrLvl %02X) handler=(%p/%p)
IfLen:------Longest-------
IfEUI:Interface EUI48
IfNum:Interface unit
IfDrv:Interface driver
IfLoc:Interface location
IfBak:Interface backend
IfMed:Interface media
IfPol:Interface polarity
CtMod:Controller mode
Stat0:Packets sent
Stat1:Packets received
Stat2:Bytes sent
Stat3:Bytes received
Stat4:Send errors
Stat5:Receive errors
Stat6:Undelivered packets
Stat7:Send queue overflows
VVend:Vendor & product
VUSBL:USB location
VDupe:Duplex capability
VSped:Speed capability
VMode:Mode capability
VOthr:Other capability
# Device-specific info tokens
S78Len:------Longest--------------
S78I00:RX FCS Errors
S78I01:RX Alignment Errors
S78I02:RX Fragment Errors
S78I03:RX Jabber Errors
S78I04:RX Undersize Frame Errors
S78I05:RX Oversize Frame Errors
S78I06:RX Dropped Frames
S78I07:RX Unicast Byte Count
S78I08:RX Broadcast Byte Count
S78I09:RX Multicast Byte Count
S78I10:RX Unicast Frames
S78I11:RX Broadcast Frames
S78I12:RX Multicast Frames
S78I13:RX Pause Frames
S78I14:RX 64 Byte Frames
S78I15:RX 65-127 Byte Frames
S78I16:RX 126-255 Byte Frames
S78I17:RX 256-511 Byte Frames
S78I18:RX 512-1023 Byte Frames
S78I19:RX 1024-1518 Byte Frames
S78I20:RX Greater 1518 Byte Frames
S78I21:EEE RX LPI Transitions
S78I22:EEE RX LPI Time
S78I23:TX FCS Errors
S78I24:TX Excess Deferral Errors
S78I25:TX Carrier Errors
S78I26:TX Bad Byte Count
S78I27:TX Single Collisions
S78I28:TX Multiple Collisions
S78I29:TX Excessive Collision
S78I30:TX Late Collisions
S78I31:TX Unicast Byte Count
S78I32:TX Broadcast Byte Count
S78I33:TX Multicast Byte Count
S78I34:TX Unicast Frames
S78I35:TX Broadcast Frames
S78I36:TX Multicast Frames
S78I37:TX Pause Frames
S78I38:TX 64 Byte Frames
S78I39:TX 65-127 Byte Frames
S78I40:TX 126-255 Byte Frames
S78I41:TX 256-511 Byte Frames
S78I42:TX 512-1023 Byte Frames
S78I43:TX 1024-1518 Byte Frames
S78I44:TX Greater 1518 Byte Frames
S78I45:EEE TX LPI Transitions
S78I46:EEE TX LPI Time
# Errors
E00:Module cannot be multiple instantiated
E01:Unable to allocate memory
E02:Not supported
E03:Device broken or misbehaving
E04:Too many units
E05:Configuration failed
E06:Invalid configuration
E07:No PHY or bad PHY address
E08:Unit in use
E09:Require USBDriver 0.49 or later
E0a:Operation timeout
E0b:Data out of EEPROM address range
E0c:MII in use
E20e06:Bad unit
E20e19:Unsupported operation
E20e87:Frame type already claimed
E20e16:Frame type claim failed
E20e01:Attempt to release another's frame claim
E20e86:Transmission blocked
E20e28:Packet too big
Edc:Syntax
@


1.5
log
@Improvements to SMSC 95xx backend and common MII handling
Detail:
  c/smsc95xx - Convert code to use the common MII backend. Reduce verbosity of debug output. Fix two sets of status callbacks running (callback_status_adapter + device_status). Tweak/refactor a couple of other bits as necessary in order to get 10M links working reliably.
  c/mii, h/mii, h/net - Allow backends to indicate their level of support for PAUSE functionality, so that we can advertise it correctly when performing auto-negotiation (previously no pause ability would have been advertised)
  c/config - Ensure config_parse_arguments passes through the PAUSE capabilities to the output net_config_t. Use the (currently unused) ERR_BAD_CONFIG for if autonegotiation is disabled but either speed or duplex setting not specified (avoids MII code or backends getting confused as to what options they should use)
  Resources/UK/Messages - Tweak wording of ERR_BAD_CONFIG so that it's more sensible for the new usage
  doc/!ReadMe - Remove the note about 10M links not being supported by the SMSC 95xx backend. Update the changelog to point people towards CVS for recent changes.
Admin:
  Tested on PandaBoard + Raspberry Pi 3, using SMSC 95xx and AX88772 devices
  SMSC testing results:
  * Previously, 10M links were non-functional
  * Previously, manually-configured 100M full duplex links would suffer terrible performance
  * Previously, any attempt to reconfigure a link on Pi 3 would result in a "Device broken or misbehaving" error? (or at least, that's how 0.38 is behaving for me now)
  * Now, all combinations of configuration (speed + link + auto/noauto) appear to work correctly, except for manually-configured full-duplex links, which still suffer from terrible performance
  AX88772 was used to verify MII changes haven't broken anything for other backends; testing showed no significant differences to previous version (all speed + link + auto/noauto modes working)
  Resolves ticket #342:
  https://www.riscosopen.org/tracker/tickets/342
  Note that currently the SMSC 95xx backend is the only backend to advertise PAUSE functionality via the common MII code; a future improvement would be to set up the other backends appropriately (set correct flags in net_abilities_t)


Version 0.39. Tagged as 'EtherUSB-0_39'
@
text
@d9 1
d76 49
@


1.4
log
@Speed reporting and buffer sizing for SMSC75xx backend
Detail:
  net.c: added support for 1000Mb speed
  smsc75xx.c: reduced MAX_RX_FIFOSIZE to 16k (avoids problems with Kernel keyboard scanning);
              corrected determination of ethernet speed (read from SMC75XX_MAC_CR register)
  net.h: added net_speed_1000Mb (in net_speed_t) and speed_1000Mb (in struct net_abilities_t)
  Messages: added Sp1000 and Dit21 for supporting 1000Mb speed
Admin:
  Submission from Colin Granville.

Version 0.38. Tagged as 'EtherUSB-0_38'
@
text
@d82 1
a82 1
E06:Configuration not supported by device
@


1.3
log
@Addition of SMSC 75xx backend
Support for USB product ids 0x7500 and 0x7505.
Submission from Colin Granville.

Version 0.32. Tagged as 'EtherUSB-0_32'
@
text
@d20 1
d31 1
@


1.2
log
@Further throughput improvements
ax88772.c:
  Modified to work with changes made to net.c and usb.c.
  Increased buffer sizes, allow more than one packet receipt.
ax88172.c/mcs7830.c/pegasus.c:
  Modified to work with changes made to net.c and usb.c.
smsc95xx.c:
  Copyright header simplified by using pronoun form "the copyright holders" rather than repeating this list.
  Modified to work with changes made to net.c and usb.c.
  Reading of MAC address from EEPROM fixed.
products.c:
  Added SMSC9730 device id (uses smsc95xx backend).
net.c/net.h:
  tx_queue removed, all transmit buffering is now done in the USB code.
usb.c:
  Function usb_write() blocks until room is available, or times out.
  Use USBDriver header rather than defining local SWI numbers.
Messages:
  Renamed DescSMC token to DescSMC9.
  Removed redundant Stat7 statistic.

Submission from Colin Granville.
Tested on Pi B+ and OMAP3, not tested on OMAP4, but believed to markedly improve its performance over version 0.30.

Version 0.31. Tagged as 'EtherUSB-0_31'
@
text
@d8 1
@


1.1
log
@Internationalised
AutoSense script updated to be able to parse both the hardwired english output (0.08-0.25 inclusive) and internationalised text (0.26+).
Tested RAM loaded on a Raspberry Pi.

Version 0.26. Tagged as 'EtherUSB-0_26'
@
text
@d7 1
a7 1
DescSMC:SMSC 95xx
d65 1
a65 2
Stat7:Send queue length
Stat8:Send queue overflows
@

