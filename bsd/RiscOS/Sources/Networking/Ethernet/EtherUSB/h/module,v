head	1.8;
access;
symbols
	EtherUSB-0_41:1.8
	EtherUSB-0_40:1.8
	EtherUSB-0_39:1.8
	EtherUSB-0_38:1.8
	EtherUSB-0_37:1.8
	EtherUSB-0_36:1.8
	EtherUSB-0_35:1.8
	EtherUSB-0_34:1.8
	EtherUSB-0_33:1.8
	EtherUSB-0_32:1.8
	EtherUSB-0_31:1.8
	EtherUSB-0_30:1.8
	EtherUSB-0_29:1.8
	EtherUSB-0_28:1.8
	EtherUSB-0_27:1.8
	EtherUSB-0_26:1.8
	EtherUSB-0_25:1.7
	EtherUSB-0_24:1.7
	EtherUSB-0_23:1.7
	EtherUSB-0_22:1.7
	EtherUSB-0_21:1.7
	EtherUSB-0_20:1.7
	EtherUSB-0_19:1.7
	EtherUSB-0_18:1.7
	EtherUSB-0_17:1.6
	EtherUSB-0_16:1.5
	EtherUSB-0_15:1.4
	EtherUSB-0_14:1.3
	jpeacock-0_13:1.1;
locks; strict;
comment	@# @;


1.8
date	2013.10.13.13.54.46;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	cLeOtNKk3nePB89x;

1.7
date	2012.05.19.08.46.51;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	jnaodXkH29YBmj5w;

1.6
date	2012.05.19.08.44.31;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	6JuVMhjS8DSNlj5w;

1.5
date	2012.05.19.08.42.24;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	1BHJUY7zoQz3lj5w;

1.4
date	2012.05.19.08.39.08;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	sBdKYcdaXJwXjj5w;

1.3
date	2012.05.19.08.30.29;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	R1EOINZ5A36Ygj5w;

1.2
date	2012.05.19.08.22.18;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	SzPjH7uh6hKVdj5w;

1.1
date	2012.05.19.08.19.16;	author rsprowson;	state Exp;
branches;
next	;
commitid	q3rEKeu2RrS2cj5w;


desc
@@


1.8
log
@Internationalised
AutoSense script updated to be able to parse both the hardwired english output (0.08-0.25 inclusive) and internationalised text (0.26+).
Tested RAM loaded on a Raspberry Pi.

Version 0.26. Tagged as 'EtherUSB-0_26'
@
text
@//
// Copyright (c) 2006, James Peacock
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met: 
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of RISC OS Open Ltd nor the names of its contributors
//       may be used to endorse or promote products derived from this software
//       without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
#ifndef MODULE_H_INCLUDED
#define MODULE_H_INCLUDED

// Switches and options
#define MODULE_ERROR_BASE       0x819a40
#define MODULE_MAX_UNITS        16
#define MODULE_DCI_NAME         "ej"
#define MODULE_MBUF_MIN_UBS     0u
#define MODULE_MBUF_MAX_UBS     0u
#define MODULE_MBUF_MIN_CONTIG  0u
#ifndef DEBUG
#define DEBUG                   0
#define syslog(...)             // Empty
#define syslog_flush()          // Empty
#define syslog_data(d, s)       // Empty
#endif
#define CALLBACK_TICKER_FREQ    1u
#define CALLBACK_QUEUE_LENGTH   20u
#define TX_QUEUE_LENGTH         16u
#define TX_MAX_DATA_SIZE        1600u
#define TX_PREFIX_SIZE          8u
#define TX_SUFFIX_SIZE          8u

// Private word for external calls into this module
extern void* g_module_pw;

// Internationalised messages and error enumerations
extern void* Resources(void);
extern const char *msg_translate(const char *);
extern _kernel_oserror* err_translate(int);
#define ERR_REINSTANTIATE         0
#define ERR_NO_MEMORY             1
#define ERR_UNSUPPORTED           2
#define ERR_BAD_DEVICE            3
#define ERR_TOO_MANY_UNITS        4
#define ERR_CONFIG_FAILED         5
#define ERR_BAD_CONFIG            6
#define ERR_BAD_PHY               7
#define ERR_UNIT_IN_USE           8
#define ERR_USB_TOO_OLD           9
#define ERR_TIMEOUT               10
#define ERR_EEPROM_RANGE          11
#define ERR_MII_IN_USE            12
#define ERR_MAX                   13 // Exclusive limit of private errors
#define ERR_BAD_UNIT              (DCI4ERRORBLOCK + ENXIO)
#define ERR_BAD_OPERATION         (DCI4ERRORBLOCK + ENOTTY)
#define ERR_BAD_FILTER_CLAIM      INETERR_FILTERGONE
#define ERR_BAD_FILTER_RELEASE    (DCI4ERRORBLOCK + EINVAL)
#define ERR_OTHERS_FILTER_RELEASE (DCI4ERRORBLOCK + EPERM)
#define ERR_BAD_VALUE             (DCI4ERRORBLOCK + EINVAL)
#define ERR_TX_BLOCKED            INETERR_TXBLOCKED
#define ERR_MESSAGE_TOO_BIG       (DCI4ERRORBLOCK + EMSGSIZE)
#define ERR_BAD_SYNTAX            220

#endif
@


1.7
log
@Dib slot number set per DCI 4.06.
Changed *EJINFO output to refer to bus/device to match *USBDEVICES nomenclature.

Version 0.18. Tagged as 'EtherUSB-0_18'
@
text
@a34 1
#define MODULE_DCI_VERSION      404
d40 3
d54 3
a56 1
// Error enumerations shared with assembler
d71 10
a80 10
#define ERR_BAD_UNIT              13
#define ERR_BAD_OPERATION         14
#define ERR_BAD_FILTER_CLAIM      15
#define ERR_BAD_FILTER_RELEASE    16
#define ERR_OTHERS_FILTER_RELEASE 17
#define ERR_BAD_VALUE             18
#define ERR_TX_BLOCKED            19
#define ERR_MESSAGE_TOO_BIG       20
#define ERR_BAD_SYNTAX            21
#define ERR_MAX                   22
@


1.6
log
@Save 4.5kB by making the table of errors with objasm (so they're not all padded to 252 bytes by the compiler to fit into _kernel_oserror structs).
The 'moduleerr.s' source should be made redundant by internationalising the module.

Version 0.17. Tagged as 'EtherUSB-0_17'
@
text
@a35 1
#define MODULE_DCI_USB_SLOT     201u // Get allocated!
@


1.5
log
@Added autosense, and autosense install rule to makefile.
Now uses AsmUtils for irqs_on/irqs_off
Squash a few unused variable warnings, not in the backends though as porting updates would be more complex for those that come from (for example) NetBSD.
Changed to use structure definitions from sys/dcistructs.h (mostly an exercise in prefixing member names).

Version 0.16. Tagged as 'EtherUSB-0_16'
@
text
@a30 2
#include "kernel.h"

d53 25
a77 27
// Errors with EtherUSB error no.
extern _kernel_oserror err_reinstantiate;
extern _kernel_oserror err_no_memory;
extern _kernel_oserror err_unsupported;
extern _kernel_oserror err_bad_device;
extern _kernel_oserror err_too_many_units;
extern _kernel_oserror err_config_failed;
extern _kernel_oserror err_bad_config;
extern _kernel_oserror err_bad_phy;
extern _kernel_oserror err_unit_in_use;
extern _kernel_oserror err_usb_too_old;

// Errors with DCI error number
extern _kernel_oserror err_bad_unit;
extern _kernel_oserror err_bad_operation;
extern _kernel_oserror err_bad_value;
extern _kernel_oserror err_bad_filter_claim;
extern _kernel_oserror err_bad_filter_release;
extern _kernel_oserror err_others_filter_release;
extern _kernel_oserror err_tx_blocked;
extern _kernel_oserror err_message_too_big;
extern _kernel_oserror err_timeout;
extern _kernel_oserror err_eeprom_range;
extern _kernel_oserror err_mii_in_use;

// OS error codes
extern _kernel_oserror err_bad_syntax;
@


1.4
log
@Uses common USB header files exported by the USB stack.
Use ModHand/Variables/RISCOS/OsByte headers.
Note, this has meant some header files needed reordering to prevent circular dependencies.

Version 0.15. Tagged as 'EtherUSB-0_15'
@
text
@d38 1
@


1.3
log
@Brought under srccommit control for update of version numbers.
Makefile recreated from fragments
CMHG file renamed to avoid needing special rule to tell where it is.

Version 0.14. Tagged as 'EtherUSB-0_14'
@
text
@d36 5
a40 1
#define MODULE_SWI_PREFIX       EtherUSB
a49 5
#define MODULE_DCI_NAME         "ej"
#define MODULE_DCI_VERSION      404
#define MODULE_MBUF_MIN_UBS     0u
#define MODULE_MBUF_MAX_UBS     0u
#define MODULE_MBUF_MIN_CONTIG  0u
@


1.2
log
@Explicit BSD licence heading blocks added to those source files that did not have them.
No code changes, not tagged.
@
text
@d33 19
@


1.1
log
@Import of sources to EtherUSB.
Special thanks to James Peacock for allowing ROOL to host these sources.
This import represents version 0.13 by James and the backend contributors, the only change being that the makefile wipes the directories it creates on cleaning so there's no need to import those to CVS.
Tagged as jpeacock-0_13.
@
text
@d1 27
a27 3
/* EtherUSB
 * (C) James Peacock, 2006.
 */
@

