head	1.5;
access;
symbols
	EtherUSB-0_41:1.5
	EtherUSB-0_40:1.5
	EtherUSB-0_39:1.5
	EtherUSB-0_38:1.5
	EtherUSB-0_37:1.5
	EtherUSB-0_36:1.5
	EtherUSB-0_35:1.5
	EtherUSB-0_34:1.5
	EtherUSB-0_33:1.4
	EtherUSB-0_32:1.4
	EtherUSB-0_31:1.4
	EtherUSB-0_30:1.4
	EtherUSB-0_29:1.3
	EtherUSB-0_28:1.3
	EtherUSB-0_27:1.3
	EtherUSB-0_26:1.3
	EtherUSB-0_25:1.2
	EtherUSB-0_24:1.2
	EtherUSB-0_23:1.2
	EtherUSB-0_22:1.2
	EtherUSB-0_21:1.2
	EtherUSB-0_20:1.1
	EtherUSB-0_19:1.1
	EtherUSB-0_18:1.1
	EtherUSB-0_17:1.1
	EtherUSB-0_16:1.1
	EtherUSB-0_15:1.1
	EtherUSB-0_14:1.1;
locks; strict;
comment	@# @;


1.5
date	2015.12.12.09.36.56;	author rool;	state Exp;
branches;
next	1.4;
commitid	Mp6dAex7toR1NDMy;

1.4
date	2015.01.11.10.25.47;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	2kyl1TV8jgmpPA5y;

1.3
date	2013.10.13.13.54.44;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	cLeOtNKk3nePB89x;

1.2
date	2012.09.09.15.37.16;	author jlee;	state Exp;
branches;
next	1.1;
commitid	PX4F0vbh4EFd0Sjw;

1.1
date	2012.05.19.08.30.26;	author rsprowson;	state Exp;
branches;
next	;
commitid	R1EOINZ5A36Ygj5w;


desc
@@


1.5
log
@Improve resilience to USB stack hot swapping
Detail:
  Listen out for different service calls so EtherUSB keeps connected even if DeviceFS/USBDriver/HC backends get restarted.
Admin:
  Submission from Colin Granville.

Version 0.34. Tagged as 'EtherUSB-0_34'
@
text
@; 
; Copyright (c) 2006, James Peacock
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
; 
; CMHG module definition for EtherUSB.

#include "Global/Services.h"
#include "VersionNum"

#ifdef DEBUG
help-string:  EtherUSB Module_MajorVersion_CMHG James Peacock [Debug]
#else
help-string:  EtherUSB Module_MajorVersion_CMHG James Peacock
#endif
title-string: EtherUSB
date-string:  Module_Date_CMHG

international-help-file:"Resources:$.Resources."Module_ComponentName".Messages"

initialisation-code: module_init
finalisation-code: module_final

service-call-handler: module_service    Service_USB,
                                        Service_DeviceDead,
                                        Service_EnumerateNetworkDrivers,
                                        Service_DCIProtocolStatus,
                                        Service_DeviceFSStarting,
                                        Service_MbufManagerStatus,
                                        Service_Reset,
                                        Service_ResourceFSStarting

swi-chunk-base-number:                  0x55200
swi-handler-code:                       module_swi
swi-decoding-table:                     EtherUSB,
                                        DCIVersion,
                                        Inquire,
                                        GetNetworkMTU,
                                        SetNetworkMTU,
                                        Transmit,
                                        Filter,
                                        Stats,
                                        MulticastRequest


command-keyword-table: module_command
  EJInfo(min-args:0, max-args:2,
         international:,
         help-text:      "HEJI",
         invalid-syntax: "SEJI"
        ),
  EJTest(min-args:0, max-args:2,
         international:,
         help-text:      "HEJT",
         invalid-syntax: "SEJT"
        ),
  EJProducts(min-args:0, max-args:0,
         international:,
         help-text:      "HEJP",
         invalid-syntax: "SEJP"
        ),
  EJConfig(min-args:0, max-args:20,
         international:,
         help-text:      "HEJC",
         invalid-syntax: "SEJC"
        )
        
generic-veneers: callback_hook
vector-handlers: usb_upcall_hook usb_fscontrol_hook usb_find_hook
@


1.4
log
@Correction to CMHG veneer types
The FSCV, FindV, UpcallV handlers were marked as generic veneers rather than vector handlers.
Spotted by Colin Granville.

Version 0.30. Tagged as 'EtherUSB-0_30'
@
text
@d50 1
@


1.3
log
@Internationalised
AutoSense script updated to be able to parse both the hardwired english output (0.08-0.25 inclusive) and internationalised text (0.26+).
Tested RAM loaded on a Raspberry Pi.

Version 0.26. Tagged as 'EtherUSB-0_26'
@
text
@d89 2
a90 1
generic-veneers: callback_hook usb_upcall_hook usb_fscontrol_hook usb_find_hook
@


1.2
log
@Protect against memory corruption caused by devicefs streams being unexepectedly closed
Detail:
  c/cmodule, c/usb, cmhg/EtherUSBHdr, h/usb - Sit on FSControlV & FindV so we can watch for file closures and catch any attempt to close our devicefs streams. Also need to sit on Service_Reset to make sure FileSwitch doesn't get the vector calls before us.
  If the device streams get closed without our notice, then the next attempt to write to a buffer (or potentially read from one?) via the direct buffer manager calls will result in RMA corruption.
Admin:
  Tested on Raspberry Pi with high processor vectors
  Fixes occasional data aborts while sat on "shutdown complete" screen (since *shutdown will close the devicefs streams)


Version 0.21. Tagged as 'EtherUSB-0_21'
@
text
@d41 2
d51 2
a52 1
                                        Service_Reset
d68 9
a76 5
  EJInfo(min-args:0,
         max-args:2,
         add-syntax:,
         help-text: "*EJInfo displays information about the network interfaces driven by the EtherUSB module\n",
         invalid-syntax: "Syntax: *EJInfo [-verbose] [<unit number>]"
d78 4
a81 5
  EJProducts(min-args:0,
             max-args:0,
             add-syntax:,
             help-text: "*EJProducts shows the list of vendor/products IDs which have defined backends or options. A list entry with a '+' indicates the option has been set using an environment variable. A list entry with a '-' indicates that it is an internal default which has been overridden by one of the ones marked by a '+'.\n"
             invalid-syntax: "Syntax: *EJProducts"
d83 6
a88 6
  EJConfig(min-args:0,
           max-args:20,
           add-syntax:,
           help-text: "*EJConfig reconfigures a EtherUSB network device\n",
           invalid-syntax: "Syntax: *EJConfig <unit number> [Auto]|[10|100 Half|Full]")

@


1.1
log
@Brought under srccommit control for update of version numbers.
Makefile recreated from fragments
CMHG file renamed to avoid needing special rule to tell where it is.

Version 0.14. Tagged as 'EtherUSB-0_14'
@
text
@d48 2
a49 1
                                        Service_MbufManagerStatus
d83 1
a83 1
generic-veneers: callback_hook usb_upcall_hook
@

