head	1.2;
access;
symbols
	EtherUSB-0_25:1.1
	EtherUSB-0_24:1.1
	EtherUSB-0_23:1.1
	EtherUSB-0_22:1.1
	EtherUSB-0_21:1.1
	EtherUSB-0_20:1.1
	EtherUSB-0_19:1.1
	EtherUSB-0_18:1.1
	EtherUSB-0_17:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.10.13.13.54.50;	author rsprowson;	state dead;
branches;
next	1.1;
commitid	cLeOtNKk3nePB89x;

1.1
date	2012.05.19.08.44.34;	author rsprowson;	state Exp;
branches;
next	;
commitid	6JuVMhjS8DSNlj5w;


desc
@@


1.2
log
@Internationalised
AutoSense script updated to be able to parse both the hardwired english output (0.08-0.25 inclusive) and internationalised text (0.26+).
Tested RAM loaded on a Raspberry Pi.

Version 0.26. Tagged as 'EtherUSB-0_26'
@
text
@; 
; Copyright (c) 2012, RISC OS Open Ltd
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
; 
;----------------------------------------------------------------------------

	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System

        
;----------------------------------------------------------------------------

	AREA	|ModuleErr$$code|,CODE,PIC,READONLY

;----------------------------------------------------------------------------
; To save defining everything twice, this table is run through the
; preprocessor first. So it actually assembles, hide C "extern"s as comments
;----------------------------------------------------------------------------
#define extern  ;
#define KERNEL  1

#include "module.h"
#include "sys/errno.h"
#include "Global/NewErrors.h"

;----------------------------------------------------------------------------
; _kernel_oserror* err_translate(int);
;----------------------------------------------------------------------------

	EXPORT	err_translate
err_translate
	ADR	r1, tstart
	LDR	r0, [r1, r0, LSL #2]
	ADD	r0, r0, r1
	MOV     pc, lr

tstart
	DCD	blk_reinstantiate - tstart
	DCD	blk_no_memory - tstart
	DCD	blk_unsupported - tstart
	DCD	blk_bad_device - tstart
	DCD	blk_too_many_units - tstart
	DCD	blk_config_failed - tstart
	DCD	blk_bad_config - tstart
	DCD	blk_bad_phy - tstart
	DCD	blk_unit_in_use - tstart
	DCD	blk_usb_too_old - tstart
	DCD	blk_timeout - tstart
	DCD	blk_eeprom_range - tstart
	DCD	blk_mii_in_use - tstart
	DCD	blk_bad_unit - tstart
	DCD	blk_bad_operation - tstart
	DCD	blk_bad_filter_claim - tstart
	DCD	blk_bad_filter_release - tstart
	DCD	blk_others_filter_release - tstart
	DCD	blk_bad_value - tstart
	DCD	blk_tx_blocked - tstart
	DCD	blk_message_too_big - tstart
	DCD	blk_bad_syntax - tstart
tend

;----------------------------------------------------------------------------
; Checks
;----------------------------------------------------------------------------
	ASSERT	ERR_REINSTANTIATE < ERR_NO_MEMORY
	ASSERT	ERR_UNSUPPORTED < ERR_BAD_DEVICE
	ASSERT	ERR_TOO_MANY_UNITS < ERR_CONFIG_FAILED
	ASSERT	ERR_BAD_CONFIG < ERR_BAD_PHY
	ASSERT	ERR_UNIT_IN_USE < ERR_USB_TOO_OLD
	ASSERT	ERR_TIMEOUT < ERR_EEPROM_RANGE
	ASSERT	ERR_MII_IN_USE < ERR_BAD_UNIT
	ASSERT	ERR_BAD_OPERATION < ERR_BAD_FILTER_CLAIM
	ASSERT	ERR_BAD_FILTER_RELEASE < ERR_OTHERS_FILTER_RELEASE
	ASSERT	ERR_BAD_VALUE < ERR_TX_BLOCKED
	ASSERT	ERR_MESSAGE_TOO_BIG < ERR_BAD_SYNTAX
	ASSERT	ERR_BAD_SYNTAX < ERR_MAX
	ASSERT	ERR_MAX = ((tend - tstart):SHR:2)

;----------------------------------------------------------------------------
; Error codes
;----------------------------------------------------------------------------

blk_reinstantiate
	DCD     MODULE_ERROR_BASE + 0
	DCB	"Module cannot be multiple instantiated", 0
	ALIGN

blk_no_memory
	DCD	MODULE_ERROR_BASE + 1
	DCB	"Unable to allocate memory", 0
	ALIGN

blk_unsupported
	DCD	MODULE_ERROR_BASE + 2
	DCB	"Not supported", 0
	ALIGN

blk_bad_device
	DCD	MODULE_ERROR_BASE + 3
	DCB	"Device broken or misbehaving", 0
	ALIGN

blk_too_many_units
	DCD	MODULE_ERROR_BASE + 4
	DCB	"Too many units", 0
	ALIGN

blk_config_failed
	DCD	MODULE_ERROR_BASE + 5
	DCB	"Configuration failed", 0
	ALIGN

blk_bad_config
	DCD	MODULE_ERROR_BASE + 6
	DCB	"Configuration not supported by device", 0
	ALIGN

blk_bad_phy
	DCD	MODULE_ERROR_BASE + 7
	DCB	"No PHY or bad PHY address", 0
	ALIGN

blk_unit_in_use
	DCD	MODULE_ERROR_BASE + 8
	DCB	"Unit in use", 0
	ALIGN

blk_usb_too_old
	DCD	MODULE_ERROR_BASE + 9
	DCB	"Require USBDriver 0.49 or later", 0
	ALIGN

blk_timeout
	DCD	MODULE_ERROR_BASE + 10
	DCB     "Operation timeout", 0
	ALIGN

blk_eeprom_range
	DCD	MODULE_ERROR_BASE + 11
	DCB	"Data out of EEPROM address range", 0
	ALIGN

blk_mii_in_use
	DCD	MODULE_ERROR_BASE + 12
	DCB     "MII in use", 0
	ALIGN

blk_bad_unit
	DCD	ErrorBase_DCI4 + EINVAL
	DCB	MODULE_DCI_NAME, ": bad unit", 0
	ALIGN

blk_bad_operation
	DCD	ErrorBase_DCI4 + ENOTTY
	DCB	MODULE_DCI_NAME, ": unsupported operation", 0
	ALIGN

blk_bad_filter_claim
	DCD	ErrorBase_DCI4 + &87 ; INETERR_FILTERGONE
	DCB	MODULE_DCI_NAME, ": frame type already claimed", 0
	ALIGN

blk_bad_filter_release
	DCD	ErrorBase_DCI4 + EINVAL
	DCB	MODULE_DCI_NAME, ": frame type not claimed", 0
	ALIGN

blk_others_filter_release
	DCD	ErrorBase_DCI4 + EPERM
	DCB	MODULE_DCI_NAME, ": attempt to release another's frame claim", 0
	ALIGN

blk_bad_value
	DCD	ErrorBase_DCI4 + EINVAL
	DCB	MODULE_DCI_NAME, ": bad parameters", 0
	ALIGN

blk_tx_blocked
	DCD	ErrorBase_DCI4 + &86 ; INETERR_TXBLOCKED 
	DCB	MODULE_DCI_NAME, ": transmission blocked", 0
	ALIGN

blk_message_too_big
	DCD	ErrorBase_DCI4 + EMSGSIZE
	DCB	MODULE_DCI_NAME, ": packet too big", 0
	ALIGN

blk_bad_syntax
	DCD	ErrorNumber_Syntax
	DCB	"Syntax", 0
	ALIGN

;----------------------------------------------------------------------------

	END
@


1.1
log
@Save 4.5kB by making the table of errors with objasm (so they're not all padded to 252 bytes by the compiler to fit into _kernel_oserror structs).
The 'moduleerr.s' source should be made redundant by internationalising the module.

Version 0.17. Tagged as 'EtherUSB-0_17'
@
text
@@

