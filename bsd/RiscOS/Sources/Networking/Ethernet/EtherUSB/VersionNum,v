head	1.28;
access;
symbols
	EtherUSB-0_41:1.28
	EtherUSB-0_40:1.27
	EtherUSB-0_39:1.26
	EtherUSB-0_38:1.25
	EtherUSB-0_37:1.24
	EtherUSB-0_36:1.23
	EtherUSB-0_35:1.22
	EtherUSB-0_34:1.21
	EtherUSB-0_33:1.20
	EtherUSB-0_32:1.19
	EtherUSB-0_31:1.18
	EtherUSB-0_30:1.17
	EtherUSB-0_29:1.16
	EtherUSB-0_28:1.15
	EtherUSB-0_27:1.14
	EtherUSB-0_26:1.13
	EtherUSB-0_25:1.12
	EtherUSB-0_24:1.11
	EtherUSB-0_23:1.10
	EtherUSB-0_22:1.9
	EtherUSB-0_21:1.8
	EtherUSB-0_20:1.7
	EtherUSB-0_19:1.6
	EtherUSB-0_18:1.5
	EtherUSB-0_17:1.4
	EtherUSB-0_16:1.3
	EtherUSB-0_15:1.2
	EtherUSB-0_14:1.1;
locks; strict;
comment	@# @;


1.28
date	2018.03.21.23.54.36;	author jlee;	state Exp;
branches;
next	1.27;
commitid	FAdt578EOH7cRnvA;

1.27
date	2018.02.10.19.45.25;	author jlee;	state Exp;
branches;
next	1.26;
commitid	bBKynb0llKHqJlqA;

1.26
date	2018.01.18.23.12.22;	author jlee;	state Exp;
branches;
next	1.25;
commitid	lRremJsVERKgCpnA;

1.25
date	2017.10.21.16.35.31;	author rool;	state Exp;
branches;
next	1.24;
commitid	RL2w4GqnhnkuhWbA;

1.24
date	2016.04.14.20.15.39;	author jlee;	state Exp;
branches;
next	1.23;
commitid	LjJsPfWNhED4lD2z;

1.23
date	2016.02.29.10.37.03;	author bavison;	state Exp;
branches;
next	1.22;
commitid	oAHZMQOdmovfANWy;

1.22
date	2015.12.19.09.32.25;	author rool;	state Exp;
branches;
next	1.21;
commitid	rMYU9crfojczxxNy;

1.21
date	2015.12.12.09.36.48;	author rool;	state Exp;
branches;
next	1.20;
commitid	Mp6dAex7toR1NDMy;

1.20
date	2015.10.20.07.41.56;	author rool;	state Exp;
branches;
next	1.19;
commitid	9mqV629Z5tSeROFy;

1.19
date	2015.10.17.08.47.59;	author rool;	state Exp;
branches;
next	1.18;
commitid	rRqBp5gfBn0SjrFy;

1.18
date	2015.09.05.20.32.58;	author rool;	state Exp;
branches;
next	1.17;
commitid	hsW7lDmaNPcqz6Ay;

1.17
date	2015.01.11.10.25.39;	author rsprowson;	state Exp;
branches;
next	1.16;
commitid	2kyl1TV8jgmpPA5y;

1.16
date	2014.08.30.16.02.19;	author rsprowson;	state Exp;
branches;
next	1.15;
commitid	ZDJswl20osIWZoOx;

1.15
date	2014.08.24.08.11.27;	author rsprowson;	state Exp;
branches;
next	1.14;
commitid	YZmCKmQSYSPmAANx;

1.14
date	2014.08.24.07.38.14;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	5yHxny2sxtyYoANx;

1.13
date	2013.10.13.13.54.32;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	cLeOtNKk3nePB89x;

1.12
date	2013.10.04.07.41.09;	author rsprowson;	state Exp;
branches;
next	1.11;
commitid	KOKUvofUdP1GPW7x;

1.11
date	2013.04.07.17.47.07;	author jlee;	state Exp;
branches;
next	1.10;
commitid	7koGNmobBUDhYRKw;

1.10
date	2013.04.01.14.59.29;	author jlee;	state Exp;
branches;
next	1.9;
commitid	depDMAPvYqzJe5Kw;

1.9
date	2012.10.31.21.56.08;	author jlee;	state Exp;
branches;
next	1.8;
commitid	VatbpwobWsJAqAqw;

1.8
date	2012.09.09.15.37.12;	author jlee;	state Exp;
branches;
next	1.7;
commitid	PX4F0vbh4EFd0Sjw;

1.7
date	2012.08.26.15.36.05;	author jballance;	state Exp;
branches;
next	1.6;
commitid	PI9rjb9rdECJr4iw;

1.6
date	2012.06.24.20.59.37;	author jlee;	state Exp;
branches;
next	1.5;
commitid	Is6csYj0C3Vhg0aw;

1.5
date	2012.05.19.08.46.45;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	jnaodXkH29YBmj5w;

1.4
date	2012.05.19.08.44.25;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	6JuVMhjS8DSNlj5w;

1.3
date	2012.05.19.08.42.14;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	1BHJUY7zoQz3lj5w;

1.2
date	2012.05.19.08.39.02;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	sBdKYcdaXJwXjj5w;

1.1
date	2012.05.19.08.30.20;	author rsprowson;	state Exp;
branches;
next	;
commitid	R1EOINZ5A36Ygj5w;


desc
@@


1.28
log
@Add SMSC78xx support
Detail:
  c/smsc78xx, c/module, c/products, h/backends, Makefile - Add SMSC78xx driver, for the chip used in the Raspberry Pi 3B+
  c/config, c/mii, h/mii - Add support for gigabit MIIs & associated (auto) configuration
  c/net, h/net - Handle gigabit link types. Pass verbose flag through to backend info function.
  c/smsc95xx - Make configure_link const-correct
  Resources/UK/CmdHelp - Update *EJConfig syntaxt text to include 1000 option
  Resources/UK/Messages - Add 78xx backend name & device-specific info tokens
Admin:
  Tested on Raspberry Pi 3B & 3B+
  Manually configured gigabit links aren't supported yet
  Gigabit half-duplex isn't supported (78xx MAC limitation)
  For the 78xx, manually-configured full-duplex links appear to suffer terrible RX performance (as seen on 95xx). All supported auto modes appear to work correctly.


Version 0.41. Tagged as 'EtherUSB-0_41'
@
text
@/* (0.41)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.41
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                21 Mar 2018

#define Module_MajorVersion             "0.41"
#define Module_Version                  41
#define Module_MinorVersion             ""
#define Module_Date                     "21 Mar 2018"

#define Module_ApplicationDate          "21-Mar-18"

#define Module_ComponentName            "EtherUSB"
#define Module_ComponentPath            "bsd/RiscOS/Sources/Networking/Ethernet/EtherUSB"

#define Module_FullVersion              "0.41"
#define Module_HelpVersion              "0.41 (21 Mar 2018)"
#define Module_LibraryVersionInfo       "0:41"
@


1.27
log
@Fix pegasus backend. Update *ejconfig syntax message.
Detail:
  c/pegasus - Add mii_abilities() call to fix backend not working since extra sanity checks were added to config_parse_arguments() in EtherUSB 0.39. Also switch over to using the common status callback code, and provide a configure function.
  Resources/UK/CmdHelp - Update *ejconfig syntax message, since it was missing some things like 'noauto'.
Admin:
  Tested on beagleboard
  Fixes pegasus backend not working since EtherUSB 0.39:
  https://www.riscosopen.org/forum/forums/4/topics/10119


Version 0.40. Tagged as 'EtherUSB-0_40'
@
text
@d1 1
a1 1
/* (0.40)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.40
d9 1
a9 1
#define Module_Date_CMHG                10 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "0.40"
#define Module_Version                  40
d14 1
a14 1
#define Module_Date                     "10 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "10-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "0.40"
#define Module_HelpVersion              "0.40 (10 Feb 2018)"
#define Module_LibraryVersionInfo       "0:40"
@


1.26
log
@Improvements to SMSC 95xx backend and common MII handling
Detail:
  c/smsc95xx - Convert code to use the common MII backend. Reduce verbosity of debug output. Fix two sets of status callbacks running (callback_status_adapter + device_status). Tweak/refactor a couple of other bits as necessary in order to get 10M links working reliably.
  c/mii, h/mii, h/net - Allow backends to indicate their level of support for PAUSE functionality, so that we can advertise it correctly when performing auto-negotiation (previously no pause ability would have been advertised)
  c/config - Ensure config_parse_arguments passes through the PAUSE capabilities to the output net_config_t. Use the (currently unused) ERR_BAD_CONFIG for if autonegotiation is disabled but either speed or duplex setting not specified (avoids MII code or backends getting confused as to what options they should use)
  Resources/UK/Messages - Tweak wording of ERR_BAD_CONFIG so that it's more sensible for the new usage
  doc/!ReadMe - Remove the note about 10M links not being supported by the SMSC 95xx backend. Update the changelog to point people towards CVS for recent changes.
Admin:
  Tested on PandaBoard + Raspberry Pi 3, using SMSC 95xx and AX88772 devices
  SMSC testing results:
  * Previously, 10M links were non-functional
  * Previously, manually-configured 100M full duplex links would suffer terrible performance
  * Previously, any attempt to reconfigure a link on Pi 3 would result in a "Device broken or misbehaving" error? (or at least, that's how 0.38 is behaving for me now)
  * Now, all combinations of configuration (speed + link + auto/noauto) appear to work correctly, except for manually-configured full-duplex links, which still suffer from terrible performance
  AX88772 was used to verify MII changes haven't broken anything for other backends; testing showed no significant differences to previous version (all speed + link + auto/noauto modes working)
  Resolves ticket #342:
  https://www.riscosopen.org/tracker/tickets/342
  Note that currently the SMSC 95xx backend is the only backend to advertise PAUSE functionality via the common MII code; a future improvement would be to set up the other backends appropriately (set correct flags in net_abilities_t)


Version 0.39. Tagged as 'EtherUSB-0_39'
@
text
@d1 1
a1 1
/* (0.39)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.39
d9 1
a9 1
#define Module_Date_CMHG                18 Jan 2018
d11 2
a12 2
#define Module_MajorVersion             "0.39"
#define Module_Version                  39
d14 1
a14 1
#define Module_Date                     "18 Jan 2018"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jan-18"
d21 3
a23 3
#define Module_FullVersion              "0.39"
#define Module_HelpVersion              "0.39 (18 Jan 2018)"
#define Module_LibraryVersionInfo       "0:39"
@


1.25
log
@Speed reporting and buffer sizing for SMSC75xx backend
Detail:
  net.c: added support for 1000Mb speed
  smsc75xx.c: reduced MAX_RX_FIFOSIZE to 16k (avoids problems with Kernel keyboard scanning);
              corrected determination of ethernet speed (read from SMC75XX_MAC_CR register)
  net.h: added net_speed_1000Mb (in net_speed_t) and speed_1000Mb (in struct net_abilities_t)
  Messages: added Sp1000 and Dit21 for supporting 1000Mb speed
Admin:
  Submission from Colin Granville.

Version 0.38. Tagged as 'EtherUSB-0_38'
@
text
@d1 1
a1 1
/* (0.38)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.38
d9 1
a9 1
#define Module_Date_CMHG                21 Oct 2017
d11 2
a12 2
#define Module_MajorVersion             "0.38"
#define Module_Version                  38
d14 1
a14 1
#define Module_Date                     "21 Oct 2017"
d16 1
a16 1
#define Module_ApplicationDate          "21-Oct-17"
d21 3
a23 3
#define Module_FullVersion              "0.38"
#define Module_HelpVersion              "0.38 (21 Oct 2017)"
#define Module_LibraryVersionInfo       "0:38"
@


1.24
log
@Don't pass silly error numbers to MsgTrans
Detail:
  c/module - Don't pass silly error numbers to MessageTrans_ErrorLookup - the kernel will now fault them.
Admin:
  Tested on Raspberry Pi 3


Version 0.37. Tagged as 'EtherUSB-0_37'
@
text
@d1 1
a1 1
/* (0.37)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.37
d9 1
a9 1
#define Module_Date_CMHG                14 Apr 2016
d11 2
a12 2
#define Module_MajorVersion             "0.37"
#define Module_Version                  37
d14 1
a14 1
#define Module_Date                     "14 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-16"
d21 3
a23 3
#define Module_FullVersion              "0.37"
#define Module_HelpVersion              "0.37 (14 Apr 2016)"
#define Module_LibraryVersionInfo       "0:37"
@


1.23
log
@  Support ARMv8
Detail:
  This module previously used both SWP and SWPB instructions, which have
  been withdrawn in ARMv8. Now use SyncLib to provide the equivalent
  functionality, which will use LDREX/STREX or LDREXB/STREXB instead when
  appropriate.
Admin:
  Tested on Raspberry Pi 3.

Version 0.36. Tagged as 'EtherUSB-0_36'
@
text
@d1 1
a1 1
/* (0.36)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.36
d9 1
a9 1
#define Module_Date_CMHG                29 Feb 2016
d11 2
a12 2
#define Module_MajorVersion             "0.36"
#define Module_Version                  36
d14 1
a14 1
#define Module_Date                     "29 Feb 2016"
d16 1
a16 1
#define Module_ApplicationDate          "29-Feb-16"
d21 3
a23 3
#define Module_FullVersion              "0.36"
#define Module_HelpVersion              "0.36 (29 Feb 2016)"
#define Module_LibraryVersionInfo       "0:36"
@


1.22
log
@Add support for AX88772B variants
Detail:
  More careful manipulation of the control register, and extra entries in the product lookup table, adding support for AX88772B controllers.
  Added EUI48 check function, blank MAC addresses are now replaced by locally generated ones in dongles so cheap they don't have one of their own.
Admin:
  Submission from Colin Granville.

Version 0.35. Tagged as 'EtherUSB-0_35'
@
text
@d1 1
a1 1
/* (0.35)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.35
d9 1
a9 1
#define Module_Date_CMHG                19 Dec 2015
d11 2
a12 2
#define Module_MajorVersion             "0.35"
#define Module_Version                  35
d14 1
a14 1
#define Module_Date                     "19 Dec 2015"
d16 1
a16 1
#define Module_ApplicationDate          "19-Dec-15"
d21 3
a23 3
#define Module_FullVersion              "0.35"
#define Module_HelpVersion              "0.35 (19 Dec 2015)"
#define Module_LibraryVersionInfo       "0:35"
@


1.21
log
@Improve resilience to USB stack hot swapping
Detail:
  Listen out for different service calls so EtherUSB keeps connected even if DeviceFS/USBDriver/HC backends get restarted.
Admin:
  Submission from Colin Granville.

Version 0.34. Tagged as 'EtherUSB-0_34'
@
text
@d1 1
a1 1
/* (0.34)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.34
d9 1
a9 1
#define Module_Date_CMHG                12 Dec 2015
d11 2
a12 2
#define Module_MajorVersion             "0.34"
#define Module_Version                  34
d14 1
a14 1
#define Module_Date                     "12 Dec 2015"
d16 1
a16 1
#define Module_ApplicationDate          "12-Dec-15"
d21 3
a23 3
#define Module_FullVersion              "0.34"
#define Module_HelpVersion              "0.34 (12 Dec 2015)"
#define Module_LibraryVersionInfo       "0:34"
@


1.20
log
@Buffer size correction
Cut and paste mistake from smsc95xx during review.

Version 0.33. Tagged as 'EtherUSB-0_33'
@
text
@d1 1
a1 1
/* (0.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.33
d9 1
a9 1
#define Module_Date_CMHG                20 Oct 2015
d11 2
a12 2
#define Module_MajorVersion             "0.33"
#define Module_Version                  33
d14 1
a14 1
#define Module_Date                     "20 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "20-Oct-15"
d21 3
a23 3
#define Module_FullVersion              "0.33"
#define Module_HelpVersion              "0.33 (20 Oct 2015)"
#define Module_LibraryVersionInfo       "0:33"
@


1.19
log
@Addition of SMSC 75xx backend
Support for USB product ids 0x7500 and 0x7505.
Submission from Colin Granville.

Version 0.32. Tagged as 'EtherUSB-0_32'
@
text
@d1 1
a1 1
/* (0.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.32
d9 1
a9 1
#define Module_Date_CMHG                17 Oct 2015
d11 2
a12 2
#define Module_MajorVersion             "0.32"
#define Module_Version                  32
d14 1
a14 1
#define Module_Date                     "17 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "17-Oct-15"
d21 3
a23 3
#define Module_FullVersion              "0.32"
#define Module_HelpVersion              "0.32 (17 Oct 2015)"
#define Module_LibraryVersionInfo       "0:32"
@


1.18
log
@Further throughput improvements
ax88772.c:
  Modified to work with changes made to net.c and usb.c.
  Increased buffer sizes, allow more than one packet receipt.
ax88172.c/mcs7830.c/pegasus.c:
  Modified to work with changes made to net.c and usb.c.
smsc95xx.c:
  Copyright header simplified by using pronoun form "the copyright holders" rather than repeating this list.
  Modified to work with changes made to net.c and usb.c.
  Reading of MAC address from EEPROM fixed.
products.c:
  Added SMSC9730 device id (uses smsc95xx backend).
net.c/net.h:
  tx_queue removed, all transmit buffering is now done in the USB code.
usb.c:
  Function usb_write() blocks until room is available, or times out.
  Use USBDriver header rather than defining local SWI numbers.
Messages:
  Renamed DescSMC token to DescSMC9.
  Removed redundant Stat7 statistic.

Submission from Colin Granville.
Tested on Pi B+ and OMAP3, not tested on OMAP4, but believed to markedly improve its performance over version 0.30.

Version 0.31. Tagged as 'EtherUSB-0_31'
@
text
@d1 1
a1 1
/* (0.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.31
d9 1
a9 1
#define Module_Date_CMHG                05 Sep 2015
d11 2
a12 2
#define Module_MajorVersion             "0.31"
#define Module_Version                  31
d14 1
a14 1
#define Module_Date                     "05 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "05-Sep-15"
d21 3
a23 3
#define Module_FullVersion              "0.31"
#define Module_HelpVersion              "0.31 (05 Sep 2015)"
#define Module_LibraryVersionInfo       "0:31"
@


1.17
log
@Correction to CMHG veneer types
The FSCV, FindV, UpcallV handlers were marked as generic veneers rather than vector handlers.
Spotted by Colin Granville.

Version 0.30. Tagged as 'EtherUSB-0_30'
@
text
@d1 1
a1 1
/* (0.30)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.30
d9 1
a9 1
#define Module_Date_CMHG                11 Jan 2015
d11 2
a12 2
#define Module_MajorVersion             "0.30"
#define Module_Version                  30
d14 1
a14 1
#define Module_Date                     "11 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jan-15"
d21 3
a23 3
#define Module_FullVersion              "0.30"
#define Module_HelpVersion              "0.30 (11 Jan 2015)"
#define Module_LibraryVersionInfo       "0:30"
@


1.16
log
@Step change improvement in transmit speed
'usb_upcall_hook_handler' removed filling of tx pipe. This fixes problems of the tx pipe being very slow. It was never needed anyway.
When transmitting, the tx pipe is driven by inserts from the socket driver and transfering that data to USB kicks USB writes into action.
Underflow isn't a problem USB will send as data arrives in the buffer.
Submission from Colin Granville.

Testing with a Raspberry Pi connected via LanManFS to a WinXP server *COPYing a 10MB file from SDFS to Windows, and *COPYing it back to null:
  EtherUSB 0.26  uplink   0.07 MB/s
                 downlink 2.96 MB/s
  This version   uplink   1.31 MB/s
                 downlink 3.05 MB/s
inspection in Wireshark shows no dropped TCP segments or ACKs during the test, previously duplicated ACKs and missing segments would cause most of the uplink slowness while the TCP/IP stack backed off for ~1.5s.
Note: other filing systems and use cases may vary.
In the case of the SMSC91xx backend, ticket #342 remains - sending to a 10Mbps server (even if through a 100Mbps switch) causes dropped segments/duplicated ACKs as before.

usb.c: upcall handler change as above.
smsc91xx.c: typos in comments and debug ammended.


Version 0.29. Tagged as 'EtherUSB-0_29'
@
text
@d1 1
a1 1
/* (0.29)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.29
d9 1
a9 1
#define Module_Date_CMHG                30 Aug 2014
d11 2
a12 2
#define Module_MajorVersion             "0.29"
#define Module_Version                  29
d14 1
a14 1
#define Module_Date                     "30 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "30-Aug-14"
d21 3
a23 3
#define Module_FullVersion              "0.29"
#define Module_HelpVersion              "0.29 (30 Aug 2014)"
#define Module_LibraryVersionInfo       "0:29"
@


1.15
log
@Propagate ERR_TX_BLOCKED up the stack
Errors from net_attempt_transmit() are now passed back to the Internet module.
Fix from Colin Granville.

Version 0.28. Tagged as 'EtherUSB-0_28'
@
text
@d1 1
a1 1
/* (0.28)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.28
d9 1
a9 1
#define Module_Date_CMHG                24 Aug 2014
d11 2
a12 2
#define Module_MajorVersion             "0.28"
#define Module_Version                  28
d14 1
a14 1
#define Module_Date                     "24 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "24-Aug-14"
d21 3
a23 3
#define Module_FullVersion              "0.28"
#define Module_HelpVersion              "0.28 (24 Aug 2014)"
#define Module_LibraryVersionInfo       "0:28"
@


1.14
log
@Fixes to reads in the AX88772 backend
'read_packet' changed to read more than 1 ethernet packet. The device actually operates in burst mode so reads can contain more than 1 ethernet packet, the previous version assumed only ever 1 so dropped others.
Size of usb buffer passed to usb_open was reduced as it didn't help being bigger so may as well save memory.
Submission from Colin Granville.

Version 0.27. Tagged as 'EtherUSB-0_27'
@
text
@d1 1
a1 1
/* (0.27)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.27
d11 2
a12 2
#define Module_MajorVersion             "0.27"
#define Module_Version                  27
d21 3
a23 3
#define Module_FullVersion              "0.27"
#define Module_HelpVersion              "0.27 (24 Aug 2014)"
#define Module_LibraryVersionInfo       "0:27"
@


1.13
log
@Internationalised
AutoSense script updated to be able to parse both the hardwired english output (0.08-0.25 inclusive) and internationalised text (0.26+).
Tested RAM loaded on a Raspberry Pi.

Version 0.26. Tagged as 'EtherUSB-0_26'
@
text
@d1 1
a1 1
/* (0.26)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.26
d9 1
a9 1
#define Module_Date_CMHG                13 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "0.26"
#define Module_Version                  26
d14 1
a14 1
#define Module_Date                     "13 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "0.26"
#define Module_HelpVersion              "0.26 (13 Oct 2013)"
#define Module_LibraryVersionInfo       "0:26"
@


1.12
log
@Fix to incorrect polarity report in DCI stats
The polarity information was being stuffed into the wrong stats byte.
Fixes problem reported
  http://www.riscosopen.org/forum/forums/4/topics/2121

Version 0.25. Tagged as 'EtherUSB-0_25'
@
text
@d1 1
a1 1
/* (0.25)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.25
d9 1
a9 1
#define Module_Date_CMHG                04 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "0.25"
#define Module_Version                  25
d14 1
a14 1
#define Module_Date                     "04 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "04-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "0.25"
#define Module_HelpVersion              "0.25 (04 Oct 2013)"
#define Module_LibraryVersionInfo       "0:25"
@


1.11
log
@Add more ways of specifying device configuration. Adjust unit number allocation & SMSC MAC handling.
Detail:
  c/smsc95xx - Adjust MAC handling some more:
    - Unit number check removed from EtherUSB$MAC_Configured code in fill_arbitraryMAC(), to increase compatibility with previous version
    - EtherUSB$MAC_Configured check is now performed before the devices currently-programmed MAC is checked; this should ensure it always takes priority over the other methods (especially when reiniting EtherUSB after setting the variable)
    - OS_ReadSysInfo 4 & machine ID hash checks remain in their previous place, after the currently-programmed MAC check
  c/config, h/config:
    - Add support for using EtherUSB$VP_* and EtherUSB$Loc_* system variables to configure devices, by specifying USB vendor/product IDs or USB device tree locations, respectively.
    - Allow config_reserved_units() to select a devices unit number by looking for VP_ or Loc_ system variables.
  c/net, h/net:
    - Add USB device vendor & product ID, and device tree location, to net_device_t struct.
    - Display vendor/product ID & device tree location in verbose ejinfo output
    - Adjust unit number selection: Attempt to select a unit number before calling backend->start, so that the unit number can be used in MAC allocation if required (i.e. by net_default_mac()).
    - Change net_default_mac() to use OS_ReadSysInfo 5 instead of OS_ReadSysInfo 2; OS_ReadSysInfo 2 strips out the first and last byte of the ID, making the psuedo-unique MAC somewhat less unique.
  c/usb, h/usb - Add utility function for reading the location of a device within the USB device tree.
Admin:
  Tested on BB-xM, Raspberry Pi
  Overriding MAC via EtherUSB$MAC_Configured now works as expected (was previously failing due to unit number being MODULE_MAX_UNITS)
  Unit number reservation/selection & device configuration via all three variable types (MAC, VP, Loc) verified


Version 0.24. Tagged as 'EtherUSB-0_24'
@
text
@d1 1
a1 1
/* (0.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.24
d9 1
a9 1
#define Module_Date_CMHG                07 Apr 2013
d11 2
a12 2
#define Module_MajorVersion             "0.24"
#define Module_Version                  24
d14 1
a14 1
#define Module_Date                     "07 Apr 2013"
d16 1
a16 1
#define Module_ApplicationDate          "07-Apr-13"
d21 3
a23 3
#define Module_FullVersion              "0.24"
#define Module_HelpVersion              "0.24 (07 Apr 2013)"
#define Module_LibraryVersionInfo       "0:24"
@


1.10
log
@Improve SMSC MAC selection
Detail:
  c/net, h/net - Make net_default_mac() non-static. Add net_machine_mac() function for looking up MAC by OS_ReadSysInfo 4.
  c/smsc95xx - Change MAC selection logic. Old order was OS_ReadSysInfo 4 -> EtherUSB$MAC_Configured -> 100% hardcoded default. New order is EtherUSB$MAC_Configured -> OS_ReadSysInfo 4 -> hashed machine ID + unit number -> hardcoded default (with unit number). This new logic means BB-xM's should now have unique MACs instead of all sharing the same MAC.
Admin:
  Tested on BB-xM, Raspberry Pi. Raspberry Pi retains the MAC that's specified by the firmware, while the BB-xM now uses the hashed machine ID instead of the hardcoded default.
  Based on changes supplied by Willi Theiss.


Version 0.23. Tagged as 'EtherUSB-0_23'
@
text
@d1 1
a1 1
/* (0.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.23
d9 1
a9 1
#define Module_Date_CMHG                01 Apr 2013
d11 2
a12 2
#define Module_MajorVersion             "0.23"
#define Module_Version                  23
d14 1
a14 1
#define Module_Date                     "01 Apr 2013"
d16 1
a16 1
#define Module_ApplicationDate          "01-Apr-13"
d21 3
a23 3
#define Module_FullVersion              "0.23"
#define Module_HelpVersion              "0.23 (01 Apr 2013)"
#define Module_LibraryVersionInfo       "0:23"
@


1.9
log
@Tidy up some debugging code
Detail:
  c/net, c/usb - Tidy up some debugging code so it's only active in debug builds.
Admin:
  Changes supplied by Willi Theiss, to fix hangs on restart (on OMAP4) when the SysLog module is active.
  Tested locally on BB-xM


Version 0.22. Tagged as 'EtherUSB-0_22'
@
text
@d1 1
a1 1
/* (0.22)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.22
d9 1
a9 1
#define Module_Date_CMHG                31 Oct 2012
d11 2
a12 2
#define Module_MajorVersion             "0.22"
#define Module_Version                  22
d14 1
a14 1
#define Module_Date                     "31 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "31-Oct-12"
d21 3
a23 3
#define Module_FullVersion              "0.22"
#define Module_HelpVersion              "0.22 (31 Oct 2012)"
#define Module_LibraryVersionInfo       "0:22"
@


1.8
log
@Protect against memory corruption caused by devicefs streams being unexepectedly closed
Detail:
  c/cmodule, c/usb, cmhg/EtherUSBHdr, h/usb - Sit on FSControlV & FindV so we can watch for file closures and catch any attempt to close our devicefs streams. Also need to sit on Service_Reset to make sure FileSwitch doesn't get the vector calls before us.
  If the device streams get closed without our notice, then the next attempt to write to a buffer (or potentially read from one?) via the direct buffer manager calls will result in RMA corruption.
Admin:
  Tested on Raspberry Pi with high processor vectors
  Fixes occasional data aborts while sat on "shutdown complete" screen (since *shutdown will close the devicefs streams)


Version 0.21. Tagged as 'EtherUSB-0_21'
@
text
@d1 1
a1 1
/* (0.21)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.21
d9 1
a9 1
#define Module_Date_CMHG                09 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.21"
#define Module_Version                  21
d14 1
a14 1
#define Module_Date                     "09 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "09-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.21"
#define Module_HelpVersion              "0.21 (09 Sep 2012)"
#define Module_LibraryVersionInfo       "0:21"
@


1.7
log
@Detail:
	Added call to read MAC address from kernel (machineID) if nothing
	available in eeprom.
Admin:
	tested in RPi build


Version 0.20. Tagged as 'EtherUSB-0_20'
@
text
@d1 1
a1 1
/* (0.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.20
d9 1
a9 1
#define Module_Date_CMHG                26 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.20"
#define Module_Version                  20
d14 1
a14 1
#define Module_Date                     "26 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "26-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.20"
#define Module_HelpVersion              "0.20 (26 Aug 2012)"
#define Module_LibraryVersionInfo       "0:20"
@


1.6
log
@Fix null pointer dereference
Detail:
  c/net - In set_inet_variables(), no check was being made for whether OS_ReadVarVal returned an error or not, resulting in a null pointer dereference if <Inet$EtherType> does exist
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.19. Tagged as 'EtherUSB-0_19'
@
text
@d1 1
a1 1
/* (0.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.19
d9 1
a9 1
#define Module_Date_CMHG                24 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.19"
#define Module_Version                  19
d14 1
a14 1
#define Module_Date                     "24 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.19"
#define Module_HelpVersion              "0.19 (24 Jun 2012)"
#define Module_LibraryVersionInfo       "0:19"
@


1.5
log
@Dib slot number set per DCI 4.06.
Changed *EJINFO output to refer to bus/device to match *USBDEVICES nomenclature.

Version 0.18. Tagged as 'EtherUSB-0_18'
@
text
@d1 1
a1 1
/* (0.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.18
d9 1
a9 1
#define Module_Date_CMHG                19 May 2012
d11 2
a12 2
#define Module_MajorVersion             "0.18"
#define Module_Version                  18
d14 1
a14 1
#define Module_Date                     "19 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "19-May-12"
d21 3
a23 3
#define Module_FullVersion              "0.18"
#define Module_HelpVersion              "0.18 (19 May 2012)"
#define Module_LibraryVersionInfo       "0:18"
@


1.4
log
@Save 4.5kB by making the table of errors with objasm (so they're not all padded to 252 bytes by the compiler to fit into _kernel_oserror structs).
The 'moduleerr.s' source should be made redundant by internationalising the module.

Version 0.17. Tagged as 'EtherUSB-0_17'
@
text
@d1 1
a1 1
/* (0.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.17
d11 2
a12 2
#define Module_MajorVersion             "0.17"
#define Module_Version                  17
d21 3
a23 3
#define Module_FullVersion              "0.17"
#define Module_HelpVersion              "0.17 (19 May 2012)"
#define Module_LibraryVersionInfo       "0:17"
@


1.3
log
@Added autosense, and autosense install rule to makefile.
Now uses AsmUtils for irqs_on/irqs_off
Squash a few unused variable warnings, not in the backends though as porting updates would be more complex for those that come from (for example) NetBSD.
Changed to use structure definitions from sys/dcistructs.h (mostly an exercise in prefixing member names).

Version 0.16. Tagged as 'EtherUSB-0_16'
@
text
@d1 1
a1 1
/* (0.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.16
d11 2
a12 2
#define Module_MajorVersion             "0.16"
#define Module_Version                  16
d21 3
a23 3
#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (19 May 2012)"
#define Module_LibraryVersionInfo       "0:16"
@


1.2
log
@Uses common USB header files exported by the USB stack.
Use ModHand/Variables/RISCOS/OsByte headers.
Note, this has meant some header files needed reordering to prevent circular dependencies.

Version 0.15. Tagged as 'EtherUSB-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (19 May 2012)"
#define Module_LibraryVersionInfo       "0:15"
@


1.1
log
@Brought under srccommit control for update of version numbers.
Makefile recreated from fragments
CMHG file renamed to avoid needing special rule to tell where it is.

Version 0.14. Tagged as 'EtherUSB-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (19 May 2012)"
#define Module_LibraryVersionInfo       "0:14"
@

