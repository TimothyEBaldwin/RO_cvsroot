head	1.2;
access;
symbols
	VFPSupport-0_05:1.2
	VFPSupport-0_04:1.2
	VFPSupport-0_03:1.2
	VFPSupport-0_02:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.03.20.23.10.36;	author jlee;	state Exp;
branches;
next	1.1;
commitid	xwwPQIsu8Tow4GXv;

1.1
date	2010.11.25.22.03.21;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Use official error block. Disallow instantiation. Warn clients before finalising.
Detail:
  Resources/UK/Messages, s/Errors, hdr/VFPSupport - Errors now declared in public header. New/updated error messages and symbols.
  s/GetAll - Changed GET order to work with errors in header file
  s/Module - Disallow instantiation. Manually issue Service_ModulePostFinal during finalisation, to give clients slightly more warning than the kernel does.
Admin:
  Tested in OMAP3 ROM


Version 0.03. Tagged as 'VFPSupport-0_03'
@
text
@#{DictTokens}
E00:No VFP/NEON hardware present
E01:Unsupported VFP/NEON version
E02:A requested VFP/NEON feature is unavailable
E03:Bad VFP context
E04:Bad VFPSupport_Features reason code
E06:Only one instance of VFPSupport can be active at a time
@


1.1
log
@Add initial version of VFPSupport module
Detail:
  Initial VFP/NEON support code for RISC OS. Features:
  * Basic detection code for determining VFP version. Should work OK on all architecture versions.
  * Provides code to perform VFP/NEON context switches
  * Context switches can be lazy or immediate
  * Context register dumps can be stored in user-allocated memory or memory allocated by VFPSupport
  * Basic APIs for examining contexts and reporting available hardware features
  * "FastAPI" that privileged code can use for context switching in order to avoid SWI call overheads
  Missing/unfinished features:
  * No VFP exception handler is present, so the module will refuse to run on anything but a VFPv3 system
  * Lazy context switching is simplistic, opting to activate the new context upon the first undefined instruction abort instead of checking to see if it was a VFP instruction that triggered the abort
  * No interface to allow debuggers to easily get their hands on a register dump following a crash
  * No code to automatically clean up contexts left behind by dying programs
  * Can't be used by FIQ handlers, or from code called by an FIQ handler
  * Currently uses an error base of 0!
  Other notes:
  * Doc/vfpversions contains some random notes about the different VFP/NEON versions
  * Test/test1,ffb is a BASIC program that tests most of the module's functionality
Admin:
  Tested on Iyonix & Beagleboard. Iyonix version exits correctly, while Beagleboard version passes all tests in the test1 script.
  Need to sort out proper error numbers, and translate the error messages.


Version 0.01. Not tagged
@
text
@d2 6
a7 5
NoVFP:No VFP/NEON hardware present
BadVFP:Unsupported VFP/NEON version
FeatureUnavailable:A requested feature is unavailable
BadContext:Bad context
BadFeature:Bad VFPSupport_Features reason code
@

