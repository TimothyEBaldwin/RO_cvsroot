head	1.5;
access;
symbols
	VFPSupport-0_05:1.5
	VFPSupport-0_04:1.4
	VFPSupport-0_03:1.3
	VFPSupport-0_02:1.2;
locks; strict;
comment	@# @;


1.5
date	2012.10.18.23.48.14;	author jlee;	state Exp;
branches;
next	1.4;
commitid	BqLZHUZxFFaXsVow;

1.4
date	2012.07.21.13.24.05;	author jlee;	state Exp;
branches;
next	1.3;
commitid	6mlQ2UpqqdicSqdw;

1.3
date	2012.03.20.23.10.33;	author jlee;	state Exp;
branches;
next	1.2;
commitid	xwwPQIsu8Tow4GXv;

1.2
date	2011.02.01.22.52.58;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.25.21.41.12;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Fix save/restore of contexts which have pending exceptions
Detail:
  s/Module - Fixed context save & restore code to ensure FPEXC EX & FP2V bits are clear when accessing FPSCR and the main VFP registers. Without doing this, attempting to save or restore a context which has a pending exception will trigger an exception itself.
  Test/test2,ffb - Simple test to make sure save/restore of contexts with pending exceptions works properly
  Test/test1,ffb - Added brief description, changed file from plain text to tokenised BASIC to prevent it accidentally happening later on
Admin:
  Tested on Raspberry Pi
  Programs which need support code to run or trigger math exceptions no longer trigger an undefined instruction abort from within VFPSupport


Version 0.05. Tagged as 'VFPSupport-0_05'
@
text
@/* (0.05)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.05
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                19 Oct 2012

#define Module_MajorVersion             "0.05"
#define Module_Version                  5
#define Module_MinorVersion             ""
#define Module_Date                     "19 Oct 2012"

#define Module_ApplicationDate          "19-Oct-12"

#define Module_ComponentName            "VFPSupport"
#define Module_ComponentPath            "bsd/RiscOS/Sources/HWSupport/VFPSupport"

#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (19 Oct 2012)"
#define Module_LibraryVersionInfo       "0:5"
@


1.4
log
@Add initial VFPv1/VFPv2 support
Detail:
  s/Module:
  - CheckHardware can now correctly determine that the ARM1176JZF-S is ARMv6, not ARMv7
  - Added initial support for VFPv1/v2; currently only supports implementations that use FSTMX/FLDMX standard format 1, and for which we know we can read the MVFR0/MVFR1 registers. I.e. only VFP11 supported at present.
  - Fixed null pointer dereference in ExamineContext when examining the active context
Admin:
  Tested on Raspberry Pi with high processor vectors
  Note there is no support code present, so using the coprocessor outside of RunFast mode will result in aborts.


Version 0.04. Tagged as 'VFPSupport-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                21 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "21 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (21 Jul 2012)"
#define Module_LibraryVersionInfo       "0:4"
@


1.3
log
@Use official error block. Disallow instantiation. Warn clients before finalising.
Detail:
  Resources/UK/Messages, s/Errors, hdr/VFPSupport - Errors now declared in public header. New/updated error messages and symbols.
  s/GetAll - Changed GET order to work with errors in header file
  s/Module - Disallow instantiation. Manually issue Service_ModulePostFinal during finalisation, to give clients slightly more warning than the kernel does.
Admin:
  Tested in OMAP3 ROM


Version 0.03. Tagged as 'VFPSupport-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                20 Mar 2012
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "20 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-Mar-12"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (20 Mar 2012)"
#define Module_LibraryVersionInfo       "0:3"
@


1.2
log
@Tweak VFPSupport API and add support for contexts stored in application space
Detail:
  s/Module, hdr/VFPSupport - New/changed features:
  - Contexts can now be flagged as being in application space if they're created with the VFPSupport_Context_AppSpace flag
  - VFPSupport_ChangeContext accepts a VFPSupport_ChangeContext_AppSpace flag, which will force the context change to occur in a nonlazy manner if the currently active context is in application space
  - VFPSupport_CreateContext accepts a VFPSupport_CreateContext_LazyActivate flag, to indicate that after creation the context should be activated lazily (unlike VFSupport_CreateContext_Activate)
  - VFPSupport_Context_Activate renamed to VFPSupport_CreateContext_Activate for clarity
  - VFPSupport_CheckContext now ignores the Activate/LazyActivate flags, so the same flag word can be passed to Check & Create
  - "Context ID" simplified to just "Context pointer", as an indiciation of the fact that I now have no plans to make VFPSupport keep a master list of extant contexts
    - This makes it legal for programs to move/copy/delete contexts as long as they've made sure that the ExamineContext doesn't indicate that any part of the context is active
  - VFPSupport_ExamineContext now returns the context size in R4 instead of the context ID
  Test/test1,ffb - Updated to work with new API
Admin:
  Tested on rev A2 BB-xM.
  VFPSupport_ExamineContext change is backwards-incompatible!


Version 0.02. Tagged as 'VFPSupport-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                01 Feb 2011
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "01 Feb 2011"
d16 1
a16 1
#define Module_ApplicationDate          "01-Feb-11"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (01 Feb 2011)"
#define Module_LibraryVersionInfo       "0:2"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                25 Nov 2010
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "25 Nov 2010"
d16 1
a16 1
#define Module_ApplicationDate          "25-Nov-10"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (25 Nov 2010)"
#define Module_LibraryVersionInfo       "0:1"
@

