head	1.5;
access;
symbols
	PandoraKey-0_40:1.5
	PandoraKey-0_39:1.5
	PandoraKey-0_38:1.4
	PandoraKey-0_37:1.3
	PandoraKey-0_36:1.3
	PandoraKey-0_35:1.2
	PandoraKey-0_34:1.1
	PandoraKey-0_33:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.11.19.08.50.17;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	MjoKy0Ubmz2FJRdx;

1.4
date	2012.12.05.01.51.44;	author jlee;	state Exp;
branches;
next	1.3;
commitid	tr2TJbLoDrcDDYuw;

1.3
date	2012.09.30.16.40.45;	author jlee;	state Exp;
branches;
next	1.2;
commitid	1ciBVWwgjq19Gzmw;

1.2
date	2012.09.27.01.14.17;	author jlee;	state Exp;
branches;
next	1.1;
commitid	2xstkR6TMK9hE6mw;

1.1
date	2012.09.20.20.17.31;	author jlee;	state Exp;
branches;
next	;
commitid	uhAYkPZf1YUpcjlw;


desc
@@


1.5
log
@Internationalised
Keyboard name now read from messages file at startup.
Changed to use _swix instead of _kernel_swi.
Reindented init/final functions to match other indent-of-2 style.

Version 0.39. Tagged as 'PandoraKey-0_39'
@
text
@/** @@file

  Implements ... under RISC OS.

  */
/* Created 08.10.2011 T. Milius
   Changed 01.04.2012 T. Milius */
/* Copyright (c) 2011-2012 by Thomas Milius Stade, Germany
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Thomas Milius Stade, Germany nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY Thomas Milius Stade, Germany ``AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL Thomas Milius Stade, Germany BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
/** @@mainpage
    @@author Thomas Milius Stade, Germany
    @@version 0.32
    @@date 01.04.2012

 Implements ... under RISC OS.

    */
/* RISC OS */

/* !!!!!!!!!! libraries !!!!!!!!!! */
/* ---------- ANSI-C ---------- */

/* ------------ RISC OS ------------ */

/* ------------ Own ------------ */

/* !!!!!!!!!!! definitions !!!!!!!!!! */

typedef struct
{
  int  errnum;
  char errmess[8];
} internat_err;

#define KEYBOARD_TYPE KeyboardID_Pandora
#define POINTER_TYPE PointerDevice_Pandora

#define MAX_COLUMNS 8
#define MAX_ROWS 8
#define ROW_STATUS_ARRAY_SIZE 2

#define KEYPAD_IIC_ADDRESS (0x4A<<1)

#define KEYPAD_BASE_ADDRESS 0xD2

#define KEYPAD_REGOFFSET_CTRL     0x00
#define KEYPAD_REGOFFSET_DEB      0x01
#define KEYPAD_REGOFFSET_LONGKEY  0x02
#define KEYPAD_REGOFFSET_LKPTV    0x03
#define KEYPAD_REGOFFSET_TIMEOUTL 0x04
#define KEYPAD_REGOFFSET_TIMEOUTH 0x05
#define KEYPAD_REGOFFSET_KBC      0x06
#define KEYPAD_REGOFFSET_KBR      0x07
#define KEYPAD_REGOFFSET_SMS      0x08
#define KEYPAD_REGOFFSET_ISR1     0x11
#define KEYPAD_REGOFFSET_IMR1     0x12
#define KEYPAD_REGOFFSET_ISR2     0x13
#define KEYPAD_REGOFFSET_IMR2     0x14
#define KEYPAD_REGOFFSET_SIR      0x15
#define KEYPAD_REGOFFSET_EDR      0x16
#define KEYPAD_REGOFFSET_SIH_CTRL 0x17

#define KEYPAD_CTRL_SOFT_NRST  0x01
#define KEYPAD_CTRL_SOFTMOD_EN 0x02
#define KEYPAD_CTRL_LK_EN      0x04
#define KEYPAD_CTRL_TOE_EN     0x08
#define KEYPAD_CTRL_TOLE_EN    0x10
#define KEYPAD_CTRL_RP_EN      0x20
#define KEYPAD_CTRL_KBD_ON     0x40

#define KEYPAD_INT_KP  0x01
#define KEYPAD_INT_LK  0x02
#define KEYPAD_INT_TO  0x04
#define KEYPAD_INT_MIS 0x08

#define KEYPAD_EDR_KP_F 0x01
#define KEYPAD_EDR_KP_R 0x02
#define KEYPAD_EDR_LK_R 0x04
#define KEYPAD_EDR_LK_F 0x08
#define KEYPAD_EDR_TO_F 0x10
#define KEYPAD_EDR_TO_R 0x20
#define KEYPAD_EDR_MI_F 0x40
#define KEYPAD_EDR_MI_R 0x80

/* Pandora rows    -> high octal digit
   Pandora columns -> low  octal digit */
#define PANDORA_KEY_FN    025

#define SPECIAL_KEY_FN         0x1
#define SPECIAL_KEY_FN_STICKY  0x2
#define SPECIAL_KEY_FN_LOCK    0x4

#define KEYMAPPING_NOTHING 0xFFFFFFFF


/* !!!!!!!!!! support functions !!!!!!!!!! */

/* !!!!!!!!!! functions !!!!!!!!!! */

extern int mouse_x,mouse_y;
@


1.4
log
@Rewrite keyboard handling to use the new Pandora keyboard type
Detail:
  c/pandorakey, h/pandorakey:
  - Keyboard handling rewritten and simplified in the process. Instead of pretending to be a PC keyboard we now identify ourselves as a Pandora keyboard, and leave InternationalKeyboard to deal with all the keyboard layout issues. The new code means that multiple keys can now be pressed at once, and modifiers like shift & ctrl generate key press/release events properly.
  - Added support for the KeyV KeyboardRemoved reason code, to allow us to reinstate our keyboard type after all USB keyboards have been disconnected.
  - Fixed mouse handling dropping the bottom bit of the internal X/Y coords instead of preserving it
  c/gpiokey, h/gpiokey:
  - Add support for the lid sensor 'key', which registers as pressed when the lid is closed.
  - Changed the Pandora key to use the keycode of the left Windows key instead of Alt-Gr
Admin:
  Tested on Pandora
  Requires IntKey-0_95 to be useful at runtime


Version 0.38. Tagged as 'PandoraKey-0_38'
@
text
@d51 6
@


1.3
log
@Fix tilde, back tick, forward tick. Strip out redundant FN U, FN I code.
Detail:
  c/pandorakey, h/pandorakey - Fixed mappings for tidle, back tick, and forward tick. Stripped out redundant FN U, FN I code (not needed now that we have ctrl + alt on the GPIO keys)
Admin:
  Tested on Pandora


Version 0.36. Tagged as 'PandoraKey-0_36'
@
text
@d51 2
a52 4
/* Emulates PC/AT. Else key handler would be required. */
#define KEYBOARD_TYPE KeyboardID_PC
/* Allocated from ROOL */
#define POINTER_TYPE 0x0F
d54 1
a54 2
#define MAX_COLUMNS 6
#define DELIVERED_COLUMNS 8
d58 1
a58 1
#define KEYPAD_IIC_ADDRESS 0x4A<<1
d101 7
a107 13
/* Pandora rows    -> high Hexdigit
   Pandora columns -> low  Hexdigit */
#define PANDORA_KEY_SHIFT 0x73
#define PANDORA_KEY_FN    0x25
#define PANDORA_KEY_ENTER 0x70

#define SPECIAL_KEY_SHIFT_LOCK 0x00100000
#define SPECIAL_KEY_ENTER_LOCK 0x00200000

#define SPECIAL_KEY_SHIFT      0x01000000
#define SPECIAL_KEY_ALT        0x02000000
#define SPECIAL_KEY_ALT_GR     0x04000000
#define SPECIAL_KEY_CTRL       0x08000000
d109 1
a109 2
#define SPECIAL_KEY_FN         0x00200000
#define SPECIAL_KEY_ENTER      0x00040000
a110 1
#define KEYMAPPING_NOTHING 0xFFFFFFFF
@


1.2
log
@Add support for nubs + GPIO keys. Tidy up a few bits.
Detail:
  c/gpio, h/gpio - General GPIO handling code
  c/gpiokey, h/gpiokey - Code for handling the GPIO-attached keys (gamepad buttons), to emulate some extra keyboard keys
  c/nubs, h/nubs - Code for handling the analogue nubs, to emulate mouse input
  c/pandorakey, h/pandorakey - Moved data arrays to C file to avoid multiply defined symbols when header is #included elsewhere. Changed to use exported definitions for key & vector numbers instead of local definitons. Removed from the keyboard matrix handling the bits which are now handled by the nubs & GPIO keys. Use OS_IICOp for IIC transfers to ensure register reads don't get interrupted by other transfers.
  Makefile - Added new files
Admin:
  Tested on Pandora


Version 0.35. Tagged as 'PandoraKey-0_35'
@
text
@a107 2
#define PANDORA_KEY_U     0x12
#define PANDORA_KEY_I     0x02
a118 2
#define SPECIAL_KEY_U          0x00010000
#define SPECIAL_KEY_I          0x00020000
@


1.1
log
@Add Thomas Milius' PandoraKey module
Detail:
  Kindly donated by Thomas Milius, this module provides a keyboard & mouse driver for the builtin keyboard of the Pandora handheld.
  This is version 0.32 of the module, with minor tweaks to allow it to be built by the ROOL build system.
  At the moment the driver only supports the use of the Pandora's keyboard; gamepad and nub support is forthcoming.
Admin:
  Builds but untested


Version 0.33. Tagged as 'PandoraKey-0_33'
@
text
@a49 3
#define VECTOR_KEYV     0x00000013
#define VECTOR_POINTERV 0x00000026
#define VECTOR_TICKERV  0x0000001C
d52 1
a52 1
#define KEYBOARD_TYPE 2
a125 199
#define MOUSE_DIRECTION_NONE  0
#define MOUSE_DIRECTION_UP    1
#define MOUSE_DIRECTION_DOWN  2
#define MOUSE_DIRECTION_LEFT  3
#define MOUSE_DIRECTION_RIGHT 4
#define MOUSE_ACTION       0x00010000
#define MOUSE_ACTION_UP    (MOUSE_ACTION | MOUSE_DIRECTION_UP)
#define MOUSE_ACTION_DOWN  (MOUSE_ACTION | MOUSE_DIRECTION_DOWN)
#define MOUSE_ACTION_LEFT  (MOUSE_ACTION | MOUSE_DIRECTION_LEFT)
#define MOUSE_ACTION_RIGHT (MOUSE_ACTION | MOUSE_DIRECTION_RIGHT)


#define RISCOS_KEYCODE_ESC        0x00
#define RISCOS_KEYCODE_F1         0x01
#define RISCOS_KEYCODE_F2         0x02
#define RISCOS_KEYCODE_F3         0x03
#define RISCOS_KEYCODE_F4         0x04
#define RISCOS_KEYCODE_F5         0x05
#define RISCOS_KEYCODE_F6         0x06
#define RISCOS_KEYCODE_F7         0x07
#define RISCOS_KEYCODE_F8         0x08
#define RISCOS_KEYCODE_F9         0x09
#define RISCOS_KEYCODE_F10        0x0A
#define RISCOS_KEYCODE_F11        0x0B
#define RISCOS_KEYCODE_F12        0x0C
#define RISCOS_KEYCODE_PRINT      0x0D
#define RISCOS_KEYCODE_SCROLLOCK  0x0E
#define RISCOS_KEYCODE_BREAK      0x0F
#define RISCOS_KEYCODE_BACKTICK   0x10
#define RISCOS_KEYCODE_1          0x11
#define RISCOS_KEYCODE_2          0x12
#define RISCOS_KEYCODE_3          0x13
#define RISCOS_KEYCODE_4          0x14
#define RISCOS_KEYCODE_5          0x15
#define RISCOS_KEYCODE_6          0x16
#define RISCOS_KEYCODE_7          0x17
#define RISCOS_KEYCODE_8          0x18
#define RISCOS_KEYCODE_9          0x19
#define RISCOS_KEYCODE_0          0x1A
#define RISCOS_KEYCODE_MINUS      0x1B
#define RISCOS_KEYCODE_EQUAL      0x1C
#define RISCOS_KEYCODE_BACKSLASH  0x1D
#define RISCOS_KEYCODE_BACKSPACE  0x1E
#define RISCOS_KEYCODE_INS        0x1F
#define RISCOS_KEYCODE_HOME       0x20
#define RISCOS_KEYCODE_PAGE_UP    0x21
#define RISCOS_KEYCODE_STAR       0x24
#define RISCOS_KEYCODE_GATTER     0x25
#define RISCOS_KEYCODE_TAB        0x26
#define RISCOS_KEYCODE_Q          0x27
#define RISCOS_KEYCODE_W          0x28
#define RISCOS_KEYCODE_E          0x29
#define RISCOS_KEYCODE_R          0x2A
#define RISCOS_KEYCODE_Y          0x2C
#define RISCOS_KEYCODE_T          0x2B
#define RISCOS_KEYCODE_U          0x2D
#define RISCOS_KEYCODE_I          0x2E
#define RISCOS_KEYCODE_O          0x2F
#define RISCOS_KEYCODE_P          0x30
#define RISCOS_KEYCODE_BRACKET_O  0x31
#define RISCOS_KEYCODE_BRACKET_C  0x32
#define RISCOS_KEYCODE_DEL        0x34
#define RISCOS_KEYCODE_END        0x35
#define RISCOS_KEYCODE_PAGE_DOWN  0x36
#define RISCOS_KEYCODE_NP7        0x37
#define RISCOS_KEYCODE_NP8        0x38
#define RISCOS_KEYCODE_NP9        0x39
#define RISCOS_KEYCODE_CTRL_L     0x3B
#define RISCOS_KEYCODE_A          0x3C
#define RISCOS_KEYCODE_S          0x3D
#define RISCOS_KEYCODE_D          0x3E
#define RISCOS_KEYCODE_F          0x3F
#define RISCOS_KEYCODE_G          0x40
#define RISCOS_KEYCODE_H          0x41
#define RISCOS_KEYCODE_J          0x42
#define RISCOS_KEYCODE_K          0x43
#define RISCOS_KEYCODE_L          0x44
#define RISCOS_KEYCODE_COLON      0x45
#define RISCOS_KEYCODE_TICK       0x46
#define RISCOS_KEYCODE_RETURN     0x47
#define RISCOS_KEYCODE_NP4        0x48
#define RISCOS_KEYCODE_NP5        0x49
#define RISCOS_KEYCODE_NP6        0x4A
#define RISCOS_KEYCODE_SHIFT_L    0x4C
#define RISCOS_KEYCODE_Z          0x4E
#define RISCOS_KEYCODE_X          0x4F
#define RISCOS_KEYCODE_C          0x50
#define RISCOS_KEYCODE_V          0x51
#define RISCOS_KEYCODE_B          0x52
#define RISCOS_KEYCODE_N          0x53
#define RISCOS_KEYCODE_M          0x54
#define RISCOS_KEYCODE_COMMA      0x55
#define RISCOS_KEYCODE_DOT        0x56
#define RISCOS_KEYCODE_SLASH      0x57
#define RISCOS_KEYCODE_CURSOR_U   0x59
#define RISCOS_KEYCODE_NP1        0x5A
#define RISCOS_KEYCODE_NP2        0x5B
#define RISCOS_KEYCODE_NP3        0x5C
#define RISCOS_KEYCODE_SHIFT_LOCK 0x5D
#define RISCOS_KEYCODE_ALT_L      0x5E
#define RISCOS_KEYCODE_SPACE      0x5F
#define RISCOS_KEYCODE_ALT_R      0x60
#define RISCOS_KEYCODE_CURSOR_L   0x62
#define RISCOS_KEYCODE_CURSOR_D   0x63
#define RISCOS_KEYCODE_CURSOR_R   0x64
#define RISCOS_KEYCODE_SELECT     0x70
#define RISCOS_KEYCODE_MENU       0x71
#define RISCOS_KEYCODE_ADJUST     0x72


/* !!!!!!!!!! data structures !!!!!!!!!! */
unsigned char keypad_regoffset_rowcontent[MAX_ROWS]={0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10};

unsigned long key_mapping[4][MAX_ROWS][MAX_COLUMNS]={
/* Take old English RiscPC documentation to decode. */
/* No Shift, no FN */
{
/* Row 0 */
{RISCOS_KEYCODE_9, RISCOS_KEYCODE_8, RISCOS_KEYCODE_I, RISCOS_KEYCODE_J, RISCOS_KEYCODE_N, RISCOS_KEYCODE_M},
/* Row 1 */
{RISCOS_KEYCODE_0, RISCOS_KEYCODE_7, RISCOS_KEYCODE_U, RISCOS_KEYCODE_H, RISCOS_KEYCODE_B, RISCOS_KEYCODE_SPACE},
/* Row 2 */
/* ignore FN. handled elsewhere */
{RISCOS_KEYCODE_BACKSPACE, RISCOS_KEYCODE_6, RISCOS_KEYCODE_Y, RISCOS_KEYCODE_G, RISCOS_KEYCODE_V, KEYMAPPING_NOTHING},
/* Row 3 */
{RISCOS_KEYCODE_O, RISCOS_KEYCODE_5, RISCOS_KEYCODE_T, RISCOS_KEYCODE_F, RISCOS_KEYCODE_C, KEYMAPPING_NOTHING},
/* Row 4 */
{RISCOS_KEYCODE_P,RISCOS_KEYCODE_4, RISCOS_KEYCODE_R, RISCOS_KEYCODE_D, RISCOS_KEYCODE_X, KEYMAPPING_NOTHING},
/* Row 5 */
{RISCOS_KEYCODE_K, RISCOS_KEYCODE_3, RISCOS_KEYCODE_E, RISCOS_KEYCODE_S, RISCOS_KEYCODE_Z, KEYMAPPING_NOTHING},
/* Row 6 */
{RISCOS_KEYCODE_L, RISCOS_KEYCODE_2, RISCOS_KEYCODE_W, RISCOS_KEYCODE_A, RISCOS_KEYCODE_DOT, KEYMAPPING_NOTHING},
/* Row 7 */
/* ignore Shift. handled elsewhere */
{RISCOS_KEYCODE_RETURN, RISCOS_KEYCODE_1, RISCOS_KEYCODE_Q, KEYMAPPING_NOTHING, RISCOS_KEYCODE_COMMA, KEYMAPPING_NOTHING}
},
/* Shift, no FN */
{
/* Row 0 */
{RISCOS_KEYCODE_BRACKET_O, RISCOS_KEYCODE_STAR, RISCOS_KEYCODE_I | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_J | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_N | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_M | SPECIAL_KEY_SHIFT},
/* Row 1 */
{RISCOS_KEYCODE_BRACKET_C, RISCOS_KEYCODE_7 | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_U | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_H | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_B | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_SPACE | SPECIAL_KEY_SHIFT},
/* Row 2 */
/* ignore FN. handled elsewhere */
{RISCOS_KEYCODE_DEL, RISCOS_KEYCODE_6 | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_Y | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_G | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_V | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING},
/* Row 3 */
{RISCOS_KEYCODE_O | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_5 | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_T | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_F | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_C | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING},
/* Row 4 */
{RISCOS_KEYCODE_P | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_COLON | SPECIAL_KEY_ALT_GR, RISCOS_KEYCODE_R | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_D | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_X | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING},
/* Row 5 */
{RISCOS_KEYCODE_K | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_BRACKET_C | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_E | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_S | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_Z | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING},
/* Row 6 */
{RISCOS_KEYCODE_L | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_BRACKET_O | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_W | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_A | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_DOT | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING},
/* Row 7 */
/* ignore Shift. handled elsewhere */
{RISCOS_KEYCODE_RETURN | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_S | SPECIAL_KEY_SHIFT | SPECIAL_KEY_ALT_GR, RISCOS_KEYCODE_Q | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING, RISCOS_KEYCODE_COMMA | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING}
},
/* No Shift, FN */
{
/* Row 0 */
{RISCOS_KEYCODE_F9, RISCOS_KEYCODE_F8, KEYMAPPING_NOTHING, RISCOS_KEYCODE_BRACKET_C | SPECIAL_KEY_ALT_GR, RISCOS_KEYCODE_4 | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_4 | SPECIAL_KEY_ALT_GR},
/* Row 1 */
{RISCOS_KEYCODE_F10, RISCOS_KEYCODE_F7, KEYMAPPING_NOTHING, RISCOS_KEYCODE_BRACKET_O | SPECIAL_KEY_ALT_GR, RISCOS_KEYCODE_BACKSLASH | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_TAB},
/* Row 2 */
/* ignore FN. handled elsewhere */
{RISCOS_KEYCODE_INS, RISCOS_KEYCODE_F6, RISCOS_KEYCODE_MINUS | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_EQUAL, RISCOS_KEYCODE_GATTER, KEYMAPPING_NOTHING},
/* Row 3 */
{RISCOS_KEYCODE_F11, RISCOS_KEYCODE_F5, RISCOS_KEYCODE_1  | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_EQUAL | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_BACKSLASH, KEYMAPPING_NOTHING},
/* Row 4 */
{RISCOS_KEYCODE_F12, RISCOS_KEYCODE_F4, RISCOS_KEYCODE_0 | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_MINUS, RISCOS_KEYCODE_SLASH | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING},
/* Row 5 */
{RISCOS_KEYCODE_3 | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_F3, RISCOS_KEYCODE_9 | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_2  | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_SLASH, KEYMAPPING_NOTHING},
/* Row 6 */
{RISCOS_KEYCODE_Y | SPECIAL_KEY_SHIFT | SPECIAL_KEY_ALT_GR, RISCOS_KEYCODE_F2, RISCOS_KEYCODE_TICK | SPECIAL_KEY_SHIFT, RISCOS_KEYCODE_TICK, RISCOS_KEYCODE_COLON | SPECIAL_KEY_SHIFT, KEYMAPPING_NOTHING},
/* Row 7 */
/* ignore Shift. handled elsewhere */
{KEYMAPPING_NOTHING, RISCOS_KEYCODE_F1, RISCOS_KEYCODE_ESC, KEYMAPPING_NOTHING, RISCOS_KEYCODE_COLON, KEYMAPPING_NOTHING}
},
/* Shift, FN is CAPS LOCK. handled elsewhere */
/* Special block FN ENTER modus */
{
/* Row 0 */
{KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, MOUSE_ACTION_UP, MOUSE_ACTION_LEFT, KEYMAPPING_NOTHING, MOUSE_ACTION_DOWN},
/* Row 1 */
{KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, KEYMAPPING_NOTHING},
/* Row 2 */
{RISCOS_KEYCODE_BACKSPACE, KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, RISCOS_KEYCODE_PAGE_DOWN, KEYMAPPING_NOTHING},
/* Row 3 */
{KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, RISCOS_KEYCODE_PAGE_UP, RISCOS_KEYCODE_CURSOR_R, RISCOS_KEYCODE_CURSOR_D, KEYMAPPING_NOTHING},
/* Row 4 */
{RISCOS_KEYCODE_F12, KEYMAPPING_NOTHING, RISCOS_KEYCODE_CURSOR_U, RISCOS_KEYCODE_CURSOR_L, KEYMAPPING_NOTHING, KEYMAPPING_NOTHING},
/* Row 5 */
{MOUSE_ACTION_RIGHT, KEYMAPPING_NOTHING, RISCOS_KEYCODE_ADJUST, RISCOS_KEYCODE_END, RISCOS_KEYCODE_PRINT, KEYMAPPING_NOTHING},
/* Row 6 */
{KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, RISCOS_KEYCODE_MENU, RISCOS_KEYCODE_HOME, RISCOS_KEYCODE_SCROLLOCK, KEYMAPPING_NOTHING},
/* Row 7 */
{KEYMAPPING_NOTHING, KEYMAPPING_NOTHING, RISCOS_KEYCODE_SELECT, KEYMAPPING_NOTHING, RISCOS_KEYCODE_BREAK, KEYMAPPING_NOTHING}
}
};
d130 2
@

