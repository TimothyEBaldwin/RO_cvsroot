head	1.5;
access;
symbols
	SharedSnd-0_49:1.4
	bavison_SharedSnd-0_48:1.3
	SharedSnd-0_48:1.2
	Spin_merge:1.1.2.2
	afrost_NC2_Generic:1.1.2.2
	afrost_Funai01-33:1.1.2.2
	smiddle_0_43:1.1.2.1
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2001.06.28.18.11.57;	author bavison;	state dead;
branches;
next	1.4;

1.4
date	2001.01.16.15.28.02;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.15.14.04.16;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	98.11.02.16.36.18;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.11.06.14.18.14;	author smiddle;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.11.06.14.18.14;	author smiddle;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.11.06.14.44.11;	author smiddle;	state Exp;
branches;
next	;


desc
@Files for new SharedSound build
@


1.5
log
@  Import of version 1.00 of SharedSound from WSS - this is a merge of
  RISC OS Ltd, ESP and Pace sources. I've added the Makefile, Mk* and
  VersionNum files.

Detail (courtesy of WSS):
  * Incorporates fixes made to 0.58c to fix the callbacks on sound
    rate changes.

  * Incorporates RISC OS Ltd changes to response to
    TaskManager_Acknowledgements service.

  * Includes 8 bit Log and PowerWave drivers.

  * Now built with Objasm, not BASIC assembler.

  * SharedSound_HandlerInfo SWI fixed to conform to spec. Also
    extended to accept r0 = 0 on entry, in which case r0 = number of
    first registered handler (or 0 for none) on exit; R1-R5 corrupted.

    Therefore the following code enumerates handlers:

    REM Get first handler number.
    SYS "SharedSound_HandlerInfo",0 TO next% ; flags%
    REM While no errors, and not finished
    WHILE (next% <> 0) AND ((flags% AND 1) = 0)
     SYS"SharedSound_HandlerInfo",next% TO next%,a%,b%,c%,d%,e%
    ENDWHILE

  * Sends Service_Sound (&54) with reason code 6 (SharedSound Starting)
    on (callback after) initialisation.

  * Sends Service_Sound (&54) with reason code 7 (SharedSound Dying)
    on finalisation.

  * Some small optimisations

  * Version bumped to 1.00 (to allow RISC OS Ltd space to make changes
    to their versions).

  * Table of helpful fill code routines now passed to handlers in R8.

  * SharedSound reinitialises correctly on lower layers reinitialising.

  * More care taken to remove outstanding callbacks on finalise.

  * Dual 26/32 bit version.

Admin:
  * Not tested by us.

  * 8-bit sound system code is known not to be ROM safe. However, it is
    currently switched out (see the doLog option in s.Gets).

  * This version *will not work* on a 32-bit system. There are at least two
    issues with it that I've spotted with a quick glance through the code -
    the lack of the module flags word, and an unconditional TEQP instruction.
    This version has been checked in nevertheless as a record of what WSS
    delivered to us.

Version 1.00. Tagged as 'SharedSnd-1_00'
@
text
@/* Copyright (c) 1995, Expressive Software Projects
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Expressive Software Projects nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL EXPRESSIVE SOFTWARE PROJECTS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

The workspace for SharedSound represents the workspace for one driver
activity with a number of associated streams and handlers.
The same code could be used with another instantiation to control the
activity via another output driver.


DEFPROCSetStart
LOCAL er$
er$="Set"
PRINT "PROCSet"

swiBase%=&4B440
Overflow_Flag=1<<28
Zero_Flag=1<<30
Iflag%=&08000000
I32flag%=&80
SVC_Mode%=3

Sound_LinearHandler%=&40145
XSound_LinearHandler%=&60145
Sound_Mode%=&40144
Sound_SampleRate%=&40146

REM Sound flags

soundFlag_Mix%=1
soundFlag_Period%=1<<8
soundFlag_Log%=1<<9

REM --------- Handler table stuff

handler_Address%=0
handler_Parameter%=4
handler_Flags%=8
handler_SampleFrequency%=12
handler_Volume%=16
handler_Type%=20
handler_Fraction%=24
handler_VolumeScaled%=28
handler_Name%=32

  handlerNameLen%=32
  handlerTableLen%=handler_Name%+handlerNameLen%

handlerMax%=10  :REM  Maximum number of handlers

handlerType_Immediate%=0
handlerType_CallBack%=1
handlerType_Process%=2

handlerType_Default%=handlerType_Immediate%

REM ---------- Driver table stuff

d%=0
driver_Address%      =d%:d%+=4
driver_Parameter%    =d%:d%+=4
driver_Flags%        =d%:d%+=4
driver_Volume%       =d%:d%+=4
driver_VolumeScaled% =d%:d%+=4
driver_Name%         =d%:d%+=4

driverTableLen%=d%

driverMax%=1  :REM Maximum number of drivers

REM Call entries in table

A%=0
driverEntry_Install%    =A%:A%+=4
driverEntry_Remove%     =A%:A%+=4
driverEntry_Fill%       =A%:A%+=4
driverEntry_SampleRate% =A%:A%+=4
driverEntry_Volume%     =A%:A%+=4
driverEntry_Mixer%      =A%:A%+=4

driverEntryLen%=A%


REM --------- Workspace variable offsets

A%=0
work_memSize%=A%:A%+=4        :REM Current memory size
work_privateWord%=A%:A%+=4    :REM R12 module private word pointer
work_currentDriver%=A%:A%+=4  :REM Driver = 1,2 or External, 0 = none
work_SoundPause%=A%:A%+=4     :REM Pause flag for handler fill code
work_SoundActive%=A%:A%+=4    :REM Flag set by handler fill code when active
work_SampleFrequency%=A%:A%+=4:REM Current sample frequency
work_SamplePeriod%=A%:A%+=4   :REM Current sample period

work_ImmediateHandlers%=A%:A%+=4 :REM Bit map of immediate handlers
work_CallBackHandlers%=A%:A%+=4 :REM Bit map of call back handlers
work_ProcessHandlers%=A%:A%+=4  :REM Bit map of process handlers

work_ControlWord%=A%:A%+=4    :REM Control word for Replay
A%+=4

work_DriverEntryTable%=A%:A%+=driverEntryLen%

work_handlerTable%=A%:A%+=(handlerTableLen%*handlerMax%)
work_driverTable%=A%:A%+=(driverTableLen%*driverMax%)



REM Call back stuff

work_callBack_Active%              =A%:A%+=4
work_callBack_Count%               =A%:A%+=4
work_CallBack_BufferFullCount%     =A%:A%+=4
work_CallBack_CurrentSoundBuffer%  =A%:A%+=4
work_CallBack_CurrentOutBuffer%    =A%:A%+=4
work_CallBack_BufferSize%          =A%:A%+=4
work_CallBack_Flags%               =A%:A%+=4
work_CallBack_SampleFrequency%     =A%:A%+=4
work_CallBack_SamplePeriod%        =A%:A%+=4
work_CallBack_numCallBackBuffers%  =A%:A%+=4

IF doCBAI% THEN
   work_CBAIActive%                   =A%:A%+=4
   work_PollWord%                     =A%:A%+=4
ENDIF

defaultNumCallBackBuffers%=2:REM Was 4
callBackBufferLen%=416*4


IF doLog% THEN

REM Log stuff

logBits%=13

work_Log_Handler%=A%:A%+=4
work_Log_Parameter%=A%:A%+=4
work_Log_OldConfigure%=A%:A%+=4*5  :REM The five parameters for Sound_Configure
work_Log_OldLeft%=A%:A%+=4
work_Log_OldRight%=A%:A%+=4
work_Log_ChanTable%=A%:A%+=16
work_OldLogFill%=A%:A%+=4

work_Log_16BitBuffer%=A% :REM This will be the start of the buffer if required
Log16BitBufferSize%=4000
A%+=Log16BitBufferSize%

ENDIF

work_CallBack_Buffer%=A%:A%+=(callBackBufferLen%*defaultNumCallBackBuffers%)

memoryStart%=A%


REM ---------




ENDPROC
@


1.4
log
@  See Detail.
Detail:
  * 32-bit compatible
  * srccommitted (and gets version number from VersionNum, even though it's
    written in BASIC)
  * added install rule and MkInstall file to install module in correct place
    within an ARMovie installation
Admin:
  Not tested.

Version 0.49. Tagged as 'SharedSnd-0_49'
@
text
@@


1.3
log
@Changed things so that the detokenised BASIC source (in the c directory) has
no line numbers present (LISTO 8). The detokenised source's raison d'etre is
to allow easier CVS diffs, but line numbers would defeat this purpose whenever
the change involves inserting more than a handful of line numbers.

No other changes - this version is committed and tagged purely as a reference
point for future updates. Tag used is 'bavison_SharedSnd-0_48'.
@
text
@d42 1
@


1.2
log
@Spinner branch merged
@
text
@d26 157
a182 157
   10
   20The workspace for SharedSound represents the workspace for one driver
   30activity with a number of associated streams and handlers.
   40The same code could be used with another instantiation to control the
   50activity via another output driver.
   60
   70
   80DEFPROCSetStart
   90LOCAL er$
  100er$="Set"
  110PRINT "PROCSet"
  120
  130swiBase%=&4B440
  140Overflow_Flag=1<<28
  150Zero_Flag=1<<30
  160Iflag%=&08000000
  170SVC_Mode%=3
  180
  190Sound_LinearHandler%=&40145
  200XSound_LinearHandler%=&60145
  210Sound_Mode%=&40144
  220Sound_SampleRate%=&40146
  230
  240REM Sound flags
  250
  260soundFlag_Mix%=1
  270soundFlag_Period%=1<<8
  280soundFlag_Log%=1<<9
  290
  300REM --------- Handler table stuff
  310
  320handler_Address%=0
  330handler_Parameter%=4
  340handler_Flags%=8
  350handler_SampleFrequency%=12
  360handler_Volume%=16
  370handler_Type%=20
  380handler_Fraction%=24
  390handler_VolumeScaled%=28
  400handler_Name%=32
  410
  420  handlerNameLen%=32
  430  handlerTableLen%=handler_Name%+handlerNameLen%
  440
  450handlerMax%=10  :REM  Maximum number of handlers
  460
  470handlerType_Immediate%=0
  480handlerType_CallBack%=1
  490handlerType_Process%=2
  500
  510handlerType_Default%=handlerType_Immediate%
  520
  530REM ---------- Driver table stuff
  540
  550d%=0
  560driver_Address%      =d%:d%+=4
  570driver_Parameter%    =d%:d%+=4
  580driver_Flags%        =d%:d%+=4
  590driver_Volume%       =d%:d%+=4
  600driver_VolumeScaled% =d%:d%+=4
  610driver_Name%         =d%:d%+=4
  620
  630driverTableLen%=d%
  640
  650driverMax%=1  :REM Maximum number of drivers
  660
  670REM Call entries in table
  680
  690A%=0
  700driverEntry_Install%    =A%:A%+=4
  710driverEntry_Remove%     =A%:A%+=4
  720driverEntry_Fill%       =A%:A%+=4
  730driverEntry_SampleRate% =A%:A%+=4
  740driverEntry_Volume%     =A%:A%+=4
  750driverEntry_Mixer%      =A%:A%+=4
  760
  770driverEntryLen%=A%
  780
  790
  800REM --------- Workspace variable offsets
  810
  820A%=0
  830work_memSize%=A%:A%+=4        :REM Current memory size
  840work_privateWord%=A%:A%+=4    :REM R12 module private word pointer
  850work_currentDriver%=A%:A%+=4  :REM Driver = 1,2 or External, 0 = none
  860work_SoundPause%=A%:A%+=4     :REM Pause flag for handler fill code
  870work_SoundActive%=A%:A%+=4    :REM Flag set by handler fill code when active
  880work_SampleFrequency%=A%:A%+=4:REM Current sample frequency
  890work_SamplePeriod%=A%:A%+=4   :REM Current sample period
  900
  910work_ImmediateHandlers%=A%:A%+=4 :REM Bit map of immediate handlers
  920work_CallBackHandlers%=A%:A%+=4 :REM Bit map of call back handlers
  930work_ProcessHandlers%=A%:A%+=4  :REM Bit map of process handlers
  940
  950work_ControlWord%=A%:A%+=4    :REM Control word for Replay
  960A%+=4
  970
  980work_DriverEntryTable%=A%:A%+=driverEntryLen%
  990
 1000work_handlerTable%=A%:A%+=(handlerTableLen%*handlerMax%)
 1010work_driverTable%=A%:A%+=(driverTableLen%*driverMax%)
 1020
 1030
 1040
 1050REM Call back stuff
 1060
 1070work_callBack_Active%              =A%:A%+=4
 1080work_callBack_Count%               =A%:A%+=4
 1090work_CallBack_BufferFullCount%     =A%:A%+=4
 1100work_CallBack_CurrentSoundBuffer%  =A%:A%+=4
 1110work_CallBack_CurrentOutBuffer%    =A%:A%+=4
 1120work_CallBack_BufferSize%          =A%:A%+=4
 1130work_CallBack_Flags%               =A%:A%+=4
 1140work_CallBack_SampleFrequency%     =A%:A%+=4
 1150work_CallBack_SamplePeriod%        =A%:A%+=4
 1160work_CallBack_numCallBackBuffers%  =A%:A%+=4
 1170
 1180IF doCBAI% THEN
 1190   work_CBAIActive%                   =A%:A%+=4
 1200   work_PollWord%                     =A%:A%+=4
 1210ENDIF
 1220
 1230defaultNumCallBackBuffers%=2:REM Was 4
 1240callBackBufferLen%=416*4
 1250
 1260
 1270IF doLog% THEN
 1280
 1290REM Log stuff
 1300
 1310logBits%=13
 1320
 1330work_Log_Handler%=A%:A%+=4
 1340work_Log_Parameter%=A%:A%+=4
 1350work_Log_OldConfigure%=A%:A%+=4*5  :REM The five parameters for Sound_Configure
 1360work_Log_OldLeft%=A%:A%+=4
 1370work_Log_OldRight%=A%:A%+=4
 1380work_Log_ChanTable%=A%:A%+=16
 1390work_OldLogFill%=A%:A%+=4
 1400
 1410work_Log_16BitBuffer%=A% :REM This will be the start of the buffer if required
 1420Log16BitBufferSize%=4000
 1430A%+=Log16BitBufferSize%
 1440
 1450ENDIF
 1460
 1470work_CallBack_Buffer%=A%:A%+=(callBackBufferLen%*defaultNumCallBackBuffers%)
 1480
 1490memoryStart%=A%
 1500
 1510
 1520REM ---------
 1530
 1540
 1550
 1560
 1570ENDPROC
@


1.1
log
@file Vars was initially added on branch Spinner.
@
text
@d1 182
@


1.1.2.1
log
@New layout SharedSound with text files rather than BASIC files.
@
text
@a0 116
/* Copyright (c) 1995, Expressive Software Projects
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Expressive Software Projects nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL EXPRESSIVE SOFTWARE PROJECTS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
   20The workspace for SharedSound represents the workspace for one driver
   30activity with a number of associated streams and handlers.
   40The same code could be used with another instantiation to control the
   50activity via another output driver.
   80DEFPROCSetStart
   90LOCAL er$
  100er$="Set"
  110PRINT "PROCSet"
  130swiBase%=&4B440
  140Overflow_Flag=1<<28
  150Zero_Flag=1<<30
  160Iflag%=&08000000
  170SVC_Mode%=3
  190Sound_LinearHandler%=&40145
  200XSound_LinearHandler%=&60145
  210Sound_Mode%=&40144
  220Sound_SampleRate%=&40146
  240REM Sound flags
  260soundFlag_Mix%=1
  270soundFlag_Period%=1<<8
  280soundFlag_Log%=1<<9
  300REM --------- Handler table stuff
  320handler_Address%=0
  330handler_Parameter%=4
  340handler_Flags%=8
  350handler_SampleFrequency%=12
  360handler_Volume%=16
  370handler_Type%=20
  380handler_Fraction%=24
  390handler_VolumeScaled%=28
  400handler_Name%=32
  420  handlerNameLen%=32
  430  handlerTableLen%=handler_Name%+handlerNameLen%
  450handlerMax%=10  :REM  Maximum number of handlers
  470handlerType_Immediate%=0
  480handlerType_CallBack%=1
  490handlerType_Process%=2
  510handlerType_Default%=handlerType_Immediate%
  530REM ---------- Driver table stuff
  550d%=0
  560driver_Address%      =d%:d%+=4
  570driver_Parameter%    =d%:d%+=4
  580driver_Flags%        =d%:d%+=4
  590driver_Volume%       =d%:d%+=4
  600driver_VolumeScaled% =d%:d%+=4
  610driver_Name%         =d%:d%+=4
  630driverTableLen%=d%
  650driverMax%=1  :REM Maximum number of drivers
  670REM Call entries in table
  690A%=0
  700driverEntry_Install%    =A%:A%+=4
  710driverEntry_Remove%     =A%:A%+=4
  720driverEntry_Fill%       =A%:A%+=4
  730driverEntry_SampleRate% =A%:A%+=4
  740driverEntry_Volume%     =A%:A%+=4
  750driverEntry_Mixer%      =A%:A%+=4
  770driverEntryLen%=A%
  800REM --------- Workspace variable offsets
  820A%=0
  830work_memSize%=A%:A%+=4        :REM Current memory size
  840work_privateWord%=A%:A%+=4    :REM R12 module private word pointer
  850work_currentDriver%=A%:A%+=4  :REM Driver = 1,2 or External, 0 = none
  860work_SoundPause%=A%:A%+=4     :REM Pause flag for handler fill code
  870work_SoundActive%=A%:A%+=4    :REM Flag set by handler fill code when active
  880work_SampleFrequency%=A%:A%+=4:REM Current sample frequency
  890work_SamplePeriod%=A%:A%+=4   :REM Current sample period
  910work_ImmediateHandlers%=A%:A%+=4 :REM Bit map of immediate handlers
  920work_CallBackHandlers%=A%:A%+=4 :REM Bit map of call back handlers
  930work_ProcessHandlers%=A%:A%+=4  :REM Bit map of process handlers
  950work_ControlWord%=A%:A%+=4    :REM Control word for Replay
  960A%+=4
  980work_DriverEntryTable%=A%:A%+=driverEntryLen%
 1000work_handlerTable%=A%:A%+=(handlerTableLen%*handlerMax%)
 1010work_driverTable%=A%:A%+=(driverTableLen%*driverMax%)
 1050REM Call back stuff
 1070work_callBack_Active%              =A%:A%+=4
 1080work_callBack_Count%               =A%:A%+=4
 1090work_CallBack_BufferFullCount%     =A%:A%+=4
 1100work_CallBack_CurrentSoundBuffer%  =A%:A%+=4
 1110work_CallBack_CurrentOutBuffer%    =A%:A%+=4
 1120work_CallBack_BufferSize%          =A%:A%+=4
 1130work_CallBack_Flags%               =A%:A%+=4
 1140work_CallBack_SampleFrequency%     =A%:A%+=4
 1150work_CallBack_SamplePeriod%        =A%:A%+=4
 1160work_CallBack_numCallBackBuffers%  =A%:A%+=4
 1180defaultNumCallBackBuffers%=8
 1190callBackBufferLen%=416*4
 1220work_CallBack_Buffer%=A%:A%+=(callBackBufferLen%*defaultNumCallBackBuffers%)
 1240memoryStart%=A%
 1270REM ---------
 1320ENDPROC
@


1.1.2.2
log
@New version: useful changes are bug fixed in removing callback
handlers (affects turning off the MIDI synth), and maintains number of
channels configured when callback buffers not supplied (stops volume
of RealAudio playback from fluctuating when MIDI Synth can't make its
mind up whether to created buffers or not.
Other changes adds CBAI and 8bit log output support (disabled) and
debugging code.
@
text
@a0 26
/* Copyright (c) 1995, Expressive Software Projects
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Expressive Software Projects nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL EXPRESSIVE SOFTWARE PROJECTS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
   10
a29 2
   60
   70
a33 1
  120
a38 1
  180
a42 1
  230
a43 1
  250
a46 1
  290
a47 1
  310
a56 1
  410
a58 1
  440
a59 1
  460
a62 1
  500
a63 1
  520
a64 1
  540
a71 1
  620
a72 1
  640
a73 1
  660
a74 1
  680
a81 1
  760
a82 2
  780
  790
a83 1
  810
a91 1
  900
a94 1
  940
a96 1
  970
a97 1
  990
a99 3
 1020
 1030
 1040
a100 1
 1060
d111 6
a116 41
 1170
 1180IF doCBAI% THEN
 1190   work_CBAIActive%                   =A%:A%+=4
 1200   work_PollWord%                     =A%:A%+=4
 1210ENDIF
 1220
 1230defaultNumCallBackBuffers%=2:REM Was 4
 1240callBackBufferLen%=416*4
 1250
 1260
 1270IF doLog% THEN
 1280
 1290REM Log stuff
 1300
 1310logBits%=13
 1320
 1330work_Log_Handler%=A%:A%+=4
 1340work_Log_Parameter%=A%:A%+=4
 1350work_Log_OldConfigure%=A%:A%+=4*5  :REM The five parameters for Sound_Configure
 1360work_Log_OldLeft%=A%:A%+=4
 1370work_Log_OldRight%=A%:A%+=4
 1380work_Log_ChanTable%=A%:A%+=16
 1390work_OldLogFill%=A%:A%+=4
 1400
 1410work_Log_16BitBuffer%=A% :REM This will be the start of the buffer if required
 1420Log16BitBufferSize%=4000
 1430A%+=Log16BitBufferSize%
 1440
 1450ENDIF
 1460
 1470work_CallBack_Buffer%=A%:A%+=(callBackBufferLen%*defaultNumCallBackBuffers%)
 1480
 1490memoryStart%=A%
 1500
 1510
 1520REM ---------
 1530
 1540
 1550
 1560
 1570ENDPROC
@
