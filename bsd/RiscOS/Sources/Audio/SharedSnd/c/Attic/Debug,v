head	1.4;
access;
symbols
	SharedSnd-0_49:1.3
	bavison_SharedSnd-0_48:1.3
	SharedSnd-0_48:1.2
	Spin_merge:1.1.2.1
	afrost_NC2_Generic:1.1.2.1
	afrost_Funai01-33:1.1.2.1
	smiddle_0_43:1.1.2.1
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2001.06.28.18.11.56;	author bavison;	state dead;
branches;
next	1.3;

1.3
date	2001.01.15.14.04.16;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	98.11.02.16.36.07;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.11.06.14.40.41;	author smiddle;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.11.06.14.40.42;	author smiddle;	state Exp;
branches;
next	;


desc
@New file for this version
@


1.4
log
@  Import of version 1.00 of SharedSound from WSS - this is a merge of
  RISC OS Ltd, ESP and Pace sources. I've added the Makefile, Mk* and
  VersionNum files.

Detail (courtesy of WSS):
  * Incorporates fixes made to 0.58c to fix the callbacks on sound
    rate changes.

  * Incorporates RISC OS Ltd changes to response to
    TaskManager_Acknowledgements service.

  * Includes 8 bit Log and PowerWave drivers.

  * Now built with Objasm, not BASIC assembler.

  * SharedSound_HandlerInfo SWI fixed to conform to spec. Also
    extended to accept r0 = 0 on entry, in which case r0 = number of
    first registered handler (or 0 for none) on exit; R1-R5 corrupted.

    Therefore the following code enumerates handlers:

    REM Get first handler number.
    SYS "SharedSound_HandlerInfo",0 TO next% ; flags%
    REM While no errors, and not finished
    WHILE (next% <> 0) AND ((flags% AND 1) = 0)
     SYS"SharedSound_HandlerInfo",next% TO next%,a%,b%,c%,d%,e%
    ENDWHILE

  * Sends Service_Sound (&54) with reason code 6 (SharedSound Starting)
    on (callback after) initialisation.

  * Sends Service_Sound (&54) with reason code 7 (SharedSound Dying)
    on finalisation.

  * Some small optimisations

  * Version bumped to 1.00 (to allow RISC OS Ltd space to make changes
    to their versions).

  * Table of helpful fill code routines now passed to handlers in R8.

  * SharedSound reinitialises correctly on lower layers reinitialising.

  * More care taken to remove outstanding callbacks on finalise.

  * Dual 26/32 bit version.

Admin:
  * Not tested by us.

  * 8-bit sound system code is known not to be ROM safe. However, it is
    currently switched out (see the doLog option in s.Gets).

  * This version *will not work* on a 32-bit system. There are at least two
    issues with it that I've spotted with a quick glance through the code -
    the lack of the module flags word, and an unconditional TEQP instruction.
    This version has been checked in nevertheless as a record of what WSS
    delivered to us.

Version 1.00. Tagged as 'SharedSnd-1_00'
@
text
@/* Copyright (c) 1995, Expressive Software Projects
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Expressive Software Projects nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL EXPRESSIVE SOFTWARE PROJECTS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
DEFPROCDebug
LOCAL er$
er$="Debug"
PRINT "PROCDebug"
[OPT I%

]
IF debug1% THEN
[OPT I%
\------------------------- Debugging



.printR10
STMFD R13!,{R0-R3,R14}
MOV   R0,R10            \ convert R0 to string
ADR   R1,textadr
MOV   R2,#31            \ max size
SWI   "OS_ConvertHex8"

ADR   R0,textadr
SWI   "OS_Write0"
SWI   "OS_NewLine"
LDMFD R13!,{R0-R3,PC}

.printstr
STMFD R13!,{R0-R3,R14}
MOV   R0,R10            \ convert R0 to string
ADR   R1,textadr
MOV   R2,#31            \ max size
SWI   "OS_ConvertHex8"

ADR   R0,textadr
SWI   "OS_Write0"
LDMFD R13!,{R0-R3,PC}

.textadr EQUD  0:EQUD   0:EQUD   0:EQUD   0
]
ENDIF
[OPT I%


]
ENDPROC
@


1.3
log
@Changed things so that the detokenised BASIC source (in the c directory) has
no line numbers present (LISTO 8). The detokenised source's raison d'etre is
to allow easier CVS diffs, but line numbers would defeat this purpose whenever
the change involves inserting more than a handful of line numbers.

No other changes - this version is committed and tagged purely as a reference
point for future updates. Tag used is 'bavison_SharedSnd-0_48'.
@
text
@@


1.2
log
@Spinner branch merged
@
text
@d26 44
a69 44
   10DEFPROCDebug
   20LOCAL er$
   30er$="Debug"
   40PRINT "PROCDebug"
   50[OPT I%
   60
   70]
   80IF debug1% THEN
   90[OPT I%
  100\------------------------- Debugging
  110
  120
  130
  140.printR10
  150STMFD R13!,{R0-R3,R14}
  160MOV   R0,R10            \ convert R0 to string
  170ADR   R1,textadr
  180MOV   R2,#31            \ max size
  190SWI   "OS_ConvertHex8"
  200
  210ADR   R0,textadr
  220SWI   "OS_Write0"
  230SWI   "OS_NewLine"
  240LDMFD R13!,{R0-R3,PC}
  250
  260.printstr
  270STMFD R13!,{R0-R3,R14}
  280MOV   R0,R10            \ convert R0 to string
  290ADR   R1,textadr
  300MOV   R2,#31            \ max size
  310SWI   "OS_ConvertHex8"
  320
  330ADR   R0,textadr
  340SWI   "OS_Write0"
  350LDMFD R13!,{R0-R3,PC}
  360
  370.textadr EQUD  0:EQUD   0:EQUD   0:EQUD   0
  380]
  390ENDIF
  400[OPT I%
  410
  420
  430]
  440ENDPROC
@


1.1
log
@file Debug was initially added on branch Spinner.
@
text
@d1 69
@


1.1.2.1
log
@New file
@
text
@a0 69
/* Copyright (c) 1995, Expressive Software Projects
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Expressive Software Projects nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL EXPRESSIVE SOFTWARE PROJECTS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
   10DEFPROCDebug
   20LOCAL er$
   30er$="Debug"
   40PRINT "PROCDebug"
   50[OPT I%
   60
   70]
   80IF debug1% THEN
   90[OPT I%
  100\------------------------- Debugging
  110
  120
  130
  140.printR10
  150STMFD R13!,{R0-R3,R14}
  160MOV   R0,R10            \ convert R0 to string
  170ADR   R1,textadr
  180MOV   R2,#31            \ max size
  190SWI   "OS_ConvertHex8"
  200
  210ADR   R0,textadr
  220SWI   "OS_Write0"
  230SWI   "OS_NewLine"
  240LDMFD R13!,{R0-R3,PC}
  250
  260.printstr
  270STMFD R13!,{R0-R3,R14}
  280MOV   R0,R10            \ convert R0 to string
  290ADR   R1,textadr
  300MOV   R2,#31            \ max size
  310SWI   "OS_ConvertHex8"
  320
  330ADR   R0,textadr
  340SWI   "OS_Write0"
  350LDMFD R13!,{R0-R3,PC}
  360
  370.textadr EQUD  0:EQUD   0:EQUD   0:EQUD   0
  380]
  390ENDIF
  400[OPT I%
  410
  420
  430]
  440ENDPROC
@
