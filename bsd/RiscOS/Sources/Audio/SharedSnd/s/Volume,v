head	1.5;
access;
symbols
	SharedSnd-1_20:1.5
	SharedSnd-1_19:1.5
	SharedSnd-1_18:1.5
	SharedSnd-1_17:1.3
	SharedSnd-1_16:1.3
	SharedSnd-1_15:1.3
	SharedSnd-1_14:1.3
	SharedSnd-1_13:1.3
	SharedSnd-1_12:1.2
	SharedSnd-1_11:1.2
	SharedSnd-1_10:1.2
	SharedSnd-1_09:1.2
	SharedSnd-1_08:1.2
	SharedSnd-1_07:1.2
	ESP_SharedSnd-1_06_merge:1.1.2.1
	SharedSnd-1_06:1.2
	ESP_SharedSnd-1_06:1.1.0.2
	ESP_SharedSnd-1_06_bp:1.1
	SharedSnd-1_05:1.1
	SharedSnd-1_04:1.1
	SharedSnd-1_03:1.1
	SharedSnd-1_02:1.1
	SharedSnd-1_01:1.1
	SharedSnd-1_00:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.06.18.16.39.01;	author jlee;	state Exp;
branches;
next	1.4;
commitid	ODW0ixlFy50c3Yaz;

1.4
date	2016.06.18.16.19.19;	author jlee;	state Exp;
branches;
next	1.3;
commitid	L0sIVnG3vL4sWXaz;

1.3
date	2013.09.04.07.14.42;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	2RDI391I6q1nE54x;

1.2
date	2011.08.15.23.10.49;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.28.18.11.58;	author bavison;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2011.08.15.14.11.20;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Use Entry/EXIT, Push/Pull macros
Detail:
  s/* - Code updated to use Entry/EXIT and Push/Pull macros where possible instead of manual STM/LDM. Also add ROUTs for safety (although most routines use named local labels rather than numbered ones). A few obvious cases also fixed to reduce number of regs pushed onto stack.
  A few other changes and fixes of note:
  s/Log - Trim empty, unused installLogDriver routine when doLog is {FALSE}
  s/Module - Add a veneer to swiHandler to deal with 26bit and 26/32bit neutral cases; avoids the need for individual SWI handlers to preserve NZC
  s/SWIs:
  - Remove 26/32bit neutral SWI exit code, now handled by veneers. CLRV on most SWI exits to replace the implicit CLRV from CMP pc,pc.
  - swiHandlerVolume and swiDriverMixer were popping the wrong regs from the stack for most error cases; now fixed via the switch to Entry/EXIT
Admin:
  Tested on Raspberry Pi


Version 1.18. Tagged as 'SharedSnd-1_18'
@
text
@; Copyright (c) 1995, Expressive Software Projects
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of Expressive Software Projects nor the names of its
;       contributors may be used to endorse or promote products derived from
;       this software without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
; WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
; DISCLAIMED. IN NO EVENT SHALL EXPRESSIVE SOFTWARE PROJECTS BE LIABLE FOR ANY
; DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
; ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 

 ; -------------------------------- Volume routines ------------------------


scaleAllHandlerVolumes ROUT
        ; Set the actual volumes for all handlers
        ; typically called after driver volume has changed
        ; should also be called when System volume has changed
        Entry   "r0-r11,ws"

        ADD     r0,ws,#work_handlerTable   ; Get handler table
        MOV     r6,#handlerMax              ; Count

scaleAllHandlerVolumesLoop
        LDR     r1,[r0,#handler_Address]    ; Is there a driver here?
        CMP     r1,#0
        BLNE    scaleHandlerVolume

        ADD     r0,r0,#handlerTableLen
        SUBS    r6,r6,#1
        BNE     scaleAllHandlerVolumesLoop

        EXIT

 ; ----------

scaleHandlerVolume ROUT
        ; Using all available volume info
        ; set up the real volume for the handler
        ; as passed to fill routine
        ; On entry r0 = handler table
        Entry   "r0-r5"

        LDR     r4,[r0,#handler_Volume]

        ; Scale according to r0 = Driver volume (if driver cannot use it)
        ;                    r4 = Handler volume
        MOV     r5,r0         ; Store handler address

        ; Get the driver scaled volume
        ADD     r0,ws,#work_driverTable
        LDR     r1,[r0,#driver_Address]
        CMP     r1,#0                        ; Check driver exists
        BEQ     scaleHandlerVolumeStore     ; Don't change volume if no driver

        LDR     r0,[r0,#driver_VolumeScaled]   ; Driver scaled volume

        Debug   gn,"Driver volume =",r0

        MOV     r1,#0
        SUB     r1,r1,#1
        CMP     r0,r1                   ; No driver scaling required

        BEQ     scaleHandlerVolumeStore

        ;     r0 = LR, r4 = LR, Scale accordingly....

        MOV     r1,r0,LSR #16  ; r1 = L1
        MOV     r0,r0,LSL #16
        MOV     r0,r0,LSR #16  ; r0 = r1

        MOV     r3,r4,LSR #16  ; r3 = L2
        MOV     r4,r4,LSL #16
        MOV     r4,r4,LSR #16  ; r4 = r2

        MUL     r2,r0,r4
        MOV     r2,r2,LSR #16  ; r2 = R

        MUL     r0,r1,r3
        MOV     r0,r0,LSR #16  ; r0 = L

        ADD     r4,r2,r0,LSL #16 ; r4 = LLRR

scaleHandlerVolumeStore


        Debug   gn,"Scaled volume =",r4

        STR     r4,[r5,#handler_VolumeScaled]

        EXIT

        END
@


1.4
log
@Expand tabs
Detail:
  s/* - Expand all tabs, to avoid space/tab use inconsistencies within some files and to match general ROOL code formatting
Admin:
  Binary unchanged


Version 1.17. Not tagged
@
text
@d30 1
a30 1
scaleAllHandlerVolumes
d34 1
a34 1
        STMDB   sp!,{r0-r11,ws,lr}
d48 1
a48 1
        LDMIA   sp!,{r0-r11,ws,pc}
d52 1
a52 1
scaleHandlerVolume
d57 1
a57 1
        STMDB   sp!,{r0-r5,lr}
d106 1
a106 1
        LDMIA   sp!,{r0-r5,pc}
@


1.3
log
@Changed to use NdrDebug instead of local debug functions
Changed GET of filenames to use <name>.<extension> form.
Built, but not tested.

Version 1.13. Tagged as 'SharedSnd-1_13'
@
text
@d31 4
a34 4
	; Set the actual volumes for all handlers
	; typically called after driver volume has changed
	; should also be called when System volume has changed
	STMDB	sp!,{r0-r11,ws,lr}
d36 2
a37 2
	ADD	r0,ws,#work_handlerTable   ; Get handler table
	MOV	r6,#handlerMax              ; Count
d40 7
a46 7
	LDR	r1,[r0,#handler_Address]    ; Is there a driver here?
	CMP	r1,#0
	BLNE	scaleHandlerVolume

	ADD	r0,r0,#handlerTableLen
	SUBS	r6,r6,#1
	BNE	scaleAllHandlerVolumesLoop
d48 1
a48 1
	LDMIA	sp!,{r0-r11,ws,pc}
d53 17
a69 17
	; Using all available volume info
	; set up the real volume for the handler
	; as passed to fill routine
	; On entry r0 = handler table
	STMDB	sp!,{r0-r5,lr}

	LDR	r4,[r0,#handler_Volume]

	; Scale according to r0 = Driver volume (if driver cannot use it)
	;                    r4 = Handler volume
	MOV	r5,r0         ; Store handler address

	; Get the driver scaled volume
	ADD	r0,ws,#work_driverTable
	LDR	r1,[r0,#driver_Address]
	CMP	r1,#0                        ; Check driver exists
	BEQ	scaleHandlerVolumeStore     ; Don't change volume if no driver
d71 1
a71 1
	LDR	r0,[r0,#driver_VolumeScaled]   ; Driver scaled volume
d75 3
a77 3
	MOV	r1,#0
	SUB	r1,r1,#1
	CMP	r0,r1                   ; No driver scaling required
d79 1
a79 1
	BEQ	scaleHandlerVolumeStore
d81 1
a81 1
	;     r0 = LR, r4 = LR, Scale accordingly....
d83 3
a85 3
	MOV	r1,r0,LSR #16  ; r1 = L1
	MOV	r0,r0,LSL #16
	MOV	r0,r0,LSR #16  ; r0 = r1
d87 3
a89 3
	MOV	r3,r4,LSR #16  ; r3 = L2
	MOV	r4,r4,LSL #16
	MOV	r4,r4,LSR #16  ; r4 = r2
d91 2
a92 2
	MUL	r2,r0,r4
	MOV	r2,r2,LSR #16  ; r2 = R
d94 2
a95 2
	MUL	r0,r1,r3
	MOV	r0,r0,LSR #16  ; r0 = L
d97 1
a97 1
	ADD	r4,r2,r0,LSL #16 ; r4 = LLRR
d104 1
a104 1
	STR	r4,[r5,#handler_VolumeScaled]
d106 1
a106 1
	LDMIA	sp!,{r0-r5,pc}
d108 1
a108 1
	END
@


1.2
log
@  Selective merge of ESP's version 1.06 (14 May 2002) of SharedSound.
Detail:
  Changelog not provided by ESP. I have made an additional change to use
  the value of SoundSystemNIL from Hdr:Sound to test if SoundChannels is not
  installed - this constant changed in RISC OS 5 for 32-bitting reasons.
Admin:
  Builds, and briefly tested. Coincidentally, this is also our version 1.06.

Version 1.06. Tagged as 'SharedSnd-1_06'
@
text
@d72 2
a73 7
 [ debug
	SWI	XOS_WriteS
	= "Driver volume = ",0
	ALIGN
	MOV	r10,r0
	BL	printR10
 ]
d102 2
a103 7
 [ debug
	SWI	XOS_WriteS
	= "Scaled volume = ",0
	ALIGN
	MOV	r10,r4
	BL	printR10
 ]
@


1.1
log
@  Import of version 1.00 of SharedSound from WSS - this is a merge of
  RISC OS Ltd, ESP and Pace sources. I've added the Makefile, Mk* and
  VersionNum files.

Detail (courtesy of WSS):
  * Incorporates fixes made to 0.58c to fix the callbacks on sound
    rate changes.

  * Incorporates RISC OS Ltd changes to response to
    TaskManager_Acknowledgements service.

  * Includes 8 bit Log and PowerWave drivers.

  * Now built with Objasm, not BASIC assembler.

  * SharedSound_HandlerInfo SWI fixed to conform to spec. Also
    extended to accept r0 = 0 on entry, in which case r0 = number of
    first registered handler (or 0 for none) on exit; R1-R5 corrupted.

    Therefore the following code enumerates handlers:

    REM Get first handler number.
    SYS "SharedSound_HandlerInfo",0 TO next% ; flags%
    REM While no errors, and not finished
    WHILE (next% <> 0) AND ((flags% AND 1) = 0)
     SYS"SharedSound_HandlerInfo",next% TO next%,a%,b%,c%,d%,e%
    ENDWHILE

  * Sends Service_Sound (&54) with reason code 6 (SharedSound Starting)
    on (callback after) initialisation.

  * Sends Service_Sound (&54) with reason code 7 (SharedSound Dying)
    on finalisation.

  * Some small optimisations

  * Version bumped to 1.00 (to allow RISC OS Ltd space to make changes
    to their versions).

  * Table of helpful fill code routines now passed to handlers in R8.

  * SharedSound reinitialises correctly on lower layers reinitialising.

  * More care taken to remove outstanding callbacks on finalise.

  * Dual 26/32 bit version.

Admin:
  * Not tested by us.

  * 8-bit sound system code is known not to be ROM safe. However, it is
    currently switched out (see the doLog option in s.Gets).

  * This version *will not work* on a 32-bit system. There are at least two
    issues with it that I've spotted with a quick glance through the code -
    the lack of the module flags word, and an unconditional TEQP instruction.
    This version has been checked in nevertheless as a record of what WSS
    delivered to us.

Version 1.00. Tagged as 'SharedSnd-1_00'
@
text
@a0 26
; Copyright (c) 1995, Expressive Software Projects
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of Expressive Software Projects nor the names of its
;       contributors may be used to endorse or promote products derived from
;       this software without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
; WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
; DISCLAIMED. IN NO EVENT SHALL EXPRESSIVE SOFTWARE PROJECTS BE LIABLE FOR ANY
; DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
; ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; 
debug SETL {FALSE}
d77 1
a77 1
	BL	printr10
d112 1
a112 1
	BL	printr10
@


1.1.2.1
log
@Import of latest sources from ESP.
This represents ESP's version 1.06 (14 May 2002). The files are exactly as
received, but they are not expected to build as they are against the public
headers.
@
text
@d26 1
d78 1
a78 1
	BL	printR10
d113 1
a113 1
	BL	printR10
@

