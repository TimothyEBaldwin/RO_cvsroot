head	1.3;
access;
symbols
	SharedSnd-0_49:1.2
	bavison_SharedSnd-0_48:1.2
	SharedSnd-0_48:1.2
	Spin_merge:1.1.2.2
	afrost_NC2_Generic:1.1.2.1
	afrost_Funai01-33:1.1.2.1
	smiddle_0_43:1.1.2.1
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2001.06.28.18.11.56;	author bavison;	state dead;
branches;
next	1.2;

1.2
date	98.11.02.16.36.04;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.11.06.14.40.23;	author smiddle;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.11.06.14.40.23;	author smiddle;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	98.09.24.11.32.06;	author kbracey;	state Exp;
branches;
next	;


desc
@How to build and maintain this module
@


1.3
log
@  Import of version 1.00 of SharedSound from WSS - this is a merge of
  RISC OS Ltd, ESP and Pace sources. I've added the Makefile, Mk* and
  VersionNum files.

Detail (courtesy of WSS):
  * Incorporates fixes made to 0.58c to fix the callbacks on sound
    rate changes.

  * Incorporates RISC OS Ltd changes to response to
    TaskManager_Acknowledgements service.

  * Includes 8 bit Log and PowerWave drivers.

  * Now built with Objasm, not BASIC assembler.

  * SharedSound_HandlerInfo SWI fixed to conform to spec. Also
    extended to accept r0 = 0 on entry, in which case r0 = number of
    first registered handler (or 0 for none) on exit; R1-R5 corrupted.

    Therefore the following code enumerates handlers:

    REM Get first handler number.
    SYS "SharedSound_HandlerInfo",0 TO next% ; flags%
    REM While no errors, and not finished
    WHILE (next% <> 0) AND ((flags% AND 1) = 0)
     SYS"SharedSound_HandlerInfo",next% TO next%,a%,b%,c%,d%,e%
    ENDWHILE

  * Sends Service_Sound (&54) with reason code 6 (SharedSound Starting)
    on (callback after) initialisation.

  * Sends Service_Sound (&54) with reason code 7 (SharedSound Dying)
    on finalisation.

  * Some small optimisations

  * Version bumped to 1.00 (to allow RISC OS Ltd space to make changes
    to their versions).

  * Table of helpful fill code routines now passed to handlers in R8.

  * SharedSound reinitialises correctly on lower layers reinitialising.

  * More care taken to remove outstanding callbacks on finalise.

  * Dual 26/32 bit version.

Admin:
  * Not tested by us.

  * 8-bit sound system code is known not to be ROM safe. However, it is
    currently switched out (see the doLog option in s.Gets).

  * This version *will not work* on a 32-bit system. There are at least two
    issues with it that I've spotted with a quick glance through the code -
    the lack of the module flags word, and an unconditional TEQP instruction.
    This version has been checked in nevertheless as a record of what WSS
    delivered to us.

Version 1.00. Tagged as 'SharedSnd-1_00'
@
text
@
SharedSound module
------------------

This module was written and generally maintained by Andy Pierson of
Expressive Software Projects 'andy@@exsoftpr.demon.co.uk'.

The module is built by running the main BASIC program 'SharedSoun' which
loads additional BASIC libraries, assembles the code and saves out the
resulting module. This original distribution is in the Source directory.

To make best use of the CVS revision control the module is build here in a
different way. The files are all stored as text files in the 'c' directory
and are then transferred to the 'o' directoru whilst being converted to BASIC
programs when building.

So to build the module just 'make rom'.

To import new code do the following.

 1) Copy the new files in the Source directory.
 2) Copy all the BASIC programs (SharedSound and SSLib.*) into the 'o'
    directory
 3) Change the Makefile - comment out the .c.o rule and uncomment the
    .o.c rule.
 4) Do 'amu import' (MkImport) which will copy all the files into the 'c'
    directory.
 5) Restore the makefile .o.c and .c.o rules to how they were.
 6) So 'amu clean' (MkClean) to clear the 'o' directory.
 7) If there are any new source files add them into the makefile.
 8) Edit c.SharedSoun to change the LIBRARY definitions to point to the
    files in the 'o' directory.
 9) Checkin the changes to CVS.

A change list supplied by ESP is as follows

    0.44  8 bit log output version, not supplied to Acorn
    0.45  Fix bug in 8 bit code
    0.46  CBAI alternative code added
    0.47  Fix bug in removing call back handlers
    0.48  Fix bug in volume fluctuation when no buffers from call back handler

Simon Middleton
06 Nov 1997
smiddleton@@acorn.com
@


1.2
log
@Spinner branch merged
@
text
@@


1.1
log
@file ReadMe was initially added on branch Spinner.
@
text
@d1 45
@


1.1.2.1
log
@New file
@
text
@a0 42

SharedSound module
------------------

This module was written and generally maintained by Andy Pierson of
Expressive Software Projects 'andy@@exsoftpr.demon.co.uk'.

The module is built by running the main BASIC program 'SharedSoun' which
loads additional BASIC libraries, assembles the code and saves out the
resulting module. This original distribution is in the Source directory.

To make best use of the CVS revision control the module is build here in a
different way. The files are all stored as text files in the 'c' directory
and are then transferred to the 'o' directoru whilst being converted to BASIC
programs when building.

So to build the module just 'make rom'.

To import new code do the following.

 1) Copy the new files in the Source directory.
 2) Copy all the BASIC programs (SharedSound and SSLib.*) into the 'o'
    directory
 2) Do 'amu import' (MkImport) which will copy all the files into the 'c'
    directory.
 3) So 'amu clean' (MkClean) to clear the 'o' directory.
 4) If there are any new source files add them into the makefile.
 5) Edit c.SharedSoun to change the LIBRARY definitions to point to the
    files in the 'o' directory.
 6) Checkin the changes to CVS.

A change list supplied by ESP is as follows

    0.44  8 bit log output version, not supplied to Acorn
    0.45  Fix bug in 8 bit code
    0.46  CBAI alternative code added
    0.47  Fix bug in removing call back handlers
    0.48  Fix bug in volume fluctuation when no buffers from call back handler

Simon Middleton
06 Nov 1997
smiddleton@@acorn.com
@


1.1.2.2
log
@Fixed Makefile to not keep re-building
@
text
@d24 1
a24 3
 3) Change the Makefile - comment out the .c.o rule and uncomment the
    .o.c rule.
 4) Do 'amu import' (MkImport) which will copy all the files into the 'c'
d26 3
a28 4
 5) Restore the makefile .o.c and .c.o rules to how they were.
 6) So 'amu clean' (MkClean) to clear the 'o' directory.
 7) If there are any new source files add them into the makefile.
 8) Edit c.SharedSoun to change the LIBRARY definitions to point to the
d30 1
a30 1
 9) Checkin the changes to CVS.
@
