head	1.1;
branch	1.1.1;
access;
symbols
	Titanium-0_09:1.1.1.1
	Titanium-0_08:1.1.1.1
	Titanium-0_07:1.1.1.1
	Titanium-0_06:1.1.1.1
	Titanium-0_05:1.1.1.1
	Titanium-0_04:1.1.1.1
	Titanium-0_03:1.1.1.1
	SMP:1.1.1.1.0.2
	SMP_bp:1.1.1.1
	Titanium-0_02:1.1.1.1
	Titanium-0_01:1.1.1.1
	elesar:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.12.19.21.35.33;	author rool;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2015.12.19.21.35.33;	author rool;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Early booting
=============
The HAL sets up the muxes (both pin and clock) for early booting itself, with no function calls. This is because the first portion of the HAL is loaded from the boot flash by the boot loader and the rest of the HAL isn't in memory yet.
Specifically this is
 * The main DPLL's (Per, Core, MPU, DDR) - might as well boot at a decent speed
 * UART pins - for debugging
 * QSPI pins - to load the rest of the image in in 4 bit mode

Policy
======
If a pin or clock is fixed due to hardware (for example the pin is wired to only one thing on the PCB, or the clock is limited because of the chip it is wired to) then that pin or clock is set up by the HAL.

Pins or clocks that change at run time (for example which pins UART debug comes out on or the audio sampling clock) then that pin or clock is the responsibility of the device. That might be a HAL device, or a driver in a module.@


1.1.1.1
log
@Import of Titanium HAL
@
text
@@
