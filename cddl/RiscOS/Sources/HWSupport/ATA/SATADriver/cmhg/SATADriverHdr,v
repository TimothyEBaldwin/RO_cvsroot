head	1.3;
access;
symbols
	SATADriver-0_09:1.3
	SATADriver-0_08:1.3
	SATADriver-0_07:1.2
	SATADriver-0_06:1.1.1.1
	SATADriver-0_05:1.1.1.1
	SATADriver-0_04:1.1.1.1
	SATADriver-0_03:1.1.1.1
	SATADriver-0_02:1.1.1.1
	SATADriver-0_01:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2018.06.12.11.20.13;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	s1AoDgb0IY5W0ZFA;

1.2
date	2017.08.22.21.08.01;	author jlee;	state Exp;
branches;
next	1.1;
commitid	H4nPnZGTLvVvIf4A;

1.1
date	2016.03.13.22.10.19;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	mANRhhLexUmfIwYy;

1.1.1.1
date	2016.03.13.22.10.19;	author bavison;	state Exp;
branches;
next	;
commitid	mANRhhLexUmfIwYy;


desc
@@


1.3
log
@Listen for PreReset service and do a soft reset
Simulate the effects of a hard reset by globally resetting the controller. This fixes a problem with some brands of drive when the ROM is softloaded and the drives don't get long enough to retrain before SATADriver starts a 2nd time.

Version 0.08. Tagged as 'SATADriver-0_08'
@
text
@;
; CDDL HEADER START
;
; The contents of this file are subject to the terms of the
; Common Development and Distribution License (the "Licence").
; You may not use this file except in compliance with the Licence.
;
; You can obtain a copy of the licence at
; cddl/RiscOS/Sources/HWSupport/ATA/SATADriver/LICENCE.
; See the Licence for the specific language governing permissions
; and limitations under the Licence.
;
; When distributing Covered Code, include this CDDL HEADER in each
; file and include the Licence file. If applicable, add the
; following below this CDDL HEADER, with the fields enclosed by
; brackets "[]" replaced with your own identifying information:
; Portions Copyright [yyyy] [name of copyright owner]
;
; CDDL HEADER END
;
; Copyright 2015 Ben Avison.  All rights reserved.
; Portions Copyright 2017 Jeffrey Lee
; Use is subject to license terms.
;

#include "Global/Services.h"
#include "VersionNum"

initialisation-code:    module_initialise

finalisation-code:      module_finalise

service-call-handler:   module_service Service_ModulePostInit Service_PreReset

title-string:           Module_ComponentName

help-string:            Module_ComponentName Module_MajorVersion_CMHG Module_MinorVersion_CMHG

command-keyword-table:  module_command
         SATADevices(min-args:0, max-args:0, international:, invalid-syntax:"SSATDEV", help-text:"HSATDEV")

swi-chunk-base-number:  0x59780

swi-handler-code:       module_swi

swi-decoding-table:     ATA, Initialise, Control, Enumerate, Op, PacketOp

international-help-file:"Resources:$.Resources.SATADriver.Messages"

date-string:            Module_Date_CMHG

#ifdef OSMEM19
generic-veneers:        module_irq_veneer/module_irq_handler,
                        mem19_in_veneer/mem19_in_handler,
                        mem19_out_veneer/mem19_out_handler
#else
generic-veneers:        module_irq_veneer/module_irq_handler
#endif

vector-handlers:        module_tickerv_veneer/module_tickerv_handler
@


1.2
log
@Add support for using OS_Memory 19 for DMA prep
Detail:
  Makefile - Add OSMEM19 option to control whether OS_Memory 0 or OS_Memory 19 is used. Defaults to OS_Memory 0, since OS_Memory 19 is currently only available on the SMP kernel branch.
  c/op, c/osmem0, h/dmaprep - Move OS_Memory 0 related code out into its own file, creating the dmaprep interface to abstract over whether OS_Memory 0 or OS_Memory 19 is in use
  c/osmem19, cmhg/SATADriverHdr - Code for performing DMA prep using OS_Memory 19
  h/globals - Adjust what variables ahciop_t stores, depending on DMA prep approach being used
Admin:
  Tested on IGEPv5
  OS_Memory 19 version (for use with SMP kernel/module) can be enabled via components file, e.g. '-options OSMEM19=TRUE'


Version 0.07. Tagged as 'SATADriver-0_07'
@
text
@d33 1
a33 1
service-call-handler:	module_service Service_ModulePostInit
@


1.1
log
@Initial revision
@
text
@d22 1
d52 5
d58 1
@


1.1.1.1
log
@  Initial import of SATADriver module
Detail:
  This is the SATA implementation of a new generic ATA driver API, analogous
  to the SCSIDriver and SDIODriver APIs, but for ATA buses. Full support for
  port multipliers is included; effectively they appear transparent to the
  upper layers of the stack. No effort is to made to support enclosures,
  external SATA or hot-plugging (but note that hot-plugging is precluded by
  hardware on OMAP5432x and AM572x). Background transfers are only partially
  implemented at present. DMA is used, as mandated by the AHCI specification.
  The module is written mostly in C for maintainability and extendability, and
  uses locks for compatibility with a future multi-core version of the OS.
Admin:
  This version is what appeared in initial Titanium ROM releases.

Tagged as 'SATADriver-0_01'
@
text
@@
