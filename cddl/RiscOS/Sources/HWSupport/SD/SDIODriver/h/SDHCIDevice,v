head	1.3;
access;
symbols
	SDIODriver-0_13:1.3
	SDIODriver-0_12:1.3
	SDIODriver-0_11:1.3
	SDIODriver-0_10:1.3
	SDIODriver-0_09:1.2
	SDIODriver-0_08:1.1.1.1
	SDIODriver-0_07:1.1.1.1
	SDIODriver-0_06:1.1.1.1
	SDIODriver-0_05:1.1.1.1
	SDIODriver-0_04:1.1.1.1
	SDIODriver-0_03:1.1.1.1
	SDIODriver-0_02:1.1.1.1
	SDIODriver-0_01:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.11.05.23.47.38;	author bavison;	state Exp;
branches;
next	1.2;
commitid	gIPNxvy52W00q3Xx;

1.2
date	2014.10.31.17.08.31;	author bavison;	state Exp;
branches;
next	1.1;
commitid	V3gCjETXCGx2nnWx;

1.1
date	2012.06.07.13.36.41;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	w3QGLLHHCyb5mM7w;

1.1.1.1
date	2012.06.07.13.36.41;	author bavison;	state Exp;
branches;
next	;
commitid	w3QGLLHHCyb5mM7w;


desc
@@


1.3
log
@  Tweak to SDHCI device API extension from version 0.09
Detail:
  Before this version gets too widely used in the wild, I'm taking the
  opportunity to correct the new call so that it takes the slot parameter
  like all the other calls do.


Version 0.10. Tagged as 'SDIODriver-0_10'
@
text
@/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "Licence").
 * You may not use this file except in compliance with the Licence.
 *
 * You can obtain a copy of the licence at
 * cddl/RiscOS/Sources/HWSupport/SD/SDIODriver/LICENCE.
 * See the Licence for the specific language governing permissions
 * and limitations under the Licence.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the Licence file. If applicable, add the
 * following below this CDDL HEADER, with the fields enclosed by
 * brackets "[]" replaced with your own identifying information:
 * Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/*
 * Copyright 2012 Ben Avison.  All rights reserved.
 * Use is subject to license terms.
 */

#ifndef INTERFACE_SDHCIDEVICE_H
#define INTERFACE_SDHCIDEVICE_H

#include <stdint.h>
#include "Global/HALDevice.h"

/** SDHCI slot info structure */
typedef struct
{
  uint32_t       flags;
  volatile void *stdregs;
}
sdhci_slotinfo_t;

/** SDHCI HAL device structure */
typedef struct sdhcidevice
{
  struct device     dev;
  uint32_t          flags;
  uint32_t          slots;
  sdhci_slotinfo_t *slotinfo;
  void            (*WriteRegister)(struct sdhcidevice *, uint32_t, volatile void *, uint32_t, uint32_t);
  uint64_t        (*GetCapabilities)(struct sdhcidevice *, uint32_t);
  uint32_t        (*GetVddCapabilities)(struct sdhcidevice *, uint32_t);
  void            (*SetVdd)(struct sdhcidevice *, uint32_t, uint32_t);
  void            (*SetBusMode)(struct sdhcidevice *, uint32_t, bool);
  void            (*PostPowerOn)(struct sdhcidevice *, uint32_t);
  void            (*SetBusWidth)(struct sdhcidevice *, uint32_t, uint32_t);
  uint32_t        (*GetMaxCurrent)(struct sdhcidevice *, uint32_t);
  uint32_t        (*SetSDCLK)(struct sdhcidevice *, uint32_t, uint32_t);
  uint32_t        (*GetTMCLK)(struct sdhcidevice *, uint32_t);
  void            (*SetActivity)(struct sdhcidevice *, uint32_t, uint32_t);
  bool            (*GetCardDetect)(struct sdhcidevice *, uint32_t);
  bool            (*GetWriteProtect)(struct sdhcidevice *, uint32_t);
  void            (*TriggerCommand)(struct sdhcidevice *, uint32_t, uint16_t, uint16_t);
}
sdhcidevice_t;

#endif
/* In the exported copy of this file, the Hdr2H translation of hdr.SDHCIDevice will follow. */
@


1.2
log
@  Miscellaneous improvements
Detail:
  * Important data loss bug rectified: the retry mechanism inadvertently
    failed to pass back over data that had been transmitted to the card but
    not written successfully, instead picking up afterwards and swallowing
    the error. Therefore, only repeatable errors such as card timeouts were
    being reported correctly, and user data could be lost with no indication
    until it failed to read back correctly.
  * Supports controllers with the following quirks:
    1) Error bit in interrupt status register not implemented
    2) Non-standard method of triggering SD bus command
  * Reports non-standard error number 12 reported by some controllers
  * Checks for a major version match on SDHCI HAL devices before using them
    (should have been doing this all along, but fortunately there are no
    plans for incompatible changes that would force a major version change
    in the forseeable future).

Version 0.09. Tagged as 'SDIODriver-0_09'
@
text
@d60 1
a60 1
  void            (*TriggerCommand)(struct sdhcidevice *, uint16_t, uint16_t);
@


1.1
log
@Initial revision
@
text
@d60 1
@


1.1.1.1
log
@Initial import of SDIODriver module
@
text
@@
