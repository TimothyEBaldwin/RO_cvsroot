head	1.1;
branch	1.1.1;
access;
symbols
	ADFS-4_05:1.1.1.1
	ADFS-4_04:1.1.1.1
	ADFS-4_03:1.1.1.1
	ADFS-4_02:1.1.1.1
	ADFS-4_01:1.1.1.1
	ADFS-4_00:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.03.13.22.26.14;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	7OqGiOHUJ5Dl4xYy;

1.1.1.1
date	2016.03.13.22.26.14;	author bavison;	state Exp;
branches;
next	;
commitid	7OqGiOHUJ5Dl4xYy;


desc
@@



1.1
log
@Initial revision
@
text
@/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "Licence").
 * You may not use this file except in compliance with the Licence.
 *
 * You can obtain a copy of the licence at
 * cddl/RiscOS/Sources/FileSys/ADFS/ADFS/LICENCE.
 * See the Licence for the specific language governing permissions
 * and limitations under the Licence.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the Licence file. If applicable, add the
 * following below this CDDL HEADER, with the fields enclosed by
 * brackets "[]" replaced with your own identifying information:
 * Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/*
 * Copyright 2012 Ben Avison.  All rights reserved.
 * Use is subject to license terms.
 */

#ifndef MISCOP_H
#define MISCOP_H

#include <stdint.h>

#include "globals.h"

low_level_error_t miscop_mount(uint32_t drive, uint32_t byte_address, uint8_t * restrict buffer, size_t length, disc_record_t * restrict disc_record);
void miscop_poll_changed(uint32_t drive, uint32_t * restrict sequence_number, uint32_t * restrict result_flags);
void miscop_lock_drive(uint32_t drive);
void miscop_unlock_drive(uint32_t drive);
void miscop_poll_period(uint32_t drive, uint32_t * restrict poll_period, const char ** restrict media_type_name);
void miscop_eject(uint32_t drive);
void miscop_drive_status(uint32_t drive, uint32_t *status_flags);

#endif
@


1.1.1.1
log
@  Initial import of ADFS 4
Detail:
  Version 4 of ADFS is a complete rewrite, but backward compatible with
  previous versions of ADFS. The hardware driver components have been
  extracted out into separate modules, along the lines of the
  SCSIFS/SCSIDriver and SDFS/SDIODriver interfaces. Initially, the only
  supported driver backend is for AHCI SATA controllers, but it is anticipated
  that PATA controller support and maybe even floppy drive support may be
  added at a later date to cater for legacy hardware. Background transfers are
  only partially implemented at present.
Admin:
  This version is what appeared in initial Titanium ROM releases.

Tagged as 'ADFS-4_00'
@
text
@@
