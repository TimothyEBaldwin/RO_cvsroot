head	1.1;
branch	1.1.1;
access;
symbols
	SDFS-0_10:1.1.1.1
	SDFS-0_09:1.1.1.1
	SDFS-0_08:1.1.1.1
	SDFS-0_07:1.1.1.1
	SDFS-0_06:1.1.1.1
	SDFS-0_05:1.1.1.1
	SDFS-0_04:1.1.1.1
	SDFS-0_03:1.1.1.1
	SDFS-0_02:1.1.1.1
	SDFS-0_01:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2012.06.07.21.29.43;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	PNKwkpA5TsZqYO7w;

1.1.1.1
date	2012.06.07.21.29.43;	author bavison;	state Exp;
branches;
next	;
commitid	PNKwkpA5TsZqYO7w;


desc
@@



1.1
log
@Initial revision
@
text
@# Makefile for SDFS

COMPONENT   = SDFS
ASMHDRS     = SDFS SDFSErr
ASMCHDRS    = SDFS SDFSErr
HDRS        =
CMHGFILE    = SDFSHdr
CMHGDEPENDS = command module
OBJS        = base cardreg command discop free freeveneer globals message miscop module sdio service swi
LIBS        = ${SYNCLIB}
ROMCDEFINES = -DROM_MODULE
CLEAN_DEPEND = extra_clean

#CFLAGS     += -DDEBUG_ENABLED

#OBJS       += gpiodebug
#CFLAGS     += -DGPIODEBUG

include CModule

expasmc.SDFSErr: hdr.SDFSErr
	${HDR2H} hdr.SDFSErr ${C_EXP_HDR}.SDFSErr
	
expasm.SDFSErr: hdr.SDFSErr
	${CP} hdr.SDFSErr ${EXP_HDR}.SDFSErr ${CPFLAGS}

hdr.SDFSErr: o.SDFSErr
	${LD} -bin -o $@@ o.SDFSErr
	SetType $@@ Text

ifeq (,${MAKE_VERSION})

# RISC OS / amu case

clean::
	@@IfThere hdr.SDFSErr Then ${ECHO} ${RM} hdr.SDFSErr
	@@IfThere hdr.SDFSErr Then ${RM} hdr.SDFSErr

else

# Posix / gmake case

clean::
	${NOP}

endif

# Dynamic dependencies:
@


1.1.1.1
log
@Initial import of SDFS module
@
text
@@
