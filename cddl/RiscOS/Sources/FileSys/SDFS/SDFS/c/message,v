head	1.2;
access;
symbols
	SDFS-0_10:1.2
	SDFS-0_09:1.2
	SDFS-0_08:1.2
	SDFS-0_07:1.2
	SDFS-0_06:1.2
	SDFS-0_05:1.2
	SDFS-0_04:1.1.1.1
	SDFS-0_03:1.1.1.1
	SDFS-0_02:1.1.1.1
	SDFS-0_01:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.07.14.09.38.32;	author bavison;	state Exp;
branches;
next	1.1;
commitid	a4B2ED2t8zpWnkIx;

1.1
date	2012.06.07.21.29.43;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	PNKwkpA5TsZqYO7w;

1.1.1.1
date	2012.06.07.21.29.43;	author bavison;	state Exp;
branches;
next	;
commitid	PNKwkpA5TsZqYO7w;


desc
@@


1.2
log
@  Support the Raspberry Pi model B+
Detail:
  For removable slots without a card detect pin, use an alternate state
  machine based upon timeouts to detect card removal or card changes. Note
  that this requires cooperation from FileCore (the same code paths as with
  selected floppy drives that had faulty disc changed pins) to avoid data
  loss by assuming that a disc might need remounting if a certain time has
  elapsed since the last successful operation. To avoid a significant speed
  penalty from deselecting and reselecting cards, remounting isn't used for
  rapid back-to-back operations.
Admin:
  Already in use in RC12a.

Version 0.05. Tagged as 'SDFS-0_05'
@
text
@/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "Licence").
 * You may not use this file except in compliance with the Licence.
 *
 * You can obtain a copy of the licence at
 * cddl/RiscOS/Sources/FileSys/SDFS/SDFS/LICENCE.
 * See the Licence for the specific language governing permissions
 * and limitations under the Licence.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the Licence file. If applicable, add the
 * following below this CDDL HEADER, with the fields enclosed by
 * brackets "[]" replaced with your own identifying information:
 * Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/*
 * Copyright 2012 Ben Avison.  All rights reserved.
 * Use is subject to license terms.
 */

/** \file message.c
 * Internationalisation.
 */

#include <string.h>
#include <stdarg.h>
#include "kernel.h"
#include "swis.h"

#include "globals.h"
#include "message.h"

static _kernel_oserror m_ErrorBuf;

_kernel_oserror *message_error_lookup(bool local, uint32_t number, const char *name, ...)
{
  const char *arg[4];
  va_list ap;
  va_start(ap, name);
  /* Yes, this technically reads off the end of the stack frame in most cases,
     but there will always be at least 4 words on the stack so this is safe */
  for (int i = 0; i < 4; i++)
    arg[i] = va_arg(ap, const char *);
  va_end(ap);
  
  /* Can't use MessageTrans_ErrorLookup because of the difficulty of allocating
     an input error block in C (at least without wasting most of 256 bytes) */
  m_ErrorBuf.errnum = number;
  _kernel_oserror *e = _swix(MessageTrans_Lookup, _INR(0,7), local ? &g_message_fd : 0, name, m_ErrorBuf.errmess, sizeof m_ErrorBuf.errmess, arg[0], arg[1], arg[2], arg[3]);
  if (e != NULL)
    strncpy(m_ErrorBuf.errmess, strchr(name, ':') + 1, sizeof m_ErrorBuf.errmess);
  return &m_ErrorBuf;
}

const char *message_lookup_direct(const char *token)
{
  const char *result;
  _kernel_oserror *e = _swix(MessageTrans_Lookup, _INR(0,2)|_OUT(2), &g_message_fd, token, 0, &result);
  if (!e)
    return result;
  else
    return e->errmess;
}

const char *message_lookup_buffer(const char *token, char *buffer, size_t buflen)
{
  const char *result;
  _kernel_oserror *e = _swix(MessageTrans_Lookup, _INR(0,3)|_OUT(2), &g_message_fd, token, buffer, buflen, &result);
  /* Note that MessageTrans always null-terminates the result even if it's
   * truncated, and the buffer length includes the terminator character. */
  if (!e)
    return result;
  else
    return e->errmess;
}

_kernel_oserror *message_copy(const _kernel_oserror *error)
{
  m_ErrorBuf.errnum = error->errnum;
  strcpy(m_ErrorBuf.errmess, error->errmess);
  return &m_ErrorBuf;
}
@


1.1
log
@Initial revision
@
text
@d70 12
@


1.1.1.1
log
@Initial import of SDFS module
@
text
@@
