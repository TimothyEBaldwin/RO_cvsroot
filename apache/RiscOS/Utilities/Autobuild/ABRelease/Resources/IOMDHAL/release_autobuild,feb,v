head	1.3;
access;
symbols
	ABRelease-0_89:1.3
	RISC_OS-5_26_merge:1.2.2.1
	ABRelease-0_85-1_84_2_1:1.2.2.1
	RISC_OS-5_26:1.2.0.2
	RISC_OS-5_26_bp:1.2
	ABRelease-0_88:1.2
	ABRelease-0_87:1.2
	ABRelease-0_86:1.2
	ABRelease-0_85:1.2
	ABRelease-0_84:1.2
	ABRelease-0_83:1.2
	ABRelease-0_82:1.2
	ABRelease-0_81:1.2
	ABRelease-0_80:1.2
	ABRelease-0_79:1.2
	ABRelease-0_78:1.2
	ABRelease-0_77:1.2
	ABRelease-0_76:1.2
	ABRelease-0_75:1.2
	ABRelease-0_74:1.2
	ABRelease-0_73:1.2
	ABRelease-0_72:1.2
	ABRelease-0_71:1.2
	ABRelease-0_70:1.2
	ABRelease-0_69:1.2
	ABRelease-0_68:1.2
	ABRelease-0_67:1.2
	ABRelease-0_66:1.2
	ABRelease-0_65:1.2
	ABRelease-0_64:1.2
	ABRelease-0_63:1.2
	ABRelease-0_62:1.2
	ABRelease-0_61:1.2
	ABRelease-0_60:1.2
	ABRelease-0_59:1.2
	ABRelease-0_58:1.2
	ABRelease-0_57:1.2
	ABRelease-0_56:1.2
	ABRelease-0_55:1.2
	ABRelease-0_54:1.2
	ABRelease-0_53:1.2
	ABRelease-0_52:1.2
	ABRelease-0_51:1.2
	ABRelease-0_50:1.2
	ABRelease-0_49:1.2
	ABRelease-0_48:1.1;
locks; strict;
comment	@# @;


1.3
date	2018.10.26.21.44.56;	author bavison;	state Exp;
branches;
next	1.2;
commitid	lMnNolXCxyxf6wXA;

1.2
date	2013.03.23.16.56.57;	author rsprowson;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	KeXXG5F5tpNTaWIw;

1.1
date	2013.03.23.13.20.42;	author rsprowson;	state Exp;
branches;
next	;
commitid	n4DzP17A4IfKYUIw;

1.2.2.1
date	2018.10.26.21.38.20;	author bavison;	state Exp;
branches;
next	;
commitid	UTAAsGEJKTSZ3wXA;


desc
@@


1.3
log
@Merge branch RISC_OS-5_26
This has the effect of changing from Castle to Apache licence

Version 0.89. Tagged as 'ABRelease-0_89'
@
text
@| Copyright 2013 Castle Technology Ltd
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
| If there is no ROM image (e.g. the build failed), exit here
IfThere <Build$Dir>.Images.<Build$ImageName> Then Else Obey

| Run our clean script
Run <ab_res$dir>.clean

| Prepare the ROM build zipfile
CDir <ab_res$dir>.zip
Copy ab_res:LICENSE                       <ab_res$dir>.zip.LICENSE ~cf~r~v
Copy ab_res:ReadMe/txt                    <ab_res$dir>.zip.ReadMe/txt ~cf~r~v
Copy <Build$Dir>.Images.<Build$ImageName> <ab_res$dir>.zip.riscos ~cf~r~v

| Create a zip archive with the required files in it
Dir <ab_res$dir>.zip
Do zip -9qr ^.<ab_local$zip> *
SetType <ab_res$dir>.<ab_local$zip> &A91
Back

| Prepare the softload zipfile
CDir <ab_res$dir>.soft
Copy ab_res:LICENSE <ab_res$dir>.soft.LICENSE ~cf~r~v
Copy <ab_res$dir>.zip.riscos <ab_soft$dir>.riscos ~cf~r~v

| Create a zip archive with the required files in it
Dir <ab_res$dir>.soft
Do zip -9qr ^.<ab_local$soft> *
SetType <ab_res$dir>.<ab_local$soft> &A91
Back

| Prepare the translation resources zipfile
CDir <ab_res$dir>.translate
CDir <ab_res$dir>.translate.Unprocessed
Copy ab_res:LICENSE <ab_res$dir>.translate.LICENSE ~cf~r~v
Sed -e s/"_BUILD_"/"RiscPC\/A7000\/A7000+"/g < ab_res:TransReadMe/txt >  <ab_res$dir>.translate.ReadMe/txt
IfThere <Resource$Dir>.Apps       Then Copy <Resource$Dir>.Apps       <ab_res$dir>.translate.Unprocessed.Apps ~cfr~v
IfThere <Resource$Dir>.Resources  Then Copy <Resource$Dir>.Resources  <ab_res$dir>.translate.Unprocessed.Resources ~cfr~v
IfThere <Resource$Dir>.Resources2 Then Copy <Resource$Dir>.Resources2 <ab_res$dir>.translate.Unprocessed.Resources ~cfr~v
IfThere <Resource$Dir>.Resources3 Then Copy <Resource$Dir>.Resources3 <ab_res$dir>.translate.Unprocessed.Resources ~cfr~v
IfThere <Resource$Dir>.Resources4 Then Copy <Resource$Dir>.Resources4 <ab_res$dir>.translate.Unprocessed.Resources ~cfr~v

| Create a zip archive with the required files in it
Dir <ab_res$dir>.translate
Do zip -9qr ^.<ab_local$translate> *
SetType <ab_res$dir>.<ab_local$translate> &A91
Back

| Copy just the ROM build zip archive onto the autobuild server
Remove <ab_zip$file>
Copy <ab_res$dir>.<ab_local$zip> <ab_zip$file> ~cfr~v
Access <ab_zip$file> rw/r
@


1.2
log
@For stable releases have the autobuilder archive the resources too
On an even numbered release capture the untokenised contents of ResourceFS so that people can translate them for use with !Territory.
Tested with IOMDHAL then cloned to the other ROM outputs, no doubt with plenty of scope for copy and paste mistakes.

Version 0.49. Tagged as 'ABRelease-0_49'
@
text
@d23 1
a23 1
Copy ab_res:Licence_v1_1/pdf              <ab_res$dir>.zip.Licence_v1_1/pdf ~cf~r~v
d35 1
a35 1
Copy ab_res:Licence_v1_1/pdf <ab_res$dir>.soft.Licence_v1_1/pdf ~cf~r~v
d47 1
a47 1
Copy ab_res:Licence_v1_1/pdf <ab_res$dir>.translate.Licence_v1_1/pdf ~cf~r~v
@


1.2.2.1
log
@Uupdate packaging to use Apache rather than Castle licence.

Version 0.85, 1.84.2.1. Tagged as 'ABRelease-0_85-1_84_2_1'
@
text
@d23 1
a23 1
Copy ab_res:LICENSE                       <ab_res$dir>.zip.LICENSE ~cf~r~v
d35 1
a35 1
Copy ab_res:LICENSE <ab_res$dir>.soft.LICENSE ~cf~r~v
d47 1
a47 1
Copy ab_res:LICENSE <ab_res$dir>.translate.LICENSE ~cf~r~v
@


1.1
log
@Sync ReadMe's with eachother
Some close relatives had become out of sync.
OMAP4 install script was trying to run SCSIForm.
Imported softload directory for IOMDHAL.
Some typos in the documentation ammended.

Version 0.48. Tagged as 'ABRelease-0_48'
@
text
@d21 1
a21 1
| Create an empty directory to hold the files that will be zipped up
d23 3
d27 1
a27 10
| Copy the Castle licence file into the zip directory
Copy ab_res:Licence_v1_1/pdf <ab_res$dir>.zip.Licence_v1_1/pdf ~cf~r~v

| Copy the ReadMe for this build into the zip directory
Copy ab_res:ReadMe/txt <ab_res$dir>.zip.ReadMe/txt ~cf~r~v

| Compress the ROM image into the zip directory
Do rompress -vZps 4M <Build$Dir>.Images.<Build$ImageName> <ab_res$dir>.zip.riscos

| Set the zip directory as the current directory
a28 2

| Create a zip archive with the required files in it
d30 1
a30 2

| Return the CSD to its original state
d33 2
a34 1
| Create the softload zipfile
d37 2
d40 1
a40 1
Do zip -9qr <ab_res$dir>.<ab_local$soft> *
d44 18
a61 1
| Delete any pre-existing ROM build zip archive on the autobuild server
a62 3

| Copy the ROM build zip archive onto the autobuild server
SetType <ab_res$dir>.<ab_local$zip> &A91
d64 1
a64 1
Access <ab_zip$file> rw/r@

