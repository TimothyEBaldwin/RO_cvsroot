head	1.15;
access;
symbols
	ABRelease-0_89:1.15
	RISC_OS-5_26_merge:1.14.2.1
	ABRelease-0_85-1_84_2_1:1.14.2.1
	RISC_OS-5_26:1.14.0.2
	RISC_OS-5_26_bp:1.14
	ABRelease-0_88:1.14
	ABRelease-0_87:1.14
	ABRelease-0_86:1.14
	ABRelease-0_85:1.14
	ABRelease-0_84:1.13
	ABRelease-0_83:1.13
	ABRelease-0_82:1.13
	ABRelease-0_81:1.13
	ABRelease-0_80:1.13
	ABRelease-0_79:1.13
	ABRelease-0_78:1.13
	ABRelease-0_77:1.13
	ABRelease-0_76:1.12
	ABRelease-0_75:1.12
	ABRelease-0_74:1.12
	ABRelease-0_73:1.12
	ABRelease-0_72:1.12
	ABRelease-0_71:1.12
	ABRelease-0_70:1.11
	ABRelease-0_69:1.11
	ABRelease-0_68:1.11
	ABRelease-0_67:1.11
	ABRelease-0_66:1.11
	ABRelease-0_65:1.11
	ABRelease-0_64:1.11
	ABRelease-0_63:1.11
	ABRelease-0_62:1.11
	ABRelease-0_61:1.10
	ABRelease-0_60:1.10
	ABRelease-0_59:1.10
	ABRelease-0_58:1.10
	ABRelease-0_57:1.10
	ABRelease-0_56:1.10
	ABRelease-0_55:1.10
	ABRelease-0_54:1.10
	ABRelease-0_53:1.10
	ABRelease-0_52:1.10
	ABRelease-0_51:1.10
	ABRelease-0_50:1.10
	ABRelease-0_49:1.10
	ABRelease-0_48:1.10
	ABRelease-0_47:1.9
	ABRelease-0_46:1.8
	ABRelease-0_45:1.8
	ABRelease-0_44:1.8
	ABRelease-0_43:1.8
	ABRelease-0_42:1.8
	ABRelease-0_41:1.8
	ABRelease-0_40:1.8
	ABRelease-0_39:1.8
	ABRelease-0_38:1.8
	ABRelease-0_37:1.8
	ABRelease-0_36:1.8
	ABRelease-0_35:1.8
	ABRelease-0_34:1.8
	ABRelease-0_33:1.8
	ABRelease-0_32:1.8
	ABRelease-0_31:1.8
	ABRelease-0_30:1.8
	ABRelease-0_29:1.8
	ABRelease-0_28:1.8
	ABRelease-0_27:1.8
	ABRelease-0_26:1.8
	ABRelease-0_25:1.8
	ABRelease-0_24:1.8
	ABRelease-0_23:1.8
	ABRelease-0_22:1.8
	ABRelease-0_21:1.8
	ABRelease-0_20:1.7
	ABRelease-0_19:1.6
	ABRelease-0_18:1.6
	ABRelease-0_17:1.6
	ABRelease-0_16:1.5
	ABRelease-0_15:1.5
	ABRelease-0_14:1.4
	ABRelease-0_13:1.3
	ABRelease-0_12:1.3
	ABRelease-0_11:1.2
	ABRelease-0_10:1.1
	ABRelease-0_09:1.1
	ABRelease-0_08:1.1
	ABRelease-0_07:1.1
	ABRelease-0_06:1.1;
locks; strict;
comment	@# @;


1.15
date	2018.10.26.21.44.56;	author bavison;	state Exp;
branches;
next	1.14;
commitid	lMnNolXCxyxf6wXA;

1.14
date	2018.02.06.22.22.09;	author rool;	state Exp;
branches
	1.14.2.1;
next	1.13;
commitid	LYNffDyBcFaaJQpA;

1.13
date	2016.10.16.11.06.34;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	SlShNgDJpc5Zlmqz;

1.12
date	2015.11.07.18.14.26;	author rool;	state Exp;
branches;
next	1.11;
commitid	9EAIGEpBLJIkMbIy;

1.11
date	2015.07.04.19.17.19;	author jlee;	state Exp;
branches;
next	1.10;
commitid	5Y0OHwGXg2QXa0sy;

1.10
date	2013.03.23.13.20.57;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	n4DzP17A4IfKYUIw;

1.9
date	2012.11.02.01.27.37;	author bavison;	state Exp;
branches;
next	1.8;
commitid	OqVinFR6uoYZyJqw;

1.8
date	2012.01.07.18.44.51;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	MqW9i2HMopPMWgOv;

1.7
date	2011.10.20.15.37.47;	author srevill;	state Exp;
branches;
next	1.6;
commitid	WVmebJj7RqV3s6Ev;

1.6
date	2011.01.23.23.08.50;	author jlee;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.14.19.00.21;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.14.15.08.11;	author srevill;	state Exp;
branches;
next	1.3;

1.3
date	2010.10.13.00.10.37;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2010.03.03.22.06.06;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.14.23.19.03;	author rool;	state Exp;
branches;
next	;

1.14.2.1
date	2018.10.26.21.38.21;	author bavison;	state Exp;
branches;
next	;
commitid	UTAAsGEJKTSZ3wXA;


desc
@@


1.15
log
@Merge branch RISC_OS-5_26
This has the effect of changing from Castle to Apache licence

Version 0.89. Tagged as 'ABRelease-0_89'
@
text
@RISC OS Open Release Archive
============================

This is the OMAP (Beagle Board) development ROM image. It is a bleeding-edge
build which comes from the latest revisions of all the relevant sources in
our source code repository and is completely untested.

Using this ROM image in your board should only be done if you are confident
that you know what you are doing! It is likely to be functionally incomplete
and probably unstable in various ways.


IMPORTANT
=========

This build of RISC OS utilises "zero page relocation", a change to the
standard memory map which is designed to increase the stability of the OS and
your software. However, there is a catch - a lot of existing software is buggy,
and this change will expose those bugs, causing the software to crash.

To help with the transition to having zero page relocation enabled by default,
a compatibility/logging module called 'ZeroPain' has been developed. See the
readme file in the ZeroPain folder for more information. It is recommended that
you install the module before you install this new ROM image, otherwise you may
have difficulty booting your system.


How to install the ROM image
============================

The easiest way to install the ROM image onto an SD card is to use the
included !SDCreate application. If you have the RISC OS 5 USB mass storage
drivers then !SDCreate can write the image straight to an SD card.

Alternatively you can create a disc image file which can then be written to a
card using any ordinary Windows/Linux/Mac PC. For more information, including
a description of the SD card structure, see the !SDCreate help file.


The 'InstallHD4' script, and setting up a !Boot sequence
========================================================

For details of how to setup up a !Boot sequence for your OMAP3 machine, please
see the 'Putting the HardDisc4 image onto a USB drive' section of this wiki
page:

  http://www.riscosopen.org/wiki/documentation/show/Generic%20OMAP%20port%20setup%20information

The 'InstallHD4' script supplied with this archive is intended to be used in
conjunction with the installation steps given on the above page.


CMOS RAM
========

The OMAP port of RISC OS now supports saving configuration settings in a CMOS
memory chip so that they are kept when the power is turned off. This
requires a small carrier board to be plugged in, which you can obtain for
a few pounds from

  http://www.riscosopen.org/content/sales/cmos-widgets

or your RISC OS dealer.

If this carrier board is not detected it is possible to seed the CMOS settings
in one of two ways

  * Add a CMOS file to the SD card
    Make any configuration settings changes desired than use the *SaveCMOS
    command to capture them in a file, put this file on the SD card alongside
    the RISC OS ROM image. The SDCMOS module included in the operating system
    will update this file whenever a configuration change is made.
  * Do nothing
    If the hardware is not present, and you haven't put a CMOS file on the
    SD card, you'll get the built in defaults every time you turn on.

-- RISC OS Open
@


1.14
log
@Readme dead links and corrections
Detail:
  Fix wiki links to point at actual page not redirector.
  Copy common paragraphs to OMAP5 from OMAP3/4.
  Add SDCreate notes to iMx6.

Version 0.85. Tagged as 'ABRelease-0_85'
@
text
@a11 5
Some components in this archive are released under the licence (included in
this archive as Licence_v1_1.pdf), or see:

  http://www.castle-technology.co.uk/riscosbaselicence.htm

@


1.14.2.1
log
@Uupdate packaging to use Apache rather than Castle licence.

Version 0.85, 1.84.2.1. Tagged as 'ABRelease-0_85-1_84_2_1'
@
text
@d12 5
@


1.13
log
@Update ReadMe's
Clarify CMOS use with OMAP3/4, copy notes to BCM2835.
Update FlashQSPI to latest for Titanium.

Version 0.77. Tagged as 'ABRelease-0_77'
@
text
@d42 1
a42 4
a description of the SD card structure, see the !SDCreate help file or the
RISC OS Open wiki:

  http://www.riscosopen.org/wiki/documentation/pages/Using+the+Cortex-A8+port
d52 1
a52 1
  http://www.riscosopen.org/wiki/documentation/pages/Using+the+Cortex-A8+port
@


1.12
log
@Add ABRelease resources for OMAP5 and Titanium
Details:
  OMAP5Dev based on OMAP4Dev, minus the SD card instructions.
  Titanium based on OMAP4Dev, plus flash programming instructions.
Admin:
  Lined up OMAP3 & 4 readme's to 80 columns.

Version 0.71. Tagged as 'ABRelease-0_71'
@
text
@d61 2
a62 2
An important note about CMOS RAM
================================
d67 1
a67 1
a few pounds from your favourite supplier.
d69 6
a74 2
If this carrier board is not detected it is possible to have 'read only' 
settings in one of two ways
d79 2
a80 3
    the RISC OS ROM image.
    For more information about how the CMOS file is handled, please see
    the !SDCreate help file.
d83 1
a83 1
    SD card, you'll get the built in defaults.
@


1.11
log
@Prepare for zero page relocation
Detail:
  Resources/Generic/ZeroPain - New folder containing a build of ZeroPain 0.02 plus usage instructions
  Resources/(BCM2835Dev|OMAP3Dev|OMAP4Dev|TungstenDev)/release_autobuild,feb - Updated to add ZeroPain to the output zip file
  Resources/(BCM2835Dev|OMAP3Dev|OMAP4Dev|TungstenDev)/ReadMe.txt - Added warning note about zero page relocation being enabled
Admin:
  release_autobuild tested with packaging an Iyonix ROM


Version 0.62. Tagged as 'ABRelease-0_62'
@
text
@d69 2
a70 1
If this carrier board is not detected it is possible to have 'read only' settings in one of two ways
@


1.10
log
@Sync ReadMe's with eachother
Some close relatives had become out of sync.
OMAP4 install script was trying to run SCSIForm.
Imported softload directory for IOMDHAL.
Some typos in the documentation ammended.

Version 0.48. Tagged as 'ABRelease-0_48'
@
text
@d18 15
@


1.9
log
@Upgraded the Castle licence document in the various release archives

Version 0.47. Tagged as 'ABRelease-0_47'
@
text
@d8 1
a8 1
Using this ROM image in your Beagle should only be done if you are confident
d49 4
a52 1
The OMAP port of RISC OS now supports saving configuration settings in a CMOS memory chip so that they are kept when the power is turned off. This requires a small carrier board to be plugged in, which you can obtain for a few pounds from your favourite supplier.
@


1.8
log
@A few changes to make deciphering what's what easier.
For ROMs we essentially have IOMDHAL[Dev]; Tungsten[Dev]; OMAP3[Dev]; OMAP4Dev and for these it only makes sense to autobuild the Dev ones and offer them as softloads where there's an actual ROM chip to softload over. OMAP4Dev remains development status, IOMDHAL doesn't exist in stable form.
So:
 * IOMDHALDev - only make a softload ZIP file
 * IOMDHAL - do not use at this time
 * OMAP3Dev - updated text docs to reflect CMOS use
 * OMAP3 - do not use at this time
 * TungstenDev - only make a softload ZIP file
 * Tungsten - do not use at this time
 * OMAP4Dev - untouched
Removed references to !SCSIForm from InstallHD4 script.
Don't turn off alignment exceptions by default in InstallHD4 script.
Update RMEnsures to 5.19 for development.
Make readme's be non specific about the version to save updating them again.

Version 0.21. Tagged as 'ABRelease-0_21'
@
text
@d13 1
a13 1
this archive as Licence_v1.pdf), or see:
@


1.7
log
@Added Disc and OMAP4Dev ABRelease resources

Added autobuild resources for the OMAP4Dev and Disc builds. Both of
which are untested but at least the OMAP4Dev one should be fine as
it's just a copy of the OMAP3Dev resources (with a couple of edits).

The Disc build stuff is about building a (zip compressed) Filecore
disc image of the resulting stuff. This would be good for 'burning'
straight onto a USB memory stick (e.g. with the Unix 'dd' command)
to boot machines from. WORK IN PROGRESS!

Version 0.20. Tagged as 'ABRelease-0_20'
@
text
@d49 1
a49 8
The OMAP port of RISC OS now has the ability to use CMOS settings that are
saved to the SD card alongside the ROM image. However, RISC OS currently
lacks the ability to write updated settings back to the card. Therefore if
you make any configuration changes that will affect CMOS RAM (e.g. switching
to boot from drive 4 instead of 0) then you must make sure you manually save
the settings using *SaveCMOS and copy the new file onto the SD card. For more
information about how the CMOS file is handled, please see the !SDCreate help
file.
d51 11
@


1.6
log
@Update SDCreate to V1.10. Add note about CMOS RAM.
Detail:
  Resources/OMAP3Dev/ReadMe.txt - Added a note about how the OMAP port handles CMOS RAM
  Resources/OMAP3Dev/!SDCreate/!Help, Desc, SDCreate,ffb, Templates,fec - Updated SDCreate to V1.10, which supports placing CMOS files into the SD images
Admin:
  New version of SDCreate tested on Iyonix; resulting images tested on BeagleBoard.


Version 0.17. Tagged as 'ABRelease-0_17'
@
text
@d49 8
a56 1
The OMAP port of RISC OS now has the ability to use CMOS settings that are saved to the SD card alongside the ROM image. However, RISC OS currently lacks the ability to write updated settings back to the card. Therefore if you make any configuration changes that will affect CMOS RAM (e.g. switching to boot from drive 4 instead of 0) then you must make sure you manually save the settings using *SaveCMOS and copy the new file onto the SD card. For more information about how the CMOS file is handled, please see the !SDCreate help file.
@


1.5
log
@Replace !SDCreate with v1.02b. Add InstallHD4 script to help with setting up a !Boot sequence on OMAP machines.
Detail:
  Resources/OMAP3Dev/!SDCreate/!Help, !Run, !Desc - Updated to V1.02b. Only real change is to check for v1.28 of the FrontEnd module, since v1.16 was reported as not working.
  Resources/OMAP3Dev/InstallHD4,fe6, ReadMe.txt, release_autobuild,feb - Added InstallHD4 script, based around Trevor Johnson's script on the wiki
Admin:
  InstallHD4 script tested on BB-xM; seems to work!


Version 0.15. Tagged as 'ABRelease-0_15'
@
text
@d46 6
@


1.4
log
@Made various changes to this component to bring into line with releases.

Various targets from this component now build stuff which fully matches
the things that get uploaded onto the ROOL web site. This removes quite
a bit of manual faffing from the autobuild-then-release process. Next
step will be to fully automate the autobuilder using the modified RPCemu
from Jeffrey Lee.

Version 0.14. Tagged as 'ABRelease-0_14'
@
text
@d33 13
@


1.3
log
@Update OMAP3 ROM autobuilder step to include !SDCreate in the ROM archive instead of a bunch of U-Boot scripts
Detail:
  Rather than running the risk of the user (or his OS) doing something wrong when creating SD card images from scratch, OMAP3 ROM images will now ship with the !SDCreate utility that presents the user with an easy-to-use WIMP frontend for creating and writing SD card images.
  For people without (working) RISC OS machines, the !SDCreate help file also contains enough information to allow them to set up a card manually, along with the source to the U-Boot scripts - so we're not really losing anything by deleting the old scripts folder.
Admin:
  Tested the release_autobuild stage on an OMAP3 ROM build, and everything seemed to be OK.


Version 0.12. Tagged as 'ABRelease-0_12'
@
text
@d21 8
a28 1
The easiest way to install the ROM image onto an SD card is to use the included !SDCreate application. If you have the RISC OS 5 USB mass storage drivers then !SDCreate can write the image straight to an SD card. Alternatively you can create a disc image file which can then be written to a card using any ordinary Windows/Linux/Mac PC. For more information, including a description of the SD card structure, see the !SDCreate help file or the RISC OS Open wiki:
@


1.2
log
@Add OMAP3 U-Boot scripts to autobuilder
Detail:
  The OMAP3Dev product now has its own custom release_autobuild script, which adds my U-Boot scripts and their source code to the zip file.
Admin:
  Tested with MkAuto script; seems to work OK!


Version 0.11. Tagged as 'ABRelease-0_11'
@
text
@d18 2
a19 2
U-Boot scripts
==============
d21 1
a21 1
In addition to the ROM image, this archive also contains a set of U-Boot scripts to allow you to easily boot RISC OS on machines that use the U-Boot bootloader (e.g. BeagleBoard, IGEPv2, Touch Book, etc.)
d23 1
a23 9
In the U-Boot_scripts folder, find the script that corresponds to your machine type and copy it to an SD card along with the RISC OS ROM image. Note that you must also rename the boot script to 'boot.scr' so that U-Boot will find it (with a few exceptions - see below)

Notes:
* Owners of IGEPv2 boards must name the script 'boot.ini'
* If your board contains a version of u-boot prior to 2009.01, the script may instead have to be named 'reset.scr'
* Also note that 'boot.scr' is the Unix/Windows name of the file - if you're using RISC OS to copy the file you'll obviously have to copy it as 'boot/scr' instead (or 'boot/ini', etc.)
* If you use Windows to copy the file, please make sure that 'Hide extensions for known file types' is not enabled in your Folder Options, otherwise you may inadvertently copy the script as 'boot.scr.scr'!

For the curious, the 'source' folder contains the source code for the U-Boot scripts, along with an explanation of how they function.
@


1.1
log
@Further makefile tweaks. Added support for IOMDHALDev and OMAP3Dev builds.

Version 0.06. Tagged as 'ABRelease-0_06'
@
text
@d17 17
@

