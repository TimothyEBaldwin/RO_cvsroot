head	1.1;
access;
symbols
	ABRelease-0_89:1.1
	RISC_OS-5_26_merge:1.1
	ABRelease-0_85-1_84_2_1:1.1
	RISC_OS-5_26:1.1.0.2
	RISC_OS-5_26_bp:1.1
	ABRelease-0_88:1.1
	ABRelease-0_87:1.1
	ABRelease-0_86:1.1
	ABRelease-0_85:1.1
	ABRelease-0_84:1.1
	ABRelease-0_83:1.1
	ABRelease-0_82:1.1
	ABRelease-0_81:1.1
	ABRelease-0_80:1.1
	ABRelease-0_79:1.1
	ABRelease-0_78:1.1
	ABRelease-0_77:1.1
	ABRelease-0_76:1.1
	ABRelease-0_75:1.1
	ABRelease-0_74:1.1
	ABRelease-0_73:1.1
	ABRelease-0_72:1.1
	ABRelease-0_71:1.1
	ABRelease-0_70:1.1
	ABRelease-0_69:1.1
	ABRelease-0_68:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.09.05.08.21.37;	author rsprowson;	state Exp;
branches;
next	;
commitid	MAgsO7YkerSvw2Ay;


desc
@@


1.1
log
@Add supporting ReadMe's for developer bonus binaries product

Version 0.68. Tagged as 'ABRelease-0_68'
@
text
@Territory modules
=================

These are disc loading versions of the territory modules for those 
territories for which historically a version of RISC OS has been produced.

It is a bleeding-edge build which comes from the latest revisions of 
all the relevant sources in our source code repository and is completely 
untested.

To make a complete distribution for a territory you will need:

 1. To translate all of the ROM resources for a given ROM.

 2. Create a !Territory application, with the structure
      !Territory.Territory   <-- The territory module for the respective
                                 country, renamed as "Territory"
      !Territory.Messages    <-- A directory containing any number of 
                                 relocatable modules to load the replacement
                                 messages into ResourceFS. 
      !Territory.!Run        <-- Can be empty, the territory application is 
                                 run during the normal boot sequence to 
                                 perform any extra setup steps once the boot
                                 variables are known
      !Territory.!Sprites    <-- Optional sprites, for example the flag of
                                 the respective territory might be appropriate

    Each territory module is a "standalone" version, so it will register 
    its own resources with ResourceFS when loaded, you do not need to 
    provide these in your messages module(s).

 3. Place the !Territory application created above into the root directory
    of the default boot drive.

 4. Configure the system to use this territory using the command
      *CONFIGURE TERRITORY <number>
    where the <number> is one of the territories known to the TerritoryManager
    module, a list of which can be found by looking at the names listed
      Resources:$.Resources.TerrMgr.Messages
    though note that modules have not been written for every country listed.

 5. Reboot the computer for the settings to take effect.

@
