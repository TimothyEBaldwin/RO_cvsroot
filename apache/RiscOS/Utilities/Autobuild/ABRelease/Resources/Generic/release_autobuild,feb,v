head	1.8;
access;
symbols
	ABRelease-0_89:1.8
	RISC_OS-5_26_merge:1.7.2.1
	ABRelease-0_85-1_84_2_1:1.7.2.1
	RISC_OS-5_26:1.7.0.2
	RISC_OS-5_26_bp:1.7
	ABRelease-0_88:1.7
	ABRelease-0_87:1.7
	ABRelease-0_86:1.7
	ABRelease-0_85:1.7
	ABRelease-0_84:1.7
	ABRelease-0_83:1.7
	ABRelease-0_82:1.7
	ABRelease-0_81:1.7
	ABRelease-0_80:1.7
	ABRelease-0_79:1.7
	ABRelease-0_78:1.7
	ABRelease-0_77:1.7
	ABRelease-0_76:1.7
	ABRelease-0_75:1.7
	ABRelease-0_74:1.7
	ABRelease-0_73:1.7
	ABRelease-0_72:1.7
	ABRelease-0_71:1.7
	ABRelease-0_70:1.7
	ABRelease-0_69:1.7
	ABRelease-0_68:1.7
	ABRelease-0_67:1.7
	ABRelease-0_66:1.7
	ABRelease-0_65:1.7
	ABRelease-0_64:1.7
	ABRelease-0_63:1.7
	ABRelease-0_62:1.7
	ABRelease-0_61:1.7
	ABRelease-0_60:1.7
	ABRelease-0_59:1.7
	ABRelease-0_58:1.7
	ABRelease-0_57:1.7
	ABRelease-0_56:1.7
	ABRelease-0_55:1.7
	ABRelease-0_54:1.7
	ABRelease-0_53:1.7
	ABRelease-0_52:1.7
	ABRelease-0_51:1.7
	ABRelease-0_50:1.7
	ABRelease-0_49:1.7
	ABRelease-0_48:1.7
	ABRelease-0_47:1.7
	ABRelease-0_46:1.6
	ABRelease-0_45:1.6
	ABRelease-0_44:1.6
	ABRelease-0_43:1.6
	ABRelease-0_42:1.6
	ABRelease-0_41:1.6
	ABRelease-0_40:1.6
	ABRelease-0_39:1.6
	ABRelease-0_38:1.6
	ABRelease-0_37:1.6
	ABRelease-0_36:1.6
	ABRelease-0_35:1.6
	ABRelease-0_34:1.6
	ABRelease-0_33:1.6
	ABRelease-0_32:1.6
	ABRelease-0_31:1.6
	ABRelease-0_30:1.6
	ABRelease-0_29:1.6
	ABRelease-0_28:1.6
	ABRelease-0_27:1.6
	ABRelease-0_26:1.6
	ABRelease-0_25:1.6
	ABRelease-0_24:1.6
	ABRelease-0_23:1.6
	ABRelease-0_22:1.6
	ABRelease-0_21:1.6
	ABRelease-0_20:1.6
	ABRelease-0_19:1.6
	ABRelease-0_18:1.6
	ABRelease-0_17:1.6
	ABRelease-0_16:1.6
	ABRelease-0_15:1.6
	ABRelease-0_14:1.6
	ABRelease-0_13:1.5
	ABRelease-0_12:1.5
	ABRelease-0_11:1.5
	ABRelease-0_10:1.5
	ABRelease-0_09:1.4
	ABRelease-0_08:1.3
	ABRelease-0_07:1.3
	ABRelease-0_06:1.2
	ABRelease-0_05:1.2
	ABRelease-0_04:1.2
	ABRelease-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2018.10.26.21.44.55;	author bavison;	state Exp;
branches;
next	1.7;
commitid	lMnNolXCxyxf6wXA;

1.7
date	2012.11.02.01.27.26;	author bavison;	state Exp;
branches
	1.7.2.1;
next	1.6;
commitid	OqVinFR6uoYZyJqw;

1.6
date	2010.11.14.15.08.04;	author srevill;	state Exp;
branches;
next	1.5;

1.5
date	2009.11.12.14.32.51;	author rool;	state Exp;
branches;
next	1.4;

1.4
date	2009.11.11.19.16.41;	author rool;	state Exp;
branches;
next	1.3;

1.3
date	2009.07.15.01.22.23;	author rool;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.14.01.44.07;	author rool;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.13.16.10.12;	author srevill;	state Exp;
branches
	1.1.1.1;
next	;

1.7.2.1
date	2018.10.26.21.38.20;	author bavison;	state Exp;
branches;
next	;
commitid	UTAAsGEJKTSZ3wXA;

1.1.1.1
date	2009.07.13.16.10.12;	author srevill;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Merge branch RISC_OS-5_26
This has the effect of changing from Castle to Apache licence

Version 0.89. Tagged as 'ABRelease-0_89'
@
text
@| Copyright 2009 Castle Technology Ltd
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
| If there is no ROM image (e.g. the build failed), exit here
IfThere <Build$Dir>.Images.<Build$ImageName> Then Else Obey

| Remove any old crud from our build-specific resources directory
x Wipe <ab_res$dir>.zip ~cfr~v
Remove <ab_res$dir>.<ab_local$zip>

| Create an empty directory to hold the files that will be zipped up
CDir <ab_res$dir>.zip

| Copy the Apache licence file into the zip directory
Copy ab_res:LICENSE <ab_res$dir>.zip.LICENSE ~cf~r~v

| Copy the ReadMe for this build into the zip directory
Copy ab_res:ReadMe/txt <ab_res$dir>.zip.ReadMe/txt ~cf~r~v

| Copy the ROM image into the zip directory
Copy <Build$Dir>.Images.<Build$ImageName> <ab_res$dir>.zip.riscos ~cf~r~v

| Set the zip directory as the current directory
Dir <ab_res$dir>.zip

| Create a zip archive with the required files in it
Do zip -9qr ^.<ab_local$zip> *

| Return the CSD to its original state
Back

| Delete any pre-existing zip archive on the autobuild server
Remove <ab_zip$file>

| Copy the template zip archive onto the autobuild server
SetType <ab_res$dir>.<ab_local$zip> &A91
Copy <ab_res$dir>.<ab_local$zip> <ab_zip$file> ~cfr~v
Access <ab_zip$file> rw/r
@


1.7
log
@Upgraded the Castle licence document in the various release archives

Version 0.47. Tagged as 'ABRelease-0_47'
@
text
@d25 2
a26 2
| Copy the Castle licence file into the zip directory
Copy ab_res:Licence_v1_1/pdf <ab_res$dir>.zip.Licence_v1_1/pdf ~cf~r~v
d49 1
a49 1
Access <ab_zip$file> rw/r@


1.7.2.1
log
@Uupdate packaging to use Apache rather than Castle licence.

Version 0.85, 1.84.2.1. Tagged as 'ABRelease-0_85-1_84_2_1'
@
text
@d25 2
a26 2
| Copy the Apache licence file into the zip directory
Copy ab_res:LICENSE <ab_res$dir>.zip.LICENSE ~cf~r~v
d49 1
a49 1
Access <ab_zip$file> rw/r
@


1.6
log
@Made various changes to this component to bring into line with releases.

Various targets from this component now build stuff which fully matches
the things that get uploaded onto the ROOL web site. This removes quite
a bit of manual faffing from the autobuild-then-release process. Next
step will be to fully automate the autobuilder using the modified RPCemu
from Jeffrey Lee.

Version 0.14. Tagged as 'ABRelease-0_14'
@
text
@d26 1
a26 1
Copy ab_res:Licence_v1/pdf <ab_res$dir>.zip.Licence_v1/pdf ~cf~r~v
@


1.5
log
@Yes, yes... I should have tested it first.

So much for thinking "this is such a trivial change, what could possibly
go wrong?".

Version 0.10. Tagged as 'ABRelease-0_10'
@
text
@d20 1
a20 1
Remove <ab_res$dir>.tmp/zip
d32 1
a32 1
Copy <Build$Dir>.Images.<Build$ImageName> <ab_res$dir>.zip.<Build$ImageName> ~cf~r~v
d38 1
a38 1
Do zip -9qj ^.tmp/zip *
d47 3
a49 3
Copy <ab_res$dir>.tmp/zip <ab_zip$file> ~cfr~v
SetType <ab_zip$file> &A91
Access <ab_zip$file> rw/r
@


1.4
log
@Moved some clean-up commands so I can see the results of a build after
it has completed - useful if an upload from the autobuild system fails.

Version 0.09. Tagged as 'ABRelease-0_09'
@
text
@a17 3
| Create an empty directory to hold the files that will be zipped up
CDir <ab_res$dir>.zip

d22 3
@


1.3
log
@Minor improvement to generic release phase script.

Filetypes the zip file to the new Zipfile allocation rather thann the
old &DDC Archive allocation. Also sets access to wr/r (644).

Version 0.07. Tagged as 'ABRelease-0_07'
@
text
@d21 4
a49 4

| Remove any old crud from our build-specific resources directory
x Wipe <ab_res$dir>.zip ~cfr~v
Remove <ab_res$dir>.tmp/zip@


1.2
log
@Fixed some very odd issues in the TungstenDev build.

I don't fully understand what was going wrong, but looked like an odd
interaction with Task Windows, SparkFS and Sunfish. I've removed all
requirement for SparkFS in favour of using the InfoZip CLI tool.

Admin:
  Tested in simple test builds and TungstenDev (but not a full autobuild
  because it's not in cvs yet!)
  Will require Library 1.36 or later.
Author:
  srevill

Version 0.04. Tagged as 'ABRelease-0_04'
@
text
@d44 2
@


1.1
log
@Initial revision
@
text
@d18 20
a37 25
| If SparkFS isn't running, we're going to have problems so generate error
RMEnsure SparkFS 0.00 Error ABRelease: release_autobuild: requires SparkFS to be present
RMEnsure Zip     0.00 Error ABRelease: release_autobuild: requires the SparkFS Zip module to be present

| Remove any old template zip archive from our resources directory
Remove <ab_res$dir>.zip

| Copy the central template zip archive into our resources directory
Do Copy ab_res:zip <ab_res$dir>.zip ~cfr~v
Run ab_res:NullEvent

| Open the archive so we can copy into it
Do Filer_Run <ab_res$dir>.zip
Run ab_res:NullEvent

| Copy a ReadMe file into the zip archive
Copy ab_res:ReadMe/txt <ab_res$dir>.zip.ReadMe/txt ~cfr~v

| Copy the ROM image into the zip archive
Copy <Build$Dir>.Images.<Build$ImageName> <ab_res$dir>.zip.<Autobuild$Build> ~cfr~v
Run ab_res:NullEvent

| Close the archive (filer window)
Do Filer_CloseDir <ab_res$dir>.zip
Run ab_res:NullEvent
d43 1
a43 1
Copy <ab_res$dir>.zip <ab_zip$file> ~cfr~v
d45 3
a47 2
| Remove the template zip archive from our resources directory
Remove <ab_res$dir>.zip@


1.1.1.1
log
@Initial import of the ABRelease component.
@
text
@@
