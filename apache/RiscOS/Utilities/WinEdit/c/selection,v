head	1.1;
branch	1.1.1;
access;
symbols
	WinEdit-1_13:1.1.1.1
	WinEdit-1_12:1.1.1.1
	WinEdit-1_11:1.1.1.1
	WinEdit-1_10:1.1.1.1
	WinEdit-1_09:1.1.1.1
	WinEdit-1_08:1.1.1.1
	WinEdit-1_07:1.1.1.1
	WinEdit-1_06:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.12.10.19.05.14;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.10.19.05.14;	author bavison;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 2003 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*-*-C-*-
 *
 * Code to handle selections
 */

#include "resed.h"

static int selwindow = -1;            /* Window with the selection; -1 if we don't own it */
static Bool temporary = FALSE;        /* It's a temporary selection */

/*
 * gain selection in the given window.  If another
 * of our windows currently has it, deselect all in that window first.
 */

error * selection_claim (int window)
{
    if (selwindow == window)
        return NULL;
    else if (selwindow != -1)
        ER (selection_lose () )
    selwindow = window;
    temporary = FALSE;
    return NULL;
}


error * selection_lose ()
{
    void *closure;
    RegistryType type = registry_lookup_window (selwindow, &closure);

    switch (type)
    {
    case Document:
        ER ( document_lose_selection ((DocumentPtr) closure) );
        break;
    case Template:
        ER ( template_lose_selection ((ResourcePtr) closure) );
        break;
    }
    
    selwindow = -1;
    temporary = FALSE;
    return NULL;
}

error * selection_giveup (int window)
{
    if (window == selwindow)
    {
        selwindow = -1;
        temporary = FALSE;
    }
    return NULL;
}


/*
 * Pass NULL if you don't care about the temp setting
 */

int selection_current (Bool *istemp)
{
    if (istemp)
        *istemp = temporary;
    return selwindow;
}


void selection_set_temporary (Bool temp)
{
    temporary = temp;
}
@


1.1.1.1
log
@Dug up the sources to WinEdit from the old Aquarius SrcFiler repository.
Made properly StrongARM and 32-bit compatible; updated to C99 standard;
gets version from VersionNum file; new Makefile written to use shared
makefiles and to provide an install rule.

Version 1.06. Tagged as 'WinEdit-1_06'
@
text
@@
