head	1.4;
access;
symbols
	romlinker-0_06:1.4
	romlinker-0_05:1.3
	romlinker-0_04:1.3
	romlinker-0_03:1.3
	romlinker-0_02:1.2
	romlinker-0_01:1.2
	romlinker-0_00:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2016.04.06.00.45.31;	author jlee;	state Exp;
branches;
next	1.3;
commitid	NeDZuqk3OIQz7v1z;

1.3
date	2003.12.16.20.26.37;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.02.12.34.24;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.19.16.05.42;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.19.16.05.42;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add support for embedding debug symbols in ROM images
Detail:
  This change allows debug symbols (currently, just function names) to be embedded in ROM images, by having romlinker read the _syms and _gpa files that the shared makefiles copy to the install folder alongside each module.
  Basic compression techniques are used to try and keep the symbol table size manageable, e.g. the symbols for a Raspberry Pi ROM currently require 240k of space.
  The symbol table will be automatically discarded if there is insufficient space (e.g. IOMD), or if necessary the -nodebugsyms option can be used to prevent symbol table inclusion completely.
  File changes:
  c/symbols, h/symbols - Code for parsing the GPA & syms files and producing the compressed symbol table blob. Adapted from the ROM symbol loading functionality present in profanal (http://www.phlamethrower.co.uk/riscos/fiqprof.php)
  Makefile - Include symbols.c
  c/makerom - Add the -nodebugsyms option. Collect symbols for each component as it's loaded. Write out the symbol table after the module chain, and include the offset in the extended ROM footer.
  c/memory, h/memory - Add safe_realloc function
  docs/Notes - document -nodebugsyms option
Admin:
  Tested with Raspberry Pi, IOMD ROM builds


Version 0.06. Tagged as 'romlinker-0_06'
@
text
@# Copyright 2001 Pace Micro Technology plc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for makeexprom
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date        Name         Description
# ----        ----         -----------
# 16 Jan 2001 SNB          Created

#
# Paths
#
EXP_HDR = <export$dir>

#
# Generic options:
#
include Makefiles:StdTools

DIRS            =o._dirs

#
# Include files
#

# Program specific options:
#
COMPONENT = romlinker
APPTARGET = ${COMPONENT}

OBJS =\
 makeexprom.o\
 makerom.o\
 memory.o\
 filereader.o\
 filewriter.o\
 romlinker.o\
 symbols.o

CINCLUDES = -IC:CLX
CDEFINES  = -DRISCOS

include Makefiles:AppStdRule
include Makefiles:AppLibs

#
# Build
#
all: ${APPTARGET}
        @@echo ${COMPONENT}: all complete

clean:
        ${WIPE} o ${WFLAGS}
        ${WIPE} ${APPTARGET} ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

install: ${APPTARGET}
        ${MKDIR} ${INSTDIR}.Docs
        ${CP} ${APPTARGET} ${INSTDIR}.${APPTARGET} ${CPFLAGS}
        ${CP} docs.Notes ${INSTDIR}.Docs.${APPTARGET} ${CPFLAGS}
        @@echo ${COMPONENT}: installed

${DIRS}:
        ${MKDIR} o
        ${TOUCH} $@@

#
# Target
#
${APPTARGET}: ${OBJS} ${CLIB} ${CLXLIB} ${DIRS}
        ${LD} -o $@@ ${OBJS} ${CLXLIB} ${CLIB}
        ${SQZ} ${SQZFLAGS} $@@
        ${CHMOD} a+rx $@@

#
# Dynamic dependencies:
@


1.3
log
@Fixed install rule. Retagged.
@
text
@d51 2
a52 1
 romlinker.o
@


1.2
log
@  New version of romlinker which implements its own joinerformat.
  Documentation on usage and implementation added.
Detail:
  Sprites can be added to extension ROMs/expansion card ROMs and get
    their chunks marked appropriately.
  No longer core dumps when -v or -via is the final CLI parameter.
  Gives help on supported formats when complaining that -format is
    missing or wrong.
  More common code abstracted out of the individual linkers.
Admin:
  Requires and required by srcbuild 0.27 or later (mutually dependent)
  Builds on RISC OS, Intel Solaris.
  Tested somewhat on RISC OS.

Version 0.01. Tagged as 'romlinker-0_01'
@
text
@d71 3
a73 3
        ${MKDIR} ${INSTDIR}.Library.Build.Docs
        ${CP} ${APPTARGET} ${INSTDIR}.Library.Build.${APPTARGET} ${CPFLAGS}
        ${CP} docs.Notes ${INSTDIR}.Library.Build.Docs.${APPTARGET} ${CPFLAGS}
@


1.1
log
@Initial revision
@
text
@d54 1
d71 3
a73 2
        ${MKDIR} ${INSTDIR}.Build
        ${CP} ${TARGET} ${INSTDIR}.Build.${TARGET} ${CPFLAGS}
d78 1
a78 2
        create ${DIRS}
        stamp ${DIRS}
@


1.1.1.1
log
@Initial import of unified ROM joining tool.
  
This tool can generate standard RISC OS ROM images (superceding BigSplit2)
and expansion card ROM images (superceding MakeExpROM) and also extension
ROM images (for which no tool currently exists in our library repository).
  
All content of expansion and extension ROMs is assumed to be a module at
present - this will be fixed in the next version to enable sprites to be
used as well as loaders and other chunk entry types.
  
This tool is portable and has been tested on RISC OS, Intel Solaris and
SPARC Solaris and shown to produce identical output.
  
Tagged as romlinker-0_00

@
text
@@
