head	1.1;
access;
symbols
	romlinker-0_06:1.1;
locks; strict;
comment	@# @;


1.1
date	2016.04.06.00.45.42;	author jlee;	state Exp;
branches;
next	;
commitid	NeDZuqk3OIQz7v1z;


desc
@@


1.1
log
@Add support for embedding debug symbols in ROM images
Detail:
  This change allows debug symbols (currently, just function names) to be embedded in ROM images, by having romlinker read the _syms and _gpa files that the shared makefiles copy to the install folder alongside each module.
  Basic compression techniques are used to try and keep the symbol table size manageable, e.g. the symbols for a Raspberry Pi ROM currently require 240k of space.
  The symbol table will be automatically discarded if there is insufficient space (e.g. IOMD), or if necessary the -nodebugsyms option can be used to prevent symbol table inclusion completely.
  File changes:
  c/symbols, h/symbols - Code for parsing the GPA & syms files and producing the compressed symbol table blob. Adapted from the ROM symbol loading functionality present in profanal (http://www.phlamethrower.co.uk/riscos/fiqprof.php)
  Makefile - Include symbols.c
  c/makerom - Add the -nodebugsyms option. Collect symbols for each component as it's loaded. Write out the symbol table after the module chain, and include the offset in the extended ROM footer.
  c/memory, h/memory - Add safe_realloc function
  docs/Notes - document -nodebugsyms option
Admin:
  Tested with Raspberry Pi, IOMD ROM builds


Version 0.06. Tagged as 'romlinker-0_06'
@
text
@/* Copyright 2016 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef SYMBOLS_H
#define SYMBOLS_H

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  uint32_t rom_start;
  uint32_t rom_end;
  uint32_t syms_start;
  uint32_t syms_end;
} symbols_index_entry;

extern symbols_index_entry *symbols_index;
extern int symbols_index_count;

extern uint8_t *symbols_buffer;

extern void load_symbols(const char *file, unsigned long rom_position, const char *image, unsigned long size);

#endif
@
