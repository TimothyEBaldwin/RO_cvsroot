head	1.2;
access;
symbols
	romlinker-0_06:1.2
	romlinker-0_05:1.2
	romlinker-0_04:1.2
	romlinker-0_03:1.2
	romlinker-0_02:1.2
	romlinker-0_01:1.2
	romlinker-0_00:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2001.02.02.12.34.25;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.19.16.05.42;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.19.16.05.42;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  New version of romlinker which implements its own joinerformat.
  Documentation on usage and implementation added.
Detail:
  Sprites can be added to extension ROMs/expansion card ROMs and get
    their chunks marked appropriately.
  No longer core dumps when -v or -via is the final CLI parameter.
  Gives help on supported formats when complaining that -format is
    missing or wrong.
  More common code abstracted out of the individual linkers.
Admin:
  Requires and required by srcbuild 0.27 or later (mutually dependent)
  Builds on RISC OS, Intel Solaris.
  Tested somewhat on RISC OS.

Version 0.01. Tagged as 'romlinker-0_01'
@
text
@/* Copyright 2001 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * ROM Linker
 *
 * Copyright (C) Pace Micro Technology plc. 2001
 *
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>

/* RISC OS specific headers */
#ifdef RISCOS
#  include "kernel.h"
#  include "swis.h"
#  include "Global/FileTypes.h"
#else
/* It would really help if Global/FileTypes.h were available to UNIX
 * builds of this tool too as I wouldn't need the hardwired constants
 * here:
 */
enum {
  FileType_Sprite = 0xff9,
  FileType_Module = 0xffa,
  FileType_EPROM  = 0xfe5
};
#endif

/* CLX headers */
#include "prgname.h"
#include "err.h"
#include "wholefls.h"

/* Local headers */
#include "memory.h"
#include "romlinker.h"
#include "filereader.h"

char *readline(FILE *f)
{
  char *ptr, buffer[BUFSIZ];

  ptr = fgets(buffer, sizeof(buffer), f);
  if (ptr) {
    if (*ptr == '\r') ++ptr;
    ptr[strcspn(ptr, "\r\n#")] = '\0';
  }

  return Strdup(ptr);
}

char *readlinenonull(FILE *f)
{
  return fault_null(readline(f), "Unable to read data from input file");
}

void *readfile(FILE *f, filereader_consumer consumer, void *consumer_data)
{
  const char *data;

  while ((data = readline(f)) != NULL) {
    if (consumer(data, consumer_data)) break;
  }

  return consumer_data;
}

unsigned long filereader_filesize(const char *name)
{
  unsigned long size = (unsigned long) wf_filesize((char *) name);
  return (size == -1UL) ? unknown_size : size;
}

void *filereader_load_file(const char *name, unsigned long size, void *at)
{
  return wf_load((char *)name, at, size) ? NULL : at;
}

chunk_entry_types filereader_file_type(const char *name)
{
  unsigned long filetype = -1UL;

#ifdef RISCOS
  if (_swix(OS_File, _INR(0,1)|_OUT(6), 20, name, &filetype)) {
    return empty_chunk;
  }
#else
  char *lastcomma = strrchr(name, ',');
  if (lastcomma) {
    filetype = strtoul(lastcomma, &lastcomma, 16);
    if (*lastcomma) filetype = -1UL;
  }
#endif

  switch (filetype) {
    case FileType_Sprite: return riscos_sprite;
    case FileType_Module: return riscos_module;
    case FileType_EPROM : return bbcrom_image;
    default: /* Don't know */
      break;
  }

  return riscos_module;
}
@


1.1
log
@Initial revision
@
text
@d26 17
d95 6
a100 3
  (void) name;
#ifdef __riscos
  return riscos_module;
d102 15
a117 1
#endif
@


1.1.1.1
log
@Initial import of unified ROM joining tool.
  
This tool can generate standard RISC OS ROM images (superceding BigSplit2)
and expansion card ROM images (superceding MakeExpROM) and also extension
ROM images (for which no tool currently exists in our library repository).
  
All content of expansion and extension ROMs is assumed to be a module at
present - this will be fixed in the next version to enable sprites to be
used as well as loaders and other chunk entry types.
  
This tool is portable and has been tested on RISC OS, Intel Solaris and
SPARC Solaris and shown to produce identical output.
  
Tagged as romlinker-0_00

@
text
@@
