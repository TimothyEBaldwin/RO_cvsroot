head	1.1;
access;
symbols
	srcbuild-0_53:1.1
	srcbuild-0_52:1.1
	srcbuild-0_51:1.1
	srcbuild-0_50:1.1
	srcbuild-0_49:1.1
	srcbuild-0_48:1.1
	srcbuild-0_47:1.1
	srcbuild-0_46:1.1
	srcbuild-0_45:1.1
	srcbuild-0_44:1.1
	srcbuild-0_43:1.1
	srcbuild-0_42:1.1
	srcbuild-0_41:1.1
	srcbuild-0_40:1.1
	srcbuild-0_39:1.1
	srcbuild-0_38:1.1
	srcbuild-0_37:1.1
	srcbuild-0_36:1.1
	srcbuild-0_35:1.1
	srcbuild-0_34:1.1
	srcbuild-0_33:1.1
	srcbuild-0_32:1.1
	srcbuild-0_31:1.1
	srcbuild-0_30:1.1
	srcbuild-0_29:1.1
	srcbuild-0_28:1.1
	srcbuild-0_27:1.1
	srcbuild-0_26:1.1;
locks; strict;
comment	@# @;


1.1
date	2001.01.25.16.16.54;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Portable version of srcbuild.
  Has initial knowledge of the romlinker tool - work incomplete.
Detail:
  This is a portable version of srcbuild.  It is no longer tied to various
    RISC OS concepts such as: global shared environment namespace;
    *Spool; . as directory separator (host's directory separator is read
    during program startup).
  UNIX version stores the "system variables" in a hash table and exports
    the contents of the environment hash table to new processes which it
    forks.  UNIX version does not parallelise builds currently - in theory
    with a little more intelligence in sb_system to manage the log file
    coherently, it should be possible to parallelise some actions during
    builds (because it will avoid blocking srcbuild when waiting for I/O,
    and because changing the environment in the parent srcbuild process
    won't affect any children that are still running)
  A lot of things have changed in this version - many functions have been
    renamed to avoid clashes with UNIX system calls (most calls in riscos.c
    in fact); printf/fprintf(stderr...) are no longer used directly -
    sb_printf/sb_fprintf is used instead to ensure data is copied to the
    log file.
  ROM joining works on Solaris if you supply the Install/<Build> directory
    fully populated with files from a RISC OS build which comprise the
    ROM image.  Identical images are produced (with: romlinker -format rom).
  This version of srcbuild cannot use romlinker to build anything other
    than ROM images - syntax for specifying expansion/extension images
    is yet to be implemented.  To test, set %Joiner and %JoinerFormat to
    romlinker in your Components file (and put romlinker in your library
    directory if you do not have a RiscOS/Library/Build which includes it)
  Removed some duplicated code that calculated ROM positions when an install_rom
    phase had not been run but a join had been requested - build_install_rom
    is now parameterised to enable the BBE generator, join phase and normal
    install_rom activities to be done by one function instead of three nearly
    identical bits of code.
  Anything other than list or join requires a compatible Makefile in each
    component in the build.
Admin:
  Tested, although not exhaustively, under RISC OS.
  Tested list & join phases on Intel Solaris.
  romlinker integration tested briefly.

Version 0.26. Tagged as 'srcbuild-0_26'
@
text
@#!/usr/local/bin/bash

# usage: wantlink source dest
wantlink()
{
    ext=$1
    file=$2

    source="../$ext/$file";
    dest="$file.$ext";
    if [ ! -L $dest ];
    then
	echo ln -s $source $dest
	ln -s $source $dest
    fi
}

if [ ! -L "VersionNum" ]; then
    echo ln -s ../VersionNum .
    ln -s ../VersionNum .
fi

wantlink c srcbuild
wantlink c build
wantlink c riscos
wantlink c parse

wantlink h srcbuild
wantlink h build
wantlink h riscos
wantlink h parse

@
