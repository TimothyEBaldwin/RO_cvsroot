head	1.9;
access;
symbols
	srcbuild-0_51:1.9
	srcbuild-0_50:1.9
	srcbuild-0_49:1.9
	srcbuild-0_48:1.9
	srcbuild-0_47:1.9
	srcbuild-0_46:1.9
	srcbuild-0_45:1.8
	srcbuild-0_44:1.8
	srcbuild-0_43:1.8
	srcbuild-0_42:1.8
	srcbuild-0_41:1.8
	srcbuild-0_40:1.8
	srcbuild-0_39:1.8
	srcbuild-0_38:1.8
	srcbuild-0_37:1.7
	srcbuild-0_36:1.7
	srcbuild-0_35:1.7
	srcbuild-0_34:1.7
	srcbuild-0_33:1.7
	srcbuild-0_32:1.7
	srcbuild-0_31:1.7
	srcbuild-0_30:1.7
	srcbuild-0_29:1.7
	srcbuild-0_28:1.7
	srcbuild-0_27:1.7
	srcbuild-0_26:1.6
	srcbuild-0_25:1.6
	srcbuild-0_24-1_23_2_4:1.5.2.1
	srcbuild-0_24-1_23_2_3:1.5.2.1
	srcbuild-0_24-1_23_2_2:1.5.2.1
	srcbuild-0_24-1_23_2_1:1.5.2.1
	sbrodie_BBE:1.5.0.2
	sbrodie_BBE_bp:1.5
	srcbuild-0_24:1.5
	srcbuild-0_23:1.5
	srcbuild-0_22:1.5
	srcbuild-0_21:1.5
	srcbuild-0_20:1.5
	srcbuild-0_19:1.5
	srcbuild-0_18:1.5
	srcbuild-0_17:1.5
	srcbuild-0_16:1.5
	srcbuild-0_15:1.4
	srcbuild-0_14:1.3
	srcbuild-0_13:1.3
	srcbuild-0_12:1.3
	srcbuild-0_11:1.3
	srcbuild-0_10:1.3
	srcbuild-0_09:1.3
	srcbuild-0_08:1.3
	srcbuild-0_07:1.3
	srcbuild-0_06:1.3
	srcbuild-0_05:1.3
	srcbuild-0_04:1.3
	srcbuild-0_03:1.3
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2009.07.12.22.44.21;	author srevill;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.08.14.44.11;	author srevill;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.02.11.22.12;	author sbrodie;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.15.16.26.52;	author sbrodie;	state Exp;
branches;
next	1.5;

1.5
date	99.09.10.10.49.21;	author dcotton;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	99.09.09.12.54.10;	author nbingham;	state Exp;
branches;
next	1.3;

1.3
date	97.09.04.13.33.13;	author rbuckley;	state Exp;
branches;
next	1.2;

1.2
date	97.08.22.16.17.15;	author rbuckley;	state Exp;
branches;
next	1.1;

1.1
date	97.08.21.16.44.56;	author rbuckley;	state Exp;
branches
	1.1.1.1;
next	;

1.5.2.1
date	2000.12.07.17.03.45;	author sbrodie;	state Exp;
branches;
next	;

1.1.1.1
date	97.08.21.16.44.56;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Added support for a new release_autobuild phase.

This new phase will initially only be required by a very small subset of
components which do some additional functionality at the very end of a
build process in order to wrap-up the build ready for the autobuilder to
do what it wants with the results.

Admin:
  Tested on Iyonix
Author:
  srevill

Version 0.46. Tagged as 'srcbuild-0_46'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

#ifndef __build_h
#define __build_h

extern int build_dirs(void);
extern int build_clean(void);
extern int build_clean_all(void);
extern int build_export_hdrs(void);
extern int build_export_libs(void);
extern int build_resources(void);
extern int build_bbe(void);
extern int build_rom(void);
extern int build_install(void);
extern int build_release_autobuild(void);
extern int build_install_rom(void);
extern int build_join(void);
extern int build_list(void);
extern void build_init(void);

#endif
@


1.8
log
@  * Added support for the clean_all phase.
  * Slight tweak to (ram) install phase.
  * Corrected utterly insignificant comment in clean phase.
Detail:
  * Some of the major libraries (i.e. Desk and RISC_OSLib) do not really clean
    themselves in their 'clean' phase; you have to run 'clean_all' on them to
    do this. This is a pain in the proverbial for Baseline builds because you
    have to export from libraries twice - once 26bit and once 32bit. You MUST
    fully 'clean_all' libraries or you get objects of the wrong APCS exported.

    Soooo, rather than having to go through all my libraries running both
    'clean' and 'clean_all' on each manually, I've added the 'clean_all'
    option to srcbuild (and !Builder), separate from a simple 'clean'.

  * If "INSTDIR=" is one of the options passed from a Components file in the
    '-options' for a component, the install phase does not add "INSTDIR=foo"
    onto the amu command line itself (resulting in two, the latter being
    valid). This results in shorter command lines (which aren't in themselves
    much of a problem) that are a little easier to read.
Admin:
  Tested in Baseline builds.

Version 0.38. Tagged as 'srcbuild-0_38'
@
text
@d37 1
@


1.7
log
@  More wide-ranging changes to srcbuild for portability and romlinker.
Detail:
  The romlinker joiner format is now defined and implemented by srcbuild.
    This means that srcbuild can invoke romlinker to join main ROMs,
    expansion ROMs or extension ROMs depending on a switch in a product's
    components file (the %format directive should specify a value of one
    of rom extrom or exprom).
  Any %-directives that are not srcbuild directives are passed through to
    romlinker as command-line options.  All target image sizes are passed
    through in bytes - see romlinker documentation for full details of the
    interfaces.
  Environment variables are set to represent the territory mappings.  This
    is done on all targets so that other tools can rely on retrieving the
    information via getenv() and not needing to prod the International
    module directly.
  extern declarations removed from .c files into .h files to remove chance
    of mismatched multiple declarations.
  Some spelling corrections in comments, system call synchronisation calls
    added, although sb_system does not implement parallel makes yet.
  Documentation added on the portability aspects, environmental aspects and
    the territory mapping stuff.  A program is provided (MkDefaults) to
    run under RISC OS to generate up-to-date source code for srcbuild's
    territory information database.
  srcbuild now keeps note of the type of image that it is generating, rather
    than relying on reverse-engineering it from the joiner and joiner format
    strings (set by %format in the component file, defaults to main ROM)
  Many comments updated to reflect the actual code, some obsolete code
    removed.
Admin:
  This version should represent a functionally complete version capable of
    running cross-compiled builds on UNIX systems.
  Tested on RISC OS.

Version 0.27. Tagged as 'srcbuild-0_27'
@
text
@d30 1
@


1.6
log
@  BBE phase added.
Detail:
  Lots of code changed - see branch logs for details.
Admin:
  The Binary Build Environment development has been done on a branch
    and is now considered stable for merge to the trunk.
  Tested in BBE.

Version 0.25. Tagged as 'srcbuild-0_25'
@
text
@d28 12
a39 12
int build_dirs(void);
int build_clean(void);
int build_export_hdrs(void);
int build_export_libs(void);
int build_resources(void);
int build_bbe(void);
int build_rom(void);
int build_install(void);
int build_install_rom(void);
int build_join(void);
int build_list(void);
void build_init(void);
@


1.5
log
@	Changed handling of amu_machine in srcbuild.

Details:
	Changed way in which srcbuild uses amu_machine to get around RISC OS
3.7 limitions on command line length.  Now expands amu_machine alias
internally, which means that long command lines in builds will now work
correcltly.

	Tidied build system to create and clean up its "o" folder correctly,
and to clean it's dynamic dependencies.

Admin:
	Tested on several Lazarus builds. Committed on behalf of JBeranek

Version 0.16. Tagged as 'srcbuild-0_16'
@
text
@d33 1
@


1.5.2.1
log
@  Intermediate development version of the Binary Build Environment support.
Detail:
  A new action 'bbe' has been created which generates a binary build
    environment in the Install.BBE directory.  This directory contains a
    self-contained environment in which ROM builds can be performed using
    only the pre-built binaries of modules and the parts of the modules'
    resources required for a particular project.
Admin:
  Requires BuildSys 2.81 or later (RiscOS/BuildSys; tag: BuildSys-2_81)
  Requires Library 0.60 or later (RiscOS/Library; tag: Library-0_60)

  Work in progress - checkpoint only.

Version 0.24, 1.23.2.1. Tagged as 'srcbuild-0_24-1_23_2_1'
@
text
@a32 1
int build_bbe(void);
@


1.4
log
@Summary
  *  Added support for install: targets
  *  Added support for podule ROM builds.

Detail
  *  Added support to pass 'install' as a valid parameter.  This allows
     disc builds and podule rom builds to be completed.
  *  Added knowledge of MakeExpROM as a valid joiner app.
Admin
  *  Tested install: work using a dummy Baseline 3 build.
  *  Tested MakeExpROM work using RiscOS/BuildSys/EtherI16E as a basis.
     srcbuild produces an indentical ROM to the old-style build system for
     populated roms and roms only containing podule ID information.

Version 0.15. Tagged as 'srcbuild-0_15'
@
text
@d34 1
d38 1
a38 1
int build_install(void);
@


1.3
log
@Completed functionality, committed to repository prior to extensive
testing.
@
text
@d37 1
@


1.2
log
@Added my latest sources prior to going on holiday.
@
text
@d35 2
@


1.1
log
@Initial revision
@
text
@d28 1
@


1.1.1.1
log
@First added for safe keeping.
@
text
@@
