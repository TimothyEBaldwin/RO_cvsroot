head	1.10;
access;
symbols
	SoftLoad-1_21:1.10
	SoftLoad-1_20:1.9
	SoftLoad-1_19:1.8
	SoftLoad-1_18:1.7
	SoftLoad-1_17:1.6
	SoftLoad-1_16:1.5
	SoftLoad-1_15:1.4
	SoftLoad-1_14:1.3
	SoftLoad-1_13:1.2
	SoftLoad-1_12:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2016.02.01.18.37.45;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	SFlum95X6auX8fTy;

1.9
date	2015.09.02.19.55.13;	author jlee;	state Exp;
branches;
next	1.8;
commitid	RcX622YffHKssIzy;

1.8
date	2013.03.28.21.54.22;	author jlee;	state Exp;
branches;
next	1.7;
commitid	02HPTPiu4iS1FBJw;

1.7
date	2012.02.28.23.39.48;	author jlee;	state Exp;
branches;
next	1.6;
commitid	Fh5lp2YSDYppUYUv;

1.6
date	2012.02.25.17.51.47;	author jlee;	state Exp;
branches;
next	1.5;
commitid	diNuVrCaNAoZ4zUv;

1.5
date	2011.06.25.23.25.31;	author jlee;	state Exp;
branches;
next	1.4;
commitid	TAhmZR3a1h2KN6pv;

1.4
date	2010.06.14.21.28.02;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.23.17.13.17;	author rool;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.18.18.03.43;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.09.08.43.43;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.08.09.08.43.43;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to support ARMv7
Unlike ARMv5 and earlier, we can't rely on the final 'MMU off & jump' to be safely in the pipeline, fancy ARMs can do speculative execution and branch prediction ending up trying to run code that's not yet there followed by trying to execute exception vectors that also aren't there. Solve this by flat mapping the 'MMU off & jump' code like we do the ROM itself and jump to the copy in logical address space that's in the same place as in physical space.
softload.c:
  Express memory amounts using size_t so checks on machines with > 2GB don't think they have -ve memory amounts.
  Export log2phys() for the assembler to use.
  Use bool to hold booleans.
  Trim some unused/redundant defines.
startnew.s:
  Lookup the physical address of AppSpaceStart ready for L1PT flat mapping.
  Lookup the MMU_Changing ARMOp from the kernel rather than mess about with local copies (requires RISC OS 5.23 or later).
  Add code to skip the XScale/StrongARM bits and bobs based on the MIDR.
  Fix bug setting U bit in L1PT on ARMs that don't support it.
  Leave xsf alone when switching processor mode in CPSR.
  Use Push/Pull macros.
Tested on Titanium, and regression tested on a Risc PC softloading RISC OS 5.

Version 1.21. Tagged as 'SoftLoad-1_21'
@
text
@/* (1.21)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        1.21
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                01 Feb 2016

#define Module_MajorVersion             "1.21"
#define Module_Version                  121
#define Module_MinorVersion             ""
#define Module_Date                     "01 Feb 2016"

#define Module_ApplicationDate          "01-Feb-16"

#define Module_ComponentName            "SoftLoad"
#define Module_ComponentPath            "castle/RiscOS/Utilities/Debugging/SoftLoad"

#define Module_FullVersion              "1.21"
#define Module_HelpVersion              "1.21 (01 Feb 2016)"
#define Module_LibraryVersionInfo       "1:21"
@


1.9
log
@Fix compatibility with latest ROMs
Detail:
  c/softload - If the host OS is using a new CAM format, use OS_Memory 12 to look for a chunk of physical memory rather than walking the CAM ourselves.
Admin:
  Tested on Iyonix, softloading to and from ROMs which use the new and old CAM formats


Version 1.20. Tagged as 'SoftLoad-1_20'
@
text
@d1 1
a1 1
/* (1.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.20
d9 1
a9 1
#define Module_Date_CMHG                02 Sep 2015
d11 2
a12 2
#define Module_MajorVersion             "1.20"
#define Module_Version                  120
d14 1
a14 1
#define Module_Date                     "02 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "02-Sep-15"
d21 3
a23 3
#define Module_FullVersion              "1.20"
#define Module_HelpVersion              "1.20 (02 Sep 2015)"
#define Module_LibraryVersionInfo       "1:20"
@


1.8
log
@Provide compatbility with the latest kernel changes (Kernel-5_35-4_79_2_186)
Detail:
  c/softload - Ignore the lower 12 bits of the 'size' field of PhysRamTable entries. Constify a couple of variables and replace some magic numbers with definitions from OS headers.
Admin:
  Tested softloading of IOMD & Tungsten ROMs
  Without these changes, attempts to softload a ROM while running the latest kernel will result in failure.


Version 1.19. Tagged as 'SoftLoad-1_19'
@
text
@d1 1
a1 1
/* (1.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.19
d9 1
a9 1
#define Module_Date_CMHG                28 Mar 2013
d11 2
a12 2
#define Module_MajorVersion             "1.19"
#define Module_Version                  119
d14 1
a14 1
#define Module_Date                     "28 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "28-Mar-13"
d21 3
a23 3
#define Module_FullVersion              "1.19"
#define Module_HelpVersion              "1.19 (28 Mar 2013)"
#define Module_LibraryVersionInfo       "1:19"
@


1.7
log
@Softload tool tweaks and fixes
Detail:
  c/softload - Changed to allocate memory from the RMA instead of application space, to workaround SCL's inability to resize the wimpslot when no tasks are active. Fix bug in examine_rom that was causing the whole ROM to be read instead of just the footer.
Admin:
  Tested with Tungsten & IOMD softloads
  Tool now works properly when run as part of the boot sequence


Version 1.18. Tagged as 'SoftLoad-1_18'
@
text
@d1 1
a1 1
/* (1.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.18
d9 1
a9 1
#define Module_Date_CMHG                28 Feb 2012
d11 2
a12 2
#define Module_MajorVersion             "1.18"
#define Module_Version                  118
d14 1
a14 1
#define Module_Date                     "28 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "28-Feb-12"
d21 3
a23 3
#define Module_FullVersion              "1.18"
#define Module_HelpVersion              "1.18 (28 Feb 2012)"
#define Module_LibraryVersionInfo       "1:18"
@


1.6
log
@Teach softload tool about different ROM sizes, compressed ROMs, and new Tungsten "NVidia STRAP data" HAL device
Detail:
  c/softload - Rewrote lots of code to add support for ROM size detection and compressed ROM detection while trying to avoid making the code even more confusing than it already is.
  - Use C99 uint32_t type instead of non-standard uint32
  - Can now probe the physical memory table to try and find the hard ROM location - tool can now locate the hard ROM of Tungsten machines
  - Add -n[odecompress] option to disable decompression of compressed images
  - Add -d[ummyrun] option to cause tool to exit just before the point it would start the new ROM, for debugging
  - Improve help text
  - Update NVidia patching code to also try patching the "NVidia STRAP data" HAL device
  s/startnew - Tweaked startnew to add support for different ROM sizes
  - Improve svcmemcpy to copy words/doublewords where possible
  - Add asm_decompress code for running ROM decompression code
Admin:
  Tested with softloading/unloading various ROMs on Tungsten & IOMD


Version 1.17. Tagged as 'SoftLoad-1_17'
@
text
@d1 1
a1 1
/* (1.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.17
d9 1
a9 1
#define Module_Date_CMHG                25 Feb 2012
d11 2
a12 2
#define Module_MajorVersion             "1.17"
#define Module_Version                  117
d14 1
a14 1
#define Module_Date                     "25 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "25-Feb-12"
d21 3
a23 3
#define Module_FullVersion              "1.17"
#define Module_HelpVersion              "1.17 (25 Feb 2012)"
#define Module_LibraryVersionInfo       "1:17"
@


1.5
log
@SoftLoad tool improvements and fixes
Detail:
  c/startnew - Use svcpeek() to read from the page tables in ROM_physaddr. Fixes bug #267.
  Added read_sys_info() function and sysinfo_t struct for storing various bits of information about the system. OS_ReadSysInfo is used to try and work out whether the machine has a traditional 26bit IOMD-style memory map, the logical & physical address of the hard ROM, and whether the current ROM is soft or hard.
  Added physmemcpy() function to try to memcpy() a physical address range into a logical address range. Knows how to copy data directly via the flat-mapped IOMD physical memory map, and via OS_Memory 14/15.
  Updated arewefine(), copy_ROM_and_go(), load_ROM_and_go(), main() to make use of sysinfo_t, and to provide more error messages when things go wrong
  Made main() throw an error if the user tries running the tool from within a task window
  Made patch_NVidia_module() verify that the Tungsten HAL layout is as expected
  copy_ROM_and_go() now uses physmemcpy(), allowing it to be used to softload a hard ROM from within a RISC OS 5 IOMD soft ROM.
  load_ROM_and_go() now double-checks that patched Tungsten ROM doesn't match the current ROM before finalising the softload. This allows the tool to correctly detect if a new Tungsten softload is identical to the current one.
  s/startnew - Added svcmemcpy() function, which is used by physmemcpy().
  Improved the way StrongARM cache cleaning is handled. If a StrongARM is detected and the ARMA_cleaner_flipflop kernel value wasn't found (e.g. as on RISC OS 5) then OS_MMUControl is used to flush and disable the D-cache before any page table manipulation is performed. This allows the tool to be used on RO 5 IOMD ROM builds.
  Also tweaked the way interrupts are handled - now both IRQs and FIQs are disabled, and they'll be disabled before issuing Service_PreReset, to match the behaviour of the OS.
Admin:
  Tested with various operations on an Iyonix (5.12 ROM, 5.17 softload) and RiscPC (3.7 ROM, 5.17 softload).
  Fixes bug #267


Version 1.16. Tagged as 'SoftLoad-1_16'
@
text
@d1 1
a1 1
/* (1.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.16
d9 1
a9 1
#define Module_Date_CMHG                26 Jun 2011
d11 2
a12 2
#define Module_MajorVersion             "1.16"
#define Module_Version                  116
d14 1
a14 1
#define Module_Date                     "26 Jun 2011"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jun-11"
d21 3
a23 3
#define Module_FullVersion              "1.16"
#define Module_HelpVersion              "1.16 (26 Jun 2011)"
#define Module_LibraryVersionInfo       "1:16"
@


1.4
log
@Fix softload tool for ROMs which start with LDR PC,[PC,#...]
Detail:
  s/startnew - the code in doneflush now performs the right checks for LDR PC,[PC,#...] instructions, allowing the tool to be used on IOMD ROMs again.
Admin:
  Tested with softloading ROMs on both a RiscPC & Iyonix.


Version 1.15. Tagged as 'SoftLoad-1_15'
@
text
@d1 1
a1 1
/* (1.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.15
d9 1
a9 1
#define Module_Date_CMHG                14 Jun 2010
d11 2
a12 2
#define Module_MajorVersion             "1.15"
#define Module_Version                  115
d14 1
a14 1
#define Module_Date                     "14 Jun 2010"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jun-10"
d21 3
a23 3
#define Module_FullVersion              "1.15"
#define Module_HelpVersion              "1.15 (14 Jun 2010)"
#define Module_LibraryVersionInfo       "1:15"
@


1.3
log
@  Iyonix-aware softloader received from Adrian Lees
Detail:
  Quoting from Adrian's email:
    It's still rather hacky in places, and in particular it must resort to
    patching some of the HAL's init code because the HAL is still softload-
    unaware.
Admin:
  Tested on the release version of 5.14 from Castle

Version 1.14. Tagged as 'SoftLoad-1_14'
@
text
@d1 1
a1 1
/* (1.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.14
d9 1
a9 1
#define Module_Date_CMHG                23 Apr 2009
d11 2
a12 2
#define Module_MajorVersion             "1.14"
#define Module_Version                  114
d14 1
a14 1
#define Module_Date                     "23 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "23-Apr-09"
d21 3
a23 3
#define Module_FullVersion              "1.14"
#define Module_HelpVersion              "1.14 (23 Apr 2009)"
#define Module_LibraryVersionInfo       "1:14"
@


1.2
log
@  Miscellaneous tidy-up.
Detail:
  * s.Copro15ops upgraded to latest version - many changes including 32-bit
    compatibility
  * Moved to using shared Makefiles
  * Minor tweaks to s.startnew - no functional change
Admin:
  Not tested. Definitely not suitable for Iyonix!

Version 1.13. Tagged as 'SoftLoad-1_13'
@
text
@d1 1
a1 1
/* (1.13)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.13
d9 1
a9 1
#define Module_Date_CMHG                18 Mar 2008
d11 2
a12 2
#define Module_MajorVersion             "1.13"
#define Module_Version                  113
d14 1
a14 1
#define Module_Date                     "18 Mar 2008"
d16 1
a16 1
#define Module_ApplicationDate          "18-Mar-08"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Utilities/Debugging/SoftLoad"
d21 3
a23 3
#define Module_FullVersion              "1.13"
#define Module_HelpVersion              "1.13 (18 Mar 2008)"
#define Module_LibraryVersionInfo       "1:13"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* (1.12)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.12
d9 1
a9 1
#define Module_Date_CMHG                09 Aug 2000
d11 2
a12 2
#define Module_MajorVersion             "1.12"
#define Module_Version                  112
d14 1
a14 1
#define Module_Date                     "09 Aug 2000"
d16 1
a16 2
#define Module_ApplicationDate2         "09-Aug-00"
#define Module_ApplicationDate4         "09-Aug-2000"
d18 6
a23 1
#define Module_FullVersion              "1.12"
@


1.1.1.1
log
@
Import of RISC OS ROM softloader.  This is the version that is in common
  use around the company.  Tested briefly on desktop machine.
 
Tagged as SoftLoad-1_12

@
text
@@
