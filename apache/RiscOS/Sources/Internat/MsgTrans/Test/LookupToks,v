head	1.1;
access;
symbols
	MsgTrans-0_49:1.1
	MsgTrans-0_48:1.1
	MsgTrans-0_47-2:1.1
	RO_5_07:1.1
	MsgTrans-0_47:1.1
	MsgTrans-0_46:1.1
	MsgTrans-0_45:1.1
	MsgTrans-0_44:1.1
	MsgTrans-0_43:1.1
	dellis_autobuild_BaseSW:1.1
	MsgTrans-0_42:1.1
	MsgTrans-0_41:1.1
	MsgTrans-0_40:1.1
	dcotton_autobuild_BaseSW:1.1
	MsgTrans-0_39:1.1;
locks; strict;
comment	@# @;


1.1
date	2000.06.02.09.47.48;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Fixed buffer overflow on tokenised lookups.
Detail:
  The token expansion code was not decrementing the buffer length counter
    as it expanded the tokens, which results in a buffer overrun if the
    buffer wasn't large enough to hold the detokenised result.
Admin:
  Reported in news thread on comp.sys.acorn.programmer:
    <PINE.OSF.4.21.0006011352260.13635-100000@@ermine.ox.ac.uk>
    <be18dbc749.sbrodie@@sbrodie.cam.pace.co.uk>
    <lrwbt1l2jjd.fsf@@ermine.ox.ac.uk>
  New test program (LookupToks) verifies that MsgTrans 0.39 fixes the bug
    (and demonstrates the fault in earlier versions (tested in 0.31))

Version 0.39. Tagged as 'MsgTrans-0_39'
@
text
@      10 REM > LookupToks
      20 
      30 DIM d% 16
      40 
      50 msgs$="Resources:$.Resources.FileCore.Messages":var$="CantDelUrd"
      60 dbg$="":swi$=dbg$+"MessageTrans_"
      70 
      80 SYS swi$+"FileInfo",,msgs$ TO ,,size%
      90 DIM memory% size%
     100 SYS swi$+"OpenFile",d%, msgs$, memory%
     110 
     120 ON ERROR GOTO 200
     130 
     140 DIM buffer%72
     150 PROCtry(64):PROCtry(32):PROCtry(24):PROCtry(23)
     190 
     200 ON ERROR OFF
     210 SYS swi$+"CloseFile",d% TO err%;f%
     220 END
     230 
     250 DEF PROCblank(b%,N%):LOCALa%:FOR a%=0TON%:b%?a%=254:NEXT:ENDPROC
     270 
     280 DEF PROCtry(size%)
     290 PROCblank(buffer%,64)
     300 SYS swi$+"Lookup",d%,var$,buffer%,size% TO ,,r$
     320 OSCLI "memory "+STR$~buffer%+" +40"
     321 PRINT LENr$,"  >>";r$;"<<"
     330 IF buffer%?size% <> 254 PRINT "!!Buffer overrun!!"
     340 ENDPROC

@
