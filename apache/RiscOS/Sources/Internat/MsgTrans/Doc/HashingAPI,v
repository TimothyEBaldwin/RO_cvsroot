head	4.1;
access;
symbols
	MsgTrans-0_49:4.1
	MsgTrans-0_48:4.1
	MsgTrans-0_47-2:4.1
	RO_5_07:4.1
	MsgTrans-0_47:4.1
	MsgTrans-0_46:4.1
	MsgTrans-0_45:4.1
	MsgTrans-0_44:4.1
	MsgTrans-0_43:4.1
	dellis_autobuild_BaseSW:4.1
	MsgTrans-0_42:4.1
	MsgTrans-0_41:4.1
	MsgTrans-0_40:4.1
	MsgTrans-0_39:4.1
	MsgTrans-0_38:4.1
	MsgTrans-0_37:4.1
	dcotton_autobuild_BaseSW:4.1
	MsgTrans-0_36:4.1;
locks; strict;
comment	@# @;


4.1
date	2000.05.02.14.17.28;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.1
log
@  New hashing facilities added to improve lookup times.
  Better debugging support added.
Detail:
  MessageTrans will construct hash tables for all the messages file that
    it thinks are worthwhile (>7 tokens, file is >80 bytes long).  API
    change documentation in Doc/HashingAPI.
  SVC stack tests now removed - proxy blocks are always used unless the
    caller used the new API (R3=FAST) and supplied a buffer in R2 on the
    call to MessageTrans_OpenFile.
  Test programs enhanced to not require the Palette messages file to be
    present - the Switcher messages are used instead.
  ShowMsgs test program now takes -c (show client blocks), -f (show flags
    as character strings) and <search substr> to restrict the output of
    the program to those blocks with filenames which contain the search
    substring.
  The old 16-byte client blocks contain the magic word, a flags word,
    pointer to the proxy block and a spare word.  Currently this spare
    word is filled in with a copy of the pointer to filename.  This is
    done for ShowMsgs benefit only - do not rely on this.  Similarly,
    the 7th word of the 32-byte blocks is used as a counter for the
    number of token lookups performed on that file - this is for testing
    only (to assess how much the hashing is helping) and must not be
    relied on either.
  MessageTrans no longer calls its own SWIs but uses BL to call them
    directly.  Saves SWI call overhead, plus makes the module standalone
    and the debug module tests are useful.
  Debug module capability added.  The debug module uses a different SWI
    name & number chunk and a different title to enable it to be loaded
    and tested without disrupting the rest of the machine.
  Messages re-organised so "Token not found" is the first in the file as
    this is the most commonly looked up message.
  Now built using objasm/link, instead of aasm.
Admin:
  Tested in Ursula ROM images for several weeks.  Test programs show
    data structures as expected.
  Requires link 5.15 (RiscOS/Library; tag Library-0_41 or later)


Version 0.36. Tagged as 'MsgTrans-0_36'
@
text
@
Hashing
=======

This document contains details of changes made to the MessageTrans API in
version 0.36 and later of the MessageTrans module.

MessageTrans now has the capability to generate hash tables for each of the
messages file that it has opened in the RMA (or from ResourceFS) to speed up
lookups.  The format of the hash tables are documented in the source code.

An API change has occurred to enable applications which cache their own
message files to enable hash tables for their message files too.

SWI MessageTrans_OpenFile

On entry:
   R0 = 8-word data structure
   R1 = Filename
   R2 = Buffer for file data (0 to use RMA)
   R3 = "FAST" (&54534146)
   

If R3 was "FAST" on entry and R2 was not 0, then MessageTrans makes the
following assumptions:

1) the block pointed to by R0 is (at least) 32 bytes long
2) the caller will call MessageTrans_CloseFile to discard the message data
3) the block pointed to by R0 is in a "safe" place.

The definition of "safe" is "not on the SVC stack".


Callers who pass 0 in R2 will always get hashing and need not comply with the
restriction that the block be in a safe place.  The other restrictions still
apply.


--SBrodie, 2 May 2000
@
