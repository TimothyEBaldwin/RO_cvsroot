head	4.2;
access;
symbols
	Inter-1_67:4.1
	Inter-1_66:4.1
	RO_5_07:4.1
	Inter-1_65:4.1
	Inter-1_64:4.1
	Inter-1_63:4.1
	Inter-1_62:4.1
	Inter-1_61:4.1
	Inter-1_60:4.1
	Inter-1_59:4.1
	dellis_autobuild_BaseSW:4.1
	Inter-1_58:4.1
	Inter-1_57:4.1
	Inter-1_56:4.1
	Inter-1_55:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	Inter-1_54:4.1
	Inter-1_53:4.1
	Inter-1_52:4.1
	dcotton_inter-MPTInitialBuild:4.1;
locks; strict;
comment	@# @;


4.2
date	2012.01.27.20.54.16;	author rsprowson;	state dead;
branches;
next	4.1;
commitid	WejJrko1QmIn1RQv;

4.1
date	99.03.22.12.01.56;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Add ISO3166-1 alpha 2 lookup service.
Modelled on the other country->name and alphabet->name service calls, subreason 9 allows you to map from a country to the 2 letter ISO abbreviation for that country which is used as their top level domain. Unmapped ones do not claim the service.
Threw away the bizarre tokenised help generator which assembled a file which in turn output an assembly file after linking. Just used a text file like everyone else: allows the makefile to be rationalised.
Add new exports header file for the international module, with a 10 letter restricted name to match those in Hdr:Interface.
Used international_help switch to permit selection at assembly time for star command help.
Some 1 register LDM/STM swapped for Pull/Push.

Version 1.68. Tagged as 'Inter-1_68'
@
text
@; > adfs::TimSource.!Inter.IntHelpBod

        GBLS    Alphabet
        GBLS    Country
        GBLS    Keyboard
        GBLS    Alphabets
        GBLS    Countries

        [ Arthur120
Alphabet SETS   "Alphabet"
Country SETS    "Country"
Keyboard SETS   "Keyboard"
Alphabets SETS  "Alphabets"
Countries SETS  "Countries"
        |
Alphabet SETS   """"",TokenEscapeChar,Token0,"""""
Country SETS    """"",TokenEscapeChar,Token0,"""""
Keyboard SETS   """"",TokenEscapeChar,Token0,"""""
Alphabets SETS   """"",TokenEscapeChar,Token0,"""""
Countries SETS    """"",TokenEscapeChar,Token0,"""""
        ]

        =       "; A temporary file - do not use", 10, 10

        [ :LNOT: Arthur120
        =       " GET Hdr:Tokens", 10, 10
        ]

        GET     Hdr:ListOpts
        GET     Hdr:ModHand

 [ International_Help = 0 :LOR::LNOT: AllowInterHelp
        =       "Alphabet_Help", 10
        =       " = ""*$Alphabet sets an alphabet from a country"
        =       " or alphabet name."", 13", 10

        =       " = ""*$Alphabet with no parameter displays the currently"
        =       " selected alphabet."", 13", 10

        =       " = ""Type *$Alphabet.s to list available alphabets."", 13"
        =       10, 10

        =       "Alphabet_Syntax", 10
        =       " = ""Syntax: *$Alphabet [<country name>"
        =       " | <alphabet name>]"", 0", 10, 10

        =       "Country_Help", 10
        =       " = ""*$Country sets the appropriate alphabet"
        =       " and keyboard driver for a particular country."", 13", 10

        =       " = ""*$Country with no parameter displays the"
        =       " currently selected country."", 13", 10

        =       " = ""Type *Countries to list available countries."", 13",10,10

        =       "Country_Syntax", 10
        =       " = ""Syntax: *$Country [<country name>]"", 0", 10, 10

        =       "Keyboard_Help", 10
        =       " = ""*$Keyboard sets the keyboard driver"
        =       " for a particular country."", 13", 10

        =       " = ""*$Keyboard with no parameter displays"
        =       " the currently selected keyboard."", 13", 10

        =       " = ""Type *Countries to list available countries."", 13",10,10

        =       "Keyboard_Syntax", 10
        =       " = ""Syntax: *$Keyboard [<country name>]"", 0", 10, 10

        =       "ConCountry_Help", 10
        =       " = ""*Configure $Country controls which country"
        =       " setting the computer will use on a hard reset,"
        =       " which in turn determines which alphabet and"
        =       " keyboard driver is used."", 13", 10

        =       " = ""Type *Countries to list available countries."", 13",10,10

        =       "ConCountry_Syntax", 10
        =       " = ""Syntax: *Configure $Country <country name>"", 0", 10, 10

        =       "Alphabets_Help", 10
        =       " = ""*$Alphabets lists the available alphabets."", 13", 10, 10

        =       "Alphabets_Syntax", 10
        =       " = ""Syntax: *$Alphabets"", 0", 10, 10

        =       "Countries_Help", 10
        =       " = ""*$Countries lists the available countries."", 13", 10, 10

        =       "Countries_Syntax", 10
        =       " = ""Syntax: *$Countries"", 0", 10, 10
 |
        =       "Alphabet_Help", 10
        =       " = ""HINTALP"", 0", 10

        =       "Alphabet_Syntax", 10
        =       " = ""SINTALP"", 0", 10

        =       "Country_Help", 10
        =       " = ""HINTCTY"", 0", 10

        =       "Country_Syntax", 10
        =       " = ""SINTCTY"", 0", 10

        =       "Keyboard_Help", 10
        =       " = ""HINTKBD"", 0", 10

        =       "Keyboard_Syntax", 10
        =       " = ""SINTKBD"", 0", 10

        =       "ConCountry_Help", 10
        =       " = ""HINTCCT"", 0", 10

        =       "ConCountry_Syntax", 10
        =       " = ""SINTCCT"", 0", 10

        =       "Alphabets_Help", 10
        =       " = ""HINTALS"", 0", 10

        =       "Alphabets_Syntax", 10
        =       " = ""SINTALS"", 0", 10

        =       "Countries_Help", 10
        =       " = ""HINTCTS"", 0", 10

        =       "Countries_Syntax", 10
        =       " = ""SINTCTS"", 0", 10
 ]
        =       " ALIGN", 10
        =       " END", 10

        END
@


4.1
log
@Fixed truncated filename
@
text
@@

