head	4.1;
access;
symbols
	Manager-0_57:4.1
	Manager-0_56:4.1
	Manager-0_55:4.1
	Manager-0_54:4.1
	Manager-0_53:4.1
	Manager-0_52:4.1
	Manager-0_51:4.1
	Manager-0_50:4.1
	Manager-0_49:4.1
	Manager-0_48:4.1
	Manager-0_47:4.1
	Manager-0_46:4.1
	Manager-0_45:4.1
	Manager-0_44:4.1
	Manager-0_43:4.1
	RO_5_07:4.1
	Manager-0_42:4.1
	Manager-0_41:4.1
	Manager-0_40:4.1
	Manager-0_39:4.1
	Manager-0_38:4.1
	Manager-0_37:4.1
	dellis_autobuild_BaseSW:4.1
	Manager-0_36:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	Manager-0_35:4.1
	Manager-0_34:4.1
	Manager-0_33:4.1
	Manager-0_32:4.1
	Manager-0_31:4.1
	Manager-0_30:4.1
	Manager-0_29:4.1
	Manager-0_28:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	Manager-0_27:4.1
	Ursula_merge:4.1
	nicke_TerrManager-0_24:4.1.7.1
	bavison_TerritoryManager-0_26:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_Funai01-33:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.40.27;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.40.27;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.55.43;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.45.48;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.00.44;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@The Compress compression/decompression module

This module provides general compression/decompression facilities of a
lossless nature through an SWI interface. The intended algorithm is LZW,
however, no guarantee is made that this will be so in the future. It provides
all combinations of input and output as either store or file, with input
checking (where relevant) and output bound checking (again where relevant),
plus a high performance, unchecked store to store version for those who
require it and are prepared to suffer the consequences of providing faulty
input or insufficient output space.

Some of these interfaces are restartable. The restartability is available for
exhaustion of the compressed form, ie insufficient output space for
compression or insufficient input for decompression. Where restartability is
available, the input and output pointers must be updated before recalling.
Also the output size must be the total available for the entire operation,
including that already used. For second or subsequent calls to compress, the
input size is ignored, the value being acquired from within the workspace.
For second or subsequent calls to decompress, the input must contain, and the
size reflect, any input not used by the preceding call.

Errors will be generated for insufficient workspace (assuming r1 not zero),
for buffer overflow on output and inconsistent state within the workspace.

Store to store compression, with checking. Restartable.
Workspace requirement 31k
SWI: Compress_CompressStoreStore
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input address
         r3 Input size
         r4 Output address
         r5 Output size available
         r6 0 => start from scratch
            1 => continue from data held within workspace
Output:- r0 = 0 => compression complete
         r0 = 1 => compression incomplete
         r1 Workspace required for this call if input r1 = 0
         r3 Input size used
         r5 Output size used

Store to store decompression, with checking. Restartable.
Workspace requirement 17k
SWI: Compress_DecompressStoreStore
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input address
         r3 Input size
         r4 Output address
         r5 Output size available
         r6 0 => Start from scratch, terminate when run out of input
            1 => Start from scratch, request more when run out of input
            2 => Continue from data within workspace, terminate when run out
                 of input
            3 => Continue from data within workspace, request more when run
                 out of input
Output:- r0 = 0 => decompression complete
         r0 = 1 => decompression incomplete
         r1 Workspace required for this call if input r1 = 0
         r3 Input remaining (if input r6 = 1 or 3)
         r5 Output size used

Store to file compression, with checking
Workspace requirement 31k
SWI: Compress_CompressStoreFile
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input address
         r3 Input size
         r4 Output file handle
         r6 Must be zero
Output:- r1 Workspace required for this call if input r1 = 0

Store to file decompression, with checking. Restartable.
Workspace requirement 17k
SWI: Compress_DecompressStoreFile
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input address
         r3 Input size
         r4 Output file handle
         r5 Unused
         r6 0 => Start from scratch, terminate when run out of input
            1 => Start from scratch, request more when run out of input
            2 => Continue from data within workspace, terminate when run out
                 of input
            3 => Continue from data within workspace, request more when run
                 out of input
Output:- r0 = 0 => decompression complete
         r0 = 1 => decompression incomplete
         r1 Workspace required for this call if input r1 = 0
         r3 Input remaining (if input r6 = 1 or 3)

File to store compression, with checking. Restartable.
Workspace requirement 31k
SWI: Compress_CompressFileStore
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input file handle
         r3 Unused
         r4 Output address
         r5 Output size available
         r6 0 => start from scratch
            1 => continue from data held within workspace
Output:- r0 = 0 => compression complete
         r0 = 1 => compression incomplete
         r1 Workspace required for this call if input r1 = 0
         r5 Output size used

File to store decompression, with checking
Workspace requirement 17k
SWI: Compress_DecompressFileStore
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input file handle
         r3 Unused
         r4 Output address
         r5 Output size available
         r6 Must be zero
Output:- r1 Workspace required for this call if input r1 = 0
         r5 Output size used

File to file compression, with checking
Workspace requirement 31k
SWI: Compress_CompressFileFile
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input file handle
         r3 Unused
         r4 Output file handle
         r6 Must be zero
Output:- r1 Workspace required for this call if input r1 = 0

File to file decompression, with checking
Workspace requirement 17k
SWI: Compress_DecompressFileFile
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input file handle
         r3 Unused
         r4 Output file handle
         r6 Must be zero
Output:- r1 Workspace required for this call if input r1 = 0

Store to store compression, without checking
Workspace requirement 21k
SWI: Compress_CompressStoreStoreFast
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input address
         r3 Input size
         r4 Output address
         r5 Output size available
         r6 Must be zero
Output:- r1 Workspace required for this call if input r1 = 0
         r5 Output size used

Store to store decompression, without checking
Workspace requirement 16k
SWI: Compress_DecompressStoreStoreFast
Input:-  r0 Workspace
         r1 Workspace size
         r2 Input address
         r3 Input size
         r4 Output address
         r5 Output size available
         r6 Must be zero
Output:- r1 Workspace required for this call if input r1 = 0
         r5 Output size used

All compression/decompression will use a maximum of 12 bit codes. The output
is compatible with the output of unix compress using 12 bits
(compress -b 12 ...). The maximum output size for compressed data is
12 + 3*input size/2 in the worst case. The workspace requirements are 21k for
compression and 16k for decompression for the unchecked methods, 31k for
checked compression, and 17k for checked decompression.

The expected performance for an 8Mhz A420 with ARM2 is as follows:-

Store to store slow
Compression    24 kbytes per second 
Decompression  48 kbytes per second

Store to store fast
Compression    68 kbytes per second 
Decompression 280 kbytes per second

The expected module size is between 20k and 30k.
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
