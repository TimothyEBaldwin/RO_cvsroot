head	4.2;
access;
symbols
	nturton_USA-0_03:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.2
date	99.04.16.09.16.09;	author kbracey;	state dead;
branches;
next	4.1;

4.1
date	96.11.21.12.46.38;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.21.12.46.38;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.01.42;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Removed obsolete directories
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.ModHead
        LEADR   Module_LoadAddr

        ASSERT  (.=Module_BaseAddr)

        DCD     0
        DCD     Init           - Module_BaseAddr
        DCD     Die            - Module_BaseAddr
        DCD     Service        - Module_BaseAddr
        DCD     Title          - Module_BaseAddr
        DCD     Helpstr        - Module_BaseAddr
        DCD     0

; --------------------------------------------------------------------------

Title   DCB     "USA",0
Helpstr DCB     "USA Territory",9,"$VString ($Date)",0
        ALIGN
; --------------------------------------------------------------------------

Path             DCB     "USA$Path"
                 DCB     0
PathDefault      DCB     "Resources:$.Resources.USA."
                 DCB     0
message_filename DCB     "USA:Messages"
                 DCB     0
        ALIGN

;       Module initialisation point
Init
        Push    "r0-r4,LR"

        ADR     r0, Path
        MOV     r2, #-1
        MOV     r3, #0
        MOV     r4, #VarType_Expanded
        SWI     XOS_ReadVarVal
        CMP     r2, #0

        ADREQ   r0, Path
        ADREQ   r1, PathDefault
        MOVEQ   r2, #?PathDefault
        MOVEQ   r3, #0
        MOVEQ   r4, #VarType_String
        SWIEQ   XOS_SetVarVal

        LDR     r0, [r12]
        CMP     r0, #0                  ; clears V
      [ Version >= 7
        MOVNE   r12,r0
        BNE     %FT01
      |
        Pull    "r0-r4,PC",NE
      ]

        MOV     r0, #6
        LDR     r3, =max_running_work
        SWI     XOS_Module
        ADDVS   sp,sp,#4
        Pull    "r1-r4,PC",VS
        STR     r2, [r12]
        MOV     r12, r2
        MOV     r0, #0
        STR     r0, message_file_block

01
; Build entry table.

Register

        ADR     r14,scratch_buffer
        ADRL    r0,ReadTimeZones
        STR     r0,[r14],#4
        ADRL    r0,ConvertDateAndTime
        STR     r0,[r14],#4
        ADRL    r0,ConvertStandardDateAndTime
        STR     r0,[r14],#4
        ADRL    r0,ConvertStandardDate
        STR     r0,[r14],#4
        ADRL    r0,ConvertStandardTime
        STR     r0,[r14],#4
        ADRL    r0,ConvertTimeToOrdinals
        STR     r0,[r14],#4
        ADRL    r0,ConvertTimeStringToOrdinals
        STR     r0,[r14],#4
        ADRL    r0,ConvertOrdinalsToTime
        STR     r0,[r14],#4
        ADRL    r0,Alphabet
        STR     r0,[r14],#4
        ADR     r0,AlphabetIdent
        STR     r0,[r14],#4
        ADR     r0,SelectKeyboardHandler
        STR     r0,[r14],#4
        ADR     r0,WriteDirection
        STR     r0,[r14],#4
        ADR     r0,CharacterPropertyTable
        STR     r0,[r14],#4
        ADR     r0,GetLowerCaseTable
        STR     r0,[r14],#4
        ADR     r0,GetUpperCaseTable
        STR     r0,[r14],#4
        ADR     r0,GetControlTable
        STR     r0,[r14],#4
        ADR     r0,GetPlainTable
        STR     r0,[r14],#4
        ADR     r0,GetValueTable
        STR     r0,[r14],#4
        ADRL    r0,GetRepresentationTable
        STR     r0,[r14],#4
        ADRL    r0,Collate
        STR     r0,[r14],#4
        ADRL    r0,ReadSymbols
        STR     r0,[r14],#4
        ADRL    r0,GetCalendarInformation
        STR     r0,[r14],#4
        ADRL    r0,NameToNumber
        STR     r0,[r14],#4
        ADRL    r0,TransformString
        STR     r0,[r14],#4

        MOV     r0,#48                  ; US
        ADR     r1,scratch_buffer
        MOV     r2,r12
        SWI     XTerritory_Register     ; Ignore errors.


        Pull    "r0-r4,PC",,^


; --------------------------------------------------------------
;       Module service entry point
Service
        LDR     R12, [R12]
        CMP     R12, #0
        MOVEQ   PC, LR

        TEQ     R1,#Service_TerritoryManagerLoaded
        Push    "r0-r4,LR",EQ
        BEQ     Register

        MOV     PC,LR

; --------------------------------------------------------------
;       RMKill'ing the module
Die
        Push    "R0-R11,LR"
;
        LDR     r12, [r12]
        CMP     r12, #0
        Pull    "R0-R11,PC",EQ,^

        LDR     r0, message_file_block  ; Close the message file if open
        CMP     r0, #0
        ADRNE   r0, message_file_block+4
        SWINE   XMessageTrans_CloseFile
        MOVVC   r0, #0
        STRVC   r0, message_file_block
        STRVS   r0,[SP]
        Pull    "r0-r11,PC",VS

; Deregister

        MOV     r0,#48                  ; USA
        SWI     XTerritory_Deregister

; Release all workspace

      [ Version < 7            ; Now freed by kernel

        MOV     r2, r12
        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module
      ]

        Pull    "R0-R11,PC",,^          ; don't refuse to die

open_messages_file
        ENTRY   r0-r2
        LDR     r0, message_file_block
        CMP     r0, #0
        EXIT    NE
        ADR     r0, message_file_block+4
        ADRL    r1, message_filename
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile
        STRVS   r0, [sp]
        MOVVC   r2, #-1
        STRVC   r2, message_file_block
        EXIT

message_errorlookup ENTRY r1-r7
        BL      open_messages_file
        EXIT    VS
        MOV     r4, r1
        ADR     r1, message_file_block + 4
        MOV     r2, #0
        SWI     XMessageTrans_ErrorLookup
        EXIT

        LNK     s.Entries
@


4.1
log
@Initial revision
@
text
@@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
