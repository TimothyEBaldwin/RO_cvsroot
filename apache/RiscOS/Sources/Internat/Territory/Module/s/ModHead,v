head	1.11;
access;
symbols
	Module-0_63:1.11
	Module-0_62:1.11
	Module-0_61:1.11
	Module-0_60:1.11
	Module-0_59:1.10
	Module-0_58:1.10
	Module-0_57:1.10
	Module-0_56:1.10
	Module-0_55:1.9
	Module-0_54:1.8
	Module-0_53:1.7
	Module-0_52:1.6
	RO_5_07:1.5
	Module-0_51:1.5
	Module-0_50:1.5
	Module-0_49:1.5
	Module-0_48:1.5
	Module-0_47:1.4
	Module-0_46:1.4
	Module-0_45:1.4
	Module-0_44:1.4
	Module-0_43:1.4
	Alpnet_approved:1.4
	Module-0_42:1.4
	dellis_autobuild_BaseSW:1.4
	Module-0_41:1.4
	Module-0_40:1.4
	Module-0_39:1.4
	Module-0_38:1.4
	Module-0_37:1.4
	Module-0_36:1.4
	Module-0_35:1.4
	sbrodie_sedwards_16Mar2000:1.3
	dcotton_autobuild_BaseSW:1.5
	Module-0_34:1.3
	Module-0_33:1.2
	Module-0_32:1.2
	Module-0_31:1.2
	Module-0_30:1.2
	Module-0_29:1.1
	Module-0_28:1.1
	Module-0_27:1.1
	Module-0_26:1.1;
locks; strict;
comment	@# @;


1.11
date	2015.01.16.00.41.33;	author jlee;	state Exp;
branches;
next	1.10;
commitid	rrvnOkGpYOX3rb6y;

1.10
date	2013.02.23.10.49.12;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	MAEYTgrBu7EA2jFw;

1.9
date	2012.05.28.17.23.05;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	ZP2CrZzcPLMsVv6w;

1.8
date	2012.04.01.06.54.36;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	bv4LbApC6T7Hh8Zv;

1.7
date	2012.03.02.09.17.02;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	HvAzpsR97Qno2iVv;

1.6
date	2012.02.20.21.17.02;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	pifcrbq5LMUknWTv;

1.5
date	2001.03.22.13.54.54;	author sbrodie;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.28.14.57.57;	author kbracey;	state Exp;
branches;
next	1.3;

1.3
date	99.04.19.12.30.06;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	98.10.19.11.47.14;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.11.20.58;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Escape some dollars
Detail:
  s/ModHead - Escape some dollars contained in strings to avoid warnings from objasm
Admin:
  Resulting binary unchanged


Version 0.60. Retagged as 'Module-0_60'
@
text
@; Copyright 1998 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.ModHead

        ASSERT  (.=Module_BaseAddr)

        DCD     0
        DCD     Init           - Module_BaseAddr
        DCD     Die            - Module_BaseAddr
        DCD     Service        - Module_BaseAddr
        DCD     Title          - Module_BaseAddr
        DCD     Helpstr        - Module_BaseAddr
        DCD     0
      [ :LNOT: No32bitCode
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     ModFlags       - Module_BaseAddr
      ]

; --------------------------------------------------------------------------

Title            DCB     "$Territory",0
Helpstr          DCB     "$Help",9,"$Module_HelpVersion"
      [ standalone
                 DCB     " Standalone"
      ]
                 DCB     0

Path             DCB     "$Territory$$Path",0
PathDefault      DCB     "Resources:$.Resources.$Territory..",0 ; NB first dot terminates substitution
message_filename DCB     "$Territory:Messages",0
                 ALIGN

      [ :LNOT: No32bitCode
ModFlags         DCD     ModuleFlag_32bit
      ]

; --------------------------------------------------------------------------
;       Module initialisation point
Init
        Push    "r0-r4,LR"

        ADR     r0, Path
        MOV     r2, #-1
        MOV     r3, #0
        MOV     r4, #VarType_Expanded
        SWI     XOS_ReadVarVal
        CMP     r2, #0

        ADREQ   r0, Path
        ADREQ   r1, PathDefault
        MOVEQ   r2, #?PathDefault
        MOVEQ   r3, #0
        MOVEQ   r4, #VarType_String
        SWIEQ   XOS_SetVarVal

      [ standalone
        ADRL    r0, ResourceFiles
        SWI     XResourceFS_RegisterFiles
      ]

        LDR     r0, [r12]
        CMP     r0, #0                  ; clears V
        MOVNE   r12,r0
        BNE     %FT01

        MOV     r0, #ModHandReason_Claim
        LDR     r3, =max_running_work
        SWI     XOS_Module
        ADDVS   sp,sp,#4
        Pull    "r1-r4,PC",VS
        STR     r2, [r12]
        MOV     r12, r2
        MOV     r0, #0
        STRB    r0, message_file_open
01
      [ JapaneseEras
        ; Build era table.
        BL      SetUpEras
      ]

        ; Build entry table.
Register

        ADR     r14,scratch_buffer
        ADRL    r0,ReadTimeZones
        STR     r0,[r14],#4
        ADRL    r0,ConvertDateAndTime
        STR     r0,[r14],#4
        ADRL    r0,ConvertStandardDateAndTime
        STR     r0,[r14],#4
        ADRL    r0,ConvertStandardDate
        STR     r0,[r14],#4
        ADRL    r0,ConvertStandardTime
        STR     r0,[r14],#4
        ADRL    r0,ConvertTimeToOrdinals
        STR     r0,[r14],#4
        ADRL    r0,ConvertTimeStringToOrdinals
        STR     r0,[r14],#4
        ADRL    r0,ConvertOrdinalsToTime
        STR     r0,[r14],#4
        ADRL    r0,Alphabet
        STR     r0,[r14],#4
        ADR     r0,AlphabetIdent
        STR     r0,[r14],#4
        ADR     r0,SelectKeyboardHandler
        STR     r0,[r14],#4
        ADR     r0,WriteDirection
        STR     r0,[r14],#4
        ADR     r0,CharacterPropertyTable
        STR     r0,[r14],#4
        ADR     r0,GetLowerCaseTable
        STR     r0,[r14],#4
        ADR     r0,GetUpperCaseTable
        STR     r0,[r14],#4
        ADR     r0,GetControlTable
        STR     r0,[r14],#4
        ADR     r0,GetPlainTable
        STR     r0,[r14],#4
        ADR     r0,GetValueTable
        STR     r0,[r14],#4
        ADRL    r0,GetRepresentationTable
        STR     r0,[r14],#4
        ADRL    r0,Collate
        STR     r0,[r14],#4
        ADRL    r0,ReadSymbols
        STR     r0,[r14],#4
        ADRL    r0,GetCalendarInformation
        STR     r0,[r14],#4
        ADRL    r0,NameToNumber
        STR     r0,[r14],#4
        ADRL    r0,TransformString
        STR     r0,[r14],#4
        ADRL    r0,IME
        STR     r0,[r14],#4
        ADRL    r0,DaylightRules
        STR     r0,[r14],#4

        ASSERT  ?scratch_buffer >= 43*4
        ADR     r0,UnknownEntry         ; Fill remaining with error stubs
        ADR     r1,scratch_buffer+43*4
02      STR     r0,[r14],#4
        CMP     r14,r1
        BLO     %BT02

        MOV     r0,#TerrNum
        ADR     r1,scratch_buffer
        MOV     r2,r12
        SWI     XTerritory_Register     ; Ignore errors.

        CLRV
        Pull    "r0-r4,PC"

UnknownEntry
        Debug   xx,"Territory : Unknown entry"

        ADR     r0,ErrorBlock_OutOfRange
        B       message_errorlookup

ErrorBlock_OutOfRange
        DCD     ErrorNumber_OutOfRange
        DCB     "UnkSWI",0
        ALIGN

; --------------------------------------------------------------
;       Module service entry point
UservTab
        ASSERT  Service_ResourceFSStarting < Service_TerritoryManagerLoaded
        DCD     0                               ; flags
        DCD     UService - Module_BaseAddr
      [ standalone
        DCD     Service_ResourceFSStarting
      ]
        DCD     Service_TerritoryManagerLoaded
        DCD     0                               ; terminator
        DCD     UservTab - Module_BaseAddr      ; anchor
Service
        MOV     r0,r0                           ; magic instruction
        TEQ     r1,#Service_TerritoryManagerLoaded
      [ standalone
        TEQNE   r1,#Service_ResourceFSStarting
      ]
        MOVNE   PC,LR
UService
        LDR     R12, [R12]
        CMP     R12, #0
        MOVEQ   PC, LR

      [ standalone
        TEQ     r1, #Service_ResourceFSStarting
        BNE     %FT10                           ; must be territory manager loaded then
        Push    "r0, LR"
        ADRL    r0, ResourceFiles
        MOV     lr, pc
        MOV     pc, r2                          ; emulate ResourceFS_RegisterFiles
        Pull    "r0, PC"
10        
      ]
        Push    "r0-r4,LR"
        B       Register

; --------------------------------------------------------------
;       RMKill'ing the module
Die
        LDR     r12, [r12]
        CMP     r12, #0                 ; clears V
        MOVEQ   pc, lr

        Push    "lr"
        
        LDR     r0, message_file_open   ; Close the message file if open
        CMP     r0, #0
        ADRNE   r0, message_file_block
        SWINE   XMessageTrans_CloseFile
        MOVVC   r0, #0
        STRVCB  r0, message_file_open
        Pull    "pc", VS

        ; Deregister

        MOV     r0, #TerrNum
        SWI     XTerritory_Deregister

      [ standalone
        ADRL    r0, ResourceFiles
        SWI     XResourceFS_DeregisterFiles
      ]

        CLRV                            ; don't refuse to die
        Pull    "pc"

open_messages_file
        Entry   r0-r2
        LDRB    r0, message_file_open
        CMP     r0, #0
        EXIT    NE
        ADR     r0, message_file_block
        ADRL    r1, message_filename
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile
        STRVS   r0, [sp]
        MOVVC   r2, #-1
        STRVCB  r2, message_file_open
        EXIT

message_errorlookup
        Entry   r1-r7
        BL      open_messages_file
        EXIT    VS
        MOV     r4, r1
        ADR     r1, message_file_block
        MOV     r2, #0
        SWI     XMessageTrans_ErrorLookup
        EXIT

        LNK     Entries.s
@


1.10
log
@For 'standalone' be robust about ResourceFS restarting

Version 0.56. Tagged as 'Module-0_56'
@
text
@d44 1
a44 1
Path             DCB     "$Territory$Path",0
@


1.9
log
@Addition of supporting functions for automatic daylight saving switchover
In the default implementation SWI Territory_DaylightRules uses textual rule descriptions from the messages file for the respective territory. Other 3rd party territory module providers may choose to do it some other way, for example in code.
The use of MessageTrans allows for sneaky wildcarding of the rules too.
For all currently supported territories rules post year 2000 are included (for most EU countries this is simple due to pan European standardisation), other countries vary in complexity - the rules for the UK go back to the late 1960's mostly as a test vector for the parsing code.
DateTime.s:
  New parsing functions.
  New flags support added to Territory_ConvertDateAndTime to allow the output text to be transformed as though DST was (or wasn't) in effect.
  Related Territory_ConvertStandardDate/StandardTime/StandardDateAndTime changed too.
  Likewise Territory_ConvertOrdinalsToTime.
  Reindented a bit, swap to objasm's DCD and DCB for constant tables.
Entries.s
  New flags support added to Territory_ReadTimeZones.
  Macroised the table of timezones within a territory in a better way.
Finland.s
  Timezones renamed to preferred EET and EEST.
ModHead.s
  Split out the message file block into discrete block and flag.
Territory.s
  Removed unused 100 byte error buffer.

Version 0.55. Tagged as 'Module-0_55'
@
text
@d183 1
d186 3
d195 3
d204 10
@


1.8
log
@A few bug fixes.
The scratch space was not large enough to hold the table for Territory_Register and overran. Buffer made bigger and assert added.
Convert time string to ordinals did not fault 29th Feb in 1900/2100/2200 due to leap year rule error.
For Japan, the SetUpEras function was never called so Japanese eras didn't work.
Duff error block being returned for SWI out of range (was using the error number instead of the address of the error block).
A couple of magic numbers swapped for header file defs.

Version 0.54. Tagged as 'Module-0_54'
@
text
@d26 1
a26 1
 [ :LNOT: No32bitCode
d33 1
a33 1
 ]
d39 1
a39 1
 [ standalone
d41 1
a41 1
 ]
d49 1
a49 1
 [ :LNOT: No32bitCode
d51 1
a51 1
 ]
a53 1

d72 1
a72 1
 [ standalone
d75 1
a75 1
 ]
d90 1
a90 2
        STR     r0, message_file_block

d151 2
a168 1
;--------------------------------------------------------
d183 1
a183 1
        DCD     0                               ;flags
d186 2
a187 2
        DCD     0                               ;terminator
        DCD     UservTab - Module_BaseAddr      ;anchor
d189 1
a189 1
        MOV     r0,r0                           ;magic instruction
a202 2
        Push    "R0-R11,LR"
;
d205 1
a205 1
        Pull    "R0-R11,PC",EQ
d207 3
a209 1
        LDR     r0, message_file_block  ; Close the message file if open
d211 1
a211 1
        ADRNE   r0, message_file_block+4
d214 2
a215 3
        STRVC   r0, message_file_block
        STRVS   r0,[SP]
        Pull    "r0-r11,PC",VS
d217 1
a217 1
; Deregister
d219 1
a219 1
        MOV     r0,#TerrNum
d222 1
a222 1
 [ standalone
d225 1
a225 1
 ]
d227 2
a228 2
        CLRV
        Pull    "R0-R11,PC"             ; don't refuse to die
d232 1
a232 1
        LDR     r0, message_file_block
d235 1
a235 1
        ADR     r0, message_file_block+4
d241 1
a241 1
        STRVC   r2, message_file_block
d244 2
a245 1
message_errorlookup Entry r1-r7
d249 1
a249 1
        ADR     r1, message_file_block + 4
@


1.7
log
@Add ability to programmatically enumerate available timezones within a territory.
Reduced GBLL flag proliferation by using a WHILE/WEND loop to generate the code in Territory_ReadTimeZones.
Moved the standard date and time format strings into 'DateTime.s'.
No longer returns untrappable error numbers of 0, nor unallocated error numbers.
Alaska now recognised as part of the USA following its incorporation in 1912.
Obsolete Yukon timezone removed from Canada.

SWI Territory_ReadTimeZones (&4304A)
------------------------------------
=> R0 bits 0-9 territory number
      bits 10-26 reserved, must be zero
      bits 27-31 timezone within territory
   or -1 to use the current territory (ie. as though bits 10-31 zero)
<= R0 = name of standard time
   R1 = name of summer time
   R2 = signed offset of standard time from UTC in cs
   R3 = signed offset of summer time from UTC in cs

Version 0.53. Tagged as 'Module-0_53'
@
text
@d83 1
a83 1
        MOV     r0, #6
d94 4
a97 1
; Build entry table.
d99 1
d154 2
a155 1
        ADR     r0,UnknownEntry
d173 1
a173 1
        ADR     r0,ErrorNumber_OutOfRange
@


1.6
log
@Fix Territory_ReadTimeZones to behave as documented.
It was reading the current timezone CMOS and returning that in R2 then adding the difference between standard and summertime to get R3.
This meant that when in one territory it was not possible to enumerate the other territories' offsets since they all returned the current CMOS value.
Now, R2 and R3 are purely informational (looked up from the table in the module).

All terrtories on CET now call summertime the preferred "CEST".

Removed unnecessary clean rule from Makefile. Changed some one register push/pull to use macros. Changed filenames to be ".s" at the end.

Added extra switches for the other regions of the world that are wide enough to span multiple timezones. Currently there is no API to read these, so they are defined to cause an assembly error (affects USA/Canada1/Australia). Fixing that is a subject of discussion, whether to support one territory having multiple timezones or just make some extra territories?

Version 0.52. Tagged as 'Module-0_52'
@
text
@d150 1
a150 1
        ADRL    r0,UnknownEntry
d164 11
@


1.5
log
@  Updated build structure to use the shared AAsmModule makefile.
  BBE no longer needs to export all the sources.
  Fixed some non-32bit compatible code.
Detail:
  srcbuild has been updated to be able to process components which want
    to contribute multiple targets to a build.  This means that it is
    no longer necessary to export the entire sources for this component
    into BBE builds.
  There were still a few LDM {..pc}^ instructions around - these have been
    fixed.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.08 or later.
  Requires Env 0.65 or later.
  Requires srcbuild 0.31 if you need to generate a BBE from this component.

Version 0.48. Tagged as 'Module-0_48'
@
text
@d39 1
a39 1
 [ Standalone
d73 1
a73 1
 [ Standalone
d208 1
a208 1
 [ Standalone
@


1.4
log
@32-bit compatible.

Version 0.35. Tagged as 'Module-0_35'
@
text
@d38 1
a38 4
Helpstr          DCB     "$Help",9,"$Module_MajorVersion ($Module_Date)"
 [ Module_MinorVersion <> ""
                 DCB     " $Module_MinorVersion"
 ]
d161 2
a162 2

        Pull    "r0-r4,PC",,^
d191 2
a192 2
        CMP     r12, #0
        Pull    "R0-R11,PC",EQ,^
d213 2
a214 1
        Pull    "R0-R11,PC",,^          ; don't refuse to die
d239 1
a239 1
        LNK     s.Entries
@


1.3
log
@Implemented option for reverse prioritisation of accents during second
collation stage.
Added French and French Canadian territories.
Added option for standalone builds.

Version 0.34. Tagged as 'Module-0_34'
@
text
@d26 8
d51 4
@


1.2
log
@Changed to cope with new Hdr:CMOS
Fills in unknown SWI table entries correctly, as per PRM 3-794
Implemented Territory_IME SWI.

Version 0.30. Tagged as 'Module-0_30'
@
text
@d34 3
d43 1
d64 5
d198 5
@


1.1
log
@Japanese, UK and USA territories merged into one source tree.
Collation order fixed - three pass scheme, sorting first on letters, then on
accents, then on case.
Currency code GBL fixed to GBP [UK]
fi and fl ligatures collated as equivalent to separate fi, fl [UK, USA]
Territory_NameToNumber now handles non-contiguous names in Messages file.
Euro symbol marked as punctuation [UK, USA]
ToControlTable fixed [UK, USA]
%ST string changed to "Day" ideograph [Japan]
Territory name lists extended.

Version 0.26. Tagged as 'Module-0_26'
@
text
@d129 8
@
