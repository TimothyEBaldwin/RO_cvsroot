head	4.8;
access;
symbols
	Messages-1_12:4.8
	Messages-1_11:4.8
	Messages-1_10:4.8
	Messages-1_09:4.8
	Messages-1_08:4.8
	Messages-1_07:4.8
	RO_5_07:4.7
	Messages-1_06:4.7
	Messages-1_05-4_25_2_3:4.6
	Messages-1_05-4_25_2_2:4.6
	Messages-1_05-4_25_2_1:4.6
	sbrodie_dev:4.6.0.2
	sbrodie_dev_bp:4.6
	Messages-1_05:4.6
	Messages-1_04:4.5
	Messages-1_03:4.5
	Messages-1_02:4.5
	Messages-1_01:4.5
	Messages-1_00:4.4
	Messages-0_99:4.3
	dellis_autobuild_BaseSW:4.2
	Messages-0_98:4.2
	Messages-0_97:4.2
	Messages-0_96:4.2
	Messages-0_95:4.2
	Messages-0_94:4.2
	dcotton_Messages_13062000:4.2
	dcotton_Messages_10062000:4.2
	dcotton_autobuild_BaseSW:4.6;
locks; strict;
comment	@# @;


4.8
date	2009.06.11.21.23.52;	author bavison;	state Exp;
branches;
next	4.7;

4.7
date	2003.12.02.15.50.06;	author bavison;	state Exp;
branches;
next	4.6;

4.6
date	2001.01.08.12.25.25;	author sbrodie;	state Exp;
branches;
next	4.5;

4.5
date	2000.10.23.12.55.35;	author rthornbu;	state Exp;
branches;
next	4.4;

4.4
date	2000.10.17.15.54.24;	author rthornbu;	state Exp;
branches;
next	4.3;

4.3
date	2000.10.17.08.21.37;	author rthornbu;	state Exp;
branches;
next	4.2;

4.2
date	2000.06.10.10.31.08;	author dcotton;	state Exp;
branches;
next	4.1;

4.1
date	2000.06.07.16.53.31;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.8
log
@  GET file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both objasm and asasm.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 1.06. Not tagged
@
text
@; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:ModHand
        GET     Defs.s
        GET     Hdr:Proc
        GET     VersionASM

        GBLL    debug
debug   SETL    {FALSE}

        AREA    |Asm$$Code|, CODE, READONLY

Module_BaseAddr

; **************** Module code starts here **********************

        ASSERT  (.-Module_BaseAddr) = 0

        DCD     0 ; Messages_Start    - Module_BaseAddr
        DCD     Messages_Init     - Module_BaseAddr
        DCD     Messages_Die      - Module_BaseAddr
        DCD     Messages_Service  - Module_BaseAddr
        DCD     Messages_Title    - Module_BaseAddr
        DCD     Messages_HelpStr  - Module_BaseAddr
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     0
        DCD     Messages_Flags    - Module_BaseAddr

Messages_Title          DCB     "Messages", 0
Messages_HelpStr        DCB     "UK Messages", 9, "$Module_HelpVersion", 0
                        ALIGN

Messages_Flags          DCD     ModuleFlag_32bit

; *****************************************************************************
;
;       Messages_Init - Initialisation entry
;

Messages_Init
        Entry
        BL      GetResourceAddress      ; r0 -> resource block list
        ADRVC   r2, Register
        BLVC    ResourceLoop
        EXIT

Register
        Entry
        SWI     XResourceFS_RegisterFiles
        EXIT

; *****************************************************************************
;
;       Messages_Die - Die entry
;

Messages_Die
        Entry
        BL      GetResourceAddress      ; r0 -> resource block list
        ADRVC   r2, Deregister
        BLVC    ResourceLoop
        ADDS    r0, r0, #0              ; clear V
        EXIT

Deregister
        Entry
        SWI     XResourceFS_DeregisterFiles
        EXIT

; *****************************************************************************
;
;       Messages_Service - Main entry point for services
;
; in:   r1 = service reason code
;       r2 = sub reason code
;       r3-r5 parameters
;
; out:  r1 = 0 if we claimed it
;       r2 preserved
;       r3-r5 = ???
;

; Ursula format

UServiceTable
        DCD     0
        DCD     UService - Module_BaseAddr
        DCD     Service_ResourceFSStarting
        DCD     0
        DCD     UServiceTable - Module_BaseAddr
Messages_Service ROUT
        MOV     r0, r0
        TEQ     r1, #Service_ResourceFSStarting
        MOVNE   pc, lr

UService

; In    r2 -> address inside ResourceFS module to call
;       r3 = workspace pointer for module
; Out   r2 called with r0 -> files, r3 -> workspace

svc_desktopstarting
        Entry   "r0-r5"
        BL      GetResourceAddress
        BL      ResourceLoop
        EXIT

; *****************************************************************************
;
;       ResourceLoop
;
; in:   r0 -> list of resource blocks
;       r2 -> routine to call on each block (may corrupt r0 only, VS for failure)
;       r3 = workspace for routine
;
; out:  r0 -> error if VS
;       r0-r5 corrupted
;

ResourceLoop
        Entry
        MOV     r4, r0
        SWI     XTerritory_Number
        MOVVS   r5, #0
        MOVVC   r5, r0                  ; r5 = territory number

        ADR     r6, TerritoryList       ; r6 = list of present territories

CT_loop
        LDRB    lr, [r6], #1            ; compare territories
        CMP     lr, #&FF                ; &FF = no more territories in list
        LDREQB  r5, TerritoryList       ; if not found, select the first one
        CMPNE   r5, lr                  ; does it exist in the rom?
        BNE     CT_loop

RL_blockloop
        LDR     lr, [r4], #4            ; for each block
        CMP     lr, #-1                 ; check for first word -1 terminator
        EXIT    EQ

RL_territoryloop
        TEQ     lr, r5                  ; loop through territory list -
        TEQNE   lr, #0                  ; is it for our territory, or common?
        BEQ     RL_forus

        CMP     lr, #-1                 ; territory list terminated by -1
        LDRNE   lr, [r4], #4            ; more territories to go?
        BNE     RL_territoryloop
        B       RL_nextblock            ; not for our territory

RL_forus                                ; our territory is in the list
        LDR     lr, [r4], #4            ; wind forward to end of list
        CMP     lr, #-1
        BNE     RL_forus

        MOV     r0, r4
        MOV     lr, pc
        MOV     pc, r2                  ; call the routine on this block
        EXIT    VS

RL_nextblock
        MOV     lr, #0                  ; loop to end of ResourceFS block
60      LDR     lr, [r4, lr]!
        TEQ     lr, #0
        BNE     %BT60

        ADD     r4, r4, #4              ; and move on to the next block
        B       RL_blockloop


        GET     LocaleList.s

        END
@


4.7
log
@  Given a thrashing to make it build on a 32-bit machine.
Detail:
  * Switched to build the module using objasm instead of aasm
  * Rebuilt all the utils APCS-32, involved making them C99 compliant
  * Fixed a bug in MsgTok whereby single character tokens would screw up
    the output (because the tokenised version is longer than the original).
    Not really sure how we got away with this in the past, and not sure why
    the token generator produces single-character tokens to begin with.
Admin:
  Tested in a Tungsten build.

Version 1.06. Tagged as 'Messages-1_06'
@
text
@d19 1
a19 1
        GET     s.Defs
d190 1
a190 1
        GET     s.LocaleList
@


4.6
log
@  Changes to support BBE more cleanly.
Detail:
  The included header files are included only in a standard build.  In the
    BBE, the definitions for the 3 SWIs it uses are provided explicitly.
    This means that nearly all of the assembler headers can be removed
    from the BBE.  This is useful because those headers contain many
    details about different customers' hardware and software which other
    customers (of the BBE) should not see.  Hdr:Machine.Machine is the
    only file that may need to be modified in this respect.
  During BBE export, BBEDefs is copied as Defs so that s/Common remains
    unaltered in the BBE.
Admin:
  Tested in manual build.
  Required by RiscOS/Export 0.01 or later (Export-0_01)

Version 1.05. Tagged as 'Messages-1_05'
@
text
@a14 1
Module_BaseAddr
d26 3
a28 1
        LEADR   Module_LoadAddr
d60 1
a60 1
        ENTRY
d67 1
a67 1
        ENTRY
d77 1
a77 1
        ENTRY
d85 1
a85 1
        ENTRY
d122 1
a122 1
        ENTRY "r0-r5"
d140 1
a140 1
        ENTRY
@


4.5
log
@  Slight optimisation and internationalisation bug fix.
Detail:
  s.Common
    The loop where it checks to see whether the territory exists and selects
    a default one if not has been optimised a bit.
  Utils.c.LocaleChk
    Changed Territory_NameToNumber to use OS_ServiceCall to prevent problems
    with some territory names not being known (namely Austraila in this case).

Version 1.01. Tagged as 'Messages-1_01'
@
text
@a18 1
        GET     Hdr:System
d20 1
a20 1
        GET     Hdr:Services
a21 4
        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors
        GET     Hdr:ResourceFS
        GET     Hdr:Territory
a23 2
        GET     Hdr:NDRDebug

d25 1
a25 6
        GBLL    debugxx
        GBLL    hostvdu

debug   SETL    false
debugxx SETL    false
hostvdu SETL    false
d48 1
a48 1
Messages_HelpStr        DCB     "UK Messages", 9, "$Module_MajorVersion ($Module_Date)", 0
d169 4
a172 4
RL_forus                  		; our territory is in the list
	LDR	lr, [r4], #4		; wind forward to end of list
	CMP	lr, #-1
	BNE	RL_forus
d189 1
a189 1
	GET	s.LocaleList
@


4.4
log
@  If the configured territory does not exist, it no longer defaults to 1.
  Instead the selected territory is selected from the list of territories
  present in the build, guaranteeing that a working territory will be selected.
Admin:
  It will work, but has been tested on a Risc PC just in case...

Version 1.00. Tagged as 'Messages-1_00'
@
text
@d160 4
a163 4
        LDRB    lr, [r6], #1           ; compare territories
        CMP     lr, #&FF               ; &FF = no more territories in list
        BEQ     CT_notfound
        CMP     r5, lr                  ; does it exist in the rom?
a164 5
        B       RL_blockloop

CT_notfound                             ; if the configured territory doesn't
        ADR     r6, TerritoryList       ; exist, then select the first in
        LDRB    r5, [r6]                ; the territory list
@


4.3
log
@  If the configured territory does not exist, the resources from an already
  defined default territory are taken.
Detail:
  Needed for Bethany as the UK territory is not hard-coded in the kernel as
  one set of ROMs does not contain UK.  If an unknown territory (say 99 for
  example) was selected, the unit would data abort on start up as it could
  not find the correct resources.
  At build time, the application 'LocaleChk' is run that defines a locale
  table which is built into the Messages module.
Admin:
  The new Messages module has been tested in both the Bethany builds (one with
  and one without UK) and the correct behaviour is seen.

Version 0.99. Tagged as 'Messages-0_99'
@
text
@d168 2
a169 1
        MOV     r5, #1                  ; exist, use the default (&01)
@


4.2
log
@	Many changes. Warning, Danger! Danger!
	This version of the module deals with multiple territory blocks being
held in ResourceFS.

Detail:
	* Fixed a bug in TokGen2. MAX_TOKEN_LEN2 was set to 256, when it
actually should be 254 (to allow for 2 byte to hold length and status). This
was causing an overflow which meant that large messages were not being
correctly tokenised. Also added a check for tokens that are too long, to at
least make sure that the buildmaster is informed that something has gone
screwy with the token generation instead of continuing on regardless.
	* Created a simple Perl script, HelpApend, that appends common help
data onto the end of each of the individual territory blocks.
	* Bug fixed in s.Common: Pointer in list was not being advanced.
	* ScanRes altered to allow nested resorce blocks.
	* Bug fixed in ResCommon - the -simulate flag now works in the
correct manner, and not the inverse (ooops!)
	* MsgTok2 now gives a warning if the input file is not present.
	* The main MakeFile has been altered to go through the extra stages
needed by the multiple-resource system.
	* Added the ResCommon binary.

To be done:
	* Make ScanRes use Service_Territory 0 instead of
Territory_NameToNumber to work out territory number to name mappings.
	* Make ResCommon cope with Squash files.
	* Make ResCommon remove all empty directories from the resource
directories.
	* Tidy up the code.
	* Add documentation.
	* Thoroughly test on different builds.

Admin:
	Must be used with srcbuild 20 or later.
	Important notice: From this version onwards, the TerritoryManager
*must* be placed ahead of Messages in the ROM, but after ResourceFS.
	This module has not yet been tested without the LocaleList system
variable being set.
	Work in progress. Do not use for anything release-critical.

Version 0.93. Not tagged
@
text
@d157 13
d203 3
@


4.1
log
@Changes to Messages module code to support message selection by territory.
Build work for this not done yet, but ScanRes modified to output new form
of data block.

Untested.

Version 0.93. Not tagged
@
text
@d172 5
a176 1
RL_forus
d178 1
a178 1
        MOV     lr, pc                  ; it's for our territory
@

