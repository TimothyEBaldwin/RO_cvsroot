head	4.1;
access;
symbols
	Messages-1_12:4.1
	Messages-1_11:4.1
	Messages-1_10:4.1
	Messages-1_09:4.1
	Messages-1_08:4.1
	Messages-1_07:4.1
	RO_5_07:4.1
	Messages-1_06:4.1
	Messages-1_05-4_25_2_3:4.1
	Messages-1_05-4_25_2_2:4.1
	Messages-1_05-4_25_2_1:4.1
	sbrodie_dev:4.1.0.2
	sbrodie_dev_bp:4.1
	Messages-1_05:4.1
	Messages-1_04:4.1
	Messages-1_03:4.1
	Messages-1_02:4.1
	Messages-1_01:4.1
	Messages-1_00:4.1
	Messages-0_99:4.1
	dellis_autobuild_BaseSW:4.1
	Messages-0_98:4.1
	Messages-0_97:4.1
	Messages-0_96:4.1
	Messages-0_95:4.1
	dcotton_autobuild_BaseSW:4.1
	Messages-0_94:4.1
	dcotton_Messages_13062000:4.1;
locks; strict;
comment	@# @;


4.1
date	2000.06.13.16.53.47;	author dcotton;	state Exp;
branches;
next	;


desc
@@


4.1
log
@	More changes.
Detail:
	* ResCommon no longer called with Verbose flag set.
	* A new Perl script, RemoveEmpt, added, that strips out any emtpy
directories in the processed directory.
	* ResCommon now deals correctly with squashed filed - it reads in the
header of the file and ignores the exec address.
	* get_filetype() now works correctly.
	* ResCommon has been generally tidied up.
Admin:
	Still under development. Should work more reliably than the previous
version.

Version 0.93. Not tagged
@
text
@#! /bin/perl
# Copyright 2000 Pace Micro Technology plc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Purpose: Perl script to recursively delete 'empty' directories
# Author:  Justin Fletcher
# $Id$
# $Name$

# Copyright [2000] Pace Micro Technology PLC.  All rights reserved.
#
# The copyright in this material is owned by Pace Micro Technology PLC
# ("Pace").  This material is regarded as a highly confidential trade secret
# of Pace.  It may not be reproduced, used, sold or in any other way exploited
# or transferred to any third party without the prior written permission of
# Pace.

# >>> Configurable
# Directory separator (might need to change if on RISC OS)
$dirsep=".";

# Debug option
$debug=0;
# <<< Configurable

# read CLI arg
$directory=shift || die "Syntax: RemoveEmpty [-d] <directory>\n";
if ($directory eq "-d")
{
  $directory=shift || die "Syntax: RemoveEmpty [-d] <directory>\n";
  $debug=1;
}

&remove_empty($directory);

# Remove empty directories
# Use $empty=remove_empty( directory name )
sub remove_empty
{
  local ($directory) = @@_;
  local @@files;     # array of directories in this directory
  local $objects=0; # objects in this directory
  local $object;    # name of current object
  local $fullpath;  # full path of object

  # move to directory being scanned
  print "Examining $directory\n" if $debug;
  opendir (DIR, $directory);
  
  # Create a stack of the directories here
  @@files=readdir (DIR);
  
  # Now for every directory, remove things
  while ($object = pop(@@files))
  {
    $fullpath="$directory$dirsep$object";
    if ( ($object eq ".") || ($object eq "..") )
    {
      # some perl/OS versions will enumerate current and parent directories
    }
    else
    {
      print "File: $object\n" if $debug;
      $objects++;
      if (-d $fullpath)
      {
        if (&remove_empty($fullpath))
        {
          print "Removing $fullpath\n" if $debug;
          rmdir ($fullpath);
          $objects--;
        }
      }
    }
  }
  
  # return 1 if we've got nothing left
  return ($objects==0);
}
@
