head	1.2;
access;
symbols
	Patch-0_08:1.2
	Patch-0_07:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.05.19.20.29.15;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	CFYV4nS29beJMbBx;

1.1
date	2012.09.01.13.59.32;	author rsprowson;	state Exp;
branches;
next	;
commitid	wmVf3VFxGhRBIPiw;


desc
@@


1.2
log
@Remove ineffective check for bit 31 of AIF flags word
Application note 295 boldly declared bit 31 of AIF as "application is StrongARM compatible", however the AIF docs nor the tools were ever updated to implement this.
Hence, the quick exit when the flag is set never triggers, and 17 years on it might as well not bother.
Also - added a syntax reminder in *PATCHSTATS rather than a blank line.
Resolves ticket #310.

Version 0.08. Tagged as 'Patch-0_08'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Title:   cmhg.
; History:
;

#include "VersionNum"

help-string:           App_Patcher Module_MajorVersion_CMHG
date-string:           Module_Date_CMHG
title-string:          AppPatcher
initialisation-code:   patch_init
service-call-handler:  patch_services &B7
command-keyword-table: patch_commands
            PatchStats(min-args:0, 
                       max-args:255,
                       help-text:     "*PatchStats displays statistics about patches applied to "
                                      "StrongARM-unaware applications.\r",
                       add-syntax:,
                       invalid-syntax:"Syntax: *PatchStats")

@


1.1
log
@Fix to not badly corrupt random bits of RMA
The C compiler switches were missing the -zM switch, and C code was referencing data in far away areas (which don't get reduced to position independent ADRs).
It's hard to see how this would have ever worked, but rather than worry too much about it, just change it so it does.
* Makefile gains -zM switches and general tidying up
* Generate CMHG header file so the C code matches the module header prototypes, and rename the CMHG file so as not to confuse the unix<->RISC OS filename translation
* Be more strict and only match on subreason 1 of Service_UKCompression rather than any non zero subreason
* If the pathname exceeds 255 characters, right justify it and add an elipsis rather than overruning the buffer
* Remove some dubious casts
* Add a bit of assembler to the 'GetSig' macro to do the position independent bit
Tested on StrongARM RISC OS 4.02, with an application known to need patching. Patch count was 1, and machine didn't stiff.

Version 0.07. Tagged as 'Patch-0_07'
@
text
@d21 5
a25 5
help-string: App_Patcher Module_MajorVersion_CMHG
date-string: Module_Date_CMHG
title-string: AppPatcher
initialisation-code: patch_init
service-call-handler: patch_services &B7
d27 6
a32 4
                                PatchStats(min-args:0,max-args:255,
                                help-text:"*PatchStats displays statistics about patches applied to "
                                          "StrongARM-unaware applications\r",
                                invalid-syntax:"")
@

