head	4.5;
access;
symbols
	Patch-0_08:4.5
	Patch-0_07:4.4
	Patch-0_06:4.3
	Patch-0_05:4.2
	Patch-0_04:4.1;
locks; strict;
comment	@# @;


4.5
date	2015.01.06.02.14.51;	author jlee;	state Exp;
branches;
next	4.4;
commitid	FsdVYFflOQVZgU4y;

4.4
date	2012.09.01.13.59.24;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	wmVf3VFxGhRBIPiw;

4.3
date	2002.12.12.17.38.10;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	2002.12.12.17.11.45;	author rsprowson;	state Exp;
branches;
next	4.1;

4.1
date	2002.12.12.16.43.37;	author srevill;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Makefile fix for patch.h
Detail:
  Makefile - Split cmhgdefn.o rule in two parts so that it's clear where patch.h comes from. Fixes amu throwing 'Don't know how to make ...' e rrors when doing repeated builds of PlingSystem.
Admin:
  Tested with PlingSystem build


Version 0.08. Retagged as 'Patch-0_08'
@
text
@# Copyright 2002 Tematic Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for StrongARM AppPatcher
#

COMPONENT    = PatchApp
TARGET      ?= ${COMPONENT}
INSTDIR     ?= <Install$Dir>
OBJS         = Sigs.o sigfind.o new_osswi.o new_swic.o new_swical.o \
               patch.o new_dlib.o new_overmg.o new_osswib.o cmhgdefn.o

include StdTools
include ModuleLibs

CFLAGS      += ${C_MODULE} ${C_NO_STKCHK}

clean:
        ${WIPE} h.patch ${WFLAGS}
        ${WIPE} o       ${WFLAGS}
        ${WIPE} rm      ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

install: rm.${COMPONENT}
        ${MKDIR} ${INSTDIR}
        ${CP} rm.${COMPONENT} ${INSTDIR}.${TARGET} ${CPFLAGS}
        @@echo ${COMPONENT}: installed (disc)

# Static dependencies:

dirs:
        ${MKDIR} o
        ${MKDIR} rm

rm.PatchApp: ${OBJS} dirs
        ${LD} -rmf -o $@@ ${OBJS} ${CLIB}

sigfind.o: sigfind.c
        %cc -APCS 3/26bit/fpe2 ${CFLAGS} -o $@@ sigfind.c

patch.o: patch.c patch.h
        %cc -APCS 3/26bit/fpe2 ${CFLAGS} -o $@@ patch.c

Sigs.o: Sigs.s
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -o $@@ Sigs.s

new_osswi.o: new_osswi.s                  
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -o $@@ new_osswi.s

new_swic.o: new_swic.s
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -o $@@ new_swic.s

new_swical.o: new_swical.s
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -o $@@ new_swical.s

new_dlib.o: new_dlib.s
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -o $@@ new_dlib.s

new_overmg.o: new_overmg.s
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -o $@@ new_overmg.s

new_osswib.o: new_osswib.s
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -o $@@ new_osswib.s

# Mark as 26 bit only, if you're not StrongARM aware by now you certainly aren't 32 bit safe
cmhgdefn.o: cmhg.cmhgdefn
        %cmhg -p -26bit cmhg.cmhgdefn -o $@@

patch.h: cmhg.cmhgdefn
        %cmhg -p -26bit cmhg.cmhgdefn -d patch.h

# Dynamic dependencies:
@


4.4
log
@Fix to not badly corrupt random bits of RMA
The C compiler switches were missing the -zM switch, and C code was referencing data in far away areas (which don't get reduced to position independent ADRs).
It's hard to see how this would have ever worked, but rather than worry too much about it, just change it so it does.
* Makefile gains -zM switches and general tidying up
* Generate CMHG header file so the C code matches the module header prototypes, and rename the CMHG file so as not to confuse the unix<->RISC OS filename translation
* Be more strict and only match on subreason 1 of Service_UKCompression rather than any non zero subreason
* If the pathname exceeds 255 characters, right justify it and add an elipsis rather than overruning the buffer
* Remove some dubious casts
* Add a bit of assembler to the 'GetSig' macro to do the position independent bit
Tested on StrongARM RISC OS 4.02, with an application known to need patching. Patch count was 1, and machine didn't stiff.

Version 0.07. Tagged as 'Patch-0_07'
@
text
@d52 1
a52 1
patch.o: patch.c
d78 3
a81 1
        %cmhg -p -26bit cmhg.cmhgdefn -o $@@
@


4.3
log
@OK then,who hardcoded 0.04 into the title string?
Now derived from the VersionNum file

Version 0.06. Tagged as 'Patch-0_06'
@
text
@d15 2
a16 1
# Project:   SigPatch
d21 2
d25 3
d30 3
a32 2
        ${WIPE} o ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
d46 2
a47 5
rm.PatchApp: @@.o.Sigs @@.o.sigfind @@.o.new_osswi @@.o.new_swic @@.o.new_swical \
             @@.o.cmhg @@.o.patch @@.o.new_dlib @@.o.new_overmg @@.o.new_osswib \
             dirs
        Link -rmf -c++ -o $@@ @@.o.Sigs @@.o.sigfind @@.o.new_osswi @@.o.new_swic \
        @@.o.new_swical @@.o.cmhg @@.o.patch @@.o.new_dlib @@.o.new_overmg @@.o.new_osswib Build:^.Export.APCS-R.Lib.CLib.o.stubs
d49 2
a50 2
@@.o.Sigs: @@.s.Sigs
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -from @@.s.Sigs -to @@.o.Sigs
d52 2
a53 2
@@.o.sigfind: @@.c.sigfind
        %cc -APCS 3/26bit/fpe2 ${CFLAGS} -o @@.o.sigfind @@.c.sigfind
d55 2
a56 2
@@.o.new_osswi: @@.s.new_osswi
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -from @@.s.new_osswi -to @@.o.new_osswi
d58 2
a59 2
@@.o.new_swic: @@.s.new_swic
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -from @@.s.new_swic -to @@.o.new_swic
d61 2
a62 2
@@.o.new_swical: @@.s.new_swical
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -from @@.s.new_swical -to @@.o.new_swical
d64 2
a65 3
# Mark as 26 bit only.If you're not StrongARM aware by now you certainly aren't 32 bit safe
@@.o.cmhg: @@.cmhg.cmhg
        %cmhg -p -26bit @@.cmhg.cmhg -o @@.o.cmhg
d67 2
a68 2
@@.o.patch: @@.c.patch
        %cc -APCS 3/26bit/fpe2 ${CFLAGS} -o @@.o.patch @@.c.patch
d70 2
a71 2
@@.o.new_dlib: @@.s.new_dlib
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -from @@.s.new_dlib -to @@.o.new_dlib
d73 2
a74 2
@@.o.new_overmg: @@.s.new_overmg
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -from @@.s.new_overmg -to @@.o.new_overmg
d76 4
a79 2
@@.o.new_osswib: @@.s.new_osswib
        %ObjAsm -APCS 3/26bit ${ASFLAGS} -from @@.s.new_osswib -to @@.o.new_osswib
@


4.2
log
@Change to Makefile to ensure it's marked as a 26 bit module.
Fixes bug report of data abort on loading it on 32 bit system - if you
are relying on app patcher for StrongARM compatibility I'd put money
on it not being 32 bit safe anyway.

Version 0.05. Tagged as 'Patch-0_05'
@
text
@d62 1
a62 1
        %cmhg -26bit @@.cmhg.cmhg -o @@.o.cmhg
@


4.1
log
@Knocked into shape to allow building with current tools.
As featured on the disc image accompanying RISC OS 5.00

Version 0.04. Tagged as 'Patch-0_04'
@
text
@d42 2
a43 2
        tLink -rmf -c++ -o $@@ @@.o.Sigs @@.o.sigfind @@.o.new_osswi @@.o.new_swic \
        @@.o.new_swical @@.o.cmhg @@.o.patch @@.o.new_dlib @@.o.new_overmg @@.o.new_osswib
d46 1
a46 1
        ${AS} ${ASFLAGS} -from @@.s.Sigs -to @@.o.Sigs
d49 1
a49 1
        ${CC} ${CFLAGS} -o @@.o.sigfind @@.c.sigfind
d52 1
a52 1
        ${AS} ${ASFLAGS} -from @@.s.new_osswi -to @@.o.new_osswi
d55 1
a55 1
        ${AS} ${ASFLAGS} -from @@.s.new_swic -to @@.o.new_swic
d58 1
a58 1
        ${AS} ${ASFLAGS} -from @@.s.new_swical -to @@.o.new_swical
d60 1
d62 1
a62 1
        cmhg @@.cmhg.cmhg -o @@.o.cmhg
d65 1
a65 1
        ${CC} ${CFLAGS} -o @@.o.patch @@.c.patch
d68 1
a68 1
        ${AS} ${ASFLAGS} -from @@.s.new_dlib -to @@.o.new_dlib
d71 1
a71 1
        ${AS} ${ASFLAGS} -from @@.s.new_overmg -to @@.o.new_overmg
d74 1
a74 1
        ${AS} ${ASFLAGS} -from @@.s.new_osswib -to @@.o.new_osswib
@

