head	4.6;
access;
symbols
	Patch-0_08:4.6
	Patch-0_07:4.5
	Patch-0_06:4.4
	Patch-0_05:4.3
	Patch-0_04:4.2;
locks; strict;
comment	@# @;


4.6
date	2014.05.19.20.29.05;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	CFYV4nS29beJMbBx;

4.5
date	2012.09.01.13.59.24;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	wmVf3VFxGhRBIPiw;

4.4
date	2002.12.12.17.38.10;	author rsprowson;	state Exp;
branches;
next	4.3;

4.3
date	2002.12.12.17.11.45;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	2002.12.12.16.43.37;	author srevill;	state Exp;
branches;
next	4.1;

4.1
date	2002.12.12.16.39.13;	author srevill;	state Exp;
branches;
next	;


desc
@@


4.6
log
@Remove ineffective check for bit 31 of AIF flags word
Application note 295 boldly declared bit 31 of AIF as "application is StrongARM compatible", however the AIF docs nor the tools were ever updated to implement this.
Hence, the quick exit when the flag is set never triggers, and 17 years on it might as well not bother.
Also - added a syntax reminder in *PATCHSTATS rather than a blank line.
Resolves ticket #310.

Version 0.08. Tagged as 'Patch-0_08'
@
text
@/* (0.08)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.08
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                19 May 2014

#define Module_MajorVersion             "0.08"
#define Module_Version                  8
#define Module_MinorVersion             ""
#define Module_Date                     "19 May 2014"

#define Module_ApplicationDate          "19-May-14"

#define Module_ComponentName            "Patch"
#define Module_ComponentPath            "castle/RiscOS/Sources/SystemRes/Patch"

#define Module_FullVersion              "0.08"
#define Module_HelpVersion              "0.08 (19 May 2014)"
#define Module_LibraryVersionInfo       "0:8"
@


4.5
log
@Fix to not badly corrupt random bits of RMA
The C compiler switches were missing the -zM switch, and C code was referencing data in far away areas (which don't get reduced to position independent ADRs).
It's hard to see how this would have ever worked, but rather than worry too much about it, just change it so it does.
* Makefile gains -zM switches and general tidying up
* Generate CMHG header file so the C code matches the module header prototypes, and rename the CMHG file so as not to confuse the unix<->RISC OS filename translation
* Be more strict and only match on subreason 1 of Service_UKCompression rather than any non zero subreason
* If the pathname exceeds 255 characters, right justify it and add an elipsis rather than overruning the buffer
* Remove some dubious casts
* Add a bit of assembler to the 'GetSig' macro to do the position independent bit
Tested on StrongARM RISC OS 4.02, with an application known to need patching. Patch count was 1, and machine didn't stiff.

Version 0.07. Tagged as 'Patch-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.07
d9 1
a9 1
#define Module_Date_CMHG                01 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d14 1
a14 1
#define Module_Date                     "01 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "01-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (01 Sep 2012)"
#define Module_LibraryVersionInfo       "0:7"
@


4.4
log
@OK then,who hardcoded 0.04 into the title string?
Now derived from the VersionNum file

Version 0.06. Tagged as 'Patch-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                12 Dec 2002
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "12 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "12-Dec-02"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/SystemRes/Patch"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (12 Dec 2002)"
#define Module_LibraryVersionInfo       "0:6"
@


4.3
log
@Change to Makefile to ensure it's marked as a 26 bit module.
Fixes bug report of data abort on loading it on 32 bit system - if you
are relying on app patcher for StrongARM compatibility I'd put money
on it not being 32 bit safe anyway.

Version 0.05. Tagged as 'Patch-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (12 Dec 2002)"
#define Module_LibraryVersionInfo       "0:5"
@


4.2
log
@Knocked into shape to allow building with current tools.
As featured on the disc image accompanying RISC OS 5.00

Version 0.04. Tagged as 'Patch-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (12 Dec 2002)"
#define Module_LibraryVersionInfo       "0:4"
@


4.1
log
@Addition of VersionNum file
@
text
@d1 1
a1 1
/* (0.03)
d4 1
d7 3
a9 1
#define Module_Date_CMHG                06 Nov 1996
d11 4
a14 2
#define Module_MajorVersion             "0.03"
#define Module_Date                     "06 Nov 1996"
d16 8
a23 1
#define Module_FullVersion              "0.03"
@

