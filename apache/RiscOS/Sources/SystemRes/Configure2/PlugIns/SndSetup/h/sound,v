head	1.5;
access;
symbols
	SndSetup-2_08:1.5
	SndSetup-2_07:1.4
	SndSetup-2_06:1.3
	SndSetup-2_05:1.3
	SndSetup-2_04:1.3
	SndSetup-2_03:1.2
	SndSetup-2_02:1.2
	SndSetup-2_01:1.2
	SndSetup-2_00:1.2
	SndSetup-1_00:1.2
	SndSetup-0_06:1.1.1.1
	SndSetup-0_05:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rleggett_SndSetup-0_04b:1.1.1.1
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-29Jul1998:1.1.1.1
	rthornb_UrsulaBuild-22Jul1998:1.1.1.1
	rthornb_UrsulaBuild-15Jul1998:1.1.1.1
	rthornb_UrsulaBuild-07Jul1998:1.1.1.1
	rthornb_UrsulaBuild-17Jun1998:1.1.1.1
	rleggett_SndSetup-0_03:1.1.1.1
	rthornb_UrsulaBuild-03Jun1998:1.1.1.1
	rthornb_UrsulaBuild-27May1998:1.1.1.1
	rthornb_UrsulaBuild-21May1998:1.1.1.1
	rthornb_UrsulaBuild_01May1998:1.1.1.1
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.06.08.22.00.56;	author jlee;	state Exp;
branches;
next	1.4;
commitid	OjqsgzPB8RRw9I9z;

1.4
date	2013.07.20.14.39.44;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	siN8EGpUAUgHAdYw;

1.3
date	2012.01.21.19.31.20;	author jlee;	state Exp;
branches;
next	1.2;
commitid	S2B7wm85L3fSK4Qv;

1.2
date	2003.02.28.16.15.27;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	98.04.14.10.41.55;	author rleggett;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.14.10.41.55;	author rleggett;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Allow configuration of default audio controller device
Detail:
  If SndSetup detects that a version of SoundDMA is in use which supports controller enumeration & selection, the plugin display will have an extra string set gadget which can be used to select which device should be used
  When switching between devices the list of mixer controllers will update accordingly
  The controller selection will be saved to the SndSetup choices file, along with the mixer settings - with mixer settings being saved for all mxiers that are present, not just the selected one.
  File changes:
  - Resources/UK/Res,fae, h/defines - Updated to add the new string set and tweak the layout a bit
  - h/sound, c/sound - Added linked list of controller devices. Mixer channel detail arrays are now allocated on demand and stored as part of the controller details. Channel details now also tracks the currently selected mute & gain settings, since we can no longer rely on the UI to store those values for us if we're recreating gadgets when switching device.
  - c/main - Mixer volume slider setup separated out into its own function, so it can be repeated whenever we switch device.
  - h/common - Forward-declare of new function
Admin:
  Tested on Raspberry Pi, iMx6, Iyonix, RiscPC
  Requires Sound0HAL-1_84 / Sound0Trid-1_69 / Sound0-1_72


Version 2.08. Tagged as 'SndSetup-2_08'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*---------------------------------------------------------------------------*/
/* File:    sound.h                                                          */
/*---------------------------------------------------------------------------*/

#include <stdbool.h>

#define ReadCMOSSettings  1
#define WriteCMOSSettings 2

#define MAX_CHANNELS 64 /* currently dictated by component IDs */

typedef struct
{
  char token_suffix[6];
  char *name;
  int category;
  unsigned int index;
  int original_gain;     /* what to restore if the user SELECT-clicks Cancel */
  bool original_mute;
  int configured_gain;   /* what to show if the user ADJUST-clicks Cancel */
  bool configured_mute;
  int selected_gain;
  bool selected_mute;
  bool fixed;
  bool mono;
  bool muted_by_default;
  int mingain;
  int maxgain;
  int step;
} channel_t;

#define VIDC_CHANNEL     "O2s01", NULL, mixer_CATEGORY_HEADPHONES, 0, \
                         0, FALSE, \
                         0, FALSE, \
                         0, FALSE, \
                         FALSE, FALSE, FALSE, \
                         -21*16, 0*16, 3*16

typedef struct controller_list_entry
{
  struct controller_list_entry *next;
  int index; /* Index in string set */
  channel_t *channels;
  unsigned int nchannels;
  const char *mixer_id; /* ID to use with SoundCtrl; will be NULL if !multidevice */
  char config_id[1]; /* ID to use with config files; will be '0' if !multidevice */
} controller_list_entry_t;

extern controller_list_entry_t *original_controller;
extern controller_list_entry_t *configured_controller;
extern controller_list_entry_t *selected_controller;
extern controller_list_entry_t *controllers;
extern BOOL vidcmix;
extern BOOL multidevice;
extern unsigned int maxchannels;

void sound_detect_mix_mode(void);
void sound_enumerate_devices(void);
void sound_make_voices_menu(int window_id);
void sound_make_devices_menu(int window_id);
void sound_read_write_cmos_settings(int condition_code, int window_id);
void sound_read_choices(void);
void sound_save_choices(void);
int sound_reflect_gadget_state(int event_code, ToolboxEvent *event_block, IdBlock *id_block, void *handle);
void sound_reset_to_configured(int window_id);
void sound_reset_to_defaults(int window_id);
void sound_restore_original_settings(void);
@


1.4
log
@Move beep on error option into Sound Setup
Part of simplification of the window setup plugin.
Also, to avoid having to maintain two similar plugins, the differences from the former VIDC oriented Sound Setup are integrated
* If SoundControl module is running behave as before
* If no SoundControl but there is a VIDC, adapt to add
  + 16b/8b hardware option
  + oversampling option
  + don't permit muting of the (one and only) mixing channel
  + the mixing channel governs the *VOLUME and corresponding CMOS bits
* Updated common functions from other plugins
* Use definitions from HighFSI, OsBytes, CMOS in place of local ones

Tested on a Risc PC (ie. VIDC style) and Beagleboard xM (ie. mixer style).

Version 2.07. Tagged as 'SndSetup-2_07'
@
text
@d26 1
a26 1
extern struct channel
d36 2
d44 1
a44 1
} channel[MAX_CHANNELS];
d49 1
d53 14
a66 1
extern unsigned int nchannels;
d68 2
d72 1
a72 1
void sound_read_channel_info(void);
d74 1
d76 2
a77 2
void sound_read_choices(int window_id);
void sound_save_choices(int window_id);
@


1.3
log
@Adjust volume slider min/max values to match range supported by hardware
Detail:
  c/main, c/sound, h/sound - Now uses the additional gain data returned by SoundCtrl_ExamineMixer to alter the volume slider min, max and step values.
  If SoundCtrl_ExamineMixer doesn't return any additional gain data, the sliders will have properties that match those of previous versions of the plugin.
Admin:
  Tested on Iyonix & BB-xM, both with and without the new gain data being available.
  Note that a bug in previous versions of SndSetup will cause it to crash/malfunction if it encounters the new gain data (i.e. SoundCtrl 1.01+ used with a mixer device which implements HAL mixer API 0.1+)


Version 2.04. Tagged as 'SndSetup-2_04'
@
text
@d16 1
a16 1
/* File:    h.sound                                                          */
a23 2
#define OSBYTE_ReadWriteBellVolume 212

d42 7
a48 2
}
channel[MAX_CHANNELS];
d51 1
d53 1
@


1.2
log
@Given a major overhaul to work with the HAL version of the SoundControl
module. Slider list is now dynamically generated to reflect hardware
capabilities. Configuration of beep voice and volume is now consistent with
the rest of !Configure (ie doesn't happen until you click 'Set').

Version 1.00. Tagged as 'SndSetup-1_00'
@
text
@d41 3
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
#define NumberOfChannels  8
d26 22
a47 1
void sound_read_channel_info(int window_id);
a49 1
void sound_set_volume(int channel_no, int volume);
d51 4
a54 3
void sound_make_voices_menu(int window_id);
void sound_change_voice(int n);
void sound_set_cmos_defaults(void);
@


1.1.1.1
log
@Initial import of SndSetup plugin for Configure.
@
text
@@
