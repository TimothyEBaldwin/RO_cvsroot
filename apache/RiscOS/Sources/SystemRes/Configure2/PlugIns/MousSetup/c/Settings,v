head	1.3;
access;
symbols
	MousSetup-0_16:1.3
	MousSetup-0_15:1.2
	MousSetup-0_14:1.2
	MousSetup-0_13:1.1.1.1
	MousSetup-0_12:1.1.1.1
	MousSetup-0_11:1.1.1.1
	MousSetup-0_10:1.1.1.1
	MousSetup-0_09:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-29Jul1998:1.1.1.1
	rthornb_UrsulaBuild-22Jul1998:1.1.1.1
	rthornb_UrsulaBuild-15Jul1998:1.1.1.1
	rthornb_UrsulaBuild-07Jul1998:1.1.1.1
	rthornb_UrsulaBuild-17Jun1998:1.1.1.1
	rthornb_UrsulaBuild-03Jun1998:1.1.1.1
	rthornb_UrsulaBuild-27May1998:1.1.1.1
	rthornb_UrsulaBuild-21May1998:1.1.1.1
	bavison_MousSetup-0_08:1.1.1.1
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.08.03.07.42.12;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	ugBUFN5lnxPyPYZw;

1.2
date	2013.01.17.21.27.52;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	GemnABzbEn9pLBAw;

1.1
date	98.05.11.12.35.00;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.11.12.35.00;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Relocate iconbar settings out of the mouse setup
This plugin is now only concerned with aspects of the mouse driver and speed.
Window reduced in size to small enough to not need an optional scroll bar too.

Version 0.16. Tagged as 'MousSetup-0_16'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	Settings.c ********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Mouse configuration plug-in
This file:	GUI <-> settings routines

History:
Date		Who	Change
----------------------------------------------------------------------------
09/12/1997	BJGA	Split from Main
			Added these headers
15/01/1998	BJGA	Adapted to use stored CMOS defaults
11/05/1998	BJGA	Adapted for use with new Wimp CMOS usage
			Activated autofronting on/off and time options
			Added autoscroll pause time support

\**************************************************************************/

/* CLib */
#include <string.h>
#include "swis.h"
#include "Global/OsWords.h"
/* Toolbox */
#include "toolbox.h"
#include "window.h"
#include "gadgets.h"
/* Common */
#include "cmos.h"
#include "misc.h"
/* local headers */
#include "Main.h"
#include "MouseType.h"
#include "Settings.h"  /* includes prototypes for this file */

#define mousespeed_slider_upperbound	((int) 9)

const cmos cmos_details [18] = { { 0xC2, 0, 8 },	/* MouseMultiplier */
				 { 0x1D, 0, 8 },	/* MouseType */
				 
				 { 0xDD, 0, 4 },	/* (WimpDragDelay EOR 5) */
				 { 0xDE, 0, 1 },	/* WimpDragDelayUnit */

				 { 0xDE, 2, 5 },	/* (WimpDragMove/4 EOR 8) */

				 { 0xDF, 0, 4 },	/* (WimpDoubleClickDelay EOR 10) */
				 { 0x16, 0, 1 },	/* WimpDoubleClickDelayUnit */

				 { 0x16, 2, 5 },	/* (WimpDoubleClickMove/4 EOR 8) */

				 { 0xDD, 4, 4 },	/* (WimpAutoScrollDelay EOR 5) */
				 { 0xDE, 1, 1 } };	/* WimpAutoScrollDelayUnit */

/******	settings_read() ***************************************************\

Purpose:	Reads current / default settings, reflect them in GUI
In:		Routine to determine settings (cmos_read or cmos_default)

\**************************************************************************/

void settings_read (int(*get)(cmos item, void *messages))
{
  int	value;
//
  value = get (MouseMultiplier, &messages);
  if (value >= 0x80) value = 0x100-value; /* force positive */
  value = max(value, 1);                  /* force in range */
  value = min(value, mousespeed_slider_upperbound);
  throw (slider_set_value (0, mainwindow_id, mainwindow_mousespeed, value));
//
  throw (stringset_set_selected (0, mainwindow_id, mainwindow_mousetype, mousetype_get (get)));
//
  value = get (WimpDragDelay, &messages) ^ 5;
  if (1 == get (WimpDragDelayUnit, &messages)) value *= 10;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_dragdelay, value));
//
  value = (get (WimpDragMove, &messages) ^ 8) * 4;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_dragdist, value));
//
  value = get (WimpDoubleClickDelay, &messages) ^ 10;
  if (1 == get (WimpDoubleClickDelayUnit, &messages)) value *= 10;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_dclickdelay, value));
//
  value = (get (WimpDoubleClickMove, &messages) ^ 8) * 4;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_dclickdist, value));
//
  value = get (WimpAutoScrollDelay, &messages) ^ 5;
  if (1 == get (WimpAutoScrollDelayUnit, &messages)) value *= 10;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_autoscr, value));
//
}

/******	settings_write() **************************************************\

Purpose:	Reads GUI, reflect in current and configured settings
Out:		TRUE => operation performed successfully
		  (if user backs out of changing the mouse driver,
		  no other settings are made either)

\**************************************************************************/

BOOL settings_write (void)
{
  int value;
  char string [256];
  unsigned char step [3];
//
  throw (stringset_get_selected (0, mainwindow_id, mainwindow_mousetype, string, 256, NULL));
  if (mousetype_set (string) == 2) return FALSE;
//
  throw (slider_get_value (0, mainwindow_id, mainwindow_mousespeed, &value));
  cmos_write (MouseMultiplier, value);
  step[0] = OWPointerAndMouse_SetMouseFactors;
  step[1] = (unsigned char) value;
  step[2] = (unsigned char) value;
  _swi (OS_Word, _INR(0,1), OsWord_DefinePointerAndMouse, step);
//
  throw (numberrange_get_value (0, mainwindow_id, mainwindow_dragdelay, &value));
  sprintf (string, "Configure WimpDragDelay %i", value);
  _swi (OS_CLI, _IN(0), string);
//
  throw (numberrange_get_value (0, mainwindow_id, mainwindow_dragdist, &value));
  sprintf (string, "Configure WimpDragMove %i", value);
  _swi (OS_CLI, _IN(0), string);
//
  throw (numberrange_get_value (0, mainwindow_id, mainwindow_dclickdelay, &value));
  sprintf (string, "Configure WimpDoubleClickDelay %i", value);
  _swi (OS_CLI, _IN(0), string);
//
  throw (numberrange_get_value (0, mainwindow_id, mainwindow_dclickdist, &value));
  sprintf (string, "Configure WimpDoubleClickMove %i", value);
  _swi (OS_CLI, _IN(0), string);
//
  throw (numberrange_get_value (0, mainwindow_id, mainwindow_autoscr, &value));
  sprintf (string, "Configure WimpAutoScrollDelay %i", value);
  _swi (OS_CLI, _IN(0), string);
//
  return TRUE;
}
@


1.2
log
@Minor MousSetup improvements
* Makefile recreated from fragments
* Window size is now compared with screensize on startup and the V scroll bar turned on/off as needed
* Magic numbers changed for header defines
* Version number now inserted at build time rather than being 10 years out of date

Version 0.14. Tagged as 'MousSetup-0_14'
@
text
@a54 2
				 { 0xDD, 4, 4 },	/* (WimpAutoScrollDelay EOR 5) */
				 
d56 1
a56 1
				 { 0xDE, 1, 1 },	/* WimpAutoScrollDelayUnit */
d58 1
a58 1
				 
a59 2
				 { 0xDF, 4, 4 },	/* (WimpAutoFrontDelay EOR 5) */
				 
d61 1
a61 1
				 { 0x16, 1, 1 },	/* WimpAutoFrontDelayUnit */
a62 9
				 { 0x16, 7, 1 },	/* WimpAutoFrontIconBar */
				 
				 { 0xC5, 7, 1 },	/* WimpFlagsSubMenus */
				 
				 { 0x17, 0, 4 },	/* (WimpAutoMenuDelay EOR 10) */
				 { 0x17, 4, 1 },	/* WimpAutoMenuDelayUnit */
				 
				 { 0x1B, 0, 4 },	/* (WimpMenuDragDelay EOR 10) */
				 { 0x1B, 4, 1 } };	/* WimpMenuDragDelayUnit */
d64 2
a103 15
  throw (optionbutton_set_state (0, mainwindow_id, mainwindow_openmenu, value = get (WimpFlagsSubMenus, &messages)));
  misc_shadecomponents (!value, mainwindow_id, mainwindow_openmenu_shademin, mainwindow_openmenu_shademax);
  value = get (WimpAutoMenuDelay, &messages) ^ 10;
  if (1 == get (WimpAutoMenuDelayUnit, &messages)) value *= 10;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_openmenudelay, value));
  value = get (WimpMenuDragDelay, &messages) ^ 10;
  if (1 == get (WimpMenuDragDelayUnit, &messages)) value *= 10;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_closemenudelay, value));
//
  throw (optionbutton_set_state (0, mainwindow_id, mainwindow_autofront, value = !get (WimpAutoFrontIconBar, &messages)));
  misc_shadecomponents (!value, mainwindow_id, mainwindow_autofront_shademin, mainwindow_autofront_shademax);
  value = get (WimpAutoFrontDelay, &messages) ^ 5;
  if (1 == get (WimpAutoFrontDelayUnit, &messages)) value *= 10;
  throw (numberrange_set_value (0, mainwindow_id, mainwindow_autofrontdelay, value));
//
d134 1
d138 1
d142 1
d146 1
a150 26
  throw (optionbutton_get_state (0, mainwindow_id, mainwindow_openmenu, &value));
  if (value) {
    cmos_write (WimpFlagsSubMenus, TRUE);
    misc_applywimpflags ();
    throw (numberrange_get_value (0, mainwindow_id, mainwindow_openmenudelay, &value));
    sprintf (string, "Configure WimpAutoMenuDelay %i", value);
    _swi (OS_CLI, _IN(0), string);
    throw (numberrange_get_value (0, mainwindow_id, mainwindow_closemenudelay, &value));
    sprintf (string, "Configure WimpMenuDragDelay %i", value);
    _swi (OS_CLI, _IN(0), string);
  }
  else {
    cmos_write (WimpFlagsSubMenus, FALSE);
    misc_applywimpflags ();
  }
//
  throw (optionbutton_get_state (0, mainwindow_id, mainwindow_autofront, &value));
  if (value) {
    _swi (OS_CLI, _IN(0), "Configure WimpAutoFrontIconBar On");
    throw (numberrange_get_value (0, mainwindow_id, mainwindow_autofrontdelay, &value));
    sprintf (string, "Configure WimpAutoFrontDelay %i", value);
    _swi (OS_CLI, _IN(0), string);
  }
  else {
    _swi (OS_CLI, _IN(0), "Configure WimpAutoFrontIconBar Off");
  }
@


1.1
log
@Initial revision
@
text
@d36 1
d152 1
a152 1
  step[0] = 0x2u;
d155 1
a155 1
  _swi (OS_Word, _INR(0,1), 21, step);
@


1.1.1.1
log
@Initial commit of Configure plug-in '!MousSetup' to CVS.
@
text
@@
