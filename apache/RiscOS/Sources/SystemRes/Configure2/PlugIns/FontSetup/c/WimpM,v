head	1.1;
branch	1.1.1;
access;
symbols
	FontSetup-0_12:1.1.1.2
	FontSetup-0_11:1.1.1.2
	FontSetup-0_10:1.1.1.2
	FontSetup-0_09:1.1.1.2
	FontSetup-0_08:1.1.1.2
	FontSetup-0_07:1.1.1.2
	FontSetup-0_06:1.1.1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.2
	Ursula_RiscPC:1.1.1.2.0.2
	bavison_FontSetup-0_05:1.1.1.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.2
	UrsulaBuild_FinalSoftload:1.1.1.2
	rthornb_UrsulaBuild-29Jul1998:1.1.1.2
	rthornb_UrsulaBuild-22Jul1998:1.1.1.2
	bavison_FontSetup-0_04:1.1.1.2
	rthornb_UrsulaBuild-15Jul1998:1.1.1.2
	bavison_FontSetup-0_03:1.1.1.2
	bavison_FontSetup-0_02:1.1.1.2
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.05.29.14.13.53;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.29.14.13.53;	author bavison;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.06.09.10.16.26;	author bavison;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	WimpM.c ***********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Fonts configuration plug-in
This file:	Wimp message code

History:
Date		Who	Change
----------------------------------------------------------------------------
20/05/1998	BJGA	Created
27/05/1998	BJGA	Added Message_TaskCloseDown handler
28/05/1998	BJGA	Added handlers for Message_PreQuit, Message_PlugInQuit,
			Message_PlugInQuitContinue and Message_PlugInQuitAbort,
			Also quits plug-in unconditionally on Message_Quit

\**************************************************************************/

/* Toolbox */
#include "event.h"
#include "wimplib.h"
#include "toolbox.h"
/* Common */
#include "misc.h"
/* local headers */
#include "Main.h"
#include "WimpM.h"  /* includes prototypes for this file */

static int wimpm_quit (WimpMessage *message, void *handle);
static int wimpm_prequit (WimpMessage *message, void *handle);
static int wimpm_pluginquit (WimpMessage *message, void *handle);
static int wimpm_pluginquitcontinue (WimpMessage *message, void *handle);
static int wimpm_pluginquitabort (WimpMessage *message, void *handle);
static int wimpm_taskclosedown (WimpMessage *message, void *handle);
static int wimpm_openconfigwindow (WimpMessage *message, void *handle);

int wimpm_messages [7] =      { Wimp_MPreQuit,
    		       	      	Wimp_MPlugInQuit,
    		       	      	Wimp_MPlugInQuitContinue,
    		       	      	Wimp_MPlugInQuitAbort,
    		       	      	Wimp_MTaskCloseDown,
				Wimp_MOpenConfigWindow,
				0 };

void wimpm_register (void)
{
  throw (event_register_message_handler (Wimp_MQuit, wimpm_quit, NULL));
  throw (event_register_message_handler (Wimp_MPreQuit, wimpm_prequit, NULL));
  throw (event_register_message_handler (Wimp_MPlugInQuit, wimpm_pluginquit, NULL));
  throw (event_register_message_handler (Wimp_MPlugInQuitContinue, wimpm_pluginquitcontinue, NULL));
  throw (event_register_message_handler (Wimp_MPlugInQuitAbort, wimpm_pluginquitabort, NULL));
  throw (event_register_message_handler (Wimp_MTaskCloseDown, wimpm_taskclosedown, NULL));
  throw (event_register_message_handler (Wimp_MOpenConfigWindow, wimpm_openconfigwindow, NULL));
}

/******	wimpm_quit() ******************************************************\

Purpose:	Handles Message_Quit

\**************************************************************************/

static int wimpm_quit (WimpMessage *message, void *handle)
{
  /* Quit both unconditionally */
  if (fontmerge_alive)
  {
    WimpMessage buffer;
    buffer.hdr.size = 20;
    buffer.hdr.your_ref = 0;
    buffer.hdr.action_code = Wimp_MQuit;
    throw (wimp_send_message (17, &buffer, fontmerge_taskhandle, 0, NULL));
  }
  quit = TRUE;
  return 1;
}

/******	wimpm_prequit() ***************************************************\

Purpose:	Handles Message_PreQuit

\**************************************************************************/

static int wimpm_prequit (WimpMessage *message, void *handle)
{
  if ((message -> hdr.size > 20) && (message -> data.words[0] & 1))
  {
    /* We're being quit as a single task from the Task Manager */
    /* (We mustn't intercept general desktop closedown here - then it's each plug-in for itself) */
    
    message -> hdr.your_ref = message -> hdr.my_ref;
    throw (wimp_send_message (19, message, message -> hdr.sender, 0, NULL));
      /* claim message, we'll be quitting ourselves if we want to without
       * prompting by a later Message_Quit  */
    
    main_startquit (0); /* Plug-in should complain if there's any outstanding work */
  }
  return 1;
}

/******	wimpm_pluginquit() ************************************************\

Purpose:	Handles Message_PlugInQuit (sent by Configure)

\**************************************************************************/

static int wimpm_pluginquit (WimpMessage *message, void *handle)
{
  if (complain && message->data.words [0] == PlugInSystem_Configure)
  {
    quit_parent = TRUE;
    parent_taskhandle = message->hdr.sender; /* Remember who to tell to resume quitting */
    
    /* Now put the top-level quit on hold while we check our own plug-in's happiness to quit */
    message->hdr.your_ref = message->hdr.my_ref;
    throw (wimp_send_message (19, message, message->hdr.sender, 0, NULL));
    
    main_startquit (0); /* Plug-in should complain if there's any outstanding work */
  }
  return 1;
}

/******	wimpm_pluginquitcontinue() ****************************************\

Purpose:	Handles Message_PlugInQuitContinue (sent by FontMerge)

\**************************************************************************/

static int wimpm_pluginquitcontinue (WimpMessage *message, void *handle)
{
  if (message->data.words [0] == PlugInSystem_Fonts)
  {
    main_startquit (-1); /* Keep the flags word from the last time */
  }
  return 1;
}

/******	wimpm_pluginquitabort() *******************************************\

Purpose:	Handles Message_PlugInQuitAbort (sent by another top-level plug-in)

\**************************************************************************/

static int wimpm_pluginquitabort (WimpMessage *message, void *handle)
{
  if (message->data.words [0] == PlugInSystem_Configure)
  {
    /* Top-level quit has been aborted */
    complain = TRUE;
  }
  return 1;
}

/******	wimpm_taskclosedown() *********************************************\

Purpose:	Handles Message_TaskCloseDown

\**************************************************************************/

static int wimpm_taskclosedown (WimpMessage *message, void *handle)
{
  if (message->hdr.sender == fontmerge_taskhandle)
  {
    fontmerge_alive = FALSE;
  }
  return 1;
}

/******	wimpm_openconfigwindow() ******************************************\

Purpose:	Handles Message_OpenConfigWindow

\**************************************************************************/

static int wimpm_openconfigwindow (WimpMessage *message, void *handle)
{
  misc_openwindow (mainwindow_id, FALSE);
  return 1;
}
@


1.1.1.1
log
@Initial import of Configure plug-in '!FontSetup' to CVS.
@
text
@@


1.1.1.2
log
@Simplified plug-in quit code: more of the work is now performed by the
second-level plug-in (ie FontMerge).
@
text
@a28 1
08/06/1998	BJGA	Removed Message_PlugInQuit and Message_PlugInQuitAbort handlers
d44 1
d46 1
d50 1
a50 1
int wimpm_messages [6] =      { Wimp_MPreQuit,
d53 1
d62 1
d64 1
d113 22
d146 16
@
