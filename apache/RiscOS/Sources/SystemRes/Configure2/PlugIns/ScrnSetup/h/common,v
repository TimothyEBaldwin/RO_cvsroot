head	1.4;
access;
symbols
	ScrnSetup-0_43:1.4
	ScrnSetup-0_42:1.4
	ScrnSetup-0_41:1.4
	ScrnSetup-0_40:1.4
	ScrnSetup-0_39:1.3
	ScrnSetup-0_38:1.3
	ScrnSetup-0_37:1.3
	ScrnSetup-0_36:1.3
	ScrnSetup-0_35:1.3
	ScrnSetup-0_34:1.3
	ScrnSetup-0_33:1.3
	ScrnSetup-0_32:1.3
	ScrnSetup-0_31:1.3
	ScrnSetup-0_30:1.3
	ScrnSetup-0_29:1.3
	ScrnSetup-0_28:1.3
	ScrnSetup-0_27:1.3
	ScrnSetup-0_26:1.3
	ScrnSetup-0_25:1.3
	ScrnSetup-0_24:1.3
	ScrnSetup-0_23:1.3
	ScrnSetup-0_22:1.3
	ScrnSetup-0_21:1.3
	ScrnSetup-0_20:1.3
	ScrnSetup-0_19:1.3
	ScrnSetup-0_18:1.3
	ScrnSetup-0_17:1.2
	ScrnSetup-0_16:1.2
	ScrnSetup-0_15:1.2
	ScrnSetup-0_14:1.2
	ScrnSetup-0_13:1.1.1.1
	ScrnSetup-0_12:1.1.1.1
	ScrnSetup-0_11:1.1.1.1
	ScrnSetup-0_10:1.1.1.1
	ScrnSetup-0_09:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-29Jul1998:1.1.1.1
	rthornb_UrsulaBuild-22Jul1998:1.1.1.1
	rleggett_ScrnSetup-0_08:1.1.1.1
	rthornb_UrsulaBuild-15Jul1998:1.1.1.1
	rthornb_UrsulaBuild-07Jul1998:1.1.1.1
	rthornb_UrsulaBuild-17Jun1998:1.1.1.1
	rleggett_ScrnSetup-0_07:1.1.1.1
	rthornb_UrsulaBuild-03Jun1998:1.1.1.1
	rthornb_UrsulaBuild-27May1998:1.1.1.1
	rthornb_UrsulaBuild-21May1998:1.1.1.1
	rthornb_UrsulaBuild_01May1998:1.1.1.1
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.03.05.15.35.52;	author rool;	state Exp;
branches;
next	1.3;
commitid	pXgDBRq60MdmlnIz;

1.3
date	2012.02.11.18.26.22;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	Tn70qsPfKA3JILSv;

1.2
date	2009.10.25.15.53.07;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	98.04.14.10.41.00;	author rleggett;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.14.10.41.00;	author rleggett;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add support for EDID monitors in the system
Detail:
  Upgrade the MDF directory enumeration to minimally parse EDID data blobs. Add these to the list of known monitors. This allows a disc based MDF to override faulty data in the monitor, or on systems such as IOMD that don't support EDID, for them to benefit from a library of blobs rather than needing a parallel set of MDFs creating.
  Add the path of EDID blobs exported by ScrModes to those scanned for monitor definitions. EDID data is always placed in the top level manufacturer menu below 'Auto'.
  Add interactive help to clarify what 'Auto' means and how it differs from the EDID data.

  common.c: Relocate [un]grey_gadget() from screen.c.
  main.c: Simplify unnecessary memset(). Create a flag based on ScreenModes_Features whether the host OS supports EDID or not.
  monitor.c: Extra scanning. Conflict resolution if duplicate monitor definitions exist from differing sources. Simple EDID parser to get the monitor name (else default string) and DPMS flags.
Admin:
  Submission for the EDID bounty.
  Tested with ScrModes-0_61, and also on earlier versions, on RISC OS 5.23.
  Briefly tested on RISC OS 3.70 with !Boot.Resources.Configure.Monitors containing EDID data (should be ignored).

Version 0.40. Tagged as 'ScrnSetup-0_40'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*---------------------------------------------------------------------------*/
/* File:    common.h                                                         */
/*---------------------------------------------------------------------------*/

void error_trap(_kernel_oserror *err, int err_type);
void messages_register(MessagesFD *messagefd_point, char *messagebuff_point);
char *messages_lookup(const char *token_string);
char *messages_lookup_with_parameter(char *token_string, char *parameter);
_kernel_oserror *common_read_screensize(int *x, int *y);
_kernel_oserror *common_error(char *s);
void grey_gadget(int objectid, int gadgetid);
void ungrey_gadget(int objectid, int gadgetid);
int strncmpa(char *str1, char *str2, int size);
int read_cmos_value(int location);
void write_cmos_value(int location, int value);
@


1.3
log
@Get error box title from "_TaskName" token in messages file.
Use Mask_NoNullEvents/Gadget_Faded flag from toolbox headers.
Use OSFile 8 to create directories not OS_CLI.
Code in 'common.[c|h]' made more common.

Version 0.18. Tagged as 'ScrnSetup-0_18'
@
text
@d25 2
@


1.2
log
@Fix broken ScrnSetup Configure plugin
Detail:
  read_current_mode_settings() in monitor.c now correctly parses the default Choices:Boot.PreDesk.Configure.Monitor file (The addition of the Castle license text was causing the original code to fail)
  update_monitor_displayfields() in monitor.c now behaves correctly if the current colour depth is unknown
  trap_error() in common.c/.h has been updated to allow the reporting of the file & line that caused the error, to allow errors to be tracked down more easily in the future.
Admin:
  Tested on rev C2 beagleboard.


Version 0.14. Tagged as 'ScrnSetup-0_14'
@
text
@d16 1
a16 1
/* File:    h.common                                                         */
a18 17
#define VDUToScreen _swi(OS_WriteC, _IN(0), 4); _swi(OS_WriteC, _IN(0), 26);
#define NewLine 0x0A
#define Wimp_MOpenConfigWindow 0x50d83

// Enabling DEBUG_ERRORS will cause error_trap to report the file & line that caused the error
//#define DEBUG_ERRORS

typedef struct
{
    char type;
    int value;
} evexp;

#ifdef DEBUG_ERRORS
void error_trap2(_kernel_oserror *err, int err_type, const char *file, int line);
#define error_trap(err,err_type) error_trap2(err,err_type,__FILE__,__LINE__)
#else
a19 2
#endif
void warning_box(char* string);
d21 5
a25 6
char *messages_lookup(char *token_string);
_kernel_oserror *common_read_screensize(int* x, int* y);
_kernel_oserror* common_error(char *s);
void grey_gadget(int objectid, int gadgetid);
void ungrey_gadget(int objectid, int gadgetid);
int strncmpa(char* str1, char* str2, int size);
@


1.1
log
@Initial revision
@
text
@d23 2
d32 4
a35 1

d37 1
@


1.1.1.1
log
@Initial import of ScrnSetup plugin for Configure.
@
text
@@
