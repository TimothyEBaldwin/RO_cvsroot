head	1.2;
access;
symbols
	KbdSetup-0_18:1.2
	KbdSetup-0_17:1.2
	KbdSetup-0_16:1.2
	KbdSetup-0_15:1.2
	KbdSetup-0_14:1.2
	KbdSetup-0_13:1.2
	KbdSetup-0_12:1.1.1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	bavison_KbdSetup-0_11:1.1.1.2
	bavison_KbdSetup-0_10:1.1.1.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	bavison_KbdSetup-0_09:1.1.1.1
	rthornb_UrsulaBuild-29Jul1998:1.1.1.1
	rthornb_UrsulaBuild-22Jul1998:1.1.1.1
	rthornb_UrsulaBuild-15Jul1998:1.1.1.1
	rthornb_UrsulaBuild-07Jul1998:1.1.1.1
	bavison_KbdSetup-0_08:1.1.1.1
	bavison_KbdSetup-0_07:1.1.1.1
	rthornb_UrsulaBuild-17Jun1998:1.1.1.1
	bavison_KbdSetup-0_06:1.1.1.1
	rthornb_UrsulaBuild-03Jun1998:1.1.1.1
	rthornb_UrsulaBuild-27May1998:1.1.1.1
	rthornb_UrsulaBuild-21May1998:1.1.1.1
	rthornb_UrsulaBuild_01May1998:1.1.1.1
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2002.12.14.13.42.31;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	98.04.07.18.24.48;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.07.18.24.48;	author bavison;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.08.28.10.49.56;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resource file change,now refers to "Macro" keys not "Acorn" keys.
Writeables linked into a circle
Version number incremented in Messages file

Version 0.13. Tagged as 'KbdSetup-0_13'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	ToolboxE.c ********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Keyboard configuration plug-in
This file:	Toolbox event code

History:
Date		Who	Change
----------------------------------------------------------------------------
09/12/1997	BJGA	Split from Main
			Added these headers
10/12/1997	BJGA	Made handler routines static
27/08/1998	BJGA	Added RadioButton_StateChanged handler
28/08/1998	BJGA	Now reads writables prior to saving, and calls
			  settings_read() on Adjust-Set clicks

\**************************************************************************/

/* Toolbox */
#include "event.h"
#include "toolbox.h"
#include "gadgets.h"
/* Common */
#include "cmos.h"
#include "misc.h"
/* local headers */
#include "Main.h"
#include "Keyboards.h"
#include "Settings.h"
#include "ToolboxE.h"  /* includes prototypes for this file */

static int toolboxe_actionbuttonselected (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);
static int toolboxe_objectautocreated (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);
static int toolboxe_optionbuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);
static int toolboxe_radiobuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);
static int toolboxe_stringsetabouttobeshown (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);

int toolboxe_events [6] =     { ActionButton_Selected,
				Toolbox_ObjectAutoCreated,
				OptionButton_StateChanged,
				RadioButton_StateChanged,
				StringSet_AboutToBeShown,
				0 };

void toolboxe_register (void)
{
  throw (event_register_toolbox_handler (-1, ActionButton_Selected, toolboxe_actionbuttonselected, NULL));
  throw (event_register_toolbox_handler (-1, Toolbox_ObjectAutoCreated, toolboxe_objectautocreated, NULL));
  throw (event_register_toolbox_handler (-1, OptionButton_StateChanged, toolboxe_optionbuttonstatechanged, NULL));
  throw (event_register_toolbox_handler (-1, RadioButton_StateChanged, toolboxe_radiobuttonstatechanged, NULL));
  throw (event_register_toolbox_handler (-1, StringSet_AboutToBeShown, toolboxe_stringsetabouttobeshown, NULL));
}

/******	toolboxe_actionbuttonselected() ***********************************\

Purpose:	Handles ActionButton_Selected event

\**************************************************************************/

static int toolboxe_actionbuttonselected (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  switch (id_block->self_component) {
    case mainwindow_default:
      settings_read (cmos_default);
      break;
    case mainwindow_cancel:
      if (!(event->hdr.flags & 1)) quit = TRUE;
      else settings_read (cmos_read);
      break;
    case mainwindow_set:
      settings_UpdateArrayFromWritables ();
      if (settings_write ())
      {
        if (!(event->hdr.flags & 1))
        {
          quit = TRUE;
        }
        else
        {
          settings_read (cmos_read);
        }
      }
      break;
  }
  return 1;
}

/******	toolboxe_objectautocreated() **************************************\

Purpose:	Handles Toolbox_ObjectAutoCreated event

\**************************************************************************/

static int toolboxe_objectautocreated (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  mainwindow_id = id_block->self_id;
  misc_openwindow (mainwindow_id, TRUE);
  settings_read (cmos_read);
  return 1;
}

/******	toolboxe_optionbuttonstatechanged() *******************************\

Purpose:	Handles OptionButton_StateChanged event

\**************************************************************************/

static int toolboxe_optionbuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  misc_shadecomponents (!((OptionButtonStateChangedEvent *) event)->new_state, mainwindow_id, mainwindow_repeat_shademin, mainwindow_repeat_shademax);
  return 1;
}

/******	toolboxe_radiobuttonstatechanged() ********************************\

Purpose:	Handles RadioButton_StateChanged event

\**************************************************************************/

static int toolboxe_radiobuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  settings_UpdateArrayFromWritables ();
  switch (id_block->self_component)
  {
    case mainwindow_redkey:
    {
      ColKeyState = 0;
      break;
    }
    case mainwindow_greenkey:
    {
      ColKeyState = 1;
      break;
    }
    case mainwindow_bluekey:
    {
      ColKeyState = 2;
      break;
    }
  }
  settings_UpdateWritablesFromArray ();
  return 1;
}

/******	toolboxe_stringsetabouttobeshown() ********************************\

Purpose:	Handles StringSet_AboutToBeShown event

\**************************************************************************/

static int toolboxe_stringsetabouttobeshown (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  static int crc = 0;  /* crc stuff is to alleviate a memory leak in the toolbox when new available list is set */
  int newcrc;
  char buffer [400] = "";
  if ((newcrc = keyboards_getavailable (buffer, sizeof(buffer))) != crc) {
    crc = newcrc;
    throw (stringset_set_available (0, mainwindow_id, mainwindow_keyboardhandler, buffer));
  }
  return 1;
}
@


1.1
log
@Initial revision
@
text
@d27 3
d49 1
d52 1
a52 1
int toolboxe_events [5] =     { ActionButton_Selected,
d55 1
d64 1
d85 12
a96 1
      if (settings_write ()) if (!(event->hdr.flags & 1)) quit = TRUE;
d125 31
@


1.1.1.1
log
@Initial commit of Configure plug-in '!KbdSetup' to CVS.
@
text
@@


1.1.1.2
log
@Added Win95 keys options - drop-sensitive writable icons for each key action.

Options are now read from / written to Choices.Boot.PreDesktop instead of
Choices.Boot.PreDesk.KbdSetup.

Bugfix: now uses Message_FontChanged to refresh the screen instead of
Wimp_ForceRedraw. This additionally causes the desktop font to be recached
appropriate to the new alphabet.

Bugfix: PC-delete option is now applied even if the choices file is locked.
@
text
@a26 3
27/08/1998	BJGA	Added RadioButton_StateChanged handler
28/08/1998	BJGA	Now reads writables prior to saving, and calls
			  settings_read() on Adjust-Set clicks
a45 1
static int toolboxe_radiobuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);
d48 1
a48 1
int toolboxe_events [6] =     { ActionButton_Selected,
a50 1
				RadioButton_StateChanged,
a58 1
  throw (event_register_toolbox_handler (-1, RadioButton_StateChanged, toolboxe_radiobuttonstatechanged, NULL));
d79 1
a79 12
      settings_UpdateArrayFromWritables ();
      if (settings_write ())
      {
        if (!(event->hdr.flags & 1))
        {
          quit = TRUE;
        }
        else
        {
          settings_read (cmos_read);
        }
      }
a107 23
  return 1;
}

/******	toolboxe_radiobuttonstatechanged() ********************************\

Purpose:	Handles RadioButton_StateChanged event

\**************************************************************************/

static int toolboxe_radiobuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  if (id_block->self_component == mainwindow_acornkey)
  {
    settings_UpdateArrayFromWritables ();
    Win95State = 0;
    settings_UpdateWritablesFromArray ();
  }
  else /* "menu key" radio */
  {
    settings_UpdateArrayFromWritables ();
    Win95State = 1;
    settings_UpdateWritablesFromArray ();
  }
@
