head	1.1;
branch	1.1.1;
access;
symbols
	LockSetup-0_09:1.1.1.1
	LockSetup-0_08:1.1.1.1
	LockSetup-0_07:1.1.1.1
	LockSetup-0_06:1.1.1.1
	LockSetup-0_05:1.1.1.1
	LockSetup-0_04:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-29Jul1998:1.1.1.1
	rthornb_UrsulaBuild-22Jul1998:1.1.1.1
	rthornb_UrsulaBuild-15Jul1998:1.1.1.1
	rthornb_UrsulaBuild-07Jul1998:1.1.1.1
	rthornb_UrsulaBuild-17Jun1998:1.1.1.1
	bavison_LockSetup-0_03:1.1.1.1
	rthornb_UrsulaBuild-03Jun1998:1.1.1.1
	rthornb_UrsulaBuild-27May1998:1.1.1.1
	rthornb_UrsulaBuild-21May1998:1.1.1.1
	rthornb_UrsulaBuild_01May1998:1.1.1.1
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.04.07.18.37.23;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.07.18.37.23;	author bavison;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	ToolboxE.c ********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	FSLock configuration plug-in
This file:	Toolbox event code

History:
Date		Who	Change
----------------------------------------------------------------------------
12/12/1997	BJGA	Created

\**************************************************************************/

/* Toolbox */
#include "event.h"
#include "toolbox.h"
#include "gadgets.h"
/* Common */
#include "cmos.h"
#include "misc.h"
/* local headers */
#include "Main.h"
#include "Settings.h"
#include "ToolboxE.h"  /* includes prototypes for this file */

static int toolboxe_actionbuttonselected (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);
static int toolboxe_objectautocreated (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);
static int toolboxe_radiobuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle);

int toolboxe_events [4] =     { ActionButton_Selected,
				Toolbox_ObjectAutoCreated,
				RadioButton_StateChanged,
				0 };

void toolboxe_register (void)
{
  throw (event_register_toolbox_handler (-1, ActionButton_Selected, toolboxe_actionbuttonselected, NULL));
  throw (event_register_toolbox_handler (-1, Toolbox_ObjectAutoCreated, toolboxe_objectautocreated, NULL));
  throw (event_register_toolbox_handler (-1, RadioButton_StateChanged, toolboxe_radiobuttonstatechanged, NULL));
}

/******	toolboxe_actionbuttonselected() ***********************************\

Purpose:	Handles ActionButton_Selected event

\**************************************************************************/

static int toolboxe_actionbuttonselected (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  switch (id_block->self_component) {
    case mainwindow_cancel:
      if (!(event->hdr.flags & 1)) quit = TRUE;
      else settings_read ();
      break;
    case mainwindow_set:
      if (settings_validate_passwords ()) settings_broadcast (event->hdr.flags & 1);
      /* Actually set the lock when return message is received (or when original bounces back) */
      break;
  }
  return 1;
}

/******	toolboxe_objectautocreated() **************************************\

Purpose:	Handles Toolbox_ObjectAutoCreated event

\**************************************************************************/

static int toolboxe_objectautocreated (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  mainwindow_id = id_block->self_id;
  misc_openwindow (mainwindow_id, TRUE);
  settings_read ();
  return 1;
}

/******	toolboxe_radiobuttonstatechanged() ********************************\

Purpose:	Handles RadioButton_StateChanged event

\**************************************************************************/

static int toolboxe_radiobuttonstatechanged (int event_code, ToolboxEvent *event, IdBlock *id_block, void *handle)
{
  settings_reset_writables ();
  return 1;
}
@


1.1.1.1
log
@Initial commit of Configure plug-in '!LockSetup' to CVS.
@
text
@@
