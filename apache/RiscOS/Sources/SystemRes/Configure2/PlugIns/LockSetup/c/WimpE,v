head	1.1;
branch	1.1.1;
access;
symbols
	LockSetup-0_09:1.1.1.1
	LockSetup-0_08:1.1.1.1
	LockSetup-0_07:1.1.1.1
	LockSetup-0_06:1.1.1.1
	LockSetup-0_05:1.1.1.1
	LockSetup-0_04:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-29Jul1998:1.1.1.1
	rthornb_UrsulaBuild-22Jul1998:1.1.1.1
	rthornb_UrsulaBuild-15Jul1998:1.1.1.1
	rthornb_UrsulaBuild-07Jul1998:1.1.1.1
	rthornb_UrsulaBuild-17Jun1998:1.1.1.1
	bavison_LockSetup-0_03:1.1.1.1
	rthornb_UrsulaBuild-03Jun1998:1.1.1.1
	rthornb_UrsulaBuild-27May1998:1.1.1.1
	rthornb_UrsulaBuild-21May1998:1.1.1.1
	rthornb_UrsulaBuild_01May1998:1.1.1.1
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.04.07.18.37.23;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.07.18.37.23;	author bavison;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	WimpE.c ***********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	FSLock configuration plug-in
This file:	Wimp event code

History:
Date		Who	Change
----------------------------------------------------------------------------
12/12/1997	BJGA	Created
15/12/1997	BJGA	Added support for ack'ed Message_FSLockStateChangeRequest

\**************************************************************************/

/* Toolbox */
#include "event.h"
#include "wimplib.h"
#include "toolbox.h"
/* Common */
#include "misc.h"
/* local headers */
#include "Settings.h"
#include "WimpE.h"  /* includes prototypes for this file */

static int wimpe_keypressed (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle);
static int wimpe_usermessageacknowledge (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle);

int wimpe_mask =	Wimp_Poll_NullMask +
			Wimp_Poll_PointerLeavingWindowMask +
			Wimp_Poll_PointerEnteringWindowMask +
			Wimp_Poll_LoseCaretMask +
			Wimp_Poll_GainCaretMask +
			Wimp_Poll_PollWordNonZeroMask ;

void wimpe_register (void)
{
  throw (event_register_wimp_handler (-1, Wimp_EKeyPressed, wimpe_keypressed, NULL));
  throw (event_register_wimp_handler (-1, Wimp_EUserMessageAcknowledge, wimpe_usermessageacknowledge, NULL));
}

/******	wimpe_keypressed() ************************************************\

Purpose:	Handles Key_Pressed event

\**************************************************************************/

static int wimpe_keypressed (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle)
{
  throw (wimp_process_key (event->key_pressed.key_code));
  return 1;
}

/******	wimpe_usermessageacknowledge() ************************************\

Purpose:	Handles User_Message_Acknoledge

\**************************************************************************/

static int wimpe_usermessageacknowledge (int event_code, WimpPollBlock *event, IdBlock *id_block, void *handle)
{
  if (((WimpUserMessageAcknowledgeEvent *) event) -> hdr.action_code
    != Wimp_MFSLockStateChangeRequest) return 0;
  
  /* This probably means we are run independently of Configure, so we can just go ahead
   * and perform the operation without checking for objections. */
  settings_write ();
  return 1;
}
@


1.1.1.1
log
@Initial commit of Configure plug-in '!LockSetup' to CVS.
@
text
@@
