head	1.7;
access;
symbols
	Source-0_59:1.7
	Source-0_58:1.7
	Source-0_57:1.6
	Source-0_56:1.5
	Source-0_55:1.5
	Source-0_54:1.4
	Source-0_53:1.4
	Source-0_52:1.4
	Source-0_51:1.4
	Source-0_50:1.4
	Source-0_49:1.4
	InetSetup-0_49:1.4
	InetSetup-0_48:1.4
	InetSetup-0_47:1.4
	InetSetup-0_46:1.4
	InetSetup-0_45:1.4
	InetSetup-0_44:1.4
	InetSetup-0_43:1.4
	InetSetup-0_42:1.4
	InetSetup-0_41:1.4
	InetSetup-0_40:1.4
	InetSetup-0_39:1.4
	InetSetup-0_38:1.4
	InetSetup-0_37:1.4
	InetSetup-0_36:1.4
	InetSetup-0_35:1.4
	InetSetup-0_34:1.4
	InetSetup-0_33:1.4
	InetSetup-0_32:1.3
	InetSetup-0_31:1.3
	InetSetup-0_30:1.3
	InetSetup-0_29:1.3
	StrongARM_merge:1.1.4.1
	sbrodie_InetSetup_dev_merge:1.2.2.1
	Daytona_merge:1.2
	Ursula_merge:1.2.2.1
	InetSetup-0_28:1.3
	mstphens_UrsulaRiscPCBuild_20Nov98:1.2.2.1
	Ursula_RiscPC:1.2.2.1.0.4
	InetSetup-0_22-1_1_2_4:1.2.2.1
	InetSetup-0_22-1_1_2_3_2_1:1.2.2.1
	sbrodie_InetSetup_dev-1_1_2_3:1.2.2.1.0.2
	sbrodie_InetSetup_dev-1_1_2_3_bp:1.2.2.1
	rthornb_UrsulaBuild-19Aug1998:1.2.2.1
	UrsulaBuild_FinalSoftload:1.2.2.1
	rthornb_UrsulaBuild-12Aug1998:1.2.2.1
	aglover_UrsulaBuild-05Aug1998:1.2.2.1
	rthornb_UrsulaBuild-29Jul1998:1.2.2.1
	rthornb_UrsulaBuild-22Jul1998:1.2.2.1
	InetSetup-0_22-1_1_2_3:1.2.2.1
	rthornb_UrsulaBuild-15Jul1998:1.2.2.1
	rthornb_UrsulaBuild-07Jul1998:1.2.2.1
	rthornb_UrsulaBuild-17Jun1998:1.2.2.1
	rthornb_UrsulaBuild-03Jun1998:1.2.2.1
	rthornb_UrsulaBuild-27May1998:1.2.2.1
	rthornb_UrsulaBuild-21May1998:1.2.2.1
	bavison_InetSetup-0_25:1.2.2.1
	rthornb_UrsulaBuild_01May1998:1.2
	celkins_InetSetup_0_24:1.2
	InetSetup-0_22-1_1_2_2:1.2
	Daytona:1.2.0.4
	Daytona_bp:1.2
	Ursula:1.2.0.2
	Ursula_bp:1.2
	StrongARM:1.1.0.4
	RO_3_71:1.1.4.1;
locks; strict;
comment	@# @;


1.7
date	2017.01.07.17.24.53;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	AdZgvrr1LYvkM3Bz;

1.6
date	2015.12.11.20.56.44;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	PxajFBzwRK0dAzMy;

1.5
date	2015.12.11.20.45.09;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	kAWB24PG0dbewzMy;

1.4
date	2002.12.19.20.31.30;	author srevill;	state Exp;
branches;
next	1.3;

1.3
date	99.08.10.16.05.05;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	97.05.06.17.27.39;	author kbracey;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	97.04.30.18.43.51;	author kbracey;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.2.2.1
date	98.05.18.14.57.01;	author bavison;	state Exp;
branches;
next	;

1.1.2.1
date	97.04.30.18.43.52;	author kbracey;	state Exp;
branches;
next	;

1.1.4.1
date	97.05.06.17.11.26;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Only ensure AUNMsgs when they're needed
When TCP/IP networking is disabled, but AUN or Access are enabled, the Internet module is loaded for its IP handling. In doing so, only load AUNMsgs if the Internet module to hand actually requires it.
Save.c:
  Check if the Internet module is new enough to contain its own messages, and don't load AUNMsgs if so.
Load.c/Versions.h/Messages:
  Populate v_InternetMsgs.
Main.h/Main.c:
  Turn the resolver types into an enum so the max value can be used instead of magic number 4.
SmallDrag.c:
  Don't look for Wimp_PlotIcon define, it's been in the headers for years.
UK/!Run:
  Simplify the check, !InetSetup doesn't need AUNMsgs itself.
Save.c/Routes/SetUpNet:
  Remove the hardwired version string of !Internet, since the files end up in Choices:, that way it can't be out of date ever again.

Version 0.58. Tagged as 'Source-0_58'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifdef PlugIn
#include "toolbox.h"
#endif

#ifndef bool
#include <stdbool.h>
#endif

#define CONFIGDIR_READ "Choices:Internet."
#define CONFIGDIR_WRITE "<Choices$Write>.Internet."
#define CONFIGDIR_STEM "<Choices$Write>.Internet"

#define Set(s) (s[0])
extern bool InternetEnabled, AUNEnabled, AccessEnabled;
extern bool HaveResolver, HaveResolve, HaveInetDB, HaveDNSResolver, HaveAResolver, HaveRouteD, HaveEconet;
extern char HostName[64];
extern char LocalDomain[64];
extern char Resolver[3][64];
extern bool UseResolver;
enum
{
  RT_Resolver = 0,
  RT_Resolve,
  RT_InetDB,
  RT_DNSResolver,

  RT_Count /* This many */
};
extern int ResolverType;
extern char Gateway[64];
extern char *msgs_lookup(const char *);
extern void make_error(const char *token);
extern void report_error(os_error *);
#ifdef PlugIn
extern void show_window_from_component(toolbox_o obj, toolbox_o parent_o, toolbox_c parent_c);
#endif
extern void show_hostname_window(const toolbox_block *);
extern bool AmRouter, UseRouteD;
extern char RouteDoptions[24];
#define ROUTED_DEFAULTOPTS "default"
extern unsigned int CMOSIP;
extern int WimpVersion;
@


1.6
log
@Be more helpful when no hostname is set
Rather than explaining in a wordy error box how to get to the hostname dialogue, rephrase the diagnosis message to say that a hostname is required, then simply open the dialogue with the caret in the box to resolve the problem.
Implements ticket #406.
Also change the top level icon label for AUN to say Econet, since that makes more sense alongside Access and Internet (which are protocols). The interactive help introduces the term AUN for some context (as before).

Messages: Rephrased error box text.
Res: Rephrased AUN option.
Diagnose.c: Open the hostname window when no hostname is set.
IfsDbox.c/Main.c/Main.h: Rename OpenWindowFromIcon() to a more Toolboxey show_window_from_component().

Version 0.57. Tagged as 'Source-0_57'
@
text
@d34 9
a42 4
#define RT_Resolver 0
#define RT_Resolve 1
#define RT_InetDB 2
#define RT_DNSResolver 3
@


1.5
log
@Fade the 'Run RouteD' option when the RouteD module is missing
Ticking the option would cause an error during booting, since the module cannot be loaded.
Removed the default option text from the Res file, as it's not language specific, it's a CLI switch looked for by the module. Strictly speaking making it lowercase (like the "default" accepted as a netmask) is an incompatible change as disassembling a 1993 copy of the RouteD module shows it uses strcmp() on "DEFAULT", but since that wont run on anything even as recent as a StrongARM it's probably better to note that any new port should be using a case insensitive switch check.

Version 0.55. Tagged as 'Source-0_55'
@
text
@d44 1
a44 1
  extern void OpenWindowFromIcon (toolbox_o obj, toolbox_o parent_o, toolbox_c parent_c);
d46 1
@


1.4
log
@Changes to the greying out behaviour in the "Obtain IP address" dialogue
as it was a real mess,particularly the behaviour when DHCP was selected.
UK Res file overhaul.
You can now drag the AUNMap to an editor and it will be loaded.
New Sprites files.

Version 0.33. Tagged as 'InetSetup-0_33'
@
text
@d29 1
a39 2
extern bool HaveResolver, HaveResolve, HaveInetDB, HaveDNSResolver, HaveAResolver;
extern bool HaveEconet;
a45 1
//extern char InternetDir[256];
d48 1
@


1.3
log
@  Merge of half a dozen separate branches to the trunk:
    Ursula
    Ursula_RiscPC
    StrongARM
    Daytona(!)
    sbrodie_InetSetup_dev-1_1_2_3
    ART
Detail:
  What a mess.
Admin:
  This is the Ursula plugin version.  It builds.

Version 0.28. Tagged as 'InetSetup-0_28'
@
text
@d16 5
a20 1
  #include "toolbox.h"
@


1.2
log
@Version RO_3_71 taken
@
text
@d15 4
d40 3
@


1.2.2.1
log
@Now compatible with OSLib 4.8.

Ursula Configure plug-in interface added; updated sprites to Ursula design.

Windows now open from the position of the icon clicked on, as in the rest of
Configure.

In the AUN section (if any) of the generated Startup file,
   RMEnsure BBCEconet 0 RMReInit BBCEconet
is replaced with
   RMEnsure UtilityModule 3.80 RMEnsure BBCEconet 0 RMReInit BBCEconet
because there's no BBCEconet module in Ursula.
@
text
@a0 18
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifdef PlugIn
  #include "toolbox.h"
#endif

a35 3
#ifdef PlugIn
  extern void OpenWindowFromIcon (toolbox_o obj, toolbox_o parent_o, toolbox_c parent_c);
#endif
@


1.1
log
@file Main was initially added on branch RO_3_70_to_3_71.
@
text
@d1 40
@


1.1.4.1
log
@Version RO_3_71 taken
@
text
@a0 40
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#define CONFIGDIR_READ "Choices:Internet."
#define CONFIGDIR_WRITE "<Choices$Write>.Internet."
#define CONFIGDIR_STEM "<Choices$Write>.Internet"

#define Set(s) (s[0])
extern bool InternetEnabled, AUNEnabled, AccessEnabled;
extern char HostName[64];
extern char LocalDomain[64];
extern char Resolver[3][64];
extern bool UseResolver;
#define RT_Resolver 0
#define RT_Resolve 1
#define RT_InetDB 2
#define RT_DNSResolver 3
extern int ResolverType;
extern char Gateway[64];
extern bool HaveResolver, HaveResolve, HaveInetDB, HaveDNSResolver, HaveAResolver;
extern bool HaveEconet;
extern char *msgs_lookup(const char *);
extern void make_error(const char *token);
extern void report_error(os_error *);
//extern char InternetDir[256];
extern bool AmRouter, UseRouteD;
extern char RouteDoptions[24];
extern unsigned int CMOSIP;
extern int WimpVersion;
@


1.1.2.1
log
@Merged from 3.71 CD
@
text
@a0 40
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#define CONFIGDIR_READ "Choices:Internet."
#define CONFIGDIR_WRITE "<Choices$Write>.Internet."
#define CONFIGDIR_STEM "<Choices$Write>.Internet"

#define Set(s) (s[0])
extern bool InternetEnabled, AUNEnabled, AccessEnabled;
extern char HostName[64];
extern char LocalDomain[64];
extern char Resolver[3][64];
extern bool UseResolver;
#define RT_Resolver 0
#define RT_Resolve 1
#define RT_InetDB 2
#define RT_DNSResolver 3
extern int ResolverType;
extern char Gateway[64];
extern bool HaveResolver, HaveResolve, HaveInetDB, HaveDNSResolver, HaveAResolver;
extern bool HaveEconet;
extern char *msgs_lookup(const char *);
extern void make_error(const char *token);
extern void report_error(os_error *);
//extern char InternetDir[256];
extern bool AmRouter, UseRouteD;
extern char RouteDoptions[24];
extern unsigned int CMOSIP;
extern int WimpVersion;
@
