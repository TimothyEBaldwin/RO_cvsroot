head	4.1;
branch	4.1.3;
access;
symbols
	StrongARM_merge:4.1.3.2
	ART_merge:4.1.3.1
	RO_3_71:4.1.3.2
	ART_bp:4.1.3.1
	ART:4.1.3.1.0.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	StrongARM:4.1.3;
locks; strict;
comment	@# @;


4.1
date	96.11.06.03.56.40;	author nturton;	state Exp;
branches
	4.1.3.1;
next	;

4.1.3.1
date	96.11.06.03.56.40;	author nturton;	state Exp;
branches
	4.1.3.1.4.1;
next	4.1.3.2;

4.1.3.2
date	97.05.06.17.10.13;	author kbracey;	state dead;
branches;
next	;

4.1.3.1.4.1
date	97.04.30.18.42.28;	author kbracey;	state dead;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Header for eventlib (using OSLib types) */

#ifdef __cplusplus
extern "C" {
#endif

typedef bool event_wimp_handler(wimp_event_no event_code,
      wimp_block *event,toolbox_block *id,
      void *handle);

typedef bool event_toolbox_handler(bits event_code,
      toolbox_action *event, toolbox_block *id,
      void *handle);

typedef bool event_message_handler(wimp_message *message,
      void *handle);

void event_poll(wimp_event_no *event_code, wimp_block *poll_block,
      void *poll_word);
void event_poll_idle(wimp_event_no *event_code, wimp_block *poll_block,
      os_t earliest, void *poll_word);

void event_set_mask(wimp_poll_flags mask);
void event_get_mask(wimp_poll_flags *mask);

void event_register_wimp_handler(toolbox_o object_id,
    wimp_event_no event_code, event_wimp_handler *handler, void *handle);

void event_register_toolbox_handler(toolbox_o object_id,
    wimp_event_no event_code, event_toolbox_handler *handler, void *handle);

void event_register_message_handler(bits msg_no,
    event_message_handler *handler, void *handle);

void event_deregister_wimp_handler(toolbox_o object_id,
    wimp_event_no event_code, event_wimp_handler *handler, void *handle);

void event_deregister_toolbox_handler(toolbox_o object_id,
    wimp_event_no event_code, event_toolbox_handler *handler, void *handle);

void event_deregister_message_handler(bits msg_no,
    event_message_handler *handler, void *handle);

void event_initialise(toolbox_block *id_block);

#define event_ANY ((toolbox_o) -1)

#ifdef __cplusplus
}
#endif
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.3.2
log
@Version RO_3_71 taken
@
text
@@


4.1.3.1.4.1
log
@Merged from 3.71 CD
@
text
@@
