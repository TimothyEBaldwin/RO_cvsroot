head	1.1;
branch	1.1.1;
access;
symbols
	Boot-1_26:1.1.1.1
	Boot-1_25:1.1.1.1
	Boot-1_24:1.1.1.1
	Boot-1_23:1.1.1.1
	Boot-1_22:1.1.1.1
	Boot-1_21:1.1.1.1
	Boot-1_20:1.1.1.1
	Boot-1_19:1.1.1.1
	Boot-1_18:1.1.1.1
	Boot-1_17:1.1.1.1
	Boot-1_16:1.1.1.1
	Boot-1_15:1.1.1.1
	Boot-1_14:1.1.1.1
	Boot-1_13:1.1.1.1
	Boot-1_12:1.1.1.1
	Boot-1_11:1.1.1.1
	Boot-1_10:1.1.1.1
	Boot-1_09:1.1.1.1
	Boot-1_08:1.1.1.1
	Boot-1_07:1.1.1.1
	Boot-1_06:1.1.1.1
	Boot-1_05:1.1.1.1
	Boot-1_04:1.1.1.1
	Boot-1_03:1.1.1.1
	Boot-1_02:1.1.1.1
	Boot-1_01:1.1.1.1
	Boot-1_00:1.1.1.1
	Boot-0_99:1.1.1.1
	Boot-0_98:1.1.1.1
	Boot-0_97:1.1.1.1
	Boot-0_96:1.1.1.1
	Boot-0_95:1.1.1.1
	Boot-0_94:1.1.1.1
	Boot-0_93:1.1.1.1
	Boot-0_92:1.1.1.1
	Boot-0_91:1.1.1.1
	Boot-0_90:1.1.1.1
	Boot-0_89:1.1.1.1
	Boot-0_88:1.1.1.1
	Boot-0_87:1.1.1.1
	Boot-0_86:1.1.1.1
	Boot-0_85:1.1.1.1
	Boot-0_84:1.1.1.1
	Boot-0_83:1.1.1.1
	Boot-0_82:1.1.1.1
	Boot-0_81:1.1.1.1
	Boot-0_80:1.1.1.1
	Boot-0_79:1.1.1.1
	Boot-0_78:1.1.1.1
	Boot-0_77:1.1.1.1
	Boot-0_76:1.1.1.1
	Boot-0_75:1.1.1.1
	Boot-0_74:1.1.1.1
	Boot-0_73:1.1.1.1
	Boot-0_72:1.1.1.1
	Boot-0_71:1.1.1.1
	Boot-0_70:1.1.1.1
	Boot-0_69:1.1.1.1
	Boot-0_68:1.1.1.1
	Boot-0_67:1.1.1.1
	nbingham_boot_991007:1.1.1.1
	bavison_LoadCMOS-0_03:1.1.1.1
	initial:1.1.1.1
	Ursula:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.05.20.10.49.07;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.20.10.49.07;	author bavison;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for LoadCMOS
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date           Name       Description
# ----           ----       -----------
# 19th Jan 1998  BJGA       Created.
#                           Note, an attribute conflict during link is to be expected.
#

#
# Program-specific options:
#
COMPONENT = LoadCMOS
RDIR      = Resources
TARGET    = ${RDIR}.!RunImage

OBJS      = o.main o.util
LIBS      = OSLib:o.OSLib
INCLUDES  = -IOS:

#
# Generic options:
#
CC        = cc
CFLAGS    = -c -depend !Depend -throwback -ffah -apcs 3/noswst
OBJASM    = objasm
OFLAGS    = -depend !Depend -throwback -apcs 3/noswst
LINK      = link
LFLAGS    = -o $@@ -rmf
SETTYPE   = settype
ACCESS    = access
ACCFLAGS  = WR/R

MKDIR     = cdir
CP        = copy
CPFLAGS   = ~cfr~v
WIPE      = wipe
WFLAGS    = ~c~v
RM        = remove

#
#General rules
#
.SUFFIXES: .o .c .s

.c.o:
   ${CC} ${CFLAGS} ${INCLUDES} -o $@@ $<

.s.o:
   ${OBJASM} ${OFLAGS} -o $@@ $<

#
# External targets:
#
all: ${TARGET}
        @@echo ${COMPONENT}: make complete

install: all
	${MKDIR} ${INSTDIR}.${COMPONENT}
	${CP} ${RDIR}.!Run                 ${INSTDIR}.LoadCMOS.!Run       ${CPFLAGS}
	${CP} ${TARGET}                    ${INSTDIR}.LoadCMOS.LoadCMOS   ${CPFLAGS}
	${CP} ${RDIR}.${LOCALE}.Messages   ${INSTDIR}.LoadCMOS.Messages   ${CPFLAGS}
	|
        @@echo ${COMPONENT}: installation complete

export:
        @@echo ${COMPONENT}: export complete

clean:
        ${WIPE} o.* ${WFLAGS}
        ${RM} ${TARGET}
        @@echo ${COMPONENT}: clean complete

#
# Internal targets:
#
${TARGET}: ${OBJS} ${LIBS}
        ${LINK} ${LFLAGS} ${OBJS} ${LIBS}
        ${SETTYPE} ${TARGET} Utility
        ${ACCESS} ${TARGET} ${ACCFLAGS}

#
# Dynamic dependencies:
@


1.1.1.1
log
@
Import into CVS of LoadCMOS *utility*, as shipped in the universal boot
sequence with Expresso. This supercedes both the RISC OS 3.5 boot sequence
absolute, and the * command provided by the BootCommands module.

New features:
* Throws errors, rather than writing to stderr
* Never sets last-reset-type bit or the checksum byte
* Supports new CMOS file format (which includes the OS version the file was
  intended for)
* Checks the file length and checksum byte for the file before proceeding to
  write to CMOS
* Turns on hourglass for duration of the operation
@
text
@@
