head	4.2;
access;
symbols
	Boot-1_26:4.2
	Boot-1_25:4.2
	Boot-1_24:4.2
	Boot-1_23:4.2
	Boot-1_22:4.2
	Boot-1_21:4.2
	Boot-1_20:4.2
	Boot-1_19:4.2
	Boot-1_18:4.2
	Boot-1_17:4.2
	Boot-1_16:4.2
	Boot-1_15:4.2
	Boot-1_14:4.2
	Boot-1_13:4.2
	Boot-1_12:4.2
	Boot-1_11:4.2
	Boot-1_10:4.2
	Boot-1_09:4.2
	Boot-1_08:4.2
	Boot-1_07:4.2
	Boot-1_06:4.2
	Boot-1_05:4.2
	Boot-1_04:4.2
	Boot-1_03:4.2
	Boot-1_02:4.2
	Boot-1_01:4.2
	Boot-1_00:4.2
	Boot-0_99:4.2
	Boot-0_98:4.2
	Boot-0_97:4.2
	Boot-0_96:4.2
	Boot-0_95:4.2
	Boot-0_94:4.2
	Boot-0_93:4.2
	Boot-0_92:4.2
	Boot-0_91:4.2
	Boot-0_90:4.2
	Boot-0_89:4.2
	Boot-0_88:4.2
	Boot-0_87:4.2
	Boot-0_86:4.2
	Boot-0_85:4.2
	Boot-0_84:4.2
	Boot-0_83:4.2
	Boot-0_82:4.2
	Boot-0_81:4.2
	Boot-0_80:4.2
	Boot-0_79:4.2
	Boot-0_78:4.2
	Boot-0_77:4.2
	Boot-0_76:4.2
	Boot-0_75:4.2
	Boot-0_74:4.2
	Boot-0_73:4.2
	Boot-0_72:4.2
	Boot-0_71:4.1.1.1
	Boot-0_70:4.1.1.1
	Boot-0_69:4.1.1.1
	Boot-0_68:4.1.1.1
	Boot-0_67:4.1.1.1
	nbingham_boot_991007:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.6
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.4
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	ART_bp:4.1.1.1
	ART:4.1.1.1.0.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2003.02.13.17.22.38;	author rsprowson;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.52.54;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.52.54;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.47.11;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Finally got round to storing this stuff.
Many changes,highlights being:
 freepool now creates its 'o' directory in the top Makefile
 safelogin tweaked so it can find its header files again
 stopped EXITS macro moaning about no ENTRYS in Appsize and AddApp
 added 2DTools to universal boot sequence
 Added RO370/400/500Hook though the 370 and 400 are just empty at present
 newer vprotect added from Alan Glover
 add Utils.NetChoices
 delete ~CDReinit binary,shuffle sources a bit
 misc changes to obey files from Steve
The Makefile now expects a TARGET to be defined.Currently the 500 one is
the only one tested,though UNIVERSAL is also defined and outputs a boot
sequence like you would have got with !MkInstall in V0.71.
This picks up files which might differ between boots,and also adds
extra files which change when the UserIF changes.

Version 0.72. Tagged as 'Boot-0_72'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*main.c - SafeLogon *command*/

/*History

   27th Oct 1994 J R C Written

*/

/*From CLib*/
#include <stdio.h>
#include <string.h>
#include <stdbool.h>

/*From OSLib*/
#include "oslib/econet.h"
#include "oslib/netfs.h"
#include "oslib/os.h"
#include "oslib/territory.h"

/*From Support*/
#include "trace.h"

int main (void)

{  struct {char *prog, *fs, *user, *password; char argb [os_CLI_LIMIT + 1];}
         argl;
   int station, net, context, collate;
   netfs_file_server_context file_server_context;
   char password [os_CLI_LIMIT + 1], *end, *cmd;
   bool logon_required = TRUE, found_fs, named_fs;
   os_error *error = NULL;

   trace_on();

   if ((error = xos_get_env (&cmd, NULL, NULL)) != NULL)
      goto finish;

   tracef2 ("SafeLogon \"%.*s\"\n" , strcspn (cmd, "\r") , cmd);

   if ((error = xos_read_args ("prog/a,fs/a,user/a,password", cmd,
         (char *) &argl, sizeof argl, NULL)) != NULL)
      goto finish;

   tracef1 ("fs \"%s\"\n" , argl.fs);
   tracef1 ("user \"%s\"\n" , argl.user);
   tracef1 ("password \"%s\"\n" , argl.password != NULL?
         argl.password: "NULL");

   /*If the first character of the fs is not ':', we steer clear.*/
   if (argl.fs [0] == ':')
   {  argl.fs++;

      /*Station number or name?*/
      named_fs = xeconet_read_station_number (argl.fs, NULL, &station,
            &net) != NULL;
      if (named_fs)
         tracef1 ("fs is named \"%s\"\n" , argl.fs);
      else
         tracef2 ("fs is numbered %d.%d\n" , net , station);

      context = 0;
      while (TRUE)
      {  if ((error = xnetfs_enumerate_fs_contexts (context,
               &file_server_context, sizeof file_server_context, 1,
               &context, NULL)) != NULL)
            goto finish;
         if (context == netfs_NO_MORE) break;

         /*The useful parts of this are space-terminated.*/
         if ((end = strchr (file_server_context.disc_name, ' ')) != NULL)
            *end = '\0';
         if ((end = strchr (file_server_context.user_name, ' ')) != NULL)
            *end = '\0';

         tracef4 ("found fs %d.%d = \"%s\", user \"%s\"\n" ,
               file_server_context.net_no ,
               file_server_context.station_no ,
               file_server_context.disc_name ,
               file_server_context.user_name);

         if (named_fs)
         {  if ((error = xterritory_collate (territory_CURRENT, argl.fs,
                  file_server_context.disc_name, territory_IGNORE_CASE,
                  &collate)) != NULL)
               goto finish;

            found_fs = collate == 0;
         }
         else
            found_fs = file_server_context.station_no == station &&
               file_server_context.net_no == net;

         if (found_fs)
         {  if ((error = xterritory_collate (territory_CURRENT, argl.user,
                  file_server_context.user_name, territory_IGNORE_CASE,
                  &collate)) != NULL)
               goto finish;

            if (collate == 0)
            {  logon_required = FALSE;
               break;
   }  }  }  }

finish:
   /*Ignore errors up to this point. If there have been any, it's a safe bet
      that |logon_required| is TRUE.*/
   error = NULL;

   /*If that user is not logged on to that file server, do it now.*/
   if (logon_required)
   {  char logon [os_CLI_LIMIT + 1], *tail;

      for (tail = cmd; *tail != ' '; tail++)
         ;

      sprintf (logon, "Net:%%Logon%.*s", strcspn (tail, "\r"), tail);
      tracef1 ("logon \"%s\"\n" , logon);

      error = xos_cli (logon);
   }

   memset (&argl, '\0', sizeof argl);
   memset (password, '\0', sizeof password);

   if (error != NULL)
   {  fprintf (stderr, "%s\n", error->errmess);
      return 1;
   }
   else
      return 0;
}
@


4.1
log
@Initial revision
@
text
@d26 1
d29 4
a32 4
#include "econet.h"
#include "netfs.h"
#include "os.h"
#include "territory.h"
d47 1
a47 1
   trace_initialise ("SafeLogon$Trace");
d52 1
a52 1
   tracef ("SafeLogon \"%.*s\"\n" _ strcspn (cmd, "\r") _ cmd);
d58 3
a60 3
   tracef ("fs \"%s\"\n" _ argl.fs);
   tracef ("user \"%s\"\n" _ argl.user);
   tracef ("password \"%s\"\n" _ argl.password != NULL?
d71 1
a71 1
         tracef ("fs is named \"%s\"\n" _ argl.fs);
d73 1
a73 1
         tracef ("fs is numbered %d.%d\n" _ net _ station);
d89 4
a92 4
         tracef ("found fs %d.%d = \"%s\", user \"%s\"\n" _
               file_server_context.net_no _
               file_server_context.station_no _
               file_server_context.disc_name _
d131 1
a131 1
      tracef ("logon \"%s\"\n" _ logon);
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
