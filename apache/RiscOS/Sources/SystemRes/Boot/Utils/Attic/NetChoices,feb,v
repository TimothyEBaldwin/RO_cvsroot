head	4.4;
access;
symbols
	Boot-0_90:4.3
	Boot-0_89:4.2
	Boot-0_88:4.2
	Boot-0_87:4.2
	Boot-0_86:4.2
	Boot-0_85:4.2
	Boot-0_84:4.1
	Boot-0_83:4.1
	Boot-0_82:4.1
	Boot-0_81:4.1
	Boot-0_80:4.1
	Boot-0_79:4.1
	Boot-0_78:4.1
	Boot-0_77:4.1
	Boot-0_76:4.1
	Boot-0_75:4.1
	Boot-0_74:4.1
	Boot-0_73:4.1
	Boot-0_72:4.1;
locks; strict;
comment	@# @;


4.4
date	2012.07.19.11.51.20;	author rsprowson;	state dead;
branches;
next	4.3;
commitid	X5uFoEDi1qZ6qadw;

4.3
date	2012.07.15.16.56.27;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	kBacYOBPRVrWeGcw;

4.2
date	2011.12.12.18.06.26;	author srevill;	state Exp;
branches;
next	4.1;
commitid	C5vpWLbYleErzVKv;

4.1
date	2003.02.13.17.22.42;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Clearout and universality improvements
More dead files placed in the attic. Retagged as Boot-0_91.
@
text
@| This file creates the writeable Choices directory for this machine (which may
| be distinct from that of other machines, notably when network booting). This
| really should all be in Boot:Utils.SetChoices...
|
If "<Boot$Unique>" = "Local" Then SetEval Boot$Remote 0 Else SetEval Boot$Remote -1
If Boot$Remote Then Set Boot$ChoicesRW <Boot$Dir>.MchConfig.<Boot$Unique> Else Set Boot$ChoicesRW <Boot$Dir>.Choices

| If we cannot write to the machine's Choices directory, we will assume that we need to
| create a RAM filing system for things like our Choices (and Scrap) directories
If Boot$ReadOnly Then Set Boot$ChoicesRW RAM::0.$.Choices
If Boot$ReadOnly Then X CDir <Boot$ChoicesRW>
If Boot$ReadOnly Then X ChangeDynamicArea -ramfssize 64M
If Boot$ReadOnly Then RMReInit RAMFS
If Boot$ReadOnly Then CDir <Boot$ChoicesRW>
If Boot$ReadOnly Then CDir <Boot$ChoicesRW>.^.Documents
If Boot$ReadOnly Then CDir <Boot$ChoicesRW>.^.Public

| Copy the template Choices.Boot directory from our OS hook, if we don't already have it
IfThere <Boot$ChoicesRW>.Boot Then SetEval Boot$DoCopy 0 Else SetEval Boot$DoCopy 1
If Boot$DoCopy Then CDir <Boot$ChoicesRW>.Boot
If Boot$DoCopy Then Copy Choices:Boot <Boot$ChoicesRW>.Boot R~C~VF
Unset Boot$DoCopy
If Boot$Remote Then Access <Boot$ChoicesRW>.Boot WR/wr
@


4.3
log
@Restore a little universality
Makefile updated to use some shared bits.
New (empty) FILES510 definition.
Only !Sprites is mandatory for a given UserIF, !Sprites22 and !Sprites11 may be omitted.
Removed some heading blocks from files deposited on the user's disc.
Copied !Run into locale specific dir since it contains english translations.
Notes moved into Docs dir.

Version 0.90. Tagged as 'Boot-0_90'
@
text
@@


4.2
log
@Modified to support booting from read-only file systems.

Changes to the BootVars utility and a couple of Boot:Utils scripts.
Introduces the new Boot$ReadOnly and Boot$ChoicesRW system variables:

  Boot$ReadOnly evaluates to 1 if booting from a read-only file
  system (or more specifically, if the choices specific to that
  machine cannot be written to). Else evaluates to 0.

  Boot$ChoicesRW is the full pathname of the writeable Choices
  directory, which may NOT be Boot:Choices under various circumstances.
  This is only important during the boot sequence. The Choices$Write
  variable is still the one for everyone else to use.

Version 0.85. Tagged as 'Boot-0_85'
@
text
@a0 14
| Copyright 2003 Tematic Ltd
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
@


4.1
log
@Finally got round to storing this stuff.
Many changes,highlights being:
 freepool now creates its 'o' directory in the top Makefile
 safelogin tweaked so it can find its header files again
 stopped EXITS macro moaning about no ENTRYS in Appsize and AddApp
 added 2DTools to universal boot sequence
 Added RO370/400/500Hook though the 370 and 400 are just empty at present
 newer vprotect added from Alan Glover
 add Utils.NetChoices
 delete ~CDReinit binary,shuffle sources a bit
 misc changes to obey files from Steve
The Makefile now expects a TARGET to be defined.Currently the 500 one is
the only one tested,though UNIVERSAL is also defined and outputs a boot
sequence like you would have got with !MkInstall in V0.71.
This picks up files which might differ between boots,and also adds
extra files which change when the UserIF changes.

Version 0.72. Tagged as 'Boot-0_72'
@
text
@d15 23
a37 9
| Network remote booting 
If "<Boot$Unique>" <> "Local" Then SetEval Boot$Remote -1 Else SetEval Boot$Remote 0
If "<Boot$Remote>" = "0" Then Set Boot$Temp <Boot$Dir>.Choices Else Set Boot$Temp <Boot$Dir>.MchConfig.<Boot$Unique>
IfThere <Boot$Temp>.Boot Then Set Boot$Copy 0 Else Set Boot$Copy 1
If "<Boot$Copy>"="1" Then Cdir <Boot$Temp>.Boot
If "<Boot$Copy>"="1" Then Copy Choices:Boot <Boot$Temp>.Boot R~C~VF
Unset Boot$Temp
unset Boot$Copy
If Boot$Remote Then Access <Boot$Temp>.Boot WR/wr
@

