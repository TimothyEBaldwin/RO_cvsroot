head	4.1;
branch	4.1.1;
access;
symbols
	Configure-1_92:4.1.1.1
	Configure-1_91:4.1.1.1
	Configure-1_90:4.1.1.1
	Configure-1_89:4.1.1.1
	Configure-1_88:4.1.1.1
	Configure-1_87:4.1.1.1
	Configure-1_86:4.1.1.1
	Configure-1_50:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.6
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.4
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	ART_bp:4.1.1.1
	ART:4.1.1.1.0.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.53.22;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.53.22;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.51.32;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title  : ftrace.h
 * Purpose: centralised control for trace/debug output to a file
 *
 */

#ifndef __ftrace_h
#define __ftrace_h

#ifndef TRACE
#define TRACE 0
#endif

/* This flag says if tracing is compiled in. It should be used in
conditional compilation statements around all tracing code. */

#if TRACE
   /* --------------------------- ftracef ----------------------------------
    * Description:   Outputs tracing info.
    *
    * Parameters:    char* -- printf-style format string
    *                ...   -- variable argument list
    * Returns:       void.
    * Other Info:    called by ftracef0,ftracef1 etc.
    *
    */

   extern void ftrace_paint (char *);

   extern void ftracef (char *file, int line, char *, ...);
   
   /*Supply function versions of these for obscure reasons ...*/
   extern void ftracef0 (char *);
   extern void ftracef1 (char *, ...);
   extern void ftracef2 (char *, ...);
   extern void ftracef3 (char *, ...);
   extern void ftracef4 (char *, ...);
   extern void ftracef5 (char *, ...);

   #define ftracef0(a) ftracef(__FILE__, __LINE__, a)
   #define ftracef1(a, b) ftracef(__FILE__, __LINE__, a, b)
   #define ftracef2(a, b, c) ftracef(__FILE__, __LINE__, a, b, c)
   #define ftracef3(a, b, c, d) ftracef(__FILE__, __LINE__, a, b, c, d)
   #define ftracef4(a, b, c, d, e) ftracef(__FILE__, __LINE__, a, b, c, d, e)
   #define ftracef5(a, b, c, d, e, f) ftracef(__FILE__, __LINE__, a, b, c, d, e, f)

   /* These forms can occur outside conditional compilation clauses:
   they will produce no code if TRACE is not set. */

   extern int ftrace_is_on (void);  /* returns true if tracing turned on */
   extern void ftrace_on (void);    /* turns tracing on */
   extern void ftrace_off (void);   /* turns tracing off */
#else
   /* No-trace versions */

   #define ftrace_paint(s) ((void) 0)

   /* ftracef itself cannot be done as a macro. */
   extern void ftracef (char *file, int line, char *, ...);

   #define ftracef0(a) ((void) 0)
   #define ftracef1(a,b) ((void) 0)
   #define ftracef2(a,b,c) ((void) 0)
   #define ftracef3(a,b,c,d) ((void) 0)
   #define ftracef4(a,b,c,d,e) ((void) 0)
   #define ftracef5(a,b,c,d,e,f) ((void) 0)

   #define ftrace_is_on() 0
   #define ftrace_on() ((void) 0)
   #define ftrace_off() ((void) 0)
#endif

#endif
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
