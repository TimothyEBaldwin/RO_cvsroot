head	1.3;
access;
symbols
	SrcEdit-1_34:1.3
	SrcEdit-1_33:1.3
	SrcEdit-1_32:1.3
	SrcEdit-1_31:1.3
	SrcEdit-1_30:1.3
	SrcEdit-1_29:1.3
	SrcEdit-1_28:1.3
	SrcEdit-1_27:1.3
	SrcEdit-1_26:1.3
	SrcEdit-1_25:1.2
	SrcEdit-1_24:1.2
	SrcEdit-1_23:1.2
	SrcEdit-0_02:1.1.1.1
	SrcEdit-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.08.21.19.46.57;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	Ft3xXiFOAiNJZrhw;

1.2
date	2007.06.10.12.29.42;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Change to use '_Version' for info box
Reflects change in little brother !Edit 1.67.[1~
Sources to single linked list handler sync'd with !Edit too.
Tested briefly, running disc version and loading a file.

Version 1.26. Tagged as 'SrcEdit-1_26'
@
text
@/* Copyright 2007 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> c.Slist
 * Title:       Slist - singly-linked lists
 * Author:      JGT (converted from MJJ)
 *              Copyright (C) 1988 Acorn Computers Limited
 */

#include <stdio.h>
#include "slist.h"

typedef struct listrec
{
  struct listrec *next;
} listrec_t;

#define next_(p) (((listrec_t *)(p))->next)

void * slist_add(void *listhead, void *newelement)
{
next_(newelement) = listhead;
return newelement;
} /* End procedure */

void * slist_addend(void *listhead, void *newelement)
{
  void * t,
       * tf;
  
  next_(newelement) = NULL;
  if (!listhead) return newelement;
  t = listhead;
  do
  {
    tf = next_(t);
    if (!tf) break;
    t = tf;
  } while (1);
  next_(t) = newelement;
  return listhead;
} /* End procedure */

void * slist_remove(void *listhead, void *element)
{
  void * t,
       * tf;
  
  if (!listhead) return NULL;
  if (listhead == element) return next_(listhead);
  t = listhead;
  do
  {
    tf = next_(t);
    if (!tf) return listhead;
    if (tf == element)
    {
      /* match - remove it */
      next_(t) = next_(tf);
      return listhead;
    }; /* End if */
    t = tf; /* onto next */
  } while (1);
} /* End procedure */

void * slist_joinend(void *listhead, void *newlist)
{
  void * t,
       * tf;
  
  if (!listhead) return newlist;
  t = listhead;
  do
  {
    tf = next_(t);
    if (!tf) break;
    t = tf;
  } while (1);
  next_(t) = newlist;
  return listhead;
} /* End procedure */

/* End slist.c */
@


1.2
log
@  Import of SrcEdit 1.23.
Detail:
  Appears to be substantially more complete than the version previously
  imported. Thanks to Rob Sprowson for bringing this to our attention.
Admin:
  Builds, and tested briefly - seems to fix the more obvious bugs that were
  present in the previous version.

Version 1.23. Tagged as 'SrcEdit-1_23'
@
text
@a21 1

a23 2
typedef struct listrec * ListPtr;

d26 2
a27 2
  ListPtr next;
};
d29 1
a29 1
#define next_(p) (((ListPtr)p)->next)
d31 1
a31 1
extern void * slist_add(void *listhead, void *newelement)
d33 3
a35 3
   next_(newelement) = listhead;
   return newelement;
}
d37 1
a37 1
extern void * slist_addend(void *listhead, void *newelement)
d39 15
a53 15
   void * t,
        * tf;

   next_(newelement) = NULL;
   if (!listhead) return newelement;
   t = listhead;
   do
   {
     tf = next_(t);
     if (!tf) break;
     t = tf;
   } while (1);
   next_(t) = newelement;
   return listhead;
}
d55 1
a55 1
extern void *slist_remove(void *listhead, void *element)
d57 19
a75 2
   void * t,
        * tf;
d77 1
a77 18
   if (!listhead) return NULL;
   if (listhead == element) return next_(listhead);
   t = listhead;
   do
   {
     tf = next_(t);
     if (!tf) return listhead;
     if (tf == element)
     {
       /* match - remove it */
       next_(t) = next_(tf);
       return listhead;
     }
     t = tf; /* onto next */
   } while (1);
}

extern void * slist_joinend(void *listhead, void *newlist)
d79 14
a92 14
   void * t,
        * tf;

   if (!listhead) return newlist;
   t = listhead;
   do
   {
     tf = next_(t);
     if (!tf) break;
     t = tf;
   } while (1);
   next_(t) = newlist;
   return listhead;
}
d94 1
a94 1
/* End Slist.c */
@


1.1
log
@Initial revision
@
text
@d22 2
a23 1
#include "h.slist"
d34 1
a34 1
void *slist_add(void *listhead, void *newelement)
d40 1
a40 1
void * slist_addend(void *listhead, void *newelement)
d42 2
a43 1
   void *t, *tf;
d58 1
a58 1
void *slist_remove(void *listhead, void *element)
d60 2
a61 1
void *t, *tf;
d75 1
a75 1
     };
d80 1
a80 1
void *slist_joinend(void *listhead, void *newlist)
d82 2
a83 1
   void *t, *tf;
d96 2
@


1.1.1.1
log
@  Initial import of !SrcEdit, exported from the old SrcFiler repository
  and given a modern build structure.
Detail:
  I'm not convinced these are actually the most recent sources. They didn't
  build as-is against a "modern" RISC_OSLib, and I had to substitute the
  !Run/!Boot/Messages etc from the C/C++ tools release to make it work.
  There are still some issues - some menus are incorrectly created, and one
  source file invokes a compiler bug.
Admin:
  Not particularly thoroughly tested.

Version 0.01. Tagged as 'SrcEdit-0_01'
@
text
@@
