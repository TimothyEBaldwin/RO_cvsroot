head	1.4;
access;
symbols
	SrcEdit-1_34:1.4
	SrcEdit-1_33:1.4
	SrcEdit-1_32:1.4
	SrcEdit-1_31:1.4
	SrcEdit-1_30:1.3
	SrcEdit-1_29:1.3
	SrcEdit-1_28:1.3
	SrcEdit-1_27:1.3
	SrcEdit-1_26:1.3
	SrcEdit-1_25:1.3
	SrcEdit-1_24:1.3
	SrcEdit-1_23:1.2
	SrcEdit-0_02:1.1.1.1
	SrcEdit-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.04.03.21.01.31;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	rZLpc3DzBUA6Ibgy;

1.3
date	2007.06.15.01.33.38;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.10.12.29.42;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Switch from ArcEdit style model to clipboard cut & paste model
Messages:
 Remove TaskInput from Task menu, add clipboard keys to Select menu, add swap case to Select menu.
 Slim down the Misc menu which was too wide in system font.
 Update interactive help.
 Use some more of the escape code tokens in interactive help.
 Remove key shortcut from iconbar menu.
Templates:
 Line use magic search character '\n' in the dialogue.
message.c:
 Let the task window accept clipboard pastes too.
 This is tied to the 'Ignore ctrl' menu option. When enabled (default) then ^C ^V are filtered out to for clipboard typing to the task, and filters control characters from the task too (as before). When disabled, ^C ^V are passed raw to the task, and all VDU is displayed raw from the task. Cut & paste can still be performed in the disabled case by using the Edit->Select menu.
multiedit.c:
 Adjust list of acceptable keys in Read-Only mode.
 Remove nonsense shortcut keys.
 Inform RISC_OSLib of a read only text using new charoption txt_READONLY.
srcedmenus.c:
 Adjust shading logic for changed menu layouts.
winevent.c:
 Remove handling of ^A, as this is now dealt with in txt.


Version 1.31. Tagged as 'SrcEdit-1_31'
@
text
@/* Copyright 2007 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File:   multiedit.c
 * Purpose: To stop re-opening of edited files
 * Author:  IDJ
 * History: 26-Feb-90: IDJ: Created
 *          27-Feb-90: IDJ: added setting of mouse bbox
 *          28-Feb-90: IDJ: back to using an open handler
 *          28-Feb-90: IDJ: acknowledge load before putting up dbox, otherwise
 *                          wimp tells other end we didn't get the file!!
 *          01-Mar-90: IDJ: slight change to message in warning box
 *          01-Mar-90: IDJ: hide text when already modified copy is reloaded
 *          01-Mar-90: IDJ: set dot to get input focus back when showing after hiding
 *                          when loading already modified version of file
 *          30-Oct-90: IDJ: fixed bug whereby multiedit can cause windows to disappear!
 *          15-Mar-91: IDJ: do case insensitive filename comparison
 *          15-Mar-91: IDJ: use msgs.h
 *
 *          Re-release
 *          14-Nov-91: IDJ: use utils.h for cistrcmp
 *
 */


#include <string.h>
#include <ctype.h>

#include "msgs.h"
#include "txt.h"
#include "txtedit.h"
#include "win.h"
#include "dbox.h"
#include "werr.h"
#include "wimp.h"
#include "os.h"
#include "bbc.h"
#include "wimpt.h"
#include "akbd.h"
#include "event.h"
#include "xferrecv.h"

#include "bool.h"
#include "options.h"
#include "multiedit.h"
#include "srcedmenus.h"
#include "utils.h"

#define multiedit_IReadOnly    1
#define multiedit_IEditable    2
#define multiedit_ICancelEdit  3

static txt_event_proc multiedit__oldtxthandler;
static BOOL multiedit__closeit;

/* mouse bounding box */
#define SetMouse 21
typedef struct {  char sub_reason;
                  char left_lsb, left_msb,
                       bottom_lsb, bottom_msb,
                       right_lsb, right_msb,
                       top_lsb, top_msb;
               } mouse_bbox;



static void multiedit__setup_box(int x0, int y0, int x1, int y1)
{
   mouse_bbox box;

   box.sub_reason = 1;  /* define mouse coord bbox */
   box.left_lsb = x0;
   box.left_msb = x0 >> 8;
   box.bottom_lsb = y0;
   box.bottom_msb = y0 >> 8;
   box.right_lsb = x1;
   box.right_msb = x1 >> 8;
   box.top_lsb = y1;
   box.top_msb = y1 >> 8;
   os_word(SetMouse, (void *)&box);
}

static dbox_field multiedit__dbox_popup(char *name, char *message)
{
   dbox_field result;
   dbox d = dbox_new(name);
   wimp_wstate ws;

   /* get window coords and set mouse bbox to it */
   wimp_get_wind_state(dbox_syshandle(d), &ws);
   multiedit__setup_box(ws.o.box.x0, ws.o.box.y0, ws.o.box.x1, ws.o.box.y1);

   /* popup the dialogue box */
   dbox_setfield(d, 0, message);
   dbox_show(d);
   result = dbox_fillin(d);
   dbox_dispose(&d);
   
   /* reset mouse bounding box to screen */
   multiedit__setup_box(0, 0, 
                        (bbc_vduvar(bbc_XWindLimit)) << bbc_vduvar(bbc_XEigFactor),
                        (bbc_vduvar(bbc_YWindLimit)) << bbc_vduvar(bbc_YEigFactor));

   return result;
}


static void multiedit__eventhandler(txt t, void *handle)
{
   /* allow moving through the text, and other harmless activities */
   txt_eventcode e = txt_get(t);

   if ((e & txt_MOUSECODE) != 0)
   {
        txt_unget(t, e);
        multiedit__oldtxthandler(t, handle);
   }
   else
   {

      switch (e)
      {
          /* allowable events */
          case txt_EXTRACODE + akbd_Fn + 1:                     /* help request */
          case akbd_Fn + 1:                                     /* help */
          case akbd_Fn + 5:                                     /* goto line */
          case akbd_Fn + akbd_Sh + 6:                           /* clear select */
          case txt_EXTRACODE + akbd_Fn + 127:
          case akbd_Fn + akbd_Ctl + 2:                          /* close window */
          case 3:                                               /* Ctrl-C */
          case 26:                                              /* Ctrl-Z */
          case 12:                                              /* Ctrl-L */
          case 1:                                               /* Ctrl-A */
          case akbd_LeftK:                                      /* left-arrow */
          case akbd_RightK:                                     /* right arrow */
          case akbd_UpK:                                        /* up arrow */
          case akbd_DownK:                                      /* down arrow */
          case akbd_Sh + akbd_Ctl + akbd_UpK:
          case txt_EXTRACODE + akbd_Sh + akbd_Ctl + akbd_UpK:   /* going up */
          case  akbd_Sh + akbd_Ctl + akbd_DownK:
          case txt_EXTRACODE + akbd_Sh + akbd_Ctl + akbd_DownK: /* going down */
          case akbd_Sh + akbd_LeftK:                            /* word left */
          case akbd_Sh + akbd_RightK:                           /* word right */
          case akbd_Sh + akbd_UpK:
          case txt_EXTRACODE + akbd_Sh + akbd_UpK:              /* going up */
          case akbd_Sh + akbd_DownK:
          case txt_EXTRACODE + akbd_Sh + akbd_DownK:            /* going down */
          case akbd_Ctl + akbd_LeftK:                           /* bol */
          case akbd_Ctl + akbd_RightK:                          /* eol */
          case akbd_Ctl + akbd_UpK:
          case 30:                                              /* home */
          case akbd_Ctl + akbd_DownK:                           /* eof */
          case akbd_PrintK:                                     /* print */
               
               /* pass this event on to the default handler in risc_oslib */
               txt_unget(t, e);
               multiedit__oldtxthandler(t, handle);
               break;                             


          /* disallow all other events (since they will/may cause changes) */
          default:
               /* do nothing */
               break;
      }
   }
}



extern BOOL multiedit_closeit(void)
{
   return multiedit__closeit;
}


extern void multiedit_reset_closeit(void)
{
   multiedit__closeit = FALSE;
}



extern void multiedit_open_handler(char *filename, txtedit_state *s, void *handle)
{
   char message[256];
   txtedit_state *states;
   dbox_field result; 
   void *multiedit__oldtxthandle;
   char title[356];  /* same value as used by !Edit for title length */

   handle = handle;

   multiedit__closeit = FALSE;

   /* attach our own menumaker */
   event_attachmenumaker(txt_syshandle(s->t), srcedmenus_menumaker, 
                         srcedmenus_menuproc, s);

   /* see if user wants to be warned */
   if (!options_warn_multiple()) return;

   /* search for this text */
   states = txtedit_getstates();
   while (states != 0)
   {
      if (filename[0] != 0 && !cistrcmp(filename, states->filename) && (txt_charoptions(states->t) & txt_UPDATED) != 0)
         break;
      else
         states = states->next;
   }
   if (states == 0) return;

   /* 01-Mar-90: IDJ: experiment */
   txt_hide(s->t);

   /* must do this to stop wimp thinking we didn't get the file */
   xferrecv_insertfileok();

   /* build message, popup dbox and see what he does */
   strncpy(message, msgs_lookup("multied1:Modified buffer already exists for "), 255);
   strncat(message, filename, 255);

   result = multiedit__dbox_popup("MultiEdit", message);

   switch (result)
   {
       case dbox_CLOSE:
         /* 01-Mar-90: IDJ: experiment */
         txt_show(s->t);
         txt_setdot(s->t, 0);  
         break;  /* do nothing if he clicks outside */

       case multiedit_IReadOnly:
         /* splat the old txt event-handler and menu maker */
         /* read default event handler */
         /* we cheat a bit here: we know there is only one handler in risc_oslib
            for txts, so we only need to remember the one copy. We then get the
            handler's handle passed to us and just pass it on. 
          */
         txt_readeventhandler(s->t, &multiedit__oldtxthandler, &multiedit__oldtxthandle); 

         /* stick in our own handler */
         txt_eventhandler(s->t, multiedit__eventhandler, multiedit__oldtxthandle);

         /* attach our own menumaker */
         event_attachmenumaker(txt_syshandle(s->t), srcedmenus_readonly_menumaker, 
                               srcedmenus_menuproc, s);

         /* 01-Mar-90: IDJ: experiment */
         txt_show(s->t);
         txt_setdot(s->t, 0);

         /* set title as read-only */
         strcpy(title, filename);
         strcat(title, msgs_lookup("multied2: (Read-only)"));
         txt_settitle(s->t, title);

         /* inform RISC_OSLib it can't accept paste requests */
         txt_setcharoptions(s->t, txt_READONLY, txt_READONLY);         
         break;

       case multiedit_IEditable:
         /* 01-Mar-90: IDJ: experiment */
         txt_show(s->t);
         txt_setdot(s->t, 0);
         break;  /* do nothing, cos it's editable already */

       case multiedit_ICancelEdit:
         /* dispose of this edit state by telling srcedit to do it */
         multiedit__closeit = TRUE;
         break;
   }
}
@


1.3
log
@ BASIC editing added so that you can replace !Edit

Detail:
 Changes from Colin Granville:
 * BASIC editing added.
 * BASIC options added and saved with other options.
       s       indicates don't strip line numbers.
       n<num>  sets line number increment to num.
 * Added 'Export' file to !Run which sets SrcEdit$Detokenise and
   SrcEdit$Tokenise for BASIC editing.
 * Added creation of BASIC files, TaskObey files and creation by
   name entries on the Create Menu.
 * Changed sprites to RO5 sprites - versions which came with the Acornc/c++
   distribution.
 * Options read from Choices:SrcEdit
 * Options written to <choices$Write>.srcedit.
 * Read-only documents can be printed.
 * Read-only documents can have selections saved and printed.
 * ctrl A selects whole text (should be done by RiscOSLib).
 * version now set by EditId in Messages file - was from templates file.

Admin:
 Tested on Iyonix RO510

Version 1.24. Tagged as 'SrcEdit-1_24'
@
text
@a137 1
          case akbd_Fn + 6:                                     /* select to dot */
a138 1
          case akbd_Fn + akbd_Ctl + 7:                          /* exchange dot and select */
d141 1
a148 2
          case akbd_Sh + akbd_Ctl + akbd_LeftK:                 /* move all windows up */
          case akbd_Sh + akbd_Ctl + akbd_RightK:                /* move all windows down */
d267 1
a267 1
         strcat(title, msgs_lookup("multied2:  (Read-Only)"));
d269 3
a271 1
         
@


1.2
log
@  Import of SrcEdit 1.23.
Detail:
  Appears to be substantially more complete than the version previously
  imported. Thanks to Rob Sprowson for bringing this to our attention.
Admin:
  Builds, and tested briefly - seems to fix the more obvious bugs that were
  present in the previous version.

Version 1.23. Tagged as 'SrcEdit-1_23'
@
text
@d136 1
d143 3
a145 1
          case 26:                                              /* Ctrl-z */
d167 1
@


1.1
log
@Initial revision
@
text
@d28 5
d38 2
d58 1
d77 1
d217 1
a217 1
      if (filename[0] != 0 && !strcmp(filename, states->filename) && (txt_charoptions(states->t) & txt_UPDATED) != 0)
d231 1
a231 1
   strncpy(message, msgs_lookup("multiedit1:Modified buffer already exists for "), 255);
d266 1
a266 1
         strcat(title, "  (Read-Only)");
@


1.1.1.1
log
@  Initial import of !SrcEdit, exported from the old SrcFiler repository
  and given a modern build structure.
Detail:
  I'm not convinced these are actually the most recent sources. They didn't
  build as-is against a "modern" RISC_OSLib, and I had to substitute the
  !Run/!Boot/Messages etc from the C/C++ tools release to make it work.
  There are still some issues - some menus are incorrectly created, and one
  source file invokes a compiler bug.
Admin:
  Not particularly thoroughly tested.

Version 0.01. Tagged as 'SrcEdit-0_01'
@
text
@@
