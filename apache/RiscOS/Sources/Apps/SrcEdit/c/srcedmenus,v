head	1.4;
access;
symbols
	SrcEdit-1_34:1.4
	SrcEdit-1_33:1.4
	SrcEdit-1_32:1.4
	SrcEdit-1_31:1.4
	SrcEdit-1_30:1.3
	SrcEdit-1_29:1.3
	SrcEdit-1_28:1.3
	SrcEdit-1_27:1.3
	SrcEdit-1_26:1.3
	SrcEdit-1_25:1.3
	SrcEdit-1_24:1.3
	SrcEdit-1_23:1.2
	SrcEdit-0_02:1.1.1.1
	SrcEdit-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.04.03.21.01.31;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	rZLpc3DzBUA6Ibgy;

1.3
date	2007.06.15.01.33.39;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.10.12.29.42;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Switch from ArcEdit style model to clipboard cut & paste model
Messages:
 Remove TaskInput from Task menu, add clipboard keys to Select menu, add swap case to Select menu.
 Slim down the Misc menu which was too wide in system font.
 Update interactive help.
 Use some more of the escape code tokens in interactive help.
 Remove key shortcut from iconbar menu.
Templates:
 Line use magic search character '\n' in the dialogue.
message.c:
 Let the task window accept clipboard pastes too.
 This is tied to the 'Ignore ctrl' menu option. When enabled (default) then ^C ^V are filtered out to for clipboard typing to the task, and filters control characters from the task too (as before). When disabled, ^C ^V are passed raw to the task, and all VDU is displayed raw from the task. Cut & paste can still be performed in the disabled case by using the Edit->Select menu.
multiedit.c:
 Adjust list of acceptable keys in Read-Only mode.
 Remove nonsense shortcut keys.
 Inform RISC_OSLib of a read only text using new charoption txt_READONLY.
srcedmenus.c:
 Adjust shading logic for changed menu layouts.
winevent.c:
 Remove handling of ^A, as this is now dealt with in txt.


Version 1.31. Tagged as 'SrcEdit-1_31'
@
text
@/* Copyright 2007 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File:   srcedmenus.c
 * Purpose: customise the edit menu tree for our own ends
 * Author: IDJ  (yes I'm afraid I'm responsible for this hackery)
 * History:   28-Feb-90: IDJ: split off from multiedit
 *
 */

#include <string.h>

#include "menu.h"
#include "wimp.h"
#include "txtedit.h"
#include "txtscrap.h"
#include "werr.h"

#include "selectload.h"
#include "langhelp.h"

#include "srcedmenus.h"

/* Top level */
#define srcedmenus_MSave   2
#define srcedmenus_MSelect 3
#define srcedmenus_MEdit   4
/* In the MSelect submenu */
#define srcedmenus_MHelp   11
#define srcedmenus_MLoad   12


extern menu srcedmenus_menumaker(void *handle)
{
   menu m;
   wimp_menustr *mstr, *submstr;
   wimp_menuitem *topentry, *subentry;
   int i;
   txtedit_state *s = (txtedit_state *)handle;
   BOOL selection = txtscrap_selectowner() != NULL;

   /* make a menu from the current edit state */
   m = txtedit_menu(s);

   /* now re-enable things we may have greyed out */
   mstr = menu_syshandle(m);

   /* top-level - re-enable Save and Edit */
   topentry = ((wimp_menuitem *)(mstr+1)) + srcedmenus_MSave - 1;
   topentry->iconflags &= ~wimp_INOSELECT;
   topentry = ((wimp_menuitem *)(mstr+1)) + srcedmenus_MEdit - 1;
   topentry->iconflags &= ~wimp_INOSELECT;

   /* misc sub-menu */
   topentry = ((wimp_menuitem *)(mstr+1));
   submstr = topentry->submenu;

   /* re-enable entries 2-7 (set type .. wordwrap) */
   for (i = 2; i < 8; i++)
   {
        subentry = ((wimp_menuitem *)(submstr+1)) + i;
        subentry->iconflags &= ~wimp_INOSELECT;
   }

   /* select sub-menu  */
   topentry = ((wimp_menuitem *)(mstr+1)) + srcedmenus_MSelect - 1;
   submstr = topentry->submenu;

   /* allow last two, if there is a selection */
   subentry = ((wimp_menuitem *)(submstr+1)) + srcedmenus_MHelp - 1;
   if (selection)
       subentry->iconflags &= ~wimp_INOSELECT;
   else
       subentry->iconflags |= wimp_INOSELECT;
   subentry = ((wimp_menuitem *)(submstr+1)) + srcedmenus_MLoad - 1;
   if (selection)
       subentry->iconflags &= ~wimp_INOSELECT;
   else
       subentry->iconflags |= wimp_INOSELECT;

   return m;

}



extern menu srcedmenus_readonly_menumaker(void *handle)
{
   menu m;
   wimp_menustr *mstr, *submstr;
   wimp_menuitem *topentry, *subentry;
   int i,j;
   txtedit_state *s = (txtedit_state *)handle;
   BOOL selection = txtscrap_selectowner() != NULL;

   /* make a menu from the current edit state */
   m = txtedit_menu(s);

   /* now grey out all 'naughty' menu options */
   mstr = menu_syshandle(m);

   /* top-level - disallow Save and Edit */
   topentry = ((wimp_menuitem *)(mstr+1)) + srcedmenus_MSave - 1;
   topentry->iconflags |= wimp_INOSELECT;

   /* misc sub-menu */
   topentry = ((wimp_menuitem *)(mstr+1));
   submstr = topentry->submenu;

   /* grey out entries */
   j=0x13;
   for (i = 0; i < 8; i++)
   {
        if (j & (1<<i)) continue;
        subentry = ((wimp_menuitem *)(submstr+1)) + i;
        subentry->iconflags |= wimp_INOSELECT;
   }

   /* select sub-menu  */
   topentry = ((wimp_menuitem *)(mstr+1)) + srcedmenus_MSelect - 1;
   submstr = topentry->submenu;

   /* grey out Indent/Swap case/Cut/Paste/Delete */
   j=0x323;
   for (i = 0; i < 10; i++)
   {
        if (j & (1<<i)) continue;
        subentry = ((wimp_menuitem *)(submstr+1)) + i;
        subentry->iconflags |= wimp_INOSELECT;
   }

   /* allow last two, if there is a selection */
   subentry = ((wimp_menuitem *)(submstr+1)) + srcedmenus_MHelp - 1;
   if (selection)
       subentry->iconflags &= ~wimp_INOSELECT;
   else
       subentry->iconflags |= wimp_INOSELECT;
   subentry = ((wimp_menuitem *)(submstr+1)) + srcedmenus_MLoad - 1;
   if (selection)
       subentry->iconflags &= ~wimp_INOSELECT;
   else
       subentry->iconflags |= wimp_INOSELECT;

   /* edit sub-menu  */
   topentry = ((wimp_menuitem *)(mstr+1)) + srcedmenus_MEdit - 1;
   submstr = topentry->submenu;

   /* grey out entries */
   j=2;
   for (i = 0; i < 7; i++)
   {
      if (j & (1<<i)) continue;
      subentry = ((wimp_menuitem *)(submstr+1)) + i;
      subentry->iconflags |= wimp_INOSELECT;
   }

   return m;

}



extern void srcedmenus_menuproc(void *handle, char *hit)
{
   txtedit_state *s = (txtedit_state *)handle;

   switch(hit[0])
   {
      case srcedmenus_MSelect:
         switch(hit[1])
         {
            case srcedmenus_MLoad:
               selectload_load(s);
               break;

            case srcedmenus_MHelp:
               langhelp_gethelp();
               break;

            default:
               txtedit_menuevent(s, hit);
               break;
         }
         break;

      default:
         txtedit_menuevent(s, hit);
         break;
   }
}
@


1.3
log
@ BASIC editing added so that you can replace !Edit

Detail:
 Changes from Colin Granville:
 * BASIC editing added.
 * BASIC options added and saved with other options.
       s       indicates don't strip line numbers.
       n<num>  sets line number increment to num.
 * Added 'Export' file to !Run which sets SrcEdit$Detokenise and
   SrcEdit$Tokenise for BASIC editing.
 * Added creation of BASIC files, TaskObey files and creation by
   name entries on the Create Menu.
 * Changed sprites to RO5 sprites - versions which came with the Acornc/c++
   distribution.
 * Options read from Choices:SrcEdit
 * Options written to <choices$Write>.srcedit.
 * Read-only documents can be printed.
 * Read-only documents can have selections saved and printed.
 * ctrl A selects whole text (should be done by RiscOSLib).
 * version now set by EditId in Messages file - was from templates file.

Admin:
 Tested on Iyonix RO510

Version 1.24. Tagged as 'SrcEdit-1_24'
@
text
@d35 2
d38 4
a41 3
#define srcedmenus_MClear  6
#define srcedmenus_MHelp   8
#define srcedmenus_MLoad   9
d51 1
a51 1
   BOOL noscrap = txtscrap_selectowner() == 0;
d60 1
a60 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 1;   /* re-enable Save */
d62 1
a62 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 3;   /* re-enable Edit */
d82 3
a84 1
   if (noscrap)
d86 3
a89 3
       subentry->iconflags &= ~wimp_INOSELECT;
   subentry = ((wimp_menuitem *)(submstr+1)) + srcedmenus_MLoad - 1;
   if (noscrap)
a90 2
   else
       subentry->iconflags &= ~wimp_INOSELECT;
d105 1
a105 1
   BOOL noscrap = txtscrap_selectowner() == 0;
d114 1
a114 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 1;   /* grey out Save */
d134 3
a136 3
   /* grey out first 7 entries (except Clear) */
   j=0xA3;
   for (i = 0; i < 7; i++)
d145 3
a147 1
   if (noscrap)
d149 3
a152 3
       subentry->iconflags &= ~wimp_INOSELECT;
   subentry = ((wimp_menuitem *)(submstr+1)) + srcedmenus_MLoad - 1;
   if (noscrap)
a153 3
   else
       subentry->iconflags &= ~wimp_INOSELECT;

d156 1
a156 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 3;
@


1.2
log
@  Import of SrcEdit 1.23.
Detail:
  Appears to be substantially more complete than the version previously
  imported. Thanks to Rob Sprowson for bringing this to our attention.
Admin:
  Builds, and tested briefly - seems to fix the more obvious bugs that were
  present in the previous version.

Version 1.23. Tagged as 'SrcEdit-1_23'
@
text
@d100 1
a100 1
   int i;
a112 2
   topentry = ((wimp_menuitem *)(mstr+1)) + 3;   /* grey out Edit */
   topentry->iconflags |= wimp_INOSELECT;
d118 3
a120 2
   /* grey out entries 2-7 (set type .. wordwrap) */
   for (i = 2; i < 8; i++)
d122 1
d132 1
d135 1
a135 1
        if (i == srcedmenus_MClear - 1) continue;
d153 13
@


1.1
log
@Initial revision
@
text
@d36 3
a38 2
#define srcedmenus_MHelp   7
#define srcedmenus_MLoad   8
d42 1
a42 1
{  
d57 1
a57 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 1;   /* grey out Save */
d59 1
a59 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 3;   /* grey out Edit */
d66 3
a68 3
   /* re-enable entries 2,3,4,5 (new view, column tab, overwrite, wordwrap) */
   for (i = 3; i < 6; i++)
   {   
d74 1
a74 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 2;
d78 1
a78 1
   subentry = ((wimp_menuitem *)(submstr+1)) + 6;
d83 1
a83 1
   subentry = ((wimp_menuitem *)(submstr+1)) + 7;
d96 1
a96 1
{  
d120 3
a122 3
   /* grey out entries 2,3,4,5 (new view, column tab, overwrite, wordwrap) */
   for (i = 3; i < 6; i++)
   {   
d128 1
a128 1
   topentry = ((wimp_menuitem *)(mstr+1)) + 2;
d130 3
a132 3
   
   /* grey out first 6 entries */
   for (i = 0; i < 6; i++)
d134 1
d140 1
a140 1
   subentry = ((wimp_menuitem *)(submstr+1)) + 6;
d145 1
a145 1
   subentry = ((wimp_menuitem *)(submstr+1)) + 7;
d150 1
a150 1
   
d174 1
a174 1
         
@


1.1.1.1
log
@  Initial import of !SrcEdit, exported from the old SrcFiler repository
  and given a modern build structure.
Detail:
  I'm not convinced these are actually the most recent sources. They didn't
  build as-is against a "modern" RISC_OSLib, and I had to substitute the
  !Run/!Boot/Messages etc from the C/C++ tools release to make it work.
  There are still some issues - some menus are incorrectly created, and one
  source file invokes a compiler bug.
Admin:
  Not particularly thoroughly tested.

Version 0.01. Tagged as 'SrcEdit-0_01'
@
text
@@
