head	1.2;
access;
symbols
	SrcEdit-1_34:1.2
	SrcEdit-1_33:1.2
	SrcEdit-1_32:1.2
	SrcEdit-1_31:1.2
	SrcEdit-1_30:1.2
	SrcEdit-1_29:1.2
	SrcEdit-1_28:1.2
	SrcEdit-1_27:1.2
	SrcEdit-1_26:1.2
	SrcEdit-1_25:1.1.1.1
	SrcEdit-1_24:1.1.1.1
	SrcEdit-1_23:1.1.1.1
	SrcEdit-0_02:1.1.1.1
	SrcEdit-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.08.21.19.46.59;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	Ft3xXiFOAiNJZrhw;

1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.05.24.17.50.40;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Change to use '_Version' for info box
Reflects change in little brother !Edit 1.67.[1~
Sources to single linked list handler sync'd with !Edit too.
Tested briefly, running disc version and loading a file.

Version 1.26. Tagged as 'SrcEdit-1_26'
@
text
@/* Copyright 2007 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> h.Slist
 * Title:       Slist - singly-linked lists
 * Author:      JGT (converted from MJJ)
 *              Copyright (C) 1988 Acorn Computers Limited
 */

#ifndef _slist_h
#define _slist_h

/* This is a generic package for handling singly-linked lists. The critical
 assumption is that the first item of a record to be added to the list is used
 as the link field. e.g.

 TYPE
   ListPtr = POINTER TO ListRec;
   ListRec = RECORD
     next: ListPtr;    (* 'slist' can be used to chain 'ListRec' items *)
     ...blah blah...   (* on their 'next' field because it is the first *)
   END;                (* field in the record *)
  
*/

extern void * slist_add(void * listhead, void * newelement);
/* Adds 'newelement' to the front of the list whose head is 'listhead'
   Returns new value of listhead. */

extern void * slist_addend(void * listhead, void * newelement);
/* Adds 'newelement' to the end of the list whose head is 'listhead'.
   The link field of 'newelement' is set to NIL
   Returns new value of listhead. */

extern void * slist_remove(void * listhead, void * element);
/* Removes 'element' from the list whose head is 'listhead'
   Returns new value of listhead. */

extern void * slist_joinend(void * listhead, void * newlist);
/* Adds the list headed by 'newlist' to the end of 'listhead'
   Returns new value of listhead. */

#endif

/* End slist.h */
@


1.1
log
@Initial revision
@
text
@d21 2
a22 2
#ifndef __slist_h
#define __slist_h
d31 1
a31 1
     next: ListPtr;    (* 'Slist' can be used to chain 'ListRec' items *)
d37 1
a37 1
extern void *slist_add(void *listhead, void *newelement);
d41 1
a41 1
extern void *slist_addend(void *listhead, void *newelement);
d46 1
a46 1
extern void *slist_remove(void *listhead, void *element);
d50 1
a50 1
extern void *slist_joinend(void *listhead, void *newlist);
d56 1
@


1.1.1.1
log
@  Initial import of !SrcEdit, exported from the old SrcFiler repository
  and given a modern build structure.
Detail:
  I'm not convinced these are actually the most recent sources. They didn't
  build as-is against a "modern" RISC_OSLib, and I had to substitute the
  !Run/!Boot/Messages etc from the C/C++ tools release to make it work.
  There are still some issues - some menus are incorrectly created, and one
  source file invokes a compiler bug.
Admin:
  Not particularly thoroughly tested.

Version 0.01. Tagged as 'SrcEdit-0_01'
@
text
@@
