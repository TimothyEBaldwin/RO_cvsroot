head	4.3;
access;
symbols
	FontEd-0_36:4.3
	FontEd-0_35:4.3
	FontEd-0_34-moved:4.3
	Manager-3_76:4.3
	Manager-3_75:4.3
	Manager-3_74:4.3
	Manager-3_73:4.3
	Manager-3_72:4.3
	Manager-3_71:4.3
	Manager-3_70:4.3
	Manager-3_69:4.3
	Manager-3_68:4.3
	Manager-3_67:4.3
	Manager-3_66:4.3
	Manager-3_65:4.3
	Manager-3_64:4.3
	Manager-3_63:4.3
	Manager-3_62:4.3
	Manager-3_61:4.3
	Manager-3_60:4.3
	RO_5_07:4.3
	Manager-3_59:4.3
	Manager-3_58:4.3
	Manager-3_57:4.3
	Manager-3_56:4.3
	Manager-3_55:4.3
	Manager-3_54:4.3
	Manager-3_53:4.3
	Manager-3_52:4.2
	Manager-3_51:4.2
	Manager-3_50:4.2
	Manager-3_49:4.2
	dellis_autobuild_BaseSW:4.2
	Manager-3_48:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.2
	Manager-3_47:4.2
	Manager-3_46:4.2
	Manager-3_45:4.2
	Manager-3_44:4.2
	Manager-3_43:4.2
	Manager-3_42:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Manager-3_41-4_2_2_13:4.1.8.1
	Ursula_RiscPC:4.1.0.10
	Manager-3_41-4_2_2_12:4.1.8.1
	Manager-3_41-4_2_2_11:4.1.8.1
	Manager-3_41-4_2_2_10:4.1.8.1
	Manager-3_41-4_2_2_9:4.1.8.1
	Manager-3_41-4_2_2_8:4.1.8.1
	Manager-3_41-4_2_2_7:4.1.8.1
	Manager-3_41-4_2_2_6:4.1.8.1
	Manager-3_41-4_2_2_5:4.1.8.1
	Manager-3_41-4_2_2_4:4.1
	Manager-3_41-4_2_2_3:4.1
	Manager-3_41-4_2_2_2:4.1
	Manager-3_41-4_2_2_1:4.1
	NRaine:4.1.0.8
	Manager-3_41:4.1
	Ursula_merge:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	bavison_FontManager-3_40:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Manager-3_40-1_1_2_2:4.1.7.1
	smiddle_2Mar1998_Fonts16:4.1.7.1.0.4
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2002.02.22.13.31.54;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	99.02.18.16.49.37;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.44.13;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.8.1;
next	;

4.1.1.1
date	96.11.05.09.44.13;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.23.59;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.54.53;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.17.32;	author nturton;	state Exp;
branches;
next	;

4.1.8.1
date	98.10.13.12.18.59;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.3
log
@* Now handles new "/uXXXXX" identifiers in encoding files.
* 32-bit scaffold table support added (see Doc.BigTables)
* Occasional crash when font cache full fixed (bug introduced at same time
  as, but independently from, Unicode support).

And in FontEd:

* Nice new icon
* 3D look-and-feel
* Solid dragging
* Big table support
* Can now handle more than 15K of scaffolding
* Packing and dependencies fixed - can now reliably load and save our
  Far Eastern fonts (and they load faster, because it doesn't try to
  "correct" the packing)
* Width of font index display now adjustable
* Font index grid now drawn correctly with large fonts
* Font index bitmap generation accelerated

Version 3.53. Tagged as 'Manager-3_53'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*  Title: > h.misc
 */

/* ---- sundry data types ------------------------------------------------- */


#define e(x,y)   { register os_error *e = y; if (e!=NULL) x; }
#define erx(x)   { register os_error *e = x; if (e!=NULL) errorexit(e); }
#define er(y)    { register os_error *e = y; if (e!=NULL) return(e); }
#define erc(h,y) { register os_error *e = y; if (e!=NULL) { closefile(h); return(e); } }

#define returnerr(err) { static os_error erxxx = { 1, err }; return(&erxxx); }

#define true 1
#define false 0

#define big 0x10000000

typedef	struct bitset {
  unsigned bits[65536/32/32];  /* 65536 chars, 32 chars per chunk, 32 chunk bits per int */
} bitset;

#define	bitset_set(n, p)   ((p)->bits[(n)/32] |= (1 << ((n) % 32)))
#define	bitset_clr(n, p)   ((p)->bits[(n)/32] &= ~(1 << ((n) % 32)))
#define	bitset_isset(n, p) ((p)->bits[(n)/32] & (1 << ((n) % 32)))
#define	bitset_copy(f, t)  memcpy(t, f, sizeof(*(f)))
#define	bitset_zero(p)     memset(p, 0, sizeof(*(p)))

/* ---- global variables -------------------------------------------------- */


extern wimp_w      handle;
extern int         wimpversion;
extern int         mousex,mousey;
extern int         bx,by,
                   xsize,ysize,
                   gx0,gy0,gx1,gy1,
                   x0,y0,x1,y1;
extern int         minx,miny,maxx,maxy;


/* ---- functions --------------------------------------------------------- */


void inithandlers(void);
os_error * front(wimp_w handle);
os_error * openxy(wimp_w handle, int x, int y);
os_error * getwindowstate(wimp_w h);
void invalidate(wimp_w h, int x0, int y0, int x1, int y1);

void finish(char *message);
void errorexit(os_error *e);
void cleanexit(int val);
os_error *erm(const char *debugmess, os_error *err);
void mytracef_open(char *filename);
void mytracef_close(void);
void mytracef(char *,...);

void hourglass_on(void);
void hourglass_off(void);
void hourglass_smash(void);
void hourglass_percentage(int percentage);

os_error * osfind(int action, char *filename, int *handlep);
os_error * osgbpb(int action, int file_handle, void *data_addr, int buf_len, int ptr);
os_error * closefile(int h);

int dboxquery(const char *message, const char *buttons);
void wimp_seteorcolour(int bg, int fg);
@


4.2
log
@Unicode Font Manager moved onto trunk.

Version 3.42. Tagged as 'Manager-3_42'
@
text
@d75 1
@


4.1
log
@Initial revision
@
text
@d33 9
d47 1
d75 1
d81 2
a82 1
int dboxquery(const char *message);
@


4.1.8.1
log
@Various changes to cope with large font files (up to 65536 characters).
Loads Encoding files to find character names.
Improved display in 8 or more bpp modes.
@
text
@a32 9
typedef	struct bitset {
  unsigned bits[65536/32/32];  /* 65536 chars, 32 chars per chunk, 32 chunk bits per int */
} bitset;

#define	bitset_set(n, p)   ((p)->bits[(n)/32] |= (1 << ((n) % 32)))
#define	bitset_clr(n, p)   ((p)->bits[(n)/32] &= ~(1 << ((n) % 32)))
#define	bitset_isset(n, p) ((p)->bits[(n)/32] & (1 << ((n) % 32)))
#define	bitset_copy(f, t)  memcpy(t, f, sizeof(*(f)))
#define	bitset_zero(p)     memset(p, 0, sizeof(*(p)))
a37 1
extern int         wimpversion;
a64 1
void hourglass_percentage(int percentage);
d70 1
a70 2
int dboxquery(const char *message, const char *buttons);
void wimp_seteorcolour(int bg, int fg);
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
