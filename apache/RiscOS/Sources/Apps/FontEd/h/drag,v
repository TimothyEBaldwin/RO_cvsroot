head	4.1;
access;
symbols
	FontEd-0_36:4.1
	FontEd-0_35:4.1
	FontEd-0_34-moved:4.1
	Manager-3_76:4.1
	Manager-3_75:4.1
	Manager-3_74:4.1
	Manager-3_73:4.1
	Manager-3_72:4.1
	Manager-3_71:4.1
	Manager-3_70:4.1
	Manager-3_69:4.1
	Manager-3_68:4.1
	Manager-3_67:4.1
	Manager-3_66:4.1
	Manager-3_65:4.1
	Manager-3_64:4.1
	Manager-3_63:4.1
	Manager-3_62:4.1
	Manager-3_61:4.1
	Manager-3_60:4.1
	RO_5_07:4.1
	Manager-3_59:4.1
	Manager-3_58:4.1
	Manager-3_57:4.1
	Manager-3_56:4.1
	Manager-3_55:4.1
	Manager-3_54:4.1
	Manager-3_53:4.1
	Manager-3_52:4.1
	Manager-3_51:4.1
	Manager-3_50:4.1
	Manager-3_49:4.1
	dellis_autobuild_BaseSW:4.1
	Manager-3_48:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	Manager-3_47:4.1
	Manager-3_46:4.1
	Manager-3_45:4.1
	Manager-3_44:4.1
	Manager-3_43:4.1
	Manager-3_42:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Manager-3_41-4_2_2_13:4.1
	Ursula_RiscPC:4.1.0.10
	Manager-3_41-4_2_2_12:4.1
	Manager-3_41-4_2_2_11:4.1
	Manager-3_41-4_2_2_10:4.1
	Manager-3_41-4_2_2_9:4.1
	Manager-3_41-4_2_2_8:4.1
	Manager-3_41-4_2_2_7:4.1
	Manager-3_41-4_2_2_6:4.1
	Manager-3_41-4_2_2_5:4.1
	Manager-3_41-4_2_2_4:4.1
	Manager-3_41-4_2_2_3:4.1
	Manager-3_41-4_2_2_2:4.1
	Manager-3_41-4_2_2_1:4.1
	NRaine:4.1.0.8
	Manager-3_41:4.1
	Ursula_merge:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	bavison_FontManager-3_40:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Manager-3_40-1_1_2_2:4.1.7.1
	smiddle_2Mar1998_Fonts16:4.1.7.1.0.4
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.44.11;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.44.11;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.23.30;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.54.43;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.17.22;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*  Title: > h.drag
 */

#define bbc_inkey(n) my_inkey(n)      /* bodge cos of RISC OS bug */
int my_inkey(int n);


typedef enum {
  DR_NONE,              /* not dragging */
  DR_FONT,              /* drag select to copy a character */
  DR_FONTMOVE,          /* SHIFT-drag select to move a character */
  DR_COMPOSITE,         /* SHIFT-drag adjust to construct composite character */
  DR_DECOMPOSITE,       /* CTRL-drag adjust to deconstruct composite character */
  DR_BASECHAR,          /* dragging a scaffold set */
  DR_POINT,             /* dragging a control point */
  DR_FILE,              /* dragging a font file */
  DR_FILE2,             /* dragging a metrics file */
  DR_SCAFFOLDX,         /* dragging a scaffold line (vertical) */
  DR_SCAFFOLDY,         /* dragging a scaffold line (horizontal) */
  DR_RECTSCAFFOLD,      /* dragging a rectangle to select some points */
  DR_SPRITEBOX          /* dragging the background sprite box */
} dragtype;


typedef enum {
  SPB_x0y0 = 1,
  SPB_x1y0,             /* the corner bits */
  SPB_x1y1,
  SPB_x0y1,
  SPB_x0,
  SPB_y0,               /* the edge bits */
  SPB_x1,
  SPB_y1,
  SPB_MAIN,             /* dragging whole thing */
  SPB_MIN = SPB_x0y0,   /* extreme values (for enumeration) */
  SPB_MAX = SPB_y1,
  SPB_NONE = 0,
  SPB_ADJUST = 0x80     /* extra bit for dragging with ADJUST */
} spb_type;


typedef struct
{
  dragtype type;
  int          xoff;          /* offset from x,y to actual line */
  int          yoff;
  Wind_Link *wlink;    /* dragging from this window */

  struct {
    int          minx,miny,maxx,maxy;
  } limit;

  union {

    struct {                         /* DR_FONT */
      Char_Block *fromchar;
    } font;

    struct {                         /* DR_POINT */
      Pt_Block   * pt;
    } point;

    struct {                         /* DR_SCAFFOLD */
      int          index, x, y;      /* (last known pointer position) */
    } scaffold;

    struct {                         /* DR_RECTSCAFFOLD */
      int          x0, y0, x1, y1;
    } rectangle;

    struct {
      spb_type     subtype;          /* DR_SPRITEBOX subtype, ie. which corner */
      int          oldhandlex;       /* last position */
      int          oldhandley;
    } spritebox;

  } d;          /* data specific to each type */

} dragboxstr;


/* ---- global variables -------------------------------------------------- */


extern dragboxstr  dragbox;
extern dragboxstr  dragcopy;

extern wimp_box    handlebox;       /* set up in scanhandles() */
extern int         handlex;
extern int         handley;

extern int         showpointer;
extern int         showcoords;
extern int         showwidth;
extern int         showbbox;
extern int         showobox;
extern int         showfbox;
extern int         showsprites;
extern int         showhandles;
extern int         showendpoints;
extern int         showcharnames;


/* ---- functions --------------------------------------------------------- */


#define nullindex(p) ((p->nextpt[0])?((p->nextpt[1])?-1:1):0)
#define findlink(p,p2) ((p->nextpt[0]!=p2)?((p->nextpt[1]!=p2)?-1:1):0)


os_error * event_mouse(wimp_mousestr);
os_error * editbitmap(Wind_Link * wlink, wimp_mousestr * mouse);

os_error * event_dragbox(void);
os_error * draggingpoint(void);
os_error * dragfixedbox(int cx0,int cy0,int cx1,int cy1);

os_error * findchar(Char_Block **charpp, Wind_Link *wlink, int mousex, int mousey);

int scaffoldpoint(Pt_Block *pt);
void scafflink(Pt_Block *pt, int i);

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
