head	4.1;
branch	4.1.1;
access;
symbols
	Draw-1_30:4.1.1.1
	Draw-1_29:4.1.1.1
	Draw-1_28:4.1.1.1
	Draw-1_27:4.1.1.1
	Draw-1_26:4.1.1.1
	Draw-1_25:4.1.1.1
	Draw-1_24:4.1.1.1
	Draw-1_23:4.1.1.1
	Draw-1_22:4.1.1.1
	Draw-1_21:4.1.1.1
	Draw-1_20:4.1.1.1
	Draw-1_19:4.1.1.1
	Draw-1_18:4.1.1.1
	Draw-1_17:4.1.1.1
	Draw-1_16:4.1.1.1
	Draw-1_15:4.1.1.1
	Draw-1_14:4.1.1.1
	RO_5_07:4.1.1.1
	Draw-1_13:4.1.1.1
	Draw-1_12:4.1.1.1
	Draw-1_11:4.1.1.1
	Ursula_merge:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-10Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.4
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.2
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.19.08;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.19.08;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.23.46;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the RISCOS library for writing applications in C for RISC OS. It may be  *
 * used freely in the creation of programs for Archimedes. It should be     *
 * used with Acorn's C Compiler Release 3 or later.                         *
 *                                                                          *
 ***************************************************************************/
/*
 * Title: bezierarc.h
 * Purpose: Arc to bezier conversion.
 *
 */

/*
 * Version: 0.10
 * History: 0.10 - 12 June 1989 - header added
 *
 */

/* Definition of a coordinate. Note that Draw coordinates may be freely cast
   to this
 */

typedef struct {int x, y;} bezierarc_coord;

/* Constants */
#define bezierarc_pi      3.1415927
#define bezierarc_rad90   (bezierarc_pi/2)
#define bezierarc_rad360  (bezierarc_pi*2)

/* Construct a bezier arc of less than 90 degrees */
void bezierarc_short(
    bezierarc_coord   centre,
    double            startAngle,
    double            endAngle,
    int               radius,
    bezierarc_coord   *start,
    bezierarc_coord   *end,
    bezierarc_coord   *control1,
    bezierarc_coord   *control2);

/* Construct a 90 degree bezier arc */
void bezierarc_90(
    bezierarc_coord   centre,
    double            startAngle,
    int               radius,
    bezierarc_coord   *start,
    bezierarc_coord   *end,
    bezierarc_coord   *control1,
    bezierarc_coord   *control2);

/* Construct a set of points defining a circle */
void bezierarc_circle(
    bezierarc_coord   centre,
    int               radius,
    bezierarc_coord   *p /* array for 13 points */);

/* Get points for first segment of an arc -> number of segments */
int bezierarc_start(
    bezierarc_coord   centre,
    double            startAngle,
    double            endAngle,
    int               radius,
    bezierarc_coord   *start,
    bezierarc_coord   *end,
    bezierarc_coord   *bezier1,
    bezierarc_coord   *bezier2);

/* Next segment of arc -> 0 or next segment number */
int bezierarc_segment(
    int               segment,
    bezierarc_coord   *end,
    bezierarc_coord   *bezier1,
    bezierarc_coord   *bezier2);
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
