head	4.2;
access;
symbols
	Edit-1_73-1:4.2
	Edit-1_73:4.2
	Edit-1_72:4.2
	Edit-1_71:4.2
	Edit-1_70:4.2
	Edit-1_69:4.2
	Edit-1_68:4.2
	Edit-1_67:4.2
	Edit-1_66:4.1.1.1
	Edit-1_65:4.1.1.1
	Edit-1_64:4.1.1.1
	RO_5_07:4.1.1.1
	Edit-1_63:4.1.1.1
	Edit-1_62:4.1.1.1
	Edit-1_61:4.1.1.1
	Edit-1_60:4.1.1.1
	Edit-1_59:4.1.1.1
	Edit-1_58:4.1.1.1
	Edit-1_57:4.1.1.1
	Edit-1_56:4.1.1.1
	Ursula_merge:4.1.1.1
	Edit-1_55:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-10Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.4
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.2
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2012.08.21.19.40.47;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	5YBJjFhxR03zXrhw;

4.1
date	96.11.05.09.19.43;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.19.43;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.26.35;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Fix ROM resources phase to not install !Sprites22
When in ROM there's no need to stuff the sprites into ResourceFS since they're in the Wimp pool. Moreover, only !Sprites22 was being installed, so if booting into a low res mode !Edit wouldn't start because !Sprites was not found.
* Ammended Makefile to not do sprites during resources
* Ammended Makefile to do both resolution sprites for the disc install
* Used StdTools and ModuleLibs shared makefiles
* Resolved some of the easy warnings
* Changed to use '_Version' as the info box token, so allowing use of the centralised AwkVers script
* Added ROM !Boot file (as !Draw has) which is a cutdown version of the disc one
Tested briefly, still loads files and opens task windows OK.

Version 1.66. Tagged as 'Edit-1_66'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> c.Slist
 * Title:       Slist - singly-linked lists
 * Author:      JGT (converted from MJJ)
 *              Copyright (C) 1988 Acorn Computers Limited
 */

#include <stdio.h>
#include "slist.h"

typedef struct listrec
{
  struct listrec *next;
} listrec_t;

#define next_(p) (((listrec_t *)(p))->next)

void * slist_add(void *listhead, void *newelement)
{
next_(newelement) = listhead;
return newelement;
} /* End procedure */

void * slist_addend(void *listhead, void *newelement)
{
  void * t,
       * tf;
  
  next_(newelement) = NULL;
  if (!listhead) return newelement;
  t = listhead;
  do
  {
    tf = next_(t);
    if (!tf) break;
    t = tf;
  } while (1);
  next_(t) = newelement;
  return listhead;
} /* End procedure */

void * slist_remove(void *listhead, void *element)
{
  void * t,
       * tf;
  
  if (!listhead) return NULL;
  if (listhead == element) return next_(listhead);
  t = listhead;
  do
  {
    tf = next_(t);
    if (!tf) return listhead;
    if (tf == element)
    {
      /* match - remove it */
      next_(t) = next_(tf);
      return listhead;
    }; /* End if */
    t = tf; /* onto next */
  } while (1);
} /* End procedure */

void * slist_joinend(void *listhead, void *newlist)
{
  void * t,
       * tf;
  
  if (!listhead) return newlist;
  t = listhead;
  do
  {
    tf = next_(t);
    if (!tf) break;
    t = tf;
  } while (1);
  next_(t) = newlist;
  return listhead;
} /* End procedure */

/* End slist.c */
@


4.1
log
@Initial revision
@
text
@d22 1
a22 2

typedef struct listrec * ListPtr;
d26 2
a27 4
  ListPtr next;
};

#define next_(p) (((ListPtr)p)->next)
d29 1
a29 3
void * Slist_Add(listhead, newelement)
void * listhead;
void * newelement;
d31 1
d37 1
a37 4
void * Slist_AddE(listhead, newelement)
void * listhead;
void * newelement;

d39 14
a52 14
void * t,
     * tf;

next_(newelement) = NULL;
if (!listhead) return newelement;
t = listhead;
do
{
  tf = next_(t);
  if (!tf) break;
  t = tf;
} while (1);
next_(t) = newelement;
return listhead;
d55 1
a55 4
void * Slist_Remove(listhead, element)
void * listhead;
void * element;

d57 7
a63 11
void * t,
     * tf;

if (!listhead) return NULL;
if (listhead == element) return next_(listhead);
t = listhead;
do
{
  tf = next_(t);
  if (!tf) return listhead;
  if (tf == element)
d65 10
a74 6
    /* match - remove it */
    next_(t) = next_(tf);
    return listhead;
  }; /* End if */
  t = tf; /* onto next */
} while (1);
d77 1
a77 4
void * Slist_JoinE(listhead, newlist)
void * listhead;
void * newlist;

d79 13
a91 13
void * t,
     * tf;

if (!listhead) return newlist;
t = listhead;
do
{
  tf = next_(t);
  if (!tf) break;
  t = tf;
} while (1);
next_(t) = newlist;
return listhead;
d94 1
a94 1
/* End Slist.c */
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
