head	4.2;
access;
symbols
	Edit-1_73-1:4.2
	Edit-1_73:4.2
	Edit-1_72:4.2
	Edit-1_71:4.2
	Edit-1_70:4.2
	Edit-1_69:4.2
	Edit-1_68:4.2
	Edit-1_67:4.2
	Edit-1_66:4.1.1.1
	Edit-1_65:4.1.1.1
	Edit-1_64:4.1.1.1
	RO_5_07:4.1.1.1
	Edit-1_63:4.1.1.1
	Edit-1_62:4.1.1.1
	Edit-1_61:4.1.1.1
	Edit-1_60:4.1.1.1
	Edit-1_59:4.1.1.1
	Edit-1_58:4.1.1.1
	Edit-1_57:4.1.1.1
	Edit-1_56:4.1.1.1
	Ursula_merge:4.1.1.1
	Edit-1_55:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-10Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.4
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.2
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2012.08.21.19.40.49;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	5YBJjFhxR03zXrhw;

4.1
date	96.11.05.09.19.45;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.19.45;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.26.49;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Fix ROM resources phase to not install !Sprites22
When in ROM there's no need to stuff the sprites into ResourceFS since they're in the Wimp pool. Moreover, only !Sprites22 was being installed, so if booting into a low res mode !Edit wouldn't start because !Sprites was not found.
* Ammended Makefile to not do sprites during resources
* Ammended Makefile to do both resolution sprites for the disc install
* Used StdTools and ModuleLibs shared makefiles
* Resolved some of the easy warnings
* Changed to use '_Version' as the info box token, so allowing use of the centralised AwkVers script
* Added ROM !Boot file (as !Draw has) which is a cutdown version of the disc one
Tested briefly, still loads files and opens task windows OK.

Version 1.66. Tagged as 'Edit-1_66'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> h.Slist
 * Title:       Slist - singly-linked lists
 * Author:      JGT (converted from MJJ)
 *              Copyright (C) 1988 Acorn Computers Limited
 */

#ifndef _slist_h
#define _slist_h

/* This is a generic package for handling singly-linked lists. The critical
 assumption is that the first item of a record to be added to the list is used
 as the link field. e.g.

 TYPE
   ListPtr = POINTER TO ListRec;
   ListRec = RECORD
     next: ListPtr;    (* 'slist' can be used to chain 'ListRec' items *)
     ...blah blah...   (* on their 'next' field because it is the first *)
   END;                (* field in the record *)
  
*/

extern void * slist_add(void * listhead, void * newelement);
/* Adds 'newelement' to the front of the list whose head is 'listhead'
   Returns new value of listhead. */

extern void * slist_addend(void * listhead, void * newelement);
/* Adds 'newelement' to the end of the list whose head is 'listhead'.
   The link field of 'newelement' is set to NIL
   Returns new value of listhead. */

extern void * slist_remove(void * listhead, void * element);
/* Removes 'element' from the list whose head is 'listhead'
   Returns new value of listhead. */

extern void * slist_joinend(void * listhead, void * newlist);
/* Adds the list headed by 'newlist' to the end of 'listhead'
   Returns new value of listhead. */

#endif

/* End slist.h */
@


4.1
log
@Initial revision
@
text
@d21 2
a22 2
#ifndef _Slist_h
#define _Slist_h
d31 1
a31 1
     next: ListPtr;    (* 'Slist' can be used to chain 'ListRec' items *)
d37 1
a37 1
extern void * Slist_Add(void * listhead, void * newelement);
d41 1
a41 1
extern void * Slist_AddE(void * listhead, void * newelement);
d46 1
a46 1
extern void * Slist_Remove(void * listhead, void * element);
d50 1
a50 1
extern void * Slist_JoinE(void * listhead, void * newlist);
d56 1
a56 1
/* End Slist.h */
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
