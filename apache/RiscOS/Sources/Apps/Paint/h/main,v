head	4.7;
access;
symbols
	Paint-2_23-1:4.7
	Paint-2_23:4.7
	Paint-2_22:4.7
	Paint-2_21:4.7
	Paint-2_20:4.7
	Paint-2_19:4.7
	Paint-2_18:4.7
	Paint-2_17:4.7
	Paint-2_16:4.7
	Paint-2_15:4.6
	Paint-2_14:4.5
	Paint-2_13:4.5
	Paint-2_12:4.5
	Paint-2_11:4.4
	Paint-2_10:4.4
	Paint-2_09:4.4
	Paint-2_08:4.4
	Paint-2_07:4.4
	Paint-2_06:4.4
	Paint-2_05:4.4
	Paint-2_04:4.4
	Paint-2_03:4.4
	Paint-2_02:4.3
	Paint-2_01:4.2
	Paint-2_00:4.2
	Paint-1_99:4.2
	Paint-1_98:4.2
	Paint-1_97:4.1.1.1
	RO_5_07:4.1.1.1
	Paint-1_96:4.1.1.1
	Paint-1_95:4.1.1.1
	Paint-1_94:4.1.1.1
	Ursula_merge:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-10Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.4
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.2
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.7
date	2014.03.27.23.18.37;	author jlee;	state Exp;
branches;
next	4.6;
commitid	zsqBYJ6Lrncsqoux;

4.6
date	2013.08.06.23.23.05;	author jlee;	state Exp;
branches;
next	4.5;
commitid	8Tn6wOJxX7xmWr0x;

4.5
date	2012.08.22.07.18.12;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	jkPgRNvjP7QROvhw;

4.4
date	2010.12.05.19.05.05;	author rsprowson;	state Exp;
branches;
next	4.3;

4.3
date	2010.11.29.20.55.29;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	2007.07.27.21.23.34;	author srevill;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.20.14;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.20.14;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.28.42;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Various bugfixes. Improve sprite info dialog.
Detail:
  - Handling of currently selected foreground & background colour rewritten; colour is now stored as a 'main_colour' struct, in order to allow representation of alpha level, pixel colour/palette index (which must be 4 bytes for things like CMYK) and ECF index (previously encoded as negative colour values). Fixes crashes when editing RISC OS 5 32bpp ARGB sprites. Note that although the alpha level is now stored internally, and tools should mostly respect it, palette/colour picker limitations mean that only 0/255 is available when selecting colours.
  - "Select colour" code rewritten to decode all the new pixel formats correctly; colours_entry() now accepts a sprite mode word instead of a number-of-colours value
  - "Full info" display tweaked to give more information about the mask (now displays no mask, normal mask, alpha mask, alpha channel)
  - Sprite info dialog extended to display lots more information, including OS version compatibility
  - Fix sprite menu to disallow add/remove mask option if the sprite has a RISC OS 5 alpha channel
  - Fix ECF pattern that's used for the background of masked sprites to get black/white colour values from ColourTrans when in >8bpp modes, to ensure correct colours in new RISC OS 5 modes
  - Fix palette window to render ECF patterns correctly - when creating the sprite that shows the ECF pattern in the palette, psprite_setup_ecf() was failing to set its palette due to passing a sprite pointer to ColourTrans but setting the flags as if it was a sprite name
  - Fix sprwindow_redisplay() and sprwindow_invalidate() to refresh the display correctly when in full info mode; was previously assuming only one column of sprites visible
  - Fix sprites with alpha channels to have the mask ECF pattern plotted in the background
  Files changed:
  - Resources/UK/Messages, Resources/UK/Templates,fec, c/Colours, c/Main, c/Menus, c/PSprite, c/SprWindow, c/Tools, h/Colours, h/MenuD, h/PSprite, h/main
Admin:
  Tested on BB-xM
  Amongst others, fixes issue reported on forums with spritefile window not refreshing correctly when in full info display with multiple columns:
  http://www.riscosopen.org/forum/forums/8/topics/2146?page=5#posts-31272


Version 2.16. Tagged as 'Paint-2_16'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef main_H
#define main_H

/* > main.h */
/*
 *  Main header for the Paint program
 *
 *  DAHE, 04 Sep 89: heap allocation added
 *        07 Sep 89: symbolic SWI numbers
 *  JAB,  23 Jan 91: Added structure 'snapshotstr' for snapshot
 *                   implementation
 *  CDP,  27 Jan 92: Added include for fixes.h.
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#include "wimp.h"
#include "sprite.h"
#include "win.h"
#include "msgs.h"
#include "colourpick.h"

#include "ftrace.h"

#if TRACE
  #define spencer(s) s;
  #define spencer2(s) s

  #define WHETHER(c) ((c)? "true": "false")
#else
  #define spencer(s) ;
  #define spencer2(s)
#endif

#define ENTRIES(n) ((n) <  3? 1 << (1 << (n)): (n) == 3? 16: 0)
#define MIN(x, y) ((x) < (y)? (x): (y))
#define MAX(x, y) ((x) > (y)? (x): (y))

#define toolspacesize 9
    /* amount of scratchspace a tool is given */

#define NAME_LIMIT 12 /*not defined in sprite.h!*/

typedef struct
{
  int scale_xmul;
  int scale_ymul;
  int scale_xdiv;
  int scale_ydiv;
} main_scaling_block;        /* ready for use by sprite scaling ops */

typedef struct
{
  char set [20];
  sprite_area *sarea;
} main_ecf;

typedef
  struct main_ttab
  { struct main_ttab *link;
    int refcount;

    int smode, spalsize;
    int *spal;
    int dlog2bpp,dncolour,dmodeflags;
    int *dpal; /*If these match, the rest must be the same.*/

    int ttab_size;
    char *table;     /* flex'ed real translation table */
    int ttab2_size;
    char *table2;     /* flex'ed real GCOL translation table */
  }
  main_ttab;

typedef struct main_sprite_window
{
  struct main_sprite_window *link;
  struct main_window        *window;
  struct main_sprite        *sprite;
  char                      *title;
  main_scaling_block         blobsize;
  char                       gridcol;
  BOOL                       read_only;
} main_sprite_window;

typedef struct main_colour
{
  unsigned int colour; /* Palette index/colour number, without alpha channel */
  char         alpha;  /* 0-255. If 1bpp (i.e. on/off mask) only valid values are 0 & 255 */
  BOOL         ecf;    /* True if colour is actually ECF index */
} main_colour;

/* main_sprite flags */
#define MSF_SELECTED    1
typedef struct main_sprite
{
  struct main_sprite *link;
  struct main_file   *file;        /* parent file info */
  main_sprite_window *windows;     /* windows onto sprite */
  int                 offset;      /* of sprite in file */
  int                 spriteno;    /* index of sprite in file */
  main_ttab          *transtab;    /* colour translation table */
  main_scaling_block  mode;        /* mode conversion */
  main_scaling_block  iconsize;
  wimp_w              colourhandle;
  main_ecf            ECFs [4];
  main_colour         gcol;        /* current painting colour */
  main_colour         gcol2;       /* current colour for ADJUST */
  int                 toolspace [toolspacesize]; /* tool scratch space */
  colourpicker_d      colourdialogue; /* handle of colourpicker */
  char               *colourtitle; /* indirected colour title */
  char                needsnull;   /* set if tracking pointer */
  char                coloursize;
  unsigned int        flags;
} main_sprite;

typedef struct main_file
{
  main_sprite        *sprites;       /* linked list of sprites */
  char               *filename;      /* flex array */
  sprite_area        *spritearea;    /* flex array of bytes */
  char               *title;         /* indirected title space */
  char                fullinfo;      /* big icons or full info */
  char                modified;
  char                use_current_palette;
  char                lastwidth;
  struct main_window *window;
} main_file;

typedef union
{
  main_file           file;
  main_sprite_window  sprite;
} main_info_block;

typedef enum
{
  main_window_is_file,
  main_window_is_sprite
} main_window_tag;

#define MW_SELDRAGRIGHT  1
#define MW_SELSAVING     2
#define MW_SELSAVEBYDRAG 4
typedef struct main_window
{
  struct main_window *link;
  wimp_w              handle;
  main_window_tag     tag;
  main_info_block    *data;
  struct
  {
    int          count;
    int          flags;
    wimp_box     transbox; /* Holds menu selected temporary */
    main_sprite *transsprite;
  } selection;
} main_window;

typedef
  struct
  { struct {BOOL full_info, use_desktop_colours;} display;
    struct {BOOL show_colours, small_colours;} colours;
    struct {BOOL show_tools;} tools;
    struct {int mul, div;} zoom;
    struct {BOOL show; int colour;} grid;
    struct {BOOL on;} extended;
  }
  main_options;

typedef
  struct
  { wimp_wind t;
    char ind [128];
  }
  main_template; /*Fix overwriting store bugs. J R C 14th Oct 1993*/

extern main_options main_current_options;
  /*Set at start up from initial_options and <Paint$Options>. Maintained
    by the routines that change state.*/
extern main_window *main_windows;
extern const wimp_box main_big_extent;

extern os_error *main_read_pixel (sprite_area *, sprite_id *, int, int,
    sprite_colour *);

extern void main_snapshot_show (void);

extern int main_create_window (wimp_wind *, wimp_w *, win_event_handler,
    void *);
extern void main_delete_window (wimp_w);
extern void main_window_delete (main_window *);

extern int __root_stack_size;

#if TRACE
  #define main_NO_ROOM(a) main_no_room (a)

  extern void main_no_room (char *);
#else
  #define main_NO_ROOM(a) main_no_room ()

  extern void main_no_room (void);
#endif

extern void main_set_extent (main_window *);

extern void main_set_title (main_window *, char *);

/* returns 0 if not over a sprite or window->selection.count >1 */
extern main_sprite *main_pick_menu_button_sprite (main_window *);

extern void main_force_redraw (wimp_w);

extern void main_help_message (char *tag, wimp_eventstr *);

extern void main_set_printer_data (void);

extern void main_set_modified (main_file *);

extern void main_allocate_position (wimp_box *);

extern void main_check_position (main_window *);

extern void main_select_all(main_window *);

extern void main_clear_all(main_window *);

extern int main_selection_file_size(main_window *);

extern int main_save_selection(char *, void *);

/* returns work area of all bounding boxes for a sprite*/
extern BOOL main_get_all_sprite_bboxes (main_window *,main_sprite *,
                                        wimp_box *,wimp_box *,
                                        wimp_box *);

/*************************************************************
 *  Manifests for the size sprites appear in the file window *
 *************************************************************/

#define main_FILER_TextHeight 40
#define main_FILER_TextWidth  20
#define main_FILER_XSize  (12 * (main_FILER_TextWidth - 4))
#define main_FILER_YSize main_FILER_XSize
#define main_FILER_Border  (main_FILER_TextWidth - 4)
#define main_FILER_TotalHeight \
     (main_FILER_YSize + main_FILER_TextHeight + main_FILER_Border)
#define main_FILER_TotalWidth  (main_FILER_XSize + main_FILER_Border)

#define main_FILER_FullInfoWidth \
     (main_FILER_XSize/2 + 55*main_FILER_TextWidth)
#define main_FILER_FullInfoHeight  (3*main_FILER_TextHeight)

/* Macro to do source clipping:
   provide graphics window wimp_box *, bounding box of object */

#define main_CLIPS(g, myx0, myy0, myx1, myy1) (!((myx0) > (g)->x1 || \
     (myx1) < (g)->x0 || (myy0) > (g)->y1 || (myy1) < (g)->y0))

/* Claim idle events */
extern void main_claim_idle (wimp_w);

extern os_error *main_error (char *);

extern void main_iprintf (int, int, int, char *, ...);

#endif
@


4.6
log
@Fix rendering issues in new screen modes. Add basic support for new sprite types.
Detail:
  c/Main, c/PSprite, h/main - Update window background rendering & sprite translation table caching to work properly with new screen modes.
  c/Main, c/Menus, c/PSprite, h/PSprite, h/main - Code to generate description text for sprite colour count now uses new shared function, psprite_get_colours(), which understands the new sprite formats and won't crash horribly if given something unknown.
Admin:
  Tested on BB-xM with new format sprites and new screen modes
  Needs extending to report more info about new format sprites (RGB order, alpha channel, wide mask, etc.) along with relevant editing facilities.
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 2.15. Tagged as 'Paint-2_15'
@
text
@a50 1
#define COLOURS(n) ((n) <= 3? 1 << (1 << (n)): (n) == 4? 32768: 16777216)
d102 7
d123 2
a124 2
  int                 gcol;        /* current painting colour */
  int                 gcol2;       /* current colour for ADJUST */
@


4.5
log
@Sprite filer selection logic made consistent with filer
Specifically, in the filer when you menu click on a file it is temporarily selected. Clicking on a different file loses the first temporary selection and moves the highlight to the new file. This behaviour is skipped if there are already files selected (using left or right click).
This change makes !Paint behave this way too, previously the menu click was a permanent selection, so menu clicking elsewhere on a different sprite would actually manipulate the sprite selected some time earlier - very confusing.
Tidy ups
 * Remove hardwired mouse button bitmask operations, now uses defines from <wimp.h>.
 * Use OS_Byte numbers from header

Version 2.12. Tagged as 'Paint-2_12'
@
text
@d80 1
a80 1
    int sbpp, spalsize;
d82 1
a82 1
    int dbpp;
@


4.4
log
@Prune the plethora of targets a bit.
Spurious ';' after an if at line 2386 of c.Main deleted, something to do with scroll wheel support. Untested.
Refer to FileType_ using the filetypes header file.
Internationalised "Selection" when saving a sprite selection.
main_save_selection wasn't checking if fwrite() worked so never reported 'disc full'.
Turn on egg timer during main_save_selection().
Fix (de)selection bug when in full sprite info view, the 'spritesperrow' was being rounded down to zero, and unlike everywhere else it wasn't being adjusted back to a minimum of 1.

Version 2.03. Tagged as 'Paint-2_03'
@
text
@a154 1

d165 2
@


4.3
log
@Fix abort when sorting the sprites by name and one or more sprite viewers
are open, also massively simplified it since the copying around of
main_sprite blocks was pointless - much simpler to just rejoin the linked
list leaving the data in place.
*Tidy up
 Delete awk.*, change to use central 'AwkVers' script.
 Delete h.types.
 Delete h.Paint, it's a duplicate of h.main.
 Delete writepixel, swap to using the one in RISCOS_Lib
 Retire 'h.fixes', switches collapsed, bugfixes proven after 18 years use.
 Cast away some warnings.
 Sprinkled in some consts, moved pointer qualifiers to get syntax colouring
 right.
 Remove local SWI defines, read from <swis.h> now.
 !MkInstall now installs into <Install$Dir>.Apps
*Little UI changes
 Make the colour number in the colour picker be in the right place vertically
 and correct horizontal position of 'T' and 'E' for ECFs.
 In the create new sprite dialogue box the 32k and 16M options are shaded
 when a palette is requested, this avoids the problem of selecting a deep
 colour mode (which trapped the radio icon in a shaded paletted selection).
 The 'Selection' menu is now shaded when there are zero sprites in the
 file
*Sprite filer
 Fix tiled main window fill to work in EX0 modes and not overwrite in EX2
 modes (was using the sprite's mode word not the current mode to deduce eigen
 factors), leading to odd chequer board areas not being redrawn.
 Refactored main_clear_background() to use stronger typing of RISC_OSLib
 rather than _swix where possible.
 A failure to get the Wimp pixel translation table now falls back to solid
 fill
 Double clicking on a sprite in the sprite file window no longer leaves it
 selected, to mimic the filer.
 Set DISPLAY_MARGIN to 0 to counter for the recent increase from 32 to 40
 of main_FILER_TextHeight
 Added 'Sort by size' after 'Sort by name'

Version 2.02. Tagged as 'Paint-2_02'
@
text
@a59 1
#define SPRITE_FILE 0xFF9
d119 2
a120 3
  int                 toolspace [toolspacesize];
                                             /* tool scratch space */
  colourpicker_d      colourdialogue;
a121 1
                                            /* handle of colourpicker */
d152 3
a154 2
#define MW_SELDRAGRIGHT 1
#define MW_SELSAVING   2
@


4.2
log
@  Changes to SpriteFile window to allow selections and
  sprite edit window changed to improve positioning accuracy.
Detail:
  * Wimp_EScroll event added to make wheelmouse work.
  * Tool rubber banding now snaps to pixel centres making location easier.
  * flickering of box stopped in move (hand) tool.
  * Bottom left of sprites used in painting aligned with grid and sprite plotted
    directly under moving version.
  * Text painting now plots under the moving version of the text.
  * copy, move and hand tools cancel dragging with Adjust.
  * SpriteFile window changed to allow selections using Select,Adjust or Drag.
  * Alt-Select/Adjust on name allows renaming of sprite.
  * TAB moves rename icon to next sprite.
  * Shift TAB moves rename icon to previous sprite
  * Ctrl-Return renames sprite and moves the rename icon to the
    next sprite.
 V2 changes
  * Rubber band rectangular boxes with 0 width or height drawn as a
   line so they don't disappear.
  * Parallelogram rubber band where all the points are in line drawn
    as a line so they don't disappear.
Admin:
  Tested on Iyonix RO5.10
  Programmer tested only.
Changed by:
  Colin Granville

Version 1.98. Tagged as 'Paint-1_98'
@
text
@a39 1
#include "fixes.h"
a50 2
#define ModuleVersion 1 /*don't bother with separate code for disc version*/

d53 2
d105 1
a105 2
#define MSF_SELECTED 1

a188 2
extern int main_mode_flags;

d193 1
a193 1
extern wimp_box main_big_extent;
d236 1
a236 1
extern void main_select_all(main_window* window);
d238 1
a238 1
extern void main_clear_all(main_window* window);
d240 1
a240 1
extern int main_selection_file_size(main_window* window);
d242 1
a242 1
extern int main_save_selection(char* filename,void* handle);
d245 3
a247 3
extern BOOL main_get_all_sprite_bboxes (main_window *window,main_sprite* sprite,
                                        wimp_box* bbox,wimp_box* spritebbox,
                                        wimp_box* namebbox);
d255 1
a255 1
#define main_FILER_XSize  (12* (main_FILER_TextWidth - 4))
d273 1
a273 1
extern void main_claim_idle (wimp_w window);
d275 1
a275 1
extern os_error *main_error (char *tag);
d277 1
a277 1
extern void main_iprintf  (int flags, int x, int y, char *format, ...);
@


4.1
log
@Initial revision
@
text
@d105 3
d129 1
d157 3
d166 5
d225 2
a226 2
extern main_sprite *main_pick_sprite (main_window *,
    wimp_mousestr *);
d240 13
d257 1
a257 1
#define main_FILER_TextHeight 32
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
