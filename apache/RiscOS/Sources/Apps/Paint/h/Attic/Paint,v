head	4.3;
access;
symbols
	Paint-2_01:4.2
	Paint-2_00:4.1.1.1
	Paint-1_99:4.1.1.1
	Paint-1_98:4.1.1.1
	Paint-1_97:4.1.1.1
	RO_5_07:4.1.1.1
	Paint-1_96:4.1.1.1
	Paint-1_95:4.1.1.1
	Paint-1_94:4.1.1.1
	Ursula_merge:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-10Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.4
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.2
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2010.11.29.20.55.29;	author rsprowson;	state dead;
branches;
next	4.2;

4.2
date	2009.05.31.19.07.52;	author pnaulls;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.20.14;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.20.14;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.28.45;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Fix abort when sorting the sprites by name and one or more sprite viewers
are open, also massively simplified it since the copying around of
main_sprite blocks was pointless - much simpler to just rejoin the linked
list leaving the data in place.
*Tidy up
 Delete awk.*, change to use central 'AwkVers' script.
 Delete h.types.
 Delete h.Paint, it's a duplicate of h.main.
 Delete writepixel, swap to using the one in RISCOS_Lib
 Retire 'h.fixes', switches collapsed, bugfixes proven after 18 years use.
 Cast away some warnings.
 Sprinkled in some consts, moved pointer qualifiers to get syntax colouring
 right.
 Remove local SWI defines, read from <swis.h> now.
 !MkInstall now installs into <Install$Dir>.Apps
*Little UI changes
 Make the colour number in the colour picker be in the right place vertically
 and correct horizontal position of 'T' and 'E' for ECFs.
 In the create new sprite dialogue box the 32k and 16M options are shaded
 when a palette is requested, this avoids the problem of selecting a deep
 colour mode (which trapped the radio icon in a shaded paletted selection).
 The 'Selection' menu is now shaded when there are zero sprites in the
 file
*Sprite filer
 Fix tiled main window fill to work in EX0 modes and not overwrite in EX2
 modes (was using the sprite's mode word not the current mode to deduce eigen
 factors), leading to odd chequer board areas not being redrawn.
 Refactored main_clear_background() to use stronger typing of RISC_OSLib
 rather than _swix where possible.
 A failure to get the Wimp pixel translation table now falls back to solid
 fill
 Double clicking on a sprite in the sprite file window no longer leaves it
 selected, to mimic the filer.
 Set DISPLAY_MARGIN to 0 to counter for the recent increase from 32 to 40
 of main_FILER_TextHeight
 Added 'Sort by size' after 'Sort by name'

Version 2.02. Tagged as 'Paint-2_02'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* > h.Paint */
/*
 *  Main header for the Paint program
 *
 *  DAHE, 04 Sep 89: heap allocation added
 *        07 Sep 89: symbolic SWI numbers
 *  JAB,  23 Jan 91: Added structure 'snapshotstr' for snapshot
 *                   implementation
 *  CDP,  27 Jan 92: Added include for fixes.h.
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#include "ftrace.h"
#include "fixes.h"

#include "os.h"
#include "wimp.h"
#include "wimpt.h"
#include "bbc.h"
#include "res.h"
#include "sprite.h"
#include "resspr.h"
#include "win.h"
#include "menu.h"
#include "event.h"
#include "dbox.h"
#include "werr.h"
#include "flex.h"
#include "baricon.h"
#include "msgs.h"
#include "colourpick.h"

#if TRACE
  #define spencer(s) s;
  #define spencer2(s) s

  #define WHETHER(c) ((c)? "true": "false")
#else
  #define spencer(s) ;
  #define spencer2(s)
#endif

#define ModuleVersion 1 /*don't bother with separate code for disc version*/

#define USEHEAP 0  /* 1 => Use heap (rather than C memory allocation) */

#define entries(l) ((l) < 3? 1 << (1 << (l)): 16)

#if USEHEAP
  #include "heap.h"
  /* Dynamic memory allocation */

  #define Alloc(s)      heap_alloc(s)
  #define Free(p)       heap_free(p)
  #define Realloc(p, s) heap_realloc(p, s)
#else
  #define Alloc(s)      malloc(s)
  #define Free(p)       free(p)
  #define Realloc(p, s) realloc(p, s)
#endif

#define toolspacesize 9
    /* amount of scratchspace a tool is given */

#define NAME_LIMIT 12 /*not defined in sprite.h!*/
#define SPRITE_FILE 0xFF9

typedef int sprite_offset;

typedef struct
{
  int scale_xmul;
  int scale_ymul;
  int scale_xdiv;
  int scale_ydiv;
} scaling_block;        /* ready for use by sprite scaling ops */

typedef struct
{
  char set[20];
  sprite_area *sarea;
} ECF_block;

typedef struct ttab_block
{
  struct ttab_block *link;
  int refcount;
  int ttab_size;
  char *table;     /* flex'ed real translation table */
  /*int spalsize, dpalsize; J R C 23rd Nov 1993*/
  int ttab2_size;
  char *table2;     /* flex'ed real GCOL translation table */
} ttab_block;

typedef struct sprite_window_info_block
{
  struct sprite_window_info_block *link;
  struct active_window            *window;
  struct sprite_info_block        *sprite;
  char                            *title;
  scaling_block                    blobsize;
  char                             gridcol;
  BOOL                             read_only;
} sprite_window_info_block;

typedef struct sprite_info_block
{
  struct sprite_info_block     *link;
  struct spritefile_info_block *file;        /* parent file info */
  sprite_window_info_block     *windows;     /* windows onto sprite */
  sprite_offset                 offset;      /* of sprite in file */
  int                           spriteno;    /* index of sprite in file */
  ttab_block                   *transtab;    /* colour translation table */
  scaling_block                 mode;        /* mode conversion */
  scaling_block                 iconsize;
  wimp_w                        colourhandle;
  ECF_block                     ECFs[4];
  int                           gcol;        /* current painting colour */
  int                           toolspace [toolspacesize];
                                             /* tool scratch space */
  colourpicker_d                colourdialogue;
  char                         *colourtitle; /* indirected colour title */
                                             /* handle of colourpicker */
  char                          needsnull;   /* set if tracking pointer */
  char                          coloursize;
} sprite_info_block;

typedef struct spritefile_info_block
{
  sprite_info_block *sprites;       /* linked list of sprites */
  char              *filename;      /* flex array */
  sprite_area       *spritearea;    /* flex array of bytes */
  char              *title;         /* indirected title space */
  char               fullinfo;      /* big icons or full info */
  char               modified;
  char               use_current_palette;
  char               lastwidth;
  struct active_window *window;
} spritefile_info_block;

typedef union
{
  spritefile_info_block file;
  sprite_window_info_block sprite;
} paint_info_block;

typedef enum
{
  paint_window_is_file,
  paint_window_is_sprite
} paint_window_tag;

typedef struct active_window
{
  struct active_window *link;
  wimp_w handle;
  paint_window_tag   tag;
  paint_info_block  *data;
} active_window;

typedef
  struct
  { struct {BOOL full_info, use_desktop_colours;} display;
    struct {BOOL show_colours, small_colours;} colours;
    struct {BOOL show_tools;} tools;
    struct {int mul, div;} zoom;
    struct {BOOL show; int colour;} grid;
    struct {BOOL on;} extended;
  }
  paint_options;

typedef
  struct
  { wimp_wind t;
    char ind [128];
  }
  other_template; /*Fix overwriting store bugs. J R C 14th Oct 1993*/

extern paint_options paint_current_options;
  /*Set at start up from initial_options and <Paint$Options>. Maintained
    by the routines that change state.*/

extern active_window *paint_windows;
extern wimp_box bigextent;
extern  void snapshot_show(void);

extern int  my_create_wind(wimp_wind *, wimp_w *, win_event_handler,
  void *);
extern void my_delete_wind(wimp_w);
extern void delete_paint_window(active_window *);

extern int __root_stack_size;

#if TRACE
 extern void noroom (char *);
#else
 extern void noroom (void);
#endif


extern void set_work_extent(active_window *);
extern void set_window_title(active_window *, char *);

extern int  LoadFile(active_window *, char *, int, int);

extern sprite_info_block *pick_sprite(active_window *, wimp_mousestr *);

extern void forceredraw(wimp_w);
extern void help_message(char *tag, wimp_eventstr *);
extern void set_printer_data(void);

extern void set_modified(spritefile_info_block *);
extern void allocate_position(wimp_box *);
extern void check_position(active_window *);

/*************************************************************
 *  Manifests for the size sprites appear in the file window *
 *************************************************************/

#define SpriteFiler_TextHeight 32
#define SpriteFiler_TextWidth  20
#define SpriteFiler_XSize (12*(SpriteFiler_TextWidth - 4))
#define SpriteFiler_YSize SpriteFiler_XSize
#define SpriteFiler_Border (SpriteFiler_TextWidth - 4)
#define SpriteFiler_TotalHeight \
    (SpriteFiler_YSize + SpriteFiler_TextHeight + SpriteFiler_Border)
#define SpriteFiler_TotalWidth (SpriteFiler_XSize + SpriteFiler_Border)

#define SpriteFiler_FullInfoWidth \
    (SpriteFiler_XSize/2 + 55*SpriteFiler_TextWidth)
#define SpriteFiler_FullInfoHeight (3*SpriteFiler_TextHeight)

/* Macro to do source clipping:
   provide graphics window wimp_box *, bounding box of object */

#define CLIPS(g, myx0, myy0, myx1, myy1) (!((myx0) > (g)->x1 || \
    (myx1) < (g)->x0 || (myy0)>(g)->y1 || (myy1)<(g)->y0))


/* Claim idle events */
extern void paint_claim_idle(wimp_w window);

/* Report error via msgs */
extern void paint_error(int level, char *tag);
extern void paint_error1(char *tag, char *rest);

extern void iprintf (int flags, int x, int y, char *format, ...);

extern int modevar (int, int);
@


4.2
log
@Normalise include paths
Detail:
 Use Unix style paths for includes
Admin:
 Part of path changes in all C modules in Apps

Version 2.00. Not tagged
@
text
@@


4.1
log
@Initial revision
@
text
@d33 16
a48 16
#include "h.os"
#include "h.wimp"
#include "h.wimpt"
#include "h.bbc"
#include "h.res"
#include "h.sprite"
#include "h.resspr"
#include "h.win"
#include "h.menu"
#include "h.event"
#include "h.dbox"
#include "h.werr"
#include "h.flex"
#include "h.baricon"
#include "h.msgs"
#include "h.colourpick"
d67 1
a67 1
  #include "h.heap"
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
