head	4.2;
access;
symbols
	Paint-2_01:4.1.1.1
	Paint-2_00:4.1.1.1
	Paint-1_99:4.1.1.1
	Paint-1_98:4.1.1.1
	Paint-1_97:4.1.1.1
	RO_5_07:4.1.1.1
	Paint-1_96:4.1.1.1
	Paint-1_95:4.1.1.1
	Paint-1_94:4.1.1.1
	Ursula_merge:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-10Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.4
	Daytona_bp:4.1.1.1
	Ursula:4.1.1.1.0.2
	Ursula_bp:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2010.11.29.20.55.29;	author rsprowson;	state dead;
branches;
next	4.1;

4.1
date	96.11.05.09.20.15;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.20.15;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.28.51;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Fix abort when sorting the sprites by name and one or more sprite viewers
are open, also massively simplified it since the copying around of
main_sprite blocks was pointless - much simpler to just rejoin the linked
list leaving the data in place.
*Tidy up
 Delete awk.*, change to use central 'AwkVers' script.
 Delete h.types.
 Delete h.Paint, it's a duplicate of h.main.
 Delete writepixel, swap to using the one in RISCOS_Lib
 Retire 'h.fixes', switches collapsed, bugfixes proven after 18 years use.
 Cast away some warnings.
 Sprinkled in some consts, moved pointer qualifiers to get syntax colouring
 right.
 Remove local SWI defines, read from <swis.h> now.
 !MkInstall now installs into <Install$Dir>.Apps
*Little UI changes
 Make the colour number in the colour picker be in the right place vertically
 and correct horizontal position of 'T' and 'E' for ECFs.
 In the create new sprite dialogue box the 32k and 16M options are shaded
 when a palette is requested, this avoids the problem of selecting a deep
 colour mode (which trapped the radio icon in a shaded paletted selection).
 The 'Selection' menu is now shaded when there are zero sprites in the
 file
*Sprite filer
 Fix tiled main window fill to work in EX0 modes and not overwrite in EX2
 modes (was using the sprite's mode word not the current mode to deduce eigen
 factors), leading to odd chequer board areas not being redrawn.
 Refactored main_clear_background() to use stronger typing of RISC_OSLib
 rather than _swix where possible.
 A failure to get the Wimp pixel translation table now falls back to solid
 fill
 Double clicking on a sprite in the sprite file window no longer leaves it
 selected, to mimic the filer.
 Set DISPLAY_MARGIN to 0 to counter for the recent increase from 32 to 40
 of main_FILER_TextHeight
 Added 'Sort by size' after 'Sort by name'

Version 2.02. Tagged as 'Paint-2_02'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef types_H
#define types_H

typedef unsigned int bits, bytes;
typedef int bool;
typedef unsigned char byte;

#ifndef NULL
   #define NULL ((void *) 0)
#endif

#define FALSE ((bool) 0)
#define TRUE  ((bool) 1)

#define NONE ((bits) 0)
#define ALL  (~(bits) 0)

#define SKIP 0
   /*may be used as a "don't care" value for |int|, |... *|, |bits| etc*/

#define SIG_LIMIT 11 /*largest signal number + 1*/

#ifndef __swis_h
   #define _C (1U << 29)
   #define _Z (1U << 30)
   #define _N (1U << 31)
#endif

#define DEC_WIDTH      10 /*strlen ("2147483647")*/
#define SHORT_DEC_WIDTH 5 /*strlen ("32767")*/
#define LONG_DEC_WIDTH 10 /*strlen ("2147483657")*/

#define OCT_WIDTH      11 /*strlen ("37777777777")*/
#define SHORT_OCT_WIDTH 6 /*strlen ("177777")*/
#define LONG_OCT_WIDTH 11 /*strlen ("37777777777")*/

#define UNSIGNED_WIDTH      10 /*strlen ("4294967295")*/
#define SHORT_UNSIGNED_WIDTH 5 /*strlen ("65535")*/
#define LONG_UNSIGNED_WIDTH 10 /*strlen ("4294967295")*/

#define HEX_WIDTH       8 /*strlen ("FFFFFFFF")*/
#define SHORT_HEX_WIDTH 4 /*strlen ("FFFF")*/
#define LONG_HEX_WIDTH  8 /*strlen ("FFFFFFFF")*/

#define FLT_WIDTH   7 /*strlen ("0000001")*/
#define DBL_WIDTH  17 /*strlen ("00000000000000002")*/
#define LDBL_WIDTH 17 /*strlen ("00000000000000002")*/

#define FLT_EXP_WIDTH  2 /*strlen ("38")*/
#define DBL_EXP_WIDTH  3 /*strlen ("308")*/
#define LDBL_EXP_WIDTH 3 /*strlen ("308")*/

#define ERROR (-2)
#define WHETHER(c) ((c)? "TRUE": "FALSE")

#define MAX(a, b)      ((a) > (b)? (a): (b))
#define MIN(a, b)      ((a) < (b)? (a): (b))
#define MAXAB(a, b)    ((a) < (b)? (a) = (b): (a))
#define MINAB(a, b)    ((a) > (b)? (a) = (b): (a))
#define ABS(a)         ((a) >= 0? (a): -(a))
#define SGN(a)         ((a) > 0? 1: (a) < 0? -1: 0)
#define DIM(a, b)      ((a) > (b)? (a) - (b): 0)
#define SQR(a)         ((a)*(a))
#define RATIO(a, b)    ((2*(a) + (b))/(2*(b)))
#define BOOL(c)        ((c) != 0? TRUE: FALSE) /*better than !!c*/
#define UCHAR(i)       ("0123456789ABCDEF" [i])
#define LCHAR(i)       ("0123456789abcdef" [i])
#define BINEXP(n)      (1 << (n))
#define ISDIGIT(c)     ('0' <= (c) && (c) <= '9')
#define ISXDIGIT(c)    (('0' <= (c) && (c) <= '9') || \
      ('a' <= (c) && (c) <= 'f') || ('A' <= (c) && (c) <= 'F'))
#define DIGIT(c)       ((c) - '0')
#define XDIGIT(c)      ('0' <= (c) && (c) <= '9'? (c) - '0': \
      'a' <= (c) && (c) <= 'f'? (c) - 'a' + 10: (c) - 'A' + 10)
#define DBLEQ(a, b, e) (fabs ((a) - (b)) <= (e)*(fabs (a) + fabs (b)))

#define BIT(p, i) (((bits *) (p)) [(i) >> 5] &    1 << ((i) & 31))
#define SET(p, i) (((bits *) (p)) [(i) >> 5] |=   1 << ((i) & 31))
#define CLR(p, i) (((bits *) (p)) [(i) >> 5] &= ~(1 << ((i) & 31)))
   /* 5 is x such that 2^^x == CHAR_BIT*sizeof (bits)
      31 is CHAR_BIT*sizeof (bits) - 1*/

#define CLEAR(s)         ((s) [0] = '\0')
#define EMPTY(s)         ((s) [0] == '\0')
#define NCOPY(s1, s2, n) (sprintf (s1, "%.*s", n, s2), s1)

#define STR_(s) #s
#define STR(s)  STR_ (s)

#define COUNT(a) (sizeof (a)/sizeof *(a))

#define ALIGN(b) ((b) + 3 & ~3)

#define UNKNOWN 1
   /*may be used to declare arrays of unknown size*/

#define AS .
#define ASREF ->
   /*may be used for components of a union*/

#define _ ,
   /*may be used to separate arguments of a macro*/

#define WORD(ptr) \
      (((byte *) (ptr)) [0] | ((byte *) (ptr)) [1] << 8 | \
      ((byte *) (ptr)) [2] << 16 | ((byte *) (ptr)) [3] << 24)
   /*used to assemble an |int| at an unaligned character pointer*/

#define SHORT(ptr) \
      ((int) (((byte *) (ptr)) [0] << 16 | \
      ((byte *) (ptr)) [1] << 24) >> 16)
   /*used to assemble a |short| at an unaligned pointer*/

/*These may be used to suppress compiler warnings*/
#define NOT_USED(x) {x = x;}
#define UNSET(x)    {(void) &x;}

#endif
@


4.1
log
@Initial revision
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
