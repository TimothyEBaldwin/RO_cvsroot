head	1.3;
access;
symbols
	MakeModes-0_34:1.3
	MakeModes-0_33:1.2
	MakeModes-0_32:1.2
	MakeModes-0_31:1.1.1.1
	MakeModes-0_30:1.1.1.1
	MakeModes-0_29:1.1.1.1
	MakeModes-0_28:1.1.1.1
	MakeModes-0_27:1.1.1.1
	MakeModes-0_26:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2018.08.19.09.56.48;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	gwkxsj04081PmIOA;

1.2
date	2015.11.03.22.38.13;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	WP4iDMJ6kh8xmHHy;

1.1
date	2003.07.02.13.11.10;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.07.02.13.11.10;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Simplify or remove dead code
MakeModes.c: calls to sprintf where the buffer is subsequently reused before doing anything with the result, borderOK code inside !borderOK conditional, vncOK within !vncOK conditional
mmsubs.c: when scanning the monitor list, no need to check mon!=NULL since the list contains exactly monitor_count entries (it's just an unusual way of finding 'x')
Found by cppcheck static analysis.
wimphdr.h: squash a warning by removing unnecessary typedef
mmsubs.c: delete unused get_monitor_number(), refactor call to Wimp_GetWindowInfo to use proper types rather than blocks of ints, Style Guide nudge the popup menu 1 pixel

Version 0.34. Tagged as 'MakeModes-0_34'
@
text
@/* Copyright 2003 Tematic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*************************************************
*        Header for Wimp interface things        *
*************************************************/

/* Philip Hazel, August 1993 */





/*************************************************
*                   Flags                        *
*************************************************/

/* Flags for CreateMenu */

#define F_tick       0x001
#define F_dotted     0x002
#define F_writeable  0x004
#define F_message    0x008
#define F_allowgrey  0x010
#define F_last       0x080
#define F_indirect   0x100

/* Flags for icon blocks */

#define F_text       0x00000001
#define F_sprite     0x00000002
#define F_border     0x00000004
#define F_hcentre    0x00000008
#define F_vcentre    0x00000010
#define F_filled     0x00000020
#define F_antialias  0x00000040
#define F_taskhelp   0x00000080
#define F_indirected 0x00000100
#define F_justified  0x00000200
#define F_adjustesg  0x00000400
#define F_halfsize   0x00000800

#define F_selected   0x00200000
#define F_shaded     0x00400000
#define F_deleted    0x00800000

#define F_colours    0xFF000000
#define FS_fore      24           /* shifts */
#define FS_back      28

#define Message_EditRq         0x45D80
#define Message_EditAck        0x45D81
#define Message_EditReturn     0x45D82
#define Message_EditAbort      0x45D83
#define Message_EditDataSave   0x45D84
#define Message_EditCursor     0x45D85


/*************************************************
*                  Structures                    *
*************************************************/

typedef struct {
  char *text;
  char *valid;
  int  length;
} indirect_icon_data;


typedef union {
  char name[12];
  indirect_icon_data ind;
} icon_data;


typedef struct {
  int minx;
  int miny;
  int maxx;
  int maxy;
  int flags;
  icon_data id;
} icon_block;


typedef struct {
  int handle;
  icon_block ib;
} create_icon_block;


typedef struct {
  int window;
  int icon;
  icon_block ib;
} icon_state_block;

typedef struct {
  int length;
  int sender;
  int my_ref;
  int your_ref;
  int action;
  int window;
  int icon;
  int x;
  int y;
  int size;
  int filetype;
  char name[12];
} msg_data_block;


typedef struct {
  int  length;
  int  sender;
  int  my_ref;
  int  your_ref;
  int  action;
  int  data_type;
  int  job_handle;
  int  flags;
  char parent_name[20];
  char leaf_name[20];
} msg_edit_rq;




/******** Windows ********/

typedef struct {
  int  minx;
  int  miny;
  int  maxx;
  int  maxy;
  int  scrollx;
  int  scrolly;
  int  behind;
  int  flags;
  char title_foreground;
  char title_background;
  char work_foreground;
  char work_background;
  char scroll_outer;
  char scroll_inner;
  char title_background_highlight;
  /*char dummy;*/
  int  work_minx;
  int  work_miny;
  int  work_maxx;
  int  work_maxy;
  int  title_iconflags;
  int  button_type;
  int *sprite_area;
  short int minwidth;
  short int minheight;
  icon_data title_data;
  int  iconcount;
  icon_block icons[9999];
} window_data;


typedef struct {
  int window;
  int minx;
  int miny;
  int maxx;
  int maxy;
  int scrollx;
  int scrolly;
  int infront;
  int flags;
} window_state_block;



/******** Menus ********/

/*-- dummy menu structure --*/

typedef struct main__menu_str
{
  wimp_menuhdr *m;
  int nitems;
  void *entryspace;
  int nbytes;
  int maxentrywidth;
} main__menu_str;

static main__menu_str dummy;

typedef struct menu_item {
  int flags;
  struct menu_block *submenu;
  int iflags;
  icon_data idata;
} menu_item;


typedef struct menu_block {
  char title[12];
  char title_foreground;
  char title_background;
  char work_foreground;
  char work_background;
  int  item_width;
  int  item_height;
  int  item_gap;
  menu_item items[1];
} menu_block;

/* Structures for return blocks from Wimp_Poll */

typedef struct {
  int x;
  int y;
  int buttons;
  int window;
  int icon;
} S_Mouse_Click;

typedef struct {
  int window;
  int icon;
  int xcaret;
  int ycaret;
  int caretflags;
  int caretindex;
  int key;
} S_Key_Pressed;

/* End of wimphdr.h */
@


1.2
log
@Sort out line endings
Somewhere along the journey these headers ended up as a mix of DOS and Unix line endings. Amended.
@
text
@a203 2
typedef struct menu_block;

@


1.1
log
@Initial revision
@
text
@d15 232
a246 232
/*************************************************
*        Header for Wimp interface things        *
*************************************************/

/* Philip Hazel, August 1993 */





/*************************************************
*                   Flags                        *
*************************************************/

/* Flags for CreateMenu */

#define F_tick       0x001
#define F_dotted     0x002
#define F_writeable  0x004
#define F_message    0x008
#define F_allowgrey  0x010
#define F_last       0x080
#define F_indirect   0x100

/* Flags for icon blocks */

#define F_text       0x00000001
#define F_sprite     0x00000002
#define F_border     0x00000004
#define F_hcentre    0x00000008
#define F_vcentre    0x00000010
#define F_filled     0x00000020
#define F_antialias  0x00000040
#define F_taskhelp   0x00000080
#define F_indirected 0x00000100
#define F_justified  0x00000200
#define F_adjustesg  0x00000400
#define F_halfsize   0x00000800

#define F_selected   0x00200000
#define F_shaded     0x00400000
#define F_deleted    0x00800000

#define F_colours    0xFF000000
#define FS_fore      24           /* shifts */
#define FS_back      28

#define Message_EditRq         0x45D80
#define Message_EditAck        0x45D81
#define Message_EditReturn     0x45D82
#define Message_EditAbort      0x45D83
#define Message_EditDataSave   0x45D84
#define Message_EditCursor     0x45D85


/*************************************************
*                  Structures                    *
*************************************************/

typedef struct {
  char *text;
  char *valid;
  int  length;
} indirect_icon_data;


typedef union {
  char name[12];
  indirect_icon_data ind;
} icon_data;


typedef struct {
  int minx;
  int miny;
  int maxx;
  int maxy;
  int flags;
  icon_data id;
} icon_block;


typedef struct {
  int handle;
  icon_block ib;
} create_icon_block;


typedef struct {
  int window;
  int icon;
  icon_block ib;
} icon_state_block;

typedef struct {
  int length;
  int sender;
  int my_ref;
  int your_ref;
  int action;
  int window;
  int icon;
  int x;
  int y;
  int size;
  int filetype;
  char name[12];
} msg_data_block;


typedef struct {
  int  length;
  int  sender;
  int  my_ref;
  int  your_ref;
  int  action;
  int  data_type;
  int  job_handle;
  int  flags;
  char parent_name[20];
  char leaf_name[20];
} msg_edit_rq;




/******** Windows ********/

typedef struct {
  int  minx;
  int  miny;
  int  maxx;
  int  maxy;
  int  scrollx;
  int  scrolly;
  int  behind;
  int  flags;
  char title_foreground;
  char title_background;
  char work_foreground;
  char work_background;
  char scroll_outer;
  char scroll_inner;
  char title_background_highlight;
  /*char dummy;*/
  int  work_minx;
  int  work_miny;
  int  work_maxx;
  int  work_maxy;
  int  title_iconflags;
  int  button_type;
  int *sprite_area;
  short int minwidth;
  short int minheight;
  icon_data title_data;
  int  iconcount;
  icon_block icons[9999];
} window_data;


typedef struct {
  int window;
  int minx;
  int miny;
  int maxx;
  int maxy;
  int scrollx;
  int scrolly;
  int infront;
  int flags;
} window_state_block;



/******** Menus ********/

/*-- dummy menu structure --*/

typedef struct main__menu_str
{
  wimp_menuhdr *m;
  int nitems;
  void *entryspace;
  int nbytes;
  int maxentrywidth;
} main__menu_str;

static main__menu_str dummy;

typedef struct menu_block;

typedef struct menu_item {
  int flags;
  struct menu_block *submenu;
  int iflags;
  icon_data idata;
} menu_item;


typedef struct menu_block {
  char title[12];
  char title_foreground;
  char title_background;
  char work_foreground;
  char work_background;
  int  item_width;
  int  item_height;
  int  item_gap;
  menu_item items[1];
} menu_block;

/* Structures for return blocks from Wimp_Poll */

typedef struct {
  int x;
  int y;
  int buttons;
  int window;
  int icon;
} S_Mouse_Click;

typedef struct {
  int window;
  int icon;
  int xcaret;
  int ycaret;
  int caretflags;
  int caretindex;
  int key;
} S_Key_Pressed;

/* End of wimphdr.h */
@


1.1.1.1
log
@Found under an old piece of carpet - V0.26 of !MakeModes.
To see the original sources (and previous 5 versions) see 2504,066 - this
is a semi tidied up versin.Well,the directories are vaguely right.

@
text
@@
