head	1.11;
access;
symbols
	Browse-2_16:1.11
	Browse-2_15:1.11
	Browse-2_14:1.11
	Browse-2_13:1.11
	Browse-2_12:1.11
	Browse-2_11:1.11
	Browse-2_10:1.11
	Browse-2_09:1.11
	ahodgkin_208_i4_2:1.11
	ahodgkin_208_i4:1.11
	ahodgkin_208_i3:1.11
	ahodgkin_208_i2:1.11
	ahodgkin_208_i1:1.11
	ahodgkin_207release:1.11
	ahodgkin_206release:1.10
	ahodgkin_205release:1.10
	ahodgkin_204release:1.9
	ahodgkin_202release:1.9
	ahodgkin_201release:1.8
	ahodgkin_200release:1.8
	ahodgkin_133beta:1.8
	ahodgkin_132beta:1.8
	ahodgkin_131beta:1.8
	ahodgkin_130beta:1.7
	ahodgkin_129:1.7
	ahodgkin_128beta:1.7
	ahodgkin_128alpha:1.6
	ahodgkin_127beta2:1.6
	ahodgkin_127beta:1.6
	ahodgkin_126beta:1.5
	ahodgkin_AW97patch:1.4
	ahodgkin_AW97:1.4;
locks; strict;
comment	@# @;


1.11
date	98.10.13.16.33.57;	author ahodgkin;	state Exp;
branches;
next	1.10;

1.10
date	98.04.21.10.38.11;	author ahodgkin;	state Exp;
branches;
next	1.9;

1.9
date	98.03.20.12.12.22;	author ahodgkin;	state Exp;
branches;
next	1.8;

1.8
date	98.01.31.10.55.09;	author ahodgkin;	state Exp;
branches;
next	1.7;

1.7
date	97.12.04.11.22.34;	author ahodgkin;	state Exp;
branches;
next	1.6;

1.6
date	97.11.20.16.04.24;	author ahodgkin;	state Exp;
branches;
next	1.5;

1.5
date	97.10.30.17.10.54;	author ahodgkin;	state Exp;
branches;
next	1.4;

1.4
date	97.09.22.07.43.06;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	97.09.12.17.19.15;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	97.08.28.16.07.48;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	97.07.24.09.15.07;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Tweaks to export rules in Makefile - ResJ source for JavaScript builds,
all of User dir exported, resources rule exports About as well as User.

Handles images with a width or height of 0 specified in the HTML.
Previously went for a default size placeholder and changes to image
sizes and/or redraw problems could occur before/after subsequent
reformatting (involved trivial changes to image_get_image_size and
image_redraw_area only).

Default parameter HRs now plot properly in rectangular pixel modes.

Choices code updated to cope with the minimum font size, JS support,
watchdog on/off and timeout, Navigator object option added generally
(act even *more* like Navigator), image GC after fetch, and image
GC unused image / free RAM constraints.

Code in JSnavigator.c updated to obey new "act more like Navigator"
option (see above). Currently declares itself as version 3.0.

Resources for all builds are up to date. All links in default hotlist
verified and corrected where necessary, with several new links added.

This is Release v2.07. Not tested very much, sorry; YMMV.
@
text
@<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Hotlist</title>
</head>
<body>
<ul>
<li><a href="http://www.acorn.com/a_group_main.htm">Acorn Group</a>
<li><a href="http://www.acorn.com/browser/">Acorn Internet home</a>
<li><a href="http://www.altavista.com/">Alta Vista search</a>
<li><a href="http://www.unitedmedia.com/comics/dilbert/">Dilbert</a>
<li><a href="http://www.userfriendly.org/static/">User Friendly</a>
<h4>Search engines</h4>
<ul>
<li><a href="http://www.dejanews.com/">DejaNews</a>
<li><a href="http://www.webcrawler.com/">WebCrawler Search</a>
<li><a href="http://www.yahoo.com/">Yahoo search</a>
<li><a href="http://www.infoseek.com/">Infoseek search</a>
<li><a href="http://www.excite.com/">Excite</a>
<li><a href="http://www.lycos.com/">Lycos search</a>
<li><a href="http://www.uktravel.com/index.html">UK Travel Guide</a>
<li><a href="http://www.yell.co.uk/">This is YELL</a>
<li><a href="http://www.whowhere.lycos.com/">WhoWhere</a>
</ul>
<h4>Acorn related</h4>
<ul>
<li><a href="http://www.xemplar.co.uk/">Xemplar Home Page</a>
<li><a href="http://www.cybervillage.co.uk/acorn/">The Acorn Cybervillage</a>
<li><a href="http://pink.idg.co.uk/acornuser/index.html">Acorn User Online</a>
<h4>FTP archives</h4>
<ul>
<li><a href="http://www.acorn.co.uk/ftp/">Acorn (WWW interface)</a>
<li><a href="ftp://micros.hensa.ac.uk/local/riscos/">Hensa Acorn archive (FTP)</a>
<li><a href="ftp://ftp.uni-stuttgart.de/pub/systems/acorn/">Stuttgart Acorn archive (FTP)</a>
</ul>
</ul>
<h4>Information</h4>
<ul>
<h4>News</h4>
<ul>
<li><a href="http://www.telegraph.co.uk/">The Telegraph</a>
<li><a href="http://www.the-times.co.uk/">The Times</a>
<li><a href="http://www.guardian.co.uk/">The Guardian</a>
<li><a href="http://cnn.com/">CNN Interactive</a>
</ul>
<h4>Magazines</h4>
<ul>
<li><a href="http://www.newscientist.com/">New Scientist</a>
<li><a href="http://www.hotwired.com/">HotWired</a>
<li><a href="http://inkpot.com/">The Flying Inkpot</a>
<li><a href="http://www.forteantimes.com/">Fortean Times Online</a>
</ul>
<h4>HTML and the Internet</h4>
<ul>
<li><a href="http://www.w3.org/">World Wide Web consortium</a>
<li><a href="http://www.w3.org/TR/REC-html40/">HTML 4.0 Specification</a>
<li><a href="http://www.it.kth.se/docs/rfc/">List of RFCs</a>
<li><a href="http://www.cdrom.com/pub/png/">PNG (Portable Network Graphics) Home Page</a>
<li><a href="http://www.w3.org/TR/WD-CSS2/">Cascading Style Sheets (CSS) Level 2</a>
<li><a href="http://www.oasis-open.org/cover/sgml-xml.html">The SGML/XML Web Page - Home Page</a>
<li><a href="http://www.oasis-open.org/cover/kennDSSSLInt.html">DSSSL: Introduction</a>
<li><a href="http://www.heise.de/ix/artikel/E/1997/06/106/vergleich.html">XML: iX overview article</a>
<li><a href="http://www.w3.org/Style/XSL/">Extensible Style Language (XSL)</a>
<li><a href="http://webreview.com/97/11/14/feature/">DOM: WebReview overview article</a>
<li><a href="http://www.w3.org/RDF/Overview.html">RDF overview</a>
<li><a href="http://www.earth.com/bad-style/">HTML Bad Style Page</a>
<li><a href="http://www.nadn.navy.mil/Masters/Resources/resources.htm">USNA HTML Resources</a>
</ul>
<h4>Miscellaneous</h4>
<ul>
<li><a href="http://www.aaa.com.au/A_Z/">Australian A to Z Animal Archive</a>
<li><a href="http://www.man.ac.uk/Geology/pwood/esenet/esintro.htm">Internet resources for Earth and Environmental Scientists</a>
</ul>
</ul>
<h4>Java</h4>
<ul>
<li><a href="http://dialspace.dial.pipex.com/town/lane/gcj92/">GingGing's teletubbies Home Page</a>
<li><a href="http://www.spectrum.lovely.net/Elite.html">Java ZX Spectrum Emulator</a>
<li><a href="http://www.eden.rutgers.edu/~samuelk/asteroids.html">Java Asteroids</a>
<li><a href="http://www.cs.umbc.edu/~sli2/cube/">Virtual Rubik's Cube</a>
<li><a href="http://www.cs.umbc.edu/~sli2/tetris/">Battle Tetris</a>
<li><a href="http://www.twoshortplanks.com/">twoshortplanks.com</a>
</ul>
<h4>Fun</h4>
<ul>
<h4>Film and television</h4>
<ul>
<li><a href="http://625.simplenet.com/digital.htm">Digital TV</a>
<li><a href="http://www.like.it/vertigo/cliches.html">The Movie Cliches List</a>
<li><a href="http://625.simplenet.com/">6025 Television Room</a>
<li><a href="http://www.scifi.com/">Sci-Fi Channel: The Dominion</a>
<li><a href="http://www.tangh.demon.co.uk/tubbytoast/index.html">Teletubbies come to play!</a>
</ul>
<h4>Rowing</h4>
<ul>
<li><a href="http://users.ox.ac.uk/~quarrell/REGATTA/">Regatta On-Line</a>
<li><a href="http://users.ox.ac.uk/~quarrell/">Rachel Quarrell's Rowing Service</a>
<li><a href="http://ourworld.compuserve.com/homepages/david_biddulph/rowing.htm">David Biddulph: Rowing page</a>
<li><a href="http://www.comlab.ox.ac.uk/archive/other/rowing.html">The World Wide Web Virtual Library: Rowing</a>
<li><a href="http://www.row.durge.org/nines/">Cambridge '99 Rowing Club Home Page</a>
<li><a href="http://www.cam.ac.uk/CambUniv/Societies/boatclub/index.htm">Cambridge University Combined Boat Clubs</a>
<li><a href="http://www-atm.atm.ox.ac.uk/rowing/">Oxford University Rowing Clubs (OURCs)</a>
</ul>
<h4>Miscellaneous</h4>
<ul>
<li><a href="http://www.lugnet.com/fibblesnork/lego/guide/">Fibblesnork</a>
<li><a href="http://www.planetquake.com/">Planet Quake</a>
<li><a href="http://www.netaxs.com/~cparker/front/hub.html">Charley Parker's virtual comic book - ARGON ZARK!</a>
<li><a href="http://animeonline.org/">AnimeOnline - Everything Anime</a>
</ul>
</ul>
<h4>Weird</h4>
<ul>
<li><a href="http://www.mds.mdh.se/~elt94aem/kosida.htm">The Cow Liberation Army Faction</a>
<li><a href="http://iguana.images.com/">Iguana Images</a>
<li><a href="http://www.perp.com/whale/">The Infamous Exploding Whale</a>
<li><a href="http://www.beyondweird.com/index.html">The OuterNet</a>
<li><a href="http://www.planet.com/dirtweb/dirt.html">Museum of Dirt</a>
<li><a href="http://www.twinkiesproject.com/">The T.W.I.N.K.I.E.S. Project</a>
<li><a href="http://www.infobahn.com/pages/anagram.html">Main Sanitary Nag (Anagram Insanity)</a>
<li><a href="http://www.conspire.com/">60 Greatest Conspiracies of All Time</a>
</ul>
</ul>
</body>
</html>
@


1.10
log
@Updated Hotlists - USNA HTML resources and 6025 TV room pages had moved,
MIDI themes is unreachable, Hensa has been restructured.

For table cells where the line or chunk data totals less than Flex_256_Point
bytes (see top of Memory.c, current value is 8192) there would be an over-
allocation of 1 byte per cell due to a (now fixed) bug in the granular
allocator. This would translate into 4 bytes wastage of course, and may
represent a small speed penalty depending on how flex works out block
word alignment.

Several entries in the Choices file were missing from save_save_choices in
its new form (see last check-in). Added back in. Ursula and Phoenix Res
files contained an incorrect component ID in pane 3 that was stopping the
'no scroll bars' option in pane 7 working correctly (duplicate component
ID). Res files corrected; TRACE builds will now spot such errors and give
a warning when they occur (in choices_find_component).

Table widthing code fixes:

 * Very wide table cell specifiers (e.g. TD WIDTH="2000") were ignored,
   but this isn't what Navigator / MSIE 4 do. This code was present
   because of other bugs in the widther, long since fixed. The code has
   been commented out - if the problem reappears the use of the code can
   be re-investigated, but as far as I can tell it isn't needed.

 * If two pixel specified cells appear one above the other, the first
   would always have been taken for use in the final width calculation
   even if it specified a smaller width than the second. The check was
   made to ensure that pixel specifiers were chosen in preference to
   other cells, which is OK, but it didn't notice if the current cell
   was also a pixel specifier! Fixed; you now get the widest.

 * The TRACE build 'Colspan cell xxx would have been width yyy, below
   minimum width of zzz' error should no longer happen. In a manner similar
   to the bug mentioned above, two cells above each other spanning the
   same columns with the lower cell narrower than the upper would end up
   with the narrower width. The code that trapped and corrected the error
   was not compiled out of release builds, even though the error message
   generation was, because the rendering would fail otherwise. The widther
   has now been fixed not to make this mistake and the final check is now
   strictly TRACE build only, thereby speeding up table widthing for
   non-TRACE builds.

 * Another use of MSIE4StyleTables option, for cellspacing; it's based
   on the actual used cells, rather than the maximum cell width caused
   by COLSPAN etc. So if you've a cell with a big COLSPAN but as a
   heading but the rest of the table only uses, say, 4 columns, you won't
   get a gap to the right which adds up to the spacing for all of the
   cells that the COLSPAN attribute in the heading implied. The option
   was actually intended as 'bad things when switched on', and though in
   this case it makes for a better rendering, it does hide an error in
   the HTML. Note Navigator 4 acts as Browse with MSIE4StyleTables off
   in this particular case. Oh, it works in both ways of course, so
   the table height routine had to be updated too. A new function,
   tables_find_actual_size, exists to support the feature in general.

Messages files updated to v2.05 (21-Apr-98). Help menu items renamed a
bit in Ursula, Phoenix and Customer Res files, but entries still point
to the same URLs. Phoenix button bar markers have been brought closer
together to stop them being visible when only the URL bar is meant to
be present.
@
text
@d8 5
a12 8
<li><a href="file:/ADFS::4/$/Manuals/Contents">Acorn Risc PC User Manuals</a>
<h4>Other notes</h4>
<ul>
<li><a href="file:/ADFS::4/$/Manuals/RO370.SA">Notes on RISC OS 3.7 and the StrongARM processor</a>
<li><a href="file:/ADFS::4/$/Manuals/JavaReadMe">Information about the Java plug-in</a>
<li><a href="file:/ADFS::4/$/Manuals/INet_H+T">Acorn Internet hints and tips</a>
<li><a href="file:/ADFS::4/$/Manuals/AppNote">Programmer's StrongARM application note</a>
</ul>
a14 1
<li><a href="http://www.altavista.digital.com/">Alta Vista search</a>
d23 1
a23 1
<li><a href="http://www.whowhere.com/">WhoWhere</a>
a26 1
<li><a href="http://www.acorn.co.uk/">Acorn Home Page</a>
d33 2
a34 1
<li><a href="ftp://ftp.uni-stuttgart.de/pub/systems/acorn/">Stuttgart Acorn archive</a>
d56 10
a67 2
<li><a href="http://www.it.kth.se/docs/rfc/">List of RFCs</a>
<li><a href="http://www.cdrom.com/pub/png/">PNG (Portable Network Graphics) Home Page</a>
a70 1
<li><a href="http://www.comlab.ox.ac.uk/archive/other/rowing.html">The World Wide Web Virtual Library: Rowing</a>
d88 1
d94 10
d106 1
a106 2
<li><a href="http://www.unitedmedia.com/comics/dilbert/">Dilbert</a>
<li><a href="http://database.lugnet.com/fibblesnork/lego/guide/">Fibblesnork</a>
d116 1
a116 1
<li><a href="http://www.xmission.com/~grue/whale/">The Infamous Exploding Whale</a>
d119 2
a120 2
<li><a href="http://www.owlnet.rice.edu/~gouge/twinkies.html">The T.W.I.N.K.I.E.S. Project</a>
<li><a href="http://infobahn.com/pages/anagram.html">Main Sanitary Nag (Anagram Insanity)</a>
@


1.9
log
@Programming warehouse link removed from all hotlists - the page has gone.

Some compile-time hacks in place to use MemLib, a dynamic area based
malloc replacement which shrinks its heap when possible. All builds
have these switched off at the moment. Seemed to work with just Browse,
though there would be problems with message blocks stored in dynamic
areas because of the Wimp's '&3800000' check - however, it failed when
HTMLLib was made to use it, too. Don't know why yet.

ItemInfo.[c/h] source added, with Res file additions for testbed Browse
and Phoenix.

Small fetch windows now work properly regardless of toolbar settings
in the Choices.

Reload now reloads all images too, rather than only reloading them for
as long as the main page was being fetched.

Added a simple 'Find' facility.

Realised that event handlers in eventlib are called in reverse order
of registration, so the miscellaneous event handler is now registered
first rather than last.

Multiuser code added (most only active if SINGLE_USER is undefined). As
part of this, hotlist code now knows about read-only items (done for the
Customer-style 'Resources' file, but works generally anyway).
handle_add_hotlist doesn't try to save the hotlist itself anymore (the
hotlist_add function does all that through hotlist_modified anyway).

Customer build Choices and Controls updated slightly (e.g. ClaimHelp
off, hotlist to save on quit only).

Customer build now uses Phoenix-style buttons. Sprites files which
worked at the time (but will probably be out of date now) and included
most of the original Customer-style sprites are in
'Utils.Icons.Customer'.

Choices, Messages and Res files for all builds now stripped down to only
single user items or single plus multiuser for Customer build and testbed
build. Before, all contained a few multiuser bits in at least the Choices
file if not more.

Grammatical error ("Fetching frames contents" (sic.)) corrected in
default message, Toolbars.c, and all of the Messages files.

Customer build brought back to a servicable level (including
implementation of the Find dialogue box with animation and fixing
up authorisation and 'Stop' state in the tristate). Quite a few
missing #ifndef REMOTE_HOTLIST bits from hotlist code added...

Customer build will not use <Choices$Write> or Boot:Choices for any
file finding now. UseProxy defaults to 'yes', MaxImages to 2. Res
file includes Proxy Address setting (save_save_choices() now writes
the ProxyAddress line).
@
text
@a37 1
<li><a href="ftp://micros.hensa.ac.uk/micros/arch/riscos/">Hensa Acorn archive</a>
d61 1
a61 1
<li><a href="http://www.nadn.navy.mil/html.html">HTML Resources</a>
a84 1
<li><a href="http://mrdata.simplenet.com/midi.htm">The Ultimate Theme Song MIDI Page</a>
d86 1
a86 1
<li><a href="http://www.users.dircon.co.uk/~bandc/a.wiseman/625/index.htm">6025 Television Room</a>
d93 1
a93 1
<li><a href="http://www.fibblesnork.com/lego/guide/">Fibblesnork</a>
@


1.8
log
@Check for WindowManager 3.97 and ensure Unicode$Path is set in all
!Run[D] files, don't set the Alias$@@PrintType_FF4 variable, and updated
Customer build ROM obey file variants. Various other changes to
the Run files for new module versions, updated paths to support
new positions of choices, hotlist and histories (see later), etc.

!Sprites[22] files hold small !app icons for some variants, and
an ic_browse sprite. Some variants now have a Sprites and Sprites22
file instead of just Sprites, with the former containing various
mode 12 or 15 specific sprites.

Text files dragged to the URL writable are treated as ANT URL files. This
relies on URLBarWrit (Toolbars.h) being a unique ID, which it should be,
but beware of the Hotlist and Choices numberspaces...

INPUT TYPE=BUTTON supported. Form items without a FORM tag are now shown
(as MSIE 4, but not NN 4).

'*', '-', '@@', '_' and '.' are not escaped when submitting forms now. The
Web interface to the IMDb now works.

INPUT TYPE=HIDDEN items will not affect the line height anymore - so
http://www.hotmail.com/ now has correctly aligned writable icons, for
example. Similarly, TAG_FORM and TAG_FORM_END items could push up
line height and don't anymore.

HRs with a specified pixel width will now influence the size of a table
cell (they didn't before).

BRs now checked by tagno field when the browser needs to know something
was an actual BR tag rather than just a line break signal, and by the
style bit entry when only the indication of a line break is required.

Table widths of 0 or 0% are ignored.

Trace.c updated to report height and background fields in a table_stream.

fm_putsl() writes a terminator into the string; the Forms.c routines were
calling this for displaying INPUT TYPE=PASSWORD fields using the FE_PassCode
literal string (a line of stars). This write into a read only data area
would make the debugger fault the access. A local char array is now used
instead, to get round this (note the use of var[]=literal rather than
var[sizeof(literal)]; strcpy(var, literal) due to some weird compiler bug
that copies the wrong thing into 'var' under some (undefined...)
circumstances).

Text areas don't scroll back to the top line when clicked in anymore;
single line writables don't scroll back to the left either. When
reentering a text area from 'above', the caret appears at the top line
rather than 'somewhere further down'...

ARROWS_MOVE_OUT compile time option at the top of Forms.c defines whether
you must press Tab/Shift+Tab to move between writable fields in forms or
if up/down will drop out of them, though if keyboard control is on this
is enforced (or you get trapped inside the form!).

urlutils_filetype_from_url now uses MimeMap module.

If fetcher is told a page is text, it'll check for a filename extension and
may choose to use this instead (e.g. it may find it's HTML instead). This
is to try and get around duff servers... (e.g. http://www.batalarms.co.uk/).

Save dialogues shouldn't flicker when options that don't change the
filetype are selected (before, the draggable sprite was always reset for
each selection). Noticed the erroneous setting of a static variable in
SaveFile.c by a call to this by SaveObject.c, and so added a flag to
savefile_set_filetype to deal with this - would have been possible to get
the wrong filetype sent to applications or at best the wrong filetype
sprite in the dialogue without that.

The caret shouldn't jump out of a form back to the URL writable if the page
reformats now.

Table background colours now supported (as in the colour you see in the
border space if the cellspacing is large enough; this is as in MSIE, not
as in Navigator). Drawfile output routines updated accordingly.

Corrected erroneous use of wimpt_dx() / wimpt_dy() in a couple of places
in Images.c, which meant that (say) 1x1 images didn't work correctly in
medium resolution display modes.

Now have support for save as text (component ID and event 0x12) and save
as Draw (component ID and event 0x13) buttons. Dubious conditions for
greying and ungreying the print, save source and view source buttons and
menu options sorted out as part of implementing the same for the two new
buttons; added greying out of their associated menu items in passing.

Turned kerning on in draw file objects (does mean a rather heinous
increase in file size, but this is the only way to ensure the draw file
matches the visible page).

Comments before functions in SaveDraw.c are now complete and up to date.

Image and visit histories now generate a crude hash number to speed up
searching for items. It does give a speed increase, though it's a
disappointingly small one.

Issue of left/right margins and cellpaddings sorted out. Now have
redraw_left/right_margin for finding out the basic gap you must leave.
redraw_left/right_gap then gives any extra indentation for LI, BLOCKQUOTE
or whatever. The last two can be subtracted from the display width to
get an available page width for any section of text. Note that
redraw_left_gap replaces redraw_margin. The redraw_start_x function
uses the above to work out where a line's left hand edge should be,
taking account of left/right/centre alignment. HRs have been fixed now
(they were quite broken in v1.30, I think) based on this new model and
the behaviour of MSIE/NN 4.

Fixed width of cells with no contents - cell padding values wouldn't
have worked properly as the reformatter returns 0 rather than the left
hand margin size if given no stream.

Removed FM_Absolute flags for Font_Paint (spotted by DBrown) - sets bit
2, which is reserved...?

IMG width and height in % terms now works correctly; a % of available
width (after margins and indents) or height on the main page or for
a table cell, if the image lies in one. Because of the chicken-and-egg
problem with the latter, the cell must specify a width and/or height
for things to work properly. If this is not done, you'll usually end
up with a 1:1 scaled image (as in Navigator 4, rather than ending up
with no image or even no cell (!), as in MSIE 4).

HEIGHT attribute on a TABLE tag is supported, but only in a crude
fashion; the extra height (if there is any) is distributed over the
rows in a linear fashion. This is probably all you have to do in
practice, but I haven't checked. To maintain a notion of min/max
height as well as width would of course require a great deal more
work...

If using client pull to reload a page with a fragment ('...#name')
specified, then the reload wouldn't work on the same page; it'd just
jump to the fragment position. This won't happen if b->reloading is
set now (so works in conjunction with client pull on the same page
forcing a non-cached fetch). Similarly, if POSTing to such a URL,
a fetch will proceed (both these fixes done originally for
http://jupiter.beseen.com/chat/rooms/g/1678/).

browser_inherit split to browser_inherit and browser_inherit_post_data;
the code for the latter didn't clear any post_data in the child before
copying from the parent either, and could cause flex errors (now fixed).

Res file for Ursula ('Desktop' Browse) build tweaked - bits in the
font choices dialogue renamed, and button bar rearranged to hold the
new Save As Draw button. Other builds have had Save As Draw and
Save As Text buttons added, or not, depending upon availability of
suitable sprites, required UI simplicity, etc.

Now have:

  Browse$ChoicesFile
  Browse$ControlsFile
  Browse$ChoicesSave
  Browse$ControlsSave

(the last two are new) for loading and saving of the Choices or Controls
files. If unset, <App$Dir>.Choices or <App$Dir>.Controls will be set.
E.g., you could set Browse$ChoicesFile to be:

  <App$Dir>.Choices,Choices:WWW.(app).Choices

for loading and

  <Choices$Write>.WWW.(app).Choices

for saving. (The browser never saves Controls at the moment, so the
relevant variable above isn't effectively implemented, but could be
in future). Similarly, to support asymetric loading/saving of the Hotlist,
there are HotlistSave, HistorySave and ImageHistorySave entries in Choices
to complement HotlistPath, HistoryPath and ImageHistoryPath (which are used
for loading). save_save_choices will create directories as needed to obtain
the given path (and has also been fixed in various areas that hadn't been
tested out until now; e.g. zero termination of the AppName$ChoicesFile
variable expansion...). !Run[D] files updated appropriately.

Table widthing code rewritten. Slower, but a lot better on the whole.
Still has some problems - still needs a final 'make sure nothing is
below minimum width' scan, which it should be possible to do without.
No time to fix this at present!

The reformatter will now 'glue together' an LI token followed by any
non-LI token; so a bullet point followed by an item should not be able to
have a line break inserted after the bullet because of very tight width
constraints (it could before - yuk...).

'about:' brings up a page about the browser and any Plug-Ins, as with
Navigator (for example).

URI files support titles, as per spec. version 8. Saving a current
location to the Hotlist will thus give a sensible title now (unless
you're in a frame, so there's no title to get...). Of course, v1.00
files without a title still work.

Note that NOBR is *not* supported in this build and this combined with
the new table widther may cause problems on some sites (e.g. Microsoft's
home page!).
@
text
@d8 8
a15 3
<li><a href="http://www.acorn.co.uk/">Acorn Home Page</a>
<li><a href="http://www.altavista.digital.com/">Alta Vista search</a>
<li><a href="http://www.unitedmedia.com/comics/dilbert/">Dilbert</a>
d18 1
d31 1
a67 1
<li><a href="http://www.inetgames.com/~eyezzz/">The Programming WareHouse</a>
d94 1
@


1.7
log
@Fixed some glitches in the modified status bar code (e.g. status inference
wasn't working properly).

Shift+Toggle size always opened to not obscure the icon bar. If CMOS is
set to always show the icon bar, then Shift+Toggle size is meant to
reverse sense and open to absolute full size. It now does this.

!Run[D] files now require URL 0.22, HTTP 0.64, FTP 0.22, Gopher 0.08
and File 0.32.

Minor overhaul of 'Docs.Notes' (with 'Docs.User' similarly updated) to
include a few new bits and pieces.

Timeout values of 0 now mean 'forever'. Plug-in status messages now have
their own timeout setting. New Messages token 'Actv' for extra info when
a status message times out and the status line drops to 'Viewing' or
'Ready' when there is still a Busy state registered by the Plug-in.

Small Fetch windows don't become visible briefly for Plug-in fetches
when the fetch is complete (for SeeFetches:no, where these windows
should be hidden all the time).

WebServe may be controlled through the Browse front-end via.
Wimp_MAppControl reason code 4 (Wimp_MAppControl_Configure). Note the
renaming internally of 'WebServ' or 'WebServe' has been changed to
'Proxy' (with lower case equivalents where relevant); proxy name
and starting details come from the Messages file 'ProxyName' and
'ProxyComm' tokens. More in 'Docs.Notes'.

Res files updated for image history and PRE/TT font aspect ratio
choices. 'Don't expire' labels changed to 'Expire' (oops, didn't
notice the change in the development Browse's Res file when I
updated all of the others until now...).

When printing, Wimp_PlotIcon appears to ignore R4 and R5, plots
'somewhere' on the page, and tries to get the sprite from the global
pool. This latter part normally causes an error to be raised; though
on my machine I just get a corrupted error message. The Desktop font
gets lost at this point too. All have yet to be fixed; as an
interim work around, Wimp_PlotIcon objects are never drawn at all
if the global 'printing' flag is set.
@
text
@d69 1
a69 1
<li><a href="http://www.gingging.demon.co.uk/teletubbies.html">GingGing's teletubbies Home Page</a>
@


1.6
log
@Following the last check-in - all build resources brought up to date.

Adjust-click on forwards/backwards buttons did not work in the intermediate
build, and now does.

Adjust-click on form submission buttons where the submit method is POST
will now work correctly, as the new view inherits the extradata block
of the old. Failure of this is signalled through
make_no_fetch_memory_error, code 16 (see updated Errors file in Docs).
Note the name change of extradata in this context; more details below.

The passing of forms POST data and extra headers for sending in an
HTTP request via. the URL module was all done through pointers into
flex blocks, and was therefore very unsafe. All relevant functions now
use pointers to pointers to the data.

To remove confusion on the umpteen uses of the word 'extradata', the field
in browser_data has been renamed to 'post_data'. The 'extradata' parameters
used within FetchPage.c were all disconnected from the extra header info /
form POST data stuff that extradata is usually associated with, and have
thus also been renamed, in this case to 'appnddata' (Append Data).

As well as X-NoProxy, the browser sends the 'proper' HTTP headers
Pragma:no-cache and Cache-Control:no-cache.

A redirection from a POST request was not handled correctly; despite
what HTTP specs say, you're supposed to use GET for the new URL. The
browser was, but when it chopped off the redundant header data in the
request didn't terminate it and left Content-Type in anyway...! Fixed.

Ctrl+Tab implemented - URL completion. Comes from the hotlist URLs,
hotlist titles, history hosts, paths, full URLs and lastly titles.
See code comments for more (history_find_match, hotlist_find_match).

TableSupport option added to Choices; it is read, can be set by the
front-end, but doesn't actually do anything else yet.

Reversed Choices' semantics on 'don't expire by...' for History. Added
'needs_redraw' flag to choices_get_contents so that, for example, if the
table border types change, browsers get redrawn.
@
text
@d67 9
@


1.5
log
@Removed 'The Onion' link from some Hotlist files. Time showed that the
site wasn't entirely Family Friendly (TM)... Removed Shift Control (it's
gone offline now), and corrected the Telegraph URL from ...the-telegraph...
to just ...telegraph...

StrongHelp manual generator now tries to work out the number of lines in
the table on the root page more intelligently.

Plug-in support extended to handle Shockwave. Quite a lot of underlying
work for this, including a pseudo cache system for temporary files.

Bug in redraw routines: they plotted background images within table
cells, when nothing should have been drawn. Oops. When background images
in cells are properly supported, this can get sorted out.

Tweaked vertical plot position of HRs (up to 4 OS units too high before due
to rounding).

Various Res file bits and pieces, Ursula build taken up to v1.26 beta
for release on the Browser site. *Note* not all resources are up to date!
This will be done after AW97.
@
text
@a53 1
<li><a href="http://www.wco.com/~png/">PNG (Portable Network Graphics) home page</a>
a55 1
<li><a href="http://www.microsoft.com/workshop/design/colors/X11_Hue.HTM">X11 Colour Names: Sorted by hue</a>
d57 1
@


1.4
log
@Now working on source merged with Kevin Bracey's internationalisation
support. UNIFONT is undefined in the Make File for now. All Res and
Choices files updated appropriately.

Having sorted out the old Choices and Messages to form Choices, Controls
and Messages, this build has had the same cleaning up done internally.
This includes greater consistency in naming schemes and the removal of
the inconsitent choices items - e.g. Choices file entries saying 'delay
images' and 'plain backgrounds' where internally all the flags say 'show
images' and 'show backgrounds'. ChoiceDefs.h and CtrlDefs.h added to
clarify the meaning of some fields, though usage of these is not 100%
in the source (there are cases where parameters are passed through to
functions as ints, and those functions still check these against hard
coded values rather than the #define stuff).

Fetcher status return bits (connected, sent request, etc.) now reflected
in status bar. Progress during fetchs to files are reported by %, where
the size of the object is known. Exceeding 100% drops back to a byte
counter, in case the estimated size was wrong. The progress counter
may be updated after specific delays, rather than 'as often as possible',
to reduce flicker (as requested by D.Brown some time ago).

I've done a small rewrite of the fetch prioritisation scheme in FetchPage.c;
how well this performs in general use across different processor speeds
remains to be tested, but certainly it has some advantages. For each small
fetch window before the rewrite, a 4cs tight loop was entered - this gave a
noticable and substantial drain to the Desktop performance if more than one
was opened. Now, several can be up at once with little hit. The actual file
fetch is on half the priority it was before, with all others taken back
just a bit - e.g. from 20cs per poll to 15cs per poll for flat out
reformatting. You don't seem to lose much time on the format in practice,
and the Desktop feels quite a bit lighter at the same time. There's the
potential for smoother frameset loading in this scheme, too.

When Shift+Clicking on a link meant you still fetched inside the main
browser window, several fetches could occur in a frameset - one per frame.
However, now that you can only do this by clicking on a link that leads to
non-displayable data - or by turning off the small fetch windows by
setting UseSmall to 'no' in Choices - a bug where fetchpage_preprocessed
would stop such fetches as new ones were started was revealed.
The API to frames_abort_fetching has now been extended to include a
'stop file spooling too' flag, allowing a fix to be made by having
fetchpage_preprocess's calls not set this (and it doesn't check the
savelink flag is unset before proceeding, since frames_abort_fetching
does that implicitly now).

Had left the RAM transfer buffer at 16 bytes (from testing) accidentally...
Oops. Upped it to 4K. In addition, when loading data by RAM transfer,
the browser didn't notice if a RAMFetch bounced during the transfer. It
would be treated as a 'first' RAMFetch bounce, basically, and try to go to
file transfer - oops. Fixed.
@
text
@d2 4
a5 1
<head><title>Hotlist</title></head>
d39 1
a39 1
<li><a href="http://www.the-telegraph.co.uk/">The Telegraph</a>
a47 1
<li><a href="http://www.shiftcontrol.com/">Shift Control</a>
d54 1
a83 1
<li><a href="http://www.theonion.com/">The ONION - Number One In News</a>
@


1.3
log
@As warned in the last log, pretty much all event codes and component IDs
have now changed along with many of the names, to provide a consistent
name and numberspace for events and components. This also minimises
number clashes (e.g. as was, the Save File origin when opened from a
Hotlist menu with an already-used component ID). To get full details on
this, please carefully read through TBEvents.h.

Res files, Sprites files and Messages files have been updated again both
due to the above, and routine additions (e.g. message support for a few
Hotlist bits and pieces). !Run[D] files updated for FTP 0.11 and
HTTP 0.36.

In the Makefile, the Customer objects list was missing Save - must have
moved something when I should've copied it, when adding in SaveFile or
SaveObject in all probability. Now fixed. Couple of other bits and bobs
fixed in the build environment (e.g. stuff saying !Argo instead of
!Customer). Oh, and I've altered the MakeFile copy options again to the
best compromise I can come up with. Newer is turned on for everything
except !Run[D] and !RunImage, since both of those change between debug
builds - otherwise if you'd built debug and non-debug versions, it was
not possible to switch between them - one version would have the newer
timestamp and thus never get overwritten.

The default hotlist has had a few items added - that'll be about the end
of it, I think; there's more than enough stuff in there now.

Saving of the hotlist from the document menu and of URI files,
directories and selections from the hotlist menu tree is now implemented
- this new save system rocks... Oh, and you can save all images and
backgrounds as sprites.

Saving of items with Shift+Click to other applications directly now
works, and is robust. Unique Scrap filenames are used, with data load
bounces (e.g. if some pra - er, person quits the app they're sending
to) working correctly - that is, give an error, keep the file, rename
it to something safe, and open the directory it lies in. As opposed
to normal app-to-app bounces, where the scrap file is deleted (see
PRM 3-254). This means you can now look at README files in FTP
sites, say, without using a disc intermediate. Or you can send pictures
straight to ChangeFSI, fetch HTML links into editors, and so-on, and
so-on - it's all very funky. Known problems include the ambiguous
'invalid component ID' instead of 'file open' for *normal* (straight to
disc) shift+click saves, and I think I'll introduce a unique name
guarantee of some sort to stop 'file open' in the first place. Odd
that the really tricky part (app-to-app) should be least likely to
suffer from this!
@
text
@d7 1
a7 1
<li><a href="http://www.unitedmedia.com/comics/dilbert">Dilbert</a>
d29 1
a29 1
<li><a href="ftp://ftp.uni-stuttgart.de/pub/systems/acorn">Stuttgart Acorn archive</a>
a72 1
<li><a href="http://moose.spesh.com/teletubbies/index.html">Time For Teletubbies</a>
@


1.2
log
@Very long log entry alert - but hey, beats 'Bug fixed' (sorry, Richard) ;-)

Open URL implementation more or less complete, though may undergo UI
revision at a later date to allow named frames to be targetted. Hope to use
the ideas in this code as the foundation for other general dialogues.

In token stream dump for TRACE builds, table head items were not indented
as far as they should have been - this is fixed; and manual toolbar redraw
routines have been removed. They never worked, were commented out, and
would never be used in that form anyway.

DragBox source added, but it isn't at all complete and won't work - this is
an 'in spare time' thing. We need custom drag boxes constrained to windows
for the hotlist, and unconstrained for frame border resizing... Hey ho.

Ancestor window extents match visible areas if there are frames (no more
scrolling framesets...!). Frame resizing works whilst new documents fetch
without pulling the extent down now. However, frame horizontal extents
never shrink until a reload which is nasty, and this is all due for a
rewrite. Frames border redrawing routine moved out of Redraw.c and into
Frames.c. Bug regarding the mouse rectangle and frame border widths
(rectangle was too large, so you could squash the edges) for edge-drag
frame resizes fixed.

Window width change reformat tolerance fixed; you could creep the window
width down or up forever without any reformat, and centred objects would
move but not be redrawn (thereby giving rise to subsequent redraw errors).

Filetype on objects saved through Shift+Click correct. Save Source dialogue
recognises if that source is plain text, rather than assuming HTML. A
browser that fetches a file remembers the old store size it had before the
save, so even though the data is now ditched, it reports the same amount of
data fetched afterwards (looked awful when this could, for example,
suddenly say '0' after a file save). Progress indicator is now fully aware
of one or many file saves inside a frameset and reports the number of
saves, a colon, and the cumulative saved data count, instead of reporting
the sum total of fetched data in all frames, including non-file save stuff
(note that for just 1 save, '1:' is not shown as a special case for the
most common condition). A bug related to this, where you could in fact only
do one fetch per frame*set*, has been corrected (only one fetch allowed per
frame still, this is unlikely to ever change).

Hotlist support added (D.Brown's source), with various bits of integration
and modification still in progress there. Note additions to the Messages
files. On the subject of Messages, the whole mucky business about what
goes in Messages or Choices (and a few bugs where lookup_choice was used
instead of lookup_token or vice versa) has been sorted out. Messages
contains, more or less, just that. Choices contains user configurable
stuff which generally can't mess things up too badly. A new file, Controls,
is a Messages file holding the non-user configurable choices, which can
generally make things go badly wrong if misused. A lot of these are tied
to the Res file. StrongED users can get these to automatically fold out
the various sections (EMail me for details). Sorry, but at the time of
writing, Zap doesn't do folding... =8*P

Two bugs with images. Asking for images to be shown in browser B when
browser A uses the same ones and was loaded first didn't work correctly,
and now does (a bit weird - browser A does the fetch and browser B does the
display...). Second one occurred when the background image was also used on
the page as a foreground image. This has been fixed by flagging background
images in the image_info structure, and checking this before cross
referencing. This bit also allowed the image_restart_fetches API to be
extended, so that just background or foreground images may be fetched if
they weren't already and the user asked the browser to show them. Before,
the whole lot had to be fetched together (so turning on 'display
backgrounds' will now kick off an image fetch if required, you don't
need to reload the page anymore).

Makefile copy options tweaked to be 'newer' (so if you're testing with some
temporary Choices file or something, it won't write over it at the end of
every export), and REMOTE_HOTLIST flag added for Customer builds - means
the Hotlist.c functions aren't needed; the old, hotlist-by-file method is
used. Added support for Customer build (see later), though there were very
few additions needed in practice.

Table printing fixed - in many ways it wasn't broken, it was image printing
causing the oddities ever since the global image pool was introduced (this
is, again, fixed). The 'reformat to fit page' option didn't work as coded
any more; tables store cell addresses in the HStreams, so you can't then do
a background reformat in a different browser. Hence, it now has to reformat
to the page width, print, then put the page back again, all in the actual
displayed browser. This doesn't feel as slow in use as it perhaps should,
considering what is going on... Note that a line of a defined fraction (see
Print.h) of page height will now split over page boundaries, so tall images
or tall tables don't cause problems now (aside from the obvious problem of
having the line split over a page at all!). There was a bug in the routine
to print from a given start point until 'n' pages had been filled, in that
it always filled 'n + 1' - now fixed. Finally, as part of the printing
tweaks, a new dialogue exists - PrintStyle - with a similarly named source
file added to deal with it.

Global history auto save / load done, but only to the Choices file path -
the whole browser is still strictly single user at present, with all the
extra work for a multiuser Customer environment yet to be done. This has
shown up a global history corruption problem which I haven't fixed yet.

Rationalising TBEvents.h - things are migrating out of it, and into more
appropriate sources (e.g. definitions relating to the Open URL dialogue are
going into OpenURL.h, etc.). Event codes were at one stage deliberately
diverged in numberspace from the component IDs of typical gadgets raising
the events, to avoid anyone getting confused and thinking the IDs and event
codes must match. However, this is in fact unlikely and it is much easier
to remember the fewer numbers that result from tying the two together where
possible. This has resulted in changes to event codes raised in the
following objects of all Res files: Authorise, Find, OpenURL, and
PrintStyle.

And finally - !Run[D] files for all variants updated to require the latest
toolbox and fetcher modules. All Res files updated for hotlists etc. and
sprites files updated appropriately. All Messages, Choices and Controls
files brought in sync., and an Customer build has been added (based on the
Desktop build binary with different resources).

That's all for now...
@
text
@d6 1
d8 1
a8 2
<li><a href="http://www.altavista.digital.com/">Alta Vista search</a>
<h4>Other search engines</h4>
d18 1
d24 1
d34 7
d49 1
a49 1
<h4>HTML</h4>
d55 1
d57 1
a57 8
<h4>News</h4>
<ul>
<li><a href="http://www.the-telegraph.co.uk/">The Telegraph</a>
<li><a href="http://www.the-times.co.uk/">The Times</a>
<li><a href="http://www.guardian.co.uk/">The Guardian</a>
<li><a href="http://cnn.com/">CNN Interactive</a>
</ul>
<h4>Others</h4>
d67 11
a81 1
<li><a href="http://mrdata.simplenet.com/midi.htm">The Ultimate Theme Song MIDI Page</a>
d83 1
a83 1
<li><a href="http://www.like.it/vertigo/cliches.html">The Movie Cliches List</a>
d94 1
@


1.1
log
@Added various TaskObey files to make different browser variants (the Makefile
has been updated to support this). At present, TARGET must be set for the
Make file to work (some oddity in AMU causing problems here). Added
Multiuser.h to cope with a non-SINGLE_USER build for Customer.
@
text
@d2 2
a3 2
<head>
<title>Browser Hot List</title></head><body><h2>Browser Hot List</h2>
d5 78
a82 17
    <hr align=center>
    <li><a href="http://www.acorn.co.uk/">Acorn Home Page</a>
    <li><a href="http://www.xemplar.co.uk/">Xemplar Home Page</a>
    <hr align=center>
    <li><a href="http://www.altavista.digital.com/">Alta Vista search</a>
    <li><b><a href="http://altavista.software.digital.com/">Alta Vista software</a></b>
    <li><a href="http://www.yahoo.com/">Yahoo search</a>
    <li><a href="http://www.infoseek.com/">Infoseek search</a>
    <li><a href="http://www.lycos.com/">Lycos search</a>
    <li><a href="http://www.excite.com/">Excite</a>
    <hr align=center>
    <li><a href="http://www.dejanews.com/">DejaNews</a>
    <li><a href="http://www.w3.org/">World Wide Web consortium</a>
    <hr align=center>
    <li><b><a href="http://www.unitedmedia.com/comics/dilbert">Dilbert</a></b>
    <hr align=center>
</ul><p>
@
