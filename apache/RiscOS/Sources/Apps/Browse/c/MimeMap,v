head	1.5;
access;
symbols
	Browse-2_16:1.5
	Browse-2_15:1.5
	Browse-2_14:1.5
	Browse-2_13:1.5
	Browse-2_12:1.5
	Browse-2_11:1.5
	Browse-2_10:1.5
	Browse-2_09:1.5
	ahodgkin_208_i4_2:1.5
	ahodgkin_208_i4:1.3
	ahodgkin_208_i3:1.3
	ahodgkin_208_i2:1.3
	ahodgkin_208_i1:1.3
	ahodgkin_207release:1.3
	ahodgkin_206release:1.3
	ahodgkin_205release:1.3
	ahodgkin_204release:1.3
	ahodgkin_202release:1.3
	ahodgkin_201release:1.3
	ahodgkin_200release:1.3
	ahodgkin_133beta:1.3
	ahodgkin_132beta:1.3
	ahodgkin_131beta:1.3
	ahodgkin_130beta:1.3
	ahodgkin_129:1.3
	ahodgkin_128beta:1.2
	ahodgkin_128alpha:1.2
	ahodgkin_127beta2:1.2
	ahodgkin_127beta:1.2
	ahodgkin_126beta:1.2
	ahodgkin_AW97patch:1.2
	ahodgkin_AW97:1.1;
locks; strict;
comment	@# @;


1.5
date	2000.11.14.08.45.07;	author ahodgkin;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.31.15.58.41;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	97.12.12.11.17.55;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	97.10.24.14.09.17;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	97.10.07.17.03.44;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@  Load balancer pulled apart. DebugLib support. Temporary debug in place.
Detail:
  This is in the middle of some load balancer changes, but I'm checking it
  in as there's a sweeping source code change to use DebugLib. See Global.c
  for full details. Temporary debug code for the load balancer stuff is
  currently held under undocumented area "test".
Admin:
  This build now identifies itself as 2.08 i2-4 and says Pace on the about:
  page. Run for some time with no unexpected problems. Tried a mixture of
  debug levels successfully.

Version 2.08. Not tagged
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    MimeMap.c                                         */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Interfacing with the MimeMap module.              */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 07-Oct-1997 (ADH): Created.                       */
/*          24-May-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include <kernel.h>
#include <swis.h>

#include <tboxlibs/wimp.h>
#include <tboxlibs/event.h>

#include "Global.h"
#include "Utils.h"

#include "MimeMap.h"

/**************************************************************/
/* mimemap_mime_to_riscos()                                   */
/*                                                            */
/* Converts a Mime type to a RISC OS filetype.                */
/*                                                            */
/* Parameters: Pointer to a null-terminated Mime type string; */
/*                                                            */
/*             Pointer to an int, in which the RISC OS        */
/*             filetype is written.                           */
/**************************************************************/

_kernel_oserror * mimemap_mime_to_riscos(const char * mime, int * riscos)
{
  if (!mime || !riscos) return NULL;

  return _swix(MimeMap_Translate,
               _INR(0, 2) | _OUT(3),

               MimeMap_MimeType_Mime,
               mime,
               MimeMap_RISCOSType_Number,

               riscos);
}

/**************************************************************/
/* mimemap_riscos_to_mime()                                   */
/*                                                            */
/* Converts a RISC OS filetype to a Mime type. The maximum    */
/* buffer size required is not defined in the MimeMap module  */
/* documentation, so use MimeMap_MaximumBufferSizeRequired if */
/* you want to be sure that the string will not be truncated  */
/* (it is safe to use shorter buffers, though), defined in    */
/* MimeMap.h.                                                 */
/*                                                            */
/* Parameters: The RISC OS filetype;                          */
/*                                                            */
/*             Pointer to a buffer, in which a                */
/*             null-terminated Mime type string will be       */
/*             written;                                       */
/*                                                            */
/*             Size of the buffer.                            */
/**************************************************************/

_kernel_oserror * mimemap_riscos_to_mime(int riscos, char * buffer, int buffer_size)
{
  char mime_buffer[MimeMap_MaximumBufferSizeRequired];

  if (!buffer || !buffer_size) return NULL;

  RetError(_swix(MimeMap_Translate,
                 _INR(0, 3),

                 MimeMap_RISCOSType_Number,
                 riscos,
                 MimeMap_MimeType_Mime,
                 mime_buffer));

  strncpy(buffer, mime_buffer, buffer_size - 1);
  buffer[buffer_size - 1] = 0;

  return NULL;
}

/**************************************************************/
/* mimemap_extension_to_riscos()                              */
/*                                                            */
/* Converts a filename extension to a RISC OS filetype.       */
/*                                                            */
/* Parameters: Pointer to a null-terminated filename          */
/*             extension, with or without the dot;            */
/*                                                            */
/*             Pointer to an int, in which the RISC OS        */
/*             filetype is written.                           */
/**************************************************************/

_kernel_oserror * mimemap_extension_to_riscos(const char * ext, int * riscos)
{
  if (!ext || !riscos) return NULL;

  return _swix(MimeMap_Translate,
               _INR(0, 2) | _OUT(3),

               MimeMap_MimeType_Extension,
               ext,
               MimeMap_RISCOSType_Number,

               riscos);
}

/**************************************************************/
/* mimemap_extension_to_mime()                                */
/*                                                            */
/* Converts a filename extension to a Mime type. The maximum  */
/* buffer size required is not defined in the MimeMap module  */
/* documentation, so use MimeMap_MaximumBufferSizeRequired if */
/* you want to be sure that the string will not be truncated  */
/* (it is safe to use shorter buffers, though), defined in    */
/* MimeMap.h.                                                 */
/*                                                            */
/* Parameters: Pointer to a null-terminated filename          */
/*             extension, with or without the dot;            */
/*                                                            */
/*             Pointer to a buffer, in which a                */
/*             null-terminated Mime type string will be       */
/*             written;                                       */
/*                                                            */
/*             Size of the buffer.                            */
/**************************************************************/

_kernel_oserror * mimemap_extension_to_mime(const char * ext, char * buffer, int buffer_size)
{
  char mime_buffer[MimeMap_MaximumBufferSizeRequired];

  if (!ext || !buffer || !buffer_size) return NULL;

  RetError(_swix(MimeMap_Translate,
                 _INR(0, 3),

                 MimeMap_MimeType_Extension,
                 ext,
                 MimeMap_MimeType_Mime,
                 mime_buffer));

  strncpy(buffer, mime_buffer, buffer_size - 1);
  buffer[buffer_size - 1] = 0;

  return NULL;
}
@


1.4
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@a37 5
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

@


1.3
log
@There are a few known significant problems with this code but it's being
checked in so the Choices can be worked on. Note that Res files etc. are
not up to date across all builds. Progress is as follows...

Bug report prompted me to do this - now ignore <p> tags straight after
<li> tags, so '<ul><li><p>Some text' works as the author (or automatic
generator, more commonly) intended.

A <p> tag before a table will be acted upon now (it was ignored before).
Something like <li><p><table...> will give a line break and paragraph
space after the <li> despite the changes mentioned above, as in other browsers.
Both browsers differ from Navigator, where the table appears alongside
the <li> tag.

Multiple BR tags work as in MSIE / Navigator (they don't collapse to
zero height anymore).

For the above, line height (and so, <br><br> or <p> spacing) is now
calculated inside reformat_text_line_height, and is used with either
a token to get the text height at a given size (e.g. for general line
spacing or multiple BR tags) or NULL for normal size text (e.g. for
P spacing, though this value is in practice later scaled by 7/8ths in
reformat_check_height). Note this behaviour is exhibited by MSIE 4;
v3 gave two BRs the same spacing as one P (i.e. not font size
dependent).

Save dialogues can have an option button or couple of radios to
switch between various formats (e.g. URI or URL, sprite or original
format). See 'Docs.Notes' for more. The back-end to this is now
implemented (i.e. at the moment, save as URI or URL, save as original
image format). Note that when saving background images, a leafname
based on the original fetch URL is now offered rather than a generic
'Background'.

Internal URL scheme changed to be all lower case, so relativisation
through URL_Fetcher still makes sense... :-/

Holding down 'shift' when clicking on stop reverses the interpretation
of the Controls file 'StopWebServe' entry.

Fixed row / column count for exporting tables as text; fixed a few
bits and pieces of internal URL scheme stuff which got broken when
HTMLLib started using URL_Fetcher's relativisation.
@
text
@d15 12
a26 9
/***************************************************/
/* File   : MimeMap.c                              */
/*                                                 */
/* Purpose: Interfacing with the MimeMap module.   */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 07-Oct-97: Created.                    */
/***************************************************/
d32 2
a33 1
#include "swis.h"
d35 7
a41 2
#include "wimp.h"
#include "event.h"
a42 1
#include "svcprint.h"
d48 10
a57 11
/*************************************************/
/* mimemap_mime_to_riscos()                      */
/*                                               */
/* Converts a Mime type to a RISC OS filetype.   */
/*                                               */
/* Parameters: Pointer to a null-terminated Mime */
/*             type string;                      */
/*                                               */
/*             Pointer to an int, in which the   */
/*             RISC OS filetype is written.      */
/*************************************************/
d73 18
a90 19
/*************************************************/
/* mimemap_riscos_to_mime()                      */
/*                                               */
/* Converts a RISC OS filetype to a Mime type.   */
/* The maximum buffer size required is not       */
/* defined in the MimeMap module documentation,  */
/* so use MimeMap_MaximumBufferSizeRequired      */
/* if you want to be sure that the string will   */
/* not be truncated (it is safe to use shorter   */
/* buffers, though), defined in MimeMap.h.       */
/*                                               */
/* Parameters: The RISC OS filetype;             */
/*                                               */
/*             Pointer to a buffer, in which a   */
/*             null-terminated Mime type string  */
/*             will be written;                  */
/*                                               */
/*             Size of the buffer.               */
/*************************************************/
d112 11
a122 13
/*************************************************/
/* mimemap_extension_to_riscos()                 */
/*                                               */
/* Converts a filename extension to a RISC OS    */
/* filetype.                                     */
/*                                               */
/* Parameters: Pointer to a null-terminated      */
/*             filename extension, with or       */
/*             without the dot;                  */
/*                                               */
/*             Pointer to an int, in which the   */
/*             RISC OS filetype is written.      */
/*************************************************/
d138 19
a156 21
/*************************************************/
/* mimemap_extension_to_mime()                   */
/*                                               */
/* Converts a filename extension to a Mime type. */
/* The maximum buffer size required is not       */
/* defined in the MimeMap module documentation,  */
/* so use MimeMap_MaximumBufferSizeRequired      */
/* if you want to be sure that the string will   */
/* not be truncated (it is safe to use shorter   */
/* buffers, though), defined in MimeMap.h.       */
/*                                               */
/* Parameters: Pointer to a null-terminated      */
/*             filename extension, with or       */
/*             without the dot;                  */
/*                                               */
/*             Pointer to a buffer, in which a   */
/*             null-terminated Mime type string  */
/*             will be written;                  */
/*                                               */
/*             Size of the buffer.               */
/*************************************************/
@


1.2
log
@Various fixes in the code required for Shockwave support (many invalid
assumptions about the OBJECT tag structure). Not finished yet though.

Played around with signal handling 'n' all that to try and get sensible
errors reported for aborts etc. using code by KBracey. Need a ROM patch
for _swix on RISC OS 3.7 upwards (or a local fixed copy of _swix),
otherwise should sort out most of the problems seen (mostly 'no stack
for trap handler' errors and a distinct lack of a register dump).

Plug-In view on redraw / ASAP choices now work as they should (ASAP
was previously broken).

Version numbers in Messages incremented to 1.25 (23 Oct 1997).

For Plug-In support, created new source file RMA.c/h to handle RMA
claims and releases, in an attempt to ensure leakage never happens.
As such, this source is *slightly* more advanced than that in the 1.25
AW '97 build, though functionally identical. Well, that is, at least
you can confirm zero RMA leakage with '-debug LMem' in TRACE builds now!

Intend to do a consistency check on comment syntax in all sources
shortly - I need to rebuild my StrongHelp manuals; can't keep track
of all of these new functions...
@
text
@d88 1
a88 2
  _kernel_oserror * e;
  char              mime_buffer[MimeMap_MaximumBufferSizeRequired];
d158 1
a158 2
  _kernel_oserror * e;
  char              mime_buffer[MimeMap_MaximumBufferSizeRequired];
@


1.1
log
@Added MimeMap module support. OBJECT routines now use this to determine
if the item is an inline image, and if so pass it to the image routines.
At present, support relies on a (correct) content type.
@
text
@d106 71
@
