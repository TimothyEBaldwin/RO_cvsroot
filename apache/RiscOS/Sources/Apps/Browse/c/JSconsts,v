head	1.4;
access;
symbols
	Browse-2_16:1.4
	Browse-2_15:1.4
	Browse-2_14:1.4
	Browse-2_13:1.4
	Browse-2_12:1.4
	Browse-2_11:1.4
	Browse-2_10:1.4
	Browse-2_09:1.4
	ahodgkin_208_i4_2:1.4
	ahodgkin_208_i4:1.2
	ahodgkin_208_i3:1.2
	ahodgkin_208_i2:1.2
	ahodgkin_208_i1:1.2
	ahodgkin_207release:1.2
	ahodgkin_206release:1.1;
locks; strict;
comment	@# @;


1.4
date	2000.11.14.08.45.06;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.31.15.58.38;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	98.09.07.11.46.51;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	98.07.09.10.27.13;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@  Load balancer pulled apart. DebugLib support. Temporary debug in place.
Detail:
  This is in the middle of some load balancer changes, but I'm checking it
  in as there's a sweeping source code change to use DebugLib. See Global.c
  for full details. Temporary debug code for the load balancer stuff is
  currently held under undocumented area "test".
Admin:
  This build now identifies itself as 2.08 i2-4 and says Pace on the about:
  page. Run for some time with no unexpected problems. Tried a mixture of
  debug levels successfully.

Version 2.08. Not tagged
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    JSconsts.c                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: JavaScript support - fill in various string       */
/*          constants. Provides also some widely used client- */
/*          side types.                                       */
/*                                                            */
/*          Based in part on source in libmocha from the      */
/*          Mozilla browser sources.                          */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 05-May-1998 (ADH): Created.                       */
/*          24-May-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#include <stdlib.h>
#include <string.h>

#include <kernel.h>
#include <swis.h>

#include <HTMLLib/HTMLLib.h>

#include <tboxlibs/wimp.h>
#include <tboxlibs/wimplib.h>
#include <tboxlibs/event.h>

#include "Global.h"
#include "Utils.h"

#include "JavaScript.h"

#ifdef JAVASCRIPT

  #include "JSconsts.h"

  /* See JSconsts.h for declarations for externally visible items */

  char         js_language_name    [] = "JavaScript";
  char         js_content_type     [] = "application/x-javascript";

  char         lm_onLoad_str       [] = "onload";
  char         lm_onUnload_str     [] = "onunload";
  char         lm_onAbort_str      [] = "onabort";
  char         lm_onError_str      [] = "onerror";
  char         lm_onScroll_str     [] = "onscroll";
  char         lm_onFocus_str      [] = "onfocus";
  char         lm_onBlur_str       [] = "onblur";
  char         lm_onSelect_str     [] = "onselect";
  char         lm_onChange_str     [] = "onchange";
  char         lm_onReset_str      [] = "onreset";
  char         lm_onSubmit_str     [] = "onsubmit";
  char         lm_onClick_str      [] = "onclick";
  char         lm_onMouseDown_str  [] = "onmousedown";
  char         lm_onMouseOver_str  [] = "onmouseover";
  char         lm_onMouseOut_str   [] = "onmouseout";
  char         lm_onMouseUp_str    [] = "onmouseup";
  char         lm_onLocate_str     [] = "onlocate";
  char         lm_onHelp_str       [] = "onhelp";

  char         lm_focus_str        [] = "focus";
  char         lm_blur_str         [] = "blur";
  char         lm_select_str       [] = "select";
  char         lm_click_str        [] = "click";
  char         lm_scroll_str       [] = "scroll";
  char         lm_enable_str       [] = "enable";
  char         lm_disable_str      [] = "disable";

  char         lm_toString_str     [] = "toString";
  char         lm_length_str       [] = "length";
  char         lm_document_str     [] = "document";
  char         lm_forms_str        [] = "forms";
  char         lm_links_str        [] = "links";
  char         lm_anchors_str      [] = "anchors";
  char         lm_plugins_str      [] = "plugins";
  char         lm_applets_str      [] = "applets";
  char         lm_embeds_str       [] = "embeds";
  char         lm_images_str       [] = "images";
  char         lm_layers_str       [] = "layers";
  char         lm_location_str     [] = "location";
  char         lm_navigator_str    [] = "navigator";
  char         lm_netcaster_str    [] = "netcaster";
  char         lm_components_str   [] = "components";

  char         lm_parentLayer_str  [] = "parentLayer";
  char         lm_opener_str       [] = "opener";
  char         lm_closed_str       [] = "closed";
  char         lm_assign_str       [] = "assign";
  char         lm_reload_str       [] = "reload";
  char         lm_replace_str      [] = "replace";
  char         lm_event_str        [] = "event";
  char         lm_methodPrefix_str [] = "#method";
  char         lm_methodArgc_str   [] = "#margc";
  char         lm_methodArgv_str   [] = "#margv";
  char         lm_getPrefix_str    [] = "#get_";
  char         lm_setPrefix_str    [] = "#set_";
  char         lm_typePrefix_str   [] = "#type_";

  const char * lm_event_argv       [] = { lm_event_str };

#endif
@


1.3
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@a44 5
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

@


1.2
log
@Everyone else seems to be checking lots of stuff in lately, so I've
decided to join in. This is an intermediate check-in and so not all
resources etc. will be up to date. You should be able to make Phoenix
and a debug build out of it. As a reminder, to make a JavaScript build:

 * Build JSLib and NSPRLib. Recommend you leave -DUSEMEMLIB in there (as
   used by default) so you can watch it leak into a dynamic area... :-)
   If you do this, you'll need to build MemLib too, of course. If you
   do NOT use MemLib, *undefine JS_USING_MEMLIB in Main.c*!
 * Run !MkClean. This now strips dynamic dependencies from the MakeFile
   automatically, to save you having to do it yourself.
 * Run one of the TaskObey files with the "J" suffix, e.g. !DeskBrwsJ -
   this uses the same .o directory for object files and exports to the
   same position in the Targets directory as the non-JavaScript build,
   but it does produce a unique binary in 'abs' and symbols table in
   'syms'.
 * Sourcing an appropriate !Run (with increased WimpSlot value), !Boot
   and About resource is done automatically.
 * Some, but not all of the !xxxD (debug) TaskObey files will make
   JavaScript versions in passing - check the JSUFFIX value on the Make
   command line parameters in the file.

This'll only work on RISC OS 3.1 due to the use of MemLib.

Here's the change list:

Included MNG icons in sprites files; added Sprites23 for some builds.
Added in ANT URL file icon (b28) derived from URI file icon, because
the Save dialogue can need it.

No, you do *not* need to define the same keyboard shortcuts in each
frame since the ancestor keeps the input focus and we've basically
dropped non-nested Wimp support. Maintaining no less than 4 lists of
identical shortcuts was a pain. Some Res files now only have the
lists in the main browser window and button bar objects (these two
are both required still).

Ursula build Markers button arrangement changed from 1x3 horizontal to
2x2 tilted, as in Phoenix, by popular demand.

Couple of hotlist bugs fixed; dragging an item and deleteing it with
Ctrl+X didn't terminate the drag, and deleteting an item underneath a
menu opened for it didn't close the menu.

'SendReferer' option added to all Choices files, all set to 'always'.
Put just beneath 'Clone' as it refers to header items, though really,
both Clone and SendReferer should probably be in the "Fetch controls"
section rather than "Multiuser environments and proxying"! Front-end
control of this is available.

In image_export_original, save_save_source, save_transfer_source and
save_save_object, flex_set_budge(0) was called to lock the heap but the
return value wasn't stored. flex_set_budge(1) was then used to unlock
the heap. All calls now remember and restore the old value, which is
both safer in case one calls another and allows the flex_set_budge
call in Main.c to have an application-wide meaning, as intended.

Some restructuring to the data load and RAM transfer sections of
Protocols.c; remote hotlist builds wouldn't allow files to be loaded
to browser windows before, and can now drop URL, URI or text files to
the Open URL dialogue.

New option "MinimumFontSize", lets the 'size' attribute of the 'font'
element be overridden. Default value is 1, to allow the full range of
values for the attribute. Setting to 7, for example, would give font
size 7 text at all times. Another new option, "ToggleOnXOnly", to
make Toggle Size only extend the window vertically (with Ctrl then
being used to toggle to genuine full size, rather than vice versa).
All Choices files updated to hold both of these options; only the
first has front-end control available (see debug build Res file).

JavaScript Document object exists; frames array etc. working. Can now
just about use "http://www.acorn.com/~ahodgkin/jschain/" but it does
abort after a bit - problems with frames again, I suspect. Is is pretty
slow, too. Can now press Escape to terminate a script.

Main.c erroneously referred to Controls file entry "StopWebServe" as
"StopWebProxy". Fixed.

Keyboard shortcuts to raise SaveFile are now possible in a general sense;
the code before was in the ToBeShown handler and just checked for a parent
component of -1. It then assumed "save frame HTML source". Now there's the
savefile_raise_from_shortcut function, which together with the seven new
event codes in SaveFile.h allows saving of HTML source and frame location,
export of links, images, backgrounds and the page as text or draw, to all
be invoked by keyboard shortcuts. Some Res files have some of these defined.

In reformat_check_height, the first check to see if setpara should be set
references a field in tpLast without checking if it is NULL. Whilst the
'line > 0' check should mean that tpLast wasn't NULL anyway, a direct
call to the function from outside of the reformatter might have tripped
up on this - the check for tpLast != NULL is now made.

Adjust-click on close icon in window showing file: URL attempts to open
the parent Filer window.

Reformatter used to try and find a selectable token if keyboard control
was enabled in a really stupid place - could make reformatting become
very slow if no selectables were present, especially if the page had a
few tables on it. Preprocessor now does this (since it goes through all
of the tokens anyway), the reformatter just doing a last check to ensure
no frames have obscured the selectable and if so, it tries to move it.
Done in the reformatter as generating a line array implies the data really
is visible.

Ctrl+Tab URL completion now builds a full list of matches from the hotlist
and history and can cycle through them (Ctrl+Shift+Tab stepping backwards).

Will give a real error rather than just "Data Abort" if it goes wrong
now. Someone somewhere is setting bit 30 of the error which confused
the replacement signal handler. Flag bits are now masked off (as they
should've been to start with).
@
text
@d15 17
a31 14
/***************************************************/
/* File   : JSconsts.c                             */
/*                                                 */
/* Purpose: JavaScript support - fill in various   */
/*          string constants. Provides also some   */
/*          widely used client-side types.         */
/*                                                 */
/*          Based in part on source in libmocha    */
/*          from the Mozilla browser sources.      */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 05-May-98: Created.                    */
/***************************************************/
d36 2
a37 1
#include "swis.h"
d39 1
a39 1
#include "HTMLLib.h" /* HTML library API, Which will include html2_ext.h, tags.h and struct.h */
d41 8
a48 3
#include "wimp.h"
#include "wimplib.h"
#include "event.h"
a49 1
#include "svcprint.h"
@


1.1
log
@Check-in of Browse v2.06; using very small log file to try and avoid
CVS crashing. Some of the Resources may well be out of date due to CVS
locks being in place after earlier server-end core dumps, which I can't
remove myself.

I'll try and check one file in at the end with the full change log so
people know what's happened (it's reached about 16K...) - I'll make
that the TaskObey file '!All' in the top level directory. So for the
full log, look for the changes on this file.
@
text
@d47 1
a47 1
#include "JSconsts.h"
d49 1
a49 1
/* See JSconsts.h for declarations for externally visible items */
d51 65
a115 61
char         js_language_name    [] = "JavaScript";
char         js_content_type     [] = "application/x-javascript";
        
char         lm_onLoad_str       [] = "onload";
char         lm_onUnload_str     [] = "onunload";
char         lm_onAbort_str      [] = "onabort";
char         lm_onError_str      [] = "onerror";
char         lm_onScroll_str     [] = "onscroll";
char         lm_onFocus_str      [] = "onfocus";
char         lm_onBlur_str       [] = "onblur";
char         lm_onSelect_str     [] = "onselect";
char         lm_onChange_str     [] = "onchange";
char         lm_onReset_str      [] = "onreset";
char         lm_onSubmit_str     [] = "onsubmit";
char         lm_onClick_str      [] = "onclick";
char         lm_onMouseDown_str  [] = "onmousedown";
char         lm_onMouseOver_str  [] = "onmouseover";
char         lm_onMouseOut_str   [] = "onmouseout";
char         lm_onMouseUp_str    [] = "onmouseup";
char         lm_onLocate_str     [] = "onlocate";
char         lm_onHelp_str       [] = "onhelp";
        
char         lm_focus_str        [] = "focus";
char         lm_blur_str         [] = "blur";
char         lm_select_str       [] = "select";
char         lm_click_str        [] = "click";
char         lm_scroll_str       [] = "scroll";
char         lm_enable_str       [] = "enable";
char         lm_disable_str      [] = "disable";
        
char         lm_toString_str     [] = "toString";
char         lm_length_str       [] = "length";
char         lm_document_str     [] = "document";
char         lm_forms_str        [] = "forms";
char         lm_links_str        [] = "links";
char         lm_anchors_str      [] = "anchors";
char         lm_plugins_str      [] = "plugins";
char         lm_applets_str      [] = "applets";
char         lm_embeds_str       [] = "embeds";
char         lm_images_str       [] = "images";
char         lm_layers_str       [] = "layers";
char         lm_location_str     [] = "location";
char         lm_navigator_str    [] = "navigator";
char         lm_netcaster_str    [] = "netcaster";
char         lm_components_str   [] = "components";
        
char         lm_parentLayer_str  [] = "parentLayer";
char         lm_opener_str       [] = "opener";
char         lm_closed_str       [] = "closed";
char         lm_assign_str       [] = "assign";
char         lm_reload_str       [] = "reload";
char         lm_replace_str      [] = "replace";
char         lm_event_str        [] = "event";
char         lm_methodPrefix_str [] = "#method";
char         lm_methodArgc_str   [] = "#margc";
char         lm_methodArgv_str   [] = "#margv";
char         lm_getPrefix_str    [] = "#get_";
char         lm_setPrefix_str    [] = "#set_";
char         lm_typePrefix_str   [] = "#type_";
        
const char * lm_event_argv       [] = { lm_event_str };
@
