head	1.3;
access;
symbols
	Browse-2_16:1.3
	Browse-2_15:1.3
	Browse-2_14:1.3
	Browse-2_13:1.3
	Browse-2_12:1.3
	Browse-2_11:1.3
	Browse-2_10:1.3
	Browse-2_09:1.3
	ahodgkin_208_i4_2:1.3
	ahodgkin_208_i4:1.1
	ahodgkin_208_i3:1.1
	ahodgkin_208_i2:1.1
	ahodgkin_208_i1:1.1;
locks; strict;
comment	@# @;


1.3
date	2000.11.14.08.45.08;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.31.15.58.48;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	99.09.02.13.10.34;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  Load balancer pulled apart. DebugLib support. Temporary debug in place.
Detail:
  This is in the middle of some load balancer changes, but I'm checking it
  in as there's a sweeping source code change to use DebugLib. See Global.c
  for full details. Temporary debug code for the load balancer stuff is
  currently held under undocumented area "test".
Admin:
  This build now identifies itself as 2.08 i2-4 and says Pace on the about:
  page. Run for some time with no unexpected problems. Tried a mixture of
  debug levels successfully.

Version 2.08. Not tagged
@
text
@/* Copyright 1999 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    TGutils.c                                         */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Utility functions related to the gadgets in the   */
/*          TextGadgets module, particularly ScrollList.      */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 08-Jun-1999 (ADH): Created.                       */
/*          23-May-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include <kernel.h>
#include <swis.h>

#include <tboxlibs/wimp.h>
#include <tboxlibs/wimplib.h>
#include <tboxlibs/event.h>

#include <tboxlibs/toolbox.h>
#include <tboxlibs/ScrollList.h>

#include "Global.h"
#include "Utils.h"

#include "TGutils.h"

/**************************************************************/
/* tgutils_count_items()                                      */
/*                                                            */
/* Returns the number of items present in the given           */
/* ScrollList gadget.                                         */
/*                                                            */
/* Parameters: Object ID of the item the ScrollList lies in;  */
/*                                                            */
/*             Component ID of the ScrollList.                */
/*                                                            */
/* Returns:    Number of items in the scrolling list. Returns */
/*             0 if there's an error as well as if there are  */
/*             no items in the list.                          */
/**************************************************************/

int tgutils_count_items(ObjectId object, ComponentId component)
{
  unsigned int count;

  if (
       scrolllist_count_items(0,
                              object,
                              component,
                              &count)
     )
     return 0;

  return count;
}

/**************************************************************/
/* tgutils_count_selected()                                   */
/*                                                            */
/* Returns the number of items selected in the given          */
/* ScrollList gadget.                                         */
/*                                                            */
/* Parameters: Object ID of the item the ScrollList lies in;  */
/*                                                            */
/*             Component ID of the ScrollList.                */
/*                                                            */
/* Returns:    Number of items selected in the list. Returns  */
/*             0 if there's an error as well as if there are  */
/*             no items in the list.                          */
/**************************************************************/

int tgutils_count_selected(ObjectId object, ComponentId component)
{
  int offset = -1;
  int count  = 0;

  while (
          !scrolllist_get_selected(0,
                                   object,
                                   component,
                                   offset,
                                   &offset)

          && offset >= 0
        )
        count++;

  return count;
}

/**************************************************************/
/* tgutils_select_all()                                       */
/*                                                            */
/* Select all items in the given ScrollList.                  */
/*                                                            */
/* Parameters: Object ID of the item the ScrollList lies in;  */
/*                                                            */
/*             Component ID of the ScrollList.                */
/**************************************************************/

_kernel_oserror * tgutils_select_all(ObjectId object, ComponentId component)
{
  return scrolllist_select_item(ScrollList_SelectionChangingMethod_SendEvent | ScrollList_SelectionChangingMethod_OnAll,
                                object,
                                component,
                                0);
}

/**************************************************************/
/* tgutils_clear_selection()                                  */
/*                                                            */
/* Deselect all items in the given ScrollList.                */
/*                                                            */
/* Parameters: Object ID of the item the ScrollList lies in;  */
/*                                                            */
/*             Component ID of the ScrollList.                */
/**************************************************************/

_kernel_oserror * tgutils_clear_selection(ObjectId object, ComponentId component)
{
  return scrolllist_deselect_item(ScrollList_SelectionChangingMethod_SendEvent | ScrollList_SelectionChangingMethod_OnAll,
                                  object,
                                  component,
                                  0);
}

/**************************************************************/
/* tgutils_remove_all()                                       */
/*                                                            */
/* Remove all items in the given ScrollList.                  */
/*                                                            */
/* Parameters: Object ID of the item the ScrollList lies in;  */
/*                                                            */
/*             Component ID of the ScrollList.                */
/**************************************************************/

_kernel_oserror * tgutils_remove_all(ObjectId object, ComponentId component)
{
  return scrolllist_delete_items(ScrollList_SelectionChangingMethod_SendEvent,
                                 object,
                                 component,
                                 0,
                                 -1);
}

/**************************************************************/
/* tgutils_remove_selected()                                  */
/*                                                            */
/* Remove all selected items in the given ScrollList.         */
/*                                                            */
/* Parameters: Object ID of the item the ScrollList lies in;  */
/*                                                            */
/*             Component ID of the ScrollList.                */
/**************************************************************/

_kernel_oserror * tgutils_remove_selected(ObjectId object, ComponentId component)
{
  int offset;

  do
  {
    /* Find a selected item */

    RetError(scrolllist_get_selected(0,
                                     object,
                                     component,
                                     -1,
                                     &offset));

    /* If we gone one, remove it */

    if (offset >= 0)
    {
      RetError(scrolllist_delete_items(ScrollList_SelectionChangingMethod_SendEvent | ScrollList_DeleteItems_DoNotJumpToTop,
                                       object,
                                       component,
                                       offset,
                                       offset));
    }
  }
  while (offset >= 0);

  return NULL;
}
@


1.2
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@a42 5
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

a205 1

@


1.1
log
@Long overdue check-in of intermediate browser build, from continued "out
of hours" work. Forgot to add a few files last time too.

List dialogue box handler complete, and exclusion lists implemented
within the main browser code. Full documentation in Choices file.
Save routine knows all about it but is now getting very slow - must
come up with a better scheme; for now, it puts the hourglass on...

StripExtensions option controls auto stripping of filename extensions.

More sensible ancestor / frame selection for keyboard shortcut items
and the save dialogues - having selected a frame won't lock you into
it for F3 and related shortcuts now (input focus in URL writable ->
get ancestor details, input focus in frame -> get frame details). F4
works in frames. F5 now generally present for 'view source' with a
corresponding menu entry in the File menu.

Odd thing in later Res files; there's no action set for Adjust clicks
on the main ToolAction items in the button bar. Very odd. Nothing
appears to be set in v2.07 either, yet adjust-click works. Even
stranger. Anyway, added in the relevant event details (same as for
Select click in all cases) and this fixes the problem.

Background colours in the TABLE tag ignored the "don't print any
backgrounds" Print Style setting. Fixed. Meanwhile, the "black
text with no backgrounds" option wasn't getting this right either;
fixed this also.

Event logging implemented; HTTP errors and script output via.
window.print extension. No internal error output yet.

Faith:Never behaviour extended. If ever a server sends something with
no content type or an unhandleable type, the browser will try and get a
filetype from the URL. If it gets text or HTML, it'll render the file.
Else it'll save it. Hacks around IIS 4's lack of a content type field
in the Marketeye login stuff, and similar other slightly broken sites.
@
text
@d15 13
a27 11
/***************************************************/
/* File   : TGutils.c                              */
/*                                                 */
/* Purpose: Utility functions related to the       */
/*          gadgets in the TextGadgets module -    */
/*          particuarly ScrollList.                */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 08-Jun-1999: Created.                  */
/***************************************************/
d33 2
a34 1
#include "swis.h"
d36 11
a46 3
#include "wimp.h"
#include "wimplib.h"
#include "event.h"
a47 4
#include "toolbox.h"
#include "ScrollList.h"

#include "svcprint.h"
d53 14
a66 16
/*************************************************/
/* tgutils_count_items()                         */
/*                                               */
/* Returns the number of items present in the    */
/* given ScrollList gadget.                      */
/*                                               */
/* Parameters: Object ID of the item the         */
/*             ScrollList lies in;               */
/*                                               */
/*             Component ID of the ScrollList.   */
/*                                               */
/* Returns:    Number of items in the scrolling  */
/*             list. Returns 0 if there's an     */
/*             error as well as if there are no  */
/*             items in the list.                */
/*************************************************/
d83 14
a96 16
/*************************************************/
/* tgutils_count_selected()                      */
/*                                               */
/* Returns the number of items selected in the   */
/* given ScrollList gadget.                      */
/*                                               */
/* Parameters: Object ID of the item the         */
/*             ScrollList lies in;               */
/*                                               */
/*             Component ID of the ScrollList.   */
/*                                               */
/* Returns:    Number of items selected in the   */
/*             list. Returns 0 if there's an     */
/*             error as well as if there are no  */
/*             items in the list.                */
/*************************************************/
d117 9
a125 10
/*************************************************/
/* tgutils_select_all()                          */
/*                                               */
/* Select all items in the given ScrollList.     */
/*                                               */
/* Parameters: Object ID of the item the         */
/*             ScrollList lies in;               */
/*                                               */
/*             Component ID of the ScrollList.   */
/*************************************************/
d135 9
a143 10
/*************************************************/
/* tgutils_clear_selection()                     */
/*                                               */
/* Deselect all items in the given ScrollList.   */
/*                                               */
/* Parameters: Object ID of the item the         */
/*             ScrollList lies in;               */
/*                                               */
/*             Component ID of the ScrollList.   */
/*************************************************/
d153 9
a161 10
/*************************************************/
/* tgutils_remove_all()                          */
/*                                               */
/* Remove all items in the given ScrollList.     */
/*                                               */
/* Parameters: Object ID of the item the         */
/*             ScrollList lies in;               */
/*                                               */
/*             Component ID of the ScrollList.   */
/*************************************************/
d172 9
a180 11
/*************************************************/
/* tgutils_remove_selected()                     */
/*                                               */
/* Remove all selected items in the given        */
/* ScrollList.                                   */
/*                                               */
/* Parameters: Object ID of the item the         */
/*             ScrollList lies in;               */
/*                                               */
/*             Component ID of the ScrollList.   */
/*************************************************/
@

