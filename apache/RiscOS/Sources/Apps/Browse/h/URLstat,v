head	1.2;
access;
symbols
	Browse-2_16:1.2
	Browse-2_15:1.2
	Browse-2_14:1.2
	Browse-2_13:1.2
	Browse-2_12:1.2
	Browse-2_11:1.2
	Browse-2_10:1.2
	Browse-2_09:1.2
	ahodgkin_208_i4_2:1.2
	ahodgkin_208_i4:1.1
	ahodgkin_208_i3:1.1
	ahodgkin_208_i2:1.1
	ahodgkin_208_i1:1.1
	ahodgkin_207release:1.1
	ahodgkin_206release:1.1
	ahodgkin_205release:1.1
	ahodgkin_204release:1.1
	ahodgkin_202release:1.1
	ahodgkin_201release:1.1
	ahodgkin_200release:1.1
	ahodgkin_133beta:1.1
	ahodgkin_132beta:1.1
	ahodgkin_131beta:1.1
	ahodgkin_130beta:1.1
	ahodgkin_129:1.1
	ahodgkin_128beta:1.1
	ahodgkin_128alpha:1.1
	ahodgkin_127beta2:1.1
	ahodgkin_127beta:1.1
	ahodgkin_126beta:1.1
	ahodgkin_AW97patch:1.1
	ahodgkin_AW97:1.1;
locks; strict;
comment	@# @;


1.2
date	2000.05.31.15.59.00;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	97.08.18.09.24.12;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    URLstat.h                                         */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Small source file to cope with the fetch status   */
/*          structures, 'urlstat'. Historically created when  */
/*          Fetch.c was split up on 17-Aug-1997, and more     */
/*          than one source file suddenly needed to be able   */
/*          to deal with the structures.                      */
/*                                                            */
/* Author:  A.D.Hodgkinson, including various functions from  */
/*          original Customer browser by Merlyn Kline.       */
/*                                                            */
/* History: 17-Aug-1997 (ADH): Created.                       */
/*          07-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_URLstat__
  #define Browser_URLstat__

  #include <kernel.h>
  #include <HTMLLib/HTMLLib.h>

  /* Structures */

  typedef struct urlstat
  {
    int              session;      /* the fetch session handle                            */
    int              fetched;      /* flag indicates we have got at least one byte so far */
    void           * context;      /* parser context pointer                              */
    HStream        * stream;       /* pointer to the token stream                         */
    HStream        * lasttoken;    /* pointer to the last token returned                  */
    unsigned int     fetching  :1; /* flag indicates we are still fetching                */
    unsigned int     identified:1; /* the stream has been identified                      */
    unsigned int     authorised:2; /* authorise: 0=not done, 1=doing, 2=done              */
    unsigned int     allowparse:1; /* whether to allow HTMLLib to parse this URL          */
    int              method;       /* the method used to fetch                            */
    char           * extradata;    /* the extra data associated with this url             */
    int              type;         /* type from HtmlIdentify                              */
    struct urlstat * next;

  } urlstat;

  /* Function prototypes */

  _kernel_oserror * urlstat_add_entry    (int report_num, urlstat ** new_urlstat);
  int               urlstat_remove_entry (urlstat * remove);
  urlstat         * urlstat_find_entry   (int session);

#endif /* Browser_URLstat__ */
@


1.1
log
@Updated Makefile to work better in folding text editors. More or less rewrote
Limits.h, and ensured consistent comment styling throughout all sources.
Fetch.c/h split to Fetch, FetchHTML and URLveneer. URLstat.c/h produced to
cope with this. OpenURL and Find sources created from bits in the Windows
source file that shouldn't have been there... These will get filled out
shortly. Note that a few functions in Fetch are due to be renamed and moved;
probably to Tokenutils.
@
text
@d15 51
a65 40
/***************************************************/
/* File   : URLstat.h                              */
/*                                                 */
/* Purpose: Small source file to cope with the     */
/*          fetch status structures, 'urlstat'.    */
/*          Historically created when Fetch.c was  */
/*          split up on 17-Aug-97, and more than   */
/*          one source file suddenly needed to be  */
/*          able to deal with the structures.      */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 17-Aug-97: Created.                    */
/***************************************************/

/* Structures */

typedef struct urlstat
{
  int              session;      /* the fetch session handle                            */
  int              fetched;      /* flag indicates we have got at least one byte so far */
  void           * context;      /* parser context pointer                              */
  HStream        * stream;       /* pointer to the token stream                         */
  HStream        * lasttoken;    /* pointer to the last token returned                  */
  unsigned int     fetching  :1; /* flag indicates we are still fetching                */
  unsigned int     identified:1; /* the stream has been identified                      */
  unsigned int     authorised:2; /* authorise: 0=not done, 1=doing, 2=done              */
  unsigned int     allowparse:1; /* whether to allow HTMLLib to parse this URL          */
  int              method;       /* the method used to fetch                            */
  char           * extradata;    /* the extra data associated with this url             */
  int              type;         /* type from HtmlIdentify                              */
  struct urlstat * next;

} urlstat;

/* Function prototypes */

_kernel_oserror * urlstat_add_entry    (int report_num, urlstat ** new_urlstat);
int               urlstat_remove_entry (urlstat * remove);
urlstat         * urlstat_find_entry   (int session);
@

