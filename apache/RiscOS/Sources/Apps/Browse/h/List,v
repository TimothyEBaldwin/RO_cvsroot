head	1.3;
access;
symbols
	Browse-2_16:1.3
	Browse-2_15:1.3
	Browse-2_14:1.3
	Browse-2_13:1.3
	Browse-2_12:1.3
	Browse-2_11:1.3
	Browse-2_10:1.3
	Browse-2_09:1.3
	ahodgkin_208_i4_2:1.3
	ahodgkin_208_i4:1.2
	ahodgkin_208_i3:1.2
	ahodgkin_208_i2:1.2
	ahodgkin_208_i1:1.2;
locks; strict;
comment	@# @;


1.3
date	2000.05.31.15.58.56;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	99.09.02.13.10.41;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	99.03.30.15.52.14;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    List.h                                            */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Handle dialogue boxes showing a list of items     */
/*          (e.g. for proxy exclusions). This actually spans  */
/*          two Res file objects - the main list and          */
/*          transient "add new item" dialogue boxes.          */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 19-Mar-1999 (ADH): Created.                       */
/*          07-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_List__
  #define Browser_List__

  #include <kernel.h>
  #include <tboxlibs/toolbox.h>

  /* List dialogue component IDs */

  #define ListScrollList                  0x03000
  #define ListAdd                         0x03001
  #define ListRemove                      0x03002
  #define ListCancel                      0x03003
  #define ListOK                          0x03004

  /* List dialogue event codes */

  #define EListAdd                        0x03001
  #define EListRemove                     0x03002
  #define EListCancel                     0x03003
  #define EListOK                         0x03004

  #define EListToBeShown                  0x030ff

  /* List Add dialogue component IDs */

  #define ListAddLabel                    0x03100
  #define ListAddWrit                     0x03101
  #define ListAddCancel                   0x03102
  #define ListAddAdd                      0x03103

  /* List Add dialogue event codes */

  #define EListAddCancel                  0x03102
  #define EListAddAdd                     0x03103

  #define EListAddToBeShown               0x031ff

  /* Structure to hold details of a known type of list */

  typedef struct list_known
  {
    ComponentId    reference;
    const char   * choices_token;
    char         * local_value;

  } list_known;

  /* Function prototypes */

  const list_known * list_get_known_items        (int * entries);

  char             * list_get_malloc_list_string (const char * token);

  int                list_to_be_shown            (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
  int                list_add_to_be_shown        (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);

  int                list_count_items            (ObjectId self);
  int                list_count_selected         (ObjectId self);

  _kernel_oserror  * list_select_all             (ObjectId self);
  _kernel_oserror  * list_clear_selection        (ObjectId self);
  _kernel_oserror  * list_remove_selected        (ObjectId self);
  _kernel_oserror  * list_setup_menu             (ObjectId self);

#endif /* Browser_List__ */
@


1.2
log
@Long overdue check-in of intermediate browser build, from continued "out
of hours" work. Forgot to add a few files last time too.

List dialogue box handler complete, and exclusion lists implemented
within the main browser code. Full documentation in Choices file.
Save routine knows all about it but is now getting very slow - must
come up with a better scheme; for now, it puts the hourglass on...

StripExtensions option controls auto stripping of filename extensions.

More sensible ancestor / frame selection for keyboard shortcut items
and the save dialogues - having selected a frame won't lock you into
it for F3 and related shortcuts now (input focus in URL writable ->
get ancestor details, input focus in frame -> get frame details). F4
works in frames. F5 now generally present for 'view source' with a
corresponding menu entry in the File menu.

Odd thing in later Res files; there's no action set for Adjust clicks
on the main ToolAction items in the button bar. Very odd. Nothing
appears to be set in v2.07 either, yet adjust-click works. Even
stranger. Anyway, added in the relevant event details (same as for
Select click in all cases) and this fixes the problem.

Background colours in the TABLE tag ignored the "don't print any
backgrounds" Print Style setting. Fixed. Meanwhile, the "black
text with no backgrounds" option wasn't getting this right either;
fixed this also.

Event logging implemented; HTTP errors and script output via.
window.print extension. No internal error output yet.

Faith:Never behaviour extended. If ever a server sends something with
no content type or an unhandleable type, the browser will try and get a
filetype from the URL. If it gets text or HTML, it'll render the file.
Else it'll save it. Hacks around IIS 4's lack of a content type field
in the Marketeye login stuff, and similar other slightly broken sites.
@
text
@d15 15
a29 13
/***************************************************/
/* File   : List.h                                 */
/*                                                 */
/* Purpose: Handle dialogue boxes showing a list   */
/*          of items (e.g. for proxy exclusions).  */
/*          This actually spans two Res file       */
/*          objects - the main list and transient  */
/*          'add new item' dialogue boxes.         */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 19-Mar-99: Created.                    */
/***************************************************/
d31 2
a32 1
/* List dialogue component IDs */
d34 2
a35 5
#define ListScrollList                  0x03000
#define ListAdd                         0x03001
#define ListRemove                      0x03002
#define ListCancel                      0x03003
#define ListOK                          0x03004
d37 1
a37 1
/* List dialogue event codes */
d39 5
a43 4
#define EListAdd                        0x03001
#define EListRemove                     0x03002
#define EListCancel                     0x03003
#define EListOK                         0x03004
d45 1
a45 1
#define EListToBeShown                  0x030ff
d47 4
a50 1
/* List Add dialogue component IDs */
d52 1
a52 4
#define ListAddLabel                    0x03100
#define ListAddWrit                     0x03101
#define ListAddCancel                   0x03102
#define ListAddAdd                      0x03103
d54 1
a54 1
/* List Add dialogue event codes */
d56 4
a59 2
#define EListAddCancel                  0x03102
#define EListAddAdd                     0x03103
d61 1
a61 1
#define EListAddToBeShown               0x031ff
d63 2
a64 1
/* Structure to hold details of a known type of list */
d66 1
a66 5
typedef struct list_known
{
  ComponentId    reference;
  const char   * choices_token;
  char         * local_value;
d68 1
a68 1
} list_known;
d70 5
a74 1
/* Function prototypes */
d76 1
a76 1
const list_known * list_get_known_items        (int * entries);
d78 1
a78 1
char             * list_get_malloc_list_string (const char * token);
d80 1
a80 2
int                list_to_be_shown            (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
int                list_add_to_be_shown        (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
d82 1
a82 2
int                list_count_items            (ObjectId self);
int                list_count_selected         (ObjectId self);
d84 12
a95 4
_kernel_oserror  * list_select_all             (ObjectId self);
_kernel_oserror  * list_clear_selection        (ObjectId self);
_kernel_oserror  * list_remove_selected        (ObjectId self);
_kernel_oserror  * list_setup_menu             (ObjectId self);
@


1.1
log
@Intermediate check-in; building a browser from this gives you something
between 2.07 and 2.08. Only the Phoenix JavaScript resources are fully
up to date.

I *think* these are the changes since the last check-in:

When saved as a Draw file, horizontal rules were plotted one page width
too far to the right (wonder when that started happening?!). Fixed. In
addition, DrawFiles now accepted as OBJECTs - they weren't in the
recognised filetype list before. Doh.

Table size calculator tables_count_table would overestimate the number
of cells where ROWSPAN was present and there were other rows below the
one spanned. Fixed. In certain odd cases (e.g. optimised image exports
as HTML tables (!!) from the Gimp) this can save vast amounts of RAM.

Fixed problem where printing stops in the middle of a document. Redraw
engine pagination code was written in the days where lines couldn't
have gaps between them; they can now. If a gap fell at the bottom of
a page the engine would look down, see no line straddling or touching
the page edge, and assume there was nothing more. This case is now
correctly handled.

Made sure desktop and testbed Browse Res files had up-to-date Encoding
menus (v2.07 Phoenix has different menus from v2.07 Browse by oversight).

URL auto-completion piggy-backed onto manual completion code; any string
without '.', '/' or ':' in it gets run through completion to see if a
more meaningful item can be produced - "www" special cased out though.

New List dialogue box handler, used for proxy exclusions etc.
(incomplete), complete with appropriate Res file objects.
@
text
@d60 10
d72 3
a74 1
char            * list_get_malloc_list_string (const char * token);
d76 2
a77 2
int               list_to_be_shown            (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
int               list_add_to_be_shown        (int eventcode, ToolboxEvent * event, IdBlock * idb, void * handle);
d79 2
a80 2
int               list_count_items            (ObjectId self);
int               list_count_selected         (ObjectId self);
d82 4
a85 4
_kernel_oserror * list_select_all             (ObjectId self);
_kernel_oserror * list_clear_selection        (ObjectId self);
_kernel_oserror * list_remove_selected        (ObjectId self);
_kernel_oserror * list_setup_menu             (ObjectId self);
@
