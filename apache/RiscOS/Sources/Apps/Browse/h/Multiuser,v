head	1.4;
access;
symbols
	Browse-2_16:1.4
	Browse-2_15:1.4
	Browse-2_14:1.4
	Browse-2_13:1.4
	Browse-2_12:1.4
	Browse-2_11:1.4
	Browse-2_10:1.4
	Browse-2_09:1.4
	ahodgkin_208_i4_2:1.4
	ahodgkin_208_i4:1.3
	ahodgkin_208_i3:1.3
	ahodgkin_208_i2:1.3
	ahodgkin_208_i1:1.3
	ahodgkin_207release:1.3
	ahodgkin_206release:1.3
	ahodgkin_205release:1.3
	ahodgkin_204release:1.3
	ahodgkin_202release:1.3
	ahodgkin_201release:1.2
	ahodgkin_200release:1.2
	ahodgkin_133beta:1.2
	ahodgkin_132beta:1.2
	ahodgkin_131beta:1.2
	ahodgkin_130beta:1.2
	ahodgkin_129:1.2
	ahodgkin_128beta:1.2
	ahodgkin_128alpha:1.2
	ahodgkin_127beta2:1.2
	ahodgkin_127beta:1.2
	ahodgkin_126beta:1.2
	ahodgkin_AW97patch:1.2
	ahodgkin_AW97:1.2;
locks; strict;
comment	@# @;


1.4
date	2000.05.31.15.58.57;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	98.03.20.12.13.11;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	97.08.18.10.00.19;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	97.07.24.09.15.09;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    Multiuser.h                                       */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Functions and definitions to enable the browser   */
/*          to function in an Customer-style multiuser       */
/*          environment, if SINGLE_USER is undefined when the */
/*          whole of the browser source is compiled.          */
/*          Otherwise, some functions available, but only     */
/*          those to do basic single user loading and saving  */
/*          of histories, hotlists etc.                       */
/*                                                            */
/* Author:  A.D.Hodgkinson, including various functions from  */
/*          original Customer browser by Merlyn Kline.       */
/*                                                            */
/* History: 23-Jul-1997 (ADH): Created.                       */
/*          16-Mar-1998 (ADH): Bulk of the code imported from */
/*                             Customer browser. Fair amount */
/*                             of rewriting / fixing done.    */
/*          24-May-2000 (ADH); 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_Multiuser__
  #define Browser_Multiuser__

  #include <kernel.h>

  /* Log-in dialogue component IDs */

  #define LogInPrompt                     0x02a00
  #define LogInUserWrit                   0x02a01
  #define LogInUserLabel                  0x02a02
  #define LogInPassWrit                   0x02a03
  #define LogInPassLabel                  0x02a04
  #define LogInCancel                     0x02a05
  #define LogInOK                         0x02a06

  /* Log-in dialogue event codes */

  #define ELogInCancel                    0x02a05
  #define ELogInOK                        0x02a06

  /* Function prototypes */

  _kernel_oserror   * multiuser_set_iconbar_variant            (const char * suffix);

  _kernel_oserror   * multiuser_login                          (void);
  _kernel_oserror   * multiuser_logout                         (void);

  #ifndef SINGLE_USER

    _kernel_oserror * multiuser_save_hotlist                   (void);
    void              multiuser_create_unique_postbox_filename (void);

  #endif

#endif /* Browser_Multiuser__ */
@


1.3
log
@Programming warehouse link removed from all hotlists - the page has gone.

Some compile-time hacks in place to use MemLib, a dynamic area based
malloc replacement which shrinks its heap when possible. All builds
have these switched off at the moment. Seemed to work with just Browse,
though there would be problems with message blocks stored in dynamic
areas because of the Wimp's '&3800000' check - however, it failed when
HTMLLib was made to use it, too. Don't know why yet.

ItemInfo.[c/h] source added, with Res file additions for testbed Browse
and Phoenix.

Small fetch windows now work properly regardless of toolbar settings
in the Choices.

Reload now reloads all images too, rather than only reloading them for
as long as the main page was being fetched.

Added a simple 'Find' facility.

Realised that event handlers in eventlib are called in reverse order
of registration, so the miscellaneous event handler is now registered
first rather than last.

Multiuser code added (most only active if SINGLE_USER is undefined). As
part of this, hotlist code now knows about read-only items (done for the
Customer-style 'Resources' file, but works generally anyway).
handle_add_hotlist doesn't try to save the hotlist itself anymore (the
hotlist_add function does all that through hotlist_modified anyway).

Customer build Choices and Controls updated slightly (e.g. ClaimHelp
off, hotlist to save on quit only).

Customer build now uses Phoenix-style buttons. Sprites files which
worked at the time (but will probably be out of date now) and included
most of the original Customer-style sprites are in
'Utils.Icons.Customer'.

Choices, Messages and Res files for all builds now stripped down to only
single user items or single plus multiuser for Customer build and testbed
build. Before, all contained a few multiuser bits in at least the Choices
file if not more.

Grammatical error ("Fetching frames contents" (sic.)) corrected in
default message, Toolbars.c, and all of the Messages files.

Customer build brought back to a servicable level (including
implementation of the Find dialogue box with animation and fixing
up authorisation and 'Stop' state in the tristate). Quite a few
missing #ifndef REMOTE_HOTLIST bits from hotlist code added...

Customer build will not use <Choices$Write> or Boot:Choices for any
file finding now. UseProxy defaults to 'yes', MaxImages to 2. Res
file includes Proxy Address setting (save_save_choices() now writes
the ProxyAddress line).
@
text
@d15 49
a63 44
/***************************************************/
/* File   : Multiuser.h                            */
/*                                                 */
/* Purpose: Functions and definitions to enable    */
/*          the browser to function in an          */
/*          Customer-style multiuser environment, */
/*          if SINGLE_USER is undefined when the   */
/*          whole of the browser source is         */
/*          compiled. Otherwise, some functions    */
/*          available, but only those to do basic  */
/*          single user loading and saving of      */
/*          histories, hotlists etc.               */
/*                                                 */
/* Author : Merlyn Kline for Customer browser     */
/*          This source adapted by A.D.Hodgkinson  */
/*                                                 */
/* History: 23-Jul-97: Created.                    */
/*          16-Mar-98: Bulk of the code imported   */
/*                     from Customer browser.     */
/*                     Fair amount of rewriting /  */
/*                     fixing required.            */
/***************************************************/

/* Log-in dialogue component IDs */

#define LogInPrompt                     0x02a00
#define LogInUserWrit                   0x02a01
#define LogInUserLabel                  0x02a02
#define LogInPassWrit                   0x02a03
#define LogInPassLabel                  0x02a04
#define LogInCancel                     0x02a05
#define LogInOK                         0x02a06

/* Log-in dialogue event codes */

#define ELogInCancel                    0x02a05
#define ELogInOK                        0x02a06

/* Function prototypes */

_kernel_oserror   * multiuser_set_iconbar_variant            (const char * suffix);

_kernel_oserror   * multiuser_login                          (void);
_kernel_oserror   * multiuser_logout                         (void);
d65 1
a65 1
#ifndef SINGLE_USER
d67 2
a68 2
  _kernel_oserror * multiuser_save_hotlist                   (void);
  void              multiuser_create_unique_postbox_filename (void);
d70 3
a72 1
#endif
@


1.2
log
@Odd problem with Entries file meant none got checked in last time...
@
text
@d18 9
a26 3
/* Purpose: Definitions required by multi-user     */
/*          builds. Included by Global.h if        */
/*          SINGLE_USER is not defined.            */
d28 2
a29 1
/* Author : A.D.Hodgkinson                         */
d32 4
d38 1
a38 1
/* Structures */
d40 7
a46 6
typedef struct userdef
{
 char homepage    [Limits_Multi_HomePage];
 char name        [Limits_Multi_Name];
 char historyfile [Limits_Multi_History];
 char hotlistfile [Limits_Multi_Hotlist];
d48 1
a48 1
} userdef;
d50 2
a51 1
/* Globals */
d53 13
a65 1
extern userdef user;
@


1.1
log
@Added various TaskObey files to make different browser variants (the Makefile
has been updated to support this). At present, TARGET must be set for the
Make file to work (some oddity in AMU causing problems here). Added
Multiuser.h to cope with a non-SINGLE_USER build for Customer.
@
text
@d15 13
a27 8
/*************************************************/
/* File   : Multiuser.h                          */
/* Purpose: Definitions required by multi-user   */
/*          builds. Included by Global.h if      */
/*          SINGLE_USER is not defined.          */
/* Author : A.D.Hodgkinson                       */
/* History: 23-Jul-97: Created                   */
/*************************************************/
d31 4
a34 2
 char homepage    [256];
 char name        [32];
d36 1
a36 2
 char lastfind    [64];
 int  casematch;
d38 1
a38 4
 char historyfile [256];
 char hotlistfile [256];

} userdef;
@
