head	1.3;
access;
symbols
	Browse-2_16:1.3
	Browse-2_15:1.3
	Browse-2_14:1.3
	Browse-2_13:1.3
	Browse-2_12:1.3
	Browse-2_11:1.3
	Browse-2_10:1.3
	Browse-2_09:1.3
	ahodgkin_208_i4_2:1.3
	ahodgkin_208_i4:1.2
	ahodgkin_208_i3:1.2
	ahodgkin_208_i2:1.2
	ahodgkin_208_i1:1.2
	ahodgkin_207release:1.2
	ahodgkin_206release:1.2
	ahodgkin_205release:1.2
	ahodgkin_204release:1.2
	ahodgkin_202release:1.2
	ahodgkin_201release:1.2
	ahodgkin_200release:1.2
	ahodgkin_133beta:1.2
	ahodgkin_132beta:1.2
	ahodgkin_131beta:1.2
	ahodgkin_130beta:1.2
	ahodgkin_129:1.2
	ahodgkin_128beta:1.2
	ahodgkin_128alpha:1.2
	ahodgkin_127beta2:1.2
	ahodgkin_127beta:1.2
	ahodgkin_126beta:1.2
	ahodgkin_AW97patch:1.2
	ahodgkin_AW97:1.1;
locks; strict;
comment	@# @;


1.3
date	2000.05.31.15.58.57;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	97.10.24.14.09.22;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	97.10.07.17.03.47;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    MimeMap.h                                         */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Interfacing with the MimeMap module.              */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 07-Oct-1997 (ADH): Created.                       */
/*          07-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_MimeMap__
  #define Browser_MimeMap__

  #include <kernel.h>

  /* SWI definitions */

  #define MimeMap_Translate          0x50b00

  #define MimeMap_RISCOSType_Number  0 /* Filetype as an int */
  #define MimeMap_RISCOSType_String  1 /* Filetype as a string */

  #define MimeMap_MimeType_Mime      2 /* Mime type as a string */
  #define MimeMap_MimeType_Extension 3 /* Filename extension as a string */

  /* Um... Great SWI interface... */

  #define MimeMap_MaximumBufferSizeRequired 1024 /* Yes, it's arbitrary */

  /* Veneer function prototypes */

  _kernel_oserror * mimemap_mime_to_riscos      (const char * mime, int * riscos);
  _kernel_oserror * mimemap_riscos_to_mime      (int riscos, char * buffer, int buffer_size);
  _kernel_oserror * mimemap_extension_to_riscos (const char * ext, int * riscos);
  _kernel_oserror * mimemap_extension_to_mime   (const char * ext, char * buffer, int buffer_size);

#endif /* Browser_MimeMap__ */
@


1.2
log
@Various fixes in the code required for Shockwave support (many invalid
assumptions about the OBJECT tag structure). Not finished yet though.

Played around with signal handling 'n' all that to try and get sensible
errors reported for aborts etc. using code by KBracey. Need a ROM patch
for _swix on RISC OS 3.7 upwards (or a local fixed copy of _swix),
otherwise should sort out most of the problems seen (mostly 'no stack
for trap handler' errors and a distinct lack of a register dump).

Plug-In view on redraw / ASAP choices now work as they should (ASAP
was previously broken).

Version numbers in Messages incremented to 1.25 (23 Oct 1997).

For Plug-In support, created new source file RMA.c/h to handle RMA
claims and releases, in an attempt to ensure leakage never happens.
As such, this source is *slightly* more advanced than that in the 1.25
AW '97 build, though functionally identical. Well, that is, at least
you can confirm zero RMA leakage with '-debug LMem' in TRACE builds now!

Intend to do a consistency check on comment syntax in all sources
shortly - I need to rebuild my StrongHelp manuals; can't keep track
of all of these new functions...
@
text
@d15 12
a26 9
/***************************************************/
/* File   : MimeMap.h                              */
/*                                                 */
/* Purpose: Interfacing with the MimeMap module.   */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 07-Oct-97: Created.                    */
/***************************************************/
d28 2
a29 1
/* SWI definitions */
d31 1
a31 1
#define MimeMap_Translate          0x50b00
d33 1
a33 2
#define MimeMap_RISCOSType_Number  0 /* Filetype as an int */
#define MimeMap_RISCOSType_String  1 /* Filetype as a string */
d35 1
a35 2
#define MimeMap_MimeType_Mime      2 /* Mime type as a string */
#define MimeMap_MimeType_Extension 3 /* Filename extension as a string */
d37 2
a38 1
/* Um... Great SWI interface... */
d40 2
a41 1
#define MimeMap_MaximumBufferSizeRequired 1024 /* Yes, it's arbitrary */
d43 1
a43 1
/* Veneer function prototypes */
d45 10
a54 4
_kernel_oserror * mimemap_mime_to_riscos      (const char * mime, int * riscos);
_kernel_oserror * mimemap_riscos_to_mime      (int riscos, char * buffer, int buffer_size);
_kernel_oserror * mimemap_extension_to_riscos (const char * ext, int * riscos);
_kernel_oserror * mimemap_extension_to_mime   (const char * ext, char * buffer, int buffer_size);
@


1.1
log
@Added MimeMap module support. OBJECT routines now use this to determine
if the item is an inline image, and if so pass it to the image routines.
At present, support relies on a (correct) content type.
@
text
@d27 1
a27 1
#define MimeMap_Translate          0xbcd00
d41 4
a44 2
_kernel_oserror * mimemap_mime_to_riscos(const char * mime, int * riscos);
_kernel_oserror * mimemap_riscos_to_mime(int riscos, char * buffer, int buffer_size);
@
