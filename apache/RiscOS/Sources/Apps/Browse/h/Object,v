head	1.10;
access;
symbols
	Browse-2_16:1.10
	Browse-2_15:1.10
	Browse-2_14:1.10
	Browse-2_13:1.10
	Browse-2_12:1.10
	Browse-2_11:1.9
	Browse-2_10:1.9
	Browse-2_09:1.9
	ahodgkin_208_i4_2:1.9
	ahodgkin_208_i4:1.8
	ahodgkin_208_i3:1.8
	ahodgkin_208_i2:1.8
	ahodgkin_208_i1:1.8
	ahodgkin_207release:1.8
	ahodgkin_206release:1.8
	ahodgkin_205release:1.8
	ahodgkin_204release:1.8
	ahodgkin_202release:1.8
	ahodgkin_201release:1.8
	ahodgkin_200release:1.8
	ahodgkin_133beta:1.8
	ahodgkin_132beta:1.8
	ahodgkin_131beta:1.8
	ahodgkin_130beta:1.8
	ahodgkin_129:1.8
	ahodgkin_128beta:1.8
	ahodgkin_128alpha:1.8
	ahodgkin_127beta2:1.7
	ahodgkin_127beta:1.7
	ahodgkin_126beta:1.7
	ahodgkin_AW97patch:1.6
	ahodgkin_AW97:1.6;
locks; strict;
comment	@# @;


1.10
date	2006.03.13.22.06.20;	author ahodgkin;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.31.15.58.57;	author ahodgkin;	state Exp;
branches;
next	1.8;

1.8
date	97.12.02.16.14.14;	author ahodgkin;	state Exp;
branches;
next	1.7;

1.7
date	97.10.30.17.11.24;	author ahodgkin;	state Exp;
branches;
next	1.6;

1.6
date	97.10.16.13.23.23;	author ahodgkin;	state Exp;
branches;
next	1.5;

1.5
date	97.10.13.07.07.07;	author ahodgkin;	state Exp;
branches;
next	1.4;

1.4
date	97.10.07.17.03.48;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	97.10.07.13.52.04;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	97.10.06.15.18.30;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	97.10.05.17.16.28;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.10
log
@  PDF export, some major redraw structural changes, updated resources,
  new build system, extensive Makefile modifications, const/restrict
  additions, various bug fixes.
Detail:
  PDF export facility. SEE Docs.User FOR DETAILS (important!). Includes
  UI for headers/footers in Choices and option switch in Print dialogue
  box. Minor bug fixes include printing bullet points and, at long last,
  the "print dialogue box contents are not set up" problem. Redraw engine
  now based entirely on function pointers. Draw export routine replaces
  screen output functions with Draw output functions; PDF does similar.
  Coordinate scaling system in Scale.c/h to help. Makefile changes: Now
  supports a more consistent set of build variants and has minimal
  duplication of object and library lists. New build system: !Mk...
  script files removed, FrontEnd tool !MkBrowse replaces it. See !ReadMe
  (replacing old ReadMe) in root for details. Requires FrontEnd 1.29,
  HTMLLib 0.02 and ImageLib 0.04 (by CVS VersionNum). Updated resources:
  Some attempt to bring all variants to a working level, but not much
  testing. Only the Phoenix JavaScript capable builds (Unicode or normal)
  are fully up to date, though, including PDF UI additions. Many other
  minor tweaks, and extensive use of const and restrict qualifiers
  propagated through source code in response to their use in the new
  redraw system.
Admin:
  Draw and PDF export tested quite heavily. Appears to work well. Text
  file 'Docs.User' describes limitations. Note required new module and
  library versions listed above. Note that only JavaScript capable
  Phoenix resources are updated and only Phoenix was heavily tested.

Version 2.12. Tagged as 'Browse-2_12'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    Object.h                                          */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Handling OBJECT, APPLET and EMBED.                */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 05-Oct-1997 (ADH): Created.                       */
/*          07-Apr-2000 (ADH): 64-wide comments adopted.      */
/**************************************************************/

#ifndef Browser_Object__
  #define Browser_Object__

  #include <kernel.h>
  #include <tboxlibs/wimp.h>
  #include <HTMLLib/HTMLLib.h>

  #include "Global.h"

  /* Structures */

  /* The object_info structure is used to hold information */
  /* about each object (or applet or embed) tag that a     */
  /* browser is dealing with.                              */

  typedef struct object_info
  {
    unsigned int   plugin_instance_handle; /* Only if isplugin (below) set */
    unsigned int   plugin_task_handle;     /* Only if isplugin (below) set */

    HStream      * token;

    int            x;
    int            y;

    int            w;
    int            h;

    unsigned       isimage       :1;
    unsigned       isplugin      :1;
    unsigned       broadcast_sent:1;
  }
  object_info;

  /* Function prototypes */

  int               object_retrieve_filetype         (const browser_data * restrict b, const HStream * restrict t, const char * restrict type, const char * restrict data, const char ** restrict absolute);

  _kernel_oserror * object_new_object                (browser_data * b, HStream * t);
  _kernel_oserror * object_discard                   (browser_data * b);

  _kernel_oserror * object_get_token_object_size     (browser_data * restrict b, const HStream * restrict t, BBox * restrict size);
  _kernel_oserror * object_set_token_object_size     (browser_data * b, HStream * t, BBox * size);
  int               object_get_token_object_position (const browser_data * restrict b, const HStream * restrict t, int * restrict x, int * restrict y);
  int               object_set_token_object_position (browser_data * b, const HStream * restrict t, int x, int y);
  int               object_get_token_object_box      (browser_data * restrict b, const HStream * restrict t, BBox * restrict box);

  _kernel_oserror * object_get_token_object_plugin   (const browser_data * restrict b, const HStream * restrict t, unsigned int * restrict plugin_instance, unsigned int * restrict plugin_task);
  _kernel_oserror * object_set_token_object_plugin   (const browser_data * restrict b, const HStream * restrict t, const unsigned int plugin_instance, const unsigned int plugin_task);
  int               object_return_info               (browser_data * b, unsigned int plugin_instance_handle, HStream ** token, unsigned int * plugin_task);

  _kernel_oserror * object_redraw                    (browser_data * b, const HStream * restrict token, int x, int y, const BBox * restrict gfxwin);

  int               object_token_is_image            (const browser_data * b, const HStream * restrict token);

#endif /* Browser_Object__ */
@


1.9
log
@
64-wide comments adopted throughout. All headers protected against multiple
inclusion. Use of <> for external headers rather than "". For libraries,
<libname/header.h> is used rather than relying on a complex include path,
where appropriate. Move towards using external URILib rather than the local
copy. Phoenix JavaScript build resources are the only up to date set
currently so don't try others; more work still required on Makefile (e.g.
getting the ROM build working, and internationalisation issues).

Version 2.08. Not tagged
@
text
@d64 1
a64 1
  int               object_retrieve_filetype         (browser_data * b, HStream * t, const char * type, const char * data, const char ** absolute);
d69 1
a69 1
  _kernel_oserror * object_get_token_object_size     (browser_data * b, HStream * t, BBox * size);
d71 3
a73 3
  int               object_get_token_object_position (browser_data * b, HStream * t, int * x, int * y);
  int               object_set_token_object_position (browser_data * b, HStream * t, int x, int y);
  int               object_get_token_object_box      (browser_data * b, HStream * t, BBox * box);
d75 2
a76 2
  _kernel_oserror * object_get_token_object_plugin   (browser_data * b, HStream * t, unsigned int * plugin_instance, unsigned int * plugin_task);
  _kernel_oserror * object_set_token_object_plugin   (browser_data * b, HStream * t, unsigned int plugin_instance, unsigned int plugin_task);
d79 1
a79 1
  _kernel_oserror * object_redraw                    (browser_data * b, WimpRedrawWindowBlock * r, HStream * token, int x, int y);
d81 1
a81 1
  int               object_token_is_image            (browser_data * b, HStream * t);
@


1.8
log
@Implemented Message_PlugIn_ReshapeRequest, Message_PlugIn_Status and
Message_PlugIn_Busy. Plug-in code more robust when given invalid
browser instance handles by the plug-in.

Line spacing is now calculated on the basis of the normal style base serif
font, with all other fonts being forced into that line height. This does
mean that an unusually tall (say) sans serif font may get clipped. It
appears to be the only way to get around wildly different baseline
depths returned from the font metrics - you can't work out line spacing
based on each different font style; the line spacing will vary.

Table heighting (as opposed to widthing...) improved considerably; rowspan
can no longer cause very tall cells in odd places. Having trouble getting
rid of the single pixel breaks between vertically adjacent cells, though
I've not tried too hard. Widthing, though, seems fairly badly broken at
present... :-/

Set/clear of page_is_text flag made more robust (it looked as though there
was the potential for this to get stuck in a set state, though I've never
see the front-end behave in a manner which indicates this is the case).
The reformatter will now decrease leading if this flag is set (plain text
pages look daft with a line spacing that is OK for 'rich' text pages).
No reformatting is done if the page width changes by dragging on the
resize icon, though toggle size / full screen will still reformat even
if the contents are only text (browser needs to sort out various width
flags at this point).

Cut down on excessive redrawing when reformatting due to a change in
window dimensions is not done. If display_width hasn't changed, then no
redraw is needed. If this causes redraw problems, then whatever is
changing display_width needs investigating. It shouldn't be kludged
(basically) by forcing a redraw instead of a reformat.

TT/PRE/etc. text can now have a non-100% aspect ratio. 80-90% looks
best (ArcWeb, for example, uses 86%). New option 'TTAspect' in
the Choices files.

Debug builds link to a non-debug Unicode library now; stops stderr
being dumped to the bottom left of the screen if you've not redirected
it in the Run file.

RISC OS 3.1 seems to need more initial WimpSlot than later OS versions.
The 64 deep nested table set gives a 'No stack for trap handler' error
(which it really means in this case!) without 800K, even though 3.71
is happy with just 640K. So, the !Run file checks if Boot$OSVersion
is exactly 300, 310 or 311, and sets the WimpSlot accordingly.

!Run[D] files now require latest fetcher module versions (URL 0.21,
File 0.31, HTTP 0.58).
@
text
@d15 12
a26 49
/***************************************************/
/* File   : Object.h                               */
/*                                                 */
/* Purpose: Handling OBJECT, APPLET and EMBED.     */
/*                                                 */
/* Author : A.D.Hodgkinson                         */
/*                                                 */
/* History: 05-Oct-97: Created.                    */
/***************************************************/

/* Structures */

/* The object_info structure is used to hold information */
/* about each object (or applet or embed) tag that a     */
/* browser is dealing with.                              */

typedef struct object_info
{
  unsigned int   plugin_instance_handle; /* Only if isplugin (below) set */
  unsigned int   plugin_task_handle;     /* Only if isplugin (below) set */

  HStream      * token;

  int            x;
  int            y;

  int            w;
  int            h;

  unsigned       isimage       :1;
  unsigned       isplugin      :1;
  unsigned       broadcast_sent:1;
}
object_info;

/* Function prototypes */

_kernel_oserror * object_new_object                (browser_data * b, HStream * t);
_kernel_oserror * object_discard                   (browser_data * b);

_kernel_oserror * object_get_token_object_size     (browser_data * b, HStream * t, BBox * size);
_kernel_oserror * object_set_token_object_size     (browser_data * b, HStream * t, BBox * size);
int               object_get_token_object_position (browser_data * b, HStream * t, int * x, int * y);
int               object_set_token_object_position (browser_data * b, HStream * t, int x, int y);
int               object_get_token_object_box      (browser_data * b, HStream * t, BBox * box);

_kernel_oserror * object_get_token_object_plugin   (browser_data * b, HStream * t, unsigned int * plugin_instance, unsigned int * plugin_task);
_kernel_oserror * object_set_token_object_plugin   (browser_data * b, HStream * t, unsigned int plugin_instance, unsigned int plugin_task);
int               object_return_info               (browser_data * b, unsigned int plugin_instance_handle, HStream ** token, unsigned int * plugin_task); 
d28 2
a29 1
_kernel_oserror * object_redraw                    (browser_data * b, WimpRedrawWindowBlock * r, HStream * token, int x, int y);
d31 53
a83 1
int               object_token_is_image            (browser_data * b, HStream * t);
@


1.7
log
@Removed 'The Onion' link from some Hotlist files. Time showed that the
site wasn't entirely Family Friendly (TM)... Removed Shift Control (it's
gone offline now), and corrected the Telegraph URL from ...the-telegraph...
to just ...telegraph...

StrongHelp manual generator now tries to work out the number of lines in
the table on the root page more intelligently.

Plug-in support extended to handle Shockwave. Quite a lot of underlying
work for this, including a pseudo cache system for temporary files.

Bug in redraw routines: they plotted background images within table
cells, when nothing should have been drawn. Oops. When background images
in cells are properly supported, this can get sorted out.

Tweaked vertical plot position of HRs (up to 4 OS units too high before due
to rounding).

Various Res file bits and pieces, Ursula build taken up to v1.26 beta
for release on the Browser site. *Note* not all resources are up to date!
This will be done after AW97.
@
text
@d41 3
d56 1
d63 1
@


1.6
log
@Now handles PARAM tags. Sorted out Plug-In bug that was related to Java
setting a 0 by 0 graphics window before calling Wimp_Poll (fixed in Java).
Implemented queue for Plug-Ins so multiple broadcasts aren't sent for
several Objects in one data chunk.

Added Docs directory with some documentation in it. More things to keep
checking for stylistic consistency, horray ;-)

Corrected !Run[D] for Ursula build to need AcornURI but not TaskModule
(URI handler needed for !Mail to pick up mailto: links).

Added display_height field to browser_data, analogous to display_width,
to cope with % sized objects by width and height (see how HRs are
handled in Redraw.c for an example of how it was always fairly easy
with width, but not height until this addition). Though you do have
to reload to get a new size; reformat isn't enough. Must see to this
some time...

Fixed bug where basic typefaces were claimed *before* the Choices file
had been read. For unusual Choices settings, this could create some
'interesting' problems now and again. This was part of narrower scope
work in the Choices code to allow font changing without leaking font
handles (now done; fm_shutdown only ditches fonts, it keeps internal
structures - must then call  fm_lose_fonts for all browsers to get the
bitfields up to date, then rewrite the typeface definitions and reclaim
basic fonts). Noticed that fm_claim_basic_typefaces would claim multiple
instances of the same font if there were several cases of the same font
mapped to different typeface styles - fixed.

Implemented PlugInControl settings, but not SupportObject (fully).
@
text
@d58 1
a58 1
_kernel_oserror * object_set_token_object_plugin   (unsigned int browser_instance, HStream * t, unsigned int plugin_instance, unsigned int plugin_task);
@


1.5
log
@More reformatter code bugs fixed; this one regarding width of items. Any
kerned string was overestimated (causing redraw bugs and caret position
problems in forms, apart from other minor bits elsewhere) and the default
size of a writable icon wasn't especially clever.

Crude Plug-In support; just about manages Java, but can't fetch on
behalf of Plug-In (for example). Had to change the default file access
URL construction to be 'file:/' instead of 'file://', or local file
fetches that reference Java applets won't work. This is in its very
early stages, and is being checked in mostly so that various Choices
issues can be worked on.
@
text
@a40 4
  int            width;
  int            height;
  int            units;

d55 1
@


1.4
log
@Added MimeMap module support. OBJECT routines now use this to determine
if the item is an inline image, and if so pass it to the image routines.
At present, support relies on a (correct) content type.
@
text
@d33 2
a34 4
  unsigned int   browser_instance_handle;

  unsigned int   plugin_instance_handle;
  unsigned int   plugin_task_handle;
d45 3
a47 1
  unsigned       isimage:1;
d59 3
@


1.3
log
@Res files had component 0x29fc in frame gadgets for Choices - that's
meant to be the 'fake page' display. Sorted that out.

Got rid of unnecessary #define in Choices.h; the gadget autodetect
for the colour choices took its place.

Unsized objects now default to the same dimensions as unsized images.
@
text
@d46 2
d61 2
@


1.2
log
@Calling HtmlEndParse at the end of html_get_next_token and setting
up->context to NULL was wrong; fetch_fetcher would end up recalling
html_get_next_token later which would then call HtmlParse even though
the document parse had just finished! The HtmlEndParse call has now
been moved to fetch_stop.

Altered reformatter to claim fonts inside a browser, rather than
claiming them for nothing and losing them afterwards.

Got rid of TAG == TABLE and ISBODY tests, replacing with tagno == TAG_TABLE.
Removed all references to TD, TH, TR and TABLE in the style word.
@
text
@d40 3
d51 2
a52 2
_kernel_oserror * object_new_object            (browser_data * b, HStream * t);
_kernel_oserror * object_discard               (browser_data * b);
d54 3
a56 1
_kernel_oserror * object_get_token_object_size (browser_data * b, HStream * t, BBox * size);
d58 1
a58 1
_kernel_oserror * object_redraw                (browser_data * b, WimpRedrawWindowBlock * r, HStream * token, int x, int y);
@


1.1
log
@Big steps forward in vertical white space handling as a result of
improvements in HTMLLib in this area ( -> all versions now 1.22 beta-2).
As a result, the 'last_space' field in browser_data struct has been
removed. Note that this relies quite heavily on setting of the PCDATA
bit in the 'style' field of an HStream and the automatic collapsing
of (for example) multiple P tags inside HTMLLib.

Trace.c improved to recognise various bits in the 'style' field of an
HStream structure.

Phoenix defaults altered to a more 'standard' set of choices; Trinity
as the serif font, with a slightly larger default font size. This is
because there's a good chance it might get released to a wider audience
than Acorn internal (though the animation and icon bar sprites will
have to change before then...).

MiscDefs updated for new SWI numbers in HTTP module; !Run[D] files thus
updated to require HTTP 0.42 or later. At this point, all earlier
modules are not backwards compatible in terms of direct calls to the
HTTP module, though this only affects cookies_process_cookie at present.
At the same time, checks for System$Path, InetDBase$Path, and setting
of Inet$MimeMappings if not already defined have been added to the Run
files along with RMEnsures of Resolver and MimeMap.

Object and PlugIn c/h pairs created to handle OBJECT, EMBED and APPLET,
and the RISC OS Plug-In interface respectively. Not part of the build
process yet. Addition of 'odata' field in browser_data struct and
definition of chunk CK_OBJB for memory_set_chunk_size() are in support
of this.
@
text
@d25 2
d31 1
a31 1
typedef struct   object_info
d39 4
d44 10
@
