head	4.14;
access;
symbols
	Kernel-6_14:4.14
	Kernel-6_01-3:4.13
	Kernel-6_13:4.14
	Kernel-6_12:4.14
	Kernel-6_11:4.14
	Kernel-6_10:4.14
	Kernel-6_09:4.14
	Kernel-6_08-4_129_2_10:4.12.2.2
	Kernel-6_08-4_129_2_9:4.12.2.2
	Kernel-6_08:4.13
	Kernel-6_07:4.13
	Kernel-6_06:4.13
	Kernel-6_05-4_129_2_8:4.12.2.2
	Kernel-6_05:4.13
	Kernel-6_04:4.13
	Kernel-6_03:4.13
	Kernel-6_01-2:4.13
	Kernel-6_01-4_146_2_1:4.13
	Kernel-6_02:4.13
	Kernel-6_01-1:4.13
	Kernel-6_01:4.13
	Kernel-6_00:4.13
	Kernel-5_99:4.13
	Kernel-5_98:4.12
	Kernel-5_97-4_129_2_7:4.12.2.1
	Kernel-5_97:4.12
	Kernel-5_96:4.12
	Kernel-5_95:4.12
	Kernel-5_94:4.12
	Kernel-5_93:4.12
	Kernel-5_92:4.12
	Kernel-5_91:4.12
	Kernel-5_90:4.12
	Kernel-5_89-4_129_2_6:4.12.2.1
	Kernel-5_89:4.12
	Kernel-5_88-4_129_2_5:4.12.2.1
	Kernel-5_88-4_129_2_4:4.12.2.1
	Kernel-5_88:4.12
	Kernel-5_87:4.12
	Kernel-5_86-4_129_2_3:4.12.2.1
	Kernel-5_86-4_129_2_2:4.12.2.1
	Kernel-5_86-4_129_2_1:4.12
	Kernel-5_86:4.12
	SMP:4.12.0.2
	SMP_bp:4.12
	Kernel-5_85:4.12
	Kernel-5_54-1:4.11
	Kernel-5_84:4.12
	Kernel-5_83:4.12
	Kernel-5_82:4.12
	Kernel-5_81:4.12
	Kernel-5_80:4.12
	Kernel-5_79:4.12
	Kernel-5_78:4.12
	Kernel-5_77:4.12
	Kernel-5_76:4.12
	Kernel-5_75:4.12
	Kernel-5_74:4.12
	Kernel-5_73:4.12
	Kernel-5_72:4.12
	Kernel-5_71:4.12
	Kernel-5_70:4.12
	Kernel-5_69:4.12
	Kernel-5_68:4.12
	Kernel-5_67:4.12
	Kernel-5_66:4.12
	Kernel-5_65:4.12
	Kernel-5_64:4.12
	Kernel-5_63:4.12
	Kernel-5_62:4.12
	Kernel-5_61:4.12
	Kernel-5_60:4.12
	Kernel-5_59:4.12
	Kernel-5_58:4.12
	Kernel-5_57:4.12
	Kernel-5_56:4.12
	Kernel-5_55:4.12
	Kernel-5_54:4.11
	Kernel-5_53:4.10
	Kernel-5_52:4.10
	Kernel-5_51:4.10
	Kernel-5_50:4.10
	Kernel-5_49:4.10
	HAL_merge:4.7.2.37
	Kernel-5_48:4.10
	Kernel-5_35-4_79_2_327:4.7.2.37
	Kernel-5_35-4_79_2_326:4.7.2.37
	Kernel-5_35-4_79_2_325:4.7.2.37
	Kernel-5_35-4_79_2_324:4.7.2.37
	Kernel-5_35-4_79_2_323:4.7.2.37
	Kernel-5_35-4_79_2_322:4.7.2.37
	Kernel-5_35-4_79_2_321:4.7.2.37
	Kernel-5_35-4_79_2_320:4.7.2.37
	Kernel-5_35-4_79_2_319:4.7.2.37
	Kernel-5_35-4_79_2_318:4.7.2.37
	Kernel-5_35-4_79_2_317:4.7.2.37
	Kernel-5_35-4_79_2_316:4.7.2.37
	Kernel-5_35-4_79_2_315:4.7.2.37
	Kernel-5_35-4_79_2_314:4.7.2.37
	Kernel-5_35-4_79_2_313:4.7.2.37
	Kernel-5_35-4_79_2_312:4.7.2.37
	Kernel-5_35-4_79_2_311:4.7.2.37
	Kernel-5_35-4_79_2_310:4.7.2.37
	Kernel-5_35-4_79_2_309:4.7.2.37
	Kernel-5_35-4_79_2_308:4.7.2.36
	Kernel-5_35-4_79_2_307:4.7.2.36
	Kernel-5_35-4_79_2_306:4.7.2.36
	Kernel-5_35-4_79_2_305:4.7.2.36
	Kernel-5_35-4_79_2_304:4.7.2.36
	Kernel-5_35-4_79_2_303:4.7.2.36
	Kernel-5_35-4_79_2_302:4.7.2.36
	Kernel-5_35-4_79_2_301:4.7.2.36
	Kernel-5_35-4_79_2_300:4.7.2.36
	Kernel-5_35-4_79_2_299:4.7.2.36
	Kernel-5_35-4_79_2_298:4.7.2.36
	Kernel-5_35-4_79_2_297:4.7.2.36
	Kernel-5_35-4_79_2_296:4.7.2.36
	Kernel-5_35-4_79_2_295:4.7.2.35
	Kernel-5_35-4_79_2_294:4.7.2.35
	Kernel-5_35-4_79_2_293:4.7.2.35
	Kernel-5_35-4_79_2_292:4.7.2.35
	Kernel-5_35-4_79_2_291:4.7.2.35
	Kernel-5_35-4_79_2_290:4.7.2.35
	Kernel-5_35-4_79_2_289:4.7.2.35
	Kernel-5_35-4_79_2_288:4.7.2.35
	Kernel-5_35-4_79_2_287:4.7.2.35
	Kernel-5_35-4_79_2_286:4.7.2.35
	Kernel-5_35-4_79_2_285:4.7.2.35
	Kernel-5_35-4_79_2_284:4.7.2.35
	Kernel-5_35-4_79_2_283:4.7.2.35
	Kernel-5_35-4_79_2_282:4.7.2.34
	Kernel-5_35-4_79_2_281:4.7.2.33
	Kernel-5_35-4_79_2_280:4.7.2.33
	Kernel-5_35-4_79_2_279:4.7.2.33
	Kernel-5_35-4_79_2_278:4.7.2.32
	Kernel-5_35-4_79_2_277:4.7.2.32
	Kernel-5_35-4_79_2_276:4.7.2.32
	Kernel-5_35-4_79_2_275:4.7.2.32
	Kernel-5_35-4_79_2_274:4.7.2.32
	Kernel-5_35-4_79_2_273:4.7.2.32
	Kernel-5_35-4_79_2_272:4.7.2.32
	Kernel-5_35-4_79_2_271:4.7.2.32
	Kernel-5_35-4_79_2_270:4.7.2.32
	Kernel-5_35-4_79_2_269:4.7.2.32
	Kernel-5_35-4_79_2_268:4.7.2.32
	Kernel-5_35-4_79_2_267:4.7.2.31
	Kernel-5_35-4_79_2_266:4.7.2.31
	Kernel-5_35-4_79_2_265:4.7.2.31
	Kernel-5_35-4_79_2_264:4.7.2.31
	Kernel-5_35-4_79_2_263:4.7.2.31
	Kernel-5_35-4_79_2_262:4.7.2.31
	Kernel-5_35-4_79_2_261:4.7.2.31
	Kernel-5_35-4_79_2_260:4.7.2.31
	Kernel-5_35-4_79_2_259:4.7.2.31
	Kernel-5_35-4_79_2_258:4.7.2.31
	Kernel-5_35-4_79_2_257:4.7.2.31
	Kernel-5_35-4_79_2_256:4.7.2.31
	Kernel-5_35-4_79_2_255:4.7.2.31
	Kernel-5_35-4_79_2_254:4.7.2.31
	Kernel-5_35-4_79_2_253:4.7.2.31
	Kernel-5_35-4_79_2_252:4.7.2.31
	Kernel-5_35-4_79_2_251:4.7.2.30
	Kernel-5_35-4_79_2_250:4.7.2.30
	Kernel-5_35-4_79_2_249:4.7.2.30
	Kernel-5_35-4_79_2_248:4.7.2.30
	Kernel-5_35-4_79_2_247:4.7.2.30
	Kernel-5_35-4_79_2_246:4.7.2.30
	Kernel-5_35-4_79_2_245:4.7.2.30
	Kernel-5_35-4_79_2_244:4.7.2.30
	Kernel-5_35-4_79_2_243:4.7.2.30
	Kernel-5_35-4_79_2_242:4.7.2.30
	Kernel-5_35-4_79_2_241:4.7.2.29
	Kernel-5_35-4_79_2_240:4.7.2.29
	Kernel-5_35-4_79_2_239:4.7.2.29
	Kernel-5_35-4_79_2_238:4.7.2.29
	Kernel-5_35-4_79_2_237:4.7.2.29
	Kernel-5_35-4_79_2_236:4.7.2.29
	Kernel-5_35-4_79_2_235:4.7.2.29
	Kernel-5_35-4_79_2_234:4.7.2.29
	Kernel-5_35-4_79_2_233:4.7.2.29
	Kernel-5_35-4_79_2_232:4.7.2.29
	Kernel-5_35-4_79_2_231:4.7.2.29
	Kernel-5_35-4_79_2_230:4.7.2.29
	Kernel-5_35-4_79_2_229:4.7.2.29
	Kernel-5_35-4_79_2_228:4.7.2.29
	Kernel-5_35-4_79_2_227:4.7.2.28
	Kernel-5_35-4_79_2_226:4.7.2.28
	Kernel-5_35-4_79_2_225:4.7.2.28
	Kernel-5_35-4_79_2_224:4.7.2.28
	Kernel-5_35-4_79_2_223:4.7.2.28
	Kernel-5_35-4_79_2_222:4.7.2.28
	Kernel-5_35-4_79_2_221:4.7.2.28
	Kernel-5_35-4_79_2_220:4.7.2.28
	Kernel-5_35-4_79_2_219:4.7.2.28
	Kernel-5_35-4_79_2_218:4.7.2.28
	Kernel-5_35-4_79_2_217:4.7.2.28
	Kernel-5_35-4_79_2_216:4.7.2.28
	Kernel-5_35-4_79_2_215:4.7.2.28
	Kernel-5_35-4_79_2_214:4.7.2.28
	Kernel-5_35-4_79_2_213:4.7.2.28
	Kernel-5_35-4_79_2_212:4.7.2.28
	Kernel-5_35-4_79_2_211:4.7.2.28
	Kernel-5_35-4_79_2_210:4.7.2.28
	Kernel-5_35-4_79_2_209:4.7.2.28
	Kernel-5_35-4_79_2_208:4.7.2.28
	Kernel-5_35-4_79_2_207:4.7.2.28
	Kernel-5_35-4_79_2_206:4.7.2.28
	Kernel-5_35-4_79_2_205:4.7.2.28
	Kernel-5_35-4_79_2_204:4.7.2.28
	Kernel-5_35-4_79_2_203:4.7.2.28
	Kernel-5_35-4_79_2_202:4.7.2.27
	Kernel-5_35-4_79_2_201:4.7.2.26
	Kernel-5_35-4_79_2_200:4.7.2.26
	Kernel-5_35-4_79_2_199:4.7.2.26
	Kernel-5_35-4_79_2_198:4.7.2.26
	Kernel-5_35-4_79_2_197:4.7.2.26
	Kernel-5_35-4_79_2_196:4.7.2.26
	Kernel-5_35-4_79_2_195:4.7.2.26
	Kernel-5_35-4_79_2_194:4.7.2.26
	Kernel-5_35-4_79_2_193:4.7.2.25
	Kernel-5_35-4_79_2_192:4.7.2.25
	Kernel-5_35-4_79_2_191:4.7.2.25
	Kernel-5_35-4_79_2_190:4.7.2.25
	Kernel-5_35-4_79_2_189:4.7.2.25
	Kernel-5_35-4_79_2_188:4.7.2.25
	Kernel-5_35-4_79_2_187:4.7.2.25
	Kernel-5_35-4_79_2_186:4.7.2.25
	Kernel-5_35-4_79_2_185:4.7.2.25
	Kernel-5_35-4_79_2_184:4.7.2.25
	Kernel-5_35-4_79_2_183:4.7.2.25
	Kernel-5_35-4_79_2_182:4.7.2.25
	Kernel-5_35-4_79_2_181:4.7.2.25
	Kernel-5_35-4_79_2_180:4.7.2.25
	Kernel-5_35-4_79_2_179:4.7.2.25
	Kernel-5_35-4_79_2_178:4.7.2.25
	Kernel-5_35-4_79_2_177:4.7.2.25
	Kernel-5_35-4_79_2_176:4.7.2.25
	Kernel-5_35-4_79_2_175:4.7.2.25
	Kernel-5_35-4_79_2_174:4.7.2.25
	Kernel-5_35-4_79_2_173:4.7.2.24
	Kernel-5_35-4_79_2_172:4.7.2.24
	Kernel-5_35-4_79_2_171:4.7.2.24
	Kernel-5_35-4_79_2_170:4.7.2.23
	Kernel-5_35-4_79_2_169:4.7.2.23
	Kernel-5_35-4_79_2_168:4.7.2.23
	Kernel-5_35-4_79_2_167:4.7.2.23
	Kernel-5_35-4_79_2_166:4.7.2.23
	Kernel-5_35-4_79_2_165:4.7.2.23
	RPi_merge:4.7.2.23
	Kernel-5_35-4_79_2_147_2_23:4.7.2.23
	Kernel-5_35-4_79_2_147_2_22:4.7.2.23
	Kernel-5_35-4_79_2_147_2_21:4.7.2.23
	Kernel-5_35-4_79_2_147_2_20:4.7.2.23
	Kernel-5_35-4_79_2_147_2_19:4.7.2.23
	Kernel-5_35-4_79_2_147_2_18:4.7.2.23
	Kernel-5_35-4_79_2_164:4.7.2.23
	Kernel-5_35-4_79_2_163:4.7.2.23
	Kernel-5_35-4_79_2_147_2_17:4.7.2.23
	Kernel-5_35-4_79_2_147_2_16:4.7.2.23
	Kernel-5_35-4_79_2_147_2_15:4.7.2.23
	Kernel-5_35-4_79_2_162:4.7.2.23
	Kernel-5_35-4_79_2_161:4.7.2.23
	Kernel-5_35-4_79_2_147_2_14:4.7.2.23
	Kernel-5_35-4_79_2_147_2_13:4.7.2.23
	Kernel-5_35-4_79_2_160:4.7.2.23
	Kernel-5_35-4_79_2_159:4.7.2.23
	Kernel-5_35-4_79_2_158:4.7.2.23
	Kernel-5_35-4_79_2_157:4.7.2.23
	Kernel-5_35-4_79_2_156:4.7.2.23
	Kernel-5_35-4_79_2_147_2_12:4.7.2.23
	Kernel-5_35-4_79_2_147_2_11:4.7.2.23
	Kernel-5_35-4_79_2_155:4.7.2.23
	Kernel-5_35-4_79_2_147_2_10:4.7.2.23
	Kernel-5_35-4_79_2_154:4.7.2.23
	Kernel-5_35-4_79_2_153:4.7.2.23
	Kernel-5_35-4_79_2_147_2_9:4.7.2.23
	Kernel-5_35-4_79_2_152:4.7.2.23
	Kernel-5_35-4_79_2_151:4.7.2.23
	Kernel-5_35-4_79_2_147_2_8:4.7.2.23
	Kernel-5_35-4_79_2_147_2_7:4.7.2.23
	Kernel-5_35-4_79_2_150:4.7.2.23
	Kernel-5_35-4_79_2_147_2_6:4.7.2.23
	Kernel-5_35-4_79_2_147_2_5:4.7.2.23
	Kernel-5_35-4_79_2_149:4.7.2.23
	Kernel-5_35-4_79_2_147_2_4:4.7.2.23
	Kernel-5_35-4_79_2_147_2_3:4.7.2.23
	Kernel-5_35-4_79_2_148:4.7.2.23
	Kernel-5_35-4_79_2_147_2_2:4.7.2.23
	Kernel-5_35-4_79_2_147_2_1:4.7.2.23
	RPi:4.7.2.23.0.2
	RPi_bp:4.7.2.23
	Kernel-5_35-4_79_2_98_2_52_2_1:4.7.2.13.2.10
	alees_Kernel_dev:4.7.2.13.2.10.0.2
	alees_Kernel_dev_bp:4.7.2.13.2.10
	Kernel-5_35-4_79_2_147:4.7.2.23
	Kernel-5_35-4_79_2_146:4.7.2.23
	Kernel-5_35-4_79_2_145:4.7.2.23
	Kernel-5_35-4_79_2_144:4.7.2.23
	Kernel-5_35-4_79_2_143:4.7.2.23
	Kernel-5_35-4_79_2_142:4.7.2.22
	Kernel-5_35-4_79_2_141:4.7.2.22
	Kernel-5_35-4_79_2_140:4.7.2.22
	Kernel-5_35-4_79_2_139:4.7.2.22
	Kernel-5_35-4_79_2_138:4.7.2.22
	Kernel-5_35-4_79_2_137:4.7.2.21
	Kernel-5_35-4_79_2_136:4.7.2.21
	Kernel-5_35-4_79_2_135:4.7.2.21
	Kernel-5_35-4_79_2_134:4.7.2.21
	Kernel-5_35-4_79_2_133:4.7.2.21
	Kernel-5_35-4_79_2_132:4.7.2.21
	Kernel-5_35-4_79_2_131:4.7.2.21
	Kernel-5_35-4_79_2_130:4.7.2.21
	Kernel-5_35-4_79_2_129:4.7.2.21
	Kernel-5_35-4_79_2_128:4.7.2.21
	Kernel-5_35-4_79_2_127:4.7.2.21
	Kernel-5_35-4_79_2_126:4.7.2.21
	Kernel-5_35-4_79_2_125:4.7.2.21
	Kernel-5_35-4_79_2_124:4.7.2.20
	Kernel-5_35-4_79_2_123:4.7.2.20
	Cortex_merge:4.7.2.13.2.10
	Kernel-5_35-4_79_2_122:4.7.2.19
	Kernel-5_35-4_79_2_98_2_54:4.7.2.13.2.10
	Kernel-5_35-4_79_2_98_2_53:4.7.2.13.2.10
	Kernel-5_35-4_79_2_98_2_52:4.7.2.13.2.10
	Kernel-5_35-4_79_2_98_2_51:4.7.2.13.2.10
	Kernel-5_35-4_79_2_98_2_50:4.7.2.13.2.10
	Kernel-5_35-4_79_2_98_2_49:4.7.2.13.2.10
	Kernel-5_35-4_79_2_98_2_48:4.7.2.13.2.10
	Kernel-5_35-4_79_2_121:4.7.2.19
	Kernel-5_35-4_79_2_98_2_47:4.7.2.13.2.10
	Kernel-5_35-4_79_2_120:4.7.2.19
	Kernel-5_35-4_79_2_98_2_46:4.7.2.13.2.10
	Kernel-5_35-4_79_2_119:4.7.2.19
	Kernel-5_35-4_79_2_98_2_45:4.7.2.13.2.10
	Kernel-5_35-4_79_2_98_2_44:4.7.2.13.2.10
	Kernel-5_35-4_79_2_118:4.7.2.19
	Kernel-5_35-4_79_2_98_2_43:4.7.2.13.2.9
	Kernel-5_35-4_79_2_117:4.7.2.18
	Kernel-5_35-4_79_2_116:4.7.2.17
	Kernel-5_35-4_79_2_98_2_42:4.7.2.13.2.8
	Kernel-5_35-4_79_2_115:4.7.2.17
	Kernel-5_35-4_79_2_98_2_41:4.7.2.13.2.7
	Kernel-5_35-4_79_2_98_2_40:4.7.2.13.2.6
	Kernel-5_35-4_79_2_114:4.7.2.16
	Kernel-5_35-4_79_2_98_2_39:4.7.2.13.2.6
	Kernel-5_35-4_79_2_98_2_38:4.7.2.13.2.6
	Kernel-5_35-4_79_2_113:4.7.2.16
	Kernel-5_35-4_79_2_112:4.7.2.15
	Kernel-5_35-4_79_2_98_2_37:4.7.2.13.2.5
	Kernel-5_35-4_79_2_98_2_36:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_35:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_34:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_33:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_32:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_31:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_30:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_29:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_28:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_27:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_26:4.7.2.13.2.4
	Kernel-5_35-4_79_2_111:4.7.2.14
	Kernel-5_35-4_79_2_98_2_25:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_24:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_23:4.7.2.13.2.4
	Kernel-5_35-4_79_2_110:4.7.2.14
	Kernel-5_35-4_79_2_98_2_22:4.7.2.13.2.4
	Kernel-5_35-4_79_2_109:4.7.2.14
	Kernel-5_35-4_79_2_98_2_21:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_20:4.7.2.13.2.4
	Kernel-5_35-4_79_2_108:4.7.2.14
	Kernel-5_35-4_79_2_107:4.7.2.14
	Kernel-5_35-4_79_2_98_2_19:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_18:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_17:4.7.2.13.2.4
	Kernel-5_35-4_79_2_98_2_16:4.7.2.13.2.3
	Kernel-5_35-4_79_2_98_2_15:4.7.2.13.2.2
	Kernel-5_35-4_79_2_106:4.7.2.14
	Kernel-5_35-4_79_2_105:4.7.2.14
	Kernel-5_35-4_79_2_104:4.7.2.14
	Kernel-5_35-4_79_2_98_2_14:4.7.2.13.2.2
	Kernel-5_35-4_79_2_98_2_13:4.7.2.13.2.2
	Kernel-5_35-4_79_2_98_2_12:4.7.2.13.2.2
	Kernel-5_35-4_79_2_98_2_11:4.7.2.13.2.2
	Kernel-5_35-4_79_2_98_2_10:4.7.2.13.2.1
	Kernel-5_35-4_79_2_98_2_9:4.7.2.13.2.1
	Kernel-5_35-4_79_2_103:4.7.2.14
	Kernel-5_35-4_79_2_102:4.7.2.14
	Kernel-5_35-4_79_2_98_2_8:4.7.2.13
	Kernel-5_35-4_79_2_98_2_7:4.7.2.13
	Kernel-5_35-4_79_2_98_2_6:4.7.2.13
	Kernel-5_35-4_79_2_98_2_5:4.7.2.13
	Kernel-5_35-4_79_2_98_2_4:4.7.2.13
	Kernel-5_35-4_79_2_101:4.7.2.13
	Kernel-5_35-4_79_2_100:4.7.2.13
	Kernel-5_35-4_79_2_99:4.7.2.13
	Kernel-5_35-4_79_2_98_2_3:4.7.2.13
	Kernel-5_35-4_79_2_98_2_2:4.7.2.13
	Kernel-5_35-4_79_2_98_2_1:4.7.2.13
	Cortex:4.7.2.13.0.2
	Cortex_bp:4.7.2.13
	Kernel-5_35-4_79_2_98:4.7.2.13
	Kernel-5_35-4_79_2_97:4.7.2.13
	Kernel-5_35-4_79_2_96:4.7.2.13
	Kernel-5_35-4_79_2_95:4.7.2.13
	Kernel-5_35-4_79_2_94:4.7.2.13
	Kernel-5_35-4_79_2_93:4.7.2.13
	Kernel-5_35-4_79_2_92:4.7.2.13
	Kernel-5_35-4_79_2_91:4.7.2.13
	Kernel-5_35-4_79_2_90:4.7.2.13
	Kernel-5_35-4_79_2_89:4.7.2.13
	Kernel-5_35-4_79_2_88:4.7.2.13
	Kernel-5_35-4_79_2_87:4.7.2.13
	Kernel-5_35-4_79_2_86:4.7.2.13
	Kernel-5_35-4_79_2_85:4.7.2.13
	Kernel-5_35-4_79_2_84:4.7.2.13
	Kernel-5_35-4_79_2_83:4.7.2.13
	Kernel-5_35-4_79_2_82:4.7.2.12
	Kernel-5_35-4_79_2_81:4.7.2.12
	Kernel-5_35-4_79_2_80:4.7.2.12
	Kernel-5_35-4_79_2_79:4.7.2.12
	Kernel-5_35-4_79_2_78:4.7.2.12
	Kernel-5_35-4_79_2_77:4.7.2.12
	RO_5_07:4.7.2.12
	Kernel-5_35-4_79_2_76:4.7.2.12
	Kernel-5_35-4_79_2_75:4.7.2.12
	Kernel-5_35-4_79_2_74:4.7.2.12
	Kernel-5_35-4_79_2_73:4.7.2.12
	Kernel-5_35-4_79_2_72:4.7.2.12
	Kernel-5_35-4_79_2_71:4.7.2.12
	Kernel-5_35-4_79_2_70:4.7.2.12
	Kernel-5_35-4_79_2_69:4.7.2.12
	Kernel-5_35-4_79_2_68:4.7.2.12
	Kernel-5_35-4_79_2_67:4.7.2.12
	Kernel-5_35-4_79_2_66:4.7.2.12
	Kernel-5_35-4_79_2_65:4.7.2.12
	Kernel-5_35-4_79_2_64:4.7.2.12
	Kernel-5_35-4_79_2_63:4.7.2.12
	Kernel-5_35-4_79_2_62:4.7.2.12
	Kernel-5_35-4_79_2_61:4.7.2.12
	Kernel-5_35-4_79_2_60:4.7.2.12
	Kernel-5_35-4_79_2_59:4.7.2.12
	Kernel-5_35-4_79_2_58:4.7.2.12
	Kernel-5_35-4_79_2_57:4.7.2.12
	Kernel-5_35-4_79_2_56:4.7.2.12
	Kernel-5_35-4_79_2_55:4.7.2.11
	Kernel-5_35-4_79_2_54:4.7.2.11
	Kernel-5_35-4_79_2_53:4.7.2.11
	Kernel-5_35-4_79_2_52:4.7.2.11
	Kernel-5_35-4_79_2_51:4.7.2.11
	Kernel-5_35-4_79_2_50:4.7.2.11
	Kernel-5_35-4_79_2_49:4.7.2.11
	Kernel-5_35-4_79_2_48:4.7.2.11
	Kernel-5_47:4.9
	Kernel-5_46-4_90_2_1:4.9
	nbingham_Kernel_FastNC_dev_bp:4.9
	nbingham_Kernel_FastNC_dev:4.9.0.2
	Kernel-5_46:4.9
	Kernel-5_45:4.9
	Kernel-5_35-4_79_2_47:4.7.2.10
	Kernel-5_35-4_79_2_46:4.7.2.10
	Kernel-5_35-4_79_2_45:4.7.2.10
	Kernel-5_35-4_79_2_44:4.7.2.10
	Kernel-5_35-4_79_2_25_2_2:4.7.2.10
	Kernel-5_35-4_79_2_43:4.7.2.10
	Kernel-5_35-4_79_2_42:4.7.2.10
	Kernel-5_35-4_79_2_41:4.7.2.10
	Kernel-5_35-4_79_2_40:4.7.2.10
	Kernel-5_35-4_79_2_39:4.7.2.10
	Kernel-5_35-4_79_2_38:4.7.2.10
	Kernel-5_35-4_79_2_37:4.7.2.10
	Kernel-5_35-4_79_2_36:4.7.2.10
	Kernel-5_35-4_79_2_35:4.7.2.10
	Kernel-5_35-4_79_2_34:4.7.2.10
	Kernel-5_35-4_79_2_33:4.7.2.10
	Kernel-5_35-4_79_2_32:4.7.2.10
	Kernel-5_44:4.8
	Kernel-5_35-4_79_2_25_2_1:4.7.2.10
	Kernel-5_43:4.8
	Kernel-5_35-4_79_2_31:4.7.2.10
	Kernel-5_35-4_79_2_30:4.7.2.10
	Kernel-5_35-4_79_2_29:4.7.2.10
	Kernel-5_35-4_79_2_28:4.7.2.10
	Kernel-5_35-4_79_2_27:4.7.2.10
	Kernel-5_35-4_79_2_26:4.7.2.10
	Kernel-5_42:4.8
	Kernel-5_41:4.8
	Kernel-5_40:4.8
	Kernel-5_35-4_79_2_25:4.7.2.10
	Kernel-5_35-4_79_2_24:4.7.2.10
	Kernel-5_35-4_79_2_23:4.7.2.10
	Kernel-5_35-4_79_2_22:4.7.2.10
	Kernel-5_35-4_79_2_21:4.7.2.10
	Kernel-5_35-4_79_2_20:4.7.2.10
	Kernel-5_35-4_79_2_19:4.7.2.10
	Kernel-5_35-4_79_2_18:4.7.2.8
	Kernel-5_35-4_79_2_17:4.7.2.8
	Kernel-5_35-4_79_2_16:4.7.2.8
	Kernel-5_35-4_79_2_15:4.7.2.8
	Kernel-5_35-4_79_2_14:4.7.2.8
	Kernel-5_39:4.8
	Kernel-5_13-4_52_2_1:4.7
	Bethany:4.7.0.4
	Kernel-5_38:4.7
	Kernel-5_35-4_79_2_13:4.7.2.8
	Kernel-5_35-4_79_2_12:4.7.2.8
	Kernel-5_35-4_79_2_11:4.7.2.8
	Kernel-5_37:4.7
	Kernel-5_35-4_79_2_10:4.7.2.6
	Kernel-5_35-4_79_2_9:4.7.2.5
	Kernel-5_36:4.7
	Kernel-5_35-4_79_2_8:4.7.2.2
	Kernel-5_35-4_79_2_7:4.7.2.2
	Kernel-5_35-4_79_2_6:4.7.2.2
	Kernel-5_35-4_79_2_5:4.7.2.2
	Kernel-5_35-4_79_2_4:4.7.2.2
	Kernel-5_35-4_79_2_3:4.7.2.2
	Kernel-5_35-4_79_2_2:4.7.2.2
	dellis_autobuild_BaseSW:4.7
	Kernel-5_35-4_79_2_1:4.7.2.1
	HAL:4.7.0.2
	Kernel-5_35:4.7
	Kernel-5_34:4.7
	Kernel-5_33:4.7
	Kernel-5_32:4.7
	Kernel-5_31:4.7
	Kernel-5_30:4.7
	Kernel-5_29:4.7
	Kernel-5_28:4.7
	Kernel-5_27:4.7
	Kernel-5_26:4.7
	Kernel-5_25:4.7
	Kernel-5_24:4.7
	Kernel-5_23:4.7
	Kernel-5_22:4.7
	sbrodie_sedwards_16Mar2000:4.7
	Kernel-5_21:4.7
	Kernel-5_20:4.7
	Kernel-5_19:4.7
	Kernel-5_18:4.7
	Kernel-5_17:4.7
	Kernel-5_16:4.7
	Kernel-5_15:4.7
	Kernel-5_14:4.7
	Kernel-5_13:4.7
	Kernel-5_12:4.7
	Kernel-5_11:4.7
	Kernel-5_10:4.7
	Kernel-5_09:4.7
	Kernel-5_08:4.7
	Kernel-5_07:4.7
	Kernel-5_06:4.7
	Kernel-5_05:4.7
	Kernel-5_04:4.7
	Kernel-5_03:4.7
	Kernel-5_02:4.7
	Kernel-5_01:4.7
	Kernel-5_00:4.7
	Kernel-4_99:4.7
	Kernel-4_98:4.7
	Kernel-4_97:4.7
	Kernel-4_96:4.7
	Kernel-4_95:4.7
	Kernel-4_94:4.7
	Kernel-4_93:4.7
	Kernel-4_92:4.7
	Kernel-4_91:4.7
	Kernel-4_90:4.7
	dcotton_autobuild_BaseSW:4.8
	Kernel-4_89:4.7
	Kernel-4_88:4.7
	Kernel-4_87:4.7
	Kernel-4_86:4.7
	Kernel-4_85:4.7
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.3.2.3.2.2
	Kernel-4_84:4.7
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.3.2.3.2.2
	Ursula_RiscPC_bp:4.3.2.3
	Kernel-4_83:4.7
	Kernel-4_82:4.7
	Kernel-4_81:4.6
	Kernel-4_80:4.6
	Kernel-4_79:4.6
	Kernel-4_78:4.6
	Kernel-4_77:4.6
	Kernel-4_76:4.6
	Kernel-4_75:4.6
	Kernel-4_74:4.6
	Kernel-4_73:4.6
	Kernel-4_72:4.5
	Kernel-4_71:4.5
	Kernel-4_70:4.5
	Kernel-4_69:4.5
	Kernel-4_68:4.5
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3.2.3
	Ursula_RiscPC:4.3.2.3.0.2
	Kernel-4_63-1_1_2_5:4.1.7.7
	Kernel-4_63-1_1_2_4:4.1.7.7
	Kernel-4_67:4.5
	Kernel-4_66:4.5
	Kernel-4_63-1_1_2_3:4.1.7.7
	Kernel-4_65:4.4
	Ursula_merge:4.3
	Kernel-4_64:4.4
	mstphens_Kernel-3_81:4.3.2.3
	Kernel-4_63-1_1_2_2:4.1.7.7
	nicke_Kernel_4_62:4.1.7.6
	rthornb_UrsulaBuild-19Aug1998:4.3.2.3
	UrsulaBuild_FinalSoftload:4.3.2.3
	rthornb_UrsulaBuild-12Aug1998:4.3.2.3
	aglover_UrsulaBuild-05Aug1998:4.3.2.3
	rthornb_UrsulaBuild-29Jul1998:4.3.2.3
	rthornb_UrsulaBuild-22Jul1998:4.3.2.3
	nturton_v459:4.1.7.5
	nturton_v460:4.1.7.5
	rthornb_UrsulaBuild-15Jul1998:4.3.2.3
	rthornb_UrsulaBuild-07Jul1998:4.3.2.3
	rthornb_UrsulaBuild-17Jun1998:4.3.2.3
	rthornb_UrsulaBuild-03Jun1998:4.3.2.3
	rthornb_UrsulaBuild-27May1998:4.3.2.3
	mstphens_Kernel-3_80:4.3.2.3
	rthornb_UrsulaBuild-21May1998:4.3.2.3
	afrost_Boca-1_2-Beta:4.1.7.5
	rthornb_UrsulaBuild_01May1998:4.3.2.2
	afrost_NC2_Generic:4.1.7.5
	Spinner_B20_2:4.1.7.5
	Spinner_19_3:4.1.7.5
	Spinner_B18:4.1.7.5
	Spinner_B17:4.1.7.5
	Spinner_B15:4.1.7.5
	Spinner_B14:4.1.7.4
	Spinner_B13:4.1.7.4
	Spinner_B12:4.1.7.4
	Spinner_B10:4.1.7.4
	Daytona:4.3.0.4
	Daytona_bp:4.3
	Ursula_bp:4.3
	Ursula:4.3.0.2
	Spinner_B7:4.1.7.4
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	ARTtmp:4.1.7.2.0.2
	Spin_merge:4.1.7.7
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.14
date	2018.07.07.14.06.20;	author jlee;	state Exp;
branches;
next	4.13;
commitid	VD8qInwgaJB98dJA;

4.13
date	2018.03.25.20.54.15;	author rsprowson;	state Exp;
branches;
next	4.12;
commitid	D5ZEtI6eikOUISvA;

4.12
date	2016.08.02.22.10.34;	author jlee;	state Exp;
branches
	4.12.2.1;
next	4.11;
commitid	CnQYuUGzojQfrMgz;

4.11
date	2016.07.24.10.50.35;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	x4yCuRzf90zVXyfz;

4.10
date	2016.06.30.20.07.13;	author jlee;	state Exp;
branches;
next	4.9;
commitid	IWoXxARWeuLDOwcz;

4.9
date	2002.02.18.16.42.24;	author bavison;	state Exp;
branches;
next	4.8;

4.8
date	2001.01.05.13.50.37;	author sbrodie;	state Exp;
branches;
next	4.7;

4.7
date	99.08.10.14.07.17;	author sbrodie;	state Exp;
branches
	4.7.2.1;
next	4.6;

4.6
date	99.04.14.09.57.59;	author kbracey;	state Exp;
branches;
next	4.5;

4.5
date	98.10.22.09.24.20;	author kbracey;	state Exp;
branches;
next	4.4;

4.4
date	98.09.30.08.41.30;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	97.05.07.05.51.18;	author kbracey;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	97.01.21.14.06.04;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.40.41;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.12.2.1
date	2017.07.29.11.12.59;	author jlee;	state Exp;
branches;
next	4.12.2.2;
commitid	E0o1zV5A8r2fc71A;

4.12.2.2
date	2018.05.14.19.33.35;	author jlee;	state Exp;
branches;
next	;
commitid	wrVtYH84nAz1GiCA;

4.7.2.1
date	2000.09.15.12.38.00;	author kbracey;	state Exp;
branches;
next	4.7.2.2;

4.7.2.2
date	2000.10.02.08.52.18;	author kbracey;	state Exp;
branches;
next	4.7.2.3;

4.7.2.3
date	2000.10.06.09.08.11;	author kbracey;	state Exp;
branches;
next	4.7.2.4;

4.7.2.4
date	2000.10.09.15.59.14;	author kbracey;	state Exp;
branches;
next	4.7.2.5;

4.7.2.5
date	2000.10.16.11.37.10;	author mstephen;	state Exp;
branches;
next	4.7.2.6;

4.7.2.6
date	2000.10.16.11.55.37;	author kbracey;	state Exp;
branches;
next	4.7.2.7;

4.7.2.7
date	2000.10.20.14.58.20;	author kbracey;	state Exp;
branches;
next	4.7.2.8;

4.7.2.8
date	2000.10.20.15.48.03;	author mstephen;	state Exp;
branches;
next	4.7.2.9;

4.7.2.9
date	2001.03.07.15.12.49;	author kbracey;	state Exp;
branches;
next	4.7.2.10;

4.7.2.10
date	2001.03.08.17.53.33;	author kbracey;	state Exp;
branches;
next	4.7.2.11;

4.7.2.11
date	2002.10.07.17.29.29;	author kbracey;	state Exp;
branches;
next	4.7.2.12;

4.7.2.12
date	2003.02.21.20.21.49;	author bavison;	state Exp;
branches;
next	4.7.2.13;

4.7.2.13
date	2004.11.12.16.42.54;	author bavison;	state Exp;
branches
	4.7.2.13.2.1;
next	4.7.2.14;

4.7.2.14
date	2009.06.07.17.12.34;	author bavison;	state Exp;
branches;
next	4.7.2.15;

4.7.2.15
date	2011.05.22.20.35.00;	author jlee;	state Exp;
branches;
next	4.7.2.16;
commitid	J2cKzTEPM0t0XIkv;

4.7.2.16
date	2011.06.04.15.48.08;	author jlee;	state Exp;
branches;
next	4.7.2.17;
commitid	a01pT1MYqLHGWmmv;

4.7.2.17
date	2011.07.31.13.48.06;	author jlee;	state Exp;
branches;
next	4.7.2.18;
commitid	o0Go7NdMMK4UrGtv;

4.7.2.18
date	2011.08.01.19.51.19;	author jlee;	state Exp;
branches;
next	4.7.2.19;
commitid	PZAuiPDvssVwqQtv;

4.7.2.19
date	2011.08.03.23.46.12;	author jlee;	state Exp;
branches;
next	4.7.2.20;
commitid	uz6Vep4mDx27F7uv;

4.7.2.20
date	2011.11.26.21.11.06;	author jlee;	state Exp;
branches;
next	4.7.2.21;
commitid	cI3W0zbtALQG6TIv;

4.7.2.21
date	2011.11.27.12.34.38;	author rsprowson;	state Exp;
branches;
next	4.7.2.22;
commitid	QtdLV6zjuPNxdYIv;

4.7.2.22
date	2012.02.25.16.19.26;	author jlee;	state Exp;
branches;
next	4.7.2.23;
commitid	ad3WnPntkzrizyUv;

4.7.2.23
date	2012.03.24.14.16.43;	author bavison;	state Exp;
branches;
next	4.7.2.24;
commitid	0gbd3sVMDrnpZ8Yv;

4.7.2.24
date	2012.10.08.13.33.21;	author srevill;	state Exp;
branches;
next	4.7.2.25;
commitid	jje13cvdo9fWnAnw;

4.7.2.25
date	2012.10.28.16.51.39;	author rsprowson;	state Exp;
branches;
next	4.7.2.26;
commitid	ruXZqdTJKJ85Qaqw;

4.7.2.26
date	2013.08.06.22.42.55;	author jlee;	state Exp;
branches;
next	4.7.2.27;
commitid	TOIaeUf2Q4rBIr0x;

4.7.2.27
date	2013.11.20.20.29.53;	author rsprowson;	state Exp;
branches;
next	4.7.2.28;
commitid	X1FKtc2EAz7Jz3ex;

4.7.2.28
date	2013.12.15.21.33.47;	author jlee;	state Exp;
branches;
next	4.7.2.29;
commitid	KwuK29hKRyXO7hhx;

4.7.2.29
date	2014.06.29.06.50.20;	author rsprowson;	state Exp;
branches;
next	4.7.2.30;
commitid	N9nM4oqvSy29WnGx;

4.7.2.30
date	2014.10.22.21.11.52;	author srevill;	state Exp;
branches;
next	4.7.2.31;
commitid	0Oiadu6l07Bw0fVx;

4.7.2.31
date	2015.01.11.23.10.38;	author jlee;	state Exp;
branches;
next	4.7.2.32;
commitid	a9HNIsO4R7LP3F5y;

4.7.2.32
date	2015.07.04.19.22.18;	author jlee;	state Exp;
branches;
next	4.7.2.33;
commitid	4vKk5RxNmDlJc0sy;

4.7.2.33
date	2015.08.14.22.02.19;	author jlee;	state Exp;
branches;
next	4.7.2.34;
commitid	6gyfvmM0cNZULhxy;

4.7.2.34
date	2015.08.19.23.20.44;	author jballance;	state Exp;
branches;
next	4.7.2.35;
commitid	6SC5S6GktrVQ2Wxy;

4.7.2.35
date	2015.08.20.06.44.37;	author jballance;	state Exp;
branches;
next	4.7.2.36;
commitid	yNKJCEiSzh09vYxy;

4.7.2.36
date	2015.10.28.21.24.00;	author rsprowson;	state Exp;
branches;
next	4.7.2.37;
commitid	CgZ4LdDdadyj9VGy;

4.7.2.37
date	2016.03.17.16.56.37;	author jballance;	state Exp;
branches;
next	;
commitid	Ve3cs3rvsjyA81Zy;

4.7.2.13.2.1
date	2009.06.15.23.56.09;	author bavison;	state Exp;
branches;
next	4.7.2.13.2.2;

4.7.2.13.2.2
date	2009.07.23.00.57.05;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.3;

4.7.2.13.2.3
date	2009.11.28.22.22.18;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.4;

4.7.2.13.2.4
date	2009.11.29.19.26.24;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.5;

4.7.2.13.2.5
date	2011.05.22.19.44.59;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.6;
commitid	FcIrTQvrz0zQFIkv;

4.7.2.13.2.6
date	2011.06.04.15.54.25;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.7;
commitid	xmzeXYEfZlUPYmmv;

4.7.2.13.2.7
date	2011.07.31.13.39.12;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.8;
commitid	tnhfpNorgEFQoGtv;

4.7.2.13.2.8
date	2011.07.31.18.50.44;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.9;
commitid	wkRt8xN38USJ7Itv;

4.7.2.13.2.9
date	2011.08.01.19.54.07;	author jlee;	state Exp;
branches;
next	4.7.2.13.2.10;
commitid	m0TvirYe9M1urQtv;

4.7.2.13.2.10
date	2011.08.03.23.51.57;	author jlee;	state Exp;
branches;
next	;
commitid	LLn4KPy3Hjh5H7uv;

4.3.2.1
date	97.09.09.13.31.50;	author mstphens;	state Exp;
branches;
next	4.3.2.2;

4.3.2.2
date	98.04.14.11.23.34;	author mstphens;	state Exp;
branches;
next	4.3.2.3;

4.3.2.3
date	98.05.19.15.51.52;	author sproven;	state Exp;
branches
	4.3.2.3.2.1;
next	;

4.3.2.3.2.1
date	99.08.18.09.15.37;	author sbrodie;	state Exp;
branches;
next	4.3.2.3.2.2;

4.3.2.3.2.2
date	99.08.18.13.35.53;	author sbrodie;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.40.41;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.57.54;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.08.23;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.02.04;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.11.19.16.36;	author nturton;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.04.21.15.38.16;	author scormie;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	97.04.28.18.40.55;	author scormie;	state Exp;
branches;
next	4.1.7.5;

4.1.7.5
date	97.06.25.14.20.33;	author scormie;	state Exp;
branches;
next	4.1.7.6;

4.1.7.6
date	98.07.21.17.57.28;	author nturton;	state Exp;
branches;
next	4.1.7.7;

4.1.7.7
date	98.09.11.16.00.14;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.14
log
@Merge SMP branch to trunk
Detail:
  Since the current SMP changes are fairly minor, and the trunk is seeing most development, from a maintenance perspective it makes sense to merge the changes to trunk. This will also make sure they get some wider testing ready for when the next round of SMP development takes place.
  Changes:
  - Docs/SMP - New docs folder describing SMP-related changes to the HAL and interrupt handling. Some of the IRQ changes can also be taken advantage of by single-core devices, since it introduces a way to describe which interrupt sources can be routed to IRQ & FIQ
  - Makefile, hdr/DBellDevice, hdr/HALDevice - New HAL device for an inter-processor software-generated interrupt source ("doorbell")
  - hdr/HALEntries - Reuse the unused matrix keyboard & touchscreen HAL entry points for the new IRQ handling & SMP-related HAL calls
  - hdr/KernelWS - Bump up MaxInterrupts
  - hdr/OSMem, s/MemInfo - Introduce OS_Memory 19, to allow for DMA to/from cacheable memory without actually altering the cacheability of the pages (which can be even more tricky in SMP systems than it is in uniprocessor systems)
  - hdr/Options - Introduce SMP build switch. Currently this controls whether the ARMops will operate in "SMP-friendly" mode or not (when running on MP processors)
  - s/ARMops, s/MemMap2 - Introduce the ARMv7MP ARMop implementation. Simplify DCache_LineLen / ICache_LineLen handling for WB_CR7_Lx so that it's the plain value rather than log2(n)-2
  - s/ExtraSWIs - If ARMops are in SMP-friendly mode, global OS_SynchroniseCodeAreas now only syncs application space and the RMA. This is because there is no trivial MP-safe global IMB operation available. This will also make global OS_SynchroniseCodeAreas significantly slower, but the documentation has always warned against performing a global IMB for just that reason, so code that suffers performance penalties should really try and switch to a ranged IMB.
  - s/NewIRQs - Update some comments regarding IRQ handler entry/exit conditions
Admin:
  Untested


Version 6.09. Tagged as 'Kernel-6_09'
@
text
@# Copyright 1996 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for Kernel
#

COMPONENT       = Kernel

ifeq (${MAKECMDGOALS},install)
EXP_HDR         = ${INSTDIR}.Hdr.Interface
C_EXP_HDR       = ${INSTDIR}.C.Global.h
else
C_EXP_HDR       = <cexport$dir>.Global.h
endif

TOKHELPSRC      = ${TOKENSOURCE}
HELPSRC         = HelpStrs
ROM_SOURCE      = GetAll.s
KERNEL_MODULE   = bin${SEP}${COMPONENT}
ASFLAGS        += -PD "FreezeDevRel SETL {${FREEZE_DEV_REL}}"
CUSTOMROM       = custom
CUSTOMEXP       = custom
CUSTOMSA        = custom
EXPORTS         = ${EXP_HDR}.DBellDevice \
                  ${EXP_HDR}.EnvNumbers \
                  ${EXP_HDR}.HALDevice \
                  ${EXP_HDR}.HALEntries \
                  ${EXP_HDR}.ModHand \
                  ${EXP_HDR}.OSEntries \
                  ${EXP_HDR}.OSMem \
                  ${EXP_HDR}.OSMisc \
                  ${EXP_HDR}.OSRSI6 \
                  ${EXP_HDR}.PL310 \
                  ${EXP_HDR}.PublicWS \
                  ${EXP_HDR}.RISCOS \
                  ${EXP_HDR}.Variables \
                  ${EXP_HDR}.VduExt \
                  ${EXP_HDR}.VIDCList \
                  ${EXP_HDR}.VideoDevice \
                  ${C_EXP_HDR}.HALDevice \
                  ${C_EXP_HDR}.HALEntries \
                  ${C_EXP_HDR}.ModHand \
                  ${C_EXP_HDR}.OSEntries \
                  ${C_EXP_HDR}.OSMem \
                  ${C_EXP_HDR}.OSMisc \
                  ${C_EXP_HDR}.OSRSI6 \
                  ${C_EXP_HDR}.RISCOS \
                  ${C_EXP_HDR}.Variables \
                  ${C_EXP_HDR}.VduExt \
                  ${C_EXP_HDR}.VIDCList

include StdTools
include AAsmModule

# Override this to "TRUE" in the components file if
# you want an odd-numbered (development) build to be
# a 'freezable' build - e.g. with no ROM debug output
FREEZE_DEV_REL ?= FALSE

#
# Custom ROM:
#
rom: ${KERNEL_MODULE}
        @@${ECHO} ${COMPONENT}: rom module built

install_rom: ${KERNEL_MODULE}
        ${CP} ${KERNEL_MODULE} ${INSTDIR}${SEP}${TARGET} ${CPFLAGS}
        ${CP} ${KERNEL_MODULE}_gpa ${INSTDIR}${SEP}${TARGET}_gpa ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: rom module installed

inst_dirs:
        ${MKDIR} ${EXP_HDR}
        ${MKDIR} ${C_EXP_HDR}

install: ${EXPORTS} inst_dirs
        @@${ECHO} ${COMPONENT}: header files installed

${KERNEL_MODULE}: ${ROM_OBJECT} ${DIRS}
        ${MKDIR} bin
        ${LD} -bin -o $@@ ${ROM_OBJECT}
        ${LD} -aif -bin -d -o ${KERNEL_MODULE}_aif ${ROM_OBJECT}
        ${TOGPA} -s ${KERNEL_MODULE}_aif ${KERNEL_MODULE}_gpa

#
# Custom exports:
#
export: ${EXPORTS}
        @@${ECHO} ${COMPONENT}: export complete

${EXP_HDR}.EnvNumbers: hdr.EnvNumbers
        ${CP} hdr.EnvNumbers $@@ ${CPFLAGS}

${EXP_HDR}.DBellDevice: hdr.DBellDevice
        ${CP} hdr.DBellDevice $@@ ${CPFLAGS}

${EXP_HDR}.HALDevice: hdr.HALDevice
        ${CP} hdr.HALDevice $@@ ${CPFLAGS}

${EXP_HDR}.HALEntries: hdr.HALEntries
        ${CP} hdr.HALEntries $@@ ${CPFLAGS}

${EXP_HDR}.ModHand: hdr.ModHand
        ${CP} hdr.ModHand $@@ ${CPFLAGS}

${EXP_HDR}.OSEntries: hdr.OSEntries
        ${CP} hdr.OSEntries $@@ ${CPFLAGS}

${EXP_HDR}.OSMem: hdr.OSMem
        ${CP} hdr.OSMem $@@ ${CPFLAGS}

${EXP_HDR}.OSMisc: hdr.OSMisc
        ${CP} hdr.OSMisc $@@ ${CPFLAGS}

${EXP_HDR}.OSRSI6: hdr.OSRSI6
        ${CP} hdr.OSRSI6 $@@ ${CPFLAGS}

${EXP_HDR}.PL310: hdr.PL310
        ${CP} hdr.PL310 $@@ ${CPFLAGS}

${EXP_HDR}.PublicWS: hdr.PublicWS
        ${CP} hdr.PublicWS $@@ ${CPFLAGS}

${EXP_HDR}.RISCOS: hdr.RISCOS
        ${CP} hdr.RISCOS $@@ ${CPFLAGS}

${EXP_HDR}.Variables: hdr.Variables
        ${CP} hdr.Variables $@@ ${CPFLAGS}

${EXP_HDR}.VduExt: hdr.VduExt
        ${CP} hdr.VduExt $@@ ${CPFLAGS}

${EXP_HDR}.VIDCList: hdr.VIDCList
        ${CP} hdr.VIDCList $@@ ${CPFLAGS}

${EXP_HDR}.VideoDevice: hdr.VideoDevice
        ${CP} hdr.VideoDevice $@@ ${CPFLAGS}

${C_EXP_HDR}.HALDevice: Global.h.HALDevice h.HALDevice
        ${FAPPEND} $@@ h.HALDevice Global.h.HALDevice

${C_EXP_HDR}.HALEntries: hdr.HALEntries
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.HALEntries $@@

${C_EXP_HDR}.ModHand: hdr.ModHand
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.ModHand $@@

${C_EXP_HDR}.OSEntries: Global.h.OSEntries h.OSEntries
        ${FAPPEND} $@@ h.OSEntries Global.h.OSEntries

${C_EXP_HDR}.OSMem: hdr.OSMem
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.OSMem $@@

${C_EXP_HDR}.OSMisc: hdr.OSMisc
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.OSMisc $@@

${C_EXP_HDR}.OSRSI6: hdr.OSRSI6
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.OSRSI6 $@@

${C_EXP_HDR}.RISCOS: hdr.RISCOS
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.RISCOS $@@

${C_EXP_HDR}.Variables: hdr.Variables
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.Variables $@@

${C_EXP_HDR}.VduExt: hdr.VduExt
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.VduExt $@@

${C_EXP_HDR}.VIDCList: Global.h.VIDCList h.VIDCList
        ${FAPPEND} $@@ h.VIDCList Global.h.VIDCList

Global.h.HALDevice: hdr.HALDevice
        ${MKDIR} Global.h
        ${HDR2H} hdr.HALDevice $@@

Global.h.OSEntries: hdr.OSEntries
        ${MKDIR} Global.h
        ${HDR2H} hdr.OSEntries $@@

Global.h.VIDCList: hdr.VIDCList
        ${MKDIR} Global.h
        ${HDR2H} hdr.VIDCList $@@

clean::
        ${XWIPE} Global ${WFLAGS}
        ${XWIPE} bin    ${WFLAGS}

# Dynamic dependencies:
@


4.13
log
@Pass on ownership of HAL EtherDevice
The kernel has no interest in Ethernet, and this prototype is tightly bound to 1 specific platform, so move it to EtherTH's exports instead.
Makefile tidied.
@
text
@d35 2
a36 1
EXPORTS         = ${EXP_HDR}.EnvNumbers \
d104 3
@


4.12
log
@Add support for shareable pages and additional access privileges
Detail:
  This set of changes:
  * Refactors page table entry encoding/decoding so that it's (mostly) performed via functions in the MMU files (s.ARM600, s.VMSAv6) rather than on an ad-hoc basis as was the case previously
  * Page table entry encoding/decoding performed during ROM init is also handled via the MMU functions, which resolves some cases where the wrong cache policy was in use on ARMv6+
  * Adds basic support for shareable pages - on non-uniprocessor systems all pages will be marked as shareable (however, we are currently lacking ARMops which broadcast cache maintenance operations to other cores, so safe sharing of cacheable regions isn't possible yet)
  * Adds support for the VMSA XN flag and the "privileged ROM" access permission. These are exposed via RISC OS access privileges 4 and above, taking advantage of the fact that 4 bits have always been reserved for AP values but only 4 values were defined
  * Adds OS_Memory 17 and 18 to convert RWX-style access flags to and from RISC OS access privelege numbers; this allows us to make arbitrary changes to the mappings of AP values 4+ between different OS/hardware versions, and allows software to more easily cope with cases where the most precise AP isn't available (e.g. no XN on <=ARMv5)
  * Extends OS_Memory 24 (CheckMemoryAccess) to return executability information
  * Adds exported OSMem header containing definitions for OS_Memory and OS_DynamicArea
  File changes:
  - Makefile - export C and assembler versions of hdr/OSMem
  - Resources/UK/Messages - Add more text for OS_Memory errors
  - hdr/KernelWS - Correct comment regarding DCacheCleanAddress. Allocate workspace for MMU_PPLTrans and MMU_PPLAccess.
  - hdr/OSMem - New file containing exported OS_Memory and OS_DynamicArea constants, and public page flags
  - hdr/Options - Reduce scope of ARM6support to only cover builds which require ARMv3 support
  - s/AMBControl/Workspace - Clarify AMBNode_PPL usage
  - s/AMBControl/growp, mapslot, mapsome, memmap - Use AreaFlags_ instead of AP_
  - s/AMBControl/main, memmap - Use GetPTE instead of generating page table entry manually
  - s/ARM600 - Remove old coments relating to lack of stack. Update BangCam to use GetPTE. Update PPL tables, removing PPLTransL1 (L1 entries are now derived from L2 table on demand) and adding a separate table for ARM6. Implement the ARM600 versions of the Get*PTE ('get page table entry') and Decode*Entry functions
  - s/ARMops - Add Init_PCBTrans function to allow relevant MMU_PPLTrans/MMU_PCBTrans pointers to be set up during the pre-MMU stage of ROM init. Update ARM_Analyse to set up the pointers that are used post MMU init.
  - s/ChangeDyn - Move a bunch of flags to hdr/OSMem. Rename the AP_ dynamic area flags to AreaFlags_ to avoid name clashes and confusion with the page table AP_ values exported by Hdr:MEMM.ARM600/Hdr:MEMM.VMSAv6. Also generate the relevant flags for OS_Memory 24 so that it can refer to the fixed areas by their name instead of hardcoding the permissions.
  - s/GetAll - GET Hdr:OSMem
  - s/HAL - Change initial page table setup to use DA/page flags and GetPTE instead of building page table entries manually. Simplify AllocateL2PT by removing the requirement for the user to supply the access perimssions that will be used for the area; instead for ARM6 we just assume that cacheable memory is the norm and set L1_U for any L1 entry we create here.
  - s/Kernel - Add GetPTE macro (for easier integration of Get*PTE functions) and GenPPLAccess macro (for easy generation of OS_Memory 24 flags)
  - s/MemInfo - Fixup OS_Memory 0 to not fail on seeing non-executable pages. Implement OS_Memory 17 & 18. Tidy up some error generation. Make OS_Memory 13 use GetPTE. Extend OS_Memory 24 to return (non-) executability information, to use the named CMA_ constants generated by s/ChangeDyn, and to use the Decode*Entry functions when it's necessary to decode page table entries.
  - s/NewReset - Use AreaFlags_ instead of AP_
  - s/VMSAv6 - Remove old comments relating to lack of stack. Update BangCam to use GetPTE. Update PPL tables, removing PPLTransL1 (L1 entries are now derived from L2 table on demand) and adding a separate table for shareable pages. Implement the VMSAv6 versions of the Get*PTE and Decode*Entry functions.
Admin:
  Tested on Raspberry Pi 1, Raspberry Pi 3, Iyonix, RPCEmu (ARM6 & ARM7), comparing before and after CAM and page table dumps to check for any unexpected differences


Version 5.55. Tagged as 'Kernel-5_55'
@
text
@d34 1
a35 1
                  ${EXP_HDR}.EtherDevice \
a61 2
CUSTOMSA=custom

a102 6
${EXP_HDR}.SPIDevice: hdr.SPIDevice
        ${CP} hdr.SPIDevice $@@ ${CPFLAGS}

${EXP_HDR}.EtherDevice: hdr.EtherDevice
        ${CP} hdr.EtherDevice $@@ ${CPFLAGS}

@


4.12.2.1
log
@Initial SMP changes
Detail:
  This commit lays some of the groundwork for SMP support within the HAL, kernel, and OS.
  Makefile, hdr/HALDevice, hdr/DBellDevice - Add definitions for a doorbell HAL device, to allow CPU cores to signal each other via interrupts
  hdr/HALEntries - Repurpose HAL_Matrix and HAL_Touchscreen entry points for new SMP-related entry points. Add a couple of IRQ-related definitions.
  hdr/KernelWS - Boost MaxInterrupts to 256
  hdr/Options - Add new SMP build switch to control whether the kernel is built in SMP-friendly mode or not. SMP-friendly kernels should still run on single-core machines, but may behave slightly differently.
  s/ARMops - Make as many ARMops SMP-safe as possible, relying on hardware support for broadcasting of cache/TLB maintenance operations
  s/ExtraSWIs - Make SMP-friendly full OS_SynchroniseCodeAreas only sync application space and the RMA (full-cache IMB not really possible with SMP)
  s/NewIRQs - Update IRQ despatcher comments to (hopefully) reflect reality
  Docs/SMP/HAL, Docs/SMP/IRQ - Add documentation covering the new HAL calls and IRQ behaviour
Admin:
  Tested on Raspberry Pi 2, 3, OMAP4, iMX6


Version 5.86, 4.129.2.2. Tagged as 'Kernel-5_86-4_129_2_2'
@
text
@d34 1
a34 2
EXPORTS         = ${EXP_HDR}.DBellDevice \
                  ${EXP_HDR}.EnvNumbers \
a107 3
${EXP_HDR}.DBellDevice: hdr.DBellDevice
        ${CP} hdr.DBellDevice $@@ ${CPFLAGS}

@


4.12.2.2
log
@Merge in latest changes from main branch

Version 6.05, 4.129.2.8. Tagged as 'Kernel-6_05-4_129_2_8'
@
text
@a33 1
CUSTOMSA        = custom
d36 1
d63 2
d106 3
d112 3
@


4.11
log
@Resolve 2x header clashes
hdr/AHCIDevice:
  Remove this, since it clashes with the (differing API version number) copy exported by SATADriver. Post merging the Kernel back to the trunk the newer file datestamp has meant the wrong one gets exported during any ROM build which includes both components. Since the Kernel doesn't need AHCIDevice itself, it is left to the respective client (SATADriver or AHCIDriver in this case) to export them.
hdr/ModHand:
  Resolve the longstanding clash of Module_Title with the same named symbol that CMHG uses. There are very few assembler needing to look at the module header (Kernel, FileCore, Debugger, Podule) directly, but every C module which uses CMHG and wants one of the ModHandReason values ends up with a duplicate define.
  Obsolete Arthur era Module_LoadAddr value.
ArthurSWIs.s/MoreComms.s/NewReset.s/SWINaming.s/SysComms.s/Utility.s:
  Module_Title->Module_TitleStr.
ModHand.s:
  Module_Title->Module_TitleStr.
  Recode Module_LoadAddr using the file type from Hdr:FileTypes.
GetAlls.s:
  Drop unused NVRAM and PortMan headers. Add Hdr:FileTypes.

Version 5.54. Tagged as 'Kernel-5_54'
@
text
@d40 1
d54 1
d123 3
d167 4
@


4.10
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@a34 1
                  ${EXP_HDR}.AHCIDevice \
a105 3
${EXP_HDR}.AHCIDevice: hdr.AHCIDevice
        ${CP} hdr.AHCIDevice $@@ ${CPFLAGS}

@


4.9
log
@  New exports, and a bugfix to error handling.
Detail:
  * Hdr2H can cope with hdr.EnvNumbers, hdr.ModHand and hdr.Variables, so C
    versions of these headers are now exported (in addition to RISCOS.h,
    which has been exported for some time).
  * The default owner of ErrorV is responsible for filling in the error
    handler's buffer, but was failing to compensate for the PC word at the
    start of the buffer when truncating the error message, leading to
    possible overruns of the buffer.
Admin:
  Too trivial to test.

Version 5.45. Tagged as 'Kernel-5_45'
@
text
@a16 7
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 25-May-94  AMcC         Created.
#
d18 76
a93 5
#
# Paths
#
EXP_HDR = <export$dir>
C_EXP_HDR = <cexport$dir>.Global.h
d96 1
a96 1
# Generic options:
d98 2
a99 7
MKDIR   = mkdir -p
AS      = aasm
CP      = copy
RM      = remove
CCFLAGS = -c -depend !Depend -IC:
ASFLAGS = -depend !Depend -Stamp -quit -To $@@ -From
CPFLAGS = ~cfr~v
d101 2
a102 2
TOKENISE = tokenise
TOKENS   = Hdr:Tokens
d104 2
a105 16
#
# Program specific options:
#
COMPONENT = Kernel
SOURCE    = s.GetAll
TARGET    = rm.${MACHINE}.Kernel
EXPORTS   = ${EXP_HDR}.EnvNumbers \
            ${EXP_HDR}.ModHand \
            ${EXP_HDR}.PublicWS \
            ${EXP_HDR}.RISCOS \
            ${EXP_HDR}.Variables \
            ${EXP_HDR}.VduExt \
            ${C_EXP_HDR}.EnvNumbers \
            ${C_EXP_HDR}.ModHand \
            ${C_EXP_HDR}.RISCOS \
            ${C_EXP_HDR}.Variables
d107 2
a108 5
#
# Generic rules:
#
rom: ${TARGET}
        @@echo ${COMPONENT}: rom module built
d110 2
a111 3
install_rom: ${TARGET}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom module installed
d113 2
a114 4
clean:
        ${RM} ${TARGET}
        ${RM} s.TMOSHelp
        @@echo ${COMPONENT}: cleaned
d116 2
a117 2
export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete
d119 2
a120 2
resources: resources-${CMDHELP}
        @@echo ${COMPONENT}: resource files copied
d122 2
a123 25
resources_common:
        ${MKDIR} ${RESDIR}.${COMPONENT}
        Set Kernel$Messages LocalRes:Messages
        IfThere LocalRes:<UserIF>.Messages Then Set Kernel$Messages LocalRes:<UserIF>.Messages
        TokenCheck LocalRes:<UserIF>.Messages
        ${CP} <Kernel$Messages>  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
        UnSet Kernel$Messages

resources-None: resources_common
	@@

resources-: resources_common
        TokenCheck LocalRes:Messages
        print LocalRes:CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }

BBETYPE = kernel
bbe-kernel: bbe-generic-resources-get-alias
        BBE_Export_Dir Resources.${LOCALE}.${USERIF}
        BBE_Export_File Resources.${LOCALE}.Messages
        BBE_Export_File Resources.${LOCALE}.CmdHelp

${TARGET}: ${SOURCE} s.TMOSHelp
        ${MKDIR} rm.${MACHINE}
        ${AS} ${ASFLAGS} ${SOURCE}
        stamp $@@
d125 2
a126 2
s.TMOSHelp: ${TOKENS} HelpStrs
        ${TOKENISE} ${TOKENS} HelpStrs $@@
d128 2
a129 5
#
# Exported interface headers
#
${EXP_HDR}.EnvNumbers: hdr.EnvNumbers
        ${CP} hdr.EnvNumbers $@@ ${CPFLAGS}
d131 2
a132 2
${EXP_HDR}.ModHand: hdr.ModHand
        ${CP} hdr.ModHand $@@ ${CPFLAGS}
d140 3
d146 12
a157 6
${EXP_HDR}.Variables: hdr.Variables
        ${CP} hdr.Variables $@@ ${CPFLAGS}
        
${C_EXP_HDR}.EnvNumbers: hdr.EnvNumbers
	${MKDIR} ${C_EXP_HDR}
	perl Build:Hdr2H hdr.EnvNumbers $@@
d160 13
a172 2
	${MKDIR} ${C_EXP_HDR}
	perl Build:Hdr2H hdr.ModHand $@@
d175 2
a176 2
	${MKDIR} ${C_EXP_HDR}
	perl Build:Hdr2H hdr.RISCOS $@@
d179 25
a203 2
	${MKDIR} ${C_EXP_HDR}
	perl Build:Hdr2H hdr.Variables $@@
@


4.8
log
@  BBE changes.
Detail:
  Also a fix to the DRAM allocation in s/ARM600 to fix address masking.
Admin:
  Required by BBE.

Version 5.39. Tagged as 'Kernel-5_39'
@
text
@d57 4
a60 1
            ${C_EXP_HDR}.RISCOS
d133 8
d144 4
@


4.7
log
@  Exports a C version of Hdr:RISCOS
Detail:
  Hdr:RISCOS contains some of the most useful constant declarations,
    including the vector numbers and event numbers.  The new improved
    Hdr2H script is now capable of converting this header file into C
    too.  It exports it as <CExport$Dir>.Global.h.RISCOS.  It cannot
    interfere in existing code as it requires explicit inclusion as
    #include "Global/RISCOS.h".
  No actual kernel code changes.
Admin:
  File examined manually and checked for correctness against Hdr:RISCOS.
  Requires library 0.28 or later (RiscOS/Library  Tag: Library-0_28)

Version 4.82. Tagged as 'Kernel-4_82'
@
text
@d95 6
@


4.7.2.1
log
@* Converted to building with ObjAsm (but still a single object file using ORG).
* Added ARM_IMB and ARM_IMBRange SWIs as recommended by ARMv5.
* Some early prototype HAL bits popped in - a lot of source restructuring still
  to come.
* New debug target creates an AIF image with debug information, and translates
  this into an ASCII object file for the 16702B logic analyser.

Version 5.35, 4.79.2.1. Tagged as 'Kernel-5_35-4_79_2_1'
@
text
@a35 2
ARMASM  = objasm
LD      = link
a37 1
WIPE    = -wipe
d39 1
a39 2
ASFLAGS = -depend !Depend ${THROWBACK} -Stamp -quit -To $@@ -From
ARMASMFLAGS = -depend !Depend -g ${THROWBACK}
a40 1
WFLAGS  = ~cfr~v
d50 1
a50 4
TARGET    = rm.Kernel
AIFDBG    = aif.Kernel
GPADBG    = GPA
OBJECTS   = o.GetAll
a61 3
.SUFFIXES: .o .s
.s.o:; ${ARMASM} ${ARMASMFLAGS} -o $@@ $<

a64 3
debug: ${GPADBG}
        @@echo ${COMPONENT}: debug image built

d70 1
a71 4
        ${WIPE} o.* ${WFLAGS}
        ${RM} ${TARGET}
        ${WIPE} aif ${WFLAGS}
        ${RM} ${GPADBG}
d95 4
a98 9
${TARGET}: ${OBJECTS}
        ${LD} -bin -o ${TARGET} ${OBJECTS}

${AIFDBG}: ${OBJECTS}
        ${MKDIR} aif
        ${LD} -aif -bin -d -o ${AIFDBG} ${OBJECTS}

${GPADBG}: ${AIFDBG}
        ToGPA ${AIFDBG} ${GPADBG}
a102 2
o.GetAll: s.TMOSHelp

d125 2
a126 2
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.RISCOS $@@
@


4.7.2.2
log
@More HAL work. IOMD HAL work in progress. Lots of my own little build
scripts. Don't touch this.

Version 5.35, 4.79.2.2. Tagged as 'Kernel-5_35-4_79_2_2'
@
text
@a64 2
            ${EXP_HDR}.HALEntries \
            ${EXP_HDR}.OSEntries \
d120 1
a120 1
        ToGPA -s ${AIFDBG} ${GPADBG}
a146 6
        
${EXP_HDR}.HALEntries: hdr.HALEntries
        ${CP} hdr.HALEntries $@@ ${CPFLAGS}
        
${EXP_HDR}.OSEntries: hdr.OSEntries
        ${CP} hdr.OSEntries $@@ ${CPFLAGS}
@


4.7.2.3
log
@Wahey! This version gives you a display.

It says "Abort on data transfer".
@
text
@a160 1
o.GetAll: s.GetAll Hdr:ListOpts Hdr:Macros Hdr:System Hdr:SWIs Hdr:CPU.Generic26 Hdr:Machine.<Machine> Hdr:Machine.Machine Hdr:CPU.Generic32 Hdr:IO.GenericIO Hdr:RISCOS Hdr:Machine.<Machine> Hdr:Machine.Machine Hdr:ImageSize.<ImageSize> Hdr:CPU.ARM600 Hdr:IO.IOMD Hdr:IO.IOMD Hdr:MEMM.ARM600 Hdr:VIDC.VIDC20 Version VersionASM Hdr:CMOS Hdr:Heap Hdr:PublicWS Hdr:KernelWS Hdr:HALEntries Hdr:OSEntries Hdr:Services Hdr:FSNumbers Hdr:HighFSI Hdr:NewErrors Hdr:Proc Hdr:Sprite Hdr:KeyWS Hdr:RS423 Hdr:ModHand Hdr:Variables Hdr:EnvNumbers Hdr:UpCall Hdr:Sound Hdr:Pointer Hdr:Podule Hdr:VduExt Hdr:Buffer Hdr:Font Hdr:DevNos Hdr:Territory Hdr:Portable Hdr:MsgTrans Hdr:PaletteV Hdr:Wimp Hdr:ColourTran Hdr:Debug Hdr:nvram Hdr:PortMan s.PMF.DEF s.Copro15ops s.Kernel s.NewIRQs s.Oscli s.SysComms s.MosDict s.TMOSHelp s.HeapMan s.ModHand s.Unsqueeze s.ArthurSWIs s.ChangeDyn s.HAL s.Arthur2 s.LibKern s.Utility s.MoreComms s.Convrsions s.MoreSWIs s.ExtraSWIs s.HeapSort s.Arthur3 s.SWINaming s.TickEvents s.KbdResPC s.NewReset s.MsgCode s.Middle s.Super1 s.ARM600 s.MemInfo s.vdu.vduhint s.vdu.VduDriver s.vdu.VduDecl s.vdu.VduGrafDec s.vdu.VduModes s.vdu.VduSWIs s.vdu.VduPalette s.vdu.vdupalxx s.vdu.VduPlot s.vdu.VduGrafA s.vdu.VduGrafB s.vdu.VduGrafC s.vdu.VduGrafD s.vdu.VduGrafE s.vdu.VduGrafF s.vdu.VduGrafG s.vdu.VduGrafH s.vdu.VduGrafI s.vdu.VduGrafJ s.vdu.VduGrafK s.vdu.VduGrafL s.vdu.VduWrch s.vdu.Vdu23 s.vdu.VduPointer s.vdu.Vdu5 s.vdu.VduCurSoft s.vdu.VduTTX s.vdu.VduFontL1 s.PMF.osinit s.PMF.oseven s.PMF.osbyte s.PMF.osword s.PMF.realtime s.PMF.convdate s.PMF.i2cutils s.PMF.oswrch s.PMF.buffer s.PMF.key s.PMF.mouse s.AMBControl.AMB s.AMBControl.Options s.AMBControl.Workspace s.AMBControl.main s.AMBControl.allocate s.AMBControl.deallocate s.AMBControl.growshrink s.AMBControl.mapslot s.AMBControl.mapsome s.AMBControl.readinfo s.AMBControl.growp s.AMBControl.shrinkp s.AMBControl.service s.AMBControl.Memory s.AMBControl.memmap
@


4.7.2.4
log
@More L7200 HAL work
@
text
@d67 1
a67 2
            ${C_EXP_HDR}.RISCOS \
            ${C_EXP_HDR}.HALEntries
d73 1
a73 1
.s.o:; ${ARMASM} ${ARMASMFLAGS} -o $@@ $< -list list.$*
a158 4

${C_EXP_HDR}.HALEntries: hdr.HALEntries
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.HALEntries $@@
@


4.7.2.5
log
@add some HAL_Video calls, attempt to deal with lack of h/w scroll

Version 5.35, 4.79.2.9. Tagged as 'Kernel-5_35-4_79_2_9'
@
text
@d166 1
@


4.7.2.6
log
@More stuff. Up to the desktop now; cache on, working keyboard. Some source
restructuring to start to make splitting it up into several object files more
feasible.
@
text
@d58 1
a58 1
OBJECTS   = o.GetAll #o.ARMops o.End
d74 1
a74 1
.s.o:; ${ARMASM} ${ARMASMFLAGS} -o $@@ $< #-list list.$*
a91 1
        ${WIPE} list.* ${WFLAGS}
@


4.7.2.7
log
@Stuff. A bit of touchscreen, I expect, and probably some other bits too.
@
text
@a166 1
o.GetAll: s.GetAll Hdr:ListOpts Hdr:Macros Hdr:System Hdr:SWIs Hdr:CPU.Generic26 Hdr:Machine.<Machine> Hdr:Machine.Machine Hdr:CPU.Generic32 Hdr:IO.GenericIO Hdr:RISCOS Hdr:Machine.<Machine> Hdr:Machine.Machine Hdr:ImageSize.<ImageSize> Hdr:CPU.ARM600 Hdr:IO.IOMD Hdr:IO.IOMD Hdr:MEMM.ARM600 Hdr:VIDC.VIDC20 hdr.Options Version VersionASM Hdr:CMOS Hdr:Heap Hdr:PublicWS Hdr:KernelWS Hdr:HALEntries Hdr:OSEntries Hdr:Services Hdr:FSNumbers Hdr:HighFSI Hdr:NewErrors Hdr:Proc Hdr:Sprite Hdr:KeyWS Hdr:RS423 Hdr:ModHand Hdr:Variables Hdr:EnvNumbers Hdr:UpCall Hdr:Sound Hdr:Pointer Hdr:Podule Hdr:VduExt Hdr:Buffer Hdr:Font Hdr:DevNos Hdr:Territory Hdr:Portable Hdr:MsgTrans Hdr:PaletteV Hdr:Wimp Hdr:ColourTran Hdr:Debug Hdr:nvram Hdr:PortMan s.PMF.DEF hdr.Copro15ops hdr.ARMops s.Kernel s.ARMops s.NewIRQs s.Oscli s.SysComms s.MosDict s.TMOSHelp s.HeapMan s.ModHand s.Unsqueeze s.ArthurSWIs s.ChangeDyn s.HAL s.Arthur2 s.LibKern s.Utility s.MoreComms s.Convrsions s.MoreSWIs s.ExtraSWIs s.HeapSort s.Arthur3 s.SWINaming s.TickEvents s.KbdResPC s.NewReset s.MsgCode s.Middle s.Super1 s.ARM600 s.MemInfo s.vdu.vduhint s.vdu.VduDriver s.vdu.VduDecl s.vdu.VduGrafDec s.vdu.VduModes s.vdu.VduSWIs s.vdu.VduPalette s.vdu.vdupalxx s.vdu.VduPlot s.vdu.VduGrafA s.vdu.VduGrafB s.vdu.VduGrafC s.vdu.VduGrafD s.vdu.VduGrafE s.vdu.VduGrafF s.vdu.VduGrafG s.vdu.VduGrafH s.vdu.VduGrafI s.vdu.VduGrafJ s.vdu.VduGrafK s.vdu.VduGrafL s.vdu.VduWrch s.vdu.Vdu23 s.vdu.VduPointer s.vdu.Vdu5 s.vdu.VduCurSoft s.vdu.VduTTX s.vdu.VduFontL1 s.PMF.osinit s.PMF.oseven s.PMF.osbyte s.PMF.osword s.PMF.realtime s.PMF.convdate s.PMF.i2cutils s.PMF.oswrch s.PMF.buffer s.PMF.key s.PMF.mouse s.AMBControl.AMB s.AMBControl.Options s.AMBControl.Workspace s.AMBControl.main s.AMBControl.allocate s.AMBControl.deallocate s.AMBControl.growshrink s.AMBControl.mapslot s.AMBControl.mapsome s.AMBControl.readinfo s.AMBControl.growp s.AMBControl.shrinkp s.AMBControl.service s.AMBControl.Memory s.AMBControl.memmap
@


4.7.2.8
log
@more use of ARMops in page manipulation, change register usage of ARmops
tested by kernel boot to star prompt only

Version 5.35, 4.79.2.11. Tagged as 'Kernel-5_35-4_79_2_11'
@
text
@d167 1
@


4.7.2.9
log
@Customer L-y HAL-y IIC-y type stuff. It's great.
@
text
@a166 1
o.GetAll: s.GetAll Hdr:ListOpts Hdr:Macros Hdr:System Hdr:SWIs Hdr:CPU.Generic26 Hdr:Machine.<Machine> Hdr:Machine.Machine Hdr:CPU.Generic32 Hdr:IO.GenericIO Hdr:RISCOS Hdr:Machine.<Machine> Hdr:Machine.Machine Hdr:ImageSize.<ImageSize> Hdr:CPU.ARM600 Hdr:IO.IOMD Hdr:IO.IOMD Hdr:MEMM.ARM600 Hdr:VIDC.VIDC20 hdr.Options Version VersionASM Hdr:CMOS Hdr:Heap Hdr:PublicWS Hdr:KernelWS Hdr:HALEntries Hdr:OSEntries Hdr:Services Hdr:FSNumbers Hdr:HighFSI Hdr:NewErrors Hdr:Proc Hdr:Sprite Hdr:KeyWS Hdr:RS423 Hdr:ModHand Hdr:Variables Hdr:EnvNumbers Hdr:UpCall Hdr:Sound Hdr:Pointer Hdr:Podule Hdr:VduExt Hdr:Buffer Hdr:Font Hdr:DevNos Hdr:Territory Hdr:Portable Hdr:MsgTrans Hdr:PaletteV Hdr:Wimp Hdr:ColourTran Hdr:Debug Hdr:nvram Hdr:PortMan s.PMF.DEF hdr.Copro15ops hdr.ARMops s.Kernel s.ARMops s.NewIRQs s.Oscli s.SysComms s.MosDict s.TMOSHelp s.HeapMan s.ModHand s.Unsqueeze s.ArthurSWIs s.ChangeDyn s.HAL s.Arthur2 s.LibKern s.Utility s.MoreComms s.Convrsions s.MoreSWIs s.ExtraSWIs s.HeapSort s.Arthur3 s.SWINaming s.TickEvents s.KbdResPC s.NewReset s.MsgCode s.Middle s.Super1 s.ARM600 s.MemInfo s.vdu.vduhint s.vdu.VduDriver s.vdu.VduDecl s.vdu.VduGrafDec s.vdu.VduModes s.vdu.VduSWIs s.vdu.VduPalette s.vdu.vdupalxx s.vdu.VduPlot s.vdu.VduGrafA s.vdu.VduGrafB s.vdu.VduGrafC s.vdu.VduGrafD s.vdu.VduGrafE s.vdu.VduGrafF s.vdu.VduGrafG s.vdu.VduGrafH s.vdu.VduGrafI s.vdu.VduGrafJ s.vdu.VduGrafK s.vdu.VduGrafL s.vdu.VduWrch s.vdu.Vdu23 s.vdu.VduPointer s.vdu.Vdu5 s.vdu.VduCurSoft s.vdu.VduTTX s.vdu.VduFontL1 s.PMF.osinit s.PMF.oseven s.PMF.osbyte s.PMF.osword s.PMF.realtime s.PMF.convdate s.PMF.i2cutils s.PMF.IIC s.PMF.oswrch s.PMF.buffer s.PMF.key s.PMF.mouse s.AMBControl.AMB s.AMBControl.Options s.AMBControl.Workspace s.AMBControl.main s.AMBControl.allocate s.AMBControl.deallocate s.AMBControl.growshrink s.AMBControl.mapslot s.AMBControl.mapsome s.AMBControl.readinfo s.AMBControl.growp s.AMBControl.shrinkp s.AMBControl.service s.AMBControl.Memory s.AMBControl.memmap
@


4.7.2.10
log
@Added some missing IIC and USB files.
An attempt to do NVMemory by using part of the Flash that the OS is sitting
in for Customer L. Programming algorithm works, but I'm not confident that the
Kernel does the right thing yet.

Version 5.35, 4.79.2.19. Tagged as 'Kernel-5_35-4_79_2_19'
@
text
@d167 1
@


4.7.2.11
log
@Lots of Tungsten work.

Version 5.35, 4.79.2.48. Tagged as 'Kernel-5_35-4_79_2_48'
@
text
@d43 1
a43 1
ARMASMFLAGS = -depend !Depend -g ${THROWBACK} -cpu 5TE
a65 1
            ${EXP_HDR}.HALDevice \
d77 1
a77 1
     @@echo ${COMPONENT}: rom module built
a87 1
        ${RM} s.Time+Date
d129 1
a129 6
s.Time+Date:
        @@echo |IGBLS Builddate|JBuilddate SETS "<Sys$Date> <Sys$Year>.<Sys$Time>" |J|IEND { > s.Time+Date }
        settype s.Time+Date FFF
        
o.GetAll: s.TMOSHelp \
          s.Time+Date
a153 3
        
${EXP_HDR}.HALDevice: hdr.HALDevice
        ${CP} hdr.HALDevice $@@ ${CPFLAGS}
@


4.7.2.12
log
@  Miscellaneous stuff.
Detail:
  * Merged in the change to RISC OS 4.02 kernel that moved the GSTrans
    workspace out of scratch space.
  * Fixed a few bugs in callback postponement, and interrupt holes in
    callback dispatch. See Docs.CallbackChange for full info.
  * Fixed SystemSizeCMOS to SysHeapCMOS - wouldn't build as was.
  * Added an export of a C version of Hdr:HALDevice, based on the Hdr2H
    translation but with an additional struct definition. Required by
    SoundControl 1.00.
  * Added some additional location and ID allocations to Hdr:HALDevice.
    Required by today's HAL and SoundControl.
Admin:
  Partially tested.

Version 5.35, 4.79.2.56. Tagged as 'Kernel-5_35-4_79_2_56'
@
text
@d69 1
a69 2
            ${C_EXP_HDR}.HALEntries \
            ${C_EXP_HDR}.HALDevice
a174 10

${C_EXP_HDR}.HALDevice: o.Global.h.HALDevice h.HALDevice
        ${CP} h.HALDevice $@@ ${CPFLAGS}
        print o.Global.h.HALDevice { >> $@@ }

o.Global.h.HALDevice: hdr.HALDevice
        ${MKDIR} o.Global.h
        dir o
        perl Build:Hdr2H ^.hdr.HALDevice Global.h.HALDevice
        back
@


4.7.2.13
log
@  BBE tidying.
Detail:
  Tightened up BBE resources export, to exclude in appropriate files (this
  component has a non-standard resources directory structure).
Admin:
  Tested in a Tungsten BBE build.

Retagged, since this won't affect any existing builds.
@
text
@a186 7
BBETYPE = kernel
bbe-kernel: bbe-generic-resources-get-alias
        BBE_Export_File_In_Dir Resources.${LOCALE} CmdHelp
        BBE_Export_File_In_Dir Resources.${LOCALE} Messages
        BBE_Export_Dir Resources.${LOCALE}.${USERIF}
        BBE_Export_File VersionNum

@


4.7.2.13.2.1
log
@  Fix bugs and inefficiencies revealed by unaligned data audit
Detail:
  s.PMF.i2cutils line 454: this LDR of byte values was harmless (bits 8
    upwards are discarded later) but slower than an LDRB on ARMv6 or later.
  s.PMF.i2cutils line 556: should have loaded RTCFitted using LDRB. Looks
    like effect would have been to reduce utilisation of CMOS cache.
  s.vdu.vduswis line 1500: mistakenly accessing ExternalFramestore using LDR.
    I don't think the intention was to prevent the screen DA being resized
    while screen memory was claimed, but that was the effect.
  s.vdu.vduwrch line 3106: this LDR of a 1-byte variable was harmless (only
    used for testing bit 4) but slower than an LDRB on ARMv6 or later.
  CPU version is no longer specified in the makefile - it's better to inherit
  it from the build environment now that we actually set it appropriately.
Admin:
  Built and briefly tested.

Version 5.35, 4.79.2.98.2.9. Tagged as 'Kernel-5_35-4_79_2_98_2_9'
@
text
@d43 1
a43 1
ARMASMFLAGS = -depend !Depend -g ${THROWBACK}
@


4.7.2.13.2.2
log
@Add HAL RTC support to Cortex branch of kernel, clean up RTCSupport code
Detail:
  HAL kernels (on the Cortex branch at least) now support HALDevice-based RTCs. If the kernels own RTC code is disabled or fails to detect an RTC, then after HAL_InitDevices is called the HALDevice list will be scanned for any HAL-resident RTC devices.
  Additionally, the RTCSupport flag (in Hdr:Machine.Machine), which was previously TRUE for all HAL kernels, can now be set to FALSE in HAL kernels to disable the kernels own IIC RTC code. This allows the unwanted legacy RTC code to be disabled for machines which are known to use HAL RTCs instead.
  hdr/RTCDevice - new header describing data structures used for HAL RTC device
  hdr/HALDevice - added RTCDevice device type, IIC serial bus type
  hdr/KernelWS - upgraded RTCFitted from a 1 byte field to 4 byte. It now stores either a null value (for no RTC), a value <2048 for an IIC RTC address, or a value >= 2048 for a RTCDevice ptr
  Makefile - added header export of hdr/RTCDevice
  s/GetAll - include hdr/RTCDevice
  s/NewReset - initialise HAL RTC after HAL_InitDevices if required
  s/PMF/i2cutils, s/PMF/osinit, s/PMF/osword - modifications to allow use of HAL RTC (and disallow use of builtin IIC RTC)
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.11. Tagged as 'Kernel-5_35-4_79_2_98_2_11'
@
text
@a66 1
            ${EXP_HDR}.RTCDevice \
a165 3
${EXP_HDR}.RTCDevice: hdr.RTCDevice
        ${CP} hdr.RTCDevice $@@ ${CPFLAGS}
        
@


4.7.2.13.2.3
log
@Add header for video HAL devices, device IDs for OMAP3 DMA & video controllers to Cortex kernel
Detail:
  hdr/VideoDevice, Makefile - Add initial version of header for video HAL devices
  hdr/HALDevice - Add device IDs for OMAP3 DMA & video devices.
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.16. Tagged as 'Kernel-5_35-4_79_2_98_2_16'
@
text
@a67 1
            ${EXP_HDR}.VideoDevice \
@


4.7.2.13.2.4
log
@Fix cortex kernel makefile
Detail:
  Makefile rule was missing for VideoDevice header export, preventing it from being exported
Admin:
  Tested on rev C2 beagleboard. (No, really, I mean it this time!)


Version 5.35, 4.79.2.98.2.17. Tagged as 'Kernel-5_35-4_79_2_98_2_17'
@
text
@a173 3
${EXP_HDR}.VideoDevice: hdr.VideoDevice
        ${CP} hdr.VideoDevice $@@ ${CPFLAGS}
        
@


4.7.2.13.2.5
log
@Update Cortex branch of kernel to support HALSize env variable. Export C version of hdr.OSEntries.
Detail:
  Makefile - Now exports a C version of hdr.OSEntries, for use by the new HAL USB drivers
  s/GetAll, s/Kernel - The HALSize env variable is now used in place of hard-coded values for the HAL size
  s/HAL - Reset_IRQ_Handler now switches to SVC mode before calling HAL_KbdScanInterrupt, to allow the HAL USB drivers to re-enable interrupts if they wish.
  s/VMSAv6 - Deleted some obsolete definitions
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Needs latest BuildSys, Env, HdrSrc


Version 5.35, 4.79.2.98.2.37. Tagged as 'Kernel-5_35-4_79_2_98_2_37'
@
text
@d72 1
a72 2
            ${C_EXP_HDR}.HALDevice \
            ${C_EXP_HDR}.OSEntries
a188 4
${C_EXP_HDR}.OSEntries: hdr.OSEntries
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.OSEntries $@@

@


4.7.2.13.2.6
log
@Add hdr.Variables to the C header export, fix ARMv6 issues
Detail:
  Makefile - Added hdr.Variables to the C header export list
  hdr/ARMops, s/ARMops - Added ARM1176JZF-S to the list of known CPUs
  s/ARMops - Fix unaligned memory access in ARM_PrintProcessorType
  hdr/Copro15ops, s/ARMops, s/HAL, s/VMSAv6, s/AMBControl/memmap - Fixed all myDSB/myISB/etc. macro instances to specify a temp register, so that they work properly when building an ARMv6 version of the kernel
Admin:
  Fixes build errors with the latest Draw module.
  Should also allow the kernel to work properly with the new S3C6410 port.
  ARMv6 version builds OK, but no other builds or runtime tests have been made.


Version 5.35, 4.79.2.98.2.38. Tagged as 'Kernel-5_35-4_79_2_98_2_38'
@
text
@d73 1
a73 2
            ${C_EXP_HDR}.OSEntries \
            ${C_EXP_HDR}.Variables
a193 4
${C_EXP_HDR}.Variables: hdr.Variables
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.Variables $@@

@


4.7.2.13.2.7
log
@Update the method the Cortex kernel uses to determine the UtilityModule & ROM dates
Detail:
  Three main changes:
  * On odd-numbered (i.e. development) versions of the module, the UtilityModule will now take its date from the VersionNum file instead of using a hard-coded date.
  * All build versions now look for the new "extended ROM footer" (as created by romlinker 0.04+) at the end of the ROM image and use it to determine the ROM build date for return by OS_ReadSysInfo 9,2. Failing to find the build date in the footer will cause OS_ReadSysInfo 9,2 to return 0.
  * On odd-numbered versions, OS_Byte 0 will now use the ROM build date (as found in the extended footer) to generate the error block that's returned to the user. This seems OK as the PRM describes OS_Byte 0 as returning the "creation date of the operation system". Plus it's a convenient way of getting the ROM build date into the Switcher, since the switcher uses OS_Byte 0. If the extended footer can't be found (or if the string hasn't been initialised yet, e.g. before Service_PostInit) the code falls back to a hard-coded string containing the date from the VersionNum file.
  File changes:
  Makefile - Updated to not create the obsolete Time+Date file (previously used for the ROM build date)
  Version - Use date from VersionNum file for development builds
  hdr/Options - New UseNewFX0Error variable/option to make it easy to check which OS_Byte 0 variant should be enabled
  hdr/KernelWS - Added new string buffers & extended ROM footer pointer to workspace
  s/Middle - Updated OS_ReadSysInfo 9 code, and added utility functions for searching the extended ROM footer for certain tags
  s/NewReset - Added a couple of calls to initialise the new string buffers just prior to Service_PostInit. This is required since OS_Byte/OS_ReadSysInfo shouldn't enable interrupts, but date conversion relies on the Territory module, which may enable interrupts.
  s/PMF/osbyte - Updated OS_Byte 0 code
Admin:
  Tested in OMAP ROM, with and without the extended footer present.


Version 5.35, 4.79.2.98.2.41. Tagged as 'Kernel-5_35-4_79_2_98_2_41'
@
text
@d136 3
a138 3
#s.Time+Date:
#        @@echo |IGBLS Builddate|JBuilddate SETS "<Sys$Date> <Sys$Year>.<Sys$Time>" |J|IEND { > s.Time+Date }
#        settype s.Time+Date FFF
d140 2
a141 1
o.GetAll: s.TMOSHelp
@


4.7.2.13.2.8
log
@Add new GPIO device type & OMAP3 GPIO device ID
Detail:
  hdr/HALDevice - Added GPIO device type in the Comms group, and an ID for a generic OMAP3 GPIO device
  hdr/GPIODevice - Definition of GPIO device structure. Currently only used to store the type and revision of the main board, so the GPIO manager module can tailor its features appropriately.
  Makefile - Export hdr/GPIODevice
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.42. Tagged as 'Kernel-5_35-4_79_2_98_2_42'
@
text
@a68 1
            ${EXP_HDR}.GPIODevice \
a177 3
${EXP_HDR}.GPIODevice: hdr.GPIODevice
        ${CP} hdr.GPIODevice $@@ ${CPFLAGS}
        
@


4.7.2.13.2.9
log
@Bring Cortex kernel branch in line with HAL branch
Detail:
  Makefile - Now uses ${PERL} for running perl
  s/Kernel - Now uses correct "Bad OS_PlatformFeatures reason code" error number
  s/MemInfo - Updated list of OS_Memory 9 controllers
Admin:
  OMAP3 ROM compiles OK; untested at runtime


Version 5.35, 4.79.2.98.2.43. Tagged as 'Kernel-5_35-4_79_2_98_2_43'
@
text
@a40 1
PERL    = do <Perl$Dir>.perl
d184 1
a184 1
        ${PERL} Build:Hdr2H hdr.RISCOS $@@
d188 1
a188 1
        ${PERL} Build:Hdr2H hdr.HALEntries $@@
d196 1
a196 1
        ${PERL} Build:Hdr2H hdr.OSEntries $@@
d200 1
a200 1
        ${PERL} Build:Hdr2H hdr.Variables $@@
d205 1
a205 1
        ${PERL} Build:Hdr2H ^.hdr.HALDevice Global.h.HALDevice
@


4.7.2.13.2.10
log
@Add new OS_ReadSysInfo 6 items. Change naming of PublicWS values.
Detail:
  s/Middle - Added some new OS_ReadSysInfo 6 items which are needed by the zero page relocation kernel. Also duplicated some existing entries to avoid conflicts with ROL's allocations.
  hdr/OSRSI6, Makefile - New header listing OS_ReadSysInfo 6 items
  hdr/PublicWS - Duplicated the workspace definitions for &0-&4000, but with a 'Legacy_' prefix to their names. Also added some new entries as needed by the zero page relocation kernel. Once existing modules have been updated to use OS_ReadSysInfo 6 & the Legacy_ definitions, the old defs will be removed.
  hdr/KernelWS - Removed 'Export_' prefix from all the exported workspace values, since the kernel can now use the original names directly
  hdr/Options - Dummy HiProcVecs option so merging things will be a bit cleaner
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.44. Tagged as 'Kernel-5_35-4_79_2_98_2_44'
@
text
@a71 1
            ${EXP_HDR}.OSRSI6 \
d76 1
a76 2
            ${C_EXP_HDR}.Variables \
            ${C_EXP_HDR}.OSRSI6
a182 3
${EXP_HDR}.OSRSI6: hdr.OSRSI6
        ${CP} hdr.OSRSI6 $@@ ${CPFLAGS}
        
a202 4
${C_EXP_HDR}.OSRSI6: hdr.OSRSI6
        ${MKDIR} ${C_EXP_HDR}
        ${PERL} Build:Hdr2H hdr.OSRSI6 $@@

@


4.7.2.14
log
@  Build fix
Detail:
  Some users reported problems building the sources if they had other
  installations of perl on their build machine. The build system was using a
  mixture of "perl" and "<Perl$Dir>.perl" to invoke the interpreter, and
  sometimes but not always using "do" to expand system variables on the
  command line. This has now been standardised to use "do <Perl$Dir>.perl in
  all cases, and where possible, to use the makefile macro ${PERL}.
Admin:
  Checked that a Tungsten build still works on a build machine with no other
  perl installation. "perl" was aliased to an error to ensure it wasn't used.

Version 5.35, 4.79.2.102. Tagged as 'Kernel-5_35-4_79_2_102'
@
text
@a40 1
PERL    = do <Perl$Dir>.perl
d171 1
a171 1
        ${PERL} Build:Hdr2H hdr.RISCOS $@@
d175 1
a175 1
        ${PERL} Build:Hdr2H hdr.HALEntries $@@
d184 1
a184 1
        ${PERL} Build:Hdr2H ^.hdr.HALDevice Global.h.HALDevice
@


4.7.2.15
log
@Add C version of Hdr.OSEntries to HAL kernel header export
Detail:
  Makefile - now exports a C version of hdr.OSEntries
Admin:
  Tested in Iyonix ROM softload.
  Needed for latest USB drivers to build.


Version 5.35, 4.79.2.112. Tagged as 'Kernel-5_35-4_79_2_112'
@
text
@d71 1
a71 2
            ${C_EXP_HDR}.HALDevice \
            ${C_EXP_HDR}.OSEntries
a181 4
${C_EXP_HDR}.OSEntries: hdr.OSEntries
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.OSEntries $@@

@


4.7.2.16
log
@Add hdr.Variables to C header export
Detail:
  Makefile - Added hdr.Variables to the C header export list
Admin:
  Fixes build errors with the latest Draw module


Version 5.35, 4.79.2.113. Tagged as 'Kernel-5_35-4_79_2_113'
@
text
@d72 1
a72 2
            ${C_EXP_HDR}.OSEntries \
            ${C_EXP_HDR}.Variables
a186 4
${C_EXP_HDR}.Variables: hdr.Variables
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.Variables $@@

@


4.7.2.17
log
@Update the method the HAL kernel uses to determine the UtilityModule & ROM dates
Detail:
  Three main changes:
  * On odd-numbered (i.e. development) versions of the module, the UtilityModule will now take its date from the VersionNum file instead of using a hard-coded date
  * All build versions now look for the new "extended ROM footer" (as created by romlinker 0.04+) at the end of the ROM image and use it to determine the ROM build date for return by OS_ReadSysInfo 9,2. Failing to find the build date in the footer will cause OS_ReadSysInfo 9,2 to return 0.
  * On odd-numbered versions, OS_Byte 0 will now use the ROM build date (as found in the extended footer) to generate the error block that's returned to the user. This seems OK as the PRM describes OS_Byte 0 as returning the "creation date of the operating system". Plus it's a convenient way of getting the ROM build date into the Switcher, since the switcher uses OS_Byte 0. If the extended footer can't be found (or if the string isn't initialised yet, e.g. before Service_PostInit) the code falls back to a hard-coded string containing the date from the VersionNum file.
  File changes:
  Makefile - Updated to not create the obsolete Time+Date file (previously used for the ROM build date)
  Version - Use date from VersionNum file for development builds
  hdr/Options - New UseNewFX0Error variable/option to make it easy to check which OS_Byte 0 variant should be enabled
  hdr/KernelWS - Added new string buffers & extended ROM footer pointer to workspace
  s/Middle - Updated OS_ReadSysInfo 9 code, and added utility functions for searching the extended ROM footer for certain tags
  s/NewReset - Added a couple of calls to initialise the new string buffers just prior to Service_PostInit. This is required since OS_Byte/OS_ReadSysInfo shouldn't enable interrupts, but date conversion relies on the Territory module, which may enable interrupts.
  s/PMF/osbyte - Updated OS_Byte 0 code
Admin:
  Tested in Tungsten ROM, with and without the extended footer present.


Version 5.35, 4.79.2.115. Tagged as 'Kernel-5_35-4_79_2_115'
@
text
@d135 3
a137 3
#s.Time+Date:
#        @@echo |IGBLS Builddate|JBuilddate SETS "<Sys$Date> <Sys$Year>.<Sys$Time>" |J|IEND { > s.Time+Date }
#        settype s.Time+Date FFF
d139 2
a140 1
o.GetAll: s.TMOSHelp
@


4.7.2.18
log
@Update 'perl' to '${PERL}'
Detail:
  Makefile - A couple of makefile rules were invoking perl directly instead of using the more preferential ${PERL}. Fixed.
Admin:
  Tungsten ROM compiles OK, untested at runtime.


Version 5.35, 4.79.2.117. Tagged as 'Kernel-5_35-4_79_2_117'
@
text
@d185 1
a185 1
        ${PERL} Build:Hdr2H hdr.OSEntries $@@
d189 1
a189 1
        ${PERL} Build:Hdr2H hdr.Variables $@@
@


4.7.2.19
log
@Add new OS_ReadSysInfo 6 items codes. Change naming of PublicWS values.
Detail:
  s/Middle - Added some new OS_ReadSysInfo 6 items which are needed by the zero page relocation kernel. Also duplicated some existing entries to avoid conflicts with ROL's allocations.
  hdr/OSRSI6, Makefile - New header listing OS_ReadSysInfo 6 items
  hdr/PublicWS - Duplicated the workspace definitions for &0-&4000, but with a 'Legacy_' prefix to their names. Also added some new entries as needed by the zero page relocation kernel. Once existing modules have been updated to use OS_ReadSysInfo & the Legacy_ definitions, the old defs will be removed.
  hdr/KernelWS - Removed 'Export_' prefix from all the exported workspace values, since the kernel can now use the original names directly
  hdr/Options - Dummy HiProcVecs option so merging things will be a bit cleaner
Admin:
  Tested in ROM softload on Iyonix


Version 5.35, 4.79.2.118. Tagged as 'Kernel-5_35-4_79_2_118'
@
text
@a68 1
            ${EXP_HDR}.OSRSI6 \
d73 1
a73 2
            ${C_EXP_HDR}.Variables \
            ${C_EXP_HDR}.OSRSI6
a170 3
${EXP_HDR}.OSRSI6: hdr.OSRSI6
        ${CP} hdr.OSRSI6 $@@ ${CPFLAGS}
        
a190 4
${C_EXP_HDR}.OSRSI6: hdr.OSRSI6
        ${MKDIR} ${C_EXP_HDR}
        ${PERL} Build:Hdr2H hdr.OSRSI6 $@@

@


4.7.2.20
log
@Merge Cortex kernel into HAL branch
Detail:
  This is a full merge of the Cortex kernel back into the HAL branch. Since the Cortex kernel is/was just a superset of the HAL branch, at this point in time both branches are identical.
  Main features the HAL branch gains from this merge:
  - ARMv6/ARMv7 support
  - High processor vectors/zero page relocation support
  - objasm 4 warning fixes
  - Improved HAL related functionality:
    - Support for HAL-driven RTCs instead of kernel-driven IIC based ones
    - Support for arbitrary size machine IDs
    - Support for multiple IIC busses
    - Support for any HAL size, instead of hardcoded 64k size
    - Probably some other stuff I've forgotten
  - Probably a few bug fixes here and there
Admin:
  Tested on BB-xM & Iyonix.
  Was successfully flashed to ROM on an Iyonix to test the Cortex branch implementation of the 2010 RTC bug fix.
  IOMD build untested - but has been known to work in the past.


Version 5.35, 4.79.2.123. Tagged as 'Kernel-5_35-4_79_2_123'
@
text
@d44 1
a44 1
ARMASMFLAGS = -depend !Depend -g ${THROWBACK}
a67 3
            ${EXP_HDR}.RTCDevice \
            ${EXP_HDR}.VideoDevice \
            ${EXP_HDR}.GPIODevice \
a169 3
${EXP_HDR}.RTCDevice: hdr.RTCDevice
        ${CP} hdr.RTCDevice $@@ ${CPFLAGS}
        
a172 6
${EXP_HDR}.VideoDevice: hdr.VideoDevice
        ${CP} hdr.VideoDevice $@@ ${CPFLAGS}
        
${EXP_HDR}.GPIODevice: hdr.GPIODevice
        ${CP} hdr.GPIODevice $@@ ${CPFLAGS}
        
@


4.7.2.21
log
@Conversions rationalisation.
Delete pmf/convdate, moved to conversions.
Moved OS_BinaryToDecimal to conversions.
Remove OS_ConvertHex16 and friends.
Add OS_ConvertVariform skeleton.
Tidied conversions.

Version 5.35, 4.79.2.125. Tagged as 'Kernel-5_35-4_79_2_125'
@
text
@d40 1
a40 1
XWIPE   = x wipe
d99 1
a99 1
        ${XWIPE} o.* ${WFLAGS}
d101 1
a101 1
        ${XWIPE} aif ${WFLAGS}
d103 1
a103 1
        ${XWIPE} list.* ${WFLAGS}
@


4.7.2.22
log
@Add compressed ROM support. Make more use of ARMv5+ instructions. Other misc tweaks.
Detail:
  hdr/OSEntries, s/HAL, s/Kernel - Add compressed ROM support.
  With the current scheme, a compressed ROM will have everything except the HAL and kernel compressed.
  During the keyboard scan period the kernel will allocate some temporary decompression workspace and call the decompression stub that was appended to the ROM.
  The decompression stub is expected to perform in-place decompression of the ROM. Once decompression is complete the workspace will be freed and the page tables updated to make the ROM image readonly.
  It's the HAL's responsibility to make sure any compressed ROM is located in an area of physically contiguous RAM large enough to hold the uncompressed image.
  More info here: http://www.riscosopen.org/wiki/documentation/show/Compressed%20ROMs
  Makefile, h/OSEntries - Add C export of hdr/OSEntries
  hdr/HALDevice - Add device ID for Tungsten video device. Convert tabs to spaces for consistency.
  hdr/HALEntries, s/NewReset - Moved KbdFlag_* definitions to hdr/HALEntries so HALs can use them in their keyboard scan code
  s/ArthurSWIs, S/HAL, s/HeapSort, s/Kernel, s/MemInfo, s/Middle, s/NewIRQs, s/TickEvents, s/vdu/vdugrafb - Make use of BLX, BFI and long multiplies if the CPU supports them. Don't support SWI calls from thumb mode if the CPU doesn't support thumb.
  s/HAL - Made the LDMIA in Init_MapInRAM more sensible (register order was backwards). The old code did work, but wasn't doing what the comments described. Removed unused/unfinished HAL_Write0 function. Improve RISCOS_LogToPhys to check L1PT for any section mappings if the logical_to_physical call fails
  s/ModHand - Save one instruction by using ADR instead of MOV+ADD to compute lr
  s/NewReset, s/PMF/key - Pass L1PT to HAL_Reset to allow machines without hardware reset (e.g. IOMD) to perform resets by manually disabling the MMU and restarting the ROM
  s/vdu/vdudriver, s/vdu/vdugrafv - Use GVEntry macro borrowed from NVidia module for setting up the GraphicsV jump table. Make GraphicsV_ReadPaletteEntry call HAL_Video_ReadPaletteEntry if left unclaimed. Fixup GV_Render to only call HAL_Video_Render if the HAL call is implemented.
Admin:
  Tested with OMAP3, IOMD & Tungsten ROMs/softloads.


Version 5.35, 4.79.2.138. Tagged as 'Kernel-5_35-4_79_2_138'
@
text
@d200 3
a202 3
${C_EXP_HDR}.OSEntries: o.Global.h.OSEntries h.OSEntries
        ${CP} h.OSEntries $@@ ${CPFLAGS}
        print o.Global.h.OSEntries { >> $@@ }
a217 6
o.Global.h.OSEntries: hdr.OSEntries
        ${MKDIR} o.Global.h
        dir o
        ${PERL} Build:Hdr2H ^.hdr.OSEntries Global.h.OSEntries
        back

@


4.7.2.23
log
@  Retired *Configure options, and a new header export
Detail:
  * As noted in recent commits to ADFS, the *Configure options Dir and NoDir
    haven't done anything since RISC OS 2, so ADFS has stopped reading the
    CMOS bit. Unusually, these options are implemented by the kernel, so this
    is the accompanying change to remove the *Configure options. This frees
    up a bit of CMOS for future re-use.
  * Now exports a C version of Hdr:ModHand.
Admin:
  Builds OK, but not tested in a ROM build yet (should be fairly safe though)

Version 5.35, 4.79.2.143. Tagged as 'Kernel-5_35-4_79_2_143'
@
text
@a72 1
            ${C_EXP_HDR}.ModHand \
a187 4
${C_EXP_HDR}.ModHand: hdr.ModHand
        ${MKDIR} ${C_EXP_HDR}
        ${PERL} Build:Hdr2H hdr.ModHand $@@

@


4.7.2.24
log
@Some tweaks ahead of an RPi code freeze.

Default CMOS tweaks now apply for the RPi hardware. Was missed in
the previous commit.

You can now build the Kernel without the ROM debug output stuff
that's enabled for odd-numbered builds, by passing FREEZE_DEV_REL=TRUE
into the makefile. For example, in the Components file, you'd add:

  -options FREEZE_DEV_REL=TRUE

onto the Kernel line.

Version 5.35, 4.79.2.171. Tagged as 'Kernel-5_35-4_79_2_171'
@
text
@a30 5
# Override this to "TRUE" in the components file if
# you want an odd-numbered (development) build to be
# a 'freezable' build - e.g. with no ROM debug output
FREEZE_DEV_REL ?= FALSE

d44 1
a44 1
ARMASMFLAGS = -depend !Depend -PD "FreezeDevRel SETL {${FREEZE_DEV_REL}}" -g ${THROWBACK}
@


4.7.2.25
log
@Review of Internation switch
Variously the call to TranslateError was either followed (outside the switch) by an unnecessary SETV, or missing SETV for the non international case.
Added DMA controller HAL device for IOMD.

Version 5.35, 4.79.2.174. Tagged as 'Kernel-5_35-4_79_2_174'
@
text
@d104 1
d146 4
@


4.7.2.26
log
@Add support for the new RISC OS 5 style sprite mode word. Add partial support for alpha channel sprite masks. Implement OS_ScreenMode reasons 13-15
Detail:
  ECFShift/ECFYOffset:
  - hdr/PublicWS - Add ECFShift and ECFYOffset to list of public exports (SpriteExtend was using hardcoded values). Rearrange exports so that VduWorkspace exports are now labelled as such.
  - hdr/KernelWS - Make sure ECFShift & ECFYOffset match their exported locations
  - hdr/OSRSI6, s/Middle - Add OS_ReadSysInfo 6 items 83 & 84, for reading ECFYOffset and ECFShift locations
  Mode flags/VDU variables:
  - Makefile - Add hdr/VduExt to the C header exports
  - hdr/VduExt - Get rid of NotRVVTBarWobblyBits macro and defined VDU variables manually so that Hdr2H will handle them. Begin replacing overly generic 'Flag_*' mode flag definitions with 'ModeFlag_*' instead. Define new flags as required by the new screen/sprite modes. Add OS_ScreenMode reason codes and mode selector format (from s.vdu.vdudecl)
  - NewModes/NEWF2, NewModes/OldPSSrc, NewModes/PSSrc, s.vdu.vdu23, s.vdu.vducursoft, s.vdu.vdudriver, s.vdu.vdugrafg, s.vdu.vdugrafj, s.vdu.vdugrafl, s.vdu.vdumodes, s.vdu.vdupal10, s.vdu.vdupal20, s.vdu.vdupalette, s.vdu.vdupalxx, s.vdu.vduwrch - Renaming Flag_* to ModeFlag_*
  - s.vdu.vdudecl - Remove OS_ScreenMode reason codes & mode selector format definitions; these are now in hdr/VduExt. Flag_* -> ModeFlag_* renaming.
  - s.vdu.vdupalxx - Apply a greyscale palette in PV_SetDefaultPalette if the greyscale mode flag is set
  New sprite types:
  - s.vdu.vdudriver - Extend GenerateModeSelectorVars to deal with the wide mask flag, 64K sprites, and the new RISC OS 5 sprite mode word format.
  - s.vdu.vdugrafdec - Store more information about the sprite in the SprReadNColour ... SprLog2BPC block.
  - s.vdu.vdugrafg - Update SpriteVecHandler to be able to detect whether RISC OS 5 format sprites are allowed palettes. Update SetupSprModeData to store the extra sprite info that's defined in vdugrafdec. Update PutSprite to fault any sprites with wide masks - SpriteExtend must be used for that (once implemented!)
  - s.vdu.vdugrafh - Update WritePixelColour to avoid temporary poking of NColour VDU variable for 8bpp sprites. Correctly replicate data when writing to RISC OS 5 format sprites. Update ReadPixelMask, WritePixelMask, SpriteMaskAddr, GetMaskspWidth to deal with wide masks. Delete obsolete bounce_new_format_masks routine.
  - s.vdu.vdugrafi - Comment updated to reflect new reality
  - s.vdu.vdugrafj - Get rid of unused code block in CreateHeader/PostCreateHeader. Update SanitizeSGetMode to generate RISC OS 5 style sprite mode words where applicable. Update DecideMaskSize to rely on GetMaskspWidth for calculating mask width.
  - s.vdu.vdugrafl - Update SwitchOutputToSprite/SwitchOutputToMask to deal with the new sprite formats. Allow PushModeInfoAnyMonitor to fail.
  - s.vdu.vduswis - Extended OS_ReadModeVariable to cope with new sprite types
  Misc:
  - s.vdu.vdudriver - Fixed bug with VIDCList copying where any -1 value in the structure would terminate the copy, instead of only -1 as a control item number
  - s.vdu.vduswis - Implemented OS_ScreenMode 13 (Mode string to specifier), 14 (mode specifier to string), and 15 (set mode by string). Mostly as per ROL's specs, but minus support for teletext attributes, and plus support for new RISC OS 5 attributes (L... layout specifier, 4096 & 24bpp packed modes, etc.)
  - s.vdu.vduwrch - Pick correct default text colours for the new modes
Admin:
  Tested on BB-xM
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 5.35, 4.79.2.194. Tagged as 'Kernel-5_35-4_79_2_194'
@
text
@d84 1
a84 2
            ${C_EXP_HDR}.OSRSI6 \
            ${C_EXP_HDR}.VduExt
a216 4
${C_EXP_HDR}.VduExt: hdr.VduExt
        ${MKDIR} ${C_EXP_HDR}
        ${PERL} Build:Hdr2H hdr.VduExt $@@

@


4.7.2.27
log
@Migrate RTC driver out of the kernel
The kernel will use RTC_Read and RTC_Write to access the hardware clock, while maintaining the software clock as before.
Makefile: header export is now in the RTC module's sources
KernelWS: remove RTCFitted flag
NewReset: sync the time after the module init
i2cutils: deleted clock chip code
osinit: move OS_ResyncTime into PMF/realtime
realtime: mostly packages up ordinals and calls the respective SWI

Tested on IOMD softload.

Version 5.35, 4.79.2.202. Tagged as 'Kernel-5_35-4_79_2_202'
@
text
@d73 1
d175 3
@


4.7.2.28
log
@Assorted GraphicsV improvements
Detail:
  This set of changes:
  * Adds basic support for multiple GraphicsV drivers, by way of some new OS_ScreenMode reason codes for registering/deregistering, selecting and enumerating drivers (11, 64-68)
  * Tidies up handling of HAL video calls so that the HAL calls will be transformed into a bona fide GraphicsV driver if they're implemented
  * Changes handling of 16bpp gamma table entries so that they're sent to GraphicsV in a generic form instead of in a VIDC-specific form
  * Adds a new GraphicsV call and defines new VIDC list items to allow GraphicsV drivers to utilise the new pixel formats
  File changes:
  * h/VIDCList, hdr/VIDCList, Makefile - Add new header export containing VIDC list type 3 definitions, to avoid repeated definitions in other components
  * Resources/UK/Messages - Add new GraphicsV/OS_ScreenMode error strings and some missing processor type strings
  * hdr/KernelWS - Clean up some pre-GraphicsV definitions, and add new workspace locations for storing the current GraphicsV driver number and the driver list
  * hdr/Options - Remove obsolete InverseTextTransparency option
  * hdr/VduExt - Add VDU variable 192 for storing GraphicsV driver number (same as ROL's VideoV driver number). Remove old 'Flag_*' mode flag definitions (use new 'ModeFlag_*' defintions instead). Add new OS_ScreenMode reason codes.
  * s/ARM600, s/VMSAv6, s/vdu/vdu23, s/vdu/vdugrafa, s/vdu/vdugrafd, s/vdu/vdupalxx, s/vdu/vdupointer, s/vdu/vduwrch - Strip out pre-GraphicsV code. Update GraphicsV code to use correct driver number.
  * s/ArthurSWIs - Pass the default GraphicsV claimant the VduDriverWorkSpace instead of ZeroPage
  * s/Getall - Add Hdr:VIDCList and s/vdu/VduGrafHAL to list of GETs
  * s/NewIRQs - Remove HAL VSync IRQ initialisation, is now handled by grafvhal. Remove old HAL VsyncIRQ entry point, all VSyncs are now handled by VsyncIRQ_ExtEntry.
  * s/PMF/osbyte - Stop OS_Byte 19 waiting forever if no video driver is active
  * s/PMF/osinit - Remove HAL VSync IRQ initialisation, is now handled by grafvhal
  * s/vdu/vducursoft - Use new workspace variable names and flag names
  * s/vdu/vdudecl - Remove old HALDAG_* definitions, GVDAG_* definitions are used instead. Add definition of the per-driver workspace structure and flags.
  * s/vdu/vdudriver - Remove pre-GraphicsV code. Update InitialiseMode to check for and initialise a HAL driver. Use cached driver features word in a few places instead of calling GraphicsV each time. Update PalIndexTable to disable VIDC mangling of 16bpp gamma tables.
  * s/vdu/vdugrafv, s/vdu/vdugrafhal - HAL<->GraphicsV code split off into its own file (vdugrafhal). Default GraphicsV claimant now only deals with VSync events for the active driver.
  * s/vdu/vdumodes - Get rid of old VIDC List type 3 definiton; now in hdr/VIDCList
  * s/vdu/vduswis - Added OS_ScreenMode reason codes 11 and 64-68 for registering, deregistering, selecting and enumerating GraphicsV drivers. Update mode set code to not bother checking if the driver supports the pixel format; instead we assume that the driver's vet mode call will do the check for us.
Admin:
  Tested in Tungsten, IOMD, OMAP3 & BCM2835 ROMs
  Requires HdrSrc-2_38 and updated video driver modes


Version 5.35, 4.79.2.203. Tagged as 'Kernel-5_35-4_79_2_203'
@
text
@a76 1
            ${EXP_HDR}.VIDCList \
d84 1
a84 2
            ${C_EXP_HDR}.VduExt \
            ${C_EXP_HDR}.VIDCList
a185 3
${EXP_HDR}.VIDCList: hdr.VIDCList
        ${CP} hdr.VIDCList $@@ ${CPFLAGS}
        
a217 4
${C_EXP_HDR}.VIDCList: o.Global.h.VIDCList h.VIDCList
        ${CP} h.VIDCList $@@ ${CPFLAGS}
        print o.Global.h.VIDCList { >> $@@ }

a229 6
o.Global.h.VIDCList: hdr.VIDCList
        ${MKDIR} o.Global.h
        dir o
        ${PERL} Build:Hdr2H ^.hdr.VIDCList Global.h.VIDCList
        back

@


4.7.2.29
log
@Makefile recreated from fragments
Need a custom ROM stage as the Kernel is linked as a binary, and a custom exports phase as the AAsmModule makefile tops out at 3 exported headers, but otherwise the rest can be shared.
Tested in an IOMD ROM build.

Version 5.35, 4.79.2.228. Tagged as 'Kernel-5_35-4_79_2_228'
@
text
@d17 7
d25 5
a29 34
COMPONENT       = Kernel
C_EXP_HDR       = <cexport$dir>.Global.h
TOKHELPSRC      = ${TOKENSOURCE}
HELPSRC         = HelpStrs
ROM_SOURCE      = GetAll.s
KERNEL_MODULE   = bin${SEP}${COMPONENT}
ASFLAGS         = -PD "FreezeDevRel SETL {${FREEZE_DEV_REL}}"
CUSTOMROM       = custom
CUSTOMEXP       = custom
EXPORTS         = ${EXP_HDR}.EnvNumbers \
                  ${EXP_HDR}.ModHand \
                  ${EXP_HDR}.PublicWS \
                  ${EXP_HDR}.RISCOS \
                  ${EXP_HDR}.Variables \
                  ${EXP_HDR}.VduExt \
                  ${EXP_HDR}.HALEntries \
                  ${EXP_HDR}.HALDevice \
                  ${EXP_HDR}.VideoDevice \
                  ${EXP_HDR}.GPIODevice \
                  ${EXP_HDR}.OSEntries \
                  ${EXP_HDR}.OSRSI6 \
                  ${EXP_HDR}.VIDCList \
                  ${C_EXP_HDR}.ModHand \
                  ${C_EXP_HDR}.RISCOS \
                  ${C_EXP_HDR}.HALEntries \
                  ${C_EXP_HDR}.HALDevice \
                  ${C_EXP_HDR}.OSEntries \
                  ${C_EXP_HDR}.Variables \
                  ${C_EXP_HDR}.OSRSI6 \
                  ${C_EXP_HDR}.VduExt \
                  ${C_EXP_HDR}.VIDCList

include StdTools
include AAsmModule
d37 1
a37 1
# Custom ROM:
d39 13
a51 2
rom: ${KERNEL_MODULE}
        @@${ECHO} ${COMPONENT}: rom module built
d53 2
a54 4
install_rom: ${KERNEL_MODULE}
        ${CP} ${KERNEL_MODULE} ${INSTDIR}${SEP}${TARGET} ${CPFLAGS}
        ${CP} ${KERNEL_MODULE}_gpa ${INSTDIR}${SEP}${TARGET}_gpa ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: rom module installed
d56 31
a86 5
${KERNEL_MODULE}: ${ROM_OBJECT} ${DIRS} 
        ${MKDIR} bin
        ${LD} -bin -o $@@ ${ROM_OBJECT}
        ${LD} -aif -bin -d -o ${KERNEL_MODULE}_aif ${ROM_OBJECT}
        ${TOGPA} -s ${KERNEL_MODULE}_aif ${KERNEL_MODULE}_gpa
d89 1
a89 1
# Custom exports:
d91 22
d114 22
a135 1
        @@${ECHO} ${COMPONENT}: export complete
d137 15
d190 1
a190 1

d193 1
a193 1
        ${HDR2H} hdr.ModHand $@@
d197 1
a197 1
        ${HDR2H} hdr.RISCOS $@@
d201 9
a209 1
        ${HDR2H} hdr.HALEntries $@@
d213 1
a213 1
        ${HDR2H} hdr.Variables $@@
d217 1
a217 1
        ${HDR2H} hdr.OSRSI6 $@@
d221 1
a221 22
        ${HDR2H} hdr.VduExt $@@

${C_EXP_HDR}.HALDevice: Global.h.HALDevice h.HALDevice
        ${FAPPEND} $@@ h.HALDevice Global.h.HALDevice

${C_EXP_HDR}.OSEntries: Global.h.OSEntries h.OSEntries
        ${FAPPEND} $@@ h.OSEntries Global.h.OSEntries

${C_EXP_HDR}.VIDCList: Global.h.VIDCList h.VIDCList
        ${FAPPEND} $@@ h.VIDCList Global.h.VIDCList

Global.h.HALDevice: hdr.HALDevice
        ${MKDIR} Global.h
        ${HDR2H} hdr.HALDevice $@@

Global.h.OSEntries: hdr.OSEntries
        ${MKDIR} Global.h
        ${HDR2H} hdr.OSEntries $@@

Global.h.VIDCList: hdr.VIDCList
        ${MKDIR} Global.h
        ${HDR2H} hdr.VIDCList $@@
d223 28
a250 3
clean::
        ${XWIPE} Global ${WFLAGS}
        ${XWIPE} bin    ${WFLAGS}
@


4.7.2.30
log
@Added a disc install phase as an analogue of the export phase

Version 5.35, 4.79.2.242. Tagged as 'Kernel-5_35-4_79_2_242'
@
text
@a18 5

ifeq (${MAKECMDGOALS},install)
EXP_HDR         = ${INSTDIR}.Hdr.Interface
C_EXP_HDR       = ${INSTDIR}.C.Global.h
else
a19 2
endif

a49 2
CUSTOMSA=custom

a68 7
inst_dirs:
        ${MKDIR} ${EXP_HDR}
        ${MKDIR} ${C_EXP_HDR}

install: ${EXPORTS} inst_dirs
        @@${ECHO} ${COMPONENT}: header files installed

@


4.7.2.31
log
@Add ARMops for PL310 L2 cache controller
Detail:
  Unlike on the Cortex-A8 or Cortex-A15, the L2 cache that's used with the Cortex-A9 isn't hooked up to the standard ARMv7 CP15 cache maintenance ops. Instead, memory-mapped registers must be used to program and maintain the cache.
  Since the PL310 can't be detected automatically, this change adds support for a 'cache controller' HAL device which the HAL can use to advertise the presence of any external caches. If a cache device is registered during HAL_InitDevices the kernel will then check it against a list of known cache types and replace the appropriate ARMop routines with the alternatives for that controller.
  File changes:
  - hdr/PL310 - New header containing PL310 register listing
  - Makefile - Add export for PL310 header. Reorder exports to be alphabetical
  - hdr/HALDevice - Add cache controller device type, PL310 device
  - hdr/KernelWS - Allocate some workspace for storing a pointer to the current cache HAL device
  - s/ARMops - Add code for searching for known cache types, and implementation of PL310-specific ARMops
  - s/GetAll - Get Hdr:PL310
  - s/NewReset - Look for a cache controller after calling HAL_InitDevices
Admin:
  Tested on Pandaboard
  Fixes various assorted instability issues


Version 5.35, 4.79.2.252. Tagged as 'Kernel-5_35-4_79_2_252'
@
text
@a34 3
                  ${EXP_HDR}.GPIODevice \
                  ${EXP_HDR}.HALDevice \
                  ${EXP_HDR}.HALEntries \
a35 3
                  ${EXP_HDR}.OSEntries \
                  ${EXP_HDR}.OSRSI6 \
                  ${EXP_HDR}.PL310 \
d40 6
d47 3
a49 1
                  ${EXP_HDR}.VideoDevice \
a50 2
                  ${C_EXP_HDR}.HALEntries \
                  ${C_EXP_HDR}.ModHand \
d52 1
a53 2
                  ${C_EXP_HDR}.RISCOS \
                  ${C_EXP_HDR}.Variables \
a98 9
        
${EXP_HDR}.GPIODevice: hdr.GPIODevice
        ${CP} hdr.GPIODevice $@@ ${CPFLAGS}
        
${EXP_HDR}.HALDevice: hdr.HALDevice
        ${CP} hdr.HALDevice $@@ ${CPFLAGS}
        
${EXP_HDR}.HALEntries: hdr.HALEntries
        ${CP} hdr.HALEntries $@@ ${CPFLAGS}
a101 9
        
${EXP_HDR}.OSEntries: hdr.OSEntries
        ${CP} hdr.OSEntries $@@ ${CPFLAGS}
        
${EXP_HDR}.OSRSI6: hdr.OSRSI6
        ${CP} hdr.OSRSI6 $@@ ${CPFLAGS}

${EXP_HDR}.PL310: hdr.PL310
        ${CP} hdr.PL310 $@@ ${CPFLAGS}
a108 3
${EXP_HDR}.Variables: hdr.Variables
        ${CP} hdr.Variables $@@ ${CPFLAGS}

d112 11
a122 2
${EXP_HDR}.VIDCList: hdr.VIDCList
        ${CP} hdr.VIDCList $@@ ${CPFLAGS}
d126 9
a134 7

${C_EXP_HDR}.HALDevice: Global.h.HALDevice h.HALDevice
        ${FAPPEND} $@@ h.HALDevice Global.h.HALDevice

${C_EXP_HDR}.HALEntries: hdr.HALEntries
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.HALEntries $@@
d140 1
a140 4
${C_EXP_HDR}.OSEntries: Global.h.OSEntries h.OSEntries
        ${FAPPEND} $@@ h.OSEntries Global.h.OSEntries

${C_EXP_HDR}.OSRSI6: hdr.OSRSI6
d142 1
a142 1
        ${HDR2H} hdr.OSRSI6 $@@
d144 1
a144 1
${C_EXP_HDR}.RISCOS: hdr.RISCOS
d146 1
a146 1
        ${HDR2H} hdr.RISCOS $@@
d152 4
d160 6
@


4.7.2.32
log
@Enable high processor vectors/zero page relocation. OS_DynamicArea 20 fixes.
Detail:
  Makefile, hdr/Options - By default enable high processor vectors/zero page relocation for compatible machines, but also allow the components file to override the setting if required
  s/ChangeDyn - Fix OS_DynamicArea 20 to check the correct range for doubly mapped areas, and to correctly localise its error message
Admin:
  Tested on Iyonix


Version 5.35, 4.79.2.268. Tagged as 'Kernel-5_35-4_79_2_268'
@
text
@d31 1
a31 1
ASFLAGS        += -PD "FreezeDevRel SETL {${FREEZE_DEV_REL}}"
@


4.7.2.33
log
@Replace WriteBuffer_Drain ARMop with a suite of memory barrier ARMops
Detail:
  - Docs/HAL/ARMop_API - Updated with documentation for the new ARMops.
  - s/ARMops - Set up pointers for the new memory barrier ARMops. Add full implementations for ARMv6 & ARMv7; older architectures should be able to get by with a mix of null ops & write buffer drain ops. Update ARMopPtrTable to validate structure against the list in hdr/OSMisc
  - hdr/KernelWS - Reserve workspace for new ARMops. Free up a bit of space by limiting ourselves to 2 cache levels with ARMv7. Remove some unused definitions.
  - hdr/OSMisc - New header defining OS_PlatformFeatures & OS_MMUControl reason codes, OS_PlatformFeatures 0 flags, and OS_MMUControl 2 ARMop indices
  - Makefile - Add export rules for OSMisc header
  - hdr/ARMops, s/ARM600, s/VMSAv6 - Remove CPUFlag_* and MMUCReason_* definitions. Update OS_MMUControl write buffer drain to use DSB_ReadWrite ARMop (which is what most existing write buffer drain implementations have been renamed to).
  - s/GetAll - Get Hdr:OSMisc
  - s/Kernel - Use OS_PlatformFeatures reason code symbols
  - s/vdu/vdudecl - Remove unused definition
Admin:
  Tested on ARM11, Cortex-A8, Cortex-A9


Version 5.35, 4.79.2.279. Tagged as 'Kernel-5_35-4_79_2_279'
@
text
@a39 1
                  ${EXP_HDR}.OSMisc \
a51 1
                  ${C_EXP_HDR}.OSMisc \
a115 3
${EXP_HDR}.OSMisc: hdr.OSMisc
        ${CP} hdr.OSMisc $@@ ${CPFLAGS}
        
a153 4
${C_EXP_HDR}.OSMisc: hdr.OSMisc
        ${MKDIR} ${C_EXP_HDR}
        ${HDR2H} hdr.OSMisc $@@

@


4.7.2.34
log
@  Added 3 HALDevice headers - SPI, Ether, and AHCI
Detail:
Admin:


Version 5.35, 4.79.2.282. Tagged as 'Kernel-5_35-4_79_2_282'
@
text
@a34 3
                  ${EXP_HDR}.SPIDevice \
                  ${EXP_HDR}.AHCIDevice \
                  ${EXP_HDR}.EtherDevice \
d88 1
a88 1
${KERNEL_MODULE}: ${ROM_OBJECT} ${DIRS}
d102 1
a102 1

d105 1
a105 1

d108 1
a108 1

d114 1
a114 1

d117 1
a117 1

d120 1
a120 1

d141 1
a141 1

@


4.7.2.35
log
@  Corrected makefile omissions.
  Removed errant tab characters from EtherDevice header
Detail:
Admin:


Version 5.35, 4.79.2.283. Tagged as 'Kernel-5_35-4_79_2_283'
@
text
@a105 9
${EXP_HDR}.SPIDevice: hdr.SPIDevice
        ${CP} hdr.SPIDevice $@@ ${CPFLAGS}

${EXP_HDR}.AHCIDevice: hdr.AHCIDevice
        ${CP} hdr.AHCIDevice $@@ ${CPFLAGS}

${EXP_HDR}.EtherDevice: hdr.EtherDevice
        ${CP} hdr.EtherDevice $@@ ${CPFLAGS}

@


4.7.2.36
log
@Hand off ownership of GPIODevice
The kernel has no place holding this header export, since it doesn't use it nor implement any of its interfaces.

Version 5.35, 4.79.2.296. Tagged as 'Kernel-5_35-4_79_2_296'
@
text
@d38 1
d115 3
@


4.7.2.37
log
@  Complete removal od SPIDevice
Detail:
  (remove reference to SPIDevice in makefile)


Version 5.35, 4.79.2.309. Tagged as 'Kernel-5_35-4_79_2_309'
@
text
@d35 1
@


4.6
log
@Removed generated file s.TMOSHelp - modified Makefile to clean it correctly.
Modified HelpStrs (from which s.TMOSHelp is generated) to include help for
ChangeDynamicArea.

Version 4.73. Tagged as 'Kernel-4_73'
@
text
@d29 1
d34 1
a34 1
MKDIR   = cdir
d56 2
a57 1
            ${EXP_HDR}.VduExt
d123 4
@


4.5
log
@Spinner branch (Backspace-Power On addition) merged.

Version 4.66. Tagged as 'Kernel-4_66'
@
text
@d69 1
a69 1
        ${RM} TMOSHelp
@


4.4
log
@Spinner branch merged.
Bandwidth limit for 7500FE fixed.
RO371Timings flag set to :LNOT:STB

Version 4.64. Tagged as 'Kernel-4_64'
@
text
@a122 131



































































































































@


4.3
log
@RISC OS 3.71 kernel changes merged.
Not fully tested on all hardware permutations.
@
text
@d75 4
a78 1
resources:
d80 12
a91 2
        ${CP} Resources.${LOCALE}.Messages  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied
d123 131
a253 402
rm.Falcon.Kernel: Hdr:ListOpts
rm.Falcon.Kernel: Hdr:Macros
rm.Falcon.Kernel: Hdr:System
rm.Falcon.Kernel: Hdr:SWIs
rm.Falcon.Kernel: Hdr:CPU.Generic26
rm.Falcon.Kernel: Hdr:IO.GenericIO
rm.Falcon.Kernel: Hdr:RISCOS
rm.Falcon.Kernel: Hdr:Machine.<Machine>
rm.Falcon.Kernel: Hdr:ImageSize.<ImageSize>
rm.Falcon.Kernel: Hdr:CPU.ARM600
rm.Falcon.Kernel: Hdr:IO.IOMDL
rm.Falcon.Kernel: Hdr:IO.IOMD
rm.Falcon.Kernel: Hdr:MEMM.ARM600
rm.Falcon.Kernel: Hdr:VIDC.VIDC20
rm.Falcon.Kernel: Version
rm.Falcon.Kernel: Hdr:CMOS
rm.Falcon.Kernel: Hdr:Heap
rm.Falcon.Kernel: Hdr:PublicWS
rm.Falcon.Kernel: Hdr:KernelWS
rm.Falcon.Kernel: Hdr:Services
rm.Falcon.Kernel: Hdr:FSNumbers
rm.Falcon.Kernel: Hdr:HighFSI
rm.Falcon.Kernel: Hdr:NewErrors
rm.Falcon.Kernel: Hdr:Proc
rm.Falcon.Kernel: Hdr:Sprite
rm.Falcon.Kernel: Hdr:KeyWS
rm.Falcon.Kernel: Hdr:RS423
rm.Falcon.Kernel: Hdr:ModHand
rm.Falcon.Kernel: Hdr:Variables
rm.Falcon.Kernel: Hdr:EnvNumbers
rm.Falcon.Kernel: Hdr:UpCall
rm.Falcon.Kernel: Hdr:Sound
rm.Falcon.Kernel: Hdr:Pointer
rm.Falcon.Kernel: Hdr:Podule
rm.Falcon.Kernel: Hdr:VduExt
rm.Falcon.Kernel: Hdr:Buffer
rm.Falcon.Kernel: Hdr:Font
rm.Falcon.Kernel: Hdr:DevNos
rm.Falcon.Kernel: Hdr:Territory
rm.Falcon.Kernel: Hdr:Portable
rm.Falcon.Kernel: Hdr:MsgTrans
rm.Falcon.Kernel: Hdr:PaletteV
rm.Falcon.Kernel: Hdr:Wimp
rm.Falcon.Kernel: Hdr:ColourTran
rm.Falcon.Kernel: Hdr:Debug
rm.Falcon.Kernel: s.PMF.DEF
rm.Falcon.Kernel: s.Copro15ops
rm.Falcon.Kernel: s.Kernel
rm.Falcon.Kernel: TestSrc.Begin
rm.Falcon.Kernel: s.Morris
rm.Falcon.Kernel: TestSrc.ExtIO
rm.Falcon.Kernel: TestSrc.ExtCmd
rm.Falcon.Kernel: TestSrc.Mem1IOMD
rm.Falcon.Kernel: TestSrc.Mem2
rm.Falcon.Kernel: TestSrc.Mem3
rm.Falcon.Kernel: TestSrc.Mem4
rm.Falcon.Kernel: TestSrc.Mem5
rm.Falcon.Kernel: TestSrc.Vidc
rm.Falcon.Kernel: TestSrc.Ioc
rm.Falcon.Kernel: TestSrc.Cmos
rm.Falcon.Kernel: TestSrc.Arm3
rm.Falcon.Kernel: TestSrc.ToggleLED
rm.Falcon.Kernel: TestSrc.LEDDelay
rm.Falcon.Kernel: TestSrc.ShowIOMDRs
rm.Falcon.Kernel: s.NewIRQs
rm.Falcon.Kernel: s.Oscli
rm.Falcon.Kernel: s.SysComms
rm.Falcon.Kernel: s.MosDict
rm.Falcon.Kernel: s.TMOSHelp
rm.Falcon.Kernel: s.HeapMan
rm.Falcon.Kernel: s.ModHand
rm.Falcon.Kernel: s.Unsqueeze
rm.Falcon.Kernel: s.ArthurSWIs
rm.Falcon.Kernel: s.ChangeDyn
rm.Falcon.Kernel: s.Arthur2
rm.Falcon.Kernel: s.Utility
rm.Falcon.Kernel: s.MoreComms
rm.Falcon.Kernel: s.Convrsions
rm.Falcon.Kernel: s.MoreSWIs
rm.Falcon.Kernel: s.ExtraSWIs
rm.Falcon.Kernel: s.HeapSort
rm.Falcon.Kernel: s.Arthur3
rm.Falcon.Kernel: s.SWINaming
rm.Falcon.Kernel: s.TickEvents
rm.Falcon.Kernel: s.KbdResPC
rm.Falcon.Kernel: s.NewReset
rm.Falcon.Kernel: s.MsgCode
rm.Falcon.Kernel: s.Middle
rm.Falcon.Kernel: s.Super1
rm.Falcon.Kernel: s.ARM600
rm.Falcon.Kernel: s.MemInfo
rm.Falcon.Kernel: s.vdu.VduDriver
rm.Falcon.Kernel: s.vdu.VduDecl
rm.Falcon.Kernel: s.vdu.VduGrafDec
rm.Falcon.Kernel: s.vdu.VduModes
rm.Falcon.Kernel: s.vdu.VduSWIs
rm.Falcon.Kernel: s.vdu.VduPalette
rm.Falcon.Kernel: s.Vdu.VduPal20
rm.Falcon.Kernel: s.vdu.VduPlot
rm.Falcon.Kernel: s.vdu.VduGrafA
rm.Falcon.Kernel: s.vdu.VduGrafB
rm.Falcon.Kernel: s.vdu.VduGrafC
rm.Falcon.Kernel: s.vdu.VduGrafD
rm.Falcon.Kernel: s.vdu.VduGrafE
rm.Falcon.Kernel: s.vdu.VduGrafF
rm.Falcon.Kernel: s.vdu.VduGrafG
rm.Falcon.Kernel: s.vdu.VduGrafH
rm.Falcon.Kernel: s.vdu.VduGrafI
rm.Falcon.Kernel: s.vdu.VduGrafJ
rm.Falcon.Kernel: s.vdu.VduGrafK
rm.Falcon.Kernel: s.vdu.VduGrafL
rm.Falcon.Kernel: s.vdu.VduWrch
rm.Falcon.Kernel: s.vdu.Vdu23
rm.Falcon.Kernel: s.vdu.VduPointer
rm.Falcon.Kernel: s.vdu.Vdu5
rm.Falcon.Kernel: s.vdu.VduCurSoft
rm.Falcon.Kernel: s.vdu.VduTTX
rm.Falcon.Kernel: s.vdu.VduFontL1
rm.Falcon.Kernel: s.PMF.osinit
rm.Falcon.Kernel: s.PMF.oseven
rm.Falcon.Kernel: s.PMF.osbyte
rm.Falcon.Kernel: s.PMF.osword
rm.Falcon.Kernel: s.PMF.realtime
rm.Falcon.Kernel: s.PMF.convdate
rm.Falcon.Kernel: s.PMF.i2cutils
rm.Falcon.Kernel: s.PMF.oswrch
rm.Falcon.Kernel: s.PMF.buffer
rm.Falcon.Kernel: s.PMF.key
rm.Falcon.Kernel: s.PMF.mouse
rm.Falcon.Kernel: s.AMBControl.AMB
rm.Falcon.Kernel: s.AMBControl.Options
rm.Falcon.Kernel: s.AMBControl.Workspace
rm.Falcon.Kernel: s.AMBControl.main
rm.Falcon.Kernel: s.AMBControl.allocate
rm.Falcon.Kernel: s.AMBControl.deallocate
rm.Falcon.Kernel: s.AMBControl.growshrink
rm.Falcon.Kernel: s.AMBControl.mapslot
rm.Falcon.Kernel: s.AMBControl.mapsome
rm.Falcon.Kernel: s.AMBControl.readinfo
rm.Falcon.Kernel: s.AMBControl.growp
rm.Falcon.Kernel: s.AMBControl.shrinkp
rm.Falcon.Kernel: s.AMBControl.service
rm.Falcon.Kernel: s.AMBControl.Memory
rm.Falcon.Kernel: s.AMBControl.memmap
rm.Omega.Kernel: Hdr:ListOpts
rm.Omega.Kernel: Hdr:Macros
rm.Omega.Kernel: Hdr:System
rm.Omega.Kernel: Hdr:SWIs
rm.Omega.Kernel: Hdr:CPU.Generic26
rm.Omega.Kernel: Hdr:IO.GenericIO
rm.Omega.Kernel: Hdr:RISCOS
rm.Omega.Kernel: Hdr:Machine.<Machine>
rm.Omega.Kernel: Hdr:ImageSize.<ImageSize>
rm.Omega.Kernel: Hdr:CPU.ARM600
rm.Omega.Kernel: Hdr:IO.IOMDL
rm.Omega.Kernel: Hdr:IO.IOMD
rm.Omega.Kernel: Hdr:MEMM.ARM600
rm.Omega.Kernel: Hdr:VIDC.VIDC20
rm.Omega.Kernel: Version
rm.Omega.Kernel: Hdr:CMOS
rm.Omega.Kernel: Hdr:Heap
rm.Omega.Kernel: Hdr:PublicWS
rm.Omega.Kernel: Hdr:KernelWS
rm.Omega.Kernel: Hdr:Services
rm.Omega.Kernel: Hdr:FSNumbers
rm.Omega.Kernel: Hdr:HighFSI
rm.Omega.Kernel: Hdr:NewErrors
rm.Omega.Kernel: Hdr:Proc
rm.Omega.Kernel: Hdr:Sprite
rm.Omega.Kernel: Hdr:KeyWS
rm.Omega.Kernel: Hdr:RS423
rm.Omega.Kernel: Hdr:ModHand
rm.Omega.Kernel: Hdr:Variables
rm.Omega.Kernel: Hdr:EnvNumbers
rm.Omega.Kernel: Hdr:UpCall
rm.Omega.Kernel: Hdr:Sound
rm.Omega.Kernel: Hdr:Pointer
rm.Omega.Kernel: Hdr:Podule
rm.Omega.Kernel: Hdr:VduExt
rm.Omega.Kernel: Hdr:Buffer
rm.Omega.Kernel: Hdr:Font
rm.Omega.Kernel: Hdr:DevNos
rm.Omega.Kernel: Hdr:Territory
rm.Omega.Kernel: Hdr:Portable
rm.Omega.Kernel: Hdr:MsgTrans
rm.Omega.Kernel: Hdr:PaletteV
rm.Omega.Kernel: Hdr:Wimp
rm.Omega.Kernel: Hdr:ColourTran
rm.Omega.Kernel: Hdr:Debug
rm.Omega.Kernel: s.PMF.DEF
rm.Omega.Kernel: s.Copro15ops
rm.Omega.Kernel: s.Kernel
rm.Omega.Kernel: s.Morris
rm.Omega.Kernel: s.NewIRQs
rm.Omega.Kernel: s.Oscli
rm.Omega.Kernel: s.SysComms
rm.Omega.Kernel: s.MosDict
rm.Omega.Kernel: s.TMOSHelp
rm.Omega.Kernel: s.HeapMan
rm.Omega.Kernel: s.ModHand
rm.Omega.Kernel: s.Unsqueeze
rm.Omega.Kernel: s.ArthurSWIs
rm.Omega.Kernel: s.ChangeDyn
rm.Omega.Kernel: s.Arthur2
rm.Omega.Kernel: s.Utility
rm.Omega.Kernel: s.MoreComms
rm.Omega.Kernel: s.Convrsions
rm.Omega.Kernel: s.MoreSWIs
rm.Omega.Kernel: s.ExtraSWIs
rm.Omega.Kernel: s.HeapSort
rm.Omega.Kernel: s.Arthur3
rm.Omega.Kernel: s.SWINaming
rm.Omega.Kernel: s.TickEvents
rm.Omega.Kernel: s.KbdResPC
rm.Omega.Kernel: s.NewReset
rm.Omega.Kernel: s.MsgCode
rm.Omega.Kernel: s.Middle
rm.Omega.Kernel: s.Super1
rm.Omega.Kernel: s.ARM600
rm.Omega.Kernel: s.MemInfo
rm.Omega.Kernel: s.vdu.VduDriver
rm.Omega.Kernel: s.vdu.VduDecl
rm.Omega.Kernel: s.vdu.VduGrafDec
rm.Omega.Kernel: s.vdu.VduModes
rm.Omega.Kernel: s.vdu.VduSWIs
rm.Omega.Kernel: s.vdu.VduPalette
rm.Omega.Kernel: s.Vdu.VduPal20
rm.Omega.Kernel: s.vdu.VduPlot
rm.Omega.Kernel: s.vdu.VduGrafA
rm.Omega.Kernel: s.vdu.VduGrafB
rm.Omega.Kernel: s.vdu.VduGrafC
rm.Omega.Kernel: s.vdu.VduGrafD
rm.Omega.Kernel: s.vdu.VduGrafE
rm.Omega.Kernel: s.vdu.VduGrafF
rm.Omega.Kernel: s.vdu.VduGrafG
rm.Omega.Kernel: s.vdu.VduGrafH
rm.Omega.Kernel: s.vdu.VduGrafI
rm.Omega.Kernel: s.vdu.VduGrafJ
rm.Omega.Kernel: s.vdu.VduGrafK
rm.Omega.Kernel: s.vdu.VduGrafL
rm.Omega.Kernel: s.vdu.VduWrch
rm.Omega.Kernel: s.vdu.Vdu23
rm.Omega.Kernel: s.vdu.VduPointer
rm.Omega.Kernel: s.vdu.Vdu5
rm.Omega.Kernel: s.vdu.VduCurSoft
rm.Omega.Kernel: s.vdu.VduTTX
rm.Omega.Kernel: s.vdu.VduFontL1
rm.Omega.Kernel: s.PMF.osinit
rm.Omega.Kernel: s.PMF.oseven
rm.Omega.Kernel: s.PMF.osbyte
rm.Omega.Kernel: s.PMF.osword
rm.Omega.Kernel: s.PMF.realtime
rm.Omega.Kernel: s.PMF.convdate
rm.Omega.Kernel: s.PMF.i2cutils
rm.Omega.Kernel: s.PMF.oswrch
rm.Omega.Kernel: s.PMF.buffer
rm.Omega.Kernel: s.PMF.key
rm.Omega.Kernel: s.PMF.mouse
rm.Omega.Kernel: s.AMBControl.AMB
rm.Omega.Kernel: s.AMBControl.Options
rm.Omega.Kernel: s.AMBControl.Workspace
rm.Omega.Kernel: s.AMBControl.main
rm.Omega.Kernel: s.AMBControl.allocate
rm.Omega.Kernel: s.AMBControl.deallocate
rm.Omega.Kernel: s.AMBControl.growshrink
rm.Omega.Kernel: s.AMBControl.mapslot
rm.Omega.Kernel: s.AMBControl.mapsome
rm.Omega.Kernel: s.AMBControl.readinfo
rm.Omega.Kernel: s.AMBControl.growp
rm.Omega.Kernel: s.AMBControl.shrinkp
rm.Omega.Kernel: s.AMBControl.service
rm.Omega.Kernel: s.AMBControl.Memory
rm.Omega.Kernel: s.AMBControl.memmap
rm.Morris.Kernel: Hdr:ListOpts
rm.Morris.Kernel: Hdr:Macros
rm.Morris.Kernel: Hdr:System
rm.Morris.Kernel: Hdr:SWIs
rm.Morris.Kernel: Hdr:CPU.Generic26
rm.Morris.Kernel: Hdr:IO.GenericIO
rm.Morris.Kernel: Hdr:RISCOS
rm.Morris.Kernel: Hdr:Machine.<Machine>
rm.Morris.Kernel: Hdr:ImageSize.<ImageSize>
rm.Morris.Kernel: Hdr:CPU.ARM600
rm.Morris.Kernel: Hdr:IO.IOMDL
rm.Morris.Kernel: Hdr:IO.IOMD
rm.Morris.Kernel: Hdr:MEMM.ARM600
rm.Morris.Kernel: Hdr:VIDC.VIDC20
rm.Morris.Kernel: Version
rm.Morris.Kernel: Hdr:CMOS
rm.Morris.Kernel: Hdr:Heap
rm.Morris.Kernel: Hdr:PublicWS
rm.Morris.Kernel: Hdr:KernelWS
rm.Morris.Kernel: Hdr:Services
rm.Morris.Kernel: Hdr:FSNumbers
rm.Morris.Kernel: Hdr:HighFSI
rm.Morris.Kernel: Hdr:NewErrors
rm.Morris.Kernel: Hdr:Proc
rm.Morris.Kernel: Hdr:Sprite
rm.Morris.Kernel: Hdr:KeyWS
rm.Morris.Kernel: Hdr:RS423
rm.Morris.Kernel: Hdr:ModHand
rm.Morris.Kernel: Hdr:Variables
rm.Morris.Kernel: Hdr:EnvNumbers
rm.Morris.Kernel: Hdr:UpCall
rm.Morris.Kernel: Hdr:Sound
rm.Morris.Kernel: Hdr:Pointer
rm.Morris.Kernel: Hdr:Podule
rm.Morris.Kernel: Hdr:VduExt
rm.Morris.Kernel: Hdr:Buffer
rm.Morris.Kernel: Hdr:Font
rm.Morris.Kernel: Hdr:DevNos
rm.Morris.Kernel: Hdr:Territory
rm.Morris.Kernel: Hdr:Portable
rm.Morris.Kernel: Hdr:MsgTrans
rm.Morris.Kernel: Hdr:PaletteV
rm.Morris.Kernel: Hdr:Wimp
rm.Morris.Kernel: Hdr:ColourTran
rm.Morris.Kernel: Hdr:Debug
rm.Morris.Kernel: s.PMF.DEF
rm.Morris.Kernel: s.Copro15ops
rm.Morris.Kernel: s.Kernel
rm.Morris.Kernel: s.Morris
rm.Morris.Kernel: s.NewIRQs
rm.Morris.Kernel: s.Oscli
rm.Morris.Kernel: s.SysComms
rm.Morris.Kernel: s.MosDict
rm.Morris.Kernel: s.TMOSHelp
rm.Morris.Kernel: s.HeapMan
rm.Morris.Kernel: s.ModHand
rm.Morris.Kernel: s.Unsqueeze
rm.Morris.Kernel: s.ArthurSWIs
rm.Morris.Kernel: s.ChangeDyn
rm.Morris.Kernel: s.Arthur2
rm.Morris.Kernel: s.Utility
rm.Morris.Kernel: s.MoreComms
rm.Morris.Kernel: s.Convrsions
rm.Morris.Kernel: s.MoreSWIs
rm.Morris.Kernel: s.ExtraSWIs
rm.Morris.Kernel: s.HeapSort
rm.Morris.Kernel: s.Arthur3
rm.Morris.Kernel: s.SWINaming
rm.Morris.Kernel: s.TickEvents
rm.Morris.Kernel: s.KbdResPC
rm.Morris.Kernel: s.NewReset
rm.Morris.Kernel: s.MsgCode
rm.Morris.Kernel: s.Middle
rm.Morris.Kernel: s.Super1
rm.Morris.Kernel: s.ARM600
rm.Morris.Kernel: s.MemInfo
rm.Morris.Kernel: s.vdu.VduDriver
rm.Morris.Kernel: s.vdu.VduDecl
rm.Morris.Kernel: s.vdu.VduGrafDec
rm.Morris.Kernel: s.vdu.VduModes
rm.Morris.Kernel: s.vdu.VduSWIs
rm.Morris.Kernel: s.vdu.VduPalette
rm.Morris.Kernel: s.Vdu.VduPal20
rm.Morris.Kernel: s.vdu.VduPlot
rm.Morris.Kernel: s.vdu.VduGrafA
rm.Morris.Kernel: s.vdu.VduGrafB
rm.Morris.Kernel: s.vdu.VduGrafC
rm.Morris.Kernel: s.vdu.VduGrafD
rm.Morris.Kernel: s.vdu.VduGrafE
rm.Morris.Kernel: s.vdu.VduGrafF
rm.Morris.Kernel: s.vdu.VduGrafG
rm.Morris.Kernel: s.vdu.VduGrafH
rm.Morris.Kernel: s.vdu.VduGrafI
rm.Morris.Kernel: s.vdu.VduGrafJ
rm.Morris.Kernel: s.vdu.VduGrafK
rm.Morris.Kernel: s.vdu.VduGrafL
rm.Morris.Kernel: s.vdu.VduWrch
rm.Morris.Kernel: s.vdu.Vdu23
rm.Morris.Kernel: s.vdu.VduPointer
rm.Morris.Kernel: s.vdu.Vdu5
rm.Morris.Kernel: s.vdu.VduCurSoft
rm.Morris.Kernel: s.vdu.VduTTX
rm.Morris.Kernel: s.vdu.VduFontL1
rm.Morris.Kernel: s.PMF.osinit
rm.Morris.Kernel: s.PMF.oseven
rm.Morris.Kernel: s.PMF.osbyte
rm.Morris.Kernel: s.PMF.osword
rm.Morris.Kernel: s.PMF.realtime
rm.Morris.Kernel: s.PMF.convdate
rm.Morris.Kernel: s.PMF.i2cutils
rm.Morris.Kernel: s.PMF.oswrch
rm.Morris.Kernel: s.PMF.buffer
rm.Morris.Kernel: s.PMF.key
rm.Morris.Kernel: s.PMF.mouse
rm.Morris.Kernel: s.AMBControl.AMB
rm.Morris.Kernel: s.AMBControl.Options
rm.Morris.Kernel: s.AMBControl.Workspace
rm.Morris.Kernel: s.AMBControl.main
rm.Morris.Kernel: s.AMBControl.allocate
rm.Morris.Kernel: s.AMBControl.deallocate
rm.Morris.Kernel: s.AMBControl.growshrink
rm.Morris.Kernel: s.AMBControl.mapslot
rm.Morris.Kernel: s.AMBControl.mapsome
rm.Morris.Kernel: s.AMBControl.readinfo
rm.Morris.Kernel: s.AMBControl.growp
rm.Morris.Kernel: s.AMBControl.shrinkp
rm.Morris.Kernel: s.AMBControl.service
rm.Morris.Kernel: s.AMBControl.Memory
rm.Morris.Kernel: s.AMBControl.memmap
@


4.3.2.1
log
@ 1 Simplify source by removing various long-standing compile flags
   and pre-Medusa h/w support

 2 Fix bug with Pages_Unsafe/Pages_Safe page moving for StrongARM
   (interrupt hole) - also better performance for StrongARM

 3 Improve perfromance of physical memory clear for StrongARM
   (make sure it uses burst write for STM)

 4 Suspend Chocolate task switching for StrongARM if SALDMIBbroken
   is TRUE
@
text
@a511 129
rm.Phoebe.Kernel: Hdr:ListOpts
rm.Phoebe.Kernel: Hdr:Macros
rm.Phoebe.Kernel: Hdr:System
rm.Phoebe.Kernel: Hdr:SWIs
rm.Phoebe.Kernel: Hdr:CPU.Generic26
rm.Phoebe.Kernel: Hdr:IO.GenericIO
rm.Phoebe.Kernel: Hdr:RISCOS
rm.Phoebe.Kernel: Hdr:Machine.<Machine>
rm.Phoebe.Kernel: Hdr:ImageSize.<ImageSize>
rm.Phoebe.Kernel: Hdr:CPU.ARM600
rm.Phoebe.Kernel: Hdr:IO.IOMDL
rm.Phoebe.Kernel: Hdr:IO.IOMD
rm.Phoebe.Kernel: Hdr:MEMM.ARM600
rm.Phoebe.Kernel: Hdr:VIDC.VIDC20
rm.Phoebe.Kernel: Version
rm.Phoebe.Kernel: Hdr:CMOS
rm.Phoebe.Kernel: Hdr:Heap
rm.Phoebe.Kernel: Hdr:PublicWS
rm.Phoebe.Kernel: Hdr:KernelWS
rm.Phoebe.Kernel: Hdr:Services
rm.Phoebe.Kernel: Hdr:FSNumbers
rm.Phoebe.Kernel: Hdr:HighFSI
rm.Phoebe.Kernel: Hdr:NewErrors
rm.Phoebe.Kernel: Hdr:Proc
rm.Phoebe.Kernel: Hdr:Sprite
rm.Phoebe.Kernel: Hdr:KeyWS
rm.Phoebe.Kernel: Hdr:RS423
rm.Phoebe.Kernel: Hdr:ModHand
rm.Phoebe.Kernel: Hdr:Variables
rm.Phoebe.Kernel: Hdr:EnvNumbers
rm.Phoebe.Kernel: Hdr:UpCall
rm.Phoebe.Kernel: Hdr:Sound
rm.Phoebe.Kernel: Hdr:Pointer
rm.Phoebe.Kernel: Hdr:Podule
rm.Phoebe.Kernel: Hdr:VduExt
rm.Phoebe.Kernel: Hdr:Buffer
rm.Phoebe.Kernel: Hdr:Font
rm.Phoebe.Kernel: Hdr:DevNos
rm.Phoebe.Kernel: Hdr:Territory
rm.Phoebe.Kernel: Hdr:Portable
rm.Phoebe.Kernel: Hdr:MsgTrans
rm.Phoebe.Kernel: Hdr:PaletteV
rm.Phoebe.Kernel: Hdr:Wimp
rm.Phoebe.Kernel: Hdr:ColourTran
rm.Phoebe.Kernel: Hdr:Debug
rm.Phoebe.Kernel: s.PMF.DEF
rm.Phoebe.Kernel: s.Copro15ops
rm.Phoebe.Kernel: s.Kernel
rm.Phoebe.Kernel: s.Morris
rm.Phoebe.Kernel: s.NewIRQs
rm.Phoebe.Kernel: s.Oscli
rm.Phoebe.Kernel: s.SysComms
rm.Phoebe.Kernel: s.MosDict
rm.Phoebe.Kernel: s.TMOSHelp
rm.Phoebe.Kernel: s.HeapMan
rm.Phoebe.Kernel: s.ModHand
rm.Phoebe.Kernel: s.Unsqueeze
rm.Phoebe.Kernel: s.ArthurSWIs
rm.Phoebe.Kernel: s.ChangeDyn
rm.Phoebe.Kernel: s.Arthur2
rm.Phoebe.Kernel: s.Utility
rm.Phoebe.Kernel: s.MoreComms
rm.Phoebe.Kernel: s.Convrsions
rm.Phoebe.Kernel: s.MoreSWIs
rm.Phoebe.Kernel: s.ExtraSWIs
rm.Phoebe.Kernel: s.HeapSort
rm.Phoebe.Kernel: s.Arthur3
rm.Phoebe.Kernel: s.SWINaming
rm.Phoebe.Kernel: s.TickEvents
rm.Phoebe.Kernel: s.KbdResPC
rm.Phoebe.Kernel: s.NewReset
rm.Phoebe.Kernel: s.MsgCode
rm.Phoebe.Kernel: s.Middle
rm.Phoebe.Kernel: s.Super1
rm.Phoebe.Kernel: s.ARM600
rm.Phoebe.Kernel: s.MemInfo
rm.Phoebe.Kernel: s.vdu.VduDriver
rm.Phoebe.Kernel: s.vdu.VduDecl
rm.Phoebe.Kernel: s.vdu.VduGrafDec
rm.Phoebe.Kernel: s.vdu.VduModes
rm.Phoebe.Kernel: s.vdu.VduSWIs
rm.Phoebe.Kernel: s.vdu.VduPalette
rm.Phoebe.Kernel: s.Vdu.VduPal20
rm.Phoebe.Kernel: s.vdu.VduPlot
rm.Phoebe.Kernel: s.vdu.VduGrafA
rm.Phoebe.Kernel: s.vdu.VduGrafB
rm.Phoebe.Kernel: s.vdu.VduGrafC
rm.Phoebe.Kernel: s.vdu.VduGrafD
rm.Phoebe.Kernel: s.vdu.VduGrafE
rm.Phoebe.Kernel: s.vdu.VduGrafF
rm.Phoebe.Kernel: s.vdu.VduGrafG
rm.Phoebe.Kernel: s.vdu.VduGrafH
rm.Phoebe.Kernel: s.vdu.VduGrafI
rm.Phoebe.Kernel: s.vdu.VduGrafJ
rm.Phoebe.Kernel: s.vdu.VduGrafK
rm.Phoebe.Kernel: s.vdu.VduGrafL
rm.Phoebe.Kernel: s.vdu.VduWrch
rm.Phoebe.Kernel: s.vdu.Vdu23
rm.Phoebe.Kernel: s.vdu.VduPointer
rm.Phoebe.Kernel: s.vdu.Vdu5
rm.Phoebe.Kernel: s.vdu.VduCurSoft
rm.Phoebe.Kernel: s.vdu.VduTTX
rm.Phoebe.Kernel: s.vdu.VduFontL1
rm.Phoebe.Kernel: s.PMF.osinit
rm.Phoebe.Kernel: s.PMF.oseven
rm.Phoebe.Kernel: s.PMF.osbyte
rm.Phoebe.Kernel: s.PMF.osword
rm.Phoebe.Kernel: s.PMF.realtime
rm.Phoebe.Kernel: s.PMF.convdate
rm.Phoebe.Kernel: s.PMF.i2cutils
rm.Phoebe.Kernel: s.PMF.oswrch
rm.Phoebe.Kernel: s.PMF.buffer
rm.Phoebe.Kernel: s.PMF.key
rm.Phoebe.Kernel: s.PMF.mouse
rm.Phoebe.Kernel: s.AMBControl.AMB
rm.Phoebe.Kernel: s.AMBControl.Options
rm.Phoebe.Kernel: s.AMBControl.Workspace
rm.Phoebe.Kernel: s.AMBControl.main
rm.Phoebe.Kernel: s.AMBControl.allocate
rm.Phoebe.Kernel: s.AMBControl.deallocate
rm.Phoebe.Kernel: s.AMBControl.growshrink
rm.Phoebe.Kernel: s.AMBControl.mapslot
rm.Phoebe.Kernel: s.AMBControl.mapsome
rm.Phoebe.Kernel: s.AMBControl.readinfo
rm.Phoebe.Kernel: s.AMBControl.growp
rm.Phoebe.Kernel: s.AMBControl.shrinkp
rm.Phoebe.Kernel: s.AMBControl.service
rm.Phoebe.Kernel: s.AMBControl.Memory
rm.Phoebe.Kernel: s.AMBControl.memmap
@


4.3.2.2
log
@ - reestablish ownership of RAMFS dynamic area by kernel; this may be
   switched out again later, if new RAMFS takes over ownership
 - make ChangeDynamicArea allow re-entrancy slightly earlier on a shrink;
   now allows re-enter after page moves but before calling any post-shrink
   handler; this should fix problem with RAMFS and new FileCore (that now
   itself uses dynamic areas); needs testing once we pull a ROM together
 - Fix following bugs:
    - (new) kernel was keeping modules on active service chains during
      call to their finalise, now temporarily delinks them, as the API
      says it should; symptom eg. Zap 1.39 fails to quit (module Zap)
    - (longstanding) *help in a taskwindow was very dangerous (eg quit
      window, run other *help, start new window can all take out OS,
      by fundamentally cracking MessageTrans); fix: *help now does not
      keep MessageTrans descriptor on SVC stack (swapped out on pre-empt),
      now has re-entrancy guard, gives 'busy' error if reentered; minor
      infelicity is that busy message may be given on new *help after
      abandoning old one in taskwindow, but the next *help will work
    - (longstanding) *time could occasionally give a scrambled message on
      first call in a taskwindow (caused by multiple use of a general
      buffer)
@
text
@d110 531
@


4.3.2.3
log
@Made the kernel control the layout of the free space map on the RAM disc,
which avoids the rmreinit ramfs on every size change of the disc.

Also increase RAM disc max size to 128M bytes.

Change is enabled by NewRAMFS switch.
@
text
@a109 131
rm.Phoebe.Kernel: Hdr:ListOpts
rm.Phoebe.Kernel: Hdr:Macros
rm.Phoebe.Kernel: Hdr:System
rm.Phoebe.Kernel: Hdr:SWIs
rm.Phoebe.Kernel: Hdr:CPU.Generic26
rm.Phoebe.Kernel: Hdr:IO.GenericIO
rm.Phoebe.Kernel: Hdr:RISCOS
rm.Phoebe.Kernel: Hdr:Machine.<Machine>
rm.Phoebe.Kernel: Hdr:ImageSize.<ImageSize>
rm.Phoebe.Kernel: Hdr:CPU.ARM600
rm.Phoebe.Kernel: Hdr:IO.IOMDL
rm.Phoebe.Kernel: Hdr:IO.IOMD
rm.Phoebe.Kernel: Hdr:MEMM.ARM600
rm.Phoebe.Kernel: Hdr:VIDC.VIDC20
rm.Phoebe.Kernel: Version
rm.Phoebe.Kernel: hdr:FileCore
rm.Phoebe.Kernel: hdr:RAMFS
rm.Phoebe.Kernel: Hdr:CMOS
rm.Phoebe.Kernel: Hdr:Heap
rm.Phoebe.Kernel: Hdr:PublicWS
rm.Phoebe.Kernel: Hdr:KernelWS
rm.Phoebe.Kernel: Hdr:Services
rm.Phoebe.Kernel: Hdr:FSNumbers
rm.Phoebe.Kernel: Hdr:HighFSI
rm.Phoebe.Kernel: Hdr:NewErrors
rm.Phoebe.Kernel: Hdr:Proc
rm.Phoebe.Kernel: Hdr:Sprite
rm.Phoebe.Kernel: Hdr:KeyWS
rm.Phoebe.Kernel: Hdr:RS423
rm.Phoebe.Kernel: Hdr:ModHand
rm.Phoebe.Kernel: Hdr:Variables
rm.Phoebe.Kernel: Hdr:EnvNumbers
rm.Phoebe.Kernel: Hdr:UpCall
rm.Phoebe.Kernel: Hdr:Sound
rm.Phoebe.Kernel: Hdr:Pointer
rm.Phoebe.Kernel: Hdr:Podule
rm.Phoebe.Kernel: Hdr:VduExt
rm.Phoebe.Kernel: Hdr:Buffer
rm.Phoebe.Kernel: Hdr:Font
rm.Phoebe.Kernel: Hdr:DevNos
rm.Phoebe.Kernel: Hdr:Territory
rm.Phoebe.Kernel: Hdr:Portable
rm.Phoebe.Kernel: Hdr:MsgTrans
rm.Phoebe.Kernel: Hdr:PaletteV
rm.Phoebe.Kernel: Hdr:Wimp
rm.Phoebe.Kernel: Hdr:ColourTran
rm.Phoebe.Kernel: Hdr:Debug
rm.Phoebe.Kernel: s.PMF.DEF
rm.Phoebe.Kernel: s.Copro15ops
rm.Phoebe.Kernel: s.Kernel
rm.Phoebe.Kernel: s.Morris
rm.Phoebe.Kernel: s.NewIRQs
rm.Phoebe.Kernel: s.Oscli
rm.Phoebe.Kernel: s.SysComms
rm.Phoebe.Kernel: s.MosDict
rm.Phoebe.Kernel: s.TMOSHelp
rm.Phoebe.Kernel: s.HeapMan
rm.Phoebe.Kernel: s.ModHand
rm.Phoebe.Kernel: s.Unsqueeze
rm.Phoebe.Kernel: s.ArthurSWIs
rm.Phoebe.Kernel: s.ChangeDyn
rm.Phoebe.Kernel: s.Arthur2
rm.Phoebe.Kernel: s.Utility
rm.Phoebe.Kernel: s.MoreComms
rm.Phoebe.Kernel: s.Convrsions
rm.Phoebe.Kernel: s.MoreSWIs
rm.Phoebe.Kernel: s.ExtraSWIs
rm.Phoebe.Kernel: s.HeapSort
rm.Phoebe.Kernel: s.Arthur3
rm.Phoebe.Kernel: s.SWINaming
rm.Phoebe.Kernel: s.TickEvents
rm.Phoebe.Kernel: s.KbdResPC
rm.Phoebe.Kernel: s.NewReset
rm.Phoebe.Kernel: s.MsgCode
rm.Phoebe.Kernel: s.Middle
rm.Phoebe.Kernel: s.Super1
rm.Phoebe.Kernel: s.ARM600
rm.Phoebe.Kernel: s.MemInfo
rm.Phoebe.Kernel: s.vdu.VduDriver
rm.Phoebe.Kernel: s.vdu.VduDecl
rm.Phoebe.Kernel: s.vdu.VduGrafDec
rm.Phoebe.Kernel: s.vdu.VduModes
rm.Phoebe.Kernel: s.vdu.VduSWIs
rm.Phoebe.Kernel: s.vdu.VduPalette
rm.Phoebe.Kernel: s.Vdu.VduPal20
rm.Phoebe.Kernel: s.vdu.VduPlot
rm.Phoebe.Kernel: s.vdu.VduGrafA
rm.Phoebe.Kernel: s.vdu.VduGrafB
rm.Phoebe.Kernel: s.vdu.VduGrafC
rm.Phoebe.Kernel: s.vdu.VduGrafD
rm.Phoebe.Kernel: s.vdu.VduGrafE
rm.Phoebe.Kernel: s.vdu.VduGrafF
rm.Phoebe.Kernel: s.vdu.VduGrafG
rm.Phoebe.Kernel: s.vdu.VduGrafH
rm.Phoebe.Kernel: s.vdu.VduGrafI
rm.Phoebe.Kernel: s.vdu.VduGrafJ
rm.Phoebe.Kernel: s.vdu.VduGrafK
rm.Phoebe.Kernel: s.vdu.VduGrafL
rm.Phoebe.Kernel: s.vdu.VduWrch
rm.Phoebe.Kernel: s.vdu.Vdu23
rm.Phoebe.Kernel: s.vdu.VduPointer
rm.Phoebe.Kernel: s.vdu.Vdu5
rm.Phoebe.Kernel: s.vdu.VduCurSoft
rm.Phoebe.Kernel: s.vdu.VduTTX
rm.Phoebe.Kernel: s.vdu.VduFontL1
rm.Phoebe.Kernel: s.PMF.osinit
rm.Phoebe.Kernel: s.PMF.oseven
rm.Phoebe.Kernel: s.PMF.osbyte
rm.Phoebe.Kernel: s.PMF.osword
rm.Phoebe.Kernel: s.PMF.realtime
rm.Phoebe.Kernel: s.PMF.convdate
rm.Phoebe.Kernel: s.PMF.i2cutils
rm.Phoebe.Kernel: s.PMF.oswrch
rm.Phoebe.Kernel: s.PMF.buffer
rm.Phoebe.Kernel: s.PMF.key
rm.Phoebe.Kernel: s.PMF.mouse
rm.Phoebe.Kernel: s.AMBControl.AMB
rm.Phoebe.Kernel: s.AMBControl.Options
rm.Phoebe.Kernel: s.AMBControl.Workspace
rm.Phoebe.Kernel: s.AMBControl.main
rm.Phoebe.Kernel: s.AMBControl.allocate
rm.Phoebe.Kernel: s.AMBControl.deallocate
rm.Phoebe.Kernel: s.AMBControl.growshrink
rm.Phoebe.Kernel: s.AMBControl.mapslot
rm.Phoebe.Kernel: s.AMBControl.mapsome
rm.Phoebe.Kernel: s.AMBControl.readinfo
rm.Phoebe.Kernel: s.AMBControl.growp
rm.Phoebe.Kernel: s.AMBControl.shrinkp
rm.Phoebe.Kernel: s.AMBControl.service
rm.Phoebe.Kernel: s.AMBControl.Memory
rm.Phoebe.Kernel: s.AMBControl.memmap
@


4.3.2.3.2.1
log
@Added export of Global/RISCOS.h from trunk
@
text
@a28 1
C_EXP_HDR = <cexport$dir>.Global.h
d33 1
a33 1
MKDIR   = mkdir -p
d55 1
a55 2
            ${EXP_HDR}.VduExt \
            ${C_EXP_HDR}.RISCOS
a107 4
        
${C_EXP_HDR}.RISCOS: hdr.RISCOS
	${MKDIR} ${C_EXP_HDR}
	perl Build:Hdr2H hdr.RISCOS $@@
@


4.3.2.3.2.2
log
@Merged previously uncommitted changes made by aglover for RISC OS Ltd CD.
Removed dynamic dependencies from Makefile.
@
text
@d116 131
@


4.2
log
@Kernel merged
@
text
@d254 129
a430 1
rm.Morris.Kernel: TestSrc.Begin
a431 11
rm.Morris.Kernel: TestSrc.ExtIO
rm.Morris.Kernel: TestSrc.ExtCmd
rm.Morris.Kernel: TestSrc.Mem1IOMD
rm.Morris.Kernel: TestSrc.Mem2
rm.Morris.Kernel: TestSrc.Mem3
rm.Morris.Kernel: TestSrc.Mem4
rm.Morris.Kernel: TestSrc.Mem5
rm.Morris.Kernel: TestSrc.Vidc
rm.Morris.Kernel: TestSrc.Ioc
rm.Morris.Kernel: TestSrc.Cmos
rm.Morris.Kernel: TestSrc.Arm3
a511 129
rm.Omega.Kernel: Hdr:ListOpts
rm.Omega.Kernel: Hdr:Macros
rm.Omega.Kernel: Hdr:System
rm.Omega.Kernel: Hdr:SWIs
rm.Omega.Kernel: Hdr:CPU.Generic26
rm.Omega.Kernel: Hdr:IO.GenericIO
rm.Omega.Kernel: Hdr:RISCOS
rm.Omega.Kernel: Hdr:Machine.<Machine>
rm.Omega.Kernel: Hdr:ImageSize.<ImageSize>
rm.Omega.Kernel: Hdr:CPU.ARM600
rm.Omega.Kernel: Hdr:IO.IOMDL
rm.Omega.Kernel: Hdr:IO.IOMD
rm.Omega.Kernel: Hdr:MEMM.ARM600
rm.Omega.Kernel: Hdr:VIDC.VIDC20
rm.Omega.Kernel: Version
rm.Omega.Kernel: Hdr:CMOS
rm.Omega.Kernel: Hdr:Heap
rm.Omega.Kernel: Hdr:PublicWS
rm.Omega.Kernel: Hdr:KernelWS
rm.Omega.Kernel: Hdr:Services
rm.Omega.Kernel: Hdr:FSNumbers
rm.Omega.Kernel: Hdr:HighFSI
rm.Omega.Kernel: Hdr:NewErrors
rm.Omega.Kernel: Hdr:Proc
rm.Omega.Kernel: Hdr:Sprite
rm.Omega.Kernel: Hdr:KeyWS
rm.Omega.Kernel: Hdr:RS423
rm.Omega.Kernel: Hdr:ModHand
rm.Omega.Kernel: Hdr:Variables
rm.Omega.Kernel: Hdr:EnvNumbers
rm.Omega.Kernel: Hdr:UpCall
rm.Omega.Kernel: Hdr:Sound
rm.Omega.Kernel: Hdr:Pointer
rm.Omega.Kernel: Hdr:Podule
rm.Omega.Kernel: Hdr:VduExt
rm.Omega.Kernel: Hdr:Buffer
rm.Omega.Kernel: Hdr:Font
rm.Omega.Kernel: Hdr:DevNos
rm.Omega.Kernel: Hdr:Territory
rm.Omega.Kernel: Hdr:Portable
rm.Omega.Kernel: Hdr:MsgTrans
rm.Omega.Kernel: Hdr:PaletteV
rm.Omega.Kernel: Hdr:Wimp
rm.Omega.Kernel: Hdr:ColourTran
rm.Omega.Kernel: Hdr:Debug
rm.Omega.Kernel: s.PMF.DEF
rm.Omega.Kernel: s.Copro15ops
rm.Omega.Kernel: s.Kernel
rm.Omega.Kernel: s.Morris
rm.Omega.Kernel: s.NewIRQs
rm.Omega.Kernel: s.Oscli
rm.Omega.Kernel: s.SysComms
rm.Omega.Kernel: s.MosDict
rm.Omega.Kernel: s.TMOSHelp
rm.Omega.Kernel: s.HeapMan
rm.Omega.Kernel: s.ModHand
rm.Omega.Kernel: s.Unsqueeze
rm.Omega.Kernel: s.ArthurSWIs
rm.Omega.Kernel: s.ChangeDyn
rm.Omega.Kernel: s.Arthur2
rm.Omega.Kernel: s.Utility
rm.Omega.Kernel: s.MoreComms
rm.Omega.Kernel: s.Convrsions
rm.Omega.Kernel: s.MoreSWIs
rm.Omega.Kernel: s.ExtraSWIs
rm.Omega.Kernel: s.HeapSort
rm.Omega.Kernel: s.Arthur3
rm.Omega.Kernel: s.SWINaming
rm.Omega.Kernel: s.TickEvents
rm.Omega.Kernel: s.KbdResPC
rm.Omega.Kernel: s.NewReset
rm.Omega.Kernel: s.MsgCode
rm.Omega.Kernel: s.Middle
rm.Omega.Kernel: s.Super1
rm.Omega.Kernel: s.ARM600
rm.Omega.Kernel: s.MemInfo
rm.Omega.Kernel: s.vdu.VduDriver
rm.Omega.Kernel: s.vdu.VduDecl
rm.Omega.Kernel: s.vdu.VduGrafDec
rm.Omega.Kernel: s.vdu.VduModes
rm.Omega.Kernel: s.vdu.VduSWIs
rm.Omega.Kernel: s.vdu.VduPalette
rm.Omega.Kernel: s.Vdu.VduPal20
rm.Omega.Kernel: s.vdu.VduPlot
rm.Omega.Kernel: s.vdu.VduGrafA
rm.Omega.Kernel: s.vdu.VduGrafB
rm.Omega.Kernel: s.vdu.VduGrafC
rm.Omega.Kernel: s.vdu.VduGrafD
rm.Omega.Kernel: s.vdu.VduGrafE
rm.Omega.Kernel: s.vdu.VduGrafF
rm.Omega.Kernel: s.vdu.VduGrafG
rm.Omega.Kernel: s.vdu.VduGrafH
rm.Omega.Kernel: s.vdu.VduGrafI
rm.Omega.Kernel: s.vdu.VduGrafJ
rm.Omega.Kernel: s.vdu.VduGrafK
rm.Omega.Kernel: s.vdu.VduGrafL
rm.Omega.Kernel: s.vdu.VduWrch
rm.Omega.Kernel: s.vdu.Vdu23
rm.Omega.Kernel: s.vdu.VduPointer
rm.Omega.Kernel: s.vdu.Vdu5
rm.Omega.Kernel: s.vdu.VduCurSoft
rm.Omega.Kernel: s.vdu.VduTTX
rm.Omega.Kernel: s.vdu.VduFontL1
rm.Omega.Kernel: s.PMF.osinit
rm.Omega.Kernel: s.PMF.oseven
rm.Omega.Kernel: s.PMF.osbyte
rm.Omega.Kernel: s.PMF.osword
rm.Omega.Kernel: s.PMF.realtime
rm.Omega.Kernel: s.PMF.convdate
rm.Omega.Kernel: s.PMF.i2cutils
rm.Omega.Kernel: s.PMF.oswrch
rm.Omega.Kernel: s.PMF.buffer
rm.Omega.Kernel: s.PMF.key
rm.Omega.Kernel: s.PMF.mouse
rm.Omega.Kernel: s.AMBControl.AMB
rm.Omega.Kernel: s.AMBControl.Options
rm.Omega.Kernel: s.AMBControl.Workspace
rm.Omega.Kernel: s.AMBControl.main
rm.Omega.Kernel: s.AMBControl.allocate
rm.Omega.Kernel: s.AMBControl.deallocate
rm.Omega.Kernel: s.AMBControl.growshrink
rm.Omega.Kernel: s.AMBControl.mapslot
rm.Omega.Kernel: s.AMBControl.mapsome
rm.Omega.Kernel: s.AMBControl.readinfo
rm.Omega.Kernel: s.AMBControl.growp
rm.Omega.Kernel: s.AMBControl.shrinkp
rm.Omega.Kernel: s.AMBControl.service
rm.Omega.Kernel: s.AMBControl.Memory
rm.Omega.Kernel: s.AMBControl.memmap
@


4.1
log
@Initial revision
@
text
@d110 144
a253 122
rm.Jordan.Kernel: Hdr:ListOpts
rm.Jordan.Kernel: Hdr:Macros
rm.Jordan.Kernel: Hdr:System
rm.Jordan.Kernel: Hdr:SWIs
rm.Jordan.Kernel: Hdr:CPU.Generic26
rm.Jordan.Kernel: Hdr:IO.GenericIO
rm.Jordan.Kernel: Hdr:RISCOS
rm.Jordan.Kernel: Hdr:Machine.<Machine>
rm.Jordan.Kernel: Hdr:CPU.ARM600
rm.Jordan.Kernel: Hdr:IO.IOMD
rm.Jordan.Kernel: Hdr:IO.IOMD
rm.Jordan.Kernel: Hdr:MEMM.ARM600
rm.Jordan.Kernel: Hdr:VIDC.VIDC20
rm.Jordan.Kernel: Version
rm.Jordan.Kernel: Hdr:CMOS
rm.Jordan.Kernel: Hdr:Heap
rm.Jordan.Kernel: Hdr:PublicWS
rm.Jordan.Kernel: Hdr:KernelWS
rm.Jordan.Kernel: Hdr:Services
rm.Jordan.Kernel: Hdr:FSNumbers
rm.Jordan.Kernel: Hdr:HighFSI
rm.Jordan.Kernel: Hdr:NewErrors
rm.Jordan.Kernel: Hdr:Proc
rm.Jordan.Kernel: Hdr:Sprite
rm.Jordan.Kernel: Hdr:KeyWS
rm.Jordan.Kernel: Hdr:RS423
rm.Jordan.Kernel: Hdr:ModHand
rm.Jordan.Kernel: Hdr:Variables
rm.Jordan.Kernel: Hdr:EnvNumbers
rm.Jordan.Kernel: Hdr:UpCall
rm.Jordan.Kernel: Hdr:Sound
rm.Jordan.Kernel: Hdr:Podule
rm.Jordan.Kernel: Hdr:VduExt
rm.Jordan.Kernel: Hdr:Buffer
rm.Jordan.Kernel: Hdr:Font
rm.Jordan.Kernel: Hdr:DevNos
rm.Jordan.Kernel: Hdr:Territory
rm.Jordan.Kernel: Hdr:Portable
rm.Jordan.Kernel: Hdr:MsgTrans
rm.Jordan.Kernel: Hdr:PaletteV
rm.Jordan.Kernel: Hdr:Wimp
rm.Jordan.Kernel: Hdr:ColourTran
rm.Jordan.Kernel: Hdr:Debug
rm.Jordan.Kernel: s.PMF.DEF
rm.Jordan.Kernel: s.Kernel
rm.Jordan.Kernel: TestSrc.Begin
rm.Jordan.Kernel: TestSrc.ExtIO
rm.Jordan.Kernel: TestSrc.ExtCmd
rm.Jordan.Kernel: TestSrc.Mem1IOMD
rm.Jordan.Kernel: TestSrc.Mem2
rm.Jordan.Kernel: TestSrc.Mem3
rm.Jordan.Kernel: TestSrc.Mem4
rm.Jordan.Kernel: TestSrc.Mem5
rm.Jordan.Kernel: TestSrc.Vidc
rm.Jordan.Kernel: TestSrc.Ioc
rm.Jordan.Kernel: TestSrc.Cmos
rm.Jordan.Kernel: TestSrc.Arm3
rm.Jordan.Kernel: s.NewIRQs
rm.Jordan.Kernel: s.Oscli
rm.Jordan.Kernel: s.SysComms
rm.Jordan.Kernel: s.MosDict
rm.Jordan.Kernel: s.TMOSHelp
rm.Jordan.Kernel: s.HeapMan
rm.Jordan.Kernel: s.ModHand
rm.Jordan.Kernel: s.Unsqueeze
rm.Jordan.Kernel: s.ArthurSWIs
rm.Jordan.Kernel: s.ChangeDyn
rm.Jordan.Kernel: s.Arthur2
rm.Jordan.Kernel: s.Utility
rm.Jordan.Kernel: s.MoreComms
rm.Jordan.Kernel: s.Convrsions
rm.Jordan.Kernel: s.MoreSWIs
rm.Jordan.Kernel: s.ExtraSWIs
rm.Jordan.Kernel: s.HeapSort
rm.Jordan.Kernel: s.Arthur3
rm.Jordan.Kernel: s.SWINaming
rm.Jordan.Kernel: s.TickEvents
rm.Jordan.Kernel: s.KbdResPC
rm.Jordan.Kernel: s.NewReset
rm.Jordan.Kernel: s.MsgCode
rm.Jordan.Kernel: s.Middle
rm.Jordan.Kernel: s.Super1
rm.Jordan.Kernel: s.ARM600
rm.Jordan.Kernel: s.MemInfo
rm.Jordan.Kernel: s.vdu.VduDriver
rm.Jordan.Kernel: s.vdu.VduDecl
rm.Jordan.Kernel: s.vdu.VduGrafDec
rm.Jordan.Kernel: s.vdu.VduModes
rm.Jordan.Kernel: s.vdu.VduSWIs
rm.Jordan.Kernel: s.vdu.VduPalette
rm.Jordan.Kernel: s.Vdu.VduPal20
rm.Jordan.Kernel: s.vdu.VduPlot
rm.Jordan.Kernel: s.vdu.VduGrafA
rm.Jordan.Kernel: s.vdu.VduGrafB
rm.Jordan.Kernel: s.vdu.VduGrafC
rm.Jordan.Kernel: s.vdu.VduGrafD
rm.Jordan.Kernel: s.vdu.VduGrafE
rm.Jordan.Kernel: s.vdu.VduGrafF
rm.Jordan.Kernel: s.vdu.VduGrafG
rm.Jordan.Kernel: s.vdu.VduGrafH
rm.Jordan.Kernel: s.vdu.VduGrafI
rm.Jordan.Kernel: s.vdu.VduGrafJ
rm.Jordan.Kernel: s.vdu.VduGrafK
rm.Jordan.Kernel: s.vdu.VduGrafL
rm.Jordan.Kernel: s.vdu.VduWrch
rm.Jordan.Kernel: s.vdu.Vdu23
rm.Jordan.Kernel: s.vdu.VduPointer
rm.Jordan.Kernel: s.vdu.Vdu5
rm.Jordan.Kernel: s.vdu.VduCurSoft
rm.Jordan.Kernel: s.vdu.VduTTX
rm.Jordan.Kernel: s.vdu.VduFontL1
rm.Jordan.Kernel: s.PMF.osinit
rm.Jordan.Kernel: s.PMF.oseven
rm.Jordan.Kernel: s.PMF.osbyte
rm.Jordan.Kernel: s.PMF.osword
rm.Jordan.Kernel: s.PMF.realtime
rm.Jordan.Kernel: s.PMF.convdate
rm.Jordan.Kernel: s.PMF.i2cutils
rm.Jordan.Kernel: s.PMF.oswrch
rm.Jordan.Kernel: s.PMF.buffer
rm.Jordan.Kernel: s.PMF.key
rm.Jordan.Kernel: s.PMF.mouse
d300 1
d380 144
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@d240 1
d242 1
a242 1
rm.Morris.Kernel: Hdr:IO.IOMD
d264 1
d279 1
d281 11
a356 254
rm.Falcon.Kernel: Hdr:ListOpts
rm.Falcon.Kernel: Hdr:Macros
rm.Falcon.Kernel: Hdr:System
rm.Falcon.Kernel: Hdr:SWIs
rm.Falcon.Kernel: Hdr:CPU.Generic26
rm.Falcon.Kernel: Hdr:IO.GenericIO
rm.Falcon.Kernel: Hdr:RISCOS
rm.Falcon.Kernel: Hdr:Machine.<Machine>
rm.Falcon.Kernel: Hdr:ImageSize.<ImageSize>
rm.Falcon.Kernel: Hdr:CPU.ARM600
rm.Falcon.Kernel: Hdr:IO.IOMDL
rm.Falcon.Kernel: Hdr:IO.IOMD
rm.Falcon.Kernel: Hdr:MEMM.ARM600
rm.Falcon.Kernel: Hdr:VIDC.VIDC20
rm.Falcon.Kernel: Version
rm.Falcon.Kernel: Hdr:CMOS
rm.Falcon.Kernel: Hdr:Heap
rm.Falcon.Kernel: Hdr:PublicWS
rm.Falcon.Kernel: Hdr:KernelWS
rm.Falcon.Kernel: Hdr:Services
rm.Falcon.Kernel: Hdr:FSNumbers
rm.Falcon.Kernel: Hdr:HighFSI
rm.Falcon.Kernel: Hdr:NewErrors
rm.Falcon.Kernel: Hdr:Proc
rm.Falcon.Kernel: Hdr:Sprite
rm.Falcon.Kernel: Hdr:KeyWS
rm.Falcon.Kernel: Hdr:RS423
rm.Falcon.Kernel: Hdr:ModHand
rm.Falcon.Kernel: Hdr:Variables
rm.Falcon.Kernel: Hdr:EnvNumbers
rm.Falcon.Kernel: Hdr:UpCall
rm.Falcon.Kernel: Hdr:Sound
rm.Falcon.Kernel: Hdr:Pointer
rm.Falcon.Kernel: Hdr:Podule
rm.Falcon.Kernel: Hdr:VduExt
rm.Falcon.Kernel: Hdr:Buffer
rm.Falcon.Kernel: Hdr:Font
rm.Falcon.Kernel: Hdr:DevNos
rm.Falcon.Kernel: Hdr:Territory
rm.Falcon.Kernel: Hdr:Portable
rm.Falcon.Kernel: Hdr:MsgTrans
rm.Falcon.Kernel: Hdr:PaletteV
rm.Falcon.Kernel: Hdr:Wimp
rm.Falcon.Kernel: Hdr:ColourTran
rm.Falcon.Kernel: Hdr:Debug
rm.Falcon.Kernel: s.PMF.DEF
rm.Falcon.Kernel: s.Kernel
rm.Falcon.Kernel: TestSrc.Begin
rm.Falcon.Kernel: s.Morris
rm.Falcon.Kernel: TestSrc.ExtIO
rm.Falcon.Kernel: TestSrc.ExtCmd
rm.Falcon.Kernel: TestSrc.Mem1IOMD
rm.Falcon.Kernel: TestSrc.Mem2
rm.Falcon.Kernel: TestSrc.Mem3
rm.Falcon.Kernel: TestSrc.Mem4
rm.Falcon.Kernel: TestSrc.Mem5
rm.Falcon.Kernel: TestSrc.Vidc
rm.Falcon.Kernel: TestSrc.Ioc
rm.Falcon.Kernel: TestSrc.Cmos
rm.Falcon.Kernel: TestSrc.Arm3
rm.Falcon.Kernel: s.NewIRQs
rm.Falcon.Kernel: s.Oscli
rm.Falcon.Kernel: s.SysComms
rm.Falcon.Kernel: s.MosDict
rm.Falcon.Kernel: s.TMOSHelp
rm.Falcon.Kernel: s.HeapMan
rm.Falcon.Kernel: s.ModHand
rm.Falcon.Kernel: s.Unsqueeze
rm.Falcon.Kernel: s.ArthurSWIs
rm.Falcon.Kernel: s.ChangeDyn
rm.Falcon.Kernel: s.Arthur2
rm.Falcon.Kernel: s.Utility
rm.Falcon.Kernel: s.MoreComms
rm.Falcon.Kernel: s.Convrsions
rm.Falcon.Kernel: s.MoreSWIs
rm.Falcon.Kernel: s.ExtraSWIs
rm.Falcon.Kernel: s.HeapSort
rm.Falcon.Kernel: s.Arthur3
rm.Falcon.Kernel: s.SWINaming
rm.Falcon.Kernel: s.TickEvents
rm.Falcon.Kernel: s.KbdResPC
rm.Falcon.Kernel: s.NewReset
rm.Falcon.Kernel: s.MsgCode
rm.Falcon.Kernel: s.Middle
rm.Falcon.Kernel: s.Super1
rm.Falcon.Kernel: s.ARM600
rm.Falcon.Kernel: s.MemInfo
rm.Falcon.Kernel: s.vdu.VduDriver
rm.Falcon.Kernel: s.vdu.VduDecl
rm.Falcon.Kernel: s.vdu.VduGrafDec
rm.Falcon.Kernel: s.vdu.VduModes
rm.Falcon.Kernel: s.vdu.VduSWIs
rm.Falcon.Kernel: s.vdu.VduPalette
rm.Falcon.Kernel: s.Vdu.VduPal20
rm.Falcon.Kernel: s.vdu.VduPlot
rm.Falcon.Kernel: s.vdu.VduGrafA
rm.Falcon.Kernel: s.vdu.VduGrafB
rm.Falcon.Kernel: s.vdu.VduGrafC
rm.Falcon.Kernel: s.vdu.VduGrafD
rm.Falcon.Kernel: s.vdu.VduGrafE
rm.Falcon.Kernel: s.vdu.VduGrafF
rm.Falcon.Kernel: s.vdu.VduGrafG
rm.Falcon.Kernel: s.vdu.VduGrafH
rm.Falcon.Kernel: s.vdu.VduGrafI
rm.Falcon.Kernel: s.vdu.VduGrafJ
rm.Falcon.Kernel: s.vdu.VduGrafK
rm.Falcon.Kernel: s.vdu.VduGrafL
rm.Falcon.Kernel: s.vdu.VduWrch
rm.Falcon.Kernel: s.vdu.Vdu23
rm.Falcon.Kernel: s.vdu.VduPointer
rm.Falcon.Kernel: s.vdu.Vdu5
rm.Falcon.Kernel: s.vdu.VduCurSoft
rm.Falcon.Kernel: s.vdu.VduTTX
rm.Falcon.Kernel: s.vdu.VduFontL1
rm.Falcon.Kernel: s.PMF.osinit
rm.Falcon.Kernel: s.PMF.oseven
rm.Falcon.Kernel: s.PMF.osbyte
rm.Falcon.Kernel: s.PMF.osword
rm.Falcon.Kernel: s.PMF.realtime
rm.Falcon.Kernel: s.PMF.convdate
rm.Falcon.Kernel: s.PMF.i2cutils
rm.Falcon.Kernel: s.PMF.oswrch
rm.Falcon.Kernel: s.PMF.buffer
rm.Falcon.Kernel: s.PMF.key
rm.Falcon.Kernel: s.PMF.mouse
rm.Omega.Kernel: Hdr:ListOpts
rm.Omega.Kernel: Hdr:Macros
rm.Omega.Kernel: Hdr:System
rm.Omega.Kernel: Hdr:SWIs
rm.Omega.Kernel: Hdr:CPU.Generic26
rm.Omega.Kernel: Hdr:IO.GenericIO
rm.Omega.Kernel: Hdr:RISCOS
rm.Omega.Kernel: Hdr:Machine.<Machine>
rm.Omega.Kernel: Hdr:ImageSize.<ImageSize>
rm.Omega.Kernel: Hdr:CPU.ARM600
rm.Omega.Kernel: Hdr:IO.IOMDL
rm.Omega.Kernel: Hdr:IO.IOMD
rm.Omega.Kernel: Hdr:MEMM.ARM600
rm.Omega.Kernel: Hdr:VIDC.VIDC20
rm.Omega.Kernel: Version
rm.Omega.Kernel: Hdr:CMOS
rm.Omega.Kernel: Hdr:Heap
rm.Omega.Kernel: Hdr:PublicWS
rm.Omega.Kernel: Hdr:KernelWS
rm.Omega.Kernel: Hdr:Services
rm.Omega.Kernel: Hdr:FSNumbers
rm.Omega.Kernel: Hdr:HighFSI
rm.Omega.Kernel: Hdr:NewErrors
rm.Omega.Kernel: Hdr:Proc
rm.Omega.Kernel: Hdr:Sprite
rm.Omega.Kernel: Hdr:KeyWS
rm.Omega.Kernel: Hdr:RS423
rm.Omega.Kernel: Hdr:ModHand
rm.Omega.Kernel: Hdr:Variables
rm.Omega.Kernel: Hdr:EnvNumbers
rm.Omega.Kernel: Hdr:UpCall
rm.Omega.Kernel: Hdr:Sound
rm.Omega.Kernel: Hdr:Pointer
rm.Omega.Kernel: Hdr:Podule
rm.Omega.Kernel: Hdr:VduExt
rm.Omega.Kernel: Hdr:Buffer
rm.Omega.Kernel: Hdr:Font
rm.Omega.Kernel: Hdr:DevNos
rm.Omega.Kernel: Hdr:Territory
rm.Omega.Kernel: Hdr:Portable
rm.Omega.Kernel: Hdr:MsgTrans
rm.Omega.Kernel: Hdr:PaletteV
rm.Omega.Kernel: Hdr:Wimp
rm.Omega.Kernel: Hdr:ColourTran
rm.Omega.Kernel: Hdr:Debug
rm.Omega.Kernel: s.PMF.DEF
rm.Omega.Kernel: s.Kernel
rm.Omega.Kernel: TestSrc.Begin
rm.Omega.Kernel: s.Morris
rm.Omega.Kernel: TestSrc.ExtIO
rm.Omega.Kernel: TestSrc.ExtCmd
rm.Omega.Kernel: TestSrc.ROMCard
rm.Omega.Kernel: TestSrc.Mem1IOMD
rm.Omega.Kernel: TestSrc.Mem2
rm.Omega.Kernel: TestSrc.Mem3
rm.Omega.Kernel: TestSrc.Mem4
rm.Omega.Kernel: TestSrc.Mem5
rm.Omega.Kernel: TestSrc.Vidc
rm.Omega.Kernel: TestSrc.Ioc
rm.Omega.Kernel: TestSrc.Cmos
rm.Omega.Kernel: TestSrc.Arm3
rm.Omega.Kernel: TestSrc.ToggleLED
rm.Omega.Kernel: TestSrc.LEDDelay
rm.Omega.Kernel: TestSrc.ShowIOMDRs
rm.Omega.Kernel: s.NewIRQs
rm.Omega.Kernel: s.Oscli
rm.Omega.Kernel: s.SysComms
rm.Omega.Kernel: s.MosDict
rm.Omega.Kernel: s.TMOSHelp
rm.Omega.Kernel: s.HeapMan
rm.Omega.Kernel: s.ModHand
rm.Omega.Kernel: s.Unsqueeze
rm.Omega.Kernel: s.ArthurSWIs
rm.Omega.Kernel: s.ChangeDyn
rm.Omega.Kernel: s.Arthur2
rm.Omega.Kernel: s.Utility
rm.Omega.Kernel: s.MoreComms
rm.Omega.Kernel: s.Convrsions
rm.Omega.Kernel: s.MoreSWIs
rm.Omega.Kernel: s.ExtraSWIs
rm.Omega.Kernel: s.HeapSort
rm.Omega.Kernel: s.Arthur3
rm.Omega.Kernel: s.SWINaming
rm.Omega.Kernel: s.TickEvents
rm.Omega.Kernel: s.KbdResPC
rm.Omega.Kernel: s.NewReset
rm.Omega.Kernel: s.MsgCode
rm.Omega.Kernel: s.Middle
rm.Omega.Kernel: s.Super1
rm.Omega.Kernel: s.ARM600
rm.Omega.Kernel: s.MemInfo
rm.Omega.Kernel: s.vdu.VduDriver
rm.Omega.Kernel: s.vdu.VduDecl
rm.Omega.Kernel: s.vdu.VduGrafDec
rm.Omega.Kernel: s.vdu.VduModes
rm.Omega.Kernel: s.vdu.VduSWIs
rm.Omega.Kernel: s.vdu.VduPalette
rm.Omega.Kernel: s.Vdu.VduPal20
rm.Omega.Kernel: s.vdu.VduPlot
rm.Omega.Kernel: s.vdu.VduGrafA
rm.Omega.Kernel: s.vdu.VduGrafB
rm.Omega.Kernel: s.vdu.VduGrafC
rm.Omega.Kernel: s.vdu.VduGrafD
rm.Omega.Kernel: s.vdu.VduGrafE
rm.Omega.Kernel: s.vdu.VduGrafF
rm.Omega.Kernel: s.vdu.VduGrafG
rm.Omega.Kernel: s.vdu.VduGrafH
rm.Omega.Kernel: s.vdu.VduGrafI
rm.Omega.Kernel: s.vdu.VduGrafJ
rm.Omega.Kernel: s.vdu.VduGrafK
rm.Omega.Kernel: s.vdu.VduGrafL
rm.Omega.Kernel: s.vdu.VduWrch
rm.Omega.Kernel: s.vdu.Vdu23
rm.Omega.Kernel: s.vdu.VduPointer
rm.Omega.Kernel: s.vdu.Vdu5
rm.Omega.Kernel: s.vdu.VduCurSoft
rm.Omega.Kernel: s.vdu.VduTTX
rm.Omega.Kernel: s.vdu.VduFontL1
rm.Omega.Kernel: s.PMF.osinit
rm.Omega.Kernel: s.PMF.oseven
rm.Omega.Kernel: s.PMF.osbyte
rm.Omega.Kernel: s.PMF.osword
rm.Omega.Kernel: s.PMF.realtime
rm.Omega.Kernel: s.PMF.convdate
rm.Omega.Kernel: s.PMF.i2cutils
rm.Omega.Kernel: s.PMF.oswrch
rm.Omega.Kernel: s.PMF.buffer
rm.Omega.Kernel: s.PMF.key
rm.Omega.Kernel: s.PMF.mouse
@


4.1.7.2
log
@Command line messages removed
@
text
@d75 1
a75 4
resources: resources-${CMDHELP}
        @@echo ${COMPONENT}: resource files copied

resources_common:
d78 1
a78 6

resources-None: resources_common
	@@

resources-: resources_common
	print Resources.${LOCALE}.CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }
@


4.1.7.3
log
@Upped version.
@
text
@d118 487
@


4.1.7.4
log
@Added support for 2K EEPROM.
@
text
@a117 130
rm.Boca.Kernel: Hdr:ListOpts
rm.Boca.Kernel: Hdr:Macros
rm.Boca.Kernel: Hdr:System
rm.Boca.Kernel: Hdr:SWIs
rm.Boca.Kernel: Hdr:CPU.Generic26
rm.Boca.Kernel: Hdr:IO.GenericIO
rm.Boca.Kernel: Hdr:RISCOS
rm.Boca.Kernel: Hdr:Machine.<Machine>
rm.Boca.Kernel: Hdr:Machine.Machine
rm.Boca.Kernel: Hdr:ImageSize.<ImageSize>
rm.Boca.Kernel: Hdr:CPU.ARM600
rm.Boca.Kernel: Hdr:IO.IOMDL
rm.Boca.Kernel: Hdr:IO.IOMD
rm.Boca.Kernel: Hdr:MEMM.ARM600
rm.Boca.Kernel: Hdr:VIDC.VIDC20
rm.Boca.Kernel: Version
rm.Boca.Kernel: Hdr:CMOS
rm.Boca.Kernel: Hdr:Heap
rm.Boca.Kernel: Hdr:PublicWS
rm.Boca.Kernel: Hdr:KernelWS
rm.Boca.Kernel: Hdr:Services
rm.Boca.Kernel: Hdr:FSNumbers
rm.Boca.Kernel: Hdr:HighFSI
rm.Boca.Kernel: Hdr:NewErrors
rm.Boca.Kernel: Hdr:Proc
rm.Boca.Kernel: Hdr:Sprite
rm.Boca.Kernel: Hdr:KeyWS
rm.Boca.Kernel: Hdr:RS423
rm.Boca.Kernel: Hdr:ModHand
rm.Boca.Kernel: Hdr:Variables
rm.Boca.Kernel: Hdr:EnvNumbers
rm.Boca.Kernel: Hdr:UpCall
rm.Boca.Kernel: Hdr:Sound
rm.Boca.Kernel: Hdr:Pointer
rm.Boca.Kernel: Hdr:Podule
rm.Boca.Kernel: Hdr:VduExt
rm.Boca.Kernel: Hdr:Buffer
rm.Boca.Kernel: Hdr:Font
rm.Boca.Kernel: Hdr:DevNos
rm.Boca.Kernel: Hdr:Territory
rm.Boca.Kernel: Hdr:Portable
rm.Boca.Kernel: Hdr:MsgTrans
rm.Boca.Kernel: Hdr:PaletteV
rm.Boca.Kernel: Hdr:Wimp
rm.Boca.Kernel: Hdr:ColourTran
rm.Boca.Kernel: Hdr:Debug
rm.Boca.Kernel: s.PMF.DEF
rm.Boca.Kernel: s.Kernel
rm.Boca.Kernel: TestSrc.Begin
rm.Boca.Kernel: s.Morris
rm.Boca.Kernel: TestSrc.ExtIO
rm.Boca.Kernel: TestSrc.ExtCmd
rm.Boca.Kernel: TestSrc.ROMCard
rm.Boca.Kernel: TestSrc.Mem1IOMD
rm.Boca.Kernel: TestSrc.Mem2
rm.Boca.Kernel: TestSrc.Mem3
rm.Boca.Kernel: TestSrc.Mem4
rm.Boca.Kernel: TestSrc.Mem5
rm.Boca.Kernel: TestSrc.Vidc
rm.Boca.Kernel: TestSrc.Ioc
rm.Boca.Kernel: TestSrc.Cmos
rm.Boca.Kernel: TestSrc.Arm3
rm.Boca.Kernel: TestSrc.ToggleLED
rm.Boca.Kernel: TestSrc.LEDDelay
rm.Boca.Kernel: TestSrc.ShowIOMDRs
rm.Boca.Kernel: s.NewIRQs
rm.Boca.Kernel: s.Oscli
rm.Boca.Kernel: s.SysComms
rm.Boca.Kernel: s.MosDict
rm.Boca.Kernel: s.TMOSHelp
rm.Boca.Kernel: s.HeapMan
rm.Boca.Kernel: s.ModHand
rm.Boca.Kernel: s.Unsqueeze
rm.Boca.Kernel: s.ArthurSWIs
rm.Boca.Kernel: s.ChangeDyn
rm.Boca.Kernel: s.Arthur2
rm.Boca.Kernel: s.Utility
rm.Boca.Kernel: s.MoreComms
rm.Boca.Kernel: s.Convrsions
rm.Boca.Kernel: s.MoreSWIs
rm.Boca.Kernel: s.ExtraSWIs
rm.Boca.Kernel: s.HeapSort
rm.Boca.Kernel: s.Arthur3
rm.Boca.Kernel: s.SWINaming
rm.Boca.Kernel: s.TickEvents
rm.Boca.Kernel: s.KbdResPC
rm.Boca.Kernel: s.NewReset
rm.Boca.Kernel: s.MsgCode
rm.Boca.Kernel: s.Middle
rm.Boca.Kernel: s.Super1
rm.Boca.Kernel: s.ARM600
rm.Boca.Kernel: s.MemInfo
rm.Boca.Kernel: s.vdu.VduDriver
rm.Boca.Kernel: s.vdu.VduDecl
rm.Boca.Kernel: s.vdu.VduGrafDec
rm.Boca.Kernel: s.vdu.VduModes
rm.Boca.Kernel: s.vdu.VduSWIs
rm.Boca.Kernel: s.vdu.VduPalette
rm.Boca.Kernel: s.Vdu.VduPal20
rm.Boca.Kernel: s.vdu.VduPlot
rm.Boca.Kernel: s.vdu.VduGrafA
rm.Boca.Kernel: s.vdu.VduGrafB
rm.Boca.Kernel: s.vdu.VduGrafC
rm.Boca.Kernel: s.vdu.VduGrafD
rm.Boca.Kernel: s.vdu.VduGrafE
rm.Boca.Kernel: s.vdu.VduGrafF
rm.Boca.Kernel: s.vdu.VduGrafG
rm.Boca.Kernel: s.vdu.VduGrafH
rm.Boca.Kernel: s.vdu.VduGrafI
rm.Boca.Kernel: s.vdu.VduGrafJ
rm.Boca.Kernel: s.vdu.VduGrafK
rm.Boca.Kernel: s.vdu.VduGrafL
rm.Boca.Kernel: s.vdu.VduWrch
rm.Boca.Kernel: s.vdu.Vdu23
rm.Boca.Kernel: s.vdu.VduPointer
rm.Boca.Kernel: s.vdu.Vdu5
rm.Boca.Kernel: s.vdu.VduCurSoft
rm.Boca.Kernel: s.vdu.VduTTX
rm.Boca.Kernel: s.vdu.VduFontL1
rm.Boca.Kernel: s.PMF.osinit
rm.Boca.Kernel: s.PMF.oseven
rm.Boca.Kernel: s.PMF.osbyte
rm.Boca.Kernel: s.PMF.osword
rm.Boca.Kernel: s.PMF.realtime
rm.Boca.Kernel: s.PMF.convdate
rm.Boca.Kernel: s.PMF.i2cutils
rm.Boca.Kernel: s.PMF.oswrch
rm.Boca.Kernel: s.PMF.buffer
rm.Boca.Kernel: s.PMF.key
rm.Boca.Kernel: s.PMF.mouse
@


4.1.7.5
log
@Make Messages system specific.
@
text
@d80 1
a80 1
        ${CP} Resources.${LOCALE}.<System>.Messages  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
@


4.1.7.6
log
@Added SWI OS_VIDCDivider, and vdu variable PixelRate for better video mode
support.  Fixed to build for Risc PC.
@
text
@d80 1
a80 4
        Set Kernel$Messages Resources.${LOCALE}.Messages
        IfThere Resources.${LOCALE}.<UserIF>.Messages Then Set Kernel$Messages Resources.${LOCALE}.<UserIF>.Messages
        ${CP} <Kernel$Messages>  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
        UnSet Kernel$Messages
@


4.1.7.7
log
@Makefile modified to use LocalRes$Path.
Kernel no longer assumes CMOS is corrupt if FontSize > 128K.
@
text
@d80 2
a81 3
        Set Kernel$Messages LocalRes:Messages
        IfThere LocalRes:<UserIF>.Messages Then Set Kernel$Messages LocalRes:<UserIF>.Messages
        TokenCheck LocalRes:<UserIF>.Messages
d89 1
a89 2
        TokenCheck LocalRes:Messages
        print LocalRes:CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }
d121 130
@


4.1.5.1
log
@Import from SrcFiler
@
text
@d240 1
d242 1
a242 1
rm.Morris.Kernel: Hdr:IO.IOMD
d264 1
d279 1
d281 11
a356 250
rm.Falcon.Kernel: Hdr:ListOpts
rm.Falcon.Kernel: Hdr:Macros
rm.Falcon.Kernel: Hdr:System
rm.Falcon.Kernel: Hdr:SWIs
rm.Falcon.Kernel: Hdr:CPU.Generic26
rm.Falcon.Kernel: Hdr:IO.GenericIO
rm.Falcon.Kernel: Hdr:RISCOS
rm.Falcon.Kernel: Hdr:Machine.<Machine>
rm.Falcon.Kernel: Hdr:ImageSize.<ImageSize>
rm.Falcon.Kernel: Hdr:CPU.ARM600
rm.Falcon.Kernel: Hdr:IO.IOMDL
rm.Falcon.Kernel: Hdr:IO.IOMD
rm.Falcon.Kernel: Hdr:MEMM.ARM600
rm.Falcon.Kernel: Hdr:VIDC.VIDC20
rm.Falcon.Kernel: Version
rm.Falcon.Kernel: Hdr:CMOS
rm.Falcon.Kernel: Hdr:Heap
rm.Falcon.Kernel: Hdr:PublicWS
rm.Falcon.Kernel: Hdr:KernelWS
rm.Falcon.Kernel: Hdr:Services
rm.Falcon.Kernel: Hdr:FSNumbers
rm.Falcon.Kernel: Hdr:HighFSI
rm.Falcon.Kernel: Hdr:NewErrors
rm.Falcon.Kernel: Hdr:Proc
rm.Falcon.Kernel: Hdr:Sprite
rm.Falcon.Kernel: Hdr:KeyWS
rm.Falcon.Kernel: Hdr:RS423
rm.Falcon.Kernel: Hdr:ModHand
rm.Falcon.Kernel: Hdr:Variables
rm.Falcon.Kernel: Hdr:EnvNumbers
rm.Falcon.Kernel: Hdr:UpCall
rm.Falcon.Kernel: Hdr:Sound
rm.Falcon.Kernel: Hdr:Pointer
rm.Falcon.Kernel: Hdr:Podule
rm.Falcon.Kernel: Hdr:VduExt
rm.Falcon.Kernel: Hdr:Buffer
rm.Falcon.Kernel: Hdr:Font
rm.Falcon.Kernel: Hdr:DevNos
rm.Falcon.Kernel: Hdr:Territory
rm.Falcon.Kernel: Hdr:Portable
rm.Falcon.Kernel: Hdr:MsgTrans
rm.Falcon.Kernel: Hdr:PaletteV
rm.Falcon.Kernel: Hdr:Wimp
rm.Falcon.Kernel: Hdr:ColourTran
rm.Falcon.Kernel: Hdr:Debug
rm.Falcon.Kernel: s.PMF.DEF
rm.Falcon.Kernel: s.Kernel
rm.Falcon.Kernel: TestSrc.Begin
rm.Falcon.Kernel: s.Morris
rm.Falcon.Kernel: TestSrc.ExtIO
rm.Falcon.Kernel: TestSrc.ExtCmd
rm.Falcon.Kernel: TestSrc.Mem1IOMD
rm.Falcon.Kernel: TestSrc.Mem2
rm.Falcon.Kernel: TestSrc.Mem3
rm.Falcon.Kernel: TestSrc.Mem4
rm.Falcon.Kernel: TestSrc.Mem5
rm.Falcon.Kernel: TestSrc.Vidc
rm.Falcon.Kernel: TestSrc.Ioc
rm.Falcon.Kernel: TestSrc.Cmos
rm.Falcon.Kernel: TestSrc.Arm3
rm.Falcon.Kernel: s.NewIRQs
rm.Falcon.Kernel: s.Oscli
rm.Falcon.Kernel: s.SysComms
rm.Falcon.Kernel: s.MosDict
rm.Falcon.Kernel: s.TMOSHelp
rm.Falcon.Kernel: s.HeapMan
rm.Falcon.Kernel: s.ModHand
rm.Falcon.Kernel: s.Unsqueeze
rm.Falcon.Kernel: s.ArthurSWIs
rm.Falcon.Kernel: s.ChangeDyn
rm.Falcon.Kernel: s.Arthur2
rm.Falcon.Kernel: s.Utility
rm.Falcon.Kernel: s.MoreComms
rm.Falcon.Kernel: s.Convrsions
rm.Falcon.Kernel: s.MoreSWIs
rm.Falcon.Kernel: s.ExtraSWIs
rm.Falcon.Kernel: s.HeapSort
rm.Falcon.Kernel: s.Arthur3
rm.Falcon.Kernel: s.SWINaming
rm.Falcon.Kernel: s.TickEvents
rm.Falcon.Kernel: s.KbdResPC
rm.Falcon.Kernel: s.NewReset
rm.Falcon.Kernel: s.MsgCode
rm.Falcon.Kernel: s.Middle
rm.Falcon.Kernel: s.Super1
rm.Falcon.Kernel: s.ARM600
rm.Falcon.Kernel: s.MemInfo
rm.Falcon.Kernel: s.vdu.VduDriver
rm.Falcon.Kernel: s.vdu.VduDecl
rm.Falcon.Kernel: s.vdu.VduGrafDec
rm.Falcon.Kernel: s.vdu.VduModes
rm.Falcon.Kernel: s.vdu.VduSWIs
rm.Falcon.Kernel: s.vdu.VduPalette
rm.Falcon.Kernel: s.Vdu.VduPal20
rm.Falcon.Kernel: s.vdu.VduPlot
rm.Falcon.Kernel: s.vdu.VduGrafA
rm.Falcon.Kernel: s.vdu.VduGrafB
rm.Falcon.Kernel: s.vdu.VduGrafC
rm.Falcon.Kernel: s.vdu.VduGrafD
rm.Falcon.Kernel: s.vdu.VduGrafE
rm.Falcon.Kernel: s.vdu.VduGrafF
rm.Falcon.Kernel: s.vdu.VduGrafG
rm.Falcon.Kernel: s.vdu.VduGrafH
rm.Falcon.Kernel: s.vdu.VduGrafI
rm.Falcon.Kernel: s.vdu.VduGrafJ
rm.Falcon.Kernel: s.vdu.VduGrafK
rm.Falcon.Kernel: s.vdu.VduGrafL
rm.Falcon.Kernel: s.vdu.VduWrch
rm.Falcon.Kernel: s.vdu.Vdu23
rm.Falcon.Kernel: s.vdu.VduPointer
rm.Falcon.Kernel: s.vdu.Vdu5
rm.Falcon.Kernel: s.vdu.VduCurSoft
rm.Falcon.Kernel: s.vdu.VduTTX
rm.Falcon.Kernel: s.vdu.VduFontL1
rm.Falcon.Kernel: s.PMF.osinit
rm.Falcon.Kernel: s.PMF.oseven
rm.Falcon.Kernel: s.PMF.osbyte
rm.Falcon.Kernel: s.PMF.osword
rm.Falcon.Kernel: s.PMF.realtime
rm.Falcon.Kernel: s.PMF.convdate
rm.Falcon.Kernel: s.PMF.i2cutils
rm.Falcon.Kernel: s.PMF.oswrch
rm.Falcon.Kernel: s.PMF.buffer
rm.Falcon.Kernel: s.PMF.key
rm.Falcon.Kernel: s.PMF.mouse
rm.Omega.Kernel: Hdr:ListOpts
rm.Omega.Kernel: Hdr:Macros
rm.Omega.Kernel: Hdr:System
rm.Omega.Kernel: Hdr:SWIs
rm.Omega.Kernel: Hdr:CPU.Generic26
rm.Omega.Kernel: Hdr:IO.GenericIO
rm.Omega.Kernel: Hdr:RISCOS
rm.Omega.Kernel: Hdr:Machine.<Machine>
rm.Omega.Kernel: Hdr:ImageSize.<ImageSize>
rm.Omega.Kernel: Hdr:CPU.ARM600
rm.Omega.Kernel: Hdr:IO.IOMDL
rm.Omega.Kernel: Hdr:IO.IOMD
rm.Omega.Kernel: Hdr:MEMM.ARM600
rm.Omega.Kernel: Hdr:VIDC.VIDC20
rm.Omega.Kernel: Version
rm.Omega.Kernel: Hdr:CMOS
rm.Omega.Kernel: Hdr:Heap
rm.Omega.Kernel: Hdr:PublicWS
rm.Omega.Kernel: Hdr:KernelWS
rm.Omega.Kernel: Hdr:Services
rm.Omega.Kernel: Hdr:FSNumbers
rm.Omega.Kernel: Hdr:HighFSI
rm.Omega.Kernel: Hdr:NewErrors
rm.Omega.Kernel: Hdr:Proc
rm.Omega.Kernel: Hdr:Sprite
rm.Omega.Kernel: Hdr:KeyWS
rm.Omega.Kernel: Hdr:RS423
rm.Omega.Kernel: Hdr:ModHand
rm.Omega.Kernel: Hdr:Variables
rm.Omega.Kernel: Hdr:EnvNumbers
rm.Omega.Kernel: Hdr:UpCall
rm.Omega.Kernel: Hdr:Sound
rm.Omega.Kernel: Hdr:Pointer
rm.Omega.Kernel: Hdr:Podule
rm.Omega.Kernel: Hdr:VduExt
rm.Omega.Kernel: Hdr:Buffer
rm.Omega.Kernel: Hdr:Font
rm.Omega.Kernel: Hdr:DevNos
rm.Omega.Kernel: Hdr:Territory
rm.Omega.Kernel: Hdr:Portable
rm.Omega.Kernel: Hdr:MsgTrans
rm.Omega.Kernel: Hdr:PaletteV
rm.Omega.Kernel: Hdr:Wimp
rm.Omega.Kernel: Hdr:ColourTran
rm.Omega.Kernel: Hdr:Debug
rm.Omega.Kernel: s.PMF.DEF
rm.Omega.Kernel: s.Kernel
rm.Omega.Kernel: TestSrc.Begin
rm.Omega.Kernel: s.Morris
rm.Omega.Kernel: TestSrc.ExtIO
rm.Omega.Kernel: TestSrc.ExtCmd
rm.Omega.Kernel: TestSrc.Mem1IOMD
rm.Omega.Kernel: TestSrc.Mem2
rm.Omega.Kernel: TestSrc.Mem3
rm.Omega.Kernel: TestSrc.Mem4
rm.Omega.Kernel: TestSrc.Mem5
rm.Omega.Kernel: TestSrc.Vidc
rm.Omega.Kernel: TestSrc.Ioc
rm.Omega.Kernel: TestSrc.Cmos
rm.Omega.Kernel: TestSrc.Arm3
rm.Omega.Kernel: s.NewIRQs
rm.Omega.Kernel: s.Oscli
rm.Omega.Kernel: s.SysComms
rm.Omega.Kernel: s.MosDict
rm.Omega.Kernel: s.TMOSHelp
rm.Omega.Kernel: s.HeapMan
rm.Omega.Kernel: s.ModHand
rm.Omega.Kernel: s.Unsqueeze
rm.Omega.Kernel: s.ArthurSWIs
rm.Omega.Kernel: s.ChangeDyn
rm.Omega.Kernel: s.Arthur2
rm.Omega.Kernel: s.Utility
rm.Omega.Kernel: s.MoreComms
rm.Omega.Kernel: s.Convrsions
rm.Omega.Kernel: s.MoreSWIs
rm.Omega.Kernel: s.ExtraSWIs
rm.Omega.Kernel: s.HeapSort
rm.Omega.Kernel: s.Arthur3
rm.Omega.Kernel: s.SWINaming
rm.Omega.Kernel: s.TickEvents
rm.Omega.Kernel: s.KbdResPC
rm.Omega.Kernel: s.NewReset
rm.Omega.Kernel: s.MsgCode
rm.Omega.Kernel: s.Middle
rm.Omega.Kernel: s.Super1
rm.Omega.Kernel: s.ARM600
rm.Omega.Kernel: s.MemInfo
rm.Omega.Kernel: s.vdu.VduDriver
rm.Omega.Kernel: s.vdu.VduDecl
rm.Omega.Kernel: s.vdu.VduGrafDec
rm.Omega.Kernel: s.vdu.VduModes
rm.Omega.Kernel: s.vdu.VduSWIs
rm.Omega.Kernel: s.vdu.VduPalette
rm.Omega.Kernel: s.Vdu.VduPal20
rm.Omega.Kernel: s.vdu.VduPlot
rm.Omega.Kernel: s.vdu.VduGrafA
rm.Omega.Kernel: s.vdu.VduGrafB
rm.Omega.Kernel: s.vdu.VduGrafC
rm.Omega.Kernel: s.vdu.VduGrafD
rm.Omega.Kernel: s.vdu.VduGrafE
rm.Omega.Kernel: s.vdu.VduGrafF
rm.Omega.Kernel: s.vdu.VduGrafG
rm.Omega.Kernel: s.vdu.VduGrafH
rm.Omega.Kernel: s.vdu.VduGrafI
rm.Omega.Kernel: s.vdu.VduGrafJ
rm.Omega.Kernel: s.vdu.VduGrafK
rm.Omega.Kernel: s.vdu.VduGrafL
rm.Omega.Kernel: s.vdu.VduWrch
rm.Omega.Kernel: s.vdu.Vdu23
rm.Omega.Kernel: s.vdu.VduPointer
rm.Omega.Kernel: s.vdu.Vdu5
rm.Omega.Kernel: s.vdu.VduCurSoft
rm.Omega.Kernel: s.vdu.VduTTX
rm.Omega.Kernel: s.vdu.VduFontL1
rm.Omega.Kernel: s.PMF.osinit
rm.Omega.Kernel: s.PMF.oseven
rm.Omega.Kernel: s.PMF.osbyte
rm.Omega.Kernel: s.PMF.osword
rm.Omega.Kernel: s.PMF.realtime
rm.Omega.Kernel: s.PMF.convdate
rm.Omega.Kernel: s.PMF.i2cutils
rm.Omega.Kernel: s.PMF.oswrch
rm.Omega.Kernel: s.PMF.buffer
rm.Omega.Kernel: s.PMF.key
rm.Omega.Kernel: s.PMF.mouse
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a277 1
rm.Morris.Kernel: s.Copro15ops
a356 15
rm.Morris.Kernel: s.AMBControl.AMB
rm.Morris.Kernel: s.AMBControl.Options
rm.Morris.Kernel: s.AMBControl.Workspace
rm.Morris.Kernel: s.AMBControl.main
rm.Morris.Kernel: s.AMBControl.allocate
rm.Morris.Kernel: s.AMBControl.deallocate
rm.Morris.Kernel: s.AMBControl.growshrink
rm.Morris.Kernel: s.AMBControl.mapslot
rm.Morris.Kernel: s.AMBControl.mapsome
rm.Morris.Kernel: s.AMBControl.readinfo
rm.Morris.Kernel: s.AMBControl.growp
rm.Morris.Kernel: s.AMBControl.shrinkp
rm.Morris.Kernel: s.AMBControl.service
rm.Morris.Kernel: s.AMBControl.Memory
rm.Morris.Kernel: s.AMBControl.memmap
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
