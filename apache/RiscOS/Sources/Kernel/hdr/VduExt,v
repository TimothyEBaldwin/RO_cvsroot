head	4.5;
access;
symbols
	Kernel-6_15:4.5
	Kernel-6_14:4.5
	Kernel-6_01-3:4.4
	Kernel-6_13:4.5
	Kernel-6_12:4.5
	Kernel-6_11:4.5
	Kernel-6_10:4.5
	Kernel-6_09:4.5
	Kernel-6_08-4_129_2_10:4.4.2.1
	Kernel-6_08-4_129_2_9:4.4.2.1
	Kernel-6_08:4.5
	Kernel-6_07:4.5
	Kernel-6_06:4.5
	Kernel-6_05-4_129_2_8:4.4
	Kernel-6_05:4.4
	Kernel-6_04:4.4
	Kernel-6_03:4.4
	Kernel-6_01-2:4.4
	Kernel-6_01-4_146_2_1:4.4
	Kernel-6_02:4.4
	Kernel-6_01-1:4.4
	Kernel-6_01:4.4
	Kernel-6_00:4.4
	Kernel-5_99:4.4
	Kernel-5_98:4.4
	Kernel-5_97-4_129_2_7:4.4
	Kernel-5_97:4.4
	Kernel-5_96:4.4
	Kernel-5_95:4.4
	Kernel-5_94:4.4
	Kernel-5_93:4.4
	Kernel-5_92:4.4
	Kernel-5_91:4.4
	Kernel-5_90:4.4
	Kernel-5_89-4_129_2_6:4.4
	Kernel-5_89:4.4
	Kernel-5_88-4_129_2_5:4.4
	Kernel-5_88-4_129_2_4:4.4
	Kernel-5_88:4.4
	Kernel-5_87:4.4
	Kernel-5_86-4_129_2_3:4.4
	Kernel-5_86-4_129_2_2:4.4
	Kernel-5_86-4_129_2_1:4.4
	Kernel-5_86:4.4
	SMP:4.4.0.2
	SMP_bp:4.4
	Kernel-5_85:4.4
	Kernel-5_54-1:4.4
	Kernel-5_84:4.4
	Kernel-5_83:4.4
	Kernel-5_82:4.4
	Kernel-5_81:4.4
	Kernel-5_80:4.4
	Kernel-5_79:4.4
	Kernel-5_78:4.4
	Kernel-5_77:4.4
	Kernel-5_76:4.4
	Kernel-5_75:4.4
	Kernel-5_74:4.4
	Kernel-5_73:4.4
	Kernel-5_72:4.4
	Kernel-5_71:4.4
	Kernel-5_70:4.4
	Kernel-5_69:4.4
	Kernel-5_68:4.4
	Kernel-5_67:4.4
	Kernel-5_66:4.4
	Kernel-5_65:4.4
	Kernel-5_64:4.4
	Kernel-5_63:4.4
	Kernel-5_62:4.4
	Kernel-5_61:4.4
	Kernel-5_60:4.4
	Kernel-5_59:4.4
	Kernel-5_58:4.4
	Kernel-5_57:4.4
	Kernel-5_56:4.4
	Kernel-5_55:4.4
	Kernel-5_54:4.4
	Kernel-5_53:4.4
	Kernel-5_52:4.4
	Kernel-5_51:4.4
	Kernel-5_50:4.4
	Kernel-5_49:4.4
	HAL_merge:4.3.2.5
	Kernel-5_48:4.4
	Kernel-5_35-4_79_2_327:4.3.2.5
	Kernel-5_35-4_79_2_326:4.3.2.5
	Kernel-5_35-4_79_2_325:4.3.2.5
	Kernel-5_35-4_79_2_324:4.3.2.5
	Kernel-5_35-4_79_2_323:4.3.2.5
	Kernel-5_35-4_79_2_322:4.3.2.5
	Kernel-5_35-4_79_2_321:4.3.2.5
	Kernel-5_35-4_79_2_320:4.3.2.5
	Kernel-5_35-4_79_2_319:4.3.2.5
	Kernel-5_35-4_79_2_318:4.3.2.5
	Kernel-5_35-4_79_2_317:4.3.2.5
	Kernel-5_35-4_79_2_316:4.3.2.5
	Kernel-5_35-4_79_2_315:4.3.2.5
	Kernel-5_35-4_79_2_314:4.3.2.5
	Kernel-5_35-4_79_2_313:4.3.2.5
	Kernel-5_35-4_79_2_312:4.3.2.5
	Kernel-5_35-4_79_2_311:4.3.2.5
	Kernel-5_35-4_79_2_310:4.3.2.5
	Kernel-5_35-4_79_2_309:4.3.2.5
	Kernel-5_35-4_79_2_308:4.3.2.5
	Kernel-5_35-4_79_2_307:4.3.2.5
	Kernel-5_35-4_79_2_306:4.3.2.5
	Kernel-5_35-4_79_2_305:4.3.2.5
	Kernel-5_35-4_79_2_304:4.3.2.5
	Kernel-5_35-4_79_2_303:4.3.2.5
	Kernel-5_35-4_79_2_302:4.3.2.5
	Kernel-5_35-4_79_2_301:4.3.2.5
	Kernel-5_35-4_79_2_300:4.3.2.5
	Kernel-5_35-4_79_2_299:4.3.2.5
	Kernel-5_35-4_79_2_298:4.3.2.5
	Kernel-5_35-4_79_2_297:4.3.2.5
	Kernel-5_35-4_79_2_296:4.3.2.5
	Kernel-5_35-4_79_2_295:4.3.2.5
	Kernel-5_35-4_79_2_294:4.3.2.5
	Kernel-5_35-4_79_2_293:4.3.2.5
	Kernel-5_35-4_79_2_292:4.3.2.5
	Kernel-5_35-4_79_2_291:4.3.2.5
	Kernel-5_35-4_79_2_290:4.3.2.5
	Kernel-5_35-4_79_2_289:4.3.2.5
	Kernel-5_35-4_79_2_288:4.3.2.5
	Kernel-5_35-4_79_2_287:4.3.2.5
	Kernel-5_35-4_79_2_286:4.3.2.5
	Kernel-5_35-4_79_2_285:4.3.2.5
	Kernel-5_35-4_79_2_284:4.3.2.5
	Kernel-5_35-4_79_2_283:4.3.2.5
	Kernel-5_35-4_79_2_282:4.3.2.5
	Kernel-5_35-4_79_2_281:4.3.2.5
	Kernel-5_35-4_79_2_280:4.3.2.5
	Kernel-5_35-4_79_2_279:4.3.2.5
	Kernel-5_35-4_79_2_278:4.3.2.5
	Kernel-5_35-4_79_2_277:4.3.2.5
	Kernel-5_35-4_79_2_276:4.3.2.5
	Kernel-5_35-4_79_2_275:4.3.2.5
	Kernel-5_35-4_79_2_274:4.3.2.5
	Kernel-5_35-4_79_2_273:4.3.2.5
	Kernel-5_35-4_79_2_272:4.3.2.5
	Kernel-5_35-4_79_2_271:4.3.2.5
	Kernel-5_35-4_79_2_270:4.3.2.5
	Kernel-5_35-4_79_2_269:4.3.2.5
	Kernel-5_35-4_79_2_268:4.3.2.5
	Kernel-5_35-4_79_2_267:4.3.2.5
	Kernel-5_35-4_79_2_266:4.3.2.5
	Kernel-5_35-4_79_2_265:4.3.2.5
	Kernel-5_35-4_79_2_264:4.3.2.5
	Kernel-5_35-4_79_2_263:4.3.2.5
	Kernel-5_35-4_79_2_262:4.3.2.5
	Kernel-5_35-4_79_2_261:4.3.2.5
	Kernel-5_35-4_79_2_260:4.3.2.5
	Kernel-5_35-4_79_2_259:4.3.2.5
	Kernel-5_35-4_79_2_258:4.3.2.5
	Kernel-5_35-4_79_2_257:4.3.2.5
	Kernel-5_35-4_79_2_256:4.3.2.5
	Kernel-5_35-4_79_2_255:4.3.2.5
	Kernel-5_35-4_79_2_254:4.3.2.5
	Kernel-5_35-4_79_2_253:4.3.2.5
	Kernel-5_35-4_79_2_252:4.3.2.5
	Kernel-5_35-4_79_2_251:4.3.2.5
	Kernel-5_35-4_79_2_250:4.3.2.5
	Kernel-5_35-4_79_2_249:4.3.2.5
	Kernel-5_35-4_79_2_248:4.3.2.5
	Kernel-5_35-4_79_2_247:4.3.2.5
	Kernel-5_35-4_79_2_246:4.3.2.5
	Kernel-5_35-4_79_2_245:4.3.2.5
	Kernel-5_35-4_79_2_244:4.3.2.5
	Kernel-5_35-4_79_2_243:4.3.2.5
	Kernel-5_35-4_79_2_242:4.3.2.5
	Kernel-5_35-4_79_2_241:4.3.2.5
	Kernel-5_35-4_79_2_240:4.3.2.5
	Kernel-5_35-4_79_2_239:4.3.2.5
	Kernel-5_35-4_79_2_238:4.3.2.5
	Kernel-5_35-4_79_2_237:4.3.2.5
	Kernel-5_35-4_79_2_236:4.3.2.5
	Kernel-5_35-4_79_2_235:4.3.2.5
	Kernel-5_35-4_79_2_234:4.3.2.5
	Kernel-5_35-4_79_2_233:4.3.2.5
	Kernel-5_35-4_79_2_232:4.3.2.5
	Kernel-5_35-4_79_2_231:4.3.2.5
	Kernel-5_35-4_79_2_230:4.3.2.5
	Kernel-5_35-4_79_2_229:4.3.2.5
	Kernel-5_35-4_79_2_228:4.3.2.5
	Kernel-5_35-4_79_2_227:4.3.2.5
	Kernel-5_35-4_79_2_226:4.3.2.5
	Kernel-5_35-4_79_2_225:4.3.2.5
	Kernel-5_35-4_79_2_224:4.3.2.5
	Kernel-5_35-4_79_2_223:4.3.2.5
	Kernel-5_35-4_79_2_222:4.3.2.5
	Kernel-5_35-4_79_2_221:4.3.2.5
	Kernel-5_35-4_79_2_220:4.3.2.5
	Kernel-5_35-4_79_2_219:4.3.2.5
	Kernel-5_35-4_79_2_218:4.3.2.5
	Kernel-5_35-4_79_2_217:4.3.2.5
	Kernel-5_35-4_79_2_216:4.3.2.5
	Kernel-5_35-4_79_2_215:4.3.2.4
	Kernel-5_35-4_79_2_214:4.3.2.4
	Kernel-5_35-4_79_2_213:4.3.2.4
	Kernel-5_35-4_79_2_212:4.3.2.4
	Kernel-5_35-4_79_2_211:4.3.2.4
	Kernel-5_35-4_79_2_210:4.3.2.4
	Kernel-5_35-4_79_2_209:4.3.2.3
	Kernel-5_35-4_79_2_208:4.3.2.3
	Kernel-5_35-4_79_2_207:4.3.2.3
	Kernel-5_35-4_79_2_206:4.3.2.3
	Kernel-5_35-4_79_2_205:4.3.2.3
	Kernel-5_35-4_79_2_204:4.3.2.3
	Kernel-5_35-4_79_2_203:4.3.2.3
	Kernel-5_35-4_79_2_202:4.3.2.2
	Kernel-5_35-4_79_2_201:4.3.2.2
	Kernel-5_35-4_79_2_200:4.3.2.2
	Kernel-5_35-4_79_2_199:4.3.2.2
	Kernel-5_35-4_79_2_198:4.3.2.2
	Kernel-5_35-4_79_2_197:4.3.2.2
	Kernel-5_35-4_79_2_196:4.3.2.2
	Kernel-5_35-4_79_2_195:4.3.2.2
	Kernel-5_35-4_79_2_194:4.3.2.2
	Kernel-5_35-4_79_2_193:4.3.2.1
	Kernel-5_35-4_79_2_192:4.3.2.1
	Kernel-5_35-4_79_2_191:4.3.2.1
	Kernel-5_35-4_79_2_190:4.3.2.1
	Kernel-5_35-4_79_2_189:4.3.2.1
	Kernel-5_35-4_79_2_188:4.3.2.1
	Kernel-5_35-4_79_2_187:4.3.2.1
	Kernel-5_35-4_79_2_186:4.3.2.1
	Kernel-5_35-4_79_2_185:4.3.2.1
	Kernel-5_35-4_79_2_184:4.3.2.1
	Kernel-5_35-4_79_2_183:4.3.2.1
	Kernel-5_35-4_79_2_182:4.3.2.1
	Kernel-5_35-4_79_2_181:4.3.2.1
	Kernel-5_35-4_79_2_180:4.3.2.1
	Kernel-5_35-4_79_2_179:4.3.2.1
	Kernel-5_35-4_79_2_178:4.3.2.1
	Kernel-5_35-4_79_2_177:4.3.2.1
	Kernel-5_35-4_79_2_176:4.3.2.1
	Kernel-5_35-4_79_2_175:4.3.2.1
	Kernel-5_35-4_79_2_174:4.3.2.1
	Kernel-5_35-4_79_2_173:4.3.2.1
	Kernel-5_35-4_79_2_172:4.3.2.1
	Kernel-5_35-4_79_2_171:4.3.2.1
	Kernel-5_35-4_79_2_170:4.3.2.1
	Kernel-5_35-4_79_2_169:4.3.2.1
	Kernel-5_35-4_79_2_168:4.3.2.1
	Kernel-5_35-4_79_2_167:4.3.2.1
	Kernel-5_35-4_79_2_166:4.3.2.1
	Kernel-5_35-4_79_2_165:4.3.2.1
	RPi_merge:4.3.2.1
	Kernel-5_35-4_79_2_147_2_23:4.3.2.1
	Kernel-5_35-4_79_2_147_2_22:4.3.2.1
	Kernel-5_35-4_79_2_147_2_21:4.3.2.1
	Kernel-5_35-4_79_2_147_2_20:4.3.2.1
	Kernel-5_35-4_79_2_147_2_19:4.3.2.1
	Kernel-5_35-4_79_2_147_2_18:4.3.2.1
	Kernel-5_35-4_79_2_164:4.3.2.1
	Kernel-5_35-4_79_2_163:4.3.2.1
	Kernel-5_35-4_79_2_147_2_17:4.3.2.1
	Kernel-5_35-4_79_2_147_2_16:4.3.2.1
	Kernel-5_35-4_79_2_147_2_15:4.3.2.1
	Kernel-5_35-4_79_2_162:4.3.2.1
	Kernel-5_35-4_79_2_161:4.3.2.1
	Kernel-5_35-4_79_2_147_2_14:4.3.2.1
	Kernel-5_35-4_79_2_147_2_13:4.3.2.1
	Kernel-5_35-4_79_2_160:4.3.2.1
	Kernel-5_35-4_79_2_159:4.3.2.1
	Kernel-5_35-4_79_2_158:4.3.2.1
	Kernel-5_35-4_79_2_157:4.3.2.1
	Kernel-5_35-4_79_2_156:4.3.2.1
	Kernel-5_35-4_79_2_147_2_12:4.3.2.1
	Kernel-5_35-4_79_2_147_2_11:4.3.2.1
	Kernel-5_35-4_79_2_155:4.3.2.1
	Kernel-5_35-4_79_2_147_2_10:4.3.2.1
	Kernel-5_35-4_79_2_154:4.3.2.1
	Kernel-5_35-4_79_2_153:4.3.2.1
	Kernel-5_35-4_79_2_147_2_9:4.3.2.1
	Kernel-5_35-4_79_2_152:4.3.2.1
	Kernel-5_35-4_79_2_151:4.3.2.1
	Kernel-5_35-4_79_2_147_2_8:4.3.2.1
	Kernel-5_35-4_79_2_147_2_7:4.3.2.1
	Kernel-5_35-4_79_2_150:4.3.2.1
	Kernel-5_35-4_79_2_147_2_6:4.3.2.1
	Kernel-5_35-4_79_2_147_2_5:4.3.2.1
	Kernel-5_35-4_79_2_149:4.3.2.1
	Kernel-5_35-4_79_2_147_2_4:4.3.2.1
	Kernel-5_35-4_79_2_147_2_3:4.3.2.1
	Kernel-5_35-4_79_2_148:4.3.2.1
	Kernel-5_35-4_79_2_147_2_2:4.3.2.1
	Kernel-5_35-4_79_2_147_2_1:4.3.2.1
	RPi:4.3.2.1.0.6
	RPi_bp:4.3.2.1
	Kernel-5_35-4_79_2_98_2_52_2_1:4.3.2.1
	alees_Kernel_dev:4.3.2.1.0.4
	alees_Kernel_dev_bp:4.3.2.1
	Kernel-5_35-4_79_2_147:4.3.2.1
	Kernel-5_35-4_79_2_146:4.3.2.1
	Kernel-5_35-4_79_2_145:4.3.2.1
	Kernel-5_35-4_79_2_144:4.3.2.1
	Kernel-5_35-4_79_2_143:4.3.2.1
	Kernel-5_35-4_79_2_142:4.3.2.1
	Kernel-5_35-4_79_2_141:4.3.2.1
	Kernel-5_35-4_79_2_140:4.3.2.1
	Kernel-5_35-4_79_2_139:4.3.2.1
	Kernel-5_35-4_79_2_138:4.3.2.1
	Kernel-5_35-4_79_2_137:4.3.2.1
	Kernel-5_35-4_79_2_136:4.3.2.1
	Kernel-5_35-4_79_2_135:4.3.2.1
	Kernel-5_35-4_79_2_134:4.3.2.1
	Kernel-5_35-4_79_2_133:4.3.2.1
	Kernel-5_35-4_79_2_132:4.3.2.1
	Kernel-5_35-4_79_2_131:4.3.2.1
	Kernel-5_35-4_79_2_130:4.3.2.1
	Kernel-5_35-4_79_2_129:4.3.2.1
	Kernel-5_35-4_79_2_128:4.3.2.1
	Kernel-5_35-4_79_2_127:4.3.2.1
	Kernel-5_35-4_79_2_126:4.3.2.1
	Kernel-5_35-4_79_2_125:4.3.2.1
	Kernel-5_35-4_79_2_124:4.3.2.1
	Kernel-5_35-4_79_2_123:4.3.2.1
	Cortex_merge:4.3.2.1
	Kernel-5_35-4_79_2_122:4.3.2.1
	Kernel-5_35-4_79_2_98_2_54:4.3.2.1
	Kernel-5_35-4_79_2_98_2_53:4.3.2.1
	Kernel-5_35-4_79_2_98_2_52:4.3.2.1
	Kernel-5_35-4_79_2_98_2_51:4.3.2.1
	Kernel-5_35-4_79_2_98_2_50:4.3.2.1
	Kernel-5_35-4_79_2_98_2_49:4.3.2.1
	Kernel-5_35-4_79_2_98_2_48:4.3.2.1
	Kernel-5_35-4_79_2_121:4.3.2.1
	Kernel-5_35-4_79_2_98_2_47:4.3.2.1
	Kernel-5_35-4_79_2_120:4.3.2.1
	Kernel-5_35-4_79_2_98_2_46:4.3.2.1
	Kernel-5_35-4_79_2_119:4.3.2.1
	Kernel-5_35-4_79_2_98_2_45:4.3.2.1
	Kernel-5_35-4_79_2_98_2_44:4.3.2.1
	Kernel-5_35-4_79_2_118:4.3.2.1
	Kernel-5_35-4_79_2_98_2_43:4.3.2.1
	Kernel-5_35-4_79_2_117:4.3.2.1
	Kernel-5_35-4_79_2_116:4.3.2.1
	Kernel-5_35-4_79_2_98_2_42:4.3.2.1
	Kernel-5_35-4_79_2_115:4.3.2.1
	Kernel-5_35-4_79_2_98_2_41:4.3.2.1
	Kernel-5_35-4_79_2_98_2_40:4.3.2.1
	Kernel-5_35-4_79_2_114:4.3.2.1
	Kernel-5_35-4_79_2_98_2_39:4.3.2.1
	Kernel-5_35-4_79_2_98_2_38:4.3.2.1
	Kernel-5_35-4_79_2_113:4.3.2.1
	Kernel-5_35-4_79_2_112:4.3.2.1
	Kernel-5_35-4_79_2_98_2_37:4.3.2.1
	Kernel-5_35-4_79_2_98_2_36:4.3.2.1
	Kernel-5_35-4_79_2_98_2_35:4.3.2.1
	Kernel-5_35-4_79_2_98_2_34:4.3.2.1
	Kernel-5_35-4_79_2_98_2_33:4.3.2.1
	Kernel-5_35-4_79_2_98_2_32:4.3.2.1
	Kernel-5_35-4_79_2_98_2_31:4.3.2.1
	Kernel-5_35-4_79_2_98_2_30:4.3.2.1
	Kernel-5_35-4_79_2_98_2_29:4.3.2.1
	Kernel-5_35-4_79_2_98_2_28:4.3.2.1
	Kernel-5_35-4_79_2_98_2_27:4.3.2.1
	Kernel-5_35-4_79_2_98_2_26:4.3.2.1
	Kernel-5_35-4_79_2_111:4.3.2.1
	Kernel-5_35-4_79_2_98_2_25:4.3.2.1
	Kernel-5_35-4_79_2_98_2_24:4.3.2.1
	Kernel-5_35-4_79_2_98_2_23:4.3.2.1
	Kernel-5_35-4_79_2_110:4.3.2.1
	Kernel-5_35-4_79_2_98_2_22:4.3.2.1
	Kernel-5_35-4_79_2_109:4.3.2.1
	Kernel-5_35-4_79_2_98_2_21:4.3.2.1
	Kernel-5_35-4_79_2_98_2_20:4.3.2.1
	Kernel-5_35-4_79_2_108:4.3.2.1
	Kernel-5_35-4_79_2_107:4.3.2.1
	Kernel-5_35-4_79_2_98_2_19:4.3.2.1
	Kernel-5_35-4_79_2_98_2_18:4.3.2.1
	Kernel-5_35-4_79_2_98_2_17:4.3.2.1
	Kernel-5_35-4_79_2_98_2_16:4.3.2.1
	Kernel-5_35-4_79_2_98_2_15:4.3.2.1
	Kernel-5_35-4_79_2_106:4.3.2.1
	Kernel-5_35-4_79_2_105:4.3.2.1
	Kernel-5_35-4_79_2_104:4.3.2.1
	Kernel-5_35-4_79_2_98_2_14:4.3.2.1
	Kernel-5_35-4_79_2_98_2_13:4.3.2.1
	Kernel-5_35-4_79_2_98_2_12:4.3.2.1
	Kernel-5_35-4_79_2_98_2_11:4.3.2.1
	Kernel-5_35-4_79_2_98_2_10:4.3.2.1
	Kernel-5_35-4_79_2_98_2_9:4.3.2.1
	Kernel-5_35-4_79_2_103:4.3.2.1
	Kernel-5_35-4_79_2_102:4.3.2.1
	Kernel-5_35-4_79_2_98_2_8:4.3.2.1
	Kernel-5_35-4_79_2_98_2_7:4.3.2.1
	Kernel-5_35-4_79_2_98_2_6:4.3.2.1
	Kernel-5_35-4_79_2_98_2_5:4.3.2.1
	Kernel-5_35-4_79_2_98_2_4:4.3.2.1
	Kernel-5_35-4_79_2_101:4.3.2.1
	Kernel-5_35-4_79_2_100:4.3.2.1
	Kernel-5_35-4_79_2_99:4.3.2.1
	Kernel-5_35-4_79_2_98_2_3:4.3.2.1
	Kernel-5_35-4_79_2_98_2_2:4.3.2.1
	Kernel-5_35-4_79_2_98_2_1:4.3.2.1
	Cortex:4.3.2.1.0.2
	Cortex_bp:4.3.2.1
	Kernel-5_35-4_79_2_98:4.3.2.1
	Kernel-5_35-4_79_2_97:4.3.2.1
	Kernel-5_35-4_79_2_96:4.3.2.1
	Kernel-5_35-4_79_2_95:4.3.2.1
	Kernel-5_35-4_79_2_94:4.3.2.1
	Kernel-5_35-4_79_2_93:4.3.2.1
	Kernel-5_35-4_79_2_92:4.3.2.1
	Kernel-5_35-4_79_2_91:4.3.2.1
	Kernel-5_35-4_79_2_90:4.3.2.1
	Kernel-5_35-4_79_2_89:4.3.2.1
	Kernel-5_35-4_79_2_88:4.3.2.1
	Kernel-5_35-4_79_2_87:4.3.2.1
	Kernel-5_35-4_79_2_86:4.3.2.1
	Kernel-5_35-4_79_2_85:4.3.2.1
	Kernel-5_35-4_79_2_84:4.3.2.1
	Kernel-5_35-4_79_2_83:4.3.2.1
	Kernel-5_35-4_79_2_82:4.3.2.1
	Kernel-5_35-4_79_2_81:4.3.2.1
	Kernel-5_35-4_79_2_80:4.3.2.1
	Kernel-5_35-4_79_2_79:4.3.2.1
	Kernel-5_35-4_79_2_78:4.3.2.1
	Kernel-5_35-4_79_2_77:4.3.2.1
	RO_5_07:4.3.2.1
	Kernel-5_35-4_79_2_76:4.3.2.1
	Kernel-5_35-4_79_2_75:4.3.2.1
	Kernel-5_35-4_79_2_74:4.3.2.1
	Kernel-5_35-4_79_2_73:4.3.2.1
	Kernel-5_35-4_79_2_72:4.3.2.1
	Kernel-5_35-4_79_2_71:4.3.2.1
	Kernel-5_35-4_79_2_70:4.3.2.1
	Kernel-5_35-4_79_2_69:4.3.2.1
	Kernel-5_35-4_79_2_68:4.3.2.1
	Kernel-5_35-4_79_2_67:4.3
	Kernel-5_35-4_79_2_66:4.3
	Kernel-5_35-4_79_2_65:4.3
	Kernel-5_35-4_79_2_64:4.3
	Kernel-5_35-4_79_2_63:4.3
	Kernel-5_35-4_79_2_62:4.3
	Kernel-5_35-4_79_2_61:4.3
	Kernel-5_35-4_79_2_59:4.3
	Kernel-5_35-4_79_2_58:4.3
	Kernel-5_35-4_79_2_57:4.3
	Kernel-5_35-4_79_2_56:4.3
	Kernel-5_35-4_79_2_55:4.3
	Kernel-5_35-4_79_2_54:4.3
	Kernel-5_35-4_79_2_53:4.3
	Kernel-5_35-4_79_2_52:4.3
	Kernel-5_35-4_79_2_51:4.3
	Kernel-5_35-4_79_2_50:4.3
	Kernel-5_35-4_79_2_49:4.3
	Kernel-5_35-4_79_2_48:4.3
	Kernel-5_47:4.3
	Kernel-5_46-4_90_2_1:4.3
	nbingham_Kernel_FastNC_dev_bp:4.3
	nbingham_Kernel_FastNC_dev:4.3.0.8
	Kernel-5_46:4.3
	Kernel-5_45:4.3
	Kernel-5_35-4_79_2_47:4.3
	Kernel-5_35-4_79_2_46:4.3
	Kernel-5_35-4_79_2_45:4.3
	Kernel-5_35-4_79_2_44:4.3
	Kernel-5_35-4_79_2_25_2_2:4.3
	Kernel-5_35-4_79_2_43:4.3
	Kernel-5_35-4_79_2_42:4.3
	Kernel-5_35-4_79_2_41:4.3
	Kernel-5_35-4_79_2_40:4.3
	Kernel-5_35-4_79_2_39:4.3
	Kernel-5_35-4_79_2_38:4.3
	Kernel-5_35-4_79_2_37:4.3
	Kernel-5_35-4_79_2_36:4.3
	Kernel-5_35-4_79_2_35:4.3
	Kernel-5_35-4_79_2_34:4.3
	Kernel-5_35-4_79_2_33:4.3
	Kernel-5_35-4_79_2_32:4.3
	Kernel-5_44:4.3
	Kernel-5_35-4_79_2_25_2_1:4.3
	Kernel-5_43:4.3
	Kernel-5_35-4_79_2_31:4.3
	Kernel-5_35-4_79_2_30:4.3
	Kernel-5_35-4_79_2_29:4.3
	Kernel-5_35-4_79_2_28:4.3
	Kernel-5_35-4_79_2_27:4.3
	Kernel-5_35-4_79_2_26:4.3
	Kernel-5_42:4.3
	Kernel-5_41:4.3
	Kernel-5_40:4.3
	Kernel-5_35-4_79_2_25:4.3
	Kernel-5_35-4_79_2_24:4.3
	Kernel-5_35-4_79_2_23:4.3
	Kernel-5_35-4_79_2_22:4.3
	Kernel-5_35-4_79_2_21:4.3
	Kernel-5_35-4_79_2_20:4.3
	Kernel-5_35-4_79_2_19:4.3
	Kernel-5_35-4_79_2_18:4.3
	Kernel-5_35-4_79_2_17:4.3
	Kernel-5_35-4_79_2_16:4.3
	Kernel-5_35-4_79_2_15:4.3
	Kernel-5_35-4_79_2_14:4.3
	Kernel-5_39:4.3
	Kernel-5_13-4_52_2_1:4.3
	Bethany:4.3.0.4
	Kernel-5_38:4.3
	Kernel-5_35-4_79_2_13:4.3
	Kernel-5_35-4_79_2_12:4.3
	Kernel-5_35-4_79_2_11:4.3
	Kernel-5_37:4.3
	Kernel-5_35-4_79_2_10:4.3
	Kernel-5_35-4_79_2_9:4.3
	Kernel-5_36:4.3
	Kernel-5_35-4_79_2_8:4.3
	Kernel-5_35-4_79_2_7:4.3
	Kernel-5_35-4_79_2_6:4.3
	Kernel-5_35-4_79_2_5:4.3
	Kernel-5_35-4_79_2_4:4.3
	Kernel-5_35-4_79_2_3:4.3
	Kernel-5_35-4_79_2_2:4.3
	dellis_autobuild_BaseSW:4.3
	Kernel-5_35-4_79_2_1:4.3
	HAL:4.3.0.2
	Kernel-5_35:4.3
	Kernel-5_34:4.3
	Kernel-5_33:4.3
	Kernel-5_32:4.3
	Kernel-5_31:4.3
	Kernel-5_30:4.3
	Kernel-5_29:4.3
	Kernel-5_28:4.3
	Kernel-5_27:4.3
	Kernel-5_26:4.3
	Kernel-5_25:4.3
	Kernel-5_24:4.3
	Kernel-5_23:4.3
	Kernel-5_22:4.3
	sbrodie_sedwards_16Mar2000:4.3
	Kernel-5_21:4.3
	Kernel-5_20:4.3
	Kernel-5_19:4.3
	Kernel-5_18:4.3
	Kernel-5_17:4.3
	Kernel-5_16:4.3
	Kernel-5_15:4.3
	Kernel-5_14:4.3
	Kernel-5_13:4.3
	Kernel-5_12:4.3
	Kernel-5_11:4.3
	Kernel-5_10:4.3
	Kernel-5_09:4.3
	Kernel-5_08:4.3
	Kernel-5_07:4.3
	Kernel-5_06:4.3
	Kernel-5_05:4.3
	Kernel-5_04:4.3
	Kernel-5_03:4.3
	Kernel-5_02:4.3
	Kernel-5_01:4.3
	Kernel-5_00:4.3
	Kernel-4_99:4.3
	Kernel-4_98:4.3
	Kernel-4_97:4.3
	Kernel-4_96:4.3
	Kernel-4_95:4.3
	Kernel-4_94:4.3
	Kernel-4_93:4.3
	Kernel-4_92:4.3
	Kernel-4_91:4.3
	Kernel-4_90:4.3
	dcotton_autobuild_BaseSW:4.3
	Kernel-4_89:4.3
	Kernel-4_88:4.3
	Kernel-4_87:4.3
	Kernel-4_86:4.3
	Kernel-4_85:4.3
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.2
	Kernel-4_84:4.3
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.2
	Ursula_RiscPC_bp:4.2
	Kernel-4_83:4.3
	Kernel-4_82:4.3
	Kernel-4_81:4.3
	Kernel-4_80:4.3
	Kernel-4_79:4.3
	Kernel-4_78:4.3
	Kernel-4_77:4.3
	Kernel-4_76:4.3
	Kernel-4_75:4.3
	Kernel-4_74:4.3
	Kernel-4_73:4.3
	Kernel-4_72:4.3
	Kernel-4_71:4.3
	Kernel-4_70:4.3
	Kernel-4_69:4.3
	Kernel-4_68:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	Kernel-4_63-1_1_2_5:4.1.7.2
	Kernel-4_63-1_1_2_4:4.1.7.2
	Kernel-4_67:4.3
	Kernel-4_66:4.3
	Kernel-4_63-1_1_2_3:4.1.7.2
	Kernel-4_65:4.3
	Ursula_merge:4.2
	Kernel-4_64:4.3
	mstphens_Kernel-3_81:4.2
	Kernel-4_63-1_1_2_2:4.1.7.2
	nicke_Kernel_4_62:4.1.7.2
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	nturton_v459:4.1.7.1
	nturton_v460:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	mstphens_Kernel-3_80:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	afrost_Boca-1_2-Beta:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.2
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2018.05.31.20.50.20;	author jlee;	state Exp;
branches;
next	4.4;
commitid	nEr6QUWFL0jsyuEA;

4.4
date	2016.06.30.20.07.59;	author jlee;	state Exp;
branches
	4.4.2.1;
next	4.3;
commitid	IWoXxARWeuLDOwcz;

4.3
date	98.07.21.15.56.53;	author nturton;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	97.01.21.14.06.48;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.40.49;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.4.2.1
date	2018.07.07.13.15.10;	author jlee;	state Exp;
branches;
next	;
commitid	xZcbvu8u7pqAQcJA;

4.3.2.1
date	2004.06.18.14.38.54;	author bavison;	state Exp;
branches;
next	4.3.2.2;

4.3.2.2
date	2013.08.06.22.43.02;	author jlee;	state Exp;
branches;
next	4.3.2.3;
commitid	TOIaeUf2Q4rBIr0x;

4.3.2.3
date	2013.12.15.21.34.01;	author jlee;	state Exp;
branches;
next	4.3.2.4;
commitid	KwuK29hKRyXO7hhx;

4.3.2.4
date	2014.03.09.15.57.00;	author jlee;	state Exp;
branches;
next	4.3.2.5;
commitid	FnXbK143NQLRy2sx;

4.3.2.5
date	2014.04.06.19.23.22;	author jlee;	state Exp;
branches;
next	;
commitid	EtypGk33aKVRNEvx;

4.1.1.1
date	96.11.05.09.40.49;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.58.36;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.09.24;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.02.38;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	98.07.21.17.57.36;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Update mode variable definitions
Detail:
  hdr/VduExt:
  - Introduce mode variable 13, for specifying the minimum number of screen banks that are guaranteed to be available. Eventually the kernel will make use of this during mode vetting & selection, to give programs a simple and reliable way of selecting banked screen modes. Currently however it's only supported by VideoOverlay and the corresponding GraphicsV overlay APIs.
  - Extend the mode flags to allow display rotation & flipping to be specified. This is used to indicate that the framebuffer accessed by the CPU is not in the same orientation as what the user is seeing. Again, currently this is only supported by VideoOverlay and the corresponding GraphicsV overlay APIs.
Admin:
  Tested on OMAP3, OMAP4


Version 6.06. Tagged as 'Kernel-6_06'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    VDU variable numbers => &.Hdr.VduExt

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; ************************************************************
; ***    C h a n g e   L i s t  (better late than never!)  ***
; ************************************************************

; Date       Name  Description
; ----       ----  -----------
; 27-Oct-89  TMD   Added VIDCClockSpeed
; 05-Aug-91  DDV   Added Flag_FullPalette
; 15-Jul-93  TMD   Added NumModeVars
; 21-Jul-98  NDT   Added PixelRate

; Sets up external symbols of the form VduExt_<var name>
; for use with SWI OS_ReadVDUVariables

                              ^ 0
VduExt_ModeFlags              # 1
VduExt_ScrRCol                # 1
VduExt_ScrBRow                # 1
VduExt_NColour                # 1
VduExt_XEigFactor             # 1
VduExt_YEigFactor             # 1
VduExt_LineLength             # 1
VduExt_ScreenSize             # 1
VduExt_YShftFactor            # 1
VduExt_Log2BPP                # 1
VduExt_Log2BPC                # 1
VduExt_XWindLimit             # 1
VduExt_YWindLimit             # 1

NumModeVars                   # 0
VduExt_MinScreenBanks         # 1 ; n.b. the kernel doesn't support this var yet (but other components do)
                              
                              ^ &80
VduExt_GWLCol                 # 1
VduExt_GWBRow                 # 1
VduExt_GWRCol                 # 1
VduExt_GWTRow                 # 1
VduExt_TWLCol                 # 1
VduExt_TWBRow                 # 1
VduExt_TWRCol                 # 1
VduExt_TWTRow                 # 1
VduExt_OrgX                   # 1
VduExt_OrgY                   # 1
VduExt_GCsX                   # 1
VduExt_GCsY                   # 1
VduExt_OlderCsX               # 1
VduExt_OlderCsY               # 1
VduExt_OldCsX                 # 1
VduExt_OldCsY                 # 1
VduExt_GCsIX                  # 1
VduExt_GCsIY                  # 1
VduExt_NewPtX                 # 1
VduExt_NewPtY                 # 1
VduExt_ScreenStart            # 1
VduExt_DisplayStart           # 1
VduExt_TotalScreenSize        # 1
VduExt_GPLFMD                 # 1
VduExt_GPLBMD                 # 1
VduExt_GFCOL                  # 1
VduExt_GBCOL                  # 1
VduExt_TForeCol               # 1
VduExt_TBackCol               # 1
VduExt_GFTint                 # 1
VduExt_GBTint                 # 1
VduExt_TFTint                 # 1
VduExt_TBTint                 # 1
VduExt_MaxMode                # 1
VduExt_GCharSizeX             # 1
VduExt_GCharSizeY             # 1
VduExt_GCharSpaceX            # 1
VduExt_GCharSpaceY            # 1
VduExt_HLineAddr              # 1
VduExt_TCharSizeX             # 1
VduExt_TCharSizeY             # 1
VduExt_TCharSpaceX            # 1
VduExt_TCharSpaceY            # 1
VduExt_GcolOraEorAddr         # 1
VduExt_VIDCClockSpeed         # 1
VduExt_PixelRate              # 1
VduExt_BorderL                # 1
VduExt_BorderB                # 1
VduExt_BorderR                # 1
VduExt_BorderT                # 1

                              ^ &C0
VduExt_CurrentGraphicsVDriver # 1

                              ^ &100
VduExt_WindowWidth            # 1
VduExt_WindowHeight           # 1

; Bits in ModeFlags

ModeFlag_NonGraphic          * 1:SHL:0
ModeFlag_Teletext            * 1:SHL:1
ModeFlag_GapMode             * 1:SHL:2
ModeFlag_BBCGapMode          * 1:SHL:3
ModeFlag_HiResMono           * 1:SHL:4
ModeFlag_DoubleVertical      * 1:SHL:5
ModeFlag_HardScrollDisabled  * 1:SHL:6 ; set when outputting to a sprite, or driver doesn't support VIDC style scrolling
ModeFlag_FullPalette         * 1:SHL:7 ; set when palette is not brain damaged
ModeFlag_64k                 * ModeFlag_FullPalette ; Used with log2bpp==4 to indicate 565 RGB/BGR mode
ModeFlag_InterlacedMode      * 1:SHL:8 ; set when interlaced mode with hardware using two seperate framebuffers
ModeFlag_GreyscalePalette    * 1:SHL:9 ; all entries greyscale, but no defined order
ModeFlag_ChromaSubsampleMode * ModeFlag_GreyscalePalette ; Used with log2bpp==7 to indicate chroma mode
                             ; bits 10-11 reserved
ModeFlag_DataFormat_Mask     * &F:SHL:12
ModeFlag_DataFormatFamily_Mask * 3:SHL:12 ; 0=RGB, 1=misc (CMYK), 2=YCbCr, 3=reserved
ModeFlag_DataFormatFamily_RGB   * 0:SHL:12
ModeFlag_DataFormatFamily_Misc  * 1:SHL:12
ModeFlag_DataFormatFamily_YCbCr * 2:SHL:12
ModeFlag_DataFormatSub_Mask  * &C:SHL:12  ; RGB: b14 = RGB order (0=&ABGR, 1=&ARGB)
                                          ;      b15 = alpha mode (0=transfer/supremacy, 1=alpha)
                                          ; misc: 2_00 = &KYMC
                                          ; YCbCr: b14 = range (0=full, 1=video)
                                          ;        b15 = standard (0=ITU-R BT.601, 1=ITU-R BT.709)
ModeFlag_DataFormatSub_RGB   * 4:SHL:12   ; 0=&xBGR, 1=&xRGB
ModeFlag_DataFormatSub_Alpha * 8:SHL:12   ; 0=transfer/supremacy, 1=alpha
ModeFlag_DataFormatSub_Video * 4:SHL:12   ; 0=full range, 1=video range
ModeFlag_DataFormatSub_709   * 8:SHL:12   ; 0=ITU-R BT.601, 1=ITU-R BT.709
ModeFlag_Transform_Mask      * 7:SHL:16
ModeFlag_Transform_Rotate90  * 1:SHL:16
ModeFlag_Transform_Rotate180 * 2:SHL:16
ModeFlag_Transform_VFlip     * 4:SHL:16


; Invalid GraphicsV driver number
GraphicsVInvalid * -2

; OS_ScreenMode reason codes

ScreenModeReason_SelectMode             *       0
ScreenModeReason_ReturnMode             *       1
ScreenModeReason_EnumerateModes         *       2
ScreenModeReason_SelectMonitorType      *       3
ScreenModeReason_ConfigureAcceleration  *       4
ScreenModeReason_CleanCache             *       5
ScreenModeReason_ForceCleanCache        *       6
ScreenModeReason_CountScreenBanks       *       7
ScreenModeReason_SelectDisplayBank      *       8
ScreenModeReason_SelectVDUBank          *       9
ScreenModeReason_CopyBank               *       10
ScreenModeReason_SelectDevice           *       11
ScreenModeReason_ROL_DeviceDetails      *       12
ScreenModeReason_ModeStringToSpecifier  *       13
ScreenModeReason_ModeSpecifierToString  *       14
ScreenModeReason_SelectModeByString     *       15
ScreenModeReason_Limit1                 *       16 ; (not a valid reason code)

ScreenModeReason_RegisterDriver         *       64
ScreenModeReason_StartDriver            *       65
ScreenModeReason_StopDriver             *       66
ScreenModeReason_DeregisterDriver       *       67
ScreenModeReason_EnumerateDrivers       *       68
ScreenModeReason_Limit2                 *       69 ; (not a valid reason code)

ScreenModeReason_ROL_ReadMaximumDriver  *       253
ScreenModeReason_ROL_DeregisterDriver   *       254
ScreenModeReason_ROL_RegisterDriver     *       255

; Mode selector format

                        ^       0
ModeSelector_Flags      #       4       ; flags word
ModeSelector_XRes       #       4       ; x-resolution in pixels
ModeSelector_YRes       #       4       ; y-resolution in pixels
ModeSelector_PixelDepth #       4       ; pixel depth (=Log2BPP)
ModeSelector_FrameRate  #       4       ; nominal frame rate (in Hz)
ModeSelector_ModeVars   #       0       ; start of pairs of (mode var index, value)

ModeSelectorFlags_FormatMask    *       &FF
ModeSelectorFlags_ValidFormat   *       1

ModeSelector_MaxSize    *       ModeSelector_ModeVars+(NumModeVars * 8)+4
                                        ; maximum size of a mode selector, with each mode variable overridden
                                        ; plus terminator on end

; Service_DisplayChanged reason codes (R0)
DisplayChanged_Changing         * 0
DisplayChanged_Changed          * 1
DisplayChanged_PreChanging      * 128

; Service_DisplayChanged sub-reason codes (R3)
DisplayChangedSub_ModeChanged    * 0
DisplayChangedSub_ModeNotChanged * 128

; Service_DisplayStatus reason codes (R0)
DisplayStatus_Deregistered      * 0
DisplayStatus_Registered        * 1
DisplayStatus_Changing          * 128
DisplayStatus_Changed           * 129

        OPT     OldOpt

        END
@


4.4
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@d50 1
d140 4
@


4.4.2.1
log
@Merge latest changes from HEAD

Version 6.08, 4.129.2.9. Tagged as 'Kernel-6_08-4_129_2_9'
@
text
@a49 1
VduExt_MinScreenBanks         # 1 ; n.b. the kernel doesn't support this var yet (but other components do)
a138 4
ModeFlag_Transform_Mask      * 7:SHL:16
ModeFlag_Transform_Rotate90  * 1:SHL:16
ModeFlag_Transform_Rotate180 * 2:SHL:16
ModeFlag_Transform_VFlip     * 4:SHL:16
@


4.3
log
@Added a VDU variable, and 4 SWIs (3 from Ursula, 1 from Spinner)
@
text
@d34 75
a108 77
        MACRO
        NotRVVTBarWobblyBits    $var, $base
        [ "$base"<>""
NotRVVTBarWobblyBitscounter SETA $base
        ]
VduExt_$var                     *       NotRVVTBarWobblyBitscounter
NotRVVTBarWobblyBitscounter SETA NotRVVTBarWobblyBitscounter +1
        MEND

                                GBLA   NotRVVTBarWobblyBitscounter
NotRVVTBarWobblyBitscounter     SETA    0

        NotRVVTBarWobblyBits    ModeFlags, 0
        NotRVVTBarWobblyBits    ScrRCol
        NotRVVTBarWobblyBits    ScrBRow
        NotRVVTBarWobblyBits    NColour
        NotRVVTBarWobblyBits    XEigFactor
        NotRVVTBarWobblyBits    YEigFactor
        NotRVVTBarWobblyBits    LineLength
        NotRVVTBarWobblyBits    ScreenSize
        NotRVVTBarWobblyBits    YShftFactor
        NotRVVTBarWobblyBits    Log2BPP
        NotRVVTBarWobblyBits    Log2BPC
        NotRVVTBarWobblyBits    XWindLimit
        NotRVVTBarWobblyBits    YWindLimit

NumModeVars * NotRVVTBarWobblyBitscounter

        NotRVVTBarWobblyBits    GWLCol, &80
        NotRVVTBarWobblyBits    GWBRow
        NotRVVTBarWobblyBits    GWRCol
        NotRVVTBarWobblyBits    GWTRow
        NotRVVTBarWobblyBits    TWLCol
        NotRVVTBarWobblyBits    TWBRow
        NotRVVTBarWobblyBits    TWRCol
        NotRVVTBarWobblyBits    TWTRow
        NotRVVTBarWobblyBits    OrgX
        NotRVVTBarWobblyBits    OrgY
        NotRVVTBarWobblyBits    GCsX
        NotRVVTBarWobblyBits    GCsY
        NotRVVTBarWobblyBits    OlderCsX
        NotRVVTBarWobblyBits    OlderCsY
        NotRVVTBarWobblyBits    OldCsX
        NotRVVTBarWobblyBits    OldCsY
        NotRVVTBarWobblyBits    GCsIX
        NotRVVTBarWobblyBits    GCsIY
        NotRVVTBarWobblyBits    NewPtX
        NotRVVTBarWobblyBits    NewPtY
        NotRVVTBarWobblyBits    ScreenStart
        NotRVVTBarWobblyBits    DisplayStart
        NotRVVTBarWobblyBits    TotalScreenSize
        NotRVVTBarWobblyBits    GPLFMD
        NotRVVTBarWobblyBits    GPLBMD
        NotRVVTBarWobblyBits    GFCOL
        NotRVVTBarWobblyBits    GBCOL
        NotRVVTBarWobblyBits    TForeCol
        NotRVVTBarWobblyBits    TBackCol
        NotRVVTBarWobblyBits    GFTint
        NotRVVTBarWobblyBits    GBTint
        NotRVVTBarWobblyBits    TFTint
        NotRVVTBarWobblyBits    TBTint
        NotRVVTBarWobblyBits    MaxMode
        NotRVVTBarWobblyBits    GCharSizeX
        NotRVVTBarWobblyBits    GCharSizeY
        NotRVVTBarWobblyBits    GCharSpaceX
        NotRVVTBarWobblyBits    GCharSpaceY
        NotRVVTBarWobblyBits    HLineAddr
        NotRVVTBarWobblyBits    TCharSizeX
        NotRVVTBarWobblyBits    TCharSizeY
        NotRVVTBarWobblyBits    TCharSpaceX
        NotRVVTBarWobblyBits    TCharSpaceY
        NotRVVTBarWobblyBits    GcolOraEorAddr
        NotRVVTBarWobblyBits    VIDCClockSpeed
        NotRVVTBarWobblyBits    PixelRate

        NotRVVTBarWobblyBits    WindowWidth, &100
        NotRVVTBarWobblyBits    WindowHeight
d112 94
a205 9
Flag_NonGraphic * 1
Flag_Teletext   * 2
Flag_GapMode    * 4
Flag_BBCGapMode * 8
Flag_HiResMono  * 16
Flag_DoubleVertical * 32
Flag_HardScrollDisabled * 64    ; set when outputting to a sprite
Flag_FullPalette * 128          ; set when palette is not brain damaged
Flag_InterlacedMode * 256	; set when full interlaced mode
@


4.3.2.1
log
@  Added four new VDU variables.
Detail:
  174: left border size
  175: bottom border size
  176: right border size
  177: top border size
Admin:
  Not tested.

Version 5.35, 4.79.2.68. Tagged as 'Kernel-5_35-4_79_2_68'
@
text
@a107 4
        NotRVVTBarWobblyBits    BorderL
        NotRVVTBarWobblyBits    BorderB
        NotRVVTBarWobblyBits    BorderR
        NotRVVTBarWobblyBits    BorderT
@


4.3.2.2
log
@Add support for the new RISC OS 5 style sprite mode word. Add partial support for alpha channel sprite masks. Implement OS_ScreenMode reasons 13-15
Detail:
  ECFShift/ECFYOffset:
  - hdr/PublicWS - Add ECFShift and ECFYOffset to list of public exports (SpriteExtend was using hardcoded values). Rearrange exports so that VduWorkspace exports are now labelled as such.
  - hdr/KernelWS - Make sure ECFShift & ECFYOffset match their exported locations
  - hdr/OSRSI6, s/Middle - Add OS_ReadSysInfo 6 items 83 & 84, for reading ECFYOffset and ECFShift locations
  Mode flags/VDU variables:
  - Makefile - Add hdr/VduExt to the C header exports
  - hdr/VduExt - Get rid of NotRVVTBarWobblyBits macro and defined VDU variables manually so that Hdr2H will handle them. Begin replacing overly generic 'Flag_*' mode flag definitions with 'ModeFlag_*' instead. Define new flags as required by the new screen/sprite modes. Add OS_ScreenMode reason codes and mode selector format (from s.vdu.vdudecl)
  - NewModes/NEWF2, NewModes/OldPSSrc, NewModes/PSSrc, s.vdu.vdu23, s.vdu.vducursoft, s.vdu.vdudriver, s.vdu.vdugrafg, s.vdu.vdugrafj, s.vdu.vdugrafl, s.vdu.vdumodes, s.vdu.vdupal10, s.vdu.vdupal20, s.vdu.vdupalette, s.vdu.vdupalxx, s.vdu.vduwrch - Renaming Flag_* to ModeFlag_*
  - s.vdu.vdudecl - Remove OS_ScreenMode reason codes & mode selector format definitions; these are now in hdr/VduExt. Flag_* -> ModeFlag_* renaming.
  - s.vdu.vdupalxx - Apply a greyscale palette in PV_SetDefaultPalette if the greyscale mode flag is set
  New sprite types:
  - s.vdu.vdudriver - Extend GenerateModeSelectorVars to deal with the wide mask flag, 64K sprites, and the new RISC OS 5 sprite mode word format.
  - s.vdu.vdugrafdec - Store more information about the sprite in the SprReadNColour ... SprLog2BPC block.
  - s.vdu.vdugrafg - Update SpriteVecHandler to be able to detect whether RISC OS 5 format sprites are allowed palettes. Update SetupSprModeData to store the extra sprite info that's defined in vdugrafdec. Update PutSprite to fault any sprites with wide masks - SpriteExtend must be used for that (once implemented!)
  - s.vdu.vdugrafh - Update WritePixelColour to avoid temporary poking of NColour VDU variable for 8bpp sprites. Correctly replicate data when writing to RISC OS 5 format sprites. Update ReadPixelMask, WritePixelMask, SpriteMaskAddr, GetMaskspWidth to deal with wide masks. Delete obsolete bounce_new_format_masks routine.
  - s.vdu.vdugrafi - Comment updated to reflect new reality
  - s.vdu.vdugrafj - Get rid of unused code block in CreateHeader/PostCreateHeader. Update SanitizeSGetMode to generate RISC OS 5 style sprite mode words where applicable. Update DecideMaskSize to rely on GetMaskspWidth for calculating mask width.
  - s.vdu.vdugrafl - Update SwitchOutputToSprite/SwitchOutputToMask to deal with the new sprite formats. Allow PushModeInfoAnyMonitor to fail.
  - s.vdu.vduswis - Extended OS_ReadModeVariable to cope with new sprite types
  Misc:
  - s.vdu.vdudriver - Fixed bug with VIDCList copying where any -1 value in the structure would terminate the copy, instead of only -1 as a control item number
  - s.vdu.vduswis - Implemented OS_ScreenMode 13 (Mode string to specifier), 14 (mode specifier to string), and 15 (set mode by string). Mostly as per ROL's specs, but minus support for teletext attributes, and plus support for new RISC OS 5 attributes (L... layout specifier, 4096 & 24bpp packed modes, etc.)
  - s.vdu.vduwrch - Pick correct default text colours for the new modes
Admin:
  Tested on BB-xM
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 5.35, 4.79.2.194. Tagged as 'Kernel-5_35-4_79_2_194'
@
text
@d34 81
a114 72
                              ^ 0
VduExt_ModeFlags              # 1
VduExt_ScrRCol                # 1
VduExt_ScrBRow                # 1
VduExt_NColour                # 1
VduExt_XEigFactor             # 1
VduExt_YEigFactor             # 1
VduExt_LineLength             # 1
VduExt_ScreenSize             # 1
VduExt_YShftFactor            # 1
VduExt_Log2BPP                # 1
VduExt_Log2BPC                # 1
VduExt_XWindLimit             # 1
VduExt_YWindLimit             # 1

NumModeVars                   # 0
                              
                              ^ &80
VduExt_GWLCol                 # 1
VduExt_GWBRow                 # 1
VduExt_GWRCol                 # 1
VduExt_GWTRow                 # 1
VduExt_TWLCol                 # 1
VduExt_TWBRow                 # 1
VduExt_TWRCol                 # 1
VduExt_TWTRow                 # 1
VduExt_OrgX                   # 1
VduExt_OrgY                   # 1
VduExt_GCsX                   # 1
VduExt_GCsY                   # 1
VduExt_OlderCsX               # 1
VduExt_OlderCsY               # 1
VduExt_OldCsX                 # 1
VduExt_OldCsY                 # 1
VduExt_GCsIX                  # 1
VduExt_GCsIY                  # 1
VduExt_NewPtX                 # 1
VduExt_NewPtY                 # 1
VduExt_ScreenStart            # 1
VduExt_DisplayStart           # 1
VduExt_TotalScreenSize        # 1
VduExt_GPLFMD                 # 1
VduExt_GPLBMD                 # 1
VduExt_GFCOL                  # 1
VduExt_GBCOL                  # 1
VduExt_TForeCol               # 1
VduExt_TBackCol               # 1
VduExt_GFTint                 # 1
VduExt_GBTint                 # 1
VduExt_TFTint                 # 1
VduExt_TBTint                 # 1
VduExt_MaxMode                # 1
VduExt_GCharSizeX             # 1
VduExt_GCharSizeY             # 1
VduExt_GCharSpaceX            # 1
VduExt_GCharSpaceY            # 1
VduExt_HLineAddr              # 1
VduExt_TCharSizeX             # 1
VduExt_TCharSizeY             # 1
VduExt_TCharSpaceX            # 1
VduExt_TCharSpaceY            # 1
VduExt_GcolOraEorAddr         # 1
VduExt_VIDCClockSpeed         # 1
VduExt_PixelRate              # 1
VduExt_BorderL                # 1
VduExt_BorderB                # 1
VduExt_BorderR                # 1
VduExt_BorderT                # 1

                              ^ &100
VduExt_WindowWidth            # 1
VduExt_WindowHeight           # 1
a117 1
 [ {TRUE} ; These old definitions are going away soon
a126 72
 ]


ModeFlag_NonGraphic          * 1:SHL:0
ModeFlag_Teletext            * 1:SHL:1
ModeFlag_GapMode             * 1:SHL:2
ModeFlag_BBCGapMode          * 1:SHL:3
ModeFlag_HiResMono           * 1:SHL:4
ModeFlag_DoubleVertical      * 1:SHL:5
ModeFlag_HardScrollDisabled  * 1:SHL:6 ; set when outputting to a sprite, or driver doesn't support VIDC style scrolling
ModeFlag_FullPalette         * 1:SHL:7 ; set when palette is not brain damaged
ModeFlag_64k                 * ModeFlag_FullPalette ; Used with log2bpp==4 to indicate 565 RGB/BGR mode
ModeFlag_InterlacedMode      * 1:SHL:8 ; set when interlaced mode with hardware using two seperate framebuffers
ModeFlag_GreyscalePalette    * 1:SHL:9 ; palette is gradient from black to white
ModeFlag_ChromaSubsampleMode * ModeFlag_GreyscalePalette ; Used with log2bpp==7 to indicate chroma mode
                             ; bits 10-11 reserved (by ROL?)
ModeFlag_DataFormat_Mask     * &F:SHL:12
ModeFlag_DataFormatFamily_Mask * 3:SHL:12 ; 0=RGB, 1=misc (CMYK), 2=YCbCr, 3=reserved
ModeFlag_DataFormatFamily_RGB   * 0:SHL:12
ModeFlag_DataFormatFamily_Misc  * 1:SHL:12
ModeFlag_DataFormatFamily_YCbCr * 2:SHL:12
ModeFlag_DataFormatSub_Mask  * &C:SHL:12  ; RGB: b14 = RGB order (0=&ABGR, 1=&ARGB)
                                          ;      b15 = alpha mode (0=transfer/supremacy, 1=alpha)
                                          ; misc: 2_00 = &KYMC
                                          ; YCbCr: b14 = range (0=full, 1=video)
                                          ;        b15 = standard (0=ITU-R BT.601, 1=ITU-R BT.709)
ModeFlag_DataFormatSub_RGB   * 4:SHL:12   ; 0=&xBGR, 1=&xRGB
ModeFlag_DataFormatSub_Alpha * 8:SHL:12   ; 0=transfer/supremacy, 1=alpha
ModeFlag_DataFormatSub_Video * 4:SHL:12   ; 0=full range, 1=video range
ModeFlag_DataFormatSub_709   * 8:SHL:12   ; 0=ITU-R BT.601, 1=ITU-R BT.709


; OS_ScreenMode reason codes

ScreenModeReason_SelectMode             *       0
ScreenModeReason_ReturnMode             *       1
ScreenModeReason_EnumerateModes         *       2
ScreenModeReason_SelectMonitorType      *       3
ScreenModeReason_ConfigureAcceleration  *       4
ScreenModeReason_CleanCache             *       5
ScreenModeReason_ForceCleanCache        *       6
ScreenModeReason_CountScreenBanks       *       7
ScreenModeReason_SelectDisplayBank      *       8
ScreenModeReason_SelectVDUBank          *       9
ScreenModeReason_CopyBank               *       10
ScreenModeReason_SelectDevice           *       11
ScreenModeReason_ROL_DeviceDetails      *       12
ScreenModeReason_ModeStringToSpecifier  *       13
ScreenModeReason_ModeSpecifierToString  *       14
ScreenModeReason_SelectModeByString     *       15
ScreenModeReason_Limit1                 *       16 ; (not a valid reason code)

ScreenModeReason_ROL_ReadMaximumDriver  *       253
ScreenModeReason_ROL_DeregisterDriver   *       254
ScreenModeReason_ROL_RegisterDriver     *       255

; Mode selector format

                        ^       0
ModeSelector_Flags      #       4       ; flags word
ModeSelector_XRes       #       4       ; x-resolution in pixels
ModeSelector_YRes       #       4       ; y-resolution in pixels
ModeSelector_PixelDepth #       4       ; pixel depth (=Log2BPP)
ModeSelector_FrameRate  #       4       ; nominal frame rate (in Hz)
ModeSelector_ModeVars   #       0       ; start of pairs of (mode var index, value)

ModeSelectorFlags_FormatMask    *       &FF
ModeSelectorFlags_ValidFormat   *       1

ModeSelector_MaxSize    *       ModeSelector_ModeVars+(NumModeVars * 8)+4
                                        ; maximum size of a mode selector, with each mode variable overridden
                                        ; plus terminator on end
@


4.3.2.3
log
@Assorted GraphicsV improvements
Detail:
  This set of changes:
  * Adds basic support for multiple GraphicsV drivers, by way of some new OS_ScreenMode reason codes for registering/deregistering, selecting and enumerating drivers (11, 64-68)
  * Tidies up handling of HAL video calls so that the HAL calls will be transformed into a bona fide GraphicsV driver if they're implemented
  * Changes handling of 16bpp gamma table entries so that they're sent to GraphicsV in a generic form instead of in a VIDC-specific form
  * Adds a new GraphicsV call and defines new VIDC list items to allow GraphicsV drivers to utilise the new pixel formats
  File changes:
  * h/VIDCList, hdr/VIDCList, Makefile - Add new header export containing VIDC list type 3 definitions, to avoid repeated definitions in other components
  * Resources/UK/Messages - Add new GraphicsV/OS_ScreenMode error strings and some missing processor type strings
  * hdr/KernelWS - Clean up some pre-GraphicsV definitions, and add new workspace locations for storing the current GraphicsV driver number and the driver list
  * hdr/Options - Remove obsolete InverseTextTransparency option
  * hdr/VduExt - Add VDU variable 192 for storing GraphicsV driver number (same as ROL's VideoV driver number). Remove old 'Flag_*' mode flag definitions (use new 'ModeFlag_*' defintions instead). Add new OS_ScreenMode reason codes.
  * s/ARM600, s/VMSAv6, s/vdu/vdu23, s/vdu/vdugrafa, s/vdu/vdugrafd, s/vdu/vdupalxx, s/vdu/vdupointer, s/vdu/vduwrch - Strip out pre-GraphicsV code. Update GraphicsV code to use correct driver number.
  * s/ArthurSWIs - Pass the default GraphicsV claimant the VduDriverWorkSpace instead of ZeroPage
  * s/Getall - Add Hdr:VIDCList and s/vdu/VduGrafHAL to list of GETs
  * s/NewIRQs - Remove HAL VSync IRQ initialisation, is now handled by grafvhal. Remove old HAL VsyncIRQ entry point, all VSyncs are now handled by VsyncIRQ_ExtEntry.
  * s/PMF/osbyte - Stop OS_Byte 19 waiting forever if no video driver is active
  * s/PMF/osinit - Remove HAL VSync IRQ initialisation, is now handled by grafvhal
  * s/vdu/vducursoft - Use new workspace variable names and flag names
  * s/vdu/vdudecl - Remove old HALDAG_* definitions, GVDAG_* definitions are used instead. Add definition of the per-driver workspace structure and flags.
  * s/vdu/vdudriver - Remove pre-GraphicsV code. Update InitialiseMode to check for and initialise a HAL driver. Use cached driver features word in a few places instead of calling GraphicsV each time. Update PalIndexTable to disable VIDC mangling of 16bpp gamma tables.
  * s/vdu/vdugrafv, s/vdu/vdugrafhal - HAL<->GraphicsV code split off into its own file (vdugrafhal). Default GraphicsV claimant now only deals with VSync events for the active driver.
  * s/vdu/vdumodes - Get rid of old VIDC List type 3 definiton; now in hdr/VIDCList
  * s/vdu/vduswis - Added OS_ScreenMode reason codes 11 and 64-68 for registering, deregistering, selecting and enumerating GraphicsV drivers. Update mode set code to not bother checking if the driver supports the pixel format; instead we assume that the driver's vet mode call will do the check for us.
Admin:
  Tested in Tungsten, IOMD, OMAP3 & BCM2835 ROMs
  Requires HdrSrc-2_38 and updated video driver modes


Version 5.35, 4.79.2.203. Tagged as 'Kernel-5_35-4_79_2_203'
@
text
@a102 3
                              ^ &C0
VduExt_CurrentGraphicsVDriver # 1

d109 13
d134 1
a134 1
                             ; bits 10-11 reserved
a150 3
; Invalid GraphicsV driver number
GraphicsVInvalid * -2

a170 7
ScreenModeReason_RegisterDriver         *       64
ScreenModeReason_StartDriver            *       65
ScreenModeReason_StopDriver             *       66
ScreenModeReason_DeregisterDriver       *       67
ScreenModeReason_EnumerateDrivers       *       68
ScreenModeReason_Limit2                 *       69 ; (not a valid reason code)

@


4.3.2.4
log
@ModeFlag_GreyscalePalette handling improvements. Issue service calls on certain GraphicsV events. Sprite tweaks and fixes.
Detail:
  hdr/VduExt - Add reason codes used by Service_DisplayChanged & Service_DisplayStatus
  s/vdu/vdugrafg - Remove dependency on SpriteReason_BadReasonCode; just use the size of our lookup table instead. Alter SpriteOp lookup table so that unimplemented ops return an error instead of doing nothing. Fix PutSprite incorrectly using the slow GCOL action plotter if a request was made to plot a sprite using its mask but the sprite has none.
  s/vdu/vdugrafl - Update screen redirection handling to set ModeFlag_GreyscalePalette if switching output to a sprite with a greyscale palette or a RISC OS Select alpha mask. Restore the flag to its correct value when restoring screen output.
  s/vdu/vdupalxx - Update ModeFlag_GreyscalePalette in realtime as the palette is changed
  s/vdu/vduswis - Issue Service_DisplayChanged during OS_ScreenMode 11. Issue Service_DisplayStatus during OS_ScreenMode 65 & 66.
Admin:
  Tested on Iyonix, BB-xM


Version 5.35, 4.79.2.210. Tagged as 'Kernel-5_35-4_79_2_210'
@
text
@d122 1
a122 1
ModeFlag_GreyscalePalette    * 1:SHL:9 ; all entries greyscale, but no defined order
a191 8
; Service_DisplayChanged reason codes (R0)
DisplayChanged_Changing         * 0
DisplayChanged_Changed          * 1

; Service_DisplayStatus reason codes (R0)
DisplayStatus_Deregistered      * 0
DisplayStatus_Registered        * 1

@


4.3.2.5
log
@Improve Service_DisplayStatus, Service_DisplayChanged functionality
Detail:
  hdr/VduExt - Define new Service_DisplayChanged reason code for us to issue before anything actually happens. Define new Service_DisplayStatus reason codes for drivers to issue when they change their configuration/capabilities in some way.
  s/Utility - Listen out for Service_DisplayStatus
  s/vdu/vdudriver - When DisplayStatus_Changing/DisplayStatus_Changed is received for the current driver, translate into the appropriate DisplayChanged reason codes so that software which only cares about the current driver doesn't have two sets of service calls to listen out for
  s/vdu/vduswis - When switching driver in OS_ScreenMode 11, issue the new Service_DisplayChanged PreChanging reason code before we update the current GraphicsV driver VDU variable
Admin:
  Tested in Iyonix ROM softload


Version 5.35, 4.79.2.216. Tagged as 'Kernel-5_35-4_79_2_216'
@
text
@a194 5
DisplayChanged_PreChanging      * 128

; Service_DisplayChanged sub-reason codes (R3)
DisplayChangedSub_ModeChanged    * 0
DisplayChangedSub_ModeNotChanged * 128
a198 2
DisplayStatus_Changing          * 128
DisplayStatus_Changed           * 129
@


4.2
log
@Kernel merged
@
text
@d29 1
d107 1
@


4.1
log
@Initial revision
@
text
@d120 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a119 1
Flag_InterlacedMode * 256	; set when full interlaced mode
@


4.1.7.2
log
@Added SWI OS_VIDCDivider, and vdu variable PixelRate for better video mode
support.  Fixed to build for Risc PC.
@
text
@a28 1
; 21-Jul-98  NDT   Added PixelRate
a105 1
        NotRVVTBarWobblyBits    PixelRate
@


4.1.5.1
log
@Import from SrcFiler
@
text
@a119 1
Flag_InterlacedMode * 256	; set when full interlaced mode
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
