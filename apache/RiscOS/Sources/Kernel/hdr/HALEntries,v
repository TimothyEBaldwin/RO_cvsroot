head	4.3;
access;
symbols
	Kernel-6_14:4.3
	Kernel-6_01-3:4.2
	Kernel-6_13:4.3
	Kernel-6_12:4.3
	Kernel-6_11:4.3
	Kernel-6_10:4.3
	Kernel-6_09:4.3
	Kernel-6_08-4_129_2_10:4.1.2.2
	Kernel-6_08-4_129_2_9:4.1.2.2
	Kernel-6_08:4.2
	Kernel-6_07:4.2
	Kernel-6_06:4.2
	Kernel-6_05-4_129_2_8:4.1.2.2
	Kernel-6_05:4.2
	Kernel-6_04:4.2
	Kernel-6_03:4.2
	Kernel-6_01-2:4.2
	Kernel-6_01-4_146_2_1:4.2
	Kernel-6_02:4.2
	Kernel-6_01-1:4.2
	Kernel-6_01:4.2
	Kernel-6_00:4.2
	Kernel-5_99:4.2
	Kernel-5_98:4.2
	Kernel-5_97-4_129_2_7:4.1.2.2
	Kernel-5_97:4.2
	Kernel-5_96:4.2
	Kernel-5_95:4.2
	Kernel-5_94:4.2
	Kernel-5_93:4.2
	Kernel-5_92:4.2
	Kernel-5_91:4.2
	Kernel-5_90:4.2
	Kernel-5_89-4_129_2_6:4.1.2.2
	Kernel-5_89:4.2
	Kernel-5_88-4_129_2_5:4.1.2.1
	Kernel-5_88-4_129_2_4:4.1.2.1
	Kernel-5_88:4.1
	Kernel-5_87:4.1
	Kernel-5_86-4_129_2_3:4.1.2.1
	Kernel-5_86-4_129_2_2:4.1.2.1
	Kernel-5_86-4_129_2_1:4.1
	Kernel-5_86:4.1
	SMP:4.1.0.2
	SMP_bp:4.1
	Kernel-5_85:4.1
	Kernel-5_54-1:4.1
	Kernel-5_84:4.1
	Kernel-5_83:4.1
	Kernel-5_82:4.1
	Kernel-5_81:4.1
	Kernel-5_80:4.1
	Kernel-5_79:4.1
	Kernel-5_78:4.1
	Kernel-5_77:4.1
	Kernel-5_76:4.1
	Kernel-5_75:4.1
	Kernel-5_74:4.1
	Kernel-5_73:4.1
	Kernel-5_72:4.1
	Kernel-5_71:4.1
	Kernel-5_70:4.1
	Kernel-5_69:4.1
	Kernel-5_68:4.1
	Kernel-5_67:4.1
	Kernel-5_66:4.1
	Kernel-5_65:4.1
	Kernel-5_64:4.1
	Kernel-5_63:4.1
	Kernel-5_62:4.1
	Kernel-5_61:4.1
	Kernel-5_60:4.1
	Kernel-5_59:4.1
	Kernel-5_58:4.1
	Kernel-5_57:4.1
	Kernel-5_56:4.1
	Kernel-5_55:4.1
	Kernel-5_54:4.1
	Kernel-5_53:4.1
	Kernel-5_52:4.1
	Kernel-5_51:4.1
	Kernel-5_50:4.1
	Kernel-5_49:4.1
	HAL_merge:1.1.2.41
	Kernel-5_48:4.1
	Kernel-5_35-4_79_2_327:1.1.2.41
	Kernel-5_35-4_79_2_326:1.1.2.41
	Kernel-5_35-4_79_2_325:1.1.2.41
	Kernel-5_35-4_79_2_324:1.1.2.41
	Kernel-5_35-4_79_2_323:1.1.2.41
	Kernel-5_35-4_79_2_322:1.1.2.41
	Kernel-5_35-4_79_2_321:1.1.2.41
	Kernel-5_35-4_79_2_320:1.1.2.41
	Kernel-5_35-4_79_2_319:1.1.2.41
	Kernel-5_35-4_79_2_318:1.1.2.41
	Kernel-5_35-4_79_2_317:1.1.2.41
	Kernel-5_35-4_79_2_316:1.1.2.41
	Kernel-5_35-4_79_2_315:1.1.2.41
	Kernel-5_35-4_79_2_314:1.1.2.41
	Kernel-5_35-4_79_2_313:1.1.2.41
	Kernel-5_35-4_79_2_312:1.1.2.41
	Kernel-5_35-4_79_2_311:1.1.2.41
	Kernel-5_35-4_79_2_310:1.1.2.41
	Kernel-5_35-4_79_2_309:1.1.2.41
	Kernel-5_35-4_79_2_308:1.1.2.41
	Kernel-5_35-4_79_2_307:1.1.2.41
	Kernel-5_35-4_79_2_306:1.1.2.41
	Kernel-5_35-4_79_2_305:1.1.2.41
	Kernel-5_35-4_79_2_304:1.1.2.41
	Kernel-5_35-4_79_2_303:1.1.2.41
	Kernel-5_35-4_79_2_302:1.1.2.41
	Kernel-5_35-4_79_2_301:1.1.2.41
	Kernel-5_35-4_79_2_300:1.1.2.40
	Kernel-5_35-4_79_2_299:1.1.2.40
	Kernel-5_35-4_79_2_298:1.1.2.40
	Kernel-5_35-4_79_2_297:1.1.2.40
	Kernel-5_35-4_79_2_296:1.1.2.40
	Kernel-5_35-4_79_2_295:1.1.2.40
	Kernel-5_35-4_79_2_294:1.1.2.40
	Kernel-5_35-4_79_2_293:1.1.2.40
	Kernel-5_35-4_79_2_292:1.1.2.40
	Kernel-5_35-4_79_2_291:1.1.2.40
	Kernel-5_35-4_79_2_290:1.1.2.40
	Kernel-5_35-4_79_2_289:1.1.2.40
	Kernel-5_35-4_79_2_288:1.1.2.40
	Kernel-5_35-4_79_2_287:1.1.2.40
	Kernel-5_35-4_79_2_286:1.1.2.40
	Kernel-5_35-4_79_2_285:1.1.2.40
	Kernel-5_35-4_79_2_284:1.1.2.40
	Kernel-5_35-4_79_2_283:1.1.2.40
	Kernel-5_35-4_79_2_282:1.1.2.40
	Kernel-5_35-4_79_2_281:1.1.2.40
	Kernel-5_35-4_79_2_280:1.1.2.40
	Kernel-5_35-4_79_2_279:1.1.2.40
	Kernel-5_35-4_79_2_278:1.1.2.40
	Kernel-5_35-4_79_2_277:1.1.2.40
	Kernel-5_35-4_79_2_276:1.1.2.40
	Kernel-5_35-4_79_2_275:1.1.2.40
	Kernel-5_35-4_79_2_274:1.1.2.40
	Kernel-5_35-4_79_2_273:1.1.2.40
	Kernel-5_35-4_79_2_272:1.1.2.40
	Kernel-5_35-4_79_2_271:1.1.2.40
	Kernel-5_35-4_79_2_270:1.1.2.40
	Kernel-5_35-4_79_2_269:1.1.2.40
	Kernel-5_35-4_79_2_268:1.1.2.40
	Kernel-5_35-4_79_2_267:1.1.2.40
	Kernel-5_35-4_79_2_266:1.1.2.40
	Kernel-5_35-4_79_2_265:1.1.2.40
	Kernel-5_35-4_79_2_264:1.1.2.40
	Kernel-5_35-4_79_2_263:1.1.2.40
	Kernel-5_35-4_79_2_262:1.1.2.40
	Kernel-5_35-4_79_2_261:1.1.2.40
	Kernel-5_35-4_79_2_260:1.1.2.40
	Kernel-5_35-4_79_2_259:1.1.2.40
	Kernel-5_35-4_79_2_258:1.1.2.40
	Kernel-5_35-4_79_2_257:1.1.2.40
	Kernel-5_35-4_79_2_256:1.1.2.40
	Kernel-5_35-4_79_2_255:1.1.2.40
	Kernel-5_35-4_79_2_254:1.1.2.40
	Kernel-5_35-4_79_2_253:1.1.2.40
	Kernel-5_35-4_79_2_252:1.1.2.40
	Kernel-5_35-4_79_2_251:1.1.2.40
	Kernel-5_35-4_79_2_250:1.1.2.40
	Kernel-5_35-4_79_2_249:1.1.2.40
	Kernel-5_35-4_79_2_248:1.1.2.40
	Kernel-5_35-4_79_2_247:1.1.2.40
	Kernel-5_35-4_79_2_246:1.1.2.40
	Kernel-5_35-4_79_2_245:1.1.2.39
	Kernel-5_35-4_79_2_244:1.1.2.39
	Kernel-5_35-4_79_2_243:1.1.2.39
	Kernel-5_35-4_79_2_242:1.1.2.38
	Kernel-5_35-4_79_2_241:1.1.2.38
	Kernel-5_35-4_79_2_240:1.1.2.38
	Kernel-5_35-4_79_2_239:1.1.2.38
	Kernel-5_35-4_79_2_238:1.1.2.38
	Kernel-5_35-4_79_2_237:1.1.2.38
	Kernel-5_35-4_79_2_236:1.1.2.38
	Kernel-5_35-4_79_2_235:1.1.2.38
	Kernel-5_35-4_79_2_234:1.1.2.37
	Kernel-5_35-4_79_2_233:1.1.2.37
	Kernel-5_35-4_79_2_232:1.1.2.37
	Kernel-5_35-4_79_2_231:1.1.2.37
	Kernel-5_35-4_79_2_230:1.1.2.37
	Kernel-5_35-4_79_2_229:1.1.2.37
	Kernel-5_35-4_79_2_228:1.1.2.37
	Kernel-5_35-4_79_2_227:1.1.2.37
	Kernel-5_35-4_79_2_226:1.1.2.36
	Kernel-5_35-4_79_2_225:1.1.2.36
	Kernel-5_35-4_79_2_224:1.1.2.36
	Kernel-5_35-4_79_2_223:1.1.2.36
	Kernel-5_35-4_79_2_222:1.1.2.36
	Kernel-5_35-4_79_2_221:1.1.2.36
	Kernel-5_35-4_79_2_220:1.1.2.36
	Kernel-5_35-4_79_2_219:1.1.2.36
	Kernel-5_35-4_79_2_218:1.1.2.36
	Kernel-5_35-4_79_2_217:1.1.2.36
	Kernel-5_35-4_79_2_216:1.1.2.36
	Kernel-5_35-4_79_2_215:1.1.2.36
	Kernel-5_35-4_79_2_214:1.1.2.35
	Kernel-5_35-4_79_2_213:1.1.2.35
	Kernel-5_35-4_79_2_212:1.1.2.35
	Kernel-5_35-4_79_2_211:1.1.2.35
	Kernel-5_35-4_79_2_210:1.1.2.35
	Kernel-5_35-4_79_2_209:1.1.2.35
	Kernel-5_35-4_79_2_208:1.1.2.35
	Kernel-5_35-4_79_2_207:1.1.2.35
	Kernel-5_35-4_79_2_206:1.1.2.35
	Kernel-5_35-4_79_2_205:1.1.2.35
	Kernel-5_35-4_79_2_204:1.1.2.35
	Kernel-5_35-4_79_2_203:1.1.2.35
	Kernel-5_35-4_79_2_202:1.1.2.35
	Kernel-5_35-4_79_2_201:1.1.2.35
	Kernel-5_35-4_79_2_200:1.1.2.35
	Kernel-5_35-4_79_2_199:1.1.2.35
	Kernel-5_35-4_79_2_198:1.1.2.35
	Kernel-5_35-4_79_2_197:1.1.2.35
	Kernel-5_35-4_79_2_196:1.1.2.35
	Kernel-5_35-4_79_2_195:1.1.2.35
	Kernel-5_35-4_79_2_194:1.1.2.35
	Kernel-5_35-4_79_2_193:1.1.2.35
	Kernel-5_35-4_79_2_192:1.1.2.35
	Kernel-5_35-4_79_2_191:1.1.2.35
	Kernel-5_35-4_79_2_190:1.1.2.35
	Kernel-5_35-4_79_2_189:1.1.2.35
	Kernel-5_35-4_79_2_188:1.1.2.35
	Kernel-5_35-4_79_2_187:1.1.2.35
	Kernel-5_35-4_79_2_186:1.1.2.35
	Kernel-5_35-4_79_2_185:1.1.2.35
	Kernel-5_35-4_79_2_184:1.1.2.35
	Kernel-5_35-4_79_2_183:1.1.2.35
	Kernel-5_35-4_79_2_182:1.1.2.35
	Kernel-5_35-4_79_2_181:1.1.2.34
	Kernel-5_35-4_79_2_180:1.1.2.34
	Kernel-5_35-4_79_2_179:1.1.2.34
	Kernel-5_35-4_79_2_178:1.1.2.34
	Kernel-5_35-4_79_2_177:1.1.2.34
	Kernel-5_35-4_79_2_176:1.1.2.34
	Kernel-5_35-4_79_2_175:1.1.2.34
	Kernel-5_35-4_79_2_174:1.1.2.34
	Kernel-5_35-4_79_2_173:1.1.2.34
	Kernel-5_35-4_79_2_172:1.1.2.34
	Kernel-5_35-4_79_2_171:1.1.2.34
	Kernel-5_35-4_79_2_170:1.1.2.34
	Kernel-5_35-4_79_2_169:1.1.2.34
	Kernel-5_35-4_79_2_168:1.1.2.34
	Kernel-5_35-4_79_2_167:1.1.2.34
	Kernel-5_35-4_79_2_166:1.1.2.34
	Kernel-5_35-4_79_2_165:1.1.2.34
	RPi_merge:1.1.2.28.2.6
	Kernel-5_35-4_79_2_147_2_23:1.1.2.28.2.6
	Kernel-5_35-4_79_2_147_2_22:1.1.2.28.2.5
	Kernel-5_35-4_79_2_147_2_21:1.1.2.28.2.5
	Kernel-5_35-4_79_2_147_2_20:1.1.2.28.2.5
	Kernel-5_35-4_79_2_147_2_19:1.1.2.28.2.5
	Kernel-5_35-4_79_2_147_2_18:1.1.2.28.2.5
	Kernel-5_35-4_79_2_164:1.1.2.33
	Kernel-5_35-4_79_2_163:1.1.2.33
	Kernel-5_35-4_79_2_147_2_17:1.1.2.28.2.4
	Kernel-5_35-4_79_2_147_2_16:1.1.2.28.2.4
	Kernel-5_35-4_79_2_147_2_15:1.1.2.28.2.4
	Kernel-5_35-4_79_2_162:1.1.2.33
	Kernel-5_35-4_79_2_161:1.1.2.33
	Kernel-5_35-4_79_2_147_2_14:1.1.2.28.2.3
	Kernel-5_35-4_79_2_147_2_13:1.1.2.28.2.3
	Kernel-5_35-4_79_2_160:1.1.2.32
	Kernel-5_35-4_79_2_159:1.1.2.31
	Kernel-5_35-4_79_2_158:1.1.2.30
	Kernel-5_35-4_79_2_157:1.1.2.30
	Kernel-5_35-4_79_2_156:1.1.2.30
	Kernel-5_35-4_79_2_147_2_12:1.1.2.28.2.3
	Kernel-5_35-4_79_2_147_2_11:1.1.2.28.2.3
	Kernel-5_35-4_79_2_155:1.1.2.30
	Kernel-5_35-4_79_2_147_2_10:1.1.2.28.2.3
	Kernel-5_35-4_79_2_154:1.1.2.30
	Kernel-5_35-4_79_2_153:1.1.2.29
	Kernel-5_35-4_79_2_147_2_9:1.1.2.28.2.3
	Kernel-5_35-4_79_2_152:1.1.2.29
	Kernel-5_35-4_79_2_151:1.1.2.28
	Kernel-5_35-4_79_2_147_2_8:1.1.2.28.2.2
	Kernel-5_35-4_79_2_147_2_7:1.1.2.28.2.1
	Kernel-5_35-4_79_2_150:1.1.2.28
	Kernel-5_35-4_79_2_147_2_6:1.1.2.28.2.1
	Kernel-5_35-4_79_2_147_2_5:1.1.2.28.2.1
	Kernel-5_35-4_79_2_149:1.1.2.28
	Kernel-5_35-4_79_2_147_2_4:1.1.2.28
	Kernel-5_35-4_79_2_147_2_3:1.1.2.28
	Kernel-5_35-4_79_2_148:1.1.2.28
	Kernel-5_35-4_79_2_147_2_2:1.1.2.28
	Kernel-5_35-4_79_2_147_2_1:1.1.2.28
	RPi:1.1.2.28.0.2
	RPi_bp:1.1.2.28
	Kernel-5_35-4_79_2_98_2_52_2_1:1.1.2.26.2.1
	alees_Kernel_dev:1.1.2.26.2.1.0.2
	alees_Kernel_dev_bp:1.1.2.26.2.1
	Kernel-5_35-4_79_2_147:1.1.2.28
	Kernel-5_35-4_79_2_146:1.1.2.28
	Kernel-5_35-4_79_2_145:1.1.2.28
	Kernel-5_35-4_79_2_144:1.1.2.28
	Kernel-5_35-4_79_2_143:1.1.2.28
	Kernel-5_35-4_79_2_142:1.1.2.28
	Kernel-5_35-4_79_2_141:1.1.2.28
	Kernel-5_35-4_79_2_140:1.1.2.28
	Kernel-5_35-4_79_2_139:1.1.2.28
	Kernel-5_35-4_79_2_138:1.1.2.28
	Kernel-5_35-4_79_2_137:1.1.2.27
	Kernel-5_35-4_79_2_136:1.1.2.27
	Kernel-5_35-4_79_2_135:1.1.2.27
	Kernel-5_35-4_79_2_134:1.1.2.27
	Kernel-5_35-4_79_2_133:1.1.2.27
	Kernel-5_35-4_79_2_132:1.1.2.27
	Kernel-5_35-4_79_2_131:1.1.2.27
	Kernel-5_35-4_79_2_130:1.1.2.27
	Kernel-5_35-4_79_2_129:1.1.2.27
	Kernel-5_35-4_79_2_128:1.1.2.27
	Kernel-5_35-4_79_2_127:1.1.2.27
	Kernel-5_35-4_79_2_126:1.1.2.27
	Kernel-5_35-4_79_2_125:1.1.2.27
	Kernel-5_35-4_79_2_124:1.1.2.27
	Kernel-5_35-4_79_2_123:1.1.2.27
	Cortex_merge:1.1.2.26.2.1
	Kernel-5_35-4_79_2_122:1.1.2.27
	Kernel-5_35-4_79_2_98_2_54:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_53:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_52:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_51:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_50:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_49:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_48:1.1.2.26.2.1
	Kernel-5_35-4_79_2_121:1.1.2.27
	Kernel-5_35-4_79_2_98_2_47:1.1.2.26.2.1
	Kernel-5_35-4_79_2_120:1.1.2.27
	Kernel-5_35-4_79_2_98_2_46:1.1.2.26.2.1
	Kernel-5_35-4_79_2_119:1.1.2.27
	Kernel-5_35-4_79_2_98_2_45:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_44:1.1.2.26.2.1
	Kernel-5_35-4_79_2_118:1.1.2.27
	Kernel-5_35-4_79_2_98_2_43:1.1.2.26.2.1
	Kernel-5_35-4_79_2_117:1.1.2.27
	Kernel-5_35-4_79_2_116:1.1.2.27
	Kernel-5_35-4_79_2_98_2_42:1.1.2.26.2.1
	Kernel-5_35-4_79_2_115:1.1.2.26
	Kernel-5_35-4_79_2_98_2_41:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_40:1.1.2.26.2.1
	Kernel-5_35-4_79_2_114:1.1.2.26
	Kernel-5_35-4_79_2_98_2_39:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_38:1.1.2.26.2.1
	Kernel-5_35-4_79_2_113:1.1.2.26
	Kernel-5_35-4_79_2_112:1.1.2.26
	Kernel-5_35-4_79_2_98_2_37:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_36:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_35:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_34:1.1.2.26.2.1
	Kernel-5_35-4_79_2_98_2_33:1.1.2.26
	Kernel-5_35-4_79_2_98_2_32:1.1.2.26
	Kernel-5_35-4_79_2_98_2_31:1.1.2.26
	Kernel-5_35-4_79_2_98_2_30:1.1.2.26
	Kernel-5_35-4_79_2_98_2_29:1.1.2.26
	Kernel-5_35-4_79_2_98_2_28:1.1.2.26
	Kernel-5_35-4_79_2_98_2_27:1.1.2.26
	Kernel-5_35-4_79_2_98_2_26:1.1.2.26
	Kernel-5_35-4_79_2_111:1.1.2.26
	Kernel-5_35-4_79_2_98_2_25:1.1.2.26
	Kernel-5_35-4_79_2_98_2_24:1.1.2.26
	Kernel-5_35-4_79_2_98_2_23:1.1.2.26
	Kernel-5_35-4_79_2_110:1.1.2.26
	Kernel-5_35-4_79_2_98_2_22:1.1.2.26
	Kernel-5_35-4_79_2_109:1.1.2.26
	Kernel-5_35-4_79_2_98_2_21:1.1.2.26
	Kernel-5_35-4_79_2_98_2_20:1.1.2.26
	Kernel-5_35-4_79_2_108:1.1.2.26
	Kernel-5_35-4_79_2_107:1.1.2.26
	Kernel-5_35-4_79_2_98_2_19:1.1.2.26
	Kernel-5_35-4_79_2_98_2_18:1.1.2.26
	Kernel-5_35-4_79_2_98_2_17:1.1.2.26
	Kernel-5_35-4_79_2_98_2_16:1.1.2.26
	Kernel-5_35-4_79_2_98_2_15:1.1.2.26
	Kernel-5_35-4_79_2_106:1.1.2.26
	Kernel-5_35-4_79_2_105:1.1.2.26
	Kernel-5_35-4_79_2_104:1.1.2.26
	Kernel-5_35-4_79_2_98_2_14:1.1.2.26
	Kernel-5_35-4_79_2_98_2_13:1.1.2.26
	Kernel-5_35-4_79_2_98_2_12:1.1.2.26
	Kernel-5_35-4_79_2_98_2_11:1.1.2.26
	Kernel-5_35-4_79_2_98_2_10:1.1.2.26
	Kernel-5_35-4_79_2_98_2_9:1.1.2.26
	Kernel-5_35-4_79_2_103:1.1.2.26
	Kernel-5_35-4_79_2_102:1.1.2.26
	Kernel-5_35-4_79_2_98_2_8:1.1.2.26
	Kernel-5_35-4_79_2_98_2_7:1.1.2.26
	Kernel-5_35-4_79_2_98_2_6:1.1.2.26
	Kernel-5_35-4_79_2_98_2_5:1.1.2.26
	Kernel-5_35-4_79_2_98_2_4:1.1.2.26
	Kernel-5_35-4_79_2_101:1.1.2.26
	Kernel-5_35-4_79_2_100:1.1.2.26
	Kernel-5_35-4_79_2_99:1.1.2.26
	Kernel-5_35-4_79_2_98_2_3:1.1.2.26
	Kernel-5_35-4_79_2_98_2_2:1.1.2.26
	Kernel-5_35-4_79_2_98_2_1:1.1.2.26
	Cortex:1.1.2.26.0.2
	Cortex_bp:1.1.2.26
	Kernel-5_35-4_79_2_98:1.1.2.26
	Kernel-5_35-4_79_2_97:1.1.2.25
	Kernel-5_35-4_79_2_96:1.1.2.25
	Kernel-5_35-4_79_2_95:1.1.2.25
	Kernel-5_35-4_79_2_94:1.1.2.25
	Kernel-5_35-4_79_2_93:1.1.2.25
	Kernel-5_35-4_79_2_92:1.1.2.25
	Kernel-5_35-4_79_2_91:1.1.2.25
	Kernel-5_35-4_79_2_90:1.1.2.25
	Kernel-5_35-4_79_2_89:1.1.2.25
	Kernel-5_35-4_79_2_88:1.1.2.25
	Kernel-5_35-4_79_2_87:1.1.2.25
	Kernel-5_35-4_79_2_86:1.1.2.24
	Kernel-5_35-4_79_2_85:1.1.2.24
	Kernel-5_35-4_79_2_84:1.1.2.24
	Kernel-5_35-4_79_2_83:1.1.2.24
	Kernel-5_35-4_79_2_82:1.1.2.24
	Kernel-5_35-4_79_2_81:1.1.2.24
	Kernel-5_35-4_79_2_80:1.1.2.24
	Kernel-5_35-4_79_2_79:1.1.2.24
	Kernel-5_35-4_79_2_78:1.1.2.23
	Kernel-5_35-4_79_2_77:1.1.2.23
	RO_5_07:1.1.2.23
	Kernel-5_35-4_79_2_76:1.1.2.23
	Kernel-5_35-4_79_2_75:1.1.2.23
	Kernel-5_35-4_79_2_74:1.1.2.23
	Kernel-5_35-4_79_2_73:1.1.2.23
	Kernel-5_35-4_79_2_72:1.1.2.23
	Kernel-5_35-4_79_2_71:1.1.2.23
	Kernel-5_35-4_79_2_70:1.1.2.22
	Kernel-5_35-4_79_2_69:1.1.2.22
	Kernel-5_35-4_79_2_68:1.1.2.22
	Kernel-5_35-4_79_2_67:1.1.2.22
	Kernel-5_35-4_79_2_66:1.1.2.21
	Kernel-5_35-4_79_2_65:1.1.2.20
	Kernel-5_35-4_79_2_64:1.1.2.20
	Kernel-5_35-4_79_2_63:1.1.2.20
	Kernel-5_35-4_79_2_62:1.1.2.20
	Kernel-5_35-4_79_2_61:1.1.2.20
	Kernel-5_35-4_79_2_59:1.1.2.20
	Kernel-5_35-4_79_2_58:1.1.2.19
	Kernel-5_35-4_79_2_57:1.1.2.19
	Kernel-5_35-4_79_2_56:1.1.2.19
	Kernel-5_35-4_79_2_55:1.1.2.19
	Kernel-5_35-4_79_2_54:1.1.2.18
	Kernel-5_35-4_79_2_53:1.1.2.18
	Kernel-5_35-4_79_2_52:1.1.2.18
	Kernel-5_35-4_79_2_51:1.1.2.17
	Kernel-5_35-4_79_2_50:1.1.2.16
	Kernel-5_35-4_79_2_49:1.1.2.16
	Kernel-5_35-4_79_2_48:1.1.2.15
	Kernel-5_35-4_79_2_47:1.1.2.14
	Kernel-5_35-4_79_2_46:1.1.2.14
	Kernel-5_35-4_79_2_45:1.1.2.14
	Kernel-5_35-4_79_2_44:1.1.2.14
	Kernel-5_35-4_79_2_25_2_2:1.1.2.11
	Kernel-5_35-4_79_2_43:1.1.2.14
	Kernel-5_35-4_79_2_42:1.1.2.14
	Kernel-5_35-4_79_2_41:1.1.2.14
	Kernel-5_35-4_79_2_40:1.1.2.13
	Kernel-5_35-4_79_2_39:1.1.2.13
	Kernel-5_35-4_79_2_38:1.1.2.13
	Kernel-5_35-4_79_2_37:1.1.2.13
	Kernel-5_35-4_79_2_36:1.1.2.13
	Kernel-5_35-4_79_2_35:1.1.2.13
	Kernel-5_35-4_79_2_34:1.1.2.13
	Kernel-5_35-4_79_2_33:1.1.2.13
	Kernel-5_35-4_79_2_32:1.1.2.12
	Kernel-5_35-4_79_2_25_2_1:1.1.2.11
	Kernel-5_35-4_79_2_31:1.1.2.12
	Kernel-5_35-4_79_2_30:1.1.2.12
	Kernel-5_35-4_79_2_29:1.1.2.11
	Kernel-5_35-4_79_2_28:1.1.2.11
	Kernel-5_35-4_79_2_27:1.1.2.11
	Kernel-5_35-4_79_2_26:1.1.2.11
	Kernel-5_35-4_79_2_25:1.1.2.11
	Kernel-5_35-4_79_2_24:1.1.2.11
	Kernel-5_35-4_79_2_23:1.1.2.11
	Kernel-5_35-4_79_2_22:1.1.2.11
	Kernel-5_35-4_79_2_21:1.1.2.11
	Kernel-5_35-4_79_2_20:1.1.2.11
	Kernel-5_35-4_79_2_19:1.1.2.10
	Kernel-5_35-4_79_2_18:1.1.2.10
	Kernel-5_35-4_79_2_17:1.1.2.9
	Kernel-5_35-4_79_2_16:1.1.2.9
	Kernel-5_35-4_79_2_15:1.1.2.8
	Kernel-5_35-4_79_2_14:1.1.2.8
	Kernel-5_35-4_79_2_13:1.1.2.8
	Kernel-5_35-4_79_2_12:1.1.2.7
	Kernel-5_35-4_79_2_11:1.1.2.7
	Kernel-5_35-4_79_2_10:1.1.2.6
	Kernel-5_35-4_79_2_9:1.1.2.6
	Kernel-5_35-4_79_2_8:1.1.2.4
	Kernel-5_35-4_79_2_7:1.1.2.2
	Kernel-5_35-4_79_2_6:1.1.2.2
	Kernel-5_35-4_79_2_5:1.1.2.2
	Kernel-5_35-4_79_2_4:1.1.2.1
	Kernel-5_35-4_79_2_3:1.1.2.1
	Kernel-5_35-4_79_2_2:1.1.2.1
	HAL:1.1.0.2;
locks; strict;
comment	@# @;


4.3
date	2018.07.07.14.06.26;	author jlee;	state Exp;
branches;
next	4.2;
commitid	VD8qInwgaJB98dJA;

4.2
date	2017.09.09.10.35.40;	author rool;	state Exp;
branches;
next	4.1;
commitid	SuZJGVb4fAmIDv6A;

4.1
date	2016.06.30.20.07.58;	author jlee;	state Exp;
branches
	4.1.2.1;
next	1.1;
commitid	IWoXxARWeuLDOwcz;

1.1
date	2000.10.02.08.52.19;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

4.1.2.1
date	2017.07.29.11.13.05;	author jlee;	state Exp;
branches;
next	4.1.2.2;
commitid	E0o1zV5A8r2fc71A;

4.1.2.2
date	2017.09.10.11.27.18;	author jlee;	state Exp;
branches;
next	;
commitid	EGooxXrB27MqTD6A;

1.1.2.1
date	2000.10.02.08.52.19;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2000.10.05.13.54.49;	author kbracey;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2000.10.05.16.37.33;	author mstephen;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2000.10.05.16.46.36;	author dellis;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2000.10.09.15.59.15;	author kbracey;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2000.10.16.11.37.10;	author mstephen;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	2000.10.20.14.58.21;	author kbracey;	state Exp;
branches;
next	1.1.2.8;

1.1.2.8
date	2000.11.10.15.51.34;	author kbracey;	state Exp;
branches;
next	1.1.2.9;

1.1.2.9
date	2001.02.01.17.55.45;	author dellis;	state Exp;
branches;
next	1.1.2.10;

1.1.2.10
date	2001.03.01.09.49.21;	author mstephen;	state Exp;
branches;
next	1.1.2.11;

1.1.2.11
date	2001.03.16.15.30.02;	author kbracey;	state Exp;
branches;
next	1.1.2.12;

1.1.2.12
date	2001.05.17.10.51.10;	author kbracey;	state Exp;
branches;
next	1.1.2.13;

1.1.2.13
date	2001.06.11.11.33.30;	author kbracey;	state Exp;
branches;
next	1.1.2.14;

1.1.2.14
date	2001.06.26.09.37.10;	author mstephen;	state Exp;
branches;
next	1.1.2.15;

1.1.2.15
date	2002.10.07.17.29.36;	author kbracey;	state Exp;
branches;
next	1.1.2.16;

1.1.2.16
date	2002.10.16.17.23.12;	author bavison;	state Exp;
branches;
next	1.1.2.17;

1.1.2.17
date	2002.11.30.00.31.03;	author bavison;	state Exp;
branches;
next	1.1.2.18;

1.1.2.18
date	2002.12.13.17.38.11;	author bavison;	state Exp;
branches;
next	1.1.2.19;

1.1.2.19
date	2003.01.27.15.25.31;	author kbracey;	state Exp;
branches;
next	1.1.2.20;

1.1.2.20
date	2003.03.31.09.44.08;	author kbracey;	state Exp;
branches;
next	1.1.2.21;

1.1.2.21
date	2004.05.06.16.01.59;	author kbracey;	state Exp;
branches;
next	1.1.2.22;

1.1.2.22
date	2004.05.07.12.36.34;	author kbracey;	state Exp;
branches;
next	1.1.2.23;

1.1.2.23
date	2004.06.25.15.07.12;	author kbracey;	state Exp;
branches;
next	1.1.2.24;

1.1.2.24
date	2004.10.29.00.42.00;	author jballance;	state Exp;
branches;
next	1.1.2.25;

1.1.2.25
date	2005.06.09.14.04.12;	author kbracey;	state Exp;
branches;
next	1.1.2.26;

1.1.2.26
date	2008.12.22.02.03.21;	author bavison;	state Exp;
branches
	1.1.2.26.2.1;
next	1.1.2.27;

1.1.2.27
date	2011.08.01.19.22.43;	author jlee;	state Exp;
branches;
next	1.1.2.28;
commitid	W9KQSALkptyGgQtv;

1.1.2.28
date	2012.02.25.16.19.34;	author jlee;	state Exp;
branches
	1.1.2.28.2.1;
next	1.1.2.29;
commitid	ad3WnPntkzrizyUv;

1.1.2.29
date	2012.06.04.23.10.32;	author jlee;	state Exp;
branches;
next	1.1.2.30;
commitid	Fel7FC5bdci2Dr7w;

1.1.2.30
date	2012.06.21.07.59.21;	author rsprowson;	state Exp;
branches;
next	1.1.2.31;
commitid	IX8PhIHHo1Sy2y9w;

1.1.2.31
date	2012.07.04.17.50.48;	author rsprowson;	state Exp;
branches;
next	1.1.2.32;
commitid	BwjRc3GMlaDwTgbw;

1.1.2.32
date	2012.07.06.00.52.16;	author bavison;	state Exp;
branches;
next	1.1.2.33;
commitid	7T20ZtwZOZX9crbw;

1.1.2.33
date	2012.07.09.07.10.48;	author rsprowson;	state Exp;
branches;
next	1.1.2.34;
commitid	gcLIBE0WziF1cRbw;

1.1.2.34
date	2012.09.18.22.01.12;	author jlee;	state Exp;
branches;
next	1.1.2.35;
commitid	eFa3Y1QY0MjZP3lw;

1.1.2.35
date	2013.01.22.23.19.26;	author jlee;	state Exp;
branches;
next	1.1.2.36;
commitid	ySNxVh2X08tIdgBw;

1.1.2.36
date	2014.04.04.22.19.16;	author jballance;	state Exp;
branches;
next	1.1.2.37;
commitid	bAG8kI0jJo5cQpvx;

1.1.2.37
date	2014.06.19.20.56.35;	author jlee;	state Exp;
branches;
next	1.1.2.38;
commitid	iH2Gi908B48nWaFx;

1.1.2.38
date	2014.08.29.18.45.33;	author jlee;	state Exp;
branches;
next	1.1.2.39;
commitid	9jew7cvwwQoVVhOx;

1.1.2.39
date	2014.10.25.17.26.30;	author rsprowson;	state Exp;
branches;
next	1.1.2.40;
commitid	rSzyPnwa7sDcFBVx;

1.1.2.40
date	2014.11.07.01.40.11;	author jballance;	state Exp;
branches;
next	1.1.2.41;
commitid	xCuKVcVqU3iE0cXx;

1.1.2.41
date	2016.01.05.21.29.10;	author rsprowson;	state Exp;
branches;
next	;
commitid	1c4UwSKrWAexXMPy;

1.1.2.26.2.1
date	2011.02.20.01.08.41;	author jlee;	state Exp;
branches;
next	;

1.1.2.28.2.1
date	2012.05.20.21.21.32;	author jballance;	state Exp;
branches;
next	1.1.2.28.2.2;
commitid	neZVFdyw3wNwvv5w;

1.1.2.28.2.2
date	2012.05.23.21.48.55;	author bavison;	state Exp;
branches;
next	1.1.2.28.2.3;
commitid	u4A07cKhEUcXyT5w;

1.1.2.28.2.3
date	2012.06.04.23.13.03;	author jlee;	state Exp;
branches;
next	1.1.2.28.2.4;
commitid	F4YH5NQYsCxTDr7w;

1.1.2.28.2.4
date	2012.07.20.00.51.53;	author bavison;	state Exp;
branches;
next	1.1.2.28.2.5;
commitid	ELcSZZYPVgQ6Kedw;

1.1.2.28.2.5
date	2012.09.02.19.56.49;	author jlee;	state Exp;
branches;
next	1.1.2.28.2.6;
commitid	q3Bny0G3EqBdFZiw;

1.1.2.28.2.6
date	2012.09.18.15.49.56;	author jlee;	state Exp;
branches;
next	;
commitid	jeuxYpI6CQUxM1lw;


desc
@@


4.3
log
@Merge SMP branch to trunk
Detail:
  Since the current SMP changes are fairly minor, and the trunk is seeing most development, from a maintenance perspective it makes sense to merge the changes to trunk. This will also make sure they get some wider testing ready for when the next round of SMP development takes place.
  Changes:
  - Docs/SMP - New docs folder describing SMP-related changes to the HAL and interrupt handling. Some of the IRQ changes can also be taken advantage of by single-core devices, since it introduces a way to describe which interrupt sources can be routed to IRQ & FIQ
  - Makefile, hdr/DBellDevice, hdr/HALDevice - New HAL device for an inter-processor software-generated interrupt source ("doorbell")
  - hdr/HALEntries - Reuse the unused matrix keyboard & touchscreen HAL entry points for the new IRQ handling & SMP-related HAL calls
  - hdr/KernelWS - Bump up MaxInterrupts
  - hdr/OSMem, s/MemInfo - Introduce OS_Memory 19, to allow for DMA to/from cacheable memory without actually altering the cacheability of the pages (which can be even more tricky in SMP systems than it is in uniprocessor systems)
  - hdr/Options - Introduce SMP build switch. Currently this controls whether the ARMops will operate in "SMP-friendly" mode or not (when running on MP processors)
  - s/ARMops, s/MemMap2 - Introduce the ARMv7MP ARMop implementation. Simplify DCache_LineLen / ICache_LineLen handling for WB_CR7_Lx so that it's the plain value rather than log2(n)-2
  - s/ExtraSWIs - If ARMops are in SMP-friendly mode, global OS_SynchroniseCodeAreas now only syncs application space and the RMA. This is because there is no trivial MP-safe global IMB operation available. This will also make global OS_SynchroniseCodeAreas significantly slower, but the documentation has always warned against performing a global IMB for just that reason, so code that suffers performance penalties should really try and switch to a ranged IMB.
  - s/NewIRQs - Update some comments regarding IRQ handler entry/exit conditions
Admin:
  Untested


Version 6.09. Tagged as 'Kernel-6_09'
@
text
@; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; The layout of the HAL descriptor

                        ^       0
HALDesc_Flags           #       4
HALDesc_Start           #       4
HALDesc_Size            #       4
HALDesc_Entries         #       4
HALDesc_NumEntries      #       4
HALDesc_Workspace       #       4
HALDesc_VideoRAMSize    #       4
HALDesc_size            #       4

HALFlag_NCNBWorkspace   *       1:SHL:0
HALFlag_LimitVideoRAM   *       1:SHL:1

; Entries to the HAL from the OS

                                ^       0
EntryNo_HAL_Init                #       1 ; 0

EntryNo_HAL_IRQEnable           #       1 ; 1
EntryNo_HAL_IRQDisable          #       1 ; 2
EntryNo_HAL_IRQClear            #       1 ; 3
EntryNo_HAL_IRQSource           #       1 ; 4
EntryNo_HAL_IRQStatus           #       1 ; 5
EntryNo_HAL_FIQEnable           #       1 ; 6
EntryNo_HAL_FIQDisable          #       1 ; 7
EntryNo_HAL_FIQDisableAll       #       1 ; 8
EntryNo_HAL_FIQClear            #       1 ; 9
EntryNo_HAL_FIQSource           #       1 ; 10
EntryNo_HAL_FIQStatus           #       1 ; 11

EntryNo_HAL_Timers              #       1 ; 12
EntryNo_HAL_TimerDevice         #       1 ; 13
EntryNo_HAL_TimerGranularity    #       1 ; 14
EntryNo_HAL_TimerMaxPeriod      #       1 ; 15
EntryNo_HAL_TimerSetPeriod      #       1 ; 16
EntryNo_HAL_TimerPeriod         #       1 ; 17
EntryNo_HAL_TimerReadCountdown  #       1 ; 18

EntryNo_HAL_CounterRate         #       1 ; 19
EntryNo_HAL_CounterPeriod       #       1 ; 20
EntryNo_HAL_CounterRead         #       1 ; 21
EntryNo_HAL_CounterDelay        #       1 ; 22

EntryNo_HAL_NVMemoryType        #       1 ; 23
EntryNo_HAL_NVMemorySize        #       1 ; 24
EntryNo_HAL_NVMemoryPageSize    #       1 ; 25
EntryNo_HAL_NVMemoryProtectedSize #     1 ; 26
EntryNo_HAL_NVMemoryProtection  #       1 ; 27
EntryNo_HAL_NVMemoryIICAddress  #       1 ; 28
EntryNo_HAL_NVMemoryRead        #       1 ; 29
EntryNo_HAL_NVMemoryWrite       #       1 ; 30

EntryNo_HAL_IICBuses            #       1 ; 31
EntryNo_HAL_IICType             #       1 ; 32
EntryNo_HAL_IICSetLines         #       1 ; 33
EntryNo_HAL_IICReadLines        #       1 ; 34
EntryNo_HAL_IICDevice           #       1 ; 35
EntryNo_HAL_IICTransfer         #       1 ; 36
EntryNo_HAL_IICMonitorTransfer  #       1 ; 37

EntryNo_HAL_VideoFlybackDevice       #  1 ; 38
EntryNo_HAL_VideoSetMode             #  1 ; 39
EntryNo_HAL_VideoWritePaletteEntry   #  1 ; 40
EntryNo_HAL_VideoWritePaletteEntries #  1 ; 41
EntryNo_HAL_VideoReadPaletteEntry    #  1 ; 42
EntryNo_HAL_VideoSetInterlace        #  1 ; 43
EntryNo_HAL_VideoSetBlank            #  1 ; 44
EntryNo_HAL_VideoSetPowerSave        #  1 ; 45
EntryNo_HAL_VideoUpdatePointer       #  1 ; 46
EntryNo_HAL_VideoSetDAG              #  1 ; 47
EntryNo_HAL_VideoVetMode             #  1 ; 48
EntryNo_HAL_VideoPixelFormats        #  1 ; 49
EntryNo_HAL_VideoFeatures            #  1 ; 50
EntryNo_HAL_VideoBufferAlignment     #  1 ; 51
EntryNo_HAL_VideoOutputFormat        #  1 ; 52

EntryNo_HAL_IRQProperties            #  1 ; 53 (was HAL_MatrixColumns)
EntryNo_HAL_IRQSetCores              #  1 ; 54 (was HAL_MatrixScan)
EntryNo_HAL_IRQGetCores              #  1 ; 55 (was HAL_TouchscreenType)
EntryNo_HAL_CPUCount                 #  1 ; 56 (was HAL_TouchscreenRead)
EntryNo_HAL_CPUNumber                #  1 ; 57 (was HAL_TouchscreenMode)
EntryNo_HAL_SMPStartup               #  1 ; 58 (was HAL_TouchscreenMeasure)

EntryNo_HAL_MachineID           #       1 ; 59, ReadSysInfo 2
EntryNo_HAL_ControllerAddress   #       1 ; 60, Memory 9
EntryNo_HAL_HardwareInfo        #       1 ; 61, ReadSysInfo 2
EntryNo_HAL_SuperIOInfo         #       1 ; 62, ReadSysInfo 3
EntryNo_HAL_PlatformInfo        #       1 ; 63, ReadSysInfo 8
EntryNo_HAL_CleanerSpace        #       1 ; 64

EntryNo_HAL_UARTPorts           #       1 ; 65
EntryNo_HAL_UARTStartUp         #       1 ; 66
EntryNo_HAL_UARTShutdown        #       1 ; 67
EntryNo_HAL_UARTFeatures        #       1 ; 68
EntryNo_HAL_UARTReceiveByte     #       1 ; 69
EntryNo_HAL_UARTTransmitByte    #       1 ; 70
EntryNo_HAL_UARTLineStatus      #       1 ; 71
EntryNo_HAL_UARTInterruptEnable #       1 ; 72
EntryNo_HAL_UARTRate            #       1 ; 73
EntryNo_HAL_UARTFormat          #       1 ; 74
EntryNo_HAL_UARTFIFOSize        #       1 ; 75
EntryNo_HAL_UARTFIFOClear       #       1 ; 76
EntryNo_HAL_UARTFIFOEnable      #       1 ; 77
EntryNo_HAL_UARTFIFOThreshold   #       1 ; 78
EntryNo_HAL_UARTInterruptID     #       1 ; 79
EntryNo_HAL_UARTBreak           #       1 ; 80
EntryNo_HAL_UARTModemControl    #       1 ; 81
EntryNo_HAL_UARTModemStatus     #       1 ; 82
EntryNo_HAL_UARTDevice          #       1 ; 83
EntryNo_HAL_UARTDefault         #       1 ; 84

EntryNo_HAL_DebugRX             #       1 ; 85
EntryNo_HAL_DebugTX             #       1 ; 86

EntryNo_HAL_PCIFeatures         #       1 ; 87
EntryNo_HAL_PCIReadConfigByte   #       1 ; 88
EntryNo_HAL_PCIReadConfigHalfword #     1 ; 89
EntryNo_HAL_PCIReadConfigWord   #       1 ; 90
EntryNo_HAL_PCIWriteConfigByte  #       1 ; 91
EntryNo_HAL_PCIWriteConfigHalfword #    1 ; 92
EntryNo_HAL_PCIWriteConfigWord  #       1 ; 93
EntryNo_HAL_PCISpecialCycle     #       1 ; 94
EntryNo_HAL_PCISlotTable        #       1 ; 95
EntryNo_HAL_PCIAddresses        #       1 ; 96

EntryNo_HAL_PlatformName        #       1 ; 97, ReadSysInfo 9 subreason 7 (was HAL_ATAControllerInfo)
                                #       1 ; 98 (was HAL_ATASetModes)
                                #       1 ; 99 (was HAL_ATACableID)

EntryNo_HAL_InitDevices         #       1 ; 100

EntryNo_HAL_KbdScanDependencies #       1 ; 101
                                #       1 ; 102 (was HAL_KbdScan)
                                #       1 ; 103 (was HAL_KbdScanFinish)
                                #       1 ; 104 (was HAL_KbdScanInterrupt)

EntryNo_HAL_PhysInfo            #       1 ; 105

EntryNo_HAL_Reset               #       1 ; 106

EntryNo_HAL_IRQMax              #       1 ; 107 (was HAL_MonitorLeadID)

EntryNo_HAL_USBControllerInfo   #       1 ; 108
EntryNo_HAL_USBPortPower        #       1 ; 109
EntryNo_HAL_USBPortIRQStatus    #       1 ; 110
EntryNo_HAL_USBPortIRQClear     #       1 ; 111
EntryNo_HAL_USBPortDevice       #       1 ; 112

EntryNo_HAL_TimerIRQClear       #       1 ; 113
EntryNo_HAL_TimerIRQStatus      #       1 ; 114

EntryNo_HAL_ExtMachineID        #       1 ; 115, ReadSysInfo 10

EntryNo_HAL_VideoFramestoreAddress   #  1 ; 116
EntryNo_HAL_VideoRender         #       1 ; 117
EntryNo_HAL_VideoStartupMode    #       1 ; 118
EntryNo_HAL_VideoPixelFormatList #      1 ; 119
EntryNo_HAL_VideoIICOp          #       1 ; 120

EntryNo_HAL_Watchdog            #       1 ; 121

KnownHALEntries                 #       0 ; Used inside Kernel

; Various flags and constants

; OS_Hardware subreasons
                                ^ 0
OSHW_CallHAL                    # 1
OSHW_LookupRoutine              # 1
OSHW_DeviceAdd                  # 1
OSHW_DeviceRemove               # 1
OSHW_DeviceEnumerate            # 1
OSHW_DeviceEnumerateChrono      # 1
OSHW_MaxSubreason               # 1       ; Used in despatch inside Kernel

; PhysInfo
                                ^ 0
PhysInfo_GetTableSize           # 1
PhysInfo_WriteTable             # 1
PhysInfo_HardROM                # 1

; NVMemory

NVMemoryFlag_None               * 0
NVMemoryFlag_MaybeIIC           * 1
NVMemoryFlag_IIC                * 2
NVMemoryFlag_HAL                * 3
NVMemoryFlag_Provision          * &FF ; mask for provision
NVMemoryFlag_ProtectAtEnd       * 1:SHL:8   ; Protected region at end
NVMemoryFlag_Deprotectable      * 1:SHL:9
NVMemoryFlag_LowRead            * 1:SHL:10  ; locations 0-15 are readable
NVMemoryFlag_LowWrite           * 1:SHL:11  ; locations 0-15 are writeable

; IIC

IICFlag_LowLevel                * 1:SHL:0
IICFlag_HighLevel               * 1:SHL:1
IICFlag_MultiMaster             * 1:SHL:2
IICFlag_Slave                   * 1:SHL:3
IICFlag_Background              * 1:SHL:4
IICFlag_Fast                    * 1:SHL:16
IICFlag_HighSpeed               * 1:SHL:17
IICFlag_ProtocolVersionShift    * 20
IICFlag_ProtocolVersionMask     * &FFF      ; IIC protocol version x100
                                ^ 0
IICStatus_Completed             # 1         ; High level API return codes
IICStatus_InProgress            # 1
IICStatus_NoACK                 # 1
IICStatus_Busy                  # 1
IICStatus_Slave                 # 1
IICStatus_Error                 # 1

; USB

                                 ^ 0
HALUSBControllerInfo_Type        # 4 ; As below
HALUSBControllerInfo_Flags       # 4 ; As below
HALUSBControllerInfo_HW          # 4 ; Hardware base address
HALUSBControllerInfo_DevNo       # 4 ; IRQ device number
HALUSBControllerInfo_SizeOf      # 0 ; Size of base structure
                                 ^ HALUSBControllerInfo_SizeOf
HALUSBControllerInfo_DMAOffset   # 4 ; Offset from ARM physical -> DMA addresses
HALUSBControllerInfo_HW_MPHI     # 4 ; Message based Parallel Host Interface base address
HALUSBControllerInfo_DevNo_MPHI  # 4 ; IRQ device number
HALUSBControllerInfo_SizeOfType3 # 0 ; Size of extended structure for Synopsys DWC

HALUSBControllerType_OHCI        * 0
HALUSBControllerType_EHCI        * 1
HALUSBControllerType_MUSBMHDRC   * 2
HALUSBControllerType_SynopsysDWC * 3
HALUSBControllerType_XHCI        * 4

HALUSBControllerFlag_HAL_Port_Power   * 1 ; Use HAL_USBPortPower
HALUSBControllerFlag_HAL_Over_Current * 2 ; Use HAL_USBPortDevice/IRQStatus/IRQClear
HALUSBControllerFlag_32bit_Regs       * 8 ; Must use 32bit access for all registers
HALUSBControllerFlag_EHCI_ETTF        * &80000000 ; EHCI controller has embedded TT

; IRQ

HALIRQ_Shared                    * &80000000 ; Used with some APIs to indicate device/IRQ number is shared by multiple devices

; HAL_IRQProperties flags:
HALIRQProperty_Multicore         * &80000000 ; Interrupt can be routed to multiple cores at once
HALIRQProperty_Private           * &40000000 ; Interrupt enable/disable will only have an effect if it's called on a core which the interrupt is routed to, and if it's routed to multiple cores it may not affect them all

        END
@


4.2
log
@Change module initialisation to be a two pass scheme
Detail:
  To make it easier to support arbitrary complexity keyboard controllers (eg. USB via DWCDriver on the Pi) have the kernel do the early keyboard recovery key press detection instead of the HAL.
  During the first pass those modules used for reading the keyboard are started, ignoring the CMOS frugal bits.
  The keyboard is then scanned for 3s, during which time the RAM is cleared (unless the HAL indicated it has already been done).
  During the second pass the remaining modules are started respecting the CMOS frugal bits. Any which were already started in the first pass are inserted into the new chain, so the keyboard is reset once and only once.

  Boot times, with a 300cs key scan time in NewReset.
  Risc PC with 160MB RAM (128+32+0).
  Times from turning on power to initial "beep", using a stopwatch.
                RISC OS 3.70 RISC OS 5.22 This OS
  ARM610        12.5         10.4         10.3
  ARM710        11.8         10.2         9.7
  StrongARM 233 11.1         9.5          8.4

  In NewReset.s:
  Remove old KbdScan code (leave Reset_IRQ_Handler for IIC only)
  If HAL_KbdScanDependencies returns a null string then present KbdDone flag and skip to full init.
  A few vestiges of soft resets removed.
  Do RAM clear when waiting for INKEY (being careful not to trash the running modules...).
  Clearing just the freepool on a 2GB Titanium cleared 7EFD6 pages (99.2%).

  In ModHand.s:
  2nd pass need to sneaky renumber the nodes (so *ROMModules is in the right order, frugal bits line up) without resetting the chain

  In HAL.s:
  Change ClearPhysRAM to ClearWkspRAM, such that it only clears the kernel workspace rather than all RAM. The bulk of the RAM is cleared during the keyboard scan by new function ClearFreePoolSection.
  Add a variant of Init_MapInRAM which clears the mapped in RAM too (as these very early claims will not be in the free pool when the RAM is cleared later).
  Remove HAL keyboard scan setup & IRQ handler.
  Fix bug in HALDebugHexTX2, the input value needs pre-shifting by 16b before continuing.

  In GetAll.s, PMF/osbyte.s:
  Use Hdr:Countries and Hdr:OsBytes for constants.

  In PMF/key.s, PMF/osinit.s:
  Relocate the key post init from PostInit to KeyPostInit.
  Changed PostInit to not tail call KeyPostInit so they can be called independently.

  In hdr/KernelWs:
  Improve comments, add InitWsStart label to refer to.

  In hdr/HALEntries:
  Add HAL_KbdScanDependencies.
  Delete KbdFlag exports.
  Took the opportunity to reorder some of the higher numbered HAL entries and re-grouping, specifically (112,120) (84,106,108,117).
Admin:
  Tested on an ARM6/ARM7/SA Risc PC, BeagleBoard xM, Iyonix, Pandaboard ES, Wandboard Quad, IPEGv5, Titanium, Pi 2 and 3.
  Requires corresponding HAL change.
  Submission for USB bounty.

Version 5.89. Tagged as 'Kernel-5_89'
@
text
@d93 6
a98 7
EntryNo_HAL_MatrixColumns       #       1 ; 53
EntryNo_HAL_MatrixScan          #       1 ; 54

EntryNo_HAL_TouchscreenType     #       1 ; 55
EntryNo_HAL_TouchscreenRead     #       1 ; 56
EntryNo_HAL_TouchscreenMode     #       1 ; 57
EntryNo_HAL_TouchscreenMeasure  #       1 ; 58
d254 8
@


4.1
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@d127 1
a128 1
EntryNo_HAL_Reset               #       1 ; 84
d149 4
a152 4
EntryNo_HAL_KbdScanSetup        #       1 ; 101
EntryNo_HAL_KbdScan             #       1 ; 102
EntryNo_HAL_KbdScanFinish       #       1 ; 103
EntryNo_HAL_KbdScanInterrupt    #       1 ; 104
d156 1
a156 1
EntryNo_HAL_USBControllerInfo   #       1 ; 106
d160 1
a160 2
EntryNo_HAL_VideoRender         #       1 ; 108

d164 1
a164 2

EntryNo_HAL_VideoIICOp          #       1 ; 112
d172 1
a172 3

EntryNo_HAL_UARTDefault         #       1 ; 117

d175 1
a175 2

EntryNo_HAL_USBPortDevice       #       1 ; 120
a229 11
; Keyboard scan

KbdFlag_Ctrl    * 1:SHL:0
KbdFlag_Shift   * 1:SHL:1
KbdFlag_R       * 1:SHL:4
KbdFlag_T       * 1:SHL:5
KbdFlag_Delete  * 1:SHL:6
KbdFlag_Copy    * 1:SHL:7
KbdFlag_Present * 1:SHL:30
KbdFlag_Done    * 1:SHL:31

@


4.1.2.1
log
@Initial SMP changes
Detail:
  This commit lays some of the groundwork for SMP support within the HAL, kernel, and OS.
  Makefile, hdr/HALDevice, hdr/DBellDevice - Add definitions for a doorbell HAL device, to allow CPU cores to signal each other via interrupts
  hdr/HALEntries - Repurpose HAL_Matrix and HAL_Touchscreen entry points for new SMP-related entry points. Add a couple of IRQ-related definitions.
  hdr/KernelWS - Boost MaxInterrupts to 256
  hdr/Options - Add new SMP build switch to control whether the kernel is built in SMP-friendly mode or not. SMP-friendly kernels should still run on single-core machines, but may behave slightly differently.
  s/ARMops - Make as many ARMops SMP-safe as possible, relying on hardware support for broadcasting of cache/TLB maintenance operations
  s/ExtraSWIs - Make SMP-friendly full OS_SynchroniseCodeAreas only sync application space and the RMA (full-cache IMB not really possible with SMP)
  s/NewIRQs - Update IRQ despatcher comments to (hopefully) reflect reality
  Docs/SMP/HAL, Docs/SMP/IRQ - Add documentation covering the new HAL calls and IRQ behaviour
Admin:
  Tested on Raspberry Pi 2, 3, OMAP4, iMX6


Version 5.86, 4.129.2.2. Tagged as 'Kernel-5_86-4_129_2_2'
@
text
@d93 7
a99 6
EntryNo_HAL_IRQProperties            #  1 ; 53 (was HAL_MatrixColumns)
EntryNo_HAL_IRQSetCores              #  1 ; 54 (was HAL_MatrixScan)
EntryNo_HAL_IRQGetCores              #  1 ; 55 (was HAL_TouchscreenType)
EntryNo_HAL_CPUCount                 #  1 ; 56 (was HAL_TouchscreenRead)
EntryNo_HAL_CPUNumber                #  1 ; 57 (was HAL_TouchscreenMode)
EntryNo_HAL_SMPStartup               #  1 ; 58 (was HAL_TouchscreenMeasure)
a270 8
; IRQ

HALIRQ_Shared                    * &80000000 ; Used with some APIs to indicate device/IRQ number is shared by multiple devices

; HAL_IRQProperties flags:
HALIRQProperty_Multicore         * &80000000 ; Interrupt can be routed to multiple cores at once
HALIRQProperty_Private           * &40000000 ; Interrupt enable/disable will only have an effect if it's called on a core which the interrupt is routed to, and if it's routed to multiple cores it may not affect them all

@


4.1.2.2
log
@Merge latest changes from main branch

Version 5.89, 4.129.2.6. Tagged as 'Kernel-5_89-4_129_2_6'
@
text
@a125 1
EntryNo_HAL_UARTDefault         #       1 ; 84
d127 1
d148 4
a151 4
EntryNo_HAL_KbdScanDependencies #       1 ; 101
                                #       1 ; 102 (was HAL_KbdScan)
                                #       1 ; 103 (was HAL_KbdScanFinish)
                                #       1 ; 104 (was HAL_KbdScanInterrupt)
d155 1
a155 1
EntryNo_HAL_Reset               #       1 ; 106
d159 2
a160 1
EntryNo_HAL_USBControllerInfo   #       1 ; 108
d164 2
a165 1
EntryNo_HAL_USBPortDevice       #       1 ; 112
d173 3
a175 1
EntryNo_HAL_VideoRender         #       1 ; 117
d178 2
a179 1
EntryNo_HAL_VideoIICOp          #       1 ; 120
d234 11
@


1.1
log
@file HALEntries was initially added on branch HAL.
@
text
@d1 271
@


1.1.2.1
log
@More HAL work. IOMD HAL work in progress. Lots of my own little build
scripts. Don't touch this.

Version 5.35, 4.79.2.2. Tagged as 'Kernel-5_35-4_79_2_2'
@
text
@a0 65
; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; The layout of the HAL descriptor

                        ^       0
HALDesc_Flags           #       4
HALDesc_Start           #       4
HALDesc_Size            #       4
HALDesc_Entries         #       4
HALDesc_NumEntries      #       4
HALDesc_Workspace       #       4
HALDesc_size            #       4

; Entries to the HAL from the OS

                                ^       0
EntryNo_HAL_Init                #       1

EntryNo_HAL_Timers              #       1
EntryNo_HAL_TimerDevice         #       1
EntryNo_HAL_TimerGranularity    #       1
EntryNo_HAL_TimerMaxPeriod      #       1
EntryNo_HAL_TimerSetPeriod      #       1
EntryNo_HAL_TimerPeriod         #       1
EntryNo_HAL_TimerReadCountdown  #       1

EntryNo_HAL_CounterRate         #       1
EntryNo_HAL_CounterPeriod       #       1
EntryNo_HAL_CounterRead         #       1
EntryNo_HAL_CounterDelay        #       1

EntryNo_HAL_NVMemoryType        #       1
EntryNo_HAL_NVMemorySize        #       1
EntryNo_HAL_NVMemoryProtectedSize #     1
EntryNo_HAL_NVMemoryProtection  #       1
EntryNo_HAL_NVMemoryIICAddress  #       1
EntryNo_HAL_NVMemoryRead        #       1
EntryNo_HAL_NVMemoryWrite       #       1

EntryNo_HAL_IICBuses            #       1
EntryNo_HAL_IICType             #       1
EntryNo_HAL_IICSetLines         #       1
EntryNo_HAL_IICReadLines        #       1

; Various flags and constants

; IIC

IICFlag_LowLevel        * 1:SHL:0
IICFlag_HighLevel       * 1:SHL:1
IICFlag_Fast            * 1:SHL:16

        END
@


1.1.2.2
log
@More HAL work. IOMD HAL fleshed out somewhat - system gets most of the way
through initialisation.

Version 5.35, 4.79.2.5. Tagged as 'Kernel-5_35-4_79_2_5'
@
text
@a30 5
EntryNo_HAL_IRQEnable           #       1
EntryNo_HAL_IRQDisable          #       1
EntryNo_HAL_IRQClear            #       1
EntryNo_HAL_IRQSource           #       1

a55 4

EntryNo_HAL_VideoFlybackDevice  #       1

EntryNo_HAL_MachineID           #       1
@


1.1.2.3
log
@first attemp at mjs video code in real HAL
@
text
@d62 1
a62 11
EntryNo_HAL_VideoFlybackDevice        #  1
EntryNo_HAL_Video_SetMode             #  1
EntryNo_HAL_Video_WritePaletteEntry   #  1
EntryNo_HAL_Video_WritePaletteEntries #  1
EntryNo_HAL_Video_ReadPaletteEntry    #  1
EntryNo_HAL_Video_SetInterlace        #  1
EntryNo_HAL_Video_SetBlank            #  1
EntryNo_HAL_Video_SetPowerSave        #  1
EntryNo_HAL_Video_UpdatePointer       #  1
EntryNo_HAL_Video_SetDAG              #  1
EntryNo_HAL_Video_VetMode             #  1
d65 1
@


1.1.2.4
log
@  Added HAL NVRAM support
Detail:
  Added the HAL NVRAM entries.
  Modified i2cutils to use the HAL entries for NVRAM and behave sensibly if the HAL reports that there is no NVRAM, in which case there must be a forced reset_cmos call so that the cache gets set up sensibly.
Admin:
  Tested under the RPC emulator and appears to be working correctly, although some calls to IIC are still being made in the no nvram case.

Version 5.35, 4.79.2.8. Tagged as 'Kernel-5_35-4_79_2_8'
@
text
@a76 12
; NVMemory

NVMemoryFlag_None 	    	* 0
NVMemoryFlag_MaybeIIC 	    	* 1
NVMemoryFlag_IIC 	    	* 2
NVMemoryFlag_HAL 	    	* 3
NVMemoryFlag_Provision    	* 7 ; mask for provision
NVMemoryFlag_ProtectAtEnd   	* 1:SHL:8   ; Protected region at end
NVMemoryFlag_Deprotectable	* 1:SHL:9
NVMemoryFlag_LowRead    	* 1:SHL:10  ; locations 0-15 are readable
NVMemoryFlag_LowWrite    	* 1:SHL:11  ; locations 0-15 are writeable

a81 1
IICFlag_HighSpeed       * 1:SHL:17
@


1.1.2.5
log
@More L7200 HAL work
@
text
@a73 3
EntryNo_HAL_MatrixColumns       #       1
EntryNo_HAL_MatrixScan          #       1

a74 5
EntryNo_HAL_ControllerAddress   #       1
EntryNo_HAL_HardwareInfo        #       1
EntryNo_HAL_SuperIOInfo         #       1


d82 1
a82 1
NVMemoryFlag_HAL 	    	* 4
@


1.1.2.6
log
@add some HAL_Video calls, attempt to deal with lack of h/w scroll

Version 5.35, 4.79.2.9. Tagged as 'Kernel-5_35-4_79_2_9'
@
text
@a72 3
EntryNo_HAL_Video_PixelFormats        #  1
EntryNo_HAL_Video_Features            #  1
EntryNo_HAL_Video_BufferAlignment     #  1
@


1.1.2.7
log
@Stuff. A bit of touchscreen, I expect, and probably some other bits too.
@
text
@a79 3
EntryNo_HAL_TouchscreenType     #       1
EntryNo_HAL_TouchscreenRead     #       1

@


1.1.2.8
log
@Check-in of the few last-minute changes for the Customer L demo. Nothing
exciting, apart from an extended touchscreen API.

Version 5.35, 4.79.2.13. Tagged as 'Kernel-5_35-4_79_2_13'
@
text
@a81 2
EntryNo_HAL_TouchscreenMode     #       1
EntryNo_HAL_TouchscreenMeasure  #       1
@


1.1.2.9
log
@  Addition of HAL UART for Customer L
Detail:
  HAL entries have been entered for the Customer L UART (very much like the ARM
PrimeCell, rather than the 16550).
Admin:
  It builds.

Version 5.35, 4.79.2.16. Tagged as 'Kernel-5_35-4_79_2_16'
@
text
@a89 19
EntryNo_HAL_UARTPorts           #       1
EntryNo_HAL_UARTStartUp         #       1
EntryNo_HAL_UARTShutdown        #       1
EntryNo_HAL_UARTFeatures        #       1
EntryNo_HAL_UARTReceiveByte     #       1
EntryNo_HAL_UARTTransmitByte    #       1
EntryNo_HAL_UARTLineStatus      #       1
EntryNo_HAL_UARTInterruptEnable #       1
EntryNo_HAL_UARTRate            #       1
EntryNo_HAL_UARTFormat          #       1
EntryNo_HAL_UARTFIFOSize        #       1
EntryNo_HAL_UARTFIFOClear       #       1
EntryNo_HAL_UARTFIFOEnable      #       1
EntryNo_HAL_UARTFIFOThreshold   #       1
EntryNo_HAL_UARTInterruptID     #       1
EntryNo_HAL_UARTBreak           #       1
EntryNo_HAL_UARTModemControl    #       1
EntryNo_HAL_UARTModemStatus     #       1
EntryNo_HAL_UARTDevice          #       1
@


1.1.2.10
log
@minor changes towards Chrontel support for Customer L demo
untested

Version 5.35, 4.79.2.18. Tagged as 'Kernel-5_35-4_79_2_18'
@
text
@a75 1
EntryNo_HAL_Video_OutputFormat        #  1
@


1.1.2.11
log
@Hopefully working NVMemory on Customer L now.

Version 5.35, 4.79.2.20. Tagged as 'Kernel-5_35-4_79_2_20'
@
text
@d118 1
a118 1
NVMemoryFlag_HAL 	    	* 3
@


1.1.2.12
log
@* Fixed the IIC code.
* Kernel puts sensible default FIQ handler in through the HAL.
* Fix to temporary page uncaching code.

Version 5.35, 4.79.2.30. Tagged as 'Kernel-5_35-4_79_2_30'
@
text
@a34 1
EntryNo_HAL_FIQDisableCode      #       1
@


1.1.2.13
log
@* Allows interrupt-driven use of PointerV (as well as polled).
* Allows HAL-driven software resets.
* Sound buffers corrected to be uncacheable.

Version 5.35, 4.79.2.33. Tagged as 'Kernel-5_35-4_79_2_33'
@
text
@a111 2
EntryNo_HAL_Reset               #       1

@


1.1.2.14
log
@1) Bring IOMD HAL more up to date. Add support for new
call HAL_CleanerSpace (preparation for StrongARM kernel
support).

2) In kernel, add HAL_CleanerSpace call (preparation for
StrongARM and XScale core support). Fix bug found with
ARMv3 support during test on Risc PC.

3) Implement new API for kernel SWIs that have used top
bits of addresses as flags. The new API has an extra
flag that must be set, so kernel can distinguish and
support both APIs. The reason for all this is that
addresses are 32-bits now, people, keep up there. Briefly:

  OS_HeapSort
    bit 31 of r0 set for new API, r1 is full 32-bit address
    flags move from r1 bits 31-29 to r0 bits 30-28

  OS_ReadLine
    bit 31 of r1 set for new API, r0 is full 32-bit address
    flags move from bits 31,30 of r0 to bits 30,29 of r1

  OS_SubstituteArgs
    bit 31 of r2 set for new API, r0 is full 32-bit address
    flag moves from bit 31 of r0 to bit 30 of r2

Tested on Risc PC and briefly on Customer A 2

Ta

Version 5.35, 4.79.2.41. Tagged as 'Kernel-5_35-4_79_2_41'
@
text
@a90 1
EntryNo_HAL_CleanerSpace        #       1
d118 9
a126 9
NVMemoryFlag_None               * 0
NVMemoryFlag_MaybeIIC           * 1
NVMemoryFlag_IIC                * 2
NVMemoryFlag_HAL                * 3
NVMemoryFlag_Provision          * 7 ; mask for provision
NVMemoryFlag_ProtectAtEnd       * 1:SHL:8   ; Protected region at end
NVMemoryFlag_Deprotectable      * 1:SHL:9
NVMemoryFlag_LowRead            * 1:SHL:10  ; locations 0-15 are readable
NVMemoryFlag_LowWrite           * 1:SHL:11  ; locations 0-15 are writeable
@


1.1.2.15
log
@Lots of Tungsten work.

Version 5.35, 4.79.2.48. Tagged as 'Kernel-5_35-4_79_2_48'
@
text
@d35 1
a35 7
EntryNo_HAL_IRQStatus           #       1
EntryNo_HAL_FIQEnable           #       1
EntryNo_HAL_FIQDisable          #       1
EntryNo_HAL_FIQDisableAll       #       1
EntryNo_HAL_FIQClear            #       1
EntryNo_HAL_FIQSource           #       1
EntryNo_HAL_FIQStatus           #       1
a51 1
EntryNo_HAL_NVMemoryPageSize    #       1
a61 3
EntryNo_HAL_IICDevice           #       1
EntryNo_HAL_IICTransfer         #       1
EntryNo_HAL_IICMonitorTransfer  #       1
d87 4
a90 5
EntryNo_HAL_MachineID           #       1 ; ReadSysInfo 2
EntryNo_HAL_ControllerAddress   #       1 ; Memory 9
EntryNo_HAL_HardwareInfo        #       1 ; ReadSysInfo 2
EntryNo_HAL_SuperIOInfo         #       1 ; ReadSysInfo 3
EntryNo_HAL_PlatformInfo        #       1 ; ReadSysInfo 8
a113 17
EntryNo_HAL_DebugRX             #       1
EntryNo_HAL_DebugTX             #       1

EntryNo_HAL_PCIFeatures         #       1
EntryNo_HAL_PCIReadConfigByte   #       1
EntryNo_HAL_PCIReadConfigHalfword #     1
EntryNo_HAL_PCIReadConfigWord   #       1
EntryNo_HAL_PCIWriteConfigByte  #       1
EntryNo_HAL_PCIWriteConfigHalfword #     1
EntryNo_HAL_PCIWriteConfigWord  #       1
EntryNo_HAL_PCISpecialCycle     #       1
EntryNo_HAL_PCISlotNumber       #       1
EntryNo_HAL_PCIAddresses        #       1

EntryNo_HAL_ATAControllerInfo   #       1
EntryNo_HAL_ATASetModes         #       1
EntryNo_HAL_ATACableID          #       1
a132 1
IICFlag_Background      * 1:SHL:4
@


1.1.2.16
log
@  Mostly device stuff.
Detail:
  * Implemented OS_Hardware 2, 3 and 4 as described in Docs.HAL.NewAPI.
  * Added new OS->HAL and HAL->OS routines to register HAL devices with the
    OS during hard resets.
  * Updated Docs.HAL.NewAPI to correct inconsistencies, fill in missing
    definitions, and allow for interrupt sharing.
  * Now uses OS_LeaveOS to trigger callbacks after ROM module init.
Admin:
  Untested. Requires new HAL.

Version 5.35, 4.79.2.49. Tagged as 'Kernel-5_35-4_79_2_49'
@
text
@a142 23
EntryNo_HAL_InitDevices         #       1

; Quick bodge until devices are working...
EntryNo_HAL_DMA_Activate              #       1
EntryNo_HAL_DMA_Deactivate            #       1
EntryNo_HAL_DMA_Reset                 #       1
EntryNo_HAL_DMA_Sleep                 #       1
EntryNo_HAL_DMA_TestIRQ               #       1
EntryNo_HAL_DMA_DMA_EnumeratePhysical #       1
EntryNo_HAL_DMA_DMA_EnumerateLogical  #       1
EntryNo_HAL_DMA_DMA_Allocate          #       1
EntryNo_HAL_DMA_DMA_Deallocate        #       1
EntryNo_HAL_DMA_DMA_Features          #       1
EntryNo_HAL_DMA_DMA_SetOptions        #       1
EntryNo_HAL_DMA_DMA_SetCurrentTransfer #      1
EntryNo_HAL_DMA_DMA_SetNextTransfer   #       1
EntryNo_HAL_DMA_DMA_TransferState     #       1
EntryNo_HAL_DMA_DMA_SetCurrentTransfer2 #     1
EntryNo_HAL_DMA_DMA_SetNextTransfer2  #       1
EntryNo_HAL_DMA_DMA_TransferState2    #       1
EntryNo_HAL_DMA_DMA_IRQClear          #       1
EntryNo_HAL_DMA_DMA_Status            #       1

@


1.1.2.17
log
@  Commit of kernel as featured in release 5.00.
Detail:
  Lots of changes since last version, at least the following:
  * Updated OS timestamp, removed alpha status
  * Negative INKEY OS version changed to &AA
  * GraphicsV is now alocated vector number &2A
  * ROM moved up to &FC000000
  * Max application slot increased to 512 Mbytes (for now)
  * Max size of RMA increased to 256 Mbytes
  * RMA is now first-created dynamic area (so it gets lowest address after
    top of application slot)
  * OS_Memory 10 reimplemeted
  * New OS_ReadSysInfo 6 values 18-22 added
  * OS_ReadSysInfo 8 gains flag bit to indicate soft power-off
  * Misc internal top-bit-set-address fixes
  * *ChangeDynamicArea can take sizes in megabytes or gigabytes
  * Magic word "&off" in R0 passed to OS_Reset powers down if possible
  * Added acceleration: block copy; CLS; text window scroll up; rectangle
    fill
  * Disabled LED flashing in page mode (liable to crash)
  * Masked sprite plot and VDU 5 text avoids reading the screen if possible
  * Framestore made USR mode accessible
  * Fix for VDU 5,127 bug - now relies on font definitions being in extreme
    quarters of memory, rather than bottom half
  * Allocated 64-bit OS_Convert... SWIs
  * IIC errors use allocated error numbers
  * Looks for Dallas RTC before Philips RTC because we're using a Philips
    NVRAM device with the same ID
  * Fix to bug that meant the oscillator in the Dallas RTC wasn't enabled
  * Default mouse type (USB) changed to allocated number
  * Ram disc max size increased to 128 Mbytes (Ursula merge) and made
    cacheable for StrongARMs (not XScale)
  * Branch through zero handler now works in USR mode, by use of a
    trampoline in the system stack to allow PC-relative register storage
  * Address exception handler changed to not use 0 as workspace
  * OS_Memory 13 extended to allow specification of cacheability and access
    privileges
  * Added OS_Memory 16 to return important memory addresses
  * RISCOS_MapInIO() takes cacheable flag in bit 3, access permissions in
    bits 10 and 11, doubly-mapped flag in bit 20, and access permissions
    specified flag in bit 21
  * Bug fix in last version for application abort handlers didn't quite
    work; register shuffle required
  * "Module is not 32-bit compatible" error now reports the module name
  * Default configured language changed from 10 to 11 (now Desktop again)

Version 5.35, 4.79.2.51. Tagged as 'Kernel-5_35-4_79_2_51'
@
text
@d136 1
a136 1
EntryNo_HAL_PCISlotTable        #       1
@


1.1.2.18
log
@  HAL device support, and a couple of new service calls.
Detail:
  * Rejigged documented meaning of device "Location" field so that we can
    fit full PCI locations in.
  * Defined lots of device "Type" values in Hdr:HALDevice.
  * Removed obsolete DMA-related HAL entries in Hdr:HALEntries (no longer
    required by DMAManager 0_15-4_4_2_6, no longer provided by Tungsten HAL
    0.07).
  * OS_Hardware 2 and 3 actually work now.
  * Changed OS_Hardware 4 to take a maximum major version number to match.
  * HAL workspace is now USR mode readable.
  * Service calls issued after module initialisation/finalisation (see
    Docs.ModPostServ).
Admin:
  OS_Hardware tested, service calls not tested.

Version 5.35, 4.79.2.52. Tagged as 'Kernel-5_35-4_79_2_52'
@
text
@d145 21
@


1.1.2.19
log
@Support for keys held down in the HAL at power on.
*Configure ANYTHINGsize was broken due to not setting R0 to ReadUnsigned
IIC ack message uninternationalised
OS_Memory was saying we only had 4M of RAM
VDU4 scrolling when output was switched to sprite was causing corruption
on use of CTRL-J and CTRL-K
Default SystemSize CMOS set to 32k

Version 5.35, 4.79.2.55. Tagged as 'Kernel-5_35-4_79_2_55'
@
text
@a25 2
HALFlag_NCNBWorkspace   *       1:SHL:0

a143 5

EntryNo_HAL_KbdScanSetup        #       1
EntryNo_HAL_KbdScan             #       1
EntryNo_HAL_KbdScanFinish       #       1
EntryNo_HAL_KbdScanInterrupt    #       1
@


1.1.2.20
log
@Huge update to L7200 HAL for Customer M 2 demo - now runs with 5.02 Kernel
used in Tungsten.
Added "fast" flash tool for Customer L, allowing ROMs to be sent serially at
115200 baud not 9600 baud.
Fix to VDU despatch for ARMv4 and later.
Fixes to power on delete keyboard and keyboard timeout
Implemented MemoryReadPhys and MemoryAmounts with the HAL.

Version 5.35, 4.79.2.59. Tagged as 'Kernel-5_35-4_79_2_59'
@
text
@a151 2
EntryNo_HAL_PhysInfo            #       1

@


1.1.2.21
log
@* HAL can choose to limit amount of screen memory to allocate
  [Not fully implemented - for now leaves at least 16MB free if only
  one RAM area; was 1MB].
* Added HAL_USBControllerInfo, HAL_MonitorLeadID and HAL_Video_Render.
* Added HAL->OS call OS_IICOpV.
* OS_MMUControl now allows independent control of I and C bits.
* Added facility to deactivate keyboard debounce (magic word "NoKd" in
  R2 in KeyV 0).
* Fixed problem with RAM amounts not a multiple of 4MB.
* Supremacy bit (in VDU 19) now sets all 8 bits of supremacy.
* Added PaletteV 14 (reads gamma tables).
* Added Supremacy transfer functions (like gamma correction, but for
  supremacy). Allows easy global supremacy effects in a mode-independent
  fashion. Controlled with PaletteV 15,16.
* Added modes 50-53 (320x240, 1,2,4,8bpp). Intended for small LCD.
* Added 13.5kHz versions of TV modes (selected by Hdr:Machine).
* Upped desktop version to 5.06.

Version 5.35, 4.79.2.66. Tagged as 'Kernel-5_35-4_79_2_66'
@
text
@a23 1
HALDesc_VideoRAMSize    #       4
a26 1
HALFlag_LimitVideoRAM   *       1:SHL:1
a152 6

EntryNo_HAL_USBControllerInfo   #       1

EntryNo_HAL_MonitorLeadID       #       1

EntryNo_HAL_Video_Render        #       1
@


1.1.2.22
log
@Now pads its HAL entry table with NullHALEntry if the HAL is providing fewer
entries than the Kernel needs. Helps internal Kernel use of CallHAL, but
doesn't affect external OS_Hardware users.

Version 5.35, 4.79.2.67. Tagged as 'Kernel-5_35-4_79_2_67'
@
text
@a161 2
KnownHALEntries                 #       0       ; Used inside Kernel

@


1.1.2.23
log
@* Changed some STB switches to Embedded_UI
* Added use of CDVPoduleIRQs (from Hdr:Machine)
* Fixed checksum corruption in OS_NVMemory block writes ending just below
  the checksum byte.
* Fixed R4 corruption by OS_Byte 162 with certain HALs.

Version 5.35, 4.79.2.71. Tagged as 'Kernel-5_35-4_79_2_71'
@
text
@a161 4
EntryNo_HAL_USBPortPower        #       1
EntryNo_HAL_USBPortStatus       #       1
EntryNo_HAL_USBPortIRQ          #       1

@


1.1.2.24
log
@        added knowledge of GraphicsV_IICOp and default call to
        HAL_Video_IIC_Op
Detail:
Admin:
     JB  Castle IP

Version 5.35, 4.79.2.79. Tagged as 'Kernel-5_35-4_79_2_79'
@
text
@a165 2
EntryNo_HAL_Video_IICOp         #       1

@


1.1.2.25
log
@Added new HAL Timer entries for shared interrupts.

Version 5.35, 4.79.2.87. Tagged as 'Kernel-5_35-4_79_2_87'
@
text
@a167 3
EntryNo_HAL_TimerIRQClear       #       1
EntryNo_HAL_TimerIRQStatus      #       1

@


1.1.2.26
log
@  Minor kernel updates
Detail:
  * Added some documentation on previously undocumented HAL calls
  * Corrected NVMemoryFlag_Provision bitmask to match documentation
  * Bugfix: NVMemoryFlag_ProtectAtEnd flag was being ignored
Admin:
  Not tested

Version 5.35, 4.79.2.98. Tagged as 'Kernel-5_35-4_79_2_98'
@
text
@d181 1
a181 1
NVMemoryFlag_Provision          * &FF ; mask for provision
@


1.1.2.27
log
@Keep hdr/HALDevice & hdr/HALEntries in sync with Cortex branch
Detail:
  hdr/HALDevice - Device types & IDs for CPU clock generator and GPIO interface
  hdr/HALEntries - HAL_ExtMachineID entry (but not used by this kernel yet)
Admin:
  Tungsten ROM built OK, but untested at runtime.


Version 5.35, 4.79.2.116. Tagged as 'Kernel-5_35-4_79_2_116'
@
text
@a170 2
EntryNo_HAL_ExtMachineID        #       1 ; ReadSysInfo 10

@


1.1.2.28
log
@Add compressed ROM support. Make more use of ARMv5+ instructions. Other misc tweaks.
Detail:
  hdr/OSEntries, s/HAL, s/Kernel - Add compressed ROM support.
  With the current scheme, a compressed ROM will have everything except the HAL and kernel compressed.
  During the keyboard scan period the kernel will allocate some temporary decompression workspace and call the decompression stub that was appended to the ROM.
  The decompression stub is expected to perform in-place decompression of the ROM. Once decompression is complete the workspace will be freed and the page tables updated to make the ROM image readonly.
  It's the HAL's responsibility to make sure any compressed ROM is located in an area of physically contiguous RAM large enough to hold the uncompressed image.
  More info here: http://www.riscosopen.org/wiki/documentation/show/Compressed%20ROMs
  Makefile, h/OSEntries - Add C export of hdr/OSEntries
  hdr/HALDevice - Add device ID for Tungsten video device. Convert tabs to spaces for consistency.
  hdr/HALEntries, s/NewReset - Moved KbdFlag_* definitions to hdr/HALEntries so HALs can use them in their keyboard scan code
  s/ArthurSWIs, S/HAL, s/HeapSort, s/Kernel, s/MemInfo, s/Middle, s/NewIRQs, s/TickEvents, s/vdu/vdugrafb - Make use of BLX, BFI and long multiplies if the CPU supports them. Don't support SWI calls from thumb mode if the CPU doesn't support thumb.
  s/HAL - Made the LDMIA in Init_MapInRAM more sensible (register order was backwards). The old code did work, but wasn't doing what the comments described. Removed unused/unfinished HAL_Write0 function. Improve RISCOS_LogToPhys to check L1PT for any section mappings if the logical_to_physical call fails
  s/ModHand - Save one instruction by using ADR instead of MOV+ADD to compute lr
  s/NewReset, s/PMF/key - Pass L1PT to HAL_Reset to allow machines without hardware reset (e.g. IOMD) to perform resets by manually disabling the MMU and restarting the ROM
  s/vdu/vdudriver, s/vdu/vdugrafv - Use GVEntry macro borrowed from NVidia module for setting up the GraphicsV jump table. Make GraphicsV_ReadPaletteEntry call HAL_Video_ReadPaletteEntry if left unclaimed. Fixup GV_Render to only call HAL_Video_Render if the HAL call is implemented.
Admin:
  Tested with OMAP3, IOMD & Tungsten ROMs/softloads.


Version 5.35, 4.79.2.138. Tagged as 'Kernel-5_35-4_79_2_138'
@
text
@a196 11
; Keyboard scan

KbdFlag_Ctrl    * 1:SHL:0
KbdFlag_Shift   * 1:SHL:1
KbdFlag_R       * 1:SHL:4
KbdFlag_T       * 1:SHL:5
KbdFlag_Delete  * 1:SHL:6
KbdFlag_Copy    * 1:SHL:7
KbdFlag_Present * 1:SHL:30
KbdFlag_Done    * 1:SHL:31

@


1.1.2.29
log
@Add new HAL entry, HAL_UARTDefault. Make use of Hdr:SerialOp & OS_SerialOp 10.
Detail:
  hdr/HALEntries - Brought in line with RPi branch, plus addition of new HAL_UARTDefault HAL entry, to allow DualSerial to determine which (if any) of the HAL UARTs should be the default UART accessed via OS_SerialOp
  s/GetAll - Add GET of Hdr:SerialOp
  s/PMF/osbyte - Use OS_SerialOp 10 when constructing filename to open for OS_Byte 2
Admin:
  Tested in OMAP3, Tungsten ROMs


Version 5.35, 4.79.2.152. Tagged as 'Kernel-5_35-4_79_2_152'
@
text
@d33 1
a33 1
EntryNo_HAL_Init                #       1 ; 0
d35 130
a164 132
EntryNo_HAL_IRQEnable           #       1 ; 1
EntryNo_HAL_IRQDisable          #       1 ; 2
EntryNo_HAL_IRQClear            #       1 ; 3
EntryNo_HAL_IRQSource           #       1 ; 4
EntryNo_HAL_IRQStatus           #       1 ; 5
EntryNo_HAL_FIQEnable           #       1 ; 6
EntryNo_HAL_FIQDisable          #       1 ; 7
EntryNo_HAL_FIQDisableAll       #       1 ; 8
EntryNo_HAL_FIQClear            #       1 ; 9
EntryNo_HAL_FIQSource           #       1 ; 10
EntryNo_HAL_FIQStatus           #       1 ; 11

EntryNo_HAL_Timers              #       1 ; 12
EntryNo_HAL_TimerDevice         #       1 ; 13
EntryNo_HAL_TimerGranularity    #       1 ; 14
EntryNo_HAL_TimerMaxPeriod      #       1 ; 15
EntryNo_HAL_TimerSetPeriod      #       1 ; 16
EntryNo_HAL_TimerPeriod         #       1 ; 17
EntryNo_HAL_TimerReadCountdown  #       1 ; 18

EntryNo_HAL_CounterRate         #       1 ; 19
EntryNo_HAL_CounterPeriod       #       1 ; 20
EntryNo_HAL_CounterRead         #       1 ; 21
EntryNo_HAL_CounterDelay        #       1 ; 22

EntryNo_HAL_NVMemoryType        #       1 ; 23
EntryNo_HAL_NVMemorySize        #       1 ; 24
EntryNo_HAL_NVMemoryPageSize    #       1 ; 25
EntryNo_HAL_NVMemoryProtectedSize #     1 ; 26
EntryNo_HAL_NVMemoryProtection  #       1 ; 27
EntryNo_HAL_NVMemoryIICAddress  #       1 ; 28
EntryNo_HAL_NVMemoryRead        #       1 ; 29
EntryNo_HAL_NVMemoryWrite       #       1 ; 30

EntryNo_HAL_IICBuses            #       1 ; 31
EntryNo_HAL_IICType             #       1 ; 32
EntryNo_HAL_IICSetLines         #       1 ; 33
EntryNo_HAL_IICReadLines        #       1 ; 34
EntryNo_HAL_IICDevice           #       1 ; 35
EntryNo_HAL_IICTransfer         #       1 ; 36
EntryNo_HAL_IICMonitorTransfer  #       1 ; 37

EntryNo_HAL_VideoFlybackDevice        #  1 ; 38
EntryNo_HAL_Video_SetMode             #  1 ; 39
EntryNo_HAL_Video_WritePaletteEntry   #  1 ; 40
EntryNo_HAL_Video_WritePaletteEntries #  1 ; 41
EntryNo_HAL_Video_ReadPaletteEntry    #  1 ; 42
EntryNo_HAL_Video_SetInterlace        #  1 ; 43
EntryNo_HAL_Video_SetBlank            #  1 ; 44
EntryNo_HAL_Video_SetPowerSave        #  1 ; 45
EntryNo_HAL_Video_UpdatePointer       #  1 ; 46
EntryNo_HAL_Video_SetDAG              #  1 ; 47
EntryNo_HAL_Video_VetMode             #  1 ; 48
EntryNo_HAL_Video_PixelFormats        #  1 ; 49
EntryNo_HAL_Video_Features            #  1 ; 50
EntryNo_HAL_Video_BufferAlignment     #  1 ; 51
EntryNo_HAL_Video_OutputFormat        #  1 ; 52

EntryNo_HAL_MatrixColumns       #       1 ; 53
EntryNo_HAL_MatrixScan          #       1 ; 54

EntryNo_HAL_TouchscreenType     #       1 ; 55
EntryNo_HAL_TouchscreenRead     #       1 ; 56
EntryNo_HAL_TouchscreenMode     #       1 ; 57
EntryNo_HAL_TouchscreenMeasure  #       1 ; 58

EntryNo_HAL_MachineID           #       1 ; 59, ReadSysInfo 2
EntryNo_HAL_ControllerAddress   #       1 ; 60, Memory 9
EntryNo_HAL_HardwareInfo        #       1 ; 61, ReadSysInfo 2
EntryNo_HAL_SuperIOInfo         #       1 ; 62, ReadSysInfo 3
EntryNo_HAL_PlatformInfo        #       1 ; 63, ReadSysInfo 8
EntryNo_HAL_CleanerSpace        #       1 ; 64

EntryNo_HAL_UARTPorts           #       1 ; 65
EntryNo_HAL_UARTStartUp         #       1 ; 66
EntryNo_HAL_UARTShutdown        #       1 ; 67
EntryNo_HAL_UARTFeatures        #       1 ; 68
EntryNo_HAL_UARTReceiveByte     #       1 ; 69
EntryNo_HAL_UARTTransmitByte    #       1 ; 70
EntryNo_HAL_UARTLineStatus      #       1 ; 71
EntryNo_HAL_UARTInterruptEnable #       1 ; 72
EntryNo_HAL_UARTRate            #       1 ; 73
EntryNo_HAL_UARTFormat          #       1 ; 74
EntryNo_HAL_UARTFIFOSize        #       1 ; 75
EntryNo_HAL_UARTFIFOClear       #       1 ; 76
EntryNo_HAL_UARTFIFOEnable      #       1 ; 77
EntryNo_HAL_UARTFIFOThreshold   #       1 ; 78
EntryNo_HAL_UARTInterruptID     #       1 ; 79
EntryNo_HAL_UARTBreak           #       1 ; 80
EntryNo_HAL_UARTModemControl    #       1 ; 81
EntryNo_HAL_UARTModemStatus     #       1 ; 82
EntryNo_HAL_UARTDevice          #       1 ; 83

EntryNo_HAL_Reset               #       1 ; 84
EntryNo_HAL_DebugRX             #       1 ; 85
EntryNo_HAL_DebugTX             #       1 ; 86

EntryNo_HAL_PCIFeatures         #       1 ; 87
EntryNo_HAL_PCIReadConfigByte   #       1 ; 88
EntryNo_HAL_PCIReadConfigHalfword #     1 ; 89
EntryNo_HAL_PCIReadConfigWord   #       1 ; 90
EntryNo_HAL_PCIWriteConfigByte  #       1 ; 91
EntryNo_HAL_PCIWriteConfigHalfword #    1 ; 92
EntryNo_HAL_PCIWriteConfigWord  #       1 ; 93
EntryNo_HAL_PCISpecialCycle     #       1 ; 94
EntryNo_HAL_PCISlotTable        #       1 ; 95
EntryNo_HAL_PCIAddresses        #       1 ; 96

EntryNo_HAL_ATAControllerInfo   #       1 ; 97
EntryNo_HAL_ATASetModes         #       1 ; 98
EntryNo_HAL_ATACableID          #       1 ; 99

EntryNo_HAL_InitDevices         #       1 ; 100

EntryNo_HAL_KbdScanSetup        #       1 ; 101
EntryNo_HAL_KbdScan             #       1 ; 102
EntryNo_HAL_KbdScanFinish       #       1 ; 103
EntryNo_HAL_KbdScanInterrupt    #       1 ; 104

EntryNo_HAL_PhysInfo            #       1 ; 105

EntryNo_HAL_USBControllerInfo   #       1 ; 106

EntryNo_HAL_MonitorLeadID       #       1 ; 107

EntryNo_HAL_Video_Render        #       1 ; 108

EntryNo_HAL_USBPortPower        #       1 ; 109
EntryNo_HAL_USBPortStatus       #       1 ; 110
EntryNo_HAL_USBPortIRQ          #       1 ; 111

EntryNo_HAL_Video_IICOp         #       1 ; 112
d166 1
a166 2
EntryNo_HAL_TimerIRQClear       #       1 ; 113
EntryNo_HAL_TimerIRQStatus      #       1 ; 114
d168 2
a169 1
EntryNo_HAL_ExtMachineID        #       1 ; 115, ReadSysInfo 10
d171 1
a171 3
EntryNo_HAL_Video_FramestoreAddress  #  1 ; 116

EntryNo_HAL_UARTDefault         #       1 ; 117
@


1.1.2.30
log
@Fix failure to boot with exactly 16MB of RAM
With no VRAM, in Kernerl.s.HAL line 370, the less than 16M case sets aside half the RAM as available for video (more than, it uses no more than 32M) but the exactly equals 16M case set aside none.
Add some exports to hdr.HALEntries to define the subreasons to OS_Hardware.

Version 5.35, 4.79.2.154. Tagged as 'Kernel-5_35-4_79_2_154'
@
text
@d177 1
a177 1
KnownHALEntries                 #       0 ; Used inside Kernel
a180 9
; OS_Hardware subreasons
                                ^ 0
OSHW_CallHAL                    # 1
OSHW_LookupRoutine              # 1
OSHW_DeviceAdd                  # 1
OSHW_DeviceRemove               # 1
OSHW_DeviceEnumerate            # 1
OSHW_MaxSubreason               # 1       ; Used in despatch inside Kernel

@


1.1.2.31
log
@Make GraphicsV_IICOp more consistent
No accepts  r0 = b31-24 set 0
                 b23-16 fully qualified IIC address
                 b15-0  starting offset
            r1 = buffer pointer
            r2 = number of bytes to tranfer
            r4 = b31-24 display number
                 b23-16 head
                 b15-0  reason code (=14)
Now returns r0 = result codes as per HAL_IICTransfer()
            r1 = buffer pointer incremented by number of bytes transferred
            r2 = number of bytes *not* transferred
            r4 = 0
Removed '_' after Video in entry numbers to be consistent with other HAL entry naming, and HAL_VideoFlybackDevice.
Added IICStatus return numbers to Hdr:HALEntries.
Stop calling HAL_MonitorLeadID as only IOMD implemented it - just guess VGA until the graphics driver says otherwise.

Version 5.35, 4.79.2.159. Tagged as 'Kernel-5_35-4_79_2_159'
@
text
@d78 14
a91 14
EntryNo_HAL_VideoSetMode              #  1 ; 39
EntryNo_HAL_VideoWritePaletteEntry    #  1 ; 40
EntryNo_HAL_VideoWritePaletteEntries  #  1 ; 41
EntryNo_HAL_VideoReadPaletteEntry     #  1 ; 42
EntryNo_HAL_VideoSetInterlace         #  1 ; 43
EntryNo_HAL_VideoSetBlank             #  1 ; 44
EntryNo_HAL_VideoSetPowerSave         #  1 ; 45
EntryNo_HAL_VideoUpdatePointer        #  1 ; 46
EntryNo_HAL_VideoSetDAG               #  1 ; 47
EntryNo_HAL_VideoVetMode              #  1 ; 48
EntryNo_HAL_VideoPixelFormats         #  1 ; 49
EntryNo_HAL_VideoFeatures             #  1 ; 50
EntryNo_HAL_VideoBufferAlignment      #  1 ; 51
EntryNo_HAL_VideoOutputFormat         #  1 ; 52
d158 1
a158 1
                                #       1 ; 107 (was HAL_MonitorLeadID)
d160 1
a160 1
EntryNo_HAL_VideoRender         #       1 ; 108
d166 1
a166 1
EntryNo_HAL_VideoIICOp          #       1 ; 112
d173 1
a173 1
EntryNo_HAL_VideoFramestoreAddress   #  1 ; 116
d204 5
a208 16
IICFlag_LowLevel                * 1:SHL:0
IICFlag_HighLevel               * 1:SHL:1
IICFlag_MultiMaster             * 1:SHL:2
IICFlag_Slave                   * 1:SHL:3
IICFlag_Background              * 1:SHL:4
IICFlag_Fast                    * 1:SHL:16
IICFlag_HighSpeed               * 1:SHL:17
IICFlag_ProtocolVersionShift    * 20
IICFlag_ProtocolVersionMask     * &FFF      ; IIC protocol version x100
                                ^ 0
IICStatus_Completed             # 1         ; High level API return codes
IICStatus_InProgress            # 1
IICStatus_NoACK                 # 1
IICStatus_Busy                  # 1
IICStatus_Slave                 # 1
IICStatus_Error                 # 1
@


1.1.2.32
log
@  Added OS_Hardware 5
Detail:
  This functions like OS_Hardware 4, but enumerates devices in the
  chronological order of registration.
Admin:
  Builds, but untested.

Version 5.35, 4.79.2.160. Tagged as 'Kernel-5_35-4_79_2_160'
@
text
@a187 1
OSHW_DeviceEnumerateChrono      # 1
@


1.1.2.33
log
@Sort out hard ROM size for HALs with no hard ROM
Previously HAL_PhysInfo took one of two routes to get the arrangment table of arrangement table size.
Reorganised to accept a subreason to allow other physical info to be requested.


Version 5.35, 4.79.2.161. Tagged as 'Kernel-5_35-4_79_2_161'
@
text
@a190 6
; PhysInfo
                                ^ 0
PhysInfo_GetTableSize           # 1
PhysInfo_WriteTable             # 1
PhysInfo_HardROM                # 1

@


1.1.2.34
log
@Merge with RPi branch
Detail:
  Merge the RPi branch with the HAL branch, ending RPi branch development
  Brief summary of changes brought in:
  * Added HAL_VideoStartupMode to allow the HAL to specify a startup mode for the OS
  * Fixed addresses being sent to GraphicsV_SetDMAAddress being wrong for external framestores (addresses were given as if internal framestore was in use)
  * Add InverseTextTransparency option for limited compile-time support for targets where framebuffer alpha channel is important
  * Fix ConfiguredLanguage for non-Tungsten builds
  * Update ARMv6 CPU detection to read cache parameters from cache type register instead of using KnownCPUTable
  * Add HALDebugHexTX/TX2/TX4 debug routines for writing out numbers via HAL
  * Use HAL_TimerIRQClear when clearing timer 0 interrupt instead of just HAL_IRQClear
  * Initialise FileLangCMOS using defines from Hdr:FSNumbers instead of magic numbers. Use SDFS on M_ARM11ZF.
  * Improved software mouse pointer support; software pointer now removed & restored in some of the same places the text cursor is
  * Improve support for external framestores; driver is now able to grow/shrink/move the framestore on mode changes if bit 5 of GraphicsV_DisplayFeatures R0 is set
  * GraphicsV_FramestoreAddress now has a default claimant which calls HAL_VideoFramestoreAddress
Admin:
  Tested on Raspberry Pi, Iyonix, OMAP3, IOMD


Version 5.35, 4.79.2.165. Tagged as 'Kernel-5_35-4_79_2_165'
@
text
@a176 2
EntryNo_HAL_VideoStartupMode    #       1 ; 118

@


1.1.2.35
log
@Add new HAL call, HAL_IRQMax, to allow the kernel to determine the number of IRQ lines/devices at runtime
Detail:
  hdr/HALEntries - Reuse the old HAL_MonitorLeadID call number for HAL_IRQMax
  hdr/KernelWS - Rearrange CursorChunkAddress workspace a bit. Removed unused OldOscliBuffs and a couple of pre-HAL allocations, and made DefIRQ1Vspace the same size for all build configs. Add an IRQMax var to zero page workspace to cache the value returned by HAL_IRQMax.
  s/HAL - Initialise IRQMax shortly after HAL initialisation. Revise ClearPhysRAM comment to reflect which vars are preserved in the current version of the code.
  s/NewIRQs - Strip out a fair bit of pre-HAL code to make the file more readable. Update OS_ClaimDeviceVector/OS_ReleaseDeviceVector to check against IRQMax instead of the MaxInterrupts compile-time limit.
Admin:
  Tested on BB-xM, Iyonix, RiscPC, Pi
  Although the OS will now nominally adapt at runtime to how many IRQ devices there are, it's still using MaxInterrupts as an upper limit as the device claimant table has a fixed memory allocation.


Version 5.35, 4.79.2.182. Tagged as 'Kernel-5_35-4_79_2_182'
@
text
@d158 1
a158 1
EntryNo_HAL_IRQMax              #       1 ; 107 (was HAL_MonitorLeadID)
@


1.1.2.36
log
@  Correction to code to add GraphicsV_PixelFormats call to
  HAL graphics driver calls.  Added further debug capability
Detail:
  Added additional HAL call. minor code correction in hal graphicsv dispatcher
  Added DebugReg macro to aid debugging
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.215. Tagged as 'Kernel-5_35-4_79_2_215'
@
text
@a177 1
EntryNo_HAL_VideoPixelFormatList #      1 ; 119
@


1.1.2.37
log
@Add definitions for USB controller types
Detail:
  hdr/HALEntries - Added definitions for the different USB controller types reported by HAL_USBControllerInfo
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.227. Tagged as 'Kernel-5_35-4_79_2_227'
@
text
@a241 7
; USB

HALUSBControllerType_OHCI        * 0
HALUSBControllerType_EHCI        * 1
HALUSBControllerType_MUSBMHDRC   * 2
HALUSBControllerType_SynopsysDWC * 3

@


1.1.2.38
log
@Add more HAL USB definitions to hdr/HALEntries. Add debug option for calling HangWatch_Dump on serious errors.
Detail:
  hdr/HALEntries - Added definition of the struct returned by HAL_USBControllerInfo
  hdr/Options, s/Middle - Added the option to call HangWatch_Dump on serious errors
Admin:
  Tested on BB-xM


Version 5.35, 4.79.2.235. Tagged as 'Kernel-5_35-4_79_2_235'
@
text
@a243 7
                                 ^ 0
HALUSBControllerInfo_Type        # 4 ; As below
HALUSBControllerInfo_Flags       # 4 ; As below
HALUSBControllerInfo_HW          # 4 ; Hardware base address
HALUSBControllerInfo_DevNo       # 4 ; IRQ device number
HALUSBControllerInfo_SizeOf      # 0 ; Size of base structure

a248 6
HALUSBControllerFlag_HAL_USBPortPower  * 1 ; Use HAL_USBPortPower
HALUSBControllerFlag_HAL_USBPortStatus * 2 ; Use HAL_USBPortStatus
HALUSBControllerFlag_HAL_USBPortIRQ    * 4 ; Use HAL_USBPortIRQ
HALUSBControllerFlag_32bit_Regs        * 8 ; Must use 32bit access for all registers
HALUSBControllerFlag_EHCI_ETTF         * &80000000 ; EHCI controller has embedded TT

@


1.1.2.39
log
@Add the DWC (type 3) USB controller structure definitions
Add an extra entry for a revised power control/overcurrent monitoring API, more closely following the model that HAL_TimerIRQStatus and HAL_TimerIRQClear uses.

Version 5.35, 4.79.2.243. Tagged as 'Kernel-5_35-4_79_2_243'
@
text
@d163 2
a164 2
EntryNo_HAL_USBPortIRQStatus    #       1 ; 110
EntryNo_HAL_USBPortIRQClear     #       1 ; 111
a179 2
EntryNo_HAL_USBPortDevice       #       1 ; 120

a249 5
                                 ^ HALUSBControllerInfo_SizeOf
HALUSBControllerInfo_DMAOffset   # 4 ; Offset from ARM physical -> DMA addresses
HALUSBControllerInfo_HW_MPHI     # 4 ; Message based Parallel Host Interface base address
HALUSBControllerInfo_DevNo_MPHI  # 4 ; IRQ device number
HALUSBControllerInfo_SizeOfType3 # 0 ; Size of extended structure for Synopsys DWC
a254 1
HALUSBControllerType_XHCI        * 4
d256 5
a260 4
HALUSBControllerFlag_HAL_Port_Power   * 1 ; Use HAL_USBPortPower
HALUSBControllerFlag_HAL_Over_Current * 2 ; Use HAL_USBPortDevice/IRQStatus/IRQClear
HALUSBControllerFlag_32bit_Regs       * 8 ; Must use 32bit access for all registers
HALUSBControllerFlag_EHCI_ETTF        * &80000000 ; EHCI controller has embedded TT
@


1.1.2.40
log
@  Added HAL entrpoint to access hardware watchdog timer
Detail:
Admin:


Version 5.35, 4.79.2.246. Tagged as 'Kernel-5_35-4_79_2_246'
@
text
@a181 2
EntryNo_HAL_Watchdog            #       1 ; 121

@


1.1.2.41
log
@Add OS_ReadSysInfo 9,6 and 9,7
Subreason 7 returns a string naming the HAL platform. Use HAL entry 97 to get this, and obsolete 97/98/99 in favour of using a HAL device. Line up the HAL video entries to match the others.
Subreason 6 is just back filling one ROL added, testing this on RISC OS Select just returned the OS name so we do the same now (same as subreason 0, not sure what ROL's distinction was for).
Allocate a HAL device for PATA IDE controllers, and the 2 known ones to date - Tungsten and IOMD systems.

Version 5.35, 4.79.2.301. Tagged as 'Kernel-5_35-4_79_2_301'
@
text
@d77 15
a91 15
EntryNo_HAL_VideoFlybackDevice       #  1 ; 38
EntryNo_HAL_VideoSetMode             #  1 ; 39
EntryNo_HAL_VideoWritePaletteEntry   #  1 ; 40
EntryNo_HAL_VideoWritePaletteEntries #  1 ; 41
EntryNo_HAL_VideoReadPaletteEntry    #  1 ; 42
EntryNo_HAL_VideoSetInterlace        #  1 ; 43
EntryNo_HAL_VideoSetBlank            #  1 ; 44
EntryNo_HAL_VideoSetPowerSave        #  1 ; 45
EntryNo_HAL_VideoUpdatePointer       #  1 ; 46
EntryNo_HAL_VideoSetDAG              #  1 ; 47
EntryNo_HAL_VideoVetMode             #  1 ; 48
EntryNo_HAL_VideoPixelFormats        #  1 ; 49
EntryNo_HAL_VideoFeatures            #  1 ; 50
EntryNo_HAL_VideoBufferAlignment     #  1 ; 51
EntryNo_HAL_VideoOutputFormat        #  1 ; 52
d143 3
a145 3
EntryNo_HAL_PlatformName        #       1 ; 97, ReadSysInfo 9 subreason 7 (was HAL_ATAControllerInfo)
                                #       1 ; 98 (was HAL_ATASetModes)
                                #       1 ; 99 (was HAL_ATACableID)
@


1.1.2.28.2.1
log
@  Changes to resolve some of the BCM2835 initial hacks
  1: Added HAL_FramebufferAddress entry.
  2: Minor mod the NoIrqVecSwiDispatch mods recently submitted. Improved coverage
  3: Added compile time switch InverseTextTransparency to toggle sense of text
  (pre-wimp) for use until correct transparency behaviour is introduced in the RPi
  start.elf.
  4: Ensured that if a non aligned frame buffer is reported, ALL of the space
  is actually mapped in.
Detail:
  (list files and functions that have changed)
Admin:
  builds and runs .. Still needs service_mode extension work to replace hard
  coded mode definition files
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.147.2.5. Tagged as 'Kernel-5_35-4_79_2_147_2_5'
@
text
@a172 2
EntryNo_HAL_Video_FramestoreAddress  #  1

@


1.1.2.28.2.2
log
@  Refinement to Timer clear change from a recent commit
Detail:
  An undocumented entry condition of TickOne is that r0 contains the device
  number corresponding to Timer0. This must be passed to HAL_IRQClear on
  some platforms.
Admin:
  Tested only on a Raspberry Pi. Also added enumeration of entry numbers in
  comments in Hdr:HALEntries - a handy reference when debugging from the
  command line!

Version 5.35, 4.79.2.147.2.8. Tagged as 'Kernel-5_35-4_79_2_147_2_8'
@
text
@d33 1
a33 1
EntryNo_HAL_Init                #       1 ; 0
d35 130
a164 130
EntryNo_HAL_IRQEnable           #       1 ; 1
EntryNo_HAL_IRQDisable          #       1 ; 2
EntryNo_HAL_IRQClear            #       1 ; 3
EntryNo_HAL_IRQSource           #       1 ; 4
EntryNo_HAL_IRQStatus           #       1 ; 5
EntryNo_HAL_FIQEnable           #       1 ; 6
EntryNo_HAL_FIQDisable          #       1 ; 7
EntryNo_HAL_FIQDisableAll       #       1 ; 8
EntryNo_HAL_FIQClear            #       1 ; 9
EntryNo_HAL_FIQSource           #       1 ; 10
EntryNo_HAL_FIQStatus           #       1 ; 11

EntryNo_HAL_Timers              #       1 ; 12
EntryNo_HAL_TimerDevice         #       1 ; 13
EntryNo_HAL_TimerGranularity    #       1 ; 14
EntryNo_HAL_TimerMaxPeriod      #       1 ; 15
EntryNo_HAL_TimerSetPeriod      #       1 ; 16
EntryNo_HAL_TimerPeriod         #       1 ; 17
EntryNo_HAL_TimerReadCountdown  #       1 ; 18

EntryNo_HAL_CounterRate         #       1 ; 19
EntryNo_HAL_CounterPeriod       #       1 ; 20
EntryNo_HAL_CounterRead         #       1 ; 21
EntryNo_HAL_CounterDelay        #       1 ; 22

EntryNo_HAL_NVMemoryType        #       1 ; 23
EntryNo_HAL_NVMemorySize        #       1 ; 24
EntryNo_HAL_NVMemoryPageSize    #       1 ; 25
EntryNo_HAL_NVMemoryProtectedSize #     1 ; 26
EntryNo_HAL_NVMemoryProtection  #       1 ; 27
EntryNo_HAL_NVMemoryIICAddress  #       1 ; 28
EntryNo_HAL_NVMemoryRead        #       1 ; 29
EntryNo_HAL_NVMemoryWrite       #       1 ; 30

EntryNo_HAL_IICBuses            #       1 ; 31
EntryNo_HAL_IICType             #       1 ; 32
EntryNo_HAL_IICSetLines         #       1 ; 33
EntryNo_HAL_IICReadLines        #       1 ; 34
EntryNo_HAL_IICDevice           #       1 ; 35
EntryNo_HAL_IICTransfer         #       1 ; 36
EntryNo_HAL_IICMonitorTransfer  #       1 ; 37

EntryNo_HAL_VideoFlybackDevice        #  1 ; 38
EntryNo_HAL_Video_SetMode             #  1 ; 39
EntryNo_HAL_Video_WritePaletteEntry   #  1 ; 40
EntryNo_HAL_Video_WritePaletteEntries #  1 ; 41
EntryNo_HAL_Video_ReadPaletteEntry    #  1 ; 42
EntryNo_HAL_Video_SetInterlace        #  1 ; 43
EntryNo_HAL_Video_SetBlank            #  1 ; 44
EntryNo_HAL_Video_SetPowerSave        #  1 ; 45
EntryNo_HAL_Video_UpdatePointer       #  1 ; 46
EntryNo_HAL_Video_SetDAG              #  1 ; 47
EntryNo_HAL_Video_VetMode             #  1 ; 48
EntryNo_HAL_Video_PixelFormats        #  1 ; 49
EntryNo_HAL_Video_Features            #  1 ; 50
EntryNo_HAL_Video_BufferAlignment     #  1 ; 51
EntryNo_HAL_Video_OutputFormat        #  1 ; 52

EntryNo_HAL_MatrixColumns       #       1 ; 53
EntryNo_HAL_MatrixScan          #       1 ; 54

EntryNo_HAL_TouchscreenType     #       1 ; 55
EntryNo_HAL_TouchscreenRead     #       1 ; 56
EntryNo_HAL_TouchscreenMode     #       1 ; 57
EntryNo_HAL_TouchscreenMeasure  #       1 ; 58

EntryNo_HAL_MachineID           #       1 ; 59, ReadSysInfo 2
EntryNo_HAL_ControllerAddress   #       1 ; 60, Memory 9
EntryNo_HAL_HardwareInfo        #       1 ; 61, ReadSysInfo 2
EntryNo_HAL_SuperIOInfo         #       1 ; 62, ReadSysInfo 3
EntryNo_HAL_PlatformInfo        #       1 ; 63, ReadSysInfo 8
EntryNo_HAL_CleanerSpace        #       1 ; 64

EntryNo_HAL_UARTPorts           #       1 ; 65
EntryNo_HAL_UARTStartUp         #       1 ; 66
EntryNo_HAL_UARTShutdown        #       1 ; 67
EntryNo_HAL_UARTFeatures        #       1 ; 68
EntryNo_HAL_UARTReceiveByte     #       1 ; 69
EntryNo_HAL_UARTTransmitByte    #       1 ; 70
EntryNo_HAL_UARTLineStatus      #       1 ; 71
EntryNo_HAL_UARTInterruptEnable #       1 ; 72
EntryNo_HAL_UARTRate            #       1 ; 73
EntryNo_HAL_UARTFormat          #       1 ; 74
EntryNo_HAL_UARTFIFOSize        #       1 ; 75
EntryNo_HAL_UARTFIFOClear       #       1 ; 76
EntryNo_HAL_UARTFIFOEnable      #       1 ; 77
EntryNo_HAL_UARTFIFOThreshold   #       1 ; 78
EntryNo_HAL_UARTInterruptID     #       1 ; 79
EntryNo_HAL_UARTBreak           #       1 ; 80
EntryNo_HAL_UARTModemControl    #       1 ; 81
EntryNo_HAL_UARTModemStatus     #       1 ; 82
EntryNo_HAL_UARTDevice          #       1 ; 83

EntryNo_HAL_Reset               #       1 ; 84
EntryNo_HAL_DebugRX             #       1 ; 85
EntryNo_HAL_DebugTX             #       1 ; 86

EntryNo_HAL_PCIFeatures         #       1 ; 87
EntryNo_HAL_PCIReadConfigByte   #       1 ; 88
EntryNo_HAL_PCIReadConfigHalfword #     1 ; 89
EntryNo_HAL_PCIReadConfigWord   #       1 ; 90
EntryNo_HAL_PCIWriteConfigByte  #       1 ; 91
EntryNo_HAL_PCIWriteConfigHalfword #    1 ; 92
EntryNo_HAL_PCIWriteConfigWord  #       1 ; 93
EntryNo_HAL_PCISpecialCycle     #       1 ; 94
EntryNo_HAL_PCISlotTable        #       1 ; 95
EntryNo_HAL_PCIAddresses        #       1 ; 96

EntryNo_HAL_ATAControllerInfo   #       1 ; 97
EntryNo_HAL_ATASetModes         #       1 ; 98
EntryNo_HAL_ATACableID          #       1 ; 99

EntryNo_HAL_InitDevices         #       1 ; 100

EntryNo_HAL_KbdScanSetup        #       1 ; 101
EntryNo_HAL_KbdScan             #       1 ; 102
EntryNo_HAL_KbdScanFinish       #       1 ; 103
EntryNo_HAL_KbdScanInterrupt    #       1 ; 104

EntryNo_HAL_PhysInfo            #       1 ; 105

EntryNo_HAL_USBControllerInfo   #       1 ; 106

EntryNo_HAL_MonitorLeadID       #       1 ; 107

EntryNo_HAL_Video_Render        #       1 ; 108

EntryNo_HAL_USBPortPower        #       1 ; 109
EntryNo_HAL_USBPortStatus       #       1 ; 110
EntryNo_HAL_USBPortIRQ          #       1 ; 111
d166 1
a166 1
EntryNo_HAL_Video_IICOp         #       1 ; 112
d168 2
a169 2
EntryNo_HAL_TimerIRQClear       #       1 ; 113
EntryNo_HAL_TimerIRQStatus      #       1 ; 114
d171 1
a171 1
EntryNo_HAL_ExtMachineID        #       1 ; 115, ReadSysInfo 10
d173 1
a173 1
EntryNo_HAL_Video_FramestoreAddress  #  1 ; 116
@


1.1.2.28.2.3
log
@Bring Hdr/HALEntries in line with HAL branch
Detail:
  Hdr/HALEntries - Added HAL_UARTDefault entry, as per HAL branch
Admin:
  Untested


Version 5.35, 4.79.2.147.2.9. Tagged as 'Kernel-5_35-4_79_2_147_2_9'
@
text
@a174 2
EntryNo_HAL_UARTDefault         #       1 ; 117

@


1.1.2.28.2.4
log
@  Merged OS_Memory 8 changes across from HAL branch to RPi branch
Detail:
  Revisions Kernel-5_35-4_79_2_153 and Kernel-5_35-4_79_2_161 merged with one
  trivial conflict.
Admin:
  Confirmed that this builds, but not tested on hardware.

Version 5.35, 4.79.2.147.2.15. Tagged as 'Kernel-5_35-4_79_2_147_2_15'
@
text
@a180 6
; PhysInfo
                                ^ 0
PhysInfo_GetTableSize           # 1
PhysInfo_WriteTable             # 1
PhysInfo_HardROM                # 1

@


1.1.2.28.2.5
log
@Preperation for working Raspberry Pi video driver
Detail:
  hdr/HALEntries - Add new HAL_Video_StartupMode HAL entry to allow the HAL to specify a startup mode
  s/HAL, s/Kernel - Tweaked debug routines
  s/vdu/vdudriver - Make use of HAL_Video_StartupMode in InitialiseMode to decide what initial mode should be. Clean up some hacks & debug. Improve handling of external framestores; if bit 5 of GraphicsV_DisplayFeatures r0 is set, the kernel will now allow the display driver to grow/shrink/move its framestore in response to mode changes.
  s/vdu/vdugrafv - Adjust default GV_FramestoreAddress implementation to only claim vector if HAL returns a framestore
  s/vdu/vduswis - Re-enable FindOKMode
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.18. Tagged as 'Kernel-5_35-4_79_2_147_2_18'
@
text
@a176 2
EntryNo_HAL_Video_StartupMode   #       1 ; 118

@


1.1.2.28.2.6
log
@Merge with HAL branch
Detail:
  Merge the HAL branch into the RPi branch, prior to merging RPi to HAL
  Brief summary of main changes brought in:
  * Added *cache functionality previously provided by ARM module
  * Added "CMOS RAM reset" message on startup when CMOS has been wiped by keypress
  * Renamed HAL Video entries from HAL_Video_XXX to HAL_VideoXXX
  * Dropped mjsHAL macros, GRAB/STASH macros
  * Fixed pseudo-VRAM allocation when machine has exactly 16MB of RAM
  * Added OS_Hardware 5
  * Use OS_SerialOp GetDeviceName for getting serial device name
  * Drop HAL_MonitorLeadID
  * Rework default GraphicsV_IICOp handler
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.23. Tagged as 'Kernel-5_35-4_79_2_147_2_23'
@
text
@d78 14
a91 14
EntryNo_HAL_VideoSetMode              #  1 ; 39
EntryNo_HAL_VideoWritePaletteEntry    #  1 ; 40
EntryNo_HAL_VideoWritePaletteEntries  #  1 ; 41
EntryNo_HAL_VideoReadPaletteEntry     #  1 ; 42
EntryNo_HAL_VideoSetInterlace         #  1 ; 43
EntryNo_HAL_VideoSetBlank             #  1 ; 44
EntryNo_HAL_VideoSetPowerSave         #  1 ; 45
EntryNo_HAL_VideoUpdatePointer        #  1 ; 46
EntryNo_HAL_VideoSetDAG               #  1 ; 47
EntryNo_HAL_VideoVetMode              #  1 ; 48
EntryNo_HAL_VideoPixelFormats         #  1 ; 49
EntryNo_HAL_VideoFeatures             #  1 ; 50
EntryNo_HAL_VideoBufferAlignment      #  1 ; 51
EntryNo_HAL_VideoOutputFormat         #  1 ; 52
d158 1
a158 1
                                #       1 ; 107 (was HAL_MonitorLeadID)
d160 1
a160 1
EntryNo_HAL_VideoRender         #       1 ; 108
d166 1
a166 1
EntryNo_HAL_VideoIICOp          #       1 ; 112
d173 1
a173 1
EntryNo_HAL_VideoFramestoreAddress   #  1 ; 116
d177 1
a177 1
EntryNo_HAL_VideoStartupMode    #       1 ; 118
d179 1
a179 1
KnownHALEntries                 #       0 ; Used inside Kernel
a182 10
; OS_Hardware subreasons
                                ^ 0
OSHW_CallHAL                    # 1
OSHW_LookupRoutine              # 1
OSHW_DeviceAdd                  # 1
OSHW_DeviceRemove               # 1
OSHW_DeviceEnumerate            # 1
OSHW_DeviceEnumerateChrono      # 1
OSHW_MaxSubreason               # 1       ; Used in despatch inside Kernel

d203 5
a207 16
IICFlag_LowLevel                * 1:SHL:0
IICFlag_HighLevel               * 1:SHL:1
IICFlag_MultiMaster             * 1:SHL:2
IICFlag_Slave                   * 1:SHL:3
IICFlag_Background              * 1:SHL:4
IICFlag_Fast                    * 1:SHL:16
IICFlag_HighSpeed               * 1:SHL:17
IICFlag_ProtocolVersionShift    * 20
IICFlag_ProtocolVersionMask     * &FFF      ; IIC protocol version x100
                                ^ 0
IICStatus_Completed             # 1         ; High level API return codes
IICStatus_InProgress            # 1
IICStatus_NoACK                 # 1
IICStatus_Busy                  # 1
IICStatus_Slave                 # 1
IICStatus_Error                 # 1
@


1.1.2.26.2.1
log
@Add OS_ReadSysInfo reason codes 11 (read debug info) & 12 (read extended machine ID)
Detail:
  OS_ReadSysInfo 10 is left unimplemented since it's a bit fiddly for us.
  OS_ReadSysInfo 11 is compatible with ROL's implementation, exposing HAL_DebugTX and HAL_DebugRX if the HAL provides them.
  See here for 10,11 docs: http://select.riscos.com/prm/core/osreadsysinfo.html
  OS_ReadSysInfo 12 is a new call to return the 'extended machine ID', to allow the HAL to specify the format & validity of the ID.
  If the HAL responds to the new HAL_ExtMachineID call then it's assumed that no old-style machine ID is present. The Kernel will generate an old-style ID using the contents of the extended ID, and use that with OS_ReadSysInfo 2/5.
  New software should use OS_ReadSysInfo 12 in preference to 2/5.
  s/Middle - Updated OS_ReadSysInfo SWI
  s/PMF/osinit - New old-style machine ID initialisation code
  hdr/HALEntries - Added new HAL_ExtMachineID entry
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.34. Tagged as 'Kernel-5_35-4_79_2_98_2_34'
@
text
@a170 2
EntryNo_HAL_ExtMachineID        #       1 ; ReadSysInfo 10

@


