head	4.1;
access;
symbols
	Kernel-6_14:4.1
	Kernel-6_01-3:4.1
	Kernel-6_13:4.1
	Kernel-6_12:4.1
	Kernel-6_11:4.1
	Kernel-6_10:4.1
	Kernel-6_09:4.1
	Kernel-6_08-4_129_2_10:4.1
	Kernel-6_08-4_129_2_9:4.1
	Kernel-6_08:4.1
	Kernel-6_07:4.1
	Kernel-6_06:4.1
	Kernel-6_05-4_129_2_8:4.1
	Kernel-6_05:4.1
	Kernel-6_04:4.1
	Kernel-6_03:4.1
	Kernel-6_01-2:4.1
	Kernel-6_01-4_146_2_1:4.1
	Kernel-6_02:4.1
	Kernel-6_01-1:4.1
	Kernel-6_01:4.1
	Kernel-6_00:4.1
	Kernel-5_99:4.1
	Kernel-5_98:4.1
	Kernel-5_97-4_129_2_7:4.1
	Kernel-5_97:4.1
	Kernel-5_96:4.1
	Kernel-5_95:4.1
	Kernel-5_94:4.1
	Kernel-5_93:4.1
	Kernel-5_92:4.1
	Kernel-5_91:4.1
	Kernel-5_90:4.1
	Kernel-5_89-4_129_2_6:4.1
	Kernel-5_89:4.1
	Kernel-5_88-4_129_2_5:4.1
	Kernel-5_88-4_129_2_4:4.1
	Kernel-5_88:4.1
	Kernel-5_87:4.1
	Kernel-5_86-4_129_2_3:4.1
	Kernel-5_86-4_129_2_2:4.1
	Kernel-5_86-4_129_2_1:4.1
	Kernel-5_86:4.1
	SMP:4.1.0.2
	SMP_bp:4.1
	Kernel-5_85:4.1
	Kernel-5_54-1:4.1
	Kernel-5_84:4.1
	Kernel-5_83:4.1
	Kernel-5_82:4.1
	Kernel-5_81:4.1
	Kernel-5_80:4.1
	Kernel-5_79:4.1
	Kernel-5_78:4.1
	Kernel-5_77:4.1
	Kernel-5_76:4.1
	Kernel-5_75:4.1
	Kernel-5_74:4.1
	Kernel-5_73:4.1
	Kernel-5_72:4.1
	Kernel-5_71:4.1
	Kernel-5_70:4.1
	Kernel-5_69:4.1
	Kernel-5_68:4.1
	Kernel-5_67:4.1
	Kernel-5_66:4.1
	Kernel-5_65:4.1
	Kernel-5_64:4.1
	Kernel-5_63:4.1
	Kernel-5_62:4.1
	Kernel-5_61:4.1
	Kernel-5_60:4.1
	Kernel-5_59:4.1
	Kernel-5_58:4.1
	Kernel-5_57:4.1
	Kernel-5_56:4.1
	Kernel-5_55:4.1
	Kernel-5_54:4.1
	Kernel-5_53:4.1
	Kernel-5_52:4.1
	Kernel-5_51:4.1
	Kernel-5_50:4.1
	Kernel-5_49:4.1
	HAL_merge:1.1.2.1
	Kernel-5_48:4.1
	Kernel-5_35-4_79_2_327:1.1.2.1
	Kernel-5_35-4_79_2_326:1.1.2.1
	Kernel-5_35-4_79_2_325:1.1.2.1
	Kernel-5_35-4_79_2_324:1.1.2.1
	Kernel-5_35-4_79_2_323:1.1.2.1
	Kernel-5_35-4_79_2_322:1.1.2.1
	Kernel-5_35-4_79_2_321:1.1.2.1
	Kernel-5_35-4_79_2_320:1.1.2.1
	Kernel-5_35-4_79_2_319:1.1.2.1
	Kernel-5_35-4_79_2_318:1.1.2.1
	Kernel-5_35-4_79_2_317:1.1.2.1
	Kernel-5_35-4_79_2_316:1.1.2.1
	Kernel-5_35-4_79_2_315:1.1.2.1
	Kernel-5_35-4_79_2_314:1.1.2.1
	Kernel-5_35-4_79_2_313:1.1.2.1
	Kernel-5_35-4_79_2_312:1.1.2.1
	Kernel-5_35-4_79_2_311:1.1.2.1
	Kernel-5_35-4_79_2_310:1.1.2.1
	Kernel-5_35-4_79_2_309:1.1.2.1
	Kernel-5_35-4_79_2_308:1.1.2.1
	Kernel-5_35-4_79_2_307:1.1.2.1
	Kernel-5_35-4_79_2_306:1.1.2.1
	Kernel-5_35-4_79_2_305:1.1.2.1
	Kernel-5_35-4_79_2_304:1.1.2.1
	Kernel-5_35-4_79_2_303:1.1.2.1
	Kernel-5_35-4_79_2_302:1.1.2.1
	Kernel-5_35-4_79_2_301:1.1.2.1
	Kernel-5_35-4_79_2_300:1.1.2.1
	Kernel-5_35-4_79_2_299:1.1.2.1
	Kernel-5_35-4_79_2_298:1.1.2.1
	Kernel-5_35-4_79_2_297:1.1.2.1
	Kernel-5_35-4_79_2_296:1.1.2.1
	Kernel-5_35-4_79_2_295:1.1.2.1
	Kernel-5_35-4_79_2_294:1.1.2.1
	Kernel-5_35-4_79_2_293:1.1.2.1
	Kernel-5_35-4_79_2_292:1.1.2.1
	Kernel-5_35-4_79_2_291:1.1.2.1
	Kernel-5_35-4_79_2_290:1.1.2.1
	Kernel-5_35-4_79_2_289:1.1.2.1
	Kernel-5_35-4_79_2_288:1.1.2.1
	Kernel-5_35-4_79_2_287:1.1.2.1
	Kernel-5_35-4_79_2_286:1.1.2.1
	Kernel-5_35-4_79_2_285:1.1.2.1
	Kernel-5_35-4_79_2_284:1.1.2.1
	Kernel-5_35-4_79_2_283:1.1.2.1
	Kernel-5_35-4_79_2_282:1.1.2.1
	Kernel-5_35-4_79_2_281:1.1.2.1
	Kernel-5_35-4_79_2_280:1.1.2.1
	Kernel-5_35-4_79_2_279:1.1.2.1
	Kernel-5_35-4_79_2_278:1.1.2.1
	Kernel-5_35-4_79_2_277:1.1.2.1
	Kernel-5_35-4_79_2_276:1.1.2.1
	Kernel-5_35-4_79_2_275:1.1.2.1
	Kernel-5_35-4_79_2_274:1.1.2.1
	Kernel-5_35-4_79_2_273:1.1.2.1
	Kernel-5_35-4_79_2_272:1.1.2.1
	Kernel-5_35-4_79_2_271:1.1.2.1
	Kernel-5_35-4_79_2_270:1.1.2.1
	Kernel-5_35-4_79_2_269:1.1.2.1
	Kernel-5_35-4_79_2_268:1.1.2.1
	Kernel-5_35-4_79_2_267:1.1.2.1
	Kernel-5_35-4_79_2_266:1.1.2.1
	Kernel-5_35-4_79_2_265:1.1.2.1
	Kernel-5_35-4_79_2_264:1.1.2.1
	Kernel-5_35-4_79_2_263:1.1.2.1
	Kernel-5_35-4_79_2_262:1.1.2.1
	Kernel-5_35-4_79_2_261:1.1.2.1
	Kernel-5_35-4_79_2_260:1.1.2.1
	Kernel-5_35-4_79_2_259:1.1.2.1
	Kernel-5_35-4_79_2_258:1.1.2.1
	Kernel-5_35-4_79_2_257:1.1.2.1
	Kernel-5_35-4_79_2_256:1.1.2.1
	Kernel-5_35-4_79_2_255:1.1.2.1
	Kernel-5_35-4_79_2_254:1.1.2.1
	Kernel-5_35-4_79_2_253:1.1.2.1
	Kernel-5_35-4_79_2_252:1.1.2.1
	HAL:1.1.0.2;
locks; strict;
comment	@# @;


4.1
date	2016.06.30.20.07.59;	author jlee;	state Exp;
branches;
next	1.1;
commitid	IWoXxARWeuLDOwcz;

1.1
date	2015.01.11.23.10.45;	author jlee;	state dead;
branches
	1.1.2.1;
next	;
commitid	a9HNIsO4R7LP3F5y;

1.1.2.1
date	2015.01.11.23.10.45;	author jlee;	state Exp;
branches;
next	;
commitid	a9HNIsO4R7LP3F5y;


desc
@@


4.1
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Register layout of the PL310 L2 cache controller

        GET     hdr:HALDevice

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

PL310_REG0_CACHE_ID              * &000
PL310_REG0_CACHE_TYPE            * &004
PL310_REG1_CONTROL               * &100
PL310_REG1_AUX_CONTROL           * &104
PL310_REG1_TAG_RAM_CONTROL       * &108
PL310_REG1_DATA_RAM_CONTROL      * &10C
PL310_REG2_EV_COUNTER_CTRL       * &200
PL310_REG2_EV_COUNTER1_CFG       * &204
PL310_REG2_EV_COUNTER0_CFG       * &208
PL310_REG2_EV_COUNTER1           * &20C
PL310_REG2_EV_COUNTER0           * &210
PL310_REG2_INT_MASK              * &214
PL310_REG2_INT_MASK_STATUS       * &218
PL310_REG2_INT_RAW_STATUS        * &21C
PL310_REG2_INT_CLEAR             * &220
PL310_REG7_CACHE_SYNC            * &730
PL310_REG7_CACHE_SYNC_753970     * &740 ; Alternate location suggested in errata 753970 workaround
PL310_REG7_INV_PA                * &770
PL310_REG7_INV_WAY               * &77C
PL310_REG7_CLEAN_PA              * &7B0
PL310_REG7_CLEAN_INDEX           * &7B8
PL310_REG7_CLEAN_WAY             * &7BC
PL310_REG7_CLEAN_INV_PA          * &7F0
PL310_REG7_CLEAN_INV_INDEX       * &7F8
PL310_REG7_CLEAN_INV_WAY         * &7FC
PL310_REG9_D_LOCKDOWN0           * &900
PL310_REG9_I_LOCKDOWN0           * &904
PL310_REG9_D_LOCKDOWN1           * &908
PL310_REG9_I_LOCKDOWN1           * &90C
PL310_REG9_D_LOCKDOWN2           * &910
PL310_REG9_I_LOCKDOWN2           * &914
PL310_REG9_D_LOCKDOWN3           * &918
PL310_REG9_I_LOCKDOWN3           * &91C
PL310_REG9_D_LOCKDOWN4           * &920
PL310_REG9_I_LOCKDOWN4           * &924
PL310_REG9_D_LOCKDOWN5           * &928
PL310_REG9_I_LOCKDOWN5           * &92C
PL310_REG9_D_LOCKDOWN6           * &930
PL310_REG9_I_LOCKDOWN6           * &934
PL310_REG9_D_LOCKDOWN7           * &938
PL310_REG9_I_LOCKDOWN7           * &93C
PL310_REG9_LOCK_LINE_EN          * &950
PL310_REG9_UNLOCK_WAY            * &954
PL310_REG12_ADDR_FILTERING_START * &C00
PL310_REG12_ADDR_FILTERING_END   * &C04
PL310_REG15_DEBUG_CTRL           * &F40
PL310_REG15_PREFETCH_CTRL        * &F60
PL310_REG15_POWER_CTRL           * &F80

; PL310 revisions (low 5 bits of CACHE_ID)

PL310_R0P0         * 0
PL310_R1P0         * 2
PL310_R2P0         * 4
PL310_R3P0         * 5
PL310_R3P1         * 6
PL310_R3P1_50REL0  * 7
PL310_R3P2         * 8
PL310_R3P3         * 9

        OPT     OldOpt
        END
@


1.1
log
@file PL310 was initially added on branch HAL.
@
text
@d1 84
@


1.1.2.1
log
@Add ARMops for PL310 L2 cache controller
Detail:
  Unlike on the Cortex-A8 or Cortex-A15, the L2 cache that's used with the Cortex-A9 isn't hooked up to the standard ARMv7 CP15 cache maintenance ops. Instead, memory-mapped registers must be used to program and maintain the cache.
  Since the PL310 can't be detected automatically, this change adds support for a 'cache controller' HAL device which the HAL can use to advertise the presence of any external caches. If a cache device is registered during HAL_InitDevices the kernel will then check it against a list of known cache types and replace the appropriate ARMop routines with the alternatives for that controller.
  File changes:
  - hdr/PL310 - New header containing PL310 register listing
  - Makefile - Add export for PL310 header. Reorder exports to be alphabetical
  - hdr/HALDevice - Add cache controller device type, PL310 device
  - hdr/KernelWS - Allocate some workspace for storing a pointer to the current cache HAL device
  - s/ARMops - Add code for searching for known cache types, and implementation of PL310-specific ARMops
  - s/GetAll - Get Hdr:PL310
  - s/NewReset - Look for a cache controller after calling HAL_InitDevices
Admin:
  Tested on Pandaboard
  Fixes various assorted instability issues


Version 5.35, 4.79.2.252. Tagged as 'Kernel-5_35-4_79_2_252'
@
text
@a0 84
; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Register layout of the PL310 L2 cache controller

        GET     hdr:HALDevice

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

PL310_REG0_CACHE_ID              * &000
PL310_REG0_CACHE_TYPE            * &004
PL310_REG1_CONTROL               * &100
PL310_REG1_AUX_CONTROL           * &104
PL310_REG1_TAG_RAM_CONTROL       * &108
PL310_REG1_DATA_RAM_CONTROL      * &10C
PL310_REG2_EV_COUNTER_CTRL       * &200
PL310_REG2_EV_COUNTER1_CFG       * &204
PL310_REG2_EV_COUNTER0_CFG       * &208
PL310_REG2_EV_COUNTER1           * &20C
PL310_REG2_EV_COUNTER0           * &210
PL310_REG2_INT_MASK              * &214
PL310_REG2_INT_MASK_STATUS       * &218
PL310_REG2_INT_RAW_STATUS        * &21C
PL310_REG2_INT_CLEAR             * &220
PL310_REG7_CACHE_SYNC            * &730
PL310_REG7_CACHE_SYNC_753970     * &740 ; Alternate location suggested in errata 753970 workaround
PL310_REG7_INV_PA                * &770
PL310_REG7_INV_WAY               * &77C
PL310_REG7_CLEAN_PA              * &7B0
PL310_REG7_CLEAN_INDEX           * &7B8
PL310_REG7_CLEAN_WAY             * &7BC
PL310_REG7_CLEAN_INV_PA          * &7F0
PL310_REG7_CLEAN_INV_INDEX       * &7F8
PL310_REG7_CLEAN_INV_WAY         * &7FC
PL310_REG9_D_LOCKDOWN0           * &900
PL310_REG9_I_LOCKDOWN0           * &904
PL310_REG9_D_LOCKDOWN1           * &908
PL310_REG9_I_LOCKDOWN1           * &90C
PL310_REG9_D_LOCKDOWN2           * &910
PL310_REG9_I_LOCKDOWN2           * &914
PL310_REG9_D_LOCKDOWN3           * &918
PL310_REG9_I_LOCKDOWN3           * &91C
PL310_REG9_D_LOCKDOWN4           * &920
PL310_REG9_I_LOCKDOWN4           * &924
PL310_REG9_D_LOCKDOWN5           * &928
PL310_REG9_I_LOCKDOWN5           * &92C
PL310_REG9_D_LOCKDOWN6           * &930
PL310_REG9_I_LOCKDOWN6           * &934
PL310_REG9_D_LOCKDOWN7           * &938
PL310_REG9_I_LOCKDOWN7           * &93C
PL310_REG9_LOCK_LINE_EN          * &950
PL310_REG9_UNLOCK_WAY            * &954
PL310_REG12_ADDR_FILTERING_START * &C00
PL310_REG12_ADDR_FILTERING_END   * &C04
PL310_REG15_DEBUG_CTRL           * &F40
PL310_REG15_PREFETCH_CTRL        * &F60
PL310_REG15_POWER_CTRL           * &F80

; PL310 revisions (low 5 bits of CACHE_ID)

PL310_R0P0         * 0
PL310_R1P0         * 2
PL310_R2P0         * 4
PL310_R3P0         * 5
PL310_R3P1         * 6
PL310_R3P1_50REL0  * 7
PL310_R3P2         * 8
PL310_R3P3         * 9

        OPT     OldOpt
        END
@

