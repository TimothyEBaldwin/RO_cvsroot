head	4.4;
access;
symbols
	Kernel-6_15:4.4
	Kernel-6_14:4.4
	Kernel-6_01-3:4.4
	Kernel-6_13:4.4
	Kernel-6_12:4.4
	Kernel-6_11:4.4
	Kernel-6_10:4.4
	Kernel-6_09:4.4
	Kernel-6_08-4_129_2_10:4.4
	Kernel-6_08-4_129_2_9:4.4
	Kernel-6_08:4.4
	Kernel-6_07:4.4
	Kernel-6_06:4.4
	Kernel-6_05-4_129_2_8:4.4
	Kernel-6_05:4.4
	Kernel-6_04:4.4
	Kernel-6_03:4.4
	Kernel-6_01-2:4.4
	Kernel-6_01-4_146_2_1:4.4
	Kernel-6_02:4.4
	Kernel-6_01-1:4.4
	Kernel-6_01:4.4
	Kernel-6_00:4.4
	Kernel-5_99:4.4
	Kernel-5_98:4.4
	Kernel-5_97-4_129_2_7:4.4
	Kernel-5_97:4.4
	Kernel-5_96:4.4
	Kernel-5_95:4.4
	Kernel-5_94:4.4
	Kernel-5_93:4.4
	Kernel-5_92:4.4
	Kernel-5_91:4.4
	Kernel-5_90:4.4
	Kernel-5_89-4_129_2_6:4.4
	Kernel-5_89:4.4
	Kernel-5_88-4_129_2_5:4.4
	Kernel-5_88-4_129_2_4:4.4
	Kernel-5_88:4.4
	Kernel-5_87:4.4
	Kernel-5_86-4_129_2_3:4.4
	Kernel-5_86-4_129_2_2:4.4
	Kernel-5_86-4_129_2_1:4.4
	Kernel-5_86:4.4
	SMP:4.4.0.2
	SMP_bp:4.4
	Kernel-5_85:4.4
	Kernel-5_54-1:4.4
	Kernel-5_84:4.4
	Kernel-5_83:4.4
	Kernel-5_82:4.4
	Kernel-5_81:4.4
	Kernel-5_80:4.4
	Kernel-5_79:4.4
	Kernel-5_78:4.4
	Kernel-5_77:4.4
	Kernel-5_76:4.4
	Kernel-5_75:4.4
	Kernel-5_74:4.4
	Kernel-5_73:4.4
	Kernel-5_72:4.4
	Kernel-5_71:4.4
	Kernel-5_70:4.4
	Kernel-5_69:4.4
	Kernel-5_68:4.4
	Kernel-5_67:4.4
	Kernel-5_66:4.4
	Kernel-5_65:4.4
	Kernel-5_64:4.4
	Kernel-5_63:4.4
	Kernel-5_62:4.4
	Kernel-5_61:4.4
	Kernel-5_60:4.4
	Kernel-5_59:4.4
	Kernel-5_58:4.4
	Kernel-5_57:4.4
	Kernel-5_56:4.4
	Kernel-5_55:4.4
	Kernel-5_54:4.4
	Kernel-5_53:4.4
	Kernel-5_52:4.4
	Kernel-5_51:4.4
	Kernel-5_50:4.4
	Kernel-5_49:4.4
	HAL_merge:4.3.2.7
	Kernel-5_48:4.4
	Kernel-5_35-4_79_2_327:4.3.2.7
	Kernel-5_35-4_79_2_326:4.3.2.7
	Kernel-5_35-4_79_2_325:4.3.2.7
	Kernel-5_35-4_79_2_324:4.3.2.7
	Kernel-5_35-4_79_2_323:4.3.2.7
	Kernel-5_35-4_79_2_322:4.3.2.7
	Kernel-5_35-4_79_2_321:4.3.2.7
	Kernel-5_35-4_79_2_320:4.3.2.7
	Kernel-5_35-4_79_2_319:4.3.2.7
	Kernel-5_35-4_79_2_318:4.3.2.7
	Kernel-5_35-4_79_2_317:4.3.2.7
	Kernel-5_35-4_79_2_316:4.3.2.7
	Kernel-5_35-4_79_2_315:4.3.2.7
	Kernel-5_35-4_79_2_314:4.3.2.7
	Kernel-5_35-4_79_2_313:4.3.2.7
	Kernel-5_35-4_79_2_312:4.3.2.7
	Kernel-5_35-4_79_2_311:4.3.2.7
	Kernel-5_35-4_79_2_310:4.3.2.7
	Kernel-5_35-4_79_2_309:4.3.2.7
	Kernel-5_35-4_79_2_308:4.3.2.7
	Kernel-5_35-4_79_2_307:4.3.2.7
	Kernel-5_35-4_79_2_306:4.3.2.7
	Kernel-5_35-4_79_2_305:4.3.2.7
	Kernel-5_35-4_79_2_304:4.3.2.7
	Kernel-5_35-4_79_2_303:4.3.2.7
	Kernel-5_35-4_79_2_302:4.3.2.7
	Kernel-5_35-4_79_2_301:4.3.2.7
	Kernel-5_35-4_79_2_300:4.3.2.7
	Kernel-5_35-4_79_2_299:4.3.2.7
	Kernel-5_35-4_79_2_298:4.3.2.7
	Kernel-5_35-4_79_2_297:4.3.2.7
	Kernel-5_35-4_79_2_296:4.3.2.7
	Kernel-5_35-4_79_2_295:4.3.2.7
	Kernel-5_35-4_79_2_294:4.3.2.7
	Kernel-5_35-4_79_2_293:4.3.2.7
	Kernel-5_35-4_79_2_292:4.3.2.7
	Kernel-5_35-4_79_2_291:4.3.2.7
	Kernel-5_35-4_79_2_290:4.3.2.7
	Kernel-5_35-4_79_2_289:4.3.2.7
	Kernel-5_35-4_79_2_288:4.3.2.7
	Kernel-5_35-4_79_2_287:4.3.2.7
	Kernel-5_35-4_79_2_286:4.3.2.7
	Kernel-5_35-4_79_2_285:4.3.2.7
	Kernel-5_35-4_79_2_284:4.3.2.7
	Kernel-5_35-4_79_2_283:4.3.2.7
	Kernel-5_35-4_79_2_282:4.3.2.7
	Kernel-5_35-4_79_2_281:4.3.2.7
	Kernel-5_35-4_79_2_280:4.3.2.7
	Kernel-5_35-4_79_2_279:4.3.2.7
	Kernel-5_35-4_79_2_278:4.3.2.7
	Kernel-5_35-4_79_2_277:4.3.2.7
	Kernel-5_35-4_79_2_276:4.3.2.7
	Kernel-5_35-4_79_2_275:4.3.2.7
	Kernel-5_35-4_79_2_274:4.3.2.7
	Kernel-5_35-4_79_2_273:4.3.2.7
	Kernel-5_35-4_79_2_272:4.3.2.7
	Kernel-5_35-4_79_2_271:4.3.2.7
	Kernel-5_35-4_79_2_270:4.3.2.7
	Kernel-5_35-4_79_2_269:4.3.2.7
	Kernel-5_35-4_79_2_268:4.3.2.7
	Kernel-5_35-4_79_2_267:4.3.2.7
	Kernel-5_35-4_79_2_266:4.3.2.7
	Kernel-5_35-4_79_2_265:4.3.2.6
	Kernel-5_35-4_79_2_264:4.3.2.6
	Kernel-5_35-4_79_2_263:4.3.2.6
	Kernel-5_35-4_79_2_262:4.3.2.6
	Kernel-5_35-4_79_2_261:4.3.2.6
	Kernel-5_35-4_79_2_260:4.3.2.6
	Kernel-5_35-4_79_2_259:4.3.2.6
	Kernel-5_35-4_79_2_258:4.3.2.6
	Kernel-5_35-4_79_2_257:4.3.2.6
	Kernel-5_35-4_79_2_256:4.3.2.6
	Kernel-5_35-4_79_2_255:4.3.2.6
	Kernel-5_35-4_79_2_254:4.3.2.6
	Kernel-5_35-4_79_2_253:4.3.2.6
	Kernel-5_35-4_79_2_252:4.3.2.6
	Kernel-5_35-4_79_2_251:4.3.2.6
	Kernel-5_35-4_79_2_250:4.3.2.6
	Kernel-5_35-4_79_2_249:4.3.2.6
	Kernel-5_35-4_79_2_248:4.3.2.6
	Kernel-5_35-4_79_2_247:4.3.2.6
	Kernel-5_35-4_79_2_246:4.3.2.6
	Kernel-5_35-4_79_2_245:4.3.2.6
	Kernel-5_35-4_79_2_244:4.3.2.6
	Kernel-5_35-4_79_2_243:4.3.2.6
	Kernel-5_35-4_79_2_242:4.3.2.6
	Kernel-5_35-4_79_2_241:4.3.2.6
	Kernel-5_35-4_79_2_240:4.3.2.6
	Kernel-5_35-4_79_2_239:4.3.2.6
	Kernel-5_35-4_79_2_238:4.3.2.6
	Kernel-5_35-4_79_2_237:4.3.2.6
	Kernel-5_35-4_79_2_236:4.3.2.6
	Kernel-5_35-4_79_2_235:4.3.2.6
	Kernel-5_35-4_79_2_234:4.3.2.6
	Kernel-5_35-4_79_2_233:4.3.2.6
	Kernel-5_35-4_79_2_232:4.3.2.6
	Kernel-5_35-4_79_2_231:4.3.2.6
	Kernel-5_35-4_79_2_230:4.3.2.6
	Kernel-5_35-4_79_2_229:4.3.2.6
	Kernel-5_35-4_79_2_228:4.3.2.6
	Kernel-5_35-4_79_2_227:4.3.2.6
	Kernel-5_35-4_79_2_226:4.3.2.6
	Kernel-5_35-4_79_2_225:4.3.2.6
	Kernel-5_35-4_79_2_224:4.3.2.6
	Kernel-5_35-4_79_2_223:4.3.2.6
	Kernel-5_35-4_79_2_222:4.3.2.6
	Kernel-5_35-4_79_2_221:4.3.2.6
	Kernel-5_35-4_79_2_220:4.3.2.6
	Kernel-5_35-4_79_2_219:4.3.2.6
	Kernel-5_35-4_79_2_218:4.3.2.6
	Kernel-5_35-4_79_2_217:4.3.2.6
	Kernel-5_35-4_79_2_216:4.3.2.6
	Kernel-5_35-4_79_2_215:4.3.2.6
	Kernel-5_35-4_79_2_214:4.3.2.6
	Kernel-5_35-4_79_2_213:4.3.2.6
	Kernel-5_35-4_79_2_212:4.3.2.6
	Kernel-5_35-4_79_2_211:4.3.2.6
	Kernel-5_35-4_79_2_210:4.3.2.6
	Kernel-5_35-4_79_2_209:4.3.2.6
	Kernel-5_35-4_79_2_208:4.3.2.6
	Kernel-5_35-4_79_2_207:4.3.2.6
	Kernel-5_35-4_79_2_206:4.3.2.6
	Kernel-5_35-4_79_2_205:4.3.2.6
	Kernel-5_35-4_79_2_204:4.3.2.6
	Kernel-5_35-4_79_2_203:4.3.2.6
	Kernel-5_35-4_79_2_202:4.3.2.6
	Kernel-5_35-4_79_2_201:4.3.2.6
	Kernel-5_35-4_79_2_200:4.3.2.6
	Kernel-5_35-4_79_2_199:4.3.2.6
	Kernel-5_35-4_79_2_198:4.3.2.6
	Kernel-5_35-4_79_2_197:4.3.2.6
	Kernel-5_35-4_79_2_196:4.3.2.6
	Kernel-5_35-4_79_2_195:4.3.2.6
	Kernel-5_35-4_79_2_194:4.3.2.6
	Kernel-5_35-4_79_2_193:4.3.2.5
	Kernel-5_35-4_79_2_192:4.3.2.5
	Kernel-5_35-4_79_2_191:4.3.2.5
	Kernel-5_35-4_79_2_190:4.3.2.5
	Kernel-5_35-4_79_2_189:4.3.2.5
	Kernel-5_35-4_79_2_188:4.3.2.5
	Kernel-5_35-4_79_2_187:4.3.2.5
	Kernel-5_35-4_79_2_186:4.3.2.5
	Kernel-5_35-4_79_2_185:4.3.2.5
	Kernel-5_35-4_79_2_184:4.3.2.5
	Kernel-5_35-4_79_2_183:4.3.2.5
	Kernel-5_35-4_79_2_182:4.3.2.5
	Kernel-5_35-4_79_2_181:4.3.2.5
	Kernel-5_35-4_79_2_180:4.3.2.5
	Kernel-5_35-4_79_2_179:4.3.2.5
	Kernel-5_35-4_79_2_178:4.3.2.5
	Kernel-5_35-4_79_2_177:4.3.2.5
	Kernel-5_35-4_79_2_176:4.3.2.5
	Kernel-5_35-4_79_2_175:4.3.2.5
	Kernel-5_35-4_79_2_174:4.3.2.5
	Kernel-5_35-4_79_2_173:4.3.2.5
	Kernel-5_35-4_79_2_172:4.3.2.5
	Kernel-5_35-4_79_2_171:4.3.2.5
	Kernel-5_35-4_79_2_170:4.3.2.5
	Kernel-5_35-4_79_2_169:4.3.2.5
	Kernel-5_35-4_79_2_168:4.3.2.5
	Kernel-5_35-4_79_2_167:4.3.2.5
	Kernel-5_35-4_79_2_166:4.3.2.5
	Kernel-5_35-4_79_2_165:4.3.2.5
	RPi_merge:4.3.2.5
	Kernel-5_35-4_79_2_147_2_23:4.3.2.5
	Kernel-5_35-4_79_2_147_2_22:4.3.2.5
	Kernel-5_35-4_79_2_147_2_21:4.3.2.5
	Kernel-5_35-4_79_2_147_2_20:4.3.2.5
	Kernel-5_35-4_79_2_147_2_19:4.3.2.5
	Kernel-5_35-4_79_2_147_2_18:4.3.2.5
	Kernel-5_35-4_79_2_164:4.3.2.5
	Kernel-5_35-4_79_2_163:4.3.2.5
	Kernel-5_35-4_79_2_147_2_17:4.3.2.5
	Kernel-5_35-4_79_2_147_2_16:4.3.2.5
	Kernel-5_35-4_79_2_147_2_15:4.3.2.5
	Kernel-5_35-4_79_2_162:4.3.2.5
	Kernel-5_35-4_79_2_161:4.3.2.5
	Kernel-5_35-4_79_2_147_2_14:4.3.2.5
	Kernel-5_35-4_79_2_147_2_13:4.3.2.5
	Kernel-5_35-4_79_2_160:4.3.2.5
	Kernel-5_35-4_79_2_159:4.3.2.5
	Kernel-5_35-4_79_2_158:4.3.2.5
	Kernel-5_35-4_79_2_157:4.3.2.5
	Kernel-5_35-4_79_2_156:4.3.2.5
	Kernel-5_35-4_79_2_147_2_12:4.3.2.5
	Kernel-5_35-4_79_2_147_2_11:4.3.2.5
	Kernel-5_35-4_79_2_155:4.3.2.5
	Kernel-5_35-4_79_2_147_2_10:4.3.2.5
	Kernel-5_35-4_79_2_154:4.3.2.5
	Kernel-5_35-4_79_2_153:4.3.2.5
	Kernel-5_35-4_79_2_147_2_9:4.3.2.5
	Kernel-5_35-4_79_2_152:4.3.2.5
	Kernel-5_35-4_79_2_151:4.3.2.5
	Kernel-5_35-4_79_2_147_2_8:4.3.2.5
	Kernel-5_35-4_79_2_147_2_7:4.3.2.5
	Kernel-5_35-4_79_2_150:4.3.2.5
	Kernel-5_35-4_79_2_147_2_6:4.3.2.5
	Kernel-5_35-4_79_2_147_2_5:4.3.2.5
	Kernel-5_35-4_79_2_149:4.3.2.5
	Kernel-5_35-4_79_2_147_2_4:4.3.2.5
	Kernel-5_35-4_79_2_147_2_3:4.3.2.5
	Kernel-5_35-4_79_2_148:4.3.2.5
	Kernel-5_35-4_79_2_147_2_2:4.3.2.5
	Kernel-5_35-4_79_2_147_2_1:4.3.2.5
	RPi:4.3.2.5.0.2
	RPi_bp:4.3.2.5
	Kernel-5_35-4_79_2_98_2_52_2_1:4.3.2.4.2.1
	alees_Kernel_dev:4.3.2.4.2.1.0.2
	alees_Kernel_dev_bp:4.3.2.4.2.1
	Kernel-5_35-4_79_2_147:4.3.2.5
	Kernel-5_35-4_79_2_146:4.3.2.5
	Kernel-5_35-4_79_2_145:4.3.2.5
	Kernel-5_35-4_79_2_144:4.3.2.5
	Kernel-5_35-4_79_2_143:4.3.2.5
	Kernel-5_35-4_79_2_142:4.3.2.5
	Kernel-5_35-4_79_2_141:4.3.2.5
	Kernel-5_35-4_79_2_140:4.3.2.5
	Kernel-5_35-4_79_2_139:4.3.2.5
	Kernel-5_35-4_79_2_138:4.3.2.5
	Kernel-5_35-4_79_2_137:4.3.2.5
	Kernel-5_35-4_79_2_136:4.3.2.5
	Kernel-5_35-4_79_2_135:4.3.2.5
	Kernel-5_35-4_79_2_134:4.3.2.5
	Kernel-5_35-4_79_2_133:4.3.2.5
	Kernel-5_35-4_79_2_132:4.3.2.5
	Kernel-5_35-4_79_2_131:4.3.2.5
	Kernel-5_35-4_79_2_130:4.3.2.5
	Kernel-5_35-4_79_2_129:4.3.2.5
	Kernel-5_35-4_79_2_128:4.3.2.5
	Kernel-5_35-4_79_2_127:4.3.2.5
	Kernel-5_35-4_79_2_126:4.3.2.5
	Kernel-5_35-4_79_2_125:4.3.2.5
	Kernel-5_35-4_79_2_124:4.3.2.5
	Kernel-5_35-4_79_2_123:4.3.2.5
	Cortex_merge:4.3.2.4.2.1
	Kernel-5_35-4_79_2_122:4.3.2.5
	Kernel-5_35-4_79_2_98_2_54:4.3.2.4.2.1
	Kernel-5_35-4_79_2_98_2_53:4.3.2.4.2.1
	Kernel-5_35-4_79_2_98_2_52:4.3.2.4.2.1
	Kernel-5_35-4_79_2_98_2_51:4.3.2.4.2.1
	Kernel-5_35-4_79_2_98_2_50:4.3.2.4.2.1
	Kernel-5_35-4_79_2_98_2_49:4.3.2.4.2.1
	Kernel-5_35-4_79_2_98_2_48:4.3.2.4.2.1
	Kernel-5_35-4_79_2_121:4.3.2.5
	Kernel-5_35-4_79_2_98_2_47:4.3.2.4.2.1
	Kernel-5_35-4_79_2_120:4.3.2.5
	Kernel-5_35-4_79_2_98_2_46:4.3.2.4.2.1
	Kernel-5_35-4_79_2_119:4.3.2.5
	Kernel-5_35-4_79_2_98_2_45:4.3.2.4.2.1
	Kernel-5_35-4_79_2_98_2_44:4.3.2.4.2.1
	Kernel-5_35-4_79_2_118:4.3.2.5
	Kernel-5_35-4_79_2_98_2_43:4.3.2.4
	Kernel-5_35-4_79_2_117:4.3.2.4
	Kernel-5_35-4_79_2_116:4.3.2.4
	Kernel-5_35-4_79_2_98_2_42:4.3.2.4
	Kernel-5_35-4_79_2_115:4.3.2.4
	Kernel-5_35-4_79_2_98_2_41:4.3.2.4
	Kernel-5_35-4_79_2_98_2_40:4.3.2.4
	Kernel-5_35-4_79_2_114:4.3.2.4
	Kernel-5_35-4_79_2_98_2_39:4.3.2.4
	Kernel-5_35-4_79_2_98_2_38:4.3.2.4
	Kernel-5_35-4_79_2_113:4.3.2.4
	Kernel-5_35-4_79_2_112:4.3.2.4
	Kernel-5_35-4_79_2_98_2_37:4.3.2.4
	Kernel-5_35-4_79_2_98_2_36:4.3.2.4
	Kernel-5_35-4_79_2_98_2_35:4.3.2.4
	Kernel-5_35-4_79_2_98_2_34:4.3.2.4
	Kernel-5_35-4_79_2_98_2_33:4.3.2.4
	Kernel-5_35-4_79_2_98_2_32:4.3.2.4
	Kernel-5_35-4_79_2_98_2_31:4.3.2.4
	Kernel-5_35-4_79_2_98_2_30:4.3.2.4
	Kernel-5_35-4_79_2_98_2_29:4.3.2.4
	Kernel-5_35-4_79_2_98_2_28:4.3.2.4
	Kernel-5_35-4_79_2_98_2_27:4.3.2.4
	Kernel-5_35-4_79_2_98_2_26:4.3.2.4
	Kernel-5_35-4_79_2_111:4.3.2.4
	Kernel-5_35-4_79_2_98_2_25:4.3.2.4
	Kernel-5_35-4_79_2_98_2_24:4.3.2.4
	Kernel-5_35-4_79_2_98_2_23:4.3.2.4
	Kernel-5_35-4_79_2_110:4.3.2.4
	Kernel-5_35-4_79_2_98_2_22:4.3.2.4
	Kernel-5_35-4_79_2_109:4.3.2.4
	Kernel-5_35-4_79_2_98_2_21:4.3.2.4
	Kernel-5_35-4_79_2_98_2_20:4.3.2.4
	Kernel-5_35-4_79_2_108:4.3.2.4
	Kernel-5_35-4_79_2_107:4.3.2.4
	Kernel-5_35-4_79_2_98_2_19:4.3.2.4
	Kernel-5_35-4_79_2_98_2_18:4.3.2.4
	Kernel-5_35-4_79_2_98_2_17:4.3.2.4
	Kernel-5_35-4_79_2_98_2_16:4.3.2.4
	Kernel-5_35-4_79_2_98_2_15:4.3.2.4
	Kernel-5_35-4_79_2_106:4.3.2.4
	Kernel-5_35-4_79_2_105:4.3.2.4
	Kernel-5_35-4_79_2_104:4.3.2.4
	Kernel-5_35-4_79_2_98_2_14:4.3.2.4
	Kernel-5_35-4_79_2_98_2_13:4.3.2.4
	Kernel-5_35-4_79_2_98_2_12:4.3.2.4
	Kernel-5_35-4_79_2_98_2_11:4.3.2.4
	Kernel-5_35-4_79_2_98_2_10:4.3.2.4
	Kernel-5_35-4_79_2_98_2_9:4.3.2.4
	Kernel-5_35-4_79_2_103:4.3.2.4
	Kernel-5_35-4_79_2_102:4.3.2.4
	Kernel-5_35-4_79_2_98_2_8:4.3.2.4
	Kernel-5_35-4_79_2_98_2_7:4.3.2.4
	Kernel-5_35-4_79_2_98_2_6:4.3.2.4
	Kernel-5_35-4_79_2_98_2_5:4.3.2.4
	Kernel-5_35-4_79_2_98_2_4:4.3.2.4
	Kernel-5_35-4_79_2_101:4.3.2.4
	Kernel-5_35-4_79_2_100:4.3.2.4
	Kernel-5_35-4_79_2_99:4.3.2.4
	Kernel-5_35-4_79_2_98_2_3:4.3.2.4
	Kernel-5_35-4_79_2_98_2_2:4.3.2.4
	Kernel-5_35-4_79_2_98_2_1:4.3.2.4
	Cortex:4.3.2.4.0.2
	Cortex_bp:4.3.2.4
	Kernel-5_35-4_79_2_98:4.3.2.4
	Kernel-5_35-4_79_2_97:4.3.2.4
	Kernel-5_35-4_79_2_96:4.3.2.4
	Kernel-5_35-4_79_2_95:4.3.2.4
	Kernel-5_35-4_79_2_94:4.3.2.4
	Kernel-5_35-4_79_2_93:4.3.2.4
	Kernel-5_35-4_79_2_92:4.3.2.4
	Kernel-5_35-4_79_2_91:4.3.2.4
	Kernel-5_35-4_79_2_90:4.3.2.4
	Kernel-5_35-4_79_2_89:4.3.2.4
	Kernel-5_35-4_79_2_88:4.3.2.4
	Kernel-5_35-4_79_2_87:4.3.2.4
	Kernel-5_35-4_79_2_86:4.3.2.4
	Kernel-5_35-4_79_2_85:4.3.2.4
	Kernel-5_35-4_79_2_84:4.3.2.4
	Kernel-5_35-4_79_2_83:4.3.2.4
	Kernel-5_35-4_79_2_82:4.3.2.4
	Kernel-5_35-4_79_2_81:4.3.2.4
	Kernel-5_35-4_79_2_80:4.3.2.4
	Kernel-5_35-4_79_2_79:4.3.2.4
	Kernel-5_35-4_79_2_78:4.3.2.4
	Kernel-5_35-4_79_2_77:4.3.2.4
	RO_5_07:4.3.2.4
	Kernel-5_35-4_79_2_76:4.3.2.4
	Kernel-5_35-4_79_2_75:4.3.2.4
	Kernel-5_35-4_79_2_74:4.3.2.4
	Kernel-5_35-4_79_2_73:4.3.2.4
	Kernel-5_35-4_79_2_72:4.3.2.4
	Kernel-5_35-4_79_2_71:4.3.2.4
	Kernel-5_35-4_79_2_70:4.3.2.4
	Kernel-5_35-4_79_2_69:4.3.2.4
	Kernel-5_35-4_79_2_68:4.3.2.4
	Kernel-5_35-4_79_2_67:4.3.2.4
	Kernel-5_35-4_79_2_66:4.3.2.4
	Kernel-5_35-4_79_2_65:4.3.2.4
	Kernel-5_35-4_79_2_64:4.3.2.4
	Kernel-5_35-4_79_2_63:4.3.2.4
	Kernel-5_35-4_79_2_62:4.3.2.4
	Kernel-5_35-4_79_2_61:4.3.2.4
	Kernel-5_35-4_79_2_59:4.3.2.4
	Kernel-5_35-4_79_2_58:4.3.2.4
	Kernel-5_35-4_79_2_57:4.3.2.4
	Kernel-5_35-4_79_2_56:4.3.2.4
	Kernel-5_35-4_79_2_55:4.3.2.4
	Kernel-5_35-4_79_2_54:4.3.2.4
	Kernel-5_35-4_79_2_53:4.3.2.4
	Kernel-5_35-4_79_2_52:4.3.2.4
	Kernel-5_35-4_79_2_51:4.3.2.4
	Kernel-5_35-4_79_2_50:4.3.2.3
	Kernel-5_35-4_79_2_49:4.3.2.3
	Kernel-5_35-4_79_2_48:4.3.2.3
	Kernel-5_47:4.3
	Kernel-5_46-4_90_2_1:4.3
	nbingham_Kernel_FastNC_dev_bp:4.3
	nbingham_Kernel_FastNC_dev:4.3.0.4
	Kernel-5_46:4.3
	Kernel-5_45:4.3
	Kernel-5_35-4_79_2_47:4.3.2.3
	Kernel-5_35-4_79_2_46:4.3.2.3
	Kernel-5_35-4_79_2_45:4.3.2.3
	Kernel-5_35-4_79_2_44:4.3.2.3
	Kernel-5_35-4_79_2_25_2_2:4.3.2.3
	Kernel-5_35-4_79_2_43:4.3.2.3
	Kernel-5_35-4_79_2_42:4.3.2.3
	Kernel-5_35-4_79_2_41:4.3.2.3
	Kernel-5_35-4_79_2_40:4.3.2.3
	Kernel-5_35-4_79_2_39:4.3.2.3
	Kernel-5_35-4_79_2_38:4.3.2.3
	Kernel-5_35-4_79_2_37:4.3.2.3
	Kernel-5_35-4_79_2_36:4.3.2.3
	Kernel-5_35-4_79_2_35:4.3.2.3
	Kernel-5_35-4_79_2_34:4.3.2.3
	Kernel-5_35-4_79_2_33:4.3.2.3
	Kernel-5_35-4_79_2_32:4.3.2.3
	Kernel-5_44:4.3
	Kernel-5_35-4_79_2_25_2_1:4.3.2.3
	Kernel-5_43:4.3
	Kernel-5_35-4_79_2_31:4.3.2.3
	Kernel-5_35-4_79_2_30:4.3.2.3
	Kernel-5_35-4_79_2_29:4.3.2.3
	Kernel-5_35-4_79_2_28:4.3.2.3
	Kernel-5_35-4_79_2_27:4.3.2.3
	Kernel-5_35-4_79_2_26:4.3.2.3
	Kernel-5_42:4.3
	Kernel-5_41:4.3
	Kernel-5_40:4.3
	Kernel-5_35-4_79_2_25:4.3.2.3
	Kernel-5_35-4_79_2_24:4.3.2.3
	Kernel-5_35-4_79_2_23:4.3.2.3
	Kernel-5_35-4_79_2_22:4.3.2.3
	Kernel-5_35-4_79_2_21:4.3.2.3
	Kernel-5_35-4_79_2_20:4.3.2.3
	Kernel-5_35-4_79_2_19:4.3.2.3
	Kernel-5_35-4_79_2_18:4.3.2.3
	Kernel-5_35-4_79_2_17:4.3.2.3
	Kernel-5_35-4_79_2_16:4.3.2.3
	Kernel-5_35-4_79_2_15:4.3.2.3
	Kernel-5_35-4_79_2_14:4.3.2.3
	Kernel-5_39:4.3
	Kernel-5_13-4_52_2_1:4.2
	Bethany:4.2.0.8
	Kernel-5_38:4.3
	Kernel-5_35-4_79_2_13:4.3.2.3
	Kernel-5_35-4_79_2_12:4.3.2.2
	Kernel-5_35-4_79_2_11:4.3.2.2
	Kernel-5_37:4.3
	Kernel-5_35-4_79_2_10:4.3.2.2
	Kernel-5_35-4_79_2_9:4.3.2.2
	Kernel-5_36:4.3
	Kernel-5_35-4_79_2_8:4.3.2.1
	Kernel-5_35-4_79_2_7:4.3.2.1
	Kernel-5_35-4_79_2_6:4.3.2.1
	Kernel-5_35-4_79_2_5:4.3.2.1
	Kernel-5_35-4_79_2_4:4.3.2.1
	Kernel-5_35-4_79_2_3:4.3.2.1
	Kernel-5_35-4_79_2_2:4.3.2.1
	dellis_autobuild_BaseSW:4.3
	Kernel-5_35-4_79_2_1:4.3.2.1
	HAL:4.3.0.2
	Kernel-5_35:4.3
	Kernel-5_34:4.3
	Kernel-5_33:4.3
	Kernel-5_32:4.3
	Kernel-5_31:4.3
	Kernel-5_30:4.3
	Kernel-5_29:4.3
	Kernel-5_28:4.3
	Kernel-5_27:4.3
	Kernel-5_26:4.3
	Kernel-5_25:4.3
	Kernel-5_24:4.3
	Kernel-5_23:4.3
	Kernel-5_22:4.2
	sbrodie_sedwards_16Mar2000:4.2
	Kernel-5_21:4.2
	Kernel-5_20:4.2
	Kernel-5_19:4.2
	Kernel-5_18:4.2
	Kernel-5_17:4.2
	Kernel-5_16:4.2
	Kernel-5_15:4.2
	Kernel-5_14:4.2
	Kernel-5_13:4.2
	Kernel-5_12:4.2
	Kernel-5_11:4.2
	Kernel-5_10:4.2
	Kernel-5_09:4.2
	Kernel-5_08:4.2
	Kernel-5_07:4.2
	Kernel-5_06:4.2
	Kernel-5_05:4.2
	Kernel-5_04:4.2
	Kernel-5_03:4.2
	Kernel-5_02:4.2
	Kernel-5_01:4.2
	Kernel-5_00:4.2
	Kernel-4_99:4.2
	Kernel-4_98:4.2
	Kernel-4_97:4.2
	Kernel-4_96:4.2
	Kernel-4_95:4.2
	Kernel-4_94:4.2
	Kernel-4_93:4.2
	Kernel-4_92:4.2
	Kernel-4_91:4.2
	Kernel-4_90:4.2
	dcotton_autobuild_BaseSW:4.3
	Kernel-4_89:4.2
	Kernel-4_88:4.2
	Kernel-4_87:4.2
	Kernel-4_86:4.2
	Kernel-4_85:4.2
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.2.2.2
	Kernel-4_84:4.2
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.2.2.2
	Ursula_RiscPC_bp:4.2.2.2
	Kernel-4_83:4.2
	Kernel-4_82:4.2
	Kernel-4_81:4.2
	Kernel-4_80:4.2
	Kernel-4_79:4.2
	Kernel-4_78:4.2
	Kernel-4_77:4.2
	Kernel-4_76:4.2
	Kernel-4_75:4.2
	Kernel-4_74:4.2
	Kernel-4_73:4.2
	Kernel-4_72:4.2
	Kernel-4_71:4.2
	Kernel-4_70:4.2
	Kernel-4_69:4.2
	Kernel-4_68:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2.2.2
	Ursula_RiscPC:4.2.2.2.0.2
	Kernel-4_63-1_1_2_5:4.1.7.1
	Kernel-4_63-1_1_2_4:4.1.7.1
	Kernel-4_67:4.2
	Kernel-4_66:4.2
	Kernel-4_63-1_1_2_3:4.1.7.1
	Kernel-4_65:4.2
	Ursula_merge:4.2
	Kernel-4_64:4.2
	mstphens_Kernel-3_81:4.2.2.2
	Kernel-4_63-1_1_2_2:4.1.7.1
	nicke_Kernel_4_62:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2.2.2
	UrsulaBuild_FinalSoftload:4.2.2.2
	rthornb_UrsulaBuild-12Aug1998:4.2.2.2
	aglover_UrsulaBuild-05Aug1998:4.2.2.2
	rthornb_UrsulaBuild-29Jul1998:4.2.2.2
	rthornb_UrsulaBuild-22Jul1998:4.2.2.2
	nturton_v459:4.1.7.1
	nturton_v460:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.2.2.2
	rthornb_UrsulaBuild-07Jul1998:4.2.2.2
	rthornb_UrsulaBuild-17Jun1998:4.2.2.2
	rthornb_UrsulaBuild-03Jun1998:4.2.2.2
	rthornb_UrsulaBuild-27May1998:4.2.2.2
	mstphens_Kernel-3_80:4.2.2.2
	rthornb_UrsulaBuild-21May1998:4.2.2.2
	afrost_Boca-1_2-Beta:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.2.2.2
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2016.06.30.20.07.59;	author jlee;	state Exp;
branches;
next	4.3;
commitid	IWoXxARWeuLDOwcz;

4.3
date	2000.04.04.14.27.23;	author kbracey;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	97.01.21.14.06.46;	author nturton;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.40.48;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.3.2.1
date	2000.09.15.12.38.00;	author kbracey;	state Exp;
branches;
next	4.3.2.2;

4.3.2.2
date	2000.10.09.15.59.15;	author kbracey;	state Exp;
branches;
next	4.3.2.3;

4.3.2.3
date	2000.11.10.15.51.34;	author kbracey;	state Exp;
branches;
next	4.3.2.4;

4.3.2.4
date	2002.11.30.00.31.04;	author bavison;	state Exp;
branches
	4.3.2.4.2.1;
next	4.3.2.5;

4.3.2.5
date	2011.08.03.23.46.17;	author jlee;	state Exp;
branches;
next	4.3.2.6;
commitid	uz6Vep4mDx27F7uv;

4.3.2.6
date	2013.08.06.22.43.02;	author jlee;	state Exp;
branches;
next	4.3.2.7;
commitid	TOIaeUf2Q4rBIr0x;

4.3.2.7
date	2015.06.19.00.46.45;	author jlee;	state Exp;
branches;
next	;
commitid	KF6G5xNdk9IUvYpy;

4.3.2.4.2.1
date	2011.08.03.23.52.00;	author jlee;	state Exp;
branches;
next	;
commitid	LLn4KPy3Hjh5H7uv;

4.2.2.1
date	97.12.08.14.34.07;	author mstphens;	state Exp;
branches;
next	4.2.2.2;

4.2.2.2
date	98.03.26.11.25.09;	author mstphens;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.40.48;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.58.30;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.09.17;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.02.34;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    > Public Work Space

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************

; Date       Name  Description
; ----       ----  -----------
; 15-Jun-94  AMcC  Created - holds values 'exported' from KernelWS
;                  Corresponds to Values previously set in VickySpace / NewSpace
; 03-Nov-94  AMcC  Added ScreenBlankFlag and ScreenBlankDPMSState
; 12-Jul-95  JRH   Added RestType
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Memory map values: (in address order)

; Legacy kernel locations (ZeroPage-relative)
 
; Note - the addresses defined here are what were used with the RISC OS 5.22-era
; kernel and may not match the addresses in use by any newer kernel which your
; code may be running on. If you need to peek at these values then make sure
; you look up the address at runtime using OS_ReadSysInfo 6, and only fall back
; to these definitions if the OS_ReadSysInfo implementation doesn't recognise
; the item.

                           ^ &00000104
Legacy_ESC_Status          #         1

                           ^ &00000105
Legacy_LatchBSoftCopy      #         1

                           ^ &00000107
Legacy_CannotReset         #         1

                           ^ &00000108
Legacy_IRQsema             #         4

                           ^ &0000010C
Legacy_MetroGnome          #         4

                           ^ &00000114
Legacy_MEMC_CR_SoftCopy    #         4

                           ^ &00000300
Legacy_DebuggerSpace       #      8*16

                           ^ &00000AE1    ; RedirectInHandle
Legacy_RedirectInHandle    #         1

                           ^ &00000AE2    ; RedirectOutHandle
Legacy_RedirectOutHandle   #         1

                           ^ &00000FE8
Legacy_CLibCounter         #         1

                           ^ &00000FEC
Legacy_RISCOSLibWord       #         4

                           ^ &00000FF0
Legacy_CLibWord            #         4

                           ^ &00000FF4
Legacy_FPEAnchor           #         4

                           ^ &00000FF8
Legacy_DomainId            #         4    ; domain identification

                           ^ &00001000
Legacy_VduDriverWorkSpace  #     &3000

; VDU driver locations (VduDriverWorkSpace-relative)

                           ^ &000001F8
Legacy_ECFShift            #         4    ; number of bits to rotate  right ECF OR and EOR masks by                           
Legacy_ECFYOffset          #         4    ; vertical offset to ECF index

                           ^ &0000047C
Legacy_ScreenBlankFlag     #         1    ; 0 => unblanked, 1 => blanked

                            ^ &0000047D
Legacy_ScreenBlankDPMSState #         1   ; 0 => just blank video
                                          ; 1 => blank to stand-by (hsync off)
                                          ; 2 => blank to suspend (vsync off)
                                          ; 3 => blank to off (H+V off)
                           ^ &00000480
Legacy_FgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

                           ^ &000004C0
Legacy_BgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

; Other locations

                    ^ &00004000
ScratchSpace        #     &4000

 [ {FALSE}
                    ^ &01F04000
 |
                    ^ &FAFF4000
 ]
SoundWorkSpace      #     &2000

SoundDMABufferSize  *     &1000

SoundDMABuffers     #     SoundDMABufferSize * 2


        OPT     OldOpt
        END
@


4.3
log
@  32-bit Kernel.

Details:
  The Kernel will now compile to produce a pure 32-bit system if No26bitCode is
  set to TRUE.
  If No26bitCode is FALSE, then the Kernel will be a standard 26-bit Kernel,
  although some internal changes have taken place to minimise compile
  switches between the two cases. See Docs.32bit for more technical info.

  The hardest part was the flood-fill...

Other changes:
  Pointer shape changes now take place on the next VSync, rather than actually
  WAITING for the VSync. Turning the Hourglass on shouldn't slow your machine
  down by 5% now :)

  Lots of really crusty pre-IOMD code removed.

Admin:
  Tested in 32 and 26-bit forms in a limited desktop build. Basically, this
  will need to see a lot of use to iron out difficulties. I'd like anyone who
  has a non-frozen project to at least attempt using this Kernel.

Version 5.23. Tagged as 'Kernel-5_23'
@
text
@d34 8
a41 2
                    ^ &00000104
ESC_Status          #         1
d43 2
a44 2
                    ^ &00000105
LatchBSoftCopy      #         1
d46 2
a47 2
                    ^ &00000107
CannotReset         #         1
d49 2
a50 2
                    ^ &00000108
IRQsema             #         4
d52 2
a53 2
                    ^ &00000114
MEMC_CR_SoftCopy    #         4
d55 2
a56 2
                    ^ &00000300
DebuggerSpace       #      8*16
d58 2
a59 2
                    ^ &0000047C
ScreenBlankFlag     #         1           ; 0 => unblanked, 1 => blanked
d61 17
a77 7
                    ^ &0000047D
ScreenBlankDPMSState #        1           ; 0 => just blank video
                                          ; 1 => blank to stand-by (hsync off)
                                          ; 2 => blank to suspend (vsync off)
                                          ; 3 => blank to off (H+V off)
                    ^ &00000480
FgEcfOraEor         #      4*16           ; Interleaved zgora & zgeor (from Vdu Driver Workspace)
d79 2
a80 2
                    ^ &000004C0
BgEcfOraEor         #      4*16           ; Interleaved zgora & zgeor (from Vdu Driver Workspace)
d82 2
a83 2
                    ^ &00000AE1           ; RedirectInHandle
RedirectInHandle    #         1
d85 2
a86 2
                    ^ &00000AE2           ; RedirectOutHandle
RedirectOutHandle   #         1
d88 1
a88 2
                    ^ &00000FF8
DomainId            #         4           ; domain identification
d90 3
a92 2
                    ^ &00001000
VduDriverWorkSpace  #     &3000
d94 2
a95 2
                    ^ &00004000
ScratchSpace        #     &4000
d97 7
a103 2
                    ^ &01C02000
SVCSTK              #         0
d105 2
a106 2
                    ^ &01C02000
SysHeapStart        #         0
d108 1
a108 2
                    ^ &01F033FC
SvcTable            #      &400
d110 2
a111 2
                    ^ &01F037FC
BranchToSWIExit     #         4           ; from SWI despatcher
d113 1
d115 3
a121 1
                    ^ &01F06000
@


4.3.2.1
log
@* Converted to building with ObjAsm (but still a single object file using ORG).
* Added ARM_IMB and ARM_IMBRange SWIs as recommended by ARMv5.
* Some early prototype HAL bits popped in - a lot of source restructuring still
  to come.
* New debug target creates an AIF image with debug information, and translates
  this into an ASCII object file for the 16702B logic analyser.

Version 5.35, 4.79.2.1. Tagged as 'Kernel-5_35-4_79_2_1'
@
text
@a80 7
 [ HAL32
SVCSTK              * &FA208000
SysHeapStart        * &FB404000
                    ^ &FAFF33FC
SvcTable            #      &400
BranchToSWIExit     #         4
 |
a99 1
 ]
@


4.3.2.2
log
@More L7200 HAL work
@
text
@a81 1
 [ {FALSE}
a83 5
 |
SVCSTK              * &01C08000
SysHeapStart        * &01C08000
 ]
 [ {FALSE}
a84 3
 |
                    ^ &01F033FC
 ]
@


4.3.2.3
log
@Check-in of the few last-minute changes for the Customer L demo. Nothing
exciting, apart from an extended touchscreen API.

Version 5.35, 4.79.2.13. Tagged as 'Kernel-5_35-4_79_2_13'
@
text
@a108 1
 ]
d116 1
@


4.3.2.4
log
@  Commit of kernel as featured in release 5.00.
Detail:
  Lots of changes since last version, at least the following:
  * Updated OS timestamp, removed alpha status
  * Negative INKEY OS version changed to &AA
  * GraphicsV is now alocated vector number &2A
  * ROM moved up to &FC000000
  * Max application slot increased to 512 Mbytes (for now)
  * Max size of RMA increased to 256 Mbytes
  * RMA is now first-created dynamic area (so it gets lowest address after
    top of application slot)
  * OS_Memory 10 reimplemeted
  * New OS_ReadSysInfo 6 values 18-22 added
  * OS_ReadSysInfo 8 gains flag bit to indicate soft power-off
  * Misc internal top-bit-set-address fixes
  * *ChangeDynamicArea can take sizes in megabytes or gigabytes
  * Magic word "&off" in R0 passed to OS_Reset powers down if possible
  * Added acceleration: block copy; CLS; text window scroll up; rectangle
    fill
  * Disabled LED flashing in page mode (liable to crash)
  * Masked sprite plot and VDU 5 text avoids reading the screen if possible
  * Framestore made USR mode accessible
  * Fix for VDU 5,127 bug - now relies on font definitions being in extreme
    quarters of memory, rather than bottom half
  * Allocated 64-bit OS_Convert... SWIs
  * IIC errors use allocated error numbers
  * Looks for Dallas RTC before Philips RTC because we're using a Philips
    NVRAM device with the same ID
  * Fix to bug that meant the oscillator in the Dallas RTC wasn't enabled
  * Default mouse type (USB) changed to allocated number
  * Ram disc max size increased to 128 Mbytes (Ursula merge) and made
    cacheable for StrongARMs (not XScale)
  * Branch through zero handler now works in USR mode, by use of a
    trampoline in the system stack to allow PC-relative register storage
  * Address exception handler changed to not use 0 as workspace
  * OS_Memory 13 extended to allow specification of cacheability and access
    privileges
  * Added OS_Memory 16 to return important memory addresses
  * RISCOS_MapInIO() takes cacheable flag in bit 3, access permissions in
    bits 10 and 11, doubly-mapped flag in bit 20, and access permissions
    specified flag in bit 21
  * Bug fix in last version for application abort handlers didn't quite
    work; register shuffle required
  * "Module is not 32-bit compatible" error now reports the module name
  * Default configured language changed from 10 to 11 (now Desktop again)

Version 5.35, 4.79.2.51. Tagged as 'Kernel-5_35-4_79_2_51'
@
text
@d81 1
d83 8
a90 1
                    ^ &01F04000
d92 1
a92 1
                    ^ &FAFF4000
d94 17
d115 1
@


4.3.2.4.2.1
log
@Add new OS_ReadSysInfo 6 items. Change naming of PublicWS values.
Detail:
  s/Middle - Added some new OS_ReadSysInfo 6 items which are needed by the zero page relocation kernel. Also duplicated some existing entries to avoid conflicts with ROL's allocations.
  hdr/OSRSI6, Makefile - New header listing OS_ReadSysInfo 6 items
  hdr/PublicWS - Duplicated the workspace definitions for &0-&4000, but with a 'Legacy_' prefix to their names. Also added some new entries as needed by the zero page relocation kernel. Once existing modules have been updated to use OS_ReadSysInfo 6 & the Legacy_ definitions, the old defs will be removed.
  hdr/KernelWS - Removed 'Export_' prefix from all the exported workspace values, since the kernel can now use the original names directly
  hdr/Options - Dummy HiProcVecs option so merging things will be a bit cleaner
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.44. Tagged as 'Kernel-5_35-4_79_2_98_2_44'
@
text
@a33 10
; These old definitions will be gone soon.
        GBLL OldKernelWorkSpace
 [ :DEF: AssemblingArthur
OldKernelWorkSpace SETL :LNOT: AssemblingArthur
 |
OldKernelWorkSpace SETL {TRUE}
 ]

 [ OldKernelWorkSpace :LAND: {TRUE}
 
a77 63
 ]

; New 'legacy' definitions

                           ^ &00000104
Legacy_ESC_Status          #         1

                           ^ &00000105
Legacy_LatchBSoftCopy      #         1

                           ^ &00000107
Legacy_CannotReset         #         1

                           ^ &00000108
Legacy_IRQsema             #         4

                           ^ &0000010C
Legacy_MetroGnome          #         4

                           ^ &00000114
Legacy_MEMC_CR_SoftCopy    #         4

                           ^ &00000300
Legacy_DebuggerSpace       #      8*16

                           ^ &0000047C
Legacy_ScreenBlankFlag     #         1    ; 0 => unblanked, 1 => blanked

                            ^ &0000047D
Legacy_ScreenBlankDPMSState #        1    ; 0 => just blank video
                                          ; 1 => blank to stand-by (hsync off)
                                          ; 2 => blank to suspend (vsync off)
                                          ; 3 => blank to off (H+V off)
                           ^ &00000480
Legacy_FgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

                           ^ &000004C0
Legacy_BgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

                           ^ &00000AE1    ; RedirectInHandle
Legacy_RedirectInHandle    #         1

                           ^ &00000AE2    ; RedirectOutHandle
Legacy_RedirectOutHandle   #         1

                           ^ &00000FE8
Legacy_CLibCounter         #         1

                           ^ &00000FEC
Legacy_RISCOSLibWord       #         4

                           ^ &00000FF0
Legacy_CLibWord            #         4

                           ^ &00000FF4
Legacy_FPEAnchor           #         4

                           ^ &00000FF8
Legacy_DomainId            #         4    ; domain identification

                           ^ &00001000
Legacy_VduDriverWorkSpace  #     &3000

@


4.3.2.5
log
@Add new OS_ReadSysInfo 6 items codes. Change naming of PublicWS values.
Detail:
  s/Middle - Added some new OS_ReadSysInfo 6 items which are needed by the zero page relocation kernel. Also duplicated some existing entries to avoid conflicts with ROL's allocations.
  hdr/OSRSI6, Makefile - New header listing OS_ReadSysInfo 6 items
  hdr/PublicWS - Duplicated the workspace definitions for &0-&4000, but with a 'Legacy_' prefix to their names. Also added some new entries as needed by the zero page relocation kernel. Once existing modules have been updated to use OS_ReadSysInfo & the Legacy_ definitions, the old defs will be removed.
  hdr/KernelWS - Removed 'Export_' prefix from all the exported workspace values, since the kernel can now use the original names directly
  hdr/Options - Dummy HiProcVecs option so merging things will be a bit cleaner
Admin:
  Tested in ROM softload on Iyonix


Version 5.35, 4.79.2.118. Tagged as 'Kernel-5_35-4_79_2_118'
@
text
@a33 10
; These old definitions will be gone soon.
        GBLL OldKernelWorkSpace
 [ :DEF: AssemblingArthur
OldKernelWorkSpace SETL :LNOT: AssemblingArthur
 |
OldKernelWorkSpace SETL {TRUE}
 ]

 [ OldKernelWorkSpace :LAND: {TRUE}
 
a77 63
 ]

; New 'legacy' definitions

                           ^ &00000104
Legacy_ESC_Status          #         1

                           ^ &00000105
Legacy_LatchBSoftCopy      #         1

                           ^ &00000107
Legacy_CannotReset         #         1

                           ^ &00000108
Legacy_IRQsema             #         4

                           ^ &0000010C
Legacy_MetroGnome          #         4

                           ^ &00000114
Legacy_MEMC_CR_SoftCopy    #         4

                           ^ &00000300
Legacy_DebuggerSpace       #      8*16

                           ^ &0000047C
Legacy_ScreenBlankFlag     #         1    ; 0 => unblanked, 1 => blanked

                            ^ &0000047D
Legacy_ScreenBlankDPMSState #        1    ; 0 => just blank video
                                          ; 1 => blank to stand-by (hsync off)
                                          ; 2 => blank to suspend (vsync off)
                                          ; 3 => blank to off (H+V off)
                           ^ &00000480
Legacy_FgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

                           ^ &000004C0
Legacy_BgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

                           ^ &00000AE1    ; RedirectInHandle
Legacy_RedirectInHandle    #         1

                           ^ &00000AE2    ; RedirectOutHandle
Legacy_RedirectOutHandle   #         1

                           ^ &00000FE8
Legacy_CLibCounter         #         1

                           ^ &00000FEC
Legacy_RISCOSLibWord       #         4

                           ^ &00000FF0
Legacy_CLibWord            #         4

                           ^ &00000FF4
Legacy_FPEAnchor           #         4

                           ^ &00000FF8
Legacy_DomainId            #         4    ; domain identification

                           ^ &00001000
Legacy_VduDriverWorkSpace  #     &3000

@


4.3.2.6
log
@Add support for the new RISC OS 5 style sprite mode word. Add partial support for alpha channel sprite masks. Implement OS_ScreenMode reasons 13-15
Detail:
  ECFShift/ECFYOffset:
  - hdr/PublicWS - Add ECFShift and ECFYOffset to list of public exports (SpriteExtend was using hardcoded values). Rearrange exports so that VduWorkspace exports are now labelled as such.
  - hdr/KernelWS - Make sure ECFShift & ECFYOffset match their exported locations
  - hdr/OSRSI6, s/Middle - Add OS_ReadSysInfo 6 items 83 & 84, for reading ECFYOffset and ECFShift locations
  Mode flags/VDU variables:
  - Makefile - Add hdr/VduExt to the C header exports
  - hdr/VduExt - Get rid of NotRVVTBarWobblyBits macro and defined VDU variables manually so that Hdr2H will handle them. Begin replacing overly generic 'Flag_*' mode flag definitions with 'ModeFlag_*' instead. Define new flags as required by the new screen/sprite modes. Add OS_ScreenMode reason codes and mode selector format (from s.vdu.vdudecl)
  - NewModes/NEWF2, NewModes/OldPSSrc, NewModes/PSSrc, s.vdu.vdu23, s.vdu.vducursoft, s.vdu.vdudriver, s.vdu.vdugrafg, s.vdu.vdugrafj, s.vdu.vdugrafl, s.vdu.vdumodes, s.vdu.vdupal10, s.vdu.vdupal20, s.vdu.vdupalette, s.vdu.vdupalxx, s.vdu.vduwrch - Renaming Flag_* to ModeFlag_*
  - s.vdu.vdudecl - Remove OS_ScreenMode reason codes & mode selector format definitions; these are now in hdr/VduExt. Flag_* -> ModeFlag_* renaming.
  - s.vdu.vdupalxx - Apply a greyscale palette in PV_SetDefaultPalette if the greyscale mode flag is set
  New sprite types:
  - s.vdu.vdudriver - Extend GenerateModeSelectorVars to deal with the wide mask flag, 64K sprites, and the new RISC OS 5 sprite mode word format.
  - s.vdu.vdugrafdec - Store more information about the sprite in the SprReadNColour ... SprLog2BPC block.
  - s.vdu.vdugrafg - Update SpriteVecHandler to be able to detect whether RISC OS 5 format sprites are allowed palettes. Update SetupSprModeData to store the extra sprite info that's defined in vdugrafdec. Update PutSprite to fault any sprites with wide masks - SpriteExtend must be used for that (once implemented!)
  - s.vdu.vdugrafh - Update WritePixelColour to avoid temporary poking of NColour VDU variable for 8bpp sprites. Correctly replicate data when writing to RISC OS 5 format sprites. Update ReadPixelMask, WritePixelMask, SpriteMaskAddr, GetMaskspWidth to deal with wide masks. Delete obsolete bounce_new_format_masks routine.
  - s.vdu.vdugrafi - Comment updated to reflect new reality
  - s.vdu.vdugrafj - Get rid of unused code block in CreateHeader/PostCreateHeader. Update SanitizeSGetMode to generate RISC OS 5 style sprite mode words where applicable. Update DecideMaskSize to rely on GetMaskspWidth for calculating mask width.
  - s.vdu.vdugrafl - Update SwitchOutputToSprite/SwitchOutputToMask to deal with the new sprite formats. Allow PushModeInfoAnyMonitor to fail.
  - s.vdu.vduswis - Extended OS_ReadModeVariable to cope with new sprite types
  Misc:
  - s.vdu.vdudriver - Fixed bug with VIDCList copying where any -1 value in the structure would terminate the copy, instead of only -1 as a control item number
  - s.vdu.vduswis - Implemented OS_ScreenMode 13 (Mode string to specifier), 14 (mode specifier to string), and 15 (set mode by string). Mostly as per ROL's specs, but minus support for teletext attributes, and plus support for new RISC OS 5 attributes (L... layout specifier, 4096 & 24bpp packed modes, etc.)
  - s.vdu.vduwrch - Pick correct default text colours for the new modes
Admin:
  Tested on BB-xM
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 5.35, 4.79.2.194. Tagged as 'Kernel-5_35-4_79_2_194'
@
text
@a42 2

; Kernel locations (ZeroPage-relative)
a61 14
                    ^ &00000AE1           ; RedirectInHandle
RedirectInHandle    #         1

                    ^ &00000AE2           ; RedirectOutHandle
RedirectOutHandle   #         1

                    ^ &00000FF8
DomainId            #         4           ; domain identification

                    ^ &00001000
VduDriverWorkSpace  #     &3000

; VDU driver locations (VduDriverWorkSpace-relative)

d76 12
a91 2
; Kernel locations (ZeroPage-relative)
 
d113 14
a150 22
; VDU driver locations (VduDriverWorkSpace-relative)

                           ^ &000001F8
Legacy_ECFShift            #         4    ; number of bits to rotate  right ECF OR and EOR masks by                           
Legacy_ECFYOffset          #         4    ; vertical offset to ECF index

                           ^ &0000047C
Legacy_ScreenBlankFlag     #         1    ; 0 => unblanked, 1 => blanked

                            ^ &0000047D
Legacy_ScreenBlankDPMSState #         1   ; 0 => just blank video
                                          ; 1 => blank to stand-by (hsync off)
                                          ; 2 => blank to suspend (vsync off)
                                          ; 3 => blank to off (H+V off)
                           ^ &00000480
Legacy_FgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

                           ^ &000004C0
Legacy_BgEcfOraEor         #      4*16    ; Interleaved zgora & zgeor (from Vdu Driver Workspace)

; Other locations

@


4.3.2.7
log
@Fix HiProcVecs build. Remove old-style PublicWS definitions.
Detail:
  s/ARMops - Added extra LTORG to fix HiProcVecs build error for some platforms
  hdr/PublicWS - Remove the old (non-Legacy_) workspace exports, and add a comment explaining how the newer Legacy_ exports should be used.
Admin:
  HiProcVecs ROMs for various platforms now appear to build OK
  Untested at runtime


Version 5.35, 4.79.2.266. Tagged as 'Kernel-5_35-4_79_2_266'
@
text
@d34 11
a44 1
; Legacy kernel locations (ZeroPage-relative)
d46 29
a74 6
; Note - the addresses defined here are what were used with the RISC OS 5.22-era
; kernel and may not match the addresses in use by any newer kernel which your
; code may be running on. If you need to peek at these values then make sure
; you look up the address at runtime using OS_ReadSysInfo 6, and only fall back
; to these definitions if the OS_ReadSysInfo implementation doesn't recognise
; the item.
d76 22
@


4.2
log
@Kernel merged
@
text
@d49 2
a50 2
                    ^ &00000174
ResetType           #         1           ; bit 0 => type of last reset. Other bits reserved (zero).
@


4.2.2.1
log
@Various speed ups
Memory map changes:
remove shadow ROM
move UNDEF stack, SoftCAM and MMU tables above 64M
expand RMA limit to 15M from 11M
expand SysHeap limit to 3M-32k from 2M-8k
expand SVC stack to 32k from 8k
partially protect kernel workspace from user access
protect SVC stack from user access
@
text
@d81 5
a85 3
;;;mjs change for Ursula:
;;;SVCSTK and SysHeapStart are no longer exported, there is a run-time mechanism to get
;;;these values, via OS_ReadSysInfo 6, the values themselves have changed for Ursula
@


4.2.2.2
log
@added support for Sparse dynamic areas
fixed performance disaster caused by naff API for Shrinkable areas
implemented clamps for dynamic areas max size
configured kernel to not own or create RAMFS area (needs new RAMFS)
AMBControl now uses system heap for space, not RMA
AMBControl enables Lazy task swapping if running on rev T or better SA
kernel now assumes there could be code above 64M
SWIS for limited 32 bit user code support implemented
Long command lines implemented (1k instead of 256)
Fast service call distribution implemented (uses Ursula module format)
*fx,*key etc now allow missing space before first parameter
*configure is reinstated (bug fix)
@
text
@d81 3
a83 5
                    ^ &01C08000           ; changed for Ursula, was &01C02000
SVCSTK              #         0

                    ^ &01C08000           ; changed for Ursula, was &01C02000
SysHeapStart        #         0
@


4.1
log
@Initial revision
@
text
@d29 1
d49 3
d100 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a28 1
; 12-Jul-95  JRH   Added RestType
a47 3
                    ^ &00000322
ResetType           #         1           ; bit 0 => type of last reset. Other bits reserved (zero).

a95 1

@


4.1.5.1
log
@Import from SrcFiler
@
text
@a28 1
; 12-Jul-95  JRH   Added RestType
a47 3
                    ^ &00000322
ResetType           #         1           ; bit 0 => type of last reset. Other bits reserved (zero).

a95 1

@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
