head	4.4;
access;
symbols
	Kernel-6_15:4.4
	Kernel-6_14:4.4
	Kernel-6_01-3:4.4
	Kernel-6_13:4.4
	Kernel-6_12:4.4
	Kernel-6_11:4.4
	Kernel-6_10:4.4
	Kernel-6_09:4.4
	Kernel-6_08-4_129_2_10:4.4
	Kernel-6_08-4_129_2_9:4.4
	Kernel-6_08:4.4
	Kernel-6_07:4.4
	Kernel-6_06:4.4
	Kernel-6_05-4_129_2_8:4.4
	Kernel-6_05:4.4
	Kernel-6_04:4.4
	Kernel-6_03:4.4
	Kernel-6_01-2:4.4
	Kernel-6_01-4_146_2_1:4.4
	Kernel-6_02:4.4
	Kernel-6_01-1:4.4
	Kernel-6_01:4.4
	Kernel-6_00:4.4
	Kernel-5_99:4.4
	Kernel-5_98:4.4
	Kernel-5_97-4_129_2_7:4.4
	Kernel-5_97:4.4
	Kernel-5_96:4.4
	Kernel-5_95:4.4
	Kernel-5_94:4.4
	Kernel-5_93:4.4
	Kernel-5_92:4.4
	Kernel-5_91:4.4
	Kernel-5_90:4.4
	Kernel-5_89-4_129_2_6:4.4
	Kernel-5_89:4.4
	Kernel-5_88-4_129_2_5:4.4
	Kernel-5_88-4_129_2_4:4.4
	Kernel-5_88:4.4
	Kernel-5_87:4.4
	Kernel-5_86-4_129_2_3:4.4
	Kernel-5_86-4_129_2_2:4.4
	Kernel-5_86-4_129_2_1:4.4
	Kernel-5_86:4.4
	SMP:4.4.0.2
	SMP_bp:4.4
	Kernel-5_85:4.4
	Kernel-5_54-1:4.4
	Kernel-5_84:4.4
	Kernel-5_83:4.4
	Kernel-5_82:4.4
	Kernel-5_81:4.4
	Kernel-5_80:4.4
	Kernel-5_79:4.4
	Kernel-5_78:4.4
	Kernel-5_77:4.4
	Kernel-5_76:4.4
	Kernel-5_75:4.4
	Kernel-5_74:4.4
	Kernel-5_73:4.4
	Kernel-5_72:4.4
	Kernel-5_71:4.4
	Kernel-5_70:4.4
	Kernel-5_69:4.4
	Kernel-5_68:4.4
	Kernel-5_67:4.4
	Kernel-5_66:4.4
	Kernel-5_65:4.4
	Kernel-5_64:4.4
	Kernel-5_63:4.4
	Kernel-5_62:4.4
	Kernel-5_61:4.4
	Kernel-5_60:4.4
	Kernel-5_59:4.4
	Kernel-5_58:4.4
	Kernel-5_57:4.4
	Kernel-5_56:4.4
	Kernel-5_55:4.4
	Kernel-5_54:4.4
	Kernel-5_53:4.4
	Kernel-5_52:4.4
	Kernel-5_51:4.4
	Kernel-5_50:4.4
	Kernel-5_49:4.3
	HAL_merge:4.2.10.4
	Kernel-5_48:4.3
	Kernel-5_35-4_79_2_327:4.2.10.4
	Kernel-5_35-4_79_2_326:4.2.10.4
	Kernel-5_35-4_79_2_325:4.2.10.4
	Kernel-5_35-4_79_2_324:4.2.10.4
	Kernel-5_35-4_79_2_323:4.2.10.4
	Kernel-5_35-4_79_2_322:4.2.10.4
	Kernel-5_35-4_79_2_321:4.2.10.4
	Kernel-5_35-4_79_2_320:4.2.10.4
	Kernel-5_35-4_79_2_319:4.2.10.4
	Kernel-5_35-4_79_2_318:4.2.10.4
	Kernel-5_35-4_79_2_317:4.2.10.4
	Kernel-5_35-4_79_2_316:4.2.10.4
	Kernel-5_35-4_79_2_315:4.2.10.4
	Kernel-5_35-4_79_2_314:4.2.10.4
	Kernel-5_35-4_79_2_313:4.2.10.4
	Kernel-5_35-4_79_2_312:4.2.10.4
	Kernel-5_35-4_79_2_311:4.2.10.4
	Kernel-5_35-4_79_2_310:4.2.10.4
	Kernel-5_35-4_79_2_309:4.2.10.4
	Kernel-5_35-4_79_2_308:4.2.10.4
	Kernel-5_35-4_79_2_307:4.2.10.4
	Kernel-5_35-4_79_2_306:4.2.10.4
	Kernel-5_35-4_79_2_305:4.2.10.4
	Kernel-5_35-4_79_2_304:4.2.10.4
	Kernel-5_35-4_79_2_303:4.2.10.4
	Kernel-5_35-4_79_2_302:4.2.10.4
	Kernel-5_35-4_79_2_301:4.2.10.4
	Kernel-5_35-4_79_2_300:4.2.10.4
	Kernel-5_35-4_79_2_299:4.2.10.4
	Kernel-5_35-4_79_2_298:4.2.10.4
	Kernel-5_35-4_79_2_297:4.2.10.4
	Kernel-5_35-4_79_2_296:4.2.10.4
	Kernel-5_35-4_79_2_295:4.2.10.4
	Kernel-5_35-4_79_2_294:4.2.10.4
	Kernel-5_35-4_79_2_293:4.2.10.4
	Kernel-5_35-4_79_2_292:4.2.10.4
	Kernel-5_35-4_79_2_291:4.2.10.4
	Kernel-5_35-4_79_2_290:4.2.10.4
	Kernel-5_35-4_79_2_289:4.2.10.4
	Kernel-5_35-4_79_2_288:4.2.10.4
	Kernel-5_35-4_79_2_287:4.2.10.4
	Kernel-5_35-4_79_2_286:4.2.10.4
	Kernel-5_35-4_79_2_285:4.2.10.4
	Kernel-5_35-4_79_2_284:4.2.10.4
	Kernel-5_35-4_79_2_283:4.2.10.4
	Kernel-5_35-4_79_2_282:4.2.10.4
	Kernel-5_35-4_79_2_281:4.2.10.4
	Kernel-5_35-4_79_2_280:4.2.10.4
	Kernel-5_35-4_79_2_279:4.2.10.4
	Kernel-5_35-4_79_2_278:4.2.10.4
	Kernel-5_35-4_79_2_277:4.2.10.4
	Kernel-5_35-4_79_2_276:4.2.10.4
	Kernel-5_35-4_79_2_275:4.2.10.4
	Kernel-5_35-4_79_2_274:4.2.10.4
	Kernel-5_35-4_79_2_273:4.2.10.4
	Kernel-5_35-4_79_2_272:4.2.10.4
	Kernel-5_35-4_79_2_271:4.2.10.4
	Kernel-5_35-4_79_2_270:4.2.10.4
	Kernel-5_35-4_79_2_269:4.2.10.4
	Kernel-5_35-4_79_2_268:4.2.10.4
	Kernel-5_35-4_79_2_267:4.2.10.4
	Kernel-5_35-4_79_2_266:4.2.10.4
	Kernel-5_35-4_79_2_265:4.2.10.4
	Kernel-5_35-4_79_2_264:4.2.10.4
	Kernel-5_35-4_79_2_263:4.2.10.4
	Kernel-5_35-4_79_2_262:4.2.10.4
	Kernel-5_35-4_79_2_261:4.2.10.4
	Kernel-5_35-4_79_2_260:4.2.10.4
	Kernel-5_35-4_79_2_259:4.2.10.4
	Kernel-5_35-4_79_2_258:4.2.10.4
	Kernel-5_35-4_79_2_257:4.2.10.4
	Kernel-5_35-4_79_2_256:4.2.10.4
	Kernel-5_35-4_79_2_255:4.2.10.4
	Kernel-5_35-4_79_2_254:4.2.10.4
	Kernel-5_35-4_79_2_253:4.2.10.4
	Kernel-5_35-4_79_2_252:4.2.10.4
	Kernel-5_35-4_79_2_251:4.2.10.4
	Kernel-5_35-4_79_2_250:4.2.10.4
	Kernel-5_35-4_79_2_249:4.2.10.4
	Kernel-5_35-4_79_2_248:4.2.10.4
	Kernel-5_35-4_79_2_247:4.2.10.4
	Kernel-5_35-4_79_2_246:4.2.10.4
	Kernel-5_35-4_79_2_245:4.2.10.4
	Kernel-5_35-4_79_2_244:4.2.10.4
	Kernel-5_35-4_79_2_243:4.2.10.4
	Kernel-5_35-4_79_2_242:4.2.10.4
	Kernel-5_35-4_79_2_241:4.2.10.4
	Kernel-5_35-4_79_2_240:4.2.10.4
	Kernel-5_35-4_79_2_239:4.2.10.4
	Kernel-5_35-4_79_2_238:4.2.10.4
	Kernel-5_35-4_79_2_237:4.2.10.4
	Kernel-5_35-4_79_2_236:4.2.10.4
	Kernel-5_35-4_79_2_235:4.2.10.4
	Kernel-5_35-4_79_2_234:4.2.10.4
	Kernel-5_35-4_79_2_233:4.2.10.4
	Kernel-5_35-4_79_2_232:4.2.10.4
	Kernel-5_35-4_79_2_231:4.2.10.4
	Kernel-5_35-4_79_2_230:4.2.10.4
	Kernel-5_35-4_79_2_229:4.2.10.4
	Kernel-5_35-4_79_2_228:4.2.10.4
	Kernel-5_35-4_79_2_227:4.2.10.4
	Kernel-5_35-4_79_2_226:4.2.10.4
	Kernel-5_35-4_79_2_225:4.2.10.4
	Kernel-5_35-4_79_2_224:4.2.10.4
	Kernel-5_35-4_79_2_223:4.2.10.4
	Kernel-5_35-4_79_2_222:4.2.10.4
	Kernel-5_35-4_79_2_221:4.2.10.4
	Kernel-5_35-4_79_2_220:4.2.10.4
	Kernel-5_35-4_79_2_219:4.2.10.4
	Kernel-5_35-4_79_2_218:4.2.10.4
	Kernel-5_35-4_79_2_217:4.2.10.4
	Kernel-5_35-4_79_2_216:4.2.10.4
	Kernel-5_35-4_79_2_215:4.2.10.4
	Kernel-5_35-4_79_2_214:4.2.10.4
	Kernel-5_35-4_79_2_213:4.2.10.4
	Kernel-5_35-4_79_2_212:4.2.10.4
	Kernel-5_35-4_79_2_211:4.2.10.4
	Kernel-5_35-4_79_2_210:4.2.10.4
	Kernel-5_35-4_79_2_209:4.2.10.4
	Kernel-5_35-4_79_2_208:4.2.10.4
	Kernel-5_35-4_79_2_207:4.2.10.4
	Kernel-5_35-4_79_2_206:4.2.10.4
	Kernel-5_35-4_79_2_205:4.2.10.4
	Kernel-5_35-4_79_2_204:4.2.10.4
	Kernel-5_35-4_79_2_203:4.2.10.4
	Kernel-5_35-4_79_2_202:4.2.10.4
	Kernel-5_35-4_79_2_201:4.2.10.4
	Kernel-5_35-4_79_2_200:4.2.10.4
	Kernel-5_35-4_79_2_199:4.2.10.4
	Kernel-5_35-4_79_2_198:4.2.10.4
	Kernel-5_35-4_79_2_197:4.2.10.4
	Kernel-5_35-4_79_2_196:4.2.10.4
	Kernel-5_35-4_79_2_195:4.2.10.4
	Kernel-5_35-4_79_2_194:4.2.10.4
	Kernel-5_35-4_79_2_193:4.2.10.4
	Kernel-5_35-4_79_2_192:4.2.10.4
	Kernel-5_35-4_79_2_191:4.2.10.4
	Kernel-5_35-4_79_2_190:4.2.10.4
	Kernel-5_35-4_79_2_189:4.2.10.4
	Kernel-5_35-4_79_2_188:4.2.10.4
	Kernel-5_35-4_79_2_187:4.2.10.4
	Kernel-5_35-4_79_2_186:4.2.10.4
	Kernel-5_35-4_79_2_185:4.2.10.4
	Kernel-5_35-4_79_2_184:4.2.10.4
	Kernel-5_35-4_79_2_183:4.2.10.4
	Kernel-5_35-4_79_2_182:4.2.10.4
	Kernel-5_35-4_79_2_181:4.2.10.4
	Kernel-5_35-4_79_2_180:4.2.10.4
	Kernel-5_35-4_79_2_179:4.2.10.4
	Kernel-5_35-4_79_2_178:4.2.10.4
	Kernel-5_35-4_79_2_177:4.2.10.3
	Kernel-5_35-4_79_2_176:4.2.10.3
	Kernel-5_35-4_79_2_175:4.2.10.3
	Kernel-5_35-4_79_2_174:4.2.10.3
	Kernel-5_35-4_79_2_173:4.2.10.3
	Kernel-5_35-4_79_2_172:4.2.10.3
	Kernel-5_35-4_79_2_171:4.2.10.3
	Kernel-5_35-4_79_2_170:4.2.10.3
	Kernel-5_35-4_79_2_169:4.2.10.3
	Kernel-5_35-4_79_2_168:4.2.10.3
	Kernel-5_35-4_79_2_167:4.2.10.3
	Kernel-5_35-4_79_2_166:4.2.10.3
	Kernel-5_35-4_79_2_165:4.2.10.3
	RPi_merge:4.2.10.3
	Kernel-5_35-4_79_2_147_2_23:4.2.10.3
	Kernel-5_35-4_79_2_147_2_22:4.2.10.3
	Kernel-5_35-4_79_2_147_2_21:4.2.10.3
	Kernel-5_35-4_79_2_147_2_20:4.2.10.3
	Kernel-5_35-4_79_2_147_2_19:4.2.10.3
	Kernel-5_35-4_79_2_147_2_18:4.2.10.3
	Kernel-5_35-4_79_2_164:4.2.10.3
	Kernel-5_35-4_79_2_163:4.2.10.3
	Kernel-5_35-4_79_2_147_2_17:4.2.10.3
	Kernel-5_35-4_79_2_147_2_16:4.2.10.3
	Kernel-5_35-4_79_2_147_2_15:4.2.10.3
	Kernel-5_35-4_79_2_162:4.2.10.3
	Kernel-5_35-4_79_2_161:4.2.10.3
	Kernel-5_35-4_79_2_147_2_14:4.2.10.3
	Kernel-5_35-4_79_2_147_2_13:4.2.10.3
	Kernel-5_35-4_79_2_160:4.2.10.3
	Kernel-5_35-4_79_2_159:4.2.10.3
	Kernel-5_35-4_79_2_158:4.2.10.3
	Kernel-5_35-4_79_2_157:4.2.10.3
	Kernel-5_35-4_79_2_156:4.2.10.3
	Kernel-5_35-4_79_2_147_2_12:4.2.10.3
	Kernel-5_35-4_79_2_147_2_11:4.2.10.3
	Kernel-5_35-4_79_2_155:4.2.10.3
	Kernel-5_35-4_79_2_147_2_10:4.2.10.3
	Kernel-5_35-4_79_2_154:4.2.10.3
	Kernel-5_35-4_79_2_153:4.2.10.3
	Kernel-5_35-4_79_2_147_2_9:4.2.10.3
	Kernel-5_35-4_79_2_152:4.2.10.3
	Kernel-5_35-4_79_2_151:4.2.10.3
	Kernel-5_35-4_79_2_147_2_8:4.2.10.3
	Kernel-5_35-4_79_2_147_2_7:4.2.10.3
	Kernel-5_35-4_79_2_150:4.2.10.3
	Kernel-5_35-4_79_2_147_2_6:4.2.10.3
	Kernel-5_35-4_79_2_147_2_5:4.2.10.3
	Kernel-5_35-4_79_2_149:4.2.10.3
	Kernel-5_35-4_79_2_147_2_4:4.2.10.3
	Kernel-5_35-4_79_2_147_2_3:4.2.10.3
	Kernel-5_35-4_79_2_148:4.2.10.3
	Kernel-5_35-4_79_2_147_2_2:4.2.10.3
	Kernel-5_35-4_79_2_147_2_1:4.2.10.3
	RPi:4.2.10.3.0.6
	RPi_bp:4.2.10.3
	Kernel-5_35-4_79_2_98_2_52_2_1:4.2.10.3
	alees_Kernel_dev:4.2.10.3.0.4
	alees_Kernel_dev_bp:4.2.10.3
	Kernel-5_35-4_79_2_147:4.2.10.3
	Kernel-5_35-4_79_2_146:4.2.10.3
	Kernel-5_35-4_79_2_145:4.2.10.3
	Kernel-5_35-4_79_2_144:4.2.10.3
	Kernel-5_35-4_79_2_143:4.2.10.3
	Kernel-5_35-4_79_2_142:4.2.10.3
	Kernel-5_35-4_79_2_141:4.2.10.3
	Kernel-5_35-4_79_2_140:4.2.10.3
	Kernel-5_35-4_79_2_139:4.2.10.3
	Kernel-5_35-4_79_2_138:4.2.10.3
	Kernel-5_35-4_79_2_137:4.2.10.3
	Kernel-5_35-4_79_2_136:4.2.10.3
	Kernel-5_35-4_79_2_135:4.2.10.3
	Kernel-5_35-4_79_2_134:4.2.10.3
	Kernel-5_35-4_79_2_133:4.2.10.3
	Kernel-5_35-4_79_2_132:4.2.10.3
	Kernel-5_35-4_79_2_131:4.2.10.3
	Kernel-5_35-4_79_2_130:4.2.10.3
	Kernel-5_35-4_79_2_129:4.2.10.3
	Kernel-5_35-4_79_2_128:4.2.10.3
	Kernel-5_35-4_79_2_127:4.2.10.3
	Kernel-5_35-4_79_2_126:4.2.10.3
	Kernel-5_35-4_79_2_125:4.2.10.3
	Kernel-5_35-4_79_2_124:4.2.10.3
	Kernel-5_35-4_79_2_123:4.2.10.3
	Cortex_merge:4.2.10.3
	Kernel-5_35-4_79_2_122:4.2.10.3
	Kernel-5_35-4_79_2_98_2_54:4.2.10.3
	Kernel-5_35-4_79_2_98_2_53:4.2.10.3
	Kernel-5_35-4_79_2_98_2_52:4.2.10.3
	Kernel-5_35-4_79_2_98_2_51:4.2.10.3
	Kernel-5_35-4_79_2_98_2_50:4.2.10.3
	Kernel-5_35-4_79_2_98_2_49:4.2.10.3
	Kernel-5_35-4_79_2_98_2_48:4.2.10.3
	Kernel-5_35-4_79_2_121:4.2.10.3
	Kernel-5_35-4_79_2_98_2_47:4.2.10.3
	Kernel-5_35-4_79_2_120:4.2.10.3
	Kernel-5_35-4_79_2_98_2_46:4.2.10.3
	Kernel-5_35-4_79_2_119:4.2.10.3
	Kernel-5_35-4_79_2_98_2_45:4.2.10.3
	Kernel-5_35-4_79_2_98_2_44:4.2.10.3
	Kernel-5_35-4_79_2_118:4.2.10.3
	Kernel-5_35-4_79_2_98_2_43:4.2.10.3
	Kernel-5_35-4_79_2_117:4.2.10.3
	Kernel-5_35-4_79_2_116:4.2.10.3
	Kernel-5_35-4_79_2_98_2_42:4.2.10.3
	Kernel-5_35-4_79_2_115:4.2.10.3
	Kernel-5_35-4_79_2_98_2_41:4.2.10.3
	Kernel-5_35-4_79_2_98_2_40:4.2.10.3
	Kernel-5_35-4_79_2_114:4.2.10.3
	Kernel-5_35-4_79_2_98_2_39:4.2.10.3
	Kernel-5_35-4_79_2_98_2_38:4.2.10.3
	Kernel-5_35-4_79_2_113:4.2.10.3
	Kernel-5_35-4_79_2_112:4.2.10.3
	Kernel-5_35-4_79_2_98_2_37:4.2.10.3
	Kernel-5_35-4_79_2_98_2_36:4.2.10.3
	Kernel-5_35-4_79_2_98_2_35:4.2.10.3
	Kernel-5_35-4_79_2_98_2_34:4.2.10.3
	Kernel-5_35-4_79_2_98_2_33:4.2.10.3
	Kernel-5_35-4_79_2_98_2_32:4.2.10.3
	Kernel-5_35-4_79_2_98_2_31:4.2.10.3
	Kernel-5_35-4_79_2_98_2_30:4.2.10.3
	Kernel-5_35-4_79_2_98_2_29:4.2.10.3
	Kernel-5_35-4_79_2_98_2_28:4.2.10.3
	Kernel-5_35-4_79_2_98_2_27:4.2.10.3
	Kernel-5_35-4_79_2_98_2_26:4.2.10.3
	Kernel-5_35-4_79_2_111:4.2.10.3
	Kernel-5_35-4_79_2_98_2_25:4.2.10.3
	Kernel-5_35-4_79_2_98_2_24:4.2.10.3
	Kernel-5_35-4_79_2_98_2_23:4.2.10.3
	Kernel-5_35-4_79_2_110:4.2.10.3
	Kernel-5_35-4_79_2_98_2_22:4.2.10.3
	Kernel-5_35-4_79_2_109:4.2.10.3
	Kernel-5_35-4_79_2_98_2_21:4.2.10.3
	Kernel-5_35-4_79_2_98_2_20:4.2.10.3
	Kernel-5_35-4_79_2_108:4.2.10.3
	Kernel-5_35-4_79_2_107:4.2.10.3
	Kernel-5_35-4_79_2_98_2_19:4.2.10.3
	Kernel-5_35-4_79_2_98_2_18:4.2.10.3
	Kernel-5_35-4_79_2_98_2_17:4.2.10.3
	Kernel-5_35-4_79_2_98_2_16:4.2.10.3
	Kernel-5_35-4_79_2_98_2_15:4.2.10.3
	Kernel-5_35-4_79_2_106:4.2.10.3
	Kernel-5_35-4_79_2_105:4.2.10.3
	Kernel-5_35-4_79_2_104:4.2.10.3
	Kernel-5_35-4_79_2_98_2_14:4.2.10.3
	Kernel-5_35-4_79_2_98_2_13:4.2.10.3
	Kernel-5_35-4_79_2_98_2_12:4.2.10.3
	Kernel-5_35-4_79_2_98_2_11:4.2.10.3
	Kernel-5_35-4_79_2_98_2_10:4.2.10.3
	Kernel-5_35-4_79_2_98_2_9:4.2.10.3
	Kernel-5_35-4_79_2_103:4.2.10.3
	Kernel-5_35-4_79_2_102:4.2.10.3
	Kernel-5_35-4_79_2_98_2_8:4.2.10.3
	Kernel-5_35-4_79_2_98_2_7:4.2.10.3
	Kernel-5_35-4_79_2_98_2_6:4.2.10.3
	Kernel-5_35-4_79_2_98_2_5:4.2.10.3
	Kernel-5_35-4_79_2_98_2_4:4.2.10.3
	Kernel-5_35-4_79_2_101:4.2.10.3
	Kernel-5_35-4_79_2_100:4.2.10.3
	Kernel-5_35-4_79_2_99:4.2.10.3
	Kernel-5_35-4_79_2_98_2_3:4.2.10.3
	Kernel-5_35-4_79_2_98_2_2:4.2.10.3
	Kernel-5_35-4_79_2_98_2_1:4.2.10.3
	Cortex:4.2.10.3.0.2
	Cortex_bp:4.2.10.3
	Kernel-5_35-4_79_2_98:4.2.10.3
	Kernel-5_35-4_79_2_97:4.2.10.3
	Kernel-5_35-4_79_2_96:4.2.10.3
	Kernel-5_35-4_79_2_95:4.2.10.3
	Kernel-5_35-4_79_2_94:4.2.10.3
	Kernel-5_35-4_79_2_93:4.2.10.3
	Kernel-5_35-4_79_2_92:4.2.10.3
	Kernel-5_35-4_79_2_91:4.2.10.3
	Kernel-5_35-4_79_2_90:4.2.10.3
	Kernel-5_35-4_79_2_89:4.2.10.3
	Kernel-5_35-4_79_2_88:4.2.10.3
	Kernel-5_35-4_79_2_87:4.2.10.3
	Kernel-5_35-4_79_2_86:4.2.10.3
	Kernel-5_35-4_79_2_85:4.2.10.3
	Kernel-5_35-4_79_2_84:4.2.10.3
	Kernel-5_35-4_79_2_83:4.2.10.3
	Kernel-5_35-4_79_2_82:4.2.10.3
	Kernel-5_35-4_79_2_81:4.2.10.3
	Kernel-5_35-4_79_2_80:4.2.10.3
	Kernel-5_35-4_79_2_79:4.2.10.3
	Kernel-5_35-4_79_2_78:4.2.10.3
	Kernel-5_35-4_79_2_77:4.2.10.3
	RO_5_07:4.2.10.3
	Kernel-5_35-4_79_2_76:4.2.10.3
	Kernel-5_35-4_79_2_75:4.2.10.3
	Kernel-5_35-4_79_2_74:4.2.10.3
	Kernel-5_35-4_79_2_73:4.2.10.3
	Kernel-5_35-4_79_2_72:4.2.10.3
	Kernel-5_35-4_79_2_71:4.2.10.3
	Kernel-5_35-4_79_2_70:4.2.10.3
	Kernel-5_35-4_79_2_69:4.2.10.3
	Kernel-5_35-4_79_2_68:4.2.10.3
	Kernel-5_35-4_79_2_67:4.2.10.3
	Kernel-5_35-4_79_2_66:4.2.10.3
	Kernel-5_35-4_79_2_65:4.2.10.2
	Kernel-5_35-4_79_2_64:4.2.10.2
	Kernel-5_35-4_79_2_63:4.2.10.2
	Kernel-5_35-4_79_2_62:4.2.10.2
	Kernel-5_35-4_79_2_61:4.2.10.2
	Kernel-5_35-4_79_2_59:4.2.10.2
	Kernel-5_35-4_79_2_58:4.2.10.2
	Kernel-5_35-4_79_2_57:4.2.10.2
	Kernel-5_35-4_79_2_56:4.2.10.2
	Kernel-5_35-4_79_2_55:4.2.10.2
	Kernel-5_35-4_79_2_54:4.2.10.2
	Kernel-5_35-4_79_2_53:4.2.10.2
	Kernel-5_35-4_79_2_52:4.2.10.2
	Kernel-5_35-4_79_2_51:4.2.10.2
	Kernel-5_35-4_79_2_50:4.2.10.2
	Kernel-5_35-4_79_2_49:4.2.10.2
	Kernel-5_35-4_79_2_48:4.2.10.2
	Kernel-5_47:4.2
	Kernel-5_46-4_90_2_1:4.2
	nbingham_Kernel_FastNC_dev_bp:4.2
	nbingham_Kernel_FastNC_dev:4.2.0.14
	Kernel-5_46:4.2
	Kernel-5_45:4.2
	Kernel-5_35-4_79_2_47:4.2.10.2
	Kernel-5_35-4_79_2_46:4.2.10.2
	Kernel-5_35-4_79_2_45:4.2.10.2
	Kernel-5_35-4_79_2_44:4.2.10.2
	Kernel-5_35-4_79_2_25_2_2:4.2.10.1
	Kernel-5_35-4_79_2_43:4.2.10.2
	Kernel-5_35-4_79_2_42:4.2.10.2
	Kernel-5_35-4_79_2_41:4.2.10.2
	Kernel-5_35-4_79_2_40:4.2.10.2
	Kernel-5_35-4_79_2_39:4.2.10.2
	Kernel-5_35-4_79_2_38:4.2.10.2
	Kernel-5_35-4_79_2_37:4.2.10.2
	Kernel-5_35-4_79_2_36:4.2.10.2
	Kernel-5_35-4_79_2_35:4.2.10.2
	Kernel-5_35-4_79_2_34:4.2.10.2
	Kernel-5_35-4_79_2_33:4.2.10.2
	Kernel-5_35-4_79_2_32:4.2.10.1
	Kernel-5_44:4.2
	Kernel-5_35-4_79_2_25_2_1:4.2.10.1
	Kernel-5_43:4.2
	Kernel-5_35-4_79_2_31:4.2.10.1
	Kernel-5_35-4_79_2_30:4.2.10.1
	Kernel-5_35-4_79_2_29:4.2.10.1
	Kernel-5_35-4_79_2_28:4.2.10.1
	Kernel-5_35-4_79_2_27:4.2.10.1
	Kernel-5_35-4_79_2_26:4.2.10.1
	Kernel-5_42:4.2
	Kernel-5_41:4.2
	Kernel-5_40:4.2
	Kernel-5_35-4_79_2_25:4.2.10.1
	Kernel-5_35-4_79_2_24:4.2.10.1
	Kernel-5_35-4_79_2_23:4.2.10.1
	Kernel-5_35-4_79_2_22:4.2.10.1
	Kernel-5_35-4_79_2_21:4.2.10.1
	Kernel-5_35-4_79_2_20:4.2.10.1
	Kernel-5_35-4_79_2_19:4.2.10.1
	Kernel-5_35-4_79_2_18:4.2.10.1
	Kernel-5_35-4_79_2_17:4.2.10.1
	Kernel-5_35-4_79_2_16:4.2.10.1
	Kernel-5_35-4_79_2_15:4.2.10.1
	Kernel-5_35-4_79_2_14:4.2.10.1
	Kernel-5_39:4.2
	Kernel-5_13-4_52_2_1:4.2
	Bethany:4.2.0.12
	Kernel-5_38:4.2
	Kernel-5_35-4_79_2_13:4.2.10.1
	Kernel-5_35-4_79_2_12:4.2.10.1
	Kernel-5_35-4_79_2_11:4.2.10.1
	Kernel-5_37:4.2
	Kernel-5_35-4_79_2_10:4.2.10.1
	Kernel-5_35-4_79_2_9:4.2.10.1
	Kernel-5_36:4.2
	Kernel-5_35-4_79_2_8:4.2.10.1
	Kernel-5_35-4_79_2_7:4.2.10.1
	Kernel-5_35-4_79_2_6:4.2.10.1
	Kernel-5_35-4_79_2_5:4.2.10.1
	Kernel-5_35-4_79_2_4:4.2.10.1
	Kernel-5_35-4_79_2_3:4.2.10.1
	Kernel-5_35-4_79_2_2:4.2.10.1
	dellis_autobuild_BaseSW:4.2
	Kernel-5_35-4_79_2_1:4.2.10.1
	HAL:4.2.0.10
	Kernel-5_35:4.2
	Kernel-5_34:4.2
	Kernel-5_33:4.2
	Kernel-5_32:4.2
	Kernel-5_31:4.2
	Kernel-5_30:4.2
	Kernel-5_29:4.2
	Kernel-5_28:4.2
	Kernel-5_27:4.2
	Kernel-5_26:4.2
	Kernel-5_25:4.2
	Kernel-5_24:4.2
	Kernel-5_23:4.2
	Kernel-5_22:4.2
	sbrodie_sedwards_16Mar2000:4.2
	Kernel-5_21:4.2
	Kernel-5_20:4.2
	Kernel-5_19:4.2
	Kernel-5_18:4.2
	Kernel-5_17:4.2
	Kernel-5_16:4.2
	Kernel-5_15:4.2
	Kernel-5_14:4.2
	Kernel-5_13:4.2
	Kernel-5_12:4.2
	Kernel-5_11:4.2
	Kernel-5_10:4.2
	Kernel-5_09:4.2
	Kernel-5_08:4.2
	Kernel-5_07:4.2
	Kernel-5_06:4.2
	Kernel-5_05:4.2
	Kernel-5_04:4.2
	Kernel-5_03:4.2
	Kernel-5_02:4.2
	Kernel-5_01:4.2
	Kernel-5_00:4.2
	Kernel-4_99:4.2
	Kernel-4_98:4.2
	Kernel-4_97:4.2
	Kernel-4_96:4.2
	Kernel-4_95:4.2
	Kernel-4_94:4.2
	Kernel-4_93:4.2
	Kernel-4_92:4.2
	Kernel-4_91:4.2
	Kernel-4_90:4.2
	dcotton_autobuild_BaseSW:4.2
	Kernel-4_89:4.2
	Kernel-4_88:4.2
	Kernel-4_87:4.2
	Kernel-4_86:4.2
	Kernel-4_85:4.2
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.2
	Kernel-4_84:4.2
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.2
	Ursula_RiscPC_bp:4.2
	Kernel-4_83:4.2
	Kernel-4_82:4.2
	Kernel-4_81:4.2
	Kernel-4_80:4.2
	Kernel-4_79:4.2
	Kernel-4_78:4.2
	Kernel-4_77:4.2
	Kernel-4_76:4.2
	Kernel-4_75:4.2
	Kernel-4_74:4.2
	Kernel-4_73:4.2
	Kernel-4_72:4.2
	Kernel-4_71:4.2
	Kernel-4_70:4.2
	Kernel-4_69:4.2
	Kernel-4_68:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	Kernel-4_63-1_1_2_5:4.1.7.1
	Kernel-4_63-1_1_2_4:4.1.7.1
	Kernel-4_67:4.2
	Kernel-4_66:4.2
	Kernel-4_63-1_1_2_3:4.1.7.1
	Kernel-4_65:4.2
	Ursula_merge:4.2
	Kernel-4_64:4.2
	mstphens_Kernel-3_81:4.2
	Kernel-4_63-1_1_2_2:4.1.7.1
	nicke_Kernel_4_62:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	nturton_v459:4.1.7.1
	nturton_v460:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	mstphens_Kernel-3_80:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	afrost_Boca-1_2-Beta:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.2
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2016.06.30.20.42.02;	author jlee;	state Exp;
branches;
next	4.3;
commitid	bDF3DCxdmyMD0xcz;

4.3
date	2016.06.30.20.07.59;	author jlee;	state Exp;
branches;
next	4.2;
commitid	IWoXxARWeuLDOwcz;

4.2
date	97.01.21.14.06.45;	author nturton;	state Exp;
branches
	4.2.10.1;
next	4.1;

4.1
date	96.11.05.09.40.48;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.10.1
date	2000.09.15.12.38.00;	author kbracey;	state Exp;
branches;
next	4.2.10.2;

4.2.10.2
date	2001.06.11.11.33.30;	author kbracey;	state Exp;
branches;
next	4.2.10.3;

4.2.10.3
date	2004.05.06.16.01.59;	author kbracey;	state Exp;
branches;
next	4.2.10.4;

4.2.10.4
date	2012.12.05.01.16.16;	author jlee;	state Exp;
branches;
next	;
commitid	jNXy5BkvBl5srYuw;

4.1.1.1
date	96.11.05.09.40.48;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.58.26;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.09.11;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.02.32;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Delete STB code
Detail:
  This change gets rid of the following switches from the source (picking appropriate code paths for a desktop build):
  * STB
  * RO371Timings
  * NormalSpeedROMS
  * AutoSpeedROMS
  * RISCPCBurstMode
  * InterlacedPointer
  * ParallelFlashUpgrade (and s/FlashROM file)
  * Embedded_UI
  Some of the deleted code might be worth revisiting in future:
  * OS_ReadSysInfo 4 support for storing the MAC in alternate CMOS locations (including 2nd copy for error checking) or fetching via Service_MachineAddress
  * Mouse handling changes, possibly aimed at hiding the mouse pointer if a mouse isn't connected
  * More strict CMOS validation in s/NewReset
Admin:
  Identical binary to previous revision for IOMD & Raspberry Pi builds


Version 5.50. Tagged as 'Kernel-5_50'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > $.Hdr.KeyWS

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************

; Date       Name  Description
; ----       ----  -----------
; 06-Feb-91  TMD   Added LastLED
; 09-Mar-92  TMD   Added JustGotKbID
; 24-Feb-93  SMC   Reorganised for new keyboard/mouse interfaces
; 19-Jul-93  JSR   Changed conditional from A1Keyboard to Keyboard_Type = "A1A500"

; Keyboard variables

          GBLS  keyprefix
keyprefix SETS  "Key$"

        ^       0, R11

CurrKey         #       4               ; current key in two key rollover
OldKey          #       4               ; old key in two key rollover
KbId            #       1
LastKbId        #       1
AutoRepeatCount #       1
Debouncing      #       1               ; NZ => do delay next, Z => do repeat
MouseButtons    #       1               ; bit0=R, bit1=C, bit2=L
PendingAltType  #       1               ; 1 => A, 2 => SA, 3 => CA, 4 => CSA
LastLED         #       1               ; last request for LED change, so we don't send repeated ones
MouseType       #       1               ; current pointer device type
MouseReporting  #       1               ; mouse is sending reports itself
NoDebounce      #       1               ; NZ => no kernel key debounce
                                        ; set if R2="NoKd" on KeyV 0 entry

                # 3 :AND: (- :INDEX: @@)

InkeyCounter    #       4
MouseX          #       4
MouseY          #       4
SoftKeyPtr      #       4
MouseXMult      #       4
MouseYMult      #       4
KeyVec          #       4


MouseBounds     #       16
MouseBoundLCol  *       MouseBounds+0
MouseBoundBRow  *       MouseBounds+4
MouseBoundRCol  *       MouseBounds+8
MouseBoundTRow  *       MouseBounds+12

KeysDown        #       &300/8          ; bitmap of all down keys

SoftKeyName     #       3 + :LEN:(keyprefix)    ; up to 2 digits + terminator

SoftKeyExpand   #       255             ; current key expansion

        ASSERT  (:INDEX: @@) < KeyWorkSpaceSize
UserKeyWorkSpaceSize *  KeyWorkSpaceSize-(:INDEX: @@)
UserKeyWorkSpace #      UserKeyWorkSpaceSize


; PMF -> VDU communication stuff put in here because both VDU and PMF
; 'GET' this file

;        GBLA    ExtEntries
;ExtEntries SETA 0
;
;        MACRO
;        AddExtEntry $EntryName
;Index_$EntryName * ExtEntries
;Value_$ExtEntries * $EntryName
;ExtEntries SETA ExtEntries +1
;        MEND
;
;        MACRO
;$Table  OutputExternals
;$Table
;        LCLA    count
;count   SETA    0
;        WHILE   count < ExtEntries
;        &       Value_$count - $Table -4
;count   SETA    count + 1
;        WEND
;        MEND

        MACRO
        ByteToNosbod $EntryName
        VDWS    WsPtr
        BL      $EntryName
        MEND

;        AddExtEntry     DoReadPOSVPOSI
;        AddExtEntry     DoReadPOSVPOSO
;        AddExtEntry     DoOSBYTE87
;        AddExtEntry     DoResetFont
;        AddExtEntry     DoReadFont
;        AddExtEntry     DoReadVDUStatus
;        AddExtEntry     DoReadVDUVariable
;        AddExtEntry     DoReadPalette
;        AddExtEntry     DoSetPalette
;        AddExtEntry     DoPointerStuff
;        AddExtEntry     DoSetScreenStart
;        AddExtEntry     DoSetDriverBank
;        AddExtEntry     DoSetDisplayBank
;        AddExtEntry     DoOsbyte163_242
;        AddExtEntry     DoOsWord13

        END
@


4.3
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@a44 3
 [ STB
MousePresent    #       1               ; mouse detected
 ]
@


4.2
log
@Kernel merged
@
text
@d35 2
a36 2
CurrKey         #       1               ; current key in two key rollover
OldKey          #       1               ; old key in two key rollover
a42 2
ModulesOK       #       1               ; bit0=1 => modules are initialised
                                        ; bit1=1 => we have offered service
d45 1
a46 14

 [ Keyboard_Type = "A1A500"
JustGotKbId     #       1
RequestMouse    #       1
RequestLED      #       1
RequestSPD      #       1
RequestKbId     #       1
SPDRec          #       1               ; number to be received
ResetState      #       1               ; next thing to go in reset handshake
KeyRow          #       1               ; half received key up or down
Reply           #       1               ; next reply to be sent (&FF if nowt)
KbIdHalf        #       1
MouseCount      #       1               ; 0 => X next, 1 => Y next
MouseDelta      #       2               ; delta X,Y
d48 3
a61 8
 [ Keyboard_Type = "A1A500"
SPDinput        #       4
SPDoutput       #       4
  [ AssemblePointerV
MouseXCount     #       4
MouseYCount     #       4
  ]
 ]
d69 1
a69 1
KeysDown        #       20              ; bitmap of all down keys
d83 20
a102 26
        GBLA    ExtEntries
ExtEntries SETA 0

        MACRO
        AddExtEntry $EntryName
Index_$EntryName * ExtEntries
        [ AssemblingArthur
Value_$ExtEntries * $EntryName
        |
        [ DoingVdu
Value_$ExtEntries * $EntryName
        ]
        ]
ExtEntries SETA ExtEntries +1
        MEND

        MACRO
$Table  OutputExternals
$Table
        LCLA    count
count   SETA    0
        WHILE   count < ExtEntries
        &       Value_$count - $Table -4
count   SETA    count + 1
        WEND
        MEND
a105 1
        [ AssemblingArthur
a107 4
        |
        MOV     R0, #Index_$EntryName
        BL      ByteToNosbod
        ]
d110 15
a124 15
        AddExtEntry     DoReadPOSVPOSI
        AddExtEntry     DoReadPOSVPOSO
        AddExtEntry     DoOSBYTE87
        AddExtEntry     DoResetFont
        AddExtEntry     DoReadFont
        AddExtEntry     DoReadVDUStatus
        AddExtEntry     DoReadVDUVariable
        AddExtEntry     DoReadPalette
        AddExtEntry     DoSetPalette
        AddExtEntry     DoPointerStuff
        AddExtEntry     DoSetScreenStart
        AddExtEntry     DoSetDriverBank
        AddExtEntry     DoSetDisplayBank
        AddExtEntry     DoOsbyte163_242
        AddExtEntry     DoOsWord13
@


4.2.10.1
log
@* Converted to building with ObjAsm (but still a single object file using ORG).
* Added ARM_IMB and ARM_IMBRange SWIs as recommended by ARMv5.
* Some early prototype HAL bits popped in - a lot of source restructuring still
  to come.
* New debug target creates an AIF image with debug information, and translates
  this into an ASCII object file for the 16702B logic analyser.

Version 5.35, 4.79.2.1. Tagged as 'Kernel-5_35-4_79_2_1'
@
text
@d49 14
d74 8
d103 26
a128 20
;        GBLA    ExtEntries
;ExtEntries SETA 0
;
;        MACRO
;        AddExtEntry $EntryName
;Index_$EntryName * ExtEntries
;Value_$ExtEntries * $EntryName
;ExtEntries SETA ExtEntries +1
;        MEND
;
;        MACRO
;$Table  OutputExternals
;$Table
;        LCLA    count
;count   SETA    0
;        WHILE   count < ExtEntries
;        &       Value_$count - $Table -4
;count   SETA    count + 1
;        WEND
;        MEND
d132 1
d135 4
d141 15
a155 15
;        AddExtEntry     DoReadPOSVPOSI
;        AddExtEntry     DoReadPOSVPOSO
;        AddExtEntry     DoOSBYTE87
;        AddExtEntry     DoResetFont
;        AddExtEntry     DoReadFont
;        AddExtEntry     DoReadVDUStatus
;        AddExtEntry     DoReadVDUVariable
;        AddExtEntry     DoReadPalette
;        AddExtEntry     DoSetPalette
;        AddExtEntry     DoPointerStuff
;        AddExtEntry     DoSetScreenStart
;        AddExtEntry     DoSetDriverBank
;        AddExtEntry     DoSetDisplayBank
;        AddExtEntry     DoOsbyte163_242
;        AddExtEntry     DoOsWord13
@


4.2.10.2
log
@* Allows interrupt-driven use of PointerV (as well as polled).
* Allows HAL-driven software resets.
* Sound buffers corrected to be uncacheable.

Version 5.35, 4.79.2.33. Tagged as 'Kernel-5_35-4_79_2_33'
@
text
@a47 1
MouseReporting  #       1               ; mouse is sending reports itself
@


4.2.10.3
log
@* HAL can choose to limit amount of screen memory to allocate
  [Not fully implemented - for now leaves at least 16MB free if only
  one RAM area; was 1MB].
* Added HAL_USBControllerInfo, HAL_MonitorLeadID and HAL_Video_Render.
* Added HAL->OS call OS_IICOpV.
* OS_MMUControl now allows independent control of I and C bits.
* Added facility to deactivate keyboard debounce (magic word "NoKd" in
  R2 in KeyV 0).
* Fixed problem with RAM amounts not a multiple of 4MB.
* Supremacy bit (in VDU 19) now sets all 8 bits of supremacy.
* Added PaletteV 14 (reads gamma tables).
* Added Supremacy transfer functions (like gamma correction, but for
  supremacy). Allows easy global supremacy effects in a mode-independent
  fashion. Controlled with PaletteV 15,16.
* Added modes 50-53 (320x240, 1,2,4,8bpp). Intended for small LCD.
* Added 13.5kHz versions of TV modes (selected by Hdr:Machine).
* Upped desktop version to 5.06.

Version 5.35, 4.79.2.66. Tagged as 'Kernel-5_35-4_79_2_66'
@
text
@d49 1
a49 2
NoDebounce      #       1               ; NZ => no kernel key debounce
                                        ; set if R2="NoKd" on KeyV 0 entry
@


4.2.10.4
log
@Add support for new extended internal key codes, low level key codes, and key handler format
Detail:
  s/Middle - Added OS_ReadSysInfo 13 to allow the kernel to validate a key handler before the owner attempts to install it
  Resources/UK/Messages - Text for new "Bad key handler" error
  s/GetAll, s/PMF/Def - Get rid of now obsolete s/PMF/Def file. It only contained definitions for pre-HAL hardware, and for the key handler layout (now in Hdr:Keyboard)
  hdr/KeyWS - Increased size of KeysDown array so it can hold 768 keys instead of 160. Trim a couple of obsolete variables, and increase CurrKey/OldKey from 1 byte to 4 bytes.
  s/PMF/key, s/PMF/osbyte - Main bulk of the changes for the new key handling. All the important interfaces are now able to deal with extended (i.e. > 8 bit) internal key numbers, and the kernel is able to cope with key handlers which use 16 bit internal/low level key numbers instead of 8 bit.
Admin:
  Tested on Pandora & BB-xM
  Requires HdrSrc-2_20


Version 5.35, 4.79.2.178. Tagged as 'Kernel-5_35-4_79_2_178'
@
text
@d35 2
a36 2
CurrKey         #       4               ; current key in two key rollover
OldKey          #       4               ; old key in two key rollover
d43 2
a46 1
 [ STB
a47 1
 ]
d69 1
a69 1
KeysDown        #       &300/8          ; bitmap of all down keys
@


4.1
log
@Initial revision
@
text
@d47 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a46 1
MousePresent    #       1               ; mouse detected
@


4.1.5.1
log
@Import from SrcFiler
@
text
@a46 1
MousePresent    #       1               ; mouse detected
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
