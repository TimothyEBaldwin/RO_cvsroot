head	1.6;
access;
symbols
	Kernel-6_15:1.6
	Kernel-6_14:1.6
	Kernel-6_01-3:1.5
	Kernel-6_13:1.6
	Kernel-6_12:1.6
	Kernel-6_11:1.6
	Kernel-6_10:1.6
	Kernel-6_09:1.6
	Kernel-6_08-4_129_2_10:1.3.2.2
	Kernel-6_08-4_129_2_9:1.3.2.2
	Kernel-6_08:1.6
	Kernel-6_07:1.6
	Kernel-6_06:1.6
	Kernel-6_05-4_129_2_8:1.3.2.2
	Kernel-6_05:1.6
	Kernel-6_04:1.6
	Kernel-6_03:1.6
	Kernel-6_01-2:1.5
	Kernel-6_01-4_146_2_1:1.5
	Kernel-6_02:1.5
	Kernel-6_01-1:1.5
	Kernel-6_01:1.5
	Kernel-6_00:1.4
	Kernel-5_99:1.4
	Kernel-5_98:1.4
	Kernel-5_97-4_129_2_7:1.3.2.1
	Kernel-5_97:1.4
	Kernel-5_96:1.4
	Kernel-5_95:1.4
	Kernel-5_94:1.4
	Kernel-5_93:1.4
	Kernel-5_92:1.4
	Kernel-5_91:1.4
	Kernel-5_90:1.4
	Kernel-5_89-4_129_2_6:1.3.2.1
	Kernel-5_89:1.4
	Kernel-5_88-4_129_2_5:1.3.2.1
	Kernel-5_88-4_129_2_4:1.3.2.1
	Kernel-5_88:1.4
	Kernel-5_87:1.3
	Kernel-5_86-4_129_2_3:1.3
	Kernel-5_86-4_129_2_2:1.3
	Kernel-5_86-4_129_2_1:1.3
	Kernel-5_86:1.3
	SMP:1.3.0.2
	SMP_bp:1.3
	Kernel-5_85:1.3
	Kernel-5_54-1:1.3
	Kernel-5_84:1.3
	Kernel-5_83:1.3
	Kernel-5_82:1.3
	Kernel-5_81:1.3
	Kernel-5_80:1.2
	Kernel-5_79:1.2
	Kernel-5_78:1.2
	Kernel-5_77:1.2
	Kernel-5_76:1.2
	Kernel-5_75:1.2
	Kernel-5_74:1.2
	Kernel-5_73:1.2
	Kernel-5_72:1.2
	Kernel-5_71:1.2
	Kernel-5_70:1.2
	Kernel-5_69:1.2
	Kernel-5_68:1.2
	Kernel-5_67:1.2
	Kernel-5_66:1.2
	Kernel-5_65:1.2
	Kernel-5_64:1.2
	Kernel-5_63:1.2
	Kernel-5_62:1.2
	Kernel-5_61:1.2
	Kernel-5_60:1.2
	Kernel-5_59:1.2
	Kernel-5_58:1.2
	Kernel-5_57:1.2
	Kernel-5_56:1.2
	Kernel-5_55:1.2
	Kernel-5_54:1.2
	Kernel-5_53:1.2
	Kernel-5_52:1.2
	Kernel-5_51:1.2
	Kernel-5_50:1.2
	Kernel-5_49:1.2
	HAL_merge:1.1.10.4
	Kernel-5_48:1.2
	Kernel-5_35-4_79_2_327:1.1.10.4
	Kernel-5_35-4_79_2_326:1.1.10.4
	Kernel-5_35-4_79_2_325:1.1.10.4
	Kernel-5_35-4_79_2_324:1.1.10.4
	Kernel-5_35-4_79_2_323:1.1.10.4
	Kernel-5_35-4_79_2_322:1.1.10.4
	Kernel-5_35-4_79_2_321:1.1.10.4
	Kernel-5_35-4_79_2_320:1.1.10.4
	Kernel-5_35-4_79_2_319:1.1.10.4
	Kernel-5_35-4_79_2_318:1.1.10.4
	Kernel-5_35-4_79_2_317:1.1.10.4
	Kernel-5_35-4_79_2_316:1.1.10.4
	Kernel-5_35-4_79_2_315:1.1.10.4
	Kernel-5_35-4_79_2_314:1.1.10.4
	Kernel-5_35-4_79_2_313:1.1.10.4
	Kernel-5_35-4_79_2_312:1.1.10.4
	Kernel-5_35-4_79_2_311:1.1.10.3
	Kernel-5_35-4_79_2_310:1.1.10.3
	Kernel-5_35-4_79_2_309:1.1.10.3
	Kernel-5_35-4_79_2_308:1.1.10.3
	Kernel-5_35-4_79_2_307:1.1.10.3
	Kernel-5_35-4_79_2_306:1.1.10.3
	Kernel-5_35-4_79_2_305:1.1.10.3
	Kernel-5_35-4_79_2_304:1.1.10.3
	Kernel-5_35-4_79_2_303:1.1.10.3
	Kernel-5_35-4_79_2_302:1.1.10.3
	Kernel-5_35-4_79_2_301:1.1.10.3
	Kernel-5_35-4_79_2_300:1.1.10.3
	Kernel-5_35-4_79_2_299:1.1.10.3
	Kernel-5_35-4_79_2_298:1.1.10.3
	Kernel-5_35-4_79_2_297:1.1.10.3
	Kernel-5_35-4_79_2_296:1.1.10.3
	Kernel-5_35-4_79_2_295:1.1.10.3
	Kernel-5_35-4_79_2_294:1.1.10.3
	Kernel-5_35-4_79_2_293:1.1.10.3
	Kernel-5_35-4_79_2_292:1.1.10.3
	Kernel-5_35-4_79_2_291:1.1.10.3
	Kernel-5_35-4_79_2_290:1.1.10.3
	Kernel-5_35-4_79_2_289:1.1.10.3
	Kernel-5_35-4_79_2_288:1.1.10.3
	Kernel-5_35-4_79_2_287:1.1.10.3
	Kernel-5_35-4_79_2_286:1.1.10.3
	Kernel-5_35-4_79_2_285:1.1.10.3
	Kernel-5_35-4_79_2_284:1.1.10.3
	Kernel-5_35-4_79_2_283:1.1.10.3
	Kernel-5_35-4_79_2_282:1.1.10.3
	Kernel-5_35-4_79_2_281:1.1.10.3
	Kernel-5_35-4_79_2_280:1.1.10.3
	Kernel-5_35-4_79_2_279:1.1.10.3
	Kernel-5_35-4_79_2_278:1.1.10.3
	Kernel-5_35-4_79_2_277:1.1.10.3
	Kernel-5_35-4_79_2_276:1.1.10.3
	Kernel-5_35-4_79_2_275:1.1.10.3
	Kernel-5_35-4_79_2_274:1.1.10.3
	Kernel-5_35-4_79_2_273:1.1.10.3
	Kernel-5_35-4_79_2_272:1.1.10.3
	Kernel-5_35-4_79_2_271:1.1.10.3
	Kernel-5_35-4_79_2_270:1.1.10.3
	Kernel-5_35-4_79_2_269:1.1.10.3
	Kernel-5_35-4_79_2_268:1.1.10.3
	Kernel-5_35-4_79_2_267:1.1.10.3
	Kernel-5_35-4_79_2_266:1.1.10.3
	Kernel-5_35-4_79_2_265:1.1.10.3
	Kernel-5_35-4_79_2_264:1.1.10.3
	Kernel-5_35-4_79_2_263:1.1.10.3
	Kernel-5_35-4_79_2_262:1.1.10.3
	Kernel-5_35-4_79_2_261:1.1.10.3
	Kernel-5_35-4_79_2_260:1.1.10.3
	Kernel-5_35-4_79_2_259:1.1.10.3
	Kernel-5_35-4_79_2_258:1.1.10.3
	Kernel-5_35-4_79_2_257:1.1.10.3
	Kernel-5_35-4_79_2_256:1.1.10.3
	Kernel-5_35-4_79_2_255:1.1.10.3
	Kernel-5_35-4_79_2_254:1.1.10.3
	Kernel-5_35-4_79_2_253:1.1.10.3
	Kernel-5_35-4_79_2_252:1.1.10.3
	Kernel-5_35-4_79_2_251:1.1.10.3
	Kernel-5_35-4_79_2_250:1.1.10.3
	Kernel-5_35-4_79_2_249:1.1.10.3
	Kernel-5_35-4_79_2_248:1.1.10.3
	Kernel-5_35-4_79_2_247:1.1.10.3
	Kernel-5_35-4_79_2_246:1.1.10.3
	Kernel-5_35-4_79_2_245:1.1.10.3
	Kernel-5_35-4_79_2_244:1.1.10.3
	Kernel-5_35-4_79_2_243:1.1.10.3
	Kernel-5_35-4_79_2_242:1.1.10.3
	Kernel-5_35-4_79_2_241:1.1.10.3
	Kernel-5_35-4_79_2_240:1.1.10.3
	Kernel-5_35-4_79_2_239:1.1.10.3
	Kernel-5_35-4_79_2_238:1.1.10.3
	Kernel-5_35-4_79_2_237:1.1.10.3
	Kernel-5_35-4_79_2_236:1.1.10.3
	Kernel-5_35-4_79_2_235:1.1.10.3
	Kernel-5_35-4_79_2_234:1.1.10.3
	Kernel-5_35-4_79_2_233:1.1.10.3
	Kernel-5_35-4_79_2_232:1.1.10.3
	Kernel-5_35-4_79_2_231:1.1.10.3
	Kernel-5_35-4_79_2_230:1.1.10.3
	Kernel-5_35-4_79_2_229:1.1.10.3
	Kernel-5_35-4_79_2_228:1.1.10.3
	Kernel-5_35-4_79_2_227:1.1.10.3
	Kernel-5_35-4_79_2_226:1.1.10.3
	Kernel-5_35-4_79_2_225:1.1.10.3
	Kernel-5_35-4_79_2_224:1.1.10.3
	Kernel-5_35-4_79_2_223:1.1.10.3
	Kernel-5_35-4_79_2_222:1.1.10.3
	Kernel-5_35-4_79_2_221:1.1.10.3
	Kernel-5_35-4_79_2_220:1.1.10.3
	Kernel-5_35-4_79_2_219:1.1.10.3
	Kernel-5_35-4_79_2_218:1.1.10.3
	Kernel-5_35-4_79_2_217:1.1.10.3
	Kernel-5_35-4_79_2_216:1.1.10.3
	Kernel-5_35-4_79_2_215:1.1.10.3
	Kernel-5_35-4_79_2_214:1.1.10.3
	Kernel-5_35-4_79_2_213:1.1.10.3
	Kernel-5_35-4_79_2_212:1.1.10.3
	Kernel-5_35-4_79_2_211:1.1.10.3
	Kernel-5_35-4_79_2_210:1.1.10.3
	Kernel-5_35-4_79_2_209:1.1.10.3
	Kernel-5_35-4_79_2_208:1.1.10.3
	Kernel-5_35-4_79_2_207:1.1.10.3
	Kernel-5_35-4_79_2_206:1.1.10.3
	Kernel-5_35-4_79_2_205:1.1.10.3
	Kernel-5_35-4_79_2_204:1.1.10.3
	Kernel-5_35-4_79_2_203:1.1.10.3
	Kernel-5_35-4_79_2_202:1.1.10.3
	Kernel-5_35-4_79_2_201:1.1.10.3
	Kernel-5_35-4_79_2_200:1.1.10.3
	Kernel-5_35-4_79_2_199:1.1.10.3
	Kernel-5_35-4_79_2_198:1.1.10.3
	Kernel-5_35-4_79_2_197:1.1.10.3
	Kernel-5_35-4_79_2_196:1.1.10.3
	Kernel-5_35-4_79_2_195:1.1.10.3
	Kernel-5_35-4_79_2_194:1.1.10.3
	Kernel-5_35-4_79_2_193:1.1.10.3
	Kernel-5_35-4_79_2_192:1.1.10.3
	Kernel-5_35-4_79_2_191:1.1.10.3
	Kernel-5_35-4_79_2_190:1.1.10.3
	Kernel-5_35-4_79_2_189:1.1.10.3
	Kernel-5_35-4_79_2_188:1.1.10.3
	Kernel-5_35-4_79_2_187:1.1.10.3
	Kernel-5_35-4_79_2_186:1.1.10.3
	Kernel-5_35-4_79_2_185:1.1.10.3
	Kernel-5_35-4_79_2_184:1.1.10.3
	Kernel-5_35-4_79_2_183:1.1.10.3
	Kernel-5_35-4_79_2_182:1.1.10.3
	Kernel-5_35-4_79_2_181:1.1.10.3
	Kernel-5_35-4_79_2_180:1.1.10.3
	Kernel-5_35-4_79_2_179:1.1.10.3
	Kernel-5_35-4_79_2_178:1.1.10.3
	Kernel-5_35-4_79_2_177:1.1.10.3
	Kernel-5_35-4_79_2_176:1.1.10.3
	Kernel-5_35-4_79_2_175:1.1.10.3
	Kernel-5_35-4_79_2_174:1.1.10.3
	Kernel-5_35-4_79_2_173:1.1.10.3
	Kernel-5_35-4_79_2_172:1.1.10.3
	Kernel-5_35-4_79_2_171:1.1.10.3
	Kernel-5_35-4_79_2_170:1.1.10.3
	Kernel-5_35-4_79_2_169:1.1.10.3
	Kernel-5_35-4_79_2_168:1.1.10.3
	Kernel-5_35-4_79_2_167:1.1.10.3
	Kernel-5_35-4_79_2_166:1.1.10.3
	Kernel-5_35-4_79_2_165:1.1.10.3
	RPi_merge:1.1.10.2.2.1
	Kernel-5_35-4_79_2_147_2_23:1.1.10.2.2.1
	Kernel-5_35-4_79_2_147_2_22:1.1.10.2
	Kernel-5_35-4_79_2_147_2_21:1.1.10.2
	Kernel-5_35-4_79_2_147_2_20:1.1.10.2
	Kernel-5_35-4_79_2_147_2_19:1.1.10.2
	Kernel-5_35-4_79_2_147_2_18:1.1.10.2
	Kernel-5_35-4_79_2_164:1.1.10.3
	Kernel-5_35-4_79_2_163:1.1.10.3
	Kernel-5_35-4_79_2_147_2_17:1.1.10.2
	Kernel-5_35-4_79_2_147_2_16:1.1.10.2
	Kernel-5_35-4_79_2_147_2_15:1.1.10.2
	Kernel-5_35-4_79_2_162:1.1.10.3
	Kernel-5_35-4_79_2_161:1.1.10.3
	Kernel-5_35-4_79_2_147_2_14:1.1.10.2
	Kernel-5_35-4_79_2_147_2_13:1.1.10.2
	Kernel-5_35-4_79_2_160:1.1.10.3
	Kernel-5_35-4_79_2_159:1.1.10.3
	Kernel-5_35-4_79_2_158:1.1.10.3
	Kernel-5_35-4_79_2_157:1.1.10.3
	Kernel-5_35-4_79_2_156:1.1.10.3
	Kernel-5_35-4_79_2_147_2_12:1.1.10.2
	Kernel-5_35-4_79_2_147_2_11:1.1.10.2
	Kernel-5_35-4_79_2_155:1.1.10.3
	Kernel-5_35-4_79_2_147_2_10:1.1.10.2
	Kernel-5_35-4_79_2_154:1.1.10.3
	Kernel-5_35-4_79_2_153:1.1.10.3
	Kernel-5_35-4_79_2_147_2_9:1.1.10.2
	Kernel-5_35-4_79_2_152:1.1.10.3
	Kernel-5_35-4_79_2_151:1.1.10.3
	Kernel-5_35-4_79_2_147_2_8:1.1.10.2
	Kernel-5_35-4_79_2_147_2_7:1.1.10.2
	Kernel-5_35-4_79_2_150:1.1.10.2
	Kernel-5_35-4_79_2_147_2_6:1.1.10.2
	Kernel-5_35-4_79_2_147_2_5:1.1.10.2
	Kernel-5_35-4_79_2_149:1.1.10.2
	Kernel-5_35-4_79_2_147_2_4:1.1.10.2
	Kernel-5_35-4_79_2_147_2_3:1.1.10.2
	Kernel-5_35-4_79_2_148:1.1.10.2
	Kernel-5_35-4_79_2_147_2_2:1.1.10.2
	Kernel-5_35-4_79_2_147_2_1:1.1.10.2
	RPi:1.1.10.2.0.2
	RPi_bp:1.1.10.2
	Kernel-5_35-4_79_2_98_2_52_2_1:1.1
	alees_Kernel_dev:1.1.0.18
	alees_Kernel_dev_bp:1.1
	Kernel-5_35-4_79_2_147:1.1.10.2
	Kernel-5_35-4_79_2_146:1.1.10.2
	Kernel-5_35-4_79_2_145:1.1.10.2
	Kernel-5_35-4_79_2_144:1.1.10.2
	Kernel-5_35-4_79_2_143:1.1.10.2
	Kernel-5_35-4_79_2_142:1.1.10.2
	Kernel-5_35-4_79_2_141:1.1.10.2
	Kernel-5_35-4_79_2_140:1.1.10.2
	Kernel-5_35-4_79_2_139:1.1.10.2
	Kernel-5_35-4_79_2_138:1.1.10.2
	Kernel-5_35-4_79_2_137:1.1.10.2
	Kernel-5_35-4_79_2_136:1.1.10.2
	Kernel-5_35-4_79_2_135:1.1.10.2
	Kernel-5_35-4_79_2_134:1.1.10.2
	Kernel-5_35-4_79_2_133:1.1.10.2
	Kernel-5_35-4_79_2_132:1.1.10.2
	Kernel-5_35-4_79_2_131:1.1.10.2
	Kernel-5_35-4_79_2_130:1.1.10.2
	Kernel-5_35-4_79_2_129:1.1.10.2
	Kernel-5_35-4_79_2_128:1.1.10.2
	Kernel-5_35-4_79_2_127:1.1.10.2
	Kernel-5_35-4_79_2_126:1.1.10.1
	Kernel-5_35-4_79_2_125:1.1.10.1
	Kernel-5_35-4_79_2_124:1.1
	Kernel-5_35-4_79_2_123:1.1
	Cortex_merge:1.1
	Kernel-5_35-4_79_2_122:1.1
	Kernel-5_35-4_79_2_98_2_54:1.1
	Kernel-5_35-4_79_2_98_2_53:1.1
	Kernel-5_35-4_79_2_98_2_52:1.1
	Kernel-5_35-4_79_2_98_2_51:1.1
	Kernel-5_35-4_79_2_98_2_50:1.1
	Kernel-5_35-4_79_2_98_2_49:1.1
	Kernel-5_35-4_79_2_98_2_48:1.1
	Kernel-5_35-4_79_2_121:1.1
	Kernel-5_35-4_79_2_98_2_47:1.1
	Kernel-5_35-4_79_2_120:1.1
	Kernel-5_35-4_79_2_98_2_46:1.1
	Kernel-5_35-4_79_2_119:1.1
	Kernel-5_35-4_79_2_98_2_45:1.1
	Kernel-5_35-4_79_2_98_2_44:1.1
	Kernel-5_35-4_79_2_118:1.1
	Kernel-5_35-4_79_2_98_2_43:1.1
	Kernel-5_35-4_79_2_117:1.1
	Kernel-5_35-4_79_2_116:1.1
	Kernel-5_35-4_79_2_98_2_42:1.1
	Kernel-5_35-4_79_2_115:1.1
	Kernel-5_35-4_79_2_98_2_41:1.1
	Kernel-5_35-4_79_2_98_2_40:1.1
	Kernel-5_35-4_79_2_114:1.1
	Kernel-5_35-4_79_2_98_2_39:1.1
	Kernel-5_35-4_79_2_98_2_38:1.1
	Kernel-5_35-4_79_2_113:1.1
	Kernel-5_35-4_79_2_112:1.1
	Kernel-5_35-4_79_2_98_2_37:1.1
	Kernel-5_35-4_79_2_98_2_36:1.1
	Kernel-5_35-4_79_2_98_2_35:1.1
	Kernel-5_35-4_79_2_98_2_34:1.1
	Kernel-5_35-4_79_2_98_2_33:1.1
	Kernel-5_35-4_79_2_98_2_32:1.1
	Kernel-5_35-4_79_2_98_2_31:1.1
	Kernel-5_35-4_79_2_98_2_30:1.1
	Kernel-5_35-4_79_2_98_2_29:1.1
	Kernel-5_35-4_79_2_98_2_28:1.1
	Kernel-5_35-4_79_2_98_2_27:1.1
	Kernel-5_35-4_79_2_98_2_26:1.1
	Kernel-5_35-4_79_2_111:1.1
	Kernel-5_35-4_79_2_98_2_25:1.1
	Kernel-5_35-4_79_2_98_2_24:1.1
	Kernel-5_35-4_79_2_98_2_23:1.1
	Kernel-5_35-4_79_2_110:1.1
	Kernel-5_35-4_79_2_98_2_22:1.1
	Kernel-5_35-4_79_2_109:1.1
	Kernel-5_35-4_79_2_98_2_21:1.1
	Kernel-5_35-4_79_2_98_2_20:1.1
	Kernel-5_35-4_79_2_108:1.1
	Kernel-5_35-4_79_2_107:1.1
	Kernel-5_35-4_79_2_98_2_19:1.1
	Kernel-5_35-4_79_2_98_2_18:1.1
	Kernel-5_35-4_79_2_98_2_17:1.1
	Kernel-5_35-4_79_2_98_2_16:1.1
	Kernel-5_35-4_79_2_98_2_15:1.1
	Kernel-5_35-4_79_2_106:1.1
	Kernel-5_35-4_79_2_105:1.1
	Kernel-5_35-4_79_2_104:1.1
	Kernel-5_35-4_79_2_98_2_14:1.1
	Kernel-5_35-4_79_2_98_2_13:1.1
	Kernel-5_35-4_79_2_98_2_12:1.1
	Kernel-5_35-4_79_2_98_2_11:1.1
	Kernel-5_35-4_79_2_98_2_10:1.1
	Kernel-5_35-4_79_2_98_2_9:1.1
	Kernel-5_35-4_79_2_103:1.1
	Kernel-5_35-4_79_2_102:1.1
	Kernel-5_35-4_79_2_98_2_8:1.1
	Kernel-5_35-4_79_2_98_2_7:1.1
	Kernel-5_35-4_79_2_98_2_6:1.1
	Kernel-5_35-4_79_2_98_2_5:1.1
	Kernel-5_35-4_79_2_98_2_4:1.1
	Kernel-5_35-4_79_2_101:1.1
	Kernel-5_35-4_79_2_100:1.1
	Kernel-5_35-4_79_2_99:1.1
	Kernel-5_35-4_79_2_98_2_3:1.1
	Kernel-5_35-4_79_2_98_2_2:1.1
	Kernel-5_35-4_79_2_98_2_1:1.1
	Cortex:1.1.0.16
	Cortex_bp:1.1
	Kernel-5_35-4_79_2_98:1.1
	Kernel-5_35-4_79_2_97:1.1
	Kernel-5_35-4_79_2_96:1.1
	Kernel-5_35-4_79_2_95:1.1
	Kernel-5_35-4_79_2_94:1.1
	Kernel-5_35-4_79_2_93:1.1
	Kernel-5_35-4_79_2_92:1.1
	Kernel-5_35-4_79_2_91:1.1
	Kernel-5_35-4_79_2_90:1.1
	Kernel-5_35-4_79_2_89:1.1
	Kernel-5_35-4_79_2_88:1.1
	Kernel-5_35-4_79_2_87:1.1
	Kernel-5_35-4_79_2_86:1.1
	Kernel-5_35-4_79_2_85:1.1
	Kernel-5_35-4_79_2_84:1.1
	Kernel-5_35-4_79_2_83:1.1
	Kernel-5_35-4_79_2_82:1.1
	Kernel-5_35-4_79_2_81:1.1
	Kernel-5_35-4_79_2_80:1.1
	Kernel-5_35-4_79_2_79:1.1
	Kernel-5_35-4_79_2_78:1.1
	Kernel-5_35-4_79_2_77:1.1
	RO_5_07:1.1
	Kernel-5_35-4_79_2_76:1.1
	Kernel-5_35-4_79_2_75:1.1
	Kernel-5_35-4_79_2_74:1.1
	Kernel-5_35-4_79_2_73:1.1
	Kernel-5_35-4_79_2_72:1.1
	Kernel-5_35-4_79_2_71:1.1
	Kernel-5_35-4_79_2_70:1.1
	Kernel-5_35-4_79_2_69:1.1
	Kernel-5_35-4_79_2_68:1.1
	Kernel-5_35-4_79_2_67:1.1
	Kernel-5_35-4_79_2_66:1.1
	Kernel-5_35-4_79_2_65:1.1
	Kernel-5_35-4_79_2_64:1.1
	Kernel-5_35-4_79_2_63:1.1
	Kernel-5_35-4_79_2_62:1.1
	Kernel-5_35-4_79_2_61:1.1
	Kernel-5_35-4_79_2_59:1.1
	Kernel-5_35-4_79_2_58:1.1
	Kernel-5_35-4_79_2_57:1.1
	Kernel-5_35-4_79_2_56:1.1
	Kernel-5_35-4_79_2_55:1.1
	Kernel-5_35-4_79_2_54:1.1
	Kernel-5_35-4_79_2_53:1.1
	Kernel-5_35-4_79_2_52:1.1
	Kernel-5_35-4_79_2_51:1.1
	Kernel-5_35-4_79_2_50:1.1
	Kernel-5_35-4_79_2_49:1.1
	Kernel-5_35-4_79_2_48:1.1
	Kernel-5_47:1.1
	Kernel-5_46-4_90_2_1:1.1
	nbingham_Kernel_FastNC_dev_bp:1.1
	nbingham_Kernel_FastNC_dev:1.1.0.14
	Kernel-5_46:1.1
	Kernel-5_45:1.1
	Kernel-5_35-4_79_2_47:1.1
	Kernel-5_35-4_79_2_46:1.1
	Kernel-5_35-4_79_2_45:1.1
	Kernel-5_35-4_79_2_44:1.1
	Kernel-5_35-4_79_2_25_2_2:1.1
	Kernel-5_35-4_79_2_43:1.1
	Kernel-5_35-4_79_2_42:1.1
	Kernel-5_35-4_79_2_41:1.1
	Kernel-5_35-4_79_2_40:1.1
	Kernel-5_35-4_79_2_39:1.1
	Kernel-5_35-4_79_2_38:1.1
	Kernel-5_35-4_79_2_37:1.1
	Kernel-5_35-4_79_2_36:1.1
	Kernel-5_35-4_79_2_35:1.1
	Kernel-5_35-4_79_2_34:1.1
	Kernel-5_35-4_79_2_33:1.1
	Kernel-5_35-4_79_2_32:1.1
	Kernel-5_44:1.1
	Kernel-5_35-4_79_2_25_2_1:1.1
	Kernel-5_43:1.1
	Kernel-5_35-4_79_2_31:1.1
	Kernel-5_35-4_79_2_30:1.1
	Kernel-5_35-4_79_2_29:1.1
	Kernel-5_35-4_79_2_28:1.1
	Kernel-5_35-4_79_2_27:1.1
	Kernel-5_35-4_79_2_26:1.1
	Kernel-5_42:1.1
	Kernel-5_41:1.1
	Kernel-5_40:1.1
	Kernel-5_35-4_79_2_25:1.1
	Kernel-5_35-4_79_2_24:1.1
	Kernel-5_35-4_79_2_23:1.1
	Kernel-5_35-4_79_2_22:1.1
	Kernel-5_35-4_79_2_21:1.1
	Kernel-5_35-4_79_2_20:1.1
	Kernel-5_35-4_79_2_19:1.1
	Kernel-5_35-4_79_2_18:1.1
	Kernel-5_35-4_79_2_17:1.1
	Kernel-5_35-4_79_2_16:1.1
	Kernel-5_35-4_79_2_15:1.1
	Kernel-5_35-4_79_2_14:1.1
	Kernel-5_39:1.1
	Kernel-5_13-4_52_2_1:1.1
	Bethany:1.1.0.12
	Kernel-5_38:1.1
	Kernel-5_35-4_79_2_13:1.1
	Kernel-5_35-4_79_2_12:1.1
	Kernel-5_35-4_79_2_11:1.1
	Kernel-5_37:1.1
	Kernel-5_35-4_79_2_10:1.1
	Kernel-5_35-4_79_2_9:1.1
	Kernel-5_36:1.1
	Kernel-5_35-4_79_2_8:1.1
	Kernel-5_35-4_79_2_7:1.1
	Kernel-5_35-4_79_2_6:1.1
	Kernel-5_35-4_79_2_5:1.1
	Kernel-5_35-4_79_2_4:1.1
	Kernel-5_35-4_79_2_3:1.1
	Kernel-5_35-4_79_2_2:1.1
	dellis_autobuild_BaseSW:1.1
	Kernel-5_35-4_79_2_1:1.1
	HAL:1.1.0.10
	Kernel-5_35:1.1
	Kernel-5_34:1.1
	Kernel-5_33:1.1
	Kernel-5_32:1.1
	Kernel-5_31:1.1
	Kernel-5_30:1.1
	Kernel-5_29:1.1
	Kernel-5_28:1.1
	Kernel-5_27:1.1
	Kernel-5_26:1.1
	Kernel-5_25:1.1
	Kernel-5_24:1.1
	Kernel-5_23:1.1
	Kernel-5_22:1.1
	sbrodie_sedwards_16Mar2000:1.1
	Kernel-5_21:1.1
	Kernel-5_20:1.1
	Kernel-5_19:1.1
	Kernel-5_18:1.1
	Kernel-5_17:1.1
	Kernel-5_16:1.1
	Kernel-5_15:1.1
	Kernel-5_14:1.1
	Kernel-5_13:1.1
	Kernel-5_12:1.1
	Kernel-5_11:1.1
	Kernel-5_10:1.1
	Kernel-5_09:1.1
	Kernel-5_08:1.1
	Kernel-5_07:1.1
	Kernel-5_06:1.1
	Kernel-5_05:1.1
	Kernel-5_04:1.1
	Kernel-5_03:1.1
	Kernel-5_02:1.1
	Kernel-5_01:1.1
	Kernel-5_00:1.1
	Kernel-4_99:1.1
	Kernel-4_98:1.1
	Kernel-4_97:1.1
	Kernel-4_96:1.1
	Kernel-4_95:1.1
	Kernel-4_94:1.1
	Kernel-4_93:1.1
	Kernel-4_92:1.1
	Kernel-4_91:1.1
	Kernel-4_90:1.1
	dcotton_autobuild_BaseSW:1.1
	Kernel-4_89:1.1
	Kernel-4_88:1.1
	Kernel-4_87:1.1
	Kernel-4_86:1.1
	Kernel-4_85:1.1
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:1.1
	Kernel-4_84:1.1
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:1.1
	Ursula_RiscPC_bp:1.1
	Kernel-4_83:1.1
	Kernel-4_82:1.1
	Kernel-4_81:1.1
	Kernel-4_80:1.1
	Kernel-4_79:1.1
	Kernel-4_78:1.1
	Kernel-4_77:1.1
	Kernel-4_76:1.1
	Kernel-4_75:1.1
	Kernel-4_74:1.1
	Kernel-4_73:1.1
	Kernel-4_72:1.1
	Kernel-4_71:1.1
	Kernel-4_70:1.1
	Kernel-4_69:1.1
	Kernel-4_68:1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	Ursula_RiscPC:1.1.0.8
	Kernel-4_63-1_1_2_5:1.1
	Kernel-4_63-1_1_2_4:1.1
	Kernel-4_67:1.1
	Kernel-4_66:1.1
	Kernel-4_63-1_1_2_3:1.1
	Kernel-4_65:1.1
	Ursula_merge:1.1
	Kernel-4_64:1.1
	mstphens_Kernel-3_81:1.1
	Kernel-4_63-1_1_2_2:1.1
	nicke_Kernel_4_62:1.1
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	nturton_v459:1.1
	nturton_v460:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	mstphens_Kernel-3_80:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	afrost_Boca-1_2-Beta:1.1
	rthornb_UrsulaBuild_01May1998:1.1
	afrost_NC2_Generic:1.1
	Spinner_B20_2:1.1
	Spinner_19_3:1.1
	Spinner_B18:1.1
	Spinner_B17:1.1
	Spinner_B15:1.1
	Spinner_B14:1.1
	Spinner_B13:1.1
	Spinner_B12:1.1
	Spinner_B10:1.1
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula_bp:1.1
	Ursula:1.1.0.4
	Spinner_B7:1.1
	RO_3_71:1.1
	ARTtmp_merge:1.1
	Spin_3Apr97:1.1
	ARTtmp:1.1.0.2
	Spin_merge:1.1
	MergeFiles:1.1
	RO_3_70:1.1
	NC_1_06:1.1
	NC_xx:1.1
	Spinner:1.1.0.26
	Spin_xx:1.1.0.24
	RO_3_60:1.1
	StrongARM:1.1.0.22
	Black:1.1.0.20;
locks; strict;
comment	@# @;


1.6
date	2018.04.19.22.08.25;	author bavison;	state Exp;
branches;
next	1.5;
commitid	EJJRnnDGeShWk6zA;

1.5
date	2018.04.15.01.38.59;	author bavison;	state Exp;
branches;
next	1.4;
commitid	GDgoblL1KbZ7FtyA;

1.4
date	2017.08.25.18.31.01;	author bavison;	state Exp;
branches;
next	1.3;
commitid	8ElZ2uH7ul8HKC4A;

1.3
date	2017.06.03.12.52.32;	author bavison;	state Exp;
branches
	1.3.2.1;
next	1.2;
commitid	dEoiNzZc52DXxVTz;

1.2
date	2016.06.30.20.07.59;	author jlee;	state Exp;
branches;
next	1.1;
commitid	IWoXxARWeuLDOwcz;

1.1
date	1984.01.01.00.00.00;	author bavison;	state Exp;
branches
	1.1.10.1;
next	;

1.3.2.1
date	2017.08.31.18.47.00;	author jlee;	state Exp;
branches;
next	1.3.2.2;
commitid	e0d3gZHfENrcEo5A;

1.3.2.2
date	2018.05.14.19.33.40;	author jlee;	state Exp;
branches;
next	;
commitid	wrVtYH84nAz1GiCA;

1.1.10.1
date	2011.11.27.12.34.41;	author rsprowson;	state Exp;
branches;
next	1.1.10.2;
commitid	QtdLV6zjuPNxdYIv;

1.1.10.2
date	2011.11.27.19.18.13;	author rsprowson;	state Exp;
branches
	1.1.10.2.2.1;
next	1.1.10.3;
commitid	iuIXfUOByAFYr0Jv;

1.1.10.3
date	2012.05.26.09.00.22;	author rsprowson;	state Exp;
branches;
next	1.1.10.4;
commitid	EMsCe1GQBPXgdd6w;

1.1.10.4
date	2016.04.04.23.34.30;	author bavison;	state Exp;
branches;
next	;
commitid	h6WiJEQ4TIGcLm1z;

1.1.10.2.2.1
date	2012.09.18.15.49.56;	author jlee;	state Exp;
branches;
next	;
commitid	jeuxYpI6CQUxM1lw;


desc
@@


1.6
log
@Increase number of vectors supported by the kernel to 96.

Version 6.03. Tagged as 'Kernel-6_03'
@
text
@; Copyright 2008 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; This header file is autogenerated from the files maintained by the
; RISC OS allocations manager and should not be edited by anyone else.

        SUBT    Definitions relating to the basic RISCOS kernel ==> Hdr:RISCOS

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; SWI names are exported in two forms :
; 1)  with OS_  'OS_DoThingToOtherThing'  as N
; 2)  with XOS_ 'XOS_DoThingToOtherThing' as N + Auto_Error_SWI_bit

Auto_Error_SWI_bit_number * 17
Auto_Error_SWI_bit * 1 :SHL: Auto_Error_SWI_bit_number

SWIClass SETS   RISCOS_Kernel_0SWI_Name

        ^       RISCOS_Kernel_0SWI_Base
        AddSWI  WriteC                  ; &00
        AddSWI  WriteS                  ; &01
        AddSWI  Write0                  ; &02
        AddSWI  NewLine                 ; &03
        AddSWI  ReadC                   ; &04
        AddSWI  CLI                     ; &05
        AddSWI  Byte                    ; &06
        AddSWI  Word                    ; &07
        AddSWI  File                    ; &08
        AddSWI  Args                    ; &09
        AddSWI  BGet                    ; &0A
        AddSWI  BPut                    ; &0B
        AddSWI  GBPB                    ; &0C
        AddSWI  Find                    ; &0D
        AddSWI  ReadLine                ; &0E
        AddSWI  Control                 ; &0F
        AddSWI  GetEnv                  ; &10
        AddSWI  Exit                    ; &11
        AddSWI  SetEnv                  ; &12
        AddSWI  IntOn                   ; &13
        AddSWI  IntOff                  ; &14
        AddSWI  CallBack                ; &15
        AddSWI  EnterOS                 ; &16
        AddSWI  BreakPt                 ; &17
        AddSWI  BreakCtrl               ; &18
        AddSWI  UnusedSWI               ; &19
        AddSWI  UpdateMEMC              ; &1A
        AddSWI  SetCallBack             ; &1B
        AddSWI  Mouse                   ; &1C
        AddSWI  Heap                    ; &1D ; Our new ones start here
        AddSWI  Module                  ; &1E
        AddSWI  Claim                   ; &1F ; PMF's vector handling
        AddSWI  Release                 ; &20 ; routines
        AddSWI  ReadUnsigned            ; &21 ; Read an unsigned number
        AddSWI  GenerateEvent           ; &22
        AddSWI  ReadVarVal              ; &23 ; read variable value & type
        AddSWI  SetVarVal               ; &24 ; set  variable value & type
        AddSWI  GSInit                  ; &25
        AddSWI  GSRead                  ; &26
        AddSWI  GSTrans                 ; &27
        AddSWI  BinaryToDecimal         ; &28
        AddSWI  FSControl               ; &29
        AddSWI  ChangeDynamicArea       ; &2A
        AddSWI  GenerateError           ; &2B
        AddSWI  ReadEscapeState         ; &2C
        AddSWI  EvaluateExpression      ; &2D
        AddSWI  SpriteOp                ; &2E
        AddSWI  ReadPalette             ; &2F ; (was FontManager)
        AddSWI  ServiceCall             ; &30 ; was Claim_Release_FIQ
        AddSWI  ReadVduVariables        ; &31
        AddSWI  ReadPoint               ; &32
        AddSWI  UpCall                  ; &33
        AddSWI  CallAVector             ; &34 ; was ReadCurrentError
        AddSWI  ReadModeVariable        ; &35
        AddSWI  RemoveCursors           ; &36
        AddSWI  RestoreCursors          ; &37
        AddSWI  SWINumberToString       ; &38
        AddSWI  SWINumberFromString     ; &39
        AddSWI  ValidateAddress         ; &3A
        AddSWI  CallAfter               ; &3B
        AddSWI  CallEvery               ; &3C
        AddSWI  RemoveTickerEvent       ; &3D
        AddSWI  InstallKeyHandler       ; &3E
        AddSWI  CheckModeValid          ; &3F

SWIClass SETS   RISCOS_Kernel_1SWI_Name

        ^       RISCOS_Kernel_1SWI_Base
        AddSWI  ChangeEnvironment       ; &40
        AddSWI  ClaimScreenMemory       ; &41
        AddSWI  ReadMonotonicTime       ; &42
        AddSWI  SubstituteArgs          ; &43
        AddSWI  PrettyPrint             ; &44
        AddSWI  Plot                    ; &45
        AddSWI  WriteN                  ; &46
        AddSWI  AddToVector             ; &47
        AddSWI  WriteEnv                ; &48
        AddSWI  ReadArgs                ; &49
        AddSWI  ReadRAMFsLimits         ; &4A
        AddSWI  ClaimDeviceVector       ; &4B
        AddSWI  ReleaseDeviceVector     ; &4C
        AddSWI  DelinkApplication       ; &4D
        AddSWI  RelinkApplication       ; &4E
        AddSWI  HeapSort                ; &4F
        AddSWI  ExitAndDie              ; &50
        AddSWI  ReadMemMapInfo          ; &51
        AddSWI  ReadMemMapEntries       ; &52
        AddSWI  SetMemMapEntries        ; &53
        AddSWI  AddCallBack             ; &54
        AddSWI  ReadDefaultHandler      ; &55
        AddSWI  SetECFOrigin            ; &56
        AddSWI  SerialOp                ; &57
        AddSWI  ReadSysInfo             ; &58
        AddSWI  Confirm                 ; &59
        AddSWI  ChangedBox              ; &5A
        AddSWI  CRC                     ; &5B
        AddSWI  ReadDynamicArea         ; &5C
        AddSWI  PrintChar               ; &5D
        AddSWI  ChangeRedirection       ; &5E
        AddSWI  RemoveCallBack          ; &5F
        AddSWI  FindMemMapEntries       ; &60
        AddSWI  SetColour               ; &61
        AddSWI  ClaimSWI                ; &62 ; In ToolkitSpt - Must be implemented
        AddSWI  ReleaseSWI              ; &63 ; OS > 3.10.
        AddSWI  Pointer                 ; &64
        AddSWI  ScreenMode              ; &65
        AddSWI  DynamicArea             ; &66
        AddSWI  AbortTrap               ; &67
        AddSWI  Memory                  ; &68
        AddSWI  ClaimProcessorVector    ; &69
        AddSWI  Reset                   ; &6A
        AddSWI  MMUControl              ; &6B
        AddSWI  ResyncTime              ; &6C
        AddSWI  PlatformFeatures        ; &6D
        AddSWI  SynchroniseCodeAreas    ; &6E
        AddSWI  CallASWI                ; &6F
        AddSWI  AMBControl              ; &70 ### Clashes with OS_SpecialControl on PPlus ###
        AddSWI  CallASWIR12             ; &71
        AddSWI  SpecialControl          ; &72 ### this was &70 in original PPlus sources ###
        AddSWI  EnterUSR32              ; &73 first used in Ursula
        AddSWI  EnterUSR26              ; &74 first used in Ursula
        AddSWI  VIDCDivider             ; &75
        AddSWI  NVMemory                ; &76
        ^       OS_NVMemory + 4
        AddSWI  Hardware                ; &7A
        AddSWI  IICOp                   ; &7B
        AddSWI  LeaveOS                 ; &7C
        AddSWI  ReadLine32              ; &7D
        AddSWI  SubstituteArgs32        ; &7E
        AddSWI  HeapSort32              ; &7F

NCORESWIS  *    OS_HeapSort32 + 1       ; There are this many kernel SWIs, 0..NCORESWIS-1

        ASSERT  @@ <= &C0

SWIClass SETS   RISCOS_StringConversionSWI_Name

        ^       RISCOS_StringConversionSWI_Base
        AddSWI  ConvertStandardDateAndTime ; &C0
        AddSWI  ConvertDateAndTime         ; &C1

        ^       RISCOS_StringConversionSWI_Base + &10
        AddSWI  ConvertHex1             ; &D0
        AddSWI  ConvertHex2             ; &D1
        AddSWI  ConvertHex4             ; &D2
        AddSWI  ConvertHex6             ; &D3
        AddSWI  ConvertHex8             ; &D4
        AddSWI  ConvertCardinal1        ; &D5
        AddSWI  ConvertCardinal2        ; &D6
        AddSWI  ConvertCardinal3        ; &D7
        AddSWI  ConvertCardinal4        ; &D8
        AddSWI  ConvertInteger1         ; &D9
        AddSWI  ConvertInteger2         ; &DA
        AddSWI  ConvertInteger3         ; &DB
        AddSWI  ConvertInteger4         ; &DC
        AddSWI  ConvertBinary1          ; &DD
        AddSWI  ConvertBinary2          ; &DE
        AddSWI  ConvertBinary3          ; &DF
        AddSWI  ConvertBinary4          ; &E0
        AddSWI  ConvertSpacedCardinal1  ; &E1
        AddSWI  ConvertSpacedCardinal2  ; &E2
        AddSWI  ConvertSpacedCardinal3  ; &E3
        AddSWI  ConvertSpacedCardinal4  ; &E4
        AddSWI  ConvertSpacedInteger1   ; &E5
        AddSWI  ConvertSpacedInteger2   ; &E6
        AddSWI  ConvertSpacedInteger3   ; &E7
        AddSWI  ConvertSpacedInteger4   ; &E8
        AddSWI  ConvertFixedNetStation  ; &E9
        AddSWI  ConvertNetStation       ; &EA
        AddSWI  ConvertFixedFileSize    ; &EB
        AddSWI  ConvertFileSize         ; &EC
        AddSWI  ConvertVariform         ; &ED

        ASSERT  @@ <= &100

SWIClass SETS   RISCOS_WriteCharacter_0SWI_Name

        ^       RISCOS_WriteCharacter_0SWI_Base
        AddSWI  WriteI                  ; &100-&1FF

        ; RISC OS Specific register synonyms

Error   RN      r0                      ; Error return pointer

wp      RN      r12                     ; Workspace Pointer
WP      RN      r12
WsPtr   RN      r12

sp_irq  RN      r13_irq                 ; Note there is no definition
sp_svc  RN      r13_svc                 ; for sp_usr or sp_fiq.
stack   RN      r13                     ; Stack Pointer
Stack   RN      r13
STACK   RN      r13

        ; Vector numbers

UserV   *       &00
ErrorV  *       &01
IrqV    *       &02
WrchV   *       &03
RdchV   *       &04                     ; --,
CliV    *       &05                     ;   |
ByteV   *       &06                     ;   |
WordV   *       &07                     ;   |
FileV   *       &08                     ;   |
ArgsV   *       &09                     ;   } These numbers correspond
BGetV   *       &0A                     ;   } to the SWI numbers
BPutV   *       &0B                     ;   |
GBPBV   *       &0C                     ;   |
FindV   *       &0D                     ;   |
ReadLineV *     &0E                     ; --'
FSCV    *       &0F
EventV  *       &10
UPTV    *       &11
NETV    *       &12
KEYV    *       &13
INSV    *       &14
REMV    *       &15
CNPV    *       &16                     ; Count/Purge Buffer V
UKVDU23V *      &17                     ; VDU23 (decimal)
UKSWIV  *       &18                     ; Unknown SWI numbers
UKPLOTV *       &19                     ; VDU25 (decimal)
MouseV  *       &1A                     ; The mouse SWI vectors along here
VDUXV   *       &1B                     ; The kernel calls this vector instead of
                                        ; the VDU if bit 5 of wrch destination set
TickerV *       &1C                     ; 100Hz pacemaker
UpCallV *       &1D                     ; The 'can you deal with this before I go bang' vector.
ChangeEnvironmentV * &1E                ; vectors along here when changing any handlers,
                                        ; so debuggers etc. can stop it getting through.
SpriteV *       &1F                     ; called by SWI SpriteOp
DrawV   *       &20                     ; polygon fill vector for printers
EconetV *       &21                     ; Vector for NetFS/Econet progress reporting
ColourV *       &22                     ; for the ColourTrans module
PaletteV *      &23                     ; palette changed indication
SerialV *       &24                     ; indirection of SerialOps from kernel to Serial device drivers.
FontV   *       &25                     ; indirection of Font Manager calls prior
                                        ; to processing by Font Manager.
PointerV *      &26                     ; for mouse drivers
TimeShareV *    &27                     ; SkyNet TimeShare
GraphicsV *     &2A                     ; indirection of graphics system from Kernel
UnthreadV *     &2B                     ; high-priority callbacks
SeriousErrorV * &2D                     ; an exception occurred which could only be handled by flattening the privileged mode stacks

NVECTORS *      96                      ; There are this many vectors, 0..NVECTORS-1

        ; Buffer indices

Buff_Key        * 0
Buff_RS423In    * 1
Buff_RS423Out   * 2
Buff_Print      * 3
Buff_Sound0     * 4
Buff_Sound1     * 5
Buff_Sound2     * 6
Buff_Sound3     * 7
Buff_Speech     * 8
Buff_Mouse      * 9

        ; Conversions for OS_ConvertVariform in R4

                ^ 0
ConvertToHex            # 1
ConvertToCardinal       # 1
ConvertToInteger        # 1 ; Signed
ConvertToBinary         # 1
ConvertToSpacedCardinal # 1
ConvertToSpacedInteger  # 1 ; Signed
ConvertToPunctCardinal  # 1
ConvertToPunctInteger   # 1 ; Signed
ConvertToFixedFileSize  # 1
ConvertToFileSize       # 1
ConvertToIPv4           # 1
ConvertToEUI            # 1
ConvertToIPv6           # 1
ConvertToShortestIPv6   # 1 ; See RFC5952 section 4
ConvertToHexLowercase   # 1
ConvertToUUID           # 1 ; See RFC4122

        ; Event numbers. 0..31 available

Event_OutputEmpty       * 0
Event_InputFull         * 1
Event_CharInput         * 2
Event_ADCConvert        * 3
Event_VSync             * 4
Event_IntervalTimer     * 5
Event_Escape            * 6
Event_RS423Error        * 7
Event_Econet_UserRPC    * 8
Event_User              * 9
Event_Mouse             * 10
Event_Keyboard          * 11
Event_Sound             * 12
Event_Econet_Rx         * 14
Event_Econet_Tx         * 15
Event_Econet_OSProc     * 16    ; This is where Notify, View etc. happen
Event_MIDI              * 17    ; to notify of MIDI data being received
Event_Internet          * 19
Event_Expansion         * 21    ; was SJ. Now earmarked for use with subreason codes
Event_DeviceOverRun     * 22    ; DeviceFS to inform the world that a device has overrun
Event_PortableBMU       * 28    ; Downgrade of BMU interrupt.
; #### WARNING #### There are TWO event numbers left. Do not allocate any more
; without a really good reason.                                            amg
Event_PRISM             * 32    ; State change events from the PRISM subsystem

; Subreason codes for Event_Expansion - to be passed in R1 on the event call
                                ^ 0
Event_Expansion_SmartCard       # 0          ; ANC Rich Buckley
Event_Expansion_SCInterface     # 1          ; 0 more useful alias for above
Event_Expansion_SCTransport     # 1          ; 1

; Subreason codes for Event_Internet - to be passed in R1 on the event call
                                ^ 1
Event_Internet_SocketAsync      # 1
Event_Internet_SocketUrgent     # 1
Event_Internet_SocketBroken     # 1
Event_Internet_RevARPReply      # 1
Event_Internet_RevARPRequest    # 1

; Keyboard status bits

KBStat_PendingAlt       * &01
KBStat_ScrollLock       * &02
KBStat_NoNumLock        * &04
KBStat_ShiftEngaged     * &08
KBStat_NoCapsLock       * &10
KBStat_NoShiftLock      * &20
KBStat_CtrlEngaged      * &40
KBStat_ShiftEnable      * &80

KBStat_NoCapsLockBitNo  * 4

NIL                     * &80000000     ; An interesting value
AppSpaceStart           * &8000         ; Start of the user's world

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; From here on, due for retirement

MaxLengthDateLo *       &33EA0000       ; Wednesday, 28th September 1988
MaxLengthDateHi *       &00000041       ; 11:34:36.80 am

                 GBLL True
True             SETL {TRUE}

                 GBLL False
False            SETL {FALSE}                

                 GBLL AssemblingArthur
AssemblingArthur SETL {FALSE}

        OPT     OldOpt
        END
@


1.5
log
@  Resync with allocations database
Detail:
  Resolve allocation clash for vector &2C.  It appears that RISCOS Ltd used
  this vector in RISC OS 6 without getting it allocated - they really should
  have known better, since Hdr:RISCOS has always one of the header files
  centrally managed and coordinated between the two forks of RISC OS.
  Resolved by moving SeriousErrorV to &2D since it is a relatively recent
  addition (April 2016) and hasn't yet featured in a stable RISC OS 5
  release.
  Also correct some comments elsewhere in Hdr:RISCOS.


Version 6.01. Tagged as 'Kernel-6_01'
@
text
@d276 1
a276 4
SpareVector2 *  &2E
SpareVector1 *  &2F

NVECTORS *      SpareVector1 + 1        ; There are this many vectors, 0..NVECTORS-1
@


1.4
log
@Resync with allocations database

Version 5.87. Not tagged
@
text
@d274 1
a274 1
SeriousErrorV * &2C                     ; an exception occurred which could only be handled by flattening the privileged mode stacks
a275 1
SpareVector3 *  &2D
d344 2
a345 2
Event_Expansion_SCInterface     # 1          ; 1 more useful alias for above
Event_Expansion_SCTransport     # 1          ; 2
@


1.3
log
@Resync with allocations database (added symbolic names for Internet Event subreason codes)

Version 5.81. Tagged as 'Kernel-5_81'
@
text
@d313 1
@


1.3.2.1
log
@Merge in latest changes from main branch


Version 5.88, 4.129.2.4. Tagged as 'Kernel-5_88-4_129_2_4'
@
text
@a312 1
ConvertToUUID           # 1 ; See RFC4122
@


1.3.2.2
log
@Merge in latest changes from main branch

Version 6.05, 4.129.2.8. Tagged as 'Kernel-6_05-4_129_2_8'
@
text
@d274 1
a274 1
SeriousErrorV * &2D                     ; an exception occurred which could only be handled by flattening the privileged mode stacks
d276 5
a280 1
NVECTORS *      96                      ; There are this many vectors, 0..NVECTORS-1
d345 2
a346 2
Event_Expansion_SCInterface     # 1          ; 0 more useful alias for above
Event_Expansion_SCTransport     # 1          ; 1
@


1.2
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@d347 8
@


1.1
log
@Clean reimport of hdr.RISCOS, without any of the 3rd party allocations.

Time wraped by Timothy Baldwin
Real commit date 2008.03.28 00.03.23
@
text
@d164 2
d204 1
a204 8
        AddSWI  ConvertHex16            ; &ED
        AddSWI  ConvertCardinal8        ; &EE
        AddSWI  ConvertInteger8         ; &EF
        AddSWI  ConvertBinary8          ; &F0
        AddSWI  ConvertSpacedCardinal8  ; &F1
        AddSWI  ConvertSpacedInteger8   ; &F2
        AddSWI  ConvertFixedFileSize64  ; &F3
        AddSWI  ConvertFileSize64       ; &F4
a220 2
sp      RN      r13                     ; Stack Pointer
SP      RN      r13
d223 1
a223 1
stack   RN      r13
a226 1

d274 1
a275 1
SpareVector4 *  &2C
d280 1
a280 9
; LowPriorityEventV
; R0 - flags
; R1 - event class
; R2 - event type
; Event Classes
; 0 - System
; 1 - Window

NVECTORS *      &30                     ; There are this many vectors, 0..NVECTORS-1
d295 19
d360 2
a361 10
MainVars * &A6


MosVer   * 6            ; nice non-zero value

        GBLS MosTitle
MosTitle SETS "Tim's Arthur Operating System 0.00"
; If assembling arthur, there are better strings to use!!

NIL     * &80000000 ; An interesting value
d363 2
d369 2
a370 5
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; And a handy variable or three

        GBLL    True
True    SETL    {TRUE}
d372 2
a373 2
        GBLL    False
False   SETL    {FALSE}
d376 1
a376 11
AssemblingArthur SETL False

; This needs to be defined for some builds of the Wimp to correctly
; select delegation of application memory management code to the kernel.
        GBLL    AMBKernel
AMBKernel       SETL    True

; Tells Switcher it's being built on a system with OS_DynamicArea 6 and 7
; available - activated by Kernel's internal DynArea_QuickHandles switch.
        GBLL    OSD6and7Kernel
OSD6and7Kernel  SETL    True
@


1.1.10.1
log
@Conversions rationalisation.
Delete pmf/convdate, moved to conversions.
Moved OS_BinaryToDecimal to conversions.
Remove OS_ConvertHex16 and friends.
Add OS_ConvertVariform skeleton.
Tidied conversions.

Version 5.35, 4.79.2.125. Tagged as 'Kernel-5_35-4_79_2_125'
@
text
@d202 8
a209 1
        AddSWI  ConvertVariform         ; &ED
d234 1
a310 19
        ; Conversions for OS_ConvertVariform in R4

                ^ 0
ConvertToHex            # 1
ConvertToCardinal       # 1
ConvertToInteger        # 1 ; Signed
ConvertToBinary         # 1
ConvertToSpacedCardinal # 1
ConvertToSpacedInteger  # 1 ; Signed
ConvertToPunctCardinal  # 1
ConvertToPunctInteger   # 1 ; Signed
ConvertToFixedFileSize  # 1
ConvertToFileSize       # 1
ConvertToIPv4           # 1
ConvertToEUI            # 1
ConvertToIPv6           # 1
ConvertToShortestIPv6   # 1 ; See RFC5952 section 4
ConvertToHexLowercase   # 1

d357 2
a358 1
MainVars * &A6          ; Start of OS_Byte readable variables
d360 11
a370 1
MosVer   * 6            ; As returned by OS_Byte 0
d373 1
a373 1
; From here on, due for retirement
a380 5
NIL     * &80000000     ; An interesting value

MaxLengthDateLo *       &33EA0000       ; Wednesday, 28th September 1988
MaxLengthDateHi *       &00000041       ; 11:34:36.80 am

d384 5
a390 1
; Actually: is just used by Switcher
@


1.1.10.2
log
@Rationalise some old switches.
Export less in hdr:RISCOS.
Delete unused GetDecimalPair routine.
Move CheckYear with other RTC stuff out of PMF/osword.
Hide DebugROMInit and DebugROMErrors in release (even numbered) versions.

Version 5.35, 4.79.2.127. Tagged as 'Kernel-5_35-4_79_2_127'
@
text
@a163 2
NCORESWIS  *    OS_HeapSort32 + 1       ; There are this many kernel SWIs, 0..NCORESWIS-1

d280 9
a288 1
NVECTORS *      SpareVector1 + 1        ; There are this many vectors, 0..NVECTORS-1
d375 6
d386 2
a387 5
                 GBLL True
True             SETL {TRUE}

                 GBLL False
False            SETL {FALSE}                
d389 5
a393 2
                 GBLL AssemblingArthur
AssemblingArthur SETL {FALSE}
@


1.1.10.2.2.1
log
@Merge with HAL branch
Detail:
  Merge the HAL branch into the RPi branch, prior to merging RPi to HAL
  Brief summary of main changes brought in:
  * Added *cache functionality previously provided by ARM module
  * Added "CMOS RAM reset" message on startup when CMOS has been wiped by keypress
  * Renamed HAL Video entries from HAL_Video_XXX to HAL_VideoXXX
  * Dropped mjsHAL macros, GRAB/STASH macros
  * Fixed pseudo-VRAM allocation when machine has exactly 16MB of RAM
  * Added OS_Hardware 5
  * Use OS_SerialOp GetDeviceName for getting serial device name
  * Drop HAL_MonitorLeadID
  * Rework default GraphicsV_IICOp handler
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.23. Tagged as 'Kernel-5_35-4_79_2_147_2_23'
@
text
@d221 2
d225 1
a225 1
stack   RN      r13                     ; Stack Pointer
d362 3
a364 2
NIL                     * &80000000     ; An interesting value
AppSpaceStart           * &8000         ; Start of the user's world
d369 2
@


1.1.10.3
log
@Adoption of *CONFIGURE/STATUS CACHE commands
The kernel already looks after all other aspects of the ARM CPU, so can look after the cache control command too.
 HelpStrs.s:New tokens for help and syntax
 CmdHelp.s:UK help and syntax
 Arthur3.s:Tables updates for *CONFIGURE/STATUS, lined some stuff up, default error text sync'd with Hdr:NewErrors
 MoreComms.s:Parsing and doing of *CACHE
 Utility.s:Hashing table updated for *CACHE
Other minor changes
 hdr/Options:Bring 'MosVer' into the private header
 hdr/RISCOS:aasm aliases for SP removed, MainVars and MosVer made private, added definition of the start of application space
 HeapMan.s:Use of GRAB changed to Pull
 Offset of TutuCMOS changed for more informative PrintSoundCMOS
 PMF/osbyte.s:Use OsBytes header file in place of MainVars

Version 5.35, 4.79.2.151. Tagged as 'Kernel-5_35-4_79_2_151'
@
text
@d221 2
d225 1
a225 1
stack   RN      r13                     ; Stack Pointer
d362 3
a364 2
NIL                     * &80000000     ; An interesting value
AppSpaceStart           * &8000         ; Start of the user's world
d369 2
@


1.1.10.4
log
@Resync with allocations database

Version 5.35, 4.79.2.312. Tagged as 'Kernel-5_35-4_79_2_312'
@
text
@a273 1
SeriousErrorV * &2C                     ; an exception occurred which could only be handled by flattening the privileged mode stacks
d275 1
@


