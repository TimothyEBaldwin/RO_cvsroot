head	4.1;
access;
symbols
	Kernel-6_14:4.1
	Kernel-6_01-3:4.1
	Kernel-6_13:4.1
	Kernel-6_12:4.1
	Kernel-6_11:4.1
	Kernel-6_10:4.1
	Kernel-6_09:4.1
	Kernel-6_08-4_129_2_10:4.1
	Kernel-6_08-4_129_2_9:4.1
	Kernel-6_08:4.1
	Kernel-6_07:4.1
	Kernel-6_06:4.1
	Kernel-6_05-4_129_2_8:4.1
	Kernel-6_05:4.1
	Kernel-6_04:4.1
	Kernel-6_03:4.1
	Kernel-6_01-2:4.1
	Kernel-6_01-4_146_2_1:4.1
	Kernel-6_02:4.1
	Kernel-6_01-1:4.1
	Kernel-6_01:4.1
	Kernel-6_00:4.1
	Kernel-5_99:4.1
	Kernel-5_98:4.1
	Kernel-5_97-4_129_2_7:4.1
	Kernel-5_97:4.1
	Kernel-5_96:4.1
	Kernel-5_95:4.1
	Kernel-5_94:4.1
	Kernel-5_93:4.1
	Kernel-5_92:4.1
	Kernel-5_91:4.1
	Kernel-5_90:4.1
	Kernel-5_89-4_129_2_6:4.1
	Kernel-5_89:4.1
	Kernel-5_88-4_129_2_5:4.1
	Kernel-5_88-4_129_2_4:4.1
	Kernel-5_88:4.1
	Kernel-5_87:4.1
	Kernel-5_86-4_129_2_3:4.1
	Kernel-5_86-4_129_2_2:4.1
	Kernel-5_86-4_129_2_1:4.1
	Kernel-5_86:4.1
	SMP:4.1.0.2
	SMP_bp:4.1
	Kernel-5_85:4.1
	Kernel-5_54-1:4.1
	Kernel-5_84:4.1
	Kernel-5_83:4.1
	Kernel-5_82:4.1
	Kernel-5_81:4.1
	Kernel-5_80:4.1
	Kernel-5_79:4.1
	Kernel-5_78:4.1
	Kernel-5_77:4.1
	Kernel-5_76:4.1
	Kernel-5_75:4.1
	Kernel-5_74:4.1
	Kernel-5_73:4.1
	Kernel-5_72:4.1
	Kernel-5_71:4.1
	Kernel-5_70:4.1
	Kernel-5_69:4.1
	Kernel-5_68:4.1
	Kernel-5_67:4.1
	Kernel-5_66:4.1
	Kernel-5_65:4.1
	Kernel-5_64:4.1
	Kernel-5_63:4.1
	Kernel-5_62:4.1
	Kernel-5_61:4.1
	Kernel-5_60:4.1
	Kernel-5_59:4.1
	Kernel-5_58:4.1
	Kernel-5_57:4.1
	Kernel-5_56:4.1
	Kernel-5_55:4.1
	Kernel-5_54:4.1
	Kernel-5_53:4.1
	Kernel-5_52:4.1
	Kernel-5_51:4.1
	Kernel-5_50:4.1
	Kernel-5_49:4.1
	HAL_merge:1.1.4.2
	Kernel-5_48:4.1
	Kernel-5_35-4_79_2_327:1.1.4.2
	Kernel-5_35-4_79_2_326:1.1.4.2
	Kernel-5_35-4_79_2_325:1.1.4.2
	Kernel-5_35-4_79_2_324:1.1.4.2
	Kernel-5_35-4_79_2_323:1.1.4.2
	Kernel-5_35-4_79_2_322:1.1.4.2
	Kernel-5_35-4_79_2_321:1.1.4.2
	Kernel-5_35-4_79_2_320:1.1.4.2
	Kernel-5_35-4_79_2_319:1.1.4.2
	Kernel-5_35-4_79_2_318:1.1.4.2
	Kernel-5_35-4_79_2_317:1.1.4.2
	Kernel-5_35-4_79_2_316:1.1.4.2
	Kernel-5_35-4_79_2_315:1.1.4.2
	Kernel-5_35-4_79_2_314:1.1.4.2
	Kernel-5_35-4_79_2_313:1.1.4.2
	Kernel-5_35-4_79_2_312:1.1.4.2
	Kernel-5_35-4_79_2_311:1.1.4.2
	Kernel-5_35-4_79_2_310:1.1.4.2
	Kernel-5_35-4_79_2_309:1.1.4.2
	Kernel-5_35-4_79_2_308:1.1.4.2
	Kernel-5_35-4_79_2_307:1.1.4.2
	Kernel-5_35-4_79_2_306:1.1.4.2
	Kernel-5_35-4_79_2_305:1.1.4.2
	Kernel-5_35-4_79_2_304:1.1.4.2
	Kernel-5_35-4_79_2_303:1.1.4.2
	Kernel-5_35-4_79_2_302:1.1.4.2
	Kernel-5_35-4_79_2_301:1.1.4.2
	Kernel-5_35-4_79_2_300:1.1.4.2
	Kernel-5_35-4_79_2_299:1.1.4.2
	Kernel-5_35-4_79_2_298:1.1.4.2
	Kernel-5_35-4_79_2_297:1.1.4.2
	Kernel-5_35-4_79_2_296:1.1.4.2
	Kernel-5_35-4_79_2_295:1.1.4.2
	Kernel-5_35-4_79_2_294:1.1.4.2
	Kernel-5_35-4_79_2_293:1.1.4.2
	Kernel-5_35-4_79_2_292:1.1.4.2
	Kernel-5_35-4_79_2_291:1.1.4.2
	Kernel-5_35-4_79_2_290:1.1.4.2
	Kernel-5_35-4_79_2_289:1.1.4.2
	Kernel-5_35-4_79_2_288:1.1.4.2
	Kernel-5_35-4_79_2_287:1.1.4.2
	Kernel-5_35-4_79_2_286:1.1.4.2
	Kernel-5_35-4_79_2_285:1.1.4.2
	Kernel-5_35-4_79_2_284:1.1.4.2
	Kernel-5_35-4_79_2_283:1.1.4.2
	Kernel-5_35-4_79_2_282:1.1.4.2
	Kernel-5_35-4_79_2_281:1.1.4.2
	Kernel-5_35-4_79_2_280:1.1.4.2
	Kernel-5_35-4_79_2_279:1.1.4.2
	Kernel-5_35-4_79_2_278:1.1.4.2
	Kernel-5_35-4_79_2_277:1.1.4.2
	Kernel-5_35-4_79_2_276:1.1.4.2
	Kernel-5_35-4_79_2_275:1.1.4.2
	Kernel-5_35-4_79_2_274:1.1.4.2
	Kernel-5_35-4_79_2_273:1.1.4.2
	Kernel-5_35-4_79_2_272:1.1.4.2
	Kernel-5_35-4_79_2_271:1.1.4.2
	Kernel-5_35-4_79_2_270:1.1.4.2
	Kernel-5_35-4_79_2_269:1.1.4.2
	Kernel-5_35-4_79_2_268:1.1.4.2
	Kernel-5_35-4_79_2_267:1.1.4.2
	Kernel-5_35-4_79_2_266:1.1.4.2
	Kernel-5_35-4_79_2_265:1.1.4.2
	Kernel-5_35-4_79_2_264:1.1.4.2
	Kernel-5_35-4_79_2_263:1.1.4.2
	Kernel-5_35-4_79_2_262:1.1.4.2
	Kernel-5_35-4_79_2_261:1.1.4.2
	Kernel-5_35-4_79_2_260:1.1.4.2
	Kernel-5_35-4_79_2_259:1.1.4.2
	Kernel-5_35-4_79_2_258:1.1.4.2
	Kernel-5_35-4_79_2_257:1.1.4.2
	Kernel-5_35-4_79_2_256:1.1.4.2
	Kernel-5_35-4_79_2_255:1.1.4.2
	Kernel-5_35-4_79_2_254:1.1.4.2
	Kernel-5_35-4_79_2_253:1.1.4.2
	Kernel-5_35-4_79_2_252:1.1.4.2
	Kernel-5_35-4_79_2_251:1.1.4.2
	Kernel-5_35-4_79_2_250:1.1.4.2
	Kernel-5_35-4_79_2_249:1.1.4.2
	Kernel-5_35-4_79_2_248:1.1.4.2
	Kernel-5_35-4_79_2_247:1.1.4.2
	Kernel-5_35-4_79_2_246:1.1.4.2
	Kernel-5_35-4_79_2_245:1.1.4.2
	Kernel-5_35-4_79_2_244:1.1.4.2
	Kernel-5_35-4_79_2_243:1.1.4.2
	Kernel-5_35-4_79_2_242:1.1.4.2
	Kernel-5_35-4_79_2_241:1.1.4.2
	Kernel-5_35-4_79_2_240:1.1.4.2
	Kernel-5_35-4_79_2_239:1.1.4.2
	Kernel-5_35-4_79_2_238:1.1.4.2
	Kernel-5_35-4_79_2_237:1.1.4.2
	Kernel-5_35-4_79_2_236:1.1.4.2
	Kernel-5_35-4_79_2_235:1.1.4.2
	Kernel-5_35-4_79_2_234:1.1.4.2
	Kernel-5_35-4_79_2_233:1.1.4.2
	Kernel-5_35-4_79_2_232:1.1.4.2
	Kernel-5_35-4_79_2_231:1.1.4.2
	Kernel-5_35-4_79_2_230:1.1.4.2
	Kernel-5_35-4_79_2_229:1.1.4.2
	Kernel-5_35-4_79_2_228:1.1.4.2
	Kernel-5_35-4_79_2_227:1.1.4.2
	Kernel-5_35-4_79_2_226:1.1.4.2
	Kernel-5_35-4_79_2_225:1.1.4.2
	Kernel-5_35-4_79_2_224:1.1.4.2
	Kernel-5_35-4_79_2_223:1.1.4.2
	Kernel-5_35-4_79_2_222:1.1.4.2
	Kernel-5_35-4_79_2_221:1.1.4.2
	Kernel-5_35-4_79_2_220:1.1.4.2
	Kernel-5_35-4_79_2_219:1.1.4.2
	Kernel-5_35-4_79_2_218:1.1.4.2
	Kernel-5_35-4_79_2_217:1.1.4.2
	Kernel-5_35-4_79_2_216:1.1.4.2
	Kernel-5_35-4_79_2_215:1.1.4.2
	Kernel-5_35-4_79_2_214:1.1.4.2
	Kernel-5_35-4_79_2_213:1.1.4.2
	Kernel-5_35-4_79_2_212:1.1.4.2
	Kernel-5_35-4_79_2_211:1.1.4.2
	Kernel-5_35-4_79_2_210:1.1.4.2
	Kernel-5_35-4_79_2_209:1.1.4.2
	Kernel-5_35-4_79_2_208:1.1.4.2
	Kernel-5_35-4_79_2_207:1.1.4.2
	Kernel-5_35-4_79_2_206:1.1.4.2
	Kernel-5_35-4_79_2_205:1.1.4.2
	Kernel-5_35-4_79_2_204:1.1.4.2
	Kernel-5_35-4_79_2_203:1.1.4.2
	Kernel-5_35-4_79_2_202:1.1.4.2
	Kernel-5_35-4_79_2_201:1.1.4.2
	Kernel-5_35-4_79_2_200:1.1.4.2
	Kernel-5_35-4_79_2_199:1.1.4.2
	Kernel-5_35-4_79_2_198:1.1.4.2
	Kernel-5_35-4_79_2_197:1.1.4.2
	Kernel-5_35-4_79_2_196:1.1.4.2
	Kernel-5_35-4_79_2_195:1.1.4.2
	Kernel-5_35-4_79_2_194:1.1.4.2
	Kernel-5_35-4_79_2_193:1.1.4.2
	Kernel-5_35-4_79_2_192:1.1.4.2
	Kernel-5_35-4_79_2_191:1.1.4.2
	Kernel-5_35-4_79_2_190:1.1.4.2
	Kernel-5_35-4_79_2_189:1.1.4.2
	Kernel-5_35-4_79_2_188:1.1.4.2
	Kernel-5_35-4_79_2_187:1.1.4.2
	Kernel-5_35-4_79_2_186:1.1.4.2
	Kernel-5_35-4_79_2_185:1.1.4.2
	Kernel-5_35-4_79_2_184:1.1.4.2
	Kernel-5_35-4_79_2_183:1.1.4.2
	Kernel-5_35-4_79_2_182:1.1.4.2
	Kernel-5_35-4_79_2_181:1.1.4.2
	Kernel-5_35-4_79_2_180:1.1.4.2
	Kernel-5_35-4_79_2_179:1.1.4.2
	Kernel-5_35-4_79_2_178:1.1.4.2
	Kernel-5_35-4_79_2_177:1.1.4.2
	Kernel-5_35-4_79_2_176:1.1.4.2
	Kernel-5_35-4_79_2_175:1.1.4.2
	Kernel-5_35-4_79_2_174:1.1.4.2
	Kernel-5_35-4_79_2_173:1.1.4.2
	Kernel-5_35-4_79_2_172:1.1.4.2
	Kernel-5_35-4_79_2_171:1.1.4.2
	Kernel-5_35-4_79_2_170:1.1.4.2
	Kernel-5_35-4_79_2_169:1.1.4.2
	Kernel-5_35-4_79_2_168:1.1.4.2
	Kernel-5_35-4_79_2_167:1.1.4.2
	Kernel-5_35-4_79_2_166:1.1.4.2
	Kernel-5_35-4_79_2_165:1.1.4.2
	RPi_merge:1.1.4.2
	Kernel-5_35-4_79_2_147_2_23:1.1.4.2
	Kernel-5_35-4_79_2_147_2_22:1.1.4.2
	Kernel-5_35-4_79_2_147_2_21:1.1.4.2
	Kernel-5_35-4_79_2_147_2_20:1.1.4.2
	Kernel-5_35-4_79_2_147_2_19:1.1.4.2
	Kernel-5_35-4_79_2_147_2_18:1.1.4.2
	Kernel-5_35-4_79_2_164:1.1.4.2
	Kernel-5_35-4_79_2_163:1.1.4.2
	Kernel-5_35-4_79_2_147_2_17:1.1.4.2
	Kernel-5_35-4_79_2_147_2_16:1.1.4.2
	Kernel-5_35-4_79_2_147_2_15:1.1.4.2
	Kernel-5_35-4_79_2_162:1.1.4.2
	Kernel-5_35-4_79_2_161:1.1.4.2
	Kernel-5_35-4_79_2_147_2_14:1.1.4.2
	Kernel-5_35-4_79_2_147_2_13:1.1.4.2
	Kernel-5_35-4_79_2_160:1.1.4.2
	Kernel-5_35-4_79_2_159:1.1.4.2
	Kernel-5_35-4_79_2_158:1.1.4.2
	Kernel-5_35-4_79_2_157:1.1.4.2
	Kernel-5_35-4_79_2_156:1.1.4.2
	Kernel-5_35-4_79_2_147_2_12:1.1.4.2
	Kernel-5_35-4_79_2_147_2_11:1.1.4.2
	Kernel-5_35-4_79_2_155:1.1.4.2
	Kernel-5_35-4_79_2_147_2_10:1.1.4.2
	Kernel-5_35-4_79_2_154:1.1.4.2
	Kernel-5_35-4_79_2_153:1.1.4.2
	Kernel-5_35-4_79_2_147_2_9:1.1.4.2
	Kernel-5_35-4_79_2_152:1.1.4.2
	Kernel-5_35-4_79_2_151:1.1.4.2
	Kernel-5_35-4_79_2_147_2_8:1.1.4.2
	Kernel-5_35-4_79_2_147_2_7:1.1.4.2
	Kernel-5_35-4_79_2_150:1.1.4.2
	Kernel-5_35-4_79_2_147_2_6:1.1.4.2
	Kernel-5_35-4_79_2_147_2_5:1.1.4.2
	Kernel-5_35-4_79_2_149:1.1.4.2
	Kernel-5_35-4_79_2_147_2_4:1.1.4.2
	Kernel-5_35-4_79_2_147_2_3:1.1.4.2
	Kernel-5_35-4_79_2_148:1.1.4.2
	Kernel-5_35-4_79_2_147_2_2:1.1.4.2
	Kernel-5_35-4_79_2_147_2_1:1.1.4.2
	RPi:1.1.4.2.0.2
	RPi_bp:1.1.4.2
	Kernel-5_35-4_79_2_98_2_52_2_1:1.1.2.2
	alees_Kernel_dev:1.1.2.2.0.2
	alees_Kernel_dev_bp:1.1.2.2
	Kernel-5_35-4_79_2_147:1.1.4.2
	Kernel-5_35-4_79_2_146:1.1.4.2
	Kernel-5_35-4_79_2_145:1.1.4.2
	Kernel-5_35-4_79_2_144:1.1.4.2
	Kernel-5_35-4_79_2_143:1.1.4.2
	Kernel-5_35-4_79_2_142:1.1.4.2
	Kernel-5_35-4_79_2_141:1.1.4.2
	Kernel-5_35-4_79_2_140:1.1.4.2
	Kernel-5_35-4_79_2_139:1.1.4.2
	Kernel-5_35-4_79_2_138:1.1.4.2
	Kernel-5_35-4_79_2_137:1.1.4.2
	Kernel-5_35-4_79_2_136:1.1.4.2
	Kernel-5_35-4_79_2_135:1.1.4.2
	Kernel-5_35-4_79_2_134:1.1.4.2
	Kernel-5_35-4_79_2_133:1.1.4.2
	Kernel-5_35-4_79_2_132:1.1.4.2
	Kernel-5_35-4_79_2_131:1.1.4.2
	Kernel-5_35-4_79_2_130:1.1.4.2
	Kernel-5_35-4_79_2_129:1.1.4.2
	Kernel-5_35-4_79_2_128:1.1.4.2
	Kernel-5_35-4_79_2_127:1.1.4.2
	Kernel-5_35-4_79_2_126:1.1.4.2
	Kernel-5_35-4_79_2_125:1.1.4.2
	Kernel-5_35-4_79_2_124:1.1.4.2
	Kernel-5_35-4_79_2_123:1.1.4.2
	HAL:1.1.0.4
	Cortex_merge:1.1.2.2
	Kernel-5_35-4_79_2_98_2_54:1.1.2.2
	Kernel-5_35-4_79_2_98_2_53:1.1.2.2
	Kernel-5_35-4_79_2_98_2_52:1.1.2.2
	Kernel-5_35-4_79_2_98_2_51:1.1.2.2
	Kernel-5_35-4_79_2_98_2_50:1.1.2.2
	Kernel-5_35-4_79_2_98_2_49:1.1.2.2
	Kernel-5_35-4_79_2_98_2_48:1.1.2.2
	Kernel-5_35-4_79_2_98_2_47:1.1.2.2
	Kernel-5_35-4_79_2_98_2_46:1.1.2.2
	Kernel-5_35-4_79_2_98_2_45:1.1.2.2
	Kernel-5_35-4_79_2_98_2_44:1.1.2.2
	Kernel-5_35-4_79_2_98_2_43:1.1.2.2
	Kernel-5_35-4_79_2_98_2_42:1.1.2.2
	Kernel-5_35-4_79_2_98_2_41:1.1.2.2
	Kernel-5_35-4_79_2_98_2_40:1.1.2.2
	Kernel-5_35-4_79_2_98_2_39:1.1.2.2
	Kernel-5_35-4_79_2_98_2_38:1.1.2.2
	Kernel-5_35-4_79_2_98_2_37:1.1.2.2
	Kernel-5_35-4_79_2_98_2_36:1.1.2.2
	Kernel-5_35-4_79_2_98_2_35:1.1.2.2
	Kernel-5_35-4_79_2_98_2_34:1.1.2.2
	Kernel-5_35-4_79_2_98_2_33:1.1.2.2
	Kernel-5_35-4_79_2_98_2_32:1.1.2.2
	Kernel-5_35-4_79_2_98_2_31:1.1.2.2
	Kernel-5_35-4_79_2_98_2_30:1.1.2.2
	Kernel-5_35-4_79_2_98_2_29:1.1.2.2
	Kernel-5_35-4_79_2_98_2_28:1.1.2.2
	Kernel-5_35-4_79_2_98_2_27:1.1.2.2
	Kernel-5_35-4_79_2_98_2_26:1.1.2.2
	Kernel-5_35-4_79_2_98_2_25:1.1.2.2
	Kernel-5_35-4_79_2_98_2_24:1.1.2.2
	Kernel-5_35-4_79_2_98_2_23:1.1.2.1
	Kernel-5_35-4_79_2_98_2_22:1.1.2.1
	Kernel-5_35-4_79_2_98_2_21:1.1.2.1
	Kernel-5_35-4_79_2_98_2_20:1.1.2.1
	Kernel-5_35-4_79_2_98_2_19:1.1.2.1
	Kernel-5_35-4_79_2_98_2_18:1.1.2.1
	Kernel-5_35-4_79_2_98_2_17:1.1.2.1
	Kernel-5_35-4_79_2_98_2_16:1.1.2.1
	Cortex:1.1.0.2;
locks; strict;
comment	@# @;


4.1
date	2016.06.30.20.07.59;	author jlee;	state Exp;
branches;
next	1.1;
commitid	IWoXxARWeuLDOwcz;

1.1
date	2009.11.28.22.22.20;	author jlee;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2009.11.28.22.22.20;	author jlee;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2010.02.28.19.33.50;	author jlee;	state Exp;
branches;
next	;

1.1.4.1
date	2009.11.28.22.22.20;	author jlee;	state dead;
branches;
next	1.1.4.2;
commitid	cI3W0zbtALQG6TIv;

1.1.4.2
date	2011.11.26.21.11.10;	author jlee;	state Exp;
branches;
next	;
commitid	cI3W0zbtALQG6TIv;


desc
@@


4.1
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Public interface of Video HAL devices

        GET     hdr:HALDevice

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_VideoDevice
                       GBLL Included_Hdr_VideoDevice
Included_Hdr_VideoDevice SETL {TRUE}

; Device for VDU video devices

                                 ^       0
                                 #       HALDeviceSize
HALDevice_VDUDeviceSpecificField #       4
HALDevice_VDU_Size               *       :INDEX: @@

 ]

        OPT     OldOpt
        END
@


1.1
log
@file VideoDevice was initially added on branch Cortex.
@
text
@d1 37
@


1.1.4.1
log
@file VideoDevice was added on branch HAL on 2011-11-26 21:11:10 +0000
@
text
@@


1.1.4.2
log
@Merge Cortex kernel into HAL branch
Detail:
  This is a full merge of the Cortex kernel back into the HAL branch. Since the Cortex kernel is/was just a superset of the HAL branch, at this point in time both branches are identical.
  Main features the HAL branch gains from this merge:
  - ARMv6/ARMv7 support
  - High processor vectors/zero page relocation support
  - objasm 4 warning fixes
  - Improved HAL related functionality:
    - Support for HAL-driven RTCs instead of kernel-driven IIC based ones
    - Support for arbitrary size machine IDs
    - Support for multiple IIC busses
    - Support for any HAL size, instead of hardcoded 64k size
    - Probably some other stuff I've forgotten
  - Probably a few bug fixes here and there
Admin:
  Tested on BB-xM & Iyonix.
  Was successfully flashed to ROM on an Iyonix to test the Cortex branch implementation of the 2010 RTC bug fix.
  IOMD build untested - but has been known to work in the past.


Version 5.35, 4.79.2.123. Tagged as 'Kernel-5_35-4_79_2_123'
@
text
@a0 37
; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Public interface of Video HAL devices

        GET     hdr:HALDevice

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_VideoDevice
                       GBLL Included_Hdr_VideoDevice
Included_Hdr_VideoDevice SETL {TRUE}

; Device for VDU video devices

                                 ^       0
                                 #       HALDeviceSize
HALDevice_VDUDeviceSpecificField #       4
HALDevice_VDU_Size               *       :INDEX: @@

 ]

        OPT     OldOpt
        END
@


1.1.2.1
log
@Add header for video HAL devices, device IDs for OMAP3 DMA & video controllers to Cortex kernel
Detail:
  hdr/VideoDevice, Makefile - Add initial version of header for video HAL devices
  hdr/HALDevice - Add device IDs for OMAP3 DMA & video devices.
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.16. Tagged as 'Kernel-5_35-4_79_2_98_2_16'
@
text
@a0 39
; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Public interface of Video HAL devices

        GET     hdr:HALDevice

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_VideoDevice
                       GBLL Included_Hdr_VideoDevice
Included_Hdr_VideoDevice SETL {TRUE}

; Device for VDU video devices

                                ^       0
                                #       HALDeviceSize
HALDevice_VDUAddress2           #       4
HALDevice_VDUDevice2            #       4
HALDevice_VDUDeviceSpecificField #      4
HALDevice_VDU_Size              *       :INDEX: @@

 ]

        OPT     OldOpt
        END
@


1.1.2.2
log
@Update VDU HAL device for new OMAPVideo driver, fix MVA-based cache/TLB maintenance ops aborting on ARMv7, add warning to VDU driver about inconsistent state variables during screen mode changes
Detail:
  hdr/VideoDevice - removed Address2 and Device2 fields as it makes more sense for them to be in the device specific field (which for OMAP3 is a pointer to an OMAP3-specific struct)
  s/VMSAv6 - Modify data abort handler to ignore aborts that are generated by MVA-based cache/TLB maintenance ops. Unlike earlier ARM architectures, MVA-based ops can abort under ARMv7 if the page has no mapping to a physical address.
  s/vdu/vdudriver - Add a warning about VDU driver state variables (particularly CursorAddr) being left in invalid states during the execution of mode changes. This can cause problems if any attempt is made to output to the screen during the mode change (e.g. as a result of an abort)
Admin:
  Tested on rev C2 beagleboard. Video device changes mean that OMAP3 HAL 0.23 will be needed for ROM compilation to succeed.


Version 5.35, 4.79.2.98.2.24. Tagged as 'Kernel-5_35-4_79_2_98_2_24'
@
text
@d29 6
a34 4
                                 ^       0
                                 #       HALDeviceSize
HALDevice_VDUDeviceSpecificField #       4
HALDevice_VDU_Size               *       :INDEX: @@
@


