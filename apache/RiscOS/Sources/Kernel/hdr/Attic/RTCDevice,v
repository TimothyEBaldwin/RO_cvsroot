head	1.1;
access;
symbols
	Kernel-5_35-4_79_2_201:1.1.4.2
	Kernel-5_35-4_79_2_200:1.1.4.2
	Kernel-5_35-4_79_2_199:1.1.4.2
	Kernel-5_35-4_79_2_198:1.1.4.2
	Kernel-5_35-4_79_2_197:1.1.4.2
	Kernel-5_35-4_79_2_196:1.1.4.2
	Kernel-5_35-4_79_2_195:1.1.4.2
	Kernel-5_35-4_79_2_194:1.1.4.2
	Kernel-5_35-4_79_2_193:1.1.4.2
	Kernel-5_35-4_79_2_192:1.1.4.2
	Kernel-5_35-4_79_2_191:1.1.4.2
	Kernel-5_35-4_79_2_190:1.1.4.2
	Kernel-5_35-4_79_2_189:1.1.4.2
	Kernel-5_35-4_79_2_188:1.1.4.2
	Kernel-5_35-4_79_2_187:1.1.4.2
	Kernel-5_35-4_79_2_186:1.1.4.2
	Kernel-5_35-4_79_2_185:1.1.4.2
	Kernel-5_35-4_79_2_184:1.1.4.2
	Kernel-5_35-4_79_2_183:1.1.4.2
	Kernel-5_35-4_79_2_182:1.1.4.2
	Kernel-5_35-4_79_2_181:1.1.4.2
	Kernel-5_35-4_79_2_180:1.1.4.2
	Kernel-5_35-4_79_2_179:1.1.4.2
	Kernel-5_35-4_79_2_178:1.1.4.2
	Kernel-5_35-4_79_2_177:1.1.4.2
	Kernel-5_35-4_79_2_176:1.1.4.2
	Kernel-5_35-4_79_2_175:1.1.4.2
	Kernel-5_35-4_79_2_174:1.1.4.2
	Kernel-5_35-4_79_2_173:1.1.4.2
	Kernel-5_35-4_79_2_172:1.1.4.2
	Kernel-5_35-4_79_2_171:1.1.4.2
	Kernel-5_35-4_79_2_170:1.1.4.2
	Kernel-5_35-4_79_2_169:1.1.4.2
	Kernel-5_35-4_79_2_168:1.1.4.2
	Kernel-5_35-4_79_2_167:1.1.4.2
	Kernel-5_35-4_79_2_166:1.1.4.2
	Kernel-5_35-4_79_2_165:1.1.4.2
	RPi_merge:1.1.4.2
	Kernel-5_35-4_79_2_147_2_23:1.1.4.2
	Kernel-5_35-4_79_2_147_2_22:1.1.4.2
	Kernel-5_35-4_79_2_147_2_21:1.1.4.2
	Kernel-5_35-4_79_2_147_2_20:1.1.4.2
	Kernel-5_35-4_79_2_147_2_19:1.1.4.2
	Kernel-5_35-4_79_2_147_2_18:1.1.4.2
	Kernel-5_35-4_79_2_164:1.1.4.2
	Kernel-5_35-4_79_2_163:1.1.4.2
	Kernel-5_35-4_79_2_147_2_17:1.1.4.2
	Kernel-5_35-4_79_2_147_2_16:1.1.4.2
	Kernel-5_35-4_79_2_147_2_15:1.1.4.2
	Kernel-5_35-4_79_2_162:1.1.4.2
	Kernel-5_35-4_79_2_161:1.1.4.2
	Kernel-5_35-4_79_2_147_2_14:1.1.4.2
	Kernel-5_35-4_79_2_147_2_13:1.1.4.2
	Kernel-5_35-4_79_2_160:1.1.4.2
	Kernel-5_35-4_79_2_159:1.1.4.2
	Kernel-5_35-4_79_2_158:1.1.4.2
	Kernel-5_35-4_79_2_157:1.1.4.2
	Kernel-5_35-4_79_2_156:1.1.4.2
	Kernel-5_35-4_79_2_147_2_12:1.1.4.2
	Kernel-5_35-4_79_2_147_2_11:1.1.4.2
	Kernel-5_35-4_79_2_155:1.1.4.2
	Kernel-5_35-4_79_2_147_2_10:1.1.4.2
	Kernel-5_35-4_79_2_154:1.1.4.2
	Kernel-5_35-4_79_2_153:1.1.4.2
	Kernel-5_35-4_79_2_147_2_9:1.1.4.2
	Kernel-5_35-4_79_2_152:1.1.4.2
	Kernel-5_35-4_79_2_151:1.1.4.2
	Kernel-5_35-4_79_2_147_2_8:1.1.4.2
	Kernel-5_35-4_79_2_147_2_7:1.1.4.2
	Kernel-5_35-4_79_2_150:1.1.4.2
	Kernel-5_35-4_79_2_147_2_6:1.1.4.2
	Kernel-5_35-4_79_2_147_2_5:1.1.4.2
	Kernel-5_35-4_79_2_149:1.1.4.2
	Kernel-5_35-4_79_2_147_2_4:1.1.4.2
	Kernel-5_35-4_79_2_147_2_3:1.1.4.2
	Kernel-5_35-4_79_2_148:1.1.4.2
	Kernel-5_35-4_79_2_147_2_2:1.1.4.2
	Kernel-5_35-4_79_2_147_2_1:1.1.4.2
	RPi:1.1.4.2.0.2
	RPi_bp:1.1.4.2
	Kernel-5_35-4_79_2_98_2_52_2_1:1.1.2.2
	alees_Kernel_dev:1.1.2.2.0.2
	alees_Kernel_dev_bp:1.1.2.2
	Kernel-5_35-4_79_2_147:1.1.4.2
	Kernel-5_35-4_79_2_146:1.1.4.2
	Kernel-5_35-4_79_2_145:1.1.4.2
	Kernel-5_35-4_79_2_144:1.1.4.2
	Kernel-5_35-4_79_2_143:1.1.4.2
	Kernel-5_35-4_79_2_142:1.1.4.2
	Kernel-5_35-4_79_2_141:1.1.4.2
	Kernel-5_35-4_79_2_140:1.1.4.2
	Kernel-5_35-4_79_2_139:1.1.4.2
	Kernel-5_35-4_79_2_138:1.1.4.2
	Kernel-5_35-4_79_2_137:1.1.4.2
	Kernel-5_35-4_79_2_136:1.1.4.2
	Kernel-5_35-4_79_2_135:1.1.4.2
	Kernel-5_35-4_79_2_134:1.1.4.2
	Kernel-5_35-4_79_2_133:1.1.4.2
	Kernel-5_35-4_79_2_132:1.1.4.2
	Kernel-5_35-4_79_2_131:1.1.4.2
	Kernel-5_35-4_79_2_130:1.1.4.2
	Kernel-5_35-4_79_2_129:1.1.4.2
	Kernel-5_35-4_79_2_128:1.1.4.2
	Kernel-5_35-4_79_2_127:1.1.4.2
	Kernel-5_35-4_79_2_126:1.1.4.2
	Kernel-5_35-4_79_2_125:1.1.4.2
	Kernel-5_35-4_79_2_124:1.1.4.2
	Kernel-5_35-4_79_2_123:1.1.4.2
	HAL:1.1.0.4
	Cortex_merge:1.1.2.2
	Kernel-5_35-4_79_2_98_2_54:1.1.2.2
	Kernel-5_35-4_79_2_98_2_53:1.1.2.2
	Kernel-5_35-4_79_2_98_2_52:1.1.2.2
	Kernel-5_35-4_79_2_98_2_51:1.1.2.2
	Kernel-5_35-4_79_2_98_2_50:1.1.2.2
	Kernel-5_35-4_79_2_98_2_49:1.1.2.2
	Kernel-5_35-4_79_2_98_2_48:1.1.2.2
	Kernel-5_35-4_79_2_98_2_47:1.1.2.2
	Kernel-5_35-4_79_2_98_2_46:1.1.2.2
	Kernel-5_35-4_79_2_98_2_45:1.1.2.2
	Kernel-5_35-4_79_2_98_2_44:1.1.2.2
	Kernel-5_35-4_79_2_98_2_43:1.1.2.2
	Kernel-5_35-4_79_2_98_2_42:1.1.2.2
	Kernel-5_35-4_79_2_98_2_41:1.1.2.2
	Kernel-5_35-4_79_2_98_2_40:1.1.2.2
	Kernel-5_35-4_79_2_98_2_39:1.1.2.2
	Kernel-5_35-4_79_2_98_2_38:1.1.2.2
	Kernel-5_35-4_79_2_98_2_37:1.1.2.2
	Kernel-5_35-4_79_2_98_2_36:1.1.2.2
	Kernel-5_35-4_79_2_98_2_35:1.1.2.2
	Kernel-5_35-4_79_2_98_2_34:1.1.2.2
	Kernel-5_35-4_79_2_98_2_33:1.1.2.2
	Kernel-5_35-4_79_2_98_2_32:1.1.2.2
	Kernel-5_35-4_79_2_98_2_31:1.1.2.2
	Kernel-5_35-4_79_2_98_2_30:1.1.2.2
	Kernel-5_35-4_79_2_98_2_29:1.1.2.2
	Kernel-5_35-4_79_2_98_2_28:1.1.2.2
	Kernel-5_35-4_79_2_98_2_27:1.1.2.2
	Kernel-5_35-4_79_2_98_2_26:1.1.2.2
	Kernel-5_35-4_79_2_98_2_25:1.1.2.2
	Kernel-5_35-4_79_2_98_2_24:1.1.2.2
	Kernel-5_35-4_79_2_98_2_23:1.1.2.2
	Kernel-5_35-4_79_2_98_2_22:1.1.2.2
	Kernel-5_35-4_79_2_98_2_21:1.1.2.2
	Kernel-5_35-4_79_2_98_2_20:1.1.2.1
	Kernel-5_35-4_79_2_98_2_19:1.1.2.1
	Kernel-5_35-4_79_2_98_2_18:1.1.2.1
	Kernel-5_35-4_79_2_98_2_17:1.1.2.1
	Kernel-5_35-4_79_2_98_2_16:1.1.2.1
	Kernel-5_35-4_79_2_98_2_15:1.1.2.1
	Kernel-5_35-4_79_2_98_2_14:1.1.2.1
	Kernel-5_35-4_79_2_98_2_13:1.1.2.1
	Kernel-5_35-4_79_2_98_2_12:1.1.2.1
	Kernel-5_35-4_79_2_98_2_11:1.1.2.1
	Cortex:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2009.07.23.00.57.10;	author jlee;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2009.07.23.00.57.10;	author jlee;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2010.01.24.02.35.23;	author jlee;	state Exp;
branches;
next	;

1.1.4.1
date	2009.07.23.00.57.10;	author jlee;	state dead;
branches;
next	1.1.4.2;
commitid	cI3W0zbtALQG6TIv;

1.1.4.2
date	2011.11.26.21.11.10;	author jlee;	state Exp;
branches;
next	1.1.4.3;
commitid	cI3W0zbtALQG6TIv;

1.1.4.3
date	2013.11.20.20.29.56;	author rsprowson;	state dead;
branches;
next	;
commitid	X1FKtc2EAz7Jz3ex;


desc
@@


1.1
log
@file RTCDevice was initially added on branch Cortex.
@
text
@@


1.1.4.1
log
@file RTCDevice was added on branch HAL on 2011-11-26 21:11:10 +0000
@
text
@@


1.1.4.2
log
@Merge Cortex kernel into HAL branch
Detail:
  This is a full merge of the Cortex kernel back into the HAL branch. Since the Cortex kernel is/was just a superset of the HAL branch, at this point in time both branches are identical.
  Main features the HAL branch gains from this merge:
  - ARMv6/ARMv7 support
  - High processor vectors/zero page relocation support
  - objasm 4 warning fixes
  - Improved HAL related functionality:
    - Support for HAL-driven RTCs instead of kernel-driven IIC based ones
    - Support for arbitrary size machine IDs
    - Support for multiple IIC busses
    - Support for any HAL size, instead of hardcoded 64k size
    - Probably some other stuff I've forgotten
  - Probably a few bug fixes here and there
Admin:
  Tested on BB-xM & Iyonix.
  Was successfully flashed to ROM on an Iyonix to test the Cortex branch implementation of the 2010 RTC bug fix.
  IOMD build untested - but has been known to work in the past.


Version 5.35, 4.79.2.123. Tagged as 'Kernel-5_35-4_79_2_123'
@
text
@a0 67
; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Public interface (ie interface to the kernel) of RTC HAL devices

        GET     hdr:HALDevice

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_RTCDevice
                       GBLL Included_Hdr_RTCDevice
Included_Hdr_RTCDevice SETL {TRUE}

; Device for each RTC controller

                                ^       0
                                #       HALDeviceSize
HALDevice_RTCTimeFormat         #       1
HALDevice_RTCFormatFlags        #       1
                                #       2 ; Padding
HALDevice_RTCReadTime           #       4
HALDevice_RTCWriteTime          #       4
HALDevice_RTC_Size              *       :INDEX: @@

; Supported time formats for communication with RISC OS
RTCTimeFormat_BCD               *       0

; BCD format details
RTCFormatFlags_BCD_1BasedDay     *      1 :SHL: 0 ; is DayOfMonth 0-based or 1-based?
RTCFormatFlags_BCD_1BasedMonth   *      1 :SHL: 1 ; is Month 0-based or 1-based?
RTCFormatFlags_BCD_NeedsYearHelp *      1 :SHL: 2 ; If this is set, RISC OS assumes only the RTC is unable to store the full two-byte year.
RTCFormatFlags_BCD_YearLOIsGood  *      1 :SHL: 3 ; If this bit is not set, RISC OS treats YearLO as a 2-bit uint. Else it is treated as a 2-digit BCD value. If YearLOIsGood is not set, NeedsYearHelp must be set.

; Struct for storing BCD time
                                ^       0
RTCTimeStruct_BCD_Centiseconds  #       1
RTCTimeStruct_BCD_Seconds       #       1
RTCTimeStruct_BCD_Minutes       #       1
RTCTimeStruct_BCD_Hours         #       1
RTCTimeStruct_BCD_DayOfMonth    #       1
RTCTimeStruct_BCD_Month         #       1
RTCTimeStruct_BCD_YearLO        #       1 ; Note: Will be sent and received as a 2-bit int if YearLOIsGood is not set
RTCTimeStruct_BCD_YearHI        #       1
RTCTimeStruct_BCD_Size          *       :INDEX: @@

; Return codes
RTCRetCode_OK                   *       0
RTCRetCode_Error                *       -1 ; Generic nonspecific error
RTCRetCode_InvalidTime          *       -2 ; For write operations, indicates that the RTC cannot be programmed with the supplied time. For read operations, indicates that the RTC has been detected as containing an invalid time (e.g. following power loss)

 ]

        OPT     OldOpt
        END
@


1.1.4.3
log
@Migrate RTC driver out of the kernel
The kernel will use RTC_Read and RTC_Write to access the hardware clock, while maintaining the software clock as before.
Makefile: header export is now in the RTC module's sources
KernelWS: remove RTCFitted flag
NewReset: sync the time after the module init
i2cutils: deleted clock chip code
osinit: move OS_ResyncTime into PMF/realtime
realtime: mostly packages up ordinals and calls the respective SWI

Tested on IOMD softload.

Version 5.35, 4.79.2.202. Tagged as 'Kernel-5_35-4_79_2_202'
@
text
@@


1.1.2.1
log
@Add HAL RTC support to Cortex branch of kernel, clean up RTCSupport code
Detail:
  HAL kernels (on the Cortex branch at least) now support HALDevice-based RTCs. If the kernels own RTC code is disabled or fails to detect an RTC, then after HAL_InitDevices is called the HALDevice list will be scanned for any HAL-resident RTC devices.
  Additionally, the RTCSupport flag (in Hdr:Machine.Machine), which was previously TRUE for all HAL kernels, can now be set to FALSE in HAL kernels to disable the kernels own IIC RTC code. This allows the unwanted legacy RTC code to be disabled for machines which are known to use HAL RTCs instead.
  hdr/RTCDevice - new header describing data structures used for HAL RTC device
  hdr/HALDevice - added RTCDevice device type, IIC serial bus type
  hdr/KernelWS - upgraded RTCFitted from a 1 byte field to 4 byte. It now stores either a null value (for no RTC), a value <2048 for an IIC RTC address, or a value >= 2048 for a RTCDevice ptr
  Makefile - added header export of hdr/RTCDevice
  s/GetAll - include hdr/RTCDevice
  s/NewReset - initialise HAL RTC after HAL_InitDevices if required
  s/PMF/i2cutils, s/PMF/osinit, s/PMF/osword - modifications to allow use of HAL RTC (and disallow use of builtin IIC RTC)
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.11. Tagged as 'Kernel-5_35-4_79_2_98_2_11'
@
text
@a0 66
; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Public interface (ie interface to the kernel) of RTC HAL devices

        GET     hdr:HALDevice

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_RTCDevice
                       GBLL Included_Hdr_RTCDevice
Included_Hdr_RTCDevice SETL {TRUE}

; Device for each RTC controller

                                ^       0
                                #       HALDeviceSize
HALDevice_RTCTimeFormat         #       1
HALDevice_RTCFormatFlags        #       1
                                #       2 ; Padding
HALDevice_RTCReadTime           #       4
HALDevice_RTCWriteTime          #       4
HALDevice_RTC_Size              *       :INDEX: @@

; Supported time formats for communication with RISC OS
RTCTimeFormat_BCD               *       0

; BCD format details
RTCFormatFlags_BCD_1BasedDay     *      1 :SHL: 0 ; is DayOfMonth 0-based or 1-based?
RTCFormatFlags_BCD_1BasedMonth   *      1 :SHL: 1 ; is Month 0-based or 1-based?
RTCFormatFlags_BCD_NeedsYearHelp *      1 :SHL: 2 ; If this is set, RISC OS assumes only the RTC is only able to store the two lowest bits of YearLO. If this is unset, the RTC must be able to store the full two-byte year.

; Struct for storing BCD time
                                ^       0
RTCTimeStruct_BCD_Centiseconds  #       1
RTCTimeStruct_BCD_Seconds       #       1
RTCTimeStruct_BCD_Minutes       #       1
RTCTimeStruct_BCD_Hours         #       1
RTCTimeStruct_BCD_DayOfMonth    #       1
RTCTimeStruct_BCD_Month         #       1
RTCTimeStruct_BCD_YearLO        #       1
RTCTimeStruct_BCD_YearHI        #       1
RTCTimeStruct_BCD_Size          *       :INDEX: @@

; Return codes
RTCRetCode_OK                   *       0
RTCRetCode_Error                *       -1 ; Generic nonspecific error
RTCRetCode_InvalidTime          *       -2 ; For write operations, indicates that the RTC cannot be programmed with the supplied time. For read operations, indicates that the RTC has been detected as containing an invalid time (e.g. following power loss)

 ]

        OPT     OldOpt
        END
@


1.1.2.2
log
@Migrate 2012 RTC fix to Cortex branch of kernel
Detail:
  s/PMF/osword - Migrate the 2012 RTC fix from the HAL branch to the Cortex branch, plus apply similar fix to the code that handles HAL RTC devices (via new YearLOIsGood flag)
  s/PMF/i2cutils - Update HAL RTC year handling to correctly treat YearLO as either 2-bit int or 2-digit BCD
  hdr/RTCDevice - Add YearLOIsGood flag, revise NeedsYearHelp description
Admin:
  Tested on rev C2 beagleboard. Code seems to behave as intended.


Version 5.35, 4.79.2.98.2.21. Tagged as 'Kernel-5_35-4_79_2_98_2_21'
@
text
@d44 1
a44 2
RTCFormatFlags_BCD_NeedsYearHelp *      1 :SHL: 2 ; If this is set, RISC OS assumes only the RTC is unable to store the full two-byte year.
RTCFormatFlags_BCD_YearLOIsGood  *      1 :SHL: 3 ; If this bit is not set, RISC OS treats YearLO as a 2-bit uint. Else it is treated as a 2-digit BCD value. If YearLOIsGood is not set, NeedsYearHelp must be set.
d54 1
a54 1
RTCTimeStruct_BCD_YearLO        #       1 ; Note: Will be sent and received as a 2-bit int if YearLOIsGood is not set
@


