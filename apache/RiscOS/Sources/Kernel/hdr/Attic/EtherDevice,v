head	4.3;
access;
symbols
	Kernel-5_98:4.2
	Kernel-5_97-4_129_2_7:4.1.2.1
	Kernel-5_97:4.2
	Kernel-5_96:4.2
	Kernel-5_95:4.2
	Kernel-5_94:4.2
	Kernel-5_93:4.2
	Kernel-5_92:4.2
	Kernel-5_91:4.2
	Kernel-5_90:4.2
	Kernel-5_89-4_129_2_6:4.1.2.1
	Kernel-5_89:4.2
	Kernel-5_88-4_129_2_5:4.1.2.1
	Kernel-5_88-4_129_2_4:4.1.2.1
	Kernel-5_88:4.2
	Kernel-5_87:4.2
	Kernel-5_86-4_129_2_3:4.1.2.1
	Kernel-5_86-4_129_2_2:4.1.2.1
	Kernel-5_86-4_129_2_1:4.1.2.1
	Kernel-5_86:4.2
	SMP:4.1.0.2
	SMP_bp:4.1
	Kernel-5_85:4.1
	Kernel-5_54-1:4.1
	Kernel-5_84:4.1
	Kernel-5_83:4.1
	Kernel-5_82:4.1
	Kernel-5_81:4.1
	Kernel-5_80:4.1
	Kernel-5_79:4.1
	Kernel-5_78:4.1
	Kernel-5_77:4.1
	Kernel-5_76:4.1
	Kernel-5_75:4.1
	Kernel-5_74:4.1
	Kernel-5_73:4.1
	Kernel-5_72:4.1
	Kernel-5_71:4.1
	Kernel-5_70:4.1
	Kernel-5_69:4.1
	Kernel-5_68:4.1
	Kernel-5_67:4.1
	Kernel-5_66:4.1
	Kernel-5_65:4.1
	Kernel-5_64:4.1
	Kernel-5_63:4.1
	Kernel-5_62:4.1
	Kernel-5_61:4.1
	Kernel-5_60:4.1
	Kernel-5_59:4.1
	Kernel-5_58:4.1
	Kernel-5_57:4.1
	Kernel-5_56:4.1
	Kernel-5_55:4.1
	Kernel-5_54:4.1
	Kernel-5_53:4.1
	Kernel-5_52:4.1
	Kernel-5_51:4.1
	Kernel-5_50:4.1
	Kernel-5_49:4.1
	HAL_merge:1.1.2.3
	Kernel-5_48:4.1
	Kernel-5_35-4_79_2_327:1.1.2.3
	Kernel-5_35-4_79_2_326:1.1.2.3
	Kernel-5_35-4_79_2_325:1.1.2.3
	Kernel-5_35-4_79_2_324:1.1.2.3
	Kernel-5_35-4_79_2_323:1.1.2.3
	Kernel-5_35-4_79_2_322:1.1.2.3
	Kernel-5_35-4_79_2_321:1.1.2.3
	Kernel-5_35-4_79_2_320:1.1.2.3
	Kernel-5_35-4_79_2_319:1.1.2.3
	Kernel-5_35-4_79_2_318:1.1.2.3
	Kernel-5_35-4_79_2_317:1.1.2.3
	Kernel-5_35-4_79_2_316:1.1.2.3
	Kernel-5_35-4_79_2_315:1.1.2.3
	Kernel-5_35-4_79_2_314:1.1.2.3
	Kernel-5_35-4_79_2_313:1.1.2.3
	Kernel-5_35-4_79_2_312:1.1.2.3
	Kernel-5_35-4_79_2_311:1.1.2.3
	Kernel-5_35-4_79_2_310:1.1.2.3
	Kernel-5_35-4_79_2_309:1.1.2.3
	Kernel-5_35-4_79_2_308:1.1.2.3
	Kernel-5_35-4_79_2_307:1.1.2.3
	Kernel-5_35-4_79_2_306:1.1.2.3
	Kernel-5_35-4_79_2_305:1.1.2.3
	Kernel-5_35-4_79_2_304:1.1.2.3
	Kernel-5_35-4_79_2_303:1.1.2.3
	Kernel-5_35-4_79_2_302:1.1.2.2
	Kernel-5_35-4_79_2_301:1.1.2.2
	Kernel-5_35-4_79_2_300:1.1.2.2
	Kernel-5_35-4_79_2_299:1.1.2.2
	Kernel-5_35-4_79_2_298:1.1.2.2
	Kernel-5_35-4_79_2_297:1.1.2.2
	Kernel-5_35-4_79_2_296:1.1.2.2
	Kernel-5_35-4_79_2_295:1.1.2.2
	Kernel-5_35-4_79_2_294:1.1.2.2
	Kernel-5_35-4_79_2_293:1.1.2.2
	Kernel-5_35-4_79_2_292:1.1.2.2
	Kernel-5_35-4_79_2_291:1.1.2.2
	Kernel-5_35-4_79_2_290:1.1.2.2
	Kernel-5_35-4_79_2_289:1.1.2.2
	Kernel-5_35-4_79_2_288:1.1.2.2
	Kernel-5_35-4_79_2_287:1.1.2.2
	Kernel-5_35-4_79_2_286:1.1.2.2
	Kernel-5_35-4_79_2_285:1.1.2.2
	Kernel-5_35-4_79_2_284:1.1.2.2
	Kernel-5_35-4_79_2_283:1.1.2.2
	Kernel-5_35-4_79_2_282:1.1.2.1
	HAL:1.1.0.2;
locks; strict;
comment	@# @;


4.3
date	2018.03.25.20.54.20;	author rsprowson;	state dead;
branches;
next	4.2;
commitid	D5ZEtI6eikOUISvA;

4.2
date	2017.07.18.12.50.50;	author jballance;	state Exp;
branches;
next	4.1;
commitid	MczH4wU4lnlI5IZz;

4.1
date	2016.06.30.20.07.57;	author jlee;	state Exp;
branches
	4.1.2.1;
next	1.1;
commitid	IWoXxARWeuLDOwcz;

1.1
date	2015.08.19.23.20.52;	author jballance;	state dead;
branches
	1.1.2.1;
next	;
commitid	6SC5S6GktrVQ2Wxy;

4.1.2.1
date	2017.07.29.10.50.38;	author jlee;	state Exp;
branches;
next	4.1.2.2;
commitid	n2YRNij02LFy471A;

4.1.2.2
date	2018.05.14.19.33.40;	author jlee;	state dead;
branches;
next	;
commitid	wrVtYH84nAz1GiCA;

1.1.2.1
date	2015.08.19.23.20.52;	author jballance;	state Exp;
branches;
next	1.1.2.2;
commitid	6SC5S6GktrVQ2Wxy;

1.1.2.2
date	2015.08.20.06.44.44;	author jballance;	state Exp;
branches;
next	1.1.2.3;
commitid	yNKJCEiSzh09vYxy;

1.1.2.3
date	2016.02.28.16.30.45;	author rsprowson;	state Exp;
branches;
next	;
commitid	LWpjdwo4u62rxHWy;


desc
@@


4.3
log
@Pass on ownership of HAL EtherDevice
The kernel has no interest in Ethernet, and this prototype is tightly bound to 1 specific platform, so move it to EtherTH's exports instead.
Makefile tidied.
@
text
@; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_ENETDevice_HDR__
        GBLL    __HAL_ENETDevice_HDR__
; Define a HAL device to let the HAL pass addresses to modules
        GET     Hdr:HALDevice
                                ^       0
HALDevice_ENET                  #       HALDeviceSize
; Additional device fields
HALDevice_ENET_Phy_Device       #       4       ; Phy IRQ number
HALDevice_ENET_Phy_IRQ_En       #       4       ; IRQ enable/disable
HALDevice_ENET_Phy_IRQ_Test     #       4       ; phy irqbit test
HALDevice_ENET_Phy_IRQ_Clear    #       4       ; phy irqbit clear
; the next 2 are exported explicitly to permit quick test of phy interrupt
HALDevice_ENET_Phy_IRQTAddr     #       4       ; phy irq test address
HALDevice_ENET_Phy_IRQTMask     #       4       ; phy irq test active bit mask
HALDevice_ENETSpecificField     #       4
HALDevice_ENETClock             #       4
HALDevice_ENET_PhyPwrRst        #       4       ; Phy power and reset control
HALDevice_ENET_Size             *       :INDEX: @@

        ] ; __HAL_ENETDevice_HDR__

        END
@


4.2
log
@  Added link to Phy powerup and reset routine in EtherDevice
Detail:
Admin:
  tested on iMx6 revD1 and revC2

Version 5.86. Tagged as 'Kernel-5_86'
@
text
@@


4.1
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@d32 1
@


4.1.2.1
log
@Merge Kernel-5_86
Detail:
  hdr/EtherDevice: Merge in Kernel-5_86 to keep branch up-to-date with MAIN
Admin:
  Untested


Version 5.86, 4.129.2.1. Tagged as 'Kernel-5_86-4_129_2_1'
@
text
@a31 1
HALDevice_ENET_PhyPwrRst        #       4       ; Phy power and reset control
@


4.1.2.2
log
@Merge in latest changes from main branch

Version 6.05, 4.129.2.8. Tagged as 'Kernel-6_05-4_129_2_8'
@
text
@@


1.1
log
@file EtherDevice was initially added on branch HAL.
@
text
@d1 36
@


1.1.2.1
log
@  Added 3 HALDevice headers - SPI, Ether, and AHCI
Detail:
Admin:


Version 5.35, 4.79.2.282. Tagged as 'Kernel-5_35-4_79_2_282'
@
text
@a0 37
; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_ENETDevice_HDR__
        GBLL    __HAL_ENETDevice_HDR__
; Define a HAL device to let the HAL pass addresses to modules
        GET     Hdr:HALDevice
                          	^       0
HALDevice_ENET                  #       HALDeviceSize
; Additional device fields
HALDevice_sb			#	4	; HAL sb/r9 to use in r2 for following calls
HALDevice_ENET_Phy_Device       #       4       ; Phy IRQ number
HALDevice_ENET_Phy_IRQ_En       #       4       ; IRQ enable/disable
HALDevice_ENET_Phy_IRQ_Test     #       4       ; phy irqbit test
HALDevice_ENET_Phy_IRQ_Clear    #       4       ; phy irqbit clear
; the next 2 are exported explicitly to permit quick test of phy interrupt
HALDevice_ENET_Phy_IRQTAddr     #       4       ; phy irq test address
HALDevice_ENET_Phy_IRQTMask     #       4       ; phy irq test active bit mask
HALDevice_ENETSpecificField     #       4
HALDevice_ENETClock             #       4
HALDevice_ENET_Size             *       :INDEX: @@

        ] ; __HAL_ENETDevice_HDR__

        END
@


1.1.2.2
log
@  Corrected makefile omissions.
  Removed errant tab characters from EtherDevice header
Detail:
Admin:


Version 5.35, 4.79.2.283. Tagged as 'Kernel-5_35-4_79_2_283'
@
text
@d20 1
a20 1
                                ^       0
d23 1
a23 1
HALDevice_sb                    #       4       ; HAL sb/r9 to use in r2 for following calls
@


1.1.2.3
log
@Change struct layouts for C module compatibility
The HAL device APIs are modelled around the C APCS, and furthermore can be implemented either in a HAL (with SB) or RISC OS module (with R12). Therefore, exporting SB or requiring its use as a function argument precludes implementing the device in a normal module.
For examples of how to keep track of SB for the HAL case, see AudC or BMU or CPUClk or DMA or GPIO or IDE or Mixer or RTC or SDHCI or CacheC devices, which typically keep it in their HAL workspace referenced relative to the device pointer passed in a1/R0.
@
text
@d23 1
@


