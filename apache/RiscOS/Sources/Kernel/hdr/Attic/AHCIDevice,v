head	4.2;
access;
symbols
	Kernel-5_53:4.1
	Kernel-5_52:4.1
	Kernel-5_51:4.1
	Kernel-5_50:4.1
	Kernel-5_49:4.1
	HAL_merge:1.1.2.2
	Kernel-5_48:4.1
	Kernel-5_35-4_79_2_327:1.1.2.2
	Kernel-5_35-4_79_2_326:1.1.2.2
	Kernel-5_35-4_79_2_325:1.1.2.2
	Kernel-5_35-4_79_2_324:1.1.2.2
	Kernel-5_35-4_79_2_323:1.1.2.2
	Kernel-5_35-4_79_2_322:1.1.2.2
	Kernel-5_35-4_79_2_321:1.1.2.2
	Kernel-5_35-4_79_2_320:1.1.2.2
	Kernel-5_35-4_79_2_319:1.1.2.2
	Kernel-5_35-4_79_2_318:1.1.2.2
	Kernel-5_35-4_79_2_317:1.1.2.2
	Kernel-5_35-4_79_2_316:1.1.2.2
	Kernel-5_35-4_79_2_315:1.1.2.2
	Kernel-5_35-4_79_2_314:1.1.2.2
	Kernel-5_35-4_79_2_313:1.1.2.2
	Kernel-5_35-4_79_2_312:1.1.2.2
	Kernel-5_35-4_79_2_311:1.1.2.2
	Kernel-5_35-4_79_2_310:1.1.2.2
	Kernel-5_35-4_79_2_309:1.1.2.2
	Kernel-5_35-4_79_2_308:1.1.2.2
	Kernel-5_35-4_79_2_307:1.1.2.2
	Kernel-5_35-4_79_2_306:1.1.2.2
	Kernel-5_35-4_79_2_305:1.1.2.2
	Kernel-5_35-4_79_2_304:1.1.2.2
	Kernel-5_35-4_79_2_303:1.1.2.2
	Kernel-5_35-4_79_2_302:1.1.2.1
	Kernel-5_35-4_79_2_301:1.1.2.1
	Kernel-5_35-4_79_2_300:1.1.2.1
	Kernel-5_35-4_79_2_299:1.1.2.1
	Kernel-5_35-4_79_2_298:1.1.2.1
	Kernel-5_35-4_79_2_297:1.1.2.1
	Kernel-5_35-4_79_2_296:1.1.2.1
	Kernel-5_35-4_79_2_295:1.1.2.1
	Kernel-5_35-4_79_2_294:1.1.2.1
	Kernel-5_35-4_79_2_293:1.1.2.1
	Kernel-5_35-4_79_2_292:1.1.2.1
	Kernel-5_35-4_79_2_291:1.1.2.1
	Kernel-5_35-4_79_2_290:1.1.2.1
	Kernel-5_35-4_79_2_289:1.1.2.1
	Kernel-5_35-4_79_2_288:1.1.2.1
	Kernel-5_35-4_79_2_287:1.1.2.1
	Kernel-5_35-4_79_2_286:1.1.2.1
	Kernel-5_35-4_79_2_285:1.1.2.1
	Kernel-5_35-4_79_2_284:1.1.2.1
	Kernel-5_35-4_79_2_283:1.1.2.1
	Kernel-5_35-4_79_2_282:1.1.2.1
	HAL:1.1.0.2;
locks; strict;
comment	@# @;


4.2
date	2016.07.24.10.50.40;	author rsprowson;	state dead;
branches;
next	4.1;
commitid	x4yCuRzf90zVXyfz;

4.1
date	2016.06.30.20.07.57;	author jlee;	state Exp;
branches;
next	1.1;
commitid	IWoXxARWeuLDOwcz;

1.1
date	2015.08.19.23.20.52;	author jballance;	state dead;
branches
	1.1.2.1;
next	;
commitid	6SC5S6GktrVQ2Wxy;

1.1.2.1
date	2015.08.19.23.20.52;	author jballance;	state Exp;
branches;
next	1.1.2.2;
commitid	6SC5S6GktrVQ2Wxy;

1.1.2.2
date	2016.02.28.16.30.44;	author rsprowson;	state Exp;
branches;
next	;
commitid	LWpjdwo4u62rxHWy;


desc
@@


4.2
log
@Resolve 2x header clashes
hdr/AHCIDevice:
  Remove this, since it clashes with the (differing API version number) copy exported by SATADriver. Post merging the Kernel back to the trunk the newer file datestamp has meant the wrong one gets exported during any ROM build which includes both components. Since the Kernel doesn't need AHCIDevice itself, it is left to the respective client (SATADriver or AHCIDriver in this case) to export them.
hdr/ModHand:
  Resolve the longstanding clash of Module_Title with the same named symbol that CMHG uses. There are very few assembler needing to look at the module header (Kernel, FileCore, Debugger, Podule) directly, but every C module which uses CMHG and wants one of the ModHandReason values ends up with a duplicate define.
  Obsolete Arthur era Module_LoadAddr value.
ArthurSWIs.s/MoreComms.s/NewReset.s/SWINaming.s/SysComms.s/Utility.s:
  Module_Title->Module_TitleStr.
ModHand.s:
  Module_Title->Module_TitleStr.
  Recode Module_LoadAddr using the file type from Hdr:FileTypes.
GetAlls.s:
  Drop unused NVRAM and PortMan headers. Add Hdr:FileTypes.

Version 5.54. Tagged as 'Kernel-5_54'
@
text
@; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_AHCIDevice_HDR__
        GBLL    __HAL_AHCIDevice_HDR__
; Define a HAL device to let the HAL pass addresses to modules
        GET     Hdr:HALDevice
                                ^       0
HALDevice_AHCI                  #       HALDeviceSize
HALDevice_AHCIClock             #       4
HALDevice_AHCI_Size             *       :INDEX: @@


        ] ; __HAL_AHCIDevice_HDR__

        END
@


4.1
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@@


1.1
log
@file AHCIDevice was initially added on branch HAL.
@
text
@d1 28
@


1.1.2.1
log
@  Added 3 HALDevice headers - SPI, Ether, and AHCI
Detail:
Admin:


Version 5.35, 4.79.2.282. Tagged as 'Kernel-5_35-4_79_2_282'
@
text
@a0 29
; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_AHCIDevice_HDR__
        GBLL    __HAL_AHCIDevice_HDR__
; Define a HAL device to let the HAL pass addresses to modules
        GET     Hdr:HALDevice
                                ^       0
HALDevice_AHCI                  #       HALDeviceSize
HALDevice_AHCIWorkSpace         #       4
HALDevice_AHCIClock             #       4
HALDevice_AHCI_Size             *       :INDEX: @@


        ] ; __HAL_AHCIDevice_HDR__

        END
@


1.1.2.2
log
@Change struct layouts for C module compatibility
The HAL device APIs are modelled around the C APCS, and furthermore can be implemented either in a HAL (with SB) or RISC OS module (with R12). Therefore, exporting SB or requiring its use as a function argument precludes implementing the device in a normal module.
For examples of how to keep track of SB for the HAL case, see AudC or BMU or CPUClk or DMA or GPIO or IDE or Mixer or RTC or SDHCI or CacheC devices, which typically keep it in their HAL workspace referenced relative to the device pointer passed in a1/R0.
@
text
@d22 1
@


