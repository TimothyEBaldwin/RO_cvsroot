head	4.3;
access;
symbols
	Kernel-5_50:4.2
	Kernel-5_49:4.2
	HAL_merge:4.1.10.1
	Kernel-5_48:4.2
	Kernel-5_35-4_79_2_327:4.1.10.1
	Kernel-5_35-4_79_2_326:4.1.10.1
	Kernel-5_35-4_79_2_325:4.1.10.1
	Kernel-5_35-4_79_2_324:4.1.10.1
	Kernel-5_35-4_79_2_323:4.1.10.1
	Kernel-5_35-4_79_2_322:4.1.10.1
	Kernel-5_35-4_79_2_321:4.1.10.1
	Kernel-5_35-4_79_2_320:4.1.10.1
	Kernel-5_35-4_79_2_319:4.1.10.1
	Kernel-5_35-4_79_2_318:4.1.10.1
	Kernel-5_35-4_79_2_317:4.1.10.1
	Kernel-5_35-4_79_2_316:4.1.10.1
	Kernel-5_35-4_79_2_315:4.1.10.1
	Kernel-5_35-4_79_2_314:4.1.10.1
	Kernel-5_35-4_79_2_313:4.1.10.1
	Kernel-5_35-4_79_2_312:4.1.10.1
	Kernel-5_35-4_79_2_311:4.1.10.1
	Kernel-5_35-4_79_2_310:4.1.10.1
	Kernel-5_35-4_79_2_309:4.1.10.1
	Kernel-5_35-4_79_2_308:4.1.10.1
	Kernel-5_35-4_79_2_307:4.1.10.1
	Kernel-5_35-4_79_2_306:4.1.10.1
	Kernel-5_35-4_79_2_305:4.1.10.1
	Kernel-5_35-4_79_2_304:4.1.10.1
	Kernel-5_35-4_79_2_303:4.1.10.1
	Kernel-5_35-4_79_2_302:4.1.10.1
	Kernel-5_35-4_79_2_301:4.1.10.1
	Kernel-5_35-4_79_2_300:4.1.10.1
	Kernel-5_35-4_79_2_299:4.1.10.1
	Kernel-5_35-4_79_2_298:4.1.10.1
	Kernel-5_35-4_79_2_297:4.1.10.1
	Kernel-5_35-4_79_2_296:4.1.10.1
	Kernel-5_35-4_79_2_295:4.1.10.1
	Kernel-5_35-4_79_2_294:4.1.10.1
	Kernel-5_35-4_79_2_293:4.1.10.1
	Kernel-5_35-4_79_2_292:4.1.10.1
	Kernel-5_35-4_79_2_291:4.1.10.1
	Kernel-5_35-4_79_2_290:4.1.10.1
	Kernel-5_35-4_79_2_289:4.1.10.1
	Kernel-5_35-4_79_2_288:4.1.10.1
	Kernel-5_35-4_79_2_287:4.1.10.1
	Kernel-5_35-4_79_2_286:4.1.10.1
	Kernel-5_35-4_79_2_285:4.1.10.1
	Kernel-5_35-4_79_2_284:4.1.10.1
	Kernel-5_35-4_79_2_283:4.1.10.1
	Kernel-5_35-4_79_2_282:4.1.10.1
	Kernel-5_35-4_79_2_281:4.1.10.1
	Kernel-5_35-4_79_2_280:4.1.10.1
	Kernel-5_35-4_79_2_279:4.1.10.1
	Kernel-5_35-4_79_2_278:4.1.10.1
	Kernel-5_35-4_79_2_277:4.1.10.1
	Kernel-5_35-4_79_2_276:4.1.10.1
	Kernel-5_35-4_79_2_275:4.1.10.1
	Kernel-5_35-4_79_2_274:4.1.10.1
	Kernel-5_35-4_79_2_273:4.1.10.1
	Kernel-5_35-4_79_2_272:4.1.10.1
	Kernel-5_35-4_79_2_271:4.1.10.1
	Kernel-5_35-4_79_2_270:4.1.10.1
	Kernel-5_35-4_79_2_269:4.1.10.1
	Kernel-5_35-4_79_2_268:4.1.10.1
	Kernel-5_35-4_79_2_267:4.1.10.1
	Kernel-5_35-4_79_2_266:4.1.10.1
	Kernel-5_35-4_79_2_265:4.1.10.1
	Kernel-5_35-4_79_2_264:4.1.10.1
	Kernel-5_35-4_79_2_263:4.1.10.1
	Kernel-5_35-4_79_2_262:4.1.10.1
	Kernel-5_35-4_79_2_261:4.1.10.1
	Kernel-5_35-4_79_2_260:4.1.10.1
	Kernel-5_35-4_79_2_259:4.1.10.1
	Kernel-5_35-4_79_2_258:4.1.10.1
	Kernel-5_35-4_79_2_257:4.1.10.1
	Kernel-5_35-4_79_2_256:4.1.10.1
	Kernel-5_35-4_79_2_255:4.1.10.1
	Kernel-5_35-4_79_2_254:4.1.10.1
	Kernel-5_35-4_79_2_253:4.1.10.1
	Kernel-5_35-4_79_2_252:4.1.10.1
	Kernel-5_35-4_79_2_251:4.1.10.1
	Kernel-5_35-4_79_2_250:4.1.10.1
	Kernel-5_35-4_79_2_249:4.1.10.1
	Kernel-5_35-4_79_2_248:4.1.10.1
	Kernel-5_35-4_79_2_247:4.1.10.1
	Kernel-5_35-4_79_2_246:4.1.10.1
	Kernel-5_35-4_79_2_245:4.1.10.1
	Kernel-5_35-4_79_2_244:4.1.10.1
	Kernel-5_35-4_79_2_243:4.1.10.1
	Kernel-5_35-4_79_2_242:4.1.10.1
	Kernel-5_35-4_79_2_241:4.1.10.1
	Kernel-5_35-4_79_2_240:4.1.10.1
	Kernel-5_35-4_79_2_239:4.1.10.1
	Kernel-5_35-4_79_2_238:4.1.10.1
	Kernel-5_35-4_79_2_237:4.1.10.1
	Kernel-5_35-4_79_2_236:4.1.10.1
	Kernel-5_35-4_79_2_235:4.1.10.1
	Kernel-5_35-4_79_2_234:4.1.10.1
	Kernel-5_35-4_79_2_233:4.1.10.1
	Kernel-5_35-4_79_2_232:4.1.10.1
	Kernel-5_35-4_79_2_231:4.1.10.1
	Kernel-5_35-4_79_2_230:4.1.10.1
	Kernel-5_35-4_79_2_229:4.1.10.1
	Kernel-5_35-4_79_2_228:4.1.10.1
	Kernel-5_35-4_79_2_227:4.1.10.1
	Kernel-5_35-4_79_2_226:4.1.10.1
	Kernel-5_35-4_79_2_225:4.1.10.1
	Kernel-5_35-4_79_2_224:4.1.10.1
	Kernel-5_35-4_79_2_223:4.1.10.1
	Kernel-5_35-4_79_2_222:4.1.10.1
	Kernel-5_35-4_79_2_221:4.1.10.1
	Kernel-5_35-4_79_2_220:4.1.10.1
	Kernel-5_35-4_79_2_219:4.1.10.1
	Kernel-5_35-4_79_2_218:4.1.10.1
	Kernel-5_35-4_79_2_217:4.1.10.1
	Kernel-5_35-4_79_2_216:4.1.10.1
	Kernel-5_35-4_79_2_215:4.1.10.1
	Kernel-5_35-4_79_2_214:4.1.10.1
	Kernel-5_35-4_79_2_213:4.1.10.1
	Kernel-5_35-4_79_2_212:4.1.10.1
	Kernel-5_35-4_79_2_211:4.1.10.1
	Kernel-5_35-4_79_2_210:4.1.10.1
	Kernel-5_35-4_79_2_209:4.1.10.1
	Kernel-5_35-4_79_2_208:4.1.10.1
	Kernel-5_35-4_79_2_207:4.1.10.1
	Kernel-5_35-4_79_2_206:4.1.10.1
	Kernel-5_35-4_79_2_205:4.1.10.1
	Kernel-5_35-4_79_2_204:4.1.10.1
	Kernel-5_35-4_79_2_203:4.1.10.1
	Kernel-5_35-4_79_2_202:4.1.10.1
	Kernel-5_35-4_79_2_201:4.1.10.1
	Kernel-5_35-4_79_2_200:4.1.10.1
	Kernel-5_35-4_79_2_199:4.1.10.1
	Kernel-5_35-4_79_2_198:4.1.10.1
	Kernel-5_35-4_79_2_197:4.1.10.1
	Kernel-5_35-4_79_2_196:4.1.10.1
	Kernel-5_35-4_79_2_195:4.1.10.1
	Kernel-5_35-4_79_2_194:4.1.10.1
	Kernel-5_35-4_79_2_193:4.1
	Kernel-5_35-4_79_2_192:4.1
	Kernel-5_35-4_79_2_191:4.1
	Kernel-5_35-4_79_2_190:4.1
	Kernel-5_35-4_79_2_189:4.1
	Kernel-5_35-4_79_2_188:4.1
	Kernel-5_35-4_79_2_187:4.1
	Kernel-5_35-4_79_2_186:4.1
	Kernel-5_35-4_79_2_185:4.1
	Kernel-5_35-4_79_2_184:4.1
	Kernel-5_35-4_79_2_183:4.1
	Kernel-5_35-4_79_2_182:4.1
	Kernel-5_35-4_79_2_181:4.1
	Kernel-5_35-4_79_2_180:4.1
	Kernel-5_35-4_79_2_179:4.1
	Kernel-5_35-4_79_2_178:4.1
	Kernel-5_35-4_79_2_177:4.1
	Kernel-5_35-4_79_2_176:4.1
	Kernel-5_35-4_79_2_175:4.1
	Kernel-5_35-4_79_2_174:4.1
	Kernel-5_35-4_79_2_173:4.1
	Kernel-5_35-4_79_2_172:4.1
	Kernel-5_35-4_79_2_171:4.1
	Kernel-5_35-4_79_2_170:4.1
	Kernel-5_35-4_79_2_169:4.1
	Kernel-5_35-4_79_2_168:4.1
	Kernel-5_35-4_79_2_167:4.1
	Kernel-5_35-4_79_2_166:4.1
	Kernel-5_35-4_79_2_165:4.1
	RPi_merge:4.1
	Kernel-5_35-4_79_2_147_2_23:4.1
	Kernel-5_35-4_79_2_147_2_22:4.1
	Kernel-5_35-4_79_2_147_2_21:4.1
	Kernel-5_35-4_79_2_147_2_20:4.1
	Kernel-5_35-4_79_2_147_2_19:4.1
	Kernel-5_35-4_79_2_147_2_18:4.1
	Kernel-5_35-4_79_2_164:4.1
	Kernel-5_35-4_79_2_163:4.1
	Kernel-5_35-4_79_2_147_2_17:4.1
	Kernel-5_35-4_79_2_147_2_16:4.1
	Kernel-5_35-4_79_2_147_2_15:4.1
	Kernel-5_35-4_79_2_162:4.1
	Kernel-5_35-4_79_2_161:4.1
	Kernel-5_35-4_79_2_147_2_14:4.1
	Kernel-5_35-4_79_2_147_2_13:4.1
	Kernel-5_35-4_79_2_160:4.1
	Kernel-5_35-4_79_2_159:4.1
	Kernel-5_35-4_79_2_158:4.1
	Kernel-5_35-4_79_2_157:4.1
	Kernel-5_35-4_79_2_156:4.1
	Kernel-5_35-4_79_2_147_2_12:4.1
	Kernel-5_35-4_79_2_147_2_11:4.1
	Kernel-5_35-4_79_2_155:4.1
	Kernel-5_35-4_79_2_147_2_10:4.1
	Kernel-5_35-4_79_2_154:4.1
	Kernel-5_35-4_79_2_153:4.1
	Kernel-5_35-4_79_2_147_2_9:4.1
	Kernel-5_35-4_79_2_152:4.1
	Kernel-5_35-4_79_2_151:4.1
	Kernel-5_35-4_79_2_147_2_8:4.1
	Kernel-5_35-4_79_2_147_2_7:4.1
	Kernel-5_35-4_79_2_150:4.1
	Kernel-5_35-4_79_2_147_2_6:4.1
	Kernel-5_35-4_79_2_147_2_5:4.1
	Kernel-5_35-4_79_2_149:4.1
	Kernel-5_35-4_79_2_147_2_4:4.1
	Kernel-5_35-4_79_2_147_2_3:4.1
	Kernel-5_35-4_79_2_148:4.1
	Kernel-5_35-4_79_2_147_2_2:4.1
	Kernel-5_35-4_79_2_147_2_1:4.1
	RPi:4.1.0.18
	RPi_bp:4.1
	Kernel-5_35-4_79_2_98_2_52_2_1:4.1
	alees_Kernel_dev:4.1.0.14
	alees_Kernel_dev_bp:4.1
	Kernel-5_35-4_79_2_147:4.1
	Kernel-5_35-4_79_2_146:4.1
	Kernel-5_35-4_79_2_145:4.1
	Kernel-5_35-4_79_2_144:4.1
	Kernel-5_35-4_79_2_143:4.1
	Kernel-5_35-4_79_2_142:4.1
	Kernel-5_35-4_79_2_141:4.1
	Kernel-5_35-4_79_2_140:4.1
	Kernel-5_35-4_79_2_139:4.1
	Kernel-5_35-4_79_2_138:4.1
	Kernel-5_35-4_79_2_137:4.1
	Kernel-5_35-4_79_2_136:4.1
	Kernel-5_35-4_79_2_135:4.1
	Kernel-5_35-4_79_2_134:4.1
	Kernel-5_35-4_79_2_133:4.1
	Kernel-5_35-4_79_2_132:4.1
	Kernel-5_35-4_79_2_131:4.1
	Kernel-5_35-4_79_2_130:4.1
	Kernel-5_35-4_79_2_129:4.1
	Kernel-5_35-4_79_2_128:4.1
	Kernel-5_35-4_79_2_127:4.1
	Kernel-5_35-4_79_2_126:4.1
	Kernel-5_35-4_79_2_125:4.1
	Kernel-5_35-4_79_2_124:4.1
	Kernel-5_35-4_79_2_123:4.1
	Cortex_merge:4.1
	Kernel-5_35-4_79_2_122:4.1
	Kernel-5_35-4_79_2_98_2_54:4.1
	Kernel-5_35-4_79_2_98_2_53:4.1
	Kernel-5_35-4_79_2_98_2_52:4.1
	Kernel-5_35-4_79_2_98_2_51:4.1
	Kernel-5_35-4_79_2_98_2_50:4.1
	Kernel-5_35-4_79_2_98_2_49:4.1
	Kernel-5_35-4_79_2_98_2_48:4.1
	Kernel-5_35-4_79_2_121:4.1
	Kernel-5_35-4_79_2_98_2_47:4.1
	Kernel-5_35-4_79_2_120:4.1
	Kernel-5_35-4_79_2_98_2_46:4.1
	Kernel-5_35-4_79_2_119:4.1
	Kernel-5_35-4_79_2_98_2_45:4.1
	Kernel-5_35-4_79_2_98_2_44:4.1
	Kernel-5_35-4_79_2_118:4.1
	Kernel-5_35-4_79_2_98_2_43:4.1
	Kernel-5_35-4_79_2_117:4.1
	Kernel-5_35-4_79_2_116:4.1
	Kernel-5_35-4_79_2_98_2_42:4.1
	Kernel-5_35-4_79_2_115:4.1
	Kernel-5_35-4_79_2_98_2_41:4.1
	Kernel-5_35-4_79_2_98_2_40:4.1
	Kernel-5_35-4_79_2_114:4.1
	Kernel-5_35-4_79_2_98_2_39:4.1
	Kernel-5_35-4_79_2_98_2_38:4.1
	Kernel-5_35-4_79_2_113:4.1
	Kernel-5_35-4_79_2_112:4.1
	Kernel-5_35-4_79_2_98_2_37:4.1
	Kernel-5_35-4_79_2_98_2_36:4.1
	Kernel-5_35-4_79_2_98_2_35:4.1
	Kernel-5_35-4_79_2_98_2_34:4.1
	Kernel-5_35-4_79_2_98_2_33:4.1
	Kernel-5_35-4_79_2_98_2_32:4.1
	Kernel-5_35-4_79_2_98_2_31:4.1
	Kernel-5_35-4_79_2_98_2_30:4.1
	Kernel-5_35-4_79_2_98_2_29:4.1
	Kernel-5_35-4_79_2_98_2_28:4.1
	Kernel-5_35-4_79_2_98_2_27:4.1
	Kernel-5_35-4_79_2_98_2_26:4.1
	Kernel-5_35-4_79_2_111:4.1
	Kernel-5_35-4_79_2_98_2_25:4.1
	Kernel-5_35-4_79_2_98_2_24:4.1
	Kernel-5_35-4_79_2_98_2_23:4.1
	Kernel-5_35-4_79_2_110:4.1
	Kernel-5_35-4_79_2_98_2_22:4.1
	Kernel-5_35-4_79_2_109:4.1
	Kernel-5_35-4_79_2_98_2_21:4.1
	Kernel-5_35-4_79_2_98_2_20:4.1
	Kernel-5_35-4_79_2_108:4.1
	Kernel-5_35-4_79_2_107:4.1
	Kernel-5_35-4_79_2_98_2_19:4.1
	Kernel-5_35-4_79_2_98_2_18:4.1
	Kernel-5_35-4_79_2_98_2_17:4.1
	Kernel-5_35-4_79_2_98_2_16:4.1
	Kernel-5_35-4_79_2_98_2_15:4.1
	Kernel-5_35-4_79_2_106:4.1
	Kernel-5_35-4_79_2_105:4.1
	Kernel-5_35-4_79_2_104:4.1
	Kernel-5_35-4_79_2_98_2_14:4.1
	Kernel-5_35-4_79_2_98_2_13:4.1
	Kernel-5_35-4_79_2_98_2_12:4.1
	Kernel-5_35-4_79_2_98_2_11:4.1
	Kernel-5_35-4_79_2_98_2_10:4.1
	Kernel-5_35-4_79_2_98_2_9:4.1
	Kernel-5_35-4_79_2_103:4.1
	Kernel-5_35-4_79_2_102:4.1
	Kernel-5_35-4_79_2_98_2_8:4.1
	Kernel-5_35-4_79_2_98_2_7:4.1
	Kernel-5_35-4_79_2_98_2_6:4.1
	Kernel-5_35-4_79_2_98_2_5:4.1
	Kernel-5_35-4_79_2_98_2_4:4.1
	Kernel-5_35-4_79_2_101:4.1
	Kernel-5_35-4_79_2_100:4.1
	Kernel-5_35-4_79_2_99:4.1
	Kernel-5_35-4_79_2_98_2_3:4.1
	Kernel-5_35-4_79_2_98_2_2:4.1
	Kernel-5_35-4_79_2_98_2_1:4.1
	Cortex:4.1.0.2
	Cortex_bp:4.1
	Kernel-5_35-4_79_2_98:4.1
	Kernel-5_35-4_79_2_97:4.1
	Kernel-5_35-4_79_2_96:4.1
	Kernel-5_35-4_79_2_95:4.1
	Kernel-5_35-4_79_2_94:4.1
	Kernel-5_35-4_79_2_93:4.1
	Kernel-5_35-4_79_2_92:4.1
	Kernel-5_35-4_79_2_91:4.1
	Kernel-5_35-4_79_2_90:4.1
	Kernel-5_35-4_79_2_89:4.1
	Kernel-5_35-4_79_2_88:4.1
	Kernel-5_35-4_79_2_87:4.1
	Kernel-5_35-4_79_2_86:4.1
	Kernel-5_35-4_79_2_85:4.1
	Kernel-5_35-4_79_2_84:4.1
	Kernel-5_35-4_79_2_83:4.1
	Kernel-5_35-4_79_2_82:4.1
	Kernel-5_35-4_79_2_81:4.1
	Kernel-5_35-4_79_2_80:4.1
	Kernel-5_35-4_79_2_79:4.1
	Kernel-5_35-4_79_2_78:4.1
	Kernel-5_35-4_79_2_77:4.1
	RO_5_07:4.1
	Kernel-5_35-4_79_2_76:4.1
	Kernel-5_35-4_79_2_75:4.1
	Kernel-5_35-4_79_2_74:4.1
	Kernel-5_35-4_79_2_73:4.1
	Kernel-5_35-4_79_2_72:4.1
	Kernel-5_35-4_79_2_71:4.1
	Kernel-5_35-4_79_2_70:4.1
	Kernel-5_35-4_79_2_69:4.1
	Kernel-5_35-4_79_2_68:4.1
	Kernel-5_35-4_79_2_67:4.1
	Kernel-5_35-4_79_2_66:4.1
	Kernel-5_35-4_79_2_65:4.1
	Kernel-5_35-4_79_2_64:4.1
	Kernel-5_35-4_79_2_63:4.1
	Kernel-5_35-4_79_2_62:4.1
	Kernel-5_35-4_79_2_61:4.1
	Kernel-5_35-4_79_2_59:4.1
	Kernel-5_35-4_79_2_58:4.1
	Kernel-5_35-4_79_2_57:4.1
	Kernel-5_35-4_79_2_56:4.1
	Kernel-5_35-4_79_2_55:4.1
	Kernel-5_35-4_79_2_54:4.1
	Kernel-5_35-4_79_2_53:4.1
	Kernel-5_35-4_79_2_52:4.1
	Kernel-5_35-4_79_2_51:4.1
	Kernel-5_35-4_79_2_50:4.1
	Kernel-5_35-4_79_2_49:4.1
	Kernel-5_35-4_79_2_48:4.1
	Kernel-5_47:4.1
	Kernel-5_46-4_90_2_1:4.1
	nbingham_Kernel_FastNC_dev_bp:4.1
	nbingham_Kernel_FastNC_dev:4.1.0.16
	Kernel-5_46:4.1
	Kernel-5_45:4.1
	Kernel-5_35-4_79_2_47:4.1
	Kernel-5_35-4_79_2_46:4.1
	Kernel-5_35-4_79_2_45:4.1
	Kernel-5_35-4_79_2_44:4.1
	Kernel-5_35-4_79_2_25_2_2:4.1
	Kernel-5_35-4_79_2_43:4.1
	Kernel-5_35-4_79_2_42:4.1
	Kernel-5_35-4_79_2_41:4.1
	Kernel-5_35-4_79_2_40:4.1
	Kernel-5_35-4_79_2_39:4.1
	Kernel-5_35-4_79_2_38:4.1
	Kernel-5_35-4_79_2_37:4.1
	Kernel-5_35-4_79_2_36:4.1
	Kernel-5_35-4_79_2_35:4.1
	Kernel-5_35-4_79_2_34:4.1
	Kernel-5_35-4_79_2_33:4.1
	Kernel-5_35-4_79_2_32:4.1
	Kernel-5_44:4.1
	Kernel-5_35-4_79_2_25_2_1:4.1
	Kernel-5_43:4.1
	Kernel-5_35-4_79_2_31:4.1
	Kernel-5_35-4_79_2_30:4.1
	Kernel-5_35-4_79_2_29:4.1
	Kernel-5_35-4_79_2_28:4.1
	Kernel-5_35-4_79_2_27:4.1
	Kernel-5_35-4_79_2_26:4.1
	Kernel-5_42:4.1
	Kernel-5_41:4.1
	Kernel-5_40:4.1
	Kernel-5_35-4_79_2_25:4.1
	Kernel-5_35-4_79_2_24:4.1
	Kernel-5_35-4_79_2_23:4.1
	Kernel-5_35-4_79_2_22:4.1
	Kernel-5_35-4_79_2_21:4.1
	Kernel-5_35-4_79_2_20:4.1
	Kernel-5_35-4_79_2_19:4.1
	Kernel-5_35-4_79_2_18:4.1
	Kernel-5_35-4_79_2_17:4.1
	Kernel-5_35-4_79_2_16:4.1
	Kernel-5_35-4_79_2_15:4.1
	Kernel-5_35-4_79_2_14:4.1
	Kernel-5_39:4.1
	Kernel-5_13-4_52_2_1:4.1
	Bethany:4.1.0.12
	Kernel-5_38:4.1
	Kernel-5_35-4_79_2_13:4.1
	Kernel-5_35-4_79_2_12:4.1
	Kernel-5_35-4_79_2_11:4.1
	Kernel-5_37:4.1
	Kernel-5_35-4_79_2_10:4.1
	Kernel-5_35-4_79_2_9:4.1
	Kernel-5_36:4.1
	Kernel-5_35-4_79_2_8:4.1
	Kernel-5_35-4_79_2_7:4.1
	Kernel-5_35-4_79_2_6:4.1
	Kernel-5_35-4_79_2_5:4.1
	Kernel-5_35-4_79_2_4:4.1
	Kernel-5_35-4_79_2_3:4.1
	Kernel-5_35-4_79_2_2:4.1
	dellis_autobuild_BaseSW:4.1
	Kernel-5_35-4_79_2_1:4.1
	HAL:4.1.0.10
	Kernel-5_35:4.1
	Kernel-5_34:4.1
	Kernel-5_33:4.1
	Kernel-5_32:4.1
	Kernel-5_31:4.1
	Kernel-5_30:4.1
	Kernel-5_29:4.1
	Kernel-5_28:4.1
	Kernel-5_27:4.1
	Kernel-5_26:4.1
	Kernel-5_25:4.1
	Kernel-5_24:4.1
	Kernel-5_23:4.1
	Kernel-5_22:4.1
	sbrodie_sedwards_16Mar2000:4.1
	Kernel-5_21:4.1
	Kernel-5_20:4.1
	Kernel-5_19:4.1
	Kernel-5_18:4.1
	Kernel-5_17:4.1
	Kernel-5_16:4.1
	Kernel-5_15:4.1
	Kernel-5_14:4.1
	Kernel-5_13:4.1
	Kernel-5_12:4.1
	Kernel-5_11:4.1
	Kernel-5_10:4.1
	Kernel-5_09:4.1
	Kernel-5_08:4.1
	Kernel-5_07:4.1
	Kernel-5_06:4.1
	Kernel-5_05:4.1
	Kernel-5_04:4.1
	Kernel-5_03:4.1
	Kernel-5_02:4.1
	Kernel-5_01:4.1
	Kernel-5_00:4.1
	Kernel-4_99:4.1
	Kernel-4_98:4.1
	Kernel-4_97:4.1
	Kernel-4_96:4.1
	Kernel-4_95:4.1
	Kernel-4_94:4.1
	Kernel-4_93:4.1
	Kernel-4_92:4.1
	Kernel-4_91:4.1
	Kernel-4_90:4.1
	dcotton_autobuild_BaseSW:4.1
	Kernel-4_89:4.1
	Kernel-4_88:4.1
	Kernel-4_87:4.1
	Kernel-4_86:4.1
	Kernel-4_85:4.1
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.1
	Kernel-4_84:4.1
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.1
	Ursula_RiscPC_bp:4.1
	Kernel-4_83:4.1
	Kernel-4_82:4.1
	Kernel-4_81:4.1
	Kernel-4_80:4.1
	Kernel-4_79:4.1
	Kernel-4_78:4.1
	Kernel-4_77:4.1
	Kernel-4_76:4.1
	Kernel-4_75:4.1
	Kernel-4_74:4.1
	Kernel-4_73:4.1
	Kernel-4_72:4.1
	Kernel-4_71:4.1
	Kernel-4_70:4.1
	Kernel-4_69:4.1
	Kernel-4_68:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	Kernel-4_63-1_1_2_5:4.1.7.1
	Kernel-4_63-1_1_2_4:4.1.7.1
	Kernel-4_67:4.1
	Kernel-4_66:4.1
	Kernel-4_63-1_1_2_3:4.1.7.1
	Kernel-4_65:4.1
	Ursula_merge:4.1
	Kernel-4_64:4.1
	mstphens_Kernel-3_81:4.1
	Kernel-4_63-1_1_2_2:4.1.7.1
	nicke_Kernel_4_62:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	nturton_v459:4.1.7.1
	nturton_v460:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	mstphens_Kernel-3_80:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	afrost_Boca-1_2-Beta:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.4
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2016.06.30.20.59.33;	author jlee;	state dead;
branches;
next	4.2;
commitid	skOEjp3ipLHx6xcz;

4.2
date	2016.06.30.20.07.39;	author jlee;	state Exp;
branches;
next	4.1;
commitid	IWoXxARWeuLDOwcz;

4.1
date	96.11.05.09.40.54;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.10.1;
next	;

4.1.1.1
date	96.11.05.09.40.54;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.59.28;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.09.56;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.02.56;	author nturton;	state Exp;
branches;
next	;

4.1.10.1
date	2013.08.06.22.42.59;	author jlee;	state Exp;
branches;
next	;
commitid	TOIaeUf2Q4rBIr0x;


desc
@@


4.3
log
@Delete lots of old switches
Detail:
  This change gets rid of the following switches from the source (picking appropriate code paths for a 32bit HAL build):
  * FixCallBacks
  * UseProcessTransfer
  * CanLiveOnROMCard
  * BleedinDaveBell
  * NewStyleEcfs
  * DoVdu23_0_12
  * LCDPowerCtrl
  * HostVdu
  * Print
  * EmulatorSupport
  * TubeInfo
  * AddTubeBashers
  * TubeChar, TubeString, TubeDumpNoStack, TubeNewlNoStack macros
  * FIQDebug
  * VCOstartfix
  * AssemblingArthur (n.b. still defined for safety with anything in Hdr: which uses it, but not used explicitly by the kernel)
  * MouseBufferFix
  * LCDInvert
  * LCDSupport
  * DoInitialiseMode
  * Interruptible32bitModes
  * MouseBufferManager
  * StrongARM (new CacheCleanerHack and InterruptDelay switches added to hdr/Options to cover some functionality that StrongARM previously covered)
  * SAcleanflushbroken
  * StrongARM_POST
  * IrqsInClaimRelease
  * CheckProtectionLink
  * GSWorkspaceInKernelBuffers
  * EarlierReentrancyInDAShrink
  * LongCommandLines
  * ECC
  * NoSPSRcorruption
  * RMTidyDoesNowt
  * RogerEXEY
  * StorkPowerSave
  * DebugForcedReset
  * AssembleKEYV
  * AssemblePointerV
  * ProcessorVectors
  * Keyboard_Type
  Assorted old files have also been deleted.
Admin:
  Identical binary to previous revision for IOMD & Raspberry Pi builds


Version 5.51. Tagged as 'Kernel-5_51'
@
text
@; > NewModes.PSSrc
; 08-Nov-89

        GET     &.Hdr.ListOpts
        GET     &.Hdr.Macros
        GET     &.Hdr.System
        GET     &.Hdr.NewSpace
        GET     &.Hdr.ModHand
        GET     &.Hdr.Services
        GET     &.Hdr.Proc
        GET     &.Hdr.File
        GET     &.Hdr.NewErrors
        GET     &.Hdr.VduExt
        GET     &.Hdr.Debug
        GET     &.Hdr.CMOS

        LEADR   Module_LoadAddr

        GBLL    Debug
Debug   SETL    {FALSE}

        GBLL    Module
Module  SETL    {TRUE}         ; Really !

TAB     *       9
LF      *       10
FF      *       12
CR      *       13

MonitorType_Normal * 0
MonitorType_MultiSync * 1
MonitorType_HiResMono * 2
MonitorType_VGA * 3
MonitorType_DontCare * -1

Normal          *       1 :SHL: MonitorType_Normal
MultiSync       *       1 :SHL: MonitorType_MultiSync
HiResMono       *       1 :SHL: MonitorType_HiResMono
VGA             *       1 :SHL: MonitorType_VGA

ScreenEndAdr    *       &02000000
Vinit           *       &03600000
Interlace       *       &40

        MACRO
        NewMode $modeno, $monitors, $vidclist, $wslist
        &       $modeno
        &       $monitors
99
        &       ($vidclist)-%BT99
        &       ($wslist)-%BT99
        MEND

; Module workspace allocation

        ^ 0, R12

ModeExt_WorkspaceSize * :INDEX: @@

; **************** Module code starts here **********************

Module_BaseAddr

        DCD     0
        DCD     ModeExt_Init    -Module_BaseAddr
        DCD     ModeExt_Die     -Module_BaseAddr
        DCD     ModeExt_Service -Module_BaseAddr
        DCD     ModeExt_Title   -Module_BaseAddr
        DCD     ModeExt_HelpStr -Module_BaseAddr
        DCD     ModeExt_HC_Table-Module_BaseAddr

ModeExt_Title
        =       "NewModes", 0

ModeExt_HelpStr
        =       "NewModes"
        =       TAB
        =       "1.3 (08 Nov 1989) test Multisync Modes", 0
        ALIGN

; *****************************************************************************

ModeExt_HC_Table * Module_BaseAddr

; *****************************************************************************
;
;       ModeExt_Init - Initialisation entry point
;

ModeExt_Init ENTRY

        MOV     R0, #EventV
        ADRL    R1, EventRoutine
        MOV     R2, R12
        SWI     XOS_Claim
        MOVVC   R0, #14
        MOVVC   R1, #Event_VSync
        SWIVC   XOS_Byte
        EXIT

; *****************************************************************************
;
;       ModeExt_Die - Die entry
;

ModeExt_Die ENTRY

        MOV     R0, #13
        MOV     R1, #Event_VSync
        SWI     XOS_Byte
        MOV     R0, #EventV
        ADRL    R1, EventRoutine
        MOV     R2, R12
        SWI     XOS_Release
        EXITS

; *****************************************************************************
;
;       ModeExt_Service - Main entry point for services
;
; in:   R1 = service reason code
;

ModeExt_Service ENTRY
        TEQ     R1, #Service_ModeExtension
        TEQNE   R1, #Service_PreModeChange
        TEQNE   R1, #Service_ModeChange
        TEQNE   R1, #Service_Reset
        TEQNE   R1, #Service_ModeTranslation
        EXIT    NE

        TEQ     R1, #Service_PreModeChange
        MOVEQ   R14, #0                 ; zero the word
        STREQ   R14, [R12]
        EXIT    EQ

        TEQ     R1, #Service_ModeChange
        BEQ     ModeChangeService

        TEQ     R1, #Service_Reset
        BEQ     ResetCode

        TEQ     R1, #Service_ModeTranslation
        BEQ     ModeTranslation

        [ Debug
        DREG    R2, "Mode = "
        DREG    R3, "Monitor type = "
        ]

        Push    "R5-R8"

        ADR     R5, NewModesList-8
        MOV     R8, #1
10
        ADD     R5, R5, #8              ; skip VidC, WS
        LDMIA   R5!, {R6, R7}           ; R6 = mode, R7 = OK monitor types
        CMP     R6, #-1
        Pull    "R5-R8, PC", EQ         ; mode not in list, exit
        TEQ     R2, R6                  ; if not this mode
        BNE     %BT10                   ; then loop
        CMP     R3, #MonitorType_DontCare ; if any monitor type
        BEQ     %FT20                   ; then found one
        TST     R7, R8, LSL R3          ; else if not appropriate monitor
        BEQ     %BT10                   ; then loop
20
        LDMIA   R5, {R3, R4}            ; load offsets to VidCList, WSList
        ADD     R3, R3, R5              ; convert to addresses
        ADD     R4, R4, R5              ; convert to addresses
        MOV     R1, #0                  ; claim service
        Pull    "R5-R8, PC"

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

NewModesList

        NewMode  0,  MultiSync, Multi100VIDCList, Multi100WSList           ; rshifted Mode 0
        NewMode  1,  MultiSync, Multi101VIDCList, Multi101WSList           ; rshifted Mode 1
        NewMode  2,  MultiSync, Multi102VIDCList, Multi102WSList           ; rshifted Mode 2
        NewMode  3,  MultiSync, Multi103VIDCList, Multi103WSList           ; rshifted Mode 3
        NewMode  4,  MultiSync, Multi104VIDCList, Multi104WSList           ; rshifted Mode 4
        NewMode  5,  MultiSync, Multi105VIDCList, Multi105WSList           ; rshifted Mode 5
        NewMode  6,  MultiSync, Multi106VIDCList, Multi106WSList           ; rshifted Mode 6
        NewMode  7,  MultiSync, Multi107VIDCList, Multi107WSList           ; rshifted Mode 7
        NewMode  8,  MultiSync, Multi108VIDCList, Multi108WSList           ; rshifted Mode 8
        NewMode  9,  MultiSync, Multi109VIDCList, Multi109WSList           ; rshifted Mode 9
        NewMode 10,  MultiSync, Multi110VIDCList, Multi110WSList           ; rshifted Mode 10
        NewMode 11,  MultiSync, Multi111VIDCList, Multi111WSList           ; rshifted Mode 11
        NewMode 12,  MultiSync, Multi112VIDCList, Multi112WSList           ; rshifted Mode 12
        NewMode 13,  MultiSync, Multi113VIDCList, Multi113WSList           ; rshifted Mode 13
        NewMode 14,  MultiSync, Multi114VIDCList, Multi114WSList           ; rshifted Mode 14
        NewMode 15,  MultiSync, Multi115VIDCList, Multi115WSList           ; rshifted Mode 15
        NewMode 16,  MultiSync, Multi116VIDCList, Multi116WSList           ; rshifted Mode 16
        NewMode 17,  MultiSync, Multi117VIDCList, Multi117WSList           ; rshifted Mode 17
        NewMode 18,  MultiSync, Multi118VIDCList, Multi118WSList           ; rshifted Mode 18
        NewMode 19,  MultiSync, Multi119VIDCList, Multi119WSList           ; rshifted Mode 19
        NewMode 20,  MultiSync, Multi120VIDCList, Multi120WSList           ; rshifted Mode 20
        NewMode 21,  MultiSync, Multi121VIDCList, Multi121WSList           ; rshifted Mode 21

        NewMode 24,  MultiSync, Multi124VIDCList, Multi124WSList           ; rshifted Mode 24

        NewMode 25,  VGA :OR: MultiSync, VGA1VIDCList, VGA1WSList2         ; VGA 1bp 640x480
        NewMode 26,  VGA :OR: MultiSync, VGA2VIDCList, VGA2WSList2         ; VGA 2bp 640x480
        NewMode 27,  VGA :OR: MultiSync, VGA4VIDCList, VGA4WSList2         ; VGA 4bp 640x480
        NewMode 28,  VGA :OR: MultiSync, VGA8VIDCList, VGA8WSList2         ; VGA 8bp 640x480

        NewMode 31, MultiSync, sVGA4_VIDCList, sVGA4_WSList                ; super VGA 4bp 800x600 
        NewMode 32, MultiSync, sVGA8_VIDCList, sVGA8_WSList                ; super VGA 8bp 800x600

        NewMode 33, Normal :OR: MultiSync, Mode33VIDCList, Mode33WSList    ; overscan 768x288 
        NewMode 34, Normal :OR: MultiSync, Mode34VIDCList, Mode34WSList    ; overscan 832x288

        &       -1, 0

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; general purpose mode macros

ClockShift * 9
SyncShift * 11

; pixel rate specifiers

CRPix_24000 * 3 :OR: (0 :SHL: ClockShift)
CRPix_16000 * 2 :OR: (0 :SHL: ClockShift)
CRPix_12000 * 1 :OR: (0 :SHL: ClockShift)
CRPix_8000  * 0 :OR: (0 :SHL: ClockShift)
CRPix_25175 * 3 :OR: (1 :SHL: ClockShift)
CRPix_36000 * 3 :OR: (2 :SHL: ClockShift)

        MACRO
        VIDC_List $lbpp,$hsync,$hbpch,$hlbdr,$hdisp,$hrbdr,$hfpch, $vsync,$vbpch,$vlbdr,$vdisp,$vrbdr,$vfpch,$pixrate,$sp
        LCLA    sub
        LCLA    syncpol
 [ $lbpp = 3
sub     SETA    5
 ]
 [ $lbpp = 2
sub     SETA    7
 ]
 [ $lbpp = 1
sub     SETA    11
 ]
 [ $lbpp = 0
sub     SETA    19
 ]
 [ "$sp"=""
syncpol SETA    0 :SHL: SyncShift               ; normal sync polarity
 |
        ASSERT $sp<=3
syncpol SETA    $sp :SHL: SyncShift
 ]
        ASSERT  ($hsync :AND: 1)=0
        ASSERT  ($hbpch :AND: 1)=1
        ASSERT  ($hlbdr :AND: 1)=0
        ASSERT  ($hdisp :AND: 1)=0
        ASSERT  ($hrbdr :AND: 1)=0
        ASSERT  ($hfpch :AND: 1)=1
 [ (($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr+$hfpch) :AND: 3)<>0
        ! 0, "Warning: mode unsuitable for interlaced use"
 ]
; Horizontal
        &       (&80:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr+$hfpch -2  )/2) :SHL: 14) ; HCR
        &       (&84:SHL:24) :OR: ((($hsync                                    -2  )/2) :SHL: 14) ; HSWR
        &       (&88:SHL:24) :OR: ((($hsync+$hbpch                             -1  )/2) :SHL: 14) ; HBSR
        &       (&8C:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr                      -sub)/2) :SHL: 14) ; HDSR
        &       (&90:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr+$hdisp               -sub)/2) :SHL: 14) ; HDER
        &       (&94:SHL:24) :OR: ((($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr        -1  )/2) :SHL: 14) ; HBER
        &       (&9C:SHL:24) :OR: (((($hsync+$hbpch+$hlbdr+$hdisp+$hrbdr+$hfpch-2)/2+1)/2):SHL:14); HIR
; Vertical
        &       (&A0:SHL:24) :OR: (($vsync+$vbpch+$vlbdr+$vdisp+$vrbdr+$vfpch    -1)    :SHL: 14) ; VCR
        &       (&A4:SHL:24) :OR: (($vsync                                       -1)    :SHL: 14) ; VSWR
        &       (&A8:SHL:24) :OR: (($vsync+$vbpch                                -1)    :SHL: 14) ; VBSR
        &       (&AC:SHL:24) :OR: (($vsync+$vbpch+$vlbdr                         -1)    :SHL: 14) ; VDSR
        &       (&B0:SHL:24) :OR: (($vsync+$vbpch+$vlbdr+$vdisp                  -1)    :SHL: 14) ; VDER
        &       (&B4:SHL:24) :OR: (($vsync+$vbpch+$vlbdr+$vdisp+$vrbdr           -1)    :SHL: 14) ; VBER
; Control Register
        &       (&E0:SHL:24) :OR: (CRPix_$pixrate) :OR: ($lbpp :SHL: 2) :OR: syncpol
        MEND

        MACRO
        VIDC_WS  $bpp,$hpix,$vpix,$multx,$multy, $dht

        &       VduExt_XWindLimit, $hpix-1
        &       VduExt_ScrRCol, ($hpix/8)-1
        &       VduExt_LineLength, $hpix*$bpp/8
 [ "$dht" <> ""
        &       VduExt_ModeFlags, ModeFlag_DoubleVertical
        &       VduExt_ScrBRow, ($vpix/16)-1
 |
        &       VduExt_ScrBRow, ($vpix/8)-1
 ]
        &       VduExt_YWindLimit, $vpix-1
        &       VduExt_ScreenSize, $hpix*$vpix*$bpp/8

        &       VduExt_XEigFactor, $multx
        &       VduExt_YEigFactor, $multy
        MEND

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

;  Start of multi sync archy modes

; Mode 0, multiscan mode 0
Multi100VIDCList
        &         0
        &         0
        VIDC_List 0,72,63,88,640,88,73, 3,16,17,256,17,3,16000,0
        &        -1
Multi100WSList
        &         0
        &         0
        &        -1

; Mode 1, multiscan mode 1
Multi101VIDCList
        &         0
        &         1
        VIDC_List 1,36,33,44,320,44,35, 3,16,17,256,17,3,8000,0
        &        -1
Multi101WSList
        &         0
        &         1
        &        -1

; Mode 2, multiscan mode 2
Multi102VIDCList
        &         0
        &         2
        VIDC_List 2,36,33,44,320,44,35, 3,16,17,256,17,3,8000,0
        &        -1
Multi102WSList
        &         0
        &         2
        &        -1

; Mode 3, multiscan mode 3
Multi103VIDCList
        &         0
        &         3
        VIDC_List 1,72,63,88,640,88,73, 3,16,20,250,20,3,16000,0
        &        -1
Multi103WSList
        &         0
        &         3
        &        -1

; Mode 4, multiscan mode 4
Multi104VIDCList
        &         0
        &         4
        VIDC_List 0,72,63,88,640,88,73, 3,16,17,256,17,3,16000,0
        &        -1
Multi104WSList
        &         0
        &         4
        &        -1

; Mode 5, multiscan mode 5
Multi105VIDCList
        &         0
        &         5
        VIDC_List 1,36,51,24,320,24,57, 3,16,17,256,17,3,8000,0
        &        -1
Multi105WSList
        &         0
        &         5
        &        -1

; Mode 6, multiscan mode 6
Multi106VIDCList
        &         0
        &         6
        VIDC_List 1,36,33,44,320,44,35, 3,16,20,250,20,3,8000,0
        &        -1
Multi106WSList
        &         0
        &         6
        &        -1

; Mode 7, multiscan mode 7
Multi107VIDCList
        &         0
        &         7
        VIDC_List 2,36,31,44,320,44,37, 3,18,22,250,16,3,8000,0
        &        -1
Multi107WSList
        &         0
        &         7
        &        -1

; Mode 8, multiscan mode 8
Multi108VIDCList
        &         0
        &         8
        VIDC_List 1,72,63,88,640,88,73, 3,16,17,256,17,3,16000,0
        &        -1
Multi108WSList
        &         0
        &         8
        &        -1

; Mode 9, multiscan mode 9
Multi109VIDCList
        &         0
        &         9
        VIDC_List 2,36,33,44,320,44,35, 3,16,17,256,17,3,8000,0
        &        -1
Multi109WSList
        &         0
        &         9
        &        -1

; Mode 10, multiscan mode 10
Multi110VIDCList
        &         0
        &         10
        VIDC_List 3,36,33,44,320,44,35, 3,16,17,256,17,3,8000,0
        &        -1
Multi110WSList
        &         0
        &         10
        &        -1

; Mode 11, multiscan mode 11
Multi111VIDCList
        &         0
        &         11
        VIDC_List 1,72,63,88,640,88,73, 3,16,20,250,20,3,16000,0
        &        -1
Multi111WSList
        &         0
        &         11
        &        -1

; Mode 12, multiscan mode 12
Multi112VIDCList
        &         0
        &         12
        VIDC_List 2,72,63,88,640,88,73, 3,16,17,256,17,3,16000,0
        &        -1
Multi112WSList
        &         0
        &         12
        &        -1

; Mode 13, multiscan mode 13
Multi113VIDCList
        &         0
        &         13
        VIDC_List 3,36,33,44,320,44,35, 3,16,17,256,17,3,8000,0
        &        -1
Multi113WSList
        &         0
        &         13
        &        -1

; Mode 14, multiscan mode 14
Multi114VIDCList
        &         0
        &         14
        VIDC_List 2,72,63,88,640,88,73, 3,16,20,250,20,3,16000,0
        &        -1
Multi114WSList
        &         0
        &         14
        &        -1

; Mode 15, multiscan mode 15
Multi115VIDCList
        &         0
        &         15
        VIDC_List 3,72,63,88,640,88,73, 3,16,17,256,17,3,16000,0
        &        -1
Multi115WSList
        &         0
        &         15
        &        -1

; Mode 16, multiscan mode 16
Multi116VIDCList
        &         0
        &         16
        VIDC_List 2,112,47,132,1056,132,57, 3,16,17,256,17,3,24000,0
;
; tv blanking!      112,139, 76,1056,114, 39,   ,3,18,16,256,16,3
;                  4u67,5u79,3u2,44u,4u7,1u62,  21r           3r
;         should be  =10u4              =1u65   22r           3r(2r5) 
;philips needs bprch > 57 or goes dark (sync at 112)
; can inc sync to 10u0, more and screen starts to wobble
        &        -1
Multi116WSList
        &         0
        &         16
        &        -1

; Mode 17, multiscan mode 17
Multi117VIDCList
        &         0
        &         17
        VIDC_List 2,112,47,132,1056,132,57, 3,16,20,250,20,3,24000,0
        &        -1
Multi117WSList
        &         0
        &         17
        &        -1

; Mode 18, multiscan mode 18
Multi118VIDCList
        &         0
        &         18
        VIDC_List 0,56,111,2,640,2,85, 3,17,1,512,1,0,24000,0
        &        -1
Multi118WSList
        &         0
        &         18
        &        -1

; Mode 19, multiscan mode 19
Multi119VIDCList
        &         0
        &         19
        VIDC_List 1,56,111,2,640,2,85, 3,17,1,512,1,0,24000,0
        &        -1
Multi119WSList
        &         0
        &         19
        &        -1

; Mode 20, multiscan mode 20
Multi120VIDCList
        &         0
        &         20
        VIDC_List 2,56,111,2,640,2,85, 3,17,1,512,1,0,24000,0
        &        -1
Multi120WSList
        &         0
        &         20
        &        -1

; Mode 21, multiscan mode 21
Multi121VIDCList
        &         0
        &         21
        VIDC_List 3,56,111,2,640,2,85, 3,17,1,512,1,0,24000,0
        &        -1
Multi121WSList
        &         0
        &         21
        &        -1

; Mode 24, multiscan mode 24
Multi124VIDCList
        &         0
        &         24
        VIDC_List 3,112,47,132,1056,132,57, 3,16,17,256,17,3,24000,0
        &        -1
Multi124WSList
        &         0
        &         24
        &        -1


; MODE 25 (VGA or multisync monitors, 640x480)
VGA1VIDCList
        &         0
        &         18
        VIDC_List 0,96,47,0,640,0,15, 2,32,0,480,0,11,25175,3
        &        -1
VGA1WSList2
        &         0
        &         18
        &        -1

; MODE 26 (VGA or multisync monitors, 640x480)
VGA2VIDCList
        &         0
        &         19
        VIDC_List 1,96,47,0,640,0,15, 2,32,0,480,0,11,25175,3
        &        -1
VGA2WSList2
        &         0
        &         19
        &        -1

; MODE 27 (VGA or multisync monitors,  640x480)
VGA4VIDCList
        &         0
        &         20
        VIDC_List 2,96,47,0,640,0,15, 2,32,0,480,0,11,25175,3
        &        -1
VGA4WSList2
        &         0
        &         20
        &        -1

; MODE 28 (VGA or multisync monitors,  640x480)
VGA8VIDCList
        &         0
        &         21
        VIDC_List 3,96,47,0,640,0,15, 2,32,0,480,0,11,25175,3
        &        -1
VGA8WSList2
        &         0
        &         21
        &        -1

; MODE 31 (800x600 by 4 bits per pixel)
sVGA4_VIDCList
        &         0
        &         20
        VIDC_List 2,72,129,0,800,0,23, 2,22,0,600,0,1,36000,0
        &        -1
sVGA4_WSList
        &       0
        &       20
        VIDC_WS 4,800,600,1,1
        &      -1

; MODE 32 (800x600 by 8 bits per pixel)
sVGA8_VIDCList
        &         0
        &         24
        VIDC_List 3,72,129,0,800,0,23, 2,22,0,600,0,1,36000,0
        &        -1
sVGA8_WSList
        &       0
        &       24
        VIDC_WS 8,800,600,1,1
        &      -1

; MODE 33 (768x288 by 8 bits per pixel)
Mode33VIDCList

        &         0
        &         15
        VIDC_List 3,74,127,0,768,0,55, 3,18,0,288,0,3,16000,0
        &        -1
Mode33WSList
        &         0
        &         15
        VIDC_WS 8,768,288,1,2
        &        -1

; MODE 34 (832x288 by 8 bits per pixel)
Mode34VIDCList
        &         0
        &         15
        VIDC_List 3,74,87,0,832,0,31, 3,18,0,288,0,3,16000,0
        &        -1
Mode34WSList
        &        0
        &        15
        VIDC_WS  8,832,288,1,2
        &       -1

    [ Debug
    InsertDebugRoutines
    ]

; *****************************************************************************
;
;       Code to execute on reset
;
; in:   R14 already stacked
;

ResetCode ROUT
        Push    "R0-R6"
        BL      ModeExt_Init
        Pull    "R0-R6,PC"

; *****************************************************************************
;
;       EventRoutine - Routine called on Vsync
;

EventRoutine ROUT
        TEQ     R0, #Event_VSync
        MOVNE   PC, R14
        ENTRY   "R0-R6"
        LDR     R1, [R12]               ; load state flag, 0 => disabled
        RSBS    R1, R1, #0              ; change sign
        EXIT    EQ                      ; if zero then do nowt

        STR     R1, [R12]               ; store back
        VDWS    WsPtr
        LDR     R2, [WsPtr, #TotalScreenSize] ; needed later as well
        ADDMI   R1, R1, R2              ; if -ve then add TotalScreenSize

        STR     R1, [WsPtr, #TeletextOffset]

; now set VInit to this

        LDR     R0, [WsPtr, #DisplayStart]
        SUB     R0, R0, #ScreenEndAdr
        ADD     R0, R0, R2                      ; make start of screen 0
        ADD     R0, R0, R1                      ; add on teletext bank offset
        CMP     R0, R2                          ; if out of range
        SUBCS   R0, R0, R2                      ; then subtract total size
SetVinitPhys
        MOV     R1, #Vinit
        STR     R0, [WsPtr, #VinitCopy]
        MOV     R0, R0, LSR #4                  ; bottom 4 bits not valid
        ORR     R0, R1, R0, LSL #2              ; OR in at correct place
        STR     R0, [R0]                        ; any old data will do

        LDR     R0, [WsPtr, #VIDCControlCopy]
        ORR     R0, R0, #Interlace              ; turn interlace on
        STR     R0, [WsPtr, #VIDCControlCopy]
        MOV     R1, #VIDC
        STR     R0, [R1]

        EXIT

; *****************************************************************************

ModeChangeService
        Push    "R0-R6"
        MOV     R5, R12                 ; our workspace pointer
        VDWS    WsPtr
        MOV     R6, #0
        LDR     R0, [WsPtr, #DisplayModeNo]
        TEQ     R0, #18
        TEQNE   R0, #19
        TEQNE   R0, #20
        TEQNE   R0, #21
        TEQNE   R0, #26
        TEQNE   R0, #27
        BNE     %FT10
        MOV     R0, #&A1
        MOV     R1, #VduCMOS
        SWI     XOS_Byte
        ANDS    R2, R2, #MonitorTypeBits
        BNE     %FT10

        MOV     R0, #255
        STR     R0, [WsPtr, #DisplayYWindLimit]
        LDR     R0, [WsPtr, #YEigFactor]
        ADD     R0, R0, #1
        STR     R0, [WsPtr, #DisplayYEigFactor]
        LDR     R0, =541-6
        STR     R0, [WsPtr, #CursorFudgeFactor]

        LDR     R6, [WsPtr, #LineLength]
        MOV     R6, R6, LSR #1
        RSB     R6, R6, #0
10
        STR     R6, [R5]
        Pull    "R0-R6, PC"

; *****************************************************************************
;
;       ModeTranslation - Code to perform VGA mode number translation
;
; in:   R1 = Service_ModeTranslation
;       R2 = mode number
;       R3 = monitor type
;       return address stacked
;
; out:  R1 = 0 if claimed
;       R2 = substitute
;       R3 preserved

ModeTranslation ROUT
        TEQ     R3, #MonitorType_VGA
        Pull    PC, NE
        BIC     R1, R2, #&80    ; get rid of shadow bit
        CMP     R1, #32         ; if in range 32..39
        RSBCSS  R1, R1, #39
        BCS     %FT10           ; then don't modify

        [ {TRUE}
        MOV     R2, #0
        |
        Push    R0
        MOV     R0, R2
        MOV     R1, #9          ; log2bpp
        SWI     XOS_ReadModeVariable
        Pull    R0
        MOVVS   R2, #0          ; if error or invalid then use mode 32
        MOVCS   R2, #0
        CMP     R2, #4
        MOVCS   R2, #3
        ADD     R2, R2, #32
        ]
10
        MOV     R1, #0          ; claim service
        Pull    PC

        END

@


4.2
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@@


4.1
log
@Initial revision
@
text
@d287 1
a287 1
        &       VduExt_ModeFlags, Flag_DoubleVertical
@


4.1.10.1
log
@Add support for the new RISC OS 5 style sprite mode word. Add partial support for alpha channel sprite masks. Implement OS_ScreenMode reasons 13-15
Detail:
  ECFShift/ECFYOffset:
  - hdr/PublicWS - Add ECFShift and ECFYOffset to list of public exports (SpriteExtend was using hardcoded values). Rearrange exports so that VduWorkspace exports are now labelled as such.
  - hdr/KernelWS - Make sure ECFShift & ECFYOffset match their exported locations
  - hdr/OSRSI6, s/Middle - Add OS_ReadSysInfo 6 items 83 & 84, for reading ECFYOffset and ECFShift locations
  Mode flags/VDU variables:
  - Makefile - Add hdr/VduExt to the C header exports
  - hdr/VduExt - Get rid of NotRVVTBarWobblyBits macro and defined VDU variables manually so that Hdr2H will handle them. Begin replacing overly generic 'Flag_*' mode flag definitions with 'ModeFlag_*' instead. Define new flags as required by the new screen/sprite modes. Add OS_ScreenMode reason codes and mode selector format (from s.vdu.vdudecl)
  - NewModes/NEWF2, NewModes/OldPSSrc, NewModes/PSSrc, s.vdu.vdu23, s.vdu.vducursoft, s.vdu.vdudriver, s.vdu.vdugrafg, s.vdu.vdugrafj, s.vdu.vdugrafl, s.vdu.vdumodes, s.vdu.vdupal10, s.vdu.vdupal20, s.vdu.vdupalette, s.vdu.vdupalxx, s.vdu.vduwrch - Renaming Flag_* to ModeFlag_*
  - s.vdu.vdudecl - Remove OS_ScreenMode reason codes & mode selector format definitions; these are now in hdr/VduExt. Flag_* -> ModeFlag_* renaming.
  - s.vdu.vdupalxx - Apply a greyscale palette in PV_SetDefaultPalette if the greyscale mode flag is set
  New sprite types:
  - s.vdu.vdudriver - Extend GenerateModeSelectorVars to deal with the wide mask flag, 64K sprites, and the new RISC OS 5 sprite mode word format.
  - s.vdu.vdugrafdec - Store more information about the sprite in the SprReadNColour ... SprLog2BPC block.
  - s.vdu.vdugrafg - Update SpriteVecHandler to be able to detect whether RISC OS 5 format sprites are allowed palettes. Update SetupSprModeData to store the extra sprite info that's defined in vdugrafdec. Update PutSprite to fault any sprites with wide masks - SpriteExtend must be used for that (once implemented!)
  - s.vdu.vdugrafh - Update WritePixelColour to avoid temporary poking of NColour VDU variable for 8bpp sprites. Correctly replicate data when writing to RISC OS 5 format sprites. Update ReadPixelMask, WritePixelMask, SpriteMaskAddr, GetMaskspWidth to deal with wide masks. Delete obsolete bounce_new_format_masks routine.
  - s.vdu.vdugrafi - Comment updated to reflect new reality
  - s.vdu.vdugrafj - Get rid of unused code block in CreateHeader/PostCreateHeader. Update SanitizeSGetMode to generate RISC OS 5 style sprite mode words where applicable. Update DecideMaskSize to rely on GetMaskspWidth for calculating mask width.
  - s.vdu.vdugrafl - Update SwitchOutputToSprite/SwitchOutputToMask to deal with the new sprite formats. Allow PushModeInfoAnyMonitor to fail.
  - s.vdu.vduswis - Extended OS_ReadModeVariable to cope with new sprite types
  Misc:
  - s.vdu.vdudriver - Fixed bug with VIDCList copying where any -1 value in the structure would terminate the copy, instead of only -1 as a control item number
  - s.vdu.vduswis - Implemented OS_ScreenMode 13 (Mode string to specifier), 14 (mode specifier to string), and 15 (set mode by string). Mostly as per ROL's specs, but minus support for teletext attributes, and plus support for new RISC OS 5 attributes (L... layout specifier, 4096 & 24bpp packed modes, etc.)
  - s.vdu.vduwrch - Pick correct default text colours for the new modes
Admin:
  Tested on BB-xM
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 5.35, 4.79.2.194. Tagged as 'Kernel-5_35-4_79_2_194'
@
text
@d287 1
a287 1
        &       VduExt_ModeFlags, ModeFlag_DoubleVertical
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
