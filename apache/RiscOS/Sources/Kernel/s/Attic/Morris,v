head	4.3;
access;
symbols
	HAL_merge:4.2
	Kernel-5_48:4.2
	Kernel-5_35-4_79_2_327:4.2
	Kernel-5_35-4_79_2_326:4.2
	Kernel-5_35-4_79_2_325:4.2
	Kernel-5_35-4_79_2_324:4.2
	Kernel-5_35-4_79_2_323:4.2
	Kernel-5_35-4_79_2_322:4.2
	Kernel-5_35-4_79_2_321:4.2
	Kernel-5_35-4_79_2_320:4.2
	Kernel-5_35-4_79_2_319:4.2
	Kernel-5_35-4_79_2_318:4.2
	Kernel-5_35-4_79_2_317:4.2
	Kernel-5_35-4_79_2_316:4.2
	Kernel-5_35-4_79_2_315:4.2
	Kernel-5_35-4_79_2_314:4.2
	Kernel-5_35-4_79_2_313:4.2
	Kernel-5_35-4_79_2_312:4.2
	Kernel-5_35-4_79_2_311:4.2
	Kernel-5_35-4_79_2_310:4.2
	Kernel-5_35-4_79_2_309:4.2
	Kernel-5_35-4_79_2_308:4.2
	Kernel-5_35-4_79_2_307:4.2
	Kernel-5_35-4_79_2_306:4.2
	Kernel-5_35-4_79_2_305:4.2
	Kernel-5_35-4_79_2_304:4.2
	Kernel-5_35-4_79_2_303:4.2
	Kernel-5_35-4_79_2_302:4.2
	Kernel-5_35-4_79_2_301:4.2
	Kernel-5_35-4_79_2_300:4.2
	Kernel-5_35-4_79_2_299:4.2
	Kernel-5_35-4_79_2_298:4.2
	Kernel-5_35-4_79_2_297:4.2
	Kernel-5_35-4_79_2_296:4.2
	Kernel-5_35-4_79_2_295:4.2
	Kernel-5_35-4_79_2_294:4.2
	Kernel-5_35-4_79_2_293:4.2
	Kernel-5_35-4_79_2_292:4.2
	Kernel-5_35-4_79_2_291:4.2
	Kernel-5_35-4_79_2_290:4.2
	Kernel-5_35-4_79_2_289:4.2
	Kernel-5_35-4_79_2_288:4.2
	Kernel-5_35-4_79_2_287:4.2
	Kernel-5_35-4_79_2_286:4.2
	Kernel-5_35-4_79_2_285:4.2
	Kernel-5_35-4_79_2_284:4.2
	Kernel-5_35-4_79_2_283:4.2
	Kernel-5_35-4_79_2_282:4.2
	Kernel-5_35-4_79_2_281:4.2
	Kernel-5_35-4_79_2_280:4.2
	Kernel-5_35-4_79_2_279:4.2
	Kernel-5_35-4_79_2_278:4.2
	Kernel-5_35-4_79_2_277:4.2
	Kernel-5_35-4_79_2_276:4.2
	Kernel-5_35-4_79_2_275:4.2
	Kernel-5_35-4_79_2_274:4.2
	Kernel-5_35-4_79_2_273:4.2
	Kernel-5_35-4_79_2_272:4.2
	Kernel-5_35-4_79_2_271:4.2
	Kernel-5_35-4_79_2_270:4.2
	Kernel-5_35-4_79_2_269:4.2
	Kernel-5_35-4_79_2_268:4.2
	Kernel-5_35-4_79_2_267:4.2
	Kernel-5_35-4_79_2_266:4.2
	Kernel-5_35-4_79_2_265:4.2
	Kernel-5_35-4_79_2_264:4.2
	Kernel-5_35-4_79_2_263:4.2
	Kernel-5_35-4_79_2_262:4.2
	Kernel-5_35-4_79_2_261:4.2
	Kernel-5_35-4_79_2_260:4.2
	Kernel-5_35-4_79_2_259:4.2
	Kernel-5_35-4_79_2_258:4.2
	Kernel-5_35-4_79_2_257:4.2
	Kernel-5_35-4_79_2_256:4.2
	Kernel-5_35-4_79_2_255:4.2
	Kernel-5_35-4_79_2_254:4.2
	Kernel-5_35-4_79_2_253:4.2
	Kernel-5_35-4_79_2_252:4.2
	Kernel-5_35-4_79_2_251:4.2
	Kernel-5_35-4_79_2_250:4.2
	Kernel-5_35-4_79_2_249:4.2
	Kernel-5_35-4_79_2_248:4.2
	Kernel-5_35-4_79_2_247:4.2
	Kernel-5_35-4_79_2_246:4.2
	Kernel-5_35-4_79_2_245:4.2
	Kernel-5_35-4_79_2_244:4.2
	Kernel-5_35-4_79_2_243:4.2
	Kernel-5_35-4_79_2_242:4.2
	Kernel-5_35-4_79_2_241:4.2
	Kernel-5_35-4_79_2_240:4.2
	Kernel-5_35-4_79_2_239:4.2
	Kernel-5_35-4_79_2_238:4.2
	Kernel-5_35-4_79_2_237:4.2
	Kernel-5_35-4_79_2_236:4.2
	Kernel-5_35-4_79_2_235:4.2
	Kernel-5_35-4_79_2_234:4.2
	Kernel-5_35-4_79_2_233:4.2
	Kernel-5_35-4_79_2_232:4.2
	Kernel-5_35-4_79_2_231:4.2
	Kernel-5_35-4_79_2_230:4.2
	Kernel-5_35-4_79_2_229:4.2
	Kernel-5_35-4_79_2_228:4.2
	Kernel-5_35-4_79_2_227:4.2
	Kernel-5_35-4_79_2_226:4.2
	Kernel-5_35-4_79_2_225:4.2
	Kernel-5_35-4_79_2_224:4.2
	Kernel-5_35-4_79_2_223:4.2
	Kernel-5_35-4_79_2_222:4.2
	Kernel-5_35-4_79_2_221:4.2
	Kernel-5_35-4_79_2_220:4.2
	Kernel-5_35-4_79_2_219:4.2
	Kernel-5_35-4_79_2_218:4.2
	Kernel-5_35-4_79_2_217:4.2
	Kernel-5_35-4_79_2_216:4.2
	Kernel-5_35-4_79_2_215:4.2
	Kernel-5_35-4_79_2_214:4.2
	Kernel-5_35-4_79_2_213:4.2
	Kernel-5_35-4_79_2_212:4.2
	Kernel-5_35-4_79_2_211:4.2
	Kernel-5_35-4_79_2_210:4.2
	Kernel-5_35-4_79_2_209:4.2
	Kernel-5_35-4_79_2_208:4.2
	Kernel-5_35-4_79_2_207:4.2
	Kernel-5_35-4_79_2_206:4.2
	Kernel-5_35-4_79_2_205:4.2
	Kernel-5_35-4_79_2_204:4.2
	Kernel-5_35-4_79_2_203:4.2
	Kernel-5_35-4_79_2_202:4.2
	Kernel-5_35-4_79_2_201:4.2
	Kernel-5_35-4_79_2_200:4.2
	Kernel-5_35-4_79_2_199:4.2
	Kernel-5_35-4_79_2_198:4.2
	Kernel-5_35-4_79_2_197:4.2
	Kernel-5_35-4_79_2_196:4.2
	Kernel-5_35-4_79_2_195:4.2
	Kernel-5_35-4_79_2_194:4.2
	Kernel-5_35-4_79_2_193:4.2
	Kernel-5_35-4_79_2_192:4.2
	Kernel-5_35-4_79_2_191:4.2
	Kernel-5_35-4_79_2_190:4.2
	Kernel-5_35-4_79_2_189:4.2
	Kernel-5_35-4_79_2_188:4.2
	Kernel-5_35-4_79_2_187:4.2
	Kernel-5_35-4_79_2_186:4.2
	Kernel-5_35-4_79_2_185:4.2
	Kernel-5_35-4_79_2_184:4.2
	Kernel-5_35-4_79_2_183:4.2
	Kernel-5_35-4_79_2_182:4.2
	Kernel-5_35-4_79_2_181:4.2
	Kernel-5_35-4_79_2_180:4.2
	Kernel-5_35-4_79_2_179:4.2
	Kernel-5_35-4_79_2_178:4.2
	Kernel-5_35-4_79_2_177:4.2
	Kernel-5_35-4_79_2_176:4.2
	Kernel-5_35-4_79_2_175:4.2
	Kernel-5_35-4_79_2_174:4.2
	Kernel-5_35-4_79_2_173:4.2
	Kernel-5_35-4_79_2_172:4.2
	Kernel-5_35-4_79_2_171:4.2
	Kernel-5_35-4_79_2_170:4.2
	Kernel-5_35-4_79_2_169:4.2
	Kernel-5_35-4_79_2_168:4.2
	Kernel-5_35-4_79_2_167:4.2
	Kernel-5_35-4_79_2_166:4.2
	Kernel-5_35-4_79_2_165:4.2
	RPi_merge:4.2
	Kernel-5_35-4_79_2_147_2_23:4.2
	Kernel-5_35-4_79_2_147_2_22:4.2
	Kernel-5_35-4_79_2_147_2_21:4.2
	Kernel-5_35-4_79_2_147_2_20:4.2
	Kernel-5_35-4_79_2_147_2_19:4.2
	Kernel-5_35-4_79_2_147_2_18:4.2
	Kernel-5_35-4_79_2_164:4.2
	Kernel-5_35-4_79_2_163:4.2
	Kernel-5_35-4_79_2_147_2_17:4.2
	Kernel-5_35-4_79_2_147_2_16:4.2
	Kernel-5_35-4_79_2_147_2_15:4.2
	Kernel-5_35-4_79_2_162:4.2
	Kernel-5_35-4_79_2_161:4.2
	Kernel-5_35-4_79_2_147_2_14:4.2
	Kernel-5_35-4_79_2_147_2_13:4.2
	Kernel-5_35-4_79_2_160:4.2
	Kernel-5_35-4_79_2_159:4.2
	Kernel-5_35-4_79_2_158:4.2
	Kernel-5_35-4_79_2_157:4.2
	Kernel-5_35-4_79_2_156:4.2
	Kernel-5_35-4_79_2_147_2_12:4.2
	Kernel-5_35-4_79_2_147_2_11:4.2
	Kernel-5_35-4_79_2_155:4.2
	Kernel-5_35-4_79_2_147_2_10:4.2
	Kernel-5_35-4_79_2_154:4.2
	Kernel-5_35-4_79_2_153:4.2
	Kernel-5_35-4_79_2_147_2_9:4.2
	Kernel-5_35-4_79_2_152:4.2
	Kernel-5_35-4_79_2_151:4.2
	Kernel-5_35-4_79_2_147_2_8:4.2
	Kernel-5_35-4_79_2_147_2_7:4.2
	Kernel-5_35-4_79_2_150:4.2
	Kernel-5_35-4_79_2_147_2_6:4.2
	Kernel-5_35-4_79_2_147_2_5:4.2
	Kernel-5_35-4_79_2_149:4.2
	Kernel-5_35-4_79_2_147_2_4:4.2
	Kernel-5_35-4_79_2_147_2_3:4.2
	Kernel-5_35-4_79_2_148:4.2
	Kernel-5_35-4_79_2_147_2_2:4.2
	Kernel-5_35-4_79_2_147_2_1:4.2
	RPi:4.2.0.12
	RPi_bp:4.2
	Kernel-5_35-4_79_2_98_2_52_2_1:4.2
	alees_Kernel_dev:4.2.0.10
	alees_Kernel_dev_bp:4.2
	Kernel-5_35-4_79_2_147:4.2
	Kernel-5_35-4_79_2_146:4.2
	Kernel-5_35-4_79_2_145:4.2
	Kernel-5_35-4_79_2_144:4.2
	Kernel-5_35-4_79_2_143:4.2
	Kernel-5_35-4_79_2_142:4.2
	Kernel-5_35-4_79_2_141:4.2
	Kernel-5_35-4_79_2_140:4.2
	Kernel-5_35-4_79_2_139:4.2
	Kernel-5_35-4_79_2_138:4.2
	Kernel-5_35-4_79_2_137:4.2
	Kernel-5_35-4_79_2_136:4.2
	Kernel-5_35-4_79_2_135:4.2
	Kernel-5_35-4_79_2_134:4.2
	Kernel-5_35-4_79_2_133:4.2
	Kernel-5_35-4_79_2_132:4.2
	Kernel-5_35-4_79_2_131:4.2
	Kernel-5_35-4_79_2_130:4.2
	Kernel-5_35-4_79_2_129:4.2
	Kernel-5_35-4_79_2_128:4.2
	Kernel-5_35-4_79_2_127:4.2
	Kernel-5_35-4_79_2_126:4.2
	Kernel-5_35-4_79_2_125:4.2
	Kernel-5_35-4_79_2_124:4.2
	Kernel-5_35-4_79_2_123:4.2
	Cortex_merge:4.2
	Kernel-5_35-4_79_2_122:4.2
	Kernel-5_35-4_79_2_98_2_54:4.2
	Kernel-5_35-4_79_2_98_2_53:4.2
	Kernel-5_35-4_79_2_98_2_52:4.2
	Kernel-5_35-4_79_2_98_2_51:4.2
	Kernel-5_35-4_79_2_98_2_50:4.2
	Kernel-5_35-4_79_2_98_2_49:4.2
	Kernel-5_35-4_79_2_98_2_48:4.2
	Kernel-5_35-4_79_2_121:4.2
	Kernel-5_35-4_79_2_98_2_47:4.2
	Kernel-5_35-4_79_2_120:4.2
	Kernel-5_35-4_79_2_98_2_46:4.2
	Kernel-5_35-4_79_2_119:4.2
	Kernel-5_35-4_79_2_98_2_45:4.2
	Kernel-5_35-4_79_2_98_2_44:4.2
	Kernel-5_35-4_79_2_118:4.2
	Kernel-5_35-4_79_2_98_2_43:4.2
	Kernel-5_35-4_79_2_117:4.2
	Kernel-5_35-4_79_2_116:4.2
	Kernel-5_35-4_79_2_98_2_42:4.2
	Kernel-5_35-4_79_2_115:4.2
	Kernel-5_35-4_79_2_98_2_41:4.2
	Kernel-5_35-4_79_2_98_2_40:4.2
	Kernel-5_35-4_79_2_114:4.2
	Kernel-5_35-4_79_2_98_2_39:4.2
	Kernel-5_35-4_79_2_98_2_38:4.2
	Kernel-5_35-4_79_2_113:4.2
	Kernel-5_35-4_79_2_112:4.2
	Kernel-5_35-4_79_2_98_2_37:4.2
	Kernel-5_35-4_79_2_98_2_36:4.2
	Kernel-5_35-4_79_2_98_2_35:4.2
	Kernel-5_35-4_79_2_98_2_34:4.2
	Kernel-5_35-4_79_2_98_2_33:4.2
	Kernel-5_35-4_79_2_98_2_32:4.2
	Kernel-5_35-4_79_2_98_2_31:4.2
	Kernel-5_35-4_79_2_98_2_30:4.2
	Kernel-5_35-4_79_2_98_2_29:4.2
	Kernel-5_35-4_79_2_98_2_28:4.2
	Kernel-5_35-4_79_2_98_2_27:4.2
	Kernel-5_35-4_79_2_98_2_26:4.2
	Kernel-5_35-4_79_2_111:4.2
	Kernel-5_35-4_79_2_98_2_25:4.2
	Kernel-5_35-4_79_2_98_2_24:4.2
	Kernel-5_35-4_79_2_98_2_23:4.2
	Kernel-5_35-4_79_2_110:4.2
	Kernel-5_35-4_79_2_98_2_22:4.2
	Kernel-5_35-4_79_2_109:4.2
	Kernel-5_35-4_79_2_98_2_21:4.2
	Kernel-5_35-4_79_2_98_2_20:4.2
	Kernel-5_35-4_79_2_108:4.2
	Kernel-5_35-4_79_2_107:4.2
	Kernel-5_35-4_79_2_98_2_19:4.2
	Kernel-5_35-4_79_2_98_2_18:4.2
	Kernel-5_35-4_79_2_98_2_17:4.2
	Kernel-5_35-4_79_2_98_2_16:4.2
	Kernel-5_35-4_79_2_98_2_15:4.2
	Kernel-5_35-4_79_2_106:4.2
	Kernel-5_35-4_79_2_105:4.2
	Kernel-5_35-4_79_2_104:4.2
	Kernel-5_35-4_79_2_98_2_14:4.2
	Kernel-5_35-4_79_2_98_2_13:4.2
	Kernel-5_35-4_79_2_98_2_12:4.2
	Kernel-5_35-4_79_2_98_2_11:4.2
	Kernel-5_35-4_79_2_98_2_10:4.2
	Kernel-5_35-4_79_2_98_2_9:4.2
	Kernel-5_35-4_79_2_103:4.2
	Kernel-5_35-4_79_2_102:4.2
	Kernel-5_35-4_79_2_98_2_8:4.2
	Kernel-5_35-4_79_2_98_2_7:4.2
	Kernel-5_35-4_79_2_98_2_6:4.2
	Kernel-5_35-4_79_2_98_2_5:4.2
	Kernel-5_35-4_79_2_98_2_4:4.2
	Kernel-5_35-4_79_2_101:4.2
	Kernel-5_35-4_79_2_100:4.2
	Kernel-5_35-4_79_2_99:4.2
	Kernel-5_35-4_79_2_98_2_3:4.2
	Kernel-5_35-4_79_2_98_2_2:4.2
	Kernel-5_35-4_79_2_98_2_1:4.2
	Cortex:4.2.0.6
	Cortex_bp:4.2
	Kernel-5_35-4_79_2_98:4.2
	Kernel-5_35-4_79_2_97:4.2
	Kernel-5_35-4_79_2_96:4.2
	Kernel-5_35-4_79_2_95:4.2
	Kernel-5_35-4_79_2_94:4.2
	Kernel-5_35-4_79_2_93:4.2
	Kernel-5_35-4_79_2_92:4.2
	Kernel-5_35-4_79_2_91:4.2
	Kernel-5_35-4_79_2_90:4.2
	Kernel-5_35-4_79_2_89:4.2
	Kernel-5_35-4_79_2_88:4.2
	Kernel-5_35-4_79_2_87:4.2
	Kernel-5_35-4_79_2_86:4.2
	Kernel-5_35-4_79_2_85:4.2
	Kernel-5_35-4_79_2_84:4.2
	Kernel-5_35-4_79_2_83:4.2
	Kernel-5_35-4_79_2_82:4.2
	Kernel-5_35-4_79_2_81:4.2
	Kernel-5_35-4_79_2_80:4.2
	Kernel-5_35-4_79_2_79:4.2
	Kernel-5_35-4_79_2_78:4.2
	Kernel-5_35-4_79_2_77:4.2
	RO_5_07:4.2
	Kernel-5_35-4_79_2_76:4.2
	Kernel-5_35-4_79_2_75:4.2
	Kernel-5_35-4_79_2_74:4.2
	Kernel-5_35-4_79_2_73:4.2
	Kernel-5_35-4_79_2_72:4.2
	Kernel-5_35-4_79_2_71:4.2
	Kernel-5_35-4_79_2_70:4.2
	Kernel-5_35-4_79_2_69:4.2
	Kernel-5_35-4_79_2_68:4.2
	Kernel-5_35-4_79_2_67:4.2
	Kernel-5_35-4_79_2_66:4.2
	Kernel-5_35-4_79_2_65:4.2
	Kernel-5_35-4_79_2_64:4.2
	Kernel-5_35-4_79_2_63:4.2
	Kernel-5_35-4_79_2_62:4.2
	Kernel-5_35-4_79_2_61:4.2
	Kernel-5_35-4_79_2_59:4.2
	Kernel-5_35-4_79_2_58:4.2
	Kernel-5_35-4_79_2_57:4.2
	Kernel-5_35-4_79_2_56:4.2
	Kernel-5_35-4_79_2_55:4.2
	Kernel-5_35-4_79_2_54:4.2
	Kernel-5_35-4_79_2_53:4.2
	Kernel-5_35-4_79_2_52:4.2
	Kernel-5_35-4_79_2_51:4.2
	Kernel-5_35-4_79_2_50:4.2
	Kernel-5_35-4_79_2_49:4.2
	Kernel-5_35-4_79_2_48:4.2
	Kernel-5_47:4.2
	Kernel-5_46-4_90_2_1:4.2
	nbingham_Kernel_FastNC_dev_bp:4.2
	nbingham_Kernel_FastNC_dev:4.2.0.8
	Kernel-5_46:4.2
	Kernel-5_45:4.2
	Kernel-5_35-4_79_2_47:4.2
	Kernel-5_35-4_79_2_46:4.2
	Kernel-5_35-4_79_2_45:4.2
	Kernel-5_35-4_79_2_44:4.2
	Kernel-5_35-4_79_2_25_2_2:4.2
	Kernel-5_35-4_79_2_43:4.2
	Kernel-5_35-4_79_2_42:4.2
	Kernel-5_35-4_79_2_41:4.2
	Kernel-5_35-4_79_2_40:4.2
	Kernel-5_35-4_79_2_39:4.2
	Kernel-5_35-4_79_2_38:4.2
	Kernel-5_35-4_79_2_37:4.2
	Kernel-5_35-4_79_2_36:4.2
	Kernel-5_35-4_79_2_35:4.2
	Kernel-5_35-4_79_2_34:4.2
	Kernel-5_35-4_79_2_33:4.2
	Kernel-5_35-4_79_2_32:4.2
	Kernel-5_44:4.2
	Kernel-5_35-4_79_2_25_2_1:4.2
	Kernel-5_43:4.2
	Kernel-5_35-4_79_2_31:4.2
	Kernel-5_35-4_79_2_30:4.2
	Kernel-5_35-4_79_2_29:4.2
	Kernel-5_35-4_79_2_28:4.2
	Kernel-5_35-4_79_2_27:4.2
	Kernel-5_35-4_79_2_26:4.2
	Kernel-5_42:4.2
	Kernel-5_41:4.2
	Kernel-5_40:4.2
	Kernel-5_35-4_79_2_25:4.2
	Kernel-5_35-4_79_2_24:4.2
	Kernel-5_35-4_79_2_23:4.2
	Kernel-5_35-4_79_2_22:4.2
	Kernel-5_35-4_79_2_21:4.2
	Kernel-5_35-4_79_2_20:4.2
	Kernel-5_35-4_79_2_19:4.2
	Kernel-5_35-4_79_2_18:4.2
	Kernel-5_35-4_79_2_17:4.2
	Kernel-5_35-4_79_2_16:4.2
	Kernel-5_35-4_79_2_15:4.2
	Kernel-5_35-4_79_2_14:4.2
	Kernel-5_39:4.2
	Kernel-5_13-4_52_2_1:4.2
	Bethany:4.2.0.4
	Kernel-5_38:4.2
	Kernel-5_35-4_79_2_13:4.2
	Kernel-5_35-4_79_2_12:4.2
	Kernel-5_35-4_79_2_11:4.2
	Kernel-5_37:4.2
	Kernel-5_35-4_79_2_10:4.2
	Kernel-5_35-4_79_2_9:4.2
	Kernel-5_36:4.2
	Kernel-5_35-4_79_2_8:4.2
	Kernel-5_35-4_79_2_7:4.2
	Kernel-5_35-4_79_2_6:4.2
	Kernel-5_35-4_79_2_5:4.2
	Kernel-5_35-4_79_2_4:4.2
	Kernel-5_35-4_79_2_3:4.2
	Kernel-5_35-4_79_2_2:4.2
	dellis_autobuild_BaseSW:4.2
	Kernel-5_35-4_79_2_1:4.2
	HAL:4.2.0.2
	Kernel-5_35:4.2
	Kernel-5_34:4.2
	Kernel-5_33:4.2
	Kernel-5_32:4.2
	Kernel-5_31:4.2
	Kernel-5_30:4.2
	Kernel-5_29:4.2
	Kernel-5_28:4.2
	Kernel-5_27:4.2
	Kernel-5_26:4.2
	Kernel-5_25:4.2
	Kernel-5_24:4.2
	Kernel-5_23:4.2
	Kernel-5_22:4.2
	sbrodie_sedwards_16Mar2000:4.2
	Kernel-5_21:4.2
	Kernel-5_20:4.2
	Kernel-5_19:4.2
	Kernel-5_18:4.2
	Kernel-5_17:4.2
	Kernel-5_16:4.2
	Kernel-5_15:4.2
	Kernel-5_14:4.2
	Kernel-5_13:4.2
	Kernel-5_12:4.2
	Kernel-5_11:4.2
	Kernel-5_10:4.2
	Kernel-5_09:4.2
	Kernel-5_08:4.2
	Kernel-5_07:4.2
	Kernel-5_06:4.2
	Kernel-5_05:4.2
	Kernel-5_04:4.2
	Kernel-5_03:4.2
	Kernel-5_02:4.2
	Kernel-5_01:4.2
	Kernel-5_00:4.2
	Kernel-4_99:4.2
	Kernel-4_98:4.2
	Kernel-4_97:4.2
	Kernel-4_96:4.2
	Kernel-4_95:4.2
	Kernel-4_94:4.2
	Kernel-4_93:4.2
	Kernel-4_92:4.2
	Kernel-4_91:4.2
	Kernel-4_90:4.2
	dcotton_autobuild_BaseSW:4.2
	Kernel-4_89:4.2
	Kernel-4_88:4.2
	Kernel-4_87:4.2
	Kernel-4_86:4.2
	Kernel-4_85:4.2
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.1.4.1.2.1
	Kernel-4_84:4.2
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.1.4.1.2.1
	Ursula_RiscPC_bp:4.1.4.1
	Kernel-4_83:4.2
	Kernel-4_82:4.2
	Kernel-4_81:4.2
	Kernel-4_80:4.2
	Kernel-4_79:4.2
	Kernel-4_78:4.2
	Kernel-4_77:4.2
	Kernel-4_76:4.2
	Kernel-4_75:4.2
	Kernel-4_74:4.2
	Kernel-4_73:4.2
	Kernel-4_72:4.2
	Kernel-4_71:4.1
	Kernel-4_70:4.1
	Kernel-4_69:4.1
	Kernel-4_68:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1.2.1
	Ursula_RiscPC:4.1.4.1.0.2
	Kernel-4_63-1_1_2_5:4.1.7.1
	Kernel-4_63-1_1_2_4:4.1.7.1
	Kernel-4_67:4.1
	Kernel-4_66:4.1
	Kernel-4_63-1_1_2_3:4.1.7.1
	Kernel-4_65:4.1
	Ursula_merge:4.1
	Kernel-4_64:4.1
	mstphens_Kernel-3_81:4.1.4.2
	Kernel-4_63-1_1_2_2:4.1.7.1
	nicke_Kernel_4_62:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	nturton_v459:4.1.7.1
	nturton_v460:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	mstphens_Kernel-3_80:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	afrost_Boca-1_2-Beta:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.4
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2016.06.30.20.28.56;	author jlee;	state dead;
branches;
next	4.2;
commitid	lMnWzoE9eJz3Wwcz;

4.2
date	99.04.08.13.23.46;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.41.22;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.41.22;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.00.46;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.09.09.13.33.27;	author mstphens;	state Exp;
branches
	4.1.4.1.2.1;
next	4.1.4.2;

4.1.4.2
date	98.09.24.13.17.19;	author mstphens;	state Exp;
branches;
next	;

4.1.4.1.2.1
date	98.11.23.14.59.18;	author mstphens;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.11.30;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.03.47;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Delete pre-HAL and 26bit code
Detail:
  This change gets rid of the following switches from the source (picking appropriate code paths for a 32bit HAL build):
  * HAL
  * HAL26
  * HAL32
  * No26bitCode
  * No32bitCode
  * IncludeTestSrc
  * FixR9CorruptionInExtensionSWI
  Various old files have also been removed (POST code, Arc/STB keyboard drivers, etc.)
Admin:
  Identical binary to previous revision for IOMD & Raspberry Pi builds


Version 5.49. Tagged as 'Kernel-5_49'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Morris

;
; ROM entry code for RISC OS Black
;

MorrisHeaderCodeSize * (24*4)   ;Code occupies less than this, we pad to this boundary so POST code
                                ;has a nicely defined place for its romsize and code entry points
; VECTOR AREA:

        LDR     pc, .+ResetIndirection
        LDR     PC, UNDEF_VEC
        LDR     PC, SWI_VEC
        LDR     PC, PREF_VEC
        LDR     PC, DATA_VEC
        LDR     PC, RES_VEC                   ; addr. exn not generated
        LDR     PC, IRQ_VEC
        LDR     PC, FIQ_VEC

        ! 0, "*** WARNING *** assembling Morris code"

; The above 8 instructions will operate as expected in 32-bit ROM mode,
; or in 16-bit ROM mode with a 16-bit ROM used.  In 16-bit ROM mode, and
; with 32-bit wide ROMs in use, they will instead be intepreted as 4
; NV-condition instructions (exact meaning not determined and should be
; irrelevant) which should do nothing and so allow control to drop
; through to this point, still in 16-bit mode.  Force IOMD into 32-bit
; ROM mode for bank 0.  The following instruction sequence has been
; produced in 16-in-32 form by extracting hex values from a listing...

        DCD     &0000B632, &0000E3A0    ; 20: MOV R11, #IO+IOMDREGS - point at IOMD
        DCD     &00000000, &0000E3A0    ; 28: MOV R0, #&0 - ROMCR:32b,slow,218.75us,no burst
        DCD     &00000080, &0000E5CB    ; 30: STRB R0,[R11,#ROMCR0] - switch mode
 [ :LNOT: ParallelFlashUpgrade
        DCD     &0000F000, &0000E3A0    ; 38: MOV PC, #0 - jump to 0 (this instr pre-fetched)
 |
; At this point, we know that we're in an ARM 7500-based box with 32-bit ROMs that's
; just been powered up. These are the conditions under which we may wish to reprogram
; ourselves.
CFR_Offset * (ConsiderFlashROM - ROM - ((.-ROM)/2) - 8)/4
        DCD     CFR_Offset :AND: &FFFF  ; 38: B ConsiderFlashROM (this instr pre-fetched)
        DCD     &0000EA00 + (CFR_Offset:SHR:16)
 ]

; vector absolute targets for use from physical vector instructions

UNDEF_VEC       DCD     UndInstInReset-ROM
SWI_VEC         DCD     SWIInReset    -ROM
PREF_VEC        DCD     PrefAbInReset -ROM
DATA_VEC        DCD     DataAbInReset -ROM
RES_VEC         DCD     AddrExInReset -ROM
IRQ_VEC         DCD     IRQInReset    -ROM
FIQ_VEC         DCD     FIQInReset    -ROM

UndInstInReset
SWIInReset
PrefAbInReset
DataAbInReset
AddrExInReset
IRQInReset
FIQInReset
        SUB     pc, pc, #8

        ASSERT  .-ROM <= MorrisHeaderCodeSize
        %       MorrisHeaderCodeSize-(.-ROM)

        END
@


4.2
log
@Parallel port flash upgrade facility added.

Version 4.72. Tagged as 'Kernel-4_72'
@
text
@@


4.1
log
@Initial revision
@
text
@a22 1
 [ 1 = 1
d46 4
a49 3
        DCD     &00000000, &0000E3A0    ; 24: MOV R0, #&0 - ROMCR:32b,slow,218.75us,no burst
        DCD     &00000080, &0000E5CB    ; 28: STRB R0,[R11,#ROMCR0] - switch mode
        DCD     &0000F000, &0000E3A0    ; 2C: MOV PC, #0 - jump to 0 (this instr pre-fetched)
d51 7
a57 17
;
; Kludged to cope with Morris Bugs
;                                 

        ! 0,"<><><><><><><> This kernel version will not softload on a Risc PC <><><><><><><>"

        DCD     &E3A0F010
        DCD     &FFFFE3A0

        DCD     &E59FF034
        DCD     &E59FF034

        DCD     &E59FF034
        DCD     &E59FF034

        DCD     &E59FF034
        DCD     &E59FF034
a58 12
        DCD     &E3A0B632
        DCD     &E3A0E3A0               ; 20: MOV R11, #IO+IOMDREGS - point at IOMD

        DCD     &E3A00000
        DCD     &E3A0E3A0               ; 24: MOV R0, #&0 - ROMCR:32b,slow,218.75us,no burst

        DCD     &E5CB0080
        DCD     &E3A0E5CB               ; 28: STRB R0,[R11,#ROMCR0] - switch mode

        DCD     &E59FF0F4
        DCD     &E5CBE59F    ; 2C: MOV PC, #0 - jump to 0 (this instr pre-fetched)
 ]
a59 2


@


4.1.4.1
log
@ 1 Simplify source by removing various long-standing compile flags
   and pre-Medusa h/w support

 2 Fix bug with Pages_Unsafe/Pages_Safe page moving for StrongARM
   (interrupt hole) - also better performance for StrongARM

 3 Improve perfromance of physical memory clear for StrongARM
   (make sure it uses burst write for STM)

 4 Suspend Chocolate task switching for StrongARM if SALDMIBbroken
   is TRUE
@
text
@d23 1
d50 4
d55 1
d57 24
d82 2
@


4.1.4.1.2.1
log
@Changed compile switches, to build Ursula kernel for RPC and A7000(+),
switches now set as follows:
  ARM67Support      TRUE  (for 610,710,7500,7500FE)
  ARMSASupport      TRUE  (for StrongARM)
  ARMSASupport_RevS FALSE (for StrongARMs before rev S)
  IOMD1Support      TRUE  (for old machines)
  IOMD2Support      FALSE (They killed Phoebe!)
Version set to 4.00 (RISC OS 4)
This is the same as my last commit to the Ursula branch
@
text
@d34 1
a34 1
;;;        ! 0, "*** WARNING *** assembling Morris code"
@


4.1.4.2
log
@Phoebe aware version of kernel
Source currently builds for Phoebe only. Flipping source switches will
build for Risc PC and/or A7000(+) as well (or instead). Not tested
much on older platforms.
Known issues remaining:
 - on Phoebe, kernel does not always set up the video (new VCO)
   properly. It appears that anything via the display manager is ok,
   old modes are ok before a monitor definition is seen, but mode
   changes via applications in the desktop always/often (?) aren't.
   Most likely area for investigation is whether kernel catches all
   mode change routes for ensuring it programs the new VCO.
 - on Phoebe, kernel does not yet have the hooks to support multiple
   CPU(s) (to park the slaves and allow them to be used later). I
   have a technical note on this, which should be archived as part of
   the Ursula burial work.
 - on older platforms, the areas that need checking most are CMOS
   power on reset (when in ROM) and mode changes by all routes (since
   these areas are bent by Phoebe support)
Note that kernel currently builds for rev S or better StrongARM. The
switch ARMSASupport_RevS should be set false if building for Risc PC.
@
text
@d34 1
a34 1
;;;        ! 0, "*** WARNING *** assembling Morris code"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
