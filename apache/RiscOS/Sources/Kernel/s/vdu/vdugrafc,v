head	4.2;
access;
symbols
	Kernel-6_14:4.2
	Kernel-6_01-3:4.2
	Kernel-6_13:4.2
	Kernel-6_12:4.2
	Kernel-6_11:4.2
	Kernel-6_10:4.2
	Kernel-6_09:4.2
	Kernel-6_08-4_129_2_10:4.2
	Kernel-6_08-4_129_2_9:4.2
	Kernel-6_08:4.2
	Kernel-6_07:4.2
	Kernel-6_06:4.2
	Kernel-6_05-4_129_2_8:4.2
	Kernel-6_05:4.2
	Kernel-6_04:4.2
	Kernel-6_03:4.2
	Kernel-6_01-2:4.2
	Kernel-6_01-4_146_2_1:4.2
	Kernel-6_02:4.2
	Kernel-6_01-1:4.2
	Kernel-6_01:4.2
	Kernel-6_00:4.2
	Kernel-5_99:4.2
	Kernel-5_98:4.2
	Kernel-5_97-4_129_2_7:4.2
	Kernel-5_97:4.2
	Kernel-5_96:4.2
	Kernel-5_95:4.2
	Kernel-5_94:4.2
	Kernel-5_93:4.2
	Kernel-5_92:4.2
	Kernel-5_91:4.2
	Kernel-5_90:4.2
	Kernel-5_89-4_129_2_6:4.2
	Kernel-5_89:4.2
	Kernel-5_88-4_129_2_5:4.2
	Kernel-5_88-4_129_2_4:4.2
	Kernel-5_88:4.2
	Kernel-5_87:4.2
	Kernel-5_86-4_129_2_3:4.2
	Kernel-5_86-4_129_2_2:4.2
	Kernel-5_86-4_129_2_1:4.2
	Kernel-5_86:4.2
	SMP:4.2.0.2
	SMP_bp:4.2
	Kernel-5_85:4.2
	Kernel-5_54-1:4.2
	Kernel-5_84:4.2
	Kernel-5_83:4.2
	Kernel-5_82:4.2
	Kernel-5_81:4.2
	Kernel-5_80:4.2
	Kernel-5_79:4.2
	Kernel-5_78:4.2
	Kernel-5_77:4.2
	Kernel-5_76:4.2
	Kernel-5_75:4.2
	Kernel-5_74:4.2
	Kernel-5_73:4.2
	Kernel-5_72:4.2
	Kernel-5_71:4.2
	Kernel-5_70:4.2
	Kernel-5_69:4.2
	Kernel-5_68:4.2
	Kernel-5_67:4.2
	Kernel-5_66:4.2
	Kernel-5_65:4.2
	Kernel-5_64:4.2
	Kernel-5_63:4.2
	Kernel-5_62:4.2
	Kernel-5_61:4.2
	Kernel-5_60:4.2
	Kernel-5_59:4.2
	Kernel-5_58:4.2
	Kernel-5_57:4.2
	Kernel-5_56:4.2
	Kernel-5_55:4.2
	Kernel-5_54:4.2
	Kernel-5_53:4.2
	Kernel-5_52:4.2
	Kernel-5_51:4.2
	Kernel-5_50:4.2
	Kernel-5_49:4.2
	HAL_merge:4.1.10.1
	Kernel-5_48:4.2
	Kernel-5_35-4_79_2_327:4.1.10.1
	Kernel-5_35-4_79_2_326:4.1.10.1
	Kernel-5_35-4_79_2_325:4.1.10.1
	Kernel-5_35-4_79_2_324:4.1.10.1
	Kernel-5_35-4_79_2_323:4.1.10.1
	Kernel-5_35-4_79_2_322:4.1.10.1
	Kernel-5_35-4_79_2_321:4.1.10.1
	Kernel-5_35-4_79_2_320:4.1.10.1
	Kernel-5_35-4_79_2_319:4.1.10.1
	Kernel-5_35-4_79_2_318:4.1.10.1
	Kernel-5_35-4_79_2_317:4.1
	Kernel-5_35-4_79_2_316:4.1
	Kernel-5_35-4_79_2_315:4.1
	Kernel-5_35-4_79_2_314:4.1
	Kernel-5_35-4_79_2_313:4.1
	Kernel-5_35-4_79_2_312:4.1
	Kernel-5_35-4_79_2_311:4.1
	Kernel-5_35-4_79_2_310:4.1
	Kernel-5_35-4_79_2_309:4.1
	Kernel-5_35-4_79_2_308:4.1
	Kernel-5_35-4_79_2_307:4.1
	Kernel-5_35-4_79_2_306:4.1
	Kernel-5_35-4_79_2_305:4.1
	Kernel-5_35-4_79_2_304:4.1
	Kernel-5_35-4_79_2_303:4.1
	Kernel-5_35-4_79_2_302:4.1
	Kernel-5_35-4_79_2_301:4.1
	Kernel-5_35-4_79_2_300:4.1
	Kernel-5_35-4_79_2_299:4.1
	Kernel-5_35-4_79_2_298:4.1
	Kernel-5_35-4_79_2_297:4.1
	Kernel-5_35-4_79_2_296:4.1
	Kernel-5_35-4_79_2_295:4.1
	Kernel-5_35-4_79_2_294:4.1
	Kernel-5_35-4_79_2_293:4.1
	Kernel-5_35-4_79_2_292:4.1
	Kernel-5_35-4_79_2_291:4.1
	Kernel-5_35-4_79_2_290:4.1
	Kernel-5_35-4_79_2_289:4.1
	Kernel-5_35-4_79_2_288:4.1
	Kernel-5_35-4_79_2_287:4.1
	Kernel-5_35-4_79_2_286:4.1
	Kernel-5_35-4_79_2_285:4.1
	Kernel-5_35-4_79_2_284:4.1
	Kernel-5_35-4_79_2_283:4.1
	Kernel-5_35-4_79_2_282:4.1
	Kernel-5_35-4_79_2_281:4.1
	Kernel-5_35-4_79_2_280:4.1
	Kernel-5_35-4_79_2_279:4.1
	Kernel-5_35-4_79_2_278:4.1
	Kernel-5_35-4_79_2_277:4.1
	Kernel-5_35-4_79_2_276:4.1
	Kernel-5_35-4_79_2_275:4.1
	Kernel-5_35-4_79_2_274:4.1
	Kernel-5_35-4_79_2_273:4.1
	Kernel-5_35-4_79_2_272:4.1
	Kernel-5_35-4_79_2_271:4.1
	Kernel-5_35-4_79_2_270:4.1
	Kernel-5_35-4_79_2_269:4.1
	Kernel-5_35-4_79_2_268:4.1
	Kernel-5_35-4_79_2_267:4.1
	Kernel-5_35-4_79_2_266:4.1
	Kernel-5_35-4_79_2_265:4.1
	Kernel-5_35-4_79_2_264:4.1
	Kernel-5_35-4_79_2_263:4.1
	Kernel-5_35-4_79_2_262:4.1
	Kernel-5_35-4_79_2_261:4.1
	Kernel-5_35-4_79_2_260:4.1
	Kernel-5_35-4_79_2_259:4.1
	Kernel-5_35-4_79_2_258:4.1
	Kernel-5_35-4_79_2_257:4.1
	Kernel-5_35-4_79_2_256:4.1
	Kernel-5_35-4_79_2_255:4.1
	Kernel-5_35-4_79_2_254:4.1
	Kernel-5_35-4_79_2_253:4.1
	Kernel-5_35-4_79_2_252:4.1
	Kernel-5_35-4_79_2_251:4.1
	Kernel-5_35-4_79_2_250:4.1
	Kernel-5_35-4_79_2_249:4.1
	Kernel-5_35-4_79_2_248:4.1
	Kernel-5_35-4_79_2_247:4.1
	Kernel-5_35-4_79_2_246:4.1
	Kernel-5_35-4_79_2_245:4.1
	Kernel-5_35-4_79_2_244:4.1
	Kernel-5_35-4_79_2_243:4.1
	Kernel-5_35-4_79_2_242:4.1
	Kernel-5_35-4_79_2_241:4.1
	Kernel-5_35-4_79_2_240:4.1
	Kernel-5_35-4_79_2_239:4.1
	Kernel-5_35-4_79_2_238:4.1
	Kernel-5_35-4_79_2_237:4.1
	Kernel-5_35-4_79_2_236:4.1
	Kernel-5_35-4_79_2_235:4.1
	Kernel-5_35-4_79_2_234:4.1
	Kernel-5_35-4_79_2_233:4.1
	Kernel-5_35-4_79_2_232:4.1
	Kernel-5_35-4_79_2_231:4.1
	Kernel-5_35-4_79_2_230:4.1
	Kernel-5_35-4_79_2_229:4.1
	Kernel-5_35-4_79_2_228:4.1
	Kernel-5_35-4_79_2_227:4.1
	Kernel-5_35-4_79_2_226:4.1
	Kernel-5_35-4_79_2_225:4.1
	Kernel-5_35-4_79_2_224:4.1
	Kernel-5_35-4_79_2_223:4.1
	Kernel-5_35-4_79_2_222:4.1
	Kernel-5_35-4_79_2_221:4.1
	Kernel-5_35-4_79_2_220:4.1
	Kernel-5_35-4_79_2_219:4.1
	Kernel-5_35-4_79_2_218:4.1
	Kernel-5_35-4_79_2_217:4.1
	Kernel-5_35-4_79_2_216:4.1
	Kernel-5_35-4_79_2_215:4.1
	Kernel-5_35-4_79_2_214:4.1
	Kernel-5_35-4_79_2_213:4.1
	Kernel-5_35-4_79_2_212:4.1
	Kernel-5_35-4_79_2_211:4.1
	Kernel-5_35-4_79_2_210:4.1
	Kernel-5_35-4_79_2_209:4.1
	Kernel-5_35-4_79_2_208:4.1
	Kernel-5_35-4_79_2_207:4.1
	Kernel-5_35-4_79_2_206:4.1
	Kernel-5_35-4_79_2_205:4.1
	Kernel-5_35-4_79_2_204:4.1
	Kernel-5_35-4_79_2_203:4.1
	Kernel-5_35-4_79_2_202:4.1
	Kernel-5_35-4_79_2_201:4.1
	Kernel-5_35-4_79_2_200:4.1
	Kernel-5_35-4_79_2_199:4.1
	Kernel-5_35-4_79_2_198:4.1
	Kernel-5_35-4_79_2_197:4.1
	Kernel-5_35-4_79_2_196:4.1
	Kernel-5_35-4_79_2_195:4.1
	Kernel-5_35-4_79_2_194:4.1
	Kernel-5_35-4_79_2_193:4.1
	Kernel-5_35-4_79_2_192:4.1
	Kernel-5_35-4_79_2_191:4.1
	Kernel-5_35-4_79_2_190:4.1
	Kernel-5_35-4_79_2_189:4.1
	Kernel-5_35-4_79_2_188:4.1
	Kernel-5_35-4_79_2_187:4.1
	Kernel-5_35-4_79_2_186:4.1
	Kernel-5_35-4_79_2_185:4.1
	Kernel-5_35-4_79_2_184:4.1
	Kernel-5_35-4_79_2_183:4.1
	Kernel-5_35-4_79_2_182:4.1
	Kernel-5_35-4_79_2_181:4.1
	Kernel-5_35-4_79_2_180:4.1
	Kernel-5_35-4_79_2_179:4.1
	Kernel-5_35-4_79_2_178:4.1
	Kernel-5_35-4_79_2_177:4.1
	Kernel-5_35-4_79_2_176:4.1
	Kernel-5_35-4_79_2_175:4.1
	Kernel-5_35-4_79_2_174:4.1
	Kernel-5_35-4_79_2_173:4.1
	Kernel-5_35-4_79_2_172:4.1
	Kernel-5_35-4_79_2_171:4.1
	Kernel-5_35-4_79_2_170:4.1
	Kernel-5_35-4_79_2_169:4.1
	Kernel-5_35-4_79_2_168:4.1
	Kernel-5_35-4_79_2_167:4.1
	Kernel-5_35-4_79_2_166:4.1
	Kernel-5_35-4_79_2_165:4.1
	RPi_merge:4.1
	Kernel-5_35-4_79_2_147_2_23:4.1
	Kernel-5_35-4_79_2_147_2_22:4.1
	Kernel-5_35-4_79_2_147_2_21:4.1
	Kernel-5_35-4_79_2_147_2_20:4.1
	Kernel-5_35-4_79_2_147_2_19:4.1
	Kernel-5_35-4_79_2_147_2_18:4.1
	Kernel-5_35-4_79_2_164:4.1
	Kernel-5_35-4_79_2_163:4.1
	Kernel-5_35-4_79_2_147_2_17:4.1
	Kernel-5_35-4_79_2_147_2_16:4.1
	Kernel-5_35-4_79_2_147_2_15:4.1
	Kernel-5_35-4_79_2_162:4.1
	Kernel-5_35-4_79_2_161:4.1
	Kernel-5_35-4_79_2_147_2_14:4.1
	Kernel-5_35-4_79_2_147_2_13:4.1
	Kernel-5_35-4_79_2_160:4.1
	Kernel-5_35-4_79_2_159:4.1
	Kernel-5_35-4_79_2_158:4.1
	Kernel-5_35-4_79_2_157:4.1
	Kernel-5_35-4_79_2_156:4.1
	Kernel-5_35-4_79_2_147_2_12:4.1
	Kernel-5_35-4_79_2_147_2_11:4.1
	Kernel-5_35-4_79_2_155:4.1
	Kernel-5_35-4_79_2_147_2_10:4.1
	Kernel-5_35-4_79_2_154:4.1
	Kernel-5_35-4_79_2_153:4.1
	Kernel-5_35-4_79_2_147_2_9:4.1
	Kernel-5_35-4_79_2_152:4.1
	Kernel-5_35-4_79_2_151:4.1
	Kernel-5_35-4_79_2_147_2_8:4.1
	Kernel-5_35-4_79_2_147_2_7:4.1
	Kernel-5_35-4_79_2_150:4.1
	Kernel-5_35-4_79_2_147_2_6:4.1
	Kernel-5_35-4_79_2_147_2_5:4.1
	Kernel-5_35-4_79_2_149:4.1
	Kernel-5_35-4_79_2_147_2_4:4.1
	Kernel-5_35-4_79_2_147_2_3:4.1
	Kernel-5_35-4_79_2_148:4.1
	Kernel-5_35-4_79_2_147_2_2:4.1
	Kernel-5_35-4_79_2_147_2_1:4.1
	RPi:4.1.0.18
	RPi_bp:4.1
	Kernel-5_35-4_79_2_98_2_52_2_1:4.1
	alees_Kernel_dev:4.1.0.14
	alees_Kernel_dev_bp:4.1
	Kernel-5_35-4_79_2_147:4.1
	Kernel-5_35-4_79_2_146:4.1
	Kernel-5_35-4_79_2_145:4.1
	Kernel-5_35-4_79_2_144:4.1
	Kernel-5_35-4_79_2_143:4.1
	Kernel-5_35-4_79_2_142:4.1
	Kernel-5_35-4_79_2_141:4.1
	Kernel-5_35-4_79_2_140:4.1
	Kernel-5_35-4_79_2_139:4.1
	Kernel-5_35-4_79_2_138:4.1
	Kernel-5_35-4_79_2_137:4.1
	Kernel-5_35-4_79_2_136:4.1
	Kernel-5_35-4_79_2_135:4.1
	Kernel-5_35-4_79_2_134:4.1
	Kernel-5_35-4_79_2_133:4.1
	Kernel-5_35-4_79_2_132:4.1
	Kernel-5_35-4_79_2_131:4.1
	Kernel-5_35-4_79_2_130:4.1
	Kernel-5_35-4_79_2_129:4.1
	Kernel-5_35-4_79_2_128:4.1
	Kernel-5_35-4_79_2_127:4.1
	Kernel-5_35-4_79_2_126:4.1
	Kernel-5_35-4_79_2_125:4.1
	Kernel-5_35-4_79_2_124:4.1
	Kernel-5_35-4_79_2_123:4.1
	Cortex_merge:4.1
	Kernel-5_35-4_79_2_122:4.1
	Kernel-5_35-4_79_2_98_2_54:4.1
	Kernel-5_35-4_79_2_98_2_53:4.1
	Kernel-5_35-4_79_2_98_2_52:4.1
	Kernel-5_35-4_79_2_98_2_51:4.1
	Kernel-5_35-4_79_2_98_2_50:4.1
	Kernel-5_35-4_79_2_98_2_49:4.1
	Kernel-5_35-4_79_2_98_2_48:4.1
	Kernel-5_35-4_79_2_121:4.1
	Kernel-5_35-4_79_2_98_2_47:4.1
	Kernel-5_35-4_79_2_120:4.1
	Kernel-5_35-4_79_2_98_2_46:4.1
	Kernel-5_35-4_79_2_119:4.1
	Kernel-5_35-4_79_2_98_2_45:4.1
	Kernel-5_35-4_79_2_98_2_44:4.1
	Kernel-5_35-4_79_2_118:4.1
	Kernel-5_35-4_79_2_98_2_43:4.1
	Kernel-5_35-4_79_2_117:4.1
	Kernel-5_35-4_79_2_116:4.1
	Kernel-5_35-4_79_2_98_2_42:4.1
	Kernel-5_35-4_79_2_115:4.1
	Kernel-5_35-4_79_2_98_2_41:4.1
	Kernel-5_35-4_79_2_98_2_40:4.1
	Kernel-5_35-4_79_2_114:4.1
	Kernel-5_35-4_79_2_98_2_39:4.1
	Kernel-5_35-4_79_2_98_2_38:4.1
	Kernel-5_35-4_79_2_113:4.1
	Kernel-5_35-4_79_2_112:4.1
	Kernel-5_35-4_79_2_98_2_37:4.1
	Kernel-5_35-4_79_2_98_2_36:4.1
	Kernel-5_35-4_79_2_98_2_35:4.1
	Kernel-5_35-4_79_2_98_2_34:4.1
	Kernel-5_35-4_79_2_98_2_33:4.1
	Kernel-5_35-4_79_2_98_2_32:4.1
	Kernel-5_35-4_79_2_98_2_31:4.1
	Kernel-5_35-4_79_2_98_2_30:4.1
	Kernel-5_35-4_79_2_98_2_29:4.1
	Kernel-5_35-4_79_2_98_2_28:4.1
	Kernel-5_35-4_79_2_98_2_27:4.1
	Kernel-5_35-4_79_2_98_2_26:4.1
	Kernel-5_35-4_79_2_111:4.1
	Kernel-5_35-4_79_2_98_2_25:4.1
	Kernel-5_35-4_79_2_98_2_24:4.1
	Kernel-5_35-4_79_2_98_2_23:4.1
	Kernel-5_35-4_79_2_110:4.1
	Kernel-5_35-4_79_2_98_2_22:4.1
	Kernel-5_35-4_79_2_109:4.1
	Kernel-5_35-4_79_2_98_2_21:4.1
	Kernel-5_35-4_79_2_98_2_20:4.1
	Kernel-5_35-4_79_2_108:4.1
	Kernel-5_35-4_79_2_107:4.1
	Kernel-5_35-4_79_2_98_2_19:4.1
	Kernel-5_35-4_79_2_98_2_18:4.1
	Kernel-5_35-4_79_2_98_2_17:4.1
	Kernel-5_35-4_79_2_98_2_16:4.1
	Kernel-5_35-4_79_2_98_2_15:4.1
	Kernel-5_35-4_79_2_106:4.1
	Kernel-5_35-4_79_2_105:4.1
	Kernel-5_35-4_79_2_104:4.1
	Kernel-5_35-4_79_2_98_2_14:4.1
	Kernel-5_35-4_79_2_98_2_13:4.1
	Kernel-5_35-4_79_2_98_2_12:4.1
	Kernel-5_35-4_79_2_98_2_11:4.1
	Kernel-5_35-4_79_2_98_2_10:4.1
	Kernel-5_35-4_79_2_98_2_9:4.1
	Kernel-5_35-4_79_2_103:4.1
	Kernel-5_35-4_79_2_102:4.1
	Kernel-5_35-4_79_2_98_2_8:4.1
	Kernel-5_35-4_79_2_98_2_7:4.1
	Kernel-5_35-4_79_2_98_2_6:4.1
	Kernel-5_35-4_79_2_98_2_5:4.1
	Kernel-5_35-4_79_2_98_2_4:4.1
	Kernel-5_35-4_79_2_101:4.1
	Kernel-5_35-4_79_2_100:4.1
	Kernel-5_35-4_79_2_99:4.1
	Kernel-5_35-4_79_2_98_2_3:4.1
	Kernel-5_35-4_79_2_98_2_2:4.1
	Kernel-5_35-4_79_2_98_2_1:4.1
	Cortex:4.1.0.2
	Cortex_bp:4.1
	Kernel-5_35-4_79_2_98:4.1
	Kernel-5_35-4_79_2_97:4.1
	Kernel-5_35-4_79_2_96:4.1
	Kernel-5_35-4_79_2_95:4.1
	Kernel-5_35-4_79_2_94:4.1
	Kernel-5_35-4_79_2_93:4.1
	Kernel-5_35-4_79_2_92:4.1
	Kernel-5_35-4_79_2_91:4.1
	Kernel-5_35-4_79_2_90:4.1
	Kernel-5_35-4_79_2_89:4.1
	Kernel-5_35-4_79_2_88:4.1
	Kernel-5_35-4_79_2_87:4.1
	Kernel-5_35-4_79_2_86:4.1
	Kernel-5_35-4_79_2_85:4.1
	Kernel-5_35-4_79_2_84:4.1
	Kernel-5_35-4_79_2_83:4.1
	Kernel-5_35-4_79_2_82:4.1
	Kernel-5_35-4_79_2_81:4.1
	Kernel-5_35-4_79_2_80:4.1
	Kernel-5_35-4_79_2_79:4.1
	Kernel-5_35-4_79_2_78:4.1
	Kernel-5_35-4_79_2_77:4.1
	RO_5_07:4.1
	Kernel-5_35-4_79_2_76:4.1
	Kernel-5_35-4_79_2_75:4.1
	Kernel-5_35-4_79_2_74:4.1
	Kernel-5_35-4_79_2_73:4.1
	Kernel-5_35-4_79_2_72:4.1
	Kernel-5_35-4_79_2_71:4.1
	Kernel-5_35-4_79_2_70:4.1
	Kernel-5_35-4_79_2_69:4.1
	Kernel-5_35-4_79_2_68:4.1
	Kernel-5_35-4_79_2_67:4.1
	Kernel-5_35-4_79_2_66:4.1
	Kernel-5_35-4_79_2_65:4.1
	Kernel-5_35-4_79_2_64:4.1
	Kernel-5_35-4_79_2_63:4.1
	Kernel-5_35-4_79_2_62:4.1
	Kernel-5_35-4_79_2_61:4.1
	Kernel-5_35-4_79_2_59:4.1
	Kernel-5_35-4_79_2_58:4.1
	Kernel-5_35-4_79_2_57:4.1
	Kernel-5_35-4_79_2_56:4.1
	Kernel-5_35-4_79_2_55:4.1
	Kernel-5_35-4_79_2_54:4.1
	Kernel-5_35-4_79_2_53:4.1
	Kernel-5_35-4_79_2_52:4.1
	Kernel-5_35-4_79_2_51:4.1
	Kernel-5_35-4_79_2_50:4.1
	Kernel-5_35-4_79_2_49:4.1
	Kernel-5_35-4_79_2_48:4.1
	Kernel-5_47:4.1
	Kernel-5_46-4_90_2_1:4.1
	nbingham_Kernel_FastNC_dev_bp:4.1
	nbingham_Kernel_FastNC_dev:4.1.0.16
	Kernel-5_46:4.1
	Kernel-5_45:4.1
	Kernel-5_35-4_79_2_47:4.1
	Kernel-5_35-4_79_2_46:4.1
	Kernel-5_35-4_79_2_45:4.1
	Kernel-5_35-4_79_2_44:4.1
	Kernel-5_35-4_79_2_25_2_2:4.1
	Kernel-5_35-4_79_2_43:4.1
	Kernel-5_35-4_79_2_42:4.1
	Kernel-5_35-4_79_2_41:4.1
	Kernel-5_35-4_79_2_40:4.1
	Kernel-5_35-4_79_2_39:4.1
	Kernel-5_35-4_79_2_38:4.1
	Kernel-5_35-4_79_2_37:4.1
	Kernel-5_35-4_79_2_36:4.1
	Kernel-5_35-4_79_2_35:4.1
	Kernel-5_35-4_79_2_34:4.1
	Kernel-5_35-4_79_2_33:4.1
	Kernel-5_35-4_79_2_32:4.1
	Kernel-5_44:4.1
	Kernel-5_35-4_79_2_25_2_1:4.1
	Kernel-5_43:4.1
	Kernel-5_35-4_79_2_31:4.1
	Kernel-5_35-4_79_2_30:4.1
	Kernel-5_35-4_79_2_29:4.1
	Kernel-5_35-4_79_2_28:4.1
	Kernel-5_35-4_79_2_27:4.1
	Kernel-5_35-4_79_2_26:4.1
	Kernel-5_42:4.1
	Kernel-5_41:4.1
	Kernel-5_40:4.1
	Kernel-5_35-4_79_2_25:4.1
	Kernel-5_35-4_79_2_24:4.1
	Kernel-5_35-4_79_2_23:4.1
	Kernel-5_35-4_79_2_22:4.1
	Kernel-5_35-4_79_2_21:4.1
	Kernel-5_35-4_79_2_20:4.1
	Kernel-5_35-4_79_2_19:4.1
	Kernel-5_35-4_79_2_18:4.1
	Kernel-5_35-4_79_2_17:4.1
	Kernel-5_35-4_79_2_16:4.1
	Kernel-5_35-4_79_2_15:4.1
	Kernel-5_35-4_79_2_14:4.1
	Kernel-5_39:4.1
	Kernel-5_13-4_52_2_1:4.1
	Bethany:4.1.0.12
	Kernel-5_38:4.1
	Kernel-5_35-4_79_2_13:4.1
	Kernel-5_35-4_79_2_12:4.1
	Kernel-5_35-4_79_2_11:4.1
	Kernel-5_37:4.1
	Kernel-5_35-4_79_2_10:4.1
	Kernel-5_35-4_79_2_9:4.1
	Kernel-5_36:4.1
	Kernel-5_35-4_79_2_8:4.1
	Kernel-5_35-4_79_2_7:4.1
	Kernel-5_35-4_79_2_6:4.1
	Kernel-5_35-4_79_2_5:4.1
	Kernel-5_35-4_79_2_4:4.1
	Kernel-5_35-4_79_2_3:4.1
	Kernel-5_35-4_79_2_2:4.1
	dellis_autobuild_BaseSW:4.1
	Kernel-5_35-4_79_2_1:4.1
	HAL:4.1.0.10
	Kernel-5_35:4.1
	Kernel-5_34:4.1
	Kernel-5_33:4.1
	Kernel-5_32:4.1
	Kernel-5_31:4.1
	Kernel-5_30:4.1
	Kernel-5_29:4.1
	Kernel-5_28:4.1
	Kernel-5_27:4.1
	Kernel-5_26:4.1
	Kernel-5_25:4.1
	Kernel-5_24:4.1
	Kernel-5_23:4.1
	Kernel-5_22:4.1
	sbrodie_sedwards_16Mar2000:4.1
	Kernel-5_21:4.1
	Kernel-5_20:4.1
	Kernel-5_19:4.1
	Kernel-5_18:4.1
	Kernel-5_17:4.1
	Kernel-5_16:4.1
	Kernel-5_15:4.1
	Kernel-5_14:4.1
	Kernel-5_13:4.1
	Kernel-5_12:4.1
	Kernel-5_11:4.1
	Kernel-5_10:4.1
	Kernel-5_09:4.1
	Kernel-5_08:4.1
	Kernel-5_07:4.1
	Kernel-5_06:4.1
	Kernel-5_05:4.1
	Kernel-5_04:4.1
	Kernel-5_03:4.1
	Kernel-5_02:4.1
	Kernel-5_01:4.1
	Kernel-5_00:4.1
	Kernel-4_99:4.1
	Kernel-4_98:4.1
	Kernel-4_97:4.1
	Kernel-4_96:4.1
	Kernel-4_95:4.1
	Kernel-4_94:4.1
	Kernel-4_93:4.1
	Kernel-4_92:4.1
	Kernel-4_91:4.1
	Kernel-4_90:4.1
	dcotton_autobuild_BaseSW:4.1
	Kernel-4_89:4.1
	Kernel-4_88:4.1
	Kernel-4_87:4.1
	Kernel-4_86:4.1
	Kernel-4_85:4.1
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.1
	Kernel-4_84:4.1
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.1
	Ursula_RiscPC_bp:4.1
	Kernel-4_83:4.1
	Kernel-4_82:4.1
	Kernel-4_81:4.1
	Kernel-4_80:4.1
	Kernel-4_79:4.1
	Kernel-4_78:4.1
	Kernel-4_77:4.1
	Kernel-4_76:4.1
	Kernel-4_75:4.1
	Kernel-4_74:4.1
	Kernel-4_73:4.1
	Kernel-4_72:4.1
	Kernel-4_71:4.1
	Kernel-4_70:4.1
	Kernel-4_69:4.1
	Kernel-4_68:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	Kernel-4_63-1_1_2_5:4.1.7.1
	Kernel-4_63-1_1_2_4:4.1.7.1
	Kernel-4_67:4.1
	Kernel-4_66:4.1
	Kernel-4_63-1_1_2_3:4.1.7.1
	Kernel-4_65:4.1
	Ursula_merge:4.1
	Kernel-4_64:4.1
	mstphens_Kernel-3_81:4.1
	Kernel-4_63-1_1_2_2:4.1.7.1
	nicke_Kernel_4_62:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	nturton_v459:4.1.7.1
	nturton_v460:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	mstphens_Kernel-3_80:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	afrost_Boca-1_2-Beta:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.4
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2016.06.30.20.08.19;	author jlee;	state Exp;
branches;
next	4.1;
commitid	IWoXxARWeuLDOwcz;

4.1
date	96.11.05.09.41.35;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.10.1;
next	;

4.1.1.1
date	96.11.05.09.41.35;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.03.02;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.13.00;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.04.36;	author nturton;	state Exp;
branches;
next	;

4.1.10.1
date	2016.05.08.17.11.14;	author jlee;	state Exp;
branches;
next	;
commitid	H8vGguuJRqFVxH5z;


desc
@@


4.2
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > $.Source.VduGrafC
;
; ARTHUR OPERATING SYSTEM - Vdu Drivers
; =======================
;
; Vdu driver code - Ellipse outline & fill
;
; Author R C Manby
; Date   29.9.86
;




;
;
;
;------------------------------------------------------------------------------
;
; EllipseOutline
; ==============
;
; On entry, OldCs is centre of the ellipse
;           ICursor is a point giving the width of the ellipse
;           NewPt is the highest/lowest point on the ellipse
;
; On exit, R0..R11 corrupt
;
EllipseOutline
        SaveRetAdr

        BL GenEllParm
        B EllipseOut20
EllipseOut10
        BL AdvEllParm
EllipseOut20
                                ; Registers hold
                                ;   R4 , R5  , R6  , R7  , R8  , R9  , R10
                                ;  ellY,prevL,prevR,thisL,thisR,nextL,nextR

        MOV R0,R7               ;Left line runs from thisL rightwards
        MOV R1,R4
        Greatest R3,R5,R9
        SUB R3,R3,#1
        Greatest R3,R3,R7       ; to max(thisL, max(prevL-1,nextL-1))

        MOV R2,R8               ;Right line runs from thisR leftwards
        Least R4,R6,R10
        ADD R4,R4,#1
        Least R4,R4,R8          ; to min(thisR, min(prevR+1,nextR+1))
                                
        BL EllDoubleHLine       ;Any overlap handled by EllDoubleHLine

        LDR R0,[WsPtr,#EllBlkSliceCnt]
        CMP R0,#0
        BGE EllipseOut10
        B EllipseFi30           ;Use common code with ellipse fill for 
                                ; last scanline
;
;
;
;
;------------------------------------------------------------------------------
;
; EllipseFill
; ===========
;
; On entry, OldCs is centre of the ellipse
;           ICursor is a point giving the width of the ellipse
;           NewPt is the highest/lowest point on the ellipse
;
; On exit, R0..R11 corrupt
;
EllipseFill
        SaveRetAdr

        BL GenEllParm
        B EllipseFi20
EllipseFi10
        BL AdvEllParm
EllipseFi20
                                ; Registers hold
                                ;   R4 , R5  , R6  , R7  , R8  , R9  , R10
                                ;  ellY,prevL,prevR,thisL,thisR,nextL,nextR

        MOV R0,R7                       ;Draw slice thisL -> thisR
        MOV R1,R4
        MOV R2,R8

        BL EllHLine

        LDR R0,[WsPtr,#EllBlkSliceCnt]
        CMP R0,#0
        BGE EllipseFi10
EllipseFi30
        LDR R0,[WsPtr,#EllNextL]        ;Last slice nextL -> nextR
        LDR R1,[WsPtr,#EllBlkEllY]
        ADD R1,R1,#1
        LDR R2,[WsPtr,#EllNextR]

        BL EllHLine

        Return
;
;
;
; EllHLine - Draw a slice then reflect around ellipse origin
; ========
;
; On entry, R0 (X) - Left point of line
;           R1 (Y) - Y ordinate of line
;           R2 (X) - Right point of line
;
; On exit,  R0..R11 corrupt
;
EllHLine
        SaveRetAdr

        LDR R3,[WsPtr,#OldCsX]          ;All points relative to OldCs
        LDR R4,[WsPtr,#OldCsY]

        ADD R11,WsPtr,#EllHLineWs       ;Save points given plus centre of
        STMIA R11,{R0-R4}               ; ellipse for later use

        ADD R0,R3,R0                    ;OldCsX + LeftX
        ADD R1,R4,R1                    ;OldCsY + Y
        ADD R2,R3,R2                    ;OldCsX + RightX

        BL NewHLine                     ;Draw top slice

        ADD R11,WsPtr,#EllHLineWs
        LDMIA R11,{R3-R7}

        CMP R4,#0                       ;If EllY = 0
        Return EQ                       ; then quit to prevent double plotting
                                        ; else reflect around ellipse origin

        SUB R0,R6,R5                    ;OldCsX - RightY
        SUB R1,R7,R4                    ;OldCsY - Y
        SUB R2,R6,R3                    ;OldCsX - LeftY

        BL NewHLine

        Return
;
;
;
; EllDoubleHLine
; ==============
;
; On entry, R0 (X) - Left most point
;           R1 (Y) - y ordinate of line
;           R2 (X) - Right most point
;           R3 (X) - end of left most line
;           R4 (X) - start of right most line
;
EllDoubleHLine
        CMP R3,R4                               ;If end of left line overlaps
                                                ; start of right
        BGE EllHLine                            ;then draw and reflect R0->R2
                                                ;else
        SaveRetAdr

        ADD R11,WsPtr,#EllDoubleHLineWs
        STMIA R11,{R0-R4}

        MOV R2,R3                               ;Draw and reflect R0->R3
        BL EllHLine

        ADD R11,WsPtr,#EllDoubleHLineWs
        LDMIA R11,{R0-R4}
        MOV R0,R4
        BL EllHLine                             ;Draw and reflect R4->R2

        Return
;
;
;
;------------------------------------------------------------------------------
;
; GenEllParm - Generate a control block for an ellipse
; ==========
;
; On entry, OldCs is centre of the ellipse
;           ICursor is a point giving the width of the ellipse
;           NewPt is the highest/lowest point on the ellipse
;
; On exit, EllBlk holds the ellipse parameter block
;
;          EllThisL..EllNextR setup
;
;          R4      - EllY
;          R5, R6  - prevL,prevR
;          R7, R8  - thisL,thisR
;          R9, R10 - nextL,nextR
;
;
; Format of ellipse parameter block
;
; Var      R0 - SliceCnt            count of slices remaining
;          R1 - EllYSqr             square of current slice height
;          R2 - OddNo               used to give next EllYSqr value
;          R3 - XOffset  [bb.bb]    offset in X dirn along shear line
;          R4 - EllY
; Const    R5 - ShearX   [bb.bb]    shear factor per scanline
;          R6 - SliceX   [0bb.b]    axis ratio
;          R7 - MaxYSqr  [bbbb]
;
;
;
GenEllParm
        SaveRetAdr

        ADD R11,WsPtr,#OldCsX
        LDMIA R11,{R0,R1, R2,R3, R4,R5}         ;OldCs, ICursor, NewPt

        SUBS R6,R2,R0
        RSBLT R6,R6,#0                  ;R6 := ABS(width of slice)
                                        ;R6 is sliceX (ie maxwidth)
        SUBS R7,R5,R1
        MOV R8,R7
        RSBLT R7,R7,#0                  ;R7 := ABS(height of ellipse)

;
; Leave R0,R1,R2 intact upto here
;       R6 is ABS(width of slice)

        BEQ EllipseZeroHeight           ;If NewPtY=OldCsY draw a single line

        SUBS R5,R4,R0
        EOR R8,R8,R5
        RSBLT R5,R5,#0                  ;R5 := ABS(shear at top of ellipse)

;
; R5 holds shear in x dirn
; R6 holds width
; R7 holds height (also shearY)
; R8 sign bit is slope of shearline
;

        MOV R0,R7                       ;Setup SliceCnt

        MOV R9,R5,LSL #16
        DivRem R5,R9,R7,R10,norem       ;R5 := totalshear/ellipseheight

        CMP R8,#0
        RSBLT R5,R5,#0                  ;Correct for negative slope

        MOV R7,R0                       ;Div R6,R6,R0 using R7,R9,R10
        MOV R9,R6,LSL #8
        DivRem R6,R9,R7,R10,norem       ;R6 := slicewidth/ellipseheight


; R5 holds shear per scanline
; R6 ratio of ellipse axis

        MUL R7,R0,R0    ;MaxYSqr

        MOV R1,#0       ;EllYSqr
        MOV R2,#1       ;Oddno
        MOV R3,#0       ;XOffset
        MOV R4,#-2      ;EllY

        ADD R11,WsPtr,#EllBlk
        STMIA R11,{R0-R7}

        BL AdvEllP20                    ;Start by calculating first two slices
        STR R9,[WsPtr,#EllThisL]        ;Limits passed back in R9,R10
        STR R10,[WsPtr,#EllThisR]

        BL AdvEllP20 

        ADD R11,WsPtr,#EllThisL
        LDMIA R11,{R7,R8}

        RSB R5,R10,#0                   ;prevL := -nextR
        RSB R6,R9,#0                    ;prevR := -nextL

                                        ; Stretch slice if disconnected   

        Least R7,R7,R6                  ; thisL := min(thisL,prevR)
        Least R7,R7,R10                 ; thisL := min(thisL,nextR)

        Greatest R8,R8,R5               ; thisR := max(thisR,prevL)
        Greatest R8,R8,R9               ; thisR := max(thisR,nextL)

        STMIA R11,{R7,R8,R9,R10}

        Return                  ; On return, registers hold
                                ;   R4 , R5  , R6  , R7  , R8  , R9  , R10
                                ;  ellY,prevL,prevR,thisL,thisR,nextL,nextR
;
;
;
; EllipseZeroHeight - Draw a single line, no pips
; =================
;
; On entry, R0 (X), R1 (Y) holds centre of ellipse
;           R6 is ABS(width of slice/2)
;
EllipseZeroHeight

        ADD R2,R0,R6
        SUB R0,R0,R6

        Pull Link                       ;Return address into ellipse code
        Pull Link                       ;Return address to whoever called
                                        ; ellipses

        B NewHLine                      ;Sorted coords
                                        ;This will return to whoever called
                                        ; the ellipse code
;
;
;
;------------------------------------------------------------------------------
;
; AdvEllParm
; ==========
;
; On entry, R11 points to ellipse parameter block
;
; On exit, EllBlk, EllThisL..EllNextR updated
;
;          R4      - EllY
;          R5, R6  - prevL,prevR
;          R7, R8  - thisL,thisR
;          R9, R10 - nextL,nextR
;
;
; Format of ellipse parameter block
;
; Var      R0 - SliceCnt            count of slices remaining
;          R1 - EllYSqr             square of current slice height
;          R2 - OddNo               used to give next EllYSqr value
;          R3 - XOffset  [bb.bb]    offset in X dirn along shear line
;          R4 - EllY
; Const    R5 - ShearX   [bb.bb]    shear factor per scanline
;          R6 - SliceX   [0bb.b]    axis ratio
;          R7 - MaxYSqr  [bbbb]
;
;
;
AdvEllParm
        SaveRetAdr

        BL AdvEllP20            ;Advance scanline
                                ; On return, registers hold
                                ;   R4 ,   R9  , R10
                                ;  ellY,  nextL,nextR

                                ;Shuffle points
                                ;R9/R10 -> nextLR
                                ;nextLR -> thisLR - stretch if disconnected
                                ;thisLR -> prevLR

        ADD R11,WsPtr,#EllThisL
        LDMIA R11,{R5,R6, R7,R8}
                                        ; Stretch slice if disconnected
        Greatest R8,R8,R9               ; thisR := max(thisR,nextL)
        Least R7,R7,R10                 ; thisL := min(thisL,nextR)

        STMIA R11,{R7,R8, R9,R10}
        Return                  ;   R4 , R5  , R6  , R7  , R8  , R9  , R10
                                ;  ellY,prevL,prevR,thisL,thisR,nextL,nextR
;
;
;
;
;
;
;
AdvEllP20
        SaveRetAdr

        ADD R11,WsPtr,#EllBlk
        LDMIA R11,{R0-R7}       ;Load ellipse parm block

        SUB R7,R7,R1            ;Sqroot(MaxYSqr-EllYSqr)
        MOV R11,#24             ;Use 24 instead of 16 iterations in the
        BL SquareRootAlt        ; SquareRoot routine, gives result [0bb.b]

                                ;Mult by axis ratio
        MOV R7,R6               ; [0bb.b] * [0bb.b]
        MUL R9,R7,R8            ; Result in R9 is [bb.bb]

        ADD R10,R3,R9           ;NextR   [bb.bb]
        ADD R10,R10,#&8000
        MOV R10,R10,ASR #16     ;         [00bb]

        SUB R9,R3,R9            ;NextL   [bb.bb]
        ADD R9,R9,#&8000
        MOV R9,R9,ASR #16       ;         [00bb]

        ADD R1,R1,R2            ;New value of EllYSqr by adding oddno
        ADD R2,R2,#2            ;Next oddno in sequence

        ADD R3,R3,R5            ;XOffSet for next scanline
        SUB R0,R0,#1            ;Decrement count of slices left
        ADD R4,R4,#1            ;Increment EllY

        ADD R11,WsPtr,#EllBlk
        STMIA R11,{R0,R1,R2,R3,R4}      ;Save updated section

        Return                  ;   R4 ,   R9  , R10
                                ;  ellY,  nextL,nextR

;
;
;
;------------------------------------------------------------------------------


        END
@


4.1
log
@Initial revision
@
text
@a256 1
       ;MOV R7,R0                       ;Div R5,R5,R0 using R7,R9,R10
d258 1
a258 8
; *****Change made by DJS
; Use new DivRem macro, not old DIVREM
; Original code was:
;        DIVREM R5,R9,R7,R10             ;R5 := totalshear/ellipseheight
        DivRem R5,R9,R7,R10             ;R5 := totalshear/ellipseheight
; *****End of change made by DJS

       ;BIC R5,R5,#&FF                  ;Slugg accuracy for compatability?
d265 1
a265 6
; *****Change made by DJS
; Use new DivRem macro, not old DIVREM
; Original code was:
;        DIVREM R6,R9,R7,R10             ;R6 := slicewidth/ellipseheight
        DivRem R6,R9,R7,R10             ;R6 := slicewidth/ellipseheight
; *****End of change made by DJS
@


4.1.10.1
log
@Avoid unnecesssary remainder calculations
Detail:
  s/HeapSort, s/vdu/vdugrafc, s/vdu/vduswis - Avoid unnecessary remainder calculations in DivRem macro
  s/PMF/i2cutils, s/PMF/osword - Make use of DivRem's ability to accept a constant as the divisor
Admin:
  Tested on Cortex-A15


Version 5.35, 4.79.2.318. Tagged as 'Kernel-5_35-4_79_2_318'
@
text
@d257 1
d259 8
a266 1
        DivRem R5,R9,R7,R10,norem       ;R5 := totalshear/ellipseheight
d273 6
a278 1
        DivRem R6,R9,R7,R10,norem       ;R6 := slicewidth/ellipseheight
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
