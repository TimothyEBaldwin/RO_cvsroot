head	4.2;
access;
symbols
	Kernel-6_14:4.2
	Kernel-6_01-3:4.2
	Kernel-6_13:4.2
	Kernel-6_12:4.2
	Kernel-6_11:4.2
	Kernel-6_10:4.2
	Kernel-6_09:4.2
	Kernel-6_08-4_129_2_10:4.2
	Kernel-6_08-4_129_2_9:4.2
	Kernel-6_08:4.2
	Kernel-6_07:4.2
	Kernel-6_06:4.2
	Kernel-6_05-4_129_2_8:4.2
	Kernel-6_05:4.2
	Kernel-6_04:4.2
	Kernel-6_03:4.2
	Kernel-6_01-2:4.2
	Kernel-6_01-4_146_2_1:4.2
	Kernel-6_02:4.2
	Kernel-6_01-1:4.2
	Kernel-6_01:4.2
	Kernel-6_00:4.2
	Kernel-5_99:4.2
	Kernel-5_98:4.2
	Kernel-5_97-4_129_2_7:4.2
	Kernel-5_97:4.2
	Kernel-5_96:4.2
	Kernel-5_95:4.2
	Kernel-5_94:4.2
	Kernel-5_93:4.2
	Kernel-5_92:4.2
	Kernel-5_91:4.2
	Kernel-5_90:4.2
	Kernel-5_89-4_129_2_6:4.2
	Kernel-5_89:4.2
	Kernel-5_88-4_129_2_5:4.2
	Kernel-5_88-4_129_2_4:4.2
	Kernel-5_88:4.2
	Kernel-5_87:4.2
	Kernel-5_86-4_129_2_3:4.2
	Kernel-5_86-4_129_2_2:4.2
	Kernel-5_86-4_129_2_1:4.2
	Kernel-5_86:4.2
	SMP:4.2.0.2
	SMP_bp:4.2
	Kernel-5_85:4.2
	Kernel-5_54-1:4.2
	Kernel-5_84:4.2
	Kernel-5_83:4.2
	Kernel-5_82:4.2
	Kernel-5_81:4.2
	Kernel-5_80:4.2
	Kernel-5_79:4.2
	Kernel-5_78:4.2
	Kernel-5_77:4.2
	Kernel-5_76:4.2
	Kernel-5_75:4.2
	Kernel-5_74:4.2
	Kernel-5_73:4.2
	Kernel-5_72:4.2
	Kernel-5_71:4.2
	Kernel-5_70:4.2
	Kernel-5_69:4.2
	Kernel-5_68:4.2
	Kernel-5_67:4.2
	Kernel-5_66:4.2
	Kernel-5_65:4.2
	Kernel-5_64:4.2
	Kernel-5_63:4.2
	Kernel-5_62:4.2
	Kernel-5_61:4.2
	Kernel-5_60:4.2
	Kernel-5_59:4.2
	Kernel-5_58:4.2
	Kernel-5_57:4.2
	Kernel-5_56:4.2
	Kernel-5_55:4.2
	Kernel-5_54:4.2
	Kernel-5_53:4.2
	Kernel-5_52:4.2
	Kernel-5_51:4.2
	Kernel-5_50:4.2
	Kernel-5_49:4.2
	HAL_merge:4.1.8.2
	Kernel-5_48:4.2
	Kernel-5_35-4_79_2_327:4.1.8.2
	Kernel-5_35-4_79_2_326:4.1.8.2
	Kernel-5_35-4_79_2_325:4.1.8.2
	Kernel-5_35-4_79_2_324:4.1.8.2
	Kernel-5_35-4_79_2_323:4.1.8.2
	Kernel-5_35-4_79_2_322:4.1.8.2
	Kernel-5_35-4_79_2_321:4.1.8.2
	Kernel-5_35-4_79_2_320:4.1.8.2
	Kernel-5_35-4_79_2_319:4.1.8.2
	Kernel-5_35-4_79_2_318:4.1.8.2
	Kernel-5_35-4_79_2_317:4.1.8.2
	Kernel-5_35-4_79_2_316:4.1.8.2
	Kernel-5_35-4_79_2_315:4.1.8.2
	Kernel-5_35-4_79_2_314:4.1.8.2
	Kernel-5_35-4_79_2_313:4.1.8.2
	Kernel-5_35-4_79_2_312:4.1.8.2
	Kernel-5_35-4_79_2_311:4.1.8.2
	Kernel-5_35-4_79_2_310:4.1.8.2
	Kernel-5_35-4_79_2_309:4.1.8.2
	Kernel-5_35-4_79_2_308:4.1.8.2
	Kernel-5_35-4_79_2_307:4.1.8.2
	Kernel-5_35-4_79_2_306:4.1.8.2
	Kernel-5_35-4_79_2_305:4.1.8.2
	Kernel-5_35-4_79_2_304:4.1.8.2
	Kernel-5_35-4_79_2_303:4.1.8.2
	Kernel-5_35-4_79_2_302:4.1.8.2
	Kernel-5_35-4_79_2_301:4.1.8.2
	Kernel-5_35-4_79_2_300:4.1.8.2
	Kernel-5_35-4_79_2_299:4.1.8.2
	Kernel-5_35-4_79_2_298:4.1.8.2
	Kernel-5_35-4_79_2_297:4.1.8.2
	Kernel-5_35-4_79_2_296:4.1.8.2
	Kernel-5_35-4_79_2_295:4.1.8.2
	Kernel-5_35-4_79_2_294:4.1.8.2
	Kernel-5_35-4_79_2_293:4.1.8.1
	Kernel-5_35-4_79_2_292:4.1.8.1
	Kernel-5_35-4_79_2_291:4.1.8.1
	Kernel-5_35-4_79_2_290:4.1.8.1
	Kernel-5_35-4_79_2_289:4.1.8.1
	Kernel-5_35-4_79_2_288:4.1.8.1
	Kernel-5_35-4_79_2_287:4.1.8.1
	Kernel-5_35-4_79_2_286:4.1.8.1
	Kernel-5_35-4_79_2_285:4.1.8.1
	Kernel-5_35-4_79_2_284:4.1.8.1
	Kernel-5_35-4_79_2_283:4.1.8.1
	Kernel-5_35-4_79_2_282:4.1.8.1
	Kernel-5_35-4_79_2_281:4.1.8.1
	Kernel-5_35-4_79_2_280:4.1.8.1
	Kernel-5_35-4_79_2_279:4.1.8.1
	Kernel-5_35-4_79_2_278:4.1.8.1
	Kernel-5_35-4_79_2_277:4.1.8.1
	Kernel-5_35-4_79_2_276:4.1.8.1
	Kernel-5_35-4_79_2_275:4.1.8.1
	Kernel-5_35-4_79_2_274:4.1.8.1
	Kernel-5_35-4_79_2_273:4.1.8.1
	Kernel-5_35-4_79_2_272:4.1.8.1
	Kernel-5_35-4_79_2_271:4.1.8.1
	Kernel-5_35-4_79_2_270:4.1.8.1
	Kernel-5_35-4_79_2_269:4.1.8.1
	Kernel-5_35-4_79_2_268:4.1.8.1
	Kernel-5_35-4_79_2_267:4.1.8.1
	Kernel-5_35-4_79_2_266:4.1.8.1
	Kernel-5_35-4_79_2_265:4.1.8.1
	Kernel-5_35-4_79_2_264:4.1.8.1
	Kernel-5_35-4_79_2_263:4.1.8.1
	Kernel-5_35-4_79_2_262:4.1.8.1
	Kernel-5_35-4_79_2_261:4.1.8.1
	Kernel-5_35-4_79_2_260:4.1.8.1
	Kernel-5_35-4_79_2_259:4.1.8.1
	Kernel-5_35-4_79_2_258:4.1.8.1
	Kernel-5_35-4_79_2_257:4.1.8.1
	Kernel-5_35-4_79_2_256:4.1.8.1
	Kernel-5_35-4_79_2_255:4.1.8.1
	Kernel-5_35-4_79_2_254:4.1.8.1
	Kernel-5_35-4_79_2_253:4.1.8.1
	Kernel-5_35-4_79_2_252:4.1.8.1
	Kernel-5_35-4_79_2_251:4.1.8.1
	Kernel-5_35-4_79_2_250:4.1.8.1
	Kernel-5_35-4_79_2_249:4.1.8.1
	Kernel-5_35-4_79_2_248:4.1.8.1
	Kernel-5_35-4_79_2_247:4.1.8.1
	Kernel-5_35-4_79_2_246:4.1.8.1
	Kernel-5_35-4_79_2_245:4.1.8.1
	Kernel-5_35-4_79_2_244:4.1.8.1
	Kernel-5_35-4_79_2_243:4.1.8.1
	Kernel-5_35-4_79_2_242:4.1.8.1
	Kernel-5_35-4_79_2_241:4.1.8.1
	Kernel-5_35-4_79_2_240:4.1.8.1
	Kernel-5_35-4_79_2_239:4.1.8.1
	Kernel-5_35-4_79_2_238:4.1.8.1
	Kernel-5_35-4_79_2_237:4.1.8.1
	Kernel-5_35-4_79_2_236:4.1.8.1
	Kernel-5_35-4_79_2_235:4.1.8.1
	Kernel-5_35-4_79_2_234:4.1.8.1
	Kernel-5_35-4_79_2_233:4.1.8.1
	Kernel-5_35-4_79_2_232:4.1.8.1
	Kernel-5_35-4_79_2_231:4.1.8.1
	Kernel-5_35-4_79_2_230:4.1.8.1
	Kernel-5_35-4_79_2_229:4.1.8.1
	Kernel-5_35-4_79_2_228:4.1.8.1
	Kernel-5_35-4_79_2_227:4.1.8.1
	Kernel-5_35-4_79_2_226:4.1.8.1
	Kernel-5_35-4_79_2_225:4.1.8.1
	Kernel-5_35-4_79_2_224:4.1.8.1
	Kernel-5_35-4_79_2_223:4.1.8.1
	Kernel-5_35-4_79_2_222:4.1.8.1
	Kernel-5_35-4_79_2_221:4.1.8.1
	Kernel-5_35-4_79_2_220:4.1.8.1
	Kernel-5_35-4_79_2_219:4.1.8.1
	Kernel-5_35-4_79_2_218:4.1.8.1
	Kernel-5_35-4_79_2_217:4.1.8.1
	Kernel-5_35-4_79_2_216:4.1.8.1
	Kernel-5_35-4_79_2_215:4.1.8.1
	Kernel-5_35-4_79_2_214:4.1.8.1
	Kernel-5_35-4_79_2_213:4.1.8.1
	Kernel-5_35-4_79_2_212:4.1.8.1
	Kernel-5_35-4_79_2_211:4.1.8.1
	Kernel-5_35-4_79_2_210:4.1.8.1
	Kernel-5_35-4_79_2_209:4.1.8.1
	Kernel-5_35-4_79_2_208:4.1.8.1
	Kernel-5_35-4_79_2_207:4.1.8.1
	Kernel-5_35-4_79_2_206:4.1.8.1
	Kernel-5_35-4_79_2_205:4.1.8.1
	Kernel-5_35-4_79_2_204:4.1.8.1
	Kernel-5_35-4_79_2_203:4.1.8.1
	Kernel-5_35-4_79_2_202:4.1.8.1
	Kernel-5_35-4_79_2_201:4.1.8.1
	Kernel-5_35-4_79_2_200:4.1.8.1
	Kernel-5_35-4_79_2_199:4.1.8.1
	Kernel-5_35-4_79_2_198:4.1.8.1
	Kernel-5_35-4_79_2_197:4.1.8.1
	Kernel-5_35-4_79_2_196:4.1.8.1
	Kernel-5_35-4_79_2_195:4.1.8.1
	Kernel-5_35-4_79_2_194:4.1.8.1
	Kernel-5_35-4_79_2_193:4.1
	Kernel-5_35-4_79_2_192:4.1
	Kernel-5_35-4_79_2_191:4.1
	Kernel-5_35-4_79_2_190:4.1
	Kernel-5_35-4_79_2_189:4.1
	Kernel-5_35-4_79_2_188:4.1
	Kernel-5_35-4_79_2_187:4.1
	Kernel-5_35-4_79_2_186:4.1
	Kernel-5_35-4_79_2_185:4.1
	Kernel-5_35-4_79_2_184:4.1
	Kernel-5_35-4_79_2_183:4.1
	Kernel-5_35-4_79_2_182:4.1
	Kernel-5_35-4_79_2_181:4.1
	Kernel-5_35-4_79_2_180:4.1
	Kernel-5_35-4_79_2_179:4.1
	Kernel-5_35-4_79_2_178:4.1
	Kernel-5_35-4_79_2_177:4.1
	Kernel-5_35-4_79_2_176:4.1
	Kernel-5_35-4_79_2_175:4.1
	Kernel-5_35-4_79_2_174:4.1
	Kernel-5_35-4_79_2_173:4.1
	Kernel-5_35-4_79_2_172:4.1
	Kernel-5_35-4_79_2_171:4.1
	Kernel-5_35-4_79_2_170:4.1
	Kernel-5_35-4_79_2_169:4.1
	Kernel-5_35-4_79_2_168:4.1
	Kernel-5_35-4_79_2_167:4.1
	Kernel-5_35-4_79_2_166:4.1
	Kernel-5_35-4_79_2_165:4.1
	RPi_merge:4.1
	Kernel-5_35-4_79_2_147_2_23:4.1
	Kernel-5_35-4_79_2_147_2_22:4.1
	Kernel-5_35-4_79_2_147_2_21:4.1
	Kernel-5_35-4_79_2_147_2_20:4.1
	Kernel-5_35-4_79_2_147_2_19:4.1
	Kernel-5_35-4_79_2_147_2_18:4.1
	Kernel-5_35-4_79_2_164:4.1
	Kernel-5_35-4_79_2_163:4.1
	Kernel-5_35-4_79_2_147_2_17:4.1
	Kernel-5_35-4_79_2_147_2_16:4.1
	Kernel-5_35-4_79_2_147_2_15:4.1
	Kernel-5_35-4_79_2_162:4.1
	Kernel-5_35-4_79_2_161:4.1
	Kernel-5_35-4_79_2_147_2_14:4.1
	Kernel-5_35-4_79_2_147_2_13:4.1
	Kernel-5_35-4_79_2_160:4.1
	Kernel-5_35-4_79_2_159:4.1
	Kernel-5_35-4_79_2_158:4.1
	Kernel-5_35-4_79_2_157:4.1
	Kernel-5_35-4_79_2_156:4.1
	Kernel-5_35-4_79_2_147_2_12:4.1
	Kernel-5_35-4_79_2_147_2_11:4.1
	Kernel-5_35-4_79_2_155:4.1
	Kernel-5_35-4_79_2_147_2_10:4.1
	Kernel-5_35-4_79_2_154:4.1
	Kernel-5_35-4_79_2_153:4.1
	Kernel-5_35-4_79_2_147_2_9:4.1
	Kernel-5_35-4_79_2_152:4.1
	Kernel-5_35-4_79_2_151:4.1
	Kernel-5_35-4_79_2_147_2_8:4.1
	Kernel-5_35-4_79_2_147_2_7:4.1
	Kernel-5_35-4_79_2_150:4.1
	Kernel-5_35-4_79_2_147_2_6:4.1
	Kernel-5_35-4_79_2_147_2_5:4.1
	Kernel-5_35-4_79_2_149:4.1
	Kernel-5_35-4_79_2_147_2_4:4.1
	Kernel-5_35-4_79_2_147_2_3:4.1
	Kernel-5_35-4_79_2_148:4.1
	Kernel-5_35-4_79_2_147_2_2:4.1
	Kernel-5_35-4_79_2_147_2_1:4.1
	RPi:4.1.0.16
	RPi_bp:4.1
	Kernel-5_35-4_79_2_98_2_52_2_1:4.1
	alees_Kernel_dev:4.1.0.12
	alees_Kernel_dev_bp:4.1
	Kernel-5_35-4_79_2_147:4.1
	Kernel-5_35-4_79_2_146:4.1
	Kernel-5_35-4_79_2_145:4.1
	Kernel-5_35-4_79_2_144:4.1
	Kernel-5_35-4_79_2_143:4.1
	Kernel-5_35-4_79_2_142:4.1
	Kernel-5_35-4_79_2_141:4.1
	Kernel-5_35-4_79_2_140:4.1
	Kernel-5_35-4_79_2_139:4.1
	Kernel-5_35-4_79_2_138:4.1
	Kernel-5_35-4_79_2_137:4.1
	Kernel-5_35-4_79_2_136:4.1
	Kernel-5_35-4_79_2_135:4.1
	Kernel-5_35-4_79_2_134:4.1
	Kernel-5_35-4_79_2_133:4.1
	Kernel-5_35-4_79_2_132:4.1
	Kernel-5_35-4_79_2_131:4.1
	Kernel-5_35-4_79_2_130:4.1
	Kernel-5_35-4_79_2_129:4.1
	Kernel-5_35-4_79_2_128:4.1
	Kernel-5_35-4_79_2_127:4.1
	Kernel-5_35-4_79_2_126:4.1
	Kernel-5_35-4_79_2_125:4.1
	Kernel-5_35-4_79_2_124:4.1
	Kernel-5_35-4_79_2_123:4.1
	Cortex_merge:4.1
	Kernel-5_35-4_79_2_122:4.1
	Kernel-5_35-4_79_2_98_2_54:4.1
	Kernel-5_35-4_79_2_98_2_53:4.1
	Kernel-5_35-4_79_2_98_2_52:4.1
	Kernel-5_35-4_79_2_98_2_51:4.1
	Kernel-5_35-4_79_2_98_2_50:4.1
	Kernel-5_35-4_79_2_98_2_49:4.1
	Kernel-5_35-4_79_2_98_2_48:4.1
	Kernel-5_35-4_79_2_121:4.1
	Kernel-5_35-4_79_2_98_2_47:4.1
	Kernel-5_35-4_79_2_120:4.1
	Kernel-5_35-4_79_2_98_2_46:4.1
	Kernel-5_35-4_79_2_119:4.1
	Kernel-5_35-4_79_2_98_2_45:4.1
	Kernel-5_35-4_79_2_98_2_44:4.1
	Kernel-5_35-4_79_2_118:4.1
	Kernel-5_35-4_79_2_98_2_43:4.1
	Kernel-5_35-4_79_2_117:4.1
	Kernel-5_35-4_79_2_116:4.1
	Kernel-5_35-4_79_2_98_2_42:4.1
	Kernel-5_35-4_79_2_115:4.1
	Kernel-5_35-4_79_2_98_2_41:4.1
	Kernel-5_35-4_79_2_98_2_40:4.1
	Kernel-5_35-4_79_2_114:4.1
	Kernel-5_35-4_79_2_98_2_39:4.1
	Kernel-5_35-4_79_2_98_2_38:4.1
	Kernel-5_35-4_79_2_113:4.1
	Kernel-5_35-4_79_2_112:4.1
	Kernel-5_35-4_79_2_98_2_37:4.1
	Kernel-5_35-4_79_2_98_2_36:4.1
	Kernel-5_35-4_79_2_98_2_35:4.1
	Kernel-5_35-4_79_2_98_2_34:4.1
	Kernel-5_35-4_79_2_98_2_33:4.1
	Kernel-5_35-4_79_2_98_2_32:4.1
	Kernel-5_35-4_79_2_98_2_31:4.1
	Kernel-5_35-4_79_2_98_2_30:4.1
	Kernel-5_35-4_79_2_98_2_29:4.1
	Kernel-5_35-4_79_2_98_2_28:4.1
	Kernel-5_35-4_79_2_98_2_27:4.1
	Kernel-5_35-4_79_2_98_2_26:4.1
	Kernel-5_35-4_79_2_111:4.1
	Kernel-5_35-4_79_2_98_2_25:4.1
	Kernel-5_35-4_79_2_98_2_24:4.1
	Kernel-5_35-4_79_2_98_2_23:4.1
	Kernel-5_35-4_79_2_110:4.1
	Kernel-5_35-4_79_2_98_2_22:4.1
	Kernel-5_35-4_79_2_109:4.1
	Kernel-5_35-4_79_2_98_2_21:4.1
	Kernel-5_35-4_79_2_98_2_20:4.1
	Kernel-5_35-4_79_2_108:4.1
	Kernel-5_35-4_79_2_107:4.1
	Kernel-5_35-4_79_2_98_2_19:4.1
	Kernel-5_35-4_79_2_98_2_18:4.1
	Kernel-5_35-4_79_2_98_2_17:4.1
	Kernel-5_35-4_79_2_98_2_16:4.1
	Kernel-5_35-4_79_2_98_2_15:4.1
	Kernel-5_35-4_79_2_106:4.1
	Kernel-5_35-4_79_2_105:4.1
	Kernel-5_35-4_79_2_104:4.1
	Kernel-5_35-4_79_2_98_2_14:4.1
	Kernel-5_35-4_79_2_98_2_13:4.1
	Kernel-5_35-4_79_2_98_2_12:4.1
	Kernel-5_35-4_79_2_98_2_11:4.1
	Kernel-5_35-4_79_2_98_2_10:4.1
	Kernel-5_35-4_79_2_98_2_9:4.1
	Kernel-5_35-4_79_2_103:4.1
	Kernel-5_35-4_79_2_102:4.1
	Kernel-5_35-4_79_2_98_2_8:4.1
	Kernel-5_35-4_79_2_98_2_7:4.1
	Kernel-5_35-4_79_2_98_2_6:4.1
	Kernel-5_35-4_79_2_98_2_5:4.1
	Kernel-5_35-4_79_2_98_2_4:4.1
	Kernel-5_35-4_79_2_101:4.1
	Kernel-5_35-4_79_2_100:4.1
	Kernel-5_35-4_79_2_99:4.1
	Kernel-5_35-4_79_2_98_2_3:4.1
	Kernel-5_35-4_79_2_98_2_2:4.1
	Kernel-5_35-4_79_2_98_2_1:4.1
	Cortex:4.1.0.2
	Cortex_bp:4.1
	Kernel-5_35-4_79_2_98:4.1
	Kernel-5_35-4_79_2_97:4.1
	Kernel-5_35-4_79_2_96:4.1
	Kernel-5_35-4_79_2_95:4.1
	Kernel-5_35-4_79_2_94:4.1
	Kernel-5_35-4_79_2_93:4.1
	Kernel-5_35-4_79_2_92:4.1
	Kernel-5_35-4_79_2_91:4.1
	Kernel-5_35-4_79_2_90:4.1
	Kernel-5_35-4_79_2_89:4.1
	Kernel-5_35-4_79_2_88:4.1
	Kernel-5_35-4_79_2_87:4.1
	Kernel-5_35-4_79_2_86:4.1
	Kernel-5_35-4_79_2_85:4.1
	Kernel-5_35-4_79_2_84:4.1
	Kernel-5_35-4_79_2_83:4.1
	Kernel-5_35-4_79_2_82:4.1
	Kernel-5_35-4_79_2_81:4.1
	Kernel-5_35-4_79_2_80:4.1
	Kernel-5_35-4_79_2_79:4.1
	Kernel-5_35-4_79_2_78:4.1
	Kernel-5_35-4_79_2_77:4.1
	RO_5_07:4.1
	Kernel-5_35-4_79_2_76:4.1
	Kernel-5_35-4_79_2_75:4.1
	Kernel-5_35-4_79_2_74:4.1
	Kernel-5_35-4_79_2_73:4.1
	Kernel-5_35-4_79_2_72:4.1
	Kernel-5_35-4_79_2_71:4.1
	Kernel-5_35-4_79_2_70:4.1
	Kernel-5_35-4_79_2_69:4.1
	Kernel-5_35-4_79_2_68:4.1
	Kernel-5_35-4_79_2_67:4.1
	Kernel-5_35-4_79_2_66:4.1
	Kernel-5_35-4_79_2_65:4.1
	Kernel-5_35-4_79_2_64:4.1
	Kernel-5_35-4_79_2_63:4.1
	Kernel-5_35-4_79_2_62:4.1
	Kernel-5_35-4_79_2_61:4.1
	Kernel-5_35-4_79_2_59:4.1
	Kernel-5_35-4_79_2_58:4.1
	Kernel-5_35-4_79_2_57:4.1
	Kernel-5_35-4_79_2_56:4.1
	Kernel-5_35-4_79_2_55:4.1
	Kernel-5_35-4_79_2_54:4.1
	Kernel-5_35-4_79_2_53:4.1
	Kernel-5_35-4_79_2_52:4.1
	Kernel-5_35-4_79_2_51:4.1
	Kernel-5_35-4_79_2_50:4.1
	Kernel-5_35-4_79_2_49:4.1
	Kernel-5_35-4_79_2_48:4.1
	Kernel-5_47:4.1
	Kernel-5_46-4_90_2_1:4.1
	nbingham_Kernel_FastNC_dev_bp:4.1
	nbingham_Kernel_FastNC_dev:4.1.0.14
	Kernel-5_46:4.1
	Kernel-5_45:4.1
	Kernel-5_35-4_79_2_47:4.1
	Kernel-5_35-4_79_2_46:4.1
	Kernel-5_35-4_79_2_45:4.1
	Kernel-5_35-4_79_2_44:4.1
	Kernel-5_35-4_79_2_25_2_2:4.1
	Kernel-5_35-4_79_2_43:4.1
	Kernel-5_35-4_79_2_42:4.1
	Kernel-5_35-4_79_2_41:4.1
	Kernel-5_35-4_79_2_40:4.1
	Kernel-5_35-4_79_2_39:4.1
	Kernel-5_35-4_79_2_38:4.1
	Kernel-5_35-4_79_2_37:4.1
	Kernel-5_35-4_79_2_36:4.1
	Kernel-5_35-4_79_2_35:4.1
	Kernel-5_35-4_79_2_34:4.1
	Kernel-5_35-4_79_2_33:4.1
	Kernel-5_35-4_79_2_32:4.1
	Kernel-5_44:4.1
	Kernel-5_35-4_79_2_25_2_1:4.1
	Kernel-5_43:4.1
	Kernel-5_35-4_79_2_31:4.1
	Kernel-5_35-4_79_2_30:4.1
	Kernel-5_35-4_79_2_29:4.1
	Kernel-5_35-4_79_2_28:4.1
	Kernel-5_35-4_79_2_27:4.1
	Kernel-5_35-4_79_2_26:4.1
	Kernel-5_42:4.1
	Kernel-5_41:4.1
	Kernel-5_40:4.1
	Kernel-5_35-4_79_2_25:4.1
	Kernel-5_35-4_79_2_24:4.1
	Kernel-5_35-4_79_2_23:4.1
	Kernel-5_35-4_79_2_22:4.1
	Kernel-5_35-4_79_2_21:4.1
	Kernel-5_35-4_79_2_20:4.1
	Kernel-5_35-4_79_2_19:4.1
	Kernel-5_35-4_79_2_18:4.1
	Kernel-5_35-4_79_2_17:4.1
	Kernel-5_35-4_79_2_16:4.1
	Kernel-5_35-4_79_2_15:4.1
	Kernel-5_35-4_79_2_14:4.1
	Kernel-5_39:4.1
	Kernel-5_13-4_52_2_1:4.1
	Bethany:4.1.0.10
	Kernel-5_38:4.1
	Kernel-5_35-4_79_2_13:4.1
	Kernel-5_35-4_79_2_12:4.1
	Kernel-5_35-4_79_2_11:4.1
	Kernel-5_37:4.1
	Kernel-5_35-4_79_2_10:4.1
	Kernel-5_35-4_79_2_9:4.1
	Kernel-5_36:4.1
	Kernel-5_35-4_79_2_8:4.1
	Kernel-5_35-4_79_2_7:4.1
	Kernel-5_35-4_79_2_6:4.1
	Kernel-5_35-4_79_2_5:4.1
	Kernel-5_35-4_79_2_4:4.1
	Kernel-5_35-4_79_2_3:4.1
	Kernel-5_35-4_79_2_2:4.1
	dellis_autobuild_BaseSW:4.1
	Kernel-5_35-4_79_2_1:4.1
	HAL:4.1.0.8
	Kernel-5_35:4.1
	Kernel-5_34:4.1
	Kernel-5_33:4.1
	Kernel-5_32:4.1
	Kernel-5_31:4.1
	Kernel-5_30:4.1
	Kernel-5_29:4.1
	Kernel-5_28:4.1
	Kernel-5_27:4.1
	Kernel-5_26:4.1
	Kernel-5_25:4.1
	Kernel-5_24:4.1
	Kernel-5_23:4.1
	Kernel-5_22:4.1
	sbrodie_sedwards_16Mar2000:4.1
	Kernel-5_21:4.1
	Kernel-5_20:4.1
	Kernel-5_19:4.1
	Kernel-5_18:4.1
	Kernel-5_17:4.1
	Kernel-5_16:4.1
	Kernel-5_15:4.1
	Kernel-5_14:4.1
	Kernel-5_13:4.1
	Kernel-5_12:4.1
	Kernel-5_11:4.1
	Kernel-5_10:4.1
	Kernel-5_09:4.1
	Kernel-5_08:4.1
	Kernel-5_07:4.1
	Kernel-5_06:4.1
	Kernel-5_05:4.1
	Kernel-5_04:4.1
	Kernel-5_03:4.1
	Kernel-5_02:4.1
	Kernel-5_01:4.1
	Kernel-5_00:4.1
	Kernel-4_99:4.1
	Kernel-4_98:4.1
	Kernel-4_97:4.1
	Kernel-4_96:4.1
	Kernel-4_95:4.1
	Kernel-4_94:4.1
	Kernel-4_93:4.1
	Kernel-4_92:4.1
	Kernel-4_91:4.1
	Kernel-4_90:4.1
	dcotton_autobuild_BaseSW:4.1
	Kernel-4_89:4.1
	Kernel-4_88:4.1
	Kernel-4_87:4.1
	Kernel-4_86:4.1
	Kernel-4_85:4.1
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.1.4.1
	Kernel-4_84:4.1
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.1.4.1
	Ursula_RiscPC_bp:4.1.4.1
	Kernel-4_83:4.1
	Kernel-4_82:4.1
	Kernel-4_81:4.1
	Kernel-4_80:4.1
	Kernel-4_79:4.1
	Kernel-4_78:4.1
	Kernel-4_77:4.1
	Kernel-4_76:4.1
	Kernel-4_75:4.1
	Kernel-4_74:4.1
	Kernel-4_73:4.1
	Kernel-4_72:4.1
	Kernel-4_71:4.1
	Kernel-4_70:4.1
	Kernel-4_69:4.1
	Kernel-4_68:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1
	Ursula_RiscPC:4.1.4.1.0.2
	Kernel-4_63-1_1_2_5:4.1.7.1
	Kernel-4_63-1_1_2_4:4.1.7.1
	Kernel-4_67:4.1
	Kernel-4_66:4.1
	Kernel-4_63-1_1_2_3:4.1.7.1
	Kernel-4_65:4.1
	Ursula_merge:4.1
	Kernel-4_64:4.1
	mstphens_Kernel-3_81:4.1.4.1
	Kernel-4_63-1_1_2_2:4.1.7.1
	nicke_Kernel_4_62:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	nturton_v459:4.1.7.1
	nturton_v460:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	mstphens_Kernel-3_80:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	afrost_Boca-1_2-Beta:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.4
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2016.06.30.20.08.19;	author jlee;	state Exp;
branches;
next	4.1;
commitid	IWoXxARWeuLDOwcz;

4.1
date	96.11.05.09.41.36;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1
	4.1.8.1;
next	;

4.1.1.1
date	96.11.05.09.41.36;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.03.07;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.09.09.13.34.37;	author mstphens;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.13.05;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.04.39;	author nturton;	state Exp;
branches;
next	;

4.1.8.1
date	2013.08.06.22.43.10;	author jlee;	state Exp;
branches;
next	4.1.8.2;
commitid	TOIaeUf2Q4rBIr0x;

4.1.8.2
date	2015.10.12.21.33.35;	author jlee;	state Exp;
branches;
next	;
commitid	GP0OA8o3gtfsIREy;


desc
@@


4.2
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > &.Source.VduGrafDec
;
; ARTHUR OPERATING SYSTEM - Vdu Drivers
; =======================
;
; Graphics workspace and macro declarations
;
; Author R C Manby
; Date   5.9.86
;

        GBLL UseNewerHLine
UseNewerHLine SETL 1=1


;
; Graphics work space, overlaid in main vdu w/s area
;


  ^ GraphicWs

Line1Blk # 4*9  ;Parameter block for a crudeline
        ASSERT @@ < EndGraphicWs


  ^ GraphicWs

LineBlk # 4*5  ;Parameter block for a crudeline

LineEcfBase # 4                                         ; --
LineEcfIndx # 4                                         ;   |
LineDeltaY  # 4                                         ;   |
LineScanStp # 4                                         ; --

LineEndPtFlags # 4      ;Bit0 set - plot start pt, bit1 set - plot end pt
LineDotPtr     # 4      ;Holds 0/Adr(LineDotCnt) for Solid/Dotted lines

DotCycleStartX # 4
DotCycleStartY # 4
DotCycleEndX   # 4
DotCycleEndY   # 4
DotCycleCount  # 4
PostCycleCount # 4

;The following are defined in Hdr.System
; LineDotCnt     # 4      ;Count down to restarting pattern
; LineDotPatLSW  # 4      ;Current state of pattern LSWord
; LineDotPatMSW  # 4      ;   "      "   "     "    MSWord
        ASSERT @@ < EndGraphicWs


  ^ GraphicWs

TLine1  # 4*9   ;Line parameters used by Tri & Par fill
TLine2  # 4*9   
TEndY   # 4       
Vertex1X # 4    ;                                        --
Vertex1Y # 4    ;                                          |
Vertex2X # 4    ;                                          |
Vertex2Y # 4    ;                                          |
Vertex3X # 4    ;                                          |
Vertex3Y # 4    ;                                          |
Vertex4X # 4    ;                                          |
Vertex4Y # 4    ;                                        --
        ASSERT @@ < EndGraphicWs


  ^ GraphicWs

CircleBlk # 4*8 ;Parameter block for circle arc segments etc   --
CLine0  # 4*9   ;Line parameters used by Arc, Segment & Sector   |
CLine1  # 4*9   ;                                              --
CLine2  # 4*9   ;CLine2 & CLine3 used only for segments
CLine3  # 4*9   ;

UpperSegLinePtr # 4     ;Address of CLine2 or 0 - used only for segments
LowerSegLinePtr # 4     ;Address of CLine3 or 0 - used only for segments

CircleRadSquare # 4     ;Square of radius of circle

CLine0EndX * CLine0+7*4
CLine0EndY * CLine0+8*4
CLine1EndX * CLine1+7*4
CLine1EndY * CLine1+8*4
CLine0Far  * CLine0
CLine0Near * CLine0EndX
CLine1Far  * CLine1
CLine1Near * CLine1EndX

Quad0Control # 1        ;Control bytes for each quadrant for   --
Quad1Control # 1        ; Arc, Segment & Sector plotting         |
Quad2Control # 1        ;                                        |
Quad3Control # 1        ;                                        |
                        ;                                        |
Quad0StateChange # 1    ;Flag to indicate line/circle            |
Quad1StateChange # 1    ; intersection                           |
Quad2StateChange # 1    ;                                        |
Quad3StateChange # 1    ;                                        |
                        ;                                        |
Quad0Draw # 1           ;Controls point/line plotting            |
Quad1Draw # 1           ;                                        |
Quad2Draw # 1           ;                                        |
Quad3Draw # 1           ;                                      --

ArcPoint0X   # 4        ;                                      --
ArcPoint0Y   # 4        ;                                        |
ArcPoint1X   # 4        ;                                        |
ArcPoint1Y   # 4        ;                                        |
ArcPoint2X   # 4        ;                                        |
ArcPoint2Y   # 4        ;                                        |
ArcPoint3X   # 4        ;                                        |
ArcPoint3Y   # 4        ;                                      --

        ASSERT @@ < EndGraphicWs


  ^ GraphicWs

EllBlk     # 4*8        ;Parameter block for ellipses

EllBlkSliceCnt * EllBlk
EllBlkEllY     * EllBlk + 4*4

                        
EllPrevL   # 4          ;Slice limits for previous line        --
EllPrevR   # 4          ;                                        |
EllThisL   # 4          ;                 current line           |
EllThisR   # 4          ;                                        |
EllNextL   # 4          ;                 next line              |
EllNextR   # 4          ;                                      -- 

EllHLineWs # 4*5        ;This could be pushed to the stack
EllDoubleHLineWs # 4*5  ;This could be pushed to the stack
        ASSERT @@ < EndGraphicWs


  ^ GraphicWs

CMSrc       # 4*4       ;Unclipped source area                 --
CMDest      # 4*4       ;Unclipped destination area              |
CMCopyFlag  # 4         ; 0/2 means Move/Copy area             --

CMDest2L    # 4         ; destination coords clipped at dest
CMDest2B    # 4
CMDest2R    # 4
CMDest2T    # 4
CMDest3L    # 4         ; destination coords clipped both ways
CMDest3B    # 4
CMDest3R    # 4
CMDest3T    # 4

CMStuff # 0             ; these 7 loaded together
CMSourceAddr # 4        ; source screen address
CMDestAddr # 4          ; destination screen address
CMDestCount # 4         ; no. of destination words per line -1
CMRShift # 4            ; LSR shift factor
CMLShift # 4            ; LSL shift factor
CMRMask # 4             ; right mask
CMLMask # 4             ; left mask

CMVertCount # 4         ; no. of lines to do -1
CMVertDir # 4           ; offset to add to source/dest on each line

        ASSERT @@ < EndGraphicWs


  ^ GraphicWs

LineFillBlk # 4 * 11

FldLeftXLimit  # 4                              ;--
FldY           # 4                              ;  |
FldRightXLimit # 4                              ;--

FldBoundaryCol  # 4
FldBoundaryFlag # 4
FldYWindLimit   # 4

QueuePtrs       # 4*4   ; head, tail, end, start

FldSaveArea     # 5*4   ; saved Y, target colour, NPix, zgora, zgeor
FldSaveY * FldSaveArea +0

FldStackLevel   # 4            
                [ med_00001_userma
flood_cda_rma   # 4     ; amount we've changed the rma size by
                ]

        ASSERT @@ < EndGraphicWs


  ^ GraphicWs

RetnReg0  # 4           ;Save area for SWI SpriteOp    --
RetnReg1  # 4           ;                                |
RetnReg2  # 4           ;                                |
RetnReg3  # 4           ;                                |
RetnReg4  # 4           ;                                |
RetnReg5  # 4           ;                                |
RetnReg6  # 4           ;                                |
RetnReg7  # 4           ;                                |
RetnReg8  # 4           ;                                |
RetnReg9  # 4           ;                                |
RetnLink  # 4           ;                              --

SprReadNColour  # 4     ;Vdu vars for the mode the     --
SprWriteNColour # 4     ; the sprite is in               |
SprBytesPerChar # 4     ;                                |
SprXShftFactor  # 4     ;                                |
SprNPix         # 4     ;                                |
SprLog2BPC      # 4     ;                                |
SprLog2BPP      # 4     ;                                |
SprModeFlags    # 4     ;                              --

NameBuf   # 16          ; 12 char name + gap for good measure

SpriteWs # 0



  ^ SpriteWs            ;Sprite plot & ScreenLoad

SPltWidth   # 4         ;Don't try re-arranging this lot unless
SPltHeight  # 4         ; you fully understand the code!!
SPltScrOff  # 4
SPltMemOff  # 4
SPltScrAdr  # 4
SPltColCnt  # 4
SPltMemAdr  # 4
SPltShftR   # 4
SPltShftL   # 4
SPltMskAdr  # 4
SPltLMask   # 4
SPltRMask   # 4
; SPltzgooPtr # 4
SPltEcfPtr  # 4
SPltEcfIndx # 4  
SPltPixPerWord # 4
SPltBPP     # 4
SPltMaskBit # 4
SPltMaskPtr # 4
SPltMaskRowBit # 4
SPltMaskRowPtr # 4
SPltMaskRowLen # 4 

SPltzgooMasks # 16      ; zgoo, zgeo, zgoe, zgee

ScrLoaHandle  # 4       ;     --
ScrLoaBufAdr  # 4       ;       |
ScrLoaBytes   # 4       ;       |
ScrLoaFilPtr  # 4       ;       |
ScrLoaFilOfst # 4       ;     --

ScrLoaAreaCB   # SpriteAreaCBsize

SPltAction # 4                          ; Plot action used (0 => store)

SloadModeSel # 56                       ; Mode selector for screenloading new sprites

        ASSERT @@ < EndGraphicWs


  ^ SpriteWs            ;SGet,SCreate & ScreenSave

SGetTopLeft # 8         ; top and left of 'on screen' area

SGetTopMargin     # 4
SGetBotMargin     # 4
SGetLWrdMargin    # 4
SGetLBitMargin    # 4
SGetRWrdMargin    # 4
SGetRBitMargin    # 4

SGetColWCnt  # 4
SGetRowOfst  # 4
SGetEcfIndx  # 4

SGetNext          # 4                               ; --
SGetName          # 12  ;Name is 3 words (12 chars) ;   |
SGetWidth         # 4                               ;   |
SGetHeight        # 4                               ;   |
SGetLBit          # 4                               ;   |
SGetRBit          # 4                               ;   |
SGetImage         # 4                               ;   |
SGetTrans         # 4                               ;   |
SGetMode          # 4                               ;   |
SGetPalette       # 0                               ; --

        ASSERT @@ < EndGraphicWs

        ^       ScrSavCommon
ScrSavAreaCB      # SpriteAreaCBsize
ScrSavSpriteCB    # SpriteCBsize + MaxSpritePaletteSize

        END
@


4.1
log
@Initial revision
@
text
@d226 3
a228 1
SprLog2BPC      # 4     ;                              --
d273 1
a273 1
SloadModeSel # 48                       ; Mode selector for screenloading new sprites
@


4.1.8.1
log
@Add support for the new RISC OS 5 style sprite mode word. Add partial support for alpha channel sprite masks. Implement OS_ScreenMode reasons 13-15
Detail:
  ECFShift/ECFYOffset:
  - hdr/PublicWS - Add ECFShift and ECFYOffset to list of public exports (SpriteExtend was using hardcoded values). Rearrange exports so that VduWorkspace exports are now labelled as such.
  - hdr/KernelWS - Make sure ECFShift & ECFYOffset match their exported locations
  - hdr/OSRSI6, s/Middle - Add OS_ReadSysInfo 6 items 83 & 84, for reading ECFYOffset and ECFShift locations
  Mode flags/VDU variables:
  - Makefile - Add hdr/VduExt to the C header exports
  - hdr/VduExt - Get rid of NotRVVTBarWobblyBits macro and defined VDU variables manually so that Hdr2H will handle them. Begin replacing overly generic 'Flag_*' mode flag definitions with 'ModeFlag_*' instead. Define new flags as required by the new screen/sprite modes. Add OS_ScreenMode reason codes and mode selector format (from s.vdu.vdudecl)
  - NewModes/NEWF2, NewModes/OldPSSrc, NewModes/PSSrc, s.vdu.vdu23, s.vdu.vducursoft, s.vdu.vdudriver, s.vdu.vdugrafg, s.vdu.vdugrafj, s.vdu.vdugrafl, s.vdu.vdumodes, s.vdu.vdupal10, s.vdu.vdupal20, s.vdu.vdupalette, s.vdu.vdupalxx, s.vdu.vduwrch - Renaming Flag_* to ModeFlag_*
  - s.vdu.vdudecl - Remove OS_ScreenMode reason codes & mode selector format definitions; these are now in hdr/VduExt. Flag_* -> ModeFlag_* renaming.
  - s.vdu.vdupalxx - Apply a greyscale palette in PV_SetDefaultPalette if the greyscale mode flag is set
  New sprite types:
  - s.vdu.vdudriver - Extend GenerateModeSelectorVars to deal with the wide mask flag, 64K sprites, and the new RISC OS 5 sprite mode word format.
  - s.vdu.vdugrafdec - Store more information about the sprite in the SprReadNColour ... SprLog2BPC block.
  - s.vdu.vdugrafg - Update SpriteVecHandler to be able to detect whether RISC OS 5 format sprites are allowed palettes. Update SetupSprModeData to store the extra sprite info that's defined in vdugrafdec. Update PutSprite to fault any sprites with wide masks - SpriteExtend must be used for that (once implemented!)
  - s.vdu.vdugrafh - Update WritePixelColour to avoid temporary poking of NColour VDU variable for 8bpp sprites. Correctly replicate data when writing to RISC OS 5 format sprites. Update ReadPixelMask, WritePixelMask, SpriteMaskAddr, GetMaskspWidth to deal with wide masks. Delete obsolete bounce_new_format_masks routine.
  - s.vdu.vdugrafi - Comment updated to reflect new reality
  - s.vdu.vdugrafj - Get rid of unused code block in CreateHeader/PostCreateHeader. Update SanitizeSGetMode to generate RISC OS 5 style sprite mode words where applicable. Update DecideMaskSize to rely on GetMaskspWidth for calculating mask width.
  - s.vdu.vdugrafl - Update SwitchOutputToSprite/SwitchOutputToMask to deal with the new sprite formats. Allow PushModeInfoAnyMonitor to fail.
  - s.vdu.vduswis - Extended OS_ReadModeVariable to cope with new sprite types
  Misc:
  - s.vdu.vdudriver - Fixed bug with VIDCList copying where any -1 value in the structure would terminate the copy, instead of only -1 as a control item number
  - s.vdu.vduswis - Implemented OS_ScreenMode 13 (Mode string to specifier), 14 (mode specifier to string), and 15 (set mode by string). Mostly as per ROL's specs, but minus support for teletext attributes, and plus support for new RISC OS 5 attributes (L... layout specifier, 4096 & 24bpp packed modes, etc.)
  - s.vdu.vduwrch - Pick correct default text colours for the new modes
Admin:
  Tested on BB-xM
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 5.35, 4.79.2.194. Tagged as 'Kernel-5_35-4_79_2_194'
@
text
@d226 1
a226 3
SprLog2BPC      # 4     ;                                |
SprLog2BPP      # 4     ;                                |
SprModeFlags    # 4     ;                              --
@


4.1.8.2
log
@Fix bad pointer dereference and other issues with *ScreenLoad
Detail:
  s/vdu/vdugrafj - Rewrite WritePaletteFromSprite to fix some issues with the logic which decides whether to change screen mode:
  - ModeNo was always being treated as if it was a mode selector block, causing bad pointer dereferences if it was actually a numbered mode. Prior to zero page protection the code would have eventually stumbled its way through to the mode change code.
  - For checking the pixel format, only the Log2BPP was being compared, resulting in code deciding that (e.g.) modes with differing RGB order were the same
  - However the eigen value checking was also broken (checking wrong part of generated mode selector block), causing the mode change logic to always be taken
  s/vdu/vdugrafdec - Increase size of SloadModeSel so it's actually large enough to hold the generated mode selector - old code would have run off the end a bit (thankfully, it was the last thing in that particular workspace block)
Admin:
  Tested on BB-xM, *ScreenLoad'ing sprites from various modes
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/4/topics/3649


Version 5.35, 4.79.2.294. Tagged as 'Kernel-5_35-4_79_2_294'
@
text
@d273 1
a273 1
SloadModeSel # 56                       ; Mode selector for screenloading new sprites
@


4.1.4.1
log
@ 1 Simplify source by removing various long-standing compile flags
   and pre-Medusa h/w support

 2 Fix bug with Pages_Unsafe/Pages_Safe page moving for StrongARM
   (interrupt hole) - also better performance for StrongARM

 3 Improve perfromance of physical memory clear for StrongARM
   (make sure it uses burst write for STM)

 4 Suspend Chocolate task switching for StrongARM if SALDMIBbroken
   is TRUE
@
text
@d200 1
d202 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
