head	4.9;
access;
symbols
	Kernel-6_14:4.9
	Kernel-6_01-3:4.9
	Kernel-6_13:4.9
	Kernel-6_12:4.9
	Kernel-6_11:4.9
	Kernel-6_10:4.9
	Kernel-6_09:4.9
	Kernel-6_08-4_129_2_10:4.9
	Kernel-6_08-4_129_2_9:4.9
	Kernel-6_08:4.9
	Kernel-6_07:4.9
	Kernel-6_06:4.9
	Kernel-6_05-4_129_2_8:4.9
	Kernel-6_05:4.9
	Kernel-6_04:4.9
	Kernel-6_03:4.9
	Kernel-6_01-2:4.9
	Kernel-6_01-4_146_2_1:4.9
	Kernel-6_02:4.9
	Kernel-6_01-1:4.9
	Kernel-6_01:4.9
	Kernel-6_00:4.9
	Kernel-5_99:4.9
	Kernel-5_98:4.9
	Kernel-5_97-4_129_2_7:4.9
	Kernel-5_97:4.9
	Kernel-5_96:4.9
	Kernel-5_95:4.9
	Kernel-5_94:4.9
	Kernel-5_93:4.9
	Kernel-5_92:4.9
	Kernel-5_91:4.9
	Kernel-5_90:4.9
	Kernel-5_89-4_129_2_6:4.9
	Kernel-5_89:4.9
	Kernel-5_88-4_129_2_5:4.9
	Kernel-5_88-4_129_2_4:4.9
	Kernel-5_88:4.9
	Kernel-5_87:4.9
	Kernel-5_86-4_129_2_3:4.9
	Kernel-5_86-4_129_2_2:4.9
	Kernel-5_86-4_129_2_1:4.9
	Kernel-5_86:4.9
	SMP:4.9.0.2
	SMP_bp:4.9
	Kernel-5_85:4.9
	Kernel-5_54-1:4.8
	Kernel-5_84:4.9
	Kernel-5_83:4.9
	Kernel-5_82:4.9
	Kernel-5_81:4.9
	Kernel-5_80:4.9
	Kernel-5_79:4.9
	Kernel-5_78:4.9
	Kernel-5_77:4.9
	Kernel-5_76:4.9
	Kernel-5_75:4.9
	Kernel-5_74:4.9
	Kernel-5_73:4.9
	Kernel-5_72:4.9
	Kernel-5_71:4.9
	Kernel-5_70:4.9
	Kernel-5_69:4.9
	Kernel-5_68:4.9
	Kernel-5_67:4.9
	Kernel-5_66:4.9
	Kernel-5_65:4.9
	Kernel-5_64:4.9
	Kernel-5_63:4.9
	Kernel-5_62:4.9
	Kernel-5_61:4.9
	Kernel-5_60:4.9
	Kernel-5_59:4.9
	Kernel-5_58:4.9
	Kernel-5_57:4.9
	Kernel-5_56:4.9
	Kernel-5_55:4.9
	Kernel-5_54:4.8
	Kernel-5_53:4.8
	Kernel-5_52:4.8
	Kernel-5_51:4.8
	Kernel-5_50:4.8
	Kernel-5_49:4.8
	HAL_merge:4.6.2.10
	Kernel-5_48:4.8
	Kernel-5_35-4_79_2_327:4.6.2.10
	Kernel-5_35-4_79_2_326:4.6.2.10
	Kernel-5_35-4_79_2_325:4.6.2.10
	Kernel-5_35-4_79_2_324:4.6.2.10
	Kernel-5_35-4_79_2_323:4.6.2.10
	Kernel-5_35-4_79_2_322:4.6.2.10
	Kernel-5_35-4_79_2_321:4.6.2.10
	Kernel-5_35-4_79_2_320:4.6.2.10
	Kernel-5_35-4_79_2_319:4.6.2.10
	Kernel-5_35-4_79_2_318:4.6.2.10
	Kernel-5_35-4_79_2_317:4.6.2.10
	Kernel-5_35-4_79_2_316:4.6.2.10
	Kernel-5_35-4_79_2_315:4.6.2.10
	Kernel-5_35-4_79_2_314:4.6.2.10
	Kernel-5_35-4_79_2_313:4.6.2.10
	Kernel-5_35-4_79_2_312:4.6.2.9
	Kernel-5_35-4_79_2_311:4.6.2.9
	Kernel-5_35-4_79_2_310:4.6.2.9
	Kernel-5_35-4_79_2_309:4.6.2.9
	Kernel-5_35-4_79_2_308:4.6.2.9
	Kernel-5_35-4_79_2_307:4.6.2.9
	Kernel-5_35-4_79_2_306:4.6.2.9
	Kernel-5_35-4_79_2_305:4.6.2.9
	Kernel-5_35-4_79_2_304:4.6.2.9
	Kernel-5_35-4_79_2_303:4.6.2.8
	Kernel-5_35-4_79_2_302:4.6.2.8
	Kernel-5_35-4_79_2_301:4.6.2.8
	Kernel-5_35-4_79_2_300:4.6.2.8
	Kernel-5_35-4_79_2_299:4.6.2.8
	Kernel-5_35-4_79_2_298:4.6.2.8
	Kernel-5_35-4_79_2_297:4.6.2.8
	Kernel-5_35-4_79_2_296:4.6.2.8
	Kernel-5_35-4_79_2_295:4.6.2.8
	Kernel-5_35-4_79_2_294:4.6.2.8
	Kernel-5_35-4_79_2_293:4.6.2.8
	Kernel-5_35-4_79_2_292:4.6.2.8
	Kernel-5_35-4_79_2_291:4.6.2.8
	Kernel-5_35-4_79_2_290:4.6.2.8
	Kernel-5_35-4_79_2_289:4.6.2.8
	Kernel-5_35-4_79_2_288:4.6.2.8
	Kernel-5_35-4_79_2_287:4.6.2.8
	Kernel-5_35-4_79_2_286:4.6.2.8
	Kernel-5_35-4_79_2_285:4.6.2.8
	Kernel-5_35-4_79_2_284:4.6.2.8
	Kernel-5_35-4_79_2_283:4.6.2.8
	Kernel-5_35-4_79_2_282:4.6.2.8
	Kernel-5_35-4_79_2_281:4.6.2.8
	Kernel-5_35-4_79_2_280:4.6.2.8
	Kernel-5_35-4_79_2_279:4.6.2.8
	Kernel-5_35-4_79_2_278:4.6.2.8
	Kernel-5_35-4_79_2_277:4.6.2.8
	Kernel-5_35-4_79_2_276:4.6.2.8
	Kernel-5_35-4_79_2_275:4.6.2.8
	Kernel-5_35-4_79_2_274:4.6.2.8
	Kernel-5_35-4_79_2_273:4.6.2.8
	Kernel-5_35-4_79_2_272:4.6.2.8
	Kernel-5_35-4_79_2_271:4.6.2.8
	Kernel-5_35-4_79_2_270:4.6.2.8
	Kernel-5_35-4_79_2_269:4.6.2.8
	Kernel-5_35-4_79_2_268:4.6.2.8
	Kernel-5_35-4_79_2_267:4.6.2.8
	Kernel-5_35-4_79_2_266:4.6.2.8
	Kernel-5_35-4_79_2_265:4.6.2.8
	Kernel-5_35-4_79_2_264:4.6.2.8
	Kernel-5_35-4_79_2_263:4.6.2.8
	Kernel-5_35-4_79_2_262:4.6.2.8
	Kernel-5_35-4_79_2_261:4.6.2.8
	Kernel-5_35-4_79_2_260:4.6.2.8
	Kernel-5_35-4_79_2_259:4.6.2.8
	Kernel-5_35-4_79_2_258:4.6.2.8
	Kernel-5_35-4_79_2_257:4.6.2.8
	Kernel-5_35-4_79_2_256:4.6.2.8
	Kernel-5_35-4_79_2_255:4.6.2.8
	Kernel-5_35-4_79_2_254:4.6.2.8
	Kernel-5_35-4_79_2_253:4.6.2.8
	Kernel-5_35-4_79_2_252:4.6.2.8
	Kernel-5_35-4_79_2_251:4.6.2.8
	Kernel-5_35-4_79_2_250:4.6.2.8
	Kernel-5_35-4_79_2_249:4.6.2.7
	Kernel-5_35-4_79_2_248:4.6.2.7
	Kernel-5_35-4_79_2_247:4.6.2.7
	Kernel-5_35-4_79_2_246:4.6.2.7
	Kernel-5_35-4_79_2_245:4.6.2.7
	Kernel-5_35-4_79_2_244:4.6.2.7
	Kernel-5_35-4_79_2_243:4.6.2.7
	Kernel-5_35-4_79_2_242:4.6.2.7
	Kernel-5_35-4_79_2_241:4.6.2.7
	Kernel-5_35-4_79_2_240:4.6.2.7
	Kernel-5_35-4_79_2_239:4.6.2.7
	Kernel-5_35-4_79_2_238:4.6.2.7
	Kernel-5_35-4_79_2_237:4.6.2.7
	Kernel-5_35-4_79_2_236:4.6.2.7
	Kernel-5_35-4_79_2_235:4.6.2.7
	Kernel-5_35-4_79_2_234:4.6.2.7
	Kernel-5_35-4_79_2_233:4.6.2.7
	Kernel-5_35-4_79_2_232:4.6.2.7
	Kernel-5_35-4_79_2_231:4.6.2.7
	Kernel-5_35-4_79_2_230:4.6.2.7
	Kernel-5_35-4_79_2_229:4.6.2.7
	Kernel-5_35-4_79_2_228:4.6.2.7
	Kernel-5_35-4_79_2_227:4.6.2.7
	Kernel-5_35-4_79_2_226:4.6.2.7
	Kernel-5_35-4_79_2_225:4.6.2.7
	Kernel-5_35-4_79_2_224:4.6.2.7
	Kernel-5_35-4_79_2_223:4.6.2.7
	Kernel-5_35-4_79_2_222:4.6.2.7
	Kernel-5_35-4_79_2_221:4.6.2.7
	Kernel-5_35-4_79_2_220:4.6.2.7
	Kernel-5_35-4_79_2_219:4.6.2.7
	Kernel-5_35-4_79_2_218:4.6.2.7
	Kernel-5_35-4_79_2_217:4.6.2.7
	Kernel-5_35-4_79_2_216:4.6.2.7
	Kernel-5_35-4_79_2_215:4.6.2.7
	Kernel-5_35-4_79_2_214:4.6.2.7
	Kernel-5_35-4_79_2_213:4.6.2.7
	Kernel-5_35-4_79_2_212:4.6.2.7
	Kernel-5_35-4_79_2_211:4.6.2.7
	Kernel-5_35-4_79_2_210:4.6.2.7
	Kernel-5_35-4_79_2_209:4.6.2.7
	Kernel-5_35-4_79_2_208:4.6.2.7
	Kernel-5_35-4_79_2_207:4.6.2.7
	Kernel-5_35-4_79_2_206:4.6.2.7
	Kernel-5_35-4_79_2_205:4.6.2.7
	Kernel-5_35-4_79_2_204:4.6.2.7
	Kernel-5_35-4_79_2_203:4.6.2.7
	Kernel-5_35-4_79_2_202:4.6.2.6
	Kernel-5_35-4_79_2_201:4.6.2.6
	Kernel-5_35-4_79_2_200:4.6.2.6
	Kernel-5_35-4_79_2_199:4.6.2.6
	Kernel-5_35-4_79_2_198:4.6.2.6
	Kernel-5_35-4_79_2_197:4.6.2.6
	Kernel-5_35-4_79_2_196:4.6.2.6
	Kernel-5_35-4_79_2_195:4.6.2.6
	Kernel-5_35-4_79_2_194:4.6.2.6
	Kernel-5_35-4_79_2_193:4.6.2.6
	Kernel-5_35-4_79_2_192:4.6.2.6
	Kernel-5_35-4_79_2_191:4.6.2.6
	Kernel-5_35-4_79_2_190:4.6.2.6
	Kernel-5_35-4_79_2_189:4.6.2.6
	Kernel-5_35-4_79_2_188:4.6.2.6
	Kernel-5_35-4_79_2_187:4.6.2.6
	Kernel-5_35-4_79_2_186:4.6.2.6
	Kernel-5_35-4_79_2_185:4.6.2.6
	Kernel-5_35-4_79_2_184:4.6.2.6
	Kernel-5_35-4_79_2_183:4.6.2.6
	Kernel-5_35-4_79_2_182:4.6.2.6
	Kernel-5_35-4_79_2_181:4.6.2.6
	Kernel-5_35-4_79_2_180:4.6.2.6
	Kernel-5_35-4_79_2_179:4.6.2.6
	Kernel-5_35-4_79_2_178:4.6.2.6
	Kernel-5_35-4_79_2_177:4.6.2.5
	Kernel-5_35-4_79_2_176:4.6.2.5
	Kernel-5_35-4_79_2_175:4.6.2.5
	Kernel-5_35-4_79_2_174:4.6.2.5
	Kernel-5_35-4_79_2_173:4.6.2.5
	Kernel-5_35-4_79_2_172:4.6.2.5
	Kernel-5_35-4_79_2_171:4.6.2.5
	Kernel-5_35-4_79_2_170:4.6.2.5
	Kernel-5_35-4_79_2_169:4.6.2.5
	Kernel-5_35-4_79_2_168:4.6.2.5
	Kernel-5_35-4_79_2_167:4.6.2.5
	Kernel-5_35-4_79_2_166:4.6.2.5
	Kernel-5_35-4_79_2_165:4.6.2.5
	RPi_merge:4.6.2.4.2.1
	Kernel-5_35-4_79_2_147_2_23:4.6.2.4.2.1
	Kernel-5_35-4_79_2_147_2_22:4.6.2.4
	Kernel-5_35-4_79_2_147_2_21:4.6.2.4
	Kernel-5_35-4_79_2_147_2_20:4.6.2.4
	Kernel-5_35-4_79_2_147_2_19:4.6.2.4
	Kernel-5_35-4_79_2_147_2_18:4.6.2.4
	Kernel-5_35-4_79_2_164:4.6.2.5
	Kernel-5_35-4_79_2_163:4.6.2.5
	Kernel-5_35-4_79_2_147_2_17:4.6.2.4
	Kernel-5_35-4_79_2_147_2_16:4.6.2.4
	Kernel-5_35-4_79_2_147_2_15:4.6.2.4
	Kernel-5_35-4_79_2_162:4.6.2.5
	Kernel-5_35-4_79_2_161:4.6.2.5
	Kernel-5_35-4_79_2_147_2_14:4.6.2.4
	Kernel-5_35-4_79_2_147_2_13:4.6.2.4
	Kernel-5_35-4_79_2_160:4.6.2.5
	Kernel-5_35-4_79_2_159:4.6.2.5
	Kernel-5_35-4_79_2_158:4.6.2.5
	Kernel-5_35-4_79_2_157:4.6.2.5
	Kernel-5_35-4_79_2_156:4.6.2.4
	Kernel-5_35-4_79_2_147_2_12:4.6.2.4
	Kernel-5_35-4_79_2_147_2_11:4.6.2.4
	Kernel-5_35-4_79_2_155:4.6.2.4
	Kernel-5_35-4_79_2_147_2_10:4.6.2.4
	Kernel-5_35-4_79_2_154:4.6.2.4
	Kernel-5_35-4_79_2_153:4.6.2.4
	Kernel-5_35-4_79_2_147_2_9:4.6.2.4
	Kernel-5_35-4_79_2_152:4.6.2.4
	Kernel-5_35-4_79_2_151:4.6.2.4
	Kernel-5_35-4_79_2_147_2_8:4.6.2.4
	Kernel-5_35-4_79_2_147_2_7:4.6.2.4
	Kernel-5_35-4_79_2_150:4.6.2.4
	Kernel-5_35-4_79_2_147_2_6:4.6.2.4
	Kernel-5_35-4_79_2_147_2_5:4.6.2.4
	Kernel-5_35-4_79_2_149:4.6.2.4
	Kernel-5_35-4_79_2_147_2_4:4.6.2.4
	Kernel-5_35-4_79_2_147_2_3:4.6.2.4
	Kernel-5_35-4_79_2_148:4.6.2.4
	Kernel-5_35-4_79_2_147_2_2:4.6.2.4
	Kernel-5_35-4_79_2_147_2_1:4.6.2.4
	RPi:4.6.2.4.0.2
	RPi_bp:4.6.2.4
	Kernel-5_35-4_79_2_98_2_52_2_1:4.6.2.3
	alees_Kernel_dev:4.6.2.3.0.4
	alees_Kernel_dev_bp:4.6.2.3
	Kernel-5_35-4_79_2_147:4.6.2.4
	Kernel-5_35-4_79_2_146:4.6.2.4
	Kernel-5_35-4_79_2_145:4.6.2.4
	Kernel-5_35-4_79_2_144:4.6.2.4
	Kernel-5_35-4_79_2_143:4.6.2.4
	Kernel-5_35-4_79_2_142:4.6.2.4
	Kernel-5_35-4_79_2_141:4.6.2.4
	Kernel-5_35-4_79_2_140:4.6.2.4
	Kernel-5_35-4_79_2_139:4.6.2.4
	Kernel-5_35-4_79_2_138:4.6.2.4
	Kernel-5_35-4_79_2_137:4.6.2.4
	Kernel-5_35-4_79_2_136:4.6.2.4
	Kernel-5_35-4_79_2_135:4.6.2.4
	Kernel-5_35-4_79_2_134:4.6.2.4
	Kernel-5_35-4_79_2_133:4.6.2.4
	Kernel-5_35-4_79_2_132:4.6.2.4
	Kernel-5_35-4_79_2_131:4.6.2.4
	Kernel-5_35-4_79_2_130:4.6.2.4
	Kernel-5_35-4_79_2_129:4.6.2.4
	Kernel-5_35-4_79_2_128:4.6.2.4
	Kernel-5_35-4_79_2_127:4.6.2.4
	Kernel-5_35-4_79_2_126:4.6.2.4
	Kernel-5_35-4_79_2_125:4.6.2.3
	Kernel-5_35-4_79_2_124:4.6.2.3
	Kernel-5_35-4_79_2_123:4.6.2.3
	Cortex_merge:4.6.2.3
	Kernel-5_35-4_79_2_122:4.6.2.3
	Kernel-5_35-4_79_2_98_2_54:4.6.2.3
	Kernel-5_35-4_79_2_98_2_53:4.6.2.3
	Kernel-5_35-4_79_2_98_2_52:4.6.2.3
	Kernel-5_35-4_79_2_98_2_51:4.6.2.3
	Kernel-5_35-4_79_2_98_2_50:4.6.2.3
	Kernel-5_35-4_79_2_98_2_49:4.6.2.3
	Kernel-5_35-4_79_2_98_2_48:4.6.2.3
	Kernel-5_35-4_79_2_121:4.6.2.3
	Kernel-5_35-4_79_2_98_2_47:4.6.2.3
	Kernel-5_35-4_79_2_120:4.6.2.3
	Kernel-5_35-4_79_2_98_2_46:4.6.2.3
	Kernel-5_35-4_79_2_119:4.6.2.3
	Kernel-5_35-4_79_2_98_2_45:4.6.2.3
	Kernel-5_35-4_79_2_98_2_44:4.6.2.3
	Kernel-5_35-4_79_2_118:4.6.2.3
	Kernel-5_35-4_79_2_98_2_43:4.6.2.3
	Kernel-5_35-4_79_2_117:4.6.2.3
	Kernel-5_35-4_79_2_116:4.6.2.3
	Kernel-5_35-4_79_2_98_2_42:4.6.2.3
	Kernel-5_35-4_79_2_115:4.6.2.3
	Kernel-5_35-4_79_2_98_2_41:4.6.2.3
	Kernel-5_35-4_79_2_98_2_40:4.6.2.3
	Kernel-5_35-4_79_2_114:4.6.2.3
	Kernel-5_35-4_79_2_98_2_39:4.6.2.3
	Kernel-5_35-4_79_2_98_2_38:4.6.2.3
	Kernel-5_35-4_79_2_113:4.6.2.3
	Kernel-5_35-4_79_2_112:4.6.2.3
	Kernel-5_35-4_79_2_98_2_37:4.6.2.3
	Kernel-5_35-4_79_2_98_2_36:4.6.2.3
	Kernel-5_35-4_79_2_98_2_35:4.6.2.3
	Kernel-5_35-4_79_2_98_2_34:4.6.2.3
	Kernel-5_35-4_79_2_98_2_33:4.6.2.3
	Kernel-5_35-4_79_2_98_2_32:4.6.2.3
	Kernel-5_35-4_79_2_98_2_31:4.6.2.3
	Kernel-5_35-4_79_2_98_2_30:4.6.2.3
	Kernel-5_35-4_79_2_98_2_29:4.6.2.3
	Kernel-5_35-4_79_2_98_2_28:4.6.2.3
	Kernel-5_35-4_79_2_98_2_27:4.6.2.3
	Kernel-5_35-4_79_2_98_2_26:4.6.2.3
	Kernel-5_35-4_79_2_111:4.6.2.3
	Kernel-5_35-4_79_2_98_2_25:4.6.2.3
	Kernel-5_35-4_79_2_98_2_24:4.6.2.3
	Kernel-5_35-4_79_2_98_2_23:4.6.2.3
	Kernel-5_35-4_79_2_110:4.6.2.3
	Kernel-5_35-4_79_2_98_2_22:4.6.2.3
	Kernel-5_35-4_79_2_109:4.6.2.3
	Kernel-5_35-4_79_2_98_2_21:4.6.2.3
	Kernel-5_35-4_79_2_98_2_20:4.6.2.3
	Kernel-5_35-4_79_2_108:4.6.2.3
	Kernel-5_35-4_79_2_107:4.6.2.3
	Kernel-5_35-4_79_2_98_2_19:4.6.2.3
	Kernel-5_35-4_79_2_98_2_18:4.6.2.3
	Kernel-5_35-4_79_2_98_2_17:4.6.2.3
	Kernel-5_35-4_79_2_98_2_16:4.6.2.3
	Kernel-5_35-4_79_2_98_2_15:4.6.2.3
	Kernel-5_35-4_79_2_106:4.6.2.3
	Kernel-5_35-4_79_2_105:4.6.2.3
	Kernel-5_35-4_79_2_104:4.6.2.3
	Kernel-5_35-4_79_2_98_2_14:4.6.2.3
	Kernel-5_35-4_79_2_98_2_13:4.6.2.3
	Kernel-5_35-4_79_2_98_2_12:4.6.2.3
	Kernel-5_35-4_79_2_98_2_11:4.6.2.3
	Kernel-5_35-4_79_2_98_2_10:4.6.2.3
	Kernel-5_35-4_79_2_98_2_9:4.6.2.3
	Kernel-5_35-4_79_2_103:4.6.2.3
	Kernel-5_35-4_79_2_102:4.6.2.3
	Kernel-5_35-4_79_2_98_2_8:4.6.2.3
	Kernel-5_35-4_79_2_98_2_7:4.6.2.3
	Kernel-5_35-4_79_2_98_2_6:4.6.2.3
	Kernel-5_35-4_79_2_98_2_5:4.6.2.3
	Kernel-5_35-4_79_2_98_2_4:4.6.2.3
	Kernel-5_35-4_79_2_101:4.6.2.3
	Kernel-5_35-4_79_2_100:4.6.2.3
	Kernel-5_35-4_79_2_99:4.6.2.3
	Kernel-5_35-4_79_2_98_2_3:4.6.2.3
	Kernel-5_35-4_79_2_98_2_2:4.6.2.3
	Kernel-5_35-4_79_2_98_2_1:4.6.2.3
	Cortex:4.6.2.3.0.2
	Cortex_bp:4.6.2.3
	Kernel-5_35-4_79_2_98:4.6.2.3
	Kernel-5_35-4_79_2_97:4.6.2.3
	Kernel-5_35-4_79_2_96:4.6.2.3
	Kernel-5_35-4_79_2_95:4.6.2.3
	Kernel-5_35-4_79_2_94:4.6.2.3
	Kernel-5_35-4_79_2_93:4.6.2.3
	Kernel-5_35-4_79_2_92:4.6.2.3
	Kernel-5_35-4_79_2_91:4.6.2.3
	Kernel-5_35-4_79_2_90:4.6.2.3
	Kernel-5_35-4_79_2_89:4.6.2.3
	Kernel-5_35-4_79_2_88:4.6.2.3
	Kernel-5_35-4_79_2_87:4.6.2.3
	Kernel-5_35-4_79_2_86:4.6.2.3
	Kernel-5_35-4_79_2_85:4.6.2.3
	Kernel-5_35-4_79_2_84:4.6.2.3
	Kernel-5_35-4_79_2_83:4.6.2.3
	Kernel-5_35-4_79_2_82:4.6.2.3
	Kernel-5_35-4_79_2_81:4.6.2.3
	Kernel-5_35-4_79_2_80:4.6.2.3
	Kernel-5_35-4_79_2_79:4.6.2.3
	Kernel-5_35-4_79_2_78:4.6.2.3
	Kernel-5_35-4_79_2_77:4.6.2.3
	RO_5_07:4.6.2.3
	Kernel-5_35-4_79_2_76:4.6.2.3
	Kernel-5_35-4_79_2_75:4.6.2.3
	Kernel-5_35-4_79_2_74:4.6.2.3
	Kernel-5_35-4_79_2_73:4.6.2.3
	Kernel-5_35-4_79_2_72:4.6.2.3
	Kernel-5_35-4_79_2_71:4.6.2.3
	Kernel-5_35-4_79_2_70:4.6.2.3
	Kernel-5_35-4_79_2_69:4.6.2.3
	Kernel-5_35-4_79_2_68:4.6.2.3
	Kernel-5_35-4_79_2_67:4.6.2.3
	Kernel-5_35-4_79_2_66:4.6.2.3
	Kernel-5_35-4_79_2_65:4.6.2.3
	Kernel-5_35-4_79_2_64:4.6.2.3
	Kernel-5_35-4_79_2_63:4.6.2.3
	Kernel-5_35-4_79_2_62:4.6.2.3
	Kernel-5_35-4_79_2_61:4.6.2.3
	Kernel-5_35-4_79_2_59:4.6.2.3
	Kernel-5_35-4_79_2_58:4.6.2.3
	Kernel-5_35-4_79_2_57:4.6.2.3
	Kernel-5_35-4_79_2_56:4.6.2.3
	Kernel-5_35-4_79_2_55:4.6.2.3
	Kernel-5_35-4_79_2_54:4.6.2.3
	Kernel-5_35-4_79_2_53:4.6.2.3
	Kernel-5_35-4_79_2_52:4.6.2.3
	Kernel-5_35-4_79_2_51:4.6.2.3
	Kernel-5_35-4_79_2_50:4.6.2.2
	Kernel-5_35-4_79_2_49:4.6.2.2
	Kernel-5_35-4_79_2_48:4.6.2.2
	Kernel-5_47:4.7
	Kernel-5_46-4_90_2_1:4.7
	nbingham_Kernel_FastNC_dev_bp:4.7
	nbingham_Kernel_FastNC_dev:4.7.0.2
	Kernel-5_46:4.7
	Kernel-5_45:4.7
	Kernel-5_35-4_79_2_47:4.6.2.1
	Kernel-5_35-4_79_2_46:4.6.2.1
	Kernel-5_35-4_79_2_45:4.6.2.1
	Kernel-5_35-4_79_2_44:4.6.2.1
	Kernel-5_35-4_79_2_25_2_2:4.6.2.1
	Kernel-5_35-4_79_2_43:4.6.2.1
	Kernel-5_35-4_79_2_42:4.6.2.1
	Kernel-5_35-4_79_2_41:4.6.2.1
	Kernel-5_35-4_79_2_40:4.6.2.1
	Kernel-5_35-4_79_2_39:4.6.2.1
	Kernel-5_35-4_79_2_38:4.6.2.1
	Kernel-5_35-4_79_2_37:4.6.2.1
	Kernel-5_35-4_79_2_36:4.6.2.1
	Kernel-5_35-4_79_2_35:4.6.2.1
	Kernel-5_35-4_79_2_34:4.6.2.1
	Kernel-5_35-4_79_2_33:4.6.2.1
	Kernel-5_35-4_79_2_32:4.6.2.1
	Kernel-5_44:4.7
	Kernel-5_35-4_79_2_25_2_1:4.6.2.1
	Kernel-5_43:4.7
	Kernel-5_35-4_79_2_31:4.6.2.1
	Kernel-5_35-4_79_2_30:4.6.2.1
	Kernel-5_35-4_79_2_29:4.6.2.1
	Kernel-5_35-4_79_2_28:4.6.2.1
	Kernel-5_35-4_79_2_27:4.6.2.1
	Kernel-5_35-4_79_2_26:4.6.2.1
	Kernel-5_42:4.7
	Kernel-5_41:4.7
	Kernel-5_40:4.7
	Kernel-5_35-4_79_2_25:4.6.2.1
	Kernel-5_35-4_79_2_24:4.6.2.1
	Kernel-5_35-4_79_2_23:4.6.2.1
	Kernel-5_35-4_79_2_22:4.6.2.1
	Kernel-5_35-4_79_2_21:4.6.2.1
	Kernel-5_35-4_79_2_20:4.6.2.1
	Kernel-5_35-4_79_2_19:4.6.2.1
	Kernel-5_35-4_79_2_18:4.6.2.1
	Kernel-5_35-4_79_2_17:4.6.2.1
	Kernel-5_35-4_79_2_16:4.6.2.1
	Kernel-5_35-4_79_2_15:4.6.2.1
	Kernel-5_35-4_79_2_14:4.6.2.1
	Kernel-5_39:4.7
	Kernel-5_13-4_52_2_1:4.3
	Bethany:4.3.0.2
	Kernel-5_38:4.7
	Kernel-5_35-4_79_2_13:4.6.2.1
	Kernel-5_35-4_79_2_12:4.6.2.1
	Kernel-5_35-4_79_2_11:4.6.2.1
	Kernel-5_37:4.6
	Kernel-5_35-4_79_2_10:4.6.2.1
	Kernel-5_35-4_79_2_9:4.6
	Kernel-5_36:4.6
	Kernel-5_35-4_79_2_8:4.6
	Kernel-5_35-4_79_2_7:4.6
	Kernel-5_35-4_79_2_6:4.6
	Kernel-5_35-4_79_2_5:4.6
	Kernel-5_35-4_79_2_4:4.6
	Kernel-5_35-4_79_2_3:4.6
	Kernel-5_35-4_79_2_2:4.6
	dellis_autobuild_BaseSW:4.6
	Kernel-5_35-4_79_2_1:4.6
	HAL:4.6.0.2
	Kernel-5_35:4.6
	Kernel-5_34:4.6
	Kernel-5_33:4.6
	Kernel-5_32:4.6
	Kernel-5_31:4.6
	Kernel-5_30:4.6
	Kernel-5_29:4.6
	Kernel-5_28:4.4
	Kernel-5_27:4.4
	Kernel-5_26:4.4
	Kernel-5_25:4.4
	Kernel-5_24:4.4
	Kernel-5_23:4.4
	Kernel-5_22:4.3
	sbrodie_sedwards_16Mar2000:4.3
	Kernel-5_21:4.3
	Kernel-5_20:4.3
	Kernel-5_19:4.3
	Kernel-5_18:4.3
	Kernel-5_17:4.3
	Kernel-5_16:4.3
	Kernel-5_15:4.3
	Kernel-5_14:4.3
	Kernel-5_13:4.3
	Kernel-5_12:4.3
	Kernel-5_11:4.3
	Kernel-5_10:4.3
	Kernel-5_09:4.3
	Kernel-5_08:4.3
	Kernel-5_07:4.3
	Kernel-5_06:4.3
	Kernel-5_05:4.3
	Kernel-5_04:4.3
	Kernel-5_03:4.3
	Kernel-5_02:4.3
	Kernel-5_01:4.3
	Kernel-5_00:4.3
	Kernel-4_99:4.3
	Kernel-4_98:4.3
	Kernel-4_97:4.3
	Kernel-4_96:4.3
	Kernel-4_95:4.3
	Kernel-4_94:4.3
	Kernel-4_93:4.3
	Kernel-4_92:4.3
	Kernel-4_91:4.3
	Kernel-4_90:4.3
	dcotton_autobuild_BaseSW:4.7
	Kernel-4_89:4.3
	Kernel-4_88:4.3
	Kernel-4_87:4.3
	Kernel-4_86:4.3
	Kernel-4_85:4.3
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.1.4.1
	Kernel-4_84:4.3
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.1.4.1
	Ursula_RiscPC_bp:4.1.4.1
	Kernel-4_83:4.3
	Kernel-4_82:4.3
	Kernel-4_81:4.3
	Kernel-4_80:4.3
	Kernel-4_79:4.3
	Kernel-4_78:4.3
	Kernel-4_77:4.3
	Kernel-4_76:4.3
	Kernel-4_75:4.3
	Kernel-4_74:4.3
	Kernel-4_73:4.3
	Kernel-4_72:4.3
	Kernel-4_71:4.3
	Kernel-4_70:4.3
	Kernel-4_69:4.3
	Kernel-4_68:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1
	Ursula_RiscPC:4.1.4.1.0.2
	Kernel-4_63-1_1_2_5:4.1.7.3
	Kernel-4_63-1_1_2_4:4.1.7.3
	Kernel-4_67:4.3
	Kernel-4_66:4.3
	Kernel-4_63-1_1_2_3:4.1.7.3
	Kernel-4_65:4.3
	Ursula_merge:4.1.4.1
	Kernel-4_64:4.2
	mstphens_Kernel-3_81:4.1.4.1
	Kernel-4_63-1_1_2_2:4.1.7.3
	nicke_Kernel_4_62:4.1.7.3
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	nturton_v459:4.1.7.2
	nturton_v460:4.1.7.2
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	mstphens_Kernel-3_80:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	afrost_Boca-1_2-Beta:4.1.7.2
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	afrost_NC2_Generic:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.4
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	ARTtmp:4.1.7.2.0.2
	Spin_merge:4.1.7.3
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.9
date	2016.08.02.22.10.37;	author jlee;	state Exp;
branches;
next	4.8;
commitid	CnQYuUGzojQfrMgz;

4.8
date	2016.06.30.20.07.42;	author jlee;	state Exp;
branches;
next	4.7;
commitid	IWoXxARWeuLDOwcz;

4.7
date	2000.11.21.15.19.53;	author sbrodie;	state Exp;
branches;
next	4.6;

4.6
date	2000.06.27.10.33.19;	author srevill;	state Exp;
branches
	4.6.2.1;
next	4.5;

4.5
date	2000.06.27.10.28.33;	author srevill;	state Exp;
branches;
next	4.4;

4.4
date	2000.04.04.14.27.21;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.10.01.07.42.31;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.09.30.08.41.56;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.41.02;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.6.2.1
date	2000.10.16.11.55.37;	author kbracey;	state Exp;
branches;
next	4.6.2.2;

4.6.2.2
date	2002.10.07.17.29.33;	author kbracey;	state Exp;
branches;
next	4.6.2.3;

4.6.2.3
date	2002.11.30.00.30.59;	author bavison;	state Exp;
branches;
next	4.6.2.4;

4.6.2.4
date	2011.11.27.12.53.50;	author rsprowson;	state Exp;
branches
	4.6.2.4.2.1;
next	4.6.2.5;
commitid	qUSTS070aqq3kYIv;

4.6.2.5
date	2012.07.01.21.26.25;	author rsprowson;	state Exp;
branches;
next	4.6.2.6;
commitid	K3GB4gteEYUubUaw;

4.6.2.6
date	2012.12.05.01.16.13;	author jlee;	state Exp;
branches;
next	4.6.2.7;
commitid	jNXy5BkvBl5srYuw;

4.6.2.7
date	2013.12.15.21.33.53;	author jlee;	state Exp;
branches;
next	4.6.2.8;
commitid	KwuK29hKRyXO7hhx;

4.6.2.8
date	2014.12.21.10.13.02;	author rsprowson;	state Exp;
branches;
next	4.6.2.9;
commitid	mV2MnLoz7tiTqT2y;

4.6.2.9
date	2016.02.29.09.34.23;	author bavison;	state Exp;
branches;
next	4.6.2.10;
commitid	MTrfU2BUG24IeNWy;

4.6.2.10
date	2016.04.05.19.36.30;	author jlee;	state Exp;
branches;
next	;
commitid	8RLqvkae1X7wpt1z;

4.6.2.4.2.1
date	2012.09.18.15.49.44;	author jlee;	state Exp;
branches;
next	;
commitid	jeuxYpI6CQUxM1lw;

4.1.1.1
date	96.11.05.09.41.02;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.59.30;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.05.23.13.06.46;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.10.33;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.03.14;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.11.19.16.41;	author nturton;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	98.07.21.17.57.30;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.9
log
@Add support for shareable pages and additional access privileges
Detail:
  This set of changes:
  * Refactors page table entry encoding/decoding so that it's (mostly) performed via functions in the MMU files (s.ARM600, s.VMSAv6) rather than on an ad-hoc basis as was the case previously
  * Page table entry encoding/decoding performed during ROM init is also handled via the MMU functions, which resolves some cases where the wrong cache policy was in use on ARMv6+
  * Adds basic support for shareable pages - on non-uniprocessor systems all pages will be marked as shareable (however, we are currently lacking ARMops which broadcast cache maintenance operations to other cores, so safe sharing of cacheable regions isn't possible yet)
  * Adds support for the VMSA XN flag and the "privileged ROM" access permission. These are exposed via RISC OS access privileges 4 and above, taking advantage of the fact that 4 bits have always been reserved for AP values but only 4 values were defined
  * Adds OS_Memory 17 and 18 to convert RWX-style access flags to and from RISC OS access privelege numbers; this allows us to make arbitrary changes to the mappings of AP values 4+ between different OS/hardware versions, and allows software to more easily cope with cases where the most precise AP isn't available (e.g. no XN on <=ARMv5)
  * Extends OS_Memory 24 (CheckMemoryAccess) to return executability information
  * Adds exported OSMem header containing definitions for OS_Memory and OS_DynamicArea
  File changes:
  - Makefile - export C and assembler versions of hdr/OSMem
  - Resources/UK/Messages - Add more text for OS_Memory errors
  - hdr/KernelWS - Correct comment regarding DCacheCleanAddress. Allocate workspace for MMU_PPLTrans and MMU_PPLAccess.
  - hdr/OSMem - New file containing exported OS_Memory and OS_DynamicArea constants, and public page flags
  - hdr/Options - Reduce scope of ARM6support to only cover builds which require ARMv3 support
  - s/AMBControl/Workspace - Clarify AMBNode_PPL usage
  - s/AMBControl/growp, mapslot, mapsome, memmap - Use AreaFlags_ instead of AP_
  - s/AMBControl/main, memmap - Use GetPTE instead of generating page table entry manually
  - s/ARM600 - Remove old coments relating to lack of stack. Update BangCam to use GetPTE. Update PPL tables, removing PPLTransL1 (L1 entries are now derived from L2 table on demand) and adding a separate table for ARM6. Implement the ARM600 versions of the Get*PTE ('get page table entry') and Decode*Entry functions
  - s/ARMops - Add Init_PCBTrans function to allow relevant MMU_PPLTrans/MMU_PCBTrans pointers to be set up during the pre-MMU stage of ROM init. Update ARM_Analyse to set up the pointers that are used post MMU init.
  - s/ChangeDyn - Move a bunch of flags to hdr/OSMem. Rename the AP_ dynamic area flags to AreaFlags_ to avoid name clashes and confusion with the page table AP_ values exported by Hdr:MEMM.ARM600/Hdr:MEMM.VMSAv6. Also generate the relevant flags for OS_Memory 24 so that it can refer to the fixed areas by their name instead of hardcoding the permissions.
  - s/GetAll - GET Hdr:OSMem
  - s/HAL - Change initial page table setup to use DA/page flags and GetPTE instead of building page table entries manually. Simplify AllocateL2PT by removing the requirement for the user to supply the access perimssions that will be used for the area; instead for ARM6 we just assume that cacheable memory is the norm and set L1_U for any L1 entry we create here.
  - s/Kernel - Add GetPTE macro (for easier integration of Get*PTE functions) and GenPPLAccess macro (for easy generation of OS_Memory 24 flags)
  - s/MemInfo - Fixup OS_Memory 0 to not fail on seeing non-executable pages. Implement OS_Memory 17 & 18. Tidy up some error generation. Make OS_Memory 13 use GetPTE. Extend OS_Memory 24 to return (non-) executability information, to use the named CMA_ constants generated by s/ChangeDyn, and to use the Decode*Entry functions when it's necessary to decode page table entries.
  - s/NewReset - Use AreaFlags_ instead of AP_
  - s/VMSAv6 - Remove old comments relating to lack of stack. Update BangCam to use GetPTE. Update PPL tables, removing PPLTransL1 (L1 entries are now derived from L2 table on demand) and adding a separate table for shareable pages. Implement the VMSAv6 versions of the Get*PTE and Decode*Entry functions.
Admin:
  Tested on Raspberry Pi 1, Raspberry Pi 3, Iyonix, RPCEmu (ARM6 & ARM7), comparing before and after CAM and page table dumps to check for any unexpected differences


Version 5.55. Tagged as 'Kernel-5_55'
@
text
@BadNumb:Number not recognised
NoSuchSWI1:SWI &%0 not known
VarCantFind:System variable '%0' not found
BuffOverflow:Buffer overflow
Escape:Escape
Syntax:Syntax
OptErr:Syntax: *Opt [<x> [[,] <y>]]
NoHelp:No help found.
HelpFound:==> Help on keyword %0
Address:Address  :
ASCII:ASCII data
Unp:Unplugged modules are:
NoUnp:No modules are unplugged
Podule:(Podule %0)
Extn:(Extn ROM %0)
Modules:No. Position Workspace Name
Number:(Number)
Macro:(Macro)
Result:Result is %0, value :
Integer:an integer
String:a string
ROMMTitle:No. Position|IModule Name|I|IVersion|IStatus|M|J
SYSROM:System ROM
EXTROM:Extn ROM
PODROM:Podule
Active:Active
Dormant:Dormant
Unplugged:Unplugged
Running:Running
Untitled:<Untitled>
Supervisor:Supervisor
ErrSub:E
YesNo:yn
Config:Configuration
Options:options:
Status:status:
Err: (Error number &%0)
Error:Error: %0 (Error number &%1)
UndefinedInstruction:Internal error: undefined instruction at &%0
InstructionAbort:Internal error: abort on instruction fetch at &%0
DataAbort:Internal error: abort on data transfer at &%0
AddressException:Internal error: address exception at &%0
BranchThrough0:Internal error: branch through zero
SDoesntExist:Sprite doesn't exist
ModuleTooOld:Module %0 too old
NaffRelease:Bad vector release
RMNotFound:Module %0 not found
NaffDevNo:Bad device number
BadDevVecRel:Bad device release
RedirectFail:Redirection fails
StackFull:Not enough memory on system stack
OscliLongLine:Too long
NoOscliSpecials:Special field not allowed in filing system prefix to OS_CLI
OscliTooHard:Expansion too complex
BadCommand:Command not recognised
BadParmString:Parameter expansion contains unrecognised characters
TooManyParms:Too many parameters
BadKey:Key number must be in the range 0-15
BadAddress:Address not recognised
OutsideFile:Outside file
NotABlock:Not a heap block
BadDesc:Bad heap descriptor
HeapBadReason:Bad reason code
HeapFailInit:Can't initialise heap
BadLink:Heap overwritten
HeapFailAlloc:Not enough memory (in heap)
BadExtend:Not enough memory (to extend heap)
ExcessiveShrink:Can't shrink heap any further
BadModuleReason:Unknown OS_Module call
CantKill:Module is currently active
MHNoRoom:The area of memory reserved for relocatable modules is full
NoMoreModules:No more modules
NoMoreIncarnations:No more incarnations of that module
PostfixNeeded:Postfix not specified
IncarnationExists:Incarnation already exists
ChunkNotRM:Podule chunk is not a relocatable module
ModulePostfix:'%%' in module title
NotMod:This is not a relocatable module
BadRMHeaderField:Illegal header field in module
RMNot32bit:Module '%0' is not 32-bit compatible
IncarnationNotFound:Incarnation not found
RMNotFoundInROM:Module is not in ROM
NumbTooBig:Number too big
BadBase:Base not recognised
BadClaimNum:Bad vector number
SysHeapFull:The area of memory reserved for the system heap is full
NotAllMoved:Memory cannot be moved
ChDynamCAO:Can't change memory area (application running)
AplWSpaceInUse:Application memory area in use
RAMFsUnchangeable:The size of the RAM filing system can only be changed when it is empty
BadDynamicArea:Unknown dynamic area
AreaAlreadyExists:Dynamic area already exists
AreaNotOnPageBdy:Base address not on page boundary
OverlappingAreas:Overlapping areas
CantAllocateArea:Unable to allocate logical address space
CantAllocateLevel2:Unable to allocate page tables for area
UnknownAreaHandler:Unknown dynamic area handler call
RCExc:Return code limit exceeded
RCNegative:Negative return code
BadString:String not recognised
BadVarType:Bad variable type
VarNoRoom:The area of memory reserved for the system variables is full. Use the Task Manager to make more space in the system heap/stack area.
BadMacVal:Bad macro value
BadVarNam:Variable name not recognised
VarTooLong:Variable value too long
BadParameters:Parameters not recognised
ArgRepeated:Argument repeated
BadBra:Mismatched brackets
StkOFlo:Expression stack overflow
MissOpn:Missing operand
MissOpr:Missing operator
BadInt:String is not convertible to integer
StrOFlo:String too long
NaffItm:Unknown operand
DivZero:Division by zero
NotNumeric:Numeric parameter needed
NoThen:There is no THEN
IsString:Expression is a string
ConParmTooBig:Configure parameter too big
BadConOpt:Configure option not recognised
BadStat:Status option not recognised
Config2manyparms:Too many parameters
NoSuchSWI2:SWI name not known
BadTime:Invalid time interval
BadEnvNumber:Bad Environment number
BadReadSysInfo:Unknown OS_ReadSysInfo call
BadMODE:Not enough memory to change to this screen mode
SNoWorkSpace:No memory is reserved for the system sprite area. Use the Task Manager to make some space for the system sprites.
SNoRoom:Not enough memory to create sprite
NoSprites:No sprites
NotGraphics:Not a graphics mode
SCantOpenFile:Can't open file
SNotEnoughRoom:Not enough memory in sprite area
SBadSpriteFile:Bad sprite file
SNoRoomToMerge:Not enough memory to add sprite
SBad2ndPtr:Bad 2nd ptr
InvalidRowOrCol:Invalid row or column
InvalidHeight:Invalid height
InvalidWidth:Invalid width
NoRoomToInsert:Not enough memory to insert row or column
SpriteAlreadyExists:Sprite already exists
InvalidSpriteMode:Invalid sprite mode
SBadReasonCode:Bad sprite reason code
CantInTeletext:Can't switch output in teletext mode
SInvalidSaveArea:Invalid save area
SpriteIsCurrentDest:Sprite is current destination
BadDPI:Illegal XDPI or YDPI in sprite
ModeNotAvailable:Screen mode not available
BadPixelDepth:Bad pixel depth
BadMSFlags:Illegal flags in mode selector
CDATStackOverflow:System stack overflow
NoSuchSWI:SWI not known
BadSav:Incorrect number of parameters for *Save
CmosRst:CMOS RAM reset, press ESCAPE to continue
MonType:Monitor type reconfigured
NoKbd:No keyboard present - autobooting
BreakPt:Stopped at break point at &%0
STail:|J|MUse *Configure to set the options.|J|M
CTail1:|J|MWhere:|J|MD is a decimal number, a hexadecimal number preceded by &,|J|Mor the base followed by underscore, followed|J|M
CTail2:by digits in the given base.|J|MItems within [ ] are optional.|J|MUse *Status to display the current settings.|J|M
Zonk:Unknown OS_ScreenMode reason code
SNoMask:Mask or Palette operations not supported in this display depth
BadVIDCDiv:Bad VIDC divider value
BadPlatReas:Unknown OS_PlatformFeatures reason code
UnConv:Unsupported conversion
BadKeyHandler:Bad key handler
BadGDriver:Bad graphics driver number
TooManyGDrivers:Too many graphics drivers
BadErrPtr:SWI &%0 returned a bad error pointer
NoMemChunkAvailable:No chunk available
NoRoomForIO:No room for IO space
AccessPrivilegeNotFound:Access privilege not found

600:ARM 600 Processor
610:ARM 610 Processor
700:ARM 700 Processor
710:ARM 710 Processor
710a:ARM 710a Processor
SA110:SA-110 Processor
7500:ARM 7500 Processor
7500FE:ARM 7500FE Processor
SA1100:SA-1100 Processor
SA1110:SA-1110 Processor
720T:ARM 720T Processor
920T:ARM 920T Processor
922T:ARM 922T Processor
X80200:80200 Processor
X80321:80321 Processor
ARM1176JZF_S:ARM1176JZF-S Processor
CA5:Cortex-A5 Processor
CA7:Cortex-A7 Processor
CA8:Cortex-A8 Processor
CA9:Cortex-A9 Processor
CA15:Cortex-A15 Processor
CA17:Cortex-A17 Processor
CA53:Cortex-A53 Processor
CA57:Cortex-A57 Processor
CA72:Cortex-A72 Processor
@


4.8
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@d170 3
@


4.7
log
@  32-bit kernels will refuse to initialise non 32-bit modules.
Detail:
  The kernel will examine all modules that it is requested to initialise
    and will refuse to initialise any module without a module flags word
    entry in its module header or with bit 0 the first flags word being
    clear (bit 0 being ModuleFlag_32bit)
  Error message added to all the messages files.
  New error block added to message counting block.  The Non-32-bit module
    message is not a cached error message, though.
Admin:
  Tested in 32-bit Lazarus build.

Version 5.38. Tagged as 'Kernel-5_38'
@
text
@d80 1
a80 1
RMNot32bit:Module is not 32-bit compatible
d154 2
a155 1
MonType:Monitor type reconfigured.
d165 5
d175 2
d179 17
a195 2
810:ARM 810 Processor
SA110:StrongARM Processor
@


4.6
log
@Changed the "can not" to "cannot" for purists...
@
text
@d80 1
@


4.6.2.1
log
@More stuff. Up to the desktop now; cache on, working keyboard. Some source
restructuring to start to make splitting it up into several object files more
feasible.
@
text
@a167 2
710a:ARM 710a Processor
SA110:SA-110 Processor
d170 2
a171 6
SA1100:SA-1100 Processor
SA1110:SA-1110 Processor
720T:ARM 720T Processor
920T:ARM 920T Processor
922T:ARM 922T Processor
X80200:80200 Processor
@


4.6.2.2
log
@Lots of Tungsten work.

Version 5.35, 4.79.2.48. Tagged as 'Kernel-5_35-4_79_2_48'
@
text
@a79 1
RMNot32bit:Module is not 32-bit compatible
@


4.6.2.3
log
@  Commit of kernel as featured in release 5.00.
Detail:
  Lots of changes since last version, at least the following:
  * Updated OS timestamp, removed alpha status
  * Negative INKEY OS version changed to &AA
  * GraphicsV is now alocated vector number &2A
  * ROM moved up to &FC000000
  * Max application slot increased to 512 Mbytes (for now)
  * Max size of RMA increased to 256 Mbytes
  * RMA is now first-created dynamic area (so it gets lowest address after
    top of application slot)
  * OS_Memory 10 reimplemeted
  * New OS_ReadSysInfo 6 values 18-22 added
  * OS_ReadSysInfo 8 gains flag bit to indicate soft power-off
  * Misc internal top-bit-set-address fixes
  * *ChangeDynamicArea can take sizes in megabytes or gigabytes
  * Magic word "&off" in R0 passed to OS_Reset powers down if possible
  * Added acceleration: block copy; CLS; text window scroll up; rectangle
    fill
  * Disabled LED flashing in page mode (liable to crash)
  * Masked sprite plot and VDU 5 text avoids reading the screen if possible
  * Framestore made USR mode accessible
  * Fix for VDU 5,127 bug - now relies on font definitions being in extreme
    quarters of memory, rather than bottom half
  * Allocated 64-bit OS_Convert... SWIs
  * IIC errors use allocated error numbers
  * Looks for Dallas RTC before Philips RTC because we're using a Philips
    NVRAM device with the same ID
  * Fix to bug that meant the oscillator in the Dallas RTC wasn't enabled
  * Default mouse type (USB) changed to allocated number
  * Ram disc max size increased to 128 Mbytes (Ursula merge) and made
    cacheable for StrongARMs (not XScale)
  * Branch through zero handler now works in USR mode, by use of a
    trampoline in the system stack to allow PC-relative register storage
  * Address exception handler changed to not use 0 as workspace
  * OS_Memory 13 extended to allow specification of cacheability and access
    privileges
  * Added OS_Memory 16 to return important memory addresses
  * RISCOS_MapInIO() takes cacheable flag in bit 3, access permissions in
    bits 10 and 11, doubly-mapped flag in bit 20, and access permissions
    specified flag in bit 21
  * Bug fix in last version for application abort handlers didn't quite
    work; register shuffle required
  * "Module is not 32-bit compatible" error now reports the module name
  * Default configured language changed from 10 to 11 (now Desktop again)

Version 5.35, 4.79.2.51. Tagged as 'Kernel-5_35-4_79_2_51'
@
text
@d80 1
a80 1
RMNot32bit:Module '%0' is not 32-bit compatible
a178 1
X80321:80321 Processor
@


4.6.2.4
log
@Added 'UnConv' error (see also HdrSrc).
Implement OS_ConvertVariform, internally the other conversions now just call it.
Add tester for Variform to 'Dev'.
Made block copy weirdness for XScale dependent on XScale arch flag.

Version 5.35, 4.79.2.126. Tagged as 'Kernel-5_35-4_79_2_126'
@
text
@a163 1
UnConv:Unsupported conversion
@


4.6.2.4.2.1
log
@Merge with HAL branch
Detail:
  Merge the HAL branch into the RPi branch, prior to merging RPi to HAL
  Brief summary of main changes brought in:
  * Added *cache functionality previously provided by ARM module
  * Added "CMOS RAM reset" message on startup when CMOS has been wiped by keypress
  * Renamed HAL Video entries from HAL_Video_XXX to HAL_VideoXXX
  * Dropped mjsHAL macros, GRAB/STASH macros
  * Fixed pseudo-VRAM allocation when machine has exactly 16MB of RAM
  * Added OS_Hardware 5
  * Use OS_SerialOp GetDeviceName for getting serial device name
  * Drop HAL_MonitorLeadID
  * Rework default GraphicsV_IICOp handler
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.23. Tagged as 'Kernel-5_35-4_79_2_147_2_23'
@
text
@d154 1
a154 2
CmosRst:CMOS RAM reset, press ESCAPE to continue
MonType:Monitor type reconfigured
@


4.6.2.5
log
@Sort out SetBorder
NewReset.s:
The one remaining use of SetBorder was to denote the user asked for and got a CMOS reset, which in the HAL case emitted a warning because setting the border is potentially complicated/slow.
To solve this, the reset is noted and replaces the normal RISC OS banner with a warning message. The behaviour and text for this comes from the BBC Master, though the escape key is used in place of break since a reset isn't actually needed.
Moved the unused cputable inside its corresponding switch.
Two occurrences of WriteS_Translated would have executed the message in the V=1 case.
KernelWS/Resources:
Flag added to workspace, translation added to messages files.
Heapman.s:
Commented out use of SetBorder removed.
Kernel.s:
SetBorder macro removed.
Middle.s:
Switched out use of SetBorder removed.
Super1.s:
Conditional WriteS_Translated would try to execute the message in the opposite condition case.


Version 5.35, 4.79.2.157. Tagged as 'Kernel-5_35-4_79_2_157'
@
text
@d154 1
a154 2
CmosRst:CMOS RAM reset, press ESCAPE to continue
MonType:Monitor type reconfigured
@


4.6.2.6
log
@Add support for new extended internal key codes, low level key codes, and key handler format
Detail:
  s/Middle - Added OS_ReadSysInfo 13 to allow the kernel to validate a key handler before the owner attempts to install it
  Resources/UK/Messages - Text for new "Bad key handler" error
  s/GetAll, s/PMF/Def - Get rid of now obsolete s/PMF/Def file. It only contained definitions for pre-HAL hardware, and for the key handler layout (now in Hdr:Keyboard)
  hdr/KeyWS - Increased size of KeysDown array so it can hold 768 keys instead of 160. Trim a couple of obsolete variables, and increase CurrKey/OldKey from 1 byte to 4 bytes.
  s/PMF/key, s/PMF/osbyte - Main bulk of the changes for the new key handling. All the important interfaces are now able to deal with extended (i.e. > 8 bit) internal key numbers, and the kernel is able to cope with key handlers which use 16 bit internal/low level key numbers instead of 8 bit.
Admin:
  Tested on Pandora & BB-xM
  Requires HdrSrc-2_20


Version 5.35, 4.79.2.178. Tagged as 'Kernel-5_35-4_79_2_178'
@
text
@a165 1
BadKeyHandler:Bad key handler
@


4.6.2.7
log
@Assorted GraphicsV improvements
Detail:
  This set of changes:
  * Adds basic support for multiple GraphicsV drivers, by way of some new OS_ScreenMode reason codes for registering/deregistering, selecting and enumerating drivers (11, 64-68)
  * Tidies up handling of HAL video calls so that the HAL calls will be transformed into a bona fide GraphicsV driver if they're implemented
  * Changes handling of 16bpp gamma table entries so that they're sent to GraphicsV in a generic form instead of in a VIDC-specific form
  * Adds a new GraphicsV call and defines new VIDC list items to allow GraphicsV drivers to utilise the new pixel formats
  File changes:
  * h/VIDCList, hdr/VIDCList, Makefile - Add new header export containing VIDC list type 3 definitions, to avoid repeated definitions in other components
  * Resources/UK/Messages - Add new GraphicsV/OS_ScreenMode error strings and some missing processor type strings
  * hdr/KernelWS - Clean up some pre-GraphicsV definitions, and add new workspace locations for storing the current GraphicsV driver number and the driver list
  * hdr/Options - Remove obsolete InverseTextTransparency option
  * hdr/VduExt - Add VDU variable 192 for storing GraphicsV driver number (same as ROL's VideoV driver number). Remove old 'Flag_*' mode flag definitions (use new 'ModeFlag_*' defintions instead). Add new OS_ScreenMode reason codes.
  * s/ARM600, s/VMSAv6, s/vdu/vdu23, s/vdu/vdugrafa, s/vdu/vdugrafd, s/vdu/vdupalxx, s/vdu/vdupointer, s/vdu/vduwrch - Strip out pre-GraphicsV code. Update GraphicsV code to use correct driver number.
  * s/ArthurSWIs - Pass the default GraphicsV claimant the VduDriverWorkSpace instead of ZeroPage
  * s/Getall - Add Hdr:VIDCList and s/vdu/VduGrafHAL to list of GETs
  * s/NewIRQs - Remove HAL VSync IRQ initialisation, is now handled by grafvhal. Remove old HAL VsyncIRQ entry point, all VSyncs are now handled by VsyncIRQ_ExtEntry.
  * s/PMF/osbyte - Stop OS_Byte 19 waiting forever if no video driver is active
  * s/PMF/osinit - Remove HAL VSync IRQ initialisation, is now handled by grafvhal
  * s/vdu/vducursoft - Use new workspace variable names and flag names
  * s/vdu/vdudecl - Remove old HALDAG_* definitions, GVDAG_* definitions are used instead. Add definition of the per-driver workspace structure and flags.
  * s/vdu/vdudriver - Remove pre-GraphicsV code. Update InitialiseMode to check for and initialise a HAL driver. Use cached driver features word in a few places instead of calling GraphicsV each time. Update PalIndexTable to disable VIDC mangling of 16bpp gamma tables.
  * s/vdu/vdugrafv, s/vdu/vdugrafhal - HAL<->GraphicsV code split off into its own file (vdugrafhal). Default GraphicsV claimant now only deals with VSync events for the active driver.
  * s/vdu/vdumodes - Get rid of old VIDC List type 3 definiton; now in hdr/VIDCList
  * s/vdu/vduswis - Added OS_ScreenMode reason codes 11 and 64-68 for registering, deregistering, selecting and enumerating GraphicsV drivers. Update mode set code to not bother checking if the driver supports the pixel format; instead we assume that the driver's vet mode call will do the check for us.
Admin:
  Tested in Tungsten, IOMD, OMAP3 & BCM2835 ROMs
  Requires HdrSrc-2_38 and updated video driver modes


Version 5.35, 4.79.2.203. Tagged as 'Kernel-5_35-4_79_2_203'
@
text
@a166 2
BadGDriver:Bad graphics driver number
TooManyGDrivers:Too many graphics drivers
a182 3
CortexA8:Cortex-A8 Processor
CortexA9:Cortex-A9 Processor
ARM1176JZF_S:ARM1176JZF-S Processor
@


4.6.2.8
log
@Delegate L2 (and below) cache init at power on/reset to the HAL
Historically the kernel looked after all aspects of cache control since they were common across all ARMs. However, not all cache controllers are created equal, and sometimes more complex initialisation steps are needed than fit the generic coprocessor ops - for example the PL310 attached to a Cortex-A9 has memory mapped control registers.
Rather than clutter the kernel with one shot init code for every cache controller invented, we delegate that step to the HAL in HAL_Init. This is only a few hundred instructions later than where it was already being set. The kernel remains responsible for subsequent maintenance, this is just init which is being handed off.
A quick survey of the Cortex-A TRMs shows:
A5 - optional, for example ARM's PL310, ref TRM section 8.1.7.
A7 - optional, C bit of SCTLR, ref TRM section 1.1.
A8 - L2EN bit of ACTLR, note this bit has been recycled for other uses on other cores, ref TRM section 8.3.
A9 - not integrated, ARM's PL310 uses bit 0 of control register 1, ref PL310 TRM section 3.1.1.
A12 - see A17
A15 - integrated, C bit of SCTLR, ref TRM section 7.2.3.
A17 - integrated, bit 18 of L2CTLR & C bit of SCTLR, ref TRM section 7.2.
and while we've got the TRMs open, back fill the CPU id register table.

Version 5.35, 4.79.2.250. Tagged as 'Kernel-5_35-4_79_2_250'
@
text
@d185 2
a187 6
CA5:Cortex-A5 Processor
CA7:Cortex-A7 Processor
CA8:Cortex-A8 Processor
CA9:Cortex-A9 Processor
CA15:Cortex-A15 Processor
CA17:Cortex-A17 Processor
@


4.6.2.9
log
@  Support for ARMv8
Detail:
  * Filled in CPU tables for publicly documented ARMv8 cores (Cortex-A53,57,72).
  * Recent ARM ARMs (e.g. section B1.9.2 of the ARMv7AR ARM) permit the core to
    take an undefined instruction exception upon encountering even not-taken
    conditional undefined instructions. This option is exercised by the
    Cortex-A53, unlike all ARMv7 cores previously supported by RISC OS. This
    unfortunately trips up a lot of kernel code that adapts to different
    architectures at runtime. These have now all been replaced with branches
    over the affected code on the opposite condition.
  * Fixed bug in HAL_InvalidateCache_ARMvF: for the main body of the loop,
    which was written as though to act on the CLIDR register, r8 actually
    contained the CTR register instead.
Admin:
  Tested on Raspberry Pi 3

Version 5.35, 4.79.2.304. Tagged as 'Kernel-5_35-4_79_2_304'
@
text
@a191 3
CA53:Cortex-A53 Processor
CA57:Cortex-A57 Processor
CA72:Cortex-A72 Processor
@


4.6.2.10
log
@Add SWI error pointer validation, SeriousErrorV hooks, and OS_ReadSysInfo 15
Detail:
  Resources/UK/Messages, hdr/KernelWS, s/Kernel - On return from a SWI with V set, do some basic validity checks on the error pointer in order to try and catch buggy SWIs that return bad pointers or invalid error blocks. If a bad pointer is found we'll substitute it with a pointer to a different error block, which has the SWI number in the error message, to allow the user to identify the source of the problem. (There's also a chance we'll crash when investigating a bad pointer, but crashing here in the kernel is preferable to crashing elsewhere because R12 should still contain the SWI number)
  hdr/OSMisc - Define SeriousErrorV reason codes and extended ROM footer entry IDs
  hdr/Options - Remove HangWatch integration flag, obsolete now that SeriousErrorV is available
  s/ArthurSWIs - Keep defaultvectab up to date with vector allocations
  s/Middle - Update serious error handling to call SeriousErrorV at several key points. This allows for accurate crash dumps to be obtained, along with a mechanism to warn low-level components such as RTSupport that the privileged mode stacks are being flattened.
  s/Middle - Add OS_ReadSysInfo 15, for enumerating extended ROM footer entries
  s/PMF/osbyte - Update InitNewFX0Error to use the ROM footer entry ID defined in hdr/OSMisc
Admin:
  Tested on Pi 1B, 2B, 3B


Version 5.35, 4.79.2.313. Tagged as 'Kernel-5_35-4_79_2_313'
@
text
@a168 1
BadErrPtr:SWI &%0 returned a bad error pointer
@


4.5
log
@  Added new Resources dirs for Desktop builds and made the main
  messages more generic.
Detail:
  RiscPC-like (UserIF = Morris4) and Ursula-like (UserIF=Ursula)
  builds of the Kernel have their messages in a subdirectory while
  more generic builds use the main Messages file.

  The main file has had the RISC OS User Guide references removed
  and the "There is not enough memory" message changed to the more
  correct "Memory can not be moved".
Admin:
  Partially tested. Fixed STB-400 fault #1479

Version 5.29. Tagged as 'Kernel-5_29'
@
text
@d86 1
a86 1
NotAllMoved:Memory can not be moved
@


4.4
log
@  32-bit Kernel.

Details:
  The Kernel will now compile to produce a pure 32-bit system if No26bitCode is
  set to TRUE.
  If No26bitCode is FALSE, then the Kernel will be a standard 26-bit Kernel,
  although some internal changes have taken place to minimise compile
  switches between the two cases. See Docs.32bit for more technical info.

  The hardest part was the flood-fill...

Other changes:
  Pointer shape changes now take place on the next VSync, rather than actually
  WAITING for the VSync. Turning the Hourglass on shouldn't slow your machine
  down by 5% now :)

  Lots of really crusty pre-IOMD code removed.

Admin:
  Tested in 32 and 26-bit forms in a limited desktop build. Basically, this
  will need to see a lot of use to iron out difficulties. I'd like anyone who
  has a non-frozen project to at least attempt using this Kernel.

Version 5.23. Tagged as 'Kernel-5_23'
@
text
@d71 1
a71 1
MHNoRoom:The area of memory reserved for relocatable modules is full. Quit any unwanted applications or see the RISC OS User Guide for ways to maximise memory.
d85 2
a86 2
SysHeapFull:The area of memory reserved for the system heap is full. Quit any unwanted applications or see the RISC OS User Guide for ways to maximise memory.
NotAllMoved:There is not enough memory to perform this operation. Quit any unwanted applications or see the RISC OS User Guide for ways to maximise memory. (Memory cannot be moved)
@


4.3
log
@Following changes folded in from the start of the Ursula branch:
CPU type messages internationalised.
"Unknown OS_PlatformFeatures reason code" internationalised.
RunningOnEmul flag tweaked.
MorrisIDString conditional removed.
New modules added to SWI list at the end of the chain, on grounds that
the first-registered modules are probably more important.
*ChangeDynamicArea moved into UtilityModule from TaskManager.

Version 4.65. Tagged as 'Kernel-4_65'
@
text
@d1 4
d43 1
a43 2
BranchThrough0:Internal error: branch through zero at &%0
NoSuchSWI1:SWI &%0 not known
a44 3
VarCantFind:System variable '%0' not found
BuffOverflow:Buffer overflow
BadNumb:Number not recognised
@


4.2
log
@Spinner branch merged.
Bandwidth limit for 7500FE fixed.
RO371Timings flag set to :LNOT:STB

Version 4.64. Tagged as 'Kernel-4_64'
@
text
@d15 1
a15 1
Result:Result is %0, value : 
d20 2
a21 2
EXTROM:Extn ROM 
PODROM:Podule 
d161 11
a171 1
BadVIDCDiv:Bad VIDC divider value.
@


4.1
log
@Initial revision
@
text
@d161 1
a161 161

#{DictTokens}
HUTMCON:*Configure <item> [<parameter>] sets the CMOS RAM options.*Status displays the current options.Items implemented in modules are: 
HUTMMOD:*Modules lists the modules currently loaded, giving the name and address of the module, and also the address of its workspace.See also *ROMModules.Modules loaded are: 
HUTMCOM:Utility commands: 
HUTMFSC:Filing System commands: 
HUTMMD:Module is: 
HUTMCM:Commands provided: 
HUTMFS:Filing system commands: 
HUTMCK:Configuration keywords: 
HUTMHK:It has help on: 

#{Token0=Break}
HUTMBRK:The Break key either terminates tasks, or (with CTRL or SHIFT) acts like the Reset button.When Reset is pressed, the following keys have an effect:SHIFT causes an autoboot (unless Boot is configured).keypad-* causes the supervisor to be run rather than the configured language.See also *Help PowerOn. 
#{Token0=Echo}
HUTMECH:*Echo sends a string to the VDU, after transformation by GSRead.Syntax: *Echo <string> 
#{Token0=Error}
HUTMERR:*Error generates an error with the given number and text. 
SUTMERR:Syntax: *Error [<number>] <text> 
#{Token0=Eval}
HUTMEVL:*Eval evaluates an integer or string expression.The expression analyser has the following operators:+			addition or string concatenation-, *, /, MOD		integer operations=, <, >, <=, >=, <>	string or integer comparison>>, <<			arithmetic shift right and left>>>			logical shift rightSTR, VAL		conversion between strings and integersAND, OR, EOR, NOT	(bitwise) logical operatorsRIGHT, LEFT		substring extractionLEN			length of a stringBrackets can also be used. 
SUTMEVL:Syntax: *Eval <expression> 
#{Token0=GOS}
HUTMGOS:*GOS enters the supervisor. Use *Quit to exit. 
SUTMGOS:Syntax: *GOS 
#{Token0=IF}
HUTMIF:*IF conditionally executes another command depending on the value of an expression. 
SUTMIF:Syntax: *IF <expression> THEN <command> [ELSE <command>] 
#{Token0=Ignore}
HUTMIGN:*Ignore sets the printer ignore character. 
SUTMIGN:Syntax: *Ignore [<number>] 
#{Token0=Modules}
SUTMMOD:Syntax: *Modules 
#{Token0=PowerOn}
HUTMPOW:When the machine is switched on, the following keys have an effect:R causes the operating system's CMOS RAM to be reset.DELETE causes all the machine's CMOS RAM to be reset.T and COPY are similar to R and DELETE, but set the opposite configured sync.0 to 9 on the keypad reset (just) the configured monitor type. Keypad dot sets the configured mode, sync and monitor type to Auto.See also *Help Reset and *Help Break. 
#{Token0=Reset}
HUTMRES:When Reset is pressed, the following keys have an effect:SHIFT causes an autoboot (unless Boot is configured).keypad-* causes the supervisor to be run rather than the configured language.See also *Help PowerOn. 
#{Token0=RMClear}
HUTMRMC:*RMClear deletes all relocatable modules from the RMA. 
SUTMRMC:Syntax: *RMClear 
#{Token0=RMEnsure}
HUTMRME:*RMEnsure checks that a module is present and is the given version, or a more modern one. The command is executed if this is not the case. 
SUTMRME:Syntax: *RMEnsure <moduletitle> <version number> [<*command>] 
#{Token0=RMFaster}
HUTMRMF:*RMFaster moves a module from ROM to RAM. 
SUTMRMF:Syntax: *RMFaster <moduletitle> 
#{Token0=RMInsert}
HUTMRMI:*RMInsert reverses the effect of *Unplug, but does not reinitialise the specified ROM module. 
SUTMRMI:Syntax: *RMInsert <moduletitle> [<podule number>] 
#{Token0=RMKill}
HUTMRMK:*RMKill kills and deletes a relocatable module. 
SUTMRMK:Syntax: *RMKill <moduletitle> 
#{Token0=RMLoad}
HUTMRML:*RMLoad loads and initialises a relocatable module. 
SUTMRML:Syntax: *RMLoad <filename> 
#{Token0=RMReInit}
HUTMRMR:*RMReInit reinitialises a relocatable module, reversing the action of *Unplug if appropriate. 
SUTMRMR:Syntax: *RMReInit <moduletitle> 
#{Token0=RMRun}
HUTMRRN:*RMRun runs a relocatable module. 
SUTMRRN:Syntax: *RMRun <filename> 
#{Token0=RMTidy}
HUTMRMT:*RMTidy compacts the RMA and reinitialises all the modules. 
SUTMRMT:Syntax: *RMTidy 
#{Token0=ROMModules}
HUTMROM:*ROMModules lists the relocatable modules currently in ROM, along with their status.See also *Modules. 
SUTMROM:Syntax: *ROMModules 
#{Token0=Set}
HUTMSET:*Set assigns a string value to a system variable. Other types of value can be assigned with *SetEval and *SetMacro. 
SUTMSET:Syntax: *Set <varname> <value> 
#{Token0=SetEval}
HUTMSTE:*SetEval evaluates an expression and assigns it to a system variable. Other types of value can be assigned with *Set and *SetMacro."*Help Eval" describes the expression syntax. 
SUTMSTE:Syntax: *SetEval <varname> <expression> 
#{Token0=SetMacro}
HUTMSTM:*SetMacro assigns a macro value to a system variable. Other types of value can be assigned with *Set and *SetEval. 
SUTMSTM:Syntax: *SetMacro <varname> <value> 
#{Token0=Show}
HUTMSHO:*Show lists system variables matching the name given, or all system variables if no name is specified. Variables can be set with *Set, *SetEval and *SetMacro. 
SUTMSHO:Syntax: *Show [<variablespec>] 
#{Token0=Status}
HUTMSTA:*Status shows the selected CMOS RAM options. Use *Configure to set the options. 
SUTMSTA:Syntax: *Status [<option>] 
#{Token0=Syntax}
HUTMSYN:Symbols used in syntax descriptions:<> mark sections to be filled in, e.g. <filename> indicates that a filename should be supplied here.[] mark optional sections.| indicates a choice, e.g. "A|B" means "A or B". 
#{Token0=Time}
HUTMTIM:*Time displays the time and date. 
SUTMTIM:Syntax: *Time 
#{Token0=Unplug}
HUTMUNP:*Unplug stops the given ROM module being initialised.*Unplug with no argument lists the unplugged ROM modules. 
SUTMUNP:Syntax: *Unplug [<moduletitle> [<podule number>]] 
#{Token0=Unset}
HUTMUNS:*Unset deletes a system variable. 
SUTMUNS:Syntax: *Unset <varname> 

#{Token0=Append}
HUTMAPP:*Append opens an existing file and subsequent lines of keyboard input are appended to it, input being terminated by ESCAPE. 
SUTMAPP:Syntax: *Append <filename> 
#{Token0=Build}
HUTMBUI:*Build opens a new file and subsequent lines of keyboard input are directed to it, input being terminated by ESCAPE. 
SUTMBUI:Syntax: *Build <filename> 
#{Token0=Close}
HUTMCLO:*Close closes all files on the current filing system. 
SUTMCLO:Syntax: *Close 
#{Token0=Create}
HUTMCRE:*Create reserves space for the named file, optionally giving it load and execution addresses. No data is transferred to the file. Length and addresses are in hexadecimal. 
SUTMCRE:Syntax: *Create <filename> [<length> [<exec addr> [<load addr>]]] 
#{Token0=Delete}
HUTMDEL:*Delete tries to delete the named file, returning an error if the file does not exist. 
SUTMDEL:Syntax: *Delete <filename> 
#{Token0=Dump}
HUTMDMP:*Dump displays the contents of the file as a hex and ASCII dump. The file offset and start address are in hexadecimal. 
SUTMDMP:Syntax: *Dump <filename> [<file offset> [<start address>]] 
#{Token0=Exec}
HUTMEXE:*Exec <filename> directs the operating system to take further input from the given file.*Exec with no filename causes the exec file to be closed. 
SUTMEXE:Syntax: *Exec [<filename>] 
#{Token0=FX}
HUTMFX:*FX calls OS_Byte. 
SUTMFX:Syntax: *FX r0 [[,] r1 [[,] r2]] 
#{Token0=GO}
HUTMGO:*GO [<address>] [; environment] - go to address (hexadecimal), default &8000. Text after ';' is environment string. 
#{Token0=Help}
HUTMHLP:*Help <subjects> attempts to give useful information on the selected topics. Special keywords include:Commands	List all the available utility commandsFileCommands	List all the filing system-specific commandsModules		List the module titlesSyntax		Explain the syntax message format 
#{Token0=Key}
HUTMKEY:*Key sets the function keys. 
SUTMKEY:Syntax: *Key <keynumber> [<value>] 
#{Token0=List}
HUTMLST:*List displays the contents of the file in the configured GSRead format. Each line is preceded with a line number.See also *Print and *Type. 
SUTMLST:Syntax: *List [-File] <filename> [-TabExpand] 
#{Token0=Load}
HUTMLOD:*Load with no specified address loads the named file at its own load address. If a load address (hexadecimal) is specified, it will be used instead. 
SUTMLOD:Syntax: *Load <filename> [<load addr>] 
#{Token0=Opt}
HUTMOPT:*Opt controls various filing system actions.Opt 1 <n> Set the filing system message level (for Load/Save/Create):	0	No filing system messages	1	Filename printed	2	Filename,hexadecimal addresses and length printed	3	Filename,datestamp and length printedOpt 4 <n> Set the filing system boot option:	0	No boot action	1	*Load boot file	2	*Run boot file	3	*Exec boot file 
SUTMOPT:Syntax: *Opt [<x> [[,] <y>]] 
#{Token0=Print}
HUTMPRI:*Print displays the contents of a file by sending each byte to the VDU.See also *List and *Type. 
SUTMPRI:Syntax: *Print <filename> 
#{Token0=Quit}
HUTMQUI:*Quit leaves the current application. 
SUTMQUI:Syntax: *Quit 
#{Token0=Remove}
HUTMREM:*Remove tries to delete the named file without returning an error if the file does not exist. 
SUTMREM:Syntax: *Remove <filename> 
#{Token0=Save}
HUTMSAV:*Save copies the given area of memory to the named file. Length and addresses are in hexadecimal. 
SUTMSAV:Syntax: *Save <filename> <start addr> <end addr> [<exec addr> [<load addr>]]or *Save <filename> <start addr> + <length> [<exec addr> [<load addr>]] 
#{Token0=Shadow}
HUTMSHA:*Shadow makes subsequent mode changes use the other screen bank. 
SUTMSHA:Syntax: *Shadow 
#{Token0=Spool}
HUTMSPL:*Spool <filename> opens a new file and causes subsequent VDU output to be directed to it, subject to the current *fx 3 status. *Spool with no filename causes the spool file to be closed. 
SUTMSPL:Syntax: *Spool [<filename>] 
#{Token0=SpoolOn}
HUTMSPO:*SpoolOn <filename> opens an existing file and causes subsequent VDU output to be appended to it, subject to the current *fx 3 status. *SpoolOn with no filename causes the spool file to be closed. 
SUTMSPO:Syntax: *SpoolOn [<filename>] 
#{Token0=TV}
HUTMTV:*TV [<vertical position> [[,] <interlace>]] sets the position of the display on the screen. 
SUTMTV:Syntax: *TV needs 0 to 2 parameters. 
#{Token0=Type}
HUTMTYP:*Type displays the contents of the file in the configured GSRead format.See also *List and *Print. 
SUTMTYP:Syntax: *Type [-File] <filename> [-TabExpand] 
@


4.1.4.1
log
@Module SWI chunks added to end of linked list on grounds that first loaded
modules are probably more important, so should be checked first.
Some RISC OS 3.70 bits internationalised.
*ChangeDynamicArea moved into UtilityModule from TaskManager.
@
text
@d15 1
a15 1
Result:Result is %0, value :
d20 2
a21 2
EXTROM:Extn ROM
PODROM:Podule
a160 10
BadPlatReas:Unknown OS_PlatformFeatures reason code

600:ARM 600 Processor
610:ARM 610 Processor
700:ARM 700 Processor
710:ARM 710 Processor
7500:ARM 7500 Processor
7500FE:ARM 7500FE Processor
810:ARM 810 Processor
SA110:StrongARM Processor
a174 3
#{Token0=ChangeDynamicArea}
HUTMCDA:*ChangeDynamicArea allows the size of the font cache, system sprite area, RAM disc, module area and screen memory to be set up. 
SUTMCDA:Syntax: *ChangeDynamicArea [-FontSize <n>[K]] [-SpriteSize <n>[K]] [-RamFsSize <n>[K]] [-RMASize <n>[K]] [-ScreenSize <n>[K]] 
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Command line messages removed
@
text
@d161 161
@


4.1.7.3
log
@Added SWI OS_VIDCDivider, and vdu variable PixelRate for better video mode
support.  Fixed to build for Risc PC.
@
text
@a160 1
BadVIDCDiv:Bad VIDC divider value.
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
