head	1.3;
access;
symbols
	Kernel-5_35-4_79_2_246:1.1.2.4
	Kernel-5_35-4_79_2_245:1.1.2.4
	Kernel-5_35-4_79_2_244:1.1.2.4
	Kernel-5_35-4_79_2_243:1.1.2.4
	Kernel-5_35-4_79_2_242:1.1.2.4
	Kernel-5_35-4_79_2_241:1.1.2.4
	Kernel-5_35-4_79_2_240:1.1.2.4
	Kernel-5_35-4_79_2_239:1.1.2.4
	Kernel-5_35-4_79_2_238:1.1.2.4
	Kernel-5_35-4_79_2_237:1.1.2.4
	Kernel-5_35-4_79_2_236:1.1.2.4
	Kernel-5_35-4_79_2_235:1.1.2.4
	Kernel-5_35-4_79_2_234:1.1.2.4
	Kernel-5_35-4_79_2_233:1.1.2.4
	Kernel-5_35-4_79_2_232:1.1.2.4
	Kernel-5_35-4_79_2_231:1.1.2.4
	Kernel-5_35-4_79_2_230:1.1.2.4
	Kernel-5_35-4_79_2_229:1.1.2.4
	Kernel-5_35-4_79_2_228:1.1.2.4
	Kernel-5_35-4_79_2_227:1.1.2.4
	Kernel-5_35-4_79_2_226:1.1.2.4
	Kernel-5_35-4_79_2_225:1.1.2.4
	Kernel-5_35-4_79_2_224:1.1.2.4
	Kernel-5_35-4_79_2_223:1.1.2.4
	Kernel-5_35-4_79_2_222:1.1.2.4
	Kernel-5_35-4_79_2_221:1.1.2.4
	Kernel-5_35-4_79_2_220:1.1.2.4
	Kernel-5_35-4_79_2_219:1.1.2.4
	Kernel-5_35-4_79_2_218:1.1.2.4
	Kernel-5_35-4_79_2_217:1.1.2.4
	Kernel-5_35-4_79_2_216:1.1.2.4
	Kernel-5_35-4_79_2_215:1.1.2.4
	Kernel-5_35-4_79_2_214:1.1.2.4
	Kernel-5_35-4_79_2_213:1.1.2.4
	Kernel-5_35-4_79_2_212:1.1.2.4
	Kernel-5_35-4_79_2_211:1.1.2.4
	Kernel-5_35-4_79_2_210:1.1.2.4
	Kernel-5_35-4_79_2_209:1.1.2.4
	Kernel-5_35-4_79_2_208:1.1.2.4
	Kernel-5_35-4_79_2_207:1.1.2.4
	Kernel-5_35-4_79_2_206:1.1.2.4
	Kernel-5_35-4_79_2_205:1.1.2.4
	Kernel-5_35-4_79_2_204:1.1.2.4
	Kernel-5_35-4_79_2_203:1.1.2.4
	Kernel-5_35-4_79_2_202:1.1.2.4
	Kernel-5_35-4_79_2_201:1.1.2.4
	Kernel-5_35-4_79_2_200:1.1.2.4
	Kernel-5_35-4_79_2_199:1.1.2.4
	Kernel-5_35-4_79_2_198:1.1.2.4
	Kernel-5_35-4_79_2_197:1.1.2.4
	Kernel-5_35-4_79_2_196:1.1.2.4
	Kernel-5_35-4_79_2_195:1.1.2.4
	Kernel-5_35-4_79_2_194:1.1.2.4
	Kernel-5_35-4_79_2_193:1.1.2.4
	Kernel-5_35-4_79_2_192:1.1.2.4
	Kernel-5_35-4_79_2_191:1.1.2.4
	Kernel-5_35-4_79_2_190:1.1.2.4
	Kernel-5_35-4_79_2_189:1.1.2.4
	Kernel-5_35-4_79_2_188:1.1.2.4
	Kernel-5_35-4_79_2_187:1.1.2.4
	Kernel-5_35-4_79_2_186:1.1.2.4
	Kernel-5_35-4_79_2_185:1.1.2.4
	Kernel-5_35-4_79_2_184:1.1.2.4
	Kernel-5_35-4_79_2_183:1.1.2.4
	Kernel-5_35-4_79_2_182:1.1.2.4
	Kernel-5_35-4_79_2_181:1.1.2.4
	Kernel-5_35-4_79_2_180:1.1.2.4
	Kernel-5_35-4_79_2_179:1.1.2.4
	Kernel-5_35-4_79_2_178:1.1.2.4
	Kernel-5_35-4_79_2_177:1.1.2.4
	Kernel-5_35-4_79_2_176:1.1.2.4
	Kernel-5_35-4_79_2_175:1.1.2.4
	Kernel-5_35-4_79_2_174:1.1.2.4
	Kernel-5_35-4_79_2_173:1.1.2.4
	Kernel-5_35-4_79_2_172:1.1.2.4
	Kernel-5_35-4_79_2_171:1.1.2.4
	Kernel-5_35-4_79_2_170:1.1.2.4
	Kernel-5_35-4_79_2_169:1.1.2.4
	Kernel-5_35-4_79_2_168:1.1.2.4
	Kernel-5_35-4_79_2_167:1.1.2.4
	Kernel-5_35-4_79_2_166:1.1.2.4
	Kernel-5_35-4_79_2_165:1.1.2.4
	RPi_merge:1.1.2.3.2.1
	Kernel-5_35-4_79_2_147_2_23:1.1.2.3.2.1
	Kernel-5_35-4_79_2_147_2_22:1.1.2.3
	Kernel-5_35-4_79_2_147_2_21:1.1.2.3
	Kernel-5_35-4_79_2_147_2_20:1.1.2.3
	Kernel-5_35-4_79_2_147_2_19:1.1.2.3
	Kernel-5_35-4_79_2_147_2_18:1.1.2.3
	Kernel-5_35-4_79_2_164:1.1.2.4
	Kernel-5_35-4_79_2_163:1.1.2.4
	Kernel-5_35-4_79_2_147_2_17:1.1.2.3
	Kernel-5_35-4_79_2_147_2_16:1.1.2.3
	Kernel-5_35-4_79_2_147_2_15:1.1.2.3
	Kernel-5_35-4_79_2_162:1.1.2.4
	Kernel-5_35-4_79_2_161:1.1.2.4
	Kernel-5_35-4_79_2_147_2_14:1.1.2.3
	Kernel-5_35-4_79_2_147_2_13:1.1.2.3
	Kernel-5_35-4_79_2_160:1.1.2.4
	Kernel-5_35-4_79_2_159:1.1.2.4
	Kernel-5_35-4_79_2_158:1.1.2.4
	Kernel-5_35-4_79_2_157:1.1.2.4
	Kernel-5_35-4_79_2_156:1.1.2.3
	Kernel-5_35-4_79_2_147_2_12:1.1.2.3
	Kernel-5_35-4_79_2_147_2_11:1.1.2.3
	Kernel-5_35-4_79_2_155:1.1.2.3
	Kernel-5_35-4_79_2_147_2_10:1.1.2.3
	Kernel-5_35-4_79_2_154:1.1.2.3
	Kernel-5_35-4_79_2_153:1.1.2.3
	Kernel-5_35-4_79_2_147_2_9:1.1.2.3
	Kernel-5_35-4_79_2_152:1.1.2.3
	Kernel-5_35-4_79_2_151:1.1.2.3
	Kernel-5_35-4_79_2_147_2_8:1.1.2.3
	Kernel-5_35-4_79_2_147_2_7:1.1.2.3
	Kernel-5_35-4_79_2_150:1.1.2.3
	Kernel-5_35-4_79_2_147_2_6:1.1.2.3
	Kernel-5_35-4_79_2_147_2_5:1.1.2.3
	Kernel-5_35-4_79_2_149:1.1.2.3
	Kernel-5_35-4_79_2_147_2_4:1.1.2.3
	Kernel-5_35-4_79_2_147_2_3:1.1.2.3
	Kernel-5_35-4_79_2_148:1.1.2.3
	Kernel-5_35-4_79_2_147_2_2:1.1.2.3
	Kernel-5_35-4_79_2_147_2_1:1.1.2.3
	RPi:1.1.2.3.0.2
	RPi_bp:1.1.2.3
	Kernel-5_35-4_79_2_98_2_52_2_1:1.1.2.2
	alees_Kernel_dev:1.1.2.2.0.4
	alees_Kernel_dev_bp:1.1.2.2
	Kernel-5_35-4_79_2_147:1.1.2.3
	Kernel-5_35-4_79_2_146:1.1.2.3
	Kernel-5_35-4_79_2_145:1.1.2.3
	Kernel-5_35-4_79_2_144:1.1.2.3
	Kernel-5_35-4_79_2_143:1.1.2.3
	Kernel-5_35-4_79_2_142:1.1.2.3
	Kernel-5_35-4_79_2_141:1.1.2.3
	Kernel-5_35-4_79_2_140:1.1.2.3
	Kernel-5_35-4_79_2_139:1.1.2.3
	Kernel-5_35-4_79_2_138:1.1.2.3
	Kernel-5_35-4_79_2_137:1.1.2.3
	Kernel-5_35-4_79_2_136:1.1.2.3
	Kernel-5_35-4_79_2_135:1.1.2.3
	Kernel-5_35-4_79_2_134:1.1.2.3
	Kernel-5_35-4_79_2_133:1.1.2.3
	Kernel-5_35-4_79_2_132:1.1.2.3
	Kernel-5_35-4_79_2_131:1.1.2.3
	Kernel-5_35-4_79_2_130:1.1.2.3
	Kernel-5_35-4_79_2_129:1.1.2.3
	Kernel-5_35-4_79_2_128:1.1.2.3
	Kernel-5_35-4_79_2_127:1.1.2.3
	Kernel-5_35-4_79_2_126:1.1.2.3
	Kernel-5_35-4_79_2_125:1.1.2.2
	Kernel-5_35-4_79_2_124:1.1.2.2
	Kernel-5_35-4_79_2_123:1.1.2.2
	Cortex_merge:1.1.2.2
	Kernel-5_35-4_79_2_122:1.1.2.2
	Kernel-5_35-4_79_2_98_2_54:1.1.2.2
	Kernel-5_35-4_79_2_98_2_53:1.1.2.2
	Kernel-5_35-4_79_2_98_2_52:1.1.2.2
	Kernel-5_35-4_79_2_98_2_51:1.1.2.2
	Kernel-5_35-4_79_2_98_2_50:1.1.2.2
	Kernel-5_35-4_79_2_98_2_49:1.1.2.2
	Kernel-5_35-4_79_2_98_2_48:1.1.2.2
	Kernel-5_35-4_79_2_121:1.1.2.2
	Kernel-5_35-4_79_2_98_2_47:1.1.2.2
	Kernel-5_35-4_79_2_120:1.1.2.2
	Kernel-5_35-4_79_2_98_2_46:1.1.2.2
	Kernel-5_35-4_79_2_119:1.1.2.2
	Kernel-5_35-4_79_2_98_2_45:1.1.2.2
	Kernel-5_35-4_79_2_98_2_44:1.1.2.2
	Kernel-5_35-4_79_2_118:1.1.2.2
	Kernel-5_35-4_79_2_98_2_43:1.1.2.2
	Kernel-5_35-4_79_2_117:1.1.2.2
	Kernel-5_35-4_79_2_116:1.1.2.2
	Kernel-5_35-4_79_2_98_2_42:1.1.2.2
	Kernel-5_35-4_79_2_115:1.1.2.2
	Kernel-5_35-4_79_2_98_2_41:1.1.2.2
	Kernel-5_35-4_79_2_98_2_40:1.1.2.2
	Kernel-5_35-4_79_2_114:1.1.2.2
	Kernel-5_35-4_79_2_98_2_39:1.1.2.2
	Kernel-5_35-4_79_2_98_2_38:1.1.2.2
	Kernel-5_35-4_79_2_113:1.1.2.2
	Kernel-5_35-4_79_2_112:1.1.2.2
	Kernel-5_35-4_79_2_98_2_37:1.1.2.2
	Kernel-5_35-4_79_2_98_2_36:1.1.2.2
	Kernel-5_35-4_79_2_98_2_35:1.1.2.2
	Kernel-5_35-4_79_2_98_2_34:1.1.2.2
	Kernel-5_35-4_79_2_98_2_33:1.1.2.2
	Kernel-5_35-4_79_2_98_2_32:1.1.2.2
	Kernel-5_35-4_79_2_98_2_31:1.1.2.2
	Kernel-5_35-4_79_2_98_2_30:1.1.2.2
	Kernel-5_35-4_79_2_98_2_29:1.1.2.2
	Kernel-5_35-4_79_2_98_2_28:1.1.2.2
	Kernel-5_35-4_79_2_98_2_27:1.1.2.2
	Kernel-5_35-4_79_2_98_2_26:1.1.2.2
	Kernel-5_35-4_79_2_111:1.1.2.2
	Kernel-5_35-4_79_2_98_2_25:1.1.2.2
	Kernel-5_35-4_79_2_98_2_24:1.1.2.2
	Kernel-5_35-4_79_2_98_2_23:1.1.2.2
	Kernel-5_35-4_79_2_110:1.1.2.2
	Kernel-5_35-4_79_2_98_2_22:1.1.2.2
	Kernel-5_35-4_79_2_109:1.1.2.2
	Kernel-5_35-4_79_2_98_2_21:1.1.2.2
	Kernel-5_35-4_79_2_98_2_20:1.1.2.2
	Kernel-5_35-4_79_2_108:1.1.2.2
	Kernel-5_35-4_79_2_107:1.1.2.2
	Kernel-5_35-4_79_2_98_2_19:1.1.2.2
	Kernel-5_35-4_79_2_98_2_18:1.1.2.2
	Kernel-5_35-4_79_2_98_2_17:1.1.2.2
	Kernel-5_35-4_79_2_98_2_16:1.1.2.2
	Kernel-5_35-4_79_2_98_2_15:1.1.2.2
	Kernel-5_35-4_79_2_106:1.1.2.2
	Kernel-5_35-4_79_2_105:1.1.2.2
	Kernel-5_35-4_79_2_104:1.1.2.2
	Kernel-5_35-4_79_2_98_2_14:1.1.2.2
	Kernel-5_35-4_79_2_98_2_13:1.1.2.2
	Kernel-5_35-4_79_2_98_2_12:1.1.2.2
	Kernel-5_35-4_79_2_98_2_11:1.1.2.2
	Kernel-5_35-4_79_2_98_2_10:1.1.2.2
	Kernel-5_35-4_79_2_98_2_9:1.1.2.2
	Kernel-5_35-4_79_2_103:1.1.2.2
	Kernel-5_35-4_79_2_102:1.1.2.2
	Kernel-5_35-4_79_2_98_2_8:1.1.2.2
	Kernel-5_35-4_79_2_98_2_7:1.1.2.2
	Kernel-5_35-4_79_2_98_2_6:1.1.2.2
	Kernel-5_35-4_79_2_98_2_5:1.1.2.2
	Kernel-5_35-4_79_2_98_2_4:1.1.2.2
	Kernel-5_35-4_79_2_101:1.1.2.2
	Kernel-5_35-4_79_2_100:1.1.2.2
	Kernel-5_35-4_79_2_99:1.1.2.2
	Kernel-5_35-4_79_2_98_2_3:1.1.2.2
	Kernel-5_35-4_79_2_98_2_2:1.1.2.2
	Kernel-5_35-4_79_2_98_2_1:1.1.2.2
	Cortex:1.1.2.2.0.2
	Cortex_bp:1.1.2.2
	Kernel-5_35-4_79_2_98:1.1.2.2
	Kernel-5_35-4_79_2_97:1.1.2.2
	Kernel-5_35-4_79_2_96:1.1.2.2
	Kernel-5_35-4_79_2_95:1.1.2.2
	Kernel-5_35-4_79_2_94:1.1.2.2
	Kernel-5_35-4_79_2_93:1.1.2.2
	Kernel-5_35-4_79_2_92:1.1.2.2
	Kernel-5_35-4_79_2_91:1.1.2.2
	Kernel-5_35-4_79_2_90:1.1.2.2
	Kernel-5_35-4_79_2_89:1.1.2.2
	Kernel-5_35-4_79_2_88:1.1.2.2
	Kernel-5_35-4_79_2_87:1.1.2.2
	Kernel-5_35-4_79_2_86:1.1.2.2
	Kernel-5_35-4_79_2_85:1.1.2.2
	Kernel-5_35-4_79_2_84:1.1.2.2
	Kernel-5_35-4_79_2_83:1.1.2.2
	Kernel-5_35-4_79_2_82:1.1.2.2
	Kernel-5_35-4_79_2_81:1.1.2.2
	Kernel-5_35-4_79_2_80:1.1.2.2
	Kernel-5_35-4_79_2_79:1.1.2.2
	Kernel-5_35-4_79_2_78:1.1.2.2
	Kernel-5_35-4_79_2_77:1.1.2.2
	RO_5_07:1.1.2.2
	Kernel-5_35-4_79_2_76:1.1.2.2
	Kernel-5_35-4_79_2_75:1.1.2.2
	Kernel-5_35-4_79_2_74:1.1.2.2
	Kernel-5_35-4_79_2_73:1.1.2.2
	Kernel-5_35-4_79_2_72:1.1.2.2
	Kernel-5_35-4_79_2_71:1.1.2.2
	Kernel-5_35-4_79_2_70:1.1.2.2
	Kernel-5_35-4_79_2_69:1.1.2.2
	Kernel-5_35-4_79_2_68:1.1.2.2
	Kernel-5_35-4_79_2_67:1.1.2.2
	Kernel-5_35-4_79_2_66:1.1.2.2
	Kernel-5_35-4_79_2_65:1.1.2.2
	Kernel-5_35-4_79_2_64:1.1.2.2
	Kernel-5_35-4_79_2_63:1.1.2.2
	Kernel-5_35-4_79_2_62:1.1.2.2
	Kernel-5_35-4_79_2_61:1.1.2.2
	Kernel-5_35-4_79_2_59:1.1.2.2
	Kernel-5_35-4_79_2_58:1.1.2.2
	Kernel-5_35-4_79_2_57:1.1.2.2
	Kernel-5_35-4_79_2_56:1.1.2.2
	Kernel-5_35-4_79_2_55:1.1.2.2
	Kernel-5_35-4_79_2_54:1.1.2.2
	Kernel-5_35-4_79_2_53:1.1.2.2
	Kernel-5_35-4_79_2_52:1.1.2.2
	Kernel-5_35-4_79_2_51:1.1.2.2
	Kernel-5_35-4_79_2_50:1.1.2.1
	Kernel-5_35-4_79_2_49:1.1.2.1
	Kernel-5_35-4_79_2_48:1.1.2.1
	Kernel-5_47:1.2
	Kernel-5_46-4_90_2_1:1.2
	nbingham_Kernel_FastNC_dev_bp:1.2
	nbingham_Kernel_FastNC_dev:1.2.0.2
	Kernel-5_46:1.2
	Kernel-5_45:1.2
	Kernel-5_35-4_79_2_47:1.1
	Kernel-5_35-4_79_2_46:1.1
	Kernel-5_35-4_79_2_45:1.1
	Kernel-5_35-4_79_2_44:1.1
	Kernel-5_35-4_79_2_25_2_2:1.1
	Kernel-5_35-4_79_2_43:1.1
	Kernel-5_35-4_79_2_42:1.1
	Kernel-5_35-4_79_2_41:1.1
	Kernel-5_35-4_79_2_40:1.1
	Kernel-5_35-4_79_2_39:1.1
	Kernel-5_35-4_79_2_38:1.1
	Kernel-5_35-4_79_2_37:1.1
	Kernel-5_35-4_79_2_36:1.1
	Kernel-5_35-4_79_2_35:1.1
	Kernel-5_35-4_79_2_34:1.1
	Kernel-5_35-4_79_2_33:1.1
	Kernel-5_35-4_79_2_32:1.1
	Kernel-5_44:1.2
	Kernel-5_35-4_79_2_25_2_1:1.1
	Kernel-5_43:1.2
	Kernel-5_42:1.2
	Kernel-5_41:1.2
	Kernel-5_40:1.2
	Kernel-5_35-4_79_2_31:1.1
	Kernel-5_35-4_79_2_30:1.1
	Kernel-5_35-4_79_2_29:1.1
	Kernel-5_35-4_79_2_28:1.1
	Kernel-5_35-4_79_2_27:1.1
	Kernel-5_35-4_79_2_26:1.1
	Kernel-5_35-4_79_2_25:1.1
	Kernel-5_35-4_79_2_24:1.1
	Kernel-5_35-4_79_2_23:1.1
	Kernel-5_35-4_79_2_22:1.1
	Kernel-5_35-4_79_2_21:1.1
	Kernel-5_35-4_79_2_20:1.1
	Kernel-5_35-4_79_2_19:1.1
	Kernel-5_35-4_79_2_18:1.1
	Kernel-5_35-4_79_2_17:1.1
	Kernel-5_35-4_79_2_16:1.1
	Kernel-5_35-4_79_2_15:1.1
	Kernel-5_35-4_79_2_14:1.1
	Kernel-5_39:1.2
	Kernel-5_38:1.2
	Kernel-5_35-4_79_2_13:1.1
	Kernel-5_35-4_79_2_12:1.1
	Kernel-5_35-4_79_2_11:1.1
	Kernel-5_37:1.1
	Kernel-5_35-4_79_2_10:1.1
	Kernel-5_35-4_79_2_9:1.1
	Kernel-5_36:1.1
	Kernel-5_35-4_79_2_8:1.1
	Kernel-5_35-4_79_2_7:1.1
	Kernel-5_35-4_79_2_6:1.1
	Kernel-5_35-4_79_2_5:1.1
	Kernel-5_35-4_79_2_4:1.1
	Kernel-5_35-4_79_2_3:1.1
	Kernel-5_35-4_79_2_2:1.1
	dellis_autobuild_BaseSW:1.1
	Kernel-5_35-4_79_2_1:1.1
	HAL:1.1.0.2
	Kernel-5_35:1.1
	Kernel-5_34:1.1
	Kernel-5_33:1.1
	Kernel-5_32:1.1
	Kernel-5_31:1.1
	Kernel-5_30:1.1
	dcotton_autobuild_BaseSW:1.2
	Kernel-5_29:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.06.30.20.07.44;	author jlee;	state dead;
branches;
next	1.2;
commitid	IWoXxARWeuLDOwcz;

1.2
date	2000.11.21.15.19.53;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.27.10.28.33;	author srevill;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.10.07.17.29.34;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.11.30.00.30.59;	author bavison;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2011.11.27.12.53.53;	author rsprowson;	state Exp;
branches
	1.1.2.3.2.1;
next	1.1.2.4;
commitid	qUSTS070aqq3kYIv;

1.1.2.4
date	2012.07.01.21.26.28;	author rsprowson;	state Exp;
branches;
next	1.1.2.5;
commitid	K3GB4gteEYUubUaw;

1.1.2.5
date	2014.11.13.22.19.09;	author rsprowson;	state dead;
branches;
next	;
commitid	w8sxKkSQnrGJF4Yx;

1.1.2.3.2.1
date	2012.09.18.15.49.47;	author jlee;	state Exp;
branches;
next	;
commitid	jeuxYpI6CQUxM1lw;


desc
@@


1.3
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@BadNumb:Number not recognised
NoSuchSWI1:SWI &%0 not known
VarCantFind:System variable '%0' not found
BuffOverflow:Buffer overflow
Escape:Escape
Syntax:Syntax
OptErr:Syntax: *Opt [<x> [[,] <y>]]
NoHelp:No help found.
HelpFound:==> Help on keyword %0
Address:Address  :
ASCII:ASCII data
Unp:Unplugged modules are:
NoUnp:No modules are unplugged
Podule:(Podule %0)
Extn:(Extn ROM %0)
Modules:No. Position Workspace Name
Number:(Number)
Macro:(Macro)
Result:Result is %0, value :
Integer:an integer
String:a string
ROMMTitle:No. Position|IModule Name|I|IVersion|IStatus|M|J
SYSROM:System ROM
EXTROM:Extn ROM
PODROM:Podule
Active:Active
Dormant:Dormant
Unplugged:Unplugged
Running:Running
Untitled:<Untitled>
Supervisor:Supervisor
ErrSub:E
YesNo:yn
Config:Configuration
Options:options:
Status:status:
Err: (Error number &%0)
Error:Error: %0 (Error number &%1)
UndefinedInstruction:Internal error: undefined instruction at &%0
InstructionAbort:Internal error: abort on instruction fetch at &%0
DataAbort:Internal error: abort on data transfer at &%0
AddressException:Internal error: address exception at &%0
BranchThrough0:Internal error: branch through zero
SDoesntExist:Sprite doesn't exist
ModuleTooOld:Module %0 too old
NaffRelease:Bad vector release
RMNotFound:Module %0 not found
NaffDevNo:Bad device number
BadDevVecRel:Bad device release
RedirectFail:Redirection fails
StackFull:Not enough memory on system stack
OscliLongLine:Too long
NoOscliSpecials:Special field not allowed in filing system prefix to OS_CLI
OscliTooHard:Expansion too complex
BadCommand:Command not recognised
BadParmString:Parameter expansion contains unrecognised characters
TooManyParms:Too many parameters
BadKey:Key number must be in the range 0-15
BadAddress:Address not recognised
OutsideFile:Outside file
NotABlock:Not a heap block
BadDesc:Bad heap descriptor
HeapBadReason:Bad reason code
HeapFailInit:Can't initialise heap
BadLink:Heap overwritten
HeapFailAlloc:Not enough memory (in heap)
BadExtend:Not enough memory (to extend heap)
ExcessiveShrink:Can't shrink heap any further
BadModuleReason:Unknown OS_Module call
CantKill:Module is currently active
MHNoRoom:The area of memory reserved for relocatable modules is full. Quit any unwanted applications or see the RISC OS User Guide for ways to maximise memory.
NoMoreModules:No more modules
NoMoreIncarnations:No more incarnations of that module
PostfixNeeded:Postfix not specified
IncarnationExists:Incarnation already exists
ChunkNotRM:Podule chunk is not a relocatable module
ModulePostfix:'%%' in module title
NotMod:This is not a relocatable module
BadRMHeaderField:Illegal header field in module
RMNot32bit:Module is not 32-bit compatible
IncarnationNotFound:Incarnation not found
RMNotFoundInROM:Module is not in ROM
NumbTooBig:Number too big
BadBase:Base not recognised
BadClaimNum:Bad vector number
SysHeapFull:The area of memory reserved for the system heap is full. Quit any unwanted applications or see the RISC OS User Guide for ways to maximise memory.
NotAllMoved:There is not enough memory to perform this operation. Quit any unwanted applications or see the RISC OS User Guide for ways to maximise memory. (Memory cannot be moved)
ChDynamCAO:Can't change memory area (application running)
AplWSpaceInUse:Application memory area in use
RAMFsUnchangeable:The size of the RAM filing system can only be changed when it is empty
BadDynamicArea:Unknown dynamic area
AreaAlreadyExists:Dynamic area already exists
AreaNotOnPageBdy:Base address not on page boundary
OverlappingAreas:Overlapping areas
CantAllocateArea:Unable to allocate logical address space
CantAllocateLevel2:Unable to allocate page tables for area
UnknownAreaHandler:Unknown dynamic area handler call
RCExc:Return code limit exceeded
RCNegative:Negative return code
BadString:String not recognised
BadVarType:Bad variable type
VarNoRoom:The area of memory reserved for the system variables is full. Use the Task Manager to make more space in the system heap/stack area.
BadMacVal:Bad macro value
BadVarNam:Variable name not recognised
VarTooLong:Variable value too long
BadParameters:Parameters not recognised
ArgRepeated:Argument repeated
BadBra:Mismatched brackets
StkOFlo:Expression stack overflow
MissOpn:Missing operand
MissOpr:Missing operator
BadInt:String is not convertible to integer
StrOFlo:String too long
NaffItm:Unknown operand
DivZero:Division by zero
NotNumeric:Numeric parameter needed
NoThen:There is no THEN
IsString:Expression is a string
ConParmTooBig:Configure parameter too big
BadConOpt:Configure option not recognised
BadStat:Status option not recognised
Config2manyparms:Too many parameters
NoSuchSWI2:SWI name not known
BadTime:Invalid time interval
BadEnvNumber:Bad Environment number
BadReadSysInfo:Unknown OS_ReadSysInfo call
BadMODE:Not enough memory to change to this screen mode
SNoWorkSpace:No memory is reserved for the system sprite area. Use the Task Manager to make some space for the system sprites.
SNoRoom:Not enough memory to create sprite
NoSprites:No sprites
NotGraphics:Not a graphics mode
SCantOpenFile:Can't open file
SNotEnoughRoom:Not enough memory in sprite area
SBadSpriteFile:Bad sprite file
SNoRoomToMerge:Not enough memory to add sprite
SBad2ndPtr:Bad 2nd ptr
InvalidRowOrCol:Invalid row or column
InvalidHeight:Invalid height
InvalidWidth:Invalid width
NoRoomToInsert:Not enough memory to insert row or column
SpriteAlreadyExists:Sprite already exists
InvalidSpriteMode:Invalid sprite mode
SBadReasonCode:Bad sprite reason code
CantInTeletext:Can't switch output in teletext mode
SInvalidSaveArea:Invalid save area
SpriteIsCurrentDest:Sprite is current destination
BadDPI:Illegal XDPI or YDPI in sprite
ModeNotAvailable:Screen mode not available
BadPixelDepth:Bad pixel depth
BadMSFlags:Illegal flags in mode selector
CDATStackOverflow:System stack overflow
NoSuchSWI:SWI not known
BadSav:Incorrect number of parameters for *Save
MonType:Monitor type reconfigured.
NoKbd:No keyboard present - autobooting
BreakPt:Stopped at break point at &%0
STail:|J|MUse *Configure to set the options.|J|M
CTail1:|J|MWhere:|J|MD is a decimal number, a hexadecimal number preceded by &,|J|Mor the base followed by underscore, followed|J|M
CTail2:by digits in the given base.|J|MItems within [ ] are optional.|J|MUse *Status to display the current settings.|J|M
Zonk:Unknown OS_ScreenMode reason code
SNoMask:Mask or Palette operations not supported in this display depth
BadVIDCDiv:Bad VIDC divider value
BadPlatReas:Unknown OS_PlatformFeatures reason code

600:ARM 600 Processor
610:ARM 610 Processor
700:ARM 700 Processor
710:ARM 710 Processor
7500:ARM 7500 Processor
7500FE:ARM 7500FE Processor
810:ARM 810 Processor
SA110:StrongARM Processor
@


1.2
log
@  32-bit kernels will refuse to initialise non 32-bit modules.
Detail:
  The kernel will examine all modules that it is requested to initialise
    and will refuse to initialise any module without a module flags word
    entry in its module header or with bit 0 the first flags word being
    clear (bit 0 being ModuleFlag_32bit)
  Error message added to all the messages files.
  New error block added to message counting block.  The Non-32-bit module
    message is not a cached error message, though.
Admin:
  Tested in 32-bit Lazarus build.

Version 5.38. Tagged as 'Kernel-5_38'
@
text
@@


1.1
log
@  Added new Resources dirs for Desktop builds and made the main
  messages more generic.
Detail:
  RiscPC-like (UserIF = Morris4) and Ursula-like (UserIF=Ursula)
  builds of the Kernel have their messages in a subdirectory while
  more generic builds use the main Messages file.

  The main file has had the RISC OS User Guide references removed
  and the "There is not enough memory" message changed to the more
  correct "Memory can not be moved".
Admin:
  Partially tested. Fixed STB-400 fault #1479

Version 5.29. Tagged as 'Kernel-5_29'
@
text
@d80 1
@


1.1.2.1
log
@Lots of Tungsten work.

Version 5.35, 4.79.2.48. Tagged as 'Kernel-5_35-4_79_2_48'
@
text
@a79 1
RMNot32bit:Module is not 32-bit compatible
@


1.1.2.2
log
@  Commit of kernel as featured in release 5.00.
Detail:
  Lots of changes since last version, at least the following:
  * Updated OS timestamp, removed alpha status
  * Negative INKEY OS version changed to &AA
  * GraphicsV is now alocated vector number &2A
  * ROM moved up to &FC000000
  * Max application slot increased to 512 Mbytes (for now)
  * Max size of RMA increased to 256 Mbytes
  * RMA is now first-created dynamic area (so it gets lowest address after
    top of application slot)
  * OS_Memory 10 reimplemeted
  * New OS_ReadSysInfo 6 values 18-22 added
  * OS_ReadSysInfo 8 gains flag bit to indicate soft power-off
  * Misc internal top-bit-set-address fixes
  * *ChangeDynamicArea can take sizes in megabytes or gigabytes
  * Magic word "&off" in R0 passed to OS_Reset powers down if possible
  * Added acceleration: block copy; CLS; text window scroll up; rectangle
    fill
  * Disabled LED flashing in page mode (liable to crash)
  * Masked sprite plot and VDU 5 text avoids reading the screen if possible
  * Framestore made USR mode accessible
  * Fix for VDU 5,127 bug - now relies on font definitions being in extreme
    quarters of memory, rather than bottom half
  * Allocated 64-bit OS_Convert... SWIs
  * IIC errors use allocated error numbers
  * Looks for Dallas RTC before Philips RTC because we're using a Philips
    NVRAM device with the same ID
  * Fix to bug that meant the oscillator in the Dallas RTC wasn't enabled
  * Default mouse type (USB) changed to allocated number
  * Ram disc max size increased to 128 Mbytes (Ursula merge) and made
    cacheable for StrongARMs (not XScale)
  * Branch through zero handler now works in USR mode, by use of a
    trampoline in the system stack to allow PC-relative register storage
  * Address exception handler changed to not use 0 as workspace
  * OS_Memory 13 extended to allow specification of cacheability and access
    privileges
  * Added OS_Memory 16 to return important memory addresses
  * RISCOS_MapInIO() takes cacheable flag in bit 3, access permissions in
    bits 10 and 11, doubly-mapped flag in bit 20, and access permissions
    specified flag in bit 21
  * Bug fix in last version for application abort handlers didn't quite
    work; register shuffle required
  * "Module is not 32-bit compatible" error now reports the module name
  * Default configured language changed from 10 to 11 (now Desktop again)

Version 5.35, 4.79.2.51. Tagged as 'Kernel-5_35-4_79_2_51'
@
text
@d80 1
a80 1
RMNot32bit:Module '%0' is not 32-bit compatible
@


1.1.2.3
log
@Added 'UnConv' error (see also HdrSrc).
Implement OS_ConvertVariform, internally the other conversions now just call it.
Add tester for Variform to 'Dev'.
Made block copy weirdness for XScale dependent on XScale arch flag.

Version 5.35, 4.79.2.126. Tagged as 'Kernel-5_35-4_79_2_126'
@
text
@a163 1
UnConv:Unsupported conversion
@


1.1.2.3.2.1
log
@Merge with HAL branch
Detail:
  Merge the HAL branch into the RPi branch, prior to merging RPi to HAL
  Brief summary of main changes brought in:
  * Added *cache functionality previously provided by ARM module
  * Added "CMOS RAM reset" message on startup when CMOS has been wiped by keypress
  * Renamed HAL Video entries from HAL_Video_XXX to HAL_VideoXXX
  * Dropped mjsHAL macros, GRAB/STASH macros
  * Fixed pseudo-VRAM allocation when machine has exactly 16MB of RAM
  * Added OS_Hardware 5
  * Use OS_SerialOp GetDeviceName for getting serial device name
  * Drop HAL_MonitorLeadID
  * Rework default GraphicsV_IICOp handler
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.23. Tagged as 'Kernel-5_35-4_79_2_147_2_23'
@
text
@d154 1
a154 2
CmosRst:CMOS RAM reset, press ESCAPE to continue
MonType:Monitor type reconfigured
@


1.1.2.4
log
@Sort out SetBorder
NewReset.s:
The one remaining use of SetBorder was to denote the user asked for and got a CMOS reset, which in the HAL case emitted a warning because setting the border is potentially complicated/slow.
To solve this, the reset is noted and replaces the normal RISC OS banner with a warning message. The behaviour and text for this comes from the BBC Master, though the escape key is used in place of break since a reset isn't actually needed.
Moved the unused cputable inside its corresponding switch.
Two occurrences of WriteS_Translated would have executed the message in the V=1 case.
KernelWS/Resources:
Flag added to workspace, translation added to messages files.
Heapman.s:
Commented out use of SetBorder removed.
Kernel.s:
SetBorder macro removed.
Middle.s:
Switched out use of SetBorder removed.
Super1.s:
Conditional WriteS_Translated would try to execute the message in the opposite condition case.


Version 5.35, 4.79.2.157. Tagged as 'Kernel-5_35-4_79_2_157'
@
text
@d154 1
a154 2
CmosRst:CMOS RAM reset, press ESCAPE to continue
MonType:Monitor type reconfigured
@


1.1.2.5
log
@Add a means to write NetStnCMOS in a HAL world
With ProtectStationID turned on there are no routes to writing the Econet station (or bottom octect of the IP address), a function previously fulfilled by the SetStation utility which pokes the hardware directly and doesn't fit into a HAL model.
Add a new subreason to OS_NVMemory to perform this role. This SWI appeared for RISC OS 5.00, and errors unsupported subreasons, so there's a means of run tim selecting its use by checking the platform class and trying the SWI. All RISC OS 5 based platforms can always be upgraded to this version, since they're all still being maintained.

hdr/Options: move the switch with the other options from osinit.s
i2cutils.c: new subreason

Ditch the 'ObsoleteNC1CMOS' switch, if it was obsolete for NC1, it's certainly obsolete now.
Ditch unmaintained messages files for Morris4/Omega/Ursula projects.
Tested on a Risc PC.

Version 5.35, 4.79.2.247. Tagged as 'Kernel-5_35-4_79_2_247'
@
text
@@


