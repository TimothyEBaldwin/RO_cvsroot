head	4.3;
access;
symbols
	Kernel-6_15:4.3
	Kernel-6_14:4.3
	Kernel-6_01-3:4.3
	Kernel-6_13:4.3
	Kernel-6_12:4.3
	Kernel-6_11:4.3
	Kernel-6_10:4.3
	Kernel-6_09:4.3
	Kernel-6_08-4_129_2_10:4.3
	Kernel-6_08-4_129_2_9:4.3
	Kernel-6_08:4.3
	Kernel-6_07:4.3
	Kernel-6_06:4.3
	Kernel-6_05-4_129_2_8:4.3
	Kernel-6_05:4.3
	Kernel-6_04:4.3
	Kernel-6_03:4.3
	Kernel-6_01-2:4.3
	Kernel-6_01-4_146_2_1:4.3
	Kernel-6_02:4.3
	Kernel-6_01-1:4.3
	Kernel-6_01:4.3
	Kernel-6_00:4.3
	Kernel-5_99:4.3
	Kernel-5_98:4.3
	Kernel-5_97-4_129_2_7:4.3
	Kernel-5_97:4.3
	Kernel-5_96:4.3
	Kernel-5_95:4.3
	Kernel-5_94:4.3
	Kernel-5_93:4.3
	Kernel-5_92:4.3
	Kernel-5_91:4.3
	Kernel-5_90:4.3
	Kernel-5_89-4_129_2_6:4.3
	Kernel-5_89:4.3
	Kernel-5_88-4_129_2_5:4.3
	Kernel-5_88-4_129_2_4:4.3
	Kernel-5_88:4.3
	Kernel-5_87:4.3
	Kernel-5_86-4_129_2_3:4.3
	Kernel-5_86-4_129_2_2:4.3
	Kernel-5_86-4_129_2_1:4.3
	Kernel-5_86:4.3
	SMP:4.3.0.2
	SMP_bp:4.3
	Kernel-5_85:4.3
	Kernel-5_54-1:4.3
	Kernel-5_84:4.3
	Kernel-5_83:4.3
	Kernel-5_82:4.3
	Kernel-5_81:4.3
	Kernel-5_80:4.3
	Kernel-5_79:4.3
	Kernel-5_78:4.3
	Kernel-5_77:4.3
	Kernel-5_76:4.3
	Kernel-5_75:4.3
	Kernel-5_74:4.3
	Kernel-5_73:4.3
	Kernel-5_72:4.3
	Kernel-5_71:4.3
	Kernel-5_70:4.3
	Kernel-5_69:4.3
	Kernel-5_68:4.3
	Kernel-5_67:4.3
	Kernel-5_66:4.3
	Kernel-5_65:4.3
	Kernel-5_64:4.3
	Kernel-5_63:4.3
	Kernel-5_62:4.3
	Kernel-5_61:4.3
	Kernel-5_60:4.3
	Kernel-5_59:4.3
	Kernel-5_58:4.3
	Kernel-5_57:4.3
	Kernel-5_56:4.3
	Kernel-5_55:4.3
	Kernel-5_54:4.3
	Kernel-5_53:4.3
	Kernel-5_52:4.3
	Kernel-5_51:4.3
	Kernel-5_50:4.3
	Kernel-5_49:4.3
	HAL_merge:4.2.2.3
	Kernel-5_48:4.3
	Kernel-5_35-4_79_2_327:4.2.2.3
	Kernel-5_35-4_79_2_326:4.2.2.3
	Kernel-5_35-4_79_2_325:4.2.2.3
	Kernel-5_35-4_79_2_324:4.2.2.3
	Kernel-5_35-4_79_2_323:4.2.2.3
	Kernel-5_35-4_79_2_322:4.2.2.3
	Kernel-5_35-4_79_2_321:4.2.2.3
	Kernel-5_35-4_79_2_320:4.2.2.3
	Kernel-5_35-4_79_2_319:4.2.2.3
	Kernel-5_35-4_79_2_318:4.2.2.3
	Kernel-5_35-4_79_2_317:4.2.2.3
	Kernel-5_35-4_79_2_316:4.2.2.3
	Kernel-5_35-4_79_2_315:4.2.2.3
	Kernel-5_35-4_79_2_314:4.2.2.3
	Kernel-5_35-4_79_2_313:4.2.2.3
	Kernel-5_35-4_79_2_312:4.2.2.3
	Kernel-5_35-4_79_2_311:4.2.2.3
	Kernel-5_35-4_79_2_310:4.2.2.3
	Kernel-5_35-4_79_2_309:4.2.2.3
	Kernel-5_35-4_79_2_308:4.2.2.3
	Kernel-5_35-4_79_2_307:4.2.2.3
	Kernel-5_35-4_79_2_306:4.2.2.3
	Kernel-5_35-4_79_2_305:4.2.2.3
	Kernel-5_35-4_79_2_304:4.2.2.3
	Kernel-5_35-4_79_2_303:4.2.2.3
	Kernel-5_35-4_79_2_302:4.2.2.3
	Kernel-5_35-4_79_2_301:4.2.2.3
	Kernel-5_35-4_79_2_300:4.2.2.3
	Kernel-5_35-4_79_2_299:4.2.2.3
	Kernel-5_35-4_79_2_298:4.2.2.3
	Kernel-5_35-4_79_2_297:4.2.2.3
	Kernel-5_35-4_79_2_296:4.2.2.3
	Kernel-5_35-4_79_2_295:4.2.2.3
	Kernel-5_35-4_79_2_294:4.2.2.3
	Kernel-5_35-4_79_2_293:4.2.2.3
	Kernel-5_35-4_79_2_292:4.2.2.3
	Kernel-5_35-4_79_2_291:4.2.2.3
	Kernel-5_35-4_79_2_290:4.2.2.3
	Kernel-5_35-4_79_2_289:4.2.2.3
	Kernel-5_35-4_79_2_288:4.2.2.3
	Kernel-5_35-4_79_2_287:4.2.2.3
	Kernel-5_35-4_79_2_286:4.2.2.3
	Kernel-5_35-4_79_2_285:4.2.2.3
	Kernel-5_35-4_79_2_284:4.2.2.3
	Kernel-5_35-4_79_2_283:4.2.2.3
	Kernel-5_35-4_79_2_282:4.2.2.3
	Kernel-5_35-4_79_2_281:4.2.2.3
	Kernel-5_35-4_79_2_280:4.2.2.3
	Kernel-5_35-4_79_2_279:4.2.2.3
	Kernel-5_35-4_79_2_278:4.2.2.3
	Kernel-5_35-4_79_2_277:4.2.2.3
	Kernel-5_35-4_79_2_276:4.2.2.3
	Kernel-5_35-4_79_2_275:4.2.2.3
	Kernel-5_35-4_79_2_274:4.2.2.3
	Kernel-5_35-4_79_2_273:4.2.2.3
	Kernel-5_35-4_79_2_272:4.2.2.3
	Kernel-5_35-4_79_2_271:4.2.2.3
	Kernel-5_35-4_79_2_270:4.2.2.3
	Kernel-5_35-4_79_2_269:4.2.2.3
	Kernel-5_35-4_79_2_268:4.2.2.3
	Kernel-5_35-4_79_2_267:4.2.2.3
	Kernel-5_35-4_79_2_266:4.2.2.3
	Kernel-5_35-4_79_2_265:4.2.2.3
	Kernel-5_35-4_79_2_264:4.2.2.3
	Kernel-5_35-4_79_2_263:4.2.2.3
	Kernel-5_35-4_79_2_262:4.2.2.3
	Kernel-5_35-4_79_2_261:4.2.2.3
	Kernel-5_35-4_79_2_260:4.2.2.3
	Kernel-5_35-4_79_2_259:4.2.2.3
	Kernel-5_35-4_79_2_258:4.2.2.3
	Kernel-5_35-4_79_2_257:4.2.2.3
	Kernel-5_35-4_79_2_256:4.2.2.3
	Kernel-5_35-4_79_2_255:4.2.2.3
	Kernel-5_35-4_79_2_254:4.2.2.3
	Kernel-5_35-4_79_2_253:4.2.2.3
	Kernel-5_35-4_79_2_252:4.2.2.3
	Kernel-5_35-4_79_2_251:4.2.2.3
	Kernel-5_35-4_79_2_250:4.2.2.3
	Kernel-5_35-4_79_2_249:4.2.2.3
	Kernel-5_35-4_79_2_248:4.2.2.3
	Kernel-5_35-4_79_2_247:4.2.2.3
	Kernel-5_35-4_79_2_246:4.2.2.3
	Kernel-5_35-4_79_2_245:4.2.2.3
	Kernel-5_35-4_79_2_244:4.2.2.3
	Kernel-5_35-4_79_2_243:4.2.2.3
	Kernel-5_35-4_79_2_242:4.2.2.3
	Kernel-5_35-4_79_2_241:4.2.2.3
	Kernel-5_35-4_79_2_240:4.2.2.3
	Kernel-5_35-4_79_2_239:4.2.2.3
	Kernel-5_35-4_79_2_238:4.2.2.3
	Kernel-5_35-4_79_2_237:4.2.2.3
	Kernel-5_35-4_79_2_236:4.2.2.3
	Kernel-5_35-4_79_2_235:4.2.2.3
	Kernel-5_35-4_79_2_234:4.2.2.3
	Kernel-5_35-4_79_2_233:4.2.2.3
	Kernel-5_35-4_79_2_232:4.2.2.3
	Kernel-5_35-4_79_2_231:4.2.2.3
	Kernel-5_35-4_79_2_230:4.2.2.3
	Kernel-5_35-4_79_2_229:4.2.2.3
	Kernel-5_35-4_79_2_228:4.2.2.3
	Kernel-5_35-4_79_2_227:4.2.2.3
	Kernel-5_35-4_79_2_226:4.2.2.3
	Kernel-5_35-4_79_2_225:4.2.2.3
	Kernel-5_35-4_79_2_224:4.2.2.3
	Kernel-5_35-4_79_2_223:4.2.2.3
	Kernel-5_35-4_79_2_222:4.2.2.3
	Kernel-5_35-4_79_2_221:4.2.2.3
	Kernel-5_35-4_79_2_220:4.2.2.3
	Kernel-5_35-4_79_2_219:4.2.2.3
	Kernel-5_35-4_79_2_218:4.2.2.3
	Kernel-5_35-4_79_2_217:4.2.2.3
	Kernel-5_35-4_79_2_216:4.2.2.3
	Kernel-5_35-4_79_2_215:4.2.2.3
	Kernel-5_35-4_79_2_214:4.2.2.3
	Kernel-5_35-4_79_2_213:4.2.2.3
	Kernel-5_35-4_79_2_212:4.2.2.3
	Kernel-5_35-4_79_2_211:4.2.2.3
	Kernel-5_35-4_79_2_210:4.2.2.3
	Kernel-5_35-4_79_2_209:4.2.2.3
	Kernel-5_35-4_79_2_208:4.2.2.3
	Kernel-5_35-4_79_2_207:4.2.2.3
	Kernel-5_35-4_79_2_206:4.2.2.3
	Kernel-5_35-4_79_2_205:4.2.2.3
	Kernel-5_35-4_79_2_204:4.2.2.3
	Kernel-5_35-4_79_2_203:4.2.2.3
	Kernel-5_35-4_79_2_202:4.2.2.3
	Kernel-5_35-4_79_2_201:4.2.2.3
	Kernel-5_35-4_79_2_200:4.2.2.3
	Kernel-5_35-4_79_2_199:4.2.2.3
	Kernel-5_35-4_79_2_198:4.2.2.3
	Kernel-5_35-4_79_2_197:4.2.2.3
	Kernel-5_35-4_79_2_196:4.2.2.3
	Kernel-5_35-4_79_2_195:4.2.2.3
	Kernel-5_35-4_79_2_194:4.2.2.3
	Kernel-5_35-4_79_2_193:4.2.2.3
	Kernel-5_35-4_79_2_192:4.2.2.3
	Kernel-5_35-4_79_2_191:4.2.2.3
	Kernel-5_35-4_79_2_190:4.2.2.3
	Kernel-5_35-4_79_2_189:4.2.2.3
	Kernel-5_35-4_79_2_188:4.2.2.3
	Kernel-5_35-4_79_2_187:4.2.2.3
	Kernel-5_35-4_79_2_186:4.2.2.3
	Kernel-5_35-4_79_2_185:4.2.2.3
	Kernel-5_35-4_79_2_184:4.2.2.3
	Kernel-5_35-4_79_2_183:4.2.2.3
	Kernel-5_35-4_79_2_182:4.2.2.3
	Kernel-5_35-4_79_2_181:4.2.2.3
	Kernel-5_35-4_79_2_180:4.2.2.3
	Kernel-5_35-4_79_2_179:4.2.2.3
	Kernel-5_35-4_79_2_178:4.2.2.3
	Kernel-5_35-4_79_2_177:4.2.2.3
	Kernel-5_35-4_79_2_176:4.2.2.3
	Kernel-5_35-4_79_2_175:4.2.2.3
	Kernel-5_35-4_79_2_174:4.2.2.3
	Kernel-5_35-4_79_2_173:4.2.2.3
	Kernel-5_35-4_79_2_172:4.2.2.3
	Kernel-5_35-4_79_2_171:4.2.2.3
	Kernel-5_35-4_79_2_170:4.2.2.3
	Kernel-5_35-4_79_2_169:4.2.2.3
	Kernel-5_35-4_79_2_168:4.2.2.3
	Kernel-5_35-4_79_2_167:4.2.2.3
	Kernel-5_35-4_79_2_166:4.2.2.3
	Kernel-5_35-4_79_2_165:4.2.2.3
	RPi_merge:4.2.2.2.2.1
	Kernel-5_35-4_79_2_147_2_23:4.2.2.2.2.1
	Kernel-5_35-4_79_2_147_2_22:4.2.2.2
	Kernel-5_35-4_79_2_147_2_21:4.2.2.2
	Kernel-5_35-4_79_2_147_2_20:4.2.2.2
	Kernel-5_35-4_79_2_147_2_19:4.2.2.2
	Kernel-5_35-4_79_2_147_2_18:4.2.2.2
	Kernel-5_35-4_79_2_164:4.2.2.3
	Kernel-5_35-4_79_2_163:4.2.2.3
	Kernel-5_35-4_79_2_147_2_17:4.2.2.2
	Kernel-5_35-4_79_2_147_2_16:4.2.2.2
	Kernel-5_35-4_79_2_147_2_15:4.2.2.2
	Kernel-5_35-4_79_2_162:4.2.2.3
	Kernel-5_35-4_79_2_161:4.2.2.3
	Kernel-5_35-4_79_2_147_2_14:4.2.2.2
	Kernel-5_35-4_79_2_147_2_13:4.2.2.2
	Kernel-5_35-4_79_2_160:4.2.2.3
	Kernel-5_35-4_79_2_159:4.2.2.3
	Kernel-5_35-4_79_2_158:4.2.2.3
	Kernel-5_35-4_79_2_157:4.2.2.3
	Kernel-5_35-4_79_2_156:4.2.2.3
	Kernel-5_35-4_79_2_147_2_12:4.2.2.2
	Kernel-5_35-4_79_2_147_2_11:4.2.2.2
	Kernel-5_35-4_79_2_155:4.2.2.3
	Kernel-5_35-4_79_2_147_2_10:4.2.2.2
	Kernel-5_35-4_79_2_154:4.2.2.3
	Kernel-5_35-4_79_2_153:4.2.2.3
	Kernel-5_35-4_79_2_147_2_9:4.2.2.2
	Kernel-5_35-4_79_2_152:4.2.2.3
	Kernel-5_35-4_79_2_151:4.2.2.3
	Kernel-5_35-4_79_2_147_2_8:4.2.2.2
	Kernel-5_35-4_79_2_147_2_7:4.2.2.2
	Kernel-5_35-4_79_2_150:4.2.2.2
	Kernel-5_35-4_79_2_147_2_6:4.2.2.2
	Kernel-5_35-4_79_2_147_2_5:4.2.2.2
	Kernel-5_35-4_79_2_149:4.2.2.2
	Kernel-5_35-4_79_2_147_2_4:4.2.2.2
	Kernel-5_35-4_79_2_147_2_3:4.2.2.2
	Kernel-5_35-4_79_2_148:4.2.2.2
	Kernel-5_35-4_79_2_147_2_2:4.2.2.2
	Kernel-5_35-4_79_2_147_2_1:4.2.2.2
	RPi:4.2.2.2.0.2
	RPi_bp:4.2.2.2
	Kernel-5_35-4_79_2_98_2_52_2_1:4.2.2.1
	alees_Kernel_dev:4.2.2.1.0.4
	alees_Kernel_dev_bp:4.2.2.1
	Kernel-5_35-4_79_2_147:4.2.2.2
	Kernel-5_35-4_79_2_146:4.2.2.2
	Kernel-5_35-4_79_2_145:4.2.2.2
	Kernel-5_35-4_79_2_144:4.2.2.2
	Kernel-5_35-4_79_2_143:4.2.2.2
	Kernel-5_35-4_79_2_142:4.2.2.2
	Kernel-5_35-4_79_2_141:4.2.2.2
	Kernel-5_35-4_79_2_140:4.2.2.2
	Kernel-5_35-4_79_2_139:4.2.2.2
	Kernel-5_35-4_79_2_138:4.2.2.2
	Kernel-5_35-4_79_2_137:4.2.2.2
	Kernel-5_35-4_79_2_136:4.2.2.1
	Kernel-5_35-4_79_2_135:4.2.2.1
	Kernel-5_35-4_79_2_134:4.2.2.1
	Kernel-5_35-4_79_2_133:4.2.2.1
	Kernel-5_35-4_79_2_132:4.2.2.1
	Kernel-5_35-4_79_2_131:4.2.2.1
	Kernel-5_35-4_79_2_130:4.2.2.1
	Kernel-5_35-4_79_2_129:4.2.2.1
	Kernel-5_35-4_79_2_128:4.2.2.1
	Kernel-5_35-4_79_2_127:4.2.2.1
	Kernel-5_35-4_79_2_126:4.2.2.1
	Kernel-5_35-4_79_2_125:4.2.2.1
	Kernel-5_35-4_79_2_124:4.2.2.1
	Kernel-5_35-4_79_2_123:4.2.2.1
	Cortex_merge:4.2.2.1
	Kernel-5_35-4_79_2_122:4.2.2.1
	Kernel-5_35-4_79_2_98_2_54:4.2.2.1
	Kernel-5_35-4_79_2_98_2_53:4.2.2.1
	Kernel-5_35-4_79_2_98_2_52:4.2.2.1
	Kernel-5_35-4_79_2_98_2_51:4.2.2.1
	Kernel-5_35-4_79_2_98_2_50:4.2.2.1
	Kernel-5_35-4_79_2_98_2_49:4.2.2.1
	Kernel-5_35-4_79_2_98_2_48:4.2.2.1
	Kernel-5_35-4_79_2_121:4.2.2.1
	Kernel-5_35-4_79_2_98_2_47:4.2.2.1
	Kernel-5_35-4_79_2_120:4.2.2.1
	Kernel-5_35-4_79_2_98_2_46:4.2.2.1
	Kernel-5_35-4_79_2_119:4.2.2.1
	Kernel-5_35-4_79_2_98_2_45:4.2.2.1
	Kernel-5_35-4_79_2_98_2_44:4.2.2.1
	Kernel-5_35-4_79_2_118:4.2.2.1
	Kernel-5_35-4_79_2_98_2_43:4.2.2.1
	Kernel-5_35-4_79_2_117:4.2.2.1
	Kernel-5_35-4_79_2_116:4.2.2.1
	Kernel-5_35-4_79_2_98_2_42:4.2.2.1
	Kernel-5_35-4_79_2_115:4.2.2.1
	Kernel-5_35-4_79_2_98_2_41:4.2.2.1
	Kernel-5_35-4_79_2_98_2_40:4.2.2.1
	Kernel-5_35-4_79_2_114:4.2.2.1
	Kernel-5_35-4_79_2_98_2_39:4.2.2.1
	Kernel-5_35-4_79_2_98_2_38:4.2.2.1
	Kernel-5_35-4_79_2_113:4.2.2.1
	Kernel-5_35-4_79_2_112:4.2.2.1
	Kernel-5_35-4_79_2_98_2_37:4.2.2.1
	Kernel-5_35-4_79_2_98_2_36:4.2.2.1
	Kernel-5_35-4_79_2_98_2_35:4.2.2.1
	Kernel-5_35-4_79_2_98_2_34:4.2.2.1
	Kernel-5_35-4_79_2_98_2_33:4.2.2.1
	Kernel-5_35-4_79_2_98_2_32:4.2.2.1
	Kernel-5_35-4_79_2_98_2_31:4.2.2.1
	Kernel-5_35-4_79_2_98_2_30:4.2.2.1
	Kernel-5_35-4_79_2_98_2_29:4.2.2.1
	Kernel-5_35-4_79_2_98_2_28:4.2.2.1
	Kernel-5_35-4_79_2_98_2_27:4.2.2.1
	Kernel-5_35-4_79_2_98_2_26:4.2.2.1
	Kernel-5_35-4_79_2_111:4.2.2.1
	Kernel-5_35-4_79_2_98_2_25:4.2.2.1
	Kernel-5_35-4_79_2_98_2_24:4.2.2.1
	Kernel-5_35-4_79_2_98_2_23:4.2.2.1
	Kernel-5_35-4_79_2_110:4.2.2.1
	Kernel-5_35-4_79_2_98_2_22:4.2.2.1
	Kernel-5_35-4_79_2_109:4.2.2.1
	Kernel-5_35-4_79_2_98_2_21:4.2.2.1
	Kernel-5_35-4_79_2_98_2_20:4.2.2.1
	Kernel-5_35-4_79_2_108:4.2.2.1
	Kernel-5_35-4_79_2_107:4.2.2.1
	Kernel-5_35-4_79_2_98_2_19:4.2.2.1
	Kernel-5_35-4_79_2_98_2_18:4.2.2.1
	Kernel-5_35-4_79_2_98_2_17:4.2.2.1
	Kernel-5_35-4_79_2_98_2_16:4.2.2.1
	Kernel-5_35-4_79_2_98_2_15:4.2.2.1
	Kernel-5_35-4_79_2_106:4.2.2.1
	Kernel-5_35-4_79_2_105:4.2.2.1
	Kernel-5_35-4_79_2_104:4.2.2.1
	Kernel-5_35-4_79_2_98_2_14:4.2.2.1
	Kernel-5_35-4_79_2_98_2_13:4.2.2.1
	Kernel-5_35-4_79_2_98_2_12:4.2.2.1
	Kernel-5_35-4_79_2_98_2_11:4.2.2.1
	Kernel-5_35-4_79_2_98_2_10:4.2.2.1
	Kernel-5_35-4_79_2_98_2_9:4.2.2.1
	Kernel-5_35-4_79_2_103:4.2.2.1
	Kernel-5_35-4_79_2_102:4.2.2.1
	Kernel-5_35-4_79_2_98_2_8:4.2.2.1
	Kernel-5_35-4_79_2_98_2_7:4.2.2.1
	Kernel-5_35-4_79_2_98_2_6:4.2.2.1
	Kernel-5_35-4_79_2_98_2_5:4.2.2.1
	Kernel-5_35-4_79_2_98_2_4:4.2.2.1
	Kernel-5_35-4_79_2_101:4.2.2.1
	Kernel-5_35-4_79_2_100:4.2.2.1
	Kernel-5_35-4_79_2_99:4.2.2.1
	Kernel-5_35-4_79_2_98_2_3:4.2.2.1
	Kernel-5_35-4_79_2_98_2_2:4.2.2.1
	Kernel-5_35-4_79_2_98_2_1:4.2.2.1
	Cortex:4.2.2.1.0.2
	Cortex_bp:4.2.2.1
	Kernel-5_35-4_79_2_98:4.2.2.1
	Kernel-5_35-4_79_2_97:4.2.2.1
	Kernel-5_35-4_79_2_96:4.2.2.1
	Kernel-5_35-4_79_2_95:4.2.2.1
	Kernel-5_35-4_79_2_94:4.2.2.1
	Kernel-5_35-4_79_2_93:4.2.2.1
	Kernel-5_35-4_79_2_92:4.2.2.1
	Kernel-5_35-4_79_2_91:4.2.2.1
	Kernel-5_35-4_79_2_90:4.2.2.1
	Kernel-5_35-4_79_2_89:4.2.2.1
	Kernel-5_35-4_79_2_88:4.2.2.1
	Kernel-5_35-4_79_2_87:4.2.2.1
	Kernel-5_35-4_79_2_86:4.2.2.1
	Kernel-5_35-4_79_2_85:4.2.2.1
	Kernel-5_35-4_79_2_84:4.2.2.1
	Kernel-5_35-4_79_2_83:4.2.2.1
	Kernel-5_35-4_79_2_82:4.2.2.1
	Kernel-5_35-4_79_2_81:4.2.2.1
	Kernel-5_35-4_79_2_80:4.2.2.1
	Kernel-5_35-4_79_2_79:4.2.2.1
	Kernel-5_35-4_79_2_78:4.2.2.1
	Kernel-5_35-4_79_2_77:4.2.2.1
	RO_5_07:4.2.2.1
	Kernel-5_35-4_79_2_76:4.2.2.1
	Kernel-5_35-4_79_2_75:4.2.2.1
	Kernel-5_35-4_79_2_74:4.2.2.1
	Kernel-5_35-4_79_2_73:4.2.2.1
	Kernel-5_35-4_79_2_72:4.2.2.1
	Kernel-5_35-4_79_2_71:4.2.2.1
	Kernel-5_35-4_79_2_70:4.2.2.1
	Kernel-5_35-4_79_2_69:4.2.2.1
	Kernel-5_35-4_79_2_68:4.2.2.1
	Kernel-5_35-4_79_2_67:4.2.2.1
	Kernel-5_35-4_79_2_66:4.2.2.1
	Kernel-5_35-4_79_2_65:4.2.2.1
	Kernel-5_35-4_79_2_64:4.2.2.1
	Kernel-5_35-4_79_2_63:4.2.2.1
	Kernel-5_35-4_79_2_62:4.2.2.1
	Kernel-5_35-4_79_2_61:4.2.2.1
	Kernel-5_35-4_79_2_59:4.2.2.1
	Kernel-5_35-4_79_2_58:4.2.2.1
	Kernel-5_35-4_79_2_57:4.2.2.1
	Kernel-5_35-4_79_2_56:4.2.2.1
	Kernel-5_35-4_79_2_55:4.2.2.1
	Kernel-5_35-4_79_2_54:4.2.2.1
	Kernel-5_35-4_79_2_53:4.2.2.1
	Kernel-5_35-4_79_2_52:4.2.2.1
	Kernel-5_35-4_79_2_51:4.2.2.1
	Kernel-5_35-4_79_2_50:4.2
	Kernel-5_35-4_79_2_49:4.2
	Kernel-5_35-4_79_2_48:4.2
	Kernel-5_47:4.2
	Kernel-5_46-4_90_2_1:4.2
	nbingham_Kernel_FastNC_dev_bp:4.2
	nbingham_Kernel_FastNC_dev:4.2.0.8
	Kernel-5_46:4.2
	Kernel-5_45:4.2
	Kernel-5_35-4_79_2_47:4.2
	Kernel-5_35-4_79_2_46:4.2
	Kernel-5_35-4_79_2_45:4.2
	Kernel-5_35-4_79_2_44:4.2
	Kernel-5_35-4_79_2_25_2_2:4.2
	Kernel-5_35-4_79_2_43:4.2
	Kernel-5_35-4_79_2_42:4.2
	Kernel-5_35-4_79_2_41:4.2
	Kernel-5_35-4_79_2_40:4.2
	Kernel-5_35-4_79_2_39:4.2
	Kernel-5_35-4_79_2_38:4.2
	Kernel-5_35-4_79_2_37:4.2
	Kernel-5_35-4_79_2_36:4.2
	Kernel-5_35-4_79_2_35:4.2
	Kernel-5_35-4_79_2_34:4.2
	Kernel-5_35-4_79_2_33:4.2
	Kernel-5_35-4_79_2_32:4.2
	Kernel-5_44:4.2
	Kernel-5_35-4_79_2_25_2_1:4.2
	Kernel-5_43:4.2
	Kernel-5_35-4_79_2_31:4.2
	Kernel-5_35-4_79_2_30:4.2
	Kernel-5_35-4_79_2_29:4.2
	Kernel-5_35-4_79_2_28:4.2
	Kernel-5_35-4_79_2_27:4.2
	Kernel-5_35-4_79_2_26:4.2
	Kernel-5_42:4.2
	Kernel-5_41:4.2
	Kernel-5_40:4.2
	Kernel-5_35-4_79_2_25:4.2
	Kernel-5_35-4_79_2_24:4.2
	Kernel-5_35-4_79_2_23:4.2
	Kernel-5_35-4_79_2_22:4.2
	Kernel-5_35-4_79_2_21:4.2
	Kernel-5_35-4_79_2_20:4.2
	Kernel-5_35-4_79_2_19:4.2
	Kernel-5_35-4_79_2_18:4.2
	Kernel-5_35-4_79_2_17:4.2
	Kernel-5_35-4_79_2_16:4.2
	Kernel-5_35-4_79_2_15:4.2
	Kernel-5_35-4_79_2_14:4.2
	Kernel-5_39:4.2
	Kernel-5_13-4_52_2_1:4.2
	Bethany:4.2.0.4
	Kernel-5_38:4.2
	Kernel-5_35-4_79_2_13:4.2
	Kernel-5_35-4_79_2_12:4.2
	Kernel-5_35-4_79_2_11:4.2
	Kernel-5_37:4.2
	Kernel-5_35-4_79_2_10:4.2
	Kernel-5_35-4_79_2_9:4.2
	Kernel-5_36:4.2
	Kernel-5_35-4_79_2_8:4.2
	Kernel-5_35-4_79_2_7:4.2
	Kernel-5_35-4_79_2_6:4.2
	Kernel-5_35-4_79_2_5:4.2
	Kernel-5_35-4_79_2_4:4.2
	Kernel-5_35-4_79_2_3:4.2
	Kernel-5_35-4_79_2_2:4.2
	dellis_autobuild_BaseSW:4.2
	Kernel-5_35-4_79_2_1:4.2
	HAL:4.2.0.2
	Kernel-5_35:4.2
	Kernel-5_34:4.2
	Kernel-5_33:4.2
	Kernel-5_32:4.2
	Kernel-5_31:4.2
	Kernel-5_30:4.2
	Kernel-5_29:4.2
	Kernel-5_28:4.2
	Kernel-5_27:4.2
	Kernel-5_26:4.2
	Kernel-5_25:4.2
	Kernel-5_24:4.2
	Kernel-5_23:4.2
	Kernel-5_22:4.2
	sbrodie_sedwards_16Mar2000:4.2
	Kernel-5_21:4.2
	Kernel-5_20:4.2
	Kernel-5_19:4.2
	Kernel-5_18:4.2
	Kernel-5_17:4.2
	Kernel-5_16:4.2
	Kernel-5_15:4.2
	Kernel-5_14:4.2
	Kernel-5_13:4.2
	Kernel-5_12:4.2
	Kernel-5_11:4.2
	Kernel-5_10:4.2
	Kernel-5_09:4.2
	Kernel-5_08:4.2
	Kernel-5_07:4.2
	Kernel-5_06:4.2
	Kernel-5_05:4.2
	Kernel-5_04:4.2
	Kernel-5_03:4.2
	Kernel-5_02:4.2
	Kernel-5_01:4.2
	Kernel-5_00:4.2
	Kernel-4_99:4.2
	Kernel-4_98:4.2
	Kernel-4_97:4.2
	Kernel-4_96:4.2
	Kernel-4_95:4.2
	Kernel-4_94:4.2
	Kernel-4_93:4.2
	Kernel-4_92:4.2
	Kernel-4_91:4.2
	Kernel-4_90:4.2
	dcotton_autobuild_BaseSW:4.2
	Kernel-4_89:4.2
	Kernel-4_88:4.2
	Kernel-4_87:4.2
	Kernel-4_86:4.2
	Kernel-4_85:4.2
	Kernel-4_84:4.2
	Kernel-4_83:4.2
	Kernel-4_82:4.2
	Kernel-4_81:4.2
	Kernel-4_80:4.2
	Kernel-4_79:4.2
	Kernel-4_78:4.2
	Kernel-4_77:4.2
	Kernel-4_76:4.2
	Kernel-4_75:4.2
	Kernel-4_74:4.2
	Kernel-4_73:4.2
	Kernel-4_72:4.2
	Kernel-4_71:4.2
	Kernel-4_70:4.2
	Kernel-4_69:4.2
	Kernel-4_68:4.2
	Kernel-4_63-1_1_2_5:1.1.2.1
	Kernel-4_63-1_1_2_4:1.1.2.1
	Kernel-4_67:4.2
	Kernel-4_66:4.2
	Kernel-4_63-1_1_2_3:1.1.2.1
	Kernel-4_65:4.2
	Spin_merge:1.1.2.1
	Kernel-4_64:4.1
	Kernel-4_63-1_1_2_2:1.1.2.1
	nicke_Kernel_4_62:1.1.2.1
	nturton_v459:1.1.2.1
	nturton_v460:1.1.2.1
	afrost_Boca-1_2-Beta:1.1.2.1
	Spinner_B20_2:1.1.2.1
	Spinner_19_3:1.1.2.1
	Spinner_B18:1.1.2.1
	Spinner_B17:1.1.2.1
	Spinner_B15:1.1.2.1
	Spinner_B14:1.1.2.1
	Spinner_B13:1.1.2.1
	Spinner_B12:1.1.2.1
	Spinner_B10:1.1.2.1
	Spinner_B7:1.1.2.1
	ARTtmp_merge:1.1.2.1
	Spin_3Apr97:1.1.2.1
	ARTtmp:1.1.2.1.0.2
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


4.3
date	2016.06.30.20.07.42;	author jlee;	state Exp;
branches;
next	4.2;
commitid	IWoXxARWeuLDOwcz;

4.2
date	98.10.01.07.42.31;	author kbracey;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	98.09.30.08.41.54;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.03.11.19.16.39;	author nturton;	state dead;
branches
	1.1.2.1;
next	;

4.2.2.1
date	2002.11.30.00.30.59;	author bavison;	state Exp;
branches;
next	4.2.2.2;

4.2.2.2
date	2012.02.25.08.37.22;	author rsprowson;	state Exp;
branches
	4.2.2.2.2.1;
next	4.2.2.3;
commitid	avzc6Nf2mNAL0wUv;

4.2.2.3
date	2012.05.26.09.00.18;	author rsprowson;	state Exp;
branches;
next	;
commitid	EMsCe1GQBPXgdd6w;

4.2.2.2.2.1
date	2012.09.18.15.49.44;	author jlee;	state Exp;
branches;
next	;
commitid	jeuxYpI6CQUxM1lw;

1.1.2.1
date	97.03.11.19.16.39;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@
#{DictTokens}
HUTMCON:*Configure <item> [<parameter>] sets the CMOS RAM options.*Status displays the current options.Items implemented in modules are: 
HUTMMOD:*Modules lists the modules currently loaded, giving the name and address of the module, and also the address of its workspace.See also *ROMModules.Modules loaded are: 
HUTMCOM:Utility commands: 
HUTMFSC:Filing System commands: 
HUTMMD:Module is: 
HUTMCM:Commands provided: 
HUTMFS:Filing system commands: 
HUTMCK:Configuration keywords: 
HUTMHK:It has help on: 

#{Token0=Break}
HUTMBRK:The Break key either terminates tasks, or (with CTRL or SHIFT) acts like the Reset button.When Reset is pressed, the following keys have an effect:SHIFT causes an autoboot (unless Boot is configured).keypad-* causes the supervisor to be run rather than the configured language.See also *Help PowerOn. 
#{Token0=ChangeDynamicArea}
HUTMCDA:*ChangeDynamicArea allows the size of the font cache, system sprite area, RAM disc, module area and screen memory to be set up. 
SUTMCDA:Syntax: *ChangeDynamicArea [-FontSize <n>[K|M|G]] [-SpriteSize <n>[K|M|G]] [-RamFSSize <n>[K|M|G]] [-RMASize <n>[K|M|G]] [-ScreenSize <n>[K|M|G]] 
#{Token0=Echo}
HUTMECH:*Echo sends a string to the VDU, after transformation by GSRead.Syntax: *Echo <string> 
#{Token0=Error}
HUTMERR:*Error generates an error with the given number and text. 
SUTMERR:Syntax: *Error [<number>] <text> 
#{Token0=Eval}
HUTMEVL:*Eval evaluates an integer or string expression.The expression analyser has the following operators:+			addition or string concatenation-, *, /, MOD		integer operations=, <, >, <=, >=, <>	string or integer comparison>>, <<			arithmetic shift right and left>>>			logical shift rightSTR, VAL		conversion between strings and integersAND, OR, EOR, NOT	(bitwise) logical operatorsRIGHT, LEFT		substring extractionLEN			length of a stringBrackets can also be used. 
SUTMEVL:Syntax: *Eval <expression> 
#{Token0=GOS}
HUTMGOS:*GOS enters the supervisor. Use *Quit to exit. 
SUTMGOS:Syntax: *GOS 
#{Token0=IF}
HUTMIF:*IF conditionally executes another command depending on the value of an expression. 
SUTMIF:Syntax: *IF <expression> THEN <command> [ELSE <command>] 
#{Token0=Ignore}
HUTMIGN:*Ignore sets the printer ignore character. 
SUTMIGN:Syntax: *Ignore [<number>] 
#{Token0=Modules}
SUTMMOD:Syntax: *Modules 
#{Token0=PowerOn}
HUTMPOW:When the machine is switched on, the following keys have an effect:R causes the operating system's CMOS RAM to be reset.DELETE causes all the machine's CMOS RAM to be reset.T and COPY are similar to R and DELETE, but set the opposite configured sync.0 to 9 on the keypad reset (just) the configured monitor type. Keypad dot sets the configured mode, sync and monitor type to Auto.See also *Help Reset and *Help Break. 
#{Token0=Reset}
HUTMRES:When Reset is pressed, the following keys have an effect:SHIFT causes an autoboot (unless Boot is configured).keypad-* causes the supervisor to be run rather than the configured language.See also *Help PowerOn. 
#{Token0=RMClear}
HUTMRMC:*RMClear deletes all relocatable modules from the RMA. 
SUTMRMC:Syntax: *RMClear 
#{Token0=RMEnsure}
HUTMRME:*RMEnsure checks that a module is present and is the given version, or a more modern one. The command is executed if this is not the case. 
SUTMRME:Syntax: *RMEnsure <moduletitle> <version number> [<*command>] 
#{Token0=RMFaster}
HUTMRMF:*RMFaster moves a module from ROM to RAM. 
SUTMRMF:Syntax: *RMFaster <moduletitle> 
#{Token0=RMInsert}
HUTMRMI:*RMInsert reverses the effect of *Unplug, but does not reinitialise the specified ROM module. 
SUTMRMI:Syntax: *RMInsert <moduletitle> [<podule number>] 
#{Token0=RMKill}
HUTMRMK:*RMKill kills and deletes a relocatable module. 
SUTMRMK:Syntax: *RMKill <moduletitle> 
#{Token0=RMLoad}
HUTMRML:*RMLoad loads and initialises a relocatable module. 
SUTMRML:Syntax: *RMLoad <filename> 
#{Token0=RMReInit}
HUTMRMR:*RMReInit reinitialises a relocatable module, reversing the action of *Unplug if appropriate. 
SUTMRMR:Syntax: *RMReInit <moduletitle> 
#{Token0=RMRun}
HUTMRRN:*RMRun runs a relocatable module. 
SUTMRRN:Syntax: *RMRun <filename> 
#{Token0=RMTidy}
HUTMRMT:*RMTidy compacts the RMA and reinitialises all the modules. 
SUTMRMT:Syntax: *RMTidy 
#{Token0=ROMModules}
HUTMROM:*ROMModules lists the relocatable modules currently in ROM, along with their status.See also *Modules. 
SUTMROM:Syntax: *ROMModules 
#{Token0=Set}
HUTMSET:*Set assigns a string value to a system variable. Other types of value can be assigned with *SetEval and *SetMacro. 
SUTMSET:Syntax: *Set <varname> <value> 
#{Token0=SetEval}
HUTMSTE:*SetEval evaluates an expression and assigns it to a system variable. Other types of value can be assigned with *Set and *SetMacro."*Help Eval" describes the expression syntax. 
SUTMSTE:Syntax: *SetEval <varname> <expression> 
#{Token0=SetMacro}
HUTMSTM:*SetMacro assigns a macro value to a system variable. Other types of value can be assigned with *Set and *SetEval. 
SUTMSTM:Syntax: *SetMacro <varname> <value> 
#{Token0=Show}
HUTMSHO:*Show lists system variables matching the name given, or all system variables if no name is specified. Variables can be set with *Set, *SetEval and *SetMacro. 
SUTMSHO:Syntax: *Show [<variablespec>] 
#{Token0=Status}
HUTMSTA:*Status shows the selected CMOS RAM options. Use *Configure to set the options. 
SUTMSTA:Syntax: *Status [<option>] 
#{Token0=Syntax}
HUTMSYN:Symbols used in syntax descriptions:<> mark sections to be filled in, e.g. <filename> indicates that a filename should be supplied here.[] mark optional sections.| indicates a choice, e.g. "A|B" means "A or B". 
#{Token0=Time}
HUTMTIM:*Time displays the time and date. 
SUTMTIM:Syntax: *Time 
#{Token0=Unplug}
HUTMUNP:*Unplug stops the given ROM module being initialised.*Unplug with no argument lists the unplugged ROM modules. 
SUTMUNP:Syntax: *Unplug [<moduletitle> [<podule number>]] 
#{Token0=Unset}
HUTMUNS:*Unset deletes a system variable. 
SUTMUNS:Syntax: *Unset <varname> 

#{Token0=Append}
HUTMAPP:*Append opens an existing file and subsequent lines of keyboard input are appended to it, input being terminated by ESCAPE. 
SUTMAPP:Syntax: *Append <filename> 
#{Token0=Build}
HUTMBUI:*Build opens a new file and subsequent lines of keyboard input are directed to it, input being terminated by ESCAPE. 
SUTMBUI:Syntax: *Build <filename> 
#{Token0=Cache}
HUTMCAC:*Cache turns the cache on or off, or gives the cache state. 
SUTMCAC:Syntax: *Cache [On|Off] 
#{Token0=Close}
HUTMCLO:*Close closes all files on the current filing system. 
SUTMCLO:Syntax: *Close 
#{Token0=Create}
HUTMCRE:*Create reserves space for the named file, optionally giving it load and execution addresses. No data is transferred to the file. Length and addresses are in hexadecimal. 
SUTMCRE:Syntax: *Create <filename> [<length> [<exec addr> [<load addr>]]] 
#{Token0=Delete}
HUTMDEL:*Delete tries to delete the named file, returning an error if the file does not exist. 
SUTMDEL:Syntax: *Delete <filename> 
#{Token0=Dump}
HUTMDMP:*Dump displays the contents of the file as a hex and ASCII dump. The file offset and start address are in hexadecimal. 
SUTMDMP:Syntax: *Dump <filename> [<file offset> [<start address>]] 
#{Token0=Exec}
HUTMEXE:*Exec <filename> directs the operating system to take further input from the given file.*Exec with no filename causes the exec file to be closed. 
SUTMEXE:Syntax: *Exec [<filename>] 
#{Token0=FX}
HUTMFX:*FX calls OS_Byte. 
SUTMFX:Syntax: *FX r0 [[,] r1 [[,] r2]] 
#{Token0=GO}
HUTMGO:*GO [<address>] [; environment] - go to address (hexadecimal), default &8000. Text after ';' is environment string. 
#{Token0=Help}
HUTMHLP:*Help <subjects> attempts to give useful information on the selected topics. Special keywords include:Commands	List all the available utility commandsFileCommands	List all the filing system-specific commandsModules		List the module titlesSyntax		Explain the syntax message format 
#{Token0=Key}
HUTMKEY:*Key sets the function keys. 
SUTMKEY:Syntax: *Key <keynumber> [<value>] 
#{Token0=List}
HUTMLST:*List displays the contents of the file in the configured GSRead format. Each line is preceded with a line number.See also *Print and *Type. 
SUTMLST:Syntax: *List [-File] <filename> [-TabExpand] 
#{Token0=Load}
HUTMLOD:*Load with no specified address loads the named file at its own load address. If a load address (hexadecimal) is specified, it will be used instead. 
SUTMLOD:Syntax: *Load <filename> [<load addr>] 
#{Token0=Opt}
HUTMOPT:*Opt controls various filing system actions.Opt 1 <n> Set the filing system message level (for Load/Save/Create):	0	No filing system messages	1	Filename printed	2	Filename,hexadecimal addresses and length printed	3	Filename,datestamp and length printedOpt 4 <n> Set the filing system boot option:	0	No boot action	1	*Load boot file	2	*Run boot file	3	*Exec boot file 
SUTMOPT:Syntax: *Opt [<x> [[,] <y>]] 
#{Token0=Print}
HUTMPRI:*Print displays the contents of a file by sending each byte to the VDU.See also *List and *Type. 
SUTMPRI:Syntax: *Print <filename> 
#{Token0=Quit}
HUTMQUI:*Quit leaves the current application. 
SUTMQUI:Syntax: *Quit 
#{Token0=Remove}
HUTMREM:*Remove tries to delete the named file without returning an error if the file does not exist. 
SUTMREM:Syntax: *Remove <filename> 
#{Token0=Save}
HUTMSAV:*Save copies the given area of memory to the named file. Length and addresses are in hexadecimal. 
SUTMSAV:Syntax: *Save <filename> <start addr> <+length|end addr> [<exec addr> [<load addr>]] 
#{Token0=Shadow}
HUTMSHA:*Shadow makes subsequent mode changes use the other screen bank. 
SUTMSHA:Syntax: *Shadow 
#{Token0=Spool}
HUTMSPL:*Spool <filename> opens a new file and causes subsequent VDU output to be directed to it, subject to the current *fx 3 status. *Spool with no filename causes the spool file to be closed. 
SUTMSPL:Syntax: *Spool [<filename>] 
#{Token0=SpoolOn}
HUTMSPO:*SpoolOn <filename> opens an existing file and causes subsequent VDU output to be appended to it, subject to the current *fx 3 status. *SpoolOn with no filename causes the spool file to be closed. 
SUTMSPO:Syntax: *SpoolOn [<filename>] 
#{Token0=TV}
HUTMTV:*TV controls interlacing and sets the position of the display on the screen. 
SUTMTV:Syntax: *TV [<vertical position> [[,] <interlace>]] 
#{Token0=Type}
HUTMTYP:*Type displays the contents of the file in the configured GSRead format.See also *List and *Print. 
SUTMTYP:Syntax: *Type [-File] <filename> [-TabExpand] 
@


4.2
log
@Following changes folded in from the start of the Ursula branch:
CPU type messages internationalised.
"Unknown OS_PlatformFeatures reason code" internationalised.
RunningOnEmul flag tweaked.
MorrisIDString conditional removed.
New modules added to SWI list at the end of the chain, on grounds that
the first-registered modules are probably more important.
*ChangeDynamicArea moved into UtilityModule from TaskManager.

Version 4.65. Tagged as 'Kernel-4_65'
@
text
@d17 1
a17 1
SUTMCDA:Syntax: *ChangeDynamicArea [-FontSize <n>[K]] [-SpriteSize <n>[K]] [-RamFsSize <n>[K]] [-RMASize <n>[K]] [-ScreenSize <n>[K]] 
d104 3
d152 1
a152 1
SUTMSAV:Syntax: *Save <filename> <start addr> <end addr> [<exec addr> [<load addr>]]or *Save <filename> <start addr> + <length> [<exec addr> [<load addr>]] 
d163 2
a164 2
HUTMTV:*TV [<vertical position> [[,] <interlace>]] sets the position of the display on the screen. 
SUTMTV:Syntax: *TV needs 0 to 2 parameters. 
@


4.2.2.1
log
@  Commit of kernel as featured in release 5.00.
Detail:
  Lots of changes since last version, at least the following:
  * Updated OS timestamp, removed alpha status
  * Negative INKEY OS version changed to &AA
  * GraphicsV is now alocated vector number &2A
  * ROM moved up to &FC000000
  * Max application slot increased to 512 Mbytes (for now)
  * Max size of RMA increased to 256 Mbytes
  * RMA is now first-created dynamic area (so it gets lowest address after
    top of application slot)
  * OS_Memory 10 reimplemeted
  * New OS_ReadSysInfo 6 values 18-22 added
  * OS_ReadSysInfo 8 gains flag bit to indicate soft power-off
  * Misc internal top-bit-set-address fixes
  * *ChangeDynamicArea can take sizes in megabytes or gigabytes
  * Magic word "&off" in R0 passed to OS_Reset powers down if possible
  * Added acceleration: block copy; CLS; text window scroll up; rectangle
    fill
  * Disabled LED flashing in page mode (liable to crash)
  * Masked sprite plot and VDU 5 text avoids reading the screen if possible
  * Framestore made USR mode accessible
  * Fix for VDU 5,127 bug - now relies on font definitions being in extreme
    quarters of memory, rather than bottom half
  * Allocated 64-bit OS_Convert... SWIs
  * IIC errors use allocated error numbers
  * Looks for Dallas RTC before Philips RTC because we're using a Philips
    NVRAM device with the same ID
  * Fix to bug that meant the oscillator in the Dallas RTC wasn't enabled
  * Default mouse type (USB) changed to allocated number
  * Ram disc max size increased to 128 Mbytes (Ursula merge) and made
    cacheable for StrongARMs (not XScale)
  * Branch through zero handler now works in USR mode, by use of a
    trampoline in the system stack to allow PC-relative register storage
  * Address exception handler changed to not use 0 as workspace
  * OS_Memory 13 extended to allow specification of cacheability and access
    privileges
  * Added OS_Memory 16 to return important memory addresses
  * RISCOS_MapInIO() takes cacheable flag in bit 3, access permissions in
    bits 10 and 11, doubly-mapped flag in bit 20, and access permissions
    specified flag in bit 21
  * Bug fix in last version for application abort handlers didn't quite
    work; register shuffle required
  * "Module is not 32-bit compatible" error now reports the module name
  * Default configured language changed from 10 to 11 (now Desktop again)

Version 5.35, 4.79.2.51. Tagged as 'Kernel-5_35-4_79_2_51'
@
text
@d17 1
a17 1
SUTMCDA:Syntax: *ChangeDynamicArea [-FontSize <n>[K|M|G]] [-SpriteSize <n>[K|M|G]] [-RamFSSize <n>[K|M|G]] [-RMASize <n>[K|M|G]] [-ScreenSize <n>[K|M|G]] 
@


4.2.2.2
log
@Fix *SAVE syntax error message.
The text had cunning hardspaces in it so that the *HELP text lines up nicely using OS_PrettyPrint, but not taking into account that internationalised syntax errors don't use OS_PrettyPrint so output VDU31,31,31 and jumped all over the place.
Syntax message rephrased to fit on one line.
Syntax and help for *TV cleared up since the help text contained all the syntax information.
Spotted 2 wasted instructions in Oscli.s while investigating, added some comments too.

Version 5.35, 4.79.2.137. Tagged as 'Kernel-5_35-4_79_2_137'
@
text
@d149 1
a149 1
SUTMSAV:Syntax: *Save <filename> <start addr> <+length|end addr> [<exec addr> [<load addr>]] 
d160 2
a161 2
HUTMTV:*TV controls interlacing and sets the position of the display on the screen. 
SUTMTV:Syntax: *TV [<vertical position> [[,] <interlace>]] 
@


4.2.2.2.2.1
log
@Merge with HAL branch
Detail:
  Merge the HAL branch into the RPi branch, prior to merging RPi to HAL
  Brief summary of main changes brought in:
  * Added *cache functionality previously provided by ARM module
  * Added "CMOS RAM reset" message on startup when CMOS has been wiped by keypress
  * Renamed HAL Video entries from HAL_Video_XXX to HAL_VideoXXX
  * Dropped mjsHAL macros, GRAB/STASH macros
  * Fixed pseudo-VRAM allocation when machine has exactly 16MB of RAM
  * Added OS_Hardware 5
  * Use OS_SerialOp GetDeviceName for getting serial device name
  * Drop HAL_MonitorLeadID
  * Rework default GraphicsV_IICOp handler
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.23. Tagged as 'Kernel-5_35-4_79_2_147_2_23'
@
text
@a103 3
#{Token0=Cache}
HUTMCAC:*Cache turns the cache on or off, or gives the cache state. 
SUTMCAC:Syntax: *Cache [On|Off] 
@


4.2.2.3
log
@Adoption of *CONFIGURE/STATUS CACHE commands
The kernel already looks after all other aspects of the ARM CPU, so can look after the cache control command too.
 HelpStrs.s:New tokens for help and syntax
 CmdHelp.s:UK help and syntax
 Arthur3.s:Tables updates for *CONFIGURE/STATUS, lined some stuff up, default error text sync'd with Hdr:NewErrors
 MoreComms.s:Parsing and doing of *CACHE
 Utility.s:Hashing table updated for *CACHE
Other minor changes
 hdr/Options:Bring 'MosVer' into the private header
 hdr/RISCOS:aasm aliases for SP removed, MainVars and MosVer made private, added definition of the start of application space
 HeapMan.s:Use of GRAB changed to Pull
 Offset of TutuCMOS changed for more informative PrintSoundCMOS
 PMF/osbyte.s:Use OsBytes header file in place of MainVars

Version 5.35, 4.79.2.151. Tagged as 'Kernel-5_35-4_79_2_151'
@
text
@a103 3
#{Token0=Cache}
HUTMCAC:*Cache turns the cache on or off, or gives the cache state. 
SUTMCAC:Syntax: *Cache [On|Off] 
@


4.1
log
@Spinner branch merged.
Bandwidth limit for 7500FE fixed.
RO371Timings flag set to :LNOT:STB

Version 4.64. Tagged as 'Kernel-4_64'
@
text
@d15 3
@


1.1
log
@file CmdHelp was initially added on branch Spinner.
@
text
@d1 161
@


1.1.2.1
log
@Command line messages removed
@
text
@a0 161

#{DictTokens}
HUTMCON:*Configure <item> [<parameter>] sets the CMOS RAM options.*Status displays the current options.Items implemented in modules are: 
HUTMMOD:*Modules lists the modules currently loaded, giving the name and address of the module, and also the address of its workspace.See also *ROMModules.Modules loaded are: 
HUTMCOM:Utility commands: 
HUTMFSC:Filing System commands: 
HUTMMD:Module is: 
HUTMCM:Commands provided: 
HUTMFS:Filing system commands: 
HUTMCK:Configuration keywords: 
HUTMHK:It has help on: 

#{Token0=Break}
HUTMBRK:The Break key either terminates tasks, or (with CTRL or SHIFT) acts like the Reset button.When Reset is pressed, the following keys have an effect:SHIFT causes an autoboot (unless Boot is configured).keypad-* causes the supervisor to be run rather than the configured language.See also *Help PowerOn. 
#{Token0=Echo}
HUTMECH:*Echo sends a string to the VDU, after transformation by GSRead.Syntax: *Echo <string> 
#{Token0=Error}
HUTMERR:*Error generates an error with the given number and text. 
SUTMERR:Syntax: *Error [<number>] <text> 
#{Token0=Eval}
HUTMEVL:*Eval evaluates an integer or string expression.The expression analyser has the following operators:+			addition or string concatenation-, *, /, MOD		integer operations=, <, >, <=, >=, <>	string or integer comparison>>, <<			arithmetic shift right and left>>>			logical shift rightSTR, VAL		conversion between strings and integersAND, OR, EOR, NOT	(bitwise) logical operatorsRIGHT, LEFT		substring extractionLEN			length of a stringBrackets can also be used. 
SUTMEVL:Syntax: *Eval <expression> 
#{Token0=GOS}
HUTMGOS:*GOS enters the supervisor. Use *Quit to exit. 
SUTMGOS:Syntax: *GOS 
#{Token0=IF}
HUTMIF:*IF conditionally executes another command depending on the value of an expression. 
SUTMIF:Syntax: *IF <expression> THEN <command> [ELSE <command>] 
#{Token0=Ignore}
HUTMIGN:*Ignore sets the printer ignore character. 
SUTMIGN:Syntax: *Ignore [<number>] 
#{Token0=Modules}
SUTMMOD:Syntax: *Modules 
#{Token0=PowerOn}
HUTMPOW:When the machine is switched on, the following keys have an effect:R causes the operating system's CMOS RAM to be reset.DELETE causes all the machine's CMOS RAM to be reset.T and COPY are similar to R and DELETE, but set the opposite configured sync.0 to 9 on the keypad reset (just) the configured monitor type. Keypad dot sets the configured mode, sync and monitor type to Auto.See also *Help Reset and *Help Break. 
#{Token0=Reset}
HUTMRES:When Reset is pressed, the following keys have an effect:SHIFT causes an autoboot (unless Boot is configured).keypad-* causes the supervisor to be run rather than the configured language.See also *Help PowerOn. 
#{Token0=RMClear}
HUTMRMC:*RMClear deletes all relocatable modules from the RMA. 
SUTMRMC:Syntax: *RMClear 
#{Token0=RMEnsure}
HUTMRME:*RMEnsure checks that a module is present and is the given version, or a more modern one. The command is executed if this is not the case. 
SUTMRME:Syntax: *RMEnsure <moduletitle> <version number> [<*command>] 
#{Token0=RMFaster}
HUTMRMF:*RMFaster moves a module from ROM to RAM. 
SUTMRMF:Syntax: *RMFaster <moduletitle> 
#{Token0=RMInsert}
HUTMRMI:*RMInsert reverses the effect of *Unplug, but does not reinitialise the specified ROM module. 
SUTMRMI:Syntax: *RMInsert <moduletitle> [<podule number>] 
#{Token0=RMKill}
HUTMRMK:*RMKill kills and deletes a relocatable module. 
SUTMRMK:Syntax: *RMKill <moduletitle> 
#{Token0=RMLoad}
HUTMRML:*RMLoad loads and initialises a relocatable module. 
SUTMRML:Syntax: *RMLoad <filename> 
#{Token0=RMReInit}
HUTMRMR:*RMReInit reinitialises a relocatable module, reversing the action of *Unplug if appropriate. 
SUTMRMR:Syntax: *RMReInit <moduletitle> 
#{Token0=RMRun}
HUTMRRN:*RMRun runs a relocatable module. 
SUTMRRN:Syntax: *RMRun <filename> 
#{Token0=RMTidy}
HUTMRMT:*RMTidy compacts the RMA and reinitialises all the modules. 
SUTMRMT:Syntax: *RMTidy 
#{Token0=ROMModules}
HUTMROM:*ROMModules lists the relocatable modules currently in ROM, along with their status.See also *Modules. 
SUTMROM:Syntax: *ROMModules 
#{Token0=Set}
HUTMSET:*Set assigns a string value to a system variable. Other types of value can be assigned with *SetEval and *SetMacro. 
SUTMSET:Syntax: *Set <varname> <value> 
#{Token0=SetEval}
HUTMSTE:*SetEval evaluates an expression and assigns it to a system variable. Other types of value can be assigned with *Set and *SetMacro."*Help Eval" describes the expression syntax. 
SUTMSTE:Syntax: *SetEval <varname> <expression> 
#{Token0=SetMacro}
HUTMSTM:*SetMacro assigns a macro value to a system variable. Other types of value can be assigned with *Set and *SetEval. 
SUTMSTM:Syntax: *SetMacro <varname> <value> 
#{Token0=Show}
HUTMSHO:*Show lists system variables matching the name given, or all system variables if no name is specified. Variables can be set with *Set, *SetEval and *SetMacro. 
SUTMSHO:Syntax: *Show [<variablespec>] 
#{Token0=Status}
HUTMSTA:*Status shows the selected CMOS RAM options. Use *Configure to set the options. 
SUTMSTA:Syntax: *Status [<option>] 
#{Token0=Syntax}
HUTMSYN:Symbols used in syntax descriptions:<> mark sections to be filled in, e.g. <filename> indicates that a filename should be supplied here.[] mark optional sections.| indicates a choice, e.g. "A|B" means "A or B". 
#{Token0=Time}
HUTMTIM:*Time displays the time and date. 
SUTMTIM:Syntax: *Time 
#{Token0=Unplug}
HUTMUNP:*Unplug stops the given ROM module being initialised.*Unplug with no argument lists the unplugged ROM modules. 
SUTMUNP:Syntax: *Unplug [<moduletitle> [<podule number>]] 
#{Token0=Unset}
HUTMUNS:*Unset deletes a system variable. 
SUTMUNS:Syntax: *Unset <varname> 

#{Token0=Append}
HUTMAPP:*Append opens an existing file and subsequent lines of keyboard input are appended to it, input being terminated by ESCAPE. 
SUTMAPP:Syntax: *Append <filename> 
#{Token0=Build}
HUTMBUI:*Build opens a new file and subsequent lines of keyboard input are directed to it, input being terminated by ESCAPE. 
SUTMBUI:Syntax: *Build <filename> 
#{Token0=Close}
HUTMCLO:*Close closes all files on the current filing system. 
SUTMCLO:Syntax: *Close 
#{Token0=Create}
HUTMCRE:*Create reserves space for the named file, optionally giving it load and execution addresses. No data is transferred to the file. Length and addresses are in hexadecimal. 
SUTMCRE:Syntax: *Create <filename> [<length> [<exec addr> [<load addr>]]] 
#{Token0=Delete}
HUTMDEL:*Delete tries to delete the named file, returning an error if the file does not exist. 
SUTMDEL:Syntax: *Delete <filename> 
#{Token0=Dump}
HUTMDMP:*Dump displays the contents of the file as a hex and ASCII dump. The file offset and start address are in hexadecimal. 
SUTMDMP:Syntax: *Dump <filename> [<file offset> [<start address>]] 
#{Token0=Exec}
HUTMEXE:*Exec <filename> directs the operating system to take further input from the given file.*Exec with no filename causes the exec file to be closed. 
SUTMEXE:Syntax: *Exec [<filename>] 
#{Token0=FX}
HUTMFX:*FX calls OS_Byte. 
SUTMFX:Syntax: *FX r0 [[,] r1 [[,] r2]] 
#{Token0=GO}
HUTMGO:*GO [<address>] [; environment] - go to address (hexadecimal), default &8000. Text after ';' is environment string. 
#{Token0=Help}
HUTMHLP:*Help <subjects> attempts to give useful information on the selected topics. Special keywords include:Commands	List all the available utility commandsFileCommands	List all the filing system-specific commandsModules		List the module titlesSyntax		Explain the syntax message format 
#{Token0=Key}
HUTMKEY:*Key sets the function keys. 
SUTMKEY:Syntax: *Key <keynumber> [<value>] 
#{Token0=List}
HUTMLST:*List displays the contents of the file in the configured GSRead format. Each line is preceded with a line number.See also *Print and *Type. 
SUTMLST:Syntax: *List [-File] <filename> [-TabExpand] 
#{Token0=Load}
HUTMLOD:*Load with no specified address loads the named file at its own load address. If a load address (hexadecimal) is specified, it will be used instead. 
SUTMLOD:Syntax: *Load <filename> [<load addr>] 
#{Token0=Opt}
HUTMOPT:*Opt controls various filing system actions.Opt 1 <n> Set the filing system message level (for Load/Save/Create):	0	No filing system messages	1	Filename printed	2	Filename,hexadecimal addresses and length printed	3	Filename,datestamp and length printedOpt 4 <n> Set the filing system boot option:	0	No boot action	1	*Load boot file	2	*Run boot file	3	*Exec boot file 
SUTMOPT:Syntax: *Opt [<x> [[,] <y>]] 
#{Token0=Print}
HUTMPRI:*Print displays the contents of a file by sending each byte to the VDU.See also *List and *Type. 
SUTMPRI:Syntax: *Print <filename> 
#{Token0=Quit}
HUTMQUI:*Quit leaves the current application. 
SUTMQUI:Syntax: *Quit 
#{Token0=Remove}
HUTMREM:*Remove tries to delete the named file without returning an error if the file does not exist. 
SUTMREM:Syntax: *Remove <filename> 
#{Token0=Save}
HUTMSAV:*Save copies the given area of memory to the named file. Length and addresses are in hexadecimal. 
SUTMSAV:Syntax: *Save <filename> <start addr> <end addr> [<exec addr> [<load addr>]]or *Save <filename> <start addr> + <length> [<exec addr> [<load addr>]] 
#{Token0=Shadow}
HUTMSHA:*Shadow makes subsequent mode changes use the other screen bank. 
SUTMSHA:Syntax: *Shadow 
#{Token0=Spool}
HUTMSPL:*Spool <filename> opens a new file and causes subsequent VDU output to be directed to it, subject to the current *fx 3 status. *Spool with no filename causes the spool file to be closed. 
SUTMSPL:Syntax: *Spool [<filename>] 
#{Token0=SpoolOn}
HUTMSPO:*SpoolOn <filename> opens an existing file and causes subsequent VDU output to be appended to it, subject to the current *fx 3 status. *SpoolOn with no filename causes the spool file to be closed. 
SUTMSPO:Syntax: *SpoolOn [<filename>] 
#{Token0=TV}
HUTMTV:*TV [<vertical position> [[,] <interlace>]] sets the position of the display on the screen. 
SUTMTV:Syntax: *TV needs 0 to 2 parameters. 
#{Token0=Type}
HUTMTYP:*Type displays the contents of the file in the configured GSRead format.See also *List and *Print. 
SUTMTYP:Syntax: *Type [-File] <filename> [-TabExpand] 
@
