head	4.1;
branch	4.1.3;
access;
symbols
	Kernel-6_15:4.1.3.1
	Kernel-6_14:4.1.3.1
	Kernel-6_01-3:4.1.3.1
	Kernel-6_13:4.1.3.1
	Kernel-6_12:4.1.3.1
	Kernel-6_11:4.1.3.1
	Kernel-6_10:4.1.3.1
	Kernel-6_09:4.1.3.1
	Kernel-6_08-4_129_2_10:4.1.3.1
	Kernel-6_08-4_129_2_9:4.1.3.1
	Kernel-6_08:4.1.3.1
	Kernel-6_07:4.1.3.1
	Kernel-6_06:4.1.3.1
	Kernel-6_05-4_129_2_8:4.1.3.1
	Kernel-6_05:4.1.3.1
	Kernel-6_04:4.1.3.1
	Kernel-6_03:4.1.3.1
	Kernel-6_01-2:4.1.3.1
	Kernel-6_01-4_146_2_1:4.1.3.1
	Kernel-6_02:4.1.3.1
	Kernel-6_01-1:4.1.3.1
	Kernel-6_01:4.1.3.1
	Kernel-6_00:4.1.3.1
	Kernel-5_99:4.1.3.1
	Kernel-5_98:4.1.3.1
	Kernel-5_97-4_129_2_7:4.1.3.1
	Kernel-5_97:4.1.3.1
	Kernel-5_96:4.1.3.1
	Kernel-5_95:4.1.3.1
	Kernel-5_94:4.1.3.1
	Kernel-5_93:4.1.3.1
	Kernel-5_92:4.1.3.1
	Kernel-5_91:4.1.3.1
	Kernel-5_90:4.1.3.1
	Kernel-5_89-4_129_2_6:4.1.3.1
	Kernel-5_89:4.1.3.1
	Kernel-5_88-4_129_2_5:4.1.3.1
	Kernel-5_88-4_129_2_4:4.1.3.1
	Kernel-5_88:4.1.3.1
	Kernel-5_87:4.1.3.1
	Kernel-5_86-4_129_2_3:4.1.3.1
	Kernel-5_86-4_129_2_2:4.1.3.1
	Kernel-5_86-4_129_2_1:4.1.3.1
	Kernel-5_86:4.1.3.1
	SMP:4.1.3.1.0.20
	SMP_bp:4.1.3.1
	Kernel-5_85:4.1.3.1
	Kernel-5_54-1:4.1.3.1
	Kernel-5_84:4.1.3.1
	Kernel-5_83:4.1.3.1
	Kernel-5_82:4.1.3.1
	Kernel-5_81:4.1.3.1
	Kernel-5_80:4.1.3.1
	Kernel-5_79:4.1.3.1
	Kernel-5_78:4.1.3.1
	Kernel-5_77:4.1.3.1
	Kernel-5_76:4.1.3.1
	Kernel-5_75:4.1.3.1
	Kernel-5_74:4.1.3.1
	Kernel-5_73:4.1.3.1
	Kernel-5_72:4.1.3.1
	Kernel-5_71:4.1.3.1
	Kernel-5_70:4.1.3.1
	Kernel-5_69:4.1.3.1
	Kernel-5_68:4.1.3.1
	Kernel-5_67:4.1.3.1
	Kernel-5_66:4.1.3.1
	Kernel-5_65:4.1.3.1
	Kernel-5_64:4.1.3.1
	Kernel-5_63:4.1.3.1
	Kernel-5_62:4.1.3.1
	Kernel-5_61:4.1.3.1
	Kernel-5_60:4.1.3.1
	Kernel-5_59:4.1.3.1
	Kernel-5_58:4.1.3.1
	Kernel-5_57:4.1.3.1
	Kernel-5_56:4.1.3.1
	Kernel-5_55:4.1.3.1
	Kernel-5_54:4.1.3.1
	Kernel-5_53:4.1.3.1
	Kernel-5_52:4.1.3.1
	Kernel-5_51:4.1.3.1
	Kernel-5_50:4.1.3.1
	Kernel-5_49:4.1.3.1
	HAL_merge:4.1.3.1
	Kernel-5_48:4.1.3.1
	Kernel-5_35-4_79_2_327:4.1.3.1
	Kernel-5_35-4_79_2_326:4.1.3.1
	Kernel-5_35-4_79_2_325:4.1.3.1
	Kernel-5_35-4_79_2_324:4.1.3.1
	Kernel-5_35-4_79_2_323:4.1.3.1
	Kernel-5_35-4_79_2_322:4.1.3.1
	Kernel-5_35-4_79_2_321:4.1.3.1
	Kernel-5_35-4_79_2_320:4.1.3.1
	Kernel-5_35-4_79_2_319:4.1.3.1
	Kernel-5_35-4_79_2_318:4.1.3.1
	Kernel-5_35-4_79_2_317:4.1.3.1
	Kernel-5_35-4_79_2_316:4.1.3.1
	Kernel-5_35-4_79_2_315:4.1.3.1
	Kernel-5_35-4_79_2_314:4.1.3.1
	Kernel-5_35-4_79_2_313:4.1.3.1
	Kernel-5_35-4_79_2_312:4.1.3.1
	Kernel-5_35-4_79_2_311:4.1.3.1
	Kernel-5_35-4_79_2_310:4.1.3.1
	Kernel-5_35-4_79_2_309:4.1.3.1
	Kernel-5_35-4_79_2_308:4.1.3.1
	Kernel-5_35-4_79_2_307:4.1.3.1
	Kernel-5_35-4_79_2_306:4.1.3.1
	Kernel-5_35-4_79_2_305:4.1.3.1
	Kernel-5_35-4_79_2_304:4.1.3.1
	Kernel-5_35-4_79_2_303:4.1.3.1
	Kernel-5_35-4_79_2_302:4.1.3.1
	Kernel-5_35-4_79_2_301:4.1.3.1
	Kernel-5_35-4_79_2_300:4.1.3.1
	Kernel-5_35-4_79_2_299:4.1.3.1
	Kernel-5_35-4_79_2_298:4.1.3.1
	Kernel-5_35-4_79_2_297:4.1.3.1
	Kernel-5_35-4_79_2_296:4.1.3.1
	Kernel-5_35-4_79_2_295:4.1.3.1
	Kernel-5_35-4_79_2_294:4.1.3.1
	Kernel-5_35-4_79_2_293:4.1.3.1
	Kernel-5_35-4_79_2_292:4.1.3.1
	Kernel-5_35-4_79_2_291:4.1.3.1
	Kernel-5_35-4_79_2_290:4.1.3.1
	Kernel-5_35-4_79_2_289:4.1.3.1
	Kernel-5_35-4_79_2_288:4.1.3.1
	Kernel-5_35-4_79_2_287:4.1.3.1
	Kernel-5_35-4_79_2_286:4.1.3.1
	Kernel-5_35-4_79_2_285:4.1.3.1
	Kernel-5_35-4_79_2_284:4.1.3.1
	Kernel-5_35-4_79_2_283:4.1.3.1
	Kernel-5_35-4_79_2_282:4.1.3.1
	Kernel-5_35-4_79_2_281:4.1.3.1
	Kernel-5_35-4_79_2_280:4.1.3.1
	Kernel-5_35-4_79_2_279:4.1.3.1
	Kernel-5_35-4_79_2_278:4.1.3.1
	Kernel-5_35-4_79_2_277:4.1.3.1
	Kernel-5_35-4_79_2_276:4.1.3.1
	Kernel-5_35-4_79_2_275:4.1.3.1
	Kernel-5_35-4_79_2_274:4.1.3.1
	Kernel-5_35-4_79_2_273:4.1.3.1
	Kernel-5_35-4_79_2_272:4.1.3.1
	Kernel-5_35-4_79_2_271:4.1.3.1
	Kernel-5_35-4_79_2_270:4.1.3.1
	Kernel-5_35-4_79_2_269:4.1.3.1
	Kernel-5_35-4_79_2_268:4.1.3.1
	Kernel-5_35-4_79_2_267:4.1.3.1
	Kernel-5_35-4_79_2_266:4.1.3.1
	Kernel-5_35-4_79_2_265:4.1.3.1
	Kernel-5_35-4_79_2_264:4.1.3.1
	Kernel-5_35-4_79_2_263:4.1.3.1
	Kernel-5_35-4_79_2_262:4.1.3.1
	Kernel-5_35-4_79_2_261:4.1.3.1
	Kernel-5_35-4_79_2_260:4.1.3.1
	Kernel-5_35-4_79_2_259:4.1.3.1
	Kernel-5_35-4_79_2_258:4.1.3.1
	Kernel-5_35-4_79_2_257:4.1.3.1
	Kernel-5_35-4_79_2_256:4.1.3.1
	Kernel-5_35-4_79_2_255:4.1.3.1
	Kernel-5_35-4_79_2_254:4.1.3.1
	Kernel-5_35-4_79_2_253:4.1.3.1
	Kernel-5_35-4_79_2_252:4.1.3.1
	Kernel-5_35-4_79_2_251:4.1.3.1
	Kernel-5_35-4_79_2_250:4.1.3.1
	Kernel-5_35-4_79_2_249:4.1.3.1
	Kernel-5_35-4_79_2_248:4.1.3.1
	Kernel-5_35-4_79_2_247:4.1.3.1
	Kernel-5_35-4_79_2_246:4.1.3.1
	Kernel-5_35-4_79_2_245:4.1.3.1
	Kernel-5_35-4_79_2_244:4.1.3.1
	Kernel-5_35-4_79_2_243:4.1.3.1
	Kernel-5_35-4_79_2_242:4.1.3.1
	Kernel-5_35-4_79_2_241:4.1.3.1
	Kernel-5_35-4_79_2_240:4.1.3.1
	Kernel-5_35-4_79_2_239:4.1.3.1
	Kernel-5_35-4_79_2_238:4.1.3.1
	Kernel-5_35-4_79_2_237:4.1.3.1
	Kernel-5_35-4_79_2_236:4.1.3.1
	Kernel-5_35-4_79_2_235:4.1.3.1
	Kernel-5_35-4_79_2_234:4.1.3.1
	Kernel-5_35-4_79_2_233:4.1.3.1
	Kernel-5_35-4_79_2_232:4.1.3.1
	Kernel-5_35-4_79_2_231:4.1.3.1
	Kernel-5_35-4_79_2_230:4.1.3.1
	Kernel-5_35-4_79_2_229:4.1.3.1
	Kernel-5_35-4_79_2_228:4.1.3.1
	Kernel-5_35-4_79_2_227:4.1.3.1
	Kernel-5_35-4_79_2_226:4.1.3.1
	Kernel-5_35-4_79_2_225:4.1.3.1
	Kernel-5_35-4_79_2_224:4.1.3.1
	Kernel-5_35-4_79_2_223:4.1.3.1
	Kernel-5_35-4_79_2_222:4.1.3.1
	Kernel-5_35-4_79_2_221:4.1.3.1
	Kernel-5_35-4_79_2_220:4.1.3.1
	Kernel-5_35-4_79_2_219:4.1.3.1
	Kernel-5_35-4_79_2_218:4.1.3.1
	Kernel-5_35-4_79_2_217:4.1.3.1
	Kernel-5_35-4_79_2_216:4.1.3.1
	Kernel-5_35-4_79_2_215:4.1.3.1
	Kernel-5_35-4_79_2_214:4.1.3.1
	Kernel-5_35-4_79_2_213:4.1.3.1
	Kernel-5_35-4_79_2_212:4.1.3.1
	Kernel-5_35-4_79_2_211:4.1.3.1
	Kernel-5_35-4_79_2_210:4.1.3.1
	Kernel-5_35-4_79_2_209:4.1.3.1
	Kernel-5_35-4_79_2_208:4.1.3.1
	Kernel-5_35-4_79_2_207:4.1.3.1
	Kernel-5_35-4_79_2_206:4.1.3.1
	Kernel-5_35-4_79_2_205:4.1.3.1
	Kernel-5_35-4_79_2_204:4.1.3.1
	Kernel-5_35-4_79_2_203:4.1.3.1
	Kernel-5_35-4_79_2_202:4.1.3.1
	Kernel-5_35-4_79_2_201:4.1.3.1
	Kernel-5_35-4_79_2_200:4.1.3.1
	Kernel-5_35-4_79_2_199:4.1.3.1
	Kernel-5_35-4_79_2_198:4.1.3.1
	Kernel-5_35-4_79_2_197:4.1.3.1
	Kernel-5_35-4_79_2_196:4.1.3.1
	Kernel-5_35-4_79_2_195:4.1.3.1
	Kernel-5_35-4_79_2_194:4.1.3.1
	Kernel-5_35-4_79_2_193:4.1.3.1
	Kernel-5_35-4_79_2_192:4.1.3.1
	Kernel-5_35-4_79_2_191:4.1.3.1
	Kernel-5_35-4_79_2_190:4.1.3.1
	Kernel-5_35-4_79_2_189:4.1.3.1
	Kernel-5_35-4_79_2_188:4.1.3.1
	Kernel-5_35-4_79_2_187:4.1.3.1
	Kernel-5_35-4_79_2_186:4.1.3.1
	Kernel-5_35-4_79_2_185:4.1.3.1
	Kernel-5_35-4_79_2_184:4.1.3.1
	Kernel-5_35-4_79_2_183:4.1.3.1
	Kernel-5_35-4_79_2_182:4.1.3.1
	Kernel-5_35-4_79_2_181:4.1.3.1
	Kernel-5_35-4_79_2_180:4.1.3.1
	Kernel-5_35-4_79_2_179:4.1.3.1
	Kernel-5_35-4_79_2_178:4.1.3.1
	Kernel-5_35-4_79_2_177:4.1.3.1
	Kernel-5_35-4_79_2_176:4.1.3.1
	Kernel-5_35-4_79_2_175:4.1.3.1
	Kernel-5_35-4_79_2_174:4.1.3.1
	Kernel-5_35-4_79_2_173:4.1.3.1
	Kernel-5_35-4_79_2_172:4.1.3.1
	Kernel-5_35-4_79_2_171:4.1.3.1
	Kernel-5_35-4_79_2_170:4.1.3.1
	Kernel-5_35-4_79_2_169:4.1.3.1
	Kernel-5_35-4_79_2_168:4.1.3.1
	Kernel-5_35-4_79_2_167:4.1.3.1
	Kernel-5_35-4_79_2_166:4.1.3.1
	Kernel-5_35-4_79_2_165:4.1.3.1
	RPi_merge:4.1.3.1
	Kernel-5_35-4_79_2_147_2_23:4.1.3.1
	Kernel-5_35-4_79_2_147_2_22:4.1.3.1
	Kernel-5_35-4_79_2_147_2_21:4.1.3.1
	Kernel-5_35-4_79_2_147_2_20:4.1.3.1
	Kernel-5_35-4_79_2_147_2_19:4.1.3.1
	Kernel-5_35-4_79_2_147_2_18:4.1.3.1
	Kernel-5_35-4_79_2_164:4.1.3.1
	Kernel-5_35-4_79_2_163:4.1.3.1
	Kernel-5_35-4_79_2_147_2_17:4.1.3.1
	Kernel-5_35-4_79_2_147_2_16:4.1.3.1
	Kernel-5_35-4_79_2_147_2_15:4.1.3.1
	Kernel-5_35-4_79_2_162:4.1.3.1
	Kernel-5_35-4_79_2_161:4.1.3.1
	Kernel-5_35-4_79_2_147_2_14:4.1.3.1
	Kernel-5_35-4_79_2_147_2_13:4.1.3.1
	Kernel-5_35-4_79_2_160:4.1.3.1
	Kernel-5_35-4_79_2_159:4.1.3.1
	Kernel-5_35-4_79_2_158:4.1.3.1
	Kernel-5_35-4_79_2_157:4.1.3.1
	Kernel-5_35-4_79_2_156:4.1.3.1
	Kernel-5_35-4_79_2_147_2_12:4.1.3.1
	Kernel-5_35-4_79_2_147_2_11:4.1.3.1
	Kernel-5_35-4_79_2_155:4.1.3.1
	Kernel-5_35-4_79_2_147_2_10:4.1.3.1
	Kernel-5_35-4_79_2_154:4.1.3.1
	Kernel-5_35-4_79_2_153:4.1.3.1
	Kernel-5_35-4_79_2_147_2_9:4.1.3.1
	Kernel-5_35-4_79_2_152:4.1.3.1
	Kernel-5_35-4_79_2_151:4.1.3.1
	Kernel-5_35-4_79_2_147_2_8:4.1.3.1
	Kernel-5_35-4_79_2_147_2_7:4.1.3.1
	Kernel-5_35-4_79_2_150:4.1.3.1
	Kernel-5_35-4_79_2_147_2_6:4.1.3.1
	Kernel-5_35-4_79_2_147_2_5:4.1.3.1
	Kernel-5_35-4_79_2_149:4.1.3.1
	Kernel-5_35-4_79_2_147_2_4:4.1.3.1
	Kernel-5_35-4_79_2_147_2_3:4.1.3.1
	Kernel-5_35-4_79_2_148:4.1.3.1
	Kernel-5_35-4_79_2_147_2_2:4.1.3.1
	Kernel-5_35-4_79_2_147_2_1:4.1.3.1
	RPi:4.1.3.1.0.18
	RPi_bp:4.1.3.1
	Kernel-5_35-4_79_2_98_2_52_2_1:4.1.3.1
	alees_Kernel_dev:4.1.3.1.0.14
	alees_Kernel_dev_bp:4.1.3.1
	Kernel-5_35-4_79_2_147:4.1.3.1
	Kernel-5_35-4_79_2_146:4.1.3.1
	Kernel-5_35-4_79_2_145:4.1.3.1
	Kernel-5_35-4_79_2_144:4.1.3.1
	Kernel-5_35-4_79_2_143:4.1.3.1
	Kernel-5_35-4_79_2_142:4.1.3.1
	Kernel-5_35-4_79_2_141:4.1.3.1
	Kernel-5_35-4_79_2_140:4.1.3.1
	Kernel-5_35-4_79_2_139:4.1.3.1
	Kernel-5_35-4_79_2_138:4.1.3.1
	Kernel-5_35-4_79_2_137:4.1.3.1
	Kernel-5_35-4_79_2_136:4.1.3.1
	Kernel-5_35-4_79_2_135:4.1.3.1
	Kernel-5_35-4_79_2_134:4.1.3.1
	Kernel-5_35-4_79_2_133:4.1.3.1
	Kernel-5_35-4_79_2_132:4.1.3.1
	Kernel-5_35-4_79_2_131:4.1.3.1
	Kernel-5_35-4_79_2_130:4.1.3.1
	Kernel-5_35-4_79_2_129:4.1.3.1
	Kernel-5_35-4_79_2_128:4.1.3.1
	Kernel-5_35-4_79_2_127:4.1.3.1
	Kernel-5_35-4_79_2_126:4.1.3.1
	Kernel-5_35-4_79_2_125:4.1.3.1
	Kernel-5_35-4_79_2_124:4.1.3.1
	Kernel-5_35-4_79_2_123:4.1.3.1
	Cortex_merge:4.1.3.1
	Kernel-5_35-4_79_2_122:4.1.3.1
	Kernel-5_35-4_79_2_98_2_54:4.1.3.1
	Kernel-5_35-4_79_2_98_2_53:4.1.3.1
	Kernel-5_35-4_79_2_98_2_52:4.1.3.1
	Kernel-5_35-4_79_2_98_2_51:4.1.3.1
	Kernel-5_35-4_79_2_98_2_50:4.1.3.1
	Kernel-5_35-4_79_2_98_2_49:4.1.3.1
	Kernel-5_35-4_79_2_98_2_48:4.1.3.1
	Kernel-5_35-4_79_2_121:4.1.3.1
	Kernel-5_35-4_79_2_98_2_47:4.1.3.1
	Kernel-5_35-4_79_2_120:4.1.3.1
	Kernel-5_35-4_79_2_98_2_46:4.1.3.1
	Kernel-5_35-4_79_2_119:4.1.3.1
	Kernel-5_35-4_79_2_98_2_45:4.1.3.1
	Kernel-5_35-4_79_2_98_2_44:4.1.3.1
	Kernel-5_35-4_79_2_118:4.1.3.1
	Kernel-5_35-4_79_2_98_2_43:4.1.3.1
	Kernel-5_35-4_79_2_117:4.1.3.1
	Kernel-5_35-4_79_2_116:4.1.3.1
	Kernel-5_35-4_79_2_98_2_42:4.1.3.1
	Kernel-5_35-4_79_2_115:4.1.3.1
	Kernel-5_35-4_79_2_98_2_41:4.1.3.1
	Kernel-5_35-4_79_2_98_2_40:4.1.3.1
	Kernel-5_35-4_79_2_114:4.1.3.1
	Kernel-5_35-4_79_2_98_2_39:4.1.3.1
	Kernel-5_35-4_79_2_98_2_38:4.1.3.1
	Kernel-5_35-4_79_2_113:4.1.3.1
	Kernel-5_35-4_79_2_112:4.1.3.1
	Kernel-5_35-4_79_2_98_2_37:4.1.3.1
	Kernel-5_35-4_79_2_98_2_36:4.1.3.1
	Kernel-5_35-4_79_2_98_2_35:4.1.3.1
	Kernel-5_35-4_79_2_98_2_34:4.1.3.1
	Kernel-5_35-4_79_2_98_2_33:4.1.3.1
	Kernel-5_35-4_79_2_98_2_32:4.1.3.1
	Kernel-5_35-4_79_2_98_2_31:4.1.3.1
	Kernel-5_35-4_79_2_98_2_30:4.1.3.1
	Kernel-5_35-4_79_2_98_2_29:4.1.3.1
	Kernel-5_35-4_79_2_98_2_28:4.1.3.1
	Kernel-5_35-4_79_2_98_2_27:4.1.3.1
	Kernel-5_35-4_79_2_98_2_26:4.1.3.1
	Kernel-5_35-4_79_2_111:4.1.3.1
	Kernel-5_35-4_79_2_98_2_25:4.1.3.1
	Kernel-5_35-4_79_2_98_2_24:4.1.3.1
	Kernel-5_35-4_79_2_98_2_23:4.1.3.1
	Kernel-5_35-4_79_2_110:4.1.3.1
	Kernel-5_35-4_79_2_98_2_22:4.1.3.1
	Kernel-5_35-4_79_2_109:4.1.3.1
	Kernel-5_35-4_79_2_98_2_21:4.1.3.1
	Kernel-5_35-4_79_2_98_2_20:4.1.3.1
	Kernel-5_35-4_79_2_108:4.1.3.1
	Kernel-5_35-4_79_2_107:4.1.3.1
	Kernel-5_35-4_79_2_98_2_19:4.1.3.1
	Kernel-5_35-4_79_2_98_2_18:4.1.3.1
	Kernel-5_35-4_79_2_98_2_17:4.1.3.1
	Kernel-5_35-4_79_2_98_2_16:4.1.3.1
	Kernel-5_35-4_79_2_98_2_15:4.1.3.1
	Kernel-5_35-4_79_2_106:4.1.3.1
	Kernel-5_35-4_79_2_105:4.1.3.1
	Kernel-5_35-4_79_2_104:4.1.3.1
	Kernel-5_35-4_79_2_98_2_14:4.1.3.1
	Kernel-5_35-4_79_2_98_2_13:4.1.3.1
	Kernel-5_35-4_79_2_98_2_12:4.1.3.1
	Kernel-5_35-4_79_2_98_2_11:4.1.3.1
	Kernel-5_35-4_79_2_98_2_10:4.1.3.1
	Kernel-5_35-4_79_2_98_2_9:4.1.3.1
	Kernel-5_35-4_79_2_103:4.1.3.1
	Kernel-5_35-4_79_2_102:4.1.3.1
	Kernel-5_35-4_79_2_98_2_8:4.1.3.1
	Kernel-5_35-4_79_2_98_2_7:4.1.3.1
	Kernel-5_35-4_79_2_98_2_6:4.1.3.1
	Kernel-5_35-4_79_2_98_2_5:4.1.3.1
	Kernel-5_35-4_79_2_98_2_4:4.1.3.1
	Kernel-5_35-4_79_2_101:4.1.3.1
	Kernel-5_35-4_79_2_100:4.1.3.1
	Kernel-5_35-4_79_2_99:4.1.3.1
	Kernel-5_35-4_79_2_98_2_3:4.1.3.1
	Kernel-5_35-4_79_2_98_2_2:4.1.3.1
	Kernel-5_35-4_79_2_98_2_1:4.1.3.1
	Cortex:4.1.3.1.0.4
	Cortex_bp:4.1.3.1
	Kernel-5_35-4_79_2_98:4.1.3.1
	Kernel-5_35-4_79_2_97:4.1.3.1
	Kernel-5_35-4_79_2_96:4.1.3.1
	Kernel-5_35-4_79_2_95:4.1.3.1
	Kernel-5_35-4_79_2_94:4.1.3.1
	Kernel-5_35-4_79_2_93:4.1.3.1
	Kernel-5_35-4_79_2_92:4.1.3.1
	Kernel-5_35-4_79_2_91:4.1.3.1
	Kernel-5_35-4_79_2_90:4.1.3.1
	Kernel-5_35-4_79_2_89:4.1.3.1
	Kernel-5_35-4_79_2_88:4.1.3.1
	Kernel-5_35-4_79_2_87:4.1.3.1
	Kernel-5_35-4_79_2_86:4.1.3.1
	Kernel-5_35-4_79_2_85:4.1.3.1
	Kernel-5_35-4_79_2_84:4.1.3.1
	Kernel-5_35-4_79_2_83:4.1.3.1
	Kernel-5_35-4_79_2_82:4.1.3.1
	Kernel-5_35-4_79_2_81:4.1.3.1
	Kernel-5_35-4_79_2_80:4.1.3.1
	Kernel-5_35-4_79_2_79:4.1.3.1
	Kernel-5_35-4_79_2_78:4.1.3.1
	Kernel-5_35-4_79_2_77:4.1.3.1
	RO_5_07:4.1.3.1
	Kernel-5_35-4_79_2_76:4.1.3.1
	Kernel-5_35-4_79_2_75:4.1.3.1
	Kernel-5_35-4_79_2_74:4.1.3.1
	Kernel-5_35-4_79_2_73:4.1.3.1
	Kernel-5_35-4_79_2_72:4.1.3.1
	Kernel-5_35-4_79_2_71:4.1.3.1
	Kernel-5_35-4_79_2_70:4.1.3.1
	Kernel-5_35-4_79_2_69:4.1.3.1
	Kernel-5_35-4_79_2_68:4.1.3.1
	Kernel-5_35-4_79_2_67:4.1.3.1
	Kernel-5_35-4_79_2_66:4.1.3.1
	Kernel-5_35-4_79_2_65:4.1.3.1
	Kernel-5_35-4_79_2_64:4.1.3.1
	Kernel-5_35-4_79_2_63:4.1.3.1
	Kernel-5_35-4_79_2_62:4.1.3.1
	Kernel-5_35-4_79_2_61:4.1.3.1
	Kernel-5_35-4_79_2_59:4.1.3.1
	Kernel-5_35-4_79_2_58:4.1.3.1
	Kernel-5_35-4_79_2_57:4.1.3.1
	Kernel-5_35-4_79_2_56:4.1.3.1
	Kernel-5_35-4_79_2_55:4.1.3.1
	Kernel-5_35-4_79_2_54:4.1.3.1
	Kernel-5_35-4_79_2_53:4.1.3.1
	Kernel-5_35-4_79_2_52:4.1.3.1
	Kernel-5_35-4_79_2_51:4.1.3.1
	Kernel-5_35-4_79_2_50:4.1.3.1
	Kernel-5_35-4_79_2_49:4.1.3.1
	Kernel-5_35-4_79_2_48:4.1.3.1
	Kernel-5_47:4.1.3.1
	Kernel-5_46-4_90_2_1:4.1.3.1
	nbingham_Kernel_FastNC_dev_bp:4.1.3.1
	nbingham_Kernel_FastNC_dev:4.1.3.1.0.16
	Kernel-5_46:4.1.3.1
	Kernel-5_45:4.1.3.1
	Kernel-5_35-4_79_2_47:4.1.3.1
	Kernel-5_35-4_79_2_46:4.1.3.1
	Kernel-5_35-4_79_2_45:4.1.3.1
	Kernel-5_35-4_79_2_44:4.1.3.1
	Kernel-5_35-4_79_2_25_2_2:4.1.3.1
	Kernel-5_35-4_79_2_43:4.1.3.1
	Kernel-5_35-4_79_2_42:4.1.3.1
	Kernel-5_35-4_79_2_41:4.1.3.1
	Kernel-5_35-4_79_2_40:4.1.3.1
	Kernel-5_35-4_79_2_39:4.1.3.1
	Kernel-5_35-4_79_2_38:4.1.3.1
	Kernel-5_35-4_79_2_37:4.1.3.1
	Kernel-5_35-4_79_2_36:4.1.3.1
	Kernel-5_35-4_79_2_35:4.1.3.1
	Kernel-5_35-4_79_2_34:4.1.3.1
	Kernel-5_35-4_79_2_33:4.1.3.1
	Kernel-5_35-4_79_2_32:4.1.3.1
	Kernel-5_44:4.1.3.1
	Kernel-5_35-4_79_2_25_2_1:4.1.3.1
	Kernel-5_43:4.1.3.1
	Kernel-5_35-4_79_2_31:4.1.3.1
	Kernel-5_35-4_79_2_30:4.1.3.1
	Kernel-5_35-4_79_2_29:4.1.3.1
	Kernel-5_35-4_79_2_28:4.1.3.1
	Kernel-5_35-4_79_2_27:4.1.3.1
	Kernel-5_35-4_79_2_26:4.1.3.1
	Kernel-5_42:4.1.3.1
	Kernel-5_41:4.1.3.1
	Kernel-5_40:4.1.3.1
	Kernel-5_35-4_79_2_25:4.1.3.1
	Kernel-5_35-4_79_2_24:4.1.3.1
	Kernel-5_35-4_79_2_23:4.1.3.1
	Kernel-5_35-4_79_2_22:4.1.3.1
	Kernel-5_35-4_79_2_21:4.1.3.1
	Kernel-5_35-4_79_2_20:4.1.3.1
	Kernel-5_35-4_79_2_19:4.1.3.1
	Kernel-5_35-4_79_2_18:4.1.3.1
	Kernel-5_35-4_79_2_17:4.1.3.1
	Kernel-5_35-4_79_2_16:4.1.3.1
	Kernel-5_35-4_79_2_15:4.1.3.1
	Kernel-5_35-4_79_2_14:4.1.3.1
	Kernel-5_39:4.1.3.1
	Kernel-5_13-4_52_2_1:4.1.3.1
	Bethany:4.1.3.1.0.12
	Kernel-5_38:4.1.3.1
	Kernel-5_35-4_79_2_13:4.1.3.1
	Kernel-5_35-4_79_2_12:4.1.3.1
	Kernel-5_35-4_79_2_11:4.1.3.1
	Kernel-5_37:4.1.3.1
	Kernel-5_35-4_79_2_10:4.1.3.1
	Kernel-5_35-4_79_2_9:4.1.3.1
	Kernel-5_36:4.1.3.1
	Kernel-5_35-4_79_2_8:4.1.3.1
	Kernel-5_35-4_79_2_7:4.1.3.1
	Kernel-5_35-4_79_2_6:4.1.3.1
	Kernel-5_35-4_79_2_5:4.1.3.1
	Kernel-5_35-4_79_2_4:4.1.3.1
	Kernel-5_35-4_79_2_3:4.1.3.1
	Kernel-5_35-4_79_2_2:4.1.3.1
	dellis_autobuild_BaseSW:4.1.3.1
	Kernel-5_35-4_79_2_1:4.1.3.1
	HAL:4.1.3.1.0.10
	Kernel-5_35:4.1.3.1
	Kernel-5_34:4.1.3.1
	Kernel-5_33:4.1.3.1
	Kernel-5_32:4.1.3.1
	Kernel-5_31:4.1.3.1
	Kernel-5_30:4.1.3.1
	Kernel-5_29:4.1.3.1
	Kernel-5_28:4.1.3.1
	Kernel-5_27:4.1.3.1
	Kernel-5_26:4.1.3.1
	Kernel-5_25:4.1.3.1
	Kernel-5_24:4.1.3.1
	Kernel-5_23:4.1.3.1
	Kernel-5_22:4.1.3.1
	sbrodie_sedwards_16Mar2000:4.1.3.1
	Kernel-5_21:4.1.3.1
	Kernel-5_20:4.1.3.1
	Kernel-5_19:4.1.3.1
	Kernel-5_18:4.1.3.1
	Kernel-5_17:4.1.3.1
	Kernel-5_16:4.1.3.1
	Kernel-5_15:4.1.3.1
	Kernel-5_14:4.1.3.1
	Kernel-5_13:4.1.3.1
	Kernel-5_12:4.1.3.1
	Kernel-5_11:4.1.3.1
	Kernel-5_10:4.1.3.1
	Kernel-5_09:4.1.3.1
	Kernel-5_08:4.1.3.1
	Kernel-5_07:4.1.3.1
	Kernel-5_06:4.1.3.1
	Kernel-5_05:4.1.3.1
	Kernel-5_04:4.1.3.1
	Kernel-5_03:4.1.3.1
	Kernel-5_02:4.1.3.1
	Kernel-5_01:4.1.3.1
	Kernel-5_00:4.1.3.1
	Kernel-4_99:4.1.3.1
	Kernel-4_98:4.1.3.1
	Kernel-4_97:4.1.3.1
	Kernel-4_96:4.1.3.1
	Kernel-4_95:4.1.3.1
	Kernel-4_94:4.1.3.1
	Kernel-4_93:4.1.3.1
	Kernel-4_92:4.1.3.1
	Kernel-4_91:4.1.3.1
	Kernel-4_90:4.1.3.1
	dcotton_autobuild_BaseSW:4.1.3.1
	Kernel-4_89:4.1.3.1
	Kernel-4_88:4.1.3.1
	Kernel-4_87:4.1.3.1
	Kernel-4_86:4.1.3.1
	Kernel-4_85:4.1.3.1
	sbrodie_UrsulaRiscPC_Kernel_19Aug99:4.1.3.1
	Kernel-4_84:4.1.3.1
	sbrodie_UrsulaRiscPC_Kernel_18Aug99:4.1.3.1
	Ursula_RiscPC_bp:4.1.3.1
	Kernel-4_83:4.1.3.1
	Kernel-4_82:4.1.3.1
	Kernel-4_81:4.1.3.1
	Kernel-4_80:4.1.3.1
	Kernel-4_79:4.1.3.1
	Kernel-4_78:4.1.3.1
	Kernel-4_77:4.1.3.1
	Kernel-4_76:4.1.3.1
	Kernel-4_75:4.1.3.1
	Kernel-4_74:4.1.3.1
	Kernel-4_73:4.1.3.1
	Kernel-4_72:4.1.3.1
	Kernel-4_71:4.1.3.1
	Kernel-4_70:4.1.3.1
	Kernel-4_69:4.1.3.1
	Kernel-4_68:4.1.3.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.3.1
	Ursula_RiscPC:4.1.3.1.0.8
	Kernel-4_67:4.1.3.1
	Kernel-4_66:4.1.3.1
	Kernel-4_65:4.1.3.1
	Ursula_merge:4.1.3.1
	Kernel-4_64:4.1.3.1
	mstphens_Kernel-3_81:4.1.3.1
	rthornb_UrsulaBuild-19Aug1998:4.1.3.1
	UrsulaBuild_FinalSoftload:4.1.3.1
	rthornb_UrsulaBuild-12Aug1998:4.1.3.1
	aglover_UrsulaBuild-05Aug1998:4.1.3.1
	rthornb_UrsulaBuild-29Jul1998:4.1.3.1
	rthornb_UrsulaBuild-22Jul1998:4.1.3.1
	rthornb_UrsulaBuild-15Jul1998:4.1.3.1
	rthornb_UrsulaBuild-07Jul1998:4.1.3.1
	rthornb_UrsulaBuild-17Jun1998:4.1.3.1
	rthornb_UrsulaBuild-03Jun1998:4.1.3.1
	rthornb_UrsulaBuild-27May1998:4.1.3.1
	mstphens_Kernel-3_80:4.1.3.1
	rthornb_UrsulaBuild-21May1998:4.1.3.1
	rthornb_UrsulaBuild_01May1998:4.1.3.1
	afrost_NC2_Generic:4.1.3.1
	Daytona:4.1.3.1.0.6
	Daytona_bp:4.1.3.1
	Ursula_bp:4.1.3.1
	Ursula:4.1.3.1.0.2
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	StrongARM:4.1.3;
locks; strict;
comment	@# @;


4.1
date	96.11.06.01.58.19;	author nturton;	state Exp;
branches
	4.1.3.1;
next	;

4.1.3.1
date	96.11.06.01.58.19;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@; > PrivDoc.ScreenMode

Still to do on screen mode selection, as of 21-Jul-93:

Key:    +  Done and tested
        -  Done but not tested
        *  Still to do
        x  Not done for a good reason

 + Make OS_ReadModeVariable work with mode selectors
 + OS_ScreenMode(ReturnMode)
 + OS_ScreenMode(EnumerateModes)
     + Create variable holding video bandwidth
     + Add this reason code to just load up video bandwidth, VideoSize and issue service
 + Service_ModeExtension additions
     + Load up r4 and r5 with video bandwidth, VideoSize respectively
 + Change vdugrafg:SetUpSprModeData:04 to check for mode selector, and goto 10 if so
 + Check other occurrences of BranchIfKnownMode to look for similar bits
 + Put code to handle new sprite mode word into PushModeInfo (any monitor only?)
 + Remove new sprite mode word fudging in vdugrafg:SetupSprModeData and 
    vdugrafl:SwitchOutputToSprite
 + Make SwitchOutputToSprite(new format) set up ECFIndex (it doesn't at the moment!)
 + Make sure tests for equal mode numbers don't assume equal ptrs to mode selectors are equivalent
 + Modify NewModes module to respond to Service_EnumerateScreenModes, to test enumeration.
 + OS_ScreenMode(SetMonitorType)
     + Allocate soft copy for monitortype
     + Write routine to update soft copy from CMOS
     + Call this routine in initialisation
     + Make *Configure MonitorType update soft copy
     + Change ReadMonitorType to read from soft copy
     + Add this reason code to either store given value or update from CMOS
 + Make sprites which have mode selectors as their mode word illegal
     + Move conversion of mode selectors to new format sprite mode words
        into PreCreateHeader, rather than PostCreateHeader, so that it
        doesn't call SetupSprModeData with a (now illegal) mode selector
 -> MT ScreenModes module

 -> AG Make switch output to sprite for a new format sprite make mode selector for current mode?

 -> AG *ScreenSave in mode 50 seems to produce a sprite with a palette.

 -> NK Trying to set a WimpMode with XEigFactor=27 caused data abort.
       Investigate and/or range-limit values.

 -> AG Put in support for returning errors from PushModeInfo (for bad mode
       selectors and new format sprite mode words):
     + Make mode change routine check for error from PushModeInfo and FindOKMode
     + Make FindSubstitute check errors from PushModeInfo
     + Make FindOKMode check errors from FindSubstitute
     + Make CheckModeValid check errors from FindOKMode
     + Make SetupSprModeData capable of returning errors:
         + Ditto SpriteV handler (already OK)
         + Ditto PreCreateHeader
         + Ditto CreateHeader
         + Ditto GetSprite
     -> AG Make SwitchOutputToSprite/Mask check errors from PushModeInfo

 - Design and code algorithm for working out FIFO reload position for VIDC20
   (Still need explanation from ARM of why 7 quad-words doesn't always work)

 * OS_ScreenMode(SelectMode)
     + Make normal mode selection routine into a subroutine
     + Write veneers to put round call to this in OS_ScreenMode(SelectMode)
     * Change actual mode change code to cope with mode selectors
         + Prevent main routine looking at shadow bit in mode selector
         + Modify FindOKMode to cope with mode selector
         + Modify OS_CheckModeValid to cope with mode selector
         + Make all pushed mode variables into words (not bytes)
         + Modify PushModeInfo to cope with mode selector
         + Make YEigFactor default to 2 if yres < xres/2 (and change spec. to reflect that)
         + Make numbered modes work after loading mode file
         + Allocate space for OS copy of mode selector
         x Make OS mode selector part of saved VDU context
            (not needed since sprites can't have mode selectors as their mode)
         x Sort out internal mode variables PalIndex, ECFIndex wrt
            converting existing mode numbers into mode selectors (no need, still use old workspace-getting code)
         x Make mode selector blocks for all existing numbered modes
            (no need, constructed on fly since only needed during svc call)
         * Check that copying mode selector has no adverse effects
         * Sort out why issuing a mode change with invalid mode selector doesn't give error
         * Modify FindOKMode to cope with 16 and 32 bpp modes somehow

 * Prevent pointer position from going into the sync pulse (causes screen picture disruption)

 * Adjust borders on all modes, to cope with VIDC20 problem
   (Needs algorithm from ARM that works!)

 * Mode change happily passes round any old rubbish to Service_ModeExtension - it should:-
        * First check that value is word-aligned - if not it may be a new sprite mode word
        * Do a Validate_Address on fixed bit of block?

 * What should *ScreenLoad do with a new format sprite?
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@
