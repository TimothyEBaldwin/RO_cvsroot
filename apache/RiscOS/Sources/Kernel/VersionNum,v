head	4.159;
access;
symbols
	Kernel-6_14:4.159
	Kernel-6_01-3:4.146
	Kernel-6_13:4.158
	Kernel-6_12:4.157
	Kernel-6_11:4.156
	Kernel-6_10:4.155
	Kernel-6_09:4.154
	Kernel-6_08-4_129_2_10:4.129.2.10
	Kernel-6_08-4_129_2_9:4.129.2.9
	Kernel-6_08:4.153
	Kernel-6_07:4.152
	Kernel-6_06:4.151
	Kernel-6_05-4_129_2_8:4.129.2.8
	Kernel-6_05:4.150
	Kernel-6_04:4.149
	Kernel-6_03:4.148
	Kernel-6_01-2:4.146.2.1
	RISCOS-5_24-freeze_merge:4.146.2.1
	Kernel-6_01-4_146_2_1:4.146.2.1
	Kernel-6_02:4.147
	Kernel-6_01-1:4.146
	Kernel-6_01:4.146
	Kernel-6_00:4.145
	Kernel-5_99:4.144
	Kernel-5_98:4.143
	Kernel-5_97-4_129_2_7:4.129.2.7
	Kernel-5_97:4.142
	Kernel-5_96:4.141
	Kernel-5_95:4.140
	Kernel-5_94:4.139
	Kernel-5_93:4.138
	Kernel-5_92:4.137
	Kernel-5_91:4.136
	Kernel-5_90:4.135
	Kernel-5_89-4_129_2_6:4.129.2.6
	Kernel-5_89:4.134
	Kernel-5_88-4_129_2_5:4.129.2.5
	Kernel-5_88-4_129_2_4:4.129.2.4
	Kernel-5_88:4.133
	Kernel-5_87:4.131
	Kernel-5_86-4_129_2_3:4.129.2.3
	Kernel-5_86-4_129_2_2:4.129.2.2
	Kernel-5_86-4_129_2_1:4.129.2.1
	Kernel-5_86:4.130
	SMP:4.129.0.2
	SMP_bp:4.129
	Kernel-5_85:4.129
	Kernel-5_54-1:4.98
	Kernel-5_84:4.128
	Kernel-5_83:4.127
	Kernel-5_82:4.126
	Kernel-5_81:4.125
	Kernel-5_80:4.124
	Kernel-5_79:4.123
	Kernel-5_78:4.122
	Kernel-5_77:4.121
	Kernel-5_76:4.120
	Kernel-5_75:4.119
	Kernel-5_74:4.118
	Kernel-5_73:4.117
	Kernel-5_72:4.116
	Kernel-5_71:4.115
	Kernel-5_70:4.114
	Kernel-5_69:4.113
	Kernel-5_68:4.112
	Kernel-5_67:4.111
	Kernel-5_66:4.110
	Kernel-5_65:4.109
	Kernel-5_64:4.108
	Kernel-5_63:4.107
	Kernel-5_62:4.106
	Kernel-5_61:4.105
	Kernel-5_60:4.104
	Kernel-5_59:4.103
	Kernel-5_58:4.102
	Kernel-5_57:4.101
	Kernel-5_56:4.100
	Kernel-5_55:4.99
	Kernel-5_54:4.98
	Kernel-5_53:4.97
	Kernel-5_52:4.96
	Kernel-5_51:4.95
	Kernel-5_50:4.94
	Kernel-5_49:4.93
	HAL_merge:4.79.2.327
	Kernel-5_48:4.92
	Kernel-5_35-4_79_2_327:4.79.2.327
	Kernel-5_35-4_79_2_326:4.79.2.326
	Kernel-5_35-4_79_2_325:4.79.2.325
	Kernel-5_35-4_79_2_324:4.79.2.324
	Kernel-5_35-4_79_2_323:4.79.2.323
	Kernel-5_35-4_79_2_322:4.79.2.322
	Kernel-5_35-4_79_2_321:4.79.2.321
	Kernel-5_35-4_79_2_320:4.79.2.320
	Kernel-5_35-4_79_2_319:4.79.2.319
	Kernel-5_35-4_79_2_318:4.79.2.318
	Kernel-5_35-4_79_2_317:4.79.2.317
	Kernel-5_35-4_79_2_316:4.79.2.316
	Kernel-5_35-4_79_2_315:4.79.2.315
	Kernel-5_35-4_79_2_314:4.79.2.314
	Kernel-5_35-4_79_2_313:4.79.2.313
	Kernel-5_35-4_79_2_312:4.79.2.312
	Kernel-5_35-4_79_2_311:4.79.2.311
	Kernel-5_35-4_79_2_310:4.79.2.310
	Kernel-5_35-4_79_2_309:4.79.2.309
	Kernel-5_35-4_79_2_308:4.79.2.308
	Kernel-5_35-4_79_2_307:4.79.2.307
	Kernel-5_35-4_79_2_306:4.79.2.306
	Kernel-5_35-4_79_2_305:4.79.2.305
	Kernel-5_35-4_79_2_304:4.79.2.304
	Kernel-5_35-4_79_2_303:4.79.2.303
	Kernel-5_35-4_79_2_302:4.79.2.302
	Kernel-5_35-4_79_2_301:4.79.2.301
	Kernel-5_35-4_79_2_300:4.79.2.300
	Kernel-5_35-4_79_2_299:4.79.2.299
	Kernel-5_35-4_79_2_298:4.79.2.298
	Kernel-5_35-4_79_2_297:4.79.2.297
	Kernel-5_35-4_79_2_296:4.79.2.296
	Kernel-5_35-4_79_2_295:4.79.2.295
	Kernel-5_35-4_79_2_294:4.79.2.294
	Kernel-5_35-4_79_2_293:4.79.2.293
	Kernel-5_35-4_79_2_292:4.79.2.292
	Kernel-5_35-4_79_2_291:4.79.2.291
	Kernel-5_35-4_79_2_290:4.79.2.290
	Kernel-5_35-4_79_2_289:4.79.2.289
	Kernel-5_35-4_79_2_288:4.79.2.288
	Kernel-5_35-4_79_2_287:4.79.2.287
	Kernel-5_35-4_79_2_286:4.79.2.286
	Kernel-5_35-4_79_2_285:4.79.2.285
	Kernel-5_35-4_79_2_284:4.79.2.284
	Kernel-5_35-4_79_2_283:4.79.2.283
	Kernel-5_35-4_79_2_282:4.79.2.282
	Kernel-5_35-4_79_2_281:4.79.2.281
	Kernel-5_35-4_79_2_280:4.79.2.280
	Kernel-5_35-4_79_2_279:4.79.2.279
	Kernel-5_35-4_79_2_278:4.79.2.278
	Kernel-5_35-4_79_2_277:4.79.2.277
	Kernel-5_35-4_79_2_276:4.79.2.276
	Kernel-5_35-4_79_2_275:4.79.2.275
	Kernel-5_35-4_79_2_274:4.79.2.274
	Kernel-5_35-4_79_2_273:4.79.2.273
	Kernel-5_35-4_79_2_272:4.79.2.272
	Kernel-5_35-4_79_2_271:4.79.2.271
	Kernel-5_35-4_79_2_270:4.79.2.270
	Kernel-5_35-4_79_2_269:4.79.2.269
	Kernel-5_35-4_79_2_268:4.79.2.268
	Kernel-5_35-4_79_2_267:4.79.2.267
	Kernel-5_35-4_79_2_266:4.79.2.266
	Kernel-5_35-4_79_2_265:4.79.2.265
	Kernel-5_35-4_79_2_264:4.79.2.264
	Kernel-5_35-4_79_2_263:4.79.2.263
	Kernel-5_35-4_79_2_262:4.79.2.262
	Kernel-5_35-4_79_2_261:4.79.2.261
	Kernel-5_35-4_79_2_260:4.79.2.260
	Kernel-5_35-4_79_2_259:4.79.2.259
	Kernel-5_35-4_79_2_258:4.79.2.258
	Kernel-5_35-4_79_2_257:4.79.2.257
	Kernel-5_35-4_79_2_256:4.79.2.256
	Kernel-5_35-4_79_2_255:4.79.2.255
	Kernel-5_35-4_79_2_254:4.79.2.254
	Kernel-5_35-4_79_2_253:4.79.2.253
	Kernel-5_35-4_79_2_252:4.79.2.252
	Kernel-5_35-4_79_2_251:4.79.2.251
	Kernel-5_35-4_79_2_250:4.79.2.250
	Kernel-5_35-4_79_2_249:4.79.2.249
	Kernel-5_35-4_79_2_248:4.79.2.248
	Kernel-5_35-4_79_2_247:4.79.2.247
	Kernel-5_35-4_79_2_246:4.79.2.246
	Kernel-5_35-4_79_2_245:4.79.2.245
	Kernel-5_35-4_79_2_244:4.79.2.244
	Kernel-5_35-4_79_2_243:4.79.2.243
	Kernel-5_35-4_79_2_242:4.79.2.242
	Kernel-5_35-4_79_2_241:4.79.2.241
	Kernel-5_35-4_79_2_240:4.79.2.240
	Kernel-5_35-4_79_2_239:4.79.2.239
	Kernel-5_35-4_79_2_238:4.79.2.238
	Kernel-5_35-4_79_2_237:4.79.2.237
	Kernel-5_35-4_79_2_236:4.79.2.236
	Kernel-5_35-4_79_2_235:4.79.2.235
	Kernel-5_35-4_79_2_234:4.79.2.234
	Kernel-5_35-4_79_2_233:4.79.2.233
	Kernel-5_35-4_79_2_232:4.79.2.232
	Kernel-5_35-4_79_2_231:4.79.2.231
	Kernel-5_35-4_79_2_230:4.79.2.230
	Kernel-5_35-4_79_2_229:4.79.2.229
	Kernel-5_35-4_79_2_228:4.79.2.228
	Kernel-5_35-4_79_2_227:4.79.2.227
	Kernel-5_35-4_79_2_226:4.79.2.226
	Kernel-5_35-4_79_2_225:4.79.2.225
	Kernel-5_35-4_79_2_224:4.79.2.224
	Kernel-5_35-4_79_2_223:4.79.2.223
	Kernel-5_35-4_79_2_222:4.79.2.222
	Kernel-5_35-4_79_2_221:4.79.2.221
	Kernel-5_35-4_79_2_220:4.79.2.220
	Kernel-5_35-4_79_2_219:4.79.2.219
	Kernel-5_35-4_79_2_218:4.79.2.218
	Kernel-5_35-4_79_2_217:4.79.2.217
	Kernel-5_35-4_79_2_216:4.79.2.216
	Kernel-5_35-4_79_2_215:4.79.2.215
	Kernel-5_35-4_79_2_214:4.79.2.214
	Kernel-5_35-4_79_2_213:4.79.2.213
	Kernel-5_35-4_79_2_212:4.79.2.212
	Kernel-5_35-4_79_2_211:4.79.2.211
	Kernel-5_35-4_79_2_210:4.79.2.210
	Kernel-5_35-4_79_2_209:4.79.2.209
	Kernel-5_35-4_79_2_208:4.79.2.208
	Kernel-5_35-4_79_2_207:4.79.2.207
	Kernel-5_35-4_79_2_206:4.79.2.206
	Kernel-5_35-4_79_2_205:4.79.2.205
	Kernel-5_35-4_79_2_204:4.79.2.204
	Kernel-5_35-4_79_2_203:4.79.2.203
	Kernel-5_35-4_79_2_202:4.79.2.202
	Kernel-5_35-4_79_2_201:4.79.2.201
	Kernel-5_35-4_79_2_200:4.79.2.200
	Kernel-5_35-4_79_2_199:4.79.2.199
	Kernel-5_35-4_79_2_198:4.79.2.198
	Kernel-5_35-4_79_2_197:4.79.2.197
	Kernel-5_35-4_79_2_196:4.79.2.196
	Kernel-5_35-4_79_2_195:4.79.2.195
	Kernel-5_35-4_79_2_194:4.79.2.194
	Kernel-5_35-4_79_2_193:4.79.2.193
	Kernel-5_35-4_79_2_192:4.79.2.192
	Kernel-5_35-4_79_2_191:4.79.2.191
	Kernel-5_35-4_79_2_190:4.79.2.190
	Kernel-5_35-4_79_2_189:4.79.2.189
	Kernel-5_35-4_79_2_188:4.79.2.188
	Kernel-5_35-4_79_2_187:4.79.2.187
	Kernel-5_35-4_79_2_186:4.79.2.186
	Kernel-5_35-4_79_2_185:4.79.2.185
	Kernel-5_35-4_79_2_184:4.79.2.184
	Kernel-5_35-4_79_2_183:4.79.2.183
	Kernel-5_35-4_79_2_182:4.79.2.182
	Kernel-5_35-4_79_2_181:4.79.2.181
	Kernel-5_35-4_79_2_180:4.79.2.180
	Kernel-5_35-4_79_2_179:4.79.2.179
	Kernel-5_35-4_79_2_178:4.79.2.178
	Kernel-5_35-4_79_2_177:4.79.2.177
	Kernel-5_35-4_79_2_176:4.79.2.176
	Kernel-5_35-4_79_2_175:4.79.2.175
	Kernel-5_35-4_79_2_174:4.79.2.174
	Kernel-5_35-4_79_2_173:4.79.2.173
	Kernel-5_35-4_79_2_172:4.79.2.172
	Kernel-5_35-4_79_2_171:4.79.2.171
	Kernel-5_35-4_79_2_170:4.79.2.170
	Kernel-5_35-4_79_2_169:4.79.2.169
	Kernel-5_35-4_79_2_168:4.79.2.168
	Kernel-5_35-4_79_2_167:4.79.2.167
	Kernel-5_35-4_79_2_166:4.79.2.166
	Kernel-5_35-4_79_2_165:4.79.2.165
	RPi_merge:4.79.2.147.2.23
	Kernel-5_35-4_79_2_147_2_23:4.79.2.147.2.23
	Kernel-5_35-4_79_2_147_2_22:4.79.2.147.2.22
	Kernel-5_35-4_79_2_147_2_21:4.79.2.147.2.21
	Kernel-5_35-4_79_2_147_2_20:4.79.2.147.2.20
	Kernel-5_35-4_79_2_147_2_19:4.79.2.147.2.19
	Kernel-5_35-4_79_2_147_2_18:4.79.2.147.2.18
	Kernel-5_35-4_79_2_164:4.79.2.164
	Kernel-5_35-4_79_2_163:4.79.2.163
	Kernel-5_35-4_79_2_147_2_17:4.79.2.147.2.17
	Kernel-5_35-4_79_2_147_2_16:4.79.2.147.2.16
	Kernel-5_35-4_79_2_147_2_15:4.79.2.147.2.15
	Kernel-5_35-4_79_2_162:4.79.2.162
	Kernel-5_35-4_79_2_161:4.79.2.161
	Kernel-5_35-4_79_2_147_2_14:4.79.2.147.2.14
	Kernel-5_35-4_79_2_147_2_13:4.79.2.147.2.13
	Kernel-5_35-4_79_2_160:4.79.2.160
	Kernel-5_35-4_79_2_159:4.79.2.159
	Kernel-5_35-4_79_2_158:4.79.2.158
	Kernel-5_35-4_79_2_157:4.79.2.157
	Kernel-5_35-4_79_2_156:4.79.2.156
	Kernel-5_35-4_79_2_147_2_12:4.79.2.147.2.12
	Kernel-5_35-4_79_2_147_2_11:4.79.2.147.2.11
	Kernel-5_35-4_79_2_155:4.79.2.155
	Kernel-5_35-4_79_2_147_2_10:4.79.2.147.2.10
	Kernel-5_35-4_79_2_154:4.79.2.154
	Kernel-5_35-4_79_2_153:4.79.2.153
	Kernel-5_35-4_79_2_147_2_9:4.79.2.147.2.9
	Kernel-5_35-4_79_2_152:4.79.2.152
	Kernel-5_35-4_79_2_151:4.79.2.151
	Kernel-5_35-4_79_2_147_2_8:4.79.2.147.2.8
	Kernel-5_35-4_79_2_147_2_7:4.79.2.147.2.7
	Kernel-5_35-4_79_2_150:4.79.2.150
	Kernel-5_35-4_79_2_147_2_6:4.79.2.147.2.6
	Kernel-5_35-4_79_2_147_2_5:4.79.2.147.2.5
	Kernel-5_35-4_79_2_149:4.79.2.149
	Kernel-5_35-4_79_2_147_2_4:4.79.2.147.2.4
	Kernel-5_35-4_79_2_147_2_3:4.79.2.147.2.3
	Kernel-5_35-4_79_2_148:4.79.2.148
	Kernel-5_35-4_79_2_147_2_2:4.79.2.147.2.2
	Kernel-5_35-4_79_2_147_2_1:4.79.2.147.2.1
	RPi:4.79.2.147.0.2
	RPi_bp:4.79.2.147
	Kernel-5_35-4_79_2_98_2_52_2_1:4.79.2.98.2.52.2.1
	alees_Kernel_dev:4.79.2.98.2.52.0.2
	alees_Kernel_dev_bp:4.79.2.98.2.52
	Kernel-5_35-4_79_2_147:4.79.2.147
	Kernel-5_35-4_79_2_146:4.79.2.146
	Kernel-5_35-4_79_2_145:4.79.2.145
	Kernel-5_35-4_79_2_144:4.79.2.144
	Kernel-5_35-4_79_2_143:4.79.2.143
	Kernel-5_35-4_79_2_142:4.79.2.142
	Kernel-5_35-4_79_2_141:4.79.2.141
	Kernel-5_35-4_79_2_140:4.79.2.140
	Kernel-5_35-4_79_2_139:4.79.2.139
	Kernel-5_35-4_79_2_138:4.79.2.138
	Kernel-5_35-4_79_2_137:4.79.2.137
	Kernel-5_35-4_79_2_136:4.79.2.136
	Kernel-5_35-4_79_2_135:4.79.2.135
	Kernel-5_35-4_79_2_134:4.79.2.134
	Kernel-5_35-4_79_2_133:4.79.2.133
	Kernel-5_35-4_79_2_132:4.79.2.132
	Kernel-5_35-4_79_2_131:4.79.2.131
	Kernel-5_35-4_79_2_130:4.79.2.130
	Kernel-5_35-4_79_2_129:4.79.2.129
	Kernel-5_35-4_79_2_128:4.79.2.128
	Kernel-5_35-4_79_2_127:4.79.2.127
	Kernel-5_35-4_79_2_126:4.79.2.126
	Kernel-5_35-4_79_2_125:4.79.2.125
	Kernel-5_35-4_79_2_124:4.79.2.124
	Kernel-5_35-4_79_2_123:4.79.2.123
	Cortex_merge:4.79.2.98.2.54
	Kernel-5_35-4_79_2_122:4.79.2.122
	Kernel-5_35-4_79_2_98_2_54:4.79.2.98.2.54
	Kernel-5_35-4_79_2_98_2_53:4.79.2.98.2.53
	Kernel-5_35-4_79_2_98_2_52:4.79.2.98.2.52
	Kernel-5_35-4_79_2_98_2_51:4.79.2.98.2.51
	Kernel-5_35-4_79_2_98_2_50:4.79.2.98.2.50
	Kernel-5_35-4_79_2_98_2_49:4.79.2.98.2.49
	Kernel-5_35-4_79_2_98_2_48:4.79.2.98.2.48
	Kernel-5_35-4_79_2_121:4.79.2.121
	Kernel-5_35-4_79_2_98_2_47:4.79.2.98.2.47
	Kernel-5_35-4_79_2_120:4.79.2.120
	Kernel-5_35-4_79_2_98_2_46:4.79.2.98.2.46
	Kernel-5_35-4_79_2_119:4.79.2.119
	Kernel-5_35-4_79_2_98_2_45:4.79.2.98.2.45
	Kernel-5_35-4_79_2_98_2_44:4.79.2.98.2.44
	Kernel-5_35-4_79_2_118:4.79.2.118
	Kernel-5_35-4_79_2_98_2_43:4.79.2.98.2.43
	Kernel-5_35-4_79_2_117:4.79.2.117
	Kernel-5_35-4_79_2_116:4.79.2.116
	Kernel-5_35-4_79_2_98_2_42:4.79.2.98.2.42
	Kernel-5_35-4_79_2_115:4.79.2.115
	Kernel-5_35-4_79_2_98_2_41:4.79.2.98.2.41
	Kernel-5_35-4_79_2_98_2_40:4.79.2.98.2.40
	Kernel-5_35-4_79_2_114:4.79.2.114
	Kernel-5_35-4_79_2_98_2_39:4.79.2.98.2.39
	Kernel-5_35-4_79_2_98_2_38:4.79.2.98.2.38
	Kernel-5_35-4_79_2_113:4.79.2.113
	Kernel-5_35-4_79_2_112:4.79.2.112
	Kernel-5_35-4_79_2_98_2_37:4.79.2.98.2.37
	Kernel-5_35-4_79_2_98_2_36:4.79.2.98.2.36
	Kernel-5_35-4_79_2_98_2_35:4.79.2.98.2.35
	Kernel-5_35-4_79_2_98_2_34:4.79.2.98.2.34
	Kernel-5_35-4_79_2_98_2_33:4.79.2.98.2.33
	Kernel-5_35-4_79_2_98_2_32:4.79.2.98.2.32
	Kernel-5_35-4_79_2_98_2_31:4.79.2.98.2.31
	Kernel-5_35-4_79_2_98_2_30:4.79.2.98.2.30
	Kernel-5_35-4_79_2_98_2_29:4.79.2.98.2.29
	Kernel-5_35-4_79_2_98_2_28:4.79.2.98.2.28
	Kernel-5_35-4_79_2_98_2_27:4.79.2.98.2.27
	Kernel-5_35-4_79_2_98_2_26:4.79.2.98.2.26
	Kernel-5_35-4_79_2_111:4.79.2.111
	Kernel-5_35-4_79_2_98_2_25:4.79.2.98.2.25
	Kernel-5_35-4_79_2_98_2_24:4.79.2.98.2.24
	Kernel-5_35-4_79_2_98_2_23:4.79.2.98.2.23
	Kernel-5_35-4_79_2_110:4.79.2.110
	Kernel-5_35-4_79_2_98_2_22:4.79.2.98.2.22
	Kernel-5_35-4_79_2_109:4.79.2.109
	Kernel-5_35-4_79_2_98_2_21:4.79.2.98.2.21
	Kernel-5_35-4_79_2_98_2_20:4.79.2.98.2.20
	Kernel-5_35-4_79_2_108:4.79.2.108
	Kernel-5_35-4_79_2_107:4.79.2.107
	Kernel-5_35-4_79_2_98_2_19:4.79.2.98.2.19
	Kernel-5_35-4_79_2_98_2_18:4.79.2.98.2.18
	Kernel-5_35-4_79_2_98_2_17:4.79.2.98.2.17
	Kernel-5_35-4_79_2_98_2_16:4.79.2.98.2.16
	Kernel-5_35-4_79_2_98_2_15:4.79.2.98.2.15
	Kernel-5_35-4_79_2_106:4.79.2.106
	Kernel-5_35-4_79_2_105:4.79.2.105
	Kernel-5_35-4_79_2_104:4.79.2.104
	Kernel-5_35-4_79_2_98_2_14:4.79.2.98.2.14
	Kernel-5_35-4_79_2_98_2_13:4.79.2.98.2.13
	Kernel-5_35-4_79_2_98_2_12:4.79.2.98.2.12
	Kernel-5_35-4_79_2_98_2_11:4.79.2.98.2.11
	Kernel-5_35-4_79_2_98_2_10:4.79.2.98.2.10
	Kernel-5_35-4_79_2_98_2_9:4.79.2.98.2.9
	Kernel-5_35-4_79_2_103:4.79.2.103
	Kernel-5_35-4_79_2_102:4.79.2.102
	Kernel-5_35-4_79_2_98_2_8:4.79.2.98.2.8
	Kernel-5_35-4_79_2_98_2_7:4.79.2.98.2.7
	Kernel-5_35-4_79_2_98_2_6:4.79.2.98.2.6
	Kernel-5_35-4_79_2_98_2_5:4.79.2.98.2.5
	Kernel-5_35-4_79_2_98_2_4:4.79.2.98.2.4
	Kernel-5_35-4_79_2_101:4.79.2.101
	Kernel-5_35-4_79_2_100:4.79.2.100
	Kernel-5_35-4_79_2_99:4.79.2.99
	Kernel-5_35-4_79_2_98_2_3:4.79.2.98.2.3
	Kernel-5_35-4_79_2_98_2_2:4.79.2.98.2.2
	Kernel-5_35-4_79_2_98_2_1:4.79.2.98.2.1
	Cortex:4.79.2.98.0.2
	Cortex_bp:4.79.2.98
	Kernel-5_35-4_79_2_98:4.79.2.98
	Kernel-5_35-4_79_2_97:4.79.2.97
	Kernel-5_35-4_79_2_96:4.79.2.96
	Kernel-5_35-4_79_2_95:4.79.2.95
	Kernel-5_35-4_79_2_94:4.79.2.94
	Kernel-5_35-4_79_2_93:4.79.2.93
	Kernel-5_35-4_79_2_92:4.79.2.92
	Kernel-5_35-4_79_2_91:4.79.2.91
	Kernel-5_35-4_79_2_90:4.79.2.90
	Kernel-5_35-4_79_2_89:4.79.2.89
	Kernel-5_35-4_79_2_88:4.79.2.88
	Kernel-5_35-4_79_2_87:4.79.2.87
	Kernel-5_35-4_79_2_86:4.79.2.86
	Kernel-5_35-4_79_2_85:4.79.2.85
	Kernel-5_35-4_79_2_84:4.79.2.84
	Kernel-5_35-4_79_2_83:4.79.2.83
	Kernel-5_35-4_79_2_82:4.79.2.82
	Kernel-5_35-4_79_2_81:4.79.2.81
	Kernel-5_35-4_79_2_80:4.79.2.80
	Kernel-5_35-4_79_2_79:4.79.2.79
	Kernel-5_35-4_79_2_78:4.79.2.78
	Kernel-5_35-4_79_2_77:4.79.2.77
	RO_5_07:4.79.2.76
	Kernel-5_35-4_79_2_76:4.79.2.76
	Kernel-5_35-4_79_2_75:4.79.2.75
	Kernel-5_35-4_79_2_74:4.79.2.74
	Kernel-5_35-4_79_2_73:4.79.2.73
	Kernel-5_35-4_79_2_72:4.79.2.72
	Kernel-5_35-4_79_2_71:4.79.2.71
	Kernel-5_35-4_79_2_70:4.79.2.70
	Kernel-5_35-4_79_2_69:4.79.2.69
	Kernel-5_35-4_79_2_68:4.79.2.68
	Kernel-5_35-4_79_2_67:4.79.2.67
	Kernel-5_35-4_79_2_66:4.79.2.66
	Kernel-5_35-4_79_2_65:4.79.2.65
	Kernel-5_35-4_79_2_64:4.79.2.64
	Kernel-5_35-4_79_2_63:4.79.2.63
	Kernel-5_35-4_79_2_62:4.79.2.62
	Kernel-5_35-4_79_2_61:4.79.2.61
	Kernel-5_35-4_79_2_60:4.79.2.60
	Kernel-5_35-4_79_2_59:4.79.2.59
	Kernel-5_35-4_79_2_58:4.79.2.58
	Kernel-5_35-4_79_2_57:4.79.2.57
	Kernel-5_35-4_79_2_56:4.79.2.56
	Kernel-5_35-4_79_2_55:4.79.2.55
	Kernel-5_35-4_79_2_54:4.79.2.54
	Kernel-5_35-4_79_2_53:4.79.2.53
	Kernel-5_35-4_79_2_52:4.79.2.52
	Kernel-5_35-4_79_2_51:4.79.2.51
	Kernel-5_35-4_79_2_50:4.79.2.50
	Kernel-5_35-4_79_2_49:4.79.2.49
	Kernel-5_35-4_79_2_48:4.79.2.48
	Kernel-5_47:4.91
	Kernel-5_46-4_90_2_1:4.90.2.1
	nbingham_Kernel_FastNC_dev_bp:4.90
	nbingham_Kernel_FastNC_dev:4.90.0.2
	Kernel-5_46:4.90
	Kernel-5_45:4.89
	Kernel-5_35-4_79_2_47:4.79.2.47
	Kernel-5_35-4_79_2_46:4.79.2.46
	Kernel-5_35-4_79_2_45:4.79.2.45
	Kernel-5_35-4_79_2_44:4.79.2.44
	Kernel-5_35-4_79_2_25_2_2:4.79.2.25.2.2
	Kernel-5_35-4_79_2_43:4.79.2.43
	Kernel-5_35-4_79_2_42:4.79.2.42
	Kernel-5_35-4_79_2_41:4.79.2.41
	Kernel-5_35-4_79_2_40:4.79.2.40
	Kernel-5_35-4_79_2_39:4.79.2.39
	Kernel-5_35-4_79_2_38:4.79.2.38
	Kernel-5_35-4_79_2_37:4.79.2.37
	Kernel-5_35-4_79_2_36:4.79.2.36
	Kernel-5_35-4_79_2_35:4.79.2.35
	Kernel-5_35-4_79_2_34:4.79.2.34
	Kernel-5_35-4_79_2_33:4.79.2.33
	Kernel-5_35-4_79_2_32:4.79.2.32
	Kernel-5_44:4.88
	Kernel-5_35-4_79_2_25_2_1:4.79.2.25.2.1
	Kernel-5_43:4.87
	Kernel-5_35-4_79_2_31:4.79.2.31
	Kernel-5_35-4_79_2_30:4.79.2.30
	Kernel-5_35-4_79_2_29:4.79.2.29
	Kernel-5_35-4_79_2_28:4.79.2.28
	Kernel-5_35-4_79_2_27:4.79.2.27
	Kernel-5_35-4_79_2_26:4.79.2.26
	Kernel-5_42:4.86
	Kernel-5_41:4.85
	Kernel-5_40:4.84
	Customer_M_Demo:4.79.2.25.0.2
	Kernel-5_35-4_79_2_25:4.79.2.25
	Kernel-5_35-4_79_2_24:4.79.2.24
	Kernel-5_35-4_79_2_23:4.79.2.23
	Kernel-5_35-4_79_2_22:4.79.2.22
	Kernel-5_35-4_79_2_21:4.79.2.21
	Kernel-5_35-4_79_2_20:4.79.2.20
	Kernel-5_35-4_79_2_19:4.79.2.19
	Kernel-5_35-4_79_2_18:4.79.2.18
	Kernel-5_35-4_79_2_17:4.79.2.17
	Kernel-5_35-4_79_2_16:4.79.2.16
	Kernel-5_35-4_79_2_15:4.79.2.15
	Kernel-5_35-4_79_2_14:4.79.2.14
	Kernel-5_39:4.83
	Kernel-5_13-4_52_2_1:4.52.2.1
	Bethany:4.52.0.2
	Kernel-5_38:4.82
	Kernel-5_35-4_79_2_13:4.79.2.13
	Kernel-5_35-4_79_2_12:4.79.2.12
	Kernel-5_35-4_79_2_11:4.79.2.11
	Kernel-5_37:4.81
	Kernel-5_35-4_79_2_10:4.79.2.10
	Kernel-5_35-4_79_2_9:4.79.2.9
	Kernel-5_36:4.80
	Kernel-5_35-4_79_2_8:4.79.2.8
	Kernel-5_35-4_79_2_7:4.79.2.7
	Kernel-5_35-4_79_2_6:4.79.2.6
	Kernel-5_35-4_79_2_5:4.79.2.5
	Kernel-5_35-4_79_2_4:4.79.2.4
	Kernel-5_35-4_79_2_3:4.79.2.3
	Kernel-5_35-4_79_2_2:4.79.2.2
	dellis_autobuild_BaseSW:4.79
	Kernel-5_35-4_79_2_1:4.79.2.1
	HAL:4.79.0.2
	Kernel-5_35:4.79
	Kernel-5_34:4.78
	Kernel-5_33:4.77
	Kernel-5_32:4.75
	Kernel-5_31:4.74
	Kernel-5_30:4.73
	Kernel-5_29:4.72
	Kernel-5_28:4.71
	Kernel-5_27:4.70
	Kernel-5_26:4.68
	Kernel-5_25:4.67
	Kernel-5_24:4.64
	Kernel-5_23:4.62
	Kernel-5_22:4.61
	sbrodie_sedwards_16Mar2000:4.60
	Kernel-5_21:4.60
	Kernel-5_20:4.59
	Kernel-5_19:4.58
	Kernel-5_18:4.57
	Kernel-5_17:4.56
	Kernel-5_16:4.55
	Kernel-5_15:4.54
	Kernel-5_14:4.53
	Kernel-5_13:4.52
	Kernel-5_12:4.51
	Kernel-5_11:4.50
	Kernel-5_10:4.49
	Kernel-5_09:4.48
	Kernel-5_08:4.47
	Kernel-5_07:4.46
	Kernel-5_06:4.45
	Kernel-5_05:4.44
	Kernel-5_04:4.43
	Kernel-5_03:4.42
	Kernel-5_02:4.41
	Kernel-5_01:4.40
	Kernel-5_00:4.39
	Kernel-4_99:4.38
	Kernel-4_98:4.37
	Kernel-4_97:4.36
	Kernel-4_96:4.35
	Kernel-4_95:4.34
	Kernel-4_94:4.33
	Kernel-4_93:4.32
	Kernel-4_92:4.31
	Kernel-4_91:4.29
	Kernel-4_90:4.28
	dcotton_autobuild_BaseSW:4.88
	Kernel-4_89:4.27
	Kernel-4_88:4.26
	Kernel-4_87:4.25
	Kernel-4_86:4.24
	Kernel-4_85:4.23
	Kernel-4_84:4.22
	Kernel-4_83:4.21
	Kernel-4_82:4.20
	Kernel-4_81:4.19
	Kernel-4_80:4.17
	Kernel-4_79:4.16
	Kernel-4_78:4.15
	Kernel-4_77:4.14
	Kernel-4_76:4.13
	Kernel-4_75:4.12
	Kernel-4_74:4.11
	Kernel-4_73:4.10
	Kernel-4_72:4.9
	Kernel-4_71:4.8
	Kernel-4_70:4.7
	Kernel-4_69:4.6
	Kernel-4_68:4.5
	Kernel-4_63-1_1_2_5:1.1.2.5
	Kernel-4_63-1_1_2_4:1.1.2.4
	Kernel-4_67:4.4
	Kernel-4_66:4.3
	Kernel-4_63-1_1_2_3:1.1.2.3
	Kernel-4_65:4.2
	Spin_merge:1.1.2.3
	Kernel-4_64:4.1
	Kernel-4_63-1_1_2_2:1.1.2.2
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;
expand	@v@;


4.159
date	2018.11.07.22.28.02;	author jlee;	state Exp;
branches;
next	4.158;
commitid	Ub9LVqEF46x8X3ZA;

4.158
date	2018.09.16.20.33.10;	author jlee;	state Exp;
branches;
next	4.157;
commitid	JScgekZtQefmZmSA;

4.157
date	2018.08.04.10.30.44;	author jlee;	state Exp;
branches;
next	4.156;
commitid	6Hkm8k8YLxZn2NMA;

4.156
date	2018.07.14.19.02.17;	author jlee;	state Exp;
branches;
next	4.155;
commitid	DsDtaR4YavfJx8KA;

4.155
date	2018.07.08.12.52.52;	author jlee;	state Exp;
branches;
next	4.154;
commitid	0EEuEFgNyuhXGkJA;

4.154
date	2018.07.07.14.06.20;	author jlee;	state Exp;
branches;
next	4.153;
commitid	VD8qInwgaJB98dJA;

4.153
date	2018.06.30.08.38.48;	author rool;	state Exp;
branches;
next	4.152;
commitid	Bu55fAfHOotJxhIA;

4.152
date	2018.06.16.13.29.36;	author rool;	state Exp;
branches;
next	4.151;
commitid	k3HPMJpkVeRoBvGA;

4.151
date	2018.05.31.20.50.16;	author jlee;	state Exp;
branches;
next	4.150;
commitid	nEr6QUWFL0jsyuEA;

4.150
date	2018.05.13.22.00.06;	author jballance;	state Exp;
branches;
next	4.149;
commitid	0Ad4ACl9Dw7iwbCA;

4.149
date	2018.04.24.18.43.39;	author jlee;	state Exp;
branches;
next	4.148;
commitid	KGf9l84CSTjL2JzA;

4.148
date	2018.04.19.22.08.20;	author bavison;	state Exp;
branches;
next	4.147;
commitid	EJJRnnDGeShWk6zA;

4.147
date	2018.04.15.14.26.34;	author rsprowson;	state Exp;
branches;
next	4.146;
commitid	dcvmwcgKu0cvUxyA;

4.146
date	2018.04.15.01.38.57;	author bavison;	state Exp;
branches;
next	4.145;
commitid	GDgoblL1KbZ7FtyA;

4.145
date	2018.04.14.16.01.25;	author jlee;	state Exp;
branches;
next	4.144;
commitid	SxfJnhKQo352tqyA;

4.144
date	2018.03.25.21.05.15;	author rsprowson;	state Exp;
branches;
next	4.143;
commitid	IkZPwNjh3MM7NSvA;

4.143
date	2018.02.21.21.16.15;	author jlee;	state Exp;
branches;
next	4.142;
commitid	mcudYbBpjbNFSLrA;

4.142
date	2018.02.11.13.12.36;	author rsprowson;	state Exp;
branches;
next	4.141;
commitid	E4yWWpy3nE5GwrqA;

4.141
date	2018.02.04.19.17.57;	author jlee;	state Exp;
branches;
next	4.140;
commitid	P8lRrfmbNEUXLzpA;

4.140
date	2018.02.03.18.41.33;	author rsprowson;	state Exp;
branches;
next	4.139;
commitid	VwdJDuE1iBptBrpA;

4.139
date	2018.01.26.00.10.45;	author jlee;	state Exp;
branches;
next	4.138;
commitid	N4RJQzHGK1PlIjoA;

4.138
date	2017.12.08.18.40.45;	author rsprowson;	state Exp;
branches;
next	4.137;
commitid	NwON3hpAUNRMq7iA;

4.137
date	2017.12.02.14.53.06;	author jlee;	state Exp;
branches;
next	4.136;
commitid	bQl9qnnb10vEmkhA;

4.136
date	2017.11.12.18.27.51;	author jlee;	state Exp;
branches;
next	4.135;
commitid	PqiiLEuiKbkbcMeA;

4.135
date	2017.10.07.12.11.45;	author jlee;	state Exp;
branches;
next	4.134;
commitid	afNukMjf0Y8Ug7aA;

4.134
date	2017.09.09.10.35.37;	author rool;	state Exp;
branches;
next	4.133;
commitid	SuZJGVb4fAmIDv6A;

4.133
date	2017.08.27.08.05.02;	author rsprowson;	state Exp;
branches;
next	4.132;
commitid	bG9imA70bimYdP4A;

4.132
date	2017.08.25.18.30.58;	author bavison;	state Exp;
branches;
next	4.131;
commitid	8ElZ2uH7ul8HKC4A;

4.131
date	2017.08.19.16.43.28;	author jlee;	state Exp;
branches;
next	4.130;
commitid	43sQ2BtQwXrLlQ3A;

4.130
date	2017.07.18.12.50.45;	author jballance;	state Exp;
branches;
next	4.129;
commitid	MczH4wU4lnlI5IZz;

4.129
date	2017.06.18.11.18.36;	author rool;	state Exp;
branches
	4.129.2.1;
next	4.128;
commitid	qaj5Dxec3RVSxQVz;

4.128
date	2017.06.15.20.56.31;	author jlee;	state Exp;
branches;
next	4.127;
commitid	8BDmyAR9SQp7QvVz;

4.127
date	2017.06.13.21.03.42;	author jlee;	state Exp;
branches;
next	4.126;
commitid	AnFxxd2I6mszWfVz;

4.126
date	2017.06.07.20.45.22;	author jlee;	state Exp;
branches;
next	4.125;
commitid	u2lBBGPD3exe2uUz;

4.125
date	2017.06.03.12.52.25;	author bavison;	state Exp;
branches;
next	4.124;
commitid	dEoiNzZc52DXxVTz;

4.124
date	2017.03.05.15.46.03;	author rool;	state Exp;
branches;
next	4.123;
commitid	dJn0Mnw2lDlTonIz;

4.123
date	2017.02.17.23.40.59;	author jlee;	state Exp;
branches;
next	4.122;
commitid	xcCDbwoXPweHxmGz;

4.122
date	2017.02.11.20.17.33;	author jlee;	state Exp;
branches;
next	4.121;
commitid	QToh8YrKffYRBzFz;

4.121
date	2017.02.09.20.43.08;	author rsprowson;	state Exp;
branches;
next	4.120;
commitid	g0y4kUhbpTcDOjFz;

4.120
date	2017.01.11.00.17.13;	author jlee;	state Exp;
branches;
next	4.119;
commitid	hP4UWFrWYbsRXtBz;

4.119
date	2016.12.17.18.33.39;	author jlee;	state Exp;
branches;
next	4.118;
commitid	gK0l0oJHtyZOPmyz;

4.118
date	2016.12.15.15.26.57;	author jlee;	state Exp;
branches;
next	4.117;
commitid	SNoEvPlWCrTKR5yz;

4.117
date	2016.12.13.19.56.13;	author jlee;	state Exp;
branches;
next	4.116;
commitid	rSUxY3Nd3nP7qRxz;

4.116
date	2016.12.13.19.46.50;	author jlee;	state Exp;
branches;
next	4.115;
commitid	Wof9jMT2CrjUmRxz;

4.115
date	2016.12.13.19.41.07;	author jlee;	state Exp;
branches;
next	4.114;
commitid	XeVhUEC50BLVkRxz;

4.114
date	2016.12.13.19.03.29;	author jlee;	state Exp;
branches;
next	4.113;
commitid	dvbJa4TQHit18Rxz;

4.113
date	2016.12.13.18.39.06;	author jlee;	state Exp;
branches;
next	4.112;
commitid	O0s9EhrhFbuFZQxz;

4.112
date	2016.12.13.17.30.56;	author jlee;	state Exp;
branches;
next	4.111;
commitid	xwV3EbxXsXlhCQxz;

4.111
date	2016.12.13.17.03.38;	author jlee;	state Exp;
branches;
next	4.110;
commitid	ICF3hx0HXNFUsQxz;

4.110
date	2016.12.13.16.42.46;	author jlee;	state Exp;
branches;
next	4.109;
commitid	aGog9bB8f4QKlQxz;

4.109
date	2016.12.04.13.25.14;	author jlee;	state Exp;
branches;
next	4.108;
commitid	QOhJ3VPbDNVVxFwz;

4.108
date	2016.11.25.20.51.38;	author rsprowson;	state Exp;
branches;
next	4.107;
commitid	cFxyc5hHhs91jyvz;

4.107
date	2016.10.26.20.00.00;	author jlee;	state Exp;
branches;
next	4.106;
commitid	IYqAWNN21Gg5ZGrz;

4.106
date	2016.10.17.20.52.42;	author jlee;	state Exp;
branches;
next	4.105;
commitid	duwVFka8P3V5zxqz;

4.105
date	2016.10.09.12.01.38;	author jlee;	state Exp;
branches;
next	4.104;
commitid	lYelQYSWomXQSspz;

4.104
date	2016.09.13.20.10.35;	author jlee;	state Exp;
branches;
next	4.103;
commitid	VxemW4URwOcpqamz;

4.103
date	2016.09.07.21.45.09;	author jlee;	state Exp;
branches;
next	4.102;
commitid	GPzWDxzZgYTN8plz;

4.102
date	2016.08.23.21.23.21;	author jlee;	state Exp;
branches;
next	4.101;
commitid	hwJKv803ikAdvtjz;

4.101
date	2016.08.18.20.03.56;	author jlee;	state Exp;
branches;
next	4.100;
commitid	s6z3Cu41WX6WdPiz;

4.100
date	2016.08.08.19.36.02;	author jlee;	state Exp;
branches;
next	4.99;
commitid	H8u6i41kmeEioxhz;

4.99
date	2016.08.02.22.10.34;	author jlee;	state Exp;
branches;
next	4.98;
commitid	CnQYuUGzojQfrMgz;

4.98
date	2016.07.24.10.50.35;	author rsprowson;	state Exp;
branches;
next	4.97;
commitid	x4yCuRzf90zVXyfz;

4.97
date	2016.07.15.08.03.53;	author rsprowson;	state Exp;
branches;
next	4.96;
commitid	DxftEb9tACoGkoez;

4.96
date	2016.06.30.21.14.21;	author jlee;	state Exp;
branches;
next	4.95;
commitid	juXQJ5NfO6DKbxcz;

4.95
date	2016.06.30.20.59.17;	author jlee;	state Exp;
branches;
next	4.94;
commitid	skOEjp3ipLHx6xcz;

4.94
date	2016.06.30.20.42.00;	author jlee;	state Exp;
branches;
next	4.93;
commitid	bDF3DCxdmyMD0xcz;

4.93
date	2016.06.30.20.28.43;	author jlee;	state Exp;
branches;
next	4.92;
commitid	lMnWzoE9eJz3Wwcz;

4.92
date	2016.06.30.20.07.14;	author jlee;	state Exp;
branches;
next	4.91;
commitid	IWoXxARWeuLDOwcz;

4.91
date	2002.08.22.22.40.32;	author bavison;	state Exp;
branches;
next	4.90;

4.90
date	2002.04.08.10.49.55;	author sbrodie;	state Exp;
branches
	4.90.2.1;
next	4.89;

4.89
date	2002.02.18.16.42.24;	author bavison;	state Exp;
branches;
next	4.88;

4.88
date	2001.06.05.09.20.05;	author sbrodie;	state Exp;
branches;
next	4.87;

4.87
date	2001.05.25.13.27.33;	author srevill;	state Exp;
branches;
next	4.86;

4.86
date	2001.04.10.12.51.04;	author dcotton;	state Exp;
branches;
next	4.85;

4.85
date	2001.04.10.07.46.23;	author dcotton;	state Exp;
branches;
next	4.84;

4.84
date	2001.04.02.11.28.14;	author dcotton;	state Exp;
branches;
next	4.83;

4.83
date	2001.01.05.13.50.37;	author sbrodie;	state Exp;
branches;
next	4.82;

4.82
date	2000.11.21.15.19.52;	author sbrodie;	state Exp;
branches;
next	4.81;

4.81
date	2000.10.17.08.44.49;	author sbrodie;	state Exp;
branches;
next	4.80;

4.80
date	2000.10.10.10.16.31;	author sbrodie;	state Exp;
branches;
next	4.79;

4.79
date	2000.09.08.14.15.21;	author rcathera;	state Exp;
branches
	4.79.2.1;
next	4.78;

4.78
date	2000.09.07.18.41.24;	author rcathera;	state Exp;
branches;
next	4.77;

4.77
date	2000.09.04.18.47.58;	author rcathera;	state Exp;
branches;
next	4.76;

4.76
date	2000.08.18.12.23.18;	author sbrodie;	state Exp;
branches;
next	4.75;

4.75
date	2000.08.18.09.31.45;	author sbrodie;	state Exp;
branches;
next	4.74;

4.74
date	2000.08.15.16.47.24;	author sbrodie;	state Exp;
branches;
next	4.73;

4.73
date	2000.06.28.16.12.26;	author bavison;	state Exp;
branches;
next	4.72;

4.72
date	2000.06.27.10.28.33;	author srevill;	state Exp;
branches;
next	4.71;

4.71
date	2000.05.12.15.14.27;	author bavison;	state Exp;
branches;
next	4.70;

4.70
date	2000.05.10.15.35.24;	author bavison;	state Exp;
branches;
next	4.69;

4.69
date	2000.05.10.09.45.57;	author dcotton;	state Exp;
branches;
next	4.68;

4.68
date	2000.05.09.08.39.53;	author sbrodie;	state Exp;
branches;
next	4.67;

4.67
date	2000.05.08.17.05.46;	author sforrest;	state Exp;
branches;
next	4.66;

4.66
date	2000.04.20.14.57.26;	author kbracey;	state Exp;
branches;
next	4.65;

4.65
date	2000.04.17.14.22.49;	author kbracey;	state Exp;
branches;
next	4.64;

4.64
date	2000.04.13.14.29.24;	author kbracey;	state Exp;
branches;
next	4.63;

4.63
date	2000.04.13.10.37.25;	author kbracey;	state Exp;
branches;
next	4.62;

4.62
date	2000.04.04.14.27.20;	author kbracey;	state Exp;
branches;
next	4.61;

4.61
date	2000.03.23.16.40.41;	author bavison;	state Exp;
branches;
next	4.60;

4.60
date	2000.03.10.15.50.06;	author kbracey;	state Exp;
branches;
next	4.59;

4.59
date	2000.03.08.16.00.00;	author sbrodie;	state Exp;
branches;
next	4.58;

4.58
date	2000.03.08.09.39.39;	author nbingham;	state Exp;
branches;
next	4.57;

4.57
date	2000.02.27.14.01.04;	author sbrodie;	state Exp;
branches;
next	4.56;

4.56
date	2000.02.22.14.46.19;	author pskirrow;	state Exp;
branches;
next	4.55;

4.55
date	2000.02.17.15.43.52;	author kbracey;	state Exp;
branches;
next	4.54;

4.54
date	2000.02.02.11.59.05;	author sbrodie;	state Exp;
branches;
next	4.53;

4.53
date	2000.01.27.14.25.29;	author sbrodie;	state Exp;
branches;
next	4.52;

4.52
date	2000.01.26.15.12.02;	author kbracey;	state Exp;
branches
	4.52.2.1;
next	4.51;

4.51
date	2000.01.26.13.55.13;	author kbracey;	state Exp;
branches;
next	4.50;

4.50
date	2000.01.26.13.16.45;	author bavison;	state Exp;
branches;
next	4.49;

4.49
date	2000.01.26.11.38.48;	author kbracey;	state Exp;
branches;
next	4.48;

4.48
date	2000.01.20.18.00.31;	author pskirrow;	state Exp;
branches;
next	4.47;

4.47
date	99.12.01.12.26.00;	author kbracey;	state Exp;
branches;
next	4.46;

4.46
date	99.11.02.15.34.35;	author kbracey;	state Exp;
branches;
next	4.45;

4.45
date	99.11.01.12.16.44;	author kbracey;	state Exp;
branches;
next	4.44;

4.44
date	99.10.29.16.10.01;	author kbracey;	state Exp;
branches;
next	4.43;

4.43
date	99.10.26.09.49.25;	author kbracey;	state Exp;
branches;
next	4.42;

4.42
date	99.10.25.17.17.07;	author kbracey;	state Exp;
branches;
next	4.41;

4.41
date	99.10.25.17.10.51;	author kbracey;	state Exp;
branches;
next	4.40;

4.40
date	99.10.25.16.48.56;	author kbracey;	state Exp;
branches;
next	4.39;

4.39
date	99.10.19.14.47.52;	author kbracey;	state Exp;
branches;
next	4.38;

4.38
date	99.10.19.09.26.47;	author kbracey;	state Exp;
branches;
next	4.37;

4.37
date	99.10.18.16.15.28;	author kbracey;	state Exp;
branches;
next	4.36;

4.36
date	99.10.14.13.23.19;	author kbracey;	state Exp;
branches;
next	4.35;

4.35
date	99.10.14.12.18.16;	author kbracey;	state Exp;
branches;
next	4.34;

4.34
date	99.10.13.17.00.52;	author kbracey;	state Exp;
branches;
next	4.33;

4.33
date	99.10.13.16.21.26;	author kbracey;	state Exp;
branches;
next	4.32;

4.32
date	99.10.07.16.49.50;	author kbracey;	state Exp;
branches;
next	4.31;

4.31
date	99.10.07.11.09.21;	author kbracey;	state Exp;
branches;
next	4.30;

4.30
date	99.10.06.13.01.38;	author sbrodie;	state Exp;
branches;
next	4.29;

4.29
date	99.10.01.15.32.29;	author kbracey;	state Exp;
branches;
next	4.28;

4.28
date	99.09.29.17.09.19;	author kbracey;	state Exp;
branches;
next	4.27;

4.27
date	99.09.23.16.47.37;	author kbracey;	state Exp;
branches;
next	4.26;

4.26
date	99.09.20.14.59.35;	author kbracey;	state Exp;
branches;
next	4.25;

4.25
date	99.09.17.10.11.37;	author kbracey;	state Exp;
branches;
next	4.24;

4.24
date	99.09.16.13.53.33;	author kbracey;	state Exp;
branches;
next	4.23;

4.23
date	99.08.24.09.37.02;	author kbracey;	state Exp;
branches;
next	4.22;

4.22
date	99.08.19.10.52.17;	author kbracey;	state Exp;
branches;
next	4.21;

4.21
date	99.08.17.11.16.11;	author kbracey;	state Exp;
branches;
next	4.20;

4.20
date	99.08.10.14.07.19;	author sbrodie;	state Exp;
branches;
next	4.19;

4.19
date	99.08.03.09.58.49;	author kbracey;	state Exp;
branches;
next	4.18;

4.18
date	99.06.04.14.52.52;	author smiddle;	state Exp;
branches;
next	4.17;

4.17
date	99.05.12.15.14.48;	author kbracey;	state Exp;
branches;
next	4.16;

4.16
date	99.05.07.12.30.34;	author kbracey;	state Exp;
branches;
next	4.15;

4.15
date	99.05.06.13.47.06;	author kbracey;	state Exp;
branches;
next	4.14;

4.14
date	99.05.04.13.40.59;	author kbracey;	state Exp;
branches;
next	4.13;

4.13
date	99.04.30.15.18.44;	author kbracey;	state Exp;
branches;
next	4.12;

4.12
date	99.04.14.15.14.40;	author kbracey;	state Exp;
branches;
next	4.11;

4.11
date	99.04.14.14.23.30;	author kbracey;	state Exp;
branches;
next	4.10;

4.10
date	99.04.14.09.58.00;	author kbracey;	state Exp;
branches;
next	4.9;

4.9
date	99.04.08.13.23.42;	author kbracey;	state Exp;
branches;
next	4.8;

4.8
date	99.02.25.15.57.54;	author nturton;	state Exp;
branches;
next	4.7;

4.7
date	99.02.15.17.53.34;	author nturton;	state Exp;
branches;
next	4.6;

4.6
date	99.02.09.10.57.32;	author nturton;	state Exp;
branches;
next	4.5;

4.5
date	98.12.16.13.14.56;	author kbracey;	state Exp;
branches;
next	4.4;

4.4
date	98.10.30.18.06.57;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.10.22.09.24.21;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.10.01.07.42.29;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	98.09.30.08.41.35;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	98.09.24.12.16.36;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

4.129.2.1
date	2017.07.29.10.50.35;	author jlee;	state Exp;
branches;
next	4.129.2.2;
commitid	n2YRNij02LFy471A;

4.129.2.2
date	2017.07.29.11.13.00;	author jlee;	state Exp;
branches;
next	4.129.2.3;
commitid	E0o1zV5A8r2fc71A;

4.129.2.3
date	2017.08.12.16.22.42;	author jlee;	state Exp;
branches;
next	4.129.2.4;
commitid	FtabPHwDaEOAsW2A;

4.129.2.4
date	2017.08.31.18.46.55;	author jlee;	state Exp;
branches;
next	4.129.2.5;
commitid	e0d3gZHfENrcEo5A;

4.129.2.5
date	2017.09.03.21.36.55;	author jlee;	state Exp;
branches;
next	4.129.2.6;
commitid	T1suKXljbc8yuN5A;

4.129.2.6
date	2017.09.10.11.27.15;	author jlee;	state Exp;
branches;
next	4.129.2.7;
commitid	EGooxXrB27MqTD6A;

4.129.2.7
date	2018.02.16.00.01.35;	author jlee;	state Exp;
branches;
next	4.129.2.8;
commitid	L7HYXYTsWSFlZ0rA;

4.129.2.8
date	2018.05.14.19.33.35;	author jlee;	state Exp;
branches;
next	4.129.2.9;
commitid	wrVtYH84nAz1GiCA;

4.129.2.9
date	2018.07.07.13.15.08;	author jlee;	state Exp;
branches;
next	4.129.2.10;
commitid	xZcbvu8u7pqAQcJA;

4.129.2.10
date	2018.07.07.13.21.25;	author jlee;	state Exp;
branches;
next	;
commitid	jxDGVONh2NXJScJA;

4.90.2.1
date	2002.07.25.15.30.00;	author nbingham;	state Exp;
branches;
next	;

4.79.2.1
date	2000.09.15.12.38.00;	author kbracey;	state Exp;
branches;
next	4.79.2.2;

4.79.2.2
date	2000.10.02.08.52.18;	author kbracey;	state Exp;
branches;
next	4.79.2.3;

4.79.2.3
date	2000.10.03.12.05.59;	author mstephen;	state Exp;
branches;
next	4.79.2.4;

4.79.2.4
date	2000.10.05.11.55.12;	author mstephen;	state Exp;
branches;
next	4.79.2.5;

4.79.2.5
date	2000.10.05.13.54.48;	author kbracey;	state Exp;
branches;
next	4.79.2.6;

4.79.2.6
date	2000.10.05.14.33.00;	author mstephen;	state Exp;
branches;
next	4.79.2.7;

4.79.2.7
date	2000.10.05.16.20.00;	author kbracey;	state Exp;
branches;
next	4.79.2.8;

4.79.2.8
date	2000.10.05.16.46.36;	author dellis;	state Exp;
branches;
next	4.79.2.9;

4.79.2.9
date	2000.10.16.11.37.10;	author mstephen;	state Exp;
branches;
next	4.79.2.10;

4.79.2.10
date	2000.10.16.12.35.53;	author mstephen;	state Exp;
branches;
next	4.79.2.11;

4.79.2.11
date	2000.10.20.15.48.03;	author mstephen;	state Exp;
branches;
next	4.79.2.12;

4.79.2.12
date	2000.11.10.14.41.16;	author mstephen;	state Exp;
branches;
next	4.79.2.13;

4.79.2.13
date	2000.11.10.15.51.34;	author kbracey;	state Exp;
branches;
next	4.79.2.14;

4.79.2.14
date	2001.01.09.17.17.28;	author mstephen;	state Exp;
branches;
next	4.79.2.15;

4.79.2.15
date	2001.01.12.13.52.12;	author mstephen;	state Exp;
branches;
next	4.79.2.16;

4.79.2.16
date	2001.02.01.17.55.44;	author dellis;	state Exp;
branches;
next	4.79.2.17;

4.79.2.17
date	2001.02.13.09.36.03;	author kbracey;	state Exp;
branches;
next	4.79.2.18;

4.79.2.18
date	2001.03.01.09.49.19;	author mstephen;	state Exp;
branches;
next	4.79.2.19;

4.79.2.19
date	2001.03.08.17.53.33;	author kbracey;	state Exp;
branches;
next	4.79.2.20;

4.79.2.20
date	2001.03.16.15.30.00;	author kbracey;	state Exp;
branches;
next	4.79.2.21;

4.79.2.21
date	2001.03.19.16.07.23;	author kbracey;	state Exp;
branches;
next	4.79.2.22;

4.79.2.22
date	2001.03.20.14.21.31;	author kbracey;	state Exp;
branches;
next	4.79.2.23;

4.79.2.23
date	2001.03.27.11.59.54;	author dellis;	state Exp;
branches;
next	4.79.2.24;

4.79.2.24
date	2001.03.29.08.47.20;	author dellis;	state Exp;
branches;
next	4.79.2.25;

4.79.2.25
date	2001.03.29.14.45.57;	author dellis;	state Exp;
branches
	4.79.2.25.2.1;
next	4.79.2.26;

4.79.2.26
date	2001.04.11.09.12.09;	author kbracey;	state Exp;
branches;
next	4.79.2.27;

4.79.2.27
date	2001.04.20.09.53.27;	author kbracey;	state Exp;
branches;
next	4.79.2.28;

4.79.2.28
date	2001.05.01.14.10.54;	author mstephen;	state Exp;
branches;
next	4.79.2.29;

4.79.2.29
date	2001.05.11.11.50.20;	author sforrest;	state Exp;
branches;
next	4.79.2.30;

4.79.2.30
date	2001.05.17.10.51.08;	author kbracey;	state Exp;
branches;
next	4.79.2.31;

4.79.2.31
date	2001.05.22.15.27.51;	author mstephen;	state Exp;
branches;
next	4.79.2.32;

4.79.2.32
date	2001.06.06.14.24.00;	author mstephen;	state Exp;
branches;
next	4.79.2.33;

4.79.2.33
date	2001.06.11.11.33.29;	author kbracey;	state Exp;
branches;
next	4.79.2.34;

4.79.2.34
date	2001.06.13.12.38.15;	author kbracey;	state Exp;
branches;
next	4.79.2.35;

4.79.2.35
date	2001.06.13.14.41.13;	author sforrest;	state Exp;
branches;
next	4.79.2.36;

4.79.2.36
date	2001.06.13.16.37.53;	author mstephen;	state Exp;
branches;
next	4.79.2.37;

4.79.2.37
date	2001.06.15.09.39.55;	author mstephen;	state Exp;
branches;
next	4.79.2.38;

4.79.2.38
date	2001.06.18.14.49.41;	author mstephen;	state Exp;
branches;
next	4.79.2.39;

4.79.2.39
date	2001.06.21.12.07.10;	author kbracey;	state Exp;
branches;
next	4.79.2.40;

4.79.2.40
date	2001.06.22.14.17.36;	author mstephen;	state Exp;
branches;
next	4.79.2.41;

4.79.2.41
date	2001.06.26.09.37.08;	author mstephen;	state Exp;
branches;
next	4.79.2.42;

4.79.2.42
date	2001.06.27.14.16.25;	author mstephen;	state Exp;
branches;
next	4.79.2.43;

4.79.2.43
date	2001.06.29.15.11.12;	author kbracey;	state Exp;
branches;
next	4.79.2.44;

4.79.2.44
date	2001.07.04.09.31.27;	author kbracey;	state Exp;
branches;
next	4.79.2.45;

4.79.2.45
date	2001.07.04.15.12.24;	author kbracey;	state Exp;
branches;
next	4.79.2.46;

4.79.2.46
date	2001.07.11.09.35.18;	author dcotton;	state Exp;
branches;
next	4.79.2.47;

4.79.2.47
date	2002.02.07.17.03.44;	author bavison;	state Exp;
branches;
next	4.79.2.48;

4.79.2.48
date	2002.10.07.17.29.30;	author kbracey;	state Exp;
branches;
next	4.79.2.49;

4.79.2.49
date	2002.10.16.17.23.10;	author bavison;	state Exp;
branches;
next	4.79.2.50;

4.79.2.50
date	2002.10.28.16.13.44;	author bavison;	state Exp;
branches;
next	4.79.2.51;

4.79.2.51
date	2002.11.30.00.30.56;	author bavison;	state Exp;
branches;
next	4.79.2.52;

4.79.2.52
date	2002.12.13.17.38.09;	author bavison;	state Exp;
branches;
next	4.79.2.53;

4.79.2.53
date	2002.12.18.22.18.31;	author bavison;	state Exp;
branches;
next	4.79.2.54;

4.79.2.54
date	2003.01.22.14.50.26;	author bavison;	state Exp;
branches;
next	4.79.2.55;

4.79.2.55
date	2003.01.27.15.25.29;	author kbracey;	state Exp;
branches;
next	4.79.2.56;

4.79.2.56
date	2003.02.21.20.21.49;	author bavison;	state Exp;
branches;
next	4.79.2.57;

4.79.2.57
date	2003.02.28.19.20.15;	author bavison;	state Exp;
branches;
next	4.79.2.58;

4.79.2.58
date	2003.03.02.23.30.44;	author kbracey;	state Exp;
branches;
next	4.79.2.59;

4.79.2.59
date	2003.03.31.09.44.05;	author kbracey;	state Exp;
branches;
next	4.79.2.60;

4.79.2.60
date	2003.04.15.20.18.37;	author kbracey;	state Exp;
branches;
next	4.79.2.61;

4.79.2.61
date	2003.12.02.16.02.05;	author bavison;	state Exp;
branches;
next	4.79.2.62;

4.79.2.62
date	2003.12.19.20.17.12;	author bavison;	state Exp;
branches;
next	4.79.2.63;

4.79.2.63
date	2004.01.05.15.17.26;	author bavison;	state Exp;
branches;
next	4.79.2.64;

4.79.2.64
date	2004.02.17.15.41.58;	author bavison;	state Exp;
branches;
next	4.79.2.65;

4.79.2.65
date	2004.03.04.18.32.33;	author bavison;	state Exp;
branches;
next	4.79.2.66;

4.79.2.66
date	2004.05.06.16.01.56;	author kbracey;	state Exp;
branches;
next	4.79.2.67;

4.79.2.67
date	2004.05.07.12.36.32;	author kbracey;	state Exp;
branches;
next	4.79.2.68;

4.79.2.68
date	2004.06.18.14.38.52;	author bavison;	state Exp;
branches;
next	4.79.2.69;

4.79.2.69
date	2004.06.21.11.35.59;	author bavison;	state Exp;
branches;
next	4.79.2.70;

4.79.2.70
date	2004.06.21.17.37.29;	author bavison;	state Exp;
branches;
next	4.79.2.71;

4.79.2.71
date	2004.06.25.15.07.11;	author kbracey;	state Exp;
branches;
next	4.79.2.72;

4.79.2.72
date	2004.07.05.14.40.39;	author bavison;	state Exp;
branches;
next	4.79.2.73;

4.79.2.73
date	2004.08.12.14.53.47;	author jballance;	state Exp;
branches;
next	4.79.2.74;

4.79.2.74
date	2004.09.06.22.47.59;	author jballance;	state Exp;
branches;
next	4.79.2.75;

4.79.2.75
date	2004.09.08.10.10.23;	author jballance;	state Exp;
branches;
next	4.79.2.76;

4.79.2.76
date	2004.09.08.18.53.17;	author jballance;	state Exp;
branches;
next	4.79.2.77;

4.79.2.77
date	2004.10.06.16.55.16;	author bavison;	state Exp;
branches;
next	4.79.2.78;

4.79.2.78
date	2004.10.13.13.20.08;	author bavison;	state Exp;
branches;
next	4.79.2.79;

4.79.2.79
date	2004.10.29.00.41.58;	author jballance;	state Exp;
branches;
next	4.79.2.80;

4.79.2.80
date	2004.10.29.01.25.10;	author jballance;	state Exp;
branches;
next	4.79.2.81;

4.79.2.81
date	2004.11.02.00.48.01;	author jballance;	state Exp;
branches;
next	4.79.2.82;

4.79.2.82
date	2004.11.04.15.26.20;	author jballance;	state Exp;
branches;
next	4.79.2.83;

4.79.2.83
date	2004.11.04.21.34.39;	author jballance;	state Exp;
branches;
next	4.79.2.84;

4.79.2.84
date	2005.03.21.16.43.29;	author kbracey;	state Exp;
branches;
next	4.79.2.85;

4.79.2.85
date	2005.05.04.11.14.34;	author kbracey;	state Exp;
branches;
next	4.79.2.86;

4.79.2.86
date	2005.05.18.13.06.50;	author jballance;	state Exp;
branches;
next	4.79.2.87;

4.79.2.87
date	2005.06.09.14.04.11;	author kbracey;	state Exp;
branches;
next	4.79.2.88;

4.79.2.88
date	2005.09.12.15.07.39;	author jballance;	state Exp;
branches;
next	4.79.2.89;

4.79.2.89
date	2005.09.15.15.18.27;	author bavison;	state Exp;
branches;
next	4.79.2.90;

4.79.2.90
date	2005.09.16.15.48.08;	author srevill;	state Exp;
branches;
next	4.79.2.91;

4.79.2.91
date	2005.09.23.23.57.37;	author jballance;	state Exp;
branches;
next	4.79.2.92;

4.79.2.92
date	2005.09.24.09.09.12;	author jballance;	state Exp;
branches;
next	4.79.2.93;

4.79.2.93
date	2005.10.07.13.08.57;	author jballance;	state Exp;
branches;
next	4.79.2.94;

4.79.2.94
date	2006.02.16.15.14.36;	author jballance;	state Exp;
branches;
next	4.79.2.95;

4.79.2.95
date	2006.02.22.09.27.52;	author jballance;	state Exp;
branches;
next	4.79.2.96;

4.79.2.96
date	2008.10.04.20.33.09;	author bavison;	state Exp;
branches;
next	4.79.2.97;

4.79.2.97
date	2008.12.03.23.51.25;	author bavison;	state Exp;
branches;
next	4.79.2.98;

4.79.2.98
date	2008.12.22.02.03.15;	author bavison;	state Exp;
branches
	4.79.2.98.2.1;
next	4.79.2.99;

4.79.2.99
date	2009.04.15.18.28.30;	author bavison;	state Exp;
branches;
next	4.79.2.100;

4.79.2.100
date	2009.04.21.22.21.49;	author jballance;	state Exp;
branches;
next	4.79.2.101;

4.79.2.101
date	2009.04.23.12.58.25;	author bavison;	state Exp;
branches;
next	4.79.2.102;

4.79.2.102
date	2009.06.07.17.12.35;	author bavison;	state Exp;
branches;
next	4.79.2.103;

4.79.2.103
date	2009.06.07.22.23.34;	author bavison;	state Exp;
branches;
next	4.79.2.104;

4.79.2.104
date	2009.10.22.19.26.39;	author jlee;	state Exp;
branches;
next	4.79.2.105;

4.79.2.105
date	2009.10.28.16.16.09;	author bavison;	state Exp;
branches;
next	4.79.2.106;

4.79.2.106
date	2009.11.06.23.13.16;	author jlee;	state Exp;
branches;
next	4.79.2.107;

4.79.2.107
date	2010.01.18.19.07.35;	author jballance;	state Exp;
branches;
next	4.79.2.108;

4.79.2.108
date	2010.01.19.00.40.48;	author srevill;	state Exp;
branches;
next	4.79.2.109;

4.79.2.109
date	2010.02.02.01.03.00;	author jlee;	state Exp;
branches;
next	4.79.2.110;

4.79.2.110
date	2010.02.20.01.42.33;	author jlee;	state Exp;
branches;
next	4.79.2.111;

4.79.2.111
date	2010.03.20.00.57.39;	author jlee;	state Exp;
branches;
next	4.79.2.112;

4.79.2.112
date	2011.05.22.20.35.00;	author jlee;	state Exp;
branches;
next	4.79.2.113;
commitid	J2cKzTEPM0t0XIkv;

4.79.2.113
date	2011.06.04.15.48.08;	author jlee;	state Exp;
branches;
next	4.79.2.114;
commitid	a01pT1MYqLHGWmmv;

4.79.2.114
date	2011.07.18.22.45.59;	author jlee;	state Exp;
branches;
next	4.79.2.115;
commitid	62XuglNpufjlQ3sv;

4.79.2.115
date	2011.07.31.13.48.06;	author jlee;	state Exp;
branches;
next	4.79.2.116;
commitid	o0Go7NdMMK4UrGtv;

4.79.2.116
date	2011.08.01.19.22.39;	author jlee;	state Exp;
branches;
next	4.79.2.117;
commitid	W9KQSALkptyGgQtv;

4.79.2.117
date	2011.08.01.19.51.19;	author jlee;	state Exp;
branches;
next	4.79.2.118;
commitid	PZAuiPDvssVwqQtv;

4.79.2.118
date	2011.08.03.23.46.12;	author jlee;	state Exp;
branches;
next	4.79.2.119;
commitid	uz6Vep4mDx27F7uv;

4.79.2.119
date	2011.08.04.20.05.19;	author jlee;	state Exp;
branches;
next	4.79.2.120;
commitid	GNEfDqAS3FZlpeuv;

4.79.2.120
date	2011.08.07.00.04.50;	author jlee;	state Exp;
branches;
next	4.79.2.121;
commitid	1LhiU7JeG3NwFvuv;

4.79.2.121
date	2011.08.07.19.28.53;	author jlee;	state Exp;
branches;
next	4.79.2.122;
commitid	eaiKjtqFrPbS6Cuv;

4.79.2.122
date	2011.11.13.13.15.16;	author bavison;	state Exp;
branches;
next	4.79.2.123;
commitid	gvNF6YneLTqoTaHv;

4.79.2.123
date	2011.11.26.21.11.06;	author jlee;	state Exp;
branches;
next	4.79.2.124;
commitid	cI3W0zbtALQG6TIv;

4.79.2.124
date	2011.11.27.11.48.02;	author rsprowson;	state Exp;
branches;
next	4.79.2.125;
commitid	OFgqaKhOb6swXXIv;

4.79.2.125
date	2011.11.27.12.34.38;	author rsprowson;	state Exp;
branches;
next	4.79.2.126;
commitid	QtdLV6zjuPNxdYIv;

4.79.2.126
date	2011.11.27.12.53.36;	author rsprowson;	state Exp;
branches;
next	4.79.2.127;
commitid	qUSTS070aqq3kYIv;

4.79.2.127
date	2011.11.27.19.18.11;	author rsprowson;	state Exp;
branches;
next	4.79.2.128;
commitid	iuIXfUOByAFYr0Jv;

4.79.2.128
date	2011.12.10.19.03.33;	author jlee;	state Exp;
branches;
next	4.79.2.129;
commitid	tEbdTPC2UwO3XFKv;

4.79.2.129
date	2011.12.10.19.13.46;	author jlee;	state Exp;
branches;
next	4.79.2.130;
commitid	SMXVpjgkaHiz0GKv;

4.79.2.130
date	2011.12.10.20.50.02;	author jlee;	state Exp;
branches;
next	4.79.2.131;
commitid	BN8iJ3uF8zWAxGKv;

4.79.2.131
date	2012.01.05.23.08.01;	author rsprowson;	state Exp;
branches;
next	4.79.2.132;
commitid	HlZJUAHx4rO6t2Ov;

4.79.2.132
date	2012.01.05.23.10.51;	author rsprowson;	state Exp;
branches;
next	4.79.2.133;
commitid	ZAuzl5iHT3w5u2Ov;

4.79.2.133
date	2012.01.15.08.22.18;	author rsprowson;	state Exp;
branches;
next	4.79.2.134;
commitid	b6tNv5QPTHakffPv;

4.79.2.134
date	2012.01.27.21.16.22;	author rsprowson;	state Exp;
branches;
next	4.79.2.135;
commitid	JuFgTDI186HY8RQv;

4.79.2.135
date	2012.02.01.00.03.12;	author jlee;	state Exp;
branches;
next	4.79.2.136;
commitid	0EPfwxsrfyueWnRv;

4.79.2.136
date	2012.02.18.17.41.02;	author rsprowson;	state Exp;
branches;
next	4.79.2.137;
commitid	xM2EAuruYMDffFTv;

4.79.2.137
date	2012.02.25.08.37.18;	author rsprowson;	state Exp;
branches;
next	4.79.2.138;
commitid	avzc6Nf2mNAL0wUv;

4.79.2.138
date	2012.02.25.16.19.26;	author jlee;	state Exp;
branches;
next	4.79.2.139;
commitid	ad3WnPntkzrizyUv;

4.79.2.139
date	2012.03.11.16.02.24;	author jlee;	state Exp;
branches;
next	4.79.2.140;
commitid	Su8z1Zake4xzZtWv;

4.79.2.140
date	2012.03.17.17.33.26;	author jlee;	state Exp;
branches;
next	4.79.2.141;
commitid	VTsi1KZmbCAQigXv;

4.79.2.141
date	2012.03.19.08.10.35;	author rsprowson;	state Exp;
branches;
next	4.79.2.142;
commitid	v7TP289ZDzgL7tXv;

4.79.2.142
date	2012.03.24.10.53.03;	author jlee;	state Exp;
branches;
next	4.79.2.143;
commitid	EOHPEfMPeKCxR7Yv;

4.79.2.143
date	2012.03.24.14.16.43;	author bavison;	state Exp;
branches;
next	4.79.2.144;
commitid	0gbd3sVMDrnpZ8Yv;

4.79.2.144
date	2012.03.25.09.19.34;	author rsprowson;	state Exp;
branches;
next	4.79.2.145;
commitid	8lr6mqMI2AotjfYv;

4.79.2.145
date	2012.04.08.22.23.05;	author jlee;	state Exp;
branches;
next	4.79.2.146;
commitid	B0183mTQ4nlmc70w;

4.79.2.146
date	2012.04.15.19.47.57;	author jlee;	state Exp;
branches;
next	4.79.2.147;
commitid	95iLwHSxemPb701w;

4.79.2.147
date	2012.04.25.23.20.15;	author bavison;	state Exp;
branches
	4.79.2.147.2.1;
next	4.79.2.148;
commitid	RcJ6nLFcjU06Yi2w;

4.79.2.148
date	2012.05.15.22.26.03;	author jlee;	state Exp;
branches;
next	4.79.2.149;
commitid	SLOA6hsE9XqE1S4w;

4.79.2.149
date	2012.05.18.21.41.39;	author rsprowson;	state Exp;
branches;
next	4.79.2.150;
commitid	h8BooFoUYdqrGf5w;

4.79.2.150
date	2012.05.21.19.31.32;	author rsprowson;	state Exp;
branches;
next	4.79.2.151;
commitid	oEtPURiKNEPMRC5w;

4.79.2.151
date	2012.05.26.09.00.14;	author rsprowson;	state Exp;
branches;
next	4.79.2.152;
commitid	EMsCe1GQBPXgdd6w;

4.79.2.152
date	2012.06.04.23.10.29;	author jlee;	state Exp;
branches;
next	4.79.2.153;
commitid	Fel7FC5bdci2Dr7w;

4.79.2.153
date	2012.06.18.20.17.45;	author rsprowson;	state Exp;
branches;
next	4.79.2.154;
commitid	KeuVX14bDnORde9w;

4.79.2.154
date	2012.06.21.07.59.18;	author rsprowson;	state Exp;
branches;
next	4.79.2.155;
commitid	IX8PhIHHo1Sy2y9w;

4.79.2.155
date	2012.06.26.20.35.53;	author jlee;	state Exp;
branches;
next	4.79.2.156;
commitid	QbbsHXeVebu94gaw;

4.79.2.156
date	2012.06.26.23.14.36;	author jlee;	state Exp;
branches;
next	4.79.2.157;
commitid	O3WgficCESJBWgaw;

4.79.2.157
date	2012.07.01.21.26.22;	author rsprowson;	state Exp;
branches;
next	4.79.2.158;
commitid	K3GB4gteEYUubUaw;

4.79.2.158
date	2012.07.02.17.43.30;	author bavison;	state Exp;
branches;
next	4.79.2.159;
commitid	0QXROdzHwQx3V0bw;

4.79.2.159
date	2012.07.04.17.50.42;	author rsprowson;	state Exp;
branches;
next	4.79.2.160;
commitid	BwjRc3GMlaDwTgbw;

4.79.2.160
date	2012.07.06.00.52.14;	author bavison;	state Exp;
branches;
next	4.79.2.161;
commitid	7T20ZtwZOZX9crbw;

4.79.2.161
date	2012.07.09.07.10.43;	author rsprowson;	state Exp;
branches;
next	4.79.2.162;
commitid	gcLIBE0WziF1cRbw;

4.79.2.162
date	2012.07.09.21.25.44;	author jlee;	state Exp;
branches;
next	4.79.2.163;
commitid	tMQ3DznBtuTlVVbw;

4.79.2.163
date	2012.08.14.23.45.32;	author jlee;	state Exp;
branches;
next	4.79.2.164;
commitid	idAOw3o0ecfzxzgw;

4.79.2.164
date	2012.08.20.20.48.22;	author jlee;	state Exp;
branches;
next	4.79.2.165;
commitid	2TpgJev4yQbPmkhw;

4.79.2.165
date	2012.09.18.22.01.09;	author jlee;	state Exp;
branches;
next	4.79.2.166;
commitid	eFa3Y1QY0MjZP3lw;

4.79.2.166
date	2012.09.21.15.04.57;	author jlee;	state Exp;
branches;
next	4.79.2.167;
commitid	d6gwHuzOJO4frplw;

4.79.2.167
date	2012.09.30.08.46.10;	author rsprowson;	state Exp;
branches;
next	4.79.2.168;
commitid	oaVP9UztPt2m3xmw;

4.79.2.168
date	2012.09.30.16.29.16;	author jlee;	state Exp;
branches;
next	4.79.2.169;
commitid	sRDLisRa5FxeCzmw;

4.79.2.169
date	2012.10.06.19.40.48;	author srevill;	state Exp;
branches;
next	4.79.2.170;
commitid	LJehZvPA40mYtmnw;

4.79.2.170
date	2012.10.07.20.49.05;	author rsprowson;	state Exp;
branches;
next	4.79.2.171;
commitid	ocaIVgVgiiMpPunw;

4.79.2.171
date	2012.10.08.13.33.22;	author srevill;	state Exp;
branches;
next	4.79.2.172;
commitid	jje13cvdo9fWnAnw;

4.79.2.172
date	2012.10.09.23.43.12;	author jlee;	state Exp;
branches;
next	4.79.2.173;
commitid	4wh5JUOT6SA9JLnw;

4.79.2.173
date	2012.10.14.03.32.45;	author jlee;	state Exp;
branches;
next	4.79.2.174;
commitid	jSkBscW82qmWRiow;

4.79.2.174
date	2012.10.28.16.51.40;	author rsprowson;	state Exp;
branches;
next	4.79.2.175;
commitid	ruXZqdTJKJ85Qaqw;

4.79.2.175
date	2012.10.28.22.24.37;	author rsprowson;	state Exp;
branches;
next	4.79.2.176;
commitid	B9NnCK3waH5lGcqw;

4.79.2.176
date	2012.11.17.14.45.33;	author rsprowson;	state Exp;
branches;
next	4.79.2.177;
commitid	AATwE9nsGuEZuJsw;

4.79.2.177
date	2012.11.21.23.23.49;	author jlee;	state Exp;
branches;
next	4.79.2.178;
commitid	3OrXb9rCAj7Peitw;

4.79.2.178
date	2012.12.05.01.16.10;	author jlee;	state Exp;
branches;
next	4.79.2.179;
commitid	jNXy5BkvBl5srYuw;

4.79.2.179
date	2012.12.05.02.03.04;	author jlee;	state Exp;
branches;
next	4.79.2.180;
commitid	2qluFMz4Ck6yHYuw;

4.79.2.180
date	2013.01.10.21.18.59;	author rsprowson;	state Exp;
branches;
next	4.79.2.181;
commitid	F6D8WGw2f7PkWHzw;

4.79.2.181
date	2013.01.17.08.46.00;	author rsprowson;	state Exp;
branches;
next	4.79.2.182;
commitid	9ol0RyjqkkO4yxAw;

4.79.2.182
date	2013.01.22.23.19.21;	author jlee;	state Exp;
branches;
next	4.79.2.183;
commitid	ySNxVh2X08tIdgBw;

4.79.2.183
date	2013.01.27.17.50.18;	author rsprowson;	state Exp;
branches;
next	4.79.2.184;
commitid	tDlfhdSfOxFReSBw;

4.79.2.184
date	2013.03.24.10.16.18;	author rsprowson;	state Exp;
branches;
next	4.79.2.185;
commitid	UvakvUQoRMnwV1Jw;

4.79.2.185
date	2013.03.24.14.50.56;	author rsprowson;	state Exp;
branches;
next	4.79.2.186;
commitid	4o2qHvpiOCYJr3Jw;

4.79.2.186
date	2013.03.28.21.36.16;	author jlee;	state Exp;
branches;
next	4.79.2.187;
commitid	UN0GP6eB0LlNyBJw;

4.79.2.187
date	2013.04.07.07.47.30;	author rsprowson;	state Exp;
branches;
next	4.79.2.188;
commitid	PuNeWyWrAbKzEOKw;

4.79.2.188
date	2013.04.07.17.29.21;	author jlee;	state Exp;
branches;
next	4.79.2.189;
commitid	iU1snv0XxarbSRKw;

4.79.2.189
date	2013.05.27.09.55.12;	author rsprowson;	state Exp;
branches;
next	4.79.2.190;
commitid	9CS36AVUbRvJKfRw;

4.79.2.190
date	2013.06.01.15.30.15;	author rsprowson;	state Exp;
branches;
next	4.79.2.191;
commitid	y489JMzk7KpIrVRw;

4.79.2.191
date	2013.06.01.15.31.27;	author rsprowson;	state Exp;
branches;
next	4.79.2.192;
commitid	GuSVq2NtFL08sVRw;

4.79.2.192
date	2013.07.12.20.57.07;	author rsprowson;	state Exp;
branches;
next	4.79.2.193;
commitid	aRzoxDZelFL8WdXw;

4.79.2.193
date	2013.07.31.07.02.52;	author rsprowson;	state Exp;
branches;
next	4.79.2.194;
commitid	ynQoUvWVB9V4IAZw;

4.79.2.194
date	2013.08.06.22.42.55;	author jlee;	state Exp;
branches;
next	4.79.2.195;
commitid	TOIaeUf2Q4rBIr0x;

4.79.2.195
date	2013.08.07.21.21.19;	author jlee;	state Exp;
branches;
next	4.79.2.196;
commitid	ZCsSS95hs01Dez0x;

4.79.2.196
date	2013.09.28.07.03.53;	author rsprowson;	state Exp;
branches;
next	4.79.2.197;
commitid	AHbJg79uTkiQOa7x;

4.79.2.197
date	2013.10.06.18.02.40;	author jlee;	state Exp;
branches;
next	4.79.2.198;
commitid	6Bp9Hz2X0M7Ucg8x;

4.79.2.198
date	2013.10.13.15.15.29;	author jlee;	state Exp;
branches;
next	4.79.2.199;
commitid	2ACnPraaXQyB399x;

4.79.2.199
date	2013.10.27.17.46.11;	author rsprowson;	state Exp;
branches;
next	4.79.2.200;
commitid	LTAQStOMyOaprXax;

4.79.2.200
date	2013.10.28.22.25.49;	author rsprowson;	state Exp;
branches;
next	4.79.2.201;
commitid	ODFbeIUI1Y5lX6bx;

4.79.2.201
date	2013.11.16.12.30.07;	author rsprowson;	state Exp;
branches;
next	4.79.2.202;
commitid	9tijEFmxNuG63vdx;

4.79.2.202
date	2013.11.20.20.29.53;	author rsprowson;	state Exp;
branches;
next	4.79.2.203;
commitid	X1FKtc2EAz7Jz3ex;

4.79.2.203
date	2013.12.15.21.33.48;	author jlee;	state Exp;
branches;
next	4.79.2.204;
commitid	KwuK29hKRyXO7hhx;

4.79.2.204
date	2013.12.17.19.08.44;	author jlee;	state Exp;
branches;
next	4.79.2.205;
commitid	mr92WavK9Mu4gwhx;

4.79.2.205
date	2013.12.17.19.14.11;	author jlee;	state Exp;
branches;
next	4.79.2.206;
commitid	BWyEB17f7eMWhwhx;

4.79.2.206
date	2013.12.19.00.08.55;	author jlee;	state Exp;
branches;
next	4.79.2.207;
commitid	sFhm1gbZFIB4TFhx;

4.79.2.207
date	2014.01.01.16.32.15;	author jlee;	state Exp;
branches;
next	4.79.2.208;
commitid	Y3xhUMkzB7tvUqjx;

4.79.2.208
date	2014.01.19.12.32.43;	author jlee;	state Exp;
branches;
next	4.79.2.209;
commitid	ri8po2P2I8Js0Jlx;

4.79.2.209
date	2014.01.26.18.34.16;	author rsprowson;	state Exp;
branches;
next	4.79.2.210;
commitid	cMl8ftJxfN0xMEmx;

4.79.2.210
date	2014.03.09.15.56.56;	author jlee;	state Exp;
branches;
next	4.79.2.211;
commitid	FnXbK143NQLRy2sx;

4.79.2.211
date	2014.03.23.14.36.05;	author jlee;	state Exp;
branches;
next	4.79.2.212;
commitid	RkutfyF7UjUdFPtx;

4.79.2.212
date	2014.03.25.23.08.32;	author bavison;	state Exp;
branches;
next	4.79.2.213;
commitid	h2bydHMFxtw2r8ux;

4.79.2.213
date	2014.03.28.00.12.55;	author jlee;	state Exp;
branches;
next	4.79.2.214;
commitid	cEZUvOhcFiZ8Joux;

4.79.2.214
date	2014.03.29.22.19.07;	author rsprowson;	state Exp;
branches;
next	4.79.2.215;
commitid	uHiQBUSd0oe72Eux;

4.79.2.215
date	2014.04.04.22.19.13;	author jballance;	state Exp;
branches;
next	4.79.2.216;
commitid	bAG8kI0jJo5cQpvx;

4.79.2.216
date	2014.04.06.19.23.19;	author jlee;	state Exp;
branches;
next	4.79.2.217;
commitid	EtypGk33aKVRNEvx;

4.79.2.217
date	2014.04.07.09.15.54;	author jballance;	state Exp;
branches;
next	4.79.2.218;
commitid	scbQTjK7SLtupJvx;

4.79.2.218
date	2014.04.14.19.22.41;	author rsprowson;	state Exp;
branches;
next	4.79.2.219;
commitid	I3FLhMw0FZGHxGwx;

4.79.2.219
date	2014.04.16.20.58.24;	author jlee;	state Exp;
branches;
next	4.79.2.220;
commitid	NnUb0QqeMdvy0Xwx;

4.79.2.220
date	2014.04.18.14.10.51;	author jlee;	state Exp;
branches;
next	4.79.2.221;
commitid	4EaaKIpUowBKGaxx;

4.79.2.221
date	2014.04.19.14.45.38;	author jlee;	state Exp;
branches;
next	4.79.2.222;
commitid	41mDnYJhlOjHQixx;

4.79.2.222
date	2014.04.20.17.00.16;	author jlee;	state Exp;
branches;
next	4.79.2.223;
commitid	6eesW4yWEAvSyrxx;

4.79.2.223
date	2014.04.20.18.56.33;	author jlee;	state Exp;
branches;
next	4.79.2.224;
commitid	gm3fCQRphk0Ncsxx;

4.79.2.224
date	2014.04.30.07.57.59;	author rsprowson;	state Exp;
branches;
next	4.79.2.225;
commitid	dsGMRzlpD9bVeGyx;

4.79.2.225
date	2014.05.07.20.59.13;	author jlee;	state Exp;
branches;
next	4.79.2.226;
commitid	kFTgiCW21h4ZkEzx;

4.79.2.226
date	2014.06.01.10.15.40;	author jlee;	state Exp;
branches;
next	4.79.2.227;
commitid	QTz6wSc2iYaoYNCx;

4.79.2.227
date	2014.06.19.20.56.31;	author jlee;	state Exp;
branches;
next	4.79.2.228;
commitid	iH2Gi908B48nWaFx;

4.79.2.228
date	2014.06.29.06.50.21;	author rsprowson;	state Exp;
branches;
next	4.79.2.229;
commitid	N9nM4oqvSy29WnGx;

4.79.2.229
date	2014.07.14.09.02.12;	author bavison;	state Exp;
branches;
next	4.79.2.230;
commitid	LgenghLAR2zubkIx;

4.79.2.230
date	2014.07.20.14.39.58;	author jlee;	state Exp;
branches;
next	4.79.2.231;
commitid	H2vibYwcVbxpR7Jx;

4.79.2.231
date	2014.07.23.00.03.39;	author jlee;	state Exp;
branches;
next	4.79.2.232;
commitid	kKkrGTuKshFNUqJx;

4.79.2.232
date	2014.07.26.08.25.39;	author jballance;	state Exp;
branches;
next	4.79.2.233;
commitid	XoVBn4TFlog2BRJx;

4.79.2.233
date	2014.07.31.11.17.59;	author jballance;	state Exp;
branches;
next	4.79.2.234;
commitid	xRA45v1MEqWbowKx;

4.79.2.234
date	2014.08.17.10.29.09;	author jballance;	state Exp;
branches;
next	4.79.2.235;
commitid	EvuS6ETGlsoyzHMx;

4.79.2.235
date	2014.08.29.18.45.30;	author jlee;	state Exp;
branches;
next	4.79.2.236;
commitid	9jew7cvwwQoVVhOx;

4.79.2.236
date	2014.09.15.22.25.29;	author jlee;	state Exp;
branches;
next	4.79.2.237;
commitid	hm3PUFF80LIvBuQx;

4.79.2.237
date	2014.09.16.21.39.30;	author jlee;	state Exp;
branches;
next	4.79.2.238;
commitid	0aV9TXjR3sdKjCQx;

4.79.2.238
date	2014.09.18.21.52.49;	author jlee;	state Exp;
branches;
next	4.79.2.239;
commitid	6ckSnTJtm4MjkSQx;

4.79.2.239
date	2014.10.01.07.45.00;	author rsprowson;	state Exp;
branches;
next	4.79.2.240;
commitid	vfRh4u3dz58zdtSx;

4.79.2.240
date	2014.10.15.01.57.54;	author jballance;	state Exp;
branches;
next	4.79.2.241;
commitid	JZXM55LgKjwAQeUx;

4.79.2.241
date	2014.10.18.19.06.22;	author jlee;	state Exp;
branches;
next	4.79.2.242;
commitid	XP7ttgn3mmcrrIUx;

4.79.2.242
date	2014.10.22.21.11.53;	author srevill;	state Exp;
branches;
next	4.79.2.243;
commitid	0Oiadu6l07Bw0fVx;

4.79.2.243
date	2014.10.25.17.26.26;	author rsprowson;	state Exp;
branches;
next	4.79.2.244;
commitid	rSzyPnwa7sDcFBVx;

4.79.2.244
date	2014.10.27.23.02.31;	author rsprowson;	state Exp;
branches;
next	4.79.2.245;
commitid	KW8Dvj3soUAvsTVx;

4.79.2.245
date	2014.11.04.20.50.30;	author jlee;	state Exp;
branches;
next	4.79.2.246;
commitid	OWXm1SCwfvvhtUWx;

4.79.2.246
date	2014.11.07.01.40.07;	author jballance;	state Exp;
branches;
next	4.79.2.247;
commitid	xCuKVcVqU3iE0cXx;

4.79.2.247
date	2014.11.13.22.19.06;	author rsprowson;	state Exp;
branches;
next	4.79.2.248;
commitid	w8sxKkSQnrGJF4Yx;

4.79.2.248
date	2014.12.06.09.42.42;	author rsprowson;	state Exp;
branches;
next	4.79.2.249;
commitid	IIeZ2aoECRgpKX0y;

4.79.2.249
date	2014.12.06.10.28.44;	author rsprowson;	state Exp;
branches;
next	4.79.2.250;
commitid	bHUalvxulCRc0Y0y;

4.79.2.250
date	2014.12.21.10.12.58;	author rsprowson;	state Exp;
branches;
next	4.79.2.251;
commitid	mV2MnLoz7tiTqT2y;

4.79.2.251
date	2015.01.09.00.47.27;	author jlee;	state Exp;
branches;
next	4.79.2.252;
commitid	pQtirTdr3II1Hh5y;

4.79.2.252
date	2015.01.11.23.10.39;	author jlee;	state Exp;
branches;
next	4.79.2.253;
commitid	a9HNIsO4R7LP3F5y;

4.79.2.253
date	2015.01.16.00.43.11;	author jlee;	state Exp;
branches;
next	4.79.2.254;
commitid	6VfHOoXB8KkCrb6y;

4.79.2.254
date	2015.01.17.14.19.11;	author jlee;	state Exp;
branches;
next	4.79.2.255;
commitid	pq7tydB0hMsyVn6y;

4.79.2.255
date	2015.01.20.20.21.22;	author jlee;	state Exp;
branches;
next	4.79.2.256;
commitid	XTFnnthpWkiPPN6y;

4.79.2.256
date	2015.02.02.11.42.48;	author bavison;	state Exp;
branches;
next	4.79.2.257;
commitid	MtPWA0FVKUL1yq8y;

4.79.2.257
date	2015.02.07.02.07.55;	author jlee;	state Exp;
branches;
next	4.79.2.258;
commitid	Vfg1zqR3J94Qc19y;

4.79.2.258
date	2015.02.26.21.30.15;	author jlee;	state Exp;
branches;
next	4.79.2.259;
commitid	LoFSIV9J0QeJ1zby;

4.79.2.259
date	2015.03.12.18.33.19;	author rsprowson;	state Exp;
branches;
next	4.79.2.260;
commitid	gys5vf1lFjA7Bldy;

4.79.2.260
date	2015.03.16.21.25.42;	author jlee;	state Exp;
branches;
next	4.79.2.261;
commitid	O3sJbVfbkfpiqSdy;

4.79.2.261
date	2015.03.29.16.17.29;	author jlee;	state Exp;
branches;
next	4.79.2.262;
commitid	CkLUvkbu9J2Eiwfy;

4.79.2.262
date	2015.04.13.20.40.28;	author jlee;	state Exp;
branches;
next	4.79.2.263;
commitid	BU8nd90mOqdYgthy;

4.79.2.263
date	2015.04.19.15.30.34;	author rsprowson;	state Exp;
branches;
next	4.79.2.264;
commitid	3fPFcXLSZ8eHmdiy;

4.79.2.264
date	2015.04.19.15.31.42;	author rsprowson;	state Exp;
branches;
next	4.79.2.265;
commitid	FW4jbxVUZvj5ndiy;

4.79.2.265
date	2015.06.14.17.22.52;	author jlee;	state Exp;
branches;
next	4.79.2.266;
commitid	YEFeXUsjjD9Cbqpy;

4.79.2.266
date	2015.06.19.00.46.41;	author jlee;	state Exp;
branches;
next	4.79.2.267;
commitid	KF6G5xNdk9IUvYpy;

4.79.2.267
date	2015.07.04.08.26.51;	author rsprowson;	state Exp;
branches;
next	4.79.2.268;
commitid	CNCb4ZR8tZ7SzWry;

4.79.2.268
date	2015.07.04.19.22.18;	author jlee;	state Exp;
branches;
next	4.79.2.269;
commitid	4vKk5RxNmDlJc0sy;

4.79.2.269
date	2015.07.10.20.16.34;	author jlee;	state Exp;
branches;
next	4.79.2.270;
commitid	wa0i3ESGlbkojMsy;

4.79.2.270
date	2015.07.13.18.58.38;	author jlee;	state Exp;
branches;
next	4.79.2.271;
commitid	5MW5L8DrRhNFM9ty;

4.79.2.271
date	2015.07.17.00.28.19;	author jlee;	state Exp;
branches;
next	4.79.2.272;
commitid	s5cS0yKIca1Nvzty;

4.79.2.272
date	2015.07.26.18.48.49;	author jlee;	state Exp;
branches;
next	4.79.2.273;
commitid	MsaU2P7TfcjpjPuy;

4.79.2.273
date	2015.08.05.21.51.20;	author jlee;	state Exp;
branches;
next	4.79.2.274;
commitid	SpZpzVH47zb408wy;

4.79.2.274
date	2015.08.06.20.11.18;	author jlee;	state Exp;
branches;
next	4.79.2.275;
commitid	EHeTssj64ggMpfwy;

4.79.2.275
date	2015.08.10.07.57.52;	author jballance;	state Exp;
branches;
next	4.79.2.276;
commitid	0neU531BSnMceHwy;

4.79.2.276
date	2015.08.10.12.04.47;	author jballance;	state Exp;
branches;
next	4.79.2.277;
commitid	peFEwKKvVuHTAIwy;

4.79.2.277
date	2015.08.10.16.31.48;	author jballance;	state Exp;
branches;
next	4.79.2.278;
commitid	4VpeVwWfR5kv4Kwy;

4.79.2.278
date	2015.08.11.19.52.09;	author jlee;	state Exp;
branches;
next	4.79.2.279;
commitid	guQuty8Y0dpf9Twy;

4.79.2.279
date	2015.08.14.22.02.20;	author jlee;	state Exp;
branches;
next	4.79.2.280;
commitid	6gyfvmM0cNZULhxy;

4.79.2.280
date	2015.08.15.22.28.17;	author jlee;	state Exp;
branches;
next	4.79.2.281;
commitid	byHQvkwfp6VPSpxy;

4.79.2.281
date	2015.08.17.23.33.32;	author jlee;	state Exp;
branches;
next	4.79.2.282;
commitid	hkbh2UFpyjMebGxy;

4.79.2.282
date	2015.08.19.23.20.45;	author jballance;	state Exp;
branches;
next	4.79.2.283;
commitid	6SC5S6GktrVQ2Wxy;

4.79.2.283
date	2015.08.20.06.44.38;	author jballance;	state Exp;
branches;
next	4.79.2.284;
commitid	yNKJCEiSzh09vYxy;

4.79.2.284
date	2015.08.31.19.28.27;	author jlee;	state Exp;
branches;
next	4.79.2.285;
commitid	Ni3KL17bG70fnszy;

4.79.2.285
date	2015.09.01.21.14.37;	author jlee;	state Exp;
branches;
next	4.79.2.286;
commitid	6XNouVrEaXcGVAzy;

4.79.2.286
date	2015.09.01.22.30.48;	author jlee;	state Exp;
branches;
next	4.79.2.287;
commitid	mUQhVdGL4XmOlBzy;

4.79.2.287
date	2015.09.06.18.45.08;	author jlee;	state Exp;
branches;
next	4.79.2.288;
commitid	9JoJW3FhqXIqWdAy;

4.79.2.288
date	2015.09.08.00.11.39;	author jballance;	state Exp;
branches;
next	4.79.2.289;
commitid	1S5PhBtGLNSsInAy;

4.79.2.289
date	2015.09.20.20.18.48;	author jlee;	state Exp;
branches;
next	4.79.2.290;
commitid	Kzwry9MWnYRF02Cy;

4.79.2.290
date	2015.09.24.22.01.22;	author jballance;	state Exp;
branches;
next	4.79.2.291;
commitid	V7Omi28VtT9SryCy;

4.79.2.291
date	2015.09.30.21.19.37;	author jlee;	state Exp;
branches;
next	4.79.2.292;
commitid	OuAy3Nmkp5gB1kDy;

4.79.2.292
date	2015.10.07.20.30.55;	author jlee;	state Exp;
branches;
next	4.79.2.293;
commitid	WoBQRf5bYZBWwdEy;

4.79.2.293
date	2015.10.10.11.59.43;	author jlee;	state Exp;
branches;
next	4.79.2.294;
commitid	k2QociqCLrMAByEy;

4.79.2.294
date	2015.10.12.21.33.30;	author jlee;	state Exp;
branches;
next	4.79.2.295;
commitid	GP0OA8o3gtfsIREy;

4.79.2.295
date	2015.10.16.08.44.16;	author jballance;	state Exp;
branches;
next	4.79.2.296;
commitid	lDtbDHgimCtAkjFy;

4.79.2.296
date	2015.10.28.21.24.01;	author rsprowson;	state Exp;
branches;
next	4.79.2.297;
commitid	CgZ4LdDdadyj9VGy;

4.79.2.297
date	2015.11.07.18.50.25;	author rool;	state Exp;
branches;
next	4.79.2.298;
commitid	fatEKQJAzhHGYbIy;

4.79.2.298
date	2015.11.08.02.10.10;	author bavison;	state Exp;
branches;
next	4.79.2.299;
commitid	LS5ibOqZw7JypeIy;

4.79.2.299
date	2015.11.14.17.14.49;	author jlee;	state Exp;
branches;
next	4.79.2.300;
commitid	AQFG2wz0zKqWd5Jy;

4.79.2.300
date	2015.12.01.20.28.24;	author jlee;	state Exp;
branches;
next	4.79.2.301;
commitid	Eayw1rAkMCKtKhLy;

4.79.2.301
date	2016.01.05.21.29.03;	author rsprowson;	state Exp;
branches;
next	4.79.2.302;
commitid	1c4UwSKrWAexXMPy;

4.79.2.302
date	2016.01.06.22.14.33;	author jlee;	state Exp;
branches;
next	4.79.2.303;
commitid	nCWrOk75Tem9bVPy;

4.79.2.303
date	2016.02.28.17.00.35;	author rsprowson;	state Exp;
branches;
next	4.79.2.304;
commitid	rbz3PPhs8KbOJHWy;

4.79.2.304
date	2016.02.29.09.34.17;	author bavison;	state Exp;
branches;
next	4.79.2.305;
commitid	MTrfU2BUG24IeNWy;

4.79.2.305
date	2016.02.29.21.05.32;	author jlee;	state Exp;
branches;
next	4.79.2.306;
commitid	9aBO9sfSEp6R3RWy;

4.79.2.306
date	2016.03.10.22.57.27;	author jlee;	state Exp;
branches;
next	4.79.2.307;
commitid	DAXUqMY2ucjim9Yy;

4.79.2.307
date	2016.03.12.01.38.05;	author jlee;	state Exp;
branches;
next	4.79.2.308;
commitid	SpAXij222A7qdiYy;

4.79.2.308
date	2016.03.17.00.45.05;	author jballance;	state Exp;
branches;
next	4.79.2.309;
commitid	TLLLh2mJ9h5hLVYy;

4.79.2.309
date	2016.03.17.16.56.38;	author jballance;	state Exp;
branches;
next	4.79.2.310;
commitid	Ve3cs3rvsjyA81Zy;

4.79.2.310
date	2016.03.25.19.53.36;	author jlee;	state Exp;
branches;
next	4.79.2.311;
commitid	O8J0qDtpWkNmR30z;

4.79.2.311
date	2016.03.27.02.00.49;	author jlee;	state Exp;
branches;
next	4.79.2.312;
commitid	nHwGXjCPCyRkRd0z;

4.79.2.312
date	2016.04.04.23.34.28;	author bavison;	state Exp;
branches;
next	4.79.2.313;
commitid	h6WiJEQ4TIGcLm1z;

4.79.2.313
date	2016.04.05.19.36.23;	author jlee;	state Exp;
branches;
next	4.79.2.314;
commitid	8RLqvkae1X7wpt1z;

4.79.2.314
date	2016.04.06.21.02.01;	author jlee;	state Exp;
branches;
next	4.79.2.315;
commitid	v0nIS0nphnMTQB1z;

4.79.2.315
date	2016.04.14.21.22.11;	author jlee;	state Exp;
branches;
next	4.79.2.316;
commitid	hHFd2MvvwEATHD2z;

4.79.2.316
date	2016.04.14.21.26.03;	author jlee;	state Exp;
branches;
next	4.79.2.317;
commitid	dLnYrKw30yHdJD2z;

4.79.2.317
date	2016.04.26.07.39.32;	author rsprowson;	state Exp;
branches;
next	4.79.2.318;
commitid	9UNoxOzmfk7LL64z;

4.79.2.318
date	2016.05.08.17.11.07;	author jlee;	state Exp;
branches;
next	4.79.2.319;
commitid	H8vGguuJRqFVxH5z;

4.79.2.319
date	2016.05.19.21.03.43;	author jlee;	state Exp;
branches;
next	4.79.2.320;
commitid	7f3vfXP8BWCNt87z;

4.79.2.320
date	2016.05.20.19.48.06;	author jlee;	state Exp;
branches;
next	4.79.2.321;
commitid	zKFcnjcl1yRR1g7z;

4.79.2.321
date	2016.05.22.12.42.48;	author jlee;	state Exp;
branches;
next	4.79.2.322;
commitid	nDV8KQG2F69ZBt7z;

4.79.2.322
date	2016.05.22.17.30.27;	author jlee;	state Exp;
branches;
next	4.79.2.323;
commitid	tg9dPC7QRVhFcv7z;

4.79.2.323
date	2016.05.22.21.00.23;	author jlee;	state Exp;
branches;
next	4.79.2.324;
commitid	RBNfsnWegWTGmw7z;

4.79.2.324
date	2016.05.23.22.02.34;	author jlee;	state Exp;
branches;
next	4.79.2.325;
commitid	vs9giyyGBlq1GE7z;

4.79.2.325
date	2016.05.24.22.04.50;	author jlee;	state Exp;
branches;
next	4.79.2.326;
commitid	bFx0216wkidOEM7z;

4.79.2.326
date	2016.06.01.19.04.15;	author jlee;	state Exp;
branches;
next	4.79.2.327;
commitid	RvzEEv3Jl47VoN8z;

4.79.2.327
date	2016.06.15.19.24.49;	author jlee;	state Exp;
branches;
next	;
commitid	QoMRsy6vZNP34Baz;

4.79.2.25.2.1
date	2001.05.30.16.10.33;	author sforrest;	state Exp;
branches;
next	4.79.2.25.2.2;

4.79.2.25.2.2
date	2001.07.02.15.03.43;	author dcotton;	state Exp;
branches;
next	;

4.79.2.98.2.1
date	2009.02.01.13.25.02;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.2;

4.79.2.98.2.2
date	2009.02.21.17.41.22;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.3;

4.79.2.98.2.3
date	2009.03.06.23.23.39;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.4;

4.79.2.98.2.4
date	2009.04.23.23.39.47;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.5;

4.79.2.98.2.5
date	2009.05.10.18.49.14;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.6;

4.79.2.98.2.6
date	2009.05.10.20.22.28;	author bavison;	state Exp;
branches;
next	4.79.2.98.2.7;

4.79.2.98.2.7
date	2009.05.10.20.38.02;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.8;

4.79.2.98.2.8
date	2009.05.17.01.34.33;	author bavison;	state Exp;
branches;
next	4.79.2.98.2.9;

4.79.2.98.2.9
date	2009.06.15.23.56.09;	author bavison;	state Exp;
branches;
next	4.79.2.98.2.10;

4.79.2.98.2.10
date	2009.07.17.00.19.55;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.11;

4.79.2.98.2.11
date	2009.07.23.00.57.06;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.12;

4.79.2.98.2.12
date	2009.09.06.20.54.15;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.13;

4.79.2.98.2.13
date	2009.09.30.22.30.50;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.14;

4.79.2.98.2.14
date	2009.10.22.00.39.58;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.15;

4.79.2.98.2.15
date	2009.11.06.23.17.43;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.16;

4.79.2.98.2.16
date	2009.11.28.22.22.18;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.17;

4.79.2.98.2.17
date	2009.11.29.19.26.25;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.18;

4.79.2.98.2.18
date	2009.12.05.20.17.47;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.19;

4.79.2.98.2.19
date	2010.01.16.03.19.22;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.20;

4.79.2.98.2.20
date	2010.01.19.00.42.59;	author srevill;	state Exp;
branches;
next	4.79.2.98.2.21;

4.79.2.98.2.21
date	2010.01.24.02.35.20;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.22;

4.79.2.98.2.22
date	2010.02.02.01.13.49;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.23;

4.79.2.98.2.23
date	2010.02.20.01.46.51;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.24;

4.79.2.98.2.24
date	2010.02.28.19.33.47;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.25;

4.79.2.98.2.25
date	2010.03.20.00.53.12;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.26;

4.79.2.98.2.26
date	2010.04.22.20.28.26;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.27;

4.79.2.98.2.27
date	2010.06.23.22.34.23;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.28;

4.79.2.98.2.28
date	2010.06.23.22.54.43;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.29;

4.79.2.98.2.29
date	2010.06.24.00.36.27;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.30;

4.79.2.98.2.30
date	2010.07.03.19.42.46;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.31;

4.79.2.98.2.31
date	2010.09.02.23.10.15;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.32;

4.79.2.98.2.32
date	2010.10.04.22.22.07;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.33;

4.79.2.98.2.33
date	2011.02.19.22.19.26;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.34;

4.79.2.98.2.34
date	2011.02.20.01.08.37;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.35;

4.79.2.98.2.35
date	2011.02.20.01.24.06;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.36;

4.79.2.98.2.36
date	2011.03.19.18.24.58;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.37;
commitid	Na7ovxBALQiWhucv;

4.79.2.98.2.37
date	2011.05.22.19.44.59;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.38;
commitid	FcIrTQvrz0zQFIkv;

4.79.2.98.2.38
date	2011.06.04.15.54.25;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.39;
commitid	xmzeXYEfZlUPYmmv;

4.79.2.98.2.39
date	2011.06.08.23.09.34;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.40;
commitid	n5CIwG9YV7k9gVmv;

4.79.2.98.2.40
date	2011.07.24.21.21.38;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.41;
commitid	7fBIhifFL4XrbPsv;

4.79.2.98.2.41
date	2011.07.31.13.39.12;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.42;
commitid	tnhfpNorgEFQoGtv;

4.79.2.98.2.42
date	2011.07.31.18.50.44;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.43;
commitid	wkRt8xN38USJ7Itv;

4.79.2.98.2.43
date	2011.08.01.19.54.07;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.44;
commitid	m0TvirYe9M1urQtv;

4.79.2.98.2.44
date	2011.08.03.23.51.57;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.45;
commitid	LLn4KPy3Hjh5H7uv;

4.79.2.98.2.45
date	2011.08.04.20.00.59;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.46;
commitid	hliJi7339nhRneuv;

4.79.2.98.2.46
date	2011.08.06.23.56.04;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.47;
commitid	FftZtV6AJ7qwCvuv;

4.79.2.98.2.47
date	2011.08.07.19.26.20;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.48;
commitid	91YMAm9KaDtZ5Cuv;

4.79.2.98.2.48
date	2011.08.08.23.28.19;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.49;
commitid	D7rzILnwRRSXoLuv;

4.79.2.98.2.49
date	2011.08.22.22.26.13;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.50;
commitid	ekk1ti4Ejl7OBywv;

4.79.2.98.2.50
date	2011.09.12.18.52.27;	author bavison;	state Exp;
branches;
next	4.79.2.98.2.51;
commitid	KJtDPjWMk0KCKezv;

4.79.2.98.2.51
date	2011.09.12.20.31.35;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.52;
commitid	aYOriTZbxBByifzv;

4.79.2.98.2.52
date	2011.09.14.23.41.19;	author jlee;	state Exp;
branches
	4.79.2.98.2.52.2.1;
next	4.79.2.98.2.53;
commitid	G01fap2nWFWIhwzv;

4.79.2.98.2.53
date	2011.09.24.19.55.51;	author jlee;	state Exp;
branches;
next	4.79.2.98.2.54;
commitid	kEjQnYmCIZvfIMAv;

4.79.2.98.2.54
date	2011.11.13.13.11.45;	author bavison;	state Exp;
branches;
next	;
commitid	4seOP18I4nobSaHv;

4.79.2.98.2.52.2.1
date	2012.05.10.03.09.39;	author bavison;	state Exp;
branches;
next	;
commitid	HTVG5Da5tRqSM74w;

4.79.2.147.2.1
date	2012.05.10.03.27.47;	author bavison;	state Exp;
branches;
next	4.79.2.147.2.2;
commitid	kuJoT3AcfB16T74w;

4.79.2.147.2.2
date	2012.05.14.19.13.29;	author bavison;	state Exp;
branches;
next	4.79.2.147.2.3;
commitid	r1nh9U30qY8zZI4w;

4.79.2.147.2.3
date	2012.05.18.10.21.58;	author bavison;	state Exp;
branches;
next	4.79.2.147.2.4;
commitid	mphs1jjnueKfVb5w;

4.79.2.147.2.4
date	2012.05.18.10.26.59;	author bavison;	state Exp;
branches;
next	4.79.2.147.2.5;
commitid	OrHPEQzWGWdZWb5w;

4.79.2.147.2.5
date	2012.05.20.21.21.30;	author jballance;	state Exp;
branches;
next	4.79.2.147.2.6;
commitid	neZVFdyw3wNwvv5w;

4.79.2.147.2.6
date	2012.05.21.00.19.20;	author jballance;	state Exp;
branches;
next	4.79.2.147.2.7;
commitid	gUZFPbvrT1Xxuw5w;

4.79.2.147.2.7
date	2012.05.23.00.01.13;	author jballance;	state Exp;
branches;
next	4.79.2.147.2.8;
commitid	apQ7umyAqGwlkM5w;

4.79.2.147.2.8
date	2012.05.23.21.48.53;	author bavison;	state Exp;
branches;
next	4.79.2.147.2.9;
commitid	u4A07cKhEUcXyT5w;

4.79.2.147.2.9
date	2012.06.04.23.12.59;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.10;
commitid	F4YH5NQYsCxTDr7w;

4.79.2.147.2.10
date	2012.06.24.21.15.32;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.11;
commitid	fa2KxQVB4EkKl0aw;

4.79.2.147.2.11
date	2012.06.26.23.04.41;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.12;
commitid	fvvCK1ksx5ycTgaw;

4.79.2.147.2.12
date	2012.06.26.23.12.17;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.13;
commitid	Czz0YiX1pM2OVgaw;

4.79.2.147.2.13
date	2012.07.07.19.28.53;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.14;
commitid	aIRZWBHf5LdflFbw;

4.79.2.147.2.14
date	2012.07.08.23.07.53;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.15;
commitid	XImsZIoxnxlowObw;

4.79.2.147.2.15
date	2012.07.20.00.51.48;	author bavison;	state Exp;
branches;
next	4.79.2.147.2.16;
commitid	ELcSZZYPVgQ6Kedw;

4.79.2.147.2.16
date	2012.08.02.00.38.14;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.17;
commitid	c9QZpAiugoByfUew;

4.79.2.147.2.17
date	2012.08.14.23.42.12;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.18;
commitid	TbwQU6RrwF9qwzgw;

4.79.2.147.2.18
date	2012.09.02.19.56.47;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.19;
commitid	q3Bny0G3EqBdFZiw;

4.79.2.147.2.19
date	2012.09.03.00.01.56;	author srevill;	state Exp;
branches;
next	4.79.2.147.2.20;
commitid	zPAZ30SZFqok11jw;

4.79.2.147.2.20
date	2012.09.07.23.05.47;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.21;
commitid	Ik0jMROsIiH5yEjw;

4.79.2.147.2.21
date	2012.09.08.12.38.12;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.22;
commitid	tIJzr87csTUN2Jjw;

4.79.2.147.2.22
date	2012.09.18.13.44.33;	author jlee;	state Exp;
branches;
next	4.79.2.147.2.23;
commitid	2BntgJjnyfkD51lw;

4.79.2.147.2.23
date	2012.09.18.15.49.41;	author jlee;	state Exp;
branches;
next	;
commitid	jeuxYpI6CQUxM1lw;

4.52.2.1
date	2000.12.04.17.37.09;	author sforrest;	state Exp;
branches;
next	;

1.1.2.1
date	98.09.24.12.16.37;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	98.09.24.12.36.31;	author kbracey;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	98.10.19.13.30.23;	author kbracey;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	98.11.02.11.22.50;	author nicke;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	98.11.06.15.33.49;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.159
log
@Attempt to tidy up substitute screen mode selection logic
Detail:
  Over the years the OS's substitute screen mode selection logic has grown to be a tangled mess, and the logic it does implement isn't always very useful. Additionally, the kernel is structured in such a way that it can be hard for modules to override it.
  This set of changes aims to fix the many of the problems, by doing the following:
  - Moving all substitute mode selection logic out of the core VDU driver code and into a Service_ModeTranslation handler. This means you now only have one place in the kernel to look instead of several, and modules can override the behaviour by claiming/blocking the service call as appropriate.
  - Moving handling of the built-in VIDC lists out of the core VDU driver code and into a Service_ModeExtension handler. This means programs can now inspect these VIDC lists by issuing the right service call (although you are essentially limited to lists which the GraphicsV driver is OK with)
  - Moving *TV interlace & offset adjustment logic into the Service_ModeExtension handler, since they're legacy things which can be handled more cleanly for MDF/EDID (and the old code was poking memory the kernel didn't own)
  - Adding a Service_EnumerateScreenModes implementation, so that if you end up in the desktop with ScreenModes non-functional, the display manager at least has something useful to show you
  - Enhancing the handling of the built-in numbered modes so that they are now available in any colour depth; the Service_ModeExtension handler (and related handlers) treat the builtin VIDC lists as a set of mode timings, not a discrete set of modes
  - Substitute mode selection logic is a complete re-write. Instead of trying a handful of numbered fallback modes, it now tries:
    - Same mode but at higher colour depths
    - Same mode but at lower colour depths
    - Alternate resolutions (half-width mode with no double-pixel if original request was for double-pixel, and default resolution for monitor type)
  - Combined with the logic to allow the builtin VIDC lists to be used at any colour depth, this means that the kernel should now be able to find substitute modes for machines which lack support for <=8bpp modes (e.g. OMAP5)
  - Additionally the mode substitution code will attempt to retain as many properties of the originally requested mode as possible (eigen values, gap mode type, etc.)
  Other improvements:
  - The kernel now actually vets the builtin VIDC lists instead of assuming that they'll work (which also means they'll have the correct ExtraBytes value, where applicable)
  - The kernel now uses GraphicsV 19 (VetMode2) to vet the mode during the mode switch process, using the result to detect where the framebuffer will be placed. This allows for GraphicsV drivers to switch between DA 2 and external framestores on a per-mode basis.
  - The kernel now supports mode selectors which specify LineLength values which are larger than necessary; this will get translated to a suitable ExtraBytes control list item (+ combined with whatever padding the driver indicates is necessary via the VetMode2 result)
  File changes:
  - hdr/KernelWS - Reserve space for a VIDC list, since the Service_ModeExtension implementation typically can't use the built-in list as-is
  - s/Arthur3 - Issue Service_ModeFileChanged when the configured monitor type is changed, so that DisplayManager + friends are aware that the set of available modes has changed
  - s/GetAll - Fiddle with GETs a bit
  - s/MemMap2 - Extra LTORG
  - s/NewIRQs - Small routine to install/uninstall false VSync routine (previously from PushModeInfo, which wasn't really the appropriate place for it)
  - s/Utility - Hook up the extra service call handlers
  - s/vdu/legacymodes - New file containing the new service call implementations, and some related code
  - s/vdu/vdudecl - Move mode workspace definition here, from vdumodes
  - s/vdu/vdudriver - Remove assorted bits of mode substitution code. Plug in new bits for calling GraphicsV 19 during mode set, and deal with ExtraBytes/LineLength during PushModeInfo
  - s/vdu/vdumodes - Move some workspace definitions to s/vdu/vdudecl. Tweak how the builtin VIDC lists are stored.
  - s/vdu/vduswis - Rip out more mode substitution code. Issue Service_ModeFileChanged when monitor type is changed by OS_ScreenMode.
Admin:
  Tested on Raspberry Pi 3, Iyonix, IGEPv5


Version 6.14. Tagged as 'Kernel-6_14'
@
text
@/* (6.14)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        6.14
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                07 Nov 2018

#define Module_MajorVersion             "6.14"
#define Module_Version                  614
#define Module_MinorVersion             ""
#define Module_Date                     "07 Nov 2018"

#define Module_ApplicationDate          "07-Nov-18"

#define Module_ComponentName            "Kernel"
#define Module_ComponentPath            "apache/RiscOS/Sources/Kernel"

#define Module_FullVersion              "6.14"
#define Module_HelpVersion              "6.14 (07 Nov 2018)"
#define Module_LibraryVersionInfo       "6:14"
@


4.158
log
@Improve detection of invalid/unsupported screen modes
Detail:
  s/vdu/vdudriver - When using mode selector blocks, don't allow the system to switch into double-vertical, double-pixel, or BBC-gap modes which are in colour depths unsupported by the kernel
Admin:
  Tested on BB-xM


Version 6.13. Tagged as 'Kernel-6_13'
@
text
@d1 1
a1 1
/* (6.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.13
d9 1
a9 1
#define Module_Date_CMHG                16 Sep 2018
d11 2
a12 2
#define Module_MajorVersion             "6.13"
#define Module_Version                  613
d14 1
a14 1
#define Module_Date                     "16 Sep 2018"
d16 1
a16 1
#define Module_ApplicationDate          "16-Sep-18"
d19 1
a19 1
#define Module_ComponentPath            "castle/RiscOS/Sources/Kernel"
d21 3
a23 3
#define Module_FullVersion              "6.13"
#define Module_HelpVersion              "6.13 (16 Sep 2018)"
#define Module_LibraryVersionInfo       "6:13"
@


4.157
log
@Fix OS_Hardware 3 to be re-entrant
Detail:
  s/HAL - OS_Hardware 3 (remove HAL device) will now re-scan the device list for the device following the Service_Hardware call, so that the device list won't become corrupt if the service call triggers addition/removal of devices.
Admin:
  Tested on iMX6
  *HDMIOff now correctly removes the HDMI audio device and SoundDMA's software mixer device (SoundDMA removes mixer in response to the HDMI audio device vanishing, but re-entrancy bug meant that the HDMI device was left on the list)
  Note that this only covers re-entrancy via Service_Hardware. OS_Hardware 2/3/4/5 are not re-entrant from other locations (e.g. IRQ handlers or memory allocation service calls).


Version 6.12. Tagged as 'Kernel-6_12'
@
text
@d1 1
a1 1
/* (6.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.12
d9 1
a9 1
#define Module_Date_CMHG                04 Aug 2018
d11 2
a12 2
#define Module_MajorVersion             "6.12"
#define Module_Version                  612
d14 1
a14 1
#define Module_Date                     "04 Aug 2018"
d16 1
a16 1
#define Module_ApplicationDate          "04-Aug-18"
d21 3
a23 3
#define Module_FullVersion              "6.12"
#define Module_HelpVersion              "6.12 (04 Aug 2018)"
#define Module_LibraryVersionInfo       "6:12"
@


4.156
log
@Evict ECFIndex and PalIndex from VDU workspace
Detail:
  ECFIndex and PalIndex claim to be mode variables, but it's impossible for extension modes to specify their values.
  Since they're easy to calculate from the ModeFlags and Log2BPP values, drop them from the mode workspace (+ table of builtin modes) and calculate them on the fly instead.
  File changes:
  - hdr/KernelWS - Drop ECFIndex & PalIndex from workspace
  - s/vdu/vdumodes - Adjust workspace definition, drop ECFIndex & PalIndex values from VWSTAB
  - s/vdu/vdudriver - Remove now-redundant copy loop from ModeChangeSub. Remove code from GenerateModeSelectorVars that sets up the ECFIndex & PalIndex values on the stack
  - s/vdu/vdugrafl - Adjust copy loop in SwitchOutputToSprite/Mask
  - s/vdu/vdupalette, s/vdu/vdupalxx - Add GetPalIndex routine to generate PalIndex on the fly. Drop the obsolete 16bpp palette/gamma table and shuffle the other entries to simplify GetPalIndex a bit.
  - s/vdu/vduplot - Add GetECFIndex routine to generate ECFIndex on the fly. Also, fix things so that mode 0 isn't the only rectangular-pixel mode which uses the special rectangular-pixel ECF patterns (index 0 vs. index 4). Fiddle with ExportedHLine a bit to avoid an out-of-range ADR.
  - s/NewReset - Fix UAL warning for MOV R0, AppSpaceStart. Adjust memset to not assume 512KB is the correct amount
Admin:
  Tested on Raspberry Pi 3


Version 6.11. Tagged as 'Kernel-6_11'
@
text
@d1 1
a1 1
/* (6.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.11
d9 1
a9 1
#define Module_Date_CMHG                14 Jul 2018
d11 2
a12 2
#define Module_MajorVersion             "6.11"
#define Module_Version                  611
d14 1
a14 1
#define Module_Date                     "14 Jul 2018"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jul-18"
d21 3
a23 3
#define Module_FullVersion              "6.11"
#define Module_HelpVersion              "6.11 (14 Jul 2018)"
#define Module_LibraryVersionInfo       "6:11"
@


4.155
log
@Fix OS_Memory 0 "make temporarily uncacheable" not reporting errors
Detail:
  s/MemInfo - The wrapper around OS_Memory 0 introduced in Kernel-5_35-4_79_2_311 was preserving the wrong PSR field on exit, causing any error generated by the core code to be lost.
Admin:
  Tested on Iyonix
  Fixes *screensave saving mostly white pixels (address translation for "external" VRAM should have failed and caused ADFS to fall back to a bounce buffer)
  Is also likely to be the cause of https://www.riscosopen.org/forum/forums/5/topics/11713 (address translation should have failed for soft ROM)


Version 6.10. Tagged as 'Kernel-6_10'
@
text
@d1 1
a1 1
/* (6.10)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.10
d9 1
a9 1
#define Module_Date_CMHG                08 Jul 2018
d11 2
a12 2
#define Module_MajorVersion             "6.10"
#define Module_Version                  610
d14 1
a14 1
#define Module_Date                     "08 Jul 2018"
d16 1
a16 1
#define Module_ApplicationDate          "08-Jul-18"
d21 3
a23 3
#define Module_FullVersion              "6.10"
#define Module_HelpVersion              "6.10 (08 Jul 2018)"
#define Module_LibraryVersionInfo       "6:10"
@


4.154
log
@Merge SMP branch to trunk
Detail:
  Since the current SMP changes are fairly minor, and the trunk is seeing most development, from a maintenance perspective it makes sense to merge the changes to trunk. This will also make sure they get some wider testing ready for when the next round of SMP development takes place.
  Changes:
  - Docs/SMP - New docs folder describing SMP-related changes to the HAL and interrupt handling. Some of the IRQ changes can also be taken advantage of by single-core devices, since it introduces a way to describe which interrupt sources can be routed to IRQ & FIQ
  - Makefile, hdr/DBellDevice, hdr/HALDevice - New HAL device for an inter-processor software-generated interrupt source ("doorbell")
  - hdr/HALEntries - Reuse the unused matrix keyboard & touchscreen HAL entry points for the new IRQ handling & SMP-related HAL calls
  - hdr/KernelWS - Bump up MaxInterrupts
  - hdr/OSMem, s/MemInfo - Introduce OS_Memory 19, to allow for DMA to/from cacheable memory without actually altering the cacheability of the pages (which can be even more tricky in SMP systems than it is in uniprocessor systems)
  - hdr/Options - Introduce SMP build switch. Currently this controls whether the ARMops will operate in "SMP-friendly" mode or not (when running on MP processors)
  - s/ARMops, s/MemMap2 - Introduce the ARMv7MP ARMop implementation. Simplify DCache_LineLen / ICache_LineLen handling for WB_CR7_Lx so that it's the plain value rather than log2(n)-2
  - s/ExtraSWIs - If ARMops are in SMP-friendly mode, global OS_SynchroniseCodeAreas now only syncs application space and the RMA. This is because there is no trivial MP-safe global IMB operation available. This will also make global OS_SynchroniseCodeAreas significantly slower, but the documentation has always warned against performing a global IMB for just that reason, so code that suffers performance penalties should really try and switch to a ranged IMB.
  - s/NewIRQs - Update some comments regarding IRQ handler entry/exit conditions
Admin:
  Untested


Version 6.09. Tagged as 'Kernel-6_09'
@
text
@d1 1
a1 1
/* (6.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.09
d9 1
a9 1
#define Module_Date_CMHG                07 Jul 2018
d11 2
a12 2
#define Module_MajorVersion             "6.09"
#define Module_Version                  609
d14 1
a14 1
#define Module_Date                     "07 Jul 2018"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jul-18"
d21 3
a23 3
#define Module_FullVersion              "6.09"
#define Module_HelpVersion              "6.09 (07 Jul 2018)"
#define Module_LibraryVersionInfo       "6:9"
@


4.153
log
@Simplify initial AplSpace claim
Detail:
  As the application slot is now a normal dynamic area, there's no need to manipulate the CAM directly. Convert FudgeSomeAppSpace into a OS_ChangeDynamicArea SWI followed by memset().
  ChangeDyn.s: Offset by 32k to account for the -32k that dynamic area -1 has.
  NewReset.s: Delete FudgeSomeAppSpace and replace as above.
Admin:
  Submission from Timothy Baldwin.

Version 6.08. Tagged as 'Kernel-6_08'
@
text
@d1 1
a1 1
/* (6.08)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.08
d9 1
a9 1
#define Module_Date_CMHG                30 Jun 2018
d11 2
a12 2
#define Module_MajorVersion             "6.08"
#define Module_Version                  608
d14 1
a14 1
#define Module_Date                     "30 Jun 2018"
d16 1
a16 1
#define Module_ApplicationDate          "30-Jun-18"
d21 3
a23 3
#define Module_FullVersion              "6.08"
#define Module_HelpVersion              "6.08 (30 Jun 2018)"
#define Module_LibraryVersionInfo       "6:8"
@


4.152
log
@Various kernel cleanups
Detail:
  NewReset.s: Remove warning about soft reset, this is not supported any longer
  MsgCode.s: Reload LR after potentially changing mode
  PMF/osinit.s: Delete vestiges of soft reset support
Admin:
  Submission from Timothy Baldwin.

Version 6.07. Tagged as 'Kernel-6_07'
@
text
@d1 1
a1 1
/* (6.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.07
d9 1
a9 1
#define Module_Date_CMHG                16 Jun 2018
d11 2
a12 2
#define Module_MajorVersion             "6.07"
#define Module_Version                  607
d14 1
a14 1
#define Module_Date                     "16 Jun 2018"
d16 1
a16 1
#define Module_ApplicationDate          "16-Jun-18"
d21 3
a23 3
#define Module_FullVersion              "6.07"
#define Module_HelpVersion              "6.07 (16 Jun 2018)"
#define Module_LibraryVersionInfo       "6:7"
@


4.151
log
@Update mode variable definitions
Detail:
  hdr/VduExt:
  - Introduce mode variable 13, for specifying the minimum number of screen banks that are guaranteed to be available. Eventually the kernel will make use of this during mode vetting & selection, to give programs a simple and reliable way of selecting banked screen modes. Currently however it's only supported by VideoOverlay and the corresponding GraphicsV overlay APIs.
  - Extend the mode flags to allow display rotation & flipping to be specified. This is used to indicate that the framebuffer accessed by the CPU is not in the same orientation as what the user is seeing. Again, currently this is only supported by VideoOverlay and the corresponding GraphicsV overlay APIs.
Admin:
  Tested on OMAP3, OMAP4


Version 6.06. Tagged as 'Kernel-6_06'
@
text
@d1 1
a1 1
/* (6.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.06
d9 1
a9 1
#define Module_Date_CMHG                31 May 2018
d11 2
a12 2
#define Module_MajorVersion             "6.06"
#define Module_Version                  606
d14 1
a14 1
#define Module_Date                     "31 May 2018"
d16 1
a16 1
#define Module_ApplicationDate          "31-May-18"
d21 3
a23 3
#define Module_FullVersion              "6.06"
#define Module_HelpVersion              "6.06 (31 May 2018)"
#define Module_LibraryVersionInfo       "6:6"
@


4.150
log
@  Added HALDeviceID_RTC_PCF8523
Detail:
Admin:


Version 6.05. Tagged as 'Kernel-6_05'
@
text
@d1 1
a1 1
/* (6.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.05
d9 1
a9 1
#define Module_Date_CMHG                13 May 2018
d11 2
a12 2
#define Module_MajorVersion             "6.05"
#define Module_Version                  605
d14 1
a14 1
#define Module_Date                     "13 May 2018"
d16 1
a16 1
#define Module_ApplicationDate          "13-May-18"
d21 3
a23 3
#define Module_FullVersion              "6.05"
#define Module_HelpVersion              "6.05 (13 May 2018)"
#define Module_LibraryVersionInfo       "6:5"
@


4.149
log
@Disable error block validity checks
Detail:
  The error block checks introduced in Kernel-5_35-4_79_2_313 are generating a few too many false positives and edge cases, so take the safe option of just disabling them rather than trying to tweak the rules further. Error pointers will still be checked, but the content of the error blocks will not.
  hdr/Options - Add CheckErrorBlocks switch so we can easily turn the code back on again in the future if necessary
  s/Kernel - Switch out all the code relating to error number checks, except for the dummy load of the first word of the error block, since that's still useful as a pointer validity check
  hdr/KernelWS - Revise SWIDespatch_Size definition so it's easier for it to cope with the various factors which may affect the despatcher size
Admin:
  Tested on PandaBoard
  Relevant discussion:
  https://www.riscosopen.org/forum/forums/11/topics/11133


Version 6.04. Tagged as 'Kernel-6_04'
@
text
@d1 1
a1 1
/* (6.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.04
d9 1
a9 1
#define Module_Date_CMHG                24 Apr 2018
d11 2
a12 2
#define Module_MajorVersion             "6.04"
#define Module_Version                  604
d14 1
a14 1
#define Module_Date                     "24 Apr 2018"
d16 1
a16 1
#define Module_ApplicationDate          "24-Apr-18"
d21 3
a23 3
#define Module_FullVersion              "6.04"
#define Module_HelpVersion              "6.04 (24 Apr 2018)"
#define Module_LibraryVersionInfo       "6:4"
@


4.148
log
@Increase number of vectors supported by the kernel to 96.

Version 6.03. Tagged as 'Kernel-6_03'
@
text
@d1 1
a1 1
/* (6.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.03
d9 1
a9 1
#define Module_Date_CMHG                19 Apr 2018
d11 2
a12 2
#define Module_MajorVersion             "6.03"
#define Module_Version                  603
d14 1
a14 1
#define Module_Date                     "19 Apr 2018"
d16 1
a16 1
#define Module_ApplicationDate          "19-Apr-18"
d21 3
a23 3
#define Module_FullVersion              "6.03"
#define Module_HelpVersion              "6.03 (19 Apr 2018)"
#define Module_LibraryVersionInfo       "6:3"
@


4.147
log
@Back to odd numbered development

Version 6.02. Tagged as 'Kernel-6_02'
@
text
@d1 1
a1 1
/* (6.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.02
d9 1
a9 1
#define Module_Date_CMHG                15 Apr 2018
d11 2
a12 2
#define Module_MajorVersion             "6.02"
#define Module_Version                  602
d14 1
a14 1
#define Module_Date                     "15 Apr 2018"
d16 1
a16 1
#define Module_ApplicationDate          "15-Apr-18"
d21 3
a23 3
#define Module_FullVersion              "6.02"
#define Module_HelpVersion              "6.02 (15 Apr 2018)"
#define Module_LibraryVersionInfo       "6:2"
@


4.146
log
@  Resync with allocations database
Detail:
  Resolve allocation clash for vector &2C.  It appears that RISCOS Ltd used
  this vector in RISC OS 6 without getting it allocated - they really should
  have known better, since Hdr:RISCOS has always one of the header files
  centrally managed and coordinated between the two forks of RISC OS.
  Resolved by moving SeriousErrorV to &2D since it is a relatively recent
  addition (April 2016) and hasn't yet featured in a stable RISC OS 5
  release.
  Also correct some comments elsewhere in Hdr:RISCOS.


Version 6.01. Tagged as 'Kernel-6_01'
@
text
@d1 1
a1 1
/* (6.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.01
d11 2
a12 2
#define Module_MajorVersion             "6.01"
#define Module_Version                  601
d21 3
a23 3
#define Module_FullVersion              "6.01"
#define Module_HelpVersion              "6.01 (15 Apr 2018)"
#define Module_LibraryVersionInfo       "6:1"
@


4.145
log
@Fix ability for PMPs to claim specific pages
Detail:
  s/ChangeDyn - Due to the way that some page flags map to the same bits as (different) DA flags, the Batcall that PMP_PreGrow makes in order to claim the requested page was getting confused and thinking that the special DMA PreGrow handler should be used instead of the DA-specific one (which in this case is a custom one responsible for claiming the right page). Modify PMP_PreGrow so that it only supplies DA flags to the Batcall, and patches in any custom page flags afterwards.
  Also swap magic number for appropriate symbol in PMPGrowHandler.
Admin:
  Tested on BB-xM
  Fixes CAM corruption when a PMP claims a specific page, due to the PMP code and DA code disagreeing about which page should be used


Version 6.00. Tagged as 'Kernel-6_00'
@
text
@d1 1
a1 1
/* (6.00)
d7 1
a7 1
#define Module_MajorVersion_CMHG        6.00
d9 1
a9 1
#define Module_Date_CMHG                14 Apr 2018
d11 2
a12 2
#define Module_MajorVersion             "6.00"
#define Module_Version                  600
d14 1
a14 1
#define Module_Date                     "14 Apr 2018"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-18"
d21 3
a23 3
#define Module_FullVersion              "6.00"
#define Module_HelpVersion              "6.00 (14 Apr 2018)"
#define Module_LibraryVersionInfo       "6:0"
@


4.144
log
@Fix for num lock oddity at power on when configured off
The default OS_Byte value enabled num lock, but this was passed to the keyboard *before* a decision to wipe the CMOS (and hence potentially override it) was made.
This left the LED on until a key was pressed, regardless of the configured state.
Change the default OS_Byte value to be off so there's only one transition (off->on, or off->off), and refresh the keyboard after the validity of CMOS has been made.
Ref: https://www.riscosopen.org/forum/forums/4/topics/10400

Version 5.99. Tagged as 'Kernel-5_99'
@
text
@d1 1
a1 1
/* (5.99)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.99
d9 1
a9 1
#define Module_Date_CMHG                25 Mar 2018
d11 2
a12 2
#define Module_MajorVersion             "5.99"
#define Module_Version                  599
d14 1
a14 1
#define Module_Date                     "25 Mar 2018"
d16 1
a16 1
#define Module_ApplicationDate          "25-Mar-18"
d21 3
a23 3
#define Module_FullVersion              "5.99"
#define Module_HelpVersion              "5.99 (25 Mar 2018)"
#define Module_LibraryVersionInfo       "5:99"
@


4.143
log
@Make it easier to debug aborts that were triggered by ABT/UND code
Detail:
  s/Middle - Tweak register dump generation so that it'll attempt to provide sensible R13 & R14 values if the abort came from the same mode that we're handling the abort in. R13 will be adjusted by however much data we've pushed onto the stack, and R14 will be set to &DEADDEAD to indicate that the CPU has corrupted it and we don't know what the original value was.
Admin:
  Tested on BB-xM


Version 5.98. Tagged as 'Kernel-5_98'
@
text
@d1 1
a1 1
/* (5.98)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.98
d9 1
a9 1
#define Module_Date_CMHG                21 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "5.98"
#define Module_Version                  598
d14 1
a14 1
#define Module_Date                     "21 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "21-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "5.98"
#define Module_HelpVersion              "5.98 (21 Feb 2018)"
#define Module_LibraryVersionInfo       "5:98"
@


4.142
log
@Adapt A15 KnownCPUFlags to account for LDREX and friends
When SyncLib-0_04 is used in conjunction with SDIODriver, the exclusive access instructions (instead of SWP) abort when the cache is off, causing the machine to hang if *Cache Off is used.
See A15 TRM section 6.4.5 for the logic.
Copy the A53's known CPU flags to prevent the D cache being turned off.

Version 5.97. Tagged as 'Kernel-5_97'
@
text
@d1 1
a1 1
/* (5.97)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.97
d9 1
a9 1
#define Module_Date_CMHG                11 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "5.97"
#define Module_Version                  597
d14 1
a14 1
#define Module_Date                     "11 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "11-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "5.97"
#define Module_HelpVersion              "5.97 (11 Feb 2018)"
#define Module_LibraryVersionInfo       "5:97"
@


4.141
log
@Fix some pointer colour issues. Fix PaletteV 6 (blank screen) return value.
Detail:
  s/vdu/vdudriver - On startup, initialise all palettes to 0, not just Pal_Blank. Ensures that entries which might not always be explicitly initialised (e.g. pointer) are self-consistent. Also make sure InitialiseMode communicates the pointer palette to the new GV driver, since some components tend to program it in a lazy manner (e.g. Hourglass)
  s/vdu/vdupalxx - Fix UpdateAllPalette setting R4 to 0 on exit. Fix PV_BlankScreen R0 return value to be 0/1 as the comment suggests instead of always being 0 due to GraphicsV calls.
Admin:
  Tested on wandboard
  Fixes incorrect hourglass colours after reset, due to software RAM clear not wiping the kernel's palette (kernel + Hourglass thought old colours were still in use, but IMXVideo hadn't been told any colours yet so was using defaults of 0)


Version 5.96. Tagged as 'Kernel-5_96'
@
text
@d1 1
a1 1
/* (5.96)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.96
d9 1
a9 1
#define Module_Date_CMHG                04 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "5.96"
#define Module_Version                  596
d14 1
a14 1
#define Module_Date                     "04 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "04-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "5.96"
#define Module_HelpVersion              "5.96 (04 Feb 2018)"
#define Module_LibraryVersionInfo       "5:96"
@


4.140
log
@Recover gracefully from a completely blank set of CMOS
Newly born boards have all 0xFF's in their CMOS (EEPROM), but the new order of keyboard scan did
  Init -> Scan keyboard -> Check (or wipe) CMOS
and would therefore leave 0xFF's in a select few kernel workspace areas and OS_Byte values.
Defer the init which reads CMOS until after the check/wipe step. Only the screen area size is now done early, but MassageScreenSize clamps that properly anyway.

Arthur3.s: Relocate stranded function SetupPrinterBuffer to osinit.
PMF/key.s: Drop support for SoftReset.
PMF/osinit.s: Stuff in hardcoded defaults at early init. Retrieve the proper ones later. Take ownership of SystemSprite/RamFS/Font Manager dynamic areas (deferrable).
vdudriver.s: Use symbolic name.
NewReset.s: Defer SystemSprite/RamFS/Font Manager area creation, MouseInit, Read(Hard)CMOSDefaults until later.
hdr/Options: Delete unused IgnoreVRAM. Remove MaxRAMFS_Size now PMPs make it not useful. Shuffle ARM6Support/XScaleMiniCache/XScaleJTAGDebug to be adjacent to their definitions.

Tested by filling first 256 bytes with 0xFF and powering up. Reset now completes, OS_Byte variables look sensible.

Version 5.95. Tagged as 'Kernel-5_95'
@
text
@d1 1
a1 1
/* (5.95)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.95
d9 1
a9 1
#define Module_Date_CMHG                03 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "5.95"
#define Module_Version                  595
d14 1
a14 1
#define Module_Date                     "03 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "03-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "5.95"
#define Module_HelpVersion              "5.95 (03 Feb 2018)"
#define Module_LibraryVersionInfo       "5:95"
@


4.139
log
@Teletext fixes
Detail:
  s/vdu/vdugrafl - Disable hardware scrolling if we're in a teletext mode with a border. Quick fix in lieu of adding some code to make sure the relevant border areas are cleared when scrolling.
  s/vdu/vduttx - Ignore VDU 23,18,<n> sequences when outside of teletext. Fixes a crash when screen update suspend/resume sequences are used.
Admin:
  Tested on RiscPC


Version 5.94. Tagged as 'Kernel-5_94'
@
text
@d1 1
a1 1
/* (5.94)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.94
d9 1
a9 1
#define Module_Date_CMHG                26 Jan 2018
d11 2
a12 2
#define Module_MajorVersion             "5.94"
#define Module_Version                  594
d14 1
a14 1
#define Module_Date                     "26 Jan 2018"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jan-18"
d21 3
a23 3
#define Module_FullVersion              "5.94"
#define Module_HelpVersion              "5.94 (26 Jan 2018)"
#define Module_LibraryVersionInfo       "5:94"
@


4.138
log
@Unplug/RMInsert with podule module fix
During the first pass keyboard scan the ROM module nodes are built off the anchor ROMModuleChain.
During the second pass the whole set of ROM module nodes are temporarily constructed anchored on the stack, then switched over.
This caused a problem when a duplicate name module was encountered on a podule (eg. MbufManager in a NIC) because FindROMModule searches from the ROMModuleChain anchor, didn't find a match, so created a new node rather than linking it to the NewerVersion/OlderVersion linked list on the existing node.
Then *Unplug and *RMInsert would say "Module is not in ROM" if the optional podule specifier was given, because the search stopped at the first node with the right name.

Swap round the second pass so it anchors directly on ROMModuleChain, and keeps the first pass anchor on the stack (needed only occasionally to copy over details of modules already initialised).

Tested on a Risc PC with NIC, can now selectively unplug MbufManager again.

Version 5.93. Tagged as 'Kernel-5_93'
@
text
@d1 1
a1 1
/* (5.93)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.93
d9 1
a9 1
#define Module_Date_CMHG                08 Dec 2017
d11 2
a12 2
#define Module_MajorVersion             "5.93"
#define Module_Version                  593
d14 1
a14 1
#define Module_Date                     "08 Dec 2017"
d16 1
a16 1
#define Module_ApplicationDate          "08-Dec-17"
d21 3
a23 3
#define Module_FullVersion              "5.93"
#define Module_HelpVersion              "5.93 (08 Dec 2017)"
#define Module_LibraryVersionInfo       "5:93"
@


4.137
log
@Fix 2x output stream redirection bugs
Detail:
  s/Oscli:
  - Reorder RemoveOscliCharJobs to avoid WrchV being left claimed while the output stream is being closed, to resolve ticket #420.
  - Register usage also tweaked a bit to make the code a bit shorter & easier to read
  - Fix RedirectWrch to deal with errors correctly. PSR save/restore macros were added to the routine during the 32bit conversion process, but (a) they were inadvertantly causing all errors to be ignored, and (b) they were redundant since WrchV has no special in/out requirements for the PSR flags
Admin:
  Tested on Pandaboard
  Ticket #420 fix based around Colin's fix from https://www.riscosopen.org/forum/forums/4/topics/5269


Version 5.92. Tagged as 'Kernel-5_92'
@
text
@d1 1
a1 1
/* (5.92)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.92
d9 1
a9 1
#define Module_Date_CMHG                02 Dec 2017
d11 2
a12 2
#define Module_MajorVersion             "5.92"
#define Module_Version                  592
d14 1
a14 1
#define Module_Date                     "02 Dec 2017"
d16 1
a16 1
#define Module_ApplicationDate          "02-Dec-17"
d21 3
a23 3
#define Module_FullVersion              "5.92"
#define Module_HelpVersion              "5.92 (02 Dec 2017)"
#define Module_LibraryVersionInfo       "5:92"
@


4.136
log
@Fix initial OS_ResyncTime to occur before Service_PostInit
Detail:
  s/NewReset - In Kernel-5_89, the initial OS_ResyncTime call was erroneously moved to after Service_PostInit, which had the side-effect of causing TerritoryManager's initial evaluation of AutoDST rules to be performed using an uninitialised RTC, with varying side effects depending on the user's timezone (e.g. UK stuck in DST all year round due to lack of BST in 1970). Move the call back to its original location so that TerritoryManager and any other PostInit claimants can see the correct time.
Admin:
  Tested in Iyonix ROM
  Resolves ticket #441


Version 5.91. Tagged as 'Kernel-5_91'
@
text
@d1 1
a1 1
/* (5.91)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.91
d9 1
a9 1
#define Module_Date_CMHG                12 Nov 2017
d11 2
a12 2
#define Module_MajorVersion             "5.91"
#define Module_Version                  591
d14 1
a14 1
#define Module_Date                     "12 Nov 2017"
d16 1
a16 1
#define Module_ApplicationDate          "12-Nov-17"
d21 3
a23 3
#define Module_FullVersion              "5.91"
#define Module_HelpVersion              "5.91 (12 Nov 2017)"
#define Module_LibraryVersionInfo       "5:91"
@


4.135
log
@Tweak handling of zero page compatibility page
Detail:
  s/MemInfo, hdr/KernelWS - Rather than peeking L2PT to determine if the compatibility page is enabled, use a workspace var to track its state. This ensures we won't get confused if other software decides to map something of its own to &0.
  s/NewReset - Ensure the CompatibilityPageEnabled flag is initialised correctly
Admin:
  Tested in Iyonix ROM softload


Version 5.90. Tagged as 'Kernel-5_90'
@
text
@d1 1
a1 1
/* (5.90)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.90
d9 1
a9 1
#define Module_Date_CMHG                07 Oct 2017
d11 2
a12 2
#define Module_MajorVersion             "5.90"
#define Module_Version                  590
d14 1
a14 1
#define Module_Date                     "07 Oct 2017"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-17"
d21 3
a23 3
#define Module_FullVersion              "5.90"
#define Module_HelpVersion              "5.90 (07 Oct 2017)"
#define Module_LibraryVersionInfo       "5:90"
@


4.134
log
@Change module initialisation to be a two pass scheme
Detail:
  To make it easier to support arbitrary complexity keyboard controllers (eg. USB via DWCDriver on the Pi) have the kernel do the early keyboard recovery key press detection instead of the HAL.
  During the first pass those modules used for reading the keyboard are started, ignoring the CMOS frugal bits.
  The keyboard is then scanned for 3s, during which time the RAM is cleared (unless the HAL indicated it has already been done).
  During the second pass the remaining modules are started respecting the CMOS frugal bits. Any which were already started in the first pass are inserted into the new chain, so the keyboard is reset once and only once.

  Boot times, with a 300cs key scan time in NewReset.
  Risc PC with 160MB RAM (128+32+0).
  Times from turning on power to initial "beep", using a stopwatch.
                RISC OS 3.70 RISC OS 5.22 This OS
  ARM610        12.5         10.4         10.3
  ARM710        11.8         10.2         9.7
  StrongARM 233 11.1         9.5          8.4

  In NewReset.s:
  Remove old KbdScan code (leave Reset_IRQ_Handler for IIC only)
  If HAL_KbdScanDependencies returns a null string then present KbdDone flag and skip to full init.
  A few vestiges of soft resets removed.
  Do RAM clear when waiting for INKEY (being careful not to trash the running modules...).
  Clearing just the freepool on a 2GB Titanium cleared 7EFD6 pages (99.2%).

  In ModHand.s:
  2nd pass need to sneaky renumber the nodes (so *ROMModules is in the right order, frugal bits line up) without resetting the chain

  In HAL.s:
  Change ClearPhysRAM to ClearWkspRAM, such that it only clears the kernel workspace rather than all RAM. The bulk of the RAM is cleared during the keyboard scan by new function ClearFreePoolSection.
  Add a variant of Init_MapInRAM which clears the mapped in RAM too (as these very early claims will not be in the free pool when the RAM is cleared later).
  Remove HAL keyboard scan setup & IRQ handler.
  Fix bug in HALDebugHexTX2, the input value needs pre-shifting by 16b before continuing.

  In GetAll.s, PMF/osbyte.s:
  Use Hdr:Countries and Hdr:OsBytes for constants.

  In PMF/key.s, PMF/osinit.s:
  Relocate the key post init from PostInit to KeyPostInit.
  Changed PostInit to not tail call KeyPostInit so they can be called independently.

  In hdr/KernelWs:
  Improve comments, add InitWsStart label to refer to.

  In hdr/HALEntries:
  Add HAL_KbdScanDependencies.
  Delete KbdFlag exports.
  Took the opportunity to reorder some of the higher numbered HAL entries and re-grouping, specifically (112,120) (84,106,108,117).
Admin:
  Tested on an ARM6/ARM7/SA Risc PC, BeagleBoard xM, Iyonix, Pandaboard ES, Wandboard Quad, IPEGv5, Titanium, Pi 2 and 3.
  Requires corresponding HAL change.
  Submission for USB bounty.

Version 5.89. Tagged as 'Kernel-5_89'
@
text
@d1 1
a1 1
/* (5.89)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.89
d9 1
a9 1
#define Module_Date_CMHG                09 Sep 2017
d11 2
a12 2
#define Module_MajorVersion             "5.89"
#define Module_Version                  589
d14 1
a14 1
#define Module_Date                     "09 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "09-Sep-17"
d21 3
a23 3
#define Module_FullVersion              "5.89"
#define Module_HelpVersion              "5.89 (09 Sep 2017)"
#define Module_LibraryVersionInfo       "5:89"
@


4.133
log
@Add UUID output formatter to conversions
OS_ConvertVariform 15 outputs 128b numbers per RFC4122.

Version 5.88. Tagged as 'Kernel-5_88'
@
text
@d1 1
a1 1
/* (5.88)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.88
d9 1
a9 1
#define Module_Date_CMHG                27 Aug 2017
d11 2
a12 2
#define Module_MajorVersion             "5.88"
#define Module_Version                  588
d14 1
a14 1
#define Module_Date                     "27 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "27-Aug-17"
d21 3
a23 3
#define Module_FullVersion              "5.88"
#define Module_HelpVersion              "5.88 (27 Aug 2017)"
#define Module_LibraryVersionInfo       "5:88"
@


4.132
log
@Resync with allocations database

Version 5.87. Not tagged
@
text
@d1 1
a1 1
/* (5.87)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.87
d9 1
a9 1
#define Module_Date_CMHG                25 Aug 2017
d11 2
a12 2
#define Module_MajorVersion             "5.87"
#define Module_Version                  587
d14 1
a14 1
#define Module_Date                     "25 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "25-Aug-17"
d21 3
a23 3
#define Module_FullVersion              "5.87"
#define Module_HelpVersion              "5.87 (25 Aug 2017)"
#define Module_LibraryVersionInfo       "5:87"
@


4.131
log
@Add a compatibility page zero for high processor vectors / zero page relocation builds
Detail:
  When HiProcVecs is enabled, there will now be a read-only page located at &0 in order to ease compatibility with buggy software which reads from null pointers
  Although most of the page is zero-filled, the start of the page contains a few words which are invalid pointers, discouraging dereferencing them, and a warning message if the memory is interpreted as a string.
  On ARMv6+ the page is also made non-executable, to deal with branch-through-zero type situations
  OS_Memory 20 has been introduced as a way of determining whether the compatibility page is present, and also to enable/disable it
  File changes:
  - hdr/Options - Add CompatibilityPage option
  - hdr/OSMem - Declare OS_Memory reason code 20
  - hdr/KernelWS - When CompatibilityPage is enabled, make sure nothing else is located at &0
  - s/NewReset - Enable compatibility page just before Service_PostInit (try and keep zero-tolerance policy for null pointer dereferencing during ROM init)
  - s/MemInfo - OS_Memory 20 implementation. Add knowledge of the compatibility page to OS_Memory 16 and 24.
Admin:
  Tested on BB-xM


Version 5.87. Tagged as 'Kernel-5_87'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                19 Aug 2017
d14 1
a14 1
#define Module_Date                     "19 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "19-Aug-17"
d22 1
a22 1
#define Module_HelpVersion              "5.87 (19 Aug 2017)"
@


4.130
log
@  Added link to Phy powerup and reset routine in EtherDevice
Detail:
Admin:
  tested on iMx6 revD1 and revC2

Version 5.86. Tagged as 'Kernel-5_86'
@
text
@d1 1
a1 1
/* (5.86)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.86
d9 1
a9 1
#define Module_Date_CMHG                18 Jul 2017
d11 2
a12 2
#define Module_MajorVersion             "5.86"
#define Module_Version                  586
d14 1
a14 1
#define Module_Date                     "18 Jul 2017"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jul-17"
d21 3
a23 3
#define Module_FullVersion              "5.86"
#define Module_HelpVersion              "5.86 (18 Jul 2017)"
#define Module_LibraryVersionInfo       "5:86"
@


4.129
log
@Fix to OS_ReadSysInfo 1
Detail:
  Prior to ScreenModes starting (when CurrentMonitorType becaomes 7) this SWI would return Auto as 31 for EDID rather than -1, as would be the case had ReadMultiField been called.
  Change to use -1 for consistency and so it gets translated to type 3 (VGA).
Admin:
  Submission from Willi Theiss.

Version 5.85. Tagged as 'Kernel-5_85'
@
text
@d1 1
a1 1
/* (5.85)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.85
d9 1
a9 1
#define Module_Date_CMHG                18 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "5.85"
#define Module_Version                  585
d14 1
a14 1
#define Module_Date                     "18 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "5.85"
#define Module_HelpVersion              "5.85 (18 Jun 2017)"
#define Module_LibraryVersionInfo       "5:85"
@


4.129.2.1
log
@Merge Kernel-5_86
Detail:
  hdr/EtherDevice: Merge in Kernel-5_86 to keep branch up-to-date with MAIN
Admin:
  Untested


Version 5.86, 4.129.2.1. Tagged as 'Kernel-5_86-4_129_2_1'
@
text
@d1 1
a1 1
/* (5.86)
d7 3
a9 3
#define Module_MajorVersion_CMHG        5.86
#define Module_MinorVersion_CMHG        4.129.2.1
#define Module_Date_CMHG                29 Jul 2017
d11 4
a14 4
#define Module_MajorVersion             "5.86"
#define Module_Version                  586
#define Module_MinorVersion             "4.129.2.1"
#define Module_Date                     "29 Jul 2017"
d16 1
a16 1
#define Module_ApplicationDate          "29-Jul-17"
d21 3
a23 3
#define Module_FullVersion              "5.86 (4.129.2.1)"
#define Module_HelpVersion              "5.86 (29 Jul 2017) 4.129.2.1"
#define Module_LibraryVersionInfo       "5:86"
@


4.129.2.2
log
@Initial SMP changes
Detail:
  This commit lays some of the groundwork for SMP support within the HAL, kernel, and OS.
  Makefile, hdr/HALDevice, hdr/DBellDevice - Add definitions for a doorbell HAL device, to allow CPU cores to signal each other via interrupts
  hdr/HALEntries - Repurpose HAL_Matrix and HAL_Touchscreen entry points for new SMP-related entry points. Add a couple of IRQ-related definitions.
  hdr/KernelWS - Boost MaxInterrupts to 256
  hdr/Options - Add new SMP build switch to control whether the kernel is built in SMP-friendly mode or not. SMP-friendly kernels should still run on single-core machines, but may behave slightly differently.
  s/ARMops - Make as many ARMops SMP-safe as possible, relying on hardware support for broadcasting of cache/TLB maintenance operations
  s/ExtraSWIs - Make SMP-friendly full OS_SynchroniseCodeAreas only sync application space and the RMA (full-cache IMB not really possible with SMP)
  s/NewIRQs - Update IRQ despatcher comments to (hopefully) reflect reality
  Docs/SMP/HAL, Docs/SMP/IRQ - Add documentation covering the new HAL calls and IRQ behaviour
Admin:
  Tested on Raspberry Pi 2, 3, OMAP4, iMX6


Version 5.86, 4.129.2.2. Tagged as 'Kernel-5_86-4_129_2_2'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.129.2.2
d13 1
a13 1
#define Module_MinorVersion             "4.129.2.2"
d21 2
a22 2
#define Module_FullVersion              "5.86 (4.129.2.2)"
#define Module_HelpVersion              "5.86 (29 Jul 2017) 4.129.2.2"
@


4.129.2.3
log
@Add OS_Memory 19, which is intended to replace the OS_Memory 0 "make uncacheable" feature, when used for DMA
Detail:
  Making pages uncacheable to allow them to be used with DMA can be troublesome for a number of reasons:
  * Many processors ignore cache hits for non-cacheable pages, so to avoid breaking any IRQ handlers the page table manipulation + cache maintenance must be performed with IRQs disabled, impacting the IRQ latency of the system
  * Some processors don't support LDREX/STREX to non-cacheable pages
  * In SMP setups it may be necessary to temporarily park the other cores somewhere safe, or perform some other explicit synchronisation to make sure they all have consistent views of the cache/TLB
  The above issues are most likely to cause problems when the page is shared by multiple programs; a DMA operation which targets one part of a page could impact the programs which are using the other parts.
  To combat these problems, OS_Memory 19 is being introduced, which allows DMA cache coherency/address translation to be performed without altering the attributes of the pages.
  Files changed:
  - hdr/OSMem - Add definitions for OS_Memory 19
  - s/MemInfo - Add OS_Memory 19 implementation
Admin:
  Tested on Raspberry Pi 3, iMx6


Version 5.86, 4.129.2.3. Tagged as 'Kernel-5_86-4_129_2_3'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.129.2.3
#define Module_Date_CMHG                12 Aug 2017
d13 2
a14 2
#define Module_MinorVersion             "4.129.2.3"
#define Module_Date                     "12 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "12-Aug-17"
d21 2
a22 2
#define Module_FullVersion              "5.86 (4.129.2.3)"
#define Module_HelpVersion              "5.86 (12 Aug 2017) 4.129.2.3"
@


4.129.2.4
log
@Merge in latest changes from main branch


Version 5.88, 4.129.2.4. Tagged as 'Kernel-5_88-4_129_2_4'
@
text
@d1 1
a1 1
/* (5.88)
d7 3
a9 3
#define Module_MajorVersion_CMHG        5.88
#define Module_MinorVersion_CMHG        4.129.2.4
#define Module_Date_CMHG                31 Aug 2017
d11 4
a14 4
#define Module_MajorVersion             "5.88"
#define Module_Version                  588
#define Module_MinorVersion             "4.129.2.4"
#define Module_Date                     "31 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "31-Aug-17"
d21 3
a23 3
#define Module_FullVersion              "5.88 (4.129.2.4)"
#define Module_HelpVersion              "5.88 (31 Aug 2017) 4.129.2.4"
#define Module_LibraryVersionInfo       "5:88"
@


4.129.2.5
log
@Fix global OS_SynchroniseCodeAreas. ARMop tweaks.
Detail:
  s/ExtraSWIs - Fix global OS_SynchroniseCodeAreas using the wrong appspace size; would have resulted in appspace only being partially synced if some pages were mapped out due to lazy swapping
  s/ARMops, s/ExtraSWIs, s/MemMap2 - Simplify code by making DCache_LineLen / ICache_LineLen store the actual line length values on ARMv7+ instead of the log2 values. Optimise SMP I-cache invalidation by allowing it to do a global invalidate. Ensure all ARMv7+ range checks use LO instead of NE, to avoid any problems with mismatched I/D line lengths (can't be sure the op range was rounded to the larger of the two)
Admin:
  Tested on iMX6


Version 5.88, 4.129.2.5. Tagged as 'Kernel-5_88-4_129_2_5'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.129.2.5
#define Module_Date_CMHG                03 Sep 2017
d13 2
a14 2
#define Module_MinorVersion             "4.129.2.5"
#define Module_Date                     "03 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "03-Sep-17"
d21 2
a22 2
#define Module_FullVersion              "5.88 (4.129.2.5)"
#define Module_HelpVersion              "5.88 (03 Sep 2017) 4.129.2.5"
@


4.129.2.6
log
@Merge latest changes from main branch

Version 5.89, 4.129.2.6. Tagged as 'Kernel-5_89-4_129_2_6'
@
text
@d1 1
a1 1
/* (5.89)
d7 3
a9 3
#define Module_MajorVersion_CMHG        5.89
#define Module_MinorVersion_CMHG        4.129.2.6
#define Module_Date_CMHG                10 Sep 2017
d11 4
a14 4
#define Module_MajorVersion             "5.89"
#define Module_Version                  589
#define Module_MinorVersion             "4.129.2.6"
#define Module_Date                     "10 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "10-Sep-17"
d21 3
a23 3
#define Module_FullVersion              "5.89 (4.129.2.6)"
#define Module_HelpVersion              "5.89 (10 Sep 2017) 4.129.2.6"
#define Module_LibraryVersionInfo       "5:89"
@


4.129.2.7
log
@Merge in latest changes from main branch

Version 5.97, 4.129.2.7. Tagged as 'Kernel-5_97-4_129_2_7'
@
text
@d1 1
a1 1
/* (5.97)
d7 3
a9 3
#define Module_MajorVersion_CMHG        5.97
#define Module_MinorVersion_CMHG        4.129.2.7
#define Module_Date_CMHG                16 Feb 2018
d11 4
a14 4
#define Module_MajorVersion             "5.97"
#define Module_Version                  597
#define Module_MinorVersion             "4.129.2.7"
#define Module_Date                     "16 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "16-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "5.97 (4.129.2.7)"
#define Module_HelpVersion              "5.97 (16 Feb 2018) 4.129.2.7"
#define Module_LibraryVersionInfo       "5:97"
@


4.129.2.8
log
@Merge in latest changes from main branch

Version 6.05, 4.129.2.8. Tagged as 'Kernel-6_05-4_129_2_8'
@
text
@d1 1
a1 1
/* (6.05)
d7 3
a9 3
#define Module_MajorVersion_CMHG        6.05
#define Module_MinorVersion_CMHG        4.129.2.8
#define Module_Date_CMHG                14 May 2018
d11 4
a14 4
#define Module_MajorVersion             "6.05"
#define Module_Version                  605
#define Module_MinorVersion             "4.129.2.8"
#define Module_Date                     "14 May 2018"
d16 1
a16 1
#define Module_ApplicationDate          "14-May-18"
d21 3
a23 3
#define Module_FullVersion              "6.05 (4.129.2.8)"
#define Module_HelpVersion              "6.05 (14 May 2018) 4.129.2.8"
#define Module_LibraryVersionInfo       "6:5"
@


4.129.2.9
log
@Merge latest changes from HEAD

Version 6.08, 4.129.2.9. Tagged as 'Kernel-6_08-4_129_2_9'
@
text
@d1 1
a1 1
/* (6.08)
d7 3
a9 3
#define Module_MajorVersion_CMHG        6.08
#define Module_MinorVersion_CMHG        4.129.2.9
#define Module_Date_CMHG                07 Jul 2018
d11 4
a14 4
#define Module_MajorVersion             "6.08"
#define Module_Version                  608
#define Module_MinorVersion             "4.129.2.9"
#define Module_Date                     "07 Jul 2018"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jul-18"
d21 3
a23 3
#define Module_FullVersion              "6.08 (4.129.2.9)"
#define Module_HelpVersion              "6.08 (07 Jul 2018) 4.129.2.9"
#define Module_LibraryVersionInfo       "6:8"
@


4.129.2.10
log
@Allow SMP build switch to be overridden by components file
Detail:
  hdr/Options - The setting of the SMP switch can now be controlled by specifying the correct ASFLAGS, e.g. ASFLAGS="-PD \"SMP SETL {FALSE}\""
Admin:
  Untested


Version 6.08, 4.129.2.10. Tagged as 'Kernel-6_08-4_129_2_10'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.129.2.10
d13 1
a13 1
#define Module_MinorVersion             "4.129.2.10"
d21 2
a22 2
#define Module_FullVersion              "6.08 (4.129.2.10)"
#define Module_HelpVersion              "6.08 (07 Jul 2018) 4.129.2.10"
@


4.128
log
@Fix software pointer when ExtraBytes is in use
Detail:
  s/vdu/vdupointer - The software pointer code was calculating LineLength manually, due to previous kernel versions not storing a copy of the value that would be safe to use during screen redirection.
  Fix the code to use the new DisplayLineLength variable, so that the software pointer will be correct in modes which have row padding.
Admin:
  Tested on Raspberry Pi 3


Version 5.84. Tagged as 'Kernel-5_84'
@
text
@d1 1
a1 1
/* (5.84)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.84
d9 1
a9 1
#define Module_Date_CMHG                15 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "5.84"
#define Module_Version                  584
d14 1
a14 1
#define Module_Date                     "15 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "5.84"
#define Module_HelpVersion              "5.84 (15 Jun 2017)"
#define Module_LibraryVersionInfo       "5:84"
@


4.127
log
@Tweak OS_ReadModeVariable optimisations
Detail:
  s/vdu/vduswis - Don't use RMVForCurrentMode when R0 = ModeNo, only use it if R0 is -1. This ensures that results for explicitly-specified modes will always represent the base properties of the mode and won't be influenced by any unusual properties of the current mode, e.g. LineLength/ScreenSize alterations caused by driver-specific framebuffer padding.
Admin:
  Tested on Raspberry Pi 3


Version 5.83. Tagged as 'Kernel-5_83'
@
text
@d1 1
a1 1
/* (5.83)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.83
d9 1
a9 1
#define Module_Date_CMHG                13 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "5.83"
#define Module_Version                  583
d14 1
a14 1
#define Module_Date                     "13 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "13-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "5.83"
#define Module_HelpVersion              "5.83 (13 Jun 2017)"
#define Module_LibraryVersionInfo       "5:83"
@


4.126
log
@Initial support for the ExtraBytes VIDC control list item
Detail:
  The ExtraBytes control list item can be used to add padding between framebuffer rows.
  When the kernel sees a VIDC list containing this item, it will now adjust the LineLength and ScreenSize mode variables accordingly, with the end result that the correct amount of memory will be allocated for the framebuffer and the OS will render into it correctly.
  Files changed:
  - hdr/KernelWS - Add DisplayLineLength variable to allow the correct LineLength value to be preserved when screen output is redirected to a sprite
  - s/vdu/vdudriver - Make ModeChangeSub initialise DisplayLineLength before calling SwitchOutputToSprite. Update PushModeInfo to take ExtraBytes into account when calculating LineLength and ScreenSize.
  - s/vdu/vdugrafl - Adjust SwitchOutputToSprite to use DisplayLineLength when restoring screen output
  - s/vdu/vduwrch - Fix full-screen CLS to not write to the padding bytes
Admin:
  Tested on Raspberry Pi 3


Version 5.82. Tagged as 'Kernel-5_82'
@
text
@d1 1
a1 1
/* (5.82)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.82
d9 1
a9 1
#define Module_Date_CMHG                07 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "5.82"
#define Module_Version                  582
d14 1
a14 1
#define Module_Date                     "07 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "5.82"
#define Module_HelpVersion              "5.82 (07 Jun 2017)"
#define Module_LibraryVersionInfo       "5:82"
@


4.125
log
@Resync with allocations database (added symbolic names for Internet Event subreason codes)

Version 5.81. Tagged as 'Kernel-5_81'
@
text
@d1 1
a1 1
/* (5.81)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.81
d9 1
a9 1
#define Module_Date_CMHG                03 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "5.81"
#define Module_Version                  581
d14 1
a14 1
#define Module_Date                     "03 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "5.81"
#define Module_HelpVersion              "5.81 (03 Jun 2017)"
#define Module_LibraryVersionInfo       "5:81"
@


4.124
log
@Extend MonitorType configure keyword
Detail:
  Accept a monitortype of 'EDID' (as distinct from 'Auto', which uses the ID pins) to force the kernel, via ScrModes, to use the native screen mode prior to executing the boot sequence.
  Required for discless boot, this also helps if the boot sequence fails, the desktop will be entered in the monitor's native resolution, or a fallback if GraphicsV rejects that.
  The allocation of the EDID monitor type has been carefully selected to degrade to 'Auto' when used with an older OS. That way the configuration in CMOS is safe to use with softloads on top of older physical ROMs.
  When OS_ScreenMode is queried return the 'Auto' type, ie. at an API level there's no distinction.
Admin:
  Requires HdrSrc-2_67.
  Submission for the EDID bounty.

Version 5.80. Tagged as 'Kernel-5_80'
@
text
@d1 1
a1 1
/* (5.80)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.80
d9 1
a9 1
#define Module_Date_CMHG                05 Mar 2017
d11 2
a12 2
#define Module_MajorVersion             "5.80"
#define Module_Version                  580
d14 1
a14 1
#define Module_Date                     "05 Mar 2017"
d16 1
a16 1
#define Module_ApplicationDate          "05-Mar-17"
d21 3
a23 3
#define Module_FullVersion              "5.80"
#define Module_HelpVersion              "5.80 (05 Mar 2017)"
#define Module_LibraryVersionInfo       "5:80"
@


4.123
log
@Streamline PL310 ARMops
Detail:
  Some closer examination of the PL310 TRM reveals that there's no need to poll for completion of maintenance operations if we only use atomic ops.
  Since there's no particular need for us to use the background ops, just rewrite everything to use the atomic ops and get rid of the polling.
  This should also avoid the need for any costly locking in SMP setups.
  File changes:
  - s/ARMops - Updated as above
Admin:
  Tested on Pandaboard, iMx6


Version 5.79. Tagged as 'Kernel-5_79'
@
text
@d1 1
a1 1
/* (5.79)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.79
d9 1
a9 1
#define Module_Date_CMHG                17 Feb 2017
d11 2
a12 2
#define Module_MajorVersion             "5.79"
#define Module_Version                  579
d14 1
a14 1
#define Module_Date                     "17 Feb 2017"
d16 1
a16 1
#define Module_ApplicationDate          "17-Feb-17"
d21 3
a23 3
#define Module_FullVersion              "5.79"
#define Module_HelpVersion              "5.79 (17 Feb 2017)"
#define Module_LibraryVersionInfo       "5:79"
@


4.122
log
@Fix incorrect OS_SynchroniseCodeAreas call
Detail:
  s/Arthur2 - When installing a code system variable, a register fumble resulted in OS_SynchroniseCodeAreas being called with a bogus address range. Fix it.
Admin:
  Tested on Pandaboard


Version 5.78. Tagged as 'Kernel-5_78'
@
text
@d1 1
a1 1
/* (5.78)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.78
d9 1
a9 1
#define Module_Date_CMHG                11 Feb 2017
d11 2
a12 2
#define Module_MajorVersion             "5.78"
#define Module_Version                  578
d14 1
a14 1
#define Module_Date                     "11 Feb 2017"
d16 1
a16 1
#define Module_ApplicationDate          "11-Feb-17"
d21 3
a23 3
#define Module_FullVersion              "5.78"
#define Module_HelpVersion              "5.78 (11 Feb 2017)"
#define Module_LibraryVersionInfo       "5:78"
@


4.121
log
@Expose CLREX via OS_PlatformFeatures
To account for ARM changing their minds about how to clear the exclusive lock on different architectures, provide a function pointer with a known good implementation. This is similar to the run of NOPs returned by OS_PlatformFeatures 0 for those that need it.
If in the future any errata or similar are needed, then there's only 1 place to change it, plus clients don't need their own CPU type detection logic.

Version 5.77. Tagged as 'Kernel-5_77'
@
text
@d1 1
a1 1
/* (5.77)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.77
d9 1
a9 1
#define Module_Date_CMHG                09 Feb 2017
d11 2
a12 2
#define Module_MajorVersion             "5.77"
#define Module_Version                  577
d14 1
a14 1
#define Module_Date                     "09 Feb 2017"
d16 1
a16 1
#define Module_ApplicationDate          "09-Feb-17"
d21 3
a23 3
#define Module_FullVersion              "5.77"
#define Module_HelpVersion              "5.77 (09 Feb 2017)"
#define Module_LibraryVersionInfo       "5:77"
@


4.120
log
@Fix inverted global vs. per-page cache flush logic in PMP LogOp_MapOut
Detail:
  s/ChangeDyn - Set r6 bit 0 if the area is smaller than the cache range threshold, because that's what's checked for at lines 3077 and 3092
Admin:
  Tested on Raspberry Pi


Version 5.76. Tagged as 'Kernel-5_76'
@
text
@d1 1
a1 1
/* (5.76)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.76
d9 1
a9 1
#define Module_Date_CMHG                11 Jan 2017
d11 2
a12 2
#define Module_MajorVersion             "5.76"
#define Module_Version                  576
d14 1
a14 1
#define Module_Date                     "11 Jan 2017"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jan-17"
d21 3
a23 3
#define Module_FullVersion              "5.76"
#define Module_HelpVersion              "5.76 (11 Jan 2017)"
#define Module_LibraryVersionInfo       "5:76"
@


4.119
log
@Fix screen redirection when in teletext modes. Fix *ScreenLoad buffer overflow.
Detail:
  s/vdu/vdugrafl, s/vdu/vduttx - Adjust initialisation & shutdown of TTX workspace to fix workspace being erroneously freed/reinitialised when redirecting output to a sprite
  s/vdu/vdugrafk - If ScreenLoad needs to load one row at a time (e.g. when graphics window width != sprite width), allocate a block from the RMA instead of assuming that ScrLoaBuffer is large enough
  hdr/KernelWS - Get rid of ScrLoaBuffer, and shrink LargeCommon to a suitable size. Frees about 2K of VDU workspace.
  s/GetAll - Move Hdr:Sprite earlier in list of GETs
Admin:
  Tested on Raspberry Pi


Version 5.75. Tagged as 'Kernel-5_75'
@
text
@d1 1
a1 1
/* (5.75)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.75
d9 1
a9 1
#define Module_Date_CMHG                17 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "5.75"
#define Module_Version                  575
d14 1
a14 1
#define Module_Date                     "17 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "17-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "5.75"
#define Module_HelpVersion              "5.75 (17 Dec 2016)"
#define Module_LibraryVersionInfo       "5:75"
@


4.118
log
@Add support for custom teletext modes
Detail:
  This set of changes:
  * Adds support for the T, TX and TY mode string elements (as per RISCOS Ltd)
  * Adds support for entering arbitrary-resolution teletext modes by using mode selector blocks with the Teletext mode flag set
  * ScrRCol and ScrBRow mode variables can be provided in the mode selector in order to restrict the number of text rows/columns in teletext modes (as per RISCOS Ltd)
  * If the rows / columns are restricted in this manner then the text window will be centered on the screen, to try and avoid things looking too ugly (no variable text scaling implemented)
  * For HiResTTX, all colour depths >= 4bpp are now supported by teletext. This essentially makes the TTX256 switch obsolete.
  * If the "native" mode 7 is unavailable then the kernel will try a series of fallback resolutions & colour depths in an effort to find a combination that works
  Known bugs/issues:
  * Teletext column count has a max limit of 255 due to TTXDoubleCounts being a byte array
  * If there's a border around the text window, the border will not be refreshed when changing transparency modes using a VDU 23,18,0 sequence
  * ScreenLoad looks like it can overflow the LargeCommon buffer (no buffer size check) - needs fixing before LargeCommon can be safely shrunk below (Old)TTXMapSize
  File changes:
  - hdr/KernelWS - Make CharWidth non-conditional. Adjust handling of teletext workspace; it's now allocated from the system heap to allow it to cope with arbitrary screen sizes
  - s/vdu/vdu23 - Make CharWidth non-conditional
  - s/vdu/vducursoft - Make CursorTeletext cope with arbitrary colour depths, make CharWidth non-conditional, remove hard-coded teletext values
  - s/vdu/vdudriver - Deal with teletext workspace allocation during ModeChangeSub. Deal with selecting teletext modes (and validating colour depth) in GenerateModeSelectorVars.
  - s/vdu/vdugrafl - Make CharWidth non-conditional. Calculate offset required for text window centering.
  - s/vdu/vdumodes - Remove TTX256
  - s/vdu/vduswis - Try other teletext modes if native mode 7 not available. Extend OS_ScreenMode reason codes to cope with teletext mode strings.
  - s/vdu/vduttx - Update to use dynamic workspace. Replace various hardcoded values with variable lookups. Update character plotting + colour/palette selection to work with true-colour modes if HiResTTX.
  - s/vdu/vduwrch - Move some useful code into a subroutine. Update FastCLS to cope with true-colour teletext. Update AddressR0R1 to cope with text window centering offset. Make CharWidth non-conditional.
Admin:
  Tested on Raspberry Pi, BB-xM
  VDU 23,18,0 in 256-colour teletext now works correctly (previously 64-colour mode was in use, causing palette update to be ruined by VIDC1-mangling)


Version 5.74. Tagged as 'Kernel-5_74'
@
text
@d1 1
a1 1
/* (5.74)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.74
d9 1
a9 1
#define Module_Date_CMHG                15 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "5.74"
#define Module_Version                  574
d14 1
a14 1
#define Module_Date                     "15 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "5.74"
#define Module_HelpVersion              "5.74 (15 Dec 2016)"
#define Module_LibraryVersionInfo       "5:74"
@


4.117
log
@Disable public use of new ARMops until ready
Detail:
  hdr/OSMisc, s/ARMops - Don't expose the new ARMops via OS_MMUControl 2, they haven't been fully tested/developed yet
Admin:
  Builds, untested


Version 5.73. Tagged as 'Kernel-5_73'
@
text
@d1 1
a1 1
/* (5.73)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.73
d9 1
a9 1
#define Module_Date_CMHG                13 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "5.73"
#define Module_Version                  573
d14 1
a14 1
#define Module_Date                     "13 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "13-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "5.73"
#define Module_HelpVersion              "5.73 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:73"
@


4.116
log
@Implement some ARM11 errata workarounds
Detail:
  s/ARMops, s/HAL - Add workarounds for some of the scary errata that were previously weren't dealing with (720013, 716151, 714068)
Admin:
  Tested on Raspberry Pi 1


Version 5.72. Tagged as 'Kernel-5_72'
@
text
@d1 1
a1 1
/* (5.72)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.72
d11 2
a12 2
#define Module_MajorVersion             "5.72"
#define Module_Version                  572
d21 3
a23 3
#define Module_FullVersion              "5.72"
#define Module_HelpVersion              "5.72 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:72"
@


4.115
log
@Implement support for cacheable pagetables
Detail:
  Modern ARMs (ARMv6+) introduce the possibility for the page table walk hardware to make use of the data cache(s) when performing memory accesses. This can significantly reduce the cost of a TLB miss on the system, and since the accesses are cache-coherent with the CPU it allows us to make the page tables cacheable for CPU (program) accesses also, improving the performance of page table manipulation by the OS.
  Even on ARMs where the page table walk can't use the data cache, it's been measured that page table manipulation operations can still benefit from placing the page tables in write-through or bufferable memory.
  So with that in mind, this set of changes updates the OS to allow cacheable/bufferable page tables to be used by the OS + MMU, using a system-appropriate cache policy.
  File changes:
  - hdr/KernelWS - Allocate workspace for storing the page flags that are to be used by the page tables
  - hdr/OSMem - Re-specify CP_CB_AlternativeDCache as having a different behaviour on ARMv6+ (inner write-through, outer write-back)
  - hdr/Options - Add CacheablePageTables option to allow switching back to non-cacheable page tables if necessary. Add SyncPageTables var which will be set {TRUE} if either the OS or the architecture requires a DSB after writing to a faulting page table entry.
  - s/ARM600, s/VMSAv6 - Add new SetTTBR & GetPageFlagsForCacheablePageTables functions. Update VMSAv6 for wider XCBTable (now 2 bytes per element)
  - s/ARMops - Update pre-ARMv7 MMU_Changing ARMops to drain the write buffer on entry if cacheable pagetables are in use (ARMv7+ already has this behaviour due to architectural requirements). For VMSAv6 Normal memory, change the way that the OS encodes the cache policy in the page table entries so that it's more compatible with the encoding used in the TTBR.
  - s/ChangeDyn - Update page table page flag handling to use PageTable_PageFlags. Make use of new PageTableSync macro.
  - s/Exceptions, s/AMBControl/memmap - Make use of new PageTableSync macro.
  - s/HAL - Update MMU initialisation sequence to make use of PageTable_PageFlags + SetTTBR
  - s/Kernel - Add PageTableSync macro, to be used after any write to a faulting page table entry
  - s/MemInfo - Update OS_Memory 0 page flag conversion. Update OS_Memory 24 to use new symbol for page table access permissions.
  - s/MemMap2 - Use PageTableSync. Add routines to enable/disable cacheable pagetables
  - s/NewReset - Enable cacheable pagetables once we're fully clear of the MMU initialision sequence (doing earlier would be trickier due to potential double-mapping)
Admin:
  Tested on pretty much everything currently supported
  Delivers moderate performance benefits to page table ops on old systems (e.g. 10% faster), astronomical benefits on some new systems (up to 8x faster)
  Stats: https://www.riscosopen.org/forum/forums/3/topics/2728?page=2#posts-58015


Version 5.71. Tagged as 'Kernel-5_71'
@
text
@d1 1
a1 1
/* (5.71)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.71
d11 2
a12 2
#define Module_MajorVersion             "5.71"
#define Module_Version                  571
d21 3
a23 3
#define Module_FullVersion              "5.71"
#define Module_HelpVersion              "5.71 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:71"
@


4.114
log
@Make MMU_Changing ARMops perform the sub-operations in a sensible order
Detail:
  For a while we've known that the correct way of doing cache maintenance on ARMv6+ (e.g. when converting a page from cacheable to non-cacheable) is as follows:
  1. Write new page table entry
  2. Flush old entry from TLB
  3. Clean cache + drain write buffer
  The MMU_Changing ARMops (e.g. MMU_ChangingEntry) implement the last two items, but in the wrong order. This has caused the operations to fall out of favour and cease to be used, even in pre-ARMv6 code paths where the effects of improper cache/TLB management perhaps weren't as readily visible.
  This change re-specifies the relevant ARMops so that they perform their sub-operations in the correct order to make them useful on modern ARMs, updates the implementations, and updates the kernel to make use of the ops whereever relevant.
  File changes:
  - Docs/HAL/ARMop_API - Re-specify all the MMU_Changing ARMops to state that they are for use just after a page table entry has been changed (as opposed to before - e.g. 5.00 kernel behaviour). Re-specify the cacheable ones to state that the TLB invalidatation comes first.
  - s/ARM600, s/ChangeDyn, s/HAL, s/MemInfo, s/VMSAv6, s/AMBControl/memmap - Replace MMU_ChangingUncached + Cache_CleanInvalidate pairs with equivalent MMU_Changing op
  - s/ARMops - Update ARMop implementations to do everything in the correct order
  - s/MemMap2 - Update ARMop usage, and get rid of some lingering sledgehammer logic from ShuffleDoublyMappedRegionForGrow
Admin:
  Tested on pretty much everything currently supported


Version 5.70. Tagged as 'Kernel-5_70'
@
text
@d1 1
a1 1
/* (5.70)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.70
d11 2
a12 2
#define Module_MajorVersion             "5.70"
#define Module_Version                  570
d21 3
a23 3
#define Module_FullVersion              "5.70"
#define Module_HelpVersion              "5.70 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:70"
@


4.113
log
@Place restrictions on the use of cacheable doubly-mapped DAs
Detail:
  The kernel has always allowed software to create cacheable doubly-mapped DAs, despite the fact that the VIVT caches used on ARMv5 and below would have no way of keeping both of the mappings coherent
  This change places restrictions the following restrictions on doubly-mapped areas, to ensure that cache settings which can't be supported by the cache architecture of the CPU can't be selected:
  * On ARMv6 and below, cacheable doubly-mapped areas aren't supported.
    * Although ARMv6 has VIPT data caches, it's also subject to page colouring constraints which would require us to force the DA size to be a multiple of 16k. So for now keep things simple and disallow cacheable doubly-mapped areas on ARMv6.
  * On ARMv7 and above, cacheable doubly-mapped areas are allowed, but only if they are marked non-executable
    * The blocker to allowing executable cacheable doubly-mapped areas are the VIPT instruction caches; OS_SynchroniseCodeAreas (or callers of it) would need to know that a doubly-mapped area is in use so that they can flush both mappings from the I-cache. Although some chips do have PIPT instruction caches, again it isn't really worth supporting executable cacheable doubly-mapped areas at the moment.
  These changes also allow us to get rid of the expensive 'sledgehammer' logic when dealing with doubly-mapped areas
  File changes:
  - s/ARM600, s/VMSAv6 - Remove the sledgehammer logic, only perform cache/TLB maintenance for the required areas
  - s/ChangeDyn - Implement the required checks
  - s/MemMap2 - Move some cache maintenance logic into RemoveCacheabilityR0ByMinusR2, which previously would have had to be performed by the caller due to the sledgehammer paranoia
Admin:
  Cacheable doubly-mapped DAs tested on iMx6 (tried making screen memory write-through cacheable; decent performance gain seen)
  Note OS_Memory 0 "make temporarily uncacheable" doesn't work on doubly-mapped areas, so cacheable doubly-mapped areas are not yet safe for general DMA


Version 5.69. Tagged as 'Kernel-5_69'
@
text
@d1 1
a1 1
/* (5.69)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.69
d11 2
a12 2
#define Module_MajorVersion             "5.69"
#define Module_Version                  569
d21 3
a23 3
#define Module_FullVersion              "5.69"
#define Module_HelpVersion              "5.69 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:69"
@


4.112
log
@Add new ARMops. Add macros which map the ARMv7/v8 cache/TLB maintenance mnemonics (as featured in recent ARM ARMs) to MCR ops.
Detail:
  - Docs/HAL/ARMop_API - Document the new ARMops. These ops are intended to help with future work (DMA without OS_Memory 0 "make temp uncacheable", and minimising cache maintenance when unmapping pages) and aren't in use just yet.
  - hdr/Copro15ops - Add new macros for ARMv7+ which map the mnemonics seen in recent ARM ARMs to the corresponding MCR ops. This should make things easier when cross-referencing docs and reduce the risk of typos.
  - hdr/KernelWS - Shuffle kernel workspace a bit to make room for the new ARMops
  - hdr/OSMisc - Expose new ARMops via OS_MMUControl 2
  - s/ARMops - Implement the new ARMops. Change the ARMv7+ ARMops to use the new mnemonic macros. Also get rid of myDSB / myISB usage from ARMv7+ code paths; use DSB/ISB/etc. directly to ensure correct behaviour
  - s/HAL - Mnemonic + ISB/DSB updates. Change software RAM clear to do 16 bytes at a time for kernel workspace instead of 32 to allow the kernel workspace tweaks to work.
Admin:
  Binary diff shows that mnemonics map to the original MCR ops correctly
  Note: Raspberry Pi builds will now emit lots of warnings due to increased DSB/ISB instruction use. However it should be safe to ignore these as they should only be present in v7+ code paths.
  Note: New ARMops haven't been tested yet, will be disabled (or at least hidden from user code) in a future checkin


Version 5.68. Tagged as 'Kernel-5_68'
@
text
@d1 1
a1 1
/* (5.68)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.68
d11 2
a12 2
#define Module_MajorVersion             "5.68"
#define Module_Version                  568
d21 3
a23 3
#define Module_FullVersion              "5.68"
#define Module_HelpVersion              "5.68 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:68"
@


4.111
log
@Make s/ChangeDyn slightly more readable by splitting some routines out into a separate file
Detail:
  s/MemMap2 - New file containing assorted low-level memory mapping routines taken from s/ChangeDyn. N.B. There's no special significance to this being named "MemMap2", it's just a name that stuck due to some earlier (abandoned) changes which added a file named "MemMap".
  s/ChangeDyn - Remove the routines/chunks of code that were moved to s/MemMap2. Also some duplicate code removal (Regular DA grow code and DoTheGrowNotSpecified are now rely on the new DoTheGrowCommon routine for doing the actual grow)
  s/GetAll - GET s/MemMap2 at an appropriate time
Admin:
  Tested on pretty much everything currently supported


Version 5.67. Tagged as 'Kernel-5_67'
@
text
@d1 1
a1 1
/* (5.67)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.67
d11 2
a12 2
#define Module_MajorVersion             "5.67"
#define Module_Version                  567
d21 3
a23 3
#define Module_FullVersion              "5.67"
#define Module_HelpVersion              "5.67 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:67"
@


4.110
log
@Reimplement AMBControl ontop of the PMP system
Detail:
  With this set of changes, each AMB node is now the owner of a fake DANode which is linked to a PMP.
  From a user's perspective the behaviour of AMBControl is the same as before, but rewriting it to use PMPs internally offers the following (potential) benefits:
  * Reduction in the amount of code which messes with the CAM & page tables, simplifying future work/maintenance. Some of the AMB ops (grow, shrink) now just call through to OS_ChangeDynamicArea. However all of the old AMB routines were well-optimised, so to avoid a big performance hit for common operations not all of them have been removed (e.g. mapslot / mapsome). Maybe one day these optimal routines will be made available for use by regular PMP DAs.
  * Removal of the slow Service_MemoryMoved / Service_PagesSafe handlers that had to do page list fixup after the core kernel had reclaimed/moved pages. Since everything is a PMP, the kernel will now deal with this on behalf of AMB.
  * Removal of a couple of other slow code paths (e.g. Do_AMB_MakeUnsparse calls from OS_ChangeDynamicArea)
  * Potential for more flexible mapping of application space in future, e.g. sparse allocation of memory to the wimp slot
  * Simpler transition to an ASID-based task swapping scheme on ARMv6+?
  Other changes of note:
  * AMB_LazyMapIn switch has been fixed up to work correctly (i.e. turning it off now disables lazy task swapping and all associated code instead of producing a build error)
  * The DANode for the current app should be accessed via the GetAppSpaceDANode macro. This will either return the current AMB DANode, or AppSpaceDANode (if e.g. pre-Wimp). However be aware that AppSpaceDANode retains the legacy behaviour of having a base + size relative to &0, while the AMB DANodes (identifiable via the PMP flag) are sane and have their base + size relative to &8000.
  * Mostly-useless DebugAborts switch removed
  * AMBPhysBin (page number -> phys addr lookup table) removed. Didn't seem to give any tangible performance benefit, and was imposing hidden restrictions on memory usage (all phys RAM fragments in PhysRamTable must be multiple of 512k). And if it really was a good optimisation, surely it should have been applied to all areas of the kernel, not just AMB!
  Other potential future improvements:
  * Turn the fake DANodes into real dynamic areas, reducing the amount of special code needed in some places, but allow the DAs to be hidden from OS_DynamicArea 3 so that apps/users won't get too confused
  * Add a generic abort trapping system to PMPs/DAs (lazy task swapping abort handler is still a special case)
  File changes:
  - s/ARM600, s/VMSAv6, s/ExtraSWIs - Remove DebugAborts
  - s/ArthurSWIs - Remove AMB service call handler dispatch
  - s/ChangeDyn - AMB_LazyMapIn switch fixes. Add alternate internal entry points for some PMP ops to allow the DANode to be specified (used by AMB)
  - s/Exceptions - Remove DebugAborts, AMB_LazyMapIn switch fixes
  - s/Kernel - Define GetAppSpaceDANode macro, AMB_LazyMapIn switch fix
  - s/MemInfo - AMB_LazyMapIn switch fixes
  - s/AMBControl/AMB - Update GETs
  - s/AMBControl/Memory - Remove block size quantisation, AMB_BlockResize (page list blocks are now allocated by PMP code)
  - s/AMBControl/Options - Remove PhysBin definitions, AMBMIRegWords (moved to Workspace file), AMB_LimpidFreePool switch. Add AMB_Debug switch.
  - s/AMBControl/Workspace - Update AMBNode to contain an embedded DANode. Move AMBMIRegWords here from Options file.
  - s/AMBControl/allocate - Fake DA node initialisation
  - s/AMBControl/deallocate - Add debug output
  - s/AMBControl/growp, growshrink, mapslot, mapsome, shrinkp - Rewrite to use PMP ops where possible, add debug output
  - s/AMBControl/main - Remove PhysBin initialisation. Update the enumerate/mjs_info call.
  - s/AMBControl/memmap - Low-level memory mapping routines updated or rewritten as appropriate.
  - s/AMBControl/readinfo - Update to cope with DANode
  - s/AMBControl/service - Remove old service call handlers
  - s/AMBControl/handler - DA handler for responding to PMP calls from OS_ChangeDynamicArea; just calls through to growpages/shrinkpages as appropriate.
Admin:
  Tested on pretty much everything currently supported


Version 5.66. Tagged as 'Kernel-5_66'
@
text
@d1 1
a1 1
/* (5.66)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.66
d11 2
a12 2
#define Module_MajorVersion             "5.66"
#define Module_Version                  566
d21 3
a23 3
#define Module_FullVersion              "5.66"
#define Module_HelpVersion              "5.66 (13 Dec 2016)"
#define Module_LibraryVersionInfo       "5:66"
@


4.109
log
@Update error block validity checks to cope with Wimp "program errors"
Detail:
  s/Kernel - With RISC OS 3.5, one of the ways Wimp_ReportError detects program errors is by bits 24-29 of the error number being set to 011011. Update our error block validity checks to allow that pattern through.
Admin:
  Tested on Raspberry Pi
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/3/topics/3540?page=2#posts-60089


Version 5.65. Tagged as 'Kernel-5_65'
@
text
@d1 1
a1 1
/* (5.65)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.65
d9 1
a9 1
#define Module_Date_CMHG                04 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "5.65"
#define Module_Version                  565
d14 1
a14 1
#define Module_Date                     "04 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "04-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "5.65"
#define Module_HelpVersion              "5.65 (04 Dec 2016)"
#define Module_LibraryVersionInfo       "5:65"
@


4.108
log
@Issue Service_ModulePostInit when really post init
Previously, the service call was sent when the module was in the service call chain/command table hash/SWI table hash, but not actually in the list of modules - so any recipient trying to look something up with OS_Module would get denial that the module existed.
Move the service call issue step to *after* it's linked into the module list.

Version 5.64. Tagged as 'Kernel-5_64'
@
text
@d1 1
a1 1
/* (5.64)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.64
d9 1
a9 1
#define Module_Date_CMHG                25 Nov 2016
d11 2
a12 2
#define Module_MajorVersion             "5.64"
#define Module_Version                  564
d14 1
a14 1
#define Module_Date                     "25 Nov 2016"
d16 1
a16 1
#define Module_ApplicationDate          "25-Nov-16"
d21 3
a23 3
#define Module_FullVersion              "5.64"
#define Module_HelpVersion              "5.64 (25 Nov 2016)"
#define Module_LibraryVersionInfo       "5:64"
@


4.107
log
@Don't flag FileCore disc error error numbers as being invalid
Detail:
  s/Kernel - FileCore breaks the usual error number rules for disc errors and uses numbers of the form &XX01YYC7, which was tripping up the sanity checks due to making use of the reserved bits 24-30. Add an extra rule to allow that form of errors through.
Admin:
  Tested on Raspberry Pi
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/3/topics/3540#posts-58635


Version 5.63. Tagged as 'Kernel-5_63'
@
text
@d1 1
a1 1
/* (5.63)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.63
d9 1
a9 1
#define Module_Date_CMHG                26 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "5.63"
#define Module_Version                  563
d14 1
a14 1
#define Module_Date                     "26 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "26-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "5.63"
#define Module_HelpVersion              "5.63 (26 Oct 2016)"
#define Module_LibraryVersionInfo       "5:63"
@


4.106
log
@Prevent disabling of the D-cache on Cortex-A53. Other OS_MMUControl 0 fixes.
Detail:
  On Cortex-A53, a load/store exclusive instruction will abort if it targets non-cacheable memory or if the D-cache is disabled. Since the correct operation of these instructions is important to the OS and apps, it makes sense to prevent *Cache Off / OS_MMUControl 0 from being able to disable the D-cache on such systems.
  hdr/OSMisc, s/ARMops - Add new OS_PlatformFeatures 0 flag to indicate when disabling of the D-cache isn't allowed
  s/VMSAv6 - Update MMUControl_ModifyControl to force the D-cache to always be on when the "unsafe to disable D-cache" PlatformFeatures flag is set. Also, disallow mismatched I+D cache settings if we have an L2 cache (causes issues due to IMB ops only flushing to PoU), and fix dangerous D-cache invalidation when it's only the I-cache which is being disabled
  s/ARM600 - Clean up MMUControl_ModifyControl a bit so that it's a closer match to the VMSAv6 version, and fix the dangerous D-cache invalidation.
Admin:
  Tested on ARM11, Cortex-A7, Cortex-A53


Version 5.62. Tagged as 'Kernel-5_62'
@
text
@d1 1
a1 1
/* (5.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.62
d9 1
a9 1
#define Module_Date_CMHG                17 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "5.62"
#define Module_Version                  562
d14 1
a14 1
#define Module_Date                     "17 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "17-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "5.62"
#define Module_HelpVersion              "5.62 (17 Oct 2016)"
#define Module_LibraryVersionInfo       "5:62"
@


4.105
log
@Fix wrong XCBTable being used for pre-rev T StrongARMs. Update HAL UART API docs.
Detail:
  s/ARMops - Fix pre-rev T StrongARMs using the wrong XCBTable, causing invalid page flags to be used for the write-through cache policy
  Docs/HAL/Serial - Update HAL UART API docs. Mostly filling in some blanks, but also correcting a couple of things, and documenting new Features bit 4, LineStatus bit 8, and the effect on InterruptID.
Admin:
  Tested on pre-rev T StrongARM RiscPC


Version 5.61. Tagged as 'Kernel-5_61'
@
text
@d1 1
a1 1
/* (5.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.61
d9 1
a9 1
#define Module_Date_CMHG                09 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "5.61"
#define Module_Version                  561
d14 1
a14 1
#define Module_Date                     "09 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "09-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "5.61"
#define Module_HelpVersion              "5.61 (09 Oct 2016)"
#define Module_LibraryVersionInfo       "5:61"
@


4.104
log
@Fix CAM indexing in DoTheGrowPageUnavailable
Detail:
  s/ChangeDyn - A routine that was missed during the upgrade from 8 byte CAM entries to 16 byte CAM entries, DoTheGrowPageUnavailable was using still using the old CAM entry size, potentially corrupting the CAM whenever it was called (i.e. if a DA grow requested a page that had already been claimed for exclusive use by someone else)
Admin:
  Tested on BB-xM


Version 5.60. Tagged as 'Kernel-5_60'
@
text
@d1 1
a1 1
/* (5.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.60
d9 1
a9 1
#define Module_Date_CMHG                13 Sep 2016
d11 2
a12 2
#define Module_MajorVersion             "5.60"
#define Module_Version                  560
d14 1
a14 1
#define Module_Date                     "13 Sep 2016"
d16 1
a16 1
#define Module_ApplicationDate          "13-Sep-16"
d21 3
a23 3
#define Module_FullVersion              "5.60"
#define Module_HelpVersion              "5.60 (13 Sep 2016)"
#define Module_LibraryVersionInfo       "5:60"
@


4.103
log
@Misc memory management fixes
Detail:
  s/ChangeDyn - Fix register corruption in PMP_LogOp when mapping a page into a location that already contains a page. Fix excessive TLB flush in AreaShrink.
  s/ARM600, s/VMSAv6 - Add asserts to GetTempUncache to detect invalid register combinations
Admin:
  Tested on BB-xM


Version 5.59. Tagged as 'Kernel-5_59'
@
text
@d1 1
a1 1
/* (5.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.59
d9 1
a9 1
#define Module_Date_CMHG                07 Sep 2016
d11 2
a12 2
#define Module_MajorVersion             "5.59"
#define Module_Version                  559
d14 1
a14 1
#define Module_Date                     "07 Sep 2016"
d16 1
a16 1
#define Module_ApplicationDate          "07-Sep-16"
d21 3
a23 3
#define Module_FullVersion              "5.59"
#define Module_HelpVersion              "5.59 (07 Sep 2016)"
#define Module_LibraryVersionInfo       "5:59"
@


4.102
log
@Fix stack imbalance and incorrect return value in OS_DynamicArea 23 (PMP resize)
Detail:
  s/ChangeDyn - When OS_DynamicArea 23 returned an error, R2 wasn't being set to zero correctly, incorrectly suggesting that a change had been made. And when a non-error resize of zero was being performed, registers were being pulled twice, resulting in a stack imbalance and crash.
Admin:
  Tested on BB-xM


Version 5.58. Tagged as 'Kernel-5_58'
@
text
@d1 1
a1 1
/* (5.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.58
d9 1
a9 1
#define Module_Date_CMHG                23 Aug 2016
d11 2
a12 2
#define Module_MajorVersion             "5.58"
#define Module_Version                  558
d14 1
a14 1
#define Module_Date                     "23 Aug 2016"
d16 1
a16 1
#define Module_ApplicationDate          "23-Aug-16"
d21 3
a23 3
#define Module_FullVersion              "5.58"
#define Module_HelpVersion              "5.58 (23 Aug 2016)"
#define Module_LibraryVersionInfo       "5:58"
@


4.101
log
@Fix OS_FindMemMapEntries
Detail:
  s/ChangeDyn - Since the introduction of the 16 byte CAM entry format, OS_FindMemMapEntries has contained a bug where requesting the details for an address which does not have an L2PT page allocated for it (e.g. a location in ROM) would result in a misaligned CAM entry pointer being generated, resulting in either a crash or incorrect data being returned
Admin:
  Tested on Raspberry Pi 2
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/4/topics/6393


Version 5.57. Tagged as 'Kernel-5_57'
@
text
@d1 1
a1 1
/* (5.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.57
d9 1
a9 1
#define Module_Date_CMHG                18 Aug 2016
d11 2
a12 2
#define Module_MajorVersion             "5.57"
#define Module_Version                  557
d14 1
a14 1
#define Module_Date                     "18 Aug 2016"
d16 1
a16 1
#define Module_ApplicationDate          "18-Aug-16"
d21 3
a23 3
#define Module_FullVersion              "5.57"
#define Module_HelpVersion              "5.57 (18 Aug 2016)"
#define Module_LibraryVersionInfo       "5:57"
@


4.100
log
@Fix OS_BreakPt when called from SVC mode
Detail:
  s/Middle - A mistake during the 32bit conversion process left OS_BreakPt attempting to use the PSR as the address of the register dump if the call came from SVC mode, most likely resulting in an abort.
Admin:
  Tested on Raspberry Pi
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/11/topics/6308#posts-56649


Version 5.56. Tagged as 'Kernel-5_56'
@
text
@d1 1
a1 1
/* (5.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.56
d9 1
a9 1
#define Module_Date_CMHG                08 Aug 2016
d11 2
a12 2
#define Module_MajorVersion             "5.56"
#define Module_Version                  556
d14 1
a14 1
#define Module_Date                     "08 Aug 2016"
d16 1
a16 1
#define Module_ApplicationDate          "08-Aug-16"
d21 3
a23 3
#define Module_FullVersion              "5.56"
#define Module_HelpVersion              "5.56 (08 Aug 2016)"
#define Module_LibraryVersionInfo       "5:56"
@


4.99
log
@Add support for shareable pages and additional access privileges
Detail:
  This set of changes:
  * Refactors page table entry encoding/decoding so that it's (mostly) performed via functions in the MMU files (s.ARM600, s.VMSAv6) rather than on an ad-hoc basis as was the case previously
  * Page table entry encoding/decoding performed during ROM init is also handled via the MMU functions, which resolves some cases where the wrong cache policy was in use on ARMv6+
  * Adds basic support for shareable pages - on non-uniprocessor systems all pages will be marked as shareable (however, we are currently lacking ARMops which broadcast cache maintenance operations to other cores, so safe sharing of cacheable regions isn't possible yet)
  * Adds support for the VMSA XN flag and the "privileged ROM" access permission. These are exposed via RISC OS access privileges 4 and above, taking advantage of the fact that 4 bits have always been reserved for AP values but only 4 values were defined
  * Adds OS_Memory 17 and 18 to convert RWX-style access flags to and from RISC OS access privelege numbers; this allows us to make arbitrary changes to the mappings of AP values 4+ between different OS/hardware versions, and allows software to more easily cope with cases where the most precise AP isn't available (e.g. no XN on <=ARMv5)
  * Extends OS_Memory 24 (CheckMemoryAccess) to return executability information
  * Adds exported OSMem header containing definitions for OS_Memory and OS_DynamicArea
  File changes:
  - Makefile - export C and assembler versions of hdr/OSMem
  - Resources/UK/Messages - Add more text for OS_Memory errors
  - hdr/KernelWS - Correct comment regarding DCacheCleanAddress. Allocate workspace for MMU_PPLTrans and MMU_PPLAccess.
  - hdr/OSMem - New file containing exported OS_Memory and OS_DynamicArea constants, and public page flags
  - hdr/Options - Reduce scope of ARM6support to only cover builds which require ARMv3 support
  - s/AMBControl/Workspace - Clarify AMBNode_PPL usage
  - s/AMBControl/growp, mapslot, mapsome, memmap - Use AreaFlags_ instead of AP_
  - s/AMBControl/main, memmap - Use GetPTE instead of generating page table entry manually
  - s/ARM600 - Remove old coments relating to lack of stack. Update BangCam to use GetPTE. Update PPL tables, removing PPLTransL1 (L1 entries are now derived from L2 table on demand) and adding a separate table for ARM6. Implement the ARM600 versions of the Get*PTE ('get page table entry') and Decode*Entry functions
  - s/ARMops - Add Init_PCBTrans function to allow relevant MMU_PPLTrans/MMU_PCBTrans pointers to be set up during the pre-MMU stage of ROM init. Update ARM_Analyse to set up the pointers that are used post MMU init.
  - s/ChangeDyn - Move a bunch of flags to hdr/OSMem. Rename the AP_ dynamic area flags to AreaFlags_ to avoid name clashes and confusion with the page table AP_ values exported by Hdr:MEMM.ARM600/Hdr:MEMM.VMSAv6. Also generate the relevant flags for OS_Memory 24 so that it can refer to the fixed areas by their name instead of hardcoding the permissions.
  - s/GetAll - GET Hdr:OSMem
  - s/HAL - Change initial page table setup to use DA/page flags and GetPTE instead of building page table entries manually. Simplify AllocateL2PT by removing the requirement for the user to supply the access perimssions that will be used for the area; instead for ARM6 we just assume that cacheable memory is the norm and set L1_U for any L1 entry we create here.
  - s/Kernel - Add GetPTE macro (for easier integration of Get*PTE functions) and GenPPLAccess macro (for easy generation of OS_Memory 24 flags)
  - s/MemInfo - Fixup OS_Memory 0 to not fail on seeing non-executable pages. Implement OS_Memory 17 & 18. Tidy up some error generation. Make OS_Memory 13 use GetPTE. Extend OS_Memory 24 to return (non-) executability information, to use the named CMA_ constants generated by s/ChangeDyn, and to use the Decode*Entry functions when it's necessary to decode page table entries.
  - s/NewReset - Use AreaFlags_ instead of AP_
  - s/VMSAv6 - Remove old comments relating to lack of stack. Update BangCam to use GetPTE. Update PPL tables, removing PPLTransL1 (L1 entries are now derived from L2 table on demand) and adding a separate table for shareable pages. Implement the VMSAv6 versions of the Get*PTE and Decode*Entry functions.
Admin:
  Tested on Raspberry Pi 1, Raspberry Pi 3, Iyonix, RPCEmu (ARM6 & ARM7), comparing before and after CAM and page table dumps to check for any unexpected differences


Version 5.55. Tagged as 'Kernel-5_55'
@
text
@d1 1
a1 1
/* (5.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.55
d9 1
a9 1
#define Module_Date_CMHG                02 Aug 2016
d11 2
a12 2
#define Module_MajorVersion             "5.55"
#define Module_Version                  555
d14 1
a14 1
#define Module_Date                     "02 Aug 2016"
d16 1
a16 1
#define Module_ApplicationDate          "02-Aug-16"
d21 3
a23 3
#define Module_FullVersion              "5.55"
#define Module_HelpVersion              "5.55 (02 Aug 2016)"
#define Module_LibraryVersionInfo       "5:55"
@


4.98
log
@Resolve 2x header clashes
hdr/AHCIDevice:
  Remove this, since it clashes with the (differing API version number) copy exported by SATADriver. Post merging the Kernel back to the trunk the newer file datestamp has meant the wrong one gets exported during any ROM build which includes both components. Since the Kernel doesn't need AHCIDevice itself, it is left to the respective client (SATADriver or AHCIDriver in this case) to export them.
hdr/ModHand:
  Resolve the longstanding clash of Module_Title with the same named symbol that CMHG uses. There are very few assembler needing to look at the module header (Kernel, FileCore, Debugger, Podule) directly, but every C module which uses CMHG and wants one of the ModHandReason values ends up with a duplicate define.
  Obsolete Arthur era Module_LoadAddr value.
ArthurSWIs.s/MoreComms.s/NewReset.s/SWINaming.s/SysComms.s/Utility.s:
  Module_Title->Module_TitleStr.
ModHand.s:
  Module_Title->Module_TitleStr.
  Recode Module_LoadAddr using the file type from Hdr:FileTypes.
GetAlls.s:
  Drop unused NVRAM and PortMan headers. Add Hdr:FileTypes.

Version 5.54. Tagged as 'Kernel-5_54'
@
text
@d1 1
a1 1
/* (5.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.54
d9 1
a9 1
#define Module_Date_CMHG                24 Jul 2016
d11 2
a12 2
#define Module_MajorVersion             "5.54"
#define Module_Version                  554
d14 1
a14 1
#define Module_Date                     "24 Jul 2016"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jul-16"
d21 3
a23 3
#define Module_FullVersion              "5.54"
#define Module_HelpVersion              "5.54 (24 Jul 2016)"
#define Module_LibraryVersionInfo       "5:54"
@


4.97
log
@Improve handling of *DUMPing a stream
The checks in *DUMP tried to spot a stream (ie. a file that can be opened with OS_Find but that OS_File 5 doesn't think is there), but in doing so never set the address or offset, so the hex values shown on the left of the screen would be whatever junk was in r2 & r3.
Reorder the tests so it starts at 0 and runs until EOF.
Make use of OSFile_ReadWithType rather than trying to deduce if it's an untyped file ourselves.
Tested with
  *DUMP random:
from SystemDevs-1_33.

Version 5.53. Tagged as 'Kernel-5_53'
@
text
@d1 1
a1 1
/* (5.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.53
d9 1
a9 1
#define Module_Date_CMHG                15 Jul 2016
d11 2
a12 2
#define Module_MajorVersion             "5.53"
#define Module_Version                  553
d14 1
a14 1
#define Module_Date                     "15 Jul 2016"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jul-16"
d21 3
a23 3
#define Module_FullVersion              "5.53"
#define Module_HelpVersion              "5.53 (15 Jul 2016)"
#define Module_LibraryVersionInfo       "5:53"
@


4.96
log
@Tidy things up a bit
Detail:
  hdr/Options - Reduce the scope of SASTMhatbroken and InterruptDelay switches so that they're only enabled when we're building for ARMv4 targets
  s/ARM600, s/VMSAv6, s/ExtraSWIs, s/Exceptions - Move duplicate code out of s/ARM600 & s/VMSAv6 and into shared locations. OS_UpdateMEMC, the bulk of OS_MMUControl, and OS_SynchroniseCodeAreas are now located in s/ExtraSWIs. Meanwhile the data & prefetch abort veneers have been moved to the new file s/Exceptions. s/ARM600 and s/VMSAv6 are now almost purely to do with the different page table formats.
  s/GetAll - GET s/Exceptions
Admin:
  Tested on Raspberry Pi


Version 5.52. Tagged as 'Kernel-5_52'
@
text
@d1 1
a1 1
/* (5.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.52
d9 1
a9 1
#define Module_Date_CMHG                30 Jun 2016
d11 2
a12 2
#define Module_MajorVersion             "5.52"
#define Module_Version                  552
d14 1
a14 1
#define Module_Date                     "30 Jun 2016"
d16 1
a16 1
#define Module_ApplicationDate          "30-Jun-16"
d21 3
a23 3
#define Module_FullVersion              "5.52"
#define Module_HelpVersion              "5.52 (30 Jun 2016)"
#define Module_LibraryVersionInfo       "5:52"
@


4.95
log
@Delete lots of old switches
Detail:
  This change gets rid of the following switches from the source (picking appropriate code paths for a 32bit HAL build):
  * FixCallBacks
  * UseProcessTransfer
  * CanLiveOnROMCard
  * BleedinDaveBell
  * NewStyleEcfs
  * DoVdu23_0_12
  * LCDPowerCtrl
  * HostVdu
  * Print
  * EmulatorSupport
  * TubeInfo
  * AddTubeBashers
  * TubeChar, TubeString, TubeDumpNoStack, TubeNewlNoStack macros
  * FIQDebug
  * VCOstartfix
  * AssemblingArthur (n.b. still defined for safety with anything in Hdr: which uses it, but not used explicitly by the kernel)
  * MouseBufferFix
  * LCDInvert
  * LCDSupport
  * DoInitialiseMode
  * Interruptible32bitModes
  * MouseBufferManager
  * StrongARM (new CacheCleanerHack and InterruptDelay switches added to hdr/Options to cover some functionality that StrongARM previously covered)
  * SAcleanflushbroken
  * StrongARM_POST
  * IrqsInClaimRelease
  * CheckProtectionLink
  * GSWorkspaceInKernelBuffers
  * EarlierReentrancyInDAShrink
  * LongCommandLines
  * ECC
  * NoSPSRcorruption
  * RMTidyDoesNowt
  * RogerEXEY
  * StorkPowerSave
  * DebugForcedReset
  * AssembleKEYV
  * AssemblePointerV
  * ProcessorVectors
  * Keyboard_Type
  Assorted old files have also been deleted.
Admin:
  Identical binary to previous revision for IOMD & Raspberry Pi builds


Version 5.51. Tagged as 'Kernel-5_51'
@
text
@d1 1
a1 1
/* (5.51)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.51
d11 2
a12 2
#define Module_MajorVersion             "5.51"
#define Module_Version                  551
d21 3
a23 3
#define Module_FullVersion              "5.51"
#define Module_HelpVersion              "5.51 (30 Jun 2016)"
#define Module_LibraryVersionInfo       "5:51"
@


4.94
log
@Delete STB code
Detail:
  This change gets rid of the following switches from the source (picking appropriate code paths for a desktop build):
  * STB
  * RO371Timings
  * NormalSpeedROMS
  * AutoSpeedROMS
  * RISCPCBurstMode
  * InterlacedPointer
  * ParallelFlashUpgrade (and s/FlashROM file)
  * Embedded_UI
  Some of the deleted code might be worth revisiting in future:
  * OS_ReadSysInfo 4 support for storing the MAC in alternate CMOS locations (including 2nd copy for error checking) or fetching via Service_MachineAddress
  * Mouse handling changes, possibly aimed at hiding the mouse pointer if a mouse isn't connected
  * More strict CMOS validation in s/NewReset
Admin:
  Identical binary to previous revision for IOMD & Raspberry Pi builds


Version 5.50. Tagged as 'Kernel-5_50'
@
text
@d1 1
a1 1
/* (5.50)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.50
d11 2
a12 2
#define Module_MajorVersion             "5.50"
#define Module_Version                  550
d21 3
a23 3
#define Module_FullVersion              "5.50"
#define Module_HelpVersion              "5.50 (30 Jun 2016)"
#define Module_LibraryVersionInfo       "5:50"
@


4.93
log
@Delete pre-HAL and 26bit code
Detail:
  This change gets rid of the following switches from the source (picking appropriate code paths for a 32bit HAL build):
  * HAL
  * HAL26
  * HAL32
  * No26bitCode
  * No32bitCode
  * IncludeTestSrc
  * FixR9CorruptionInExtensionSWI
  Various old files have also been removed (POST code, Arc/STB keyboard drivers, etc.)
Admin:
  Identical binary to previous revision for IOMD & Raspberry Pi builds


Version 5.49. Tagged as 'Kernel-5_49'
@
text
@d1 1
a1 1
/* (5.49)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.49
d11 2
a12 2
#define Module_MajorVersion             "5.49"
#define Module_Version                  549
d21 3
a23 3
#define Module_FullVersion              "5.49"
#define Module_HelpVersion              "5.49 (30 Jun 2016)"
#define Module_LibraryVersionInfo       "5:49"
@


4.92
log
@Merge HAL branch to trunk
Detail:
  This change merges the past 15+ years of HAL branch development back to the trunk.
  This is effectively the end for non-HAL builds of the kernel, as no attempt has been made to maintain it during this merge, and all non-HAL & non-32bit code will soon be removed anyway.
  Rather than list everything that's been added to the HAL branch, it's easier to describe the change in terms of the things that the HAL branch was lacking:
  * Trunk version of Docs/32bit contained updated comments for the SVC stack structure during ErrorV
  * Trunk version of s/HeapMan contained a tweak to try and reduce the number of small free blocks that are created
  * Trunk version of s/Kernel contained a change to only copy 248 bytes of the error string to the error buffer (down from 252 bytes), to take into account the extra 4 bytes needed by the PSR. However this goes against the decision that's been made in the HAL branch that the error buffer should be enlarged to 260 bytes instead (ref: https://www.riscosopen.org/tracker/tickets/201), so the HAL build will retain its current behaviour.
  * Trunk version of s/MsgCode had RMNot32bit error in the list of error messages to count when countmsgusage {TRUE}
  * Trunk version of s/PMF/i2cutils contained support for OS_Memory 5, "read/write value of NVRamWriteSize". Currently the HAL branch doesn't have a use for this (in particular, the correct NVRamWriteSize should be specified by the HAL, so there should be no need for software to change it at runtime), and so this code will remain switched out in the HAL build.
Admin:
  Tested on Raspberry Pi


Version 5.48. Tagged as 'Kernel-5_48'
@
text
@d1 1
a1 1
/* (5.48)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.48
d11 2
a12 2
#define Module_MajorVersion             "5.48"
#define Module_Version                  548
d21 3
a23 3
#define Module_FullVersion              "5.48"
#define Module_HelpVersion              "5.48 (30 Jun 2016)"
#define Module_LibraryVersionInfo       "5:48"
@


4.91
log
@Documented change to SVC stack structure during ErrorV.

Version 5.47. Tagged as 'Kernel-5_47'
@
text
@d1 1
a1 1
/* (5.47)
d4 1
a4 1
 * Last processed by srccommit version: 1.67.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.47
d9 1
a9 1
#define Module_Date_CMHG                22 Aug 2002
d11 2
a12 2
#define Module_MajorVersion             "5.47"
#define Module_Version                  547
d14 1
a14 1
#define Module_Date                     "22 Aug 2002"
d16 1
a16 2
#define Module_ApplicationDate2         "22-Aug-02"
#define Module_ApplicationDate4         "22-Aug-2002"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Kernel"
d21 3
a23 3
#define Module_FullVersion              "5.47"
#define Module_HelpVersion              "5.47 (22 Aug 2002)"
#define Module_LibraryVersionInfo       "5:47"
@


4.90
log
@  New vector allocation (external)
Detail:
  LowPriorityEventV (&28) added.
Admin:
  Received in allocations resync from Alan Glover last week.


Version 5.46. Tagged as 'Kernel-5_46'
@
text
@d1 1
a1 1
/* (5.46)
d4 1
a4 1
 * Last processed by srccommit version: 1.62.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.46
d9 1
a9 1
#define Module_Date_CMHG                08 Apr 2002
d11 2
a12 2
#define Module_MajorVersion             "5.46"
#define Module_Version                  546
d14 1
a14 1
#define Module_Date                     "08 Apr 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "08-Apr-02"
#define Module_ApplicationDate4         "08-Apr-2002"
d22 3
a24 3
#define Module_FullVersion              "5.46"
#define Module_HelpVersion              "5.46 (08 Apr 2002)"
#define Module_LibraryVersionInfo       "5:46"
@


4.90.2.1
log
@  Patch to s/PMF/osinit to support FastNC
Detail:
  FastNC has different serial init to all other boxes.
Admin:
  Tested on FastNC using Products/Ursula rev 1.196 as a base build.


Version 5.46, 4.90.2.1. Tagged as 'Kernel-5_46-4_90_2_1'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.64.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.90.2.1
#define Module_Date_CMHG                25 Jul 2002
d13 2
a14 2
#define Module_MinorVersion             "4.90.2.1"
#define Module_Date                     "25 Jul 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "25-Jul-02"
#define Module_ApplicationDate4         "25-Jul-2002"
d22 2
a23 2
#define Module_FullVersion              "5.46 (4.90.2.1)"
#define Module_HelpVersion              "5.46 (25 Jul 2002) 4.90.2.1"
@


4.89
log
@  New exports, and a bugfix to error handling.
Detail:
  * Hdr2H can cope with hdr.EnvNumbers, hdr.ModHand and hdr.Variables, so C
    versions of these headers are now exported (in addition to RISCOS.h,
    which has been exported for some time).
  * The default owner of ErrorV is responsible for filling in the error
    handler's buffer, but was failing to compensate for the PC word at the
    start of the buffer when truncating the error message, leading to
    possible overruns of the buffer.
Admin:
  Too trivial to test.

Version 5.45. Tagged as 'Kernel-5_45'
@
text
@d1 1
a1 1
/* (5.45)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.45
d9 1
a9 1
#define Module_Date_CMHG                18 Feb 2002
d11 2
a12 2
#define Module_MajorVersion             "5.45"
#define Module_Version                  545
d14 1
a14 1
#define Module_Date                     "18 Feb 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "18-Feb-02"
#define Module_ApplicationDate4         "18-Feb-2002"
d22 3
a24 3
#define Module_FullVersion              "5.45"
#define Module_HelpVersion              "5.45 (18 Feb 2002)"
#define Module_LibraryVersionInfo       "5:45"
@


4.88
log
@  Minor optimisation to the heap manager for performance enhancement.
Detail:
  When splitting a free block in order to satisfy an allocation request,
    don't split if the remaining free space falls below a specified
    threshold (<= 8 bytes) to avoid creating lots of tiny free blocks,
    but instead gift the extra 8 bytes to the newly allocated block.
    This should stop the worst case heap fragmentation seen with OS_Heap
    heaps (particular the Toolbox's dynamic area).
Admin:
  Tested in Ursula desktop build.


Version 5.44. Tagged as 'Kernel-5_44'
@
text
@d1 1
a1 1
/* (5.44)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.44
d9 1
a9 1
#define Module_Date_CMHG                05 Jun 2001
d11 2
a12 2
#define Module_MajorVersion             "5.44"
#define Module_Version                  544
d14 1
a14 1
#define Module_Date                     "05 Jun 2001"
d16 2
a17 2
#define Module_ApplicationDate2         "05-Jun-01"
#define Module_ApplicationDate4         "05-Jun-2001"
d22 3
a24 2
#define Module_FullVersion              "5.44"
#define Module_HelpVersion              "5.44 (05 Jun 2001)"
@


4.87
log
@  Added a couple of new sub-reason codes to OS_ReadSysInfo 6;
  Optimised the default IrqV handler.
Detail:
  * OS_ReadSysInfo 6 tells grubby programs lots of grubby info. This
    has been extended to include:

      18 - relocated base of OS SWI despatch table
      19 - relocated base of IRQ device head nodes
      20 - relocated end of IRQ device head nodes
      21 - top of the IRQ stack

    These values are known to be useful for debugging purposes.

  * The default IrqV handler gets the device number times three on
    entry in R0. It then went through a loop subtracting three and
    incrementing a counter to divide by three.

    This has been replaced by four ARM instructions which should
    give the same results (three to divide by three and one to set
    R0 to zero - as the old code did).

    If the device number is outside the range 0..31, the new code
    may produce inaccurate results, but this should not happen.
Admin:
  Not tested ;)

Version 5.43. Tagged as 'Kernel-5_43'
@
text
@d1 1
a1 1
/* (5.43)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.43
d8 1
a8 1
#define Module_Date_CMHG                25 May 2001
d10 2
a11 2
#define Module_MajorVersion             "5.43"
#define Module_Version                  543
d13 1
a13 1
#define Module_Date                     "25 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "25-May-01"
#define Module_ApplicationDate4         "25-May-2001"
d21 2
a22 2
#define Module_FullVersion              "5.43"
#define Module_HelpVersion              "5.43 (25 May 2001)"
@


4.86
log
@    Previous version did not work.
Detail:
    Forgot to add a section of code when merging the work - the new reson
code would not work.
Admin:
    Built and tested this time ;-)

Version 5.42. Tagged as 'Kernel-5_42'
@
text
@d1 1
a1 1
/* (5.42)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.42
d8 1
a8 1
#define Module_Date_CMHG                10 Apr 2001
d10 2
a11 2
#define Module_MajorVersion             "5.42"
#define Module_Version                  542
d13 1
a13 1
#define Module_Date                     "10 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "10-Apr-01"
#define Module_ApplicationDate4         "10-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.42"
#define Module_HelpVersion              "5.42 (10 Apr 2001)"
@


4.85
log
@    New OS_NVMemory reason code added.

Detail:
    OS_NVMemory 5 - read / write value of NVRamWriteSize
    in:  R0 = 5
         R1 = new value of NVRamWriteSize (in bytes, multiple of 256), or -1
              to return size.
    out: R1 = value of NVRamWriteSize
    This can be used to read and set the size of the protected area of NVRAM.
This is needed for Customer A 2, where there is a need to deprotect the protected
area so that NVRAM tags can be written.

Admin:
    Code by MStephens. Built and checked in by me ;-)

Version 5.41. Tagged as 'Kernel-5_41'
@
text
@d1 1
a1 1
/* (5.41)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.41
d10 2
a11 2
#define Module_MajorVersion             "5.41"
#define Module_Version                  541
d21 2
a22 2
#define Module_FullVersion              "5.41"
#define Module_HelpVersion              "5.41 (10 Apr 2001)"
@


4.84
log
@    Fix to bugzilla bug 4065

Detail:
    1MB VRAM was not being correctly identified. This was due to register
corruption in r12 in the VRAM detection routines in s.ARM600. This bug has been a longstanding one introduced in Kernel 4.69 two years ago.

Admin:
    Been put through the Kev&Mike change control process (tm).

Version 5.40. Tagged as 'Kernel-5_40'
@
text
@d1 1
a1 1
/* (5.40)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.40
d8 1
a8 1
#define Module_Date_CMHG                02 Apr 2001
d10 2
a11 2
#define Module_MajorVersion             "5.40"
#define Module_Version                  540
d13 1
a13 1
#define Module_Date                     "02 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Apr-01"
#define Module_ApplicationDate4         "02-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.40"
#define Module_HelpVersion              "5.40 (02 Apr 2001)"
@


4.83
log
@  BBE changes.
Detail:
  Also a fix to the DRAM allocation in s/ARM600 to fix address masking.
Admin:
  Required by BBE.

Version 5.39. Tagged as 'Kernel-5_39'
@
text
@d1 1
a1 1
/* (5.39)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.39
d8 1
a8 1
#define Module_Date_CMHG                05 Jan 2001
d10 2
a11 2
#define Module_MajorVersion             "5.39"
#define Module_Version                  539
d13 1
a13 1
#define Module_Date                     "05 Jan 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "05-Jan-01"
#define Module_ApplicationDate4         "05-Jan-2001"
d21 2
a22 2
#define Module_FullVersion              "5.39"
#define Module_HelpVersion              "5.39 (05 Jan 2001)"
@


4.82
log
@  32-bit kernels will refuse to initialise non 32-bit modules.
Detail:
  The kernel will examine all modules that it is requested to initialise
    and will refuse to initialise any module without a module flags word
    entry in its module header or with bit 0 the first flags word being
    clear (bit 0 being ModuleFlag_32bit)
  Error message added to all the messages files.
  New error block added to message counting block.  The Non-32-bit module
    message is not a cached error message, though.
Admin:
  Tested in 32-bit Lazarus build.

Version 5.38. Tagged as 'Kernel-5_38'
@
text
@d1 1
a1 1
/* (5.38)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.38
d8 1
a8 1
#define Module_Date_CMHG                21 Nov 2000
d10 2
a11 2
#define Module_MajorVersion             "5.38"
#define Module_Version                  538
d13 1
a13 1
#define Module_Date                     "21 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "21-Nov-00"
#define Module_ApplicationDate4         "21-Nov-2000"
d21 2
a22 2
#define Module_FullVersion              "5.38"
#define Module_HelpVersion              "5.38 (21 Nov 2000)"
@


4.81
log
@  Fixed an EXITS that should be an EXIT.
Detail:
  An EXITS without EntryS was used in a conditional block.  It does not
    need to be EXITS.
Admin:
  Only affects STB builds.
  Tested in 32-bit Lazarus build.

Version 5.37. Tagged as 'Kernel-5_37'
@
text
@d1 1
a1 1
/* (5.37)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.37
d8 1
a8 1
#define Module_Date_CMHG                17 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "5.37"
#define Module_Version                  537
d13 1
a13 1
#define Module_Date                     "17 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "17-Oct-00"
#define Module_ApplicationDate4         "17-Oct-2000"
d18 5
a22 2
#define Module_FullVersion              "5.37"
#define Module_HelpVersion              "5.37 (17 Oct 2000)"
@


4.80
log
@  Imported OS_Memory 12 from Ursula.
  Imported EarlierReentrancyinDAShrink fix from Ursula.
Detail:
  OS_Memory 12 allows the kernel to suggest physical pages to callers
    who need that sort of information without wanting to have them
    grub around in the page tables.
  EarlierReentrancyInDAShrink should allow RAMFS and FileCore to delete
    their RAMFS related dynamic areas when the Switcher is used to drag
    the RAM disc bar to zero.
Admin:
  Required by Interlace 0.63 or later.

Version 5.36. Tagged as 'Kernel-5_36'
@
text
@d1 1
a1 1
/* (5.36)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.36
d8 1
a8 1
#define Module_Date_CMHG                10 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "5.36"
#define Module_Version                  536
d13 1
a13 1
#define Module_Date                     "10 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "10-Oct-00"
#define Module_ApplicationDate4         "10-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.36"
#define Module_HelpVersion              "5.36 (10 Oct 2000)"
@


4.79
log
@  Checked for occurences of NVRam specific workspace and put in guard condition
  [ E2ROMSupport
   .....
  ]
Detail:
  Changes to s.Middle (SysReadInfo routine that used #NVRamSpeed) and
  s.PMF.i2cutils #NVRamSpeed again
Admin:
  Compiles okay
  Requires HdrSrc-0_99 or greater (for MaxI2Cspeed variable)

Version 5.35. Tagged as 'Kernel-5_35'
@
text
@d1 1
a1 1
/* (5.35)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.35
d8 1
a8 1
#define Module_Date_CMHG                08 Sep 2000
d10 2
a11 2
#define Module_MajorVersion             "5.35"
#define Module_Version                  535
d13 1
a13 1
#define Module_Date                     "08 Sep 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "08-Sep-00"
#define Module_ApplicationDate4         "08-Sep-2000"
d18 2
a19 1
#define Module_FullVersion              "5.35"
@


4.79.2.1
log
@* Converted to building with ObjAsm (but still a single object file using ORG).
* Added ARM_IMB and ARM_IMBRange SWIs as recommended by ARMv5.
* Some early prototype HAL bits popped in - a lot of source restructuring still
  to come.
* New debug target creates an AIF image with debug information, and translates
  this into an ASCII object file for the 16702B logic analyser.

Version 5.35, 4.79.2.1. Tagged as 'Kernel-5_35-4_79_2_1'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.1
#define Module_Date_CMHG                15 Sep 2000
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.1"
#define Module_Date                     "15 Sep 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "15-Sep-00"
#define Module_ApplicationDate4         "15-Sep-2000"
d18 1
a18 1
#define Module_FullVersion              "5.35 (4.79.2.1)"
@


4.79.2.2
log
@More HAL work. IOMD HAL work in progress. Lots of my own little build
scripts. Don't touch this.

Version 5.35, 4.79.2.2. Tagged as 'Kernel-5_35-4_79_2_2'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.2
#define Module_Date_CMHG                02 Oct 2000
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.2"
#define Module_Date                     "02 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Oct-00"
#define Module_ApplicationDate4         "02-Oct-2000"
d18 1
a18 2
#define Module_FullVersion              "5.35 (4.79.2.2)"
#define Module_HelpVersion              "5.35 (02 Oct 2000) (4.79.2.2)"
@


4.79.2.3
log
@partial video changes for kernel/HAL split
near-HAL code for VIDC/IOMD in vdu.vduhint
briefly tested in Ursula desktop build
still some kernel workspace dependency in near-HAL code

Version 5.35, 4.79.2.3. Tagged as 'Kernel-5_35-4_79_2_3'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.3
#define Module_Date_CMHG                03 Oct 2000
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.3"
#define Module_Date                     "03 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "03-Oct-00"
#define Module_ApplicationDate4         "03-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.3)"
#define Module_HelpVersion              "5.35 (03 Oct 2000) (4.79.2.3)"
@


4.79.2.4
log
@further kernel/HAL split work in video area
almost-HAL code for VIDC20/IOMD in vdu.vduhint, now almost divorced
from kernel workspace
tested briefly in Ursula desktop environment

Version 5.35, 4.79.2.4. Tagged as 'Kernel-5_35-4_79_2_4'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.4
#define Module_Date_CMHG                05 Oct 2000
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.4"
#define Module_Date                     "05 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "05-Oct-00"
#define Module_ApplicationDate4         "05-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.4)"
#define Module_HelpVersion              "5.35 (05 Oct 2000) (4.79.2.4)"
@


4.79.2.5
log
@More HAL work. IOMD HAL fleshed out somewhat - system gets most of the way
through initialisation.

Version 5.35, 4.79.2.5. Tagged as 'Kernel-5_35-4_79_2_5'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.5
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.5"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.5)"
#define Module_HelpVersion              "5.35 (05 Oct 2000) (4.79.2.5)"
@


4.79.2.6
log
@mjs macros switch on HAL for calling video code in HAL/pseudo HAL cases
vduhint code even more almost ready to move to HAL

Version 5.35, 4.79.2.6. Tagged as 'Kernel-5_35-4_79_2_6'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.6
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.6"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.6)"
#define Module_HelpVersion              "5.35 (05 Oct 2000) (4.79.2.6)"
@


4.79.2.7
log
@Interrupt handling tweaks.

Version 5.35, 4.79.2.7. Tagged as 'Kernel-5_35-4_79_2_7'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.7
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.7"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.7)"
#define Module_HelpVersion              "5.35 (05 Oct 2000) (4.79.2.7)"
@


4.79.2.8
log
@  Added HAL NVRAM support
Detail:
  Added the HAL NVRAM entries.
  Modified i2cutils to use the HAL entries for NVRAM and behave sensibly if the HAL reports that there is no NVRAM, in which case there must be a forced reset_cmos call so that the cache gets set up sensibly.
Admin:
  Tested under the RPC emulator and appears to be working correctly, although some calls to IIC are still being made in the no nvram case.

Version 5.35, 4.79.2.8. Tagged as 'Kernel-5_35-4_79_2_8'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.8
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.8"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.8)"
#define Module_HelpVersion              "5.35 (05 Oct 2000) (4.79.2.8)"
@


4.79.2.9
log
@add some HAL_Video calls, attempt to deal with lack of h/w scroll

Version 5.35, 4.79.2.9. Tagged as 'Kernel-5_35-4_79_2_9'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.9
#define Module_Date_CMHG                16 Oct 2000
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.9"
#define Module_Date                     "16 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "16-Oct-00"
#define Module_ApplicationDate4         "16-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.9)"
#define Module_HelpVersion              "5.35 (16 Oct 2000) (4.79.2.9)"
@


4.79.2.10
log
@second attempt at handling lack of h/w scroll

Version 5.35, 4.79.2.10. Tagged as 'Kernel-5_35-4_79_2_10'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.10
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.10"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.10)"
#define Module_HelpVersion              "5.35 (16 Oct 2000) (4.79.2.10)"
@


4.79.2.11
log
@more use of ARMops in page manipulation, change register usage of ARmops
tested by kernel boot to star prompt only

Version 5.35, 4.79.2.11. Tagged as 'Kernel-5_35-4_79_2_11'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.11
#define Module_Date_CMHG                20 Oct 2000
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.11"
#define Module_Date                     "20 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "20-Oct-00"
#define Module_ApplicationDate4         "20-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.35 (4.79.2.11)"
#define Module_HelpVersion              "5.35 (20 Oct 2000) (4.79.2.11)"
@


4.79.2.12
log
@reintroduce Ursula AMBControl, recoded with generic ARMop style, not debugged yet

Version 5.35, 4.79.2.12. Tagged as 'Kernel-5_35-4_79_2_12'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.12
#define Module_Date_CMHG                10 Nov 2000
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.12"
#define Module_Date                     "10 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "10-Nov-00"
#define Module_ApplicationDate4         "10-Nov-2000"
d18 2
a19 5
#define Module_ComponentName            "Kernel"
#define Module_ComponentPath            "RiscOS/Sources/Kernel"

#define Module_FullVersion              "5.35 (4.79.2.12)"
#define Module_HelpVersion              "5.35 (10 Nov 2000) (4.79.2.12)"
@


4.79.2.13
log
@Check-in of the few last-minute changes for the Customer L demo. Nothing
exciting, apart from an extended touchscreen API.

Version 5.35, 4.79.2.13. Tagged as 'Kernel-5_35-4_79_2_13'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.13
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.13)"
#define Module_HelpVersion              "5.35 (10 Nov 2000) (4.79.2.13)"
@


4.79.2.14
log
@First attempt at ARM9 support, and general clean-up of old ARM-specific
code, now using vectored ARMops.
Not tested.

Version 5.35, 4.79.2.14. Tagged as 'Kernel-5_35-4_79_2_14'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.14
#define Module_Date_CMHG                09 Jan 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.14"
#define Module_Date                     "09 Jan 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "09-Jan-01"
#define Module_ApplicationDate4         "09-Jan-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.14)"
#define Module_HelpVersion              "5.35 (09 Jan 2001) (4.79.2.14)"
@


4.79.2.15
log
@kernel now attempts to substitute video mode numbers in face of
h/w with limited bits-per-pixel support (not tested yet)
HAL_API document added - early draft only, of interest to those
writing or modifying HALs for new h/w
ARMop_API document added - early draft only, of interest only
to those modifying kernel to support new ARM cores
*** polite comments on HAL_API welcome ***

Version 5.35, 4.79.2.15. Tagged as 'Kernel-5_35-4_79_2_15'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.15
#define Module_Date_CMHG                12 Jan 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.15"
#define Module_Date                     "12 Jan 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "12-Jan-01"
#define Module_ApplicationDate4         "12-Jan-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.15)"
#define Module_HelpVersion              "5.35 (12 Jan 2001) (4.79.2.15)"
@


4.79.2.16
log
@  Addition of HAL UART for Customer L
Detail:
  HAL entries have been entered for the Customer L UART (very much like the ARM
PrimeCell, rather than the 16550).
Admin:
  It builds.

Version 5.35, 4.79.2.16. Tagged as 'Kernel-5_35-4_79_2_16'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.16
#define Module_Date_CMHG                01 Feb 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.16"
#define Module_Date                     "01 Feb 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "01-Feb-01"
#define Module_ApplicationDate4         "01-Feb-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.16)"
#define Module_HelpVersion              "5.35 (01 Feb 2001) (4.79.2.16)"
@


4.79.2.17
log
@Various L7200 tweaks, plus working ARM920T code.

Version 5.35, 4.79.2.17. Tagged as 'Kernel-5_35-4_79_2_17'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.17
#define Module_Date_CMHG                13 Feb 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.17"
#define Module_Date                     "13 Feb 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "13-Feb-01"
#define Module_ApplicationDate4         "13-Feb-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.17)"
#define Module_HelpVersion              "5.35 (13 Feb 2001) (4.79.2.17)"
@


4.79.2.18
log
@minor changes towards Chrontel support for Customer L demo
untested

Version 5.35, 4.79.2.18. Tagged as 'Kernel-5_35-4_79_2_18'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.18
#define Module_Date_CMHG                01 Mar 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.18"
#define Module_Date                     "01 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "01-Mar-01"
#define Module_ApplicationDate4         "01-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.18)"
#define Module_HelpVersion              "5.35 (01 Mar 2001) (4.79.2.18)"
@


4.79.2.19
log
@Added some missing IIC and USB files.
An attempt to do NVMemory by using part of the Flash that the OS is sitting
in for Customer L. Programming algorithm works, but I'm not confident that the
Kernel does the right thing yet.

Version 5.35, 4.79.2.19. Tagged as 'Kernel-5_35-4_79_2_19'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.19
#define Module_Date_CMHG                08 Mar 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.19"
#define Module_Date                     "08 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "08-Mar-01"
#define Module_ApplicationDate4         "08-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.19)"
#define Module_HelpVersion              "5.35 (08 Mar 2001) (4.79.2.19)"
@


4.79.2.20
log
@Hopefully working NVMemory on Customer L now.

Version 5.35, 4.79.2.20. Tagged as 'Kernel-5_35-4_79_2_20'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.20
#define Module_Date_CMHG                16 Mar 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.20"
#define Module_Date                     "16 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "16-Mar-01"
#define Module_ApplicationDate4         "16-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.20)"
#define Module_HelpVersion              "5.35 (16 Mar 2001) (4.79.2.20)"
@


4.79.2.21
log
@Block NVMemory write checksumming fixed.

Version 5.35, 4.79.2.21. Tagged as 'Kernel-5_35-4_79_2_21'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.21
#define Module_Date_CMHG                19 Mar 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.21"
#define Module_Date                     "19 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "19-Mar-01"
#define Module_ApplicationDate4         "19-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.21)"
#define Module_HelpVersion              "5.35 (19 Mar 2001) (4.79.2.21)"
@


4.79.2.22
log
@Modified L7200 HAL to offer 1024 bytes of "protected" NVMemory.

Version 5.35, 4.79.2.22. Tagged as 'Kernel-5_35-4_79_2_22'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.22
#define Module_Date_CMHG                20 Mar 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.22"
#define Module_Date                     "20 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "20-Mar-01"
#define Module_ApplicationDate4         "20-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.22)"
#define Module_HelpVersion              "5.35 (20 Mar 2001) (4.79.2.22)"
@


4.79.2.23
log
@tagged for HAL change

Version 5.35, 4.79.2.23. Tagged as 'Kernel-5_35-4_79_2_23'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.23
#define Module_Date_CMHG                27 Mar 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.23"
#define Module_Date                     "27 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "27-Mar-01"
#define Module_ApplicationDate4         "27-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.23)"
#define Module_HelpVersion              "5.35 (27 Mar 2001) (4.79.2.23)"
@


4.79.2.24
log
@  Fixed UART baud rate

Detail:
  MOV a3, a1 doesn't move a3 into a1...

Admin:
  Not tested.



Version 5.35, 4.79.2.24. Tagged as 'Kernel-5_35-4_79_2_24'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.24
#define Module_Date_CMHG                29 Mar 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.24"
#define Module_Date                     "29 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "29-Mar-01"
#define Module_ApplicationDate4         "29-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.24)"
#define Module_HelpVersion              "5.35 (29 Mar 2001) (4.79.2.24)"
@


4.79.2.25
log
@  Baud rate return is more correct.

Detail:
  Maths was wrong.  The returned baud rate is the crystal frequency divided
by the divisor.

Admin:
  Assembles, not tested.

Version 5.35, 4.79.2.25. Tagged as 'Kernel-5_35-4_79_2_25'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.25
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.25"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.25)"
#define Module_HelpVersion              "5.35 (29 Mar 2001) (4.79.2.25)"
@


4.79.2.25.2.1
log
@
  * Version of the Kernel and L7200 HAL created for the Customer M demonstrator.

Detail:

  * Changes applied to version 5.35.4.79.2.29 merged into 5.35.4.79.2.25
    because the former fails to boot.

Admin:

  * For use in Customer M demonstration builds only, until such time when the
    problem in the newer Kernel/HAL combination is identified and solved.

  * Changes already made in later versions of the HAL, so THESE CHANGES
    DO NOT NECESSITATE A MERGE.

Version 5.35, 4.79.2.25.2.1. Tagged as 'Kernel-5_35-4_79_2_25_2_1'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.25.2.1
#define Module_Date_CMHG                30 May 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.25.2.1"
#define Module_Date                     "30 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "30-May-01"
#define Module_ApplicationDate4         "30-May-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.25.2.1)"
#define Module_HelpVersion              "5.35 (30 May 2001) (4.79.2.25.2.1)"
@


4.79.2.25.2.2
log
@    Import of Customer M Demo changes for Rev C boards.

Detail:
    Added new build variant, which is the same as before, but swaps blue and
red. Sigh. Stopped STBUZ toggling.

Admin:
    If this does not work, blame Kev. If it works, thank me ;-)

Version 5.35, 4.79.2.25.2.2. Tagged as 'Kernel-5_35-4_79_2_25_2_2'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.25.2.2
#define Module_Date_CMHG                02 Jul 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.25.2.2"
#define Module_Date                     "02 Jul 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Jul-01"
#define Module_ApplicationDate4         "02-Jul-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.25.2.2)"
#define Module_HelpVersion              "5.35 (02 Jul 2001) (4.79.2.25.2.2)"
@


4.79.2.26
log
@Various fixes to NVMemory code. Really needs to be re-engineered.

Version 5.35, 4.79.2.26. Tagged as 'Kernel-5_35-4_79_2_26'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.26
#define Module_Date_CMHG                11 Apr 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.26"
#define Module_Date                     "11 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "11-Apr-01"
#define Module_ApplicationDate4         "11-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.26)"
#define Module_HelpVersion              "5.35 (11 Apr 2001) (4.79.2.26)"
@


4.79.2.27
log
@Processor name printing fixed.

Version 5.35, 4.79.2.27. Tagged as 'Kernel-5_35-4_79_2_27'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.27
#define Module_Date_CMHG                20 Apr 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.27"
#define Module_Date                     "20 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "20-Apr-01"
#define Module_ApplicationDate4         "20-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.27)"
#define Module_HelpVersion              "5.35 (20 Apr 2001) (4.79.2.27)"
@


4.79.2.28
log
@spectacular new OS_Memory reason codes
13 map permanent I/O space, return logical address
14 access temporary physical mapping
15 release temporary physical mapping
DA creation and I/O space creation now avoid collision if address
space fills

Version 5.35, 4.79.2.28. Tagged as 'Kernel-5_35-4_79_2_28'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.28
#define Module_Date_CMHG                01 May 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.28"
#define Module_Date                     "01 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "01-May-01"
#define Module_ApplicationDate4         "01-May-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.28)"
#define Module_HelpVersion              "5.35 (01 May 2001) (4.79.2.28)"
@


4.79.2.29
log
@
  * Variant of the Kernel and L7200 HAL that supports multiple hardware
    targets.

Detail:

  * Must now specify the hardware target
    to ensure that the L7200 HAL is built with the appropriate tweaks to
    support each.  This is achieved by specifying:

              -options "BOARD=<target>"

    within the components file for the HAL_L7200 component.

Admin:

  * Tested on Customer L build to create a ROM suitable for the Customer M unit
    (that has only minor differences to the Customer L).

  * Affects all projects using the L7200 HAL, which must now specify the
    hardware target in the components file.

Version 5.35, 4.79.2.29. Tagged as 'Kernel-5_35-4_79_2_29'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.29
#define Module_Date_CMHG                11 May 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.29"
#define Module_Date                     "11 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "11-May-01"
#define Module_ApplicationDate4         "11-May-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.29)"
#define Module_HelpVersion              "5.35 (11 May 2001) (4.79.2.29)"
@


4.79.2.30
log
@* Fixed the IIC code.
* Kernel puts sensible default FIQ handler in through the HAL.
* Fix to temporary page uncaching code.

Version 5.35, 4.79.2.30. Tagged as 'Kernel-5_35-4_79_2_30'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.30
#define Module_Date_CMHG                17 May 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.30"
#define Module_Date                     "17 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "17-May-01"
#define Module_ApplicationDate4         "17-May-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.30)"
#define Module_HelpVersion              "5.35 (17 May 2001) (4.79.2.30)"
@


4.79.2.31
log
@Reimplement Lazy task swapping, an amusing idea from Ursula,
would have done it sooner but couldn't be bothered (humour).
Currently activates for all ARMs flagged as base-restored
abort model. No handling of eg. StrongARM pre-revT bug, but
then the kernel no longer runs on StrongARM (progress).
Still some details to fix: all aborts in current app space
assumed to be missing pages, but this must be fixed to
handle abort code in app space, things like debuggers
marking code read only.

Plus, small fixes:
  OS_Memory 8 returns vaguely useful info for RAM,VRAM
  in HAL build (temporary partial implementation)
  Broken handling of old BBC commands with (fx,tv etc)
  with no spaces fixed (fudgeulike code from Ursula,
  now 32-bit).

Version 5.35, 4.79.2.31. Tagged as 'Kernel-5_35-4_79_2_31'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.31
#define Module_Date_CMHG                22 May 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.31"
#define Module_Date                     "22 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "22-May-01"
#define Module_ApplicationDate4         "22-May-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.31)"
#define Module_HelpVersion              "5.35 (22 May 2001) (4.79.2.31)"
@


4.79.2.32
log
@Further work on Lazy task swapping:
  hooks to give correct mapping info for OS_Memory 0
  same for OS_ReadMemMapEntries
  same for OS_FindMemMapEntries
  Lazy fixup routine no longer assumes an abort in current
  app space must be a truant page. However, work in this
  area not complete (no support yet for abort handler code
  in app space itself, eg. for C trampoline)
Good to know this will be a big performance boost when
our products use one monolithic application (sarcasm).
Ta

Version 5.35, 4.79.2.32. Tagged as 'Kernel-5_35-4_79_2_32'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.32
#define Module_Date_CMHG                06 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.32"
#define Module_Date                     "06 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "06-Jun-01"
#define Module_ApplicationDate4         "06-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.32)"
#define Module_HelpVersion              "5.35 (06 Jun 2001) (4.79.2.32)"
@


4.79.2.33
log
@* Allows interrupt-driven use of PointerV (as well as polled).
* Allows HAL-driven software resets.
* Sound buffers corrected to be uncacheable.

Version 5.35, 4.79.2.33. Tagged as 'Kernel-5_35-4_79_2_33'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.33
#define Module_Date_CMHG                11 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.33"
#define Module_Date                     "11 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "11-Jun-01"
#define Module_ApplicationDate4         "11-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.33)"
#define Module_HelpVersion              "5.35 (11 Jun 2001) (4.79.2.33)"
@


4.79.2.34
log
@Moved IOAllocPtr and IOAllocLimit to SkippedTables - the ARM9 got away with
it because of the writeback cache, but poor souls like Simon condemned to
an eternity of the ARM7 were a bit stuffed.

Version 5.35, 4.79.2.34. Tagged as 'Kernel-5_35-4_79_2_34'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.34
#define Module_Date_CMHG                13 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.34"
#define Module_Date                     "13 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "13-Jun-01"
#define Module_ApplicationDate4         "13-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.34)"
#define Module_HelpVersion              "5.35 (13 Jun 2001) (4.79.2.34)"
@


4.79.2.35
log
@
  * Added FIQ disabling code to HAL entry table.

Detail:

  * (As above.)  The HAL entry table was missing the HAL_FIQDisableCode
    entry, causing assertion checks to fail.

Admin:

  * Problem found during Customer L build.

  * Built but untested.

Version 5.35, 4.79.2.35. Tagged as 'Kernel-5_35-4_79_2_35'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.35
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.35"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.35)"
#define Module_HelpVersion              "5.35 (13 Jun 2001) (4.79.2.35)"
@


4.79.2.36
log
@Changes to Lazy task swapping to support abort handler in abort
mode (now that we can count to 32).
LazyFixup now ensures all app pages are mapped in before handing
on a real (no-lazy) abort. This allows an abort handler in app
space itself, without scrambling the details of the original
abort (via a lazy abort in abort mode).
Many a happy minute spent coding and testing for recursive
aborts and fixups, but lets just pretend it doesn't happen
shall we.
Tested with simple popbang code on ARM9 desktop build.

Version 5.35, 4.79.2.36. Tagged as 'Kernel-5_35-4_79_2_36'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.36
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.36"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.36)"
#define Module_HelpVersion              "5.35 (13 Jun 2001) (4.79.2.36)"
@


4.79.2.37
log
@Merge in long command line support from Ursula kernel.
Look for LongCommandLine flag, command line size currently
set at 1k.
For HAL/32bit builds, the kernel buffer space is at high
(top bit set) address, which may break some code using signed
comparisons. So *beware* that there may be some latent
bugs in old kernel code using these buffers, not yet found.
One such bug, in s.Arthur2 found and fixed.
Tested moderately on ARM9 desktop build.
Lovely to reimplement things I did two and half years ago.

Version 5.35, 4.79.2.37. Tagged as 'Kernel-5_35-4_79_2_37'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.37
#define Module_Date_CMHG                15 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.37"
#define Module_Date                     "15 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "15-Jun-01"
#define Module_ApplicationDate4         "15-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.37)"
#define Module_HelpVersion              "5.35 (15 Jun 2001) (4.79.2.37)"
@


4.79.2.38
log
@Reimplement enhancements to kernel Dynamic Area support from
Ursula. Quite a hairy code merge really, so let's hope it is
worth it to someone. What you get (back after 2 or 3 years):
- much more efficient for largish numbers of DAs (relevance
  to current build = approx 0)
- fancy reason codes to support fast update of
  Switcher bar display (relevance = 0)
- support for clamped maximum area sizes, to avoid address
  space exhaustion with big memory (relevance = 0)
- better implementation of shrinkable DAs, performance
  wise (if lots of DAs, relevance = approx 0)
- support for 'Sparse' DAs. Holey dynamic areas, Batman!
  (relevance, go on someone use the darned things)
Moderately development tested on HAL/32bit ARM9 desktop.
Note the Switcher should be compiled to use the new
reason codes 6&7, for fabled desktop builds.

Also, during this work, so I could see the wood for the
trees, redid some source code clean up, removing pre-Medusa
stuff (like I did about 3 years ago on Ursula, sigh). That's
why loads of source files have changed. The new DA stuff
is confined pretty much to hdr.KernelWS and s.ChangeDyn.

Ta.

Version 5.35, 4.79.2.38. Tagged as 'Kernel-5_35-4_79_2_38'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.38
#define Module_Date_CMHG                18 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.38"
#define Module_Date                     "18 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "18-Jun-01"
#define Module_ApplicationDate4         "18-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.38)"
#define Module_HelpVersion              "5.35 (18 Jun 2001) (4.79.2.38)"
@


4.79.2.39
log
@L7200 HAL turns on the necessary clocks for the SIC (AC'97) interface. Also
makes sure the codec is held in reset on Customer M/L boards.

Version 5.35, 4.79.2.39. Tagged as 'Kernel-5_35-4_79_2_39'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.39
#define Module_Date_CMHG                21 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.39"
#define Module_Date                     "21 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "21-Jun-01"
#define Module_ApplicationDate4         "21-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.39)"
#define Module_HelpVersion              "5.35 (21 Jun 2001) (4.79.2.39)"
@


4.79.2.40
log
@fix bug in oscli gstrans handling (a problem provoked by
long command lines with top bit set buffer addresses
and not fixed properly). Problem was mistaken rejection
of gstrans'd parameters other than at beginning of
buffer.

Tested on simple desktop build for Risc PC

Version 5.35, 4.79.2.40. Tagged as 'Kernel-5_35-4_79_2_40'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.40
#define Module_Date_CMHG                22 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.40"
#define Module_Date                     "22 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "22-Jun-01"
#define Module_ApplicationDate4         "22-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.40)"
#define Module_HelpVersion              "5.35 (22 Jun 2001) (4.79.2.40)"
@


4.79.2.41
log
@1) Bring IOMD HAL more up to date. Add support for new
call HAL_CleanerSpace (preparation for StrongARM kernel
support).

2) In kernel, add HAL_CleanerSpace call (preparation for
StrongARM and XScale core support). Fix bug found with
ARMv3 support during test on Risc PC.

3) Implement new API for kernel SWIs that have used top
bits of addresses as flags. The new API has an extra
flag that must be set, so kernel can distinguish and
support both APIs. The reason for all this is that
addresses are 32-bits now, people, keep up there. Briefly:

  OS_HeapSort
    bit 31 of r0 set for new API, r1 is full 32-bit address
    flags move from r1 bits 31-29 to r0 bits 30-28

  OS_ReadLine
    bit 31 of r1 set for new API, r0 is full 32-bit address
    flags move from bits 31,30 of r0 to bits 30,29 of r1

  OS_SubstituteArgs
    bit 31 of r2 set for new API, r0 is full 32-bit address
    flag moves from bit 31 of r0 to bit 30 of r2

Tested on Risc PC and briefly on Customer A 2

Ta

Version 5.35, 4.79.2.41. Tagged as 'Kernel-5_35-4_79_2_41'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.41
#define Module_Date_CMHG                26 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.41"
#define Module_Date                     "26 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "26-Jun-01"
#define Module_ApplicationDate4         "26-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.41)"
#define Module_HelpVersion              "5.35 (26 Jun 2001) (4.79.2.41)"
@


4.79.2.42
log
@StrongARM is back, and this time it's provisional!

IOMD HAL:
  enables fast clock for StrongARM on Medusa h/w

Kernel:
  ARMops for StrongARM implemented. Tested moderately on
  HAL/32-bit minimal desktop build for Risc PC. Could do
  with more testing later. eg. does reentrant cache
  cleaning support really work?
  Lazy task swapping is enabled for revT or later, wahey.

Version 5.35, 4.79.2.42. Tagged as 'Kernel-5_35-4_79_2_42'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.42
#define Module_Date_CMHG                27 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.42"
#define Module_Date                     "27 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "27-Jun-01"
#define Module_ApplicationDate4         "27-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.42)"
#define Module_HelpVersion              "5.35 (27 Jun 2001) (4.79.2.42)"
@


4.79.2.43
log
@L7200 made consistent with Kernel - should build now.
Work-around for L7200 palette programming bug added.

Version 5.35, 4.79.2.43. Tagged as 'Kernel-5_35-4_79_2_43'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.43
#define Module_Date_CMHG                29 Jun 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.43"
#define Module_Date                     "29 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "29-Jun-01"
#define Module_ApplicationDate4         "29-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.43)"
#define Module_HelpVersion              "5.35 (29 Jun 2001) (4.79.2.43)"
@


4.79.2.44
log
@Customer M demo branch merged back.

Version 5.35, 4.79.2.44. Tagged as 'Kernel-5_35-4_79_2_44'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.44
#define Module_Date_CMHG                04 Jul 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.44"
#define Module_Date                     "04 Jul 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "04-Jul-01"
#define Module_ApplicationDate4         "04-Jul-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.44)"
#define Module_HelpVersion              "5.35 (04 Jul 2001) (4.79.2.44)"
@


4.79.2.45
log
@A little bit of magic to make DMA the highest priority interrupt on the L7200
so Ethernet doesn't make sound go clicky.

Version 5.35, 4.79.2.45. Tagged as 'Kernel-5_35-4_79_2_45'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG        4.79.2.45
d12 1
a12 1
#define Module_MinorVersion             "4.79.2.45"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.45)"
#define Module_HelpVersion              "5.35 (04 Jul 2001) (4.79.2.45)"
@


4.79.2.46
log
@    Change for Customer M build.

Detail:
    The Kernel now sets "ProtectStationID" on the basis of the Embedded_UI
flag, rather than the STB flag, so you're able to set the bottom byte of your
IP address in IPConfig.

Admin:
    Untested.

Version 5.35, 4.79.2.46. Tagged as 'Kernel-5_35-4_79_2_46'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.46
#define Module_Date_CMHG                11 Jul 2001
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.46"
#define Module_Date                     "11 Jul 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "11-Jul-01"
#define Module_ApplicationDate4         "11-Jul-2001"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.46)"
#define Module_HelpVersion              "5.35 (11 Jul 2001) (4.79.2.46)"
@


4.79.2.47
log
@  IIC code is now re-entrant. Also a bugfix.
Detail:
  I pinched the IIC code from here to build MPEGDriver-0_32-1_33_2_2; now
  that I've added re-entrancy there (MPEGDriver-0_32-1_33_2_4), I'm folding
  the changes back in here, in case it's ever of use to someone else.
  Re-entrancy is achieved by restricting register use to r0-r3,r10,r11,CPSR
  so that re-entered code can complete any pending IIC operation by
  pulling those registers from the IRQ stack, before executing the new
  operation.
  The bugfix is regarding a continued read transaction - previously, the
  final byte read of a read transaction was never acknowledged; it needs to
  be acknowledged if it is immediately followed by another read transaction
  without its own repeated Start condition.
Admin:
  Tested as part of MPEGDriver, but not as part of a kernel build.

Version 5.35, 4.79.2.47. Tagged as 'Kernel-5_35-4_79_2_47'
@
text
@a3 1
 * Last processed by srccommit version: 1.62.
d7 2
a8 2
#define Module_MinorVersion_CMHG        4.79.2.47
#define Module_Date_CMHG                07 Feb 2002
d12 2
a13 2
#define Module_MinorVersion             "4.79.2.47"
#define Module_Date                     "07 Feb 2002"
d15 2
a16 2
#define Module_ApplicationDate2         "07-Feb-02"
#define Module_ApplicationDate4         "07-Feb-2002"
d21 2
a22 3
#define Module_FullVersion              "5.35 (4.79.2.47)"
#define Module_HelpVersion              "5.35 (07 Feb 2002) 4.79.2.47"
#define Module_LibraryVersionInfo       "5:35"
@


4.79.2.48
log
@Lots of Tungsten work.

Version 5.35, 4.79.2.48. Tagged as 'Kernel-5_35-4_79_2_48'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.48
#define Module_Date_CMHG                07 Oct 2002
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.48"
#define Module_Date                     "07 Oct 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "07-Oct-02"
#define Module_ApplicationDate4         "07-Oct-2002"
d22 2
a23 2
#define Module_FullVersion              "5.35 (4.79.2.48)"
#define Module_HelpVersion              "5.35 (07 Oct 2002) 4.79.2.48"
@


4.79.2.49
log
@  Mostly device stuff.
Detail:
  * Implemented OS_Hardware 2, 3 and 4 as described in Docs.HAL.NewAPI.
  * Added new OS->HAL and HAL->OS routines to register HAL devices with the
    OS during hard resets.
  * Updated Docs.HAL.NewAPI to correct inconsistencies, fill in missing
    definitions, and allow for interrupt sharing.
  * Now uses OS_LeaveOS to trigger callbacks after ROM module init.
Admin:
  Untested. Requires new HAL.

Version 5.35, 4.79.2.49. Tagged as 'Kernel-5_35-4_79_2_49'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.49
#define Module_Date_CMHG                16 Oct 2002
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.49"
#define Module_Date                     "16 Oct 2002"
d16 2
a17 1
#define Module_ApplicationDate          "16-Oct-02"
d22 2
a23 2
#define Module_FullVersion              "5.35 (4.79.2.49)"
#define Module_HelpVersion              "5.35 (16 Oct 2002) 4.79.2.49"
@


4.79.2.50
log
@In the No26bitCode case (ie when abort handlers are entered in ABT32 mode),
if lazy task swapping was enabled and a data abort occurred that was not a
page translation fault, then the code in AMB_LazyFixUp to map in the whole
application slot was being circumvented, leading to problems for abort
handlers in application space because r14_abt was corrupted by any abort
due to accessing the abort handler itself. The test of the FSR (to
compensate for the FAR being unusable for external aborts) which prompted
the circumvention has therefore been moved inside AMB_LazyFixup.
Also now preserves the FSR and FAR across AMB_LazyFixUp, so they are now
visible from application abort handlers if desired.

Version 5.35, 4.79.2.50. Tagged as 'Kernel-5_35-4_79_2_50'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.50
#define Module_Date_CMHG                28 Oct 2002
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.50"
#define Module_Date                     "28 Oct 2002"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-02"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.50)"
#define Module_HelpVersion              "5.35 (28 Oct 2002) 4.79.2.50"
@


4.79.2.51
log
@  Commit of kernel as featured in release 5.00.
Detail:
  Lots of changes since last version, at least the following:
  * Updated OS timestamp, removed alpha status
  * Negative INKEY OS version changed to &AA
  * GraphicsV is now alocated vector number &2A
  * ROM moved up to &FC000000
  * Max application slot increased to 512 Mbytes (for now)
  * Max size of RMA increased to 256 Mbytes
  * RMA is now first-created dynamic area (so it gets lowest address after
    top of application slot)
  * OS_Memory 10 reimplemeted
  * New OS_ReadSysInfo 6 values 18-22 added
  * OS_ReadSysInfo 8 gains flag bit to indicate soft power-off
  * Misc internal top-bit-set-address fixes
  * *ChangeDynamicArea can take sizes in megabytes or gigabytes
  * Magic word "&off" in R0 passed to OS_Reset powers down if possible
  * Added acceleration: block copy; CLS; text window scroll up; rectangle
    fill
  * Disabled LED flashing in page mode (liable to crash)
  * Masked sprite plot and VDU 5 text avoids reading the screen if possible
  * Framestore made USR mode accessible
  * Fix for VDU 5,127 bug - now relies on font definitions being in extreme
    quarters of memory, rather than bottom half
  * Allocated 64-bit OS_Convert... SWIs
  * IIC errors use allocated error numbers
  * Looks for Dallas RTC before Philips RTC because we're using a Philips
    NVRAM device with the same ID
  * Fix to bug that meant the oscillator in the Dallas RTC wasn't enabled
  * Default mouse type (USB) changed to allocated number
  * Ram disc max size increased to 128 Mbytes (Ursula merge) and made
    cacheable for StrongARMs (not XScale)
  * Branch through zero handler now works in USR mode, by use of a
    trampoline in the system stack to allow PC-relative register storage
  * Address exception handler changed to not use 0 as workspace
  * OS_Memory 13 extended to allow specification of cacheability and access
    privileges
  * Added OS_Memory 16 to return important memory addresses
  * RISCOS_MapInIO() takes cacheable flag in bit 3, access permissions in
    bits 10 and 11, doubly-mapped flag in bit 20, and access permissions
    specified flag in bit 21
  * Bug fix in last version for application abort handlers didn't quite
    work; register shuffle required
  * "Module is not 32-bit compatible" error now reports the module name
  * Default configured language changed from 10 to 11 (now Desktop again)

Version 5.35, 4.79.2.51. Tagged as 'Kernel-5_35-4_79_2_51'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.51
#define Module_Date_CMHG                30 Nov 2002
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.51"
#define Module_Date                     "30 Nov 2002"
d16 1
a16 1
#define Module_ApplicationDate          "30-Nov-02"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.51)"
#define Module_HelpVersion              "5.35 (30 Nov 2002) 4.79.2.51"
@


4.79.2.52
log
@  HAL device support, and a couple of new service calls.
Detail:
  * Rejigged documented meaning of device "Location" field so that we can
    fit full PCI locations in.
  * Defined lots of device "Type" values in Hdr:HALDevice.
  * Removed obsolete DMA-related HAL entries in Hdr:HALEntries (no longer
    required by DMAManager 0_15-4_4_2_6, no longer provided by Tungsten HAL
    0.07).
  * OS_Hardware 2 and 3 actually work now.
  * Changed OS_Hardware 4 to take a maximum major version number to match.
  * HAL workspace is now USR mode readable.
  * Service calls issued after module initialisation/finalisation (see
    Docs.ModPostServ).
Admin:
  OS_Hardware tested, service calls not tested.

Version 5.35, 4.79.2.52. Tagged as 'Kernel-5_35-4_79_2_52'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.52
#define Module_Date_CMHG                13 Dec 2002
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.52"
#define Module_Date                     "13 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "13-Dec-02"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.52)"
#define Module_HelpVersion              "5.35 (13 Dec 2002) 4.79.2.52"
@


4.79.2.53
log
@Added 256-colour version of the (high-resolution only) teletext code,
and support for teletext when hardware scroll is disabled. Both are required
for Tungsten.
Turned off the module init/final service calls, since we still don't have an
allocation for them.
Upped the OS version number to 5.01.

Version 5.35, 4.79.2.53. Tagged as 'Kernel-5_35-4_79_2_53'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.53
#define Module_Date_CMHG                18 Dec 2002
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.53"
#define Module_Date                     "18 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "18-Dec-02"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.53)"
#define Module_HelpVersion              "5.35 (18 Dec 2002) 4.79.2.53"
@


4.79.2.54
log
@Added some symbols to the export hdr.DMADevice to define the HAL device ID
codes within each Type.
Also enabled the Service_ModulePostInit/Final service calls now that the
service call allocations have been confirmed.

Version 5.35, 4.79.2.54. Tagged as 'Kernel-5_35-4_79_2_54'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.54
#define Module_Date_CMHG                22 Jan 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.54"
#define Module_Date                     "22 Jan 2003"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jan-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.54)"
#define Module_HelpVersion              "5.35 (22 Jan 2003) 4.79.2.54"
@


4.79.2.55
log
@Support for keys held down in the HAL at power on.
*Configure ANYTHINGsize was broken due to not setting R0 to ReadUnsigned
IIC ack message uninternationalised
OS_Memory was saying we only had 4M of RAM
VDU4 scrolling when output was switched to sprite was causing corruption
on use of CTRL-J and CTRL-K
Default SystemSize CMOS set to 32k

Version 5.35, 4.79.2.55. Tagged as 'Kernel-5_35-4_79_2_55'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.55
#define Module_Date_CMHG                27 Jan 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.55"
#define Module_Date                     "27 Jan 2003"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jan-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.55)"
#define Module_HelpVersion              "5.35 (27 Jan 2003) 4.79.2.55"
@


4.79.2.56
log
@  Miscellaneous stuff.
Detail:
  * Merged in the change to RISC OS 4.02 kernel that moved the GSTrans
    workspace out of scratch space.
  * Fixed a few bugs in callback postponement, and interrupt holes in
    callback dispatch. See Docs.CallbackChange for full info.
  * Fixed SystemSizeCMOS to SysHeapCMOS - wouldn't build as was.
  * Added an export of a C version of Hdr:HALDevice, based on the Hdr2H
    translation but with an additional struct definition. Required by
    SoundControl 1.00.
  * Added some additional location and ID allocations to Hdr:HALDevice.
    Required by today's HAL and SoundControl.
Admin:
  Partially tested.

Version 5.35, 4.79.2.56. Tagged as 'Kernel-5_35-4_79_2_56'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.56
#define Module_Date_CMHG                21 Feb 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.56"
#define Module_Date                     "21 Feb 2003"
d16 1
a16 1
#define Module_ApplicationDate          "21-Feb-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.56)"
#define Module_HelpVersion              "5.35 (21 Feb 2003) 4.79.2.56"
@


4.79.2.57
log
@Should fix Alt-Escape so that it (a) clears the PendingAlt bit again, and
(b) doesn't unbalance the SVC stack.

Version 5.35, 4.79.2.57. Tagged as 'Kernel-5_35-4_79_2_57'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.57
#define Module_Date_CMHG                28 Feb 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.57"
#define Module_Date                     "28 Feb 2003"
d16 1
a16 1
#define Module_ApplicationDate          "28-Feb-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.57)"
#define Module_HelpVersion              "5.35 (28 Feb 2003) 4.79.2.57"
@


4.79.2.58
log
@OSDelink/RelinkApp now work on the list in opposite orders so that
the order of vector claims doesn't get toggled.
Fix for *FX5 not working due to a TST having been swapped for CMP.
Checkprotectionlink option added to HAL version so CMOS lock is
implemented.
Updated HAL docs.

Version 5.35, 4.79.2.58. Tagged as 'Kernel-5_35-4_79_2_58'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.58
#define Module_Date_CMHG                02 Mar 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.58"
#define Module_Date                     "02 Mar 2003"
d16 1
a16 1
#define Module_ApplicationDate          "02-Mar-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.58)"
#define Module_HelpVersion              "5.35 (02 Mar 2003) 4.79.2.58"
@


4.79.2.59
log
@Huge update to L7200 HAL for Customer M 2 demo - now runs with 5.02 Kernel
used in Tungsten.
Added "fast" flash tool for Customer L, allowing ROMs to be sent serially at
115200 baud not 9600 baud.
Fix to VDU despatch for ARMv4 and later.
Fixes to power on delete keyboard and keyboard timeout
Implemented MemoryReadPhys and MemoryAmounts with the HAL.

Version 5.35, 4.79.2.59. Tagged as 'Kernel-5_35-4_79_2_59'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.59
#define Module_Date_CMHG                31 Mar 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.59"
#define Module_Date                     "31 Mar 2003"
d16 1
a16 1
#define Module_ApplicationDate          "31-Mar-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.59)"
#define Module_HelpVersion              "5.35 (31 Mar 2003) 4.79.2.59"
@


4.79.2.60
log
@Version increased to dizzy 5.03

Version 5.35, 4.79.2.60. Tagged as 'Kernel-5_35-4_79_2_60'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.60
#define Module_Date_CMHG                15 Apr 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.60"
#define Module_Date                     "15 Apr 2003"
d16 1
a16 1
#define Module_ApplicationDate          "15-Apr-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.60)"
#define Module_HelpVersion              "5.35 (15 Apr 2003) 4.79.2.60"
@


4.79.2.61
log
@Fixed bug in KeyV handling: if it was called before the keyboard handler was
installed, it would abort reading from an address that used to be in the
logical copy of physical space on an IOMD machine. This manifested itself
during software-initiated resets as an abort during ROM init, leaving you
with an apparently dead machine.

Version 5.35, 4.79.2.61. Tagged as 'Kernel-5_35-4_79_2_61'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.61
#define Module_Date_CMHG                02 Dec 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.61"
#define Module_Date                     "02 Dec 2003"
d16 1
a16 1
#define Module_ApplicationDate          "02-Dec-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.61)"
#define Module_HelpVersion              "5.35 (02 Dec 2003) 4.79.2.61"
@


4.79.2.62
log
@Increased OS version number to 5.04.

Version 5.35, 4.79.2.62. Tagged as 'Kernel-5_35-4_79_2_62'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.62
#define Module_Date_CMHG                19 Dec 2003
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.62"
#define Module_Date                     "19 Dec 2003"
d16 1
a16 1
#define Module_ApplicationDate          "19-Dec-03"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.62)"
#define Module_HelpVersion              "5.35 (19 Dec 2003) 4.79.2.62"
@


4.79.2.63
log
@OS date brought into this year.
Also, at John's request, added hints about where to find copyright date
information elsewhere in the build.

Version 5.35, 4.79.2.63. Tagged as 'Kernel-5_35-4_79_2_63'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.63
#define Module_Date_CMHG                05 Jan 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.63"
#define Module_Date                     "05 Jan 2004"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jan-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.63)"
#define Module_HelpVersion              "5.35 (05 Jan 2004) 4.79.2.63"
@


4.79.2.64
log
@Increased OS version number to 5.05.

Version 5.35, 4.79.2.64. Tagged as 'Kernel-5_35-4_79_2_64'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.64
#define Module_Date_CMHG                17 Feb 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.64"
#define Module_Date                     "17 Feb 2004"
d16 1
a16 1
#define Module_ApplicationDate          "17-Feb-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.64)"
#define Module_HelpVersion              "5.35 (17 Feb 2004) 4.79.2.64"
@


4.79.2.65
log
@A new date for RISC OS 5.05.

Version 5.35, 4.79.2.65. Tagged as 'Kernel-5_35-4_79_2_65'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.65
#define Module_Date_CMHG                04 Mar 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.65"
#define Module_Date                     "04 Mar 2004"
d16 1
a16 1
#define Module_ApplicationDate          "04-Mar-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.65)"
#define Module_HelpVersion              "5.35 (04 Mar 2004) 4.79.2.65"
@


4.79.2.66
log
@* HAL can choose to limit amount of screen memory to allocate
  [Not fully implemented - for now leaves at least 16MB free if only
  one RAM area; was 1MB].
* Added HAL_USBControllerInfo, HAL_MonitorLeadID and HAL_Video_Render.
* Added HAL->OS call OS_IICOpV.
* OS_MMUControl now allows independent control of I and C bits.
* Added facility to deactivate keyboard debounce (magic word "NoKd" in
  R2 in KeyV 0).
* Fixed problem with RAM amounts not a multiple of 4MB.
* Supremacy bit (in VDU 19) now sets all 8 bits of supremacy.
* Added PaletteV 14 (reads gamma tables).
* Added Supremacy transfer functions (like gamma correction, but for
  supremacy). Allows easy global supremacy effects in a mode-independent
  fashion. Controlled with PaletteV 15,16.
* Added modes 50-53 (320x240, 1,2,4,8bpp). Intended for small LCD.
* Added 13.5kHz versions of TV modes (selected by Hdr:Machine).
* Upped desktop version to 5.06.

Version 5.35, 4.79.2.66. Tagged as 'Kernel-5_35-4_79_2_66'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.66
#define Module_Date_CMHG                06 May 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.66"
#define Module_Date                     "06 May 2004"
d16 1
a16 1
#define Module_ApplicationDate          "06-May-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.66)"
#define Module_HelpVersion              "5.35 (06 May 2004) 4.79.2.66"
@


4.79.2.67
log
@Now pads its HAL entry table with NullHALEntry if the HAL is providing fewer
entries than the Kernel needs. Helps internal Kernel use of CallHAL, but
doesn't affect external OS_Hardware users.

Version 5.35, 4.79.2.67. Tagged as 'Kernel-5_35-4_79_2_67'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.67
#define Module_Date_CMHG                07 May 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.67"
#define Module_Date                     "07 May 2004"
d16 1
a16 1
#define Module_ApplicationDate          "07-May-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.67)"
#define Module_HelpVersion              "5.35 (07 May 2004) 4.79.2.67"
@


4.79.2.68
log
@  Added four new VDU variables.
Detail:
  174: left border size
  175: bottom border size
  176: right border size
  177: top border size
Admin:
  Not tested.

Version 5.35, 4.79.2.68. Tagged as 'Kernel-5_35-4_79_2_68'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.68
#define Module_Date_CMHG                18 Jun 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.68"
#define Module_Date                     "18 Jun 2004"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jun-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.68)"
#define Module_HelpVersion              "5.35 (18 Jun 2004) 4.79.2.68"
@


4.79.2.69
log
@Added UnthreadV (vector &2B). Called near the end of despatch of the
outermost interrupt, in IRQ32/26 mode with IRQs disabled, just before
transient and non-transient callback checking is performed. Suitable for
implementing a CBAI replacement.

Version 5.35, 4.79.2.69. Tagged as 'Kernel-5_35-4_79_2_69'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.69
#define Module_Date_CMHG                21 Jun 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.69"
#define Module_Date                     "21 Jun 2004"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jun-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.69)"
#define Module_HelpVersion              "5.35 (21 Jun 2004) 4.79.2.69"
@


4.79.2.70
log
@  Bugfixes to OS_Bytes 13 and 14.
Detail:
  Event numbers greater than 31 are possible, it's just that OS_GenerateEvent
  doesn't bother cheking the event semaphores for them. However, the value
  returned in R1 from these OS_Bytes always indicated that such events were
  disabled. This suggests that OS_GenerateEvent was not always so, but the
  initials in comments there suggest the change was about RISC OS 3.0.
  The OS_Bytes now correctly reflect OS_GenerateEvent behaviour.
  Another bug fix is that once the event semaphores had saturated at 255,
  OS_Byte 13 was still happy to decrement the semaphore, so for example 256
  enables followed by 255 disables would have disabled the event.
Admin:
  Not tested.

Version 5.35, 4.79.2.70. Tagged as 'Kernel-5_35-4_79_2_70'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.70
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.70"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.70)"
#define Module_HelpVersion              "5.35 (21 Jun 2004) 4.79.2.70"
@


4.79.2.71
log
@* Changed some STB switches to Embedded_UI
* Added use of CDVPoduleIRQs (from Hdr:Machine)
* Fixed checksum corruption in OS_NVMemory block writes ending just below
  the checksum byte.
* Fixed R4 corruption by OS_Byte 162 with certain HALs.

Version 5.35, 4.79.2.71. Tagged as 'Kernel-5_35-4_79_2_71'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.71
#define Module_Date_CMHG                25 Jun 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.71"
#define Module_Date                     "25 Jun 2004"
d16 1
a16 1
#define Module_ApplicationDate          "25-Jun-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.71)"
#define Module_HelpVersion              "5.35 (25 Jun 2004) 4.79.2.71"
@


4.79.2.72
log
@Changed switch for source of UtilityModule version number to be Embedded_UI
rather than STB.

Version 5.35, 4.79.2.72. Tagged as 'Kernel-5_35-4_79_2_72'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.72
#define Module_Date_CMHG                05 Jul 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.72"
#define Module_Date                     "05 Jul 2004"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jul-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.72)"
#define Module_HelpVersion              "5.35 (05 Jul 2004) 4.79.2.72"
@


4.79.2.73
log
@  s.ArthurSWIS  change line 608 to use R2 as temp space.. R3 was needed
Detail:

Admin:
  Tested in ROM at Castle


Version 5.35, 4.79.2.73. Tagged as 'Kernel-5_35-4_79_2_73'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.73
#define Module_Date_CMHG                12 Aug 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.73"
#define Module_Date                     "12 Aug 2004"
d16 1
a16 1
#define Module_ApplicationDate          "12-Aug-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.73)"
#define Module_HelpVersion              "5.35 (12 Aug 2004) 4.79.2.73"
@


4.79.2.74
log
@   fix for invalid cmos checksum computation on iyonix
   new version date for 5.07
Detail:
   CheckSumBlock called IIC_OpV to checksum byte 0 of CMOS, but read back the
   resultant checksum from the wrong offset (#20.. new R1 value)..  now
   corrected to #24 as the correct offset (approx line 997).

Admin:
   tested at castle in iyonix
   castle added IP


Version 5.35, 4.79.2.74. Tagged as 'Kernel-5_35-4_79_2_74'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.74
#define Module_Date_CMHG                06 Sep 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.74"
#define Module_Date                     "06 Sep 2004"
d16 1
a16 1
#define Module_ApplicationDate          "06-Sep-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.74)"
#define Module_HelpVersion              "5.35 (06 Sep 2004) 4.79.2.74"
@


4.79.2.75
log
@   reverse previous change to s.i2cutils .. the issue now tracked to
   Tungsten HAL IIC_Transfer not initialising the checksum
Detail:

Admin:
   tested at castle.. again!
   castle added IP


Version 5.35, 4.79.2.75. Tagged as 'Kernel-5_35-4_79_2_75'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.75
#define Module_Date_CMHG                08 Sep 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.75"
#define Module_Date                     "08 Sep 2004"
d16 1
a16 1
#define Module_ApplicationDate          "08-Sep-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.75)"
#define Module_HelpVersion              "5.35 (08 Sep 2004) 4.79.2.75"
@


4.79.2.76
log
@   corrected 'nicety' in version date.. 8 Sep changed to 08 Sep
Detail:
Admin:
  castle IP


Version 5.35, 4.79.2.76. Tagged as 'Kernel-5_35-4_79_2_76'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.76
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.76"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.76)"
#define Module_HelpVersion              "5.35 (08 Sep 2004) 4.79.2.76"
@


4.79.2.77
log
@  Change to calling conditions of UnthreadV.
Detail:
  Previously, UnthreadV was only called when the IRQsema chain was empty, the
  link for the just-completed interrupt having just been removed. However,
  the information in the link is necessary to allow OS_Heap to be called from
  UnthreadV context, and patching up IRQsema within the UnthreadV handler
  prevents the implementation of a prioritised threading scheme. As a result,
  we must call UnthreadV every time the interrupt dispatch unthreads, and
  leave it up to the UnthreadV handler to distinguish between return to
  thread context and return from a nested interrupt handler.
Admin:
  Will require some sort of patch to enable heap-safe prioritised threading
  on RISC OS-STB 5.0.0 or RISC OS 5.07, the only two released OSes with the
  previous UnthreadV behaviour.

Version 5.35, 4.79.2.77. Tagged as 'Kernel-5_35-4_79_2_77'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.77
#define Module_Date_CMHG                06 Oct 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.77"
#define Module_Date                     "06 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "06-Oct-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.77)"
#define Module_HelpVersion              "5.35 (06 Oct 2004) 4.79.2.77"
@


4.79.2.78
log
@  Bugfix and header change.
Detail:
  * I noticed in passing that the default exception handlers were broken for
    non-IOMD machines if the exception was raised in FIQ mode - unless you
    had a very large application slot, then the machine would lock up. Now
    properly HAL-ised.
  * Added a new event number, allocated for PRISM use back in June.
Admin:
  Not tested. However, it can't make the situation any worse!

Version 5.35, 4.79.2.78. Tagged as 'Kernel-5_35-4_79_2_78'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.78
#define Module_Date_CMHG                13 Oct 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.78"
#define Module_Date                     "13 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.78)"
#define Module_HelpVersion              "5.35 (13 Oct 2004) 4.79.2.78"
@


4.79.2.79
log
@        added knowledge of GraphicsV_IICOp and default call to
        HAL_Video_IIC_Op
Detail:
Admin:
     JB  Castle IP

Version 5.35, 4.79.2.79. Tagged as 'Kernel-5_35-4_79_2_79'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.79
#define Module_Date_CMHG                29 Oct 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.79"
#define Module_Date                     "29 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "29-Oct-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.79)"
#define Module_HelpVersion              "5.35 (29 Oct 2004) 4.79.2.79"
@


4.79.2.80
log
@       update version string to RISC OS 5.08
Detail:
Admin:


Version 5.35, 4.79.2.80. Tagged as 'Kernel-5_35-4_79_2_80'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.80
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.80"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.80)"
#define Module_HelpVersion              "5.35 (29 Oct 2004) 4.79.2.80"
@


4.79.2.81
log
@     several mode:
     1: default ticker based vsync generated whenever no device present to do so
     2: graphicsv handling and spec updated to use the hi 8 bits in the
        reason code (R4) to define the display number. Kernel only knows
        of display 0
Detail:
Admin:
     tested castle  castle added ip


Version 5.35, 4.79.2.81. Tagged as 'Kernel-5_35-4_79_2_81'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.81
#define Module_Date_CMHG                02 Nov 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.81"
#define Module_Date                     "02 Nov 2004"
d16 1
a16 1
#define Module_ApplicationDate          "02-Nov-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.81)"
#define Module_HelpVersion              "5.35 (02 Nov 2004) 4.79.2.81"
@


4.79.2.82
log
@       ensure FIQ as IRQ irq chain is correctly responded to..
Detail: Kevin work, in response to D Ellis fault find
Admin:
      Castle IP


Version 5.35, 4.79.2.82. Tagged as 'Kernel-5_35-4_79_2_82'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.82
#define Module_Date_CMHG                04 Nov 2004
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.82"
#define Module_Date                     "04 Nov 2004"
d16 1
a16 1
#define Module_ApplicationDate          "04-Nov-04"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.82)"
#define Module_HelpVersion              "5.35 (04 Nov 2004) 4.79.2.82"
@


4.79.2.83
log
@        re date riscos 5.08 for better release rom
Detail:
Admin:


Version 5.35, 4.79.2.83. Tagged as 'Kernel-5_35-4_79_2_83'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.83
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.83"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.83)"
#define Module_HelpVersion              "5.35 (04 Nov 2004) 4.79.2.83"
@


4.79.2.84
log
@Added option to disable RTC support (via Hdr:Machine).

Version 5.35, 4.79.2.84. Tagged as 'Kernel-5_35-4_79_2_84'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.84
#define Module_Date_CMHG                21 Mar 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.84"
#define Module_Date                     "21 Mar 2005"
d16 1
a16 1
#define Module_ApplicationDate          "21-Mar-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.84)"
#define Module_HelpVersion              "5.35 (21 Mar 2005) 4.79.2.84"
@


4.79.2.85
log
@Added code for hardware acceleration of "scroll down" function. Untested.

Version 5.35, 4.79.2.85. Tagged as 'Kernel-5_35-4_79_2_85'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.85
#define Module_Date_CMHG                04 May 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.85"
#define Module_Date                     "04 May 2005"
d16 1
a16 1
#define Module_ApplicationDate          "04-May-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.85)"
#define Module_HelpVersion              "5.35 (04 May 2005) 4.79.2.85"
@


4.79.2.86
log
@	version number change for tungsten -> 5.09
Detail:
Admin:


Version 5.35, 4.79.2.86. Tagged as 'Kernel-5_35-4_79_2_86'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.86
#define Module_Date_CMHG                18 May 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.86"
#define Module_Date                     "18 May 2005"
d16 1
a16 1
#define Module_ApplicationDate          "18-May-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.86)"
#define Module_HelpVersion              "5.35 (18 May 2005) 4.79.2.86"
@


4.79.2.87
log
@Added new HAL Timer entries for shared interrupts.

Version 5.35, 4.79.2.87. Tagged as 'Kernel-5_35-4_79_2_87'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.87
#define Module_Date_CMHG                09 Jun 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.87"
#define Module_Date                     "09 Jun 2005"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jun-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.87)"
#define Module_HelpVersion              "5.35 (09 Jun 2005) 4.79.2.87"
@


4.79.2.88
log
@	updated kernel to RO 5.10 release message

Detail:
Admin:


Version 5.35, 4.79.2.88. Tagged as 'Kernel-5_35-4_79_2_88'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.88
#define Module_Date_CMHG                12 Sep 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.88"
#define Module_Date                     "12 Sep 2005"
d16 1
a16 1
#define Module_ApplicationDate          "12-Sep-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.88)"
#define Module_HelpVersion              "5.35 (12 Sep 2005) 4.79.2.88"
@


4.79.2.89
log
@  Bugfix to *Help.
Detail:
  Internationalisation of *Help code (ie probably dating back to RISC OS 3.1)
  broke the Escape condition checking. This is particularly nasty if you
  do *Help . on a machine with slow hardware scrolling!
Admin:
  Not tested.

Version 5.35, 4.79.2.89. Tagged as 'Kernel-5_35-4_79_2_89'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.89
#define Module_Date_CMHG                15 Sep 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.89"
#define Module_Date                     "15 Sep 2005"
d16 1
a16 1
#define Module_ApplicationDate          "15-Sep-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.89)"
#define Module_HelpVersion              "5.35 (15 Sep 2005) 4.79.2.89"
@


4.79.2.90
log
@Added IRQsema to the list of values which can be read back from
OS_ReadSysInfo 6 (subreason code is 23 for IRQsema). This will
be useful if zero page is ever protected and the IRQ semaphore
moved.

Version 5.35, 4.79.2.90. Tagged as 'Kernel-5_35-4_79_2_90'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.90
#define Module_Date_CMHG                16 Sep 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.90"
#define Module_Date                     "16 Sep 2005"
d16 1
a16 1
#define Module_ApplicationDate          "16-Sep-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.90)"
#define Module_HelpVersion              "5.35 (16 Sep 2005) 4.79.2.90"
@


4.79.2.91
log
@	told kernel of ControlList_ExtraBytes reason code.
	no other changes
Detail:
Admin:


Version 5.35, 4.79.2.91. Tagged as 'Kernel-5_35-4_79_2_91'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.91
#define Module_Date_CMHG                24 Sep 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.91"
#define Module_Date                     "24 Sep 2005"
d16 1
a16 1
#define Module_ApplicationDate          "24-Sep-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.91)"
#define Module_HelpVersion              "5.35 (24 Sep 2005) 4.79.2.91"
@


4.79.2.92
log
@	updated rom release date to today 24th sept for rom 510
Detail:

Admin:


Version 5.35, 4.79.2.92. Tagged as 'Kernel-5_35-4_79_2_92'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.92
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.92"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.92)"
#define Module_HelpVersion              "5.35 (24 Sep 2005) 4.79.2.92"
@


4.79.2.93
log
@	update release date before new 501 rom.
Detail:

Admin:	needed for changed module


Version 5.35, 4.79.2.93. Tagged as 'Kernel-5_35-4_79_2_93'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.93
#define Module_Date_CMHG                07 Oct 2005
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.93"
#define Module_Date                     "07 Oct 2005"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-05"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.93)"
#define Module_HelpVersion              "5.35 (07 Oct 2005) 4.79.2.93"
@


4.79.2.94
log
@	updated to RISC OS 5.11, for 20/2/06
Detail:
Admin:


Version 5.35, 4.79.2.94. Tagged as 'Kernel-5_35-4_79_2_94'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.94
#define Module_Date_CMHG                16 Feb 2006
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.94"
#define Module_Date                     "16 Feb 2006"
d16 1
a16 1
#define Module_ApplicationDate          "16-Feb-06"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.94)"
#define Module_HelpVersion              "5.35 (16 Feb 2006) 4.79.2.94"
@


4.79.2.95
log
@	redated 5.11 kernel release date
Detail:

Admin:


Version 5.35, 4.79.2.95. Tagged as 'Kernel-5_35-4_79_2_95'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.95
#define Module_Date_CMHG                22 Feb 2006
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.95"
#define Module_Date                     "22 Feb 2006"
d16 1
a16 1
#define Module_ApplicationDate          "22-Feb-06"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.95)"
#define Module_HelpVersion              "5.35 (22 Feb 2006) 4.79.2.95"
@


4.79.2.96
log
@  Merged in changes from Castle
Detail:
  Updated GraphicsV documentation
  Upped ROM version number - currently matches latest Castle release (5.13)
Admin:
  No code change

Version 5.35, 4.79.2.96. Tagged as 'Kernel-5_35-4_79_2_96'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.1.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.96
#define Module_Date_CMHG                04 Oct 2008
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.96"
#define Module_Date                     "04 Oct 2008"
d16 1
a16 1
#define Module_ApplicationDate          "04-Oct-08"
d19 1
a19 1
#define Module_ComponentPath            "castle/RiscOS/Sources/Kernel"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.96)"
#define Module_HelpVersion              "5.35 (04 Oct 2008) 4.79.2.96"
@


4.79.2.97
log
@Bumped OS version number to 5.14.

Version 5.35, 4.79.2.97. Tagged as 'Kernel-5_35-4_79_2_97'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.97
#define Module_Date_CMHG                03 Dec 2008
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.97"
#define Module_Date                     "03 Dec 2008"
d16 1
a16 1
#define Module_ApplicationDate          "03-Dec-08"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.97)"
#define Module_HelpVersion              "5.35 (03 Dec 2008) 4.79.2.97"
@


4.79.2.98
log
@  Minor kernel updates
Detail:
  * Added some documentation on previously undocumented HAL calls
  * Corrected NVMemoryFlag_Provision bitmask to match documentation
  * Bugfix: NVMemoryFlag_ProtectAtEnd flag was being ignored
Admin:
  Not tested

Version 5.35, 4.79.2.98. Tagged as 'Kernel-5_35-4_79_2_98'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98
#define Module_Date_CMHG                22 Dec 2008
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98"
#define Module_Date                     "22 Dec 2008"
d16 1
a16 1
#define Module_ApplicationDate          "22-Dec-08"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98)"
#define Module_HelpVersion              "5.35 (22 Dec 2008) 4.79.2.98"
@


4.79.2.99
log
@  "Unknown OS_PlatformFeatures reason code" now has a non-zero error number.
Detail:
  Error number &1F3 allocated.
Admin:
  Requires HdrSrc 1.63.
  Fix supplied by Rob Sprowson.

Version 5.35, 4.79.2.99. Tagged as 'Kernel-5_35-4_79_2_99'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.99
#define Module_Date_CMHG                15 Apr 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.99"
#define Module_Date                     "15 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "15-Apr-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.99)"
#define Module_HelpVersion              "5.35 (15 Apr 2009) 4.79.2.99"
@


4.79.2.100
log
@    Datestamp of kernel for 5.15 build
Detail:
    Version file updated
Admin:
    John Ballance, Castle

Version 5.35, 4.79.2.100. Tagged as 'Kernel-5_35-4_79_2_100'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.100
#define Module_Date_CMHG                21 Apr 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.100"
#define Module_Date                     "21 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "21-Apr-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.100)"
#define Module_HelpVersion              "5.35 (21 Apr 2009) 4.79.2.100"
@


4.79.2.101
log
@  Increased Kernel version number to 5.15.
Detail:
  Castle seems to have settled on an official 5.14 build, so changed our
  version to distinguish our test builds from the official one.
Admin:
  No testing required

Version 5.35, 4.79.2.101. Tagged as 'Kernel-5_35-4_79_2_101'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.101
#define Module_Date_CMHG                23 Apr 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.101"
#define Module_Date                     "23 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "23-Apr-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.101)"
#define Module_HelpVersion              "5.35 (23 Apr 2009) 4.79.2.101"
@


4.79.2.102
log
@  Build fix
Detail:
  Some users reported problems building the sources if they had other
  installations of perl on their build machine. The build system was using a
  mixture of "perl" and "<Perl$Dir>.perl" to invoke the interpreter, and
  sometimes but not always using "do" to expand system variables on the
  command line. This has now been standardised to use "do <Perl$Dir>.perl in
  all cases, and where possible, to use the makefile macro ${PERL}.
Admin:
  Checked that a Tungsten build still works on a build machine with no other
  perl installation. "perl" was aliased to an error to ensure it wasn't used.

Version 5.35, 4.79.2.102. Tagged as 'Kernel-5_35-4_79_2_102'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.102
#define Module_Date_CMHG                07 Jun 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.102"
#define Module_Date                     "07 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jun-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.102)"
#define Module_HelpVersion              "5.35 (07 Jun 2009) 4.79.2.102"
@


4.79.2.103
log
@  Added comment
Detail:
  Noted reservation of IO controller type  passed to OS_Memory 9 used when
  system is running as a coprocessor. Not used by current code but we need to
  make sure that any future reservations use different numbers.
Admin:
  No functional change. Brought to our attention by Rob Sprowson.

Version 5.35, 4.79.2.103. Tagged as 'Kernel-5_35-4_79_2_103'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.103
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.103"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.103)"
#define Module_HelpVersion              "5.35 (07 Jun 2009) 4.79.2.103"
@


4.79.2.104
log
@Fix error handling for sparse dynamic area resize operations (for main HAL branch)
Detail:
  s/ChangeDyn - Swap CMP with TEQ to avoid accidental clobbering of V flag before its state is checked on return from a SWI. Errors encounterd during sparse dynamic area resize operations (OS_DynamicArea 9 & 10) should now be reported properly.
Admin:
  Not tested, but the same fix has been proven to work on the Cortex branch.


Version 5.35, 4.79.2.104. Tagged as 'Kernel-5_35-4_79_2_104'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.104
#define Module_Date_CMHG                22 Oct 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.104"
#define Module_Date                     "22 Oct 2009"
d16 1
a16 1
#define Module_ApplicationDate          "22-Oct-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.104)"
#define Module_HelpVersion              "5.35 (22 Oct 2009) 4.79.2.104"
@


4.79.2.105
log
@  Build fix
Detail:
  Hdr:Macros has just been changed on the trunk in such a way that you now
  need to include Hdr:CPU.Arch as well. Previously this include file was only
  referenced by the Cortex branch kernel - now mirrored on the HAL branch
  kernel too.
Admin:
  Verified that IOMD ROM now builds again - should fix Tungsten ROM build too.

Version 5.35, 4.79.2.105. Tagged as 'Kernel-5_35-4_79_2_105'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.105
#define Module_Date_CMHG                28 Oct 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.105"
#define Module_Date                     "28 Oct 2009"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.105)"
#define Module_HelpVersion              "5.35 (28 Oct 2009) 4.79.2.105"
@


4.79.2.106
log
@Fix bug when creating code variables via OS_SetVarVal (HAL branch)
Detail:
  OS_SetVarVal was failing to call XOS_SynchroniseCodeAreas after copying the code variables code block into the system heap. This has now been fixed.
Admin:
  Fix tested in Cortex branch on rev C2 beagleboard. Debugger module now shows the right register names instead of ofla!


Version 5.35, 4.79.2.106. Tagged as 'Kernel-5_35-4_79_2_106'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.106
#define Module_Date_CMHG                06 Nov 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.106"
#define Module_Date                     "06 Nov 2009"
d16 1
a16 1
#define Module_ApplicationDate          "06-Nov-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.106)"
#define Module_HelpVersion              "5.35 (06 Nov 2009) 4.79.2.106"
@


4.79.2.107
log
@modified s.PMF.osword to cope with the iyonix RTC operating in BCD
Also upissued to RISC OS 5.16 to release this in ROM
Detail:
  (list files and functions that have changed)
Admin:
tested at Castle (JB)
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.107. Tagged as 'Kernel-5_35-4_79_2_107'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.107
#define Module_Date_CMHG                18 Jan 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.107"
#define Module_Date                     "18 Jan 2010"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jan-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.107)"
#define Module_HelpVersion              "5.35 (18 Jan 2010) 4.79.2.107"
@


4.79.2.108
log
@Incremented RISC OS version for the HAL branch to next development number (5.17).

Version 5.35, 4.79.2.108. Tagged as 'Kernel-5_35-4_79_2_108'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.108
#define Module_Date_CMHG                19 Jan 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.108"
#define Module_Date                     "19 Jan 2010"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.108)"
#define Module_HelpVersion              "5.35 (19 Jan 2010) 4.79.2.108"
@


4.79.2.109
log
@Fix bug in InitCMOSCache that could cause CMOS to be errouneously reset if NVRAM is of type 'MaybeIIC'
Detail:
  s/PMF/i2cutils - Kernel was checking if the full IIC flags word was equal to MaybeIIC instead of just checking if the Provision bits equalled MaybeIIC. Thus if any of the additional flags were set along with MaybeIIC the kernel would have skipped the probing code, skipped the IIC code, and fallen through to using the (likely unimplemented) HAL interface for initialising the NVRAM cache.
Admin:
  Tested in IOMD build under RPCemu; kernel now takes the correct path for MaybeIIC + ProtectAtEnd.


Version 5.35, 4.79.2.109. Tagged as 'Kernel-5_35-4_79_2_109'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.109
#define Module_Date_CMHG                02 Feb 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.109"
#define Module_Date                     "02 Feb 2010"
d16 1
a16 1
#define Module_ApplicationDate          "02-Feb-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.109)"
#define Module_HelpVersion              "5.35 (02 Feb 2010) 4.79.2.109"
@


4.79.2.110
log
@Fix detection of Philips RTC/NVRAM when MaybeIIC is in use
Detail:
  s/PMF/i2cutils - Although the code will detect the Philips RTC correctly, it was failing to set the device size in R4, causing CMOS RAM to be misread. This change fixes that.
Admin:
  Tested in IOMD HAL build on development version of RPCEmu.


Version 5.35, 4.79.2.110. Tagged as 'Kernel-5_35-4_79_2_110'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.110
#define Module_Date_CMHG                20 Feb 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.110"
#define Module_Date                     "20 Feb 2010"
d16 1
a16 1
#define Module_ApplicationDate          "20-Feb-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.110)"
#define Module_HelpVersion              "5.35 (20 Feb 2010) 4.79.2.110"
@


4.79.2.111
log
@Bring HAL branch of hdr/HALDevice, h/HALDevice in line with Cortex branch
Detail:
  A fair number of bus/device types and IDs have been added to the Cortex branch since the branch was created.
  Now that the ClearIRQ entry has also been added, it's about time that the HAL branch was brought up to date.
Admin:
  Untested, but should be fine.


Version 5.35, 4.79.2.111. Tagged as 'Kernel-5_35-4_79_2_111'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.111
#define Module_Date_CMHG                20 Mar 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.111"
#define Module_Date                     "20 Mar 2010"
d16 1
a16 1
#define Module_ApplicationDate          "20-Mar-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.111)"
#define Module_HelpVersion              "5.35 (20 Mar 2010) 4.79.2.111"
@


4.79.2.112
log
@Add C version of Hdr.OSEntries to HAL kernel header export
Detail:
  Makefile - now exports a C version of hdr.OSEntries
Admin:
  Tested in Iyonix ROM softload.
  Needed for latest USB drivers to build.


Version 5.35, 4.79.2.112. Tagged as 'Kernel-5_35-4_79_2_112'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.112
#define Module_Date_CMHG                22 May 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.112"
#define Module_Date                     "22 May 2011"
d16 1
a16 1
#define Module_ApplicationDate          "22-May-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.112)"
#define Module_HelpVersion              "5.35 (22 May 2011) 4.79.2.112"
@


4.79.2.113
log
@Add hdr.Variables to C header export
Detail:
  Makefile - Added hdr.Variables to the C header export list
Admin:
  Fixes build errors with the latest Draw module


Version 5.35, 4.79.2.113. Tagged as 'Kernel-5_35-4_79_2_113'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.113
#define Module_Date_CMHG                04 Jun 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.113"
#define Module_Date                     "04 Jun 2011"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jun-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.113)"
#define Module_HelpVersion              "5.35 (04 Jun 2011) 4.79.2.113"
@


4.79.2.114
log
@Update list of OS_Memory 9 controllers
Detail:
  s/MemInfo - List of OS_Memory 9 controllers now updated to include details of the ones that ROL are using, along with which numbers should/shouldn't be safe for us to expand into in the future.
Admin:
  Tested in ROM softload on RiscPC


Version 5.35, 4.79.2.114. Tagged as 'Kernel-5_35-4_79_2_114'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.114
#define Module_Date_CMHG                18 Jul 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.114"
#define Module_Date                     "18 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jul-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.114)"
#define Module_HelpVersion              "5.35 (18 Jul 2011) 4.79.2.114"
@


4.79.2.115
log
@Update the method the HAL kernel uses to determine the UtilityModule & ROM dates
Detail:
  Three main changes:
  * On odd-numbered (i.e. development) versions of the module, the UtilityModule will now take its date from the VersionNum file instead of using a hard-coded date
  * All build versions now look for the new "extended ROM footer" (as created by romlinker 0.04+) at the end of the ROM image and use it to determine the ROM build date for return by OS_ReadSysInfo 9,2. Failing to find the build date in the footer will cause OS_ReadSysInfo 9,2 to return 0.
  * On odd-numbered versions, OS_Byte 0 will now use the ROM build date (as found in the extended footer) to generate the error block that's returned to the user. This seems OK as the PRM describes OS_Byte 0 as returning the "creation date of the operating system". Plus it's a convenient way of getting the ROM build date into the Switcher, since the switcher uses OS_Byte 0. If the extended footer can't be found (or if the string isn't initialised yet, e.g. before Service_PostInit) the code falls back to a hard-coded string containing the date from the VersionNum file.
  File changes:
  Makefile - Updated to not create the obsolete Time+Date file (previously used for the ROM build date)
  Version - Use date from VersionNum file for development builds
  hdr/Options - New UseNewFX0Error variable/option to make it easy to check which OS_Byte 0 variant should be enabled
  hdr/KernelWS - Added new string buffers & extended ROM footer pointer to workspace
  s/Middle - Updated OS_ReadSysInfo 9 code, and added utility functions for searching the extended ROM footer for certain tags
  s/NewReset - Added a couple of calls to initialise the new string buffers just prior to Service_PostInit. This is required since OS_Byte/OS_ReadSysInfo shouldn't enable interrupts, but date conversion relies on the Territory module, which may enable interrupts.
  s/PMF/osbyte - Updated OS_Byte 0 code
Admin:
  Tested in Tungsten ROM, with and without the extended footer present.


Version 5.35, 4.79.2.115. Tagged as 'Kernel-5_35-4_79_2_115'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.115
#define Module_Date_CMHG                31 Jul 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.115"
#define Module_Date                     "31 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jul-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.115)"
#define Module_HelpVersion              "5.35 (31 Jul 2011) 4.79.2.115"
@


4.79.2.116
log
@Keep hdr/HALDevice & hdr/HALEntries in sync with Cortex branch
Detail:
  hdr/HALDevice - Device types & IDs for CPU clock generator and GPIO interface
  hdr/HALEntries - HAL_ExtMachineID entry (but not used by this kernel yet)
Admin:
  Tungsten ROM built OK, but untested at runtime.


Version 5.35, 4.79.2.116. Tagged as 'Kernel-5_35-4_79_2_116'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.116
#define Module_Date_CMHG                01 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.116"
#define Module_Date                     "01 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "01-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.116)"
#define Module_HelpVersion              "5.35 (01 Aug 2011) 4.79.2.116"
@


4.79.2.117
log
@Update 'perl' to '${PERL}'
Detail:
  Makefile - A couple of makefile rules were invoking perl directly instead of using the more preferential ${PERL}. Fixed.
Admin:
  Tungsten ROM compiles OK, untested at runtime.


Version 5.35, 4.79.2.117. Tagged as 'Kernel-5_35-4_79_2_117'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.117
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.117"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.117)"
#define Module_HelpVersion              "5.35 (01 Aug 2011) 4.79.2.117"
@


4.79.2.118
log
@Add new OS_ReadSysInfo 6 items codes. Change naming of PublicWS values.
Detail:
  s/Middle - Added some new OS_ReadSysInfo 6 items which are needed by the zero page relocation kernel. Also duplicated some existing entries to avoid conflicts with ROL's allocations.
  hdr/OSRSI6, Makefile - New header listing OS_ReadSysInfo 6 items
  hdr/PublicWS - Duplicated the workspace definitions for &0-&4000, but with a 'Legacy_' prefix to their names. Also added some new entries as needed by the zero page relocation kernel. Once existing modules have been updated to use OS_ReadSysInfo & the Legacy_ definitions, the old defs will be removed.
  hdr/KernelWS - Removed 'Export_' prefix from all the exported workspace values, since the kernel can now use the original names directly
  hdr/Options - Dummy HiProcVecs option so merging things will be a bit cleaner
Admin:
  Tested in ROM softload on Iyonix


Version 5.35, 4.79.2.118. Tagged as 'Kernel-5_35-4_79_2_118'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.118
#define Module_Date_CMHG                04 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.118"
#define Module_Date                     "04 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "04-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.118)"
#define Module_HelpVersion              "5.35 (04 Aug 2011) 4.79.2.118"
@


4.79.2.119
log
@Correct version number in header comment
Detail:
  hdr/OSRSI6 - Corrected RO version number from 5.19 to 5.17
Admin:
  Untested, but testing shouldn't be needed anyway


Version 5.35, 4.79.2.119. Tagged as 'Kernel-5_35-4_79_2_119'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.119
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.119"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.119)"
#define Module_HelpVersion              "5.35 (04 Aug 2011) 4.79.2.119"
@


4.79.2.120
log
@Merge over some changes from the Cortex branch
Detail:
  hdr/ARMops - Reserve OS_PlatformFeatures 0 bit 20 for indicating whether high processor vectors are in use
  s/Kernel - Add local definitions of BYTEWS, LDROSB, STROSB, VDWS macros (previously in Hdr:Macros)
  s/MoreComms - Fix potential buffer overflow when filling error buffer (although GSTrans shouldn't overflow the buffer in the first place?)
  s/Arthur2 - GSRead number detection fix
  s/ArthurSWIs - Updated OS_ReadUnsigned to support reading 64bit numbers
  Docs/ReadUnsigned - Docs for the updated OS_ReadUnsigned interface
Admin:
  Untested!
  Needs HdrSrc 1.86


Version 5.35, 4.79.2.120. Tagged as 'Kernel-5_35-4_79_2_120'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.120
#define Module_Date_CMHG                07 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.120"
#define Module_Date                     "07 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "07-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.120)"
#define Module_HelpVersion              "5.35 (07 Aug 2011) 4.79.2.120"
@


4.79.2.121
log
@Add ESC_Status to list of OS_ReadSysInfo 6 items
Detail:
  hdr/OSRSI6, s/Middle - Added ESC_Status to the list of items that OS_ReadSysInfo 6 exports
Admin:
  Tested in ROM softload on Iyonix


Version 5.35, 4.79.2.121. Tagged as 'Kernel-5_35-4_79_2_121'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.121
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.121"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.121)"
#define Module_HelpVersion              "5.35 (07 Aug 2011) 4.79.2.121"
@


4.79.2.122
log
@Resync Hdr:HALDevice on HAL branch (nominally the master copy) with the Cortex branch

Version 5.35, 4.79.2.122. Tagged as 'Kernel-5_35-4_79_2_122'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.122
#define Module_Date_CMHG                13 Nov 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.122"
#define Module_Date                     "13 Nov 2011"
d16 1
a16 1
#define Module_ApplicationDate          "13-Nov-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.122)"
#define Module_HelpVersion              "5.35 (13 Nov 2011) 4.79.2.122"
@


4.79.2.123
log
@Merge Cortex kernel into HAL branch
Detail:
  This is a full merge of the Cortex kernel back into the HAL branch. Since the Cortex kernel is/was just a superset of the HAL branch, at this point in time both branches are identical.
  Main features the HAL branch gains from this merge:
  - ARMv6/ARMv7 support
  - High processor vectors/zero page relocation support
  - objasm 4 warning fixes
  - Improved HAL related functionality:
    - Support for HAL-driven RTCs instead of kernel-driven IIC based ones
    - Support for arbitrary size machine IDs
    - Support for multiple IIC busses
    - Support for any HAL size, instead of hardcoded 64k size
    - Probably some other stuff I've forgotten
  - Probably a few bug fixes here and there
Admin:
  Tested on BB-xM & Iyonix.
  Was successfully flashed to ROM on an Iyonix to test the Cortex branch implementation of the 2010 RTC bug fix.
  IOMD build untested - but has been known to work in the past.


Version 5.35, 4.79.2.123. Tagged as 'Kernel-5_35-4_79_2_123'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.123
#define Module_Date_CMHG                26 Nov 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.123"
#define Module_Date                     "26 Nov 2011"
d16 1
a16 1
#define Module_ApplicationDate          "26-Nov-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.123)"
#define Module_HelpVersion              "5.35 (26 Nov 2011) 4.79.2.123"
@


4.79.2.124
log
@Reindent Arthur2.
Expand tabs.
Swap DCI for instructions now Objasm 4 is out.
Symbols for FSControl_CAT/RUN/OPT changed to non Arthur definitions.
Still boots on IOMD class, no other testing.

Version 5.35, 4.79.2.124. Tagged as 'Kernel-5_35-4_79_2_124'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.124
#define Module_Date_CMHG                27 Nov 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.124"
#define Module_Date                     "27 Nov 2011"
d16 1
a16 1
#define Module_ApplicationDate          "27-Nov-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.124)"
#define Module_HelpVersion              "5.35 (27 Nov 2011) 4.79.2.124"
@


4.79.2.125
log
@Conversions rationalisation.
Delete pmf/convdate, moved to conversions.
Moved OS_BinaryToDecimal to conversions.
Remove OS_ConvertHex16 and friends.
Add OS_ConvertVariform skeleton.
Tidied conversions.

Version 5.35, 4.79.2.125. Tagged as 'Kernel-5_35-4_79_2_125'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.125
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.125"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.125)"
#define Module_HelpVersion              "5.35 (27 Nov 2011) 4.79.2.125"
@


4.79.2.126
log
@Added 'UnConv' error (see also HdrSrc).
Implement OS_ConvertVariform, internally the other conversions now just call it.
Add tester for Variform to 'Dev'.
Made block copy weirdness for XScale dependent on XScale arch flag.

Version 5.35, 4.79.2.126. Tagged as 'Kernel-5_35-4_79_2_126'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.126
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.126"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.126)"
#define Module_HelpVersion              "5.35 (27 Nov 2011) 4.79.2.126"
@


4.79.2.127
log
@Rationalise some old switches.
Export less in hdr:RISCOS.
Delete unused GetDecimalPair routine.
Move CheckYear with other RTC stuff out of PMF/osword.
Hide DebugROMInit and DebugROMErrors in release (even numbered) versions.

Version 5.35, 4.79.2.127. Tagged as 'Kernel-5_35-4_79_2_127'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.127
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.127"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.127)"
#define Module_HelpVersion              "5.35 (27 Nov 2011) 4.79.2.127"
@


4.79.2.128
log
@Improve heap manager. Add heap testbed. Add dummy implementation of some OS_ScreenMode reason codes.
Detail:
  s/HeapMan, hdr/KernelWS - Heap manager improvements:
    - Errors generated by interrupted heap operations that are forced to complete by a OS_Heap call from the background are now cached in kernel workspace until the foreground task is resumed. This prevents them from being potentially overwritten by MessageTrans running out of background error buffers.
    - Added new OS_Heap reason code, #7 - Get area aligned. This allows areas of memory to be allocated at specific (power-of-2) alignments, and optionally without crossing a given (power-of-2) boundary. Alignment & boundary calculations are performed using logical addresses.
    - Removed the limitation that all free and allocated blocks must be a multiple of 8 bytes in length. This change was required in order to allow OS_Heap 7 to function correctly. Now the only requirements are that blocks must be multiples of 4 bytes in length, at 4 byte alignment, with a minimum length of 8 bytes. 4 extra padding bytes may still be added to the end of allocations in order to avoid creating 4-byte free blocks.
  s/HeapMan, TestSrc/HeapTest/Makefile, TestSrc/HeapTest/c/testbed, TestSrc/HeapTest/s/asm - Added heap testbed program. Can either use the OS_Heap SWI or directly include a copy of the Kernel's heap manager sources.
  s/vdudecl, s/vduswis - Added dummy implementations of OS_ScreenMode 4, 5 and 6. This prevents the Wimp generating lots of "Unknown OS_ScreenMode reason code" errors when redrawing the screen.
  s/Arthur3, s/Oscli - Moved dotstring closer to where it's used to avoid "ADRL out of range" errors in Tungsten build
Admin:
  Tested in OMAP3 ROM & Tungsten ROM softload.
  Heap testbed successfully performed over 400 million heap ops, so there shouldn't be any serious bugs in the new code (touch wood)


Version 5.35, 4.79.2.128. Tagged as 'Kernel-5_35-4_79_2_128'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.128
#define Module_Date_CMHG                10 Dec 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.128"
#define Module_Date                     "10 Dec 2011"
d16 1
a16 1
#define Module_ApplicationDate          "10-Dec-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.128)"
#define Module_HelpVersion              "5.35 (10 Dec 2011) 4.79.2.128"
@


4.79.2.129
log
@Fix heap test compile errors
Detail:
  TestSrc/HeapTest/c/testbed - Added missing semicolon
  TestSrc/HeapTest/s/asm - Include Hdr:MsgTrans for XMessageTrans_CopyError
Admin:
  Now compiles and runs properly!


Version 5.35, 4.79.2.129. Tagged as 'Kernel-5_35-4_79_2_129'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.129
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.129"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.129)"
#define Module_HelpVersion              "5.35 (10 Dec 2011) 4.79.2.129"
@


4.79.2.130
log
@Fix OS_Heap 4. Fix stack imbalance in system heap code.
Detail:
  s/HeapMan - The code to check if it's safe to shrink a block by 4 bytes assumed 'addr' was the address of the block, when in reality it's just an offset. This was causing the "OK to shrink?" check to always ignore the shrink request on heaps located below the 2G limit, but fail with "heap corrupt" errors in heaps located above the 2G limit.
  s/ArthurSWIs - Fix stack imbalance causing a crash if OS_Heap returns an unexpected error in DoSysHeapOpWithExtension/ClaimSysHeapNode
Admin:
  Tested in Iyonix ROM softload
  Testbed didn't pick up heap shrink bug due to the sanity checks it performs not being vigorous enough.


Version 5.35, 4.79.2.130. Tagged as 'Kernel-5_35-4_79_2_130'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.130
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.130"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.130)"
#define Module_HelpVersion              "5.35 (10 Dec 2011) 4.79.2.130"
@


4.79.2.131
log
@Get tag for 5.18.

Version 5.35, 4.79.2.131. Tagged as 'Kernel-5_35-4_79_2_131'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.131
#define Module_Date_CMHG                05 Jan 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.131"
#define Module_Date                     "05 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jan-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.131)"
#define Module_HelpVersion              "5.35 (05 Jan 2012) 4.79.2.131"
@


4.79.2.132
log
@Back to odd numbered development.

Version 5.35, 4.79.2.132. Tagged as 'Kernel-5_35-4_79_2_132'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.132
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.132"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.132)"
#define Module_HelpVersion              "5.35 (05 Jan 2012) 4.79.2.132"
@


4.79.2.133
log
@Add a NOP after the mode change in MoreSWIs.s to sync with CallASWI module.
Add two more DebugTX in the reset sequence to announce power on reset and CMOS reset code paths.
In STB land the range of permitted dates is extended from 2020 (a bit close!) to 2037 when Unix time wraps.

Version 5.35, 4.79.2.133. Tagged as 'Kernel-5_35-4_79_2_133'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.133
#define Module_Date_CMHG                15 Jan 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.133"
#define Module_Date                     "15 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jan-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.133)"
#define Module_HelpVersion              "5.35 (15 Jan 2012) 4.79.2.133"
@


4.79.2.134
log
@Get of international module header.

Version 5.35, 4.79.2.134. Tagged as 'Kernel-5_35-4_79_2_134'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.134
#define Module_Date_CMHG                27 Jan 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.134"
#define Module_Date                     "27 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jan-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.134)"
#define Module_HelpVersion              "5.35 (27 Jan 2012) 4.79.2.134"
@


4.79.2.135
log
@Add null hash table entry checks to SysCommsModule & UtilityModule hash table lookup
Detail:
  s/Oscli - In SysCommsHashedLookup and UtilCommsHashedLookup, check for null hash table entries instead of just blindly calling ModCommsLookUp_AltEntry.
  This fixes an issue where a crash will occur iff:
  (a) You enter a command which has no entry in one of the two hash tables
  (b) The command is a valid command (with a code entry point) if you reinterpret the corresponding module header as a command table
  In reality, for recent versions of RISC OS 5, you'll get a crash only when trying to execute the command 's'. Some previous OS versions (e.g. 5.12) appear to have been immune to the crash.
  If (a) was true but (b) was false the bug would have also resulted in a small performance hit caused by attempting to scan the module headers for matching commands.
Admin:
  Tested in Tungsten & OMAP ROM builds
  's' no longer crashes, and commands included in the two hash tables still seem to function as normal.
  Fixes issue reported on forums:
  http://www.riscosopen.org/forum/forums/4/topics/902


Version 5.35, 4.79.2.135. Tagged as 'Kernel-5_35-4_79_2_135'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.135
#define Module_Date_CMHG                31 Jan 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.135"
#define Module_Date                     "31 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jan-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.135)"
#define Module_HelpVersion              "5.35 (31 Jan 2012) 4.79.2.135"
@


4.79.2.136
log
@Process some callbacks during module initialisation.
When in DebugROMInit=TRUE mode each call to XOS_NewLine also checks and
processes pending callbacks (in VduLF). This makes the USB enumeration
come out in a different order because they're all collected at the end.
As an intermediate step, collect callbacks for DebugROMInit=FALSE too.
Note: developers should not rely on this behaviour, this will be phased
out before the next stable release.

Version 5.35, 4.79.2.136. Tagged as 'Kernel-5_35-4_79_2_136'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.136
#define Module_Date_CMHG                18 Feb 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.136"
#define Module_Date                     "18 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-Feb-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.136)"
#define Module_HelpVersion              "5.35 (18 Feb 2012) 4.79.2.136"
@


4.79.2.137
log
@Fix *SAVE syntax error message.
The text had cunning hardspaces in it so that the *HELP text lines up nicely using OS_PrettyPrint, but not taking into account that internationalised syntax errors don't use OS_PrettyPrint so output VDU31,31,31 and jumped all over the place.
Syntax message rephrased to fit on one line.
Syntax and help for *TV cleared up since the help text contained all the syntax information.
Spotted 2 wasted instructions in Oscli.s while investigating, added some comments too.

Version 5.35, 4.79.2.137. Tagged as 'Kernel-5_35-4_79_2_137'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.137
#define Module_Date_CMHG                25 Feb 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.137"
#define Module_Date                     "25 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "25-Feb-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.137)"
#define Module_HelpVersion              "5.35 (25 Feb 2012) 4.79.2.137"
@


4.79.2.138
log
@Add compressed ROM support. Make more use of ARMv5+ instructions. Other misc tweaks.
Detail:
  hdr/OSEntries, s/HAL, s/Kernel - Add compressed ROM support.
  With the current scheme, a compressed ROM will have everything except the HAL and kernel compressed.
  During the keyboard scan period the kernel will allocate some temporary decompression workspace and call the decompression stub that was appended to the ROM.
  The decompression stub is expected to perform in-place decompression of the ROM. Once decompression is complete the workspace will be freed and the page tables updated to make the ROM image readonly.
  It's the HAL's responsibility to make sure any compressed ROM is located in an area of physically contiguous RAM large enough to hold the uncompressed image.
  More info here: http://www.riscosopen.org/wiki/documentation/show/Compressed%20ROMs
  Makefile, h/OSEntries - Add C export of hdr/OSEntries
  hdr/HALDevice - Add device ID for Tungsten video device. Convert tabs to spaces for consistency.
  hdr/HALEntries, s/NewReset - Moved KbdFlag_* definitions to hdr/HALEntries so HALs can use them in their keyboard scan code
  s/ArthurSWIs, S/HAL, s/HeapSort, s/Kernel, s/MemInfo, s/Middle, s/NewIRQs, s/TickEvents, s/vdu/vdugrafb - Make use of BLX, BFI and long multiplies if the CPU supports them. Don't support SWI calls from thumb mode if the CPU doesn't support thumb.
  s/HAL - Made the LDMIA in Init_MapInRAM more sensible (register order was backwards). The old code did work, but wasn't doing what the comments described. Removed unused/unfinished HAL_Write0 function. Improve RISCOS_LogToPhys to check L1PT for any section mappings if the logical_to_physical call fails
  s/ModHand - Save one instruction by using ADR instead of MOV+ADD to compute lr
  s/NewReset, s/PMF/key - Pass L1PT to HAL_Reset to allow machines without hardware reset (e.g. IOMD) to perform resets by manually disabling the MMU and restarting the ROM
  s/vdu/vdudriver, s/vdu/vdugrafv - Use GVEntry macro borrowed from NVidia module for setting up the GraphicsV jump table. Make GraphicsV_ReadPaletteEntry call HAL_Video_ReadPaletteEntry if left unclaimed. Fixup GV_Render to only call HAL_Video_Render if the HAL call is implemented.
Admin:
  Tested with OMAP3, IOMD & Tungsten ROMs/softloads.


Version 5.35, 4.79.2.138. Tagged as 'Kernel-5_35-4_79_2_138'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.138
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.138"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.138)"
#define Module_HelpVersion              "5.35 (25 Feb 2012) 4.79.2.138"
@


4.79.2.139
log
@Select correct mouse type for IOMD systems
Detail:
  s/NewReset - When resetting the mouse type, for M_32 builds, check what IOMD version is fitted and select Quadrature/PS2 as appropriate
  Falls back to USB if no IOMD/unrecognised IOMD
Admin:
  Tested in IOMD softload on RiscPC


Version 5.35, 4.79.2.139. Tagged as 'Kernel-5_35-4_79_2_139'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.139
#define Module_Date_CMHG                11 Mar 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.139"
#define Module_Date                     "11 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "11-Mar-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.139)"
#define Module_HelpVersion              "5.35 (11 Mar 2012) 4.79.2.139"
@


4.79.2.140
log
@Correct mode 47 parameters
Detail:
  s/vdu/vdumodes - Mode 47 is 360 pixels wide, so should be 45 text columns, not 90
Admin:
  Tested in Iyonix ROM softload


Version 5.35, 4.79.2.140. Tagged as 'Kernel-5_35-4_79_2_140'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.140
#define Module_Date_CMHG                17 Mar 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.140"
#define Module_Date                     "17 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "17-Mar-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.140)"
#define Module_HelpVersion              "5.35 (17 Mar 2012) 4.79.2.140"
@


4.79.2.141
log
@Correction to error number for *FX0
On odd numbered versions was coming out as 7F not F7.

Version 5.35, 4.79.2.141. Tagged as 'Kernel-5_35-4_79_2_141'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.141
#define Module_Date_CMHG                19 Mar 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.141"
#define Module_Date                     "19 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "19-Mar-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.141)"
#define Module_HelpVersion              "5.35 (19 Mar 2012) 4.79.2.141"
@


4.79.2.142
log
@Fix asasm 2.00 error
Detail:
  s/AMBControl/service - Fix missing colon on end of :OR: operator
Admin:
  Identical binary under objasm


Version 5.35, 4.79.2.142. Tagged as 'Kernel-5_35-4_79_2_142'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.142
#define Module_Date_CMHG                24 Mar 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.142"
#define Module_Date                     "24 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-Mar-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.142)"
#define Module_HelpVersion              "5.35 (24 Mar 2012) 4.79.2.142"
@


4.79.2.143
log
@  Retired *Configure options, and a new header export
Detail:
  * As noted in recent commits to ADFS, the *Configure options Dir and NoDir
    haven't done anything since RISC OS 2, so ADFS has stopped reading the
    CMOS bit. Unusually, these options are implemented by the kernel, so this
    is the accompanying change to remove the *Configure options. This frees
    up a bit of CMOS for future re-use.
  * Now exports a C version of Hdr:ModHand.
Admin:
  Builds OK, but not tested in a ROM build yet (should be fairly safe though)

Version 5.35, 4.79.2.143. Tagged as 'Kernel-5_35-4_79_2_143'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.143
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.143"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.143)"
#define Module_HelpVersion              "5.35 (24 Mar 2012) 4.79.2.143"
@


4.79.2.144
log
@Tighten up time conversions.
Convrsions.s:
Don't trash R4 in OS_ConvertDateAndTime
Reject buffer sizes > 2G (seems reasonable for a time string, and allows us to claw back a flag bit).
PMF/osword.s:
Just call Territory_ConvertDateAndTime directly since that's all OS_ConvertDateAndTime does.
Trim some now irrelevant comments and switched out code.

Version 5.35, 4.79.2.144. Tagged as 'Kernel-5_35-4_79_2_144'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.144
#define Module_Date_CMHG                25 Mar 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.144"
#define Module_Date                     "25 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "25-Mar-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.144)"
#define Module_HelpVersion              "5.35 (25 Mar 2012) 4.79.2.144"
@


4.79.2.145
log
@Add device ID for AM/DM37x SmartReflex CPU clock controller
Detail:
  hdr/HALDevice - Add device ID for new SmartReflex-based CPUClk device that takes over from the current OMAP3 one on AM/DM37x devices
Admin:
  Tested in OMAP3 ROM


Version 5.35, 4.79.2.145. Tagged as 'Kernel-5_35-4_79_2_145'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.145
#define Module_Date_CMHG                08 Apr 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.145"
#define Module_Date                     "08 Apr 2012"
d16 1
a16 1
#define Module_ApplicationDate          "08-Apr-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.145)"
#define Module_HelpVersion              "5.35 (08 Apr 2012) 4.79.2.145"
@


4.79.2.146
log
@OS_ChangeDynamicArea performance optimisations
Detail:
  s/ChangeDyn:
    - Apply various optimisations to OS_ChangeDynamicArea to reduce the execution time when performing large grows/shrinks.
    - Optimisations can be toggled on/off with FastCDA_* flags for debugging.
    - On a 1GHz 512MB BB-xM, the initial *FreePool call now takes 0.15s instead of 13.46s. On a 512MB Iyonix the time has dropped from 1.18s to 0.23s.
    - Growing screen memory (on BB-xM) has also seen significant gains - between 2x and 4x speedup, depending on what state the source pages are in.
    - Added/updated documentation for a few functions and made more use of ROUTs for safety
  s/ARM600, s/VMSAv6:
    - Update BangCamUpdate, etc. to add support for the PageFlags_Unsafe flag that OS_ChangeDynamicArea uses to bypass cache/TLB maintenance in some situations
    - Avoid BangCamUpdate calling BangL2PT to map out the page if the page isn't mapped in (avoids unnecessary cache/TLB flush)
  s/ArthurSWIs:
    - Add extra ASSERT for safety
  s/AMBcontrol/memory
    - Fix incorrect assumption that the usable size of a heap block is always 8 less than the value stored in the header. Even with the old 8 byte aligned allocations the usable size will always be 4 bytes less than the value in the header. This code would have resulted in some slight memory wasteage, as AMBcontrol will have always tried growing the block four bytes bigger than needed.
Admin:
  Tested on Iyonix & BB-xM


Version 5.35, 4.79.2.146. Tagged as 'Kernel-5_35-4_79_2_146'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.146
#define Module_Date_CMHG                15 Apr 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.146"
#define Module_Date                     "15 Apr 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Apr-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.146)"
#define Module_HelpVersion              "5.35 (15 Apr 2012) 4.79.2.146"
@


4.79.2.147
log
@  Fix stack imbalances
Detail:
  In a couple of early exits from LookForHALRTC, R12 was missing from the
  pull macros.
Admin:
  Fix received from John Ballance.

Version 5.35, 4.79.2.147. Tagged as 'Kernel-5_35-4_79_2_147'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147
#define Module_Date_CMHG                26 Apr 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147"
#define Module_Date                     "26 Apr 2012"
d16 1
a16 1
#define Module_ApplicationDate          "26-Apr-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147)"
#define Module_HelpVersion              "5.35 (26 Apr 2012) 4.79.2.147"
@


4.79.2.148
log
@Fix crashes on ARM6T2+ when OS_Byte/OS_Word are used from IRQ mode
Detail:
  s/Kernel - A bug introduced when adding the BFI optimisations meant that NoIrqVecSwiDespatch was enabling IRQs instead of disabling them, leading to lr_irq corruption and a potential crash if the SWIs were used from IRQ mode
Admin:
  Tested on rev A2 BB-xM
  Having KeyExtend loaded no longer causes random crashes during keyboard input
  Fixes issue reported on forums: http://www.riscosopen.org/forum/forums/4/topics/1024#posts-12004


Version 5.35, 4.79.2.148. Tagged as 'Kernel-5_35-4_79_2_148'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.148
#define Module_Date_CMHG                15 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.148"
#define Module_Date                     "15 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.148)"
#define Module_HelpVersion              "5.35 (15 May 2012) 4.79.2.148"
@


4.79.2.149
log
@Correction to ARM7500 id register so it doesn't get flagged as ARMunk.

Version 5.35, 4.79.2.149. Tagged as 'Kernel-5_35-4_79_2_149'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.149
#define Module_Date_CMHG                18 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.149"
#define Module_Date                     "18 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.149)"
#define Module_HelpVersion              "5.35 (18 May 2012) 4.79.2.149"
@


4.79.2.150
log
@Make Mike's macros permanent.
While the HAL and kernel were being split some temporary macros were used for the bits being worked on, after 12 years of use they're probably safe to adopt.
mjsCallHAL -> CallHAL; mjsAddressHAL -> AddressHAL; mjsHAL -> HAL.
OS_VIDCDividerSWI code now always does NoSuchSWI (had been switched out previously).
File vduhint.s no longer assembled (was empty).


Version 5.35, 4.79.2.150. Tagged as 'Kernel-5_35-4_79_2_150'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.150
#define Module_Date_CMHG                21 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.150"
#define Module_Date                     "21 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.150)"
#define Module_HelpVersion              "5.35 (21 May 2012) 4.79.2.150"
@


4.79.2.151
log
@Adoption of *CONFIGURE/STATUS CACHE commands
The kernel already looks after all other aspects of the ARM CPU, so can look after the cache control command too.
 HelpStrs.s:New tokens for help and syntax
 CmdHelp.s:UK help and syntax
 Arthur3.s:Tables updates for *CONFIGURE/STATUS, lined some stuff up, default error text sync'd with Hdr:NewErrors
 MoreComms.s:Parsing and doing of *CACHE
 Utility.s:Hashing table updated for *CACHE
Other minor changes
 hdr/Options:Bring 'MosVer' into the private header
 hdr/RISCOS:aasm aliases for SP removed, MainVars and MosVer made private, added definition of the start of application space
 HeapMan.s:Use of GRAB changed to Pull
 Offset of TutuCMOS changed for more informative PrintSoundCMOS
 PMF/osbyte.s:Use OsBytes header file in place of MainVars

Version 5.35, 4.79.2.151. Tagged as 'Kernel-5_35-4_79_2_151'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.151
#define Module_Date_CMHG                26 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.151"
#define Module_Date                     "26 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "26-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.151)"
#define Module_HelpVersion              "5.35 (26 May 2012) 4.79.2.151"
@


4.79.2.152
log
@Add new HAL entry, HAL_UARTDefault. Make use of Hdr:SerialOp & OS_SerialOp 10.
Detail:
  hdr/HALEntries - Brought in line with RPi branch, plus addition of new HAL_UARTDefault HAL entry, to allow DualSerial to determine which (if any) of the HAL UARTs should be the default UART accessed via OS_SerialOp
  s/GetAll - Add GET of Hdr:SerialOp
  s/PMF/osbyte - Use OS_SerialOp 10 when constructing filename to open for OS_Byte 2
Admin:
  Tested in OMAP3, Tungsten ROMs


Version 5.35, 4.79.2.152. Tagged as 'Kernel-5_35-4_79_2_152'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.152
#define Module_Date_CMHG                04 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.152"
#define Module_Date                     "04 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.152)"
#define Module_HelpVersion              "5.35 (04 Jun 2012) 4.79.2.152"
@


4.79.2.153
log
@Make OS_Memory 8 return more correct values
The only fake result now is the hard ROM amount, which is hardwired to 4MB and might not be correct.
Unrelated changes
 hdr.HALDevice: Assign a device for VIDC20.
 hdr.KernelWS: Reorder into ascending order, remove legacy addresses.
 s.ARM600: Move PhysSpaceSize inside :LNOT:HAL switch.
 s.Kernel: Move PhysSpaceSize inside :LNOT:HAL switch.

Version 5.35, 4.79.2.153. Tagged as 'Kernel-5_35-4_79_2_153'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.153
#define Module_Date_CMHG                18 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.153"
#define Module_Date                     "18 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.153)"
#define Module_HelpVersion              "5.35 (18 Jun 2012) 4.79.2.153"
@


4.79.2.154
log
@Fix failure to boot with exactly 16MB of RAM
With no VRAM, in Kernerl.s.HAL line 370, the less than 16M case sets aside half the RAM as available for video (more than, it uses no more than 32M) but the exactly equals 16M case set aside none.
Add some exports to hdr.HALEntries to define the subreasons to OS_Hardware.

Version 5.35, 4.79.2.154. Tagged as 'Kernel-5_35-4_79_2_154'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.154
#define Module_Date_CMHG                21 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.154"
#define Module_Date                     "21 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.154)"
#define Module_HelpVersion              "5.35 (21 Jun 2012) 4.79.2.154"
@


4.79.2.155
log
@Fix callback and breakpoint environment handlers to work with zero page relocation
Detail:
  s/Middle - Callback and breakpoint environment handler workspace is now specified as being ZeroPage relative
Admin:
  Untested, but same fix as on RPi branch


Version 5.35, 4.79.2.155. Tagged as 'Kernel-5_35-4_79_2_155'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.155
#define Module_Date_CMHG                26 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.155"
#define Module_Date                     "26 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.155)"
#define Module_HelpVersion              "5.35 (26 Jun 2012) 4.79.2.155"
@


4.79.2.156
log
@Fix VMSAv6 prefetch abort handler to work with zero page relocation
Detail:
  s/VMSAv6 - Prefetch abort handler address now looked up as ZeroPage-relative
Admin:
  Untested, but same fix as on RPi branch


Version 5.35, 4.79.2.156. Tagged as 'Kernel-5_35-4_79_2_156'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.156
#define Module_Date_CMHG                27 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.156"
#define Module_Date                     "27 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.156)"
#define Module_HelpVersion              "5.35 (27 Jun 2012) 4.79.2.156"
@


4.79.2.157
log
@Sort out SetBorder
NewReset.s:
The one remaining use of SetBorder was to denote the user asked for and got a CMOS reset, which in the HAL case emitted a warning because setting the border is potentially complicated/slow.
To solve this, the reset is noted and replaces the normal RISC OS banner with a warning message. The behaviour and text for this comes from the BBC Master, though the escape key is used in place of break since a reset isn't actually needed.
Moved the unused cputable inside its corresponding switch.
Two occurrences of WriteS_Translated would have executed the message in the V=1 case.
KernelWS/Resources:
Flag added to workspace, translation added to messages files.
Heapman.s:
Commented out use of SetBorder removed.
Kernel.s:
SetBorder macro removed.
Middle.s:
Switched out use of SetBorder removed.
Super1.s:
Conditional WriteS_Translated would try to execute the message in the opposite condition case.


Version 5.35, 4.79.2.157. Tagged as 'Kernel-5_35-4_79_2_157'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.157
#define Module_Date_CMHG                01 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.157"
#define Module_Date                     "01 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.157)"
#define Module_HelpVersion              "5.35 (01 Jul 2012) 4.79.2.157"
@


4.79.2.158
log
@  Added an OMAP3 GPIO board type for Pandora
Admin:
  Required by HAL/OMAP3 0.68

Version 5.35, 4.79.2.158. Tagged as 'Kernel-5_35-4_79_2_158'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.158
#define Module_Date_CMHG                02 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.158"
#define Module_Date                     "02 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.158)"
#define Module_HelpVersion              "5.35 (02 Jul 2012) 4.79.2.158"
@


4.79.2.159
log
@Make GraphicsV_IICOp more consistent
No accepts  r0 = b31-24 set 0
                 b23-16 fully qualified IIC address
                 b15-0  starting offset
            r1 = buffer pointer
            r2 = number of bytes to tranfer
            r4 = b31-24 display number
                 b23-16 head
                 b15-0  reason code (=14)
Now returns r0 = result codes as per HAL_IICTransfer()
            r1 = buffer pointer incremented by number of bytes transferred
            r2 = number of bytes *not* transferred
            r4 = 0
Removed '_' after Video in entry numbers to be consistent with other HAL entry naming, and HAL_VideoFlybackDevice.
Added IICStatus return numbers to Hdr:HALEntries.
Stop calling HAL_MonitorLeadID as only IOMD implemented it - just guess VGA until the graphics driver says otherwise.

Version 5.35, 4.79.2.159. Tagged as 'Kernel-5_35-4_79_2_159'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.159
#define Module_Date_CMHG                04 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.159"
#define Module_Date                     "04 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.159)"
#define Module_HelpVersion              "5.35 (04 Jul 2012) 4.79.2.159"
@


4.79.2.160
log
@  Added OS_Hardware 5
Detail:
  This functions like OS_Hardware 4, but enumerates devices in the
  chronological order of registration.
Admin:
  Builds, but untested.

Version 5.35, 4.79.2.160. Tagged as 'Kernel-5_35-4_79_2_160'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.160
#define Module_Date_CMHG                06 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.160"
#define Module_Date                     "06 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.160)"
#define Module_HelpVersion              "5.35 (06 Jul 2012) 4.79.2.160"
@


4.79.2.161
log
@Sort out hard ROM size for HALs with no hard ROM
Previously HAL_PhysInfo took one of two routes to get the arrangment table of arrangement table size.
Reorganised to accept a subreason to allow other physical info to be requested.


Version 5.35, 4.79.2.161. Tagged as 'Kernel-5_35-4_79_2_161'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.161
#define Module_Date_CMHG                09 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.161"
#define Module_Date                     "09 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.161)"
#define Module_HelpVersion              "5.35 (09 Jul 2012) 4.79.2.161"
@


4.79.2.162
log
@Fix hang on startup with high processor vectors
Detail:
  s/PMF/osinit - MonitorLeadType is now stored in ZeroPage again, instead of at whatever R1 happens to point at (which seemed to be 0 when I tried it)
Admin:
  Tested on BB-xM with high processor vectors


Version 5.35, 4.79.2.162. Tagged as 'Kernel-5_35-4_79_2_162'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.162
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.162"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.162)"
#define Module_HelpVersion              "5.35 (09 Jul 2012) 4.79.2.162"
@


4.79.2.163
log
@Fix crash in OS_Hardware 4/5 when encountering devices which are newer than the caller supports
Detail:
  s/HAL - Fix crash in OS_Hardware 4/5 when encountering devices which are newer than the caller supports
Admin:
  Untested, but same fix as Pi branch


Version 5.35, 4.79.2.163. Tagged as 'Kernel-5_35-4_79_2_163'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.163
#define Module_Date_CMHG                15 Aug 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.163"
#define Module_Date                     "15 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Aug-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.163)"
#define Module_HelpVersion              "5.35 (15 Aug 2012) 4.79.2.163"
@


4.79.2.164
log
@Bring hdr/HALDevice in line with RPi branch
Detail:
  hdr/HALDevice - Added new HAL devices and types from RPi branch
Admin:
  Untested!


Version 5.35, 4.79.2.164. Tagged as 'Kernel-5_35-4_79_2_164'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.164
#define Module_Date_CMHG                20 Aug 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.164"
#define Module_Date                     "20 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-Aug-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.164)"
#define Module_HelpVersion              "5.35 (20 Aug 2012) 4.79.2.164"
@


4.79.2.165
log
@Merge with RPi branch
Detail:
  Merge the RPi branch with the HAL branch, ending RPi branch development
  Brief summary of changes brought in:
  * Added HAL_VideoStartupMode to allow the HAL to specify a startup mode for the OS
  * Fixed addresses being sent to GraphicsV_SetDMAAddress being wrong for external framestores (addresses were given as if internal framestore was in use)
  * Add InverseTextTransparency option for limited compile-time support for targets where framebuffer alpha channel is important
  * Fix ConfiguredLanguage for non-Tungsten builds
  * Update ARMv6 CPU detection to read cache parameters from cache type register instead of using KnownCPUTable
  * Add HALDebugHexTX/TX2/TX4 debug routines for writing out numbers via HAL
  * Use HAL_TimerIRQClear when clearing timer 0 interrupt instead of just HAL_IRQClear
  * Initialise FileLangCMOS using defines from Hdr:FSNumbers instead of magic numbers. Use SDFS on M_ARM11ZF.
  * Improved software mouse pointer support; software pointer now removed & restored in some of the same places the text cursor is
  * Improve support for external framestores; driver is now able to grow/shrink/move the framestore on mode changes if bit 5 of GraphicsV_DisplayFeatures R0 is set
  * GraphicsV_FramestoreAddress now has a default claimant which calls HAL_VideoFramestoreAddress
Admin:
  Tested on Raspberry Pi, Iyonix, OMAP3, IOMD


Version 5.35, 4.79.2.165. Tagged as 'Kernel-5_35-4_79_2_165'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.165
#define Module_Date_CMHG                18 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.165"
#define Module_Date                     "18 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.165)"
#define Module_HelpVersion              "5.35 (18 Sep 2012) 4.79.2.165"
@


4.79.2.166
log
@Add new HID device type & ID for Pandora keyboard
Detail:
  hdr/HALDevice - Added new HID device type, Keyboard sub-type, and Pandora keyboard device ID
Admin:
  Tested on Pandora, rev C2 BB, rev A2 BB-xM, rev C1 TouchBook


Version 5.35, 4.79.2.166. Tagged as 'Kernel-5_35-4_79_2_166'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.166
#define Module_Date_CMHG                21 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.166"
#define Module_Date                     "21 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.166)"
#define Module_HelpVersion              "5.35 (21 Sep 2012) 4.79.2.166"
@


4.79.2.167
log
@Add *CONFIGURE [No]Num for control over the num lock state
STB default = off, desktop default = on.
Collapsed single use of 'ErrorsInR0' switch.

Version 5.35, 4.79.2.167. Tagged as 'Kernel-5_35-4_79_2_167'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.167
#define Module_Date_CMHG                30 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.167"
#define Module_Date                     "30 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "30-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.167)"
#define Module_HelpVersion              "5.35 (30 Sep 2012) 4.79.2.167"
@


4.79.2.168
log
@Initialise IIC earlier in the startup sequence. Add ID for Pandora audio HAL device
Detail:
  s/HAL, s/NewReset - Moved IIC initialisation to just after timer initialisation, and crucially, before keyboard scan initialisation. This makes things a lot easier for the HAL if it wants to use IIC during the keyboard scan (previously IIC would be enabled inbetween HAL_KbdScanSetup and the first call to HAL_KbdScan)
  hdr/HALDevice - Added a device ID for the Pandora audio controller
Admin:
  Tested on Pandora


Version 5.35, 4.79.2.168. Tagged as 'Kernel-5_35-4_79_2_168'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.168
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.168"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.168)"
#define Module_HelpVersion              "5.35 (30 Sep 2012) 4.79.2.168"
@


4.79.2.169
log
@Default CMOS changes for Cortex- and Broadcom-based builds:

- LMTransport IP (was NetBEUI)
- FreewayAutoAddress now "off"
- WimpIconiseButton now "on"
- CDROMDrives now 0 for RPi (was 1)

Version 5.35, 4.79.2.169. Tagged as 'Kernel-5_35-4_79_2_169'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.169
#define Module_Date_CMHG                06 Oct 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.169"
#define Module_Date                     "06 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "06-Oct-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.169)"
#define Module_HelpVersion              "5.35 (06 Oct 2012) 4.79.2.169"
@


4.79.2.170
log
@Actually pay attention to configured cache preferences
The kernel recently took back ownership of the *CACHE command and it's configure counterpart, but wasn't reading the CMOS value on startup.
Spotted while looking at bus transactions on IOMD, and wondering where they all are, then realising it's all running from the cache.

Version 5.35, 4.79.2.170. Tagged as 'Kernel-5_35-4_79_2_170'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.170
#define Module_Date_CMHG                07 Oct 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.170"
#define Module_Date                     "07 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.170)"
#define Module_HelpVersion              "5.35 (07 Oct 2012) 4.79.2.170"
@


4.79.2.171
log
@Some tweaks ahead of an RPi code freeze.

Default CMOS tweaks now apply for the RPi hardware. Was missed in
the previous commit.

You can now build the Kernel without the ROM debug output stuff
that's enabled for odd-numbered builds, by passing FREEZE_DEV_REL=TRUE
into the makefile. For example, in the Components file, you'd add:

  -options FREEZE_DEV_REL=TRUE

onto the Kernel line.

Version 5.35, 4.79.2.171. Tagged as 'Kernel-5_35-4_79_2_171'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.171
#define Module_Date_CMHG                08 Oct 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.171"
#define Module_Date                     "08 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "08-Oct-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.171)"
#define Module_HelpVersion              "5.35 (08 Oct 2012) 4.79.2.171"
@


4.79.2.172
log
@Use the right setting for WimpIconiseButton
Detail:
  s/NewReset - WimpIconiseButton is bit 7 of WimpDragMoveLimitCMOS, not bit 2
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.172. Tagged as 'Kernel-5_35-4_79_2_172'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.172
#define Module_Date_CMHG                10 Oct 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.172"
#define Module_Date                     "10 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-Oct-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.172)"
#define Module_HelpVersion              "5.35 (10 Oct 2012) 4.79.2.172"
@


4.79.2.173
log
@Add branch predictor maintenance to WB_CR7_LDa ARMops
Detail:
  s/ARMops - Added branch predictor maintenance to WB_CR7_LDa ARMops. If the entire instruction cache is being invalidated then the branch predictors will be invalidated for us, but for ranged invalidation we need to handle it ourselves.
Admin:
  Tested briefly on Raspberry Pi with high processor vectors
  Appears to fix Configure and its plugins misbehaving in various ways


Version 5.35, 4.79.2.173. Tagged as 'Kernel-5_35-4_79_2_173'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.173
#define Module_Date_CMHG                14 Oct 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.173"
#define Module_Date                     "14 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Oct-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.173)"
#define Module_HelpVersion              "5.35 (14 Oct 2012) 4.79.2.173"
@


4.79.2.174
log
@Review of Internation switch
Variously the call to TranslateError was either followed (outside the switch) by an unnecessary SETV, or missing SETV for the non international case.
Added DMA controller HAL device for IOMD.

Version 5.35, 4.79.2.174. Tagged as 'Kernel-5_35-4_79_2_174'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.174
#define Module_Date_CMHG                28 Oct 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.174"
#define Module_Date                     "28 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.174)"
#define Module_HelpVersion              "5.35 (28 Oct 2012) 4.79.2.174"
@


4.79.2.175
log
@Add OPEN bus as a known system bus type

Version 5.35, 4.79.2.175. Tagged as 'Kernel-5_35-4_79_2_175'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.175
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.175"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.175)"
#define Module_HelpVersion              "5.35 (28 Oct 2012) 4.79.2.175"
@


4.79.2.176
log
@ScreenModeBadReason changed to non zero error number
Temporary assignment changed to one from Hdr:NewErrors.

Version 5.35, 4.79.2.176. Tagged as 'Kernel-5_35-4_79_2_176'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.176
#define Module_Date_CMHG                17 Nov 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.176"
#define Module_Date                     "17 Nov 2012"
d16 1
a16 1
#define Module_ApplicationDate          "17-Nov-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.176)"
#define Module_HelpVersion              "5.35 (17 Nov 2012) 4.79.2.176"
@


4.79.2.177
log
@Add new BMU HAL device type & IDs
Detail:
  hdr/HALDevice - Added HALDeviceSysPeri_BMU device type and some device IDs for the BMUs in the Pandora & TouchBook
Admin:
  Tested in OMAP3 ROM build


Version 5.35, 4.79.2.177. Tagged as 'Kernel-5_35-4_79_2_177'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.177
#define Module_Date_CMHG                21 Nov 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.177"
#define Module_Date                     "21 Nov 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-Nov-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.177)"
#define Module_HelpVersion              "5.35 (21 Nov 2012) 4.79.2.177"
@


4.79.2.178
log
@Add support for new extended internal key codes, low level key codes, and key handler format
Detail:
  s/Middle - Added OS_ReadSysInfo 13 to allow the kernel to validate a key handler before the owner attempts to install it
  Resources/UK/Messages - Text for new "Bad key handler" error
  s/GetAll, s/PMF/Def - Get rid of now obsolete s/PMF/Def file. It only contained definitions for pre-HAL hardware, and for the key handler layout (now in Hdr:Keyboard)
  hdr/KeyWS - Increased size of KeysDown array so it can hold 768 keys instead of 160. Trim a couple of obsolete variables, and increase CurrKey/OldKey from 1 byte to 4 bytes.
  s/PMF/key, s/PMF/osbyte - Main bulk of the changes for the new key handling. All the important interfaces are now able to deal with extended (i.e. > 8 bit) internal key numbers, and the kernel is able to cope with key handlers which use 16 bit internal/low level key numbers instead of 8 bit.
Admin:
  Tested on Pandora & BB-xM
  Requires HdrSrc-2_20


Version 5.35, 4.79.2.178. Tagged as 'Kernel-5_35-4_79_2_178'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.178
#define Module_Date_CMHG                05 Dec 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.178"
#define Module_Date                     "05 Dec 2012"
d16 1
a16 1
#define Module_ApplicationDate          "05-Dec-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.178)"
#define Module_HelpVersion              "5.35 (05 Dec 2012) 4.79.2.178"
@


4.79.2.179
log
@Be more careful when updating Vinit from the VSync IRQ handler
Detail:
  s/vdu/vducursoft - TeletextFlashTest now stores the updated TeletextCount before calling SetVinit. This provides some protection against getting stuck in an infinite loop (+ stack overflow) if SetVinit takes longer than 1 VSync to complete (or some other catastrophe occurs)
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.179. Tagged as 'Kernel-5_35-4_79_2_179'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.179
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.179"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.179)"
#define Module_HelpVersion              "5.35 (05 Dec 2012) 4.79.2.179"
@


4.79.2.180
log
@Add OS_NVMemory 6
Permits applications to query what value would be used in the event of a CMOS reset for a given configure value. Notably, the configure plugins will use this in favour of 'ResetCMOS'.
hdr/Options: retire the 'Select16BitSound' switch, add comment for ChecksumCMOS switch
hdr/KernelWS: DuffEntry and Nowhere moved here
Kernel.s: Unused OSMD removed, retire single use of SPIRQ in favour of r13_irq
Middle.s: Retire SPIRQ
NewReset.s: Trim out 300+ lines of CMOS reset defaults, call OS_NVMemory 6 instead
PMF/i2cutils.s: CMOS reset default code and table moved here with refactoring
Note, the previous code preserved YearCMOS during the zeroing, only to unconditionally write it later - so have removed it from the zeroing step.
Note, the locations 80-111 are now considered as system CMOS in the allocations hence are now wiped too (previously they got skipped as user CMOS during R-power-on).

Tested on OMAP3 ROM with delete-power-on and R-power-on variants, and a simple BASIC program to read locations 0-255 via OS_NVMemory.

Version 5.35, 4.79.2.180. Tagged as 'Kernel-5_35-4_79_2_180'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.180
#define Module_Date_CMHG                10 Jan 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.180"
#define Module_Date                     "10 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "10-Jan-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.180)"
#define Module_HelpVersion              "5.35 (10 Jan 2013) 4.79.2.180"
@


4.79.2.181
log
@Extend possible range of OS_Call[After|Every]
OS_CallAfter and OS_CallEvery were treating the delay in R0 as a signed number, limiting its possible range. The PRM didn't require this (a -ve delay doesn't make sense, so implicitly times are unsigned), reworked to allow times up to 0xFFFFFBFF.
Aside:
  OSLib exports these functions as 'int', but it doesn't seem to make a distinction for unsigned versus signed anyway (other unsigned arguments are plain int too)
  The 'callx' library was already prototyped with unsigned times back in 1997

Added comment to hdr/Options about FirstUnpluggableModule - since the keyboard and mouse drivers got moved out of the kernel in 3.50, the original intent (to not allow you to unplug vital modules) has long since been lost, and really the only use of this value is to save 8 bits of CMOS frugal bits.

Version 5.35, 4.79.2.181. Tagged as 'Kernel-5_35-4_79_2_181'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.181
#define Module_Date_CMHG                17 Jan 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.181"
#define Module_Date                     "17 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jan-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.181)"
#define Module_HelpVersion              "5.35 (17 Jan 2013) 4.79.2.181"
@


4.79.2.182
log
@Add new HAL call, HAL_IRQMax, to allow the kernel to determine the number of IRQ lines/devices at runtime
Detail:
  hdr/HALEntries - Reuse the old HAL_MonitorLeadID call number for HAL_IRQMax
  hdr/KernelWS - Rearrange CursorChunkAddress workspace a bit. Removed unused OldOscliBuffs and a couple of pre-HAL allocations, and made DefIRQ1Vspace the same size for all build configs. Add an IRQMax var to zero page workspace to cache the value returned by HAL_IRQMax.
  s/HAL - Initialise IRQMax shortly after HAL initialisation. Revise ClearPhysRAM comment to reflect which vars are preserved in the current version of the code.
  s/NewIRQs - Strip out a fair bit of pre-HAL code to make the file more readable. Update OS_ClaimDeviceVector/OS_ReleaseDeviceVector to check against IRQMax instead of the MaxInterrupts compile-time limit.
Admin:
  Tested on BB-xM, Iyonix, RiscPC, Pi
  Although the OS will now nominally adapt at runtime to how many IRQ devices there are, it's still using MaxInterrupts as an upper limit as the device claimant table has a fixed memory allocation.


Version 5.35, 4.79.2.182. Tagged as 'Kernel-5_35-4_79_2_182'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.182
#define Module_Date_CMHG                22 Jan 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.182"
#define Module_Date                     "22 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jan-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.182)"
#define Module_HelpVersion              "5.35 (22 Jan 2013) 4.79.2.182"
@


4.79.2.183
log
@Adopt some switches from Hdr:Machine/Machine
SystemName, ROMSizeOffset, HAL32, HAL26 only used here, moved here.
Remove uses of "M_" booleans, apparently that's bad form.
Fix SWIDespatch_Size for the non thumb capable case (was ASSERTing).
Swapped UserMemStart for AppSpaceStart.
Removed last use of OldComboSupport (pre Medusa!).
Removed switch 'CDVPoduleIRQs', a correction to the machine definitions mean this can now simply be switched on NumberOfPodules (previously, IOMD couldn't chain podule interrupts).
Take out disabled sub interrupt support - it's in CVS if you want to try to get it working.
Moved ConfiguredLang to 11 for everyone, it only matters if !Boot fails, and no harm in making it common for 5.xx onwards.

Version 5.35, 4.79.2.183. Tagged as 'Kernel-5_35-4_79_2_183'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.183
#define Module_Date_CMHG                27 Jan 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.183"
#define Module_Date                     "27 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jan-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.183)"
#define Module_HelpVersion              "5.35 (27 Jan 2013) 4.79.2.183"
@


4.79.2.184
log
@Retire single use of DebugROMErrors
hdr/Options: Switch removed
s/Modhand: Switch removed, now considered equivalent to DebugROMInit. DebugROMInit changed so that the callback ordering is as expected, batched up until "callbacks" is hit after Service_PostInit.
PMF/osbyte: Redundant RISC OS 2.01 code deleted

Version 5.35, 4.79.2.184. Tagged as 'Kernel-5_35-4_79_2_184'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.184
#define Module_Date_CMHG                24 Mar 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.184"
#define Module_Date                     "24 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "24-Mar-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.184)"
#define Module_HelpVersion              "5.35 (24 Mar 2013) 4.79.2.184"
@


4.79.2.185
log
@Fix to localisation of OS_Word 15,15 when using nonzero timezones
The three subreasons were being dealt with as follows

8  - time only => convert time; read clock & convert that; mix; to UTC; set
15 - date only => convert date; to UTC; set
24 - both      => convert both; to UTC; set

So subreason 15 ended up setting the clock with the UTC date not taking into account any rollover/under due to the timezone. Now, the behaviour is

15 - date only => convert date; read clock & convert that; mix; to UTC; set

An example program to illustrate this is

 DIM block 128
 REM Example boundary case for -ve timezone
 REM *config.timezone -5
 REM TIME$="Sun,01 Jan 2013.19:01:00"

 REM Example boundary case for +ve timezone
 *config.timezone 5
 TIME$="Sun,01 Jan 2013.04:59:00"

 PRINT"Local => ";TIME$
 FOR i = 1 TO 31
  block?0=15
  $(block+1)="Sun,"+RIGHT$("0"+STR$i,2)+" Jan 2013"+CHR$0
  SYS"OS_Word",15,block
  OSCLI"echo <sys$time> <sys$date> <sys$year>"
 NEXT

Fault originates in Kernel-4_63-1_1_2_2.
Fixes ticket #230.

Version 5.35, 4.79.2.185. Tagged as 'Kernel-5_35-4_79_2_185'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.185
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.185"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.185)"
#define Module_HelpVersion              "5.35 (24 Mar 2013) 4.79.2.185"
@


4.79.2.186
log
@Teach the kernel about different memory attributes
Detail:
  Briefly, this set of changes:
  * Adjusts PhysRamTable so that it retains the flags passed in by the HAL from OS_AddRAM (by storing them in the lower 12 bits of the size field)
  * Sorts the non-VRAM entries of PhysRamTable by speed and DMA capability, to ensure optimal memory allocation during OS startup.
  * Adjust the initial memory allocation logic to allow the cursor/sound chunk and HAL noncacheable workspace to come from DMA capable memory
  * Extends OS_Memory 12 to accept a 'must be DMA capable' flag in bit 8 of R0. This is the same as available in ROL's OS.
  * Extends OS_DynamicArea 0 to allow the creation of dynamic areas that automatically allocate from DMA capable memory. In ROL's OS this was done by setting bit 12 of R4, but we're using bits 12-14 for specifying the cache policy, so instead bit 15 is used.
  * Fixes OS_ReadSysInfo 6 to return the correct DevicesEnd value now that the IRQ/device limit is computed at runtime
  File changes:
  * hdr/OSEntries - Add definitions of the various flags passed to OS_AddRAM by the HAL. Add a new flag, NoDMA, for memory which can't be used for DMA.
  * hdr/KernelWS - Tidy PhysRamTable definition a bit by removing all the DRAM bank definitions except the first - this makes it easier to search for code which is interacting with the table. Remove VRAMFlags, it's redundant now that the flags are kept in the table. Add DMA allocation info to InitWs.
  * s/AMBControl/memmap - Updated to mask out the flags from PhysRamTable when reading RAM block sizes.
  * s/ARM600 - Strip out a lot of IOMD specific pre-HAL code.
  * s/ChangeDyn - Updated to cope with the flags stored in PhysRamTable. Implement support for DMA-capable dynamic areas. Rewrite InitDynamicAreas to insert pages into the free pool in the right order so that the fastest memory will be taken from it first.
  * s/GetAll, s/Middle - Fix OS_ReadSysInfo 6 to return the correct HAL-specific DevicesEnd value
  * s/HAL - Significant rework of initial RAM allocation code to allow the kernel workspace to come from the fastest DMA incapable RAM, while also allowing allocation of DMA capable memory for HAL NCNB workspace & kernel cursor/sound chunks. ClearPhysRAM rewritten as part of this.
  * s/MemInfo - Updated to cope with the flags stored in PhysRamTable. Add support for the new OS_Memory 12 flag. Update OS_Memory 7 to not assume PhysRamTable entries are sorted in address order, and rip out the old pre-HAL IOMD implementation.
  * s/NewReset - Remove GetPagesFromFreePool option, assume TRUE (as this has been the case for the past 10+ years). Revise a few comments and strip dead code. Update to cope with PhysRamTable flags.
  * s/VMSAv6 - Remove a couple of unused definitions
  * s/vdu/vdudriver - Update to cope with PhysRamTable flags
Admin:
  Tested in Kinetic RiscPC ROM softload, Iyonix softload, & OMAP3


Version 5.35, 4.79.2.186. Tagged as 'Kernel-5_35-4_79_2_186'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.186
#define Module_Date_CMHG                28 Mar 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.186"
#define Module_Date                     "28 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "28-Mar-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.186)"
#define Module_HelpVersion              "5.35 (28 Mar 2013) 4.79.2.186"
@


4.79.2.187
log
@Header changes for OMAP4
GPIODevice: defines for OMAP4 targets
KernelWS: bump up the IICBus_Count from 3 to 4

Version 5.35, 4.79.2.187. Tagged as 'Kernel-5_35-4_79_2_187'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.187
#define Module_Date_CMHG                07 Apr 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.187"
#define Module_Date                     "07 Apr 2013"
d16 1
a16 1
#define Module_ApplicationDate          "07-Apr-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.187)"
#define Module_HelpVersion              "5.35 (07 Apr 2013) 4.79.2.187"
@


4.79.2.188
log
@Adjust handling of OS_ReadSysInfo 4
Detail:
  s/Middle - If the HAL provides an extended machine ID, make sure OS_ReadSysInfo 4 doesn't return a MAC address. This is because the old-style machine ID which the MAC is extracted from will be completely synthetic and is so known not to contain a MAC (even if it may look like it does)
Admin:
  Tested on BB-xM, Raspberry Pi


Version 5.35, 4.79.2.188. Tagged as 'Kernel-5_35-4_79_2_188'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.188
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.188"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.188)"
#define Module_HelpVersion              "5.35 (07 Apr 2013) 4.79.2.188"
@


4.79.2.189
log
@Allow bursting during ClearPhysRAM on StrongARM
The StrongARM TRM (and hints from ARM600.s revision 4.3.2.2) show that the StrongARM will only do burst writes to memory marked as C=1 B=1, but by default RISCOS_AccessPhysicalAddress only allows bufferable.
So, checking for StrongARM first, two extra snippets are enabled - first mark as C=1 B=1, then afterwards clean the cache before moving onto the next 1MB.

On a StrongARM Kinetic these burst writes improve the RAM clear from ~60ms per MB to 40ms per MB. For a 256MB SODIMM that's over 5s knocked off the boot time.
Other memory configurations will be similarly improved, though 256MB is of course the maximum the motherboard can hold.

Tested in ROM on a Risc PC with StrongARM and ARM710.

Version 5.35, 4.79.2.189. Tagged as 'Kernel-5_35-4_79_2_189'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.189
#define Module_Date_CMHG                27 May 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.189"
#define Module_Date                     "27 May 2013"
d16 1
a16 1
#define Module_ApplicationDate          "27-May-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.189)"
#define Module_HelpVersion              "5.35 (27 May 2013) 4.79.2.189"
@


4.79.2.190
log
@Get a tag for 5.20.

Version 5.35, 4.79.2.190. Tagged as 'Kernel-5_35-4_79_2_190'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.190
#define Module_Date_CMHG                01 Jun 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.190"
#define Module_Date                     "01 Jun 2013"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jun-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.190)"
#define Module_HelpVersion              "5.35 (01 Jun 2013) 4.79.2.190"
@


4.79.2.191
log
@Back to odd numbered development.

Version 5.35, 4.79.2.191. Tagged as 'Kernel-5_35-4_79_2_191'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.191
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.191"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.191)"
#define Module_HelpVersion              "5.35 (01 Jun 2013) 4.79.2.191"
@


4.79.2.192
log
@Add system peripheral type NVRAM for some common types/sizes

Version 5.35, 4.79.2.192. Tagged as 'Kernel-5_35-4_79_2_192'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.192
#define Module_Date_CMHG                12 Jul 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.192"
#define Module_Date                     "12 Jul 2013"
d16 1
a16 1
#define Module_ApplicationDate          "12-Jul-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.192)"
#define Module_HelpVersion              "5.35 (12 Jul 2013) 4.79.2.192"
@


4.79.2.193
log
@Announce an RTC sync with a service call
Step changes in RealTime are now accompanied by a service call. Note the initial read isn't announced, mainly because this is before the module chain is started so nobody's listening anyway.

Version 5.35, 4.79.2.193. Tagged as 'Kernel-5_35-4_79_2_193'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.193
#define Module_Date_CMHG                31 Jul 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.193"
#define Module_Date                     "31 Jul 2013"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jul-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.193)"
#define Module_HelpVersion              "5.35 (31 Jul 2013) 4.79.2.193"
@


4.79.2.194
log
@Add support for the new RISC OS 5 style sprite mode word. Add partial support for alpha channel sprite masks. Implement OS_ScreenMode reasons 13-15
Detail:
  ECFShift/ECFYOffset:
  - hdr/PublicWS - Add ECFShift and ECFYOffset to list of public exports (SpriteExtend was using hardcoded values). Rearrange exports so that VduWorkspace exports are now labelled as such.
  - hdr/KernelWS - Make sure ECFShift & ECFYOffset match their exported locations
  - hdr/OSRSI6, s/Middle - Add OS_ReadSysInfo 6 items 83 & 84, for reading ECFYOffset and ECFShift locations
  Mode flags/VDU variables:
  - Makefile - Add hdr/VduExt to the C header exports
  - hdr/VduExt - Get rid of NotRVVTBarWobblyBits macro and defined VDU variables manually so that Hdr2H will handle them. Begin replacing overly generic 'Flag_*' mode flag definitions with 'ModeFlag_*' instead. Define new flags as required by the new screen/sprite modes. Add OS_ScreenMode reason codes and mode selector format (from s.vdu.vdudecl)
  - NewModes/NEWF2, NewModes/OldPSSrc, NewModes/PSSrc, s.vdu.vdu23, s.vdu.vducursoft, s.vdu.vdudriver, s.vdu.vdugrafg, s.vdu.vdugrafj, s.vdu.vdugrafl, s.vdu.vdumodes, s.vdu.vdupal10, s.vdu.vdupal20, s.vdu.vdupalette, s.vdu.vdupalxx, s.vdu.vduwrch - Renaming Flag_* to ModeFlag_*
  - s.vdu.vdudecl - Remove OS_ScreenMode reason codes & mode selector format definitions; these are now in hdr/VduExt. Flag_* -> ModeFlag_* renaming.
  - s.vdu.vdupalxx - Apply a greyscale palette in PV_SetDefaultPalette if the greyscale mode flag is set
  New sprite types:
  - s.vdu.vdudriver - Extend GenerateModeSelectorVars to deal with the wide mask flag, 64K sprites, and the new RISC OS 5 sprite mode word format.
  - s.vdu.vdugrafdec - Store more information about the sprite in the SprReadNColour ... SprLog2BPC block.
  - s.vdu.vdugrafg - Update SpriteVecHandler to be able to detect whether RISC OS 5 format sprites are allowed palettes. Update SetupSprModeData to store the extra sprite info that's defined in vdugrafdec. Update PutSprite to fault any sprites with wide masks - SpriteExtend must be used for that (once implemented!)
  - s.vdu.vdugrafh - Update WritePixelColour to avoid temporary poking of NColour VDU variable for 8bpp sprites. Correctly replicate data when writing to RISC OS 5 format sprites. Update ReadPixelMask, WritePixelMask, SpriteMaskAddr, GetMaskspWidth to deal with wide masks. Delete obsolete bounce_new_format_masks routine.
  - s.vdu.vdugrafi - Comment updated to reflect new reality
  - s.vdu.vdugrafj - Get rid of unused code block in CreateHeader/PostCreateHeader. Update SanitizeSGetMode to generate RISC OS 5 style sprite mode words where applicable. Update DecideMaskSize to rely on GetMaskspWidth for calculating mask width.
  - s.vdu.vdugrafl - Update SwitchOutputToSprite/SwitchOutputToMask to deal with the new sprite formats. Allow PushModeInfoAnyMonitor to fail.
  - s.vdu.vduswis - Extended OS_ReadModeVariable to cope with new sprite types
  Misc:
  - s.vdu.vdudriver - Fixed bug with VIDCList copying where any -1 value in the structure would terminate the copy, instead of only -1 as a control item number
  - s.vdu.vduswis - Implemented OS_ScreenMode 13 (Mode string to specifier), 14 (mode specifier to string), and 15 (set mode by string). Mostly as per ROL's specs, but minus support for teletext attributes, and plus support for new RISC OS 5 attributes (L... layout specifier, 4096 & 24bpp packed modes, etc.)
  - s.vdu.vduwrch - Pick correct default text colours for the new modes
Admin:
  Tested on BB-xM
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 5.35, 4.79.2.194. Tagged as 'Kernel-5_35-4_79_2_194'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.194
#define Module_Date_CMHG                06 Aug 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.194"
#define Module_Date                     "06 Aug 2013"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.194)"
#define Module_HelpVersion              "5.35 (06 Aug 2013) 4.79.2.194"
@


4.79.2.195
log
@Fix errors building for pre-ARMv7
Detail:
  s/vdu/vduswis - Add an extra LTORG that's within range of LDR r14,=&1FFF instruction
Admin:
  Tested in Iyonix softload
  Fixes build errors for Tungsten ROM, should fix IOMD + BCM2835 too.


Version 5.35, 4.79.2.195. Tagged as 'Kernel-5_35-4_79_2_195'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.195
#define Module_Date_CMHG                07 Aug 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.195"
#define Module_Date                     "07 Aug 2013"
d16 1
a16 1
#define Module_ApplicationDate          "07-Aug-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.195)"
#define Module_HelpVersion              "5.35 (07 Aug 2013) 4.79.2.195"
@


4.79.2.196
log
@Clean up of RISCOS_IICOpV
No longer returns a RISC OS specific error block to the HAL, instead uses a platform agnostic IICStatus value.

Version 5.35, 4.79.2.196. Tagged as 'Kernel-5_35-4_79_2_196'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.196
#define Module_Date_CMHG                28 Sep 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.196"
#define Module_Date                     "28 Sep 2013"
d16 1
a16 1
#define Module_ApplicationDate          "28-Sep-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.196)"
#define Module_HelpVersion              "5.35 (28 Sep 2013) 4.79.2.196"
@


4.79.2.197
log
@Fix plotting of RISC OS 5 type sprites and masks. Fix hang when attempting to report "alpha mask not supported" error. Fix reading/writing of alpha mask pixels.
Detail:
  s/vdu/vdugrafg - Fixed PutSprite and PlotMask to correctly deal with RISC OS 5 type sprite mode words. Fix infinite loops in PutSpriWideMaskErr casued by R14 getting trashed.
  s/vdu/vdugrafh - Fixed SpriteMaskAddr malfunctioning when trying to calculate addresses in alpha masks. Minor ReadPixelMask & WritePixelMask optimisations.
  s/vdu/vduswis - Fixed OS_ScreenMode 13 & 14 to count "G2" as a valid colour specifier.
Admin:
  Tested on BB-xM
  Should hopefully fix the random hangs reported on the forums when trying to use sprites with alpha masks


Version 5.35, 4.79.2.197. Tagged as 'Kernel-5_35-4_79_2_197'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.197
#define Module_Date_CMHG                06 Oct 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.197"
#define Module_Date                     "06 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "06-Oct-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.197)"
#define Module_HelpVersion              "5.35 (06 Oct 2013) 4.79.2.197"
@


4.79.2.198
log
@More alpha mask read/write fixes
Detail:
  s/vdu/vdugrafh - Fixed SpriteMaskAddr to use the right Log2BPC value when generating addressed for alpha masks. Fix ReadPixelMask to return 255 when sprite has now mask, but mode word has wide mask bit set.
Admin:
  Tested on BB-xM
  Reading/writing alpha mask pixels now works properly across the whole image


Version 5.35, 4.79.2.198. Tagged as 'Kernel-5_35-4_79_2_198'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.198
#define Module_Date_CMHG                13 Oct 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.198"
#define Module_Date                     "13 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.198)"
#define Module_HelpVersion              "5.35 (13 Oct 2013) 4.79.2.198"
@


4.79.2.199
log
@Fixes to NeedsYearHelp clock case
Want LSR not ROR otherwise in the need help + HAL + 2 bit case the IIC address in R1 comes out as &800000A1.
Added HAL device ids for a couple more RTC devices.

Version 5.35, 4.79.2.199. Tagged as 'Kernel-5_35-4_79_2_199'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.199
#define Module_Date_CMHG                27 Oct 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.199"
#define Module_Date                     "27 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "27-Oct-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.199)"
#define Module_HelpVersion              "5.35 (27 Oct 2013) 4.79.2.199"
@


4.79.2.200
log
@Fix to RTC initial read when year hasn't rolled
There's an exit case from CheckYear which skips the actual clock read, so add an explicit call to RTCToRealTime for that case (cf. OS_ResyncTime).
Remove use of ARMv2 era MULTIPLY macro, just use MUL.
Tested on IOMD with a HAL RTC.

Version 5.35, 4.79.2.200. Tagged as 'Kernel-5_35-4_79_2_200'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.200
#define Module_Date_CMHG                28 Oct 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.200"
#define Module_Date                     "28 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.200)"
#define Module_HelpVersion              "5.35 (28 Oct 2013) 4.79.2.200"
@


4.79.2.201
log
@Little kernel patches
hdr/ExportVals: the copyright header insertion got a bit confused with some of the file contents
TickEvents.s: a bad merge from Ursula branch 4.1.4.2 to trunk 4.2 left behind unmatched push/pull where TickIrqReenter had been removed
hdr/Options & NewIRQs.s: collapse remaining TickIrqReenter switches
osinit.s: when ZeroPage is in a top bit set address only the last buffer pointer would get zeroed

Tip offs from eagle eyed Tim Baldwin.

Version 5.35, 4.79.2.201. Tagged as 'Kernel-5_35-4_79_2_201'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.201
#define Module_Date_CMHG                16 Nov 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.201"
#define Module_Date                     "16 Nov 2013"
d16 1
a16 1
#define Module_ApplicationDate          "16-Nov-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.201)"
#define Module_HelpVersion              "5.35 (16 Nov 2013) 4.79.2.201"
@


4.79.2.202
log
@Migrate RTC driver out of the kernel
The kernel will use RTC_Read and RTC_Write to access the hardware clock, while maintaining the software clock as before.
Makefile: header export is now in the RTC module's sources
KernelWS: remove RTCFitted flag
NewReset: sync the time after the module init
i2cutils: deleted clock chip code
osinit: move OS_ResyncTime into PMF/realtime
realtime: mostly packages up ordinals and calls the respective SWI

Tested on IOMD softload.

Version 5.35, 4.79.2.202. Tagged as 'Kernel-5_35-4_79_2_202'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.202
#define Module_Date_CMHG                20 Nov 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.202"
#define Module_Date                     "20 Nov 2013"
d16 1
a16 1
#define Module_ApplicationDate          "20-Nov-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.202)"
#define Module_HelpVersion              "5.35 (20 Nov 2013) 4.79.2.202"
@


4.79.2.203
log
@Assorted GraphicsV improvements
Detail:
  This set of changes:
  * Adds basic support for multiple GraphicsV drivers, by way of some new OS_ScreenMode reason codes for registering/deregistering, selecting and enumerating drivers (11, 64-68)
  * Tidies up handling of HAL video calls so that the HAL calls will be transformed into a bona fide GraphicsV driver if they're implemented
  * Changes handling of 16bpp gamma table entries so that they're sent to GraphicsV in a generic form instead of in a VIDC-specific form
  * Adds a new GraphicsV call and defines new VIDC list items to allow GraphicsV drivers to utilise the new pixel formats
  File changes:
  * h/VIDCList, hdr/VIDCList, Makefile - Add new header export containing VIDC list type 3 definitions, to avoid repeated definitions in other components
  * Resources/UK/Messages - Add new GraphicsV/OS_ScreenMode error strings and some missing processor type strings
  * hdr/KernelWS - Clean up some pre-GraphicsV definitions, and add new workspace locations for storing the current GraphicsV driver number and the driver list
  * hdr/Options - Remove obsolete InverseTextTransparency option
  * hdr/VduExt - Add VDU variable 192 for storing GraphicsV driver number (same as ROL's VideoV driver number). Remove old 'Flag_*' mode flag definitions (use new 'ModeFlag_*' defintions instead). Add new OS_ScreenMode reason codes.
  * s/ARM600, s/VMSAv6, s/vdu/vdu23, s/vdu/vdugrafa, s/vdu/vdugrafd, s/vdu/vdupalxx, s/vdu/vdupointer, s/vdu/vduwrch - Strip out pre-GraphicsV code. Update GraphicsV code to use correct driver number.
  * s/ArthurSWIs - Pass the default GraphicsV claimant the VduDriverWorkSpace instead of ZeroPage
  * s/Getall - Add Hdr:VIDCList and s/vdu/VduGrafHAL to list of GETs
  * s/NewIRQs - Remove HAL VSync IRQ initialisation, is now handled by grafvhal. Remove old HAL VsyncIRQ entry point, all VSyncs are now handled by VsyncIRQ_ExtEntry.
  * s/PMF/osbyte - Stop OS_Byte 19 waiting forever if no video driver is active
  * s/PMF/osinit - Remove HAL VSync IRQ initialisation, is now handled by grafvhal
  * s/vdu/vducursoft - Use new workspace variable names and flag names
  * s/vdu/vdudecl - Remove old HALDAG_* definitions, GVDAG_* definitions are used instead. Add definition of the per-driver workspace structure and flags.
  * s/vdu/vdudriver - Remove pre-GraphicsV code. Update InitialiseMode to check for and initialise a HAL driver. Use cached driver features word in a few places instead of calling GraphicsV each time. Update PalIndexTable to disable VIDC mangling of 16bpp gamma tables.
  * s/vdu/vdugrafv, s/vdu/vdugrafhal - HAL<->GraphicsV code split off into its own file (vdugrafhal). Default GraphicsV claimant now only deals with VSync events for the active driver.
  * s/vdu/vdumodes - Get rid of old VIDC List type 3 definiton; now in hdr/VIDCList
  * s/vdu/vduswis - Added OS_ScreenMode reason codes 11 and 64-68 for registering, deregistering, selecting and enumerating GraphicsV drivers. Update mode set code to not bother checking if the driver supports the pixel format; instead we assume that the driver's vet mode call will do the check for us.
Admin:
  Tested in Tungsten, IOMD, OMAP3 & BCM2835 ROMs
  Requires HdrSrc-2_38 and updated video driver modes


Version 5.35, 4.79.2.203. Tagged as 'Kernel-5_35-4_79_2_203'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.203
#define Module_Date_CMHG                15 Dec 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.203"
#define Module_Date                     "15 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.203)"
#define Module_HelpVersion              "5.35 (15 Dec 2013) 4.79.2.203"
@


4.79.2.204
log
@Strip out some old build switches
Detail:
  hdr/Options, s/ArthurSWIs, s/ChangeDyn, s/PMF/KbdDrA1, s/PMF/key, s/vdu/vdugrafa, s/vdu/vdugrafd, s/vdu/vdugrafhal, s/vdu/vdugrafv, s/vdu/vdumodes, s/vdu/vduwrch:
  - Strip out DoingVdu build switch (did nothing)
  - Strip out Japanese16BitSound switch (did nothing)
  - Strip out MakeModeSelectorsForModeNUmbers switch (altered the mode list structures, but there wasn't any code to do anything with the new data)
  - Strip out remaining uses of UseGraphicsV switch (now hardwired to {TRUE})
  - Strip out ShadowROM switch (altered FixedAreasTable to show the shadow mapping, but code to create the mapping is missing)
  - Strip out PollMouse switch (old Archimedes-era debug/development option)
Admin:
  Tested on BB-xM
  Builds to same binary as previous version


Version 5.35, 4.79.2.204. Tagged as 'Kernel-5_35-4_79_2_204'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.204
#define Module_Date_CMHG                17 Dec 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.204"
#define Module_Date                     "17 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "17-Dec-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.204)"
#define Module_HelpVersion              "5.35 (17 Dec 2013) 4.79.2.204"
@


4.79.2.205
log
@Fix CAO pointer being reset incorrectly when calling OS_ExitAndDie with zero page relocation enabled
Detail:
  s/MoreSWIs - OS_ExitAndDie now correctly sets the CAO to zero when ZeroPage is non-zero
Admin:
  Tested on BB-xM with high processor vectors
  Issue originally spotted by Sprow


Version 5.35, 4.79.2.205. Tagged as 'Kernel-5_35-4_79_2_205'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.205
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.205"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.205)"
#define Module_HelpVersion              "5.35 (17 Dec 2013) 4.79.2.205"
@


4.79.2.206
log
@Miscellaneous fixes
Detail:
  s/MemInfo - Fix OS_Memory 0 physical-to-logical conversion returning bad addresses for most cases due to R5 being modified by physical_to_ppn (bug introduced in revision 4.4.2.20)
  s/vdu/vdudriver - Fix some VDU driver variables not being initialised correctly when switching GraphicsV driver
  s/vdu/vdugrafv - Fix handling of VSync events from GraphicsV drivers other than driver zero
  s/vdu/vduswis - Fix abort when OS_ScreenMode 11 is passed a bad driver number
Admin:
  Tested on Raspberry Pi
  There still seems to be a bug lurking somewhere when switching to a GraphicsV driver that uses DA2; the system will crash horribly unless DA2 is already a suitable size for the initial mode change


Version 5.35, 4.79.2.206. Tagged as 'Kernel-5_35-4_79_2_206'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.206
#define Module_Date_CMHG                19 Dec 2013
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.206"
#define Module_Date                     "19 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "19-Dec-13"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.206)"
#define Module_HelpVersion              "5.35 (19 Dec 2013) 4.79.2.206"
@


4.79.2.207
log
@Fix dodgy mode changes on Raspberry Pi. Fix crash when switching to a driver which uses DA 2 if DA 2 isn't already large enough.
Detail:
  s/vdu/vdudriver:
  - Fix bug in ModeChangeSub which caused the VariableFramestore flag to be ignored, resulting in unreliable mode changes on the Raspberry Pi.
  - Changed InitialiseMode to reset a few more variables when preparing to use a driver which uses DA 2. Without this the screen DA handler will likely crash when attempting to resize the DA for the initial mode change.
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.207. Tagged as 'Kernel-5_35-4_79_2_207'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.207
#define Module_Date_CMHG                01 Jan 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.207"
#define Module_Date                     "01 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jan-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.207)"
#define Module_HelpVersion              "5.35 (01 Jan 2014) 4.79.2.207"
@


4.79.2.208
log
@Fix some exception preveneers going to the wrong place when high processor vectors are enabled
Detail:
  s/Kernel - UndPreVeneer, PAbPreVeneer and AdXPreVeneer all need to take into account the location of ZeroPage. In reality UndPreVeneer is the only one that matters, as the other two aren't really used.
Admin:
  Tested on Raspberry Pi with high processor vectors
  Undefined instructions now generate errors correctly


Version 5.35, 4.79.2.208. Tagged as 'Kernel-5_35-4_79_2_208'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.208
#define Module_Date_CMHG                19 Jan 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.208"
#define Module_Date                     "19 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.208)"
#define Module_HelpVersion              "5.35 (19 Jan 2014) 4.79.2.208"
@


4.79.2.209
log
@Add support for LDRSB to data abort handler
ARM600:
Decode LDRSB, do the sign extend, and fault all the other loads and stores not understood.
VMSAv6:
As the loads and stores not understood are now vetted properly, it should be safe to UseProcessTransfer (previously they'd have been disassembled incorrectly).
Paste in LDRSB code from ARM600.
Fix dubious looking access of CurrentGraphicsVDriver from WsPtr.

Tested briefly on StrongARM.

Version 5.35, 4.79.2.209. Tagged as 'Kernel-5_35-4_79_2_209'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.209
#define Module_Date_CMHG                26 Jan 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.209"
#define Module_Date                     "26 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jan-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.209)"
#define Module_HelpVersion              "5.35 (26 Jan 2014) 4.79.2.209"
@


4.79.2.210
log
@ModeFlag_GreyscalePalette handling improvements. Issue service calls on certain GraphicsV events. Sprite tweaks and fixes.
Detail:
  hdr/VduExt - Add reason codes used by Service_DisplayChanged & Service_DisplayStatus
  s/vdu/vdugrafg - Remove dependency on SpriteReason_BadReasonCode; just use the size of our lookup table instead. Alter SpriteOp lookup table so that unimplemented ops return an error instead of doing nothing. Fix PutSprite incorrectly using the slow GCOL action plotter if a request was made to plot a sprite using its mask but the sprite has none.
  s/vdu/vdugrafl - Update screen redirection handling to set ModeFlag_GreyscalePalette if switching output to a sprite with a greyscale palette or a RISC OS Select alpha mask. Restore the flag to its correct value when restoring screen output.
  s/vdu/vdupalxx - Update ModeFlag_GreyscalePalette in realtime as the palette is changed
  s/vdu/vduswis - Issue Service_DisplayChanged during OS_ScreenMode 11. Issue Service_DisplayStatus during OS_ScreenMode 65 & 66.
Admin:
  Tested on Iyonix, BB-xM


Version 5.35, 4.79.2.210. Tagged as 'Kernel-5_35-4_79_2_210'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.210
#define Module_Date_CMHG                09 Mar 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.210"
#define Module_Date                     "09 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "09-Mar-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.210)"
#define Module_HelpVersion              "5.35 (09 Mar 2014) 4.79.2.210"
@


4.79.2.211
log
@Fix ProcessTransfer bug with LDM
Detail:
  s/ARM600, s/VMSAv6 - When processing an LDM which wasn't the "user mode registers" form, the initialisation of lr was being skipped, resulting in the registers being loaded from garbage addresses. Shuffle things around slightly so that the branch to label 34 works as intended.
Admin:
  Issue spotted by Willi Theiss
  Builds, but untested


Version 5.35, 4.79.2.211. Tagged as 'Kernel-5_35-4_79_2_211'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.211
#define Module_Date_CMHG                23 Mar 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.211"
#define Module_Date                     "23 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "23-Mar-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.211)"
#define Module_HelpVersion              "5.35 (23 Mar 2014) 4.79.2.211"
@


4.79.2.212
log
@  Fix long-standing, insidious memory management bug
Detail:
  Early in OS startup, certain kernel memory areas (zero page, the privileged
  mode stacks, system heap, etc) are initially allocated only in the L2PT.
  The soft CAM is initialised later, using the L2PT as it is at that point.
  However, the pointer to the table that maps from page table cache policy
  bit layouts for the current CPU back to the platform-independent
  (OS_DynamicArea style) flags was corrupted, meaning that the CAM entries
  for these memory areas were initialised with a default value, which was
  non-cacheable non-bufferable. Application slots and most dynamic areas were
  unaffected, because once enough of the kernel was initialised to be able to
  use AMBControl or OS_ChangeDynamicArea, this function was no longer used.
  The problem comes when those pages come to be remapped; this could be due
  to requests for specific physical RAM pages, or (what I was actually
  investigating) DDT changing the access permissions on them. The problem was
  that as far as the CPU was concerned, the pages were cacheable/bufferable,
  but BangCam examined the soft CAM to decide what cache management
  operations to perform, and so got it wrong. The subsequent poke of the L2PT
  resulted in undefined CPU behaviour; in particular it seems to cause L2
  caches to throw a strop (enough so that disabling the L2 cache was enough
  to make DDT significantly more reliable).
Admin:
  It looks like this bug has been present on all HAL versions of RISC OS.
  Tested with DDT on a Beagleboard, previously the most crashy platform.
  There remains an IRQ (and FIQ) hole in OS_SetMemMapEntries when changing
  permissions on the page containing the processor vectors, which I haven't
  attempted to fix. Arguably, it should also issue Service_PagesSafe/Unsafe,
  in case anyone is DMAing to/from the remapped pages.

Version 5.35, 4.79.2.212. Tagged as 'Kernel-5_35-4_79_2_212'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.212
#define Module_Date_CMHG                25 Mar 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.212"
#define Module_Date                     "25 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "25-Mar-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.212)"
#define Module_HelpVersion              "5.35 (25 Mar 2014) 4.79.2.212"
@


4.79.2.213
log
@Fix OS_SpriteOp 41 (read pixel) for 4K colour sprites. Update ECF patterns to work sensibly in true colour modes.
Detail:
  s/vdu/vdugrafg - Change SetupSprModeData to calculate SprReadNColour from log2bpp instead of the NColour mode variable - fixes the alpha component being lost when using OS_SpriteOp 41 to read from 4K colour sprites with alpha channels
  s/vdu/vdudriver - Change SetCol30 to generate more sensible ECF colour blocks when in true colour modes. Previously it would treat each byte of the 8 byte ECF pattern as a separate row, and replicate the byte 4 times to produce one colour word per row. However this isn't so great for true colour modes, especially if you have an alpha channel which needs specific values. So to fix the issue, take inspiration from how Paint assumed the ECF patterns worked, and treat 16bpp modes as being a 1x4 pattern and 32bpp modes as being a 1x2 pattern
Admin:
  Tested on BB-xM
  OS_SpriteOp 41 fix fixes Paint colour picker always returning 0 alpha when picking from 4K ARGB sprites
  ECF change fixes Paint's masked sprite background ECF pattern to display properly in true colour modes


Version 5.35, 4.79.2.213. Tagged as 'Kernel-5_35-4_79_2_213'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.213
#define Module_Date_CMHG                28 Mar 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.213"
#define Module_Date                     "28 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "28-Mar-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.213)"
#define Module_HelpVersion              "5.35 (28 Mar 2014) 4.79.2.213"
@


4.79.2.214
log
@Move Cache_Lx_ info inside SkippedTable region of workspace
ClearPhysRAM runs after ARM_Analyse and would wipe out the RAM copies of the various CP15 registers defining which caches are present, leading to the IMB_Full and IMB_Range operations skipping most of their job.
Space freed below DebuggerSpace by moving the RAM copies of the processor vectors up a bit.
Tested with a nobbled HAL which doesn't do the RAM clear, inspecting the workspace in a debugger to see it's preserved (only affects VSMAv6 models).

Version 5.35, 4.79.2.214. Tagged as 'Kernel-5_35-4_79_2_214'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.214
#define Module_Date_CMHG                29 Mar 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.214"
#define Module_Date                     "29 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "29-Mar-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.214)"
#define Module_HelpVersion              "5.35 (29 Mar 2014) 4.79.2.214"
@


4.79.2.215
log
@  Correction to code to add GraphicsV_PixelFormats call to
  HAL graphics driver calls.  Added further debug capability
Detail:
  Added additional HAL call. minor code correction in hal graphicsv dispatcher
  Added DebugReg macro to aid debugging
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.215. Tagged as 'Kernel-5_35-4_79_2_215'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.215
#define Module_Date_CMHG                04 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.215"
#define Module_Date                     "04 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "04-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.215)"
#define Module_HelpVersion              "5.35 (04 Apr 2014) 4.79.2.215"
@


4.79.2.216
log
@Improve Service_DisplayStatus, Service_DisplayChanged functionality
Detail:
  hdr/VduExt - Define new Service_DisplayChanged reason code for us to issue before anything actually happens. Define new Service_DisplayStatus reason codes for drivers to issue when they change their configuration/capabilities in some way.
  s/Utility - Listen out for Service_DisplayStatus
  s/vdu/vdudriver - When DisplayStatus_Changing/DisplayStatus_Changed is received for the current driver, translate into the appropriate DisplayChanged reason codes so that software which only cares about the current driver doesn't have two sets of service calls to listen out for
  s/vdu/vduswis - When switching driver in OS_ScreenMode 11, issue the new Service_DisplayChanged PreChanging reason code before we update the current GraphicsV driver VDU variable
Admin:
  Tested in Iyonix ROM softload


Version 5.35, 4.79.2.216. Tagged as 'Kernel-5_35-4_79_2_216'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.216
#define Module_Date_CMHG                06 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.216"
#define Module_Date                     "06 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.216)"
#define Module_HelpVersion              "5.35 (06 Apr 2014) 4.79.2.216"
@


4.79.2.217
log
@  Added ix6 variants of HALDevice
Detail:
Admin:


Version 5.35, 4.79.2.217. Tagged as 'Kernel-5_35-4_79_2_217'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.217
#define Module_Date_CMHG                07 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.217"
#define Module_Date                     "07 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "07-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.217)"
#define Module_HelpVersion              "5.35 (07 Apr 2014) 4.79.2.217"
@


4.79.2.218
log
@Simplify HAL_IICDevice API
The only function to use the abandoned extensions to OS_ClaimDeviceVector, the 2nd & 3rd members of the structure never got used.
Change uses of HAL_IICDevice to pass in the bus, and expect the device number back.
Docs updated accordingly.

Version 5.35, 4.79.2.218. Tagged as 'Kernel-5_35-4_79_2_218'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.218
#define Module_Date_CMHG                14 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.218"
#define Module_Date                     "14 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.218)"
#define Module_HelpVersion              "5.35 (14 Apr 2014) 4.79.2.218"
@


4.79.2.219
log
@Fix VGA/SVGA mode 7 VIDC list to be correct resolution/BPP when HiResTTX/TTX256 in use
Detail:
  s/vdu/vdumodes - Redefine VgaX_7 to be VLM_7 if HiResTTX/TTX256 in use
Admin:
  Tested on Raspberry Pi
  Fixes nasty crash when selecting mode 7 without an MDF loaded due to VIDC list being mismatched with code/VWSTAB


Version 5.35, 4.79.2.219. Tagged as 'Kernel-5_35-4_79_2_219'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.219
#define Module_Date_CMHG                16 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.219"
#define Module_Date                     "16 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "16-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.219)"
#define Module_HelpVersion              "5.35 (16 Apr 2014) 4.79.2.219"
@


4.79.2.220
log
@Change handling of GraphicsV_StartupMode. Fix OS_CheckModeValid for variable framestore case.
Detail:
  s/PMF/osinit, s/vdu/vdudriver - Move GraphicsV_StartupMode call from InitialiseMode to TranslateMonitorLeadType. This means (a) it'll only be used if the CMOS mode is set to 'auto' and (b) the returned mode can more easily be read by other modules via OS_ReadSysInfo 1.
  s/vdu/vduswis - Make OS_CheckModeValid act as if we have practically unlimited screen memory if using a GraphcisV driver with variable external framestore. In this case it's the driver should have already OK'd the memory requirements from within the VetMode call issued by FindOKMode - although the check won't be fully valid if we're checking for a shadow mode as the driver currently isn't told how many screen banks are required.
Admin:
  Tested on Raspberry Pi
  OS_CheckModeValid fix ensures valid modes which require large amounts of VRAM are reported correctly when we're currently in a low-memory mode


Version 5.35, 4.79.2.220. Tagged as 'Kernel-5_35-4_79_2_220'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.220
#define Module_Date_CMHG                18 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.220"
#define Module_Date                     "18 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "18-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.220)"
#define Module_HelpVersion              "5.35 (18 Apr 2014) 4.79.2.220"
@


4.79.2.221
log
@Fix corrupt L2PT page flags being generated on Iyonix
Detail:
  s/ARMops - If extended pages aren't supported, make sure we use a PCBTrans table which doesn't use L2_X, otherwise the AP flags for some of the sub-pages will be corrupted when the PCB flags get merged in. Add some more comments to the PCBTrans tables so it's easier to see what the different columns are.
  s/ARM600 - Fix BangCam to use extended pages if they're supported; otherwise (assuming ARMops has selected the right PCBTrans table) we'll end up corrupting the AP flags again
  s/HAL - Fix ConstructCAMfromPageTables using the wrong register for ZeroPage when looking up MMU_PCBTrans. Correct a few comments.
Admin:
  Tested on Iyonix
  Page table examination now shows that all subpages have the correct (i.e. identical) AP flags. Previously some pages would have incorrect access (e.g. every 4th subpage in some FileCore disc map/dir buffer DAs were writable in user mode)
  ARMops fix will presumably mean extended pages will now work correctly on IOP 80200, as before it would have been using small pages with corrupt AP flags


Version 5.35, 4.79.2.221. Tagged as 'Kernel-5_35-4_79_2_221'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.221
#define Module_Date_CMHG                19 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.221"
#define Module_Date                     "19 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.221)"
#define Module_HelpVersion              "5.35 (19 Apr 2014) 4.79.2.221"
@


4.79.2.222
log
@Add OS_Memory 24 implementation. Change OS_ValidateAddress to use it. Fix kernel leaving the physical access MB in a messy state. Try and protect against infinite abort loops caused by bad environment handlers.
Detail:
  s/MemInfo - Added an implementation of ROL's OS_Memory 24 call. Unlike the old OS_ValidateAddress call, this call should successfully report the presence of all memory areas known to the kernel. It should also correctly indicate which parts of a sparse DA are mapped in, unlike the old OS_ValidateAddress implementation.
  s/ChangeDyn - Update dynamic area handling to construct a lookup table for mapping logical addresses to dynamic areas; this is used by OS_Memory 24 to quickly locate which DA(s) hit a given region
  s/AMBControl/main - Make sure lazy task swapping is marked as disabled when AMB_LazyMapIn is {FALSE} - required so that OS_Memory 24 will give application space the correct flags
  s/ArthurSWIs - Switch OS_ValidateAddress over to using OS_Memory 24, as per ROL. For compatibility, Service_ValidateAddress is still issued for any areas which the kernel doesn't recognise (currently, OS_Memory 24 doesn't issue any service calls itself)
  s/Convrsions - ADR -> ADRL to keep things happy
  s/HAL - Fix L2PT page allocation and RAM clear to release the physical access region once they're done with it
  s/Kernel - Make the error dispatcher validate the error handler code ptr & error buffer using OS_Memory 24 before attempting to use them. If they look bad, reset to default. Should prevent getting stuck in an infinite abort loop in some situations (e.g. as was the case with ticket 279). The system might not fully recover, but it's better than a hard crash.
  s/Middle - Rework data/prefetch/etc. abort handlers so that DumpyTheRegisters can validate the exception dump area via OS_Memory 24 before anything gets written to it. Should also help to prevent some infinite abort loops. Strip 26bit/pre-HAL code to make things a bit more readable.
  hdr/KernelWS - Update comment
Admin:
  Tested on BB-xM, Raspberry Pi


Version 5.35, 4.79.2.222. Tagged as 'Kernel-5_35-4_79_2_222'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.222
#define Module_Date_CMHG                20 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.222"
#define Module_Date                     "20 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "20-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.222)"
#define Module_HelpVersion              "5.35 (20 Apr 2014) 4.79.2.222"
@


4.79.2.223
log
@Disable ProcessTransfer code indefinitely
Detail:
  s/ARM600, s/VMSAv6 - Disable ProcessTransfer code for all kernel configurations.
  For VMSAv6 it was definitely broken (needs to be taught about VMSAv6 page tables and ARMv6+ unaligned loads).
  For ARM600 it seems to work OK, but is of no real use as (a) we're always running in 32bit mode and so don't need to worry about processor vector writes and (b) OS_AbortTrap isn't implemented so there's no way for anyone to register an abort handling routine.
  Code is being kept around instead of deleting it straight away just in case there are some hidden knock-ons to disabling it, or we decide to implement our own OS_AbortTrap some day.
Admin:
  Tested on Iyonix, BB-xM


Version 5.35, 4.79.2.223. Tagged as 'Kernel-5_35-4_79_2_223'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.223
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.223"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.223)"
#define Module_HelpVersion              "5.35 (20 Apr 2014) 4.79.2.223"
@


4.79.2.224
log
@Fix wildly inaccurate sizes in PhysRamTable when split_block needed
When Subtractv1v2fromRAMtable is called to remove a region that results in one of the RAM blocks being split in the middle the resulting size was incorrect.
The shuffle up loop was reusing v6 as an iterator not realising that it's needed to calculate the size of the 2nd half later, the error introduced was the difference between the physical address where PhysRamTable is located and the block being split - these could be a long way apart for example when there are two SDRAM banks.
Even if the PhysRamTable is nearby (eg. 1 SDRAM bank) the result would be some weird sized entries which ultimately mean some dynamic area address space is "leaked".

Fixed by swapping to v7, and for symmetry also adjusted the shuffle down loop to match.

Version 5.35, 4.79.2.224. Tagged as 'Kernel-5_35-4_79_2_224'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.224
#define Module_Date_CMHG                30 Apr 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.224"
#define Module_Date                     "30 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "30-Apr-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.224)"
#define Module_HelpVersion              "5.35 (30 Apr 2014) 4.79.2.224"
@


4.79.2.225
log
@Be more sensible with how much RAM we put into application space on boot
Detail:
  s/NewReset - During ROM init, keep application space mostly empty instead of attempting to move all RAM into it. This prevents the page order from being reversed, ensuring that in systems with two or more memory speeds the ROM modules get to use the fast RAM instead of the slow RAM (see free pool initialisation logic in InitDynamicAreas)
  After ROM module init, rebalance memory between the free pool and application space so that they each get 50%. This will provide plenty of memory for the boot sequence and any single-tasking stuff (e.g. booting into BASIC), without starving the free pool of memory and breaking any background processes like USB.
Admin:
  Tested on BB-xM
  Fixes issue where USB devices would fail to initialise properly on some systems due to the boot sequence temporarily locking application space while the free pool is empty


Version 5.35, 4.79.2.225. Tagged as 'Kernel-5_35-4_79_2_225'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.225
#define Module_Date_CMHG                07 May 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.225"
#define Module_Date                     "07 May 2014"
d16 1
a16 1
#define Module_ApplicationDate          "07-May-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.225)"
#define Module_HelpVersion              "5.35 (07 May 2014) 4.79.2.225"
@


4.79.2.226
log
@Fix GraphicsV_StartupMode call. Fix HiProcVecs build.
Detail:
  s/MemInfo - Fixed typo causing build error with HiProcVecs/zero page relocated kernel
  s/PMF/osinit - Fix the call to GraphicsV_StartupMode to work correctly with non-zero driver numbers
Admin:
  Tested on BB-xM with high processor vectors


Version 5.35, 4.79.2.226. Tagged as 'Kernel-5_35-4_79_2_226'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.226
#define Module_Date_CMHG                01 Jun 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.226"
#define Module_Date                     "01 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jun-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.226)"
#define Module_HelpVersion              "5.35 (01 Jun 2014) 4.79.2.226"
@


4.79.2.227
log
@Add definitions for USB controller types
Detail:
  hdr/HALEntries - Added definitions for the different USB controller types reported by HAL_USBControllerInfo
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.227. Tagged as 'Kernel-5_35-4_79_2_227'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.227
#define Module_Date_CMHG                19 Jun 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.227"
#define Module_Date                     "19 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jun-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.227)"
#define Module_HelpVersion              "5.35 (19 Jun 2014) 4.79.2.227"
@


4.79.2.228
log
@Makefile recreated from fragments
Need a custom ROM stage as the Kernel is linked as a binary, and a custom exports phase as the AAsmModule makefile tops out at 3 exported headers, but otherwise the rest can be shared.
Tested in an IOMD ROM build.

Version 5.35, 4.79.2.228. Tagged as 'Kernel-5_35-4_79_2_228'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.228
#define Module_Date_CMHG                29 Jun 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.228"
#define Module_Date                     "29 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "29-Jun-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.228)"
#define Module_HelpVersion              "5.35 (29 Jun 2014) 4.79.2.228"
@


4.79.2.229
log
@  Add Raspberry Pi board revision for model B+.
Detail:
  Also added model A for completeness.
Admin:
  Required by new version of BCM2835 HAL.


Version 5.35, 4.79.2.229. Tagged as 'Kernel-5_35-4_79_2_229'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.229
#define Module_Date_CMHG                14 Jul 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.229"
#define Module_Date                     "14 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jul-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.229)"
#define Module_HelpVersion              "5.35 (14 Jul 2014) 4.79.2.229"
@


4.79.2.230
log
@Reverse interlace deprecation decision
Detail:
  hdr/VIDCList - ControlList_Interlaced is no longer deprecated, instead the sync/pol flags are.
  See discussion on forums for context:
  https://www.riscosopen.org/forum/forums/3/topics/309?page=9#posts-34152
Admin:
  Tested on BB-xM


Version 5.35, 4.79.2.230. Tagged as 'Kernel-5_35-4_79_2_230'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.230
#define Module_Date_CMHG                20 Jul 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.230"
#define Module_Date                     "20 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jul-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.230)"
#define Module_HelpVersion              "5.35 (20 Jul 2014) 4.79.2.230"
@


4.79.2.231
log
@Improve ClearPhysRAM performance
Detail:
  s/HAL - Change ClearPhysRAM to always map in memory as cacheable + bufferable instead of only on StrongARM, as it's an optimisation that can help other platforms as well.
Admin:
  Tested on BB-xM, StrongARM RiscPC


Version 5.35, 4.79.2.231. Tagged as 'Kernel-5_35-4_79_2_231'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.231
#define Module_Date_CMHG                23 Jul 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.231"
#define Module_Date                     "23 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "23-Jul-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.231)"
#define Module_HelpVersion              "5.35 (23 Jul 2014) 4.79.2.231"
@


4.79.2.232
log
@Added HAL device for iMx6 ethernet
JB

Version 5.35, 4.79.2.232. Tagged as 'Kernel-5_35-4_79_2_232'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.232
#define Module_Date_CMHG                26 Jul 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.232"
#define Module_Date                     "26 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jul-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.232)"
#define Module_HelpVersion              "5.35 (26 Jul 2014) 4.79.2.232"
@


4.79.2.233
log
@  AHCI hal device support added
  Admin:
JB

Version 5.35, 4.79.2.233. Tagged as 'Kernel-5_35-4_79_2_233'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.233
#define Module_Date_CMHG                31 Jul 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.233"
#define Module_Date                     "31 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jul-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.233)"
#define Module_HelpVersion              "5.35 (31 Jul 2014) 4.79.2.233"
@


4.79.2.234
log
@  Added hdr.options line to set up max RAMFS size.
Detail:
  s.NewReset line 1304 amended to use this variable. It was
  hard codede to 128MB as a compromise between address space reservation and size.
Admin:
  Tested OK to expand to 511MB in task manager. At 512MB the taskmanager window fails.
JB

Version 5.35, 4.79.2.234. Tagged as 'Kernel-5_35-4_79_2_234'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.234
#define Module_Date_CMHG                17 Aug 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.234"
#define Module_Date                     "17 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "17-Aug-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.234)"
#define Module_HelpVersion              "5.35 (17 Aug 2014) 4.79.2.234"
@


4.79.2.235
log
@Add more HAL USB definitions to hdr/HALEntries. Add debug option for calling HangWatch_Dump on serious errors.
Detail:
  hdr/HALEntries - Added definition of the struct returned by HAL_USBControllerInfo
  hdr/Options, s/Middle - Added the option to call HangWatch_Dump on serious errors
Admin:
  Tested on BB-xM


Version 5.35, 4.79.2.235. Tagged as 'Kernel-5_35-4_79_2_235'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.235
#define Module_Date_CMHG                29 Aug 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.235"
#define Module_Date                     "29 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "29-Aug-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.235)"
#define Module_HelpVersion              "5.35 (29 Aug 2014) 4.79.2.235"
@


4.79.2.236
log
@Fix IIC bus information being wiped by RAM clear
Detail:
  hdr/KernelWS - Enlarge the SkippedTables area to encompass IICBus_Base
  s/PMF/IIC - Manually set IICBus_Status of each bus to 0 within IICInit
Admin:
  Bug was introduced in Kernel-5_35-4_79_2_168 when IIC initialisation was moved to earlier in the ROM init sequence, but has gone unnoticed due to it only really affecting the high-level API (and none of the relevant HALs were relying on the kernel for the RAM clear)
  Tested on BB-xM with kernel RAM clear


Version 5.35, 4.79.2.236. Tagged as 'Kernel-5_35-4_79_2_236'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.236
#define Module_Date_CMHG                15 Sep 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.236"
#define Module_Date                     "15 Sep 2014"
d16 1
a16 1
#define Module_ApplicationDate          "15-Sep-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.236)"
#define Module_HelpVersion              "5.35 (15 Sep 2014) 4.79.2.236"
@


4.79.2.237
log
@Fix new format *ScreenSave'd sprites containing lefthand wastage
Detail:
  s/vdu/vdugrafk - When saving a new format sprite that would otherwise contain lefthand wastage, copy each screen row to a temporary buffer before saving it out in order to allow the wastage to be removed
Admin:
  Tested on Pandaboard
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/4/topics/2802


Version 5.35, 4.79.2.237. Tagged as 'Kernel-5_35-4_79_2_237'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.237
#define Module_Date_CMHG                16 Sep 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.237"
#define Module_Date                     "16 Sep 2014"
d16 1
a16 1
#define Module_ApplicationDate          "16-Sep-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.237)"
#define Module_HelpVersion              "5.35 (16 Sep 2014) 4.79.2.237"
@


4.79.2.238
log
@Fix PreCreateHeader to allow palettes for <=256 colour RISC OS 5 sprites. LoadCoordPair tweaks.
Detail:
  s/vdu/vdudecl - Add a couple more optimisations to LoadCoordPair - use SXTH where possible, and use LDRSH if data is halfword aligned (not currently the case, but may be in future)
  s/vdu/vdugrafj - Fix PreCreateHeader to allow <=256 colour RISC OS 5 sprites to have palettes
Admin:
  Tested on Pandaboard


Version 5.35, 4.79.2.238. Tagged as 'Kernel-5_35-4_79_2_238'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.238
#define Module_Date_CMHG                18 Sep 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.238"
#define Module_Date                     "18 Sep 2014"
d16 1
a16 1
#define Module_ApplicationDate          "18-Sep-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.238)"
#define Module_HelpVersion              "5.35 (18 Sep 2014) 4.79.2.238"
@


4.79.2.239
log
@Fix for spurious IIC access when probing
When HAL_NVMemoryType reports NVMemoryFlag_MaybeIIC the kernel tries to probe a number of common/known addresses on startup, however the result of the probe is stored around line 1346 without a value value for zero page in R2.
This is sufficiently early on that the default data abort handler (from when probing the ARM's abort model) is still in place so the stores are silently skipped.
Due to the RAM clear the NVRamBase (and size) are 0, which later on in ValChecksum result in a zero length IIC probe to address &01.
Now, R2 is initialised.

Version 5.35, 4.79.2.239. Tagged as 'Kernel-5_35-4_79_2_239'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.239
#define Module_Date_CMHG                01 Oct 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.239"
#define Module_Date                     "01 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "01-Oct-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.239)"
#define Module_HelpVersion              "5.35 (01 Oct 2014) 4.79.2.239"
@


4.79.2.240
log
@ Re enable compile with kernel built from current tree.

Detail:
Recent kernal changes appear to have enabled lazy task swapping, which brought
up a data alignment abort whilst compiling the source tree using a rom compiled
from this tree. Simple change added
to AMB_MakeHonestLA and PN routines to avoid this.

Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.240. Tagged as 'Kernel-5_35-4_79_2_240'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.240
#define Module_Date_CMHG                15 Oct 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.240"
#define Module_Date                     "15 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "15-Oct-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.240)"
#define Module_HelpVersion              "5.35 (15 Oct 2014) 4.79.2.240"
@


4.79.2.241
log
@Update HAL device ID allocations
Detail:
  hdr/HALDevice - Added some extra HAL device IDs
Admin:
  Tested by building BCM2835 ROM


Version 5.35, 4.79.2.241. Tagged as 'Kernel-5_35-4_79_2_241'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.241
#define Module_Date_CMHG                18 Oct 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.241"
#define Module_Date                     "18 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "18-Oct-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.241)"
#define Module_HelpVersion              "5.35 (18 Oct 2014) 4.79.2.241"
@


4.79.2.242
log
@Added a disc install phase as an analogue of the export phase

Version 5.35, 4.79.2.242. Tagged as 'Kernel-5_35-4_79_2_242'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.242
#define Module_Date_CMHG                22 Oct 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.242"
#define Module_Date                     "22 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "22-Oct-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.242)"
#define Module_HelpVersion              "5.35 (22 Oct 2014) 4.79.2.242"
@


4.79.2.243
log
@Add the DWC (type 3) USB controller structure definitions
Add an extra entry for a revised power control/overcurrent monitoring API, more closely following the model that HAL_TimerIRQStatus and HAL_TimerIRQClear uses.

Version 5.35, 4.79.2.243. Tagged as 'Kernel-5_35-4_79_2_243'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.243
#define Module_Date_CMHG                25 Oct 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.243"
#define Module_Date                     "25 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "25-Oct-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.243)"
#define Module_HelpVersion              "5.35 (25 Oct 2014) 4.79.2.243"
@


4.79.2.244
log
@Another fix to split_block
Following hot on the heels of revision 1.1.2.39, when there's more than one block in existance the shuffle up loop trashes v3 & v4, which we need in the calculation just below.
Could just use other registers in the shuffle loop, but we only have ip free at that point, so be lazy and just reload & reextract the flags.
Tested on a softload Kinetic, now the RAM speed flags look sensible and the RAM clear doesn't fall off the end.

Version 5.35, 4.79.2.244. Tagged as 'Kernel-5_35-4_79_2_244'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.244
#define Module_Date_CMHG                27 Oct 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.244"
#define Module_Date                     "27 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "27-Oct-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.244)"
#define Module_HelpVersion              "5.35 (27 Oct 2014) 4.79.2.244"
@


4.79.2.245
log
@Make OS_GSTrans be more sensible about what it treats as system variables
Detail:
  s/Arthur2 - OS_GSTrans now uses the same rules as OS_SetVarValue when deciding whether text within angle brackets is a valid system variable name or not. In particular spaces in the middle of a variable name are no longer considered valid, so expressions such as "*If 0<1 AND 1>0 then echo true" now have the expected result
  Also replaced the magic constant used for the name buffer length with a proper symbolic value, and tweaked its handling a bit in order to increase the maximum permissible variable name length from 253 chars to 255 (although OS_SetVarVal allows longer)
Admin:
  Tested on Iyonix
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/4/topics/2912


Version 5.35, 4.79.2.245. Tagged as 'Kernel-5_35-4_79_2_245'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.245
#define Module_Date_CMHG                04 Nov 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.245"
#define Module_Date                     "04 Nov 2014"
d16 1
a16 1
#define Module_ApplicationDate          "04-Nov-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.245)"
#define Module_HelpVersion              "5.35 (04 Nov 2014) 4.79.2.245"
@


4.79.2.246
log
@  Added HAL entrpoint to access hardware watchdog timer
Detail:
Admin:


Version 5.35, 4.79.2.246. Tagged as 'Kernel-5_35-4_79_2_246'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.246
#define Module_Date_CMHG                07 Nov 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.246"
#define Module_Date                     "07 Nov 2014"
d16 1
a16 1
#define Module_ApplicationDate          "07-Nov-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.246)"
#define Module_HelpVersion              "5.35 (07 Nov 2014) 4.79.2.246"
@


4.79.2.247
log
@Add a means to write NetStnCMOS in a HAL world
With ProtectStationID turned on there are no routes to writing the Econet station (or bottom octect of the IP address), a function previously fulfilled by the SetStation utility which pokes the hardware directly and doesn't fit into a HAL model.
Add a new subreason to OS_NVMemory to perform this role. This SWI appeared for RISC OS 5.00, and errors unsupported subreasons, so there's a means of run tim selecting its use by checking the platform class and trying the SWI. All RISC OS 5 based platforms can always be upgraded to this version, since they're all still being maintained.

hdr/Options: move the switch with the other options from osinit.s
i2cutils.c: new subreason

Ditch the 'ObsoleteNC1CMOS' switch, if it was obsolete for NC1, it's certainly obsolete now.
Ditch unmaintained messages files for Morris4/Omega/Ursula projects.
Tested on a Risc PC.

Version 5.35, 4.79.2.247. Tagged as 'Kernel-5_35-4_79_2_247'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.247
#define Module_Date_CMHG                13 Nov 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.247"
#define Module_Date                     "13 Nov 2014"
d16 1
a16 1
#define Module_ApplicationDate          "13-Nov-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.247)"
#define Module_HelpVersion              "5.35 (13 Nov 2014) 4.79.2.247"
@


4.79.2.248
log
@Fixes to HAL memory info calls and docs
MemInfo.s:
 Several places in this code called the HAL or other ATPCS defined functions like memset() and hoped that the overall result was V clear. If any of them accidentally set V (for example a CMP that straddles 0x80000000) you ended up trying to look up an international error at the address of the reason code to OS_Memory.
 Now, explicitly clear V in the non error cases where an ATPCS function was called.
 Change the HAL_PhysInfo call to expect a physical ROM size back as an inclusive range, to match the RAM range subreason code. Add 1 to correct for this. A value of 0 & 0 is taken to mean "no physical ROM" as before.
Middle.s:
 Document that 255 means "no IOMD" or "no VIDC", that's what the HALs have been using since year dot.

Version 5.35, 4.79.2.248. Tagged as 'Kernel-5_35-4_79_2_248'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.248
#define Module_Date_CMHG                06 Dec 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.248"
#define Module_Date                     "06 Dec 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-Dec-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.248)"
#define Module_HelpVersion              "5.35 (06 Dec 2014) 4.79.2.248"
@


4.79.2.249
log
@Untangle some buses
Docs/HAL/NewAPI:
 More clearly describe the intent of the different bus types.
hdr/HALDevice
 Reclassify the OMAP interconnect as either a system bus or peripheral bus, noting their names from the datasheet.
 Reclassify the GPMC as an expansion bus.
 Add AMBA 3's AXI bus, which (along with the existing AHB/APB) is what iMx6 uses. Delete redundant iMx6 interconnect type.

Version 5.35, 4.79.2.249. Tagged as 'Kernel-5_35-4_79_2_249'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.249
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.249"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.249)"
#define Module_HelpVersion              "5.35 (06 Dec 2014) 4.79.2.249"
@


4.79.2.250
log
@Delegate L2 (and below) cache init at power on/reset to the HAL
Historically the kernel looked after all aspects of cache control since they were common across all ARMs. However, not all cache controllers are created equal, and sometimes more complex initialisation steps are needed than fit the generic coprocessor ops - for example the PL310 attached to a Cortex-A9 has memory mapped control registers.
Rather than clutter the kernel with one shot init code for every cache controller invented, we delegate that step to the HAL in HAL_Init. This is only a few hundred instructions later than where it was already being set. The kernel remains responsible for subsequent maintenance, this is just init which is being handed off.
A quick survey of the Cortex-A TRMs shows:
A5 - optional, for example ARM's PL310, ref TRM section 8.1.7.
A7 - optional, C bit of SCTLR, ref TRM section 1.1.
A8 - L2EN bit of ACTLR, note this bit has been recycled for other uses on other cores, ref TRM section 8.3.
A9 - not integrated, ARM's PL310 uses bit 0 of control register 1, ref PL310 TRM section 3.1.1.
A12 - see A17
A15 - integrated, C bit of SCTLR, ref TRM section 7.2.3.
A17 - integrated, bit 18 of L2CTLR & C bit of SCTLR, ref TRM section 7.2.
and while we've got the TRMs open, back fill the CPU id register table.

Version 5.35, 4.79.2.250. Tagged as 'Kernel-5_35-4_79_2_250'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.250
#define Module_Date_CMHG                21 Dec 2014
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.250"
#define Module_Date                     "21 Dec 2014"
d16 1
a16 1
#define Module_ApplicationDate          "21-Dec-14"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.250)"
#define Module_HelpVersion              "5.35 (21 Dec 2014) 4.79.2.250"
@


4.79.2.251
log
@Fix detection of ARMv7 minimum cache line lengths
Detail:
  s/ARMops - Replace the code to calculate the minimum cache line lengths with something much simpler which reads the values directly from the cache type register.
  The old code was buggy in two ways:
  (a) the cache size identification register stores the line length as log2(num words)-2, whereas the code throughout the kernel was expecting it to be log2(num bytes)-2
  (b) the loop is structured so that it will try and read the details of a non-existent cache level. although it doesn't read anything from CP15, it does result in the minimum cache line length values getting clobbered
  The net result of the above two bugs being that the OS would treat the CPU as if the minimum line length was just 4 bytes (although other than slowing down cache maintenance ops, this shouldn't have had any bad side-effects)
  The cache type register directly contains the minimum line lengths as log2(num bytes)-2, so by switching over to use that everything is now fine.
Admin:
  Tested on BB-xM, Pandaboard
  Fixes issue spotted by Willi Theiss


Version 5.35, 4.79.2.251. Tagged as 'Kernel-5_35-4_79_2_251'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.251
#define Module_Date_CMHG                09 Jan 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.251"
#define Module_Date                     "09 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jan-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.251)"
#define Module_HelpVersion              "5.35 (09 Jan 2015) 4.79.2.251"
@


4.79.2.252
log
@Add ARMops for PL310 L2 cache controller
Detail:
  Unlike on the Cortex-A8 or Cortex-A15, the L2 cache that's used with the Cortex-A9 isn't hooked up to the standard ARMv7 CP15 cache maintenance ops. Instead, memory-mapped registers must be used to program and maintain the cache.
  Since the PL310 can't be detected automatically, this change adds support for a 'cache controller' HAL device which the HAL can use to advertise the presence of any external caches. If a cache device is registered during HAL_InitDevices the kernel will then check it against a list of known cache types and replace the appropriate ARMop routines with the alternatives for that controller.
  File changes:
  - hdr/PL310 - New header containing PL310 register listing
  - Makefile - Add export for PL310 header. Reorder exports to be alphabetical
  - hdr/HALDevice - Add cache controller device type, PL310 device
  - hdr/KernelWS - Allocate some workspace for storing a pointer to the current cache HAL device
  - s/ARMops - Add code for searching for known cache types, and implementation of PL310-specific ARMops
  - s/GetAll - Get Hdr:PL310
  - s/NewReset - Look for a cache controller after calling HAL_InitDevices
Admin:
  Tested on Pandaboard
  Fixes various assorted instability issues


Version 5.35, 4.79.2.252. Tagged as 'Kernel-5_35-4_79_2_252'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.252
#define Module_Date_CMHG                11 Jan 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.252"
#define Module_Date                     "11 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jan-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.252)"
#define Module_HelpVersion              "5.35 (11 Jan 2015) 4.79.2.252"
@


4.79.2.253
log
@Escape some dollars
Detail:
  s/NewReset, s/Super1 - Escape some dollars contained in strings to avoid warnings from objasm
Admin:
  Resulting binary unchanged


Version 5.35, 4.79.2.253. Tagged as 'Kernel-5_35-4_79_2_253'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.253
#define Module_Date_CMHG                16 Jan 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.253"
#define Module_Date                     "16 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "16-Jan-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.253)"
#define Module_HelpVersion              "5.35 (16 Jan 2015) 4.79.2.253"
@


4.79.2.254
log
@Enable/disable HAL cache controller when enabling/disabling ARM caches
Detail:
  s/VMSAv6 - Modify OS_MMUControl to ensure any HAL-based cache is disabled when either the ARM I or D cache is disabled. This emulates the behaviour of an integrated L2 cache controller.
Admin:
  Tested on Pandaboard


Version 5.35, 4.79.2.254. Tagged as 'Kernel-5_35-4_79_2_254'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.254
#define Module_Date_CMHG                17 Jan 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.254"
#define Module_Date                     "17 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jan-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.254)"
#define Module_HelpVersion              "5.35 (17 Jan 2015) 4.79.2.254"
@


4.79.2.255
log
@Perform extra TLB maintenance on ARMv6+. Other cache/TLB maintenance tweaks.
Detail:
  s/ARMops - Implement Cache_RangeThreshold for PL310 (helps AMBControl to decide what type of TLB maintenance is best). Fix MMU_ChangingEntry_PL310 doing more work than is necessary; was attempting to flush all ways for a given address tag, when really it should have only been flushing all the lines within a page and letting the cache worry about the tags/indices they correspond to.
  s/ChangeDyn, s/VMSAv6, s/AMBControl/memmap - Do extra TLB maintenance following writes to the page tables, as mandated by the ARMv6+ memory order model. Fixes frequent crashes on Cortex-A9 when running with lazy task swapping disabled (and presumably fixes other crashes too)
  s/MemInfo - Fix OS_Memory cache/uncache so that it does cache/TLB maintenance on a per-page basis instead of a global basis. Vastly improves performance when you have a large cache, but may need tweaking again in future to do a global op if large numbers of pages are being modified.
Admin:
  Tested on Pandaboard


Version 5.35, 4.79.2.255. Tagged as 'Kernel-5_35-4_79_2_255'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.255
#define Module_Date_CMHG                20 Jan 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.255"
#define Module_Date                     "20 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jan-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.255)"
#define Module_HelpVersion              "5.35 (20 Jan 2015) 4.79.2.255"
@


4.79.2.256
log
@  Add Raspberry Pi 2 support
Detail:
  The Raspberry Pi ROM now joins the IOMD ROM in supporting multiple
  architectures, in this case ARMv6 and ARMv7. This has been achieved by
  creating a new machine type specific for Raspberry Pi. The old ARM11ZF
  machine type remains for builds that are ARM11-only.

Version 5.35, 4.79.2.256. Tagged as 'Kernel-5_35-4_79_2_256'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.256
#define Module_Date_CMHG                02 Feb 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.256"
#define Module_Date                     "02 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "02-Feb-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.256)"
#define Module_HelpVersion              "5.35 (02 Feb 2015) 4.79.2.256"
@


4.79.2.257
log
@Add workaround for Cortex-A7 errata 814220
Detail:
  s/ARMops, s/HAL - Errata 814220 states that the Cortex-A7 set/way cache maintenance operations violate the usual operation ordering rules, such that an L2 maintenance operation which is started after an L1 operation may actually complete before it, causing data corruption if the L1 data was to be evicted to the L2 entry. Implement the suggested workaround of performing a DSB when switching cache levels, rather than just at the end of the combined L1+L2 group of operations.
Admin:
  Tested on Raspberry Pi 2


Version 5.35, 4.79.2.257. Tagged as 'Kernel-5_35-4_79_2_257'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.257
#define Module_Date_CMHG                07 Feb 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.257"
#define Module_Date                     "07 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "07-Feb-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.257)"
#define Module_HelpVersion              "5.35 (07 Feb 2015) 4.79.2.257"
@


4.79.2.258
log
@Add TouchBook to hdr:GPIODevice
Detail:
  hdr/GPIODevice - Added the TouchBook as an OMAP3 machine type. We don't actually create a GPIO HAL device for it, but having it defined here is useful for SDIO support in the HAL.
Admin:
  Tested on TouchBook


Version 5.35, 4.79.2.258. Tagged as 'Kernel-5_35-4_79_2_258'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.258
#define Module_Date_CMHG                26 Feb 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.258"
#define Module_Date                     "26 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "26-Feb-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.258)"
#define Module_HelpVersion              "5.35 (26 Feb 2015) 4.79.2.258"
@


4.79.2.259
log
@Ensure HAL cache device is initialised
The Cache_HALDevice is in the RAM clear skip table, so when there's no controller found and the kernel is doing the RAM clear it's unset, leading to probable aborts when typing *CACHE Om|Off.

Version 5.35, 4.79.2.259. Tagged as 'Kernel-5_35-4_79_2_259'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.259
#define Module_Date_CMHG                12 Mar 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.259"
#define Module_Date                     "12 Mar 2015"
d16 1
a16 1
#define Module_ApplicationDate          "12-Mar-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.259)"
#define Module_HelpVersion              "5.35 (12 Mar 2015) 4.79.2.259"
@


4.79.2.260
log
@Add some basic parameter validation to OS_IICOp
Detail:
  s/PMF/IIC - OS_IICOp now does some basic validation of its parameters, to help avoid crashes, memory corruption, or bad IIC transfers being performed when invalid parameters are supplied
Admin:
  Tested on Pandaboard
  Fixes ticket #404
  https://www.riscosopen.org/tracker/tickets/404


Version 5.35, 4.79.2.260. Tagged as 'Kernel-5_35-4_79_2_260'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.260
#define Module_Date_CMHG                16 Mar 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.260"
#define Module_Date                     "16 Mar 2015"
d16 1
a16 1
#define Module_ApplicationDate          "16-Mar-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.260)"
#define Module_HelpVersion              "5.35 (16 Mar 2015) 4.79.2.260"
@


4.79.2.261
log
@Fix OS_Byte 19 getting stuck if it's called just before the screen blanker activates. Add new OS_ReadSysInfo reason code for determining IIC bus count.
Detail:
  s/PMF/osbyte - For OS_Byte 19, move screen blanker check (and current GraphicsV driver check) inside the WFI loop so that the loop will terminate if the screen should blank (or current GraphicsV driver should die) before the next VSync occurs. Also move the Portable_Idle call to before the interrupt trigger - the old location meant that if the screen blanked we'd continue on to the Portable_Idle call and end up pointlessly stalling the system
  s/Middle - Add OS_ReadSysInfo 14, as a legitimate way of finding the number of IIC buses present on the system
Admin:
  Tested on Pandaboard


Version 5.35, 4.79.2.261. Tagged as 'Kernel-5_35-4_79_2_261'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.261
#define Module_Date_CMHG                29 Mar 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.261"
#define Module_Date                     "29 Mar 2015"
d16 1
a16 1
#define Module_ApplicationDate          "29-Mar-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.261)"
#define Module_HelpVersion              "5.35 (29 Mar 2015) 4.79.2.261"
@


4.79.2.262
log
@Fix aborts on Cortex-A15 when using lazy task swapping
Detail:
  s/VMSAv6 - After AMB_LazyFixUp has modified the page tables, perform a DSB + ISB to ensure the page table write has completed before we return from the abort handler.
Admin:
  Tested on IGEPv5
  Fixes aborts seen in desktop, e.g. when !CloseUp is rebuilding its sprite (heavy RAM write activity delaying pagetable write?)


Version 5.35, 4.79.2.262. Tagged as 'Kernel-5_35-4_79_2_262'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.262
#define Module_Date_CMHG                13 Apr 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.262"
#define Module_Date                     "13 Apr 2015"
d16 1
a16 1
#define Module_ApplicationDate          "13-Apr-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.262)"
#define Module_HelpVersion              "5.35 (13 Apr 2015) 4.79.2.262"
@


4.79.2.263
log
@Get a tag for 5.22

Version 5.35, 4.79.2.263. Tagged as 'Kernel-5_35-4_79_2_263'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.263
#define Module_Date_CMHG                19 Apr 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.263"
#define Module_Date                     "19 Apr 2015"
d16 1
a16 1
#define Module_ApplicationDate          "19-Apr-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.263)"
#define Module_HelpVersion              "5.35 (19 Apr 2015) 4.79.2.263"
@


4.79.2.264
log
@Back to odd numbered development

Version 5.35, 4.79.2.264. Tagged as 'Kernel-5_35-4_79_2_264'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.264
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.264"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.264)"
#define Module_HelpVersion              "5.35 (19 Apr 2015) 4.79.2.264"
@


4.79.2.265
log
@Ensure IO memory is marked as non-executable
Detail:
  s/HAL - The VMSAv6/v7 memory model allows speculative instruction fetches from any memory (including device/strongly-ordered), unless the memory is marked as non-executable. So to prevent interference with read-sensitive devices we must make sure all appropriate IO memory is marked as non-executable.
Admin:
  Tested on IGEPv5
  Fixes data corruption seen when reading from SD card


Version 5.35, 4.79.2.265. Tagged as 'Kernel-5_35-4_79_2_265'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.265
#define Module_Date_CMHG                14 Jun 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.265"
#define Module_Date                     "14 Jun 2015"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jun-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.265)"
#define Module_HelpVersion              "5.35 (14 Jun 2015) 4.79.2.265"
@


4.79.2.266
log
@Fix HiProcVecs build. Remove old-style PublicWS definitions.
Detail:
  s/ARMops - Added extra LTORG to fix HiProcVecs build error for some platforms
  hdr/PublicWS - Remove the old (non-Legacy_) workspace exports, and add a comment explaining how the newer Legacy_ exports should be used.
Admin:
  HiProcVecs ROMs for various platforms now appear to build OK
  Untested at runtime


Version 5.35, 4.79.2.266. Tagged as 'Kernel-5_35-4_79_2_266'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.266
#define Module_Date_CMHG                19 Jun 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.266"
#define Module_Date                     "19 Jun 2015"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jun-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.266)"
#define Module_HelpVersion              "5.35 (19 Jun 2015) 4.79.2.266"
@


4.79.2.267
log
@Add extra OS_DynamicArea subreason
Subreason 20 takes a logical address and tells you which area it lies in, including system areas (ie. those returned by OS_Memory 16.
This allows areas to change type in future without the caller needing to care where the kernel put it.

Version 5.35, 4.79.2.267. Tagged as 'Kernel-5_35-4_79_2_267'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.267
#define Module_Date_CMHG                04 Jul 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.267"
#define Module_Date                     "04 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jul-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.267)"
#define Module_HelpVersion              "5.35 (04 Jul 2015) 4.79.2.267"
@


4.79.2.268
log
@Enable high processor vectors/zero page relocation. OS_DynamicArea 20 fixes.
Detail:
  Makefile, hdr/Options - By default enable high processor vectors/zero page relocation for compatible machines, but also allow the components file to override the setting if required
  s/ChangeDyn - Fix OS_DynamicArea 20 to check the correct range for doubly mapped areas, and to correctly localise its error message
Admin:
  Tested on Iyonix


Version 5.35, 4.79.2.268. Tagged as 'Kernel-5_35-4_79_2_268'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.268
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.268"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.268)"
#define Module_HelpVersion              "5.35 (04 Jul 2015) 4.79.2.268"
@


4.79.2.269
log
@Add builtin software pointer support
Detail:
  This set of changes adds support for rendering software mouse pointers directly in the kernel, rather than requiring graphics drivers to render them themselves as was the case previously.
  If a driver returns from GraphicsV_Features with the 'hardware pointer' bit clear, and a call to GraphicsV_UpdatePointer is returned unclaimed, then the kernel will step in and render a software pointer. This allows selective control over which areas of the screen the software pointer is used (e.g. if hardware only supports its use in some areas)
  hdr/KernelWS - Shrink PointerXEigFactor to 1 byte to free up some space for tracking the display log2bpp. Use 8 words of space for tracking software pointer state.
  s/vdu/vducursoft - Adjust existing the existing calls to the software pointer RemovePointer/RestorePointer functions so that they're called with IRQs enabled
  s/vdu/vdudriver - Keep track of display log2bpp. Claim/release memory needed for restoring pixels under software pointer.
  s/vdu/vdugrafhal - Update HAL_VideoUpdatePointer handling so that 0 can be returned in a1 to indicate the GraphicsV call should be left unclaimed.
  s/vdu/vdupalxx - Trigger updates of the cached software pointer palette whenever it's likely to become invalidated.
  s/vdu/vdupointer - Add software pointer implementation. Relying on a SpriteExtend OS_SpriteOp would be nice, but we're in the background so have to do plotting & unplotting manually. ColourTrans is used to cache the pointer palette colours for the current mode, although we're limited to calling it from a callback.
Admin:
  Tested on Raspberry Pi & BB-xM
  Pointer is very flickery under some circumstances (e.g. running !CloseUp) due to needing to plot/unplot around any VDU driver screen access (as per text cursor). So code may need revising in future once we can trap reads/writes from specific screen memory pages.


Version 5.35, 4.79.2.269. Tagged as 'Kernel-5_35-4_79_2_269'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.269
#define Module_Date_CMHG                10 Jul 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.269"
#define Module_Date                     "10 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "10-Jul-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.269)"
#define Module_HelpVersion              "5.35 (10 Jul 2015) 4.79.2.269"
@


4.79.2.270
log
@Fix software pointer being enabled when it isn't needed. Improve HangWatch support.
Detail:
  s/vdu/vdupointer - For any mode where the software pointer is usable, RestorePointer was restoring the software pointer regardless of whether it was in use at the time RemovePointer was called. This would cause both the software & hardware pointers to be briefly enabled at the same time, potentially causing flickering or other glitches. Fix the issue by making sure RestorePointer only restores if the software pointer was actually in use at the time RemovePointer was called. Also, attempt to deal with the situation where the pointer might have moved to a location where the software pointer is no longer required.
  s/Middle - Improve integration of HangWatch with the abort handler - avoid overwriting the top of the SVC stack so that it can be preserved for the HangWatch dump.
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.270. Tagged as 'Kernel-5_35-4_79_2_270'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.270
#define Module_Date_CMHG                13 Jul 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.270"
#define Module_Date                     "13 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "13-Jul-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.270)"
#define Module_HelpVersion              "5.35 (13 Jul 2015) 4.79.2.270"
@


4.79.2.271
log
@Expose more areas via OS_ReadSysInfo 6 & OS_Memory 16. Expose processor vectors base + size via OS_PlatformFeatures.
Detail:
  hdr/KernelWS - Define processor vectors address. Currently same as ZeroPage, but in the future will differ for some machines.
  hdr/OSRSI6, s/Middle - Expose VecPtrTab & NVECTORS via OS_ReadSysInfo items 85 & 86
  s/Kernel - Add OS_PlatformFeatures 32, for returning the base + size of the processor vectors
  s/MemInfo - Add areas 12 thru 15 to OS_Memory 16, for reporting ZeroPage, ProcVecs, DebuggerSpace and ScratchSpace. The task manager can now use these for calculating memory usage instead of assuming 32K workspace from &0-&8000.
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.271. Tagged as 'Kernel-5_35-4_79_2_271'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.271
#define Module_Date_CMHG                17 Jul 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.271"
#define Module_Date                     "17 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jul-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.271)"
#define Module_HelpVersion              "5.35 (17 Jul 2015) 4.79.2.271"
@


4.79.2.272
log
@Add HAL device numbers for Raspberry Pi SPI controllers
Detail:
  hdr/HALDevice - Add a new device type for SPI controllers, and allocate two device numbers for use on the Pi (to differentiate between the main and aux controllers)
Admin:
  Tested on Raspberry Pi B & 2 B


Version 5.35, 4.79.2.272. Tagged as 'Kernel-5_35-4_79_2_272'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.272
#define Module_Date_CMHG                26 Jul 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.272"
#define Module_Date                     "26 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jul-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.272)"
#define Module_HelpVersion              "5.35 (26 Jul 2015) 4.79.2.272"
@


4.79.2.273
log
@Improve support for VMSAv6 cache policies & memory types. Expose raw ARMops via OS_MMUControl & cache information via OS_PlatformFeatures.
Detail:
  Docs/HAL/ARMop_API - Document two new ARMops: Cache_Examine and IMB_List
  hdr/KernelWS - Shuffle workspace round a bit to allow space for the two new ARMops. IOSystemType now deleted (has been deprecated and fixed at 0 for some time)
  s/ARM600 - Cosmetic changes to BangCam to make it clearer what's going on. Add OS_MMUControl 2 (get ARMop) implementation.
  s/ARMops - Switch out different ARMop implementations and XCB tables depending on MMU model - helps reduce assembler warnings and make it clearer what code paths are and aren't possible. Add implementations of the two new ARMops. Simplify ARM_Analyse_Fancy by removing some tests which we know will have certain results. Use CCSIDR constants in ARMv7 ARMops instead of magic numbers. Update XCB table comments, and add a new table for VMSAv6
  s/ChangeDyn - Define constant for the new NCB 'idempotent' cache policy (VMSAv6 normal, non-cacheable memory)
  s/HAL - Use CCSIDR constants instead of magic numbers. Extend RISCOS_MapInIO to allow the TEX bits to be specified.
  s/Kernel - OS_PlatformFeatures 33 (read cache information) implementation (actually, just calls through to an ARMop)
  s/MemInfo - Modify VMSAv6 OS_Memory 0 cache/uncache implementation to use the XCB table instead of modifying L2_C directly. This allows the cacheability to be changed without affecting the memory type - important for e.g. unaligned accesses to work correctly. Implement cache policy support for OS_Memory 13.
  s/Middle - Remove IOSystemType from OS_ReadSysInfo 6.
  s/VMSAv6 - Make sure BangCam uses the XCB table for working out the attributes of temp-uncacheable pages instead of manipulating L2_C directly. Add OS_MMUControl 2 implementation.
  s/AMBControl/memmap - Update VMSAv6 page table pokeing to use XCB table
  s/PMF/osinit - Remove IOSystemType reference, and switch out some pre-HAL code that was trying to use IOSystemType.
Admin:
  Tested on Iyonix, ARM11, Cortex-A7, -A8, -A9, -A15
  Note that contrary to the comments in the source the default NCB policy currently maps to VMSAv6 Device memory type (as per previous kernel versions). This is just a temporary measure, and it will be switched over to Normal, non-cacheable once appropriate memory barriers have been added to the affected IO code.


Version 5.35, 4.79.2.273. Tagged as 'Kernel-5_35-4_79_2_273'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.273
#define Module_Date_CMHG                05 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.273"
#define Module_Date                     "05 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "05-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.273)"
#define Module_HelpVersion              "5.35 (05 Aug 2015) 4.79.2.273"
@


4.79.2.274
log
@Fix DebuggerSpace page to be cacheable
Detail:
  s/HAL - A typo seems to have resulted in the HiProcVecs DebuggerSpace page being mapped in as NCB instead of CB. Fix it.
Admin:
  Untested.


Version 5.35, 4.79.2.274. Tagged as 'Kernel-5_35-4_79_2_274'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.274
#define Module_Date_CMHG                06 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.274"
#define Module_Date                     "06 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.274)"
#define Module_HelpVersion              "5.35 (06 Aug 2015) 4.79.2.274"
@


4.79.2.275
log
@  Added iMx6 spi device and GPIO revision types to relevant device headers
Detail:
Admin:


Version 5.35, 4.79.2.275. Tagged as 'Kernel-5_35-4_79_2_275'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.275
#define Module_Date_CMHG                10 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.275"
#define Module_Date                     "10 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "10-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.275)"
#define Module_HelpVersion              "5.35 (10 Aug 2015) 4.79.2.275"
@


4.79.2.276
log
@  added iMx6Q GPIO Device type (omitted earlier)
Detail:
Admin:


Version 5.35, 4.79.2.276. Tagged as 'Kernel-5_35-4_79_2_276'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.276
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.276"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.276)"
#define Module_HelpVersion              "5.35 (10 Aug 2015) 4.79.2.276"
@


4.79.2.277
log
@  Correct typos .. - sign not a good idea in header file variable name
Detail:
Admin:


Version 5.35, 4.79.2.277. Tagged as 'Kernel-5_35-4_79_2_277'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.277
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.277"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.277)"
#define Module_HelpVersion              "5.35 (10 Aug 2015) 4.79.2.277"
@


4.79.2.278
log
@Fix some re-entrancy issues. Minor optimisations.
Detail:
  s/TickEvents:
  - Change initial TickNodeLeft check in ProcessTickEventChain to exit on HI rather than NE. This fixes a case where the ticker event chain can become corrupted if ProcessTickEventChain is re-entered while in the middle of processing multiple nodes which are due to fire at the same time (after initial node is removed from the list, head node will be left with a TickNodeLeft value of 0)
  - Move "IRQ's off again" PSR write to be after the 10 label, to ensure that IRQs are off before we examine/process the next node (naughty CallEvery may have exited with IRQs enabled)
  - Stop using crusty old WritePSRc macro (currently generates 4 instructions for something that should be 1)
  - Also get rid of ARM2-era NOPs
  - Optimise CallEvery check to be MOVS rather than LDR + CMP
Admin:
  Tested on Pandaboard
  Should fix problem reported on forums with apparent wrap-around of TickNodeLeft value of first node: https://www.riscosopen.org/forum/forums/5/topics/3544
  May also fix other ticker corruption problems: https://www.riscosopen.org/forum/forums/4/topics/2708


Version 5.35, 4.79.2.278. Tagged as 'Kernel-5_35-4_79_2_278'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.278
#define Module_Date_CMHG                11 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.278"
#define Module_Date                     "11 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "11-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.278)"
#define Module_HelpVersion              "5.35 (11 Aug 2015) 4.79.2.278"
@


4.79.2.279
log
@Replace WriteBuffer_Drain ARMop with a suite of memory barrier ARMops
Detail:
  - Docs/HAL/ARMop_API - Updated with documentation for the new ARMops.
  - s/ARMops - Set up pointers for the new memory barrier ARMops. Add full implementations for ARMv6 & ARMv7; older architectures should be able to get by with a mix of null ops & write buffer drain ops. Update ARMopPtrTable to validate structure against the list in hdr/OSMisc
  - hdr/KernelWS - Reserve workspace for new ARMops. Free up a bit of space by limiting ourselves to 2 cache levels with ARMv7. Remove some unused definitions.
  - hdr/OSMisc - New header defining OS_PlatformFeatures & OS_MMUControl reason codes, OS_PlatformFeatures 0 flags, and OS_MMUControl 2 ARMop indices
  - Makefile - Add export rules for OSMisc header
  - hdr/ARMops, s/ARM600, s/VMSAv6 - Remove CPUFlag_* and MMUCReason_* definitions. Update OS_MMUControl write buffer drain to use DSB_ReadWrite ARMop (which is what most existing write buffer drain implementations have been renamed to).
  - s/GetAll - Get Hdr:OSMisc
  - s/Kernel - Use OS_PlatformFeatures reason code symbols
  - s/vdu/vdudecl - Remove unused definition
Admin:
  Tested on ARM11, Cortex-A8, Cortex-A9


Version 5.35, 4.79.2.279. Tagged as 'Kernel-5_35-4_79_2_279'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.279
#define Module_Date_CMHG                14 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.279"
#define Module_Date                     "14 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "14-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.279)"
#define Module_HelpVersion              "5.35 (14 Aug 2015) 4.79.2.279"
@


4.79.2.280
log
@Switch default NCB cache policy to MergingIdempotent (i.e. Normal, non-cacheable)
Detail:
  s/ARMops - Change VMSAv6 cache policy mapping so that default NCB policy maps to Normal, non-cacheable memory rather than Device memory. This allows unaligned accesses to work, and also delivers some major performance improvements for some activities (write performance seems about 2x better than Device)
  Docs/HAL/ARMop_API - Wrap the new barrier ARMop description text to match the rest of the file
Admin:
  Tested on ARM11, Cortex-A7, -A8, -A9
  Note - relaxed memory consistency rules for Normal vs. Device mean that now more than ever, developers authoring device drivers for ARMv6+ need to be careful to use memory barriers in all the right places (preferably the new ARMop barriers exposed by OS_MMUControl 2 to ensure compatibility with all machines)


Version 5.35, 4.79.2.280. Tagged as 'Kernel-5_35-4_79_2_280'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.280
#define Module_Date_CMHG                15 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.280"
#define Module_Date                     "15 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "15-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.280)"
#define Module_HelpVersion              "5.35 (15 Aug 2015) 4.79.2.280"
@


4.79.2.281
log
@Fix examination of L2 cache
Detail:
  s/ARMops - In Analyse_WB_CR7_Lx, we need to check against Cache_Lx_MaxLevel*2, because the cache size selection register counts I + D caches separately
Admin:
  Tested on IGEPv5


Version 5.35, 4.79.2.281. Tagged as 'Kernel-5_35-4_79_2_281'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.281
#define Module_Date_CMHG                18 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.281"
#define Module_Date                     "18 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "18-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.281)"
#define Module_HelpVersion              "5.35 (18 Aug 2015) 4.79.2.281"
@


4.79.2.282
log
@  Added 3 HALDevice headers - SPI, Ether, and AHCI
Detail:
Admin:


Version 5.35, 4.79.2.282. Tagged as 'Kernel-5_35-4_79_2_282'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.282
#define Module_Date_CMHG                20 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.282"
#define Module_Date                     "20 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "20-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.282)"
#define Module_HelpVersion              "5.35 (20 Aug 2015) 4.79.2.282"
@


4.79.2.283
log
@  Corrected makefile omissions.
  Removed errant tab characters from EtherDevice header
Detail:
Admin:


Version 5.35, 4.79.2.283. Tagged as 'Kernel-5_35-4_79_2_283'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.283
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.283"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.283)"
#define Module_HelpVersion              "5.35 (20 Aug 2015) 4.79.2.283"
@


4.79.2.284
log
@Add initial support for "physical memory pools"
Detail:
  This set of changes adds support for "physical memory pools" (aka PMPs), a new type of dynamic area which allow physical pages to be claimed/allocated without mapping them in to the logical address space. PMPs have full control over which physical pages they use (similar to DAs which request specific physical pages), and also have full control over the logical mapping of their pages (which pages go where, and per-page access/cacheability control).
  Currently the OS makes use of two PMPs: one for the free pool (which now has a logical size of zero - freeing up gigabytes of logical space), and one for the RAM disc (logical size of 1MB, allowing for a physical size limited only by the amount of free memory)
  Implementing these changes has required a number of other changes to be made:
  * The CAM has been expanded from 8 bytes per entry to 16 bytes per entry, in order to allow each RAM page to store information about its PMP association
  * The system heap has been expanded to 32MB in size (from just under 4MB), in order to allow it to be used to store PMP page lists (1 word needed per page, but PMP pages may not always have physical pages assigned to them - so to allow multiple large PMPs to exist we need more than just 1 word per RAM page)
  * The &FA000000-&FBFFFFFF area of fixed kernel workspace has been shuffled around to accomodate the larger CAM, and the system heap is now located just above the RMA.
  * SoftResets code stripped out (unlikely we'll ever want to fix and re-enable it)
  * A couple of FastCDA options are now permanently on
  * Internal page flags shuffled around a bit. PageFlags_Unavailable now publicly exposed so that PMP clients can lock/unlock pages at will.
  * When OS_ChangeDynamicArea is asked to grow or shrink the free pool, it now implicitly converts it into a shrink or grow of application space (which is what would happen anyway). This simplifies the implementation; during a grow, pages (or replacement pages) are always sourced from the free pool, and during a shrink pages are always sent to the free pool.
  File changes:
  - hdr/KernelWS - Extend DANode structure. Describe CAM format. Adjust kernel workspace.
  - hdr/OSRSI6, s/Middle - Add new item to expose the CAM format
  - hdr/Options - Remove SoftResets switch. Add some PMP switches.
  - s/ARM600, s/VMSAv6 - Updated for new CAM format. Note that although the CAM stores PMP information, BangCamUpdate currently doesn't deal with updating that data - it's the caller's responsibility to do so where appropriate.
  - s/ChangeDyn - Lots of changes to implement PMP support, and to cope with the new CAM format.
  - s/HAL - Updated to cope with new CAM format, and lack of logical mapping of free pool.
  - s/MemInfo - Updated to cope with new CAM format. OS_Memory 0 updated to cope with converting PPN to PA for pages which are mapped out. OS_Memory 24 updated to decode the access permissions on a per-page basis for PMPs, and fixed its HWM usage for sparse DAs.
  - s/NewReset - Soft reset code and unused AddCamEntries function removed. Updated to cope with new CAM format, PMP free pool, PMP RAMFS
  - s/AMBControl/allocate - Update comment (RMA hasn't been used for AMBControl nodes for a long time)
  - s/AMBControl/growp, s/AMBControl/memmap, s/AMBControl/shrinkp - Update for new CAM format + PMP free pool
  - s/vdu/vdudriver - Strip out soft reset code.
Admin:
  Tested on Pandaboard
  This is just a first iteration of the PMP feature, with any luck future changes will improve functionality. This means APIs are subject to change as well.


Version 5.35, 4.79.2.284. Tagged as 'Kernel-5_35-4_79_2_284'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.284
#define Module_Date_CMHG                31 Aug 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.284"
#define Module_Date                     "31 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "31-Aug-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.284)"
#define Module_HelpVersion              "5.35 (31 Aug 2015) 4.79.2.284"
@


4.79.2.285
log
@Remove OS_Memory 10 and associated code
Detail:
  s/MemInfo - Remove OS_Memory 10 (free pool locking). Locking the free pool has never been a very nice thing to do, so now that there's no logical mapping of the free pool it seems like it's a good time to outlaw the behaviour altogether.
  s/ChangeDyn - No free pool locking means one less thing to check when claiming the OS_ChangeDynamicArea mutex.
  hdr/KernelWS - VRAMRescue_control workspace variable is no longer needed
Admin:
  Tested on Pandaboard


Version 5.35, 4.79.2.285. Tagged as 'Kernel-5_35-4_79_2_285'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.285
#define Module_Date_CMHG                01 Sep 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.285"
#define Module_Date                     "01 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "01-Sep-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.285)"
#define Module_HelpVersion              "5.35 (01 Sep 2015) 4.79.2.285"
@


4.79.2.286
log
@Fix IOMD build
Detail:
  s/ChangeDyn - Differing zero page workspace layout between HiProcVecs {TRUE} and {FALSE} means the difference between FreePoolDANode being a valid 8 bit immediate constant or not. Just use a long-form LDR instead since the code in question isn't performance-critical.
Admin:
  Tested briefly under RPCEmu


Version 5.35, 4.79.2.286. Tagged as 'Kernel-5_35-4_79_2_286'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.286
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.286"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.286)"
#define Module_HelpVersion              "5.35 (01 Sep 2015) 4.79.2.286"
@


4.79.2.287
log
@Misc memory management tweaks & fixes
Detail:
  s/ChangeDyn - Fix OS_DynamicArea 20 to work properly with sparse & PMP DAs. It now checks against the max extent of the area rather than the current size; this matches the logic used for checking fixed system workspace areas. The call only determines the ownership of a logical address, and it's considered the caller's responsibility to check if there's actually a page at the given address.
  s/ChangeDyn - Revise OS_DynamicArea 25 to remove the redundant 'PMP page flags' entry, and to allow pages to be looked up by either PMP page index, phys page number, or DA page index
  s/ChangeDyn - Tidy up InitDynamicAreas by adding the NextFreePage routine to help determine the next page to be added to the free pool.
  s/AMBControl/Workspace, s/AMBControl/main, s/AMBControl/memmap - Fix lazy mapping in of pages to use the correct L2PT flags for the default CB cache policy
  s/AMBControl/allocate - Get rid of magic constant when extracting page flags from DA flags, and make note of the fact that assorted bits of code ignore the flags
  s/AMBControl/growp, s/AMBControl/shrinkp - Reverse the page order when growing/shrinking areas, to match OS_ChangeDynamicArea. This helps both DAs and application space to have pages allocated to them in contiguous physical order - which in turn helps produce shorter, more optimal scatter lists for DMA
Admin:
  Tested on Pandaboard


Version 5.35, 4.79.2.287. Tagged as 'Kernel-5_35-4_79_2_287'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.287
#define Module_Date_CMHG                06 Sep 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.287"
#define Module_Date                     "06 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "06-Sep-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.287)"
#define Module_HelpVersion              "5.35 (06 Sep 2015) 4.79.2.287"
@


4.79.2.288
log
@  Updated some CMOS default settings for 'CortexA9' builds
Detail:
  default SCSIFSDrive to 4, and both FontMax and FontSize to their
  max values. (the machines in question have a min of 512Meg of ram -
  being miserly with font caches is unhelpful)
Admin:
  tested on iMx6

Version 5.35, 4.79.2.288. Tagged as 'Kernel-5_35-4_79_2_288'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.288
#define Module_Date_CMHG                08 Sep 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.288"
#define Module_Date                     "08 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "08-Sep-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.288)"
#define Module_HelpVersion              "5.35 (08 Sep 2015) 4.79.2.288"
@


4.79.2.289
log
@Take into account bus speed when determining IIC op max retry count
Detail:
  s/PMF/IIC - when dealing with IIC transfers which use the high-level HAL API, take into account the bus speed when calculating the max retry count. Otherwise if (e.g.) writing to CMOS we may give up before the device has recovered from the previous write (which is typically listed as a max time of 5ms)
Admin:
  Fixes issues with CMOS checksum not being updated correctly if using IIC bus speeds > 100khz


Version 5.35, 4.79.2.289. Tagged as 'Kernel-5_35-4_79_2_289'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.289
#define Module_Date_CMHG                20 Sep 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.289"
#define Module_Date                     "20 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "20-Sep-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.289)"
#define Module_HelpVersion              "5.35 (20 Sep 2015) 4.79.2.289"
@


4.79.2.290
log
@Change some default CMOS settings, using custom build switch
Detail:
  Default to SCSI::4 for boot driver is custom switch at buildtime
  (EnforceSCSI4) is defined. 2 fontcache items also defaulted with this switch
Admin:
  tested on iMx6


Version 5.35, 4.79.2.290. Tagged as 'Kernel-5_35-4_79_2_290'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.290
#define Module_Date_CMHG                24 Sep 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.290"
#define Module_Date                     "24 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "24-Sep-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.290)"
#define Module_HelpVersion              "5.35 (24 Sep 2015) 4.79.2.290"
@


4.79.2.291
log
@OS_ChangeDynamicArea tweaks and fixes
Detail:
  s/ChangeDyn - A few fixes to make behaviour be a closer match for the pre-PMP code, and a bit of tidying to get rid of redundant code paths:
  - Remove shrinkable DA checks from AreaShrink - the source of the op is never the free pool, so TryToShrinkShrinkables wouldn't have done anything anyway
  - Fix ShrinkFreePoolToAppSpace to behave more like old OS_ChangeDynamicArea when it was asked to shrink the free pool - allow partial moves (if move amount too large to fit in app space), shrink shrinkables if free pool is unable to satisfy request, and call CheckAppSpace to make sure app space is OK with being changed
  - Remove redundant logic from AreaGrow for clamping grow size to free pool max size (if dest was free pool - dest will never be free pool with current implementation). "Dest is apl space, moving reduced amount" comment was also inaccurate.
  - Fix AreaGrow logic for taking memory from application space to only do so if the dest isn't application space (I can't see anything in the old implementation to protect against this - but, then again, the old implementation didn't seem to fully deal with grows of application space properly anyway, e.g. MemLimit would be updated on a free pool shrink, but not on an app space grow)
  - Add extra sanity check to AreaGrow after taking memory from application space
Admin:
  Tested on iMx6
  Fixes issue with application space having little or no memory if not booting to desktop (due to free pool shrink performed by kernel failing due to shrink amount being larger than app space max size)


Version 5.35, 4.79.2.291. Tagged as 'Kernel-5_35-4_79_2_291'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.291
#define Module_Date_CMHG                30 Sep 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.291"
#define Module_Date                     "30 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "30-Sep-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.291)"
#define Module_HelpVersion              "5.35 (30 Sep 2015) 4.79.2.291"
@


4.79.2.292
log
@Fix handling of FIQ mode exceptions
Detail:
  s/Middle - When handling an FIQ-mode exception, protect the register dump pointer around the call to HAL_FIQDisableAll
Admin:
  Tested on Raspberry Pi
  Fixes data abort within kernel when an abort occurs is FIQ mode


Version 5.35, 4.79.2.292. Tagged as 'Kernel-5_35-4_79_2_292'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.292
#define Module_Date_CMHG                07 Oct 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.292"
#define Module_Date                     "07 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.292)"
#define Module_HelpVersion              "5.35 (07 Oct 2015) 4.79.2.292"
@


4.79.2.293
log
@Fix application space & shrinkable DA shrinking within PMP grow code
Detail:
  s/ChangeDyn - Fix a couple of places where registers were being clobbered, preventing application space & shrinkable DA shrinking logic from being invoked correctly when performing a PMP PhysOp call
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.293. Tagged as 'Kernel-5_35-4_79_2_293'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.293
#define Module_Date_CMHG                10 Oct 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.293"
#define Module_Date                     "10 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "10-Oct-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.293)"
#define Module_HelpVersion              "5.35 (10 Oct 2015) 4.79.2.293"
@


4.79.2.294
log
@Fix bad pointer dereference and other issues with *ScreenLoad
Detail:
  s/vdu/vdugrafj - Rewrite WritePaletteFromSprite to fix some issues with the logic which decides whether to change screen mode:
  - ModeNo was always being treated as if it was a mode selector block, causing bad pointer dereferences if it was actually a numbered mode. Prior to zero page protection the code would have eventually stumbled its way through to the mode change code.
  - For checking the pixel format, only the Log2BPP was being compared, resulting in code deciding that (e.g.) modes with differing RGB order were the same
  - However the eigen value checking was also broken (checking wrong part of generated mode selector block), causing the mode change logic to always be taken
  s/vdu/vdugrafdec - Increase size of SloadModeSel so it's actually large enough to hold the generated mode selector - old code would have run off the end a bit (thankfully, it was the last thing in that particular workspace block)
Admin:
  Tested on BB-xM, *ScreenLoad'ing sprites from various modes
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/4/topics/3649


Version 5.35, 4.79.2.294. Tagged as 'Kernel-5_35-4_79_2_294'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.294
#define Module_Date_CMHG                12 Oct 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.294"
#define Module_Date                     "12 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "12-Oct-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.294)"
#define Module_HelpVersion              "5.35 (12 Oct 2015) 4.79.2.294"
@


4.79.2.295
log
@  Extended HAL SPI device. Still work in progress


Version 5.35, 4.79.2.295. Tagged as 'Kernel-5_35-4_79_2_295'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.295
#define Module_Date_CMHG                16 Oct 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.295"
#define Module_Date                     "16 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "16-Oct-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.295)"
#define Module_HelpVersion              "5.35 (16 Oct 2015) 4.79.2.295"
@


4.79.2.296
log
@Hand off ownership of GPIODevice
The kernel has no place holding this header export, since it doesn't use it nor implement any of its interfaces.

Version 5.35, 4.79.2.296. Tagged as 'Kernel-5_35-4_79_2_296'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.296
#define Module_Date_CMHG                28 Oct 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.296"
#define Module_Date                     "28 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.296)"
#define Module_HelpVersion              "5.35 (28 Oct 2015) 4.79.2.296"
@


4.79.2.297
log
@Raise some workspace limits, define extra devices
Detail:
  Raise the maximum number of interrupts and IIC buses acceptable, to account for the OMAP5 port.
  Add TLV320/TLV320/SDMA/SDMA/AM572x/GC320/CPSW/SynopsisDWC for Titanium.
  Add OMAP5/OMAP5/OMAP5/TWL6037/OMAP5/OMAP5/SynopsisDWC for OMAP5.
Admin:
  There's likely some rationalisation to be had here, these controllers especially across the OMAP3/4/5 are probably the same thing really and don't merit individual allocations.

Version 5.35, 4.79.2.297. Tagged as 'Kernel-5_35-4_79_2_297'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.297
#define Module_Date_CMHG                07 Nov 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.297"
#define Module_Date                     "07 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "07-Nov-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.297)"
#define Module_HelpVersion              "5.35 (07 Nov 2015) 4.79.2.297"
@


4.79.2.298
log
@  New method to control default CMOS settings
Detail:
  Rather than fill the Kernel sources with an ever-increasing number of
  platform-specific switches to control the default CMOS settings, this
  change introduces a variable which passes the requirements direct from
  the Components file to the Kernel. Since it uses a comma-separated list
  of address/value pairs, it is inherently extensible. All the symbolic
  names of addresses from Hdr:CMOS are available, and any valid objasm
  expression can be used for the value.
Admin:
  This removes the need for the EnforceSCSI4 switch, and leaves almost
  no uses of the Machine variable in the Kernel either.


Version 5.35, 4.79.2.298. Tagged as 'Kernel-5_35-4_79_2_298'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.298
#define Module_Date_CMHG                08 Nov 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.298"
#define Module_Date                     "08 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "08-Nov-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.298)"
#define Module_HelpVersion              "5.35 (08 Nov 2015) 4.79.2.298"
@


4.79.2.299
log
@Fix overriding of default CMOS settings. Reserve HAL device ID for the official Raspberry Pi touchscreen/display.
Detail:
  s/PMF/i2cutils - Move $CMOS_Override to the start of DefaultCMOSTable, so that it can be used to override values which are already in the table (since NVMemory_ResetValue stops its search on the first address match)
  hdr/HALDevice - Add new Touchscreen device type and reserve an ID for the official Pi touchscreen controller
Admin:
  Tested on Raspberry Pi
  Fixes filesystem incorrectly defaulting to ADFS


Version 5.35, 4.79.2.299. Tagged as 'Kernel-5_35-4_79_2_299'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.299
#define Module_Date_CMHG                14 Nov 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.299"
#define Module_Date                     "14 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "14-Nov-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.299)"
#define Module_HelpVersion              "5.35 (14 Nov 2015) 4.79.2.299"
@


4.79.2.300
log
@Allocate some extra HAL device IDs
Detail:
  hdr/HALDevice - Allocate device IDs for iMX6 HDMI audio controller, and a generic software mixer
Admin:
  Tested in iMX6 ROM build


Version 5.35, 4.79.2.300. Tagged as 'Kernel-5_35-4_79_2_300'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.300
#define Module_Date_CMHG                01 Dec 2015
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.300"
#define Module_Date                     "01 Dec 2015"
d16 1
a16 1
#define Module_ApplicationDate          "01-Dec-15"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.300)"
#define Module_HelpVersion              "5.35 (01 Dec 2015) 4.79.2.300"
@


4.79.2.301
log
@Add OS_ReadSysInfo 9,6 and 9,7
Subreason 7 returns a string naming the HAL platform. Use HAL entry 97 to get this, and obsolete 97/98/99 in favour of using a HAL device. Line up the HAL video entries to match the others.
Subreason 6 is just back filling one ROL added, testing this on RISC OS Select just returned the OS name so we do the same now (same as subreason 0, not sure what ROL's distinction was for).
Allocate a HAL device for PATA IDE controllers, and the 2 known ones to date - Tungsten and IOMD systems.

Version 5.35, 4.79.2.301. Tagged as 'Kernel-5_35-4_79_2_301'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.301
#define Module_Date_CMHG                05 Jan 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.301"
#define Module_Date                     "05 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jan-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.301)"
#define Module_HelpVersion              "5.35 (05 Jan 2016) 4.79.2.301"
@


4.79.2.302
log
@Fix a couple of mode specifier/string conversion issues
Detail:
  s/vdu/vduswis - Fix conversion of mode specifier to mode string so that the X eigen value is only reported in the mode string if it was included in the mode specifier; previously was erroneously basing the decision on whether the Y eigen was specified, resulting in e.g. "EX4294967295" if only the Y eigen was included
  - Fix a stack imbalance causing the conversion of mode string to mode specifier crashing (typically with branch through zero) if an invalid eigen value is specified in the string (e.g. EX-1 as above)
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.302. Tagged as 'Kernel-5_35-4_79_2_302'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.302
#define Module_Date_CMHG                06 Jan 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.302"
#define Module_Date                     "06 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jan-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.302)"
#define Module_HelpVersion              "5.35 (06 Jan 2016) 4.79.2.302"
@


4.79.2.303
log
@Define some extra platform feature flags
For disc based applications (ie. those that don't know the architecture at build time, like a ROM would) we have OS_PlatformFeatures to provide an abstract way of seeing when new chunks of instructions get added. Back at ARMv6 ARM deprecated SWP, but currently we have no way of knowing that at runtime without grubbing round the coprocessor registers.
Add 3 new flags
* One to say LDR/STREX is (not) available
* One to say that SWP/SWPB is (not) available
* One to say that CLREX and LDR/STREX[B|H|D] is (not) available
shame it took a few goes for ARM to bring in these variants, requiring 3 flags not 1.

Also:
Condition the exception on vector read code on No32bitCode, rather than just having it permanently disabled.
Improve the HAL device docs.

Tested on a StrongARM Risc PC, Model B Pi, and Titanium.

Version 5.35, 4.79.2.303. Tagged as 'Kernel-5_35-4_79_2_303'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.303
#define Module_Date_CMHG                28 Feb 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.303"
#define Module_Date                     "28 Feb 2016"
d16 1
a16 1
#define Module_ApplicationDate          "28-Feb-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.303)"
#define Module_HelpVersion              "5.35 (28 Feb 2016) 4.79.2.303"
@


4.79.2.304
log
@  Support for ARMv8
Detail:
  * Filled in CPU tables for publicly documented ARMv8 cores (Cortex-A53,57,72).
  * Recent ARM ARMs (e.g. section B1.9.2 of the ARMv7AR ARM) permit the core to
    take an undefined instruction exception upon encountering even not-taken
    conditional undefined instructions. This option is exercised by the
    Cortex-A53, unlike all ARMv7 cores previously supported by RISC OS. This
    unfortunately trips up a lot of kernel code that adapts to different
    architectures at runtime. These have now all been replaced with branches
    over the affected code on the opposite condition.
  * Fixed bug in HAL_InvalidateCache_ARMvF: for the main body of the loop,
    which was written as though to act on the CLIDR register, r8 actually
    contained the CTR register instead.
Admin:
  Tested on Raspberry Pi 3

Version 5.35, 4.79.2.304. Tagged as 'Kernel-5_35-4_79_2_304'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.304
#define Module_Date_CMHG                29 Feb 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.304"
#define Module_Date                     "29 Feb 2016"
d16 1
a16 1
#define Module_ApplicationDate          "29-Feb-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.304)"
#define Module_HelpVersion              "5.35 (29 Feb 2016) 4.79.2.304"
@


4.79.2.305
log
@OS_Memory 13/14/15 fixes
Detail:
  s/HAL - Change RISCOS_AccessPhysicalAddress & RISCOS_ReleasePhysicalAddress (aka OS_Memory 14 & 15) to use the MMU_ChangingUncached ARMop instead of TLB_InvalidateEntry, as on ARMv6+ the MMU version ensures the write has been flushed to be visible by the TLB, while the TLB invalidate call doesn't.
  Fix RISCOS_MapInIO (aka OS_Memory 13) not detecting regions which have already been mapped in due to L1_XN flag masking issue. Also issue DSB+ISB after the page table write(s) to ensure it's visible by the TLB hardware.
Admin:
  Tested on IGEPv5


Version 5.35, 4.79.2.305. Tagged as 'Kernel-5_35-4_79_2_305'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.305
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.305"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.305)"
#define Module_HelpVersion              "5.35 (29 Feb 2016) 4.79.2.305"
@


4.79.2.306
log
@Cache maintenance fixes
Detail:
  This set of changes tackles two main issues:
  * Before mapping out a cacheable page or making it uncacheable, the OS performs a cache clean+invalidate op. However this leaves a small window where data may be fetched back into the cache, either accidentally (dodgy interrupt handler) or via agressive prefetch (as allowed for by the architecture). This rogue data can then result in coherency issues once the pages are mapped out or made uncacheable a short time later.
    The fix for this is to make the page uncacheable before performing the cache maintenance (although this isn't ideal, as prior to ARMv7 it's implementation defined whether address-based cache maintenance ops affect uncacheable pages or not - and on ARM11 it seems that they don't, so for that CPU we currently force a full cache clean instead)
  * Modern ARMs generally ignore unexpected cache hits, so there's an interrupt hole in the current OS_Memory 0 "make temporarily uncacheable" implementation where the cache is being flushed after the page has been made uncacheable (consider the case of a page that's being used by an interrupt handler, but the page is being made uncacheable so it can also be used by DMA). As well as affecting ARMv7+ devices this was found to affect XScale (and ARM11, although untested for this issue, would have presumably suffered from the "can't clean uncacheable pages" limitation)
    The fix for this is to disable IRQs around the uncache sequence - however FIQs are currently not being dealt with, so there's still a potential issue there.
  File changes:
  - Docs/HAL/ARMop_API, hdr/KernelWS, hdr/OSMisc - Add new Cache_CleanInvalidateRange ARMop
  - s/ARM600, s/VMSAv6 - BangCam updated to make the page uncacheable prior to flushing the cache. Add GetTempUncache macro to help with calculating the page flags required for making pages uncacheable. Fix abort in OS_MMUControl on Raspberry Pi - MCR-based ISB was resetting ZeroPage pointer to 0
  - s/ARMops - Cache_CleanInvalidateRange implementations. PL310 MMU_ChangingEntry/MMU_ChangingEntries refactored to rely on Cache_CleanInvalidateRange_PL310, which should be a more optimal implementation of the cache cleaning code that was previously in MMU_ChangingEntry_PL310.
  - s/ChangeDyn - Rename FastCDA_UpFront to FastCDA_Bulk, since the cache maintenance is no longer performed upfront. CheckCacheabilityR0ByMinusR2 now becomes RemoveCacheabilityR0ByMinusR2. PMP LogOp implementation refactored quite a bit to perform cache/TLB maintenance after making page table changes instead of before. One flaw with this new implementation is that mapping out large areas of cacheable pages will result in multiple full cache cleans while the old implementation would have (generally) only performed one - a two-pass approach over the page list would be needed to solve this.
  - s/GetAll - Change file ordering so GetTempUncache macro is available earlier
  - s/HAL - ROM decompression changed to do full MMU_Changing instead of MMU_ChangingEntries, to make sure earlier cached data is truly gone from the cache. ClearPhysRAM changed to make page uncacheable before flushing cache.
  - s/MemInfo - OS_Memory 0 interrupt hole fix
  - s/AMBControl/memmap - AMB_movepagesout_L2PT now split into cacheable+non-cacheable variants. Sparse map out operation now does two passes through the page list so that they can all be made uncacheable prior to the cache flush + map out.
Admin:
  Tested on StrongARM, XScale, ARM11, Cortex-A7, Cortex-A9, Cortex-A15, Cortex-A53
  Appears to fix the major issues plaguing SATA on IGEPv5


Version 5.35, 4.79.2.306. Tagged as 'Kernel-5_35-4_79_2_306'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.306
#define Module_Date_CMHG                10 Mar 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.306"
#define Module_Date                     "10 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "10-Mar-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.306)"
#define Module_HelpVersion              "5.35 (10 Mar 2016) 4.79.2.306"
@


4.79.2.307
log
@Fix crash when making SVC stack uncacheable. Fix poor Pi 3 memory benchmark performance
Detail:
  s/MemInfo - To avoid cache coherency issues when the current SVC stack page is being made uncacheable, shift SP somewhere else by temporarily dropping into IRQ mode
  s/ARMops - Change default VMSAv6 cache policy to writeback, write allocate. Unlike other CPUs we've supported so far, Cortex-A53 suffers very badly from writes to read-allocate pages, with performance being roughly equivalent to writes to non-cacheable memory. Using a write (+read) allocate policy seems to be needed to get the expected performance, and may help boost other CPUs too.
Admin:
  Tested on IGEPv5, Pi 3


Version 5.35, 4.79.2.307. Tagged as 'Kernel-5_35-4_79_2_307'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.307
#define Module_Date_CMHG                12 Mar 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.307"
#define Module_Date                     "12 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "12-Mar-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.307)"
#define Module_HelpVersion              "5.35 (12 Mar 2016) 4.79.2.307"
@


4.79.2.308
log
@  Removed hdr.SPIDriver as it is now managed by the SPIDriver module


Version 5.35, 4.79.2.308. Tagged as 'Kernel-5_35-4_79_2_308'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.308
#define Module_Date_CMHG                17 Mar 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.308"
#define Module_Date                     "17 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "17-Mar-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.308)"
#define Module_HelpVersion              "5.35 (17 Mar 2016) 4.79.2.308"
@


4.79.2.309
log
@  Complete removal od SPIDevice
Detail:
  (remove reference to SPIDevice in makefile)


Version 5.35, 4.79.2.309. Tagged as 'Kernel-5_35-4_79_2_309'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.309
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.309"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.309)"
#define Module_HelpVersion              "5.35 (17 Mar 2016) 4.79.2.309"
@


4.79.2.310
log
@New HAL device ID reservations
Detail:
  hdr/HALDevice - Reserve device IDs for BCM283x CPU clock device and GPU mailbox device
Admin:
  Tested on Raspberry Pi 1B/2B/3B


Version 5.35, 4.79.2.310. Tagged as 'Kernel-5_35-4_79_2_310'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.310
#define Module_Date_CMHG                25 Mar 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.310"
#define Module_Date                     "25 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "25-Mar-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.310)"
#define Module_HelpVersion              "5.35 (25 Mar 2016) 4.79.2.310"
@


4.79.2.311
log
@Improve safety of OS_Memory 0 "make temporarily uncacheable" and *Cache off
Detail:
  s/MemInfo - Wrap OS_Memory 0 in some code which will temporarily claim the FIQ vector when making pages temporarily uncacheable, to avoid any issues caused by modern ARMs ignoring unexpected cache hits
  s/VMSAv6 - Claim FIQs when OS_MMUControl is asked to make a change to the SCTLR, to avoid similar issues on modern ARMs. Also make the stack temporarily uncacheable before disabling the cache, so that we don't run into any problems using the stack inbetween disabling the cache and completing the clean+invalidate.
Admin:
  Tested on Pi 2B, 3B
  *Cache off now works reliably on Pi 2B, although there is sometimes a pause of a few seconds while things sort themselves out (USB?)
  *Cache off "works" on Pi 3B but everything will fall over soon afterwards due to the Cortex-A53 not supporting LDREX/STREX to non-cacheable pages (or when the page is effectively non-cacheable, i.e. cacheable page with cache disabled)


Version 5.35, 4.79.2.311. Tagged as 'Kernel-5_35-4_79_2_311'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.311
#define Module_Date_CMHG                27 Mar 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.311"
#define Module_Date                     "27 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "27-Mar-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.311)"
#define Module_HelpVersion              "5.35 (27 Mar 2016) 4.79.2.311"
@


4.79.2.312
log
@Resync with allocations database

Version 5.35, 4.79.2.312. Tagged as 'Kernel-5_35-4_79_2_312'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.312
#define Module_Date_CMHG                05 Apr 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.312"
#define Module_Date                     "05 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "05-Apr-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.312)"
#define Module_HelpVersion              "5.35 (05 Apr 2016) 4.79.2.312"
@


4.79.2.313
log
@Add SWI error pointer validation, SeriousErrorV hooks, and OS_ReadSysInfo 15
Detail:
  Resources/UK/Messages, hdr/KernelWS, s/Kernel - On return from a SWI with V set, do some basic validity checks on the error pointer in order to try and catch buggy SWIs that return bad pointers or invalid error blocks. If a bad pointer is found we'll substitute it with a pointer to a different error block, which has the SWI number in the error message, to allow the user to identify the source of the problem. (There's also a chance we'll crash when investigating a bad pointer, but crashing here in the kernel is preferable to crashing elsewhere because R12 should still contain the SWI number)
  hdr/OSMisc - Define SeriousErrorV reason codes and extended ROM footer entry IDs
  hdr/Options - Remove HangWatch integration flag, obsolete now that SeriousErrorV is available
  s/ArthurSWIs - Keep defaultvectab up to date with vector allocations
  s/Middle - Update serious error handling to call SeriousErrorV at several key points. This allows for accurate crash dumps to be obtained, along with a mechanism to warn low-level components such as RTSupport that the privileged mode stacks are being flattened.
  s/Middle - Add OS_ReadSysInfo 15, for enumerating extended ROM footer entries
  s/PMF/osbyte - Update InitNewFX0Error to use the ROM footer entry ID defined in hdr/OSMisc
Admin:
  Tested on Pi 1B, 2B, 3B


Version 5.35, 4.79.2.313. Tagged as 'Kernel-5_35-4_79_2_313'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.313
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.313"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.313)"
#define Module_HelpVersion              "5.35 (05 Apr 2016) 4.79.2.313"
@


4.79.2.314
log
@Revise error pointer validity checks
Detail:
  s/Kernel, hdr/KernelWS - Avoid performing error pointer checks for XOS_GenerateError, since (a) it's a no-op as far as errors are concerned, and (b) many programs take advantage of that fact and abuse the SWI for other purposes (triggering callbacks, BASIC string conversion, etc.)
Admin:
  Tested on Raspberry Pi
  Fixes issue reported on forums with Sunfish crashing:
  https://www.riscosopen.org/forum/forums/5/topics/4060


Version 5.35, 4.79.2.314. Tagged as 'Kernel-5_35-4_79_2_314'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.314
#define Module_Date_CMHG                06 Apr 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.314"
#define Module_Date                     "06 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "06-Apr-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.314)"
#define Module_HelpVersion              "5.35 (06 Apr 2016) 4.79.2.314"
@


4.79.2.315
log
@Relax error pointer validity checks some more
Detail:
  s/Kernel - Some types of error lookup code work by passing a bogus error number into MessageTrans_ErrorLookup and then fixing it up afterwards. To avoid breaking such code, we'll now ignore any bad error numbers from XMessageTrans_ErrorLookup. However obviously bad pointers and the non-X form will still be caught.
Admin:
  Tested on Raspberry Pi 3
  (e.g.) SWI "XMessageTrans_Lookup","@@@@@@@@BadParm" now works


Version 5.35, 4.79.2.315. Tagged as 'Kernel-5_35-4_79_2_315'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.315
#define Module_Date_CMHG                14 Apr 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.315"
#define Module_Date                     "14 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.315)"
#define Module_HelpVersion              "5.35 (14 Apr 2016) 4.79.2.315"
@


4.79.2.316
log
@Correction to comment - it's NVRAM, not PortMan

Version 5.35, 4.79.2.316. Tagged as 'Kernel-5_35-4_79_2_316'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.316
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.316"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.316)"
#define Module_HelpVersion              "5.35 (14 Apr 2016) 4.79.2.316"
@


4.79.2.317
log
@Deduce CPUFlag_LongMul/Thumb/DSP from the right bitfields
The TST operations for LongMul & Thumb were at odds with the ARM ARM, move those. We can get the DSP flag from an ID register too now, rather than relying on the Q flag being writeable in the PSR.
Fortunately, the fields we were previously TSTing also had set bits - so the OS_PlatformFeatures 0 flags were coming out right anyway on all real ARMv7's.

Version 5.35, 4.79.2.317. Tagged as 'Kernel-5_35-4_79_2_317'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.317
#define Module_Date_CMHG                26 Apr 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.317"
#define Module_Date                     "26 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "26-Apr-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.317)"
#define Module_HelpVersion              "5.35 (26 Apr 2016) 4.79.2.317"
@


4.79.2.318
log
@Avoid unnecesssary remainder calculations
Detail:
  s/HeapSort, s/vdu/vdugrafc, s/vdu/vduswis - Avoid unnecessary remainder calculations in DivRem macro
  s/PMF/i2cutils, s/PMF/osword - Make use of DivRem's ability to accept a constant as the divisor
Admin:
  Tested on Cortex-A15


Version 5.35, 4.79.2.318. Tagged as 'Kernel-5_35-4_79_2_318'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.318
#define Module_Date_CMHG                08 May 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.318"
#define Module_Date                     "08 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "08-May-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.318)"
#define Module_HelpVersion              "5.35 (08 May 2016) 4.79.2.318"
@


4.79.2.319
log
@Add new OS_PlatformFeatures reason code for reading CPU features (inspired by ARMv6+ CPUID scheme). Add OS_ReadSysInfo 8 flags for indicating the alignment mode the ROM was built with. Fix long-standing bug with OS_PlatformFeatures when an unknown reason code is used.
Detail:
  s/CPUFeatures, hdr/OSMisc, hdr/KernelWS - Code and definitions for reading CPU features and reporting them via OS_PlatformFeatures 34. All the instruction set features which are exposed by the CPUID scheme and which are relevant to RISC OS are exposed, along with a few extra flags which we derive ourselves (e.g. things relating to < ARMv4, and some register usage restrictions in instructions). s/CPUFeatures is designed to be easily copyable into a future version of CallASWI without requiring any changes.
  s/ARMops - Read and cache CPU features during ARMop initialisation
  s/GetAll - GET new file
  s/Kernel - Hook up the CPU features code to OS_PlatformFeatures. Fix a long standing stack imbalance bug (fixed in RISC OS 3.8, but never merged back to our main branch) which meant that calling OS_PlatformFeatures with an invalid reason code would raise an error, even if it was the X form of the SWI that was called. Similar fix also applied to the unused service call code, along with a fix for the user's R1-R9 being corrupt (shuffled up one place) should an error have been generated.
  s/MemInfo - Extra LTORG needed to keep things happy
  s/Middle - Extend OS_ReadSysInfo 8 to include flags for indicating what memory alignment mode (if any) the OS relies upon. Together with OS_PlatformFeatures 34 this could e.g. be used by !CPUSetup to determine which options should be offered to the user.
Admin:
  Tested on Raspberry Pi 1, 2, 3


Version 5.35, 4.79.2.319. Tagged as 'Kernel-5_35-4_79_2_319'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.319
#define Module_Date_CMHG                19 May 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.319"
#define Module_Date                     "19 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "19-May-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.319)"
#define Module_HelpVersion              "5.35 (19 May 2016) 4.79.2.319"
@


4.79.2.320
log
@Fix CPU features being clobbered by software RAM clear
Detail:
  s/ARMops, s/HAL - Move CPU feature init to after the RAM clear, to prevent the cached values being clobbered on platforms where the HAL doesn't perform the RAM clear
  s/CPUFeatures - Update/clarify comment
Admin:
  Tested on Raspberry Pi
  Fixes issue spotted by Sprow


Version 5.35, 4.79.2.320. Tagged as 'Kernel-5_35-4_79_2_320'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.320
#define Module_Date_CMHG                20 May 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.320"
#define Module_Date                     "20 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "20-May-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.320)"
#define Module_HelpVersion              "5.35 (20 May 2016) 4.79.2.320"
@


4.79.2.321
log
@[308] SpriteOp 11 (merge sprite areas) gets slow for large numbers of sprites
Detail:
  s/vdu/vdugrafh - Rewrite MergeSpriteAreas so that memory movement is now O(N) instead of O(N^2). Checking for duplicate sprites is still slow (O(N^2) search), but this resolves the main performance bottleneck with the code.
  s/vdu/vdugrafg - Add a variant of SpriteCtrlBlk which skips the call to GetName; this helps MergeSpriteAreas for the common case of a dest area with lots of sprites and a source area with a handful of sprites (SpriteCtrlBlk is now called on the source area once per dest sprite, previously was called on the dest area once per source sprite).
Admin:
  Tested on Raspberry Pi 1, merging Sovereign theme Sprites11 file with itself (2.2MB file, 358 sprites)
  Old code took 860cs, new code takes 18cs (15cs of which appears to be loading the second copy of the file, judging by *SLoad timings)


Version 5.35, 4.79.2.321. Tagged as 'Kernel-5_35-4_79_2_321'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.321
#define Module_Date_CMHG                22 May 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.321"
#define Module_Date                     "22 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "22-May-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.321)"
#define Module_HelpVersion              "5.35 (22 May 2016) 4.79.2.321"
@


4.79.2.322
log
@Revise WFE detection
Detail:
  s/CPUFeatures - Take account of the fact that single-core ARMv7+ chips implement MPIDR but aren't guaranteed to implement a useful WFE. So for ARMv7+, only report WFE as being available/useful if MPIDR indicates that virtualisation extensions are supported.
Admin:
  Tested on Raspberry Pi 1 & 3, BB-xM


Version 5.35, 4.79.2.322. Tagged as 'Kernel-5_35-4_79_2_322'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.322
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.322"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.322)"
#define Module_HelpVersion              "5.35 (22 May 2016) 4.79.2.322"
@


4.79.2.323
log
@Revise comments - it's multiprocessing extensions, not virtualisation

Version 5.35, 4.79.2.323. Tagged as 'Kernel-5_35-4_79_2_323'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.323
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.323"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.323)"
#define Module_HelpVersion              "5.35 (22 May 2016) 4.79.2.323"
@


4.79.2.324
log
@Fix PMP corruption caused by early errors generated by OS_DynamicArea 21
Detail:
  s/ChangeDyn - When DynArea_PMP_PhysOp generates an error during the initial page list scan, make sure r12 is initialised to the (new) PMP size, as expected by PMPMemoryMoved.
  s/AMBControl/allocate, s/AMBControl/growshrink - Document some extra exit conditions for the AMB allocate & grow/shrink routines
Admin:
  Tested on BB-xM
  Fixes RAM disc PMP becoming corrupt when attempting to grow it (e.g. via *ChangeDynamicArea) by an amount larger than the amount of free memory in the system


Version 5.35, 4.79.2.324. Tagged as 'Kernel-5_35-4_79_2_324'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.324
#define Module_Date_CMHG                23 May 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.324"
#define Module_Date                     "23 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "23-May-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.324)"
#define Module_HelpVersion              "5.35 (23 May 2016) 4.79.2.324"
@


4.79.2.325
log
@Add OS_PlatformFeatures 0 flag to indicate that the "Unknown OS_PlatformFeatures reason codes always raise an error" bug has been fixed
Detail:
  hdr/OSMisc - Use bit 31 to indicate that the error reporting bug has been fixed
  s/ARMops - Make sure the flag is set when preparing ProcessorFlags (i.e. the OS_PlatformFeatures 0 flags)
Admin:
  Tested on Raspberry Pi


Version 5.35, 4.79.2.325. Tagged as 'Kernel-5_35-4_79_2_325'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.325
#define Module_Date_CMHG                24 May 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.325"
#define Module_Date                     "24 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "24-May-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.325)"
#define Module_HelpVersion              "5.35 (24 May 2016) 4.79.2.325"
@


4.79.2.326
log
@Fix teletext mode when zero page relocated
Detail:
  s/vdu/vduttx - References to VduDriverWorkSpace need to be ZeroPage-relative. Without relocation, it looks like most of these addresses were hitting the Debugger workspace page, avoiding an immediate crash but causing no text to appear on screen.
Admin:
  Tested on Raspberry Pi 1


Version 5.35, 4.79.2.326. Tagged as 'Kernel-5_35-4_79_2_326'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.326
#define Module_Date_CMHG                01 Jun 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.326"
#define Module_Date                     "01 Jun 2016"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jun-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.326)"
#define Module_HelpVersion              "5.35 (01 Jun 2016) 4.79.2.326"
@


4.79.2.327
log
@Clear the exclusive monitor when returning to pre-empted code
Detail:
  s/Kernel - Add macro for CLREX, which uses a dummy STREX on basic ARMv6 machines. Clear the exclusive monitor after issuing transient callbacks, to cope with callbacks being triggered on exit from IRQ
  s/ArthurSWIs, s/HAL, s/NewIRQs - Clear the exclusive monitor on exit from IRQ handlers & default FIQ handler
  s/VMSAv6 - Clear the exclusive monitor on entry to the data abort pre-veneer
Admin:
  Tested on Raspberry Pi
  Non-transient callback handlers, custom abort handlers, FIQ handlers, and anything else which returns directly to interrupted user code is responsible for issuing its own CLREX if the code has done something that could have left the local monitor in the exclusive state (e.g. calling a SWI counts towards this, as there's no guarantee the monitor will be open on exit from the SWI)


Version 5.35, 4.79.2.327. Tagged as 'Kernel-5_35-4_79_2_327'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.327
#define Module_Date_CMHG                15 Jun 2016
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.327"
#define Module_Date                     "15 Jun 2016"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jun-16"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.327)"
#define Module_HelpVersion              "5.35 (15 Jun 2016) 4.79.2.327"
@


4.79.2.147.2.1
log
@  Merge of Raspberry Pi support code against latest kernel
Detail:
  This is a new branch from the current tip of the HAL branch, incorporating
  the changes received from Adrian Lees. The same caveats apply - this is a
  work in progress and will not work on any other platform at present.
Admin:
  Builds, but not tested.

Version 5.35, 4.79.2.147.2.1. Tagged as 'Kernel-5_35-4_79_2_147_2_1'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.1
#define Module_Date_CMHG                10 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.1"
#define Module_Date                     "10 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.1)"
#define Module_HelpVersion              "5.35 (10 May 2012) 4.79.2.147.2.1"
@


4.79.2.147.2.2
log
@  Fixed cache detection code
Detail:
  The cache details were previously fixed in a look-up table based upon the
  CPU as determined from the Main ID register for "fancy" ARMv6 CPUs (that is,
  ARMv6K, ARMv6Z, ARMv6T2). So the details for the S3C6410 were being used
  for all ARM1176JZF-S CPUs, which isn't correct for the BCM2835, which has
  the same CPU. Adrian's original stopgap solution was to override the
  settings with a bunch of MOV instructions, which had the effect of making
  the kernel useless on any other CPU. Now the details are read from the ARM
  cache type register for fancy ARMv6 CPUs. This necessitated adding support
  for an extra cache type: writeback, with cache cleaning using R7, and cache
  lockdown format C. Since we don't actually do cache lockdown, this follows
  the same code path as cache lockdown type A, which was originally written
  for ARM9 CPUs.
Admin:
  Tested in a Raspberry Pi build

Version 5.35, 4.79.2.147.2.2. Tagged as 'Kernel-5_35-4_79_2_147_2_2'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.2
#define Module_Date_CMHG                14 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.2"
#define Module_Date                     "14 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.2)"
#define Module_HelpVersion              "5.35 (14 May 2012) 4.79.2.147.2.2"
@


4.79.2.147.2.3
log
@  Removed one more place where the cache parameters were hard-coded
Detail:
  This one evaded the cull in my last commit
Admin:
  Still works on a Raspberry Pi

Version 5.35, 4.79.2.147.2.3. Tagged as 'Kernel-5_35-4_79_2_147_2_3'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.3
#define Module_Date_CMHG                18 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.3"
#define Module_Date                     "18 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.3)"
#define Module_HelpVersion              "5.35 (18 May 2012) 4.79.2.147.2.3"
@


4.79.2.147.2.4
log
@  Merged across the bugfix from the HAL branch, revision Kernel-5_35-4_79_2_148

Version 5.35, 4.79.2.147.2.4. Tagged as 'Kernel-5_35-4_79_2_147_2_4'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.147.2.4
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.147.2.4"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.4)"
#define Module_HelpVersion              "5.35 (18 May 2012) 4.79.2.147.2.4"
@


4.79.2.147.2.5
log
@  Changes to resolve some of the BCM2835 initial hacks
  1: Added HAL_FramebufferAddress entry.
  2: Minor mod the NoIrqVecSwiDispatch mods recently submitted. Improved coverage
  3: Added compile time switch InverseTextTransparency to toggle sense of text
  (pre-wimp) for use until correct transparency behaviour is introduced in the RPi
  start.elf.
  4: Ensured that if a non aligned frame buffer is reported, ALL of the space
  is actually mapped in.
Detail:
  (list files and functions that have changed)
Admin:
  builds and runs .. Still needs service_mode extension work to replace hard
  coded mode definition files
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.147.2.5. Tagged as 'Kernel-5_35-4_79_2_147_2_5'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.5
#define Module_Date_CMHG                20 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.5"
#define Module_Date                     "20 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.5)"
#define Module_HelpVersion              "5.35 (20 May 2012) 4.79.2.147.2.5"
@


4.79.2.147.2.6
log
@   reverse of mis-understood mod at VecSWIDespatch. mod only relevant at NoIRQ version
Detail:
  (list files and functions that have changed)
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.147.2.6. Tagged as 'Kernel-5_35-4_79_2_147_2_6'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.6
#define Module_Date_CMHG                21 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.6"
#define Module_Date                     "21 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.6)"
#define Module_HelpVersion              "5.35 (21 May 2012) 4.79.2.147.2.6"
@


4.79.2.147.2.7
log
@  Added HAL_TimerIRQClear cann for system timer 0
Detail:
  (list files and functions that have changed)
Admin:
  shown running in system
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 5.35, 4.79.2.147.2.7. Tagged as 'Kernel-5_35-4_79_2_147_2_7'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.7
#define Module_Date_CMHG                23 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.7"
#define Module_Date                     "23 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "23-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.7)"
#define Module_HelpVersion              "5.35 (23 May 2012) 4.79.2.147.2.7"
@


4.79.2.147.2.8
log
@  Refinement to Timer clear change from a recent commit
Detail:
  An undocumented entry condition of TickOne is that r0 contains the device
  number corresponding to Timer0. This must be passed to HAL_IRQClear on
  some platforms.
Admin:
  Tested only on a Raspberry Pi. Also added enumeration of entry numbers in
  comments in Hdr:HALEntries - a handy reference when debugging from the
  command line!

Version 5.35, 4.79.2.147.2.8. Tagged as 'Kernel-5_35-4_79_2_147_2_8'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.147.2.8
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.147.2.8"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.8)"
#define Module_HelpVersion              "5.35 (23 May 2012) 4.79.2.147.2.8"
@


4.79.2.147.2.9
log
@Bring Hdr/HALEntries in line with HAL branch
Detail:
  Hdr/HALEntries - Added HAL_UARTDefault entry, as per HAL branch
Admin:
  Untested


Version 5.35, 4.79.2.147.2.9. Tagged as 'Kernel-5_35-4_79_2_147_2_9'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.9
#define Module_Date_CMHG                05 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.9"
#define Module_Date                     "05 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.9)"
#define Module_HelpVersion              "5.35 (05 Jun 2012) 4.79.2.147.2.9"
@


4.79.2.147.2.10
log
@Fix callback and breakpoint environment handlers to work with zero page relocation
Detail:
  s/Middle - Callback and breakpoint environment handler workspace is now specified as being ZeroPage relative
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.10. Tagged as 'Kernel-5_35-4_79_2_147_2_10'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.10
#define Module_Date_CMHG                24 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.10"
#define Module_Date                     "24 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.10)"
#define Module_HelpVersion              "5.35 (24 Jun 2012) 4.79.2.147.2.10"
@


4.79.2.147.2.11
log
@Fix VMSAv6 prefetch abort handler to work with zero page relocation
Detail:
  s/VMSAv6 - Prefetch abort handler address now looked up as ZeroPage-relative
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.11. Tagged as 'Kernel-5_35-4_79_2_147_2_11'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.11
#define Module_Date_CMHG                27 Jun 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.11"
#define Module_Date                     "27 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jun-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.11)"
#define Module_HelpVersion              "5.35 (27 Jun 2012) 4.79.2.147.2.11"
@


4.79.2.147.2.12
log
@Fix VMSAv6 prefetch abort handler to work with zero page relocation (and get it right this time)
Detail:
  s/VMSAv6 - Prefetch abort handler address now looked up as ZeroPage-relative
Admin:
  Tested on Raspberry Pi with high processor vectors
  Previous commit was a harmless, unintentional merge from HAL branch to RPi branch due to folder mixup


Version 5.35, 4.79.2.147.2.12. Tagged as 'Kernel-5_35-4_79_2_147_2_12'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.147.2.12
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.147.2.12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.12)"
#define Module_HelpVersion              "5.35 (27 Jun 2012) 4.79.2.147.2.12"
@


4.79.2.147.2.13
log
@Add device IDs for BCM2835 DMA controller/channels
Detail:
  hdr/HALDevice - Added new device IDs used by BCM2835 DMA controller & DMA channels
Admin:
  Tested in BCM2835 ROM


Version 5.35, 4.79.2.147.2.13. Tagged as 'Kernel-5_35-4_79_2_147_2_13'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.13
#define Module_Date_CMHG                07 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.13"
#define Module_Date                     "07 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.13)"
#define Module_HelpVersion              "5.35 (07 Jul 2012) 4.79.2.147.2.13"
@


4.79.2.147.2.14
log
@Change default filesystem to SDFS in Raspberry Pi/ARM11 builds
Detail:
  s/NewReset - Change default filesystem to SDFS for ARM11 builds, as that's somewhat more appropriate than ADFS when on the Pi. Also now using filesystem numbers from Hdr:FSNumbers instead of magic numbers.
Admin:
  Builds, but untested


Version 5.35, 4.79.2.147.2.14. Tagged as 'Kernel-5_35-4_79_2_147_2_14'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.14
#define Module_Date_CMHG                09 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.14"
#define Module_Date                     "09 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.14)"
#define Module_HelpVersion              "5.35 (09 Jul 2012) 4.79.2.147.2.14"
@


4.79.2.147.2.15
log
@  Merged OS_Memory 8 changes across from HAL branch to RPi branch
Detail:
  Revisions Kernel-5_35-4_79_2_153 and Kernel-5_35-4_79_2_161 merged with one
  trivial conflict.
Admin:
  Confirmed that this builds, but not tested on hardware.

Version 5.35, 4.79.2.147.2.15. Tagged as 'Kernel-5_35-4_79_2_147_2_15'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.15
#define Module_Date_CMHG                20 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.15"
#define Module_Date                     "20 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.15)"
#define Module_HelpVersion              "5.35 (20 Jul 2012) 4.79.2.147.2.15"
@


4.79.2.147.2.16
log
@Add new HAL device IDs for Raspberry Pi GPIO interface & VCHIQ
Detail:
  hdr/HALDevice - Add new inter-processor communications device type. Add device IDs for Pi/BCM2835 GPIO interface & VCHIQ
  hdr/GPIODevice - Add Raspberry Pi GPIO type & interface revision (currently 'unknown')
Admin:
  Tested in Raspberry Pi ROM with high processor vectors
  New IDs required for BCM2835-0_17


Version 5.35, 4.79.2.147.2.16. Tagged as 'Kernel-5_35-4_79_2_147_2_16'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.16
#define Module_Date_CMHG                02 Aug 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.16"
#define Module_Date                     "02 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Aug-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.16)"
#define Module_HelpVersion              "5.35 (02 Aug 2012) 4.79.2.147.2.16"
@


4.79.2.147.2.17
log
@Fix crash in OS_Hardware 4 when encountering devices which are newer than the caller supports. Add new device IDs for Raspberry Pi audio devices.
Detail:
  s/HAL - Fixed crash in OS_Hardware 4 when encountering devices which are newer than the caller supports
  hdr/HALDevice - Added new HAL devices for Raspberry Pi audio devices
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.17. Tagged as 'Kernel-5_35-4_79_2_147_2_17'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.17
#define Module_Date_CMHG                15 Aug 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.17"
#define Module_Date                     "15 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Aug-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.17)"
#define Module_HelpVersion              "5.35 (15 Aug 2012) 4.79.2.147.2.17"
@


4.79.2.147.2.18
log
@Preperation for working Raspberry Pi video driver
Detail:
  hdr/HALEntries - Add new HAL_Video_StartupMode HAL entry to allow the HAL to specify a startup mode
  s/HAL, s/Kernel - Tweaked debug routines
  s/vdu/vdudriver - Make use of HAL_Video_StartupMode in InitialiseMode to decide what initial mode should be. Clean up some hacks & debug. Improve handling of external framestores; if bit 5 of GraphicsV_DisplayFeatures r0 is set, the kernel will now allow the display driver to grow/shrink/move its framestore in response to mode changes.
  s/vdu/vdugrafv - Adjust default GV_FramestoreAddress implementation to only claim vector if HAL returns a framestore
  s/vdu/vduswis - Re-enable FindOKMode
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.18. Tagged as 'Kernel-5_35-4_79_2_147_2_18'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.18
#define Module_Date_CMHG                02 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.18"
#define Module_Date                     "02 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.18)"
#define Module_HelpVersion              "5.35 (02 Sep 2012) 4.79.2.147.2.18"
@


4.79.2.147.2.19
log
@Corrected default configured language to the Desktop module.

Version 5.35, 4.79.2.147.2.19. Tagged as 'Kernel-5_35-4_79_2_147_2_19'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.19
#define Module_Date_CMHG                03 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.19"
#define Module_Date                     "03 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "03-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.19)"
#define Module_HelpVersion              "5.35 (03 Sep 2012) 4.79.2.147.2.19"
@


4.79.2.147.2.20
log
@Clean up remaining kernel hacks
Detail:
  Docs/RPiNotes - Deleted, contents no longer relevant
  s/HAL, s/Kernel, s/vdu/vduswis, s/pmf/key - Cleaned up debug code
  s/NewIRQs - No need to piggy back on timer 0 IRQ to generate a fake VSync; PushModeInfo already claims/releases TickerV as appropriate if video driver doesn't provide a VSync IRQ.
  s/NewReset - Re-enable LookForHALRTC call, the stack imbalance bug was fixed before the Pi changes were merged in
  s/vdu/vducursoft - Streamline PostWrchCursor a bit by only preserving R14 around RestorePointer if the software pointer is in use
  s/vdu/vdudriver - Amend ModeChangeSub improvements to ensure old external framestore handling logic is used if driver doesn't support framestore growth/realloc
Admin:
  Tested on Raspberry Pi with high processor vectors
  Kernel now looks to be in a good state for merging back into HAL branch
  Note - Software mouse pointer support in vducursoft only checks HALVideoFeatures, so doesn't take into account the capabilities of any GraphicsV driver that may be in use.


Version 5.35, 4.79.2.147.2.20. Tagged as 'Kernel-5_35-4_79_2_147_2_20'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.20
#define Module_Date_CMHG                07 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.20"
#define Module_Date                     "07 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "07-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.20)"
#define Module_HelpVersion              "5.35 (07 Sep 2012) 4.79.2.147.2.20"
@


4.79.2.147.2.21
log
@Update GPIO HAL device revisions to add Raspberry Pi model B rev 1 & rev 2
Detail:
  hdr/GPIODevice - Removed existing 'unknown' revision and added 'B rev 1' and 'B rev 2' in its place, ready for new HAL that can report the board revision.
Admin:
  Tested on Raspberry Pi (B rev 1)


Version 5.35, 4.79.2.147.2.21. Tagged as 'Kernel-5_35-4_79_2_147_2_21'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.21
#define Module_Date_CMHG                08 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.21"
#define Module_Date                     "08 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "08-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.21)"
#define Module_HelpVersion              "5.35 (08 Sep 2012) 4.79.2.147.2.21"
@


4.79.2.147.2.22
log
@Fix addresses sent to GraphicsV_SetDMAAddress when external framestore in use. Add ID for BCM2835 VDU HAL device.
Detail:
  hdr/KernelWS, s/vdu/vdudriver, s/vdu/vduwrch - Fixed wrong addresses being sent to GraphicsV_SetDMAAddress when an external framestore is in use. Previously VideoPhysAddr was being treated as if it was the base of screen memory, but that's only the case if an internal framestore is in use. Since VideoPhysAddr is part of PhysRamTable it's not possible to change it to point to an external framestore, so a new workspace variable, TrueVideoPhysAddr, is used instead.
  hdr/HALDevice - Added device ID for BCM2835 VDU device
  s/PMF/IIC - Corrected an incorrect comment in IICDoOp
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.22. Tagged as 'Kernel-5_35-4_79_2_147_2_22'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.147.2.22
#define Module_Date_CMHG                18 Sep 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.147.2.22"
#define Module_Date                     "18 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-Sep-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.22)"
#define Module_HelpVersion              "5.35 (18 Sep 2012) 4.79.2.147.2.22"
@


4.79.2.147.2.23
log
@Merge with HAL branch
Detail:
  Merge the HAL branch into the RPi branch, prior to merging RPi to HAL
  Brief summary of main changes brought in:
  * Added *cache functionality previously provided by ARM module
  * Added "CMOS RAM reset" message on startup when CMOS has been wiped by keypress
  * Renamed HAL Video entries from HAL_Video_XXX to HAL_VideoXXX
  * Dropped mjsHAL macros, GRAB/STASH macros
  * Fixed pseudo-VRAM allocation when machine has exactly 16MB of RAM
  * Added OS_Hardware 5
  * Use OS_SerialOp GetDeviceName for getting serial device name
  * Drop HAL_MonitorLeadID
  * Rework default GraphicsV_IICOp handler
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.35, 4.79.2.147.2.23. Tagged as 'Kernel-5_35-4_79_2_147_2_23'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.147.2.23
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.147.2.23"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.147.2.23)"
#define Module_HelpVersion              "5.35 (18 Sep 2012) 4.79.2.147.2.23"
@


4.79.2.98.2.1
log
@Initial kernel support for Cortex-A8 processors.
Detail:
  hdr/ARMops - Added Cortex_A8 processor type, new ARM architecture number
  hdr/Options - Enabled various kernel debug options
  s/ARMops - Added Cortex-A8/OMAP3530 to known CPUs list. Ignore cache type register for ARM architecture &F.
  s/NewIRQs - Increase MaxInterrupts to 96
Admin:
  Brief testing under qemu-omap3.



Version 5.35, 4.79.2.98.2.1. Tagged as 'Kernel-5_35-4_79_2_98_2_1'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.1
#define Module_Date_CMHG                01 Feb 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.1"
#define Module_Date                     "01 Feb 2009"
d16 1
a16 1
#define Module_ApplicationDate          "01-Feb-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.1)"
#define Module_HelpVersion              "5.35 (01 Feb 2009) 4.79.2.98.2.1"
@


4.79.2.98.2.2
log
@  Add support for Cortex cache type. Extend ARM_Analyse to, where appropriate, use CPU feature registers to identify CPU capabilities.
Detail:
  s/ARMops - Support for Cortex multi-level cache (CT_ctype_WB_CR7_Lx). New ARM_Analyse_Fancy to identify CPU capabilities using feature registers.
  s/HAL - Modify pre-ARMop cache code to handle Cortex-syle caches.
  s/MemInfo - Replace ARM_flush_TLB macro call with appropriate ARMop to provide Cortex compatability
  hdr/ARMops - Update list of ARM architectures
  hdr/CoPro15ops - Deprecate ARM_flush_* macros for HAL kernels, as they are no longer capable of flushing all cache types. ARMops should be used instead.
  hdr/KernelWS - Add storage space for multi-level cache properties required for new cache cleaning code.
Admin:
  Tested under qemu-omap3. Still unable to verify on real hardware due to lack of appropriate MMU code. However new OMAP3 HAL code that uses similar cache management functions appears to work fine on real hardware.


Version 5.35, 4.79.2.98.2.2. Tagged as 'Kernel-5_35-4_79_2_98_2_2'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.2
#define Module_Date_CMHG                21 Feb 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.2"
#define Module_Date                     "21 Feb 2009"
d16 1
a16 1
#define Module_ApplicationDate          "21-Feb-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.2)"
#define Module_HelpVersion              "5.35 (21 Feb 2009) 4.79.2.98.2.2"
@


4.79.2.98.2.3
log
@Add VMSAv6 MMU support, fixes to allow booting on beagleboard
Detail:
  s/ARM600 - fix to SyncCodeAreasRange to correctly read cache line length for WB_CR7_Lx caches
  s/ARMops - Cortex cache handling fixes. Enable L2 cache for Cortex.
  s/ChangeDyn - VMSAv6 support in AllocateBackingLevel2
  s/HAL - Improve RISCOS_InitARM to set/clear correct CP15 flags for ARMv6/v7. VMSAv6 support in code to generate initial page tables.
  s/NewReset - Extra DebugTX calls during OS startup. Disable pre-HAL Processor_Type for HAL builds.
  s/VMSAv6 - Main VMSAv6 MMU code - stripped down version of s/ARM600 with support for basic VMSAv6 features.
  hdr/Options - Use VMSAv6 MMU code, not ARM600. Disable ARM6support since current VMSAv6 code will conflict with it.
Admin:
  Tested basic OS functionality under qemu-omap3 and revision B6 beagleboard.


Version 5.35, 4.79.2.98.2.3. Tagged as 'Kernel-5_35-4_79_2_98_2_3'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.3
#define Module_Date_CMHG                06 Mar 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.3"
#define Module_Date                     "06 Mar 2009"
d16 1
a16 1
#define Module_ApplicationDate          "06-Mar-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.3)"
#define Module_HelpVersion              "5.35 (06 Mar 2009) 4.79.2.98.2.3"
@


4.79.2.98.2.4
log
@Fix kernel cache clean/invalidate operations for Cortex CPUs
Detail:
  s/ARMops - Fix set/way-based cache ops for cache type WB_CR7_Lx to iterate sets/ways/cache levels properly
  s/HAL - Fix HAL_InvalidateCache_ARMvF to iterate sets/ways/cache levels properly
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.4. Tagged as 'Kernel-5_35-4_79_2_98_2_4'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.4
#define Module_Date_CMHG                24 Apr 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.4"
#define Module_Date                     "24 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "24-Apr-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.4)"
#define Module_HelpVersion              "5.35 (24 Apr 2009) 4.79.2.98.2.4"
@


4.79.2.98.2.5
log
@Assorted kernel fixes for ARMv6/ARMv7
Detail:
  s/ARMops - Fix IMB_Range_WB_CR7_Lx to clean the correct number of cache lines
  s/HAL - Change CP15 control register flags so unaligned loads are enabled on ARMv6 (to simplify support for ARMv7 where unaligned loads are always enabled, and to match the behaviour expected by the example code in Hdr:CPU.Arch)
  s/AMBControl/memmap - Make AMB_LazyFixUp use the correct L2PT protection flags depending on ARM600/VMSAv6 MMU model. Also guard against problems caused by future L2PT flag changes.
  s/vdu/vdugrafj - Fix previously undiscovered 32bit incompatability in GetSprite (OS_SpriteOp 14/16)
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.5. Tagged as 'Kernel-5_35-4_79_2_98_2_5'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.5
#define Module_Date_CMHG                10 May 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.5"
#define Module_Date                     "10 May 2009"
d16 1
a16 1
#define Module_ApplicationDate          "10-May-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.5)"
#define Module_HelpVersion              "5.35 (10 May 2009) 4.79.2.98.2.5"
@


4.79.2.98.2.6
log
@  Unaligned loads/stores optimised for ARMv6+
Detail:
  Having scanned the kernel source for unaligned load code fragments which
  would abort on ARMv6 and v7 and not having found any, I took the opportunity
  to give them build-time switches to use unaligned LDR((S)H)/STR(H)
  instructions if built for a new enough platform. Also added a couple of
  cases of LDRSB that will benefit v4 CPUs and a few instances of the v6
  SXTH instruction, but since objasm doesn't yet understand it (and when it
  does, not everyone will have upgraded) they are currently written as
  DCI statements.
  Most of the changes are to OS_Word handlers, which are notorious in that
  their input/output block is not word-aligned.
Admin:
  Not tested, but it should at least build.

Version 5.35, 4.79.2.98.2.6. Tagged as 'Kernel-5_35-4_79_2_98_2_6'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.6
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.6"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.6)"
#define Module_HelpVersion              "5.35 (10 May 2009) 4.79.2.98.2.6"
@


4.79.2.98.2.7
log
@Disable paged scrolling when using the debug terminal
Detail:
  s/vdu/vduwrch - Modify PageTest to never use paged scrolling when DebugTerminal is true (since serial terminals aren't able to send shift up/down messages)
Admin:
  Tested on rev C2 beagleboard.


Version 5.35, 4.79.2.98.2.7. Tagged as 'Kernel-5_35-4_79_2_98_2_7'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.7
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.7"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.7)"
#define Module_HelpVersion              "5.35 (10 May 2009) 4.79.2.98.2.7"
@


4.79.2.98.2.8
log
@  Miscellaneous v6-related updates
Detail:
 * Stopped calling the broken abort fixup code when running under VMSAv6.
   Might be desirable to update it, possibly farmed out to a separate module -
   still need to think about this.
 * Unaligned load optimisations can now be disabled by the global NoUnaligned
   flag for testing purposes.
 * Extended OS_ReadUnsigned to permit reading of 64-bit unsigned integers.
   See Docs.ReadUnsigned for more details. Also sped it up by using MLA
   (or UMLAL) for most digits rather than repeated addition.
 * Bugfix is OS_GSRead: an uninitialised r0 was being passed to
   OS_ReadUnsigned, causing undesirable effects on rare occasions.
Admin:
  Tested on a rev B7 beagleboard.

Version 5.35, 4.79.2.98.2.8. Tagged as 'Kernel-5_35-4_79_2_98_2_8'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.8
#define Module_Date_CMHG                17 May 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.8"
#define Module_Date                     "17 May 2009"
d16 1
a16 1
#define Module_ApplicationDate          "17-May-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.8)"
#define Module_HelpVersion              "5.35 (17 May 2009) 4.79.2.98.2.8"
@


4.79.2.98.2.9
log
@  Fix bugs and inefficiencies revealed by unaligned data audit
Detail:
  s.PMF.i2cutils line 454: this LDR of byte values was harmless (bits 8
    upwards are discarded later) but slower than an LDRB on ARMv6 or later.
  s.PMF.i2cutils line 556: should have loaded RTCFitted using LDRB. Looks
    like effect would have been to reduce utilisation of CMOS cache.
  s.vdu.vduswis line 1500: mistakenly accessing ExternalFramestore using LDR.
    I don't think the intention was to prevent the screen DA being resized
    while screen memory was claimed, but that was the effect.
  s.vdu.vduwrch line 3106: this LDR of a 1-byte variable was harmless (only
    used for testing bit 4) but slower than an LDRB on ARMv6 or later.
  CPU version is no longer specified in the makefile - it's better to inherit
  it from the build environment now that we actually set it appropriately.
Admin:
  Built and briefly tested.

Version 5.35, 4.79.2.98.2.9. Tagged as 'Kernel-5_35-4_79_2_98_2_9'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.9
#define Module_Date_CMHG                16 Jun 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.9"
#define Module_Date                     "16 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "16-Jun-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.9)"
#define Module_HelpVersion              "5.35 (16 Jun 2009) 4.79.2.98.2.9"
@


4.79.2.98.2.10
log
@Make Cortex kernel call HAL_IRQClear after servicing I2C interrupts
Detail:
  s/PMF/IIC - IICIRQ now calls HAL_IRQClear after HAL_IICMonitorTransfer, in order to make sure the IRQ controller is restarted.
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.10. Tagged as 'Kernel-5_35-4_79_2_98_2_10'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.10
#define Module_Date_CMHG                17 Jul 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.10"
#define Module_Date                     "17 Jul 2009"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jul-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.10)"
#define Module_HelpVersion              "5.35 (17 Jul 2009) 4.79.2.98.2.10"
@


4.79.2.98.2.11
log
@Add HAL RTC support to Cortex branch of kernel, clean up RTCSupport code
Detail:
  HAL kernels (on the Cortex branch at least) now support HALDevice-based RTCs. If the kernels own RTC code is disabled or fails to detect an RTC, then after HAL_InitDevices is called the HALDevice list will be scanned for any HAL-resident RTC devices.
  Additionally, the RTCSupport flag (in Hdr:Machine.Machine), which was previously TRUE for all HAL kernels, can now be set to FALSE in HAL kernels to disable the kernels own IIC RTC code. This allows the unwanted legacy RTC code to be disabled for machines which are known to use HAL RTCs instead.
  hdr/RTCDevice - new header describing data structures used for HAL RTC device
  hdr/HALDevice - added RTCDevice device type, IIC serial bus type
  hdr/KernelWS - upgraded RTCFitted from a 1 byte field to 4 byte. It now stores either a null value (for no RTC), a value <2048 for an IIC RTC address, or a value >= 2048 for a RTCDevice ptr
  Makefile - added header export of hdr/RTCDevice
  s/GetAll - include hdr/RTCDevice
  s/NewReset - initialise HAL RTC after HAL_InitDevices if required
  s/PMF/i2cutils, s/PMF/osinit, s/PMF/osword - modifications to allow use of HAL RTC (and disallow use of builtin IIC RTC)
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.11. Tagged as 'Kernel-5_35-4_79_2_98_2_11'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.11
#define Module_Date_CMHG                23 Jul 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.11"
#define Module_Date                     "23 Jul 2009"
d16 1
a16 1
#define Module_ApplicationDate          "23-Jul-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.11)"
#define Module_HelpVersion              "5.35 (23 Jul 2009) 4.79.2.98.2.11"
@


4.79.2.98.2.12
log
@Disable DebugTerminal by default for OMAP3 kernel
Detail:
  The host-mode driver for the MUSB OTG controller is now working, so there's no longer any reason to have the DebugTerminal enabled by default.
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.12. Tagged as 'Kernel-5_35-4_79_2_98_2_12'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.12
#define Module_Date_CMHG                06 Sep 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.12"
#define Module_Date                     "06 Sep 2009"
d16 1
a16 1
#define Module_ApplicationDate          "06-Sep-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.12)"
#define Module_HelpVersion              "5.35 (06 Sep 2009) 4.79.2.98.2.12"
@


4.79.2.98.2.13
log
@Update Cortex kernel to cope correctly with HAL RTC errors
Detail:
  The kernel will now attempt to cope with errors returned by HAL RTC devices - For RTC read operations, instead of just loading random garbage, the bad result will now be ignored and the soft 5-byte time left unaltered.
Admin:
  Tested on rev C2 beagleboard. Year now correctly defaults to 1970 instead of 1900 if the OMAP3 RTC driver returns an error because the RTC isn't running yet.


Version 5.35, 4.79.2.98.2.13. Tagged as 'Kernel-5_35-4_79_2_98_2_13'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.13
#define Module_Date_CMHG                30 Sep 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.13"
#define Module_Date                     "30 Sep 2009"
d16 1
a16 1
#define Module_ApplicationDate          "30-Sep-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.13)"
#define Module_HelpVersion              "5.35 (30 Sep 2009) 4.79.2.98.2.13"
@


4.79.2.98.2.14
log
@Fix error handling for sparse dynamic area resize operations, increase Cortex kernel version number to 5.15
Detail:
  s/ChangeDyn - Swap CMP with TEQ to avoid accidental clobbering of V flag before its state is checked on return from a SWI. Errors encountered during sparse dynamic area resize operations (OS_DynamicArea 9 & 10) should now be reported properly.
  Version - Update kernel version/date to 5.15, to match current HAL version. This change is to allow modules to properly detect whether the kernel has the sparse dynamic area fix - it does not (yet) mean that the Cortex kernel contains all the features of the current development HAL kernel!
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.14. Tagged as 'Kernel-5_35-4_79_2_98_2_14'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.14
#define Module_Date_CMHG                22 Oct 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.14"
#define Module_Date                     "22 Oct 2009"
d16 1
a16 1
#define Module_ApplicationDate          "22-Oct-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.14)"
#define Module_HelpVersion              "5.35 (22 Oct 2009) 4.79.2.98.2.14"
@


4.79.2.98.2.15
log
@Fix bug when creating code variables via OS_SetVarVal, remove errant line from s.ARM600, automatically enable alignment exceptions if NoUnaligned is TRUE (Cortex branch)
Detail:
  s/ARM600 - Removed an errant line that could have caused problems if the ARM600 MMU model was used with the WB_CR7_Lx cache type
  s/Arthur2 - OS_SetVarVal was failing to call XOS_SynchroniseCodeAreas after copying the code variables code block into the system heap. This has now been fixed.
  s/HAL - Alignment exceptions are now automatically enabled when the kernel is built with the NoUnaligned option turned on.
Admin:
  Tested on rev C2 beagleboard. OS_SetVarVal fix means the Debugger module now shows the right register names instead of ofla!


Version 5.35, 4.79.2.98.2.15. Tagged as 'Kernel-5_35-4_79_2_98_2_15'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.15
#define Module_Date_CMHG                06 Nov 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.15"
#define Module_Date                     "06 Nov 2009"
d16 1
a16 1
#define Module_ApplicationDate          "06-Nov-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.15)"
#define Module_HelpVersion              "5.35 (06 Nov 2009) 4.79.2.98.2.15"
@


4.79.2.98.2.16
log
@Add header for video HAL devices, device IDs for OMAP3 DMA & video controllers to Cortex kernel
Detail:
  hdr/VideoDevice, Makefile - Add initial version of header for video HAL devices
  hdr/HALDevice - Add device IDs for OMAP3 DMA & video devices.
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.16. Tagged as 'Kernel-5_35-4_79_2_98_2_16'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.16
#define Module_Date_CMHG                28 Nov 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.16"
#define Module_Date                     "28 Nov 2009"
d16 1
a16 1
#define Module_ApplicationDate          "28-Nov-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.16)"
#define Module_HelpVersion              "5.35 (28 Nov 2009) 4.79.2.98.2.16"
@


4.79.2.98.2.17
log
@Fix cortex kernel makefile
Detail:
  Makefile rule was missing for VideoDevice header export, preventing it from being exported
Admin:
  Tested on rev C2 beagleboard. (No, really, I mean it this time!)


Version 5.35, 4.79.2.98.2.17. Tagged as 'Kernel-5_35-4_79_2_98_2_17'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.17
#define Module_Date_CMHG                29 Nov 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.17"
#define Module_Date                     "29 Nov 2009"
d16 1
a16 1
#define Module_ApplicationDate          "29-Nov-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.17)"
#define Module_HelpVersion              "5.35 (29 Nov 2009) 4.79.2.98.2.17"
@


4.79.2.98.2.18
log
@Fix HAL RTC initialisation in Cortex kernel
Detail:
  LookForHALRTC wasn't initialising R12 to point to the OS Byte workspace before calling CheckYear, and instead relying on the previous value. This resulted in the RTC initialisation breaking once HAL_InitDevices started doing things to corrupt R12.
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.18. Tagged as 'Kernel-5_35-4_79_2_98_2_18'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.18
#define Module_Date_CMHG                05 Dec 2009
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.18"
#define Module_Date                     "05 Dec 2009"
d16 1
a16 1
#define Module_ApplicationDate          "05-Dec-09"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.18)"
#define Module_HelpVersion              "5.35 (05 Dec 2009) 4.79.2.98.2.18"
@


4.79.2.98.2.19
log
@Add TPS65950 audio & mixer devices to Cortex HALDevice.hdr

Version 5.35, 4.79.2.98.2.19. Tagged as 'Kernel-5_35-4_79_2_98_2_19'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.19
#define Module_Date_CMHG                16 Jan 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.19"
#define Module_Date                     "16 Jan 2010"
d16 1
a16 1
#define Module_ApplicationDate          "16-Jan-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.19)"
#define Module_HelpVersion              "5.35 (16 Jan 2010) 4.79.2.98.2.19"
@


4.79.2.98.2.20
log
@Incremented RISC OS version for the Cortex branch to next development number (5.17).

Version 5.35, 4.79.2.98.2.20. Tagged as 'Kernel-5_35-4_79_2_98_2_20'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.20
#define Module_Date_CMHG                19 Jan 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.20"
#define Module_Date                     "19 Jan 2010"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.20)"
#define Module_HelpVersion              "5.35 (19 Jan 2010) 4.79.2.98.2.20"
@


4.79.2.98.2.21
log
@Migrate 2012 RTC fix to Cortex branch of kernel
Detail:
  s/PMF/osword - Migrate the 2012 RTC fix from the HAL branch to the Cortex branch, plus apply similar fix to the code that handles HAL RTC devices (via new YearLOIsGood flag)
  s/PMF/i2cutils - Update HAL RTC year handling to correctly treat YearLO as either 2-bit int or 2-digit BCD
  hdr/RTCDevice - Add YearLOIsGood flag, revise NeedsYearHelp description
Admin:
  Tested on rev C2 beagleboard. Code seems to behave as intended.


Version 5.35, 4.79.2.98.2.21. Tagged as 'Kernel-5_35-4_79_2_98_2_21'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.21
#define Module_Date_CMHG                24 Jan 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.21"
#define Module_Date                     "24 Jan 2010"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jan-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.21)"
#define Module_HelpVersion              "5.35 (24 Jan 2010) 4.79.2.98.2.21"
@


4.79.2.98.2.22
log
@Fix bug in InitCMOSCache that could cause CMOS to be erroneously reset if NVRAM is of type 'MaybeIIC' (Cortex branch)
Detail:
  s/PMF/i2cutils - Kernel was checking if the full IIC flags word was equal to MaybeIIC instead of just checking if the Provision bits equalled MaybeIIC. Thus if any of the additional flags were set along with MaybeIIC the kernel would have skipped the probing code, skipped the IIC code, and then fallen through to using the (likely unimplemented) HAL interface for initialising the NVRAM cache.
Admin:
  Fix tested in HAL branch in IOMD build under RPCemu; kernel now takes the correct path for MaybeIIC + ProtectAtEnd.


Version 5.35, 4.79.2.98.2.22. Tagged as 'Kernel-5_35-4_79_2_98_2_22'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.22
#define Module_Date_CMHG                02 Feb 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.22"
#define Module_Date                     "02 Feb 2010"
d16 1
a16 1
#define Module_ApplicationDate          "02-Feb-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.22)"
#define Module_HelpVersion              "5.35 (02 Feb 2010) 4.79.2.98.2.22"
@


4.79.2.98.2.23
log
@Fix detection of Philips RTC/NVRAM when MaybeIIC is in use (Cortex branch)
Detail:
  s/PMF/i2cutils - Although the code will detect the Philips RTC correctly, it was failing to set the device size in R4, causing CMOS RAM to be misread. This change fixes that.
Admin:
  Not tested; however it's identical to the fix applied to the HAL branch


Version 5.35, 4.79.2.98.2.23. Tagged as 'Kernel-5_35-4_79_2_98_2_23'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.23
#define Module_Date_CMHG                20 Feb 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.23"
#define Module_Date                     "20 Feb 2010"
d16 1
a16 1
#define Module_ApplicationDate          "20-Feb-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.23)"
#define Module_HelpVersion              "5.35 (20 Feb 2010) 4.79.2.98.2.23"
@


4.79.2.98.2.24
log
@Update VDU HAL device for new OMAPVideo driver, fix MVA-based cache/TLB maintenance ops aborting on ARMv7, add warning to VDU driver about inconsistent state variables during screen mode changes
Detail:
  hdr/VideoDevice - removed Address2 and Device2 fields as it makes more sense for them to be in the device specific field (which for OMAP3 is a pointer to an OMAP3-specific struct)
  s/VMSAv6 - Modify data abort handler to ignore aborts that are generated by MVA-based cache/TLB maintenance ops. Unlike earlier ARM architectures, MVA-based ops can abort under ARMv7 if the page has no mapping to a physical address.
  s/vdu/vdudriver - Add a warning about VDU driver state variables (particularly CursorAddr) being left in invalid states during the execution of mode changes. This can cause problems if any attempt is made to output to the screen during the mode change (e.g. as a result of an abort)
Admin:
  Tested on rev C2 beagleboard. Video device changes mean that OMAP3 HAL 0.23 will be needed for ROM compilation to succeed.


Version 5.35, 4.79.2.98.2.24. Tagged as 'Kernel-5_35-4_79_2_98_2_24'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.24
#define Module_Date_CMHG                28 Feb 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.24"
#define Module_Date                     "28 Feb 2010"
d16 1
a16 1
#define Module_ApplicationDate          "28-Feb-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.24)"
#define Module_HelpVersion              "5.35 (28 Feb 2010) 4.79.2.98.2.24"
@


4.79.2.98.2.25
log
@Add ClearIRQ entry to base HAL device struct, plus a couple of new HAL device IDs & bus types
Detail:
  hdr/HALDevice, h/HALDevice - inserted the new 'ClearIRQ' entry point into one of the reserved areas.
  Once the RISC OS-side driver has serviced the device's IRQ the ClearIRQ entry point should be called to allow the HAL device to clear any latched interrupt states in intermediate IRQ controllers (e.g. when using GPIO IRQs on OMAP)
  Since this entry point is new, support for it in existing device drivers isn't guaranteed; HAL device implementations of existing APIs must make sure the use a new major version number to indicate that they require ClearIRQ to be called.
  hdr/HALDevice - added some new bus types to represent the GPMC & L3/L4 interconnects in the OMAP.
  hdr/HALDevice - added ethernet NIC device type & IDs for SMSC9221 & DM9000 NICs
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.25. Tagged as 'Kernel-5_35-4_79_2_98_2_25'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.25
#define Module_Date_CMHG                20 Mar 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.25"
#define Module_Date                     "20 Mar 2010"
d16 1
a16 1
#define Module_ApplicationDate          "20-Mar-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.25)"
#define Module_HelpVersion              "5.35 (20 Mar 2010) 4.79.2.98.2.25"
@


4.79.2.98.2.26
log
@Change default filing system to SCSIFS for CortexA8 machines
Detail:
  s/NewReset - boot filing system now defaults to SCSIFS for the CortexA8 machine type. BeagleBoards, etc. should now be able to run their boot sequence if one is placed on a USB mass storage device.
Admin:
  Tested on rev C2 beagleboard.


Version 5.35, 4.79.2.98.2.26. Tagged as 'Kernel-5_35-4_79_2_98_2_26'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.26
#define Module_Date_CMHG                22 Apr 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.26"
#define Module_Date                     "22 Apr 2010"
d16 1
a16 1
#define Module_ApplicationDate          "22-Apr-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.26)"
#define Module_HelpVersion              "5.35 (22 Apr 2010) 4.79.2.98.2.26"
@


4.79.2.98.2.27
log
@Update Cortex kernel to use correct instruction/memory barriers and to perform branch target predictor maintenance. Plus tweak default CMOS settings.
Detail:
  hdr/Copro15ops - Added myISB, myDSB, myDMB macros to provide barrier functionality on ARMv6+
  s/ARMops, s/HAL, s/VMSAv6, s/AMBControl/memmap - Correct barrier operations are now performed on ARMv6+ following CP15 writes. Branch predictors are now also maintained properly.
  s/NewReset - Change default CMOS settings so number of CDFS drives is 0 in Cortex builds. Fixes rogue CDFS icon on iconbar.
Admin:
  Tested on rev C2 beagleboard


Version 5.35, 4.79.2.98.2.27. Tagged as 'Kernel-5_35-4_79_2_98_2_27'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.27
#define Module_Date_CMHG                23 Jun 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.27"
#define Module_Date                     "23 Jun 2010"
d16 1
a16 1
#define Module_ApplicationDate          "23-Jun-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.27)"
#define Module_HelpVersion              "5.35 (23 Jun 2010) 4.79.2.98.2.27"
@


4.79.2.98.2.28
log
@Minor MMU_ChangingEntries_WB_CR7_Lx fix
Detail:
  s/ARMops - previous version of MMU_ChangingEntries_WB_CR7_Lx would behave improperly if cleaning the last page of the address map by neglecting to flush any more than one TLB entry
Admin:
  Untested!


Version 5.35, 4.79.2.98.2.28. Tagged as 'Kernel-5_35-4_79_2_98_2_28'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.28
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.28"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.28)"
#define Module_HelpVersion              "5.35 (23 Jun 2010) 4.79.2.98.2.28"
@


4.79.2.98.2.29
log
@Add GET Hdr:CPU.Arch to Kernel copy of Copro15ops, so I don't accidentally break the HAL again

Version 5.35, 4.79.2.98.2.29. Tagged as 'Kernel-5_35-4_79_2_98_2_29'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.29
#define Module_Date_CMHG                24 Jun 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.29"
#define Module_Date                     "24 Jun 2010"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jun-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.29)"
#define Module_HelpVersion              "5.35 (24 Jun 2010) 4.79.2.98.2.29"
@


4.79.2.98.2.30
log
@Fix more issues caused by aborting MVA cache/TLB ops on ARMv7
Detail:
  s/ARMops - Fixed an instance of 'invalidate branch predictor entry' that should have been 'invalidate all branch predictors'
  s/ChangeDyn - Avoid cleaning the Nowhere page when reallocating memory, to avoid incurring the performance hit of the abort handler, and to avoid AMBControl screwing things up by mapping in pages that we're trying to modify
  s/VMSAv6 - Move MVA cache/TLB abort handler to before ChocolateAMB code, to ensure AMBControl doesn't try mapping in pages for harmless cache/TLB op aborts. Also tweaked code to be a little bit faster.
Admin:
  Tested on rev C2 beagleboard. No more lockups when moving screen memory around, for now at least.


Version 5.35, 4.79.2.98.2.30. Tagged as 'Kernel-5_35-4_79_2_98_2_30'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.30
#define Module_Date_CMHG                03 Jul 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.30"
#define Module_Date                     "03 Jul 2010"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jul-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.30)"
#define Module_HelpVersion              "5.35 (03 Jul 2010) 4.79.2.98.2.30"
@


4.79.2.98.2.31
log
@Fix ARMv7 MVA-based cache/TLB op abort handler to be re-entrant
Detail:
  s/VMSAv6 - The code in DAbPreVeneer that checks for aborting MVA-based cache/TLB ops is now re-entrant.
  This is to cope with the "strange but true" case where a data abort was being triggered by a load/store
  instruction that itself was in an unmapped page.
Admin:
  Tested on rev C2 beagleboard. Fixes issue with StrongED crashing on load (see http://www.riscosopen.org/forum/forums/5/topics/453)
  Still need to work out why CPU was able to execute code from the unmapped page without triggering a prefetch abort (stale cache entries?)


Version 5.35, 4.79.2.98.2.31. Tagged as 'Kernel-5_35-4_79_2_98_2_31'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.31
#define Module_Date_CMHG                02 Sep 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.31"
#define Module_Date                     "02 Sep 2010"
d16 1
a16 1
#define Module_ApplicationDate          "02-Sep-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.31)"
#define Module_HelpVersion              "5.35 (02 Sep 2010) 4.79.2.98.2.31"
@


4.79.2.98.2.32
log
@Fix some issues preventing the Cortex kernel from being used on non-Cortex machines
Detail:
  hdr/Options - ARM6support and GetKernelMEMC values are now derived from the value of MEMM_Type
  s/ARMops, s/HAL - Code to detect and handle ARMv7 CPUs is now only enabled when using VMSAv6 MMU model. Saves us from having to deal with lack of myIMB, myDSB, etc. implementations on pre-ARMv6.
  s/HAL - Removed some debug code
  s/NewReset - Fix bug spotted by Tom Walker where R12 wasn't being restored by LookForHALRTC if a non-HAL RTC had already been found
  s/AMBControl/memmap - correct the assert clause that was checking that &FFE are the correct L2PT protection bits for non-VMSAv6 machines
Admin:
  Tested this kernel on a rev C2 beagleboard & Iyonix softload. Also compiled it into an IOMD ROM, but didn't try running it.


Version 5.35, 4.79.2.98.2.32. Tagged as 'Kernel-5_35-4_79_2_98_2_32'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.32
#define Module_Date_CMHG                04 Oct 2010
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.32"
#define Module_Date                     "04 Oct 2010"
d16 1
a16 1
#define Module_ApplicationDate          "04-Oct-10"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.32)"
#define Module_HelpVersion              "5.35 (04 Oct 2010) 4.79.2.98.2.32"
@


4.79.2.98.2.33
log
@Update OS_IICOp to support multiple IIC buses
Detail:
  OS_IICOp (and in turn, RISCOS_IICOpV) now treat the top byte of R1 as containing the IIC bus number, allowing multiple buses to be used.
  hdr/KernelWS - Changed workspace a bit so that the kernel can support up to IICBus_Count buses (currently 3), each with its own IICBus_* block.
  s/HAL - Update Reset_IRQ_Handler to cope with interrupts from all IIC buses instead of just the first. Fix/update RISCOS_IICOpV description.
  s/NewIRQs - Update InitialiseIRQ1Vtable to set up interrupt handlers for all IRQ-supporting IIC buses
  s/NewReset - Get rid of the IICAbort call that was just before IICInit. IICInit now calls IICAbort itself.
  s/PMF/IIC - Bulk of the changes. Code now uses the IICBus_ structures instead of the IICStatus and IICType variables. Re-entrancy code has been updated to take into account the possiblity of multiple buses; when OS_IICOp calls are nested, the IIC transfers will be added to bus-specific queues instead of all going in the same queue. However only one queue will be processed at a time.
  s/ChangeDyn - Workspace shuffling means a couple of MOV's needed to be swapped with LDR's when getting immediate constants
Admin:
  Tested with OMAP & IOMD ROM builds.
  Both high & low-level bus types seem to work OK, along with re-entrancy, both on the same bus and on a different bus.


Version 5.35, 4.79.2.98.2.33. Tagged as 'Kernel-5_35-4_79_2_98_2_33'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.33
#define Module_Date_CMHG                19 Feb 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.33"
#define Module_Date                     "19 Feb 2011"
d16 1
a16 1
#define Module_ApplicationDate          "19-Feb-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.33)"
#define Module_HelpVersion              "5.35 (19 Feb 2011) 4.79.2.98.2.33"
@


4.79.2.98.2.34
log
@Add OS_ReadSysInfo reason codes 11 (read debug info) & 12 (read extended machine ID)
Detail:
  OS_ReadSysInfo 10 is left unimplemented since it's a bit fiddly for us.
  OS_ReadSysInfo 11 is compatible with ROL's implementation, exposing HAL_DebugTX and HAL_DebugRX if the HAL provides them.
  See here for 10,11 docs: http://select.riscos.com/prm/core/osreadsysinfo.html
  OS_ReadSysInfo 12 is a new call to return the 'extended machine ID', to allow the HAL to specify the format & validity of the ID.
  If the HAL responds to the new HAL_ExtMachineID call then it's assumed that no old-style machine ID is present. The Kernel will generate an old-style ID using the contents of the extended ID, and use that with OS_ReadSysInfo 2/5.
  New software should use OS_ReadSysInfo 12 in preference to 2/5.
  s/Middle - Updated OS_ReadSysInfo SWI
  s/PMF/osinit - New old-style machine ID initialisation code
  hdr/HALEntries - Added new HAL_ExtMachineID entry
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.34. Tagged as 'Kernel-5_35-4_79_2_98_2_34'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.34
#define Module_Date_CMHG                20 Feb 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.34"
#define Module_Date                     "20 Feb 2011"
d16 1
a16 1
#define Module_ApplicationDate          "20-Feb-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.34)"
#define Module_HelpVersion              "5.35 (20 Feb 2011) 4.79.2.98.2.34"
@


4.79.2.98.2.35
log
@Tweak HAL_ExtMachineID to take the buffer pointer in R0 instead of R1
Detail:
  s/Middle, s/PMF/osinit - Kernel now passes the buffer pointer to the HAL in R0 instead of R1, for ATPCS compliance.
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.35. Tagged as 'Kernel-5_35-4_79_2_98_2_35'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.35
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.35"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.35)"
#define Module_HelpVersion              "5.35 (20 Feb 2011) 4.79.2.98.2.35"
@


4.79.2.98.2.36
log
@Add ID's for CPUClk HAL device. Trim dead code.
Detail:
  hdr/HALDevice - Added device type & ID for new CPUClk device, as used by the new OMAP3 HAL/PortableHAL versions.
  s/PMF/osinit - Disable a block of dead code that was getting compiled in.
Admin:
  Tested on rev C2 BB, rev A2 BB-xM, rev C1 TouchBook
  These changes are needed by the latest OMAP3 HAL & PortableHAL versions.


Version 5.35, 4.79.2.98.2.36. Tagged as 'Kernel-5_35-4_79_2_98_2_36'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.36
#define Module_Date_CMHG                19 Mar 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.36"
#define Module_Date                     "19 Mar 2011"
d16 1
a16 1
#define Module_ApplicationDate          "19-Mar-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.36)"
#define Module_HelpVersion              "5.35 (19 Mar 2011) 4.79.2.98.2.36"
@


4.79.2.98.2.37
log
@Update Cortex branch of kernel to support HALSize env variable. Export C version of hdr.OSEntries.
Detail:
  Makefile - Now exports a C version of hdr.OSEntries, for use by the new HAL USB drivers
  s/GetAll, s/Kernel - The HALSize env variable is now used in place of hard-coded values for the HAL size
  s/HAL - Reset_IRQ_Handler now switches to SVC mode before calling HAL_KbdScanInterrupt, to allow the HAL USB drivers to re-enable interrupts if they wish.
  s/VMSAv6 - Deleted some obsolete definitions
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Needs latest BuildSys, Env, HdrSrc


Version 5.35, 4.79.2.98.2.37. Tagged as 'Kernel-5_35-4_79_2_98_2_37'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.37
#define Module_Date_CMHG                22 May 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.37"
#define Module_Date                     "22 May 2011"
d16 1
a16 1
#define Module_ApplicationDate          "22-May-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.37)"
#define Module_HelpVersion              "5.35 (22 May 2011) 4.79.2.98.2.37"
@


4.79.2.98.2.38
log
@Add hdr.Variables to the C header export, fix ARMv6 issues
Detail:
  Makefile - Added hdr.Variables to the C header export list
  hdr/ARMops, s/ARMops - Added ARM1176JZF-S to the list of known CPUs
  s/ARMops - Fix unaligned memory access in ARM_PrintProcessorType
  hdr/Copro15ops, s/ARMops, s/HAL, s/VMSAv6, s/AMBControl/memmap - Fixed all myDSB/myISB/etc. macro instances to specify a temp register, so that they work properly when building an ARMv6 version of the kernel
Admin:
  Fixes build errors with the latest Draw module.
  Should also allow the kernel to work properly with the new S3C6410 port.
  ARMv6 version builds OK, but no other builds or runtime tests have been made.


Version 5.35, 4.79.2.98.2.38. Tagged as 'Kernel-5_35-4_79_2_98_2_38'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.38
#define Module_Date_CMHG                04 Jun 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.38"
#define Module_Date                     "04 Jun 2011"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jun-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.38)"
#define Module_HelpVersion              "5.35 (04 Jun 2011) 4.79.2.98.2.38"
@


4.79.2.98.2.39
log
@Kernel fixes for ARMv6
Detail:
  hdr/ARMops - Amended ARMvF description to state that an ARMvF CPU can be ARMv6 or ARMv7
  s/ARMops - Move ARM11JZF_S CPUDesc to KnownCPUTable_Fancy, since it's ARMvF. Update ARM_Analyse_Fancy to detect whether ARMv6 or ARMv7 style cache control is in use, and react accordingly.
  s/HAL - Simplified system control register/MMUC initialisation. There are now just two types of setup - one for ARMv3-ARMv5 and one for ARMv6-ARMv7. Modified HAL_InvalidateCache_ARMvF to use the appropriate cache flush instructions depending on whether it's an ARMv6 or ARMv7 style cache.
Admin:
  S3C6410 and other ARMv6 machines should work now.
  Tested on BB-xM rev A2.


Version 5.35, 4.79.2.98.2.39. Tagged as 'Kernel-5_35-4_79_2_98_2_39'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.39
#define Module_Date_CMHG                09 Jun 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.39"
#define Module_Date                     "09 Jun 2011"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jun-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.39)"
#define Module_HelpVersion              "5.35 (09 Jun 2011) 4.79.2.98.2.39"
@


4.79.2.98.2.40
log
@Tweak data abort handler to try and avoid recusrive aborts confusing AMBControl
Detail:
  s/VMSAv6 - The code to detect aborting MVA ops now only runs if the aborting instruction wasn't located in application space.
  This is a workaround for an issue where:
  (a) The aborting instruction is in application space
  (b) The aborting instruction is attempting to access memory located in the same page as itself
  (c) That page is not mapped in (despite the fact that code is being executed from it)
  Originally attempting to load the aborting the instruction would have triggered another abort, causing AMBControl to map in the page and resume the first abort handler. The first abort handler would then have determined that it wasn't an MVA op and called AMBControl, only to be told by AMBControl that it wasn't a lazy fixup abort (even though it really was), thus triggering the abort environment handler.
  By ignoring instructions located in application space the second abort is avoided, allowing AMBControl to correctly process the abort.
Admin:
  Tested on rev A2 BB-xM.
  Fixes issue with DPScan crashing - http://www.freelists.org/post/davidpilling/DPScan-ARMini-crash
  Still need to determine how the ICache is able to become so out of sync with the DCache & page tables.


Version 5.35, 4.79.2.98.2.40. Tagged as 'Kernel-5_35-4_79_2_98_2_40'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.40
#define Module_Date_CMHG                24 Jul 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.40"
#define Module_Date                     "24 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jul-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.40)"
#define Module_HelpVersion              "5.35 (24 Jul 2011) 4.79.2.98.2.40"
@


4.79.2.98.2.41
log
@Update the method the Cortex kernel uses to determine the UtilityModule & ROM dates
Detail:
  Three main changes:
  * On odd-numbered (i.e. development) versions of the module, the UtilityModule will now take its date from the VersionNum file instead of using a hard-coded date.
  * All build versions now look for the new "extended ROM footer" (as created by romlinker 0.04+) at the end of the ROM image and use it to determine the ROM build date for return by OS_ReadSysInfo 9,2. Failing to find the build date in the footer will cause OS_ReadSysInfo 9,2 to return 0.
  * On odd-numbered versions, OS_Byte 0 will now use the ROM build date (as found in the extended footer) to generate the error block that's returned to the user. This seems OK as the PRM describes OS_Byte 0 as returning the "creation date of the operation system". Plus it's a convenient way of getting the ROM build date into the Switcher, since the switcher uses OS_Byte 0. If the extended footer can't be found (or if the string hasn't been initialised yet, e.g. before Service_PostInit) the code falls back to a hard-coded string containing the date from the VersionNum file.
  File changes:
  Makefile - Updated to not create the obsolete Time+Date file (previously used for the ROM build date)
  Version - Use date from VersionNum file for development builds
  hdr/Options - New UseNewFX0Error variable/option to make it easy to check which OS_Byte 0 variant should be enabled
  hdr/KernelWS - Added new string buffers & extended ROM footer pointer to workspace
  s/Middle - Updated OS_ReadSysInfo 9 code, and added utility functions for searching the extended ROM footer for certain tags
  s/NewReset - Added a couple of calls to initialise the new string buffers just prior to Service_PostInit. This is required since OS_Byte/OS_ReadSysInfo shouldn't enable interrupts, but date conversion relies on the Territory module, which may enable interrupts.
  s/PMF/osbyte - Updated OS_Byte 0 code
Admin:
  Tested in OMAP ROM, with and without the extended footer present.


Version 5.35, 4.79.2.98.2.41. Tagged as 'Kernel-5_35-4_79_2_98_2_41'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.41
#define Module_Date_CMHG                31 Jul 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.41"
#define Module_Date                     "31 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jul-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.41)"
#define Module_HelpVersion              "5.35 (31 Jul 2011) 4.79.2.98.2.41"
@


4.79.2.98.2.42
log
@Add new GPIO device type & OMAP3 GPIO device ID
Detail:
  hdr/HALDevice - Added GPIO device type in the Comms group, and an ID for a generic OMAP3 GPIO device
  hdr/GPIODevice - Definition of GPIO device structure. Currently only used to store the type and revision of the main board, so the GPIO manager module can tailor its features appropriately.
  Makefile - Export hdr/GPIODevice
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.42. Tagged as 'Kernel-5_35-4_79_2_98_2_42'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.42
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.42"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.42)"
#define Module_HelpVersion              "5.35 (31 Jul 2011) 4.79.2.98.2.42"
@


4.79.2.98.2.43
log
@Bring Cortex kernel branch in line with HAL branch
Detail:
  Makefile - Now uses ${PERL} for running perl
  s/Kernel - Now uses correct "Bad OS_PlatformFeatures reason code" error number
  s/MemInfo - Updated list of OS_Memory 9 controllers
Admin:
  OMAP3 ROM compiles OK; untested at runtime


Version 5.35, 4.79.2.98.2.43. Tagged as 'Kernel-5_35-4_79_2_98_2_43'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.43
#define Module_Date_CMHG                01 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.43"
#define Module_Date                     "01 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "01-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.43)"
#define Module_HelpVersion              "5.35 (01 Aug 2011) 4.79.2.98.2.43"
@


4.79.2.98.2.44
log
@Add new OS_ReadSysInfo 6 items. Change naming of PublicWS values.
Detail:
  s/Middle - Added some new OS_ReadSysInfo 6 items which are needed by the zero page relocation kernel. Also duplicated some existing entries to avoid conflicts with ROL's allocations.
  hdr/OSRSI6, Makefile - New header listing OS_ReadSysInfo 6 items
  hdr/PublicWS - Duplicated the workspace definitions for &0-&4000, but with a 'Legacy_' prefix to their names. Also added some new entries as needed by the zero page relocation kernel. Once existing modules have been updated to use OS_ReadSysInfo 6 & the Legacy_ definitions, the old defs will be removed.
  hdr/KernelWS - Removed 'Export_' prefix from all the exported workspace values, since the kernel can now use the original names directly
  hdr/Options - Dummy HiProcVecs option so merging things will be a bit cleaner
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.44. Tagged as 'Kernel-5_35-4_79_2_98_2_44'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.44
#define Module_Date_CMHG                04 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.44"
#define Module_Date                     "04 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "04-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.44)"
#define Module_HelpVersion              "5.35 (04 Aug 2011) 4.79.2.98.2.44"
@


4.79.2.98.2.45
log
@Correct new OS_ReadSysInfo 6 item numbers
Detail:
  s/Middle - Correct the actual item numbers to match those defined in the header 9and those used in the HAL branch)
  hdr/OSRSI6 - Corrected ROM version numbere where the new items are available from
Admin:
  Untested!


Version 5.35, 4.79.2.98.2.45. Tagged as 'Kernel-5_35-4_79_2_98_2_45'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.45
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.45"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.45)"
#define Module_HelpVersion              "5.35 (04 Aug 2011) 4.79.2.98.2.45"
@


4.79.2.98.2.46
log
@Misc kernel updates
Detail:
  hdr/ARMops - Reserve OS_PlatformFeatures 0 bit 20 for indicating whether high processor vectors are in use
  s/Kernel - Add local definitions of BYTEWS, LDROSB, STROSB, VDWS macros (previously in Hdr:Macros)
  s/MoreComms - Fix potential buffer overflow when filling error buffer (although GSTrans shouldn't overflow the buffer in the first place?)
Admin:
  Tested on rev A2 BB-xM
  Requires HdrSrc 1.86


Version 5.35, 4.79.2.98.2.46. Tagged as 'Kernel-5_35-4_79_2_98_2_46'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.46
#define Module_Date_CMHG                07 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.46"
#define Module_Date                     "07 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "07-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.46)"
#define Module_HelpVersion              "5.35 (07 Aug 2011) 4.79.2.98.2.46"
@


4.79.2.98.2.47
log
@Add ESC_Status to list of OS_ReadSysInfo 6 items
Detail:
  hdr/OSRSI6, s/Middle - Added ESC_Status to the list of items that OS_ReadSysInfo 6 exports
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.47. Tagged as 'Kernel-5_35-4_79_2_98_2_47'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.47
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.47"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.47)"
#define Module_HelpVersion              "5.35 (07 Aug 2011) 4.79.2.98.2.47"
@


4.79.2.98.2.48
log
@Add zero page relocation support
Detail:
  A whole mass of changes to add high processor vectors + zero page relocation support to the Cortex branch of the kernel
  At the moment the code can only cope with two ZeroPage locations, &0 and &FFFF0000. But with a bit more tweaking those restrictions can probably be lifted, allowing ZeroPage to be hidden at almost any address (assuming it's fixed at compile time). If I've done my job right, these restrictions should all be enforced by asserts.
  There's a new option, HiProcVecs, in hdr/Options to control whether high processor vectors are used. When enabling it and building a ROM, remember:
  * FPEmulator needs to be built with the FPEAnchor=High option specified in the components file (not FPEAnchorType=High as my FPEmulator commit comments suggested)
  * ShareFS needs unplugging/removing since it can't cope with it yet
  * Iyonix users will need to use the latest ROOL boot sequence, to ensure the softloaded modules are compatible (OMAP, etc. don't really softload much so they're OK with older sequences)
  * However VProtect also needs patching to fix a nasty bug there - http://www.riscosopen.org/tracker/tickets/294
  The only other notable thing I can think of is that the ProcessTransfer code in s/ARM600 & s/VMSAv6 is disabled if high processor vectors are in use (it's fairly safe to say that code is obsolete in HAL builds anyway?)
  Fun challenge for my successor: Try setting ZeroPage to &FFFF00FF (or similar) so its value can be loaded with MVN instead of LDR. Then use positive/negative address offsets to access the contents.
  File changes:
  - hdr/ARMops - Modified ARMop macro to take the ZeroPage pointer as a parameter instead of 'zero'
  - hdr/Copro15ops - Corrected $quick handling in myISB macro
  - hdr/Options - Added ideal setting for us to use for HiProcVecs
  - s/AMBControl/allocate, s/AMBControl/growp, s/AMBControl/mapslot, s/AMBControl/memmap, s/AMBControl/service, s/AMBControl/shrinkp, s/Arthur2, s/Arthur3, s/ArthurSWIs, s/ChangeDyn, s/ExtraSWIs, s/HAL, s/HeapMan, s/Kernel, s/MemInfo, s/Middle, s/ModHand, s/MoreSWIs, s/MsgCode, s/NewIRQs, s/NewReset, s/Oscli, s/PMF/buffer, s/PMF/IIC, s/PMF/i2cutils, s/PMF/key, s/PMF/mouse, s/PMF/osbyte, s/PMF/oseven, s/PMF/osinit, s/PMF/osword, s/PMF/oswrch, s/SWINaming, s/Super1, s/SysComms, s/TickEvents, s/Utility, s/vdu/vdu23, s/vdu/vdudriver, s/vdu/vdugrafl, s/vdu/vdugrafv, s/vdu/vdupalxx, s/vdu/vdupointer, s/vdu/vduswis, s/vdu/vduwrch - Lots of updates to deal with zero page relocation
  - s/ARM600 - UseProcessTransfer option. Zero page relocation support. Deleted pre-HAL ClearPhysRAM code to tidy the file up a bit.
  - s/ARMops - Zero page relocation support. Set CPUFlag_HiProcVecs when high vectors are in use.
  - s/KbdResPC - Disable compilation of dead code
  - s/VMSAv6 - UseProcessTransfer option. Zero page relocation support.
Admin:
  Tested with OMAP & Iyonix ROM softloads, both with high & low zero page.
  High zero page hasn't had extensive testing, but boot sequence + ROM apps seem to work.


Version 5.35, 4.79.2.98.2.48. Tagged as 'Kernel-5_35-4_79_2_98_2_48'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.48
#define Module_Date_CMHG                08 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.48"
#define Module_Date                     "08 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "08-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.48)"
#define Module_HelpVersion              "5.35 (08 Aug 2011) 4.79.2.98.2.48"
@


4.79.2.98.2.49
log
@Improve Reset_IRQ_Handler
Detail:
  s/HAL - Reset_IRQ_Handler now uses HAL_IRQSource to determine the cause of the interrupt, using that value to work out which IIC bus (if any) generated the IRQ. If it's unrecognised it passes it to HAL_KbdScanInterrupt, and if that fails to do anything it'll disable the IRQ.
  This aims to fix the spurious "No XStart!" debug spam that the OMAP IIC drivers produce when the keyboard scan is running, and to fix the potential IIC breakage that could occur by the IIC code trying to clear the non-existant interrupt.
  Note that behaviour of HAL_KbdScanInterrupt has now been changed; it now accepts the device number in a1, and is expected to return either -1 (if the interrupt was handled) or the device number given as input (if the interrupt wasn't handled, e.g. not from a device managed by the keyboard scan code).
Admin:
  Tested on rev C2 BB


Version 5.35, 4.79.2.98.2.49. Tagged as 'Kernel-5_35-4_79_2_98_2_49'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.49
#define Module_Date_CMHG                22 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.49"
#define Module_Date                     "22 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "22-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.49)"
#define Module_HelpVersion              "5.35 (22 Aug 2011) 4.79.2.98.2.49"
@


4.79.2.98.2.50
log
@  Kernel updates to support Cortex-A9 CPUs
Detail:
  hdr.ARMops
    added Cortex_A9
  hdr.HALDevice
    added OMAP4 specific device IDs
  hdr.KernelWS
    changed definition of DefIRQ1Vspace for M_CortexA9
  s.ARMops
    added CortexA9 specific code for enabling L2 cache
    added CPUDesc Cortex_A9
  s.NewIRQs
    added CortexA9 specific definition of MaxInterrupts
  s.NewReset
    added M_CortexA9 options
    line 1444: corrected typo
    line 187: commented out unnecessary operation
Admin:
  Submission from Willi Theiß

Version 5.35, 4.79.2.98.2.50. Tagged as 'Kernel-5_35-4_79_2_98_2_50'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.50
#define Module_Date_CMHG                12 Sep 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.50"
#define Module_Date                     "12 Sep 2011"
d16 1
a16 1
#define Module_ApplicationDate          "12-Sep-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.50)"
#define Module_HelpVersion              "5.35 (12 Sep 2011) 4.79.2.98.2.50"
@


4.79.2.98.2.51
log
@ARMv7 fixes
Detail:
  hdr/Copro15ops:
    - Fixed incorrect encodings of ISH/ISHST variants of DMB/DSB instructions
  s/ARMops, s/HAL, hdr/KernelWS:
    - Replace the ARMv7 cache maintenance code with the example code from the ARMv7 ARM. This allows it to deal with caches with non power-of-two set/way counts, and caches with only one way.
    - Fixed Analyse_WB_CR7_Lx to use the cache level ID register to work out how many caches to query instead of just looking for a 0 result from CSSIDR.
    - Also only look for 7 cache levels, since level 8 doesn't exist according to the ARMv7 ARM.
  s/NewReset:
    - Removed some incorrect/misleading debug output
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.51. Tagged as 'Kernel-5_35-4_79_2_98_2_51'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        4.79.2.98.2.51
d13 1
a13 1
#define Module_MinorVersion             "4.79.2.98.2.51"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.51)"
#define Module_HelpVersion              "5.35 (12 Sep 2011) 4.79.2.98.2.51"
@


4.79.2.98.2.52
log
@Fix Cache_InvalidateAll_WB_CR7_Lx to do what it says on the tin
Detail:
  s/ARMops - My previous checkin mistakenly changed Cache_InvalidateAll_WB_CR7_Lx so that it cleans and invalidates the cache instead of just invalidating it. This fixes that.
  Also fixed a warning caused by the trailing space going AWOL from the 'cache type register fields' comment.
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.52. Tagged as 'Kernel-5_35-4_79_2_98_2_52'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.52
#define Module_Date_CMHG                15 Sep 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.52"
#define Module_Date                     "15 Sep 2011"
d16 1
a16 1
#define Module_ApplicationDate          "15-Sep-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.52)"
#define Module_HelpVersion              "5.35 (15 Sep 2011) 4.79.2.98.2.52"
@


4.79.2.98.2.52.2.1
log
@  Support for Raspberry Pi / BCM2835
Detail:
  Falls into two main areas: graphics support and ARM11 core support.
  A work in progress - in many cases the code changes need to be replaced
  with an alternative mechanism which will permit the kernel to still function
  on other platforms. Adrian marked these with "!!!" comments - I have added
  ! directives as well so that they don't get forgotten about.
Admin:
  Changes received from Adrian Lees. This revision represents the code largely
  as delivered, and is placed on its own branch (forked off from the version
  from which he worked). It is intended for reference. It doesn't build against
  current headers - this is likely to require a merge with the other changes
  to the kernel since that time.

Version 5.35, 4.79.2.98.2.52.2.1. Tagged as 'Kernel-5_35-4_79_2_98_2_52_2_1'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.52.2.1
#define Module_Date_CMHG                10 May 2012
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.52.2.1"
#define Module_Date                     "10 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-May-12"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.52.2.1)"
#define Module_HelpVersion              "5.35 (10 May 2012) 4.79.2.98.2.52.2.1"
@


4.79.2.98.2.53
log
@Fix objasm 4 warnings
Detail:
  s/Arthur3, s/ChangeDyn, s/HAL, s/HeapMan, s/Middle, s/MoreSWIs, s/NewIRQs, s/Utility, s/VMSAv6, s/PMF/key, s/PMF/osbyte, s/PMF/osword, s/vdu/vdudecl, s/vdu/vdudriver, s/vdu/vduplot, s/vdu/vduwrch - Tweaked lots of LDM/STM instructions in order to get rid of the depracation/performance warnings
Admin:
  Tested on rev A2 BB-xM


Version 5.35, 4.79.2.98.2.53. Tagged as 'Kernel-5_35-4_79_2_98_2_53'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.53
#define Module_Date_CMHG                24 Sep 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.53"
#define Module_Date                     "24 Sep 2011"
d16 1
a16 1
#define Module_ApplicationDate          "24-Sep-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.53)"
#define Module_HelpVersion              "5.35 (24 Sep 2011) 4.79.2.98.2.53"
@


4.79.2.98.2.54
log
@Added definitions to Hdr:HALDevice required by SDIODriver

Version 5.35, 4.79.2.98.2.54. Tagged as 'Kernel-5_35-4_79_2_98_2_54'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        4.79.2.98.2.54
#define Module_Date_CMHG                13 Nov 2011
d13 2
a14 2
#define Module_MinorVersion             "4.79.2.98.2.54"
#define Module_Date                     "13 Nov 2011"
d16 1
a16 1
#define Module_ApplicationDate          "13-Nov-11"
d21 2
a22 2
#define Module_FullVersion              "5.35 (4.79.2.98.2.54)"
#define Module_HelpVersion              "5.35 (13 Nov 2011) 4.79.2.98.2.54"
@


4.78
log
@Fixed compile time error that occured if E2ROMSupport was false
(NVRamSpeed is not defined in the Kernel workspace so we need an
 alternative way to work the speed of the I2C bus - so I've used
 I2Cticks - defined in PMF.i2cutils)

Version 5.34. Tagged as 'Kernel-5_34'
@
text
@d1 1
a1 1
/* (5.34)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.34
d8 1
a8 1
#define Module_Date_CMHG                07 Sep 2000
d10 2
a11 2
#define Module_MajorVersion             "5.34"
#define Module_Version                  534
d13 1
a13 1
#define Module_Date                     "07 Sep 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "07-Sep-00"
#define Module_ApplicationDate4         "07-Sep-2000"
d18 1
a18 1
#define Module_FullVersion              "5.34"
@


4.77
log
@  Added 32K EEPROM support.
  New routine in i2cutils that allows access to protected sections such as
  MAC address
  OS_ReadSysInfo 4 now checks both copies MACAddress if MACNVRAM2copies is set
Detail:
  32K EEPROM has to be configured with IIC address &A6 (i.e wired up on the pcb)
  ClockNVMemoryFast has been replaced with MaxI2Cspeed so that several different
  rates can be used depending on the devices on the IIC bus.
Admin:
  Need to implement routine that can use one copy of the MAC address to
  replace the other in the event of it being corrupted.


Version 5.33. Tagged as 'Kernel-5_33'
@
text
@d1 1
a1 1
/* (5.33)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.33
d8 1
a8 1
#define Module_Date_CMHG                04 Sep 2000
d10 2
a11 2
#define Module_MajorVersion             "5.33"
#define Module_Version                  533
d13 1
a13 1
#define Module_Date                     "04 Sep 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "04-Sep-00"
#define Module_ApplicationDate4         "04-Sep-2000"
d18 1
a18 1
#define Module_FullVersion              "5.33"
@


4.76
log
@  Added a test program and profiling for messages.
Detail:
  The kernel can now disable all substitutions into error messages that
    it generates and count the number of times each error is looked up.
    The ErrorCount BASIC program then displays that information so that
    you can see if any odd errors are occurring or weird errors that you
    would not be expecting.
  It is not sensible to build a release with countmsgusage enabled.
Admin:
  Tested in Ursula build.

Version 5.32. Not tagged
@
text
@d1 1
a1 1
/* (5.32)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.32
d8 1
a8 1
#define Module_Date_CMHG                18 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "5.32"
#define Module_Version                  532
d13 1
a13 1
#define Module_Date                     "18 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "18-Aug-00"
#define Module_ApplicationDate4         "18-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "5.32"
@


4.75
log
@  Improved the error cacheing.
  Removed DriversInKernel conditional.
Detail:
  If the territory changes or the resource file changes, the kernel
    will now decache all the cached error blocks so that next time
    they are required, they will be looked up again.
  The error cacheing is now a kernel build option and is always set
    to on.
  Removed one of the 5 error messages to be cached - it never seems
    to happen.  The remaining 4 are more frequent.
Admin:
  Tested in Ursula build.
  Cannot be used with HdrSrc 0.94.  HdrSrc 0.95 and later is required
    (or HdrSrc 0.93 and earlier subject to other kernel requirements)
  Requires MessageTrans 0.42 or later for correct operation when a
    replacement messages file is loaded.

Version 5.32. Tagged as 'Kernel-5_32'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                17 Aug 2000
d13 1
a13 1
#define Module_Date                     "17 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "17-Aug-00"
#define Module_ApplicationDate4         "17-Aug-2000"
@


4.74
log
@  Fixed minor bug in module initialisation.
  Added common error cache.
Detail:
  Fixed module header validation code which was broken in 5.22.  This
    shouldn't have caused much of a problem as it was only a bizarre
    check (SWI chunk looked valid but SWI handler was 0) that would
    have failed - but be reported as a valid set of SWI entries.
  Added common error message cache.  Several common errors (Buffer
    overflow; Number not recognised; Bad vector release; and a couple
    of others) are now cached the first time they are translated into
    a block of memory in the system heap.
Admin:
  Tested in Ursula build - cacheing only active in Ursula build - change
    HdrSrc if you want it in your products too.
  Requires HdrSrc 0.94

Version 5.31. Tagged as 'Kernel-5_31'
@
text
@d1 1
a1 1
/* (5.31)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.31
d8 1
a8 1
#define Module_Date_CMHG                15 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "5.31"
#define Module_Version                  531
d13 1
a13 1
#define Module_Date                     "15 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "15-Aug-00"
#define Module_ApplicationDate4         "15-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "5.31"
@


4.73
log
@  Added compile-time support for full-resolution teletext characters in
  teletext emulation mode (MODE 7) for that authentic BBC Micro feel.
  Also introduced a few useful teletext control features via VDU 23,18.
  Unrelatedly, fixed *ScreenLoad to work for interlaced displays.

Detail:
  The new typeface is designed on a 16x20 grid (previously we had used 8x10),
  so it uses a screen resolution of 640x500 pixels (rather than 320x250).
  Since we have been unable to source a genuine teletext font, and since
  examination of a BBC Micro suggests that the genuine font may not have been
  a power-of-2 pixels wide, I have designed one specially, based upon the one
  supplied in Zap distributions (a 12x20 font). Rather than increase the
  amount of workspace that the kernel requires for cacheing graphic
  characters, it now generates them on the fly, as they are required; this
  should only add about 25% to their rendering time.

  The new VDU 23 sequences are as follows:

  VDU 23,18,0,mode,0,0,0,0,0,0
    Switch transparency mode
      mode = 0: "Text" mode: the whole display is set opaque
      mode = 1: "Mix" mode: foreground colours, and both foreground and
        background of boxed text are opaque; non-boxed background colours are
        all transparent
      mode = 2: "Box" mode: boxed regions are opaque, others are transparent
      mode = 3: "TV" mode: the whole display is set transparent
    Default is mode = 0.

  VDU 23,18,1,suspend,0,0,0,0,0,0
    Suspend or resume bitmap updates
    This call allows an application to request that the kernel suspends
    updates to the framebuffer bitmap. This allows for a significant speed
    increase in the rendering time for a large amount of text, for example
    when redrawing a complete teletext page, because each time you plot a
    single character, it can cause the whole of the rest of the line to be
    re-rendered. When you switch out of suspend mode, the whole screen is
    refreshed in a single pass. Note that the appearance of the display is
    undefined is you cause a hardware scroll while in suspend mode.
      suspend = 0: screen update is enabled
      suspend = 1: screen update is suspended
    Default is suspend = 0.

  VDU 23,18,2,reveal,0,0,0,0,0,0
    Reveal/conceal
      reveal = 0: characters between the Conceal control code and the next
        colour control code are replaced by spaces
      reveal = 1: all characters are displayed
    Default is reveal = 0.

  VDU 23,18,3,black_emable,0,0,0,0,0,0
    Enable/disable black foreground colour control codes
      black_enable = 0: control codes &80 and &90 do nothing
      black_enable = 1: control code &80 selects black text, control code
        &90 selects black graphics
    Default is black_enable = 0.

  I have performed some timing tests on the rendering of complete teletext
  pages grabbed from the teletext server. These show that the new code
  generally imposes a 2x speed hit. However, when using the VDU 23,18,1
  suspend function, this improves to a 20% speed increase when compared to
  the old low-resolution code. Better still, because the framebuffer is only
  being updated for the final stage of this process, the screen *appears* to
  be updated some 3x faster than with the old code!

  A comment on the VDU variable Log2BPC is in order: in previous kernels,
  this was able unambiguously to refer to both the framebuffer width of a
  character in bytes, and the framebuffer width of an "addressable pixel" in
  bits; this no longer works with the 16-pixel wide teletext font. Bearing
  in mind that future kernels may support Unicode system fonts where the
  width varies from character to character, I have chosen to fix Log2BPC to
  the "addressable pixel" definition.

Admin:
  Requires HdrSrc 0.89 and (for non-desktop builds) Interlace 0.61. A monitor
  definition file containing a definition for a 640x500 screen mode is also
  required; version 0.40 of ModeFiles contains a suitable mode for STB-400.

  Tested fairly rigourously on an Ursula build, a Lazarus build and an
  STB-400 build, using genuine teletext pages and Yellow River Kingdom.

Version 5.30. Tagged as 'Kernel-5_30'
@
text
@d1 1
a1 1
/* (5.30)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.30
d8 1
a8 1
#define Module_Date_CMHG                28 Jun 2000
d10 2
a11 2
#define Module_MajorVersion             "5.30"
#define Module_Version                  530
d13 1
a13 1
#define Module_Date                     "28 Jun 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "28-Jun-00"
#define Module_ApplicationDate4         "28-Jun-2000"
d18 1
a18 1
#define Module_FullVersion              "5.30"
@


4.72
log
@  Added new Resources dirs for Desktop builds and made the main
  messages more generic.
Detail:
  RiscPC-like (UserIF = Morris4) and Ursula-like (UserIF=Ursula)
  builds of the Kernel have their messages in a subdirectory while
  more generic builds use the main Messages file.

  The main file has had the RISC OS User Guide references removed
  and the "There is not enough memory" message changed to the more
  correct "Memory can not be moved".
Admin:
  Partially tested. Fixed STB-400 fault #1479

Version 5.29. Tagged as 'Kernel-5_29'
@
text
@d1 1
a1 1
/* (5.29)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.29
d8 1
a8 1
#define Module_Date_CMHG                27 Jun 2000
d10 2
a11 2
#define Module_MajorVersion             "5.29"
#define Module_Version                  529
d13 1
a13 1
#define Module_Date                     "27 Jun 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "27-Jun-00"
#define Module_ApplicationDate4         "27-Jun-2000"
d18 1
a18 1
#define Module_FullVersion              "5.29"
@


4.71
log
@  Improvement to the new callback functionality from version 5.27.
Detail:
  In the previous version, Portable_Idle was called each time that the callback
  chain was examined. This is only desirable in cases where we're polling the
  keyboard, waiting before scrolling the text window; in the normal case, it's
  an unnecessary slow-down. Now fixed to only call Portable_Idle if we're
  waiting for a key up/down/timeout.
Admin:
  Not tested.

Version 5.28. Tagged as 'Kernel-5_28'
@
text
@d1 1
a1 1
/* (5.28)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.28
d8 1
a8 1
#define Module_Date_CMHG                12 May 2000
d10 2
a11 2
#define Module_MajorVersion             "5.28"
#define Module_Version                  528
d13 1
a13 1
#define Module_Date                     "12 May 2000"
d15 4
a18 1
#define Module_FullVersion              "5.28"
@


4.70
log
@  Callbacks can now go off when the text window scrolls (newline or line wrap).
  In particular, they can go off when Scroll Lock etc have frozen the text
  output.
Detail:
  The callback chain is examined at least once per line scroll. Additionally,
  it is examined repeatedly while Scroll Lock or Ctrl-Shift are acting, while
  idling between lines if Ctrl is held down, and while waiting for the Shift
  key to be pressed at the bottom of a screen when in page mode.
  The opportunity is also taken to call Portable_Idle after each time that the
  callback chain has been examined.
Admin:
  Not tested.

Version 5.27. Tagged as 'Kernel-5_27'
@
text
@d1 1
a1 1
/* (5.27)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.27
d8 1
a8 1
#define Module_Date_CMHG                10 May 2000
d10 2
a11 2
#define Module_MajorVersion             "5.27"
#define Module_Version                  527
d13 1
a13 1
#define Module_Date                     "10 May 2000"
d15 1
a15 1
#define Module_FullVersion              "5.27"
@


4.69
log
@	Added new debug flag DebugROMPostInit

Detail:
	It is often the case that modules fail on receipt of a PostInit
cervice call. The Kernel already has an option to display debugging on module
initialisation (DebugROMInit), but this does not help if a module crashes
during the PostInit stage.
	To aid debugging of the PostInit stage of module initialisation, a
new flag (DebugROMPostInit) has been added to the vanilla service call
handler. This flag displays the name of each module that the PostInit is
being dispatched to, and then displays whether control has passed back to the
kernel. Hence crashes of a module during PostInit can be detected.

Admin:
	Note that this debug option only works in the vanilla service call
handler. If your build uses the chocolate handler and you wish to debug
PostInit of modules, then set it temporarilly to use vanilla handlers.
	Tested in Lazarus builds both with and without the option switched.

Version 5.26. Not tagged
@
text
@d1 1
a1 1
/* (5.26)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.26
d10 2
a11 2
#define Module_MajorVersion             "5.26"
#define Module_Version                  526
d15 1
a15 1
#define Module_FullVersion              "5.26"
@


4.68
log
@  Fixed "SWI &6D656D not known" system collapse.
  Fixed multiple internationalisation of error message.
Detail:
  Somebody had decided to write a comment that R0-R2 needed to be
    unstacked before exiting the dynamic area remove routine, but
    then forgot to do so.  The crash is the same each time, as the
    address of MessageTrans error buffer it was trying to return
    is the value mistakenly loaded in R15.
  Kernel doesn't try to translate error messages multiple times.
    Not only does this give rise to errors about not being able
    to translate error messages, but causes MessageTrans to have to
    search repeatedly for non-existant tokens, slowing things down
    enormously.
Admin:
  Tested in Ursula build.
  Not a complete fix - FileCore now leaks map & buffer dynamic areas
    whenever the RAM disc size is altered, but that needs to be fixed
    in FileCore (it needs to accept that OS_ChangeDynamicArea is not
    re-entrant and delete the DAs on a callback)

Version 5.26. Tagged as 'Kernel-5_26'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                09 May 2000
d13 1
a13 1
#define Module_Date                     "09 May 2000"
@


4.67
log
@
  * Kernel failed to assemble on Lazarus builds.  Single instruction change
    should cure this.

Detail:

  * Lazarus builds of the Kernel failed with the following error:

      Immediate value out of range at line 458 in file "s.NewReset"
              ADR    R2, IRQ_Test_CTRL_or_R_Pressed

    This is due to the ADR going out of range.  Changed to use ADDR
    macro instead to rectify this.

Admin:

  * Untested at time of check-in; to be verified in next Lazarus development
    build.

Version 5.25. Tagged as 'Kernel-5_25'
@
text
@d1 1
a1 1
/* (5.25)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.25
d8 1
a8 1
#define Module_Date_CMHG                08 May 2000
d10 2
a11 2
#define Module_MajorVersion             "5.25"
#define Module_Version                  525
d13 1
a13 1
#define Module_Date                     "08 May 2000"
d15 1
a15 1
#define Module_FullVersion              "5.25"
@


4.66
log
@OS_CallASWI and OS_CallASWIR12 sped up by 4-6 cycles (depending on which ARM).
Some POST changes which got lost recommitted.

Version 5.24. Not tagged
@
text
@d1 1
a1 1
/* (5.24)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.24
d8 1
a8 1
#define Module_Date_CMHG                20 Apr 2000
d10 2
a11 2
#define Module_MajorVersion             "5.24"
#define Module_Version                  524
d13 1
a13 1
#define Module_Date                     "20 Apr 2000"
d15 1
a15 1
#define Module_FullVersion              "5.24"
@


4.65
log
@Had one of those weekend brainstorms - managed to speed up SWI despatcher
_and_ add Thumb support to it.
Fixed OS_BreakPt - was confused by PC/PSR split.

Version 5.24. Not tagged
@
text
@d8 1
a8 1
#define Module_Date_CMHG                17 Apr 2000
d13 1
a13 1
#define Module_Date                     "17 Apr 2000"
@


4.64
log
@* POST now correctly run-time checks for the emulator (missed on last
  check-in).
* IOMD register listing removed from POST (for Tom).

This version seems to be pretty stable in a 26-bit desktop build. Apart from
silly modules relying on the manner in which SWIs corrupt R14_svc :(

Version 5.24. Tagged as 'Kernel-5_24'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                13 Apr 2000
d13 1
a13 1
#define Module_Date                     "13 Apr 2000"
@


4.63
log
@* Run-time emulator detection added (no need for separate images). Needs an
  RPCEm update.
* Register allocation in default ErrorV handler fixed - problems occured when
  callbacks were triggered on way out.
* OS_Byte 19 didn't manipulate interrupt disable flag correctly in 26-bit
  builds.
* Stray bit of debugging left in sprite code many years ago removed.

Version 5.23. Not tagged
@
text
@d1 1
a1 1
/* (5.23)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.23
d10 2
a11 2
#define Module_MajorVersion             "5.23"
#define Module_Version                  523
d15 1
a15 1
#define Module_FullVersion              "5.23"
@


4.62
log
@  32-bit Kernel.

Details:
  The Kernel will now compile to produce a pure 32-bit system if No26bitCode is
  set to TRUE.
  If No26bitCode is FALSE, then the Kernel will be a standard 26-bit Kernel,
  although some internal changes have taken place to minimise compile
  switches between the two cases. See Docs.32bit for more technical info.

  The hardest part was the flood-fill...

Other changes:
  Pointer shape changes now take place on the next VSync, rather than actually
  WAITING for the VSync. Turning the Hourglass on shouldn't slow your machine
  down by 5% now :)

  Lots of really crusty pre-IOMD code removed.

Admin:
  Tested in 32 and 26-bit forms in a limited desktop build. Basically, this
  will need to see a lot of use to iron out difficulties. I'd like anyone who
  has a non-frozen project to at least attempt using this Kernel.

Version 5.23. Tagged as 'Kernel-5_23'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                04 Apr 2000
d13 1
a13 1
#define Module_Date                     "04 Apr 2000"
@


4.61
log
@  Monotonic time was returned with a 1 cs error in certain circumstances.
Detail:
  Most of the centisecond timers were incremented very early in the Timer0
  interrupt routine, but MetroGnome was incremented after we had called
  TickerV. Routines on TickerV are allowed to enable interrupts, so any
  interrupt routines that use OS_ReadMonotonicTime and IRQRQA are unable to
  accurately determine if the monotonic time is one tick out-of-date or not.
  MetroGnome is now incremented with the other timers.
Admin:
  Tested with the timer code in STB-400 MPEGDriver.

Version 5.22. Tagged as 'Kernel-5_22'
@
text
@d1 1
a1 1
/* (5.22)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.22
d8 1
a8 1
#define Module_Date_CMHG                23 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "5.22"
#define Module_Version                  522
d13 1
a13 1
#define Module_Date                     "23 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "5.22"
@


4.60
log
@PaletteV bulk read of pointer colours now works correctly in 1bpp modes.

Version 5.21. Tagged as 'Kernel-5_21'
@
text
@d1 1
a1 1
/* (5.21)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.21
d8 1
a8 1
#define Module_Date_CMHG                10 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "5.21"
#define Module_Version                  521
d13 1
a13 1
#define Module_Date                     "10 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "5.21"
@


4.59
log
@  Fixed output of *ROMModules so everything lines up properly.
Detail:
  The code for *ROMModules uses OS_PrettyPrint, which seems unconcerned
    by such trivial things as leading spaces, which accounts for the
    misaligned output.  The code now starts by using ASCII 31 (hard
    space for OS_PrettyPrint's purposes) as the leading indent character
    to avoid confusion.
Admin:
  Tested on desktop build in both command-line and TaskWindows.

Version 5.20. Tagged as 'Kernel-5_20'
@
text
@d1 1
a1 1
/* (5.20)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.20
d8 1
a8 1
#define Module_Date_CMHG                08 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "5.20"
#define Module_Version                  520
d13 1
a13 1
#define Module_Date                     "08 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "5.20"
@


4.58
log
@  Change to Version file
Detail:
  When Machine=Phoebe the Kernel failed to build due to use of OSVersionID.
  Commented out this line.  Other machine settings unaffected.
Admin:
  Tested on Ursula build: Products/Ursula/modules (tag Ursula010a).

Version 5.19. Tagged as 'Kernel-5_19'
@
text
@d1 1
a1 1
/* (5.19)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.19
d10 2
a11 2
#define Module_MajorVersion             "5.19"
#define Module_Version                  519
d15 1
a15 1
#define Module_FullVersion              "5.19"
@


4.57
log
@  Update from Pineapple
Detail:
  Three new OS SWIs for RISC OS Ltd.
Admin:
  E-mail received 27 Feb 2000
  No conflicts with Pace definitions.

Version 5.18. Tagged as 'Kernel-5_18'
@
text
@d1 1
a1 1
/* (5.18)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.18
d8 1
a8 1
#define Module_Date_CMHG                27 Feb 2000
d10 2
a11 2
#define Module_MajorVersion             "5.18"
#define Module_Version                  518
d13 1
a13 1
#define Module_Date                     "27 Feb 2000"
d15 1
a15 1
#define Module_FullVersion              "5.18"
@


4.56
log
@  Removed redundant MACFROMNVRAM introduced in Kernel 5.09.

Detail:
  MACFROMNVRAM was intended to force the Kernel to fetch the MAC
  address from NVRAM for Customer F 5. In practice it is not needed
  as its main purpose was to avoid getting the MAC address from
  the RawMachineID but this will not happen in Customer F 5 as
  RawMachineID will not be set.

Admin:
  Not tested.
  MACFROMNVRAM will be removed from HdrSrc.

Version 5.17. Tagged as 'Kernel-5_17'
@
text
@d1 1
a1 1
/* (5.17)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.17
d8 1
a8 1
#define Module_Date_CMHG                22 Feb 2000
d10 2
a11 2
#define Module_MajorVersion             "5.17"
#define Module_Version                  517
d13 1
a13 1
#define Module_Date                     "22 Feb 2000"
d15 1
a15 1
#define Module_FullVersion              "5.17"
@


4.55
log
@Stewart's last merge managed to set the Kernel version to 4.52 for all
STB and NC builds. Remerged correctly.

Version 5.16. Tagged as 'Kernel-5_16'
@
text
@d1 1
a1 1
/* (5.16)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.16
d8 1
a8 1
#define Module_Date_CMHG                17 Feb 2000
d10 2
a11 2
#define Module_MajorVersion             "5.16"
#define Module_Version                  516
d13 1
a13 1
#define Module_Date                     "17 Feb 2000"
d15 1
a15 1
#define Module_FullVersion              "5.16"
@


4.54
log
@  Added OS_ReadSysInfo 6, 7 and 8 from Ursula branch.
  Ensured that M_Phoebe builds set UtilityModule version to 4.00
Detail:
  The softload utility relies on the existence of the extra reason codes
    to OS_ReadSysInfo introduced in Ursula.  The main kernel now supports
    these too (they are simply interfaces to read kernel capabilities and
    configuration - eg. addresses and sizes of UND and SVC mode stacks)
  Avoid OS_ReadSysInfo 9 - ROL have used it for reading the ROM personality
    information (and it's not in our kernel)
  Added some of the new macros into Copro15ops required by the ABT dump
    area code (returned by OS_ReadSysInfo 7) and added the code into ARM600
    to store abort information there.
Admin:
  Required by softload utility for Ursula builds.
  Tested on Risc PC.

Version 5.15. Tagged as 'Kernel-5_15'
@
text
@d1 1
a1 1
/* (5.15)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.15
d8 1
a8 1
#define Module_Date_CMHG                02 Feb 2000
d10 2
a11 2
#define Module_MajorVersion             "5.15"
#define Module_Version                  515
d13 1
a13 1
#define Module_Date                     "02 Feb 2000"
d15 1
a15 1
#define Module_FullVersion              "5.15"
@


4.53
log
@  Conditional assembly fixed.
Detail:
  If E2ROMSupport is {FALSE} then the kernel fails to build due to the
    use a symbols that are only defined if E2ROMSupport is {TRUE}.  This
    is now fixed by stopping the symbols being used where they should not
    be (NVRAM and RTC related symbols).
Admin:
  Built.

Version 5.14. Tagged as 'Kernel-5_14'
@
text
@d1 1
a1 1
/* (5.14)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.14
d8 1
a8 1
#define Module_Date_CMHG                27 Jan 2000
d10 2
a11 2
#define Module_MajorVersion             "5.14"
#define Module_Version                  514
d13 1
a13 1
#define Module_Date                     "27 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "5.14"
@


4.52
log
@Corrected typo in POST modifications.

Version 5.13. Tagged as 'Kernel-5_13'
@
text
@d1 1
a1 1
/* (5.13)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.13
d8 1
a8 1
#define Module_Date_CMHG                26 Jan 2000
d10 2
a11 2
#define Module_MajorVersion             "5.13"
#define Module_Version                  513
d13 1
a13 1
#define Module_Date                     "26 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "5.13"
@


4.52.2.1
log
@
  * Kernel change for Lazarus/Bethany projects.

Detail:

  * Power-on keyboard options now restricted to "Delete", "Backspace"
    and "-->" (right arrow).  This disables the other standard power-on
    options such as "CTRL", "SHIFT", "COPY", "R" and "T" and means that
    the boot sequence can't be disabled by holding down "SHIFT" whilst
    booting, for example.

Admin:

  * Untested.  Changes applied to Bethany branch only.

Version 5.13, 4.52.2.1. Tagged as 'Kernel-5_13-4_52_2_1'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.52.2.1
#define Module_Date_CMHG                04 Dec 2000
d12 2
a13 2
#define Module_MinorVersion             "4.52.2.1"
#define Module_Date                     "04 Dec 2000"
d15 1
a15 8
#define Module_ApplicationDate2         "04-Dec-00"
#define Module_ApplicationDate4         "04-Dec-2000"

#define Module_ComponentName            "Kernel"
#define Module_ComponentPath            "RiscOS/Sources/Kernel"

#define Module_FullVersion              "5.13 (4.52.2.1)"
#define Module_HelpVersion              "5.13 (04 Dec 2000) (4.52.2.1)"
@


4.51
log
@POST now uses option from Hdr:Machine.<Machine> to determine whether or not
to flash the front panel LEDs (Lazarus doesn't want this function).

Version 5.12. Tagged as 'Kernel-5_12'
@
text
@d1 1
a1 1
/* (5.12)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.12
d10 2
a11 2
#define Module_MajorVersion             "5.12"
#define Module_Version                  512
d15 1
a15 1
#define Module_FullVersion              "5.12"
@


4.50
log
@Changed default PaletteV handler so that read palette reason code returns all
four supremacy bits in the palette entries (previously it cleared all except
bit 7). This brings it into line with the bulk read reason code.

Version 5.11. Tagged as 'Kernel-5_11'
@
text
@d1 1
a1 1
/* (5.11)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.11
d10 2
a11 2
#define Module_MajorVersion             "5.11"
#define Module_Version                  511
d15 1
a15 1
#define Module_FullVersion              "5.11"
@


4.49
log
@Kernel now always assumes that 4K and 8K ATMEL EEPROM devices have their top
quarter write protected, even if IOMD_C_EEPROMProtect isn't set.

Version 5.10. Tagged as 'Kernel-5_10'
@
text
@d1 1
a1 1
/* (5.10)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.10
d10 2
a11 2
#define Module_MajorVersion             "5.10"
#define Module_Version                  510
d15 1
a15 1
#define Module_FullVersion              "5.10"
@


4.48
log
@  Kernel reads Ethernet MAC address from NVRAM (and nowhere else) if
  MACFROMNVRAM is set. This is set in HdrSrc for Customer F machines.

Detail:
  If MACFROMNVRAM is TRUE then OS_ReadSysInfo 4 will read the Ethernet MAC
  Address from bytes 0-13 of the NVRAM area, instead of trying to read it
  from anywhere else. (14 bytes are ysed to store 2 copies and 2
  checksums).

  This is intended for use with a 24LC128 device (which has no OTP area
  and no clock).

  Note that these are physical addresses within the device. Logical
  addresses &F0-&FF map to physical addresses &00-&0F.

  A SetMac utility is provided in Customer F 5 !Boot.Utils to enable the MAC
  address to be programmed for prototypes and development machines.

  Since it is dangerous to rely on the NVRAM to hold our MAC address when
  it is not protected in any way, we store two copies of it, each with
  their own checksum. At present only the first copy is used, but the
  plan is to check both copies and both checksums.

Admin:
  This version of the Kernel needs Programmer/HdrSrc v0.68 or later.

  If MACFROMNVRAM is enabled, ensure that the MACADDRESS tag in the
  NVRAM file is set to point at &F0 and that MACADDRESSCHECKSUM
  is set to point at &F6. Both should have options L and P to ensure
  they are protected from NVRAM resets and other writes.

Version 5.09. Tagged as 'Kernel-5_09'
@
text
@d1 1
a1 1
/* (5.09)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.09
d8 1
a8 1
#define Module_Date_CMHG                20 Jan 2000
d10 2
a11 2
#define Module_MajorVersion             "5.09"
#define Module_Version                  509
d13 1
a13 1
#define Module_Date                     "20 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "5.09"
@


4.47
log
@*Set Sys$Year would scramble the time. It would also fail to internationalise
the error generated by *Set Year 20000.
Tested on a 32-bit system - changes grafted back on to 26-bit Kernel.

Version 5.08. Tagged as 'Kernel-5_08'
@
text
@d1 1
a1 1
/* (5.08)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.08
d8 1
a8 1
#define Module_Date_CMHG                01 Dec 1999
d10 2
a11 2
#define Module_MajorVersion             "5.08"
#define Module_Version                  508
d13 1
a13 1
#define Module_Date                     "01 Dec 1999"
d15 1
a15 1
#define Module_FullVersion              "5.08"
@


4.46
log
@OS_ReadSysInfo 2 now reports whether the IIC bus is fast (in bit 24 of R2),
and whether I/O clocks should be stopped when idling the processor (bit 25).
OS_Byte 19 is a bit more careful in its use of Portable_Idle - an edge case
where the vsync interrupt was already pending now returns immediately.

Version 5.07. Tagged as 'Kernel-5_07'
@
text
@d1 1
a1 1
/* (5.07)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	5.07
#define Module_MinorVersion_CMHG	
#define Module_Date_CMHG      		02 Nov 1999
d10 4
a13 4
#define Module_MajorVersion     	"5.07"
#define Module_Version                  507
#define Module_MinorVersion		""
#define Module_Date      		"02 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "5.07"
@


4.45
log
@OS_ReadSysInfo 3 was incorrectly reporting a 37C665 as a 37C669.

Version 5.06. Tagged as 'Kernel-5_06'
@
text
@d1 1
a1 1
/* (5.06)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.06
d8 1
a8 1
#define Module_Date_CMHG      		01 Nov 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.06"
#define Module_Version                  506
d13 1
a13 1
#define Module_Date      		"01 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "5.06"
@


4.44
log
@Ensured that interrupts in C and D registers masked on reset.
Power down A to D convertors on reset.

Version 5.05. Tagged as 'Kernel-5_05'
@
text
@d1 1
a1 1
/* (5.05)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.05
d8 1
a8 1
#define Module_Date_CMHG      		29 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.05"
#define Module_Version                  505
d13 1
a13 1
#define Module_Date      		"29 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "5.05"
@


4.43
log
@Fixed typo that stopped original interrupt allocation builds from working.

Version 5.04. Tagged as 'Kernel-5_04'
@
text
@d1 1
a1 1
/* (5.04)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.04
d8 1
a8 1
#define Module_Date_CMHG      		26 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.04"
#define Module_Version                  504
d13 1
a13 1
#define Module_Date      		"26 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "5.04"
@


4.42
log
@And IRQs tweaked one more time.

Version 5.03. Tagged as 'Kernel-5_03'
@
text
@d1 1
a1 1
/* (5.03)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.03
d8 1
a8 1
#define Module_Date_CMHG      		25 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.03"
#define Module_Version                  503
d13 1
a13 1
#define Module_Date      		"25 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "5.03"
@


4.41
log
@IRQs rejigged for HdrSrc 0.52.

Version 5.02. Tagged as 'Kernel-5_02'
@
text
@d1 1
a1 1
/* (5.02)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.02
d10 2
a11 2
#define Module_MajorVersion     	"5.02"
#define Module_Version                  502
d15 1
a15 1
#define Module_FullVersion              "5.02"
@


4.40
log
@First attempt at a Kernel that handles ReassignedIOMDInterrupts.
If reassigned, ReadSysInfo3 returns &00x22200 in R0, to indicate that the
serial and parallel ports aren't compatible, and IDE and floppy are
unavailable.

Version 5.01. Tagged as 'Kernel-5_01'
@
text
@d1 1
a1 1
/* (5.01)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.01
d10 2
a11 2
#define Module_MajorVersion     	"5.01"
#define Module_Version                  501
d15 1
a15 1
#define Module_FullVersion              "5.01"
@


4.39
log
@RCMM changes made the Kernel not report the type of I/O chip fitted correctly.
This has been fixed. In addition, SMC669 and UMC669 chips are reported as
a different chip configuration by OS_ReadSysInfo 3 (values 4 and 5
respectively).
A few assertions added to catch the remaining cases where the RCMM stuff
won't work - those cases will involve a bit more reordering of hardware
initialisation.

Version 5.00. Tagged as 'Kernel-5_00'
@
text
@d1 1
a1 1
/* (5.00)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.00
d8 1
a8 1
#define Module_Date_CMHG      		19 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.00"
#define Module_Version                  500
d13 1
a13 1
#define Module_Date      		"19 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "5.00"
@


4.38
log
@Was using flags=2 to get PortManager to turn off outputs instead of flags=1.

Version 4.99. Tagged as 'Kernel-4_99'
@
text
@d1 1
a1 1
/* (4.99)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.99
d10 2
a11 2
#define Module_MajorVersion     	"4.99"
#define Module_Version                  499
d15 1
a15 1
#define Module_FullVersion              "4.99"
@


4.37
log
@Added RCMM keyboard support for Delete-power on, Ctrl-reset etc etc.
Right arrow on a remote also acts as Delete.

Version 4.98. Tagged as 'Kernel-4_98'
@
text
@d1 1
a1 1
/* (4.98)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.98
d8 1
a8 1
#define Module_Date_CMHG      		18 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.98"
#define Module_Version                  498
d13 1
a13 1
#define Module_Date      		"18 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "4.98"
@


4.36
log
@Call to Portable_Idle in OS_Byte 19 was corrupting R14.

Version 4.97. Tagged as 'Kernel-4_97'
@
text
@d1 1
a1 1
/* (4.97)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.97
d8 1
a8 1
#define Module_Date_CMHG      		14 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.97"
#define Module_Version                  497
d13 1
a13 1
#define Module_Date      		"14 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "4.97"
@


4.35
log
@Fixed error in RDCH speed restoring logic.
When screen is blanked, DACs are turned off (60mA saving).
If DPMS state 3 comes on, sync lines are set low.

Version 4.96. Tagged as 'Kernel-4_96'
@
text
@d1 1
a1 1
/* (4.96)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.96
d10 2
a11 2
#define Module_MajorVersion     	"4.96"
#define Module_Version                  496
d15 1
a15 1
#define Module_FullVersion              "4.96"
@


4.34
log
@Second attempt to fix PortableFlags corruption.

Version 4.95. Tagged as 'Kernel-4_95'
@
text
@d1 1
a1 1
/* (4.95)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.95
d8 1
a8 1
#define Module_Date_CMHG      		13 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.95"
#define Module_Version                  495
d13 1
a13 1
#define Module_Date      		"13 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "4.95"
@


4.33
log
@Kernel was accidentally storing PortableFlags in the wrong place.
Now calls XPortable_Idle, not Portable_Idle in key-wait code.
Calls Portable_Idle in OS_Byte 19.

Version 4.94. Tagged as 'Kernel-4_94'
@
text
@d1 1
a1 1
/* (4.94)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.94
d10 2
a11 2
#define Module_MajorVersion     	"4.94"
#define Module_Version                  494
d15 1
a15 1
#define Module_FullVersion              "4.94"
@


4.32
log
@Actually call the PortManager service call handling routine.

Version 4.93. Tagged as 'Kernel-4_93'
@
text
@d1 1
a1 1
/* (4.93)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.93
d8 1
a8 1
#define Module_Date_CMHG      		07 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.93"
#define Module_Version                  493
d13 1
a13 1
#define Module_Date      		"07 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "4.93"
@


4.31
log
@Kernel now uses PortManager to set TV_Mode GPIO line, and updates it on
every mode change, rather than doing it once based on the monitor lead ID.
Requires PortManager, and required if PortManager is present.

Version 4.92. Tagged as 'Kernel-4_92'
@
text
@d1 1
a1 1
/* (4.92)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.92
d10 2
a11 2
#define Module_MajorVersion     	"4.92"
#define Module_Version                  492
d15 1
a15 1
#define Module_FullVersion              "4.92"
@


4.30
log
@  Resolved differences between Pineapple's version of this file and
    our version.
Detail:
  Only the comments have changed - no actual new definitions or changed
    definitions.
Admin:
  No actual code change, so no new tag.
  File e-mailed to Pineapple.

Version 4.91. Not tagged
@
text
@d1 1
a1 1
/* (4.91)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.91
d8 1
a8 1
#define Module_Date_CMHG      		06 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.91"
#define Module_Version                  491
d13 1
a13 1
#define Module_Date      		"06 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "4.91"
@


4.29
log
@Added ComboClock14MHz switch - only supported by SMC669.

Version 4.91. Tagged as 'Kernel-4_91'
@
text
@d8 1
a8 1
#define Module_Date_CMHG      		01 Oct 1999
d13 1
a13 1
#define Module_Date      		"01 Oct 1999"
@


4.28
log
@* Meaning of FEIOSpeedHalf was accidentally inverted.
* Wasn't allowing writes to most of EEPROM.
* Old prototype OS_SetTime SWI code removed.
* MPEGPoduleNTSCNotPALMask option support removed to simplify things a bit.
* Now can cope with a system with a PAL/NTSC link, but no monitor detect line.
* Default PAL & NTSC modes now always 12 & 46 respectively.
* Kernel now knows about monitor type 8 (NTSC) - modes 44-46 (640x200) are
  available.
* STB/NC CMOS test removed from POST pending further investigation.

Version 4.90. Tagged as 'Kernel-4_90'
@
text
@d1 1
a1 1
/* (4.90)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.90
d8 1
a8 1
#define Module_Date_CMHG      		29 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.90"
#define Module_Version                  490
d13 1
a13 1
#define Module_Date      		"29 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "4.90"
@


4.27
log
@Added support for ATMEL 4K and 8K EEPROM parts, including write protection
of top quarter. Untested.
Added support for ARM7500FE IO clock divide by 2.

Version 4.89. Tagged as 'Kernel-4_89'
@
text
@d1 1
a1 1
/* (4.89)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.89
d8 1
a8 1
#define Module_Date_CMHG      		23 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.89"
#define Module_Version                  489
d13 1
a13 1
#define Module_Date      		"23 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "4.89"
@


4.26
log
@Kernel now sets "interlaced" mode flag itself from mode control parameters;
this simplifies the Interlace module's job significantly.
Hard font synchronised with International module.

Version 4.88. Tagged as 'Kernel-4_88'
@
text
@d1 1
a1 1
/* (4.88)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.88
d8 1
a8 1
#define Module_Date_CMHG      		20 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.88"
#define Module_Version                  488
d13 1
a13 1
#define Module_Date      		"20 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "4.88"
@


4.25
log
@Was erroneously programming a pseudo-register into VIDC.

Version 4.87. Tagged as 'Kernel-4_87'
@
text
@d1 1
a1 1
/* (4.87)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.87
d8 1
a8 1
#define Module_Date_CMHG      		17 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.87"
#define Module_Version                  487
d13 1
a13 1
#define Module_Date      		"17 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "4.87"
@


4.24
log
@Default RCLK mode now RCLK/2 rather than RCLK/1.
Doesn't force CMOS setting of sync and monitortype on NCs/STBs.
Accepts HClockSelect parameter (number 9) in VIDC lists. Uses this to
determine whether to use HCLK or not, rather than abusing
Service_MonitorLeadTranslation.
If DontUseVCO flag is set, then VCLK will not be used - only RCLK (or HCLK if
requested).

Version 4.86. Tagged as 'Kernel-4_86'
@
text
@d1 1
a1 1
/* (4.86)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.86
d8 1
a8 1
#define Module_Date_CMHG      		16 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.86"
#define Module_Version                  486
d13 1
a13 1
#define Module_Date      		"16 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "4.86"
@


4.23
log
@Added OS_Word 15,5 to set the real-time clock from a 5 byte UTC time.

Version 4.85. Tagged as 'Kernel-4_85'
@
text
@d1 1
a1 1
/* (4.85)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.85
d8 1
a8 1
#define Module_Date_CMHG      		24 Aug 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.85"
#define Module_Version                  485
d13 1
a13 1
#define Module_Date      		"24 Aug 1999"
d15 1
a15 1
#define Module_FullVersion              "4.85"
@


4.22
log
@ChocolateSysVars and ChocolateOscli merged from Ursula.

Version 4.84. Tagged as 'Kernel-4_84'
@
text
@d1 1
a1 1
/* (4.84)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.84
d8 1
a8 1
#define Module_Date_CMHG      		19 Aug 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.84"
#define Module_Version                  484
d13 1
a13 1
#define Module_Date      		"19 Aug 1999"
d15 1
a15 1
#define Module_FullVersion              "4.84"
@


4.21
log
@Ursula ChocolateSysHeap and 128-entry SWI hash table incorporated.

Version 4.83. Tagged as 'Kernel-4_83'
@
text
@d1 1
a1 1
/* (4.83)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.83
d8 1
a8 1
#define Module_Date_CMHG      		17 Aug 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.83"
#define Module_Version                  483
d13 1
a13 1
#define Module_Date      		"17 Aug 1999"
d15 1
a15 1
#define Module_FullVersion              "4.83"
@


4.20
log
@  Exports a C version of Hdr:RISCOS
Detail:
  Hdr:RISCOS contains some of the most useful constant declarations,
    including the vector numbers and event numbers.  The new improved
    Hdr2H script is now capable of converting this header file into C
    too.  It exports it as <CExport$Dir>.Global.h.RISCOS.  It cannot
    interfere in existing code as it requires explicit inclusion as
    #include "Global/RISCOS.h".
  No actual kernel code changes.
Admin:
  File examined manually and checked for correctness against Hdr:RISCOS.
  Requires library 0.28 or later (RiscOS/Library  Tag: Library-0_28)

Version 4.82. Tagged as 'Kernel-4_82'
@
text
@d1 1
a1 1
/* (4.82)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.82
d8 1
a8 1
#define Module_Date_CMHG      		10 Aug 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.82"
#define Module_Version                  482
d13 1
a13 1
#define Module_Date      		"10 Aug 1999"
d15 1
a15 1
#define Module_FullVersion              "4.82"
@


4.19
log
@* Added support for 24LC64 8K EEPROM (untested).
* Integrated Ursula fast service call dispatch code.
* Added Interruptible32bitModes from Ursula.
* Stopped allowing ROM modules (other than the Kernel/UtilityModule) to write
  to the hardware vectors in 26-bit mode.

Version 4.81. Tagged as 'Kernel-4_81'
@
text
@d1 1
a1 1
/* (4.81)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.81
d8 1
a8 1
#define Module_Date_CMHG      		03 Aug 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.81"
#define Module_Version                  481
d13 1
a13 1
#define Module_Date      		"03 Aug 1999"
d15 1
a15 1
#define Module_FullVersion              "4.81"
@


4.18
log
@Added Event_Expansion_SCTransport/Interface to hdr/RISCOS.

Version 4.80. Not tagged
@
text
@d1 1
a1 1
/* (4.80)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.80
d8 1
a8 1
#define Module_Date_CMHG      		04 Jun 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.80"
#define Module_Version                  480
d13 1
a13 1
#define Module_Date      		"04 Jun 1999"
d15 1
a15 1
#define Module_FullVersion              "4.80"
@


4.17
log
@Fixed typo in OS_Module 21 code. You wouldn't think you could screw up a
mere 12 lines of ARM code would you?

Version 4.80. Tagged as 'Kernel-4_80'
@
text
@d8 1
a8 1
#define Module_Date_CMHG      		12 May 1999
d13 1
a13 1
#define Module_Date      		"12 May 1999"
@


4.16
log
@Added OS_Module 21 (find end of ROM module chain).

Version 4.79. Tagged as 'Kernel-4_79'
@
text
@d1 1
a1 1
/* (4.79)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.79
d8 1
a8 1
#define Module_Date_CMHG      		07 May 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.79"
#define Module_Version                  479
d13 1
a13 1
#define Module_Date      		"07 May 1999"
d15 1
a15 1
#define Module_FullVersion              "4.79"
@


4.15
log
@More adjustments to >8MB POST situation.
Added a missing ALIGN before ts_ROM_dvectors.

Version 4.78. Tagged as 'Kernel-4_78'
@
text
@d1 1
a1 1
/* (4.78)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.78
d8 1
a8 1
#define Module_Date_CMHG      		06 May 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.78"
#define Module_Version                  478
d13 1
a13 1
#define Module_Date      		"06 May 1999"
d15 1
a15 1
#define Module_FullVersion              "4.78"
@


4.14
log
@First attempt to get POST working with >8M ROMs.

Version 4.77. Tagged as 'Kernel-4_77'
@
text
@d1 1
a1 1
/* (4.77)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.77
d8 1
a8 1
#define Module_Date_CMHG      		04 May 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.77"
#define Module_Version                  477
d13 1
a13 1
#define Module_Date      		"04 May 1999"
d15 1
a15 1
#define Module_FullVersion              "4.77"
@


4.13
log
@Up to 16M of ROM now mapped in from 03800000-04800000.
Video memory now limited to 8M (instead of 16M) to make room.
OS_Memory 7 now reports ROM correctly when the image is >4M.

Version 4.76. Tagged as 'Kernel-4_76'
@
text
@d1 1
a1 1
/* (4.76)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.76
d8 1
a8 1
#define Module_Date_CMHG      		30 Apr 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.76"
#define Module_Version                  476
d13 1
a13 1
#define Module_Date      		"30 Apr 1999"
d15 1
a15 1
#define Module_FullVersion              "4.76"
@


4.12
log
@Flash upgrade works this time.

Version 4.75. Tagged as 'Kernel-4_75'
@
text
@d1 1
a1 1
/* (4.75)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.75
d8 1
a8 1
#define Module_Date_CMHG      		14 Apr 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.75"
#define Module_Version                  475
d13 1
a13 1
#define Module_Date      		"14 Apr 1999"
d15 1
a15 1
#define Module_FullVersion              "4.75"
@


4.11
log
@A few fixes to the flash upgrade code.

Version 4.74. Tagged as 'Kernel-4_74'
@
text
@d1 1
a1 1
/* (4.74)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.74
d10 2
a11 2
#define Module_MajorVersion     	"4.74"
#define Module_Version                  474
d15 1
a15 1
#define Module_FullVersion              "4.74"
@


4.10
log
@Removed generated file s.TMOSHelp - modified Makefile to clean it correctly.
Modified HelpStrs (from which s.TMOSHelp is generated) to include help for
ChangeDynamicArea.

Version 4.73. Tagged as 'Kernel-4_73'
@
text
@d1 1
a1 1
/* (4.73)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.73
d10 2
a11 2
#define Module_MajorVersion     	"4.73"
#define Module_Version                  473
d15 1
a15 1
#define Module_FullVersion              "4.73"
@


4.9
log
@Parallel port flash upgrade facility added.

Version 4.72. Tagged as 'Kernel-4_72'
@
text
@d1 1
a1 1
/* (4.72)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.72
d8 1
a8 1
#define Module_Date_CMHG      		08 Apr 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.72"
#define Module_Version                  472
d13 1
a13 1
#define Module_Date      		"08 Apr 1999"
d15 1
a15 1
#define Module_FullVersion              "4.72"
@


4.8
log
@Disabled references to old NC1 CMOS locations using the flag
ObsoleteNC1CMOS (like the CMOS header file).

Version 4.71. Tagged as 'Kernel-4_71'
@
text
@d1 1
a1 1
/* (4.71)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.71
d8 1
a8 1
#define Module_Date_CMHG      		25 Feb 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.71"
#define Module_Version                  471
d13 1
a13 1
#define Module_Date      		"25 Feb 1999"
d15 1
@


4.7
log
@Num lock on by default on STB/NC products.

Version 4.70. Tagged as 'Kernel-4_70'
@
text
@d1 1
a1 1
/* (4.70)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.70
d8 1
a8 1
#define Module_Date_CMHG      		15 Feb 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.70"
#define Module_Version                  470
d13 1
a13 1
#define Module_Date      		"15 Feb 1999"
@


4.6
log
@ROM speed not taken from the Machine header file.  POST can now exist
in a softloaded OS, since it searches for a zero word in the ROM
instead of using one within the POST when trying to communicate with
the POST adapter (the zero word must be in ROM).  Fixed to build on
non-chrontel STB/NC products.  Lots of duplicate code merged in
MemSize.  MemSize copes better with the softload case, and is less
willing to use the region the OS occupies as video memory, or
page tables.  POST is now ON (memory tests disabled).
OS_ReadSysInfo 4 now uses the NVRAM module to access the ethernet
address in NVRAM/CMOS, so that the availability/location of the
MAC address can be changed.  CMOS location 0 is now unprotected on
STB/NC products to try to stop people poking the hardware directly.
Fixed a CMOS resetting problem on STBs where the value expected in a
location was different from the value written on a CMOS reset, so the
CMOS would be reset every time...

Version 4.69. Tagged as 'Kernel-4_69'
@
text
@d1 1
a1 1
/* (4.69)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.69
d8 1
a8 1
#define Module_Date_CMHG      		09 Feb 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.69"
#define Module_Version                  469
d13 1
a13 1
#define Module_Date      		"09 Feb 1999"
@


4.5
log
@Actually issue upcalls when OS_Byte 202 is called.

Version 4.68. Tagged as 'Kernel-4_68'
@
text
@d1 1
a1 1
/* (4.68)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.68
d8 1
a8 1
#define Module_Date_CMHG      		16 Dec 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.68"
#define Module_Version                  468
d13 1
a13 1
#define Module_Date      		"16 Dec 1998"
@


4.4
log
@OS_Byte 129 0 255 now reports &A7 for STB build (because it _is_ a
RISC OS 3.7 generation kernel).
CMOS no longer gets scrambled when reset in STB build.
UpCall_KeyboardStatus now issued when OS_Byte 202 called or when keyboard
status byte is changed by other means (such as pressing Caps Lock).

Version 4.67. Tagged as 'Kernel-4_67'
@
text
@d1 1
a1 1
/* (4.67)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.67
d8 1
a8 1
#define Module_Date_CMHG      		30 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.67"
#define Module_Version                  467
d13 1
a13 1
#define Module_Date      		"30 Oct 1998"
@


4.3
log
@Spinner branch (Backspace-Power On addition) merged.

Version 4.66. Tagged as 'Kernel-4_66'
@
text
@d1 1
a1 1
/* (4.66)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.66
d8 1
a8 1
#define Module_Date_CMHG      		22 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.66"
#define Module_Version                  466
d13 1
a13 1
#define Module_Date      		"22 Oct 1998"
@


4.2
log
@Following changes folded in from the start of the Ursula branch:
CPU type messages internationalised.
"Unknown OS_PlatformFeatures reason code" internationalised.
RunningOnEmul flag tweaked.
MorrisIDString conditional removed.
New modules added to SWI list at the end of the chain, on grounds that
the first-registered modules are probably more important.
*ChangeDynamicArea moved into UtilityModule from TaskManager.

Version 4.65. Tagged as 'Kernel-4_65'
@
text
@d1 1
a1 1
/* (4.65)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.65
d8 1
a8 1
#define Module_Date_CMHG      		01 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.65"
#define Module_Version                  465
d13 1
a13 1
#define Module_Date      		"01 Oct 1998"
@


4.1
log
@Spinner branch merged.
Bandwidth limit for 7500FE fixed.
RO371Timings flag set to :LNOT:STB

Version 4.64. Tagged as 'Kernel-4_64'
@
text
@d1 1
a1 1
/* (4.64)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.64
d8 1
a8 1
#define Module_Date_CMHG      		30 Sep 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.64"
#define Module_Version                  464
d13 1
a13 1
#define Module_Date      		"30 Sep 1998"
@


1.1
log
@file VersionNum was initially added on branch Spinner.
@
text
@d1 14
@


1.1.2.1
log
@created by srccommit.
@
text
@a0 14
/* (4.63)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 *
 */
#define Module_MajorVersion_CMHG     	4.63
#define Module_MinorVersion_CMHG	$Revision:$
#define Module_Date_CMHG      		24 Sep 1998

#define Module_MajorVersion     	"4.63"
#define Module_Version                  463
#define Module_MinorVersion		"$Revision:$"
#define Module_Date      		"24 Sep 1998"

@


1.1.2.2
log
@Support added for 24LC128 16K EEPROM device.
OS_NVMemory SWI added to allow block operations on non-volatile memory.
Kernel can clock memory device at 400kHz for greater throughput.
Safeguards added to stop the device being accessed when the clock is changed
and the device doesn't have an RTC.
Changed to use srccommit.

Version 4.63, 1.1.2.2. Tagged as 'Kernel-4_63-1_1_2_2'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG	1.1.2.2
d12 1
a12 1
#define Module_MinorVersion		"1.1.2.2"
@


1.1.2.3
log
@Allow Backspace-Power On as a synonym for Delete-Power On.

Version 4.63, 1.1.2.3. Tagged as 'Kernel-4_63-1_1_2_3'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.2.3
#define Module_Date_CMHG      		19 Oct 1998
d12 2
a13 2
#define Module_MinorVersion		"1.1.2.3"
#define Module_Date      		"19 Oct 1998"
@


1.1.2.4
log
@Added option to do POST on a non-power on reset.

Version 4.63, 1.1.2.4. Tagged as 'Kernel-4_63-1_1_2_4'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.2.4
#define Module_Date_CMHG      		02 Nov 1998
d12 2
a13 2
#define Module_MinorVersion		"1.1.2.4"
#define Module_Date      		"02 Nov 1998"
@


1.1.2.5
log
@Turns off Chrontel device inside POST to surpress TV noise.

Version 4.63, 1.1.2.5. Tagged as 'Kernel-4_63-1_1_2_5'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.2.5
#define Module_Date_CMHG      		06 Nov 1998
d12 2
a13 2
#define Module_MinorVersion		"1.1.2.5"
#define Module_Date      		"06 Nov 1998"
@
