head	1.8;
access;
symbols
	VIDC20Video-0_07:1.8
	VIDC20Video-0_06:1.7
	VIDC20Video-0_05:1.6
	VIDC20Video-0_04:1.5
	VIDC20Video-0_03:1.4
	VIDC20Video-0_02:1.3
	VIDC20Video-0_01:1.2;
locks; strict;
comment	@# @;


1.8
date	2015.01.31.19.55.15;	author jlee;	state Exp;
branches;
next	1.7;
commitid	lWHLAgJ3wR6Xkd8y;

1.7
date	2014.08.04.19.31.17;	author jlee;	state Exp;
branches;
next	1.6;
commitid	boSTJ25MamBsZ4Lx;

1.6
date	2014.07.20.15.01.00;	author jlee;	state Exp;
branches;
next	1.5;
commitid	D8B9rhQTMQ1DY7Jx;

1.5
date	2013.12.15.22.36.31;	author jlee;	state Exp;
branches;
next	1.4;
commitid	ANlc38UyeeOlthhx;

1.4
date	2013.03.18.20.41.43;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	IgvO7i0WUks2AjIw;

1.3
date	2012.08.12.10.44.13;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	MmNOvHLhdaDvhfgw;

1.2
date	2012.07.04.18.12.38;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	5VgzLF68zQ341hbw;

1.1
date	2012.07.04.18.09.07;	author rsprowson;	state Exp;
branches;
next	;
commitid	Z0MGDxeTIdBRZgbw;


desc
@@


1.8
log
@Fix memory corruption in GV_WritePaletteEntries
Detail:
  s/Palette - Fix WriteNormalPaletteEntries writing to the wrong place (typically address 0) instead of writing to the palette soft copy
Admin:
  Tested on StrongARM RiscPC
  Fixes issue reported on forums with branch through zero vector being overwritten:
  https://www.riscosopen.org/forum/forums/11/topics/3064


Version 0.07. Tagged as 'VIDC20Video-0_07'
@
text
@/* (0.07)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.07
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                31 Jan 2015

#define Module_MajorVersion             "0.07"
#define Module_Version                  7
#define Module_MinorVersion             ""
#define Module_Date                     "31 Jan 2015"

#define Module_ApplicationDate          "31-Jan-15"

#define Module_ComponentName            "VIDC20Video"
#define Module_ComponentPath            "castle/RiscOS/Sources/Video/HWSupport/VIDC20Video"

#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (31 Jan 2015)"
#define Module_LibraryVersionInfo       "0:7"
@


1.7
log
@Add GraphicsV_ReadInfo implementation
Detail:
  s/GVect - Added GraphicsV_ReadInfo implementation
Admin:
  Tested on StrongARM RiscPC


Version 0.06. Tagged as 'VIDC20Video-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                04 Aug 2014
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "04 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "04-Aug-14"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (04 Aug 2014)"
#define Module_LibraryVersionInfo       "0:6"
@


1.6
log
@Remove support for interlaced modes
Detail:
  s/GVect - Remove GraphicsV_SetInterlace implementation - call is deprecated.
  s/Modes - Remove code to check for the deprecated interlace sync/pol flags. Check for the interlace control list item instead, and require that it's zero - no current IOMD targets are capable of interlaced video output.
  s/VIDC20Video - ADR -> ADRL to fix address range issue
Admin:
  Tested on RiscPC


Version 0.05. Tagged as 'VIDC20Video-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d9 1
a9 1
#define Module_Date_CMHG                20 Jul 2014
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d14 1
a14 1
#define Module_Date                     "20 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jul-14"
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (20 Jul 2014)"
#define Module_LibraryVersionInfo       "0:5"
@


1.5
log
@Update to use new GraphicsV registration process. Add 4K and 64K colour mode support. Handle 16bpp gamma table/palette mungeing ourselves.
Detail:
  s/GVect - Update GraphicsV handler to only respond to our driver number. Use flag definitions from Hdr:GraphicsV where appropriate. Implement GraphicsV_PixelFormats to allow listing of 4K and 64K modes.
  s/Modes - Update mode vet to check for valid NColour, ModeFlags and ExtraBytes settings. Update mode set to calculate which palette munge routine is required in 16bpp modes.
  s/MonitorID - Pull return address from stack instead of from LR
  s/Palette - Update palette/gamma table handling to perform our own gamma table munge for 16bpp modes, as the OS will no longer do it for us. SoftPalette now caches the full palette instead of just the first entry.
  s/VIDC20Video - Remove local VIDC list definition, use Hdr:VIDCList instead. Remove ModeModeOnInit option, the kernel will now do a mode change for us when we call OS_ScreenMode 65. Update for new registration process.
  s/VSync - Update VSync IRQ handling to pass correct driver number to GraphicsV
Admin:
  Tested in IOMD ROM softload
  Requires HdrSrc-2_38 and Kernel-5_35-4_79_2_203


Version 0.04. Tagged as 'VIDC20Video-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                15 Dec 2013
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "15 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-13"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (15 Dec 2013)"
#define Module_LibraryVersionInfo       "0:4"
@


1.4
log
@Swap round the sync types
Sync type 1 is composite, and 0 is separate, was previously treating them the other way round. While most LCD monitors are tolerant of either CRTs will get upset with Vsync timings of many kHz.
Also optimised an instruction out of the interrupt handler.
Tested in an IOMD ROM.

Version 0.03. Tagged as 'VIDC20Video-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                18 Mar 2013
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "18 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "18-Mar-13"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (18 Mar 2013)"
#define Module_LibraryVersionInfo       "0:3"
@


1.3
log
@Add VIDC20 specific bandwidth limit checks to vet mode function
Table includes entries to deal with up to 8MB of VRAM, recognising that physical machines can't have more than 2 but don't want to restrict emulators so harshly.

Version 0.02. Tagged as 'VIDC20Video-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                12 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "12 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "12-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (12 Aug 2012)"
#define Module_LibraryVersionInfo       "0:2"
@


1.2
log
@VIDC20 claimant for GraphicsV
Mostly a cut-and-paste job from the IOMD HAL, plus
* Now does some proper mode vetting
* Now implements composite sync (subject to monitor type)
* Now returns some (fake) EDID data in response to GraphicsV_IICOp with the monitor type substituted based on the ID0 pin on the 15 way D-Sub
Tested on RiscPC and RPCEmu.

Version 0.01. Tagged as 'VIDC20Video-0_01'
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                04 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "04 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (04 Jul 2012)"
#define Module_LibraryVersionInfo       "0:1"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.00)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.00
d11 2
a12 2
#define Module_MajorVersion             "0.00"
#define Module_Version                  0
d21 3
a23 3
#define Module_FullVersion              "0.00"
#define Module_HelpVersion              "0.00 (04 Jul 2012)"
#define Module_LibraryVersionInfo       "0:0"
@

