head	1.3;
access;
symbols
	VIDC20Video-0_07:1.3
	VIDC20Video-0_06:1.3
	VIDC20Video-0_05:1.3
	VIDC20Video-0_04:1.3
	VIDC20Video-0_03:1.2
	VIDC20Video-0_02:1.1.1.1
	VIDC20Video-0_01:1.1.1.1
	VIDC20Video-0_00:1.1.1.1
	vendor:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.12.15.22.36.35;	author jlee;	state Exp;
branches;
next	1.2;
commitid	ANlc38UyeeOlthhx;

1.2
date	2013.03.18.20.41.47;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	IgvO7i0WUks2AjIw;

1.1
date	2012.07.04.18.06.31;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	IpsTCLNa3aAQYgbw;

1.1.1.1
date	2012.07.04.18.06.31;	author rsprowson;	state Exp;
branches;
next	;
commitid	IpsTCLNa3aAQYgbw;


desc
@@


1.3
log
@Update to use new GraphicsV registration process. Add 4K and 64K colour mode support. Handle 16bpp gamma table/palette mungeing ourselves.
Detail:
  s/GVect - Update GraphicsV handler to only respond to our driver number. Use flag definitions from Hdr:GraphicsV where appropriate. Implement GraphicsV_PixelFormats to allow listing of 4K and 64K modes.
  s/Modes - Update mode vet to check for valid NColour, ModeFlags and ExtraBytes settings. Update mode set to calculate which palette munge routine is required in 16bpp modes.
  s/MonitorID - Pull return address from stack instead of from LR
  s/Palette - Update palette/gamma table handling to perform our own gamma table munge for 16bpp modes, as the OS will no longer do it for us. SoftPalette now caches the full palette instead of just the first entry.
  s/VIDC20Video - Remove local VIDC list definition, use Hdr:VIDCList instead. Remove ModeModeOnInit option, the kernel will now do a mode change for us when we call OS_ScreenMode 65. Update for new registration process.
  s/VSync - Update VSync IRQ handling to pass correct driver number to GraphicsV
Admin:
  Tested in IOMD ROM softload
  Requires HdrSrc-2_38 and Kernel-5_35-4_79_2_203


Version 0.04. Tagged as 'VIDC20Video-0_04'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

VSyncHandler
        Push    "r4, r9, lr"

      [ debugsy
        LDR     r1, VSyncCounts
        ADD     r1, r1, #1
        STR     r1, VSyncCounts
      ]

        ; Prepare r4 for the GraphicsV call before r12 gets trashed
        LDRB    r4, GVinstance
        MOV     r4, r4, LSL #24
        ORR     r4, r4, #GraphicsV_VSync

        ; Clear that interrupt (NB. HAL call might trash r12)
        LDR     r0, DevDesc
        LDR     r0, [r0, #HALDevice_Device]
        LDR     r9, ClearVSyncSB
        MOV     lr, pc
        LDR     pc, ClearVSyncFn

        ; Do flyback side effects
        MRS     r9, CPSR
        ASSERT  SVC32_mode :OR: IRQ32_mode = SVC32_mode
        ORR     lr, r9, #SVC32_mode
        MSR     CPSR_c, lr
        Push    "r9, lr"
        MOV     r9, #GraphicsV
        SWI     XOS_CallAVector
        Pull    "r9, lr"
        MSR     CPSR_c, r9
        
        Pull    "r4, r9, pc"

        END
@


1.2
log
@Swap round the sync types
Sync type 1 is composite, and 0 is separate, was previously treating them the other way round. While most LCD monitors are tolerant of either CRTs will get upset with Vsync timings of many kHz.
Also optimised an instruction out of the interrupt handler.
Tested in an IOMD ROM.

Version 0.03. Tagged as 'VIDC20Video-0_03'
@
text
@d17 1
a17 1
        Push    "r9, lr"
d25 5
d42 1
a42 2
        Push    "r4, r9, lr"
        MOV     r4, #GraphicsV_VSync
d45 1
a45 1
        Pull    "r4, r9, lr"
d48 1
a48 1
        Pull    "r9, pc"
@


1.1
log
@Initial revision
@
text
@a27 1
        LDR     r1, ClearVSyncFn
d30 2
a31 2
        MOV     pc, r1
      
@


1.1.1.1
log
@Import of VIDC20 video driver.
@
text
@@
