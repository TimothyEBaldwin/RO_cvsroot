head	1.6;
access;
symbols
	IMXVideo-0_27:1.6
	IMXVideo-0_26:1.6
	IMXVideo-0_25:1.6
	IMXVideo-0_24:1.6
	IMXVideo-0_23:1.6
	IMXVideo-0_22:1.5
	IMXVideo-0_21:1.4
	IMXVideo-0_20:1.3
	IMXVideo-0_19:1.3
	IMXVideo-0_18:1.2
	IMXVideo-0_17:1.1
	IMXVideo-0_16:1.1;
locks; strict;
comment	@# @;


1.6
date	2018.02.07.19.34.15;	author jlee;	state Exp;
branches;
next	1.5;
commitid	zV8VZmHn1RhxLXpA;

1.5
date	2018.02.06.21.34.24;	author jlee;	state Exp;
branches;
next	1.4;
commitid	XboVYC1RjzHLsQpA;

1.4
date	2018.02.06.20.33.17;	author jlee;	state Exp;
branches;
next	1.3;
commitid	vRykJTfTsDCN7QpA;

1.3
date	2018.02.03.22.37.21;	author jlee;	state Exp;
branches;
next	1.2;
commitid	tbeTbSdV58jlUspA;

1.2
date	2018.02.03.18.28.28;	author jlee;	state Exp;
branches;
next	1.1;
commitid	bIUy9hlDNPOXwrpA;

1.1
date	2017.12.31.14.31.57;	author jballance;	state Exp;
branches;
next	;
commitid	6sKxxmK4qR5vj3lA;


desc
@@


1.6
log
@Support more pixel formats
Detail:
  This change adds support for 16 colour, 4K and 64K colour modes, along with red-blue swapped versions of the true-colour modes.
  h/ipu_common - Delete ips_dma_colorimetry_e enum (no longer used by C code)
  hdr/cpmem - Update the list of pixel formats to remove/disable some unused ones and add the new ones
  hdr/StaticWS - Add workspace variable for storing the GPU pixel format
  s/Video - Tidy up CPMem programming so that the parameters used for RGB pixel formats can be specified in a table. Add GetIPUFormat function for extracting the GPU pixel format from a mode list (+ other control list params). Extend GraphicsV pixel format list to include the new formats.
  s/GraphicsV - Change GraphicsV_VetMode to use GetIPUFormat, and take into account the CPMem line stride limit. Advertise 4bpp support via GraphicsV_Features.
Admin:
  Tested on wandboard


Version 0.23. Tagged as 'IMXVideo-0_23'
@
text
@; Copyright 2017 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_STATICWS_HDR__
        GBLL    __HAL_STATICWS_HDR__

; NOTE - sb used as workspace register rather than r12 (simplifies interworking with C, and was easier than changing everything to use r12 after the code was moved from the HAL)
sb              RN      9

                 ^ 0
AudioBuffer_Log  # 4 ; Log addr of our audio buffer
AudioBuffer_Phys # 4 ; Phys addr of our audio buffer
AudioBuffer_Src  # 4 ; Log addr of source data from RISC OS
AudioBuffer_Size * :INDEX: @@

; NOTE.. all items at start workspace are duplicated in h.ws in the StaticWS structure  .. KEEP THESE IN SYNC!!
                ^       0,sb
StaticWS_C_Base #       0
ScrInit         #       4 ; Phys addr of screen start
CCM_Base        #       4 ; CCM base address
IOMUXC_Base     #       4 ; IOMUXC base address
HDMI_Log        #       4 ; HDMI base address
SRC_Log         #       4 ; System Reset unit logical address
IPU1_Log        #       4 ;
IPU2_Log        #       4 ;
CCMAn_Log       #       4 ;
;
myHDMI_infos    #       0 ; start of hdmi_data_info_s structure
enc_in_format   #       4
enc_out_format  #       4
enc_color_depth #       4
colorimetry     #       4
pix_repet_factor #      4
hdcp_enable     #       4
video_mode      #       4

myHDMI_vmode_infos    # 0 ; start of hdmi_vmode_s structure
mCode                 # 4
mHdmiDviSel           # 4
mRVBlankInOSC         # 4
mRefreshRate          # 4
mHActive              # 4
mVActive              # 4
mHBlanking            # 4
mVBlanking            # 4
mHSyncOffset          # 4
mVSyncOffset          # 4
mHSyncPulseWidth      # 4
mVSyncPulseWidth      # 4
mHSyncPolarity        # 4
mVSyncPolarity        # 4
mDataEnablePolarity   # 4
mInterlaced           # 4
mPixelClock           # 4
mHBorder              # 4
mVBorder              # 4
mPixelRepetitionInput # 4

ml2bpp                # 4

myidmacinfo         #   ipu_idmac_info_size ; used in ipu_idmac

myHDMI_dev_panel        # 0 ; start of ips_dev_panel_t structure
mpanel_name             # 32;
mpanel_id               # 4;
mpanel_type             # 4;
mcolorimetry            # 4;
mrefresh_rate           # 4;
mwidth                  # 4;
mheight                 # 4;
mpixel_clock            # 4;
mhsync_start_width      # 4;
mhsync_width            # 4;
mhsync_end_width        # 4;
mvsync_start_width      # 4;
mvsync_width            # 4;
mvsync_end_width        # 4;
mdelay_h2v              # 4;
mpinterlaced            # 4;
mclk_sel                # 4; 0 = internal clock, 1 = external clock 
mclk_pol                # 4;
mhsync_pol              # 4;
mvsync_pol              # 4;
mdrdy_pol               # 4;
mdata_pol               # 4;
mpanel_init             # 4;
mpanel_deinit           # 4;

; end of StaticWS C header
HALDevice       #       4 ; Pointer to the video HAL device created by the HAL

mIPUFormat      #       4

InitFlags       #       4
InitFlag_ResFiles     * 1  ; ResourceFS files have been registered
 [ HijackHAL
InitFlag_HALHijacked  * 2  ; HAL video driver has been hijacked
 ]
InitFlag_GVRegistered * 4  ; GraphicsV driver number has been allocated
InitFlag_VSyncClaim   * 8  ; VSync IRQ has been claimed
InitFlag_GVClaim      * 16 ; GraphicsV has been claimed
InitFlag_GVStarted    * 32 ; GraphicsV driver has started

MessageFile_Block # 16
MessageFile_Open  #  4

PointerPhys     #       4 ; Phys addr of pointer image
PointerLog      #       4 ; Log addr of pointer image
PointerPal      #       16 ; Pointer palette
PointerX        #       4 ; Pointer delta values - offset of image within buffer
PointerY        #       4
PointerPalDirty #       1 ; Nonzero if pointer palette has changed
PointerDisabled #       1 ; Nonzero if pointer is disabled

GVinstance      #       1
HDMIEnabled     #       1 ; Whether we run the interface in HDMI or DVI mode
 [ CustomBits
MonitorType     #       1
                #       3 ; back to word alignment
 ]

DMB_Write       #       4 ; DMB_Write ARMop

DI_ext_clk_rate #       4 ; Rate (in Hz) of current DI external clock

GammaOut        #       17 ; Gamma curve values
                #       3

 [ HDMIAudio
; Audio driver workspace
AudioDevice        #     HALDevice_Audio_Size_2 ; HAL device
AudioBuffers       #     AudioBuffer_Size*2
AudioDestBuffSize  #     4 ; Our DMA buffer size (twice size of src buffer)
AudioCSWEnd        #     4 ; End of used CSW data
AudioBuffIndex     #     1 ; Current buffer index
AudioOn            #     1 ; Nonzero if playback active
AudioRegistered    #     1 ; Nonzero if HAL device registered
AudioActive        #     1 ; Nonzero if HAL device activated
AudioSemaphore     #     1 ; Nonzero if in IRQ handler
AudioRates         #     1 ; Mask of which audio rates are supported by mode/monitor
                   #     2
AudioRate          #     4 ; Current sample rate (Hz)
AudioCallback      #     4 ; Callback into SoundDMA for buffer filling
AudioCallbackParam #     4
VFPSup_Context     #     4 ; VFPSupport context used by DMA pre-processor
VFPSup_WS          #     4 ; VFPSupport FastAPI workspace
VFPSup_ChangeCtx   #     4 ; VFPSupport FastAPI context change func
AudioCSW           #     40*8 + 8 ; Channel status word + other control bits, in right format for DMA pre-process code. 8 bytes extra allocated so that we can repeat those bytes to make bits 41-191 of the full CSW/sub-packet.
AudioRateTable     #     AudioRateTableSize*7
 ]

TotalRAMRequired *      :INDEX: @@

        ] ; __HAL_STATICWS_HDR__

        END
@


1.5
log
@More tidying up
Detail:
  s/Video - Wrap more code in CustomBits switch, to avoid a redundant mode set on startup.
  h/hdmi_tx, hdr/StaticWS - Remove unused mHImageSize / mVImageSize variables
  hdr/cpmem - Add some docs
Admin:
  Tested on wandboard


Version 0.22. Tagged as 'IMXVideo-0_22'
@
text
@d104 2
@


1.4
log
@Improve error handling during module init/final
Detail:
  s/IMXVideo, hdr/StaticWS - Keep track of what's been initialised during module init so that it can be torn down properly on module finalisation or if initialisation fails
Admin:
  Tested on wandboard


Version 0.21. Tagged as 'IMXVideo-0_21'
@
text
@a53 2
mHImageSize           # 4
mVImageSize           # 4
@


1.3
log
@Add gamma correction support for true-colour modes
Detail:
  s/Video, hdr/StaticWS - Implement gamma correction support for true-colour modes, via the usual GraphicsV interface
  s/SWPointer - Delete unused file
Admin:
  Tested on wandboard
  N.B. unlike most other hardware, the IMX6 uses the same gamma curve for all three colour channels, and it's expressed as a polynomial rather than a lookup table. For the default linear curve this seems to work OK, but more extreme curves are likely to run into problems (especially if you want separate R, G & B curves)


Version 0.19. Tagged as 'IMXVideo-0_19'
@
text
@d106 10
@


1.2
log
@Cleanup pass
Detail:
  s/IMXVideo, s/GraphicsV, hdr/StaticWS - Turn off HijackHAL now that the HAL video driver is disabled. Wrap *ReadEDID command, builtin MDF, and other unusual code in a CustomBits switch, and disable it, to remove some blockers for the stable RISC OS 5.24 release.
Admin:
  Tested on wandboard
  EDID & HDMI audio still functional


Version 0.18. Tagged as 'IMXVideo-0_18'
@
text
@d128 3
@


1.1
log
@Resync IMXVideo with development version


Version 0.16. Tagged as 'IMXVideo-0_16'
@
text
@d119 1
d122 1
@

