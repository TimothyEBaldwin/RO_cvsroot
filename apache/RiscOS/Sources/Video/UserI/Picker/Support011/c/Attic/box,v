head	4.2;
access;
symbols
	RO_5_07:4.2
	sbrodie_sedwards_16Mar2000:4.1.3.1
	Ursula_merge:4.1.3.1
	Picker-0_42:4.1.3.1
	dcotton_autobuild_BaseSW:4.1.3.1
	nturton_Picker-0_40:4.1.3.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.3.1
	Ursula_RiscPC:4.1.3.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1.3.1
	UrsulaBuild_FinalSoftload:4.1.3.1
	rthornb_UrsulaBuild-12Aug1998:4.1.3.1
	aglover_UrsulaBuild-05Aug1998:4.1.3.1
	hsimons_BOCA-1_2-Release:4.1.3.1
	rthornb_UrsulaBuild-29Jul1998:4.1.3.1
	rthornb_UrsulaBuild-22Jul1998:4.1.3.1
	rthornb_UrsulaBuild-15Jul1998:4.1.3.1
	rthornb_UrsulaBuild-07Jul1998:4.1.3.1
	rthornb_UrsulaBuild-17Jun1998:4.1.3.1
	rthornb_UrsulaBuild-03Jun1998:4.1.3.1
	rthornb_UrsulaBuild-27May1998:4.1.3.1
	rthornb_UrsulaBuild-21May1998:4.1.3.1
	rthornb_UrsulaBuild_01May1998:4.1.3.1
	Daytona:4.1.3.1.0.6
	Daytona_bp:4.1.3.1
	Ursula:4.1.3.1.0.2
	Ursula_bp:4.1.3.1
	RO_3_71:4.1.3.1
	RCA_bp:4.1.3.1
	RCA:4.1.3.1.0.4
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	StrongARM:4.1.3;
locks; strict;
comment	@# @;


4.2
date	99.11.24.00.04.55;	author sbrodie;	state dead;
branches;
next	4.1;

4.1
date	96.11.06.02.49.14;	author nturton;	state Exp;
branches
	4.1.3.1;
next	;

4.1.3.1
date	96.11.06.02.49.14;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  This code has hacked me off for the last time.
Detail:
  As much as possible of the junk has been removed.
  Standard build structure replaces it.
  Unused code removed.
  Support for RISC OS pre-3.60 removed (remove the int'l
    stuff in the CMHG file to reverse this - it must save
    all of 100 bytes!)
  RAM builds now contain the resources for registering in
    ResourceFS (NOTE: this build does not register them yet
    but that's the same as current versions!)  When this is
    fixed, the RAM builds will be the standalone builds.
  RAM build contains a single ResourceFS area which is to be
    registered instead of NINE that it used to register.
  Shame I can't remove all traces of the other directories.
  WinEdit is now invoked from the makefile instead of having
    several silly one-liner Obey scripts to do it.  However, this
    necessitates the perl script to fix the trigraphs (cannot
    use # in makefiles) unless you like 1000s of warnings about
    ANSI trigraphs in the (valid) generated headers.
  Unable to extract it from OSLib or Support011 - it's too
     heavily dependent on them.  Sorry.
Admin:
  RAM builds seem to work.

Version 0.43. Tagged as 'Picker-0_43'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*box - various operations on boxes*/

/*From OSLib*/
#include "os.h"

/*From Support*/
#include "box.h"

os_box *box_extend (os_box *b, os_coord *p)

   /*Extend the box so that it includes the point*/

{  (void) MINAB (b->x0, p->x);
   (void) MINAB (b->y0, p->y);
   (void) MAXAB (b->x1, p->x + 1);
   (void) MAXAB (b->y1, p->y + 1);

   return b;
}
/*------------------------------------------------------------------------*/
bool box_within (os_coord *p, os_box *b)

   /*Is p inside b?*/

{  return b->x0 <= p->x && p->x < b->x1 &&
         b->y0 <= p->y && p->y < b->y1;
}
/*------------------------------------------------------------------------*/
os_box *box_intersection (os_box *a, os_box *b)

   /*Intersects b into a, returning a if there is one or NULL otherwise*/

{  os_box tmp;

   tmp.x0 = MAX (a->x0, b->x0);
   tmp.y0 = MAX (a->y0, b->y0);
   tmp.x1 = MIN (a->x1, b->x1);
   tmp.y1 = MIN (a->y1, b->y1);

   if (tmp.x1 - tmp.x0 > 0 && tmp.y1 - tmp.y0 > 0)
   {  *a = tmp;
      return a;
   }
   else
      return NULL;
}
/*------------------------------------------------------------------------*/
os_box *box_union (os_box *a, os_box *b)

   /*Unites b into a, returning a*/

{  os_box tmp;

   tmp.x0 = MIN (a->x0, b->x0);
   tmp.y0 = MIN (a->y0, b->y0);
   tmp.x1 = MAX (a->x1, b->x1);
   tmp.y1 = MAX (a->y1, b->y1);

   *a = tmp;
   return a;
}
/*------------------------------------------------------------------------*/
bool box_overlap (os_box *a, os_box *b)

   /*Whether two boxes overlap*/

{  os_box tmp = *a;

   return box_intersection (&tmp, b) != NULL;
}
@


4.1
log
@Initial revision
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@
