head	4.2;
access;
symbols
	RO_5_07:4.2
	sbrodie_sedwards_16Mar2000:4.1.3.1
	Ursula_merge:4.1.3.1
	Picker-0_42:4.1.3.1
	dcotton_autobuild_BaseSW:4.1.3.1
	nturton_Picker-0_40:4.1.3.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.3.1
	Ursula_RiscPC:4.1.3.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1.3.1
	UrsulaBuild_FinalSoftload:4.1.3.1
	rthornb_UrsulaBuild-12Aug1998:4.1.3.1
	aglover_UrsulaBuild-05Aug1998:4.1.3.1
	hsimons_BOCA-1_2-Release:4.1.3.1
	rthornb_UrsulaBuild-29Jul1998:4.1.3.1
	rthornb_UrsulaBuild-22Jul1998:4.1.3.1
	rthornb_UrsulaBuild-15Jul1998:4.1.3.1
	rthornb_UrsulaBuild-07Jul1998:4.1.3.1
	rthornb_UrsulaBuild-17Jun1998:4.1.3.1
	rthornb_UrsulaBuild-03Jun1998:4.1.3.1
	rthornb_UrsulaBuild-27May1998:4.1.3.1
	rthornb_UrsulaBuild-21May1998:4.1.3.1
	rthornb_UrsulaBuild_01May1998:4.1.3.1
	Daytona:4.1.3.1.0.6
	Daytona_bp:4.1.3.1
	Ursula:4.1.3.1.0.2
	Ursula_bp:4.1.3.1
	RO_3_71:4.1.3.1
	RCA_bp:4.1.3.1
	RCA:4.1.3.1.0.4
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	StrongARM:4.1.3;
locks; strict;
comment	@# @;


4.2
date	99.11.24.00.05.13;	author sbrodie;	state dead;
branches;
next	4.1;

4.1
date	96.11.06.02.49.20;	author nturton;	state Exp;
branches
	4.1.3.1;
next	;

4.1.3.1
date	96.11.06.02.49.20;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  This code has hacked me off for the last time.
Detail:
  As much as possible of the junk has been removed.
  Standard build structure replaces it.
  Unused code removed.
  Support for RISC OS pre-3.60 removed (remove the int'l
    stuff in the CMHG file to reverse this - it must save
    all of 100 bytes!)
  RAM builds now contain the resources for registering in
    ResourceFS (NOTE: this build does not register them yet
    but that's the same as current versions!)  When this is
    fixed, the RAM builds will be the standalone builds.
  RAM build contains a single ResourceFS area which is to be
    registered instead of NINE that it used to register.
  Shame I can't remove all traces of the other directories.
  WinEdit is now invoked from the makefile instead of having
    several silly one-liner Obey scripts to do it.  However, this
    necessitates the perl script to fix the trigraphs (cannot
    use # in makefiles) unless you like 1000s of warnings about
    ANSI trigraphs in the (valid) generated headers.
  Unable to extract it from OSLib or Support011 - it's too
     heavily dependent on them.  Sorry.
Admin:
  RAM builds seem to work.

Version 0.43. Tagged as 'Picker-0_43'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*x.c*/

/*From CLib*/
#include <kernel.h>
#include <setjmp.h>
#include <signal.h>
#include <stdlib.h>
#include <string.h>

/*From OSLib*/
#include "macros.h"
#include "os.h"

/*From Support*/
#include "x.h"

x_STATIC_ERROR (Error_Escape,    error_ESCAPE,     "Escape")
x_STATIC_ERROR (Error_Stack,     error_STK_OFLO,   "Stack overflow")
x_STATIC_ERROR (Error_Unknown,   1,                "C library error")
x_STATIC_ERROR (Error_No_Memory, os_GLOBAL_NO_MEM, "Not enough memory")

static int Signals [] = {SIGINT, SIGSTAK, SIGOSERROR};

/*------------------------------------------------------------------------*/
static void Try_Handler (int sig, x_exception *x)

   /*Handler for use after x_try().*/

{  os_error *error = NULL /**/;

   /*Save this condition in the buffer.*/
   switch (sig)
   {  case SIGINT:
         error = Error_Escape;
      break;

      case SIGSTAK:
         error = Error_Stack;
      break;

      case SIGOSERROR:
         error = x__last_error ();
      break;
   }

   /*Longjump back to the x_TRY() call.*/
   longjmp (x->buf, (int) (x->error = error));
}
/*------------------------------------------------------------------------*/
void x__try (x_exception *x)

{  int sig;

   /*trampoline*/
   x->trampoline [0] = 0xE24F1008;
      /*i e, 'ADR R1, x,' which is the same as 'SUB R1, PC, #8'*/
   x->trampoline [1] = 0xEA000000 | ((int) &Try_Handler -
         (int) &x->trampoline [1] - 8 >> 2 & 0xFFFFFF);
      /*i e, 'B Try_Handler'*/

   /*previous*/
   for (sig = 0; sig < COUNT (Signals); sig++)
      if ((x->previous [sig] = signal (Signals [sig], (void (*) (int)) x)) ==
            SIG_ERR)
         x->previous [sig] = NULL;

   /*error*/
   x->error = NULL;

   /*buf*/
   /*Done in calling macro.*/
}
/*------------------------------------------------------------------------*/
void x__catch (x_exception *x)

{  int sig;

   /*Restore the caller's handlers.*/
   for (sig = 0; sig < COUNT (Signals); sig++)
      if (x->previous [sig] != NULL)
         (void) signal (Signals [sig], x->previous [sig]);

}
/*------------------------------------------------------------------------*/
os_error *x__last_error (void)

{  /*messing about here because _kernel_last_oserror() returns NULL the
      second time it's called*/
   os_error *last_error;

   static os_error *Last_Error = (os_error *) &Error_Unknown_;

   if ((last_error = (os_error *) _kernel_last_oserror ()) != NULL)
      Last_Error = last_error;

   return Last_Error; /*never NULL*/
}
/*------------------------------------------------------------------------*/
void *x_alloc (int size)

{  void *ptr;

   if ((ptr = malloc (size)) == NULL && size != 0)
      x_THROW (Error_No_Memory);

   return ptr;
}
/*------------------------------------------------------------------------*/
void x_free (void *ptr) {free (ptr);}
/*------------------------------------------------------------------------*/
void *x_realloc (void *ptr, int size)

{  if ((ptr = realloc (ptr, size)) == NULL && size != 0)
      x_THROW (Error_No_Memory);

   return ptr;
}
@


4.1
log
@Initial revision
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@
