head	4.13;
access;
symbols
	ScrModes-0_71:4.13
	ScrModes-0_70:4.13
	ScrModes-0_69:4.13
	ScrModes-0_68:4.13
	ScrModes-0_67:4.13
	ScrModes-0_66:4.13
	ScrModes-0_65:4.13
	ScrModes-0_64:4.13
	ScrModes-0_62:4.12
	ScrModes-0_61:4.11
	ScrModes-0_60:4.10
	ScrModes-0_59:4.10
	ScrModes-0_58:4.10
	ScrModes-0_57:4.10
	ScrModes-0_56-smalltables:4.10
	ScrModes-0_56:4.10
	ScrModes-0_55-mallocfree:4.10
	ScrModes-0_55-cvs3fix:4.10
	ScrModes-0_55:4.10
	ScrModes-0_53-split:4.10
	ScrModes-0_54:4.10
	ScrModes-0_53-tables:4.10
	ScrModes-0_53:4.10
	ScrModes-0_52:4.10
	ScrModes-0_51:4.10
	ScrModes-0_50:4.10
	ScrModes-0_49:4.10
	ScrModes-0_48:4.9
	ScrModes-0_47:4.9
	ScrModes-0_46:4.9
	ScrModes-0_45:4.9
	ScrModes-0_44:4.8
	ScrModes-0_43:4.8
	ScrModes-0_42:4.8
	ScrModes-0_41:4.8
	ScrModes-0_40:4.8
	ScrModes-0_39:4.7
	ScrModes-0_38:4.6
	ScrModes-0_37:4.5
	ScrModes-0_36:4.5
	ScrModes-0_35:4.5
	ScrModes-0_34:4.5
	ScrModes-0_33:4.5
	ScrModes-0_32:4.4
	ScrModes-0_31:4.4
	RO_5_07:4.4
	ScrModes-0_30:4.4
	ScrModes-0_29:4.4
	ScrModes-0_28:4.4
	dellis_autobuild_BaseSW:4.4
	ScrModes-0_27:4.4
	ScrModes-0_26:4.4
	sbrodie_sedwards_16Mar2000:4.4
	ScrModes-0_25:4.4
	ScrModes-0_24:4.4
	dcotton_autobuild_BaseSW:4.4
	ScrModes-0_23:4.3
	ScrModes-0_22:4.3
	ScrModes-0_21:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	ScrModes-0_20:4.3
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.13
date	2017.05.01.22.56.50;	author jballance;	state Exp;
branches;
next	4.12;
commitid	5CirA5GqnOtYWJPz;

4.12
date	2017.03.12.23.54.38;	author jballance;	state Exp;
branches;
next	4.11;
commitid	zaMwiP2AnmnxSjJz;

4.11
date	2017.03.05.15.21.07;	author rool;	state Exp;
branches;
next	4.10;
commitid	dv9rieZmjERhgnIz;

4.10
date	2015.11.29.20.34.55;	author jlee;	state Exp;
branches;
next	4.9;
commitid	X917PzTaosbDQ1Ly;

4.9
date	2015.02.16.14.28.56;	author jballance;	state Exp;
branches;
next	4.8;
commitid	Opb0gcw7dLV21fay;

4.8
date	2015.02.10.01.25.14;	author jballance;	state Exp;
branches;
next	4.7;
commitid	swACId1zhgf7So9y;

4.7
date	2015.02.08.16.18.05;	author srevill;	state Exp;
branches;
next	4.6;
commitid	diy9pjBgTsmrSd9y;

4.6
date	2014.03.09.16.07.26;	author jlee;	state Exp;
branches;
next	4.5;
commitid	TZY0XSUVr5ArC2sx;

4.5
date	2012.08.12.16.21.31;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	nNXWhBWs82za9hgw;

4.4
date	99.10.12.13.53.21;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.09.21.13.53.56;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.13.08.05;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.46.31;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.46.31;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.50.46;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.02.06;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.24.11;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.13
log
@Remove ReadEDID command. Extend Service_DisplayChanged response
Detail:
ReadEDID command removed. New subreason code added to reason code 0
of Service_DisplayChanged to oblige ScrModes to load the EDID based
modes it discovered. Required because current behaviour would ignore
any EDID based modes once a LoadModeFile command had been issued.
Admin:
Tested on iMx6

Version 0.64. Tagged as 'ScrModes-0_64'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;
; Screen Modes module
;

#include "VersionNum"
#include "Global/Services.h"

help-string: Screen_Modes Module_MajorVersion_CMHG Module_MinorVersion_CMHG

date-string: Module_Date_CMHG

title-string: ScreenModes

initialisation-code: ScreenModes_initialise

finalisation-code: ScreenModes_final

; service calls - the only ones we answer to are Service_EnumerateScreenModes,
; Service_ModeExtension and Service_ModeTranslation
service-call-handler: ScreenModes_servicecall Service_EnumerateScreenModes,
                                              Service_ModeExtension,
                                              Service_ModeTranslation,
                                              Service_DisplayChanged,
                                              Service_MonitorLeadTranslation

international-help-file: "Resources:$.Resources.ScreenMode.Messages"

command-keyword-table: ScreenModes_cmdhandler
     LoadModeFile(min-args:1, max-args: 1, international:,
                  invalid-syntax: "SSMDLMF",
                  help-text: "HSMDLMF"),
     SaveModeFile(min-args:1, max-args: 1, international:,
                  invalid-syntax: "SSMDSMF",
                  help-text: "HSMDSMF")

swi-chunk-base-number: 0x487C0

swi-handler-code: ScreenModes_swihandler

swi-decoding-table: ScreenModes ReadInfo EnumerateAudioFormats Features
@


4.12
log
@  Reinstall *readedid command as it IS needed in some circumstances
Detail:
Admin:
  tested on iMx6

Version 0.62. Tagged as 'ScrModes-0_62'  
@
text
@d48 1
a48 4
                  help-text: "HSMDSMF"),
     ReadEDID(min-args:0,max-args:1, international:,
                  invalid-syntax: "SSMDRED",
                  help-text: "HSMDRED")
@


4.11
log
@Offer export of raw EDID blob and complementary MDF export
Detail:
  Export the EDID raw data as a file in ResourceFS. This allows the Screen Setup plugin to scan that directory to pick up the currently connected monitor, and similarly select it from !Boot.Choices.PreDesk. The EDID data can also be drag & drop copied or exported for offline analysis.
  Add SaveModeFile command. This differs in that it works on the current set, to be symmetrical with LoadModeFile which loads the current set. Also fixes issues of losing the original mode names given; NULL pointer dereference when the EDID block contains no modes (eg. VIDCDriver); and no long writes out malformed MDFs which can't be loaded into !MakeModes (this seems to be because the CreateModeFile command was based on a stale copy of EDIDDecode which fixed the same bug circa 2012).
  Query the current GraphicsV driver for the deepest colour depth for the preferred mode, rather than assuming 32bpp is always possible (eg. because of bandwidth or graphics controller constraints).
  If the configured MonitorType is EDID but no EDID could be read, or it was corrupt, substitute a safe VESA monitor to allow the kernel to select something close to MODE 28.
  Add ScreenModes_Features SWI so the Screen Setup plugin knows whether it's safe to offer EDID in its dialogues.
  Retire the ReadEDID command (no longer needed since LoadModeFile can load the exported EDID blob, or one from disc) and CreateModeFile commands (see SaveModeFile).
  Internationalise the default monitor title ("Unidentified") used when EDID doesn't contain one.
Admin:
  New file - doc/BootStates documents all possible situations, and their recovery, for both the MDF and (non-hotplug) EDID schemes.
  New file - doc/EDIDGoals states the aims of the EDID support from both a user and support perspective.

  Submission for the EDID bounty.

Version 0.61. Tagged as 'ScrModes-0_61'
@
text
@d48 4
a51 1
                  help-text: "HSMDSMF")
@


4.10
log
@Add support for parsing and reporting the contents of CEA 861-D audio-related EDID blocks
Detail:
  Makefile - Export a C version of hdr/ScrModes
  Resources/Germany/Messages, Resources/UK/Messages, h/errors - Add new error message
  cmhg/ScrModesv, hdr/ScrModes - Declare existence of ScreenModes_EnumerateAudioFormats SWI. Declare ScreenModes_ReadInfo reason codes.
  h/modex - Extend MonitorDefinition struct to allow it to store the speaker mask & audio format information that's extracted from the EDID
  c/ScrModes - Extend support for processing of CEA extension blocks. All block revisions > 0 should now be accepted, and rudimentary parsing of CEA data block collections is implemented (currently, only extracts information from audio related blocks). Add SWI ScreenModes_EnumerateAudioFormats to allow details of the supported formats to be returned in either "raw" or "friendly" forms. Add ScreenModes_ReadInfo reason code 1 to allow reading of the speaker mask (+ validity bits). Also fix *LoadModeFile to allow EDID blocks to be loaded without first having to issue *ReadEDID first (EDIDEnabled flag issue).
Admin:
  Tested on iMX6 with assorted EDID blocks
  German messages file in need of translation


Version 0.49. Tagged as 'ScrModes-0_49'
@
text
@d46 3
a48 6
     ReadEDID(min-args:0,max-args:0, international:,
		  invalid-syntax: "SSMDRED",
		  help-text: "HSMDRED"),
     CreateModeFile(min-args:1,max-args:1, international:,
		  invalid-syntax: "SSMDCMF",
		  help-text: "HSMDCMF")
d54 1
a54 1
swi-decoding-table: ScreenModes ReadInfo EnumerateAudioFormats
@


4.9
log
@  Added 'CreateModeFile' instead of optional file name on ReadEDID
  now needs a file path for where to save the created mdf. It'll use the name in
  the EDID for the file name
Admin:
 tested in iMx6

Version 0.45. Tagged as 'ScrModes-0_45'
@
text
@d57 1
a57 1
swi-decoding-table: ScreenModes ReadInfo
@


4.8
log
@  Extended to optionally generate a saved mdf instead of updating the current loaded mdf.
Detail:
  For field support it is extremely helpful to determine what a customer's monitor
  reports. Whilst (hopefully) this module will correctly produce modes the monitor
  can handle and the computer generate, when that doesn't happen support types need
  to be able to find out why, ideally using the same exact information that is generated.
  So:
  The ReadEDID command, if called with a full file name, will now save the discovered
  mdf information to that file instead of loading it.
  The resultant mdf can be used directly, or used as the basis for further
  modifications. It exports additional information in the header section
  which may prove helpful to 'mdf tweakers'.
Admin:
  Tested in imx rom. In 'advertised' use it is the same code as before. It is
  only when the  filename is given to the readedid command that different paths
  are invoked. Further enhancements may be desirable.

Version 0.40. Tagged as 'ScrModes-0_40'
@
text
@d46 1
a46 1
     ReadEDID(min-args:0,max-args:1, international:,
d48 4
a51 1
		  help-text: "HSMDRED")
@


4.7
log
@Added prototype EDID support code.

This should be considered beta-quality work-in-progress code that gives us a
new *command (ReadEDID) that attempts to read the list of supported display
mode information from a connected monitory and configure the system for it,
as if an MDF file had been loaded containing that information.

Admin:

Community testing is required for this feature. Please try replacing the
LoadModeFile line in your !Boot.Choices.Boot.PreDesk.Configure.Monitor
file with a line saying "ReadEDID". If you get a sensible looking list
of modes when the machine boots, then things should be OK. If you see an
error, please get in touch with ROOL on the "Bounties - ReadEDID" topic.
You'll clearly need to be running a ROM with this version of ScreenModes
in it!

Version 0.39. Tagged as 'ScrModes-0_39'
@
text
@d46 1
a46 1
     ReadEDID(min-args:0,max-args:0, international:,
@


4.6
log
@Pay attention to Service_DisplayChanged
Detail:
  c/ScrModes, cmhg/ScrModesv - Fire off Service_ModeFileChanged whenever we receive Service_DisplayChanged, so that our clients are informed of the fact the mode list may have changed
Admin:
  Tested on Iyonix, BB-xM


Version 0.38. Tagged as 'ScrModes-0_38'
@
text
@d28 2
d37 2
a38 1
                                              Service_DisplayChanged
d45 4
a48 1
                  help-text: "HSMDLMF")
@


4.5
log
@Retire VIDCBandwidthLimit command
Was previously for internal use only, but largely irrelevant as the majoirty of targets don't contain a VIDC, and those that do use a GraphicsV driver anyway.
* CMHG and resources updated to remove the command from the command/syntax table
* Don't bother probing OS_ReadSysInfo 2 for the video controller, assume it's always GraphicsV
* Don't try vetting modes based on VIDC limitations (leave that to VIDC20Video module)
* Don't listen to the kernel's bandwidth limit suggestion, always use INT32_MAX
Also
* Fix potential null pointer dereference if there's not enough RAM to build an ICONSPRITES command
* Rather than setting up an atexit() handler in the module init, just use a module finalisation handler
* Makefile tickled to not use Norcroft specific flags

Version 0.33. Tagged as 'ScrModes-0_33'
@
text
@d20 1
d32 4
a35 1
service-call-handler: ScreenModes_servicecall 0x8D 0x50 0x51
@


4.4
log
@Claims Service_ModeTranslation to get better alternatives than those the
Kernel generates, which are often not suitable for a TV.

Version 0.24. Tagged as 'ScrModes-0_24'
@
text
@d27 1
a27 1
initialisation-code: ScreenModes_init
d35 1
a35 1
command-keyword-table: ScreenModes_command
d38 1
a38 4
                  help-text: "HSMDLMF"),
     VIDCBandwidthLimit(min-args:3, max-args: 3, international:,
                        invalid-syntax: "SSMDVBL",
                        help-text: "HSMDVBL")
@


4.3
log
@Makefile changed to use LocalRes$Path and Link 5.08.
German resources imported.
Spinner branch merged.
Changed to use srccommit.

Version 0.20. Tagged as 'ScrModes-0_20'
@
text
@d29 3
a31 3
; service calls - the only ones we answer to are Service_EnumerateScreenModes and 
; Service_ModeExtension
service-call-handler: ScreenModes_servicecall 0x8D 0x50
@


4.2
log
@NCOS 1.06 version used
@
text
@d19 5
a23 1
help-string: Screen_Modes 0.19
@


4.1
log
@Initial revision
@
text
@d19 1
a19 1
help-string: Screen_Modes 0.13
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@d19 1
a19 1
help-string: Screen_Modes 0.19
@


4.1.5.1
log
@Import from SrcFiler
@
text
@d19 1
a19 1
help-string: Screen_Modes 0.19
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@d19 1
a19 1
help-string: Screen_Modes 0.18
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
