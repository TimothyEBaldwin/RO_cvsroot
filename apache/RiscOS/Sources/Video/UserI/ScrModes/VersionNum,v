head	4.55;
access;
symbols
	ScrModes-0_71:4.55
	ScrModes-0_70:4.54
	ScrModes-0_69:4.53
	ScrModes-0_68:4.52
	ScrModes-0_67:4.51
	ScrModes-0_66:4.50
	ScrModes-0_65:4.49
	ScrModes-0_64:4.48
	ScrModes-0_62:4.46
	ScrModes-0_61:4.45
	ScrModes-0_60:4.44
	ScrModes-0_59:4.43
	ScrModes-0_58:4.42
	ScrModes-0_57:4.41
	ScrModes-0_56-smalltables:4.40
	ScrModes-0_56:4.40
	ScrModes-0_55-mallocfree:4.39
	ScrModes-0_55-cvs3fix:4.39
	ScrModes-0_55:4.39
	ScrModes-0_53-split:4.37
	ScrModes-0_54:4.38
	ScrModes-0_53-tables:4.37
	ScrModes-0_53:4.37
	ScrModes-0_52:4.36
	ScrModes-0_51:4.35
	ScrModes-0_50:4.34
	ScrModes-0_49:4.33
	ScrModes-0_48:4.32
	ScrModes-0_47:4.30
	ScrModes-0_46:4.29
	ScrModes-0_45:4.28
	ScrModes-0_44:4.27
	ScrModes-0_43:4.26
	ScrModes-0_42:4.25
	ScrModes-0_41:4.24
	ScrModes-0_40:4.23
	ScrModes-0_39:4.22
	ScrModes-0_38:4.21
	ScrModes-0_37:4.20
	ScrModes-0_36:4.19
	ScrModes-0_35:4.18
	ScrModes-0_34:4.17
	ScrModes-0_33:4.16
	ScrModes-0_32:4.15
	ScrModes-0_31:4.14
	RO_5_07:4.13
	ScrModes-0_30:4.13
	ScrModes-0_29:4.12
	ScrModes-0_28:4.11
	dellis_autobuild_BaseSW:4.9
	ScrModes-0_27:4.9
	ScrModes-0_26:4.8
	sbrodie_sedwards_16Mar2000:4.7
	ScrModes-0_25:4.7
	ScrModes-0_24:4.6
	dcotton_autobuild_BaseSW:4.11
	ScrModes-0_23:4.5
	ScrModes-0_22:4.4
	ScrModes-0_21:4.3
	ScrModes-0_20:4.2;
locks; strict;
comment	@# @;


4.55
date	2018.11.07.22.38.37;	author jlee;	state Exp;
branches;
next	4.54;
commitid	AU2ztWfFYsRL04ZA;

4.54
date	2018.09.25.17.06.06;	author rsprowson;	state Exp;
branches;
next	4.53;
commitid	itewjqPZSC8oyvTA;

4.53
date	2018.09.16.20.21.33;	author jlee;	state Exp;
branches;
next	4.52;
commitid	EbAbYepMbBenVmSA;

4.52
date	2018.03.31.20.09.35;	author rsprowson;	state Exp;
branches;
next	4.51;
commitid	nCwnyjaeiOh4iEwA;

4.51
date	2017.07.11.21.11.48;	author jlee;	state Exp;
branches;
next	4.50;
commitid	emGX2N9I3ony5RYz;

4.50
date	2017.06.17.14.54.54;	author jlee;	state Exp;
branches;
next	4.49;
commitid	coWHi23JVMh5MJVz;

4.49
date	2017.06.07.21.16.15;	author jlee;	state Exp;
branches;
next	4.48;
commitid	VTErhLKp4wwPcuUz;

4.48
date	2017.05.01.22.56.32;	author jballance;	state Exp;
branches;
next	4.46;
commitid	5CirA5GqnOtYWJPz;

4.46
date	2017.03.12.21.51.07;	author jballance;	state Exp;
branches;
next	4.45;
commitid	OQXOPuW08nWacjJz;

4.45
date	2017.03.05.15.20.59;	author rool;	state Exp;
branches;
next	4.44;
commitid	dv9rieZmjERhgnIz;

4.44
date	2017.03.05.15.04.49;	author rool;	state Exp;
branches;
next	4.43;
commitid	Ygdfkz4wkjWJanIz;

4.43
date	2016.12.10.17.06.34;	author jlee;	state Exp;
branches;
next	4.42;
commitid	LKHpaNj8df1Uzsxz;

4.42
date	2016.11.26.13.11.01;	author jlee;	state Exp;
branches;
next	4.41;
commitid	urAfrqa1D6g0JDvz;

4.41
date	2016.08.06.09.38.33;	author rool;	state Exp;
branches;
next	4.40;
commitid	Nf4XSlisK9Oj9ehz;

4.40
date	2016.07.30.08.45.26;	author rool;	state Exp;
branches;
next	4.39;
commitid	1UbggudwDv735kgz;

4.39
date	2016.07.30.08.34.49;	author rool;	state Exp;
branches;
next	4.38;
commitid	pWJuqQAvK4Jo1kgz;

4.38
date	2016.05.14.12.48.17;	author rool;	state Exp;
branches;
next	4.37;
commitid	8X64ODiyT59OTr6z;

4.37
date	2016.01.10.18.01.13;	author jlee;	state Exp;
branches;
next	4.36;
commitid	elsfIXLp0rhgEpQy;

4.36
date	2016.01.08.23.47.04;	author jlee;	state Exp;
branches;
next	4.35;
commitid	CKX18tvKaVSTCbQy;

4.35
date	2016.01.06.21.38.57;	author jlee;	state Exp;
branches;
next	4.34;
commitid	wyReCAfb7LMVYUPy;

4.34
date	2015.12.15.21.30.32;	author jlee;	state Exp;
branches;
next	4.33;
commitid	GWLnKhwlawnTD5Ny;

4.33
date	2015.11.29.20.34.43;	author jlee;	state Exp;
branches;
next	4.32;
commitid	X917PzTaosbDQ1Ly;

4.32
date	2015.02.24.00.25.08;	author jlee;	state Exp;
branches;
next	4.31;
commitid	B1b4uf3XadvH5cby;

4.31
date	2015.02.24.00.18.01;	author jlee;	state Exp;
branches;
next	4.30;
commitid	bwAKx0u0U03g3cby;

4.30
date	2015.02.20.22.00.05;	author jlee;	state Exp;
branches;
next	4.29;
commitid	Y4rZtzOMEfbVnNay;

4.29
date	2015.02.16.20.52.27;	author jlee;	state Exp;
branches;
next	4.28;
commitid	OjWtIwiTjABG8hay;

4.28
date	2015.02.16.14.28.43;	author jballance;	state Exp;
branches;
next	4.27;
commitid	Opb0gcw7dLV21fay;

4.27
date	2015.02.14.18.31.43;	author jlee;	state Exp;
branches;
next	4.26;
commitid	PzpEhkyiJLuoq0ay;

4.26
date	2015.02.14.00.46.19;	author jlee;	state Exp;
branches;
next	4.25;
commitid	7V3sVxHfYkNTwU9y;

4.25
date	2015.02.12.23.33.06;	author jballance;	state Exp;
branches;
next	4.24;
commitid	9NbbcEtKle1M9M9y;

4.24
date	2015.02.11.14.25.52;	author jballance;	state Exp;
branches;
next	4.23;
commitid	6EKF0rYxx0X1aB9y;

4.23
date	2015.02.10.01.24.57;	author jballance;	state Exp;
branches;
next	4.22;
commitid	swACId1zhgf7So9y;

4.22
date	2015.02.08.16.17.53;	author srevill;	state Exp;
branches;
next	4.21;
commitid	diy9pjBgTsmrSd9y;

4.21
date	2014.03.09.16.07.21;	author jlee;	state Exp;
branches;
next	4.20;
commitid	TZY0XSUVr5ArC2sx;

4.20
date	2014.01.19.17.22.15;	author jlee;	state Exp;
branches;
next	4.19;
commitid	dGze9YD5M2lNBKlx;

4.19
date	2013.12.15.22.00.52;	author jlee;	state Exp;
branches;
next	4.18;
commitid	Y1CypBuj2rr7hhhx;

4.18
date	2013.01.06.21.19.50;	author rsprowson;	state Exp;
branches;
next	4.17;
commitid	Xbz0V5WctaNB4czw;

4.17
date	2012.08.28.07.08.03;	author rsprowson;	state Exp;
branches;
next	4.16;
commitid	oDpFFAGAvHPszhiw;

4.16
date	2012.08.12.16.21.21;	author rsprowson;	state Exp;
branches;
next	4.15;
commitid	nNXWhBWs82za9hgw;

4.15
date	2012.07.14.19.38.52;	author rsprowson;	state Exp;
branches;
next	4.14;
commitid	YTNC4KmzhMQIazcw;

4.14
date	2012.01.14.23.04.49;	author srevill;	state Exp;
branches;
next	4.13;
commitid	M49bYcHrcN15acPv;

4.13
date	2003.02.03.10.26.32;	author rsprowson;	state Exp;
branches;
next	4.12;

4.12
date	2002.04.12.13.50.38;	author srevill;	state Exp;
branches;
next	4.11;

4.11
date	2001.03.21.11.12.30;	author dcotton;	state Exp;
branches;
next	4.10;

4.10
date	2001.03.01.09.57.11;	author mstephen;	state Exp;
branches;
next	4.9;

4.9
date	2000.06.06.12.42.58;	author kbracey;	state Exp;
branches;
next	4.8;

4.8
date	2000.03.24.18.03.30;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	2000.01.10.10.59.27;	author kbracey;	state Exp;
branches;
next	4.6;

4.6
date	99.10.12.13.53.19;	author kbracey;	state Exp;
branches;
next	4.5;

4.5
date	99.09.16.17.38.09;	author kbracey;	state Exp;
branches;
next	4.4;

4.4
date	99.09.16.17.09.00;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	99.09.16.13.19.18;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.09.21.13.53.44;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	98.09.21.13.50.14;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.55
log
@Improve mode substitution logic
Detail:
  This updates ScreenModes to use similar mode substition logic to Kernel-6_14:
  - Try higher colour depths
  - Try lower colour depths
  - Try alternate resolutions (half-width non-double-pixel if original was double-pixel, assorted industry-standard resolutions, and monitor preferred resolution/timings)
  - Plus tries to preserve as many attributes as possible (eigen values, gap mode type, etc.)
  Additionally, LineLength values in the input mode selector block will be used to influence the VIDC list ExtraBytes value, as per the kernel
  File changes:
  - c/ScrModes - Update Service_ModeTranslation and Service_ModeExtension handlers, as described above
  - h/modex - "const PixelFormatRef" is a const pointer to a non-const PixelFormat, but we want "const PixelFormat *", for a pointer to a const PixelFormat
Admin:
  Tested on Raspberry Pi 3, Iyonix, IGEPv5
  Note that we can't easily remove the Service_ModeTranslation handler from ScreenModes and rely purely on the one in the kernel because the kernel can't easily see which modes ScreenModes provides (ditto other Service_ModeTranslation handlers).


Version 0.71. Tagged as 'ScrModes-0_71'
@
text
@/* (0.71)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.71
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                07 Nov 2018

#define Module_MajorVersion             "0.71"
#define Module_Version                  71
#define Module_MinorVersion             ""
#define Module_Date                     "07 Nov 2018"

#define Module_ApplicationDate          "07-Nov-18"

#define Module_ComponentName            "ScrModes"
#define Module_ComponentPath            "apache/RiscOS/Sources/Video/UserI/ScrModes"

#define Module_FullVersion              "0.71"
#define Module_HelpVersion              "0.71 (07 Nov 2018)"
#define Module_LibraryVersionInfo       "0:71"
@


4.54
log
@Fix memory leak and undefined behaviour
edidsupport.c: for each CVT3 and standard timing block encountered a ModeDescription was allocated but never used, thus leaked.
ScrModes.c: start the bit masking loop at 0, otherwise a mask of 1<<-1 is used.
Found by cppcheck static analysis.

Aside - edidsupport.c the calls to dtd_block_to_modedesc() could be refactored to let it do the allocation, rather than each caller doing so and having to deal with clean up on error. Not done in these changes.

Version 0.70. Tagged as 'ScrModes-0_70'
@
text
@d1 1
a1 1
/* (0.70)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.70
d9 1
a9 1
#define Module_Date_CMHG                25 Sep 2018
d11 2
a12 2
#define Module_MajorVersion             "0.70"
#define Module_Version                  70
d14 1
a14 1
#define Module_Date                     "25 Sep 2018"
d16 1
a16 1
#define Module_ApplicationDate          "25-Sep-18"
d19 1
a19 1
#define Module_ComponentPath            "castle/RiscOS/Sources/Video/UserI/ScrModes"
d21 3
a23 3
#define Module_FullVersion              "0.70"
#define Module_HelpVersion              "0.70 (25 Sep 2018)"
#define Module_LibraryVersionInfo       "0:70"
@


4.53
log
@Allow selection of BBC gap modes via mode selector blocks
Detail:
  c/ScrModes - Adjust pixel format selection to take into account BBC gap modes, which have non-standard NColour values.
Admin:
  Tested on BB-xM


Version 0.69. Tagged as 'ScrModes-0_69'
@
text
@d1 1
a1 1
/* (0.69)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.69
d9 1
a9 1
#define Module_Date_CMHG                16 Sep 2018
d11 2
a12 2
#define Module_MajorVersion             "0.69"
#define Module_Version                  69
d14 1
a14 1
#define Module_Date                     "16 Sep 2018"
d16 1
a16 1
#define Module_ApplicationDate          "16-Sep-18"
d21 3
a23 3
#define Module_FullVersion              "0.69"
#define Module_HelpVersion              "0.69 (16 Sep 2018)"
#define Module_LibraryVersionInfo       "0:69"
@


4.52
log
@Service call API clean up
There's no need to graft in a special sub-sub-reason for Service_DisplayChanged, since ScrModes always reads the EDID at power up the data blob is already there. To force it to be used (in situations where the user had selected a disc based textual MDF) simply load it with *LoadModeFile.

Version 0.68. Tagged as 'ScrModes-0_68'
@
text
@d1 1
a1 1
/* (0.68)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.68
d9 1
a9 1
#define Module_Date_CMHG                31 Mar 2018
d11 2
a12 2
#define Module_MajorVersion             "0.68"
#define Module_Version                  68
d14 1
a14 1
#define Module_Date                     "31 Mar 2018"
d16 1
a16 1
#define Module_ApplicationDate          "31-Mar-18"
d21 3
a23 3
#define Module_FullVersion              "0.68"
#define Module_HelpVersion              "0.68 (31 Mar 2018)"
#define Module_LibraryVersionInfo       "0:68"
@


4.51
log
@Make EDID handling more robust
Detail:
  c/edidsupport:
  - Make readedid() check that the EDID has a valid header. Previously only the checksum was checked, which is wholly insufficient (e.g. an EDID block full of null bytes would be considered valid). loadedid() also updated for consistency, although with the current code the header will have already been detected by loadmodefile().
  - Add some extra checks to readedidblock() to cope with more situations in which the GraphicsV call could fail. Fix confusing comment/code ordering.
  h/errors, Resources/Germany/Messages, Resources/UK/Messages - Add new "Invalid EDID block" error, for use when no valid header is found
Admin:
  Tested on Raspberry Pi 3
  Booting an EDID-enabled Pi without a monitor (and with the broken BCMVideo 0.47) no longer results in an (unintelligible) error box on entry to the desktop + system stuck in mode 0
  However, note that other issues in the boot sequence mean that booting with EDID enabled and no monitor still isn't 100% working (PreDesk Repeat will terminate early, potentially skipping some directories)


Version 0.67. Tagged as 'ScrModes-0_67'
@
text
@d1 1
a1 1
/* (0.67)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.67
d9 1
a9 1
#define Module_Date_CMHG                11 Jul 2017
d11 2
a12 2
#define Module_MajorVersion             "0.67"
#define Module_Version                  67
d14 1
a14 1
#define Module_Date                     "11 Jul 2017"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jul-17"
d21 3
a23 3
#define Module_FullVersion              "0.67"
#define Module_HelpVersion              "0.67 (11 Jul 2017)"
#define Module_LibraryVersionInfo       "0:67"
@


4.50
log
@Fix EDID use at startup
Detail:
  c/ScrModes - Re-introduce the using_edid check in the Service_DsiplayChanged handler, that was removed in ScreenModes 0.64.
  Removing the check completely breaks automatic EDID use (via MonitorType EDID), causing the kernel to panic and treat everything as mode 0 (due to no mode definitions being available).
Admin:
  Tested on Raspberry Pi 3
  Should fix issue reported on forums (bad screen mode during boot after upgrading from RC15):
  https://www.riscosopen.org/forum/forums/4/topics/9342


Version 0.66. Tagged as 'ScrModes-0_66'
@
text
@d1 1
a1 1
/* (0.66)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.66
d9 1
a9 1
#define Module_Date_CMHG                17 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "0.66"
#define Module_Version                  66
d14 1
a14 1
#define Module_Date                     "17 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "0.66"
#define Module_HelpVersion              "0.66 (17 Jun 2017)"
#define Module_LibraryVersionInfo       "0:66"
@


4.49
log
@Add support for new GraphicsV_VetMode2 call
Detail:
  VetMode2 allows the driver to give the OS extra feedback about a proposed mode. In particular, it allows the driver to suggest a value for the ExtraBytes control list item, so by using the VetMode2 call ScreenModes is able to support modes where the video driver requires extra padding to be added to the framebuffer.
  h/modex - Remove local definitions of control list item numbers. Reserve space for one extra control list item in the VIDCList structure.
  c/ScrModes - Use Global/VIDCList.h for control list item numbers. Update mode_valid to make use of VetMode2 where available, and give it the ability to copy the resulting VIDCList into a caller-supplied buffer, allowing service_modeextension to easily use the correct ExtraBytes setting.
Admin:
  Tested on Raspberry Pi 3
  Requires Kernel-5_82


Version 0.65. Tagged as 'ScrModes-0_65'
@
text
@d1 1
a1 1
/* (0.65)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.65
d9 1
a9 1
#define Module_Date_CMHG                07 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "0.65"
#define Module_Version                  65
d14 1
a14 1
#define Module_Date                     "07 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "0.65"
#define Module_HelpVersion              "0.65 (07 Jun 2017)"
#define Module_LibraryVersionInfo       "0:65"
@


4.48
log
@Remove ReadEDID command. Extend Service_DisplayChanged response
Detail:
ReadEDID command removed. New subreason code added to reason code 0
of Service_DisplayChanged to oblige ScrModes to load the EDID based
modes it discovered. Required because current behaviour would ignore
any EDID based modes once a LoadModeFile command had been issued.
Admin:
Tested on iMx6

Version 0.64. Tagged as 'ScrModes-0_64'
@
text
@d1 1
a1 1
/* (0.64)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.64
d9 1
a9 1
#define Module_Date_CMHG                01 May 2017
d11 2
a12 2
#define Module_MajorVersion             "0.64"
#define Module_Version                  64
d14 1
a14 1
#define Module_Date                     "01 May 2017"
d16 1
a16 1
#define Module_ApplicationDate          "01-May-17"
d21 3
a23 3
#define Module_FullVersion              "0.64"
#define Module_HelpVersion              "0.64 (01 May 2017)"
#define Module_LibraryVersionInfo       "0:64"
@


4.46
log
@  Reinstall *readedid command as it IS needed in some circumstances
Detail:
Admin:
  tested on iMx6

Version 0.62. Tagged as 'ScrModes-0_62'
@
text
@d1 1
a1 1
/* (0.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.62
d9 1
a9 1
#define Module_Date_CMHG                12 Mar 2017
d11 2
a12 2
#define Module_MajorVersion             "0.62"
#define Module_Version                  62
d14 1
a14 1
#define Module_Date                     "12 Mar 2017"
d16 1
a16 1
#define Module_ApplicationDate          "12-Mar-17"
d21 3
a23 3
#define Module_FullVersion              "0.62"
#define Module_HelpVersion              "0.62 (12 Mar 2017)"
#define Module_LibraryVersionInfo       "0:62"
@


4.45
log
@Offer export of raw EDID blob and complementary MDF export
Detail:
  Export the EDID raw data as a file in ResourceFS. This allows the Screen Setup plugin to scan that directory to pick up the currently connected monitor, and similarly select it from !Boot.Choices.PreDesk. The EDID data can also be drag & drop copied or exported for offline analysis.
  Add SaveModeFile command. This differs in that it works on the current set, to be symmetrical with LoadModeFile which loads the current set. Also fixes issues of losing the original mode names given; NULL pointer dereference when the EDID block contains no modes (eg. VIDCDriver); and no long writes out malformed MDFs which can't be loaded into !MakeModes (this seems to be because the CreateModeFile command was based on a stale copy of EDIDDecode which fixed the same bug circa 2012).
  Query the current GraphicsV driver for the deepest colour depth for the preferred mode, rather than assuming 32bpp is always possible (eg. because of bandwidth or graphics controller constraints).
  If the configured MonitorType is EDID but no EDID could be read, or it was corrupt, substitute a safe VESA monitor to allow the kernel to select something close to MODE 28.
  Add ScreenModes_Features SWI so the Screen Setup plugin knows whether it's safe to offer EDID in its dialogues.
  Retire the ReadEDID command (no longer needed since LoadModeFile can load the exported EDID blob, or one from disc) and CreateModeFile commands (see SaveModeFile).
  Internationalise the default monitor title ("Unidentified") used when EDID doesn't contain one.
Admin:
  New file - doc/BootStates documents all possible situations, and their recovery, for both the MDF and (non-hotplug) EDID schemes.
  New file - doc/EDIDGoals states the aims of the EDID support from both a user and support perspective.

  Submission for the EDID bounty.

Version 0.61. Tagged as 'ScrModes-0_61'
@
text
@d1 1
a1 1
/* (0.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.61
d9 1
a9 1
#define Module_Date_CMHG                05 Mar 2017
d11 2
a12 2
#define Module_MajorVersion             "0.61"
#define Module_Version                  61
d14 1
a14 1
#define Module_Date                     "05 Mar 2017"
d16 1
a16 1
#define Module_ApplicationDate          "05-Mar-17"
d21 3
a23 3
#define Module_FullVersion              "0.61"
#define Module_HelpVersion              "0.61 (05 Mar 2017)"
#define Module_LibraryVersionInfo       "0:61"
@


4.44
log
@Check for array bounds
Detail:
  Define MAXDMTMODENUM to guard against requesting DMT timing not in our table. Assert that the table size matches the define.
  Lowercased some 'X' (edidsupport.c), change to _swix (mdfsupport.c).
Admin:
  Submission for the EDID bounty.

Version 0.60. Tagged as 'ScrModes-0_60'
@
text
@d1 1
a1 1
/* (0.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.60
d11 2
a12 2
#define Module_MajorVersion             "0.60"
#define Module_Version                  60
d21 3
a23 3
#define Module_FullVersion              "0.60"
#define Module_HelpVersion              "0.60 (05 Mar 2017)"
#define Module_LibraryVersionInfo       "0:60"
@


4.43
log
@Fix typo in DMT modes table
Detail:
  c/tables - 540 != 640
Admin:
  Tested on Raspberry Pi


Version 0.59. Tagged as 'ScrModes-0_59'
@
text
@d1 1
a1 1
/* (0.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.59
d9 1
a9 1
#define Module_Date_CMHG                10 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "0.59"
#define Module_Version                  59
d14 1
a14 1
#define Module_Date                     "10 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "10-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "0.59"
#define Module_HelpVersion              "0.59 (10 Dec 2016)"
#define Module_LibraryVersionInfo       "0:59"
@


4.42
log
@Resolve allocation clash with RISCOS Ltd
Detail:
  Some cross-checking against the RISC OS Select documentation revealed that ScreenModes_ReadInfo 1 had already been claimed by ROL for the purpose of reading the monitor's supported DMPS state, causing a clash with our recently-introduced usage of reading the monitor speaker mask.
  Implement ScreenModes_ReadInfo 1 as per ROL's spec, and change the "read speaker mask" call to ScreenModes_ReadInfo 2.
  File changes:
  - c/ScrModes, hdr/ScrModes - as above
Admin:
  Tested on Raspberry Pi


Version 0.58. Tagged as 'ScrModes-0_58'
@
text
@d1 1
a1 1
/* (0.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.58
d9 1
a9 1
#define Module_Date_CMHG                26 Nov 2016
d11 2
a12 2
#define Module_MajorVersion             "0.58"
#define Module_Version                  58
d14 1
a14 1
#define Module_Date                     "26 Nov 2016"
d16 1
a16 1
#define Module_ApplicationDate          "26-Nov-16"
d21 3
a23 3
#define Module_FullVersion              "0.58"
#define Module_HelpVersion              "0.58 (26 Nov 2016)"
#define Module_LibraryVersionInfo       "0:58"
@


4.41
log
@Do fill in DPMS support
Detail:
  Don't ignore the monitor's power saving features for EDID; fill in the DPMS value properly.
Admin:
  Submission for the EDID bounty.

Version 0.57. Tagged as 'ScrModes-0_57'
@
text
@d1 1
a1 1
/* (0.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.57
d9 1
a9 1
#define Module_Date_CMHG                06 Aug 2016
d11 2
a12 2
#define Module_MajorVersion             "0.57"
#define Module_Version                  57
d14 1
a14 1
#define Module_Date                     "06 Aug 2016"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-16"
d21 3
a23 3
#define Module_FullVersion              "0.57"
#define Module_HelpVersion              "0.57 (06 Aug 2016)"
#define Module_LibraryVersionInfo       "0:57"
@


4.40
log
@Take advantage of tail of generate functions being common
Detail:
  Now all generation steps end in compute_modedescription()/add_proposed_mode()/display_mode_parameters(), combine these steps into the add_proposed_mode() function.
  Fix for CVT and GTF generation steps never setting the 'priority' member of the descriptor. These are now set to 6 per Table 5.1 of EDID spec 1.4.
Admin:
  Submission for the EDID bounty.

Version 0.56. Tagged as 'ScrModes-0_56'
@
text
@d1 1
a1 1
/* (0.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.56
d9 1
a9 1
#define Module_Date_CMHG                30 Jul 2016
d11 2
a12 2
#define Module_MajorVersion             "0.56"
#define Module_Version                  56
d14 1
a14 1
#define Module_Date                     "30 Jul 2016"
d16 1
a16 1
#define Module_ApplicationDate          "30-Jul-16"
d21 3
a23 3
#define Module_FullVersion              "0.56"
#define Module_HelpVersion              "0.56 (30 Jul 2016)"
#define Module_LibraryVersionInfo       "0:56"
@


4.39
log
@Switch to integer implementation
Detail:
  The dynamic range of the values being computed easily fit within integer types, so use these instead of doubles. This makes ScrModes independent of its position in intialisation with respect to FPEmulator once more, and saves 1k of code space too.
  Functions generate_mode_using_gtf(), generate_mode_using_cvt_rb(), generate_cvt3_timing() affected.
Admin:
  Test added to brute force compare float and fixed point results.
  Submission for the EDID bounty.

Version 0.55. Tagged as 'ScrModes-0_55'
@
text
@d1 1
a1 1
/* (0.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.55
d11 2
a12 2
#define Module_MajorVersion             "0.55"
#define Module_Version                  55
d21 3
a23 3
#define Module_FullVersion              "0.55"
#define Module_HelpVersion              "0.55 (30 Jul 2016)"
#define Module_LibraryVersionInfo       "0:55"
@


4.38
log
@Fix bug in CVT-RB timing calculation, add GTF range check
Detail:
  Rounding the pixel clock to 0.25MHz was not correctly performed due to clock step division being outside the floor() function, so all times came out in steps of 1MHz.
  In GTF timing with interlacing v_lines_rqd specifies ROUND(v_lines/2,0) rather than ROUNDDOWN(v_lines/2,0).
  Abandon GTF calculations early if they result in a -ve duty cycle.
  Update margins to 1.8% from standard.
Admin:
  Mode with non-multiple-of-1MHz clock tested, now matches VESA CVT spreadsheet.
  GTF change not tested since int_rqd = 0 the code wasn't called.
  Margin% change not tested since margins_rqd = 0 the code wasn't called.
  Submission for the EDID bounty.

Version 0.54. Tagged as 'ScrModes-0_54'
@
text
@d1 1
a1 1
/* (0.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.54
d9 1
a9 1
#define Module_Date_CMHG                14 May 2016
d11 2
a12 2
#define Module_MajorVersion             "0.54"
#define Module_Version                  54
d14 1
a14 1
#define Module_Date                     "14 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "14-May-16"
d21 3
a23 3
#define Module_FullVersion              "0.54"
#define Module_HelpVersion              "0.54 (14 May 2016)"
#define Module_LibraryVersionInfo       "0:54"
@


4.37
log
@Add support for parsing CEA Short Video Descriptors (SVDs). Fix loaded EDID files being overwritten with monitor EDID during Service_DisplayChanged.
Detail:
  h/CEAModes - Table of CEA mode timings from CEA 861-D
  s/ScrModes - Implement process_cea_video_data_block() in order to support SVD parsing. Ensure loadedid() sets the EDIDEnabled flag to 0, to prevent the loaded EDID (potentially) being replaced during Service_DisplayChanged.
Admin:
  Tested on iMx6


Version 0.53. Tagged as 'ScrModes-0_53'
@
text
@d1 1
a1 1
/* (0.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.53
d9 1
a9 1
#define Module_Date_CMHG                10 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "0.53"
#define Module_Version                  53
d14 1
a14 1
#define Module_Date                     "10 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "10-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "0.53"
#define Module_HelpVersion              "0.53 (10 Jan 2016)"
#define Module_LibraryVersionInfo       "0:53"
@


4.36
log
@Fix *LoadModeFile not reporting errors when parsing EDID files. Fix another "RMA allocation failed" bug with audio format processing.
Detail:
  c/ScrModes - Fix loadedid() not returning errors from parseedid()
  c/ScrModes - Fix bad use of realloc() in add_audio_format() - if audio_format_count hits zero then it's expected for realloc to return NULL.
Admin:
  Tested on iMx6


Version 0.52. Tagged as 'ScrModes-0_52'
@
text
@d1 1
a1 1
/* (0.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.52
d9 1
a9 1
#define Module_Date_CMHG                08 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "0.52"
#define Module_Version                  52
d14 1
a14 1
#define Module_Date                     "08 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "08-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "0.52"
#define Module_HelpVersion              "0.52 (08 Jan 2016)"
#define Module_LibraryVersionInfo       "0:52"
@


4.35
log
@Fix audio format merge logic
Detail:
  c/ScrModes - When removing 'candidate' from the list of audio formats, it's the number of formats which we want to decrement, not the pointer to the start of the list.
Admin:
  Tested on iMx6
  Fixes "RMA allocation failed" and other issues when dealing with monitors with complex audio capabilities


Version 0.51. Tagged as 'ScrModes-0_51'
@
text
@d1 1
a1 1
/* (0.51)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.51
d9 1
a9 1
#define Module_Date_CMHG                06 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "0.51"
#define Module_Version                  51
d14 1
a14 1
#define Module_Date                     "06 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "0.51"
#define Module_HelpVersion              "0.51 (06 Jan 2016)"
#define Module_LibraryVersionInfo       "0:51"
@


4.34
log
@Fix a few issues with EDID established timings
Detail:
  c/ScrModes:
  - Added established timings for 720x400 @@ 70Hz to be used in place of the auto-generated timings. For a BenQ FP737s-D, these match the expected timings listed in the manual, and they actually result in a picture displaying (auto-generated timings did not).
  - Split the guts of generate_dmt_mode out into a separate function so it can easily be used for adding the 720x400 @@ 70Hz ModeDefinition
  - Fix established timing handling to only call generate_dmt_mode if the DMT defines timings for a given mode (old logic meant that only 720x400 @@ 70Hz was falling through to the auto-generate case)
  - Fix established timing auto-generation to cope with the possibility of timings_byte being non-zero
Admin:
  Tested on iMx6 on a variety of monitors
  720x400 @@ 70Hz now displays correctly on a FP737s-D
  640x480 @@ 67Hz now works too (albeit with a warning about being a non-preset mode, this one is listed in the EDID but not in the manual)


Version 0.50. Tagged as 'ScrModes-0_50'
@
text
@d1 1
a1 1
/* (0.50)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.50
d9 1
a9 1
#define Module_Date_CMHG                15 Dec 2015
d11 2
a12 2
#define Module_MajorVersion             "0.50"
#define Module_Version                  50
d14 1
a14 1
#define Module_Date                     "15 Dec 2015"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-15"
d21 3
a23 3
#define Module_FullVersion              "0.50"
#define Module_HelpVersion              "0.50 (15 Dec 2015)"
#define Module_LibraryVersionInfo       "0:50"
@


4.33
log
@Add support for parsing and reporting the contents of CEA 861-D audio-related EDID blocks
Detail:
  Makefile - Export a C version of hdr/ScrModes
  Resources/Germany/Messages, Resources/UK/Messages, h/errors - Add new error message
  cmhg/ScrModesv, hdr/ScrModes - Declare existence of ScreenModes_EnumerateAudioFormats SWI. Declare ScreenModes_ReadInfo reason codes.
  h/modex - Extend MonitorDefinition struct to allow it to store the speaker mask & audio format information that's extracted from the EDID
  c/ScrModes - Extend support for processing of CEA extension blocks. All block revisions > 0 should now be accepted, and rudimentary parsing of CEA data block collections is implemented (currently, only extracts information from audio related blocks). Add SWI ScreenModes_EnumerateAudioFormats to allow details of the supported formats to be returned in either "raw" or "friendly" forms. Add ScreenModes_ReadInfo reason code 1 to allow reading of the speaker mask (+ validity bits). Also fix *LoadModeFile to allow EDID blocks to be loaded without first having to issue *ReadEDID first (EDIDEnabled flag issue).
Admin:
  Tested on iMX6 with assorted EDID blocks
  German messages file in need of translation


Version 0.49. Tagged as 'ScrModes-0_49'
@
text
@d1 1
a1 1
/* (0.49)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.49
d9 1
a9 1
#define Module_Date_CMHG                29 Nov 2015
d11 2
a12 2
#define Module_MajorVersion             "0.49"
#define Module_Version                  49
d14 1
a14 1
#define Module_Date                     "29 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "29-Nov-15"
d21 3
a23 3
#define Module_FullVersion              "0.49"
#define Module_HelpVersion              "0.49 (29 Nov 2015)"
#define Module_LibraryVersionInfo       "0:49"
@


4.32
log
@Fix some more sync polarity issues. Don't support DTDs for stereoscopic modes.
Detail:
  c/ScrModes - Replace magic numbers used for sync polarities with HSync_Positive, VSync_Negative, etc. #defines. Fix GTF2 polarity to be correct. Fix CVT/CVT RB polarities to be correct (+ some incorrect code indentation). Make dtd_block_to_modedesc return true/false for success/failure so we can reject stereoscopic 3D modes.
Admin:
  Tested on Pandaboard


Version 0.48. Tagged as 'ScrModes-0_48'
@
text
@d1 1
a1 1
/* (0.48)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.48
d9 1
a9 1
#define Module_Date_CMHG                24 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.48"
#define Module_Version                  48
d14 1
a14 1
#define Module_Date                     "24 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "24-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.48"
#define Module_HelpVersion              "0.48 (24 Feb 2015)"
#define Module_LibraryVersionInfo       "0:48"
@


4.31
log
@Fix decoding of DTD sync polarities. Add support for some missing established timings.
Detail:
  c/ScrModes - Fixed decoding of DTD polarties in dtd_block_to_modedesc. Add support for some missing established timings (generated by GTF/CVT as we don't have any known-good values to use as a reference)
Admin:
  Tested on Pandaboard
  Submission from William Harden


Version 0.47. Not tagged
@
text
@d1 1
a1 1
/* (0.47)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.47
d11 2
a12 2
#define Module_MajorVersion             "0.47"
#define Module_Version                  47
d21 3
a23 3
#define Module_FullVersion              "0.47"
#define Module_HelpVersion              "0.47 (24 Feb 2015)"
#define Module_LibraryVersionInfo       "0:47"
@


4.30
log
@Add support for CVT 3 byte codes & VTB-EXT blocks. Other misc fixes.
Detail:
  c/ScrModes, h/modex - Added support for CVT 3 byte codes & VTB-EXT blocks. Add framework for sorting modes by EDID priority. Move CEA extension block handling into its own function & increase error checking.
  Resources/Germany/CmdHelp, Resources/UK/CmdHelp - Fix missing message token & incorrect syntax of syntax message
Admin:
  Code submission from William Harden
  Tested on Raspberry Pi


Version 0.47. Tagged as 'ScrModes-0_47'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                20 Feb 2015
d14 1
a14 1
#define Module_Date                     "20 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "20-Feb-15"
d22 1
a22 1
#define Module_HelpVersion              "0.47 (20 Feb 2015)"
@


4.29
log
@Fix bad merge. Improve Get_DTD_ASCII & MDF saving.
Detail:
  c/ScrModes - Fix a bad merge causing a compute_modedescription() call to go missing. Fix Get_DTD_ASCII to avoid reading one byte too many, and to ensure the buffer is null terminated. Also strip any control characters. Improve MDF saving to return an error if the file couldn't be created, and to substitute various unsafe characters with underscores
Admin:
  Tested on Pandaboard


Version 0.46. Tagged as 'ScrModes-0_46'
@
text
@d1 1
a1 1
/* (0.46)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.46
d9 1
a9 1
#define Module_Date_CMHG                16 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.46"
#define Module_Version                  46
d14 1
a14 1
#define Module_Date                     "16 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "16-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.46"
#define Module_HelpVersion              "0.46 (16 Feb 2015)"
#define Module_LibraryVersionInfo       "0:46"
@


4.28
log
@  Added 'CreateModeFile' instead of optional file name on ReadEDID
  now needs a file path for where to save the created mdf. It'll use the name in
  the EDID for the file name
Admin:
 tested in iMx6

Version 0.45. Tagged as 'ScrModes-0_45'
@
text
@d1 1
a1 1
/* (0.45)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.45
d11 2
a12 2
#define Module_MajorVersion             "0.45"
#define Module_Version                  45
d21 3
a23 3
#define Module_FullVersion              "0.45"
#define Module_HelpVersion              "0.45 (16 Feb 2015)"
#define Module_LibraryVersionInfo       "0:45"
@


4.27
log
@Fix bogus vertical bounds reported in MDF comments
Detail:
  c/ScrModes - Make sure compute_modedescription is used to initialise frame_mhz (and line_hz). Fixes bogus vertical bounds in MDF comments, and will fix order of modes as defined by sorting function modes_inorder.
  Also change horizontal bounds comment to use stored line_hz value instead of computing it on the fly
Admin:
  Tested on Pandaboard


Version 0.44. Tagged as 'ScrModes-0_44'
@
text
@d1 1
a1 1
/* (0.44)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.44
d9 1
a9 1
#define Module_Date_CMHG                14 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.44"
#define Module_Version                  44
d14 1
a14 1
#define Module_Date                     "14 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "14-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.44"
#define Module_HelpVersion              "0.44 (14 Feb 2015)"
#define Module_LibraryVersionInfo       "0:44"
@


4.26
log
@Numerous tweaks and fixes
Detail:
  c/ScrModes:
  - Double-checked all the DMT timings against the spec and corrected a few mistakes in both the DMT timings list and the established timings list.
  - Tidied up DMT & established timing formatting a bit, made static data arrays const
  - Fixed preferred mode handling so that it'll forget the preferred mode if you load an MDF after reading EDID (preferred_mode->bit0 used as a cheeky flag, in preference over malloc/free). Fixes crash/bad behaviour on startup caused by returning a duff preferred mode from Service_MonitorLeadTranslation on startup.
  - Added sanity checks to avoid null pointer dereferences if preferred_mode or new_preferred_mode are null
  - Fixed preferred mode handling to work correctly with interlaced modes (fixed it to use the frame width & height instead of the field width & height)
  - Tweaked CVT extension block handling - swapped the "- 17" with "- 18" in order to take into account the presence of the checksum byte
  - Tweaked GTF calculation to round pixel_khz to nearest when calculating it. I don't think this is mentioned in the spec, but when comparing some timings against the GTF spreadsheet this fixes ScreenModes being off by 1kHz in a few cases
  - When outputing an MDF, don't output display range parameters if the block wasn't found
  - Fix MDF output of interlaced modes (frame width/height vs. field width/height), use more accurate mHz frame rate value instead of Hz one
  - Make GraphicsV_IICOp calls use the correct GraphicsV driver number; current_graphicsv_driver() function added to replace ad-hoc code in a couple of other places
  - Fix reading of extension blocks. Also tweak logic to avoid re-reading the first block.
  - Initialise 'thefilename' when calling parseedid so that ERR_NOMODES will display something vaguely sensible
Admin:
  Tested on Raspberry Pi (ROM), Pandaboard (ROM), Iyonix (softload)
  Appears to read EDID correctly from test monitors (BenQ FP737s, BenQ FP241W, ADI TD-523N), but there are some minor discrepancies in MDF output for some modes


Version 0.43. Tagged as 'ScrModes-0_43'
@
text
@d1 1
a1 1
/* (0.43)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.43
d11 2
a12 2
#define Module_MajorVersion             "0.43"
#define Module_Version                  43
d21 3
a23 3
#define Module_FullVersion              "0.43"
#define Module_HelpVersion              "0.43 (14 Feb 2015)"
#define Module_LibraryVersionInfo       "0:43"
@


4.25
log
@  Corrected 'interlaced:' to 'interlaced'
Detail:
Admin:


Version 0.42. Tagged as 'ScrModes-0_42'
@
text
@d1 1
a1 1
/* (0.42)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.42
d9 1
a9 1
#define Module_Date_CMHG                12 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.42"
#define Module_Version                  42
d14 1
a14 1
#define Module_Date                     "12 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "12-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.42"
#define Module_HelpVersion              "0.42 (12 Feb 2015)"
#define Module_LibraryVersionInfo       "0:42"
@


4.24
log
@  Made safer to deploy in current ROMS, and added further stuff to generated mdf
Detail:
  Added several things
  1) Readedid routine not called in module initialise.
  2) Flag added to determine whether old loadmodefile usage, or new readedid usage.
     Defaults to loadmodefile mode until a readedid command with no parameters,
     then swirches to edid reading mode. Reverts again if loadmodefile command is used.
  3) Tidied up error message when graphicsv fails to read the edid due to connectivity
     issues.
  4) Added hex dump of edid data blocks read to end of a saved mdf file.
  5) Implemented read of second ans subsequent 128 byte edid blocks, if required.

Admin:
  tested in imx rom

Version 0.41. Tagged as 'ScrModes-0_41'
@
text
@d1 1
a1 1
/* (0.41)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.41
d9 1
a9 1
#define Module_Date_CMHG                11 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.41"
#define Module_Version                  41
d14 1
a14 1
#define Module_Date                     "11 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "11-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.41"
#define Module_HelpVersion              "0.41 (11 Feb 2015)"
#define Module_LibraryVersionInfo       "0:41"
@


4.23
log
@  Extended to optionally generate a saved mdf instead of updating the current loaded mdf.
Detail:
  For field support it is extremely helpful to determine what a customer's monitor
  reports. Whilst (hopefully) this module will correctly produce modes the monitor
  can handle and the computer generate, when that doesn't happen support types need
  to be able to find out why, ideally using the same exact information that is generated.
  So:
  The ReadEDID command, if called with a full file name, will now save the discovered
  mdf information to that file instead of loading it.
  The resultant mdf can be used directly, or used as the basis for further
  modifications. It exports additional information in the header section
  which may prove helpful to 'mdf tweakers'.
Admin:
  Tested in imx rom. In 'advertised' use it is the same code as before. It is
  only when the  filename is given to the readedid command that different paths
  are invoked. Further enhancements may be desirable.

Version 0.40. Tagged as 'ScrModes-0_40'
@
text
@d1 1
a1 1
/* (0.40)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.40
d9 1
a9 1
#define Module_Date_CMHG                10 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.40"
#define Module_Version                  40
d14 1
a14 1
#define Module_Date                     "10 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "10-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.40"
#define Module_HelpVersion              "0.40 (10 Feb 2015)"
#define Module_LibraryVersionInfo       "0:40"
@


4.22
log
@Added prototype EDID support code.

This should be considered beta-quality work-in-progress code that gives us a
new *command (ReadEDID) that attempts to read the list of supported display
mode information from a connected monitory and configure the system for it,
as if an MDF file had been loaded containing that information.

Admin:

Community testing is required for this feature. Please try replacing the
LoadModeFile line in your !Boot.Choices.Boot.PreDesk.Configure.Monitor
file with a line saying "ReadEDID". If you get a sensible looking list
of modes when the machine boots, then things should be OK. If you see an
error, please get in touch with ROOL on the "Bounties - ReadEDID" topic.
You'll clearly need to be running a ROM with this version of ScreenModes
in it!

Version 0.39. Tagged as 'ScrModes-0_39'
@
text
@d1 1
a1 1
/* (0.39)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.39
d9 1
a9 1
#define Module_Date_CMHG                08 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.39"
#define Module_Version                  39
d14 1
a14 1
#define Module_Date                     "08 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "08-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.39"
#define Module_HelpVersion              "0.39 (08 Feb 2015)"
#define Module_LibraryVersionInfo       "0:39"
@


4.21
log
@Pay attention to Service_DisplayChanged
Detail:
  c/ScrModes, cmhg/ScrModesv - Fire off Service_ModeFileChanged whenever we receive Service_DisplayChanged, so that our clients are informed of the fact the mode list may have changed
Admin:
  Tested on Iyonix, BB-xM


Version 0.38. Tagged as 'ScrModes-0_38'
@
text
@d1 1
a1 1
/* (0.38)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.38
d9 1
a9 1
#define Module_Date_CMHG                09 Mar 2014
d11 2
a12 2
#define Module_MajorVersion             "0.38"
#define Module_Version                  38
d14 1
a14 1
#define Module_Date                     "09 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "09-Mar-14"
d21 3
a23 3
#define Module_FullVersion              "0.38"
#define Module_HelpVersion              "0.38 (09 Mar 2014)"
#define Module_LibraryVersionInfo       "0:38"
@


4.20
log
@Ensure syncpol word of VIDC list initialised correctly
Detail:
  h/modex - Define the syncpol flags as taking up a full word of space, to avoid bits 2-31 being left undefined when generating a VIDC list, and potentially resulting in wrong interlace setting being used
Admin:
  Tested on Raspberry Pi


Version 0.37. Tagged as 'ScrModes-0_37'
@
text
@d1 1
a1 1
/* (0.37)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.37
d9 1
a9 1
#define Module_Date_CMHG                19 Jan 2014
d11 2
a12 2
#define Module_MajorVersion             "0.37"
#define Module_Version                  37
d14 1
a14 1
#define Module_Date                     "19 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-14"
d21 3
a23 3
#define Module_FullVersion              "0.37"
#define Module_HelpVersion              "0.37 (19 Jan 2014)"
#define Module_LibraryVersionInfo       "0:37"
@


4.19
log
@Update to add support for new pixel formats and basic support for multiple GraphicsV drivers
Detail:
  c/ScrModes - All GraphicsV calls now use the current driver number instead of always calling driver 0. Get the list of supported pixel formats via GraphicsV 17 if implemented, otherwise fall back to GraphicsV 8. Generate old or new style mode provider blocks as appropriate.
  h/modex - Update definitions for new mode provider block format, new control list items
Admin:
  Tested in Tungsten, IOMD, OMAP3, BCM2835 ROMs
  Requires HdrSrc-2_38 and Kernel-5_35-4_79_2_203


Version 0.36. Tagged as 'ScrModes-0_36'
@
text
@d1 1
a1 1
/* (0.36)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.36
d9 1
a9 1
#define Module_Date_CMHG                15 Dec 2013
d11 2
a12 2
#define Module_MajorVersion             "0.36"
#define Module_Version                  36
d14 1
a14 1
#define Module_Date                     "15 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-13"
d21 3
a23 3
#define Module_FullVersion              "0.36"
#define Module_HelpVersion              "0.36 (15 Dec 2013)"
#define Module_LibraryVersionInfo       "0:36"
@


4.18
log
@Filter out impossible modes from a modefile super set
New function, build_a_vidclist() allows the GraphicsV Vet_Mode entry point to be called when validating a mode, so the graphics driver can decide on a mode by mode basis whether it can be achieved.
This resolves the problem where an MDF has a super set of modes that the hardware only supports a subset of.
Also
* Inlined inform_modefilechanged
* Removed redundant CFLAGS from makefile
* Made a few braces and spaces consistent with their surroundings

Tested in an IOMD ROM build on a machine with and without VRAM fitted, looking in display manager that the menus are rebuilt accordingly.
Fixes ticket #315.

Version 0.35. Tagged as 'ScrModes-0_35'
@
text
@d1 1
a1 1
/* (0.35)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.35
d9 1
a9 1
#define Module_Date_CMHG                06 Jan 2013
d11 2
a12 2
#define Module_MajorVersion             "0.35"
#define Module_Version                  35
d14 1
a14 1
#define Module_Date                     "06 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jan-13"
d21 3
a23 3
#define Module_FullVersion              "0.35"
#define Module_HelpVersion              "0.35 (06 Jan 2013)"
#define Module_LibraryVersionInfo       "0:35"
@


4.17
log
@Relax clipping of mode names
19 characters is a bit mean if you want to say "2048 x 1024 big monitor" or similar, so bumped it to 31+terminator.
100 characters for the monitor title is a bit lavish, since (in System font) display manager's title bar can only fit 33 characters, reduced to 31+terminator too.
Fixes ticket #302.

Version 0.34. Tagged as 'ScrModes-0_34'
@
text
@d1 1
a1 1
/* (0.34)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.34
d9 1
a9 1
#define Module_Date_CMHG                28 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.34"
#define Module_Version                  34
d14 1
a14 1
#define Module_Date                     "28 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "28-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.34"
#define Module_HelpVersion              "0.34 (28 Aug 2012)"
#define Module_LibraryVersionInfo       "0:34"
@


4.16
log
@Retire VIDCBandwidthLimit command
Was previously for internal use only, but largely irrelevant as the majoirty of targets don't contain a VIDC, and those that do use a GraphicsV driver anyway.
* CMHG and resources updated to remove the command from the command/syntax table
* Don't bother probing OS_ReadSysInfo 2 for the video controller, assume it's always GraphicsV
* Don't try vetting modes based on VIDC limitations (leave that to VIDC20Video module)
* Don't listen to the kernel's bandwidth limit suggestion, always use INT32_MAX
Also
* Fix potential null pointer dereference if there's not enough RAM to build an ICONSPRITES command
* Rather than setting up an atexit() handler in the module init, just use a module finalisation handler
* Makefile tickled to not use Norcroft specific flags

Version 0.33. Tagged as 'ScrModes-0_33'
@
text
@d1 1
a1 1
/* (0.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.33
d9 1
a9 1
#define Module_Date_CMHG                12 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.33"
#define Module_Version                  33
d14 1
a14 1
#define Module_Date                     "12 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "12-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.33"
#define Module_HelpVersion              "0.33 (12 Aug 2012)"
#define Module_LibraryVersionInfo       "0:33"
@


4.15
log
@Clean up pass
* Makefile recreated from fragments
* Swap to C99 types, remove 'machtypes.h'
* Use centralised SWI and service call definitions, remove 'newswis.h' and 'services.h'
* Error E21 taken out of resources, CMHG generates this one for free
* Compiler warnings squashed

Version 0.32. Tagged as 'ScrModes-0_32'
@
text
@d1 1
a1 1
/* (0.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.32
d9 1
a9 1
#define Module_Date_CMHG                14 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.32"
#define Module_Version                  32
d14 1
a14 1
#define Module_Date                     "14 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.32"
#define Module_HelpVersion              "0.32 (14 Jul 2012)"
#define Module_LibraryVersionInfo       "0:32"
@


4.14
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.31. Tagged as 'ScrModes-0_31'
@
text
@d1 1
a1 1
/* (0.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.31
d9 1
a9 1
#define Module_Date_CMHG                14 Jan 2012
d11 2
a12 2
#define Module_MajorVersion             "0.31"
#define Module_Version                  31
d14 1
a14 1
#define Module_Date                     "14 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jan-12"
d21 3
a23 3
#define Module_FullVersion              "0.31"
#define Module_HelpVersion              "0.31 (14 Jan 2012)"
#define Module_LibraryVersionInfo       "0:31"
@


4.13
log
@When the video controller is V_UNKNOWN (ie.not a VIDC) then an attempt
will be made to validate the desired bpp via GraphicsV.That way,when
the screen modes are enumerated only achievable ones are returned.
Also added an iconsprites command to the loadmodefile command,so that
if a sprite file exists in the same dir as the MDF it can override the
default display manager icon.

Version 0.30. Tagged as 'ScrModes-0_30'
@
text
@d1 1
a1 1
/* (0.30)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.30
d9 1
a9 1
#define Module_Date_CMHG                03 Feb 2003
d11 2
a12 2
#define Module_MajorVersion             "0.30"
#define Module_Version                  30
d14 1
a14 1
#define Module_Date                     "03 Feb 2003"
d16 1
a16 1
#define Module_ApplicationDate          "03-Feb-03"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Video/UserI/ScrModes"
d21 3
a23 3
#define Module_FullVersion              "0.30"
#define Module_HelpVersion              "0.30 (03 Feb 2003)"
#define Module_LibraryVersionInfo       "0:30"
@


4.12
log
@  Makefile improvements.
Detail:
  * Added/fixed the install rule for disc builds as required for the Baseline
    builds.
  * The MkClean file now calls stripdepnd to remove dynamic dependencies.
Admin:
  Builds and installs.

Version 0.29. Tagged as 'ScrModes-0_29'
@
text
@d1 1
a1 1
/* (0.29)
d4 1
a4 1
 * Last processed by srccommit version: 1.62.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.29
d9 1
a9 1
#define Module_Date_CMHG                12 Apr 2002
d11 2
a12 2
#define Module_MajorVersion             "0.29"
#define Module_Version                  29
d14 1
a14 1
#define Module_Date                     "12 Apr 2002"
d16 1
a16 2
#define Module_ApplicationDate2         "12-Apr-02"
#define Module_ApplicationDate4         "12-Apr-2002"
d21 3
a23 3
#define Module_FullVersion              "0.29"
#define Module_HelpVersion              "0.29 (12 Apr 2002)"
#define Module_LibraryVersionInfo       "0:29"
@


4.11
log
@    No changes
Detail:
    srccommitt'ed again to gain tag.
Admin:
    No changes.

Version 0.28. Tagged as 'ScrModes-0_28'
@
text
@d1 1
a1 1
/* (0.28)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.28
d9 1
a9 1
#define Module_Date_CMHG                21 Mar 2001
d11 2
a12 2
#define Module_MajorVersion             "0.28"
#define Module_Version                  28
d14 1
a14 1
#define Module_Date                     "21 Mar 2001"
d16 2
a17 2
#define Module_ApplicationDate2         "21-Mar-01"
#define Module_ApplicationDate4         "21-Mar-2001"
d22 3
a24 2
#define Module_FullVersion              "0.28"
#define Module_HelpVersion              "0.28 (21 Mar 2001)"
@


4.10
log
@added support for output_format keyword in MDFs, value of 1 means digital
intended for cases like video controller attached to Chrontel for TV display
untested

Version 0.27. Not tagged
@
text
@d1 1
a1 1
/* (0.27)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.27
d8 1
a8 1
#define Module_Date_CMHG                01 Mar 2001
d10 2
a11 2
#define Module_MajorVersion             "0.27"
#define Module_Version                  27
d13 1
a13 1
#define Module_Date                     "01 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "01-Mar-01"
#define Module_ApplicationDate4         "01-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "0.27"
#define Module_HelpVersion              "0.27 (01 Mar 2001)"
@


4.9
log
@Now attempts to substitute a 1bpp mode for unknown mode numbers passed to
Service_ModeTranslation - previously just left it to the Kernel, which would
select mode 25 with hilarious results on an NC/STB.

Version 0.27. Tagged as 'ScrModes-0_27'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                06 Jun 2000
d13 7
a19 1
#define Module_Date                     "06 Jun 2000"
d22 1
@


4.8
log
@"external_clock" keyword now parsed correctly within a mode.

Version 0.26. Tagged as 'ScrModes-0_26'
@
text
@d1 1
a1 1
/* (0.26)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.26
d8 1
a8 1
#define Module_Date_CMHG                24 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "0.26"
#define Module_Version                  26
d13 1
a13 1
#define Module_Date                     "24 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "0.26"
@


4.7
log
@Can now add the line "external_clock:xxx" to individual modes - this overrides
any directive (or lack of one) at the top of the file.

Untested, but required for Lazarus NTSC TV MDF.

Version 0.25. Tagged as 'ScrModes-0_25'
@
text
@d1 1
a1 1
/* (0.25)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.25
d8 1
a8 1
#define Module_Date_CMHG                10 Jan 2000
d10 2
a11 2
#define Module_MajorVersion             "0.25"
#define Module_Version                  25
d13 1
a13 1
#define Module_Date                     "10 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "0.25"
@


4.6
log
@Claims Service_ModeTranslation to get better alternatives than those the
Kernel generates, which are often not suitable for a TV.

Version 0.24. Tagged as 'ScrModes-0_24'
@
text
@d1 1
a1 1
/* (0.24)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	0.24
#define Module_MinorVersion_CMHG	
#define Module_Date_CMHG      		12 Oct 1999
d10 4
a13 4
#define Module_MajorVersion     	"0.24"
#define Module_Version                  24
#define Module_MinorVersion		""
#define Module_Date      		"12 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "0.24"
@


4.5
log
@Why is every modification taking me 3 attempts today? Too much MSG,
probably.

Version 0.23. Tagged as 'ScrModes-0_23'
@
text
@d1 1
a1 1
/* (0.23)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.23
d8 1
a8 1
#define Module_Date_CMHG      		16 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"0.23"
#define Module_Version                  23
d13 1
a13 1
#define Module_Date      		"16 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "0.23"
@


4.4
log
@Naughty Bracey broke the parser. He didn't realise people would want to use
"startmode". Straight to bed, without any supper.

Version 0.22. Tagged as 'ScrModes-0_22'
@
text
@d1 1
a1 1
/* (0.22)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.22
d10 2
a11 2
#define Module_MajorVersion     	"0.22"
#define Module_Version                  22
d15 1
a15 1
#define Module_FullVersion              "0.22"
@


4.3
log
@Added support for "external_clock" keyword - if specified, gives the
frequency of HCLK, and instructs the kernel to use it instead of the VCO.
Corresponds to video control parameter 9 (PRM 5a-126).

Version 0.21. Tagged as 'ScrModes-0_21'
@
text
@d1 1
a1 1
/* (0.21)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.21
d10 2
a11 2
#define Module_MajorVersion     	"0.21"
#define Module_Version                  21
d15 1
a15 1
#define Module_FullVersion              "0.21"
@


4.2
log
@Makefile changed to use LocalRes$Path and Link 5.08.
German resources imported.
Spinner branch merged.
Changed to use srccommit.

Version 0.20. Tagged as 'ScrModes-0_20'
@
text
@d1 1
a1 1
/* (0.20)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.20
d8 1
a8 1
#define Module_Date_CMHG      		21 Sep 1998
d10 2
a11 2
#define Module_MajorVersion     	"0.20"
#define Module_Version                  20
d13 1
a13 1
#define Module_Date      		"21 Sep 1998"
d15 1
@


4.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.19)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.19
d10 2
a11 2
#define Module_MajorVersion     	"0.19"
#define Module_Version                  19
@
