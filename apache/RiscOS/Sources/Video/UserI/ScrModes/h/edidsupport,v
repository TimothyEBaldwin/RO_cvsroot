head	4.2;
access;
symbols
	ScrModes-0_71:4.2
	ScrModes-0_70:4.2
	ScrModes-0_69:4.2
	ScrModes-0_68:4.2
	ScrModes-0_67:4.2
	ScrModes-0_66:4.2
	ScrModes-0_65:4.2
	ScrModes-0_64:4.2
	ScrModes-0_62:4.2
	ScrModes-0_61:4.2
	ScrModes-0_60:4.1
	ScrModes-0_59:4.1
	ScrModes-0_58:4.1
	ScrModes-0_57:4.1
	ScrModes-0_56-smalltables:4.1
	ScrModes-0_56:4.1
	ScrModes-0_55-mallocfree:4.1
	ScrModes-0_55-cvs3fix:4.1
	ScrModes-0_55:4.1
	ScrModes-0_53-split:4.1
	ScrModes-0_54:4.1;
locks; strict;
comment	@# @;


4.2
date	2017.03.05.15.21.11;	author rool;	state Exp;
branches;
next	4.1;
commitid	dv9rieZmjERhgnIz;

4.1
date	2016.05.14.12.45.38;	author rool;	state Exp;
branches;
next	;
commitid	DAkVsTOsI1rFSr6z;


desc
@@


4.2
log
@Offer export of raw EDID blob and complementary MDF export
Detail:
  Export the EDID raw data as a file in ResourceFS. This allows the Screen Setup plugin to scan that directory to pick up the currently connected monitor, and similarly select it from !Boot.Choices.PreDesk. The EDID data can also be drag & drop copied or exported for offline analysis.
  Add SaveModeFile command. This differs in that it works on the current set, to be symmetrical with LoadModeFile which loads the current set. Also fixes issues of losing the original mode names given; NULL pointer dereference when the EDID block contains no modes (eg. VIDCDriver); and no long writes out malformed MDFs which can't be loaded into !MakeModes (this seems to be because the CreateModeFile command was based on a stale copy of EDIDDecode which fixed the same bug circa 2012).
  Query the current GraphicsV driver for the deepest colour depth for the preferred mode, rather than assuming 32bpp is always possible (eg. because of bandwidth or graphics controller constraints).
  If the configured MonitorType is EDID but no EDID could be read, or it was corrupt, substitute a safe VESA monitor to allow the kernel to select something close to MODE 28.
  Add ScreenModes_Features SWI so the Screen Setup plugin knows whether it's safe to offer EDID in its dialogues.
  Retire the ReadEDID command (no longer needed since LoadModeFile can load the exported EDID blob, or one from disc) and CreateModeFile commands (see SaveModeFile).
  Internationalise the default monitor title ("Unidentified") used when EDID doesn't contain one.
Admin:
  New file - doc/BootStates documents all possible situations, and their recovery, for both the MDF and (non-hotplug) EDID schemes.
  New file - doc/EDIDGoals states the aims of the EDID support from both a user and support perspective.

  Submission for the EDID bounty.

Version 0.61. Tagged as 'ScrModes-0_61'
@
text
@/* Copyright 2016 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* edidsupport.h */
void release_edidblocks(void);
_kernel_oserror *loadedid(const char *file);
_kernel_oserror *readedid(int, bool);

/* EOF edidsupport.h */
@


4.1
log
@Split out MDF and EDID support
Detail:
  Main source file split into 3.
Admin:
  Tested briefly, functionality unchanged.
  Submission for the EDID bounty.
  Tagged as ScrModes-0_53-split
@
text
@d16 1
d18 1
a18 1
_kernel_oserror *readedid(int, const char *);
@

