head	4.2;
access;
symbols
	ScrModes-0_53:4.1
	ScrModes-0_52:4.1
	ScrModes-0_51:4.1
	ScrModes-0_50:4.1
	ScrModes-0_49:4.1
	ScrModes-0_48:4.1
	ScrModes-0_47:4.1
	ScrModes-0_46:4.1
	ScrModes-0_45:4.1
	ScrModes-0_44:4.1
	ScrModes-0_43:4.1
	ScrModes-0_42:4.1
	ScrModes-0_41:4.1
	ScrModes-0_40:4.1
	ScrModes-0_39:4.1;
locks; strict;
comment	@# @;


4.2
date	2016.05.14.12.40.25;	author rool;	state dead;
branches;
next	4.1;
commitid	UkO7RI5AYo6IQr6z;

4.1
date	2015.02.08.16.18.08;	author srevill;	state Exp;
branches;
next	;
commitid	diy9pjBgTsmrSd9y;


desc
@@


4.2
log
@Split out data tables, stylistic refactoring
Detail:
  Move the 500+ lines of tables into a new source file and remove storage inferred by former CEAModes.h.
  Tame some of the rampant style from various authors, even within 1 function, to something reasonably consistent.
  Uppercase the 'debug' macro to 'IFDEBUG'.
  Relocate ScrModes specific defines out of EDIDModes header, rename to edidmemory.h.
  Add monitor type 6 to monitors.h.
  Fix for unguarded debug printout "Can't allocate space for monitor list" in parseedid.
Admin:
  Tested briefly, functionality unchanged.
  Submission for the EDID bounty.
  Tagged as ScrModes-0_53-tables
@
text
@/* Copyright 2015 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* EDIDModes.h */

/* TODO: comments required throughout this file */

#define MAXMODENAMESIZE (25)

#define EDID_SIZE (128)

/* Defines which is the most advanced timing calculation available
 * We use DMT if defined for that mode and calculate using the timing
 * If not. If USE_DMT is highest it is DMT or nothing.
 */
#define EDID_USE_DMT   (0)
#define EDID_USE_GTF   (1)
#define EDID_USE_GTF2  (2)
#define EDID_USE_CVT   (3)
#define EDID_USE_CVTRB (4)

typedef struct _STDMODE
{
    char     ModeName[MAXMODENAMESIZE];
    uint32_t Refresh;
    uint32_t SyncPulse;
    uint32_t HTotal;
    uint32_t XRes;
    uint32_t HSync;
    uint32_t HFrontPorch;
    uint32_t HBackPorch;
    double   PixRate;
    uint32_t VTotal;
    uint32_t YRes;
    uint32_t VSync;
    uint32_t VFrontPorch;
    uint32_t VBackPorch;
} STDMODE;

typedef struct _EDIDBlock
{
    /* 8 bytes of header */
    uint8_t header[8];
    /* 10 bytes of vendor id */
    uint8_t manufacturer_id[2];
    uint8_t product_id[2];
    uint8_t serial[4];
    uint8_t week_made;
    uint8_t year_made;
    /* 2 bytes of EDID Structure and version */
    uint8_t edid_version;
    uint8_t edid_revision;
    /* 5 bytes of Basic parameters */
    uint8_t video_input_definition;
    uint8_t horizontal_screen_size; /* Listed in cm. Aspect ratio - landscape */
    uint8_t vertical_screen_size;   /* Listed in cm. Aspect ratio - portrait */
    uint8_t gamma;
    uint8_t feature_support;
    /* 10 bytes of colour characteristics */
    uint8_t colour_characteristics[10];
    /* 3 bytes of established timings */
    uint8_t established_timings[3];
    /* 16 bytes of standard timings identification 1-8 */
    uint8_t standard_timings[16];
    /* 72 bytes of 18 byte data blocks; */
    uint8_t data_block[4][18];
    /* Extension blocks */
    uint8_t extension_block_count;
    uint8_t checksum;
} EDIDBlock, *EDIDBlockRef;

typedef struct _EDIDExtensionBlock
{
    uint8_t tag;
    uint8_t revision;
    uint8_t data[125];
    uint8_t checksum;
} EDIDExtensionBlock, *EDIDExtensionBlockRef;
@


4.1
log
@Added prototype EDID support code.

This should be considered beta-quality work-in-progress code that gives us a
new *command (ReadEDID) that attempts to read the list of supported display
mode information from a connected monitory and configure the system for it,
as if an MDF file had been loaded containing that information.

Admin:

Community testing is required for this feature. Please try replacing the
LoadModeFile line in your !Boot.Choices.Boot.PreDesk.Configure.Monitor
file with a line saying "ReadEDID". If you get a sensible looking list
of modes when the machine boots, then things should be OK. If you see an
error, please get in touch with ROOL on the "Bounties - ReadEDID" topic.
You'll clearly need to be running a ROM with this version of ScreenModes
in it!

Version 0.39. Tagged as 'ScrModes-0_39'
@
text
@@

