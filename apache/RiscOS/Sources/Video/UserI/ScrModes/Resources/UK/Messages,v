head	4.9;
access;
symbols
	ScrModes-0_71:4.9
	ScrModes-0_70:4.9
	ScrModes-0_69:4.9
	ScrModes-0_68:4.9
	ScrModes-0_67:4.9
	ScrModes-0_66:4.8
	ScrModes-0_65:4.8
	ScrModes-0_64:4.8
	ScrModes-0_62:4.8
	ScrModes-0_61:4.8
	ScrModes-0_60:4.7
	ScrModes-0_59:4.7
	ScrModes-0_58:4.7
	ScrModes-0_57:4.7
	ScrModes-0_56-smalltables:4.7
	ScrModes-0_56:4.7
	ScrModes-0_55-mallocfree:4.7
	ScrModes-0_55-cvs3fix:4.7
	ScrModes-0_55:4.7
	ScrModes-0_53-split:4.7
	ScrModes-0_54:4.7
	ScrModes-0_53-tables:4.7
	ScrModes-0_53:4.6
	ScrModes-0_52:4.6
	ScrModes-0_51:4.6
	ScrModes-0_50:4.6
	ScrModes-0_49:4.6
	ScrModes-0_48:4.5
	ScrModes-0_47:4.5
	ScrModes-0_46:4.5
	ScrModes-0_45:4.5
	ScrModes-0_44:4.5
	ScrModes-0_43:4.5
	ScrModes-0_42:4.5
	ScrModes-0_41:4.5
	ScrModes-0_40:4.4
	ScrModes-0_39:4.4
	ScrModes-0_38:4.3
	ScrModes-0_37:4.3
	ScrModes-0_36:4.3
	ScrModes-0_35:4.3
	ScrModes-0_34:4.3
	ScrModes-0_33:4.3
	ScrModes-0_32:4.3
	ScrModes-0_31:4.2
	RO_5_07:4.2
	ScrModes-0_30:4.2
	ScrModes-0_29:4.2
	ScrModes-0_28:4.2
	dellis_autobuild_BaseSW:4.2
	ScrModes-0_27:4.2
	ScrModes-0_26:4.2
	sbrodie_sedwards_16Mar2000:4.2
	ScrModes-0_25:4.2
	ScrModes-0_24:4.2
	dcotton_autobuild_BaseSW:4.2
	ScrModes-0_23:4.2
	ScrModes-0_22:4.2
	ScrModes-0_21:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	ScrModes-0_20:4.2
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.2
	afrost_Funai01-33:4.1.7.2
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	ARTtmp:4.1.7.2.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.9
date	2017.07.11.21.11.57;	author jlee;	state Exp;
branches;
next	4.8;
commitid	emGX2N9I3ony5RYz;

4.8
date	2017.03.05.15.21.03;	author rool;	state Exp;
branches;
next	4.7;
commitid	dv9rieZmjERhgnIz;

4.7
date	2016.05.14.12.40.21;	author rool;	state Exp;
branches;
next	4.6;
commitid	UkO7RI5AYo6IQr6z;

4.6
date	2015.11.29.20.34.50;	author jlee;	state Exp;
branches;
next	4.5;
commitid	X917PzTaosbDQ1Ly;

4.5
date	2015.02.11.14.26.02;	author jballance;	state Exp;
branches;
next	4.4;
commitid	6EKF0rYxx0X1aB9y;

4.4
date	2015.02.08.16.18.00;	author srevill;	state Exp;
branches;
next	4.3;
commitid	diy9pjBgTsmrSd9y;

4.3
date	2012.07.14.19.38.57;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	YTNC4KmzhMQIazcw;

4.2
date	98.09.21.13.53.52;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.46.33;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.46.33;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.51.18;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.02.18;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.24.20;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.11.19.20.23;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.9
log
@Make EDID handling more robust
Detail:
  c/edidsupport:
  - Make readedid() check that the EDID has a valid header. Previously only the checksum was checked, which is wholly insufficient (e.g. an EDID block full of null bytes would be considered valid). loadedid() also updated for consistency, although with the current code the header will have already been detected by loadmodefile().
  - Add some extra checks to readedidblock() to cope with more situations in which the GraphicsV call could fail. Fix confusing comment/code ordering.
  h/errors, Resources/Germany/Messages, Resources/UK/Messages - Add new "Invalid EDID block" error, for use when no valid header is found
Admin:
  Tested on Raspberry Pi 3
  Booting an EDID-enabled Pi without a monitor (and with the broken BCMVideo 0.47) no longer results in an (unintelligible) error box on entry to the desktop + system stuck in mode 0
  However, note that other issues in the boot sequence mean that booting with EDID enabled and no monitor still isn't 100% working (PreDesk Repeat will terminate early, potentially skipping some directories)


Version 0.67. Tagged as 'ScrModes-0_67'
@
text
@#{DictTokens}
E00:File '%0' could not be opened
E01:RMA allocation failed
E02:Inconsistent parameters for mode '%1' in file %0
E03:Unexpected end of file at line %1 of file %0
E04:Character '%2' was expected at line %1 of file %0
E05:Overlarge value for parameter at line %1 of file %0
E06:Extraneous trailing input at line %1 of file %0
E07:Number expected at line %1 of file %0
E08:Keyword %2 was expected at line %1 of file %0
E09:Keyword %2 repeated at line %1 of file %0
E10:No mode_name field in definition ending at line %1 of file %0
E11:Incomplete definition for mode '%1' in file %0
E12:Unknown parameter name at line %1 of file %0
E13:Wrong context for keyword '%2' at line %1 of file %0
E14:Unknown file format code at line %1 of file %0
E15:Blank monitor title at line %1 of file %0
#(unused)E16:Blank mode name at line %1 of file %0
#(unused)E17:Duplicate mode name '%1' in file %0
E18:No mode definitions found in file %0
E19:Invalid parameter value at line %1 of file %0
E20:No monitor description file loaded
#(unused)E21:SWI value out of range for module ScreenModes
E22:Unknown ScreenModes_ReadInfo call
E23:Number expected
E24:Overlarge value for parameter
E25:EDID checksum is incorrect (block %0 of %1 failed) - cannot read monitor settings
E26:Unable to read EDID - does this hardware support it?
E27:EDID channel communications error
E28:Bad ScreenModes_EnumerateAudioFormats flags
E29:Invalid EDID block
NoName:Unidentified
@


4.8
log
@Offer export of raw EDID blob and complementary MDF export
Detail:
  Export the EDID raw data as a file in ResourceFS. This allows the Screen Setup plugin to scan that directory to pick up the currently connected monitor, and similarly select it from !Boot.Choices.PreDesk. The EDID data can also be drag & drop copied or exported for offline analysis.
  Add SaveModeFile command. This differs in that it works on the current set, to be symmetrical with LoadModeFile which loads the current set. Also fixes issues of losing the original mode names given; NULL pointer dereference when the EDID block contains no modes (eg. VIDCDriver); and no long writes out malformed MDFs which can't be loaded into !MakeModes (this seems to be because the CreateModeFile command was based on a stale copy of EDIDDecode which fixed the same bug circa 2012).
  Query the current GraphicsV driver for the deepest colour depth for the preferred mode, rather than assuming 32bpp is always possible (eg. because of bandwidth or graphics controller constraints).
  If the configured MonitorType is EDID but no EDID could be read, or it was corrupt, substitute a safe VESA monitor to allow the kernel to select something close to MODE 28.
  Add ScreenModes_Features SWI so the Screen Setup plugin knows whether it's safe to offer EDID in its dialogues.
  Retire the ReadEDID command (no longer needed since LoadModeFile can load the exported EDID blob, or one from disc) and CreateModeFile commands (see SaveModeFile).
  Internationalise the default monitor title ("Unidentified") used when EDID doesn't contain one.
Admin:
  New file - doc/BootStates documents all possible situations, and their recovery, for both the MDF and (non-hotplug) EDID schemes.
  New file - doc/EDIDGoals states the aims of the EDID support from both a user and support perspective.

  Submission for the EDID bounty.

Version 0.61. Tagged as 'ScrModes-0_61'
@
text
@d31 1
@


4.7
log
@Split out data tables, stylistic refactoring
Detail:
  Move the 500+ lines of tables into a new source file and remove storage inferred by former CEAModes.h.
  Tame some of the rampant style from various authors, even within 1 function, to something reasonably consistent.
  Uppercase the 'debug' macro to 'IFDEBUG'.
  Relocate ScrModes specific defines out of EDIDModes header, rename to edidmemory.h.
  Add monitor type 6 to monitors.h.
  Fix for unguarded debug printout "Can't allocate space for monitor list" in parseedid.
Admin:
  Tested briefly, functionality unchanged.
  Submission for the EDID bounty.
  Tagged as ScrModes-0_53-tables
@
text
@d31 1
@


4.6
log
@Add support for parsing and reporting the contents of CEA 861-D audio-related EDID blocks
Detail:
  Makefile - Export a C version of hdr/ScrModes
  Resources/Germany/Messages, Resources/UK/Messages, h/errors - Add new error message
  cmhg/ScrModesv, hdr/ScrModes - Declare existence of ScreenModes_EnumerateAudioFormats SWI. Declare ScreenModes_ReadInfo reason codes.
  h/modex - Extend MonitorDefinition struct to allow it to store the speaker mask & audio format information that's extracted from the EDID
  c/ScrModes - Extend support for processing of CEA extension blocks. All block revisions > 0 should now be accepted, and rudimentary parsing of CEA data block collections is implemented (currently, only extracts information from audio related blocks). Add SWI ScreenModes_EnumerateAudioFormats to allow details of the supported formats to be returned in either "raw" or "friendly" forms. Add ScreenModes_ReadInfo reason code 1 to allow reading of the speaker mask (+ validity bits). Also fix *LoadModeFile to allow EDID blocks to be loaded without first having to issue *ReadEDID first (EDIDEnabled flag issue).
Admin:
  Tested on iMX6 with assorted EDID blocks
  German messages file in need of translation


Version 0.49. Tagged as 'ScrModes-0_49'
@
text
@d29 1
a29 1
E27:EDID channel communications error.
@


4.5
log
@  Made safer to deploy in current ROMS, and added further stuff to generated mdf
Detail:
  Added several things
  1) Readedid routine not called in module initialise.
  2) Flag added to determine whether old loadmodefile usage, or new readedid usage.
     Defaults to loadmodefile mode until a readedid command with no parameters,
     then swirches to edid reading mode. Reverts again if loadmodefile command is used.
  3) Tidied up error message when graphicsv fails to read the edid due to connectivity
     issues.
  4) Added hex dump of edid data blocks read to end of a saved mdf file.
  5) Implemented read of second ans subsequent 128 byte edid blocks, if required.

Admin:
  tested in imx rom

Version 0.41. Tagged as 'ScrModes-0_41'
@
text
@d30 1
@


4.4
log
@Added prototype EDID support code.

This should be considered beta-quality work-in-progress code that gives us a
new *command (ReadEDID) that attempts to read the list of supported display
mode information from a connected monitory and configure the system for it,
as if an MDF file had been loaded containing that information.

Admin:

Community testing is required for this feature. Please try replacing the
LoadModeFile line in your !Boot.Choices.Boot.PreDesk.Configure.Monitor
file with a line saying "ReadEDID". If you get a sensible looking list
of modes when the machine boots, then things should be OK. If you see an
error, please get in touch with ROOL on the "Bounties - ReadEDID" topic.
You'll clearly need to be running a ROM with this version of ScreenModes
in it!

Version 0.39. Tagged as 'ScrModes-0_39'
@
text
@d29 1
@


4.3
log
@Clean up pass
* Makefile recreated from fragments
* Swap to C99 types, remove 'machtypes.h'
* Use centralised SWI and service call definitions, remove 'newswis.h' and 'services.h'
* Error E21 taken out of resources, CMHG generates this one for free
* Compiler warnings squashed

Version 0.32. Tagged as 'ScrModes-0_32'
@
text
@d27 2
@


4.2
log
@Makefile changed to use LocalRes$Path and Link 5.08.
German resources imported.
Spinner branch merged.
Changed to use srccommit.

Version 0.20. Tagged as 'ScrModes-0_20'
@
text
@d23 1
a23 1
E21:SWI value out of range for module ScreenModes
@


4.1
log
@Initial revision
@
text
@a26 7

#{Token0=LoadModeFile}
HSMDLMF:*LoadModeFile reads screen mode definitions from the given file and makes these the current screen modes set. 
SSMDLMF:Syntax: *LoadModeFile <filename> 
#{Token0=VIDCBandwidthLimit}
HSMDVBL:*VIDCBandwidthLimit is for internal system use only. 
SSMDVBL:Syntax: *VIDCBandwidthLimit <bandwidth> <bandwidth> <bandwidth> 
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Command line messages removed
@
text
@d27 7
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
