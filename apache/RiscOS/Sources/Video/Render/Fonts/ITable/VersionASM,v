head	4.12;
access;
symbols
	ITable-0_18:4.12
	ITable-0_17:4.11
	ITable-0_16:4.10
	RO_5_07:4.9
	ITable-0_15:4.9
	ITable-0_14:4.8
	dellis_autobuild_BaseSW:4.7
	ITable-0_13:4.7
	ITable-0_12:4.6
	ITable-0_11:4.5
	ITable-0_10:4.4
	sbrodie_sedwards_16Mar2000:4.3
	dcotton_autobuild_BaseSW:4.9
	ITable-0_09:4.3
	ITable-0_08:4.2;
locks; strict;
comment	@# @;


4.12
date	2013.10.06.18.08.27;	author jlee;	state Exp;
branches;
next	4.11;
commitid	oZFkvjb2TyyTeg8x;

4.11
date	2013.09.03.19.19.22;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	1oUL9eS7RLgZG14x;

4.10
date	2012.09.16.10.47.27;	author rsprowson;	state Exp;
branches;
next	4.9;
commitid	L3uMGInjWeXRaKkw;

4.9
date	2001.03.23.17.05.47;	author sbrodie;	state Exp;
branches;
next	4.8;

4.8
date	2000.12.07.12.23.06;	author sbrodie;	state Exp;
branches;
next	4.7;

4.7
date	2000.08.14.13.53.04;	author jfletche;	state Exp;
branches;
next	4.6;

4.6
date	2000.07.07.17.23.12;	author jfletche;	state Exp;
branches;
next	4.5;

4.5
date	2000.06.28.08.55.03;	author arodger;	state Exp;
branches;
next	4.4;

4.4
date	2000.05.12.12.37.07;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	99.08.27.11.38.12;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	99.08.05.11.50.46;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	99.08.05.11.48.57;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.12
log
@Add InverseTable_SpriteTable implementation
Detail:
  s/ITable - Added an implementation of ROL's InverseTable_SpriteTable SWI, to allow InverseTable to be used on arbitrary sprites.
  hdr/ITable - Fix to use SWI base and name from Hdr:SWIs instead of local definitions
Admin:
  Tested on BB-xM


Version 0.18. Tagged as 'ITable-0_18'
@
text
@;
; This file is automatically maintained by srccommit, do not edit manually.
; Last processed by srccommit version: 1.1.
;
                        GBLS    Module_MajorVersion
                        GBLA    Module_Version
                        GBLS    Module_MinorVersion
                        GBLS    Module_Date
                        GBLS    Module_FullVersion
                        GBLS    Module_ApplicationDate
                        GBLS    Module_HelpVersion
                        GBLS    Module_ComponentName
                        GBLS    Module_ComponentPath
Module_MajorVersion     SETS    "0.18"
Module_Version          SETA    18
Module_MinorVersion     SETS    ""
Module_Date             SETS    "06 Oct 2013"
Module_ApplicationDate  SETS    "06-Oct-13"
Module_ComponentName    SETS    "ITable"
Module_ComponentPath    SETS    "castle/RiscOS/Sources/Video/Render/Fonts/ITable"
Module_FullVersion      SETS    "0.18"
Module_HelpVersion      SETS    "0.18 (06 Oct 2013)"
                        END
@


4.11
log
@Internationalised
Extra code for the RAM loading version which is included in !Boot for the softloaded FontManager pre RISC OS 3.70.

Version 0.17. Tagged as 'ITable-0_17'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.17"
Module_Version          SETA    17
d17 2
a18 2
Module_Date             SETS    "03 Sep 2013"
Module_ApplicationDate  SETS    "03-Sep-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.17"
Module_HelpVersion      SETS    "0.17 (03 Sep 2013)"
@


4.10
log
@Halve the StdPalette table size
Since a 5:5:5 colour number always fits in 16 bits the standard palette table can be accessed with LDRH and constructed with DCW.
Tested in IOMD ROM, font blending still looks right in 256 colour modes.

Version 0.16. Tagged as 'ITable-0_16'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.16"
Module_Version          SETA    16
d17 2
a18 2
Module_Date             SETS    "16 Sep 2012"
Module_ApplicationDate  SETS    "16-Sep-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.16"
Module_HelpVersion      SETS    "0.16 (16 Sep 2012)"
@


4.9
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
  Removed unused resources.
  Fixed some non 32-bit compatible code.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.09 or later.
  Requires Env 0.65 or later.

Version 0.15. Tagged as 'ITable-0_15'
@
text
@d3 1
d10 1
a10 2
                        GBLS    Module_ApplicationDate2
                        GBLS    Module_ApplicationDate4
d14 2
a15 2
Module_MajorVersion     SETS    "0.15"
Module_Version          SETA    15
d17 2
a18 3
Module_Date             SETS    "23 Mar 2001"
Module_ApplicationDate2 SETS    "23-Mar-01"
Module_ApplicationDate4 SETS    "23-Mar-2001"
d20 3
a22 3
Module_ComponentPath    SETS    "RiscOS/Sources/Video/Render/Fonts/ITable"
Module_FullVersion      SETS    "0.15"
Module_HelpVersion      SETS    "0.15 (23 Mar 2001)"
@


4.8
log
@  Binary Build Environment additional resource export rules added.
Admin:
  Tested in experimental context only - does not affect normal builds.

Version 0.14. Tagged as 'ITable-0_14'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.14"
Module_Version          SETA    14
d17 3
a19 3
Module_Date             SETS    "07 Dec 2000"
Module_ApplicationDate2 SETS    "07-Dec-00"
Module_ApplicationDate4 SETS    "07-Dec-2000"
d22 2
a23 2
Module_FullVersion      SETS    "0.14"
Module_HelpVersion      SETS    "0.14 (07 Dec 2000)"
@


4.7
log
@  InverseTable modified to use ColourTrans to generate tables.
Detail:
  * In the first instance, it is now possible to use the 32k table from
    Resources:$.Resources.Colours.Tables.8desktop instead of the normal
    ...ITable.Tables.8desktop location. This reduces the space used by
    InverseTable by 32k and may free enough room for 2MB ROM builds.
  * Additionally, it is possible to use ColourTrans to generate all
    tables, rather than using the inbuilt table. ColourTrans is much
    faster at generating these tables - presumably at the expense of
    accuracy - and this may help in modes where the default palette is
    in use. Currently, if ColourTrans fails we fall back to the old
    InverseTable method.
  * Both switches can be toggled independantly.
  * Makefile modified to not export the InverseTable in the resources
    phase. If you toggle the UseColourTransForResourceTable switch, you
    must update the makefile to reflect the required export.
Admin:
  Tested, no noticable degradation of blended font readability observed,
  either with standard palettes or with custom palettes, when displayed
  in the desktop, single tasking, or when redirected to sprites.
Performance:
  StrongARM timings:
    ColourTrans takes about 1 second to generate translation tables.
    InverseTable takes about 2 seconds.
  Plus, with ColourTrans you're gaining from the fact that it caches more
  than a single table, so a second render after a sprite switch /does/
  remember the cached entry.
Background:
  Additional space is required for a 2MB ROM build, and the 32k table
  provided by InverseTable in ResourceFS is really redundant as the
  ColourTrans table will suffice.
  InverseTable provides its own table generation code which is similar
  to that in ColourTrans (colourtrans uses simple weightings, inversetable
  uses sum of squares, as I understand it)

Version 0.13. Tagged as 'ITable-0_13'
@
text
@d11 5
a15 2
Module_MajorVersion     SETS    "0.13"
Module_Version          SETA    13
d17 7
a23 4
Module_Date             SETS    "14 Aug 2000"
Module_ApplicationDate2 SETS    "14-Aug-00"
Module_ApplicationDate4 SETS    "14-Aug-2000"
Module_FullVersion      SETS    "0.13"
@


4.6
log
@  Fix for rare bug triggered by multiple nested sprite redirections
  confusing the module's palette tracking.
Detail:
  The problem is that at present InverseTable assumes that when you
  redirect output to a sprite you will be toggling in and out of a sprite
  with a palette it understands. That is that in the sequence Calculate,
  redirect, redirect, Calculate, the final Calculate can be ignored
  because it will have the same table as the first. This is incorrect if
  the second redirect is a redirection to a sprite which was not that
  which the first would have restored to.
  The failure sequence can occur when you generate a bitmap from a font
  for the first time, I believe. It can also be artificially simulated
  (and can happen in real world situations if redirection occurs on a
  callback).
  The new algorithm is :
    At every redirection, record whether we are redirecting to the screen
    When tables are generated, remember whether this was for a screen
      redirection
    Mark every redirection as invalid, UNLESS the table we have cached is
      for the screen and we are redirecting to the screen, in which case
      clear the redirection invalid flag.
  The upshot of this is that for any sequence of redirection the
  inversetable is maintained as valid, BUT redirection between multiple
  sprites can cause InverseTable to recache the tables where previously it
  might have used tables it already had. In the latter case, it would be
  likely that redirection back to the screen would have displayed
  'tutti-fruti' coloured text.
  The speed hit of calculating the tables will be noticable if they are
  needed, but the effect of displaying incorrect text is more noticeable
  when it occurs.
Admin:
  Tested with examples of badly nested sprite redirection, and correctly
  tracked the palettes in use.

Version 0.12. Tagged as 'ITable-0_12'
@
text
@d11 2
a12 2
Module_MajorVersion     SETS    "0.12"
Module_Version          SETA    12
d14 4
a17 4
Module_Date             SETS    "07 Jul 2000"
Module_ApplicationDate2 SETS    "07-Jul-00"
Module_ApplicationDate4 SETS    "07-Jul-2000"
Module_FullVersion      SETS    "0.12"
@


4.5
log
@  this is a checkin following a failed checkin.
  added a usermode gap.
Detail:
   the central palette calculation loop was taking sufficiently
   long to disrupt the flow of video.  This has been fixed.
Admin:
   I have tested this on the desktop and the STB.

Version 0.11. Not tagged
@
text
@d11 2
a12 2
Module_MajorVersion     SETS    "0.11"
Module_Version          SETA    11
d14 4
a17 4
Module_Date             SETS    "28 Jun 2000"
Module_ApplicationDate2 SETS    "28-Jun-00"
Module_ApplicationDate4 SETS    "28-Jun-2000"
Module_FullVersion      SETS    "0.11"
@


4.4
log
@32-bit compatible.

Version 0.10. Tagged as 'ITable-0_10'
@
text
@d9 4
a12 2
Module_MajorVersion     SETS    "0.10"
Module_Version          SETA    10
d14 4
a17 2
Module_Date             SETS    "12 May 2000"
Module_FullVersion      SETS    "0.10"
@


4.3
log
@Fixed version number string.

Version 0.09. Tagged as 'ITable-0_09'
@
text
@d4 10
a13 10
			GBLS	Module_MajorVersion
			GBLA    Module_Version
			GBLS	Module_MinorVersion
			GBLS	Module_Date
			GBLS	Module_FullVersion
Module_MajorVersion	SETS    "0.09"
Module_Version          SETA    9
Module_MinorVersion	SETS	""
Module_Date		SETS    "27 Aug 1999"
Module_FullVersion      SETS    "0.09"
@


4.2
log
@Ursula branch merged (service call table).
Changed to use srccommit.

Version 0.08. Tagged as 'ITable-0_08'
@
text
@d9 2
a10 2
Module_MajorVersion	SETS    "0.08"
Module_Version          SETA    8
d12 2
a13 2
Module_Date		SETS    "05 Aug 1999"
Module_FullVersion      SETS    "0.08"
@


4.1
log
@created by srccommit.
@
text
@d9 2
a10 2
Module_MajorVersion	SETS    "0.07"
Module_Version          SETA    7
d13 1
a13 1
Module_FullVersion      SETS    "0.07"
@
