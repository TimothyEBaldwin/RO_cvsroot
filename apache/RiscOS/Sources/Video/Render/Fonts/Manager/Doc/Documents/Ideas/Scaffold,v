head	4.1;
access;
symbols
	Manager-3_80:4.1
	Manager-3_79:4.1
	Manager-3_78:4.1
	Manager-3_77:4.1
	Manager-3_76:4.1
	Manager-3_75:4.1
	Manager-3_74:4.1
	Manager-3_73:4.1
	Manager-3_72:4.1
	Manager-3_71:4.1
	Manager-3_70:4.1
	Manager-3_69:4.1
	Manager-3_68:4.1
	Manager-3_67:4.1
	Manager-3_66:4.1
	Manager-3_65:4.1
	Manager-3_64:4.1
	Manager-3_63:4.1
	Manager-3_62:4.1
	Manager-3_61:4.1
	Manager-3_60:4.1
	RO_5_07:4.1
	Manager-3_59:4.1
	Manager-3_58:4.1
	Manager-3_57:4.1
	Manager-3_56:4.1
	Manager-3_55:4.1
	Manager-3_54:4.1
	Manager-3_53:4.1
	Manager-3_52:4.1
	Manager-3_51:4.1
	Manager-3_50:4.1
	Manager-3_49:4.1
	dellis_autobuild_BaseSW:4.1
	Manager-3_48:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	Manager-3_47:4.1
	Manager-3_46:4.1
	Manager-3_45:4.1
	Manager-3_44:4.1
	Manager-3_43:4.1
	Manager-3_42:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Manager-3_41-4_2_2_13:4.1
	Ursula_RiscPC:4.1.0.10
	Manager-3_41-4_2_2_12:4.1
	Manager-3_41-4_2_2_11:4.1
	Manager-3_41-4_2_2_10:4.1
	Manager-3_41-4_2_2_9:4.1
	Manager-3_41-4_2_2_8:4.1
	Manager-3_41-4_2_2_7:4.1
	Manager-3_41-4_2_2_6:4.1
	Manager-3_41-4_2_2_5:4.1
	Manager-3_41-4_2_2_4:4.1
	Manager-3_41-4_2_2_3:4.1
	Manager-3_41-4_2_2_2:4.1
	Manager-3_41-4_2_2_1:4.1
	NRaine:4.1.0.8
	Manager-3_41:4.1
	Ursula_merge:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	bavison_FontManager-3_40:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Manager-3_40-1_1_2_2:4.1.7.1
	smiddle_2Mar1998_Fonts16:4.1.7.1.0.4
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.43.05;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.43.05;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.14.44;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.50.54;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.14.00;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@
Scaffolding a font
---------------

Use scaffold lines to ensure that vertical and horizontal lines look OK

Use skeleton lines on arcs or diagonal lines, especially if thin, to ensure
that the character remains connected.

Use L- and R-tangent lines to ensure that arcs don't have pips - position
the 'outside' of the arc in line with the tangent line, and link both the
inside and outside points of the arc to the tangent line.  Note that any
skeleton line within the arc should be linked to the same tangent line, so
that it remains inside the arc after the scaffolding is applied.

Think about where the 'stretchable' segments will occur (ie. where the two
endpoints are connected to different scaffold lines).  It is best if
horizontal lines stretch horizontally, and vertical lines stretch
vertically.

As an example, consider the problem of scaffolding a circle:

   1.  The circle should be made up of 4 bezier curves, with the endpoints
        on the 45-degree diagonals.

   2.  4 tangent lines should be used, touching the edges of the circle.
        The left and lower lines should be L-tangent lines, and the right and
        upper lines should be R-tangents.

   3.  The top two endpoints should be linked to the upper tangent line, the
        lower two to the lower lines, the left two to the left line, and the
        right two to the right line.

Note that the horizontally-stretchable segments occur at the top and bottom
(ie. the most horizontal lines) and the vertically-stretchable segments
occur at the left and right (ie. the most vertical lines).

When the scaffolding is applied, each control point is moved by the same
distance as its nearest endpoint, so it helps if the stretchable line is as
long as possible.  If the two control points are close together, it is even
possible for the curve to turn into a loop!  Reducing the number of curves
in a character also helps to save memory - each curve occupies 10 bytes in
the font file.

Consistency
----------

It is important that the characters in a font are modified in a consistent
way by the scaffolding procedure - nothing looks worse than a piece of text
where adjacent characters are all different heights!

To achieve this, it is important that all the upper case letters share at
least two lines (one for the baseline and one for the X-height), and the
lower case letters share three lines (one for the baseline, one for the
x-height and one for the d-height).

However, you may have noticed a problem here - some of the characters have
serifs on the bottom (eg. A,F,H,I,K,M,N,P,R,T,X,Y) while others have a curve
(eg. C,G,O,Q,S,U).  Still others have a line which is not the same thickness
as the serif (eg. B,D,E,L) and others have a V-shape (eg. V,W).

Typically the bottom of the curved characters is slightly lower than the
bottom of the serifed characters, which looks more even than having the
tangent at the bottom of the curves level with the bottom of the serifs.

However, when the characters are only a few pixels height, it is important
that the baselines of all the characters should line up, since a difference
of 1 pixel would be much larger than that intended.

To get round this problem the editor "allows" scaffold lines to be 'linked'
to a parent line, such that the linked line is first moved by the amount the
parent moved, and then has its own scaffolding applied as well.

In the above example, there would be two scaffold lines shared by all the
characters - one for the serif baseline position, and an L-tangent line for
the curve positions, which would be slightly lower.  The L-tangent line
would then be linked to the serif scaffold line, encouraging consistency
between the two (ie. if the serif line moves up, then the L-tangent line
will be moved up by the same amount before moving to the nearest point which
is 1/8th of a pixel up from a pixel boundary).

Similarly, there would be a pair of lines for the tops of the upper-case
characters, and a pair for the tops of the lower-case characters.

Note that one might also link the scaffold line connecting the tops of the
lower-case characters (like 'd') to the one connecting the tops of the
upper-case characters, so that when the font size is a small number of
pixels, the top of the lower case characters coincides with the top of the
upper-case ones.

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
