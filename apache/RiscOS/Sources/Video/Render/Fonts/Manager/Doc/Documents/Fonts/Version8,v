head	4.1;
access;
symbols
	Manager-3_80:4.1
	Manager-3_79:4.1
	Manager-3_78:4.1
	Manager-3_77:4.1
	Manager-3_76:4.1
	Manager-3_75:4.1
	Manager-3_74:4.1
	Manager-3_73:4.1
	Manager-3_72:4.1
	Manager-3_71:4.1
	Manager-3_70:4.1
	Manager-3_69:4.1
	Manager-3_68:4.1
	Manager-3_67:4.1
	Manager-3_66:4.1
	Manager-3_65:4.1
	Manager-3_64:4.1
	Manager-3_63:4.1
	Manager-3_62:4.1
	Manager-3_61:4.1
	Manager-3_60:4.1
	RO_5_07:4.1
	Manager-3_59:4.1
	Manager-3_58:4.1
	Manager-3_57:4.1
	Manager-3_56:4.1
	Manager-3_55:4.1
	Manager-3_54:4.1
	Manager-3_53:4.1
	Manager-3_52:4.1
	Manager-3_51:4.1
	Manager-3_50:4.1
	Manager-3_49:4.1
	dellis_autobuild_BaseSW:4.1
	Manager-3_48:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	Manager-3_47:4.1
	Manager-3_46:4.1
	Manager-3_45:4.1
	Manager-3_44:4.1
	Manager-3_43:4.1
	Manager-3_42:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Manager-3_41-4_2_2_13:4.1
	Ursula_RiscPC:4.1.0.10
	Manager-3_41-4_2_2_12:4.1
	Manager-3_41-4_2_2_11:4.1
	Manager-3_41-4_2_2_10:4.1
	Manager-3_41-4_2_2_9:4.1
	Manager-3_41-4_2_2_8:4.1
	Manager-3_41-4_2_2_7:4.1
	Manager-3_41-4_2_2_6:4.1
	Manager-3_41-4_2_2_5:4.1
	Manager-3_41-4_2_2_4:4.1
	Manager-3_41-4_2_2_3:4.1
	Manager-3_41-4_2_2_2:4.1
	Manager-3_41-4_2_2_1:4.1
	NRaine:4.1.0.8
	Manager-3_41:4.1
	Ursula_merge:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	bavison_FontManager-3_40:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Manager-3_40-1_1_2_2:4.1.7.1
	smiddle_2Mar1998_Fonts16:4.1.7.1.0.4
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.43.03;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.43.03;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.14.25;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.50.45;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.13.51;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@
Unacceptable limitations in font file format
============================================

        Offset  Size    Meaning
        ------  ----    -------

IntMetrics:
        48      1       n = number of defined characters (allows 255 maximum)
        52      256     character mapping (allows 256 maximum)

                        Kern pairs:
        0       1       second letter of pair
                        (actually requires both letters if index is formed
                        in 8 bits by hashing them)

x90y45:
                        <doesn't matter>

Outlines / f9999x9999 / b9999x9999:

        16      36      8+1 chunk offsets (32 characters per chunk)

    Outlines:
        16+36+2 510     offsets of scaffold data from table start
    Scaffold data:
        0       1       char code of 'base' scaffold entry
        1       1       bit mask allows for 8 scaffold lines only
        2       1       bit mask allows for 8 scaffold lines only
        3       1       bit mask allows for 8 scaffold lines only
        4       1       bit mask allows for 8 scaffold lines only
    Scaffold lines:
        0       2       bits 12..14 = scaffold link index
        2       1       width = 0..253
    Chunk data:
        33*4    1       dependency byte (allows for 8 chunks only)
    Outline char data segment:
        0       1       bits 2..4 = x-scaffold link (allows for 8 only)
                        bits 5..7 = y-scaffold link (allows for 8 only)
    Composite character inclusions:
        0       1       character code of character to include


Proposed extensions
===================

We need an extra parameter - the character code range.

By default this is 0..255, so a 256-character translation table is used and
all character codes are stored in 8 bits.

The new definition is:

IntMetrics:
        50      2       flags:
                        bit 5 set => 32-bit limit on number of chars
        If so:
        52      2       offset from file start to metrics data
        54      2       offset from file start to table (kerns etc)
        56      4       max = maximum character code
        60      n(max+1) tot = actual number of characters defined (byte 48 ignored)
                n(max)*tot = mapping from character code to table index
        rounded to next whole byte before starting on metrics
        where n(x) is the number of bits required to store x in binary.

        Kern pairs:
        0       n(max)  code of first character
                n(max)  code of second character
                        rounded up to the next byte

Outlines:
        6       1       Version number of file format:
                        8: new version
        If so:
        16      4       flag word:
                        bit 0 set => scaffold offsets are 32-bit, else 16-bit
                        bits 0..31 reserved (must be 0)
        20      4       max = maximum character code
        24      4       ms = maximum scaffold index
        24      ((max+31)/32)*4+4  chunk offsets
    Outlines:
        ?       2 or 4  offset to table end
        ?+2or4  max*2or4 offsets of scaffold data from table start
    Scaffold data:
        0       n(max)  char code of 'base' scaffold entry
                ms      bit mask for index 1..ms (max scaffold index)
                ms      bit mask for 
                ms      bit mask allows for 8 scaffold lines only
                ms      bit mask allows for 8 scaffold lines only
    Scaffold lines:
        0       2       bit 12 set => H/V scaffold line
                                      bit 13 clr => 8 bits unsigned
                                      bit 13 set => 16 bits unsigned
                        bit 12 clr => L/R/U/D tangent line
                                      bit 13 clr => L/D-tangent
                                      bit 13 set => R/U-tangent
                        bit 14 set => line is linked:
        If bit 12 set:
                1or2    width (1or2 depends on bit 13)
        If bit 14 set:
                (n(ms)+7)/8   index of parent line
    Chunk data:
        33*4    n*4     list of chunk bases, terminated by -1
    Outline char data segment:

############## drastic changes to compress file size #####################

        0       1       bits 2..4 = x-scaffold link (allows for 8 only)
                        bits 5..7 = y-scaffold link (allows for 8 only)
    Composite character inclusions:
        0       (n(max)+7)/8  character code of character to include

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
