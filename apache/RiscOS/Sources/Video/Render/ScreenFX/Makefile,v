head	1.5;
access;
symbols
	ScreenFX-0_09-1:1.5
	ScreenFX-0_09:1.5
	ScreenFX-0_08:1.3
	ScreenFX-0_07:1.3
	ScreenFX-0_06:1.3
	ScreenFX-0_05:1.3
	ScreenFX-0_04:1.3
	ScreenFX-0_03:1.3
	ScreenFX-0_02:1.2
	ScreenFX-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2012.02.03.09.23.46;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	XZS1oIz256KxYGRv;

1.4
date	2012.02.02.22.11.33;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	7vJKBWAq97yWfDRv;

1.3
date	2005.08.19.14.16.05;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.19.13.31.26;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.18.21.08.34;	author ahodgkin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.08.18.21.08.34;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Supress the warning during an export phase.

Version 0.09. Not tagged
@
text
@# Copyright 2005 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for ScreenFX
#

COMPONENT   = ScreenFX
TARGET      = ScreenFX
OBJS        = CLI Effect Global SWI Transfer Module
RES_AREA    = resmess_ResourcesFiles
CMHGFILE    = ScrFXHdr
CMHGDEPENDS = Module
ROMCDEFINES = -DROM_MODULE
CMHGAUTOHDR = ${TARGET}
HDRS        =

include CModule

CFLAGS     += -Wpe
CDFLAGS    += -DDEBUGLIB
LIBS       += ${PRISMLIB} ${ASMUTILS}
DBG_LIBS   += ${SOCK5LIB} ${INETLIB}

# Dynamic dependencies:
@


1.4
log
@Change to use CModule shared makefile.
Fixed debug version to build again, did a fake resources run, compiles, but not functionally tested.

Version 0.09. Tagged as 'ScreenFX-0_09'
@
text
@d26 1
@


1.3
log
@  API addition; documentation support.
Detail:
  Blocking fades now trigger callbacks, unless R0:1 in ScreenFX_Fade is
  set on entry. "*ScreenFXFade -block" always lets callbacks run. On
  documentation: Doxygen error in ScreenFX.h fixed; Doxygen configuration
  file now included.
Admin:
  Confirmed R0:1 stopped or did not stop callbacks (by playing an MP3 in
  AMPlayer on an Iyonix and running a slow blocking fade, that stopped MP3
  playback when R0:1 was set, and did not stop it when R0:1 was clear).

Version 0.03. Tagged as 'ScreenFX-0_03'
@
text
@d15 1
a15 1
# Makefile for RTSupport
a16 7
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name    Description
# ----       ----    -----------
# 18-Oct-04  BJGA    Created
# 18-Aug-05  ADH     Adapted to ScreenFX module
d20 13
a32 201
CHEADER1    = ${TARGET}
CMHGCHEADER = ScrFXHdr
CFLAGS      = -ffah -Wpe
ASFLAGS     = -cpu 4
CDEFINES    =
CINCLUDES   =
COMMON_OBJS =  o.CLI  o.Effect  o.Global  o.SWI  o.Transfer
DBG_OBJS    = do.CLI do.Effect do.Global do.SWI do.Transfer
PP_OBJS     =  i.CLI  i.Effect  i.Global  i.SWI  i.Transfer
LIBS        = <Lib$Dir>.PRISMLib.o.PRISMLibzm <Lib$Dir>.AsmUtils.o.AsmUtilszm

# The rest of this could be used as a basis for shared makefile fragment(s)

CFLAGS     += -zM -zps1
DIRS        = o._dirs
MERGEDMDIR  = o._Messages_
MERGEDMSGS  = ${MERGEDMDIR}.${TARGET}
RAM_OBJS    = ${COMMON_OBJS} o.Module o.ResMess o.ScrFXHdr
ROM_OBJS    = ${COMMON_OBJS} o.ModuleROM o.ScrFXHdr
DBG_OBJS   += do.Module o.ResMess o.ScrFXHdr
PP_OBJS    += i.Module
DBG_LIBS    = ${RAM_LIBS} ${DEBUGLIBS} TCPIPLibs:o.socklib5zm TCPIPLibs:o.inetlibzm
DBG_MODULE  = drm.${TARGET}
RESFSDIR   ?= ${RESDIR}.${TARGET}
EXP_HDR    ?= <Export$Dir>
C_EXP_HDR  ?= <CExport$Dir>.Interface.h
LIBDIR      = <Lib$Dir>
CMHGCHEADER_SWIPREFIX ?= ${TARGET}

include Makefiles:StdTools
include Makefiles:ModuleLibs
include Makefiles:ModStdRule
include Makefiles:RAMCModule
include Makefiles:ROMCModule

.SUFFIXES: .do .i
.c.do:; ${CC} ${CFLAGS} -DDEBUGLIB -o $@@ $<
.c.i:;  ${CC} ${CFLAGS} -E -C $< > $@@

${DIRS}:
        ${MKDIR} aof
        ${MKDIR} do
        ${MKDIR} drm
        ${MKDIR} i
        ${MKDIR} linked
        ${MKDIR} o
        ${MKDIR} rm
        ${TOUCH} ${DIRS}

clean::
        @@IfThere h.ScrFXHdr Then ${ECHO} ${RM} h.ScrFXHdr
        @@IfThere h.ScrFXHdr Then ${RM} h.ScrFXHdr
        @@IfThere aof Then ${ECHO} ${WIPE} aof ${WFLAGS}
        @@IfThere aof Then ${WIPE} aof ${WFLAGS}
        @@IfThere do Then ${ECHO} ${WIPE} do ${WFLAGS}
        @@IfThere do Then ${WIPE} do ${WFLAGS}
        @@IfThere drm Then ${ECHO} ${WIPE} drm ${WFLAGS}
        @@IfThere drm Then ${WIPE} drm ${WFLAGS}
        @@IfThere i Then ${ECHO} ${WIPE} i ${WFLAGS}
        @@IfThere i Then ${WIPE} i ${WFLAGS}
        @@IfThere linked Then ${ECHO} ${WIPE} linked ${WFLAGS}
        @@IfThere linked Then ${WIPE} linked ${WFLAGS}
        @@IfThere o Then ${ECHO} ${WIPE} o ${WFLAGS}
        @@IfThere o Then ${WIPE} o ${WFLAGS}
        @@IfThere rm Then ${ECHO} ${WIPE} rm ${WFLAGS}
        @@IfThere rm Then ${WIPE} rm ${WFLAGS}
        @@${ECHO} ${COMPONENT}: cleaned

prepro: ${PP_OBJS} ${DIRS}
        @@${ECHO} ${COMPONENT}: preprocessed files generated

export${EXPORT}: export${EXPORT}_${PHASE}
        @@|

export${EXPORT}_: export${EXPORT}_libs export${EXPORT}_hdrs
        @@|

export${EXPORT}_hdrs :: ${EXPORTS}
        @@|
        @@${ECHO} ${COMPONENT}: header export complete

ifdef CHEADER3
export${EXPORT}_hdrs :: ${C_EXP_HDR}.${CHEADER3}
        @@|
${C_EXP_HDR}.${CHEADER3} :: h.${CHEADER3}
        ${CP} h.${CHEADER3} $@@ ${CPFLAGS}
endif

ifdef CHEADER2
export${EXPORT}_hdrs :: ${C_EXP_HDR}.${CHEADER2}
        @@|
${C_EXP_HDR}.${CHEADER2} :: h.${CHEADER2}
        ${CP} h.${CHEADER2} $@@ ${CPFLAGS}
endif

ifdef CHEADER1
export${EXPORT}_hdrs :: ${C_EXP_HDR}.${CHEADER1}
        @@|
ifdef CMHGCHEADER
${C_EXP_HDR}.${CHEADER1} :: h.${CHEADER1} o._h_${TARGET}
        FAppend $@@ h.${CHEADER1} o._h_${TARGET}
else
${C_EXP_HDR}.${CHEADER1} :: h.${CHEADER1}
        ${CP} h.${CHEADER1} $@@ ${CPFLAGS}
endif
endif

ifdef ASMCHEADER3
export${EXPORT}_hdrs :: ${C_EXP_HDR}.${ASMCHEADER3}
        @@|
${C_EXP_HDR}.${ASMCHEADER3} :: hdr.${ASMCHEADER3}
        ${HDR2H} hdr.${ASMCHEADER3} $@@
endif

ifdef ASMCHEADER2
export${EXPORT}_hdrs :: ${C_EXP_HDR}.${ASMCHEADER2}
        @@|
${C_EXP_HDR}.${ASMCHEADER2} :: hdr.${ASMCHEADER2}
        ${HDR2H} hdr.${ASMCHEADER2} $@@
endif

ifdef ASMCHEADER1
export${EXPORT}_hdrs :: ${C_EXP_HDR}.${ASMCHEADER1}
        @@|
ifdef CMHGCHEADER
${C_EXP_HDR}.${ASMCHEADER1} :: hdr.${ASMCHEADER1} o._h_${TARGET}
        ${HDR2H} hdr.${ASMCHEADER1} $@@
        FAppend $@@ $@@ o._h_${TARGET}
else
${C_EXP_HDR}.${ASMCHEADER1} :: hdr.${ASMCHEADER1}
        ${HDR2H} hdr.${ASMCHEADER1} $@@
endif
endif

ifdef HEADER3
export${EXPORT}_hdrs :: ${EXP_HDR}.${HEADER3}
        @@|
${EXP_HDR}.${HEADER3} :: hdr.${HEADER3}
        ${CP} hdr.${HEADER3} ${EXP_HDR}.${HEADER3} ${CPFLAGS}
endif

ifdef HEADER2
export${EXPORT}_hdrs :: ${EXP_HDR}.${HEADER2}
        @@|
${EXP_HDR}.${HEADER2} :: hdr.${HEADER2}
        ${CP} hdr.${HEADER2} ${EXP_HDR}.${HEADER2} ${CPFLAGS}
endif

ifdef HEADER1
export${EXPORT}_hdrs :: ${EXP_HDR}.${HEADER1}
        @@|
${EXP_HDR}.${HEADER1} :: hdr.${HEADER1}
        ${CP} hdr.${HEADER1} ${EXP_HDR}.${HEADER1} ${CPFLAGS}
endif

ifdef CMHGCHEADER
o._h_${TARGET}: h.${CMHGCHEADER} ${DIRS}
        Do ${AWK} -- "/.ifndef ${CMHGCHEADER_SWIPREFIX}/,/endif/" h.${CMHGCHEADER} > o._h_${TARGET}
endif

export${EXPORT}_libs:
        @@${ECHO} ${COMPONENT}: no exported libraries

resources${RESOURCES}: resources-${CMDHELP}
        @@${ECHO} ${COMPONENT}: resources copied to Messages module

resources_common:
        ${MKDIR} ${RESFSDIR}
        ${TOKENCHECK} LocalRes:Messages
        ${CP} LocalRes:Messages ${RESFSDIR}.Messages ${CPFLAGS}

resources-None: resources_common
        ${CP} LocalRes:Messages ${RESFSDIR}.Messages ${CPFLAGS}

resources-: resources_common
        IfThere LocalRes:CmdHelp Then ${TOKENCHECK} LocalRes:CmdHelp
        IfThere LocalRes:CmdHelp Then FAppend ${RESFSDIR}.Messages LocalRes:Messages LocalRes:CmdHelp

${MERGEDMSGS}: LocalRes:Messages
        ${MKDIR} ${MERGEDMDIR}
        ${TOKENCHECK} LocalRes:Messages
        IfThere LocalRes:CmdHelp Then ${TOKENCHECK} LocalRes:CmdHelp
        IfThere LocalRes:CmdHelp Then FAppend $@@ LocalRes:Messages LocalRes:CmdHelp Else ${CP} LocalRes:Messages $@@ ${CPFLAGS}

o.resmess${RESMESS}: ${MERGEDMSGS}
	${RESGEN} resmess_ResourcesFiles o.resmess ${MERGEDMSGS} Resources.${TARGET}.Messages

o.Module: ScrFXHdr.h
do.Module: ScrFXHdr.h
i.Module: ScrFXHdr.h

o.ModuleROM: Module.c ScrFXHdr.h
        ${CC} ${CFLAGS} -DROM_MODULE -o ModuleROM.o Module.c

debug: ${DBG_MODULE}
        @@${ECHO} ${COMPONENT}: debug module built

${DBG_MODULE}: ${DBG_OBJS} ${DBG_LIBS} ${CLIB} ${DIRS} ${RAM_DEPEND}
        ${MKDIR} drm
        ${LD} ${LDFLAGS} -o $@@ -rmf ${DBG_OBJS} ${DBG_LIBS} ${CLIB}
        ${CHMOD} -R a+rx drm
@


1.2
log
@  Bug fixes, redundant code removed, new feature.
Detail:
  Rounding errors fixed, so test harness now completes - fades always do
  completely achieve the target parameters. Interruption timing: When a
  new fade interrupts an old one, the percentage of its duration that is
  used depends on how long the fade had been going, not how long it had
  left to go. See Docs.API for why. Now links with PRISMLib the module
  version - stops various odd effects (the bits of shared Makefile in use
  do *not* automatically add a "zm" suffix, so the old version didn't
  work so well). New feature: *ScreenFXReset, or SWI ScreenFX_Reset - as
  ScreenFX_Cancel, plus a reset to default gamma and supremacy tables.
  Again, see Docs.API for details. Finally, the Service_MessagesFileClosed
  handler has been removed - the module does not *maintain* pointers into
  the messages file, since it looks up tokens anew each time they are
  needed, so therefore it does not need to handle the service call.
Admin:
  Interrupted fade timing looks better. No more odd effects when switching
  between debug and non-debug modules. Test harness passes its check that
  the tables are programmed as expected at the end of a fade. Reset feature
  works as it should.

Version 0.02. Tagged as 'ScreenFX-0_02'
@
text
@d36 1
a36 1
LIBS        = <Lib$Dir>.PRISMLib.o.PRISMLibzm
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
LIBS        = <Lib$Dir>.PRISMLib.o.PRISMLib
@


1.1.1.1
log
@Initial import of ScreenFX module to CVS.
@
text
@@
