head	4.4;
access;
symbols
	Colours-1_95:4.4
	Colours-1_94:4.4
	Colours-1_93:4.3
	Colours-1_92:4.3
	Colours-1_91:4.3
	Colours-1_90:4.3
	Colours-1_89:4.3
	Colours-1_88:4.3
	Colours-1_87:4.3
	Colours-1_86:4.3
	Colours-1_85:4.3
	Colours-1_84:4.3
	Colours-1_83:4.3
	Colours-1_82:4.3
	Colours-1_81:4.3
	Colours-1_80:4.3
	Colours-1_79:4.3
	Colours-1_78:4.3
	Colours-1_77:4.3
	RO_5_07:4.3
	Colours-1_76:4.3
	Colours-1_75:4.3
	Colours-1_74:4.3
	Colours-1_73:4.3
	Colours-1_72:4.3
	dellis_autobuild_BaseSW:4.3
	Colours-1_71:4.3
	Colours-1_70:4.3
	Colours-1_69:4.3
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.3
	Colours-1_68:4.2
	Colours-1_67:4.2
	Ursula_merge:4.1
	nturton_Colours-1_65:4.1
	dcotton_colours_MPTInitialBuild:4.1.7.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_Funai01-33:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2016.05.08.17.31.21;	author jlee;	state Exp;
branches;
next	4.3;
commitid	d1ySJ33i6bBREH5z;

4.3
date	2000.05.12.12.34.33;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	99.08.05.09.51.57;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.42.17;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.42.17;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.08.09;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.48.04;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.11.04;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Avoid unnecessary remainder calculations
Detail:
  s/Commons, s/DevicePal, s/Dither, s/FontColour - Avoid unnecessary remainder calculations in DivRem macro
  s/Header - Remove unused Divide macro
Admin:
  Tested on Cortex-A15


Version 1.94. Tagged as 'Colours-1_94'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; convert a screen colour (r2) to a standard RGB colour (r2)

convert_screen_colour2 ROUT
        Push    "R2,LR"
        MOV     R2,R4
        BL      convert_screen_colour
        MOV     R4,R2
        Pull    "R2,PC"

convert_screen_colour ROUT
        Push    "r3, r4, lr"

        LDR     r3, [r12, #Calibration_ptr]
        CMP     r3, #0
        Pull    "r3, r4, pc", EQ

      [ Module_Version <= 065
        ADREQ   r3, default_calibration
      ]

      [ newcalibration
        LDR     LR,[WP,#Calibration_newtable]
        TEQ     LR,#0
        BEQ     %FT10                   ; old style calibration table?

        Debuga  newcalibrate,"Convert colour",R2
        Debug   newcalibrate,", via table at",R3
        Debug   newcalibrate,"New format table",LR

        Push    "R1"                    ; no, so do that funky stuff with new jobbies!
        MOV     R1,R2
        BL      new_convert_device_colour
        Pull    "R1,R3,R4,PC"
10
      ]
        Debug   newcalibrate,"Using old table functions"
        MOV     r4, r2
        BL      convert_device_colour
        MOV     r2, r4

        Pull    "r3, r4, pc"


;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; default calibration table

default_calibration ROUT
        DCD     2,2,2
        DCD     &00000000, &0000FFFF
        DCD     &00000000, &00FF00FF
        DCD     &00000000, &FF0000FF

;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; convert a device colour (r4) to a standard RGB colour (r4)
; using calibration pointed to by r3
convert_device_colour
        Push    "r5,r6,r7,r8,r9,r10,lr"

        Debug   calibrate,"Converting colour", R4

        MOV     r8, #0
        MOV     r9, #0
        MOV     r10, #0

        MOV     r4, r4, LSR #8
        AND     r5, r4, #&ff    ;       r5 = device colour 1 entry
        LDR     r6, [r3]        ;       r6 = number of colour 1 entries
        ADD     r7, r3, #12     ;       r7 -> colour 1 entries
        BL      interpolate_device_colour

        MOV     r4, r4, LSR #8
        ADD     r7, r7, r6, LSL #2 ;    r7 -> colour 2 entries
        AND     r5, r4, #&ff    ;       r5 = device colour 2 entry
        LDR     r6, [r3, #4]    ;       r6 = number of colour 2 entries
        BL      interpolate_device_colour

        MOV     r4, r4, LSR #8
        ADD     r7, r7, r6, LSL #2 ;    r7 -> colour 3 entries
        AND     r5, r4, #&ff    ;       r5 = device colour 3 entry
        LDR     r6, [r3, #8]    ;       r6 = number of colour 3 entries
        BL      interpolate_device_colour

        Debug   calibrate,"Red coeff",R8
        Debug   calibrate,"Blue coeff",R9
        Debug   calibrate,"Green coeff",R10

        MOV     r8, r8, ASR#16
        MOV     r9, r9, ASR#16
        MOV     r10, r10, ASR#16

        CMP     r8, #&100       ;       r4 = &0000RR00
        MOVGE   r8, #&FF
        CMP     r8, #0
        MOVLT   r8, #0
        MOV     r4, r8, LSL#8

        CMP     r9, #&100       ;       r4 = &BBGGRR00
        MOVGE   r9, #&FF
        CMP     r9, #0
        MOVLT   r9, #0
        ORR     r4, r4, r9, LSL#16

        CMP     r10, #&100       ;       r4 = &BBGGRR00
        MOVGE   r10, #&FF
        CMP     r10, #0
        MOVLT   r10, #0
        ORR     r4, r4, r10, LSL#24

        Pull    "r5,r6,r7,r8,r9,r10,PC"
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; interpolate a colour from the device table, and add to r8,r9,r10
; r5 = device colour (0..255)
; r6 = number entries
; r7 -> first entry
interpolate_device_colour
        Push    "r0,r1,r2,r3,r4,r5,r6,r7,lr"

; Find first entry with device colour larger than or equal to required
        MOV     lr, #0
01
        LDRB    r0, [r7]
        CMP     r0, r5
        BGE     found_next_highest
        MOV     lr, r7
        ADD     r7, r7, #4
        SUBS    r6, r6, #1
        BHI     %BT01
; No entry found - give an error
99
        MOV     pc, #0

; Found entry higher than or equal to required
found_next_highest
        MOVEQ   lr, r7
        CMP     lr, #0
        BEQ     %BT99
        LDRB    r0, [lr,#1]
        ADD     r8, r8, r0, LSL #16
        LDRB    r1, [lr,#2]
        ADD     r9, r9, r1, LSL #16
        LDRB    r2, [lr,#3]
        ADD     r10, r10, r2, LSL #16
        CMP     r7, lr
        BEQ     found_next_is_equal
; r0,r1,r2 = differences in colour
        LDRB    r3, [r7,#1]
        SUB     r0, r3, r0
        LDRB    r3, [r7,#2]
        SUB     r1, r3, r1
        LDRB    r3, [r7,#3]
        SUB     r2, r3, r2
; r4 = difference in device colour
        LDRB    r3, [lr]
        LDRB    r4, [r7]
        SUB     r4, r4, r3
; r3 = difference between reqd device and known
        SUB     r3, r5, r3
; Now get 2^16*r3/r4 = r6
        MOV     r3, r3, LSL #16
        DivRem  r6, r3, r4, r5, norem
; Now r8 += r0*r3/r4, r9+=r1*r3/r4, etc.
        MLA     r8, r6, r0, r8
        MLA     r9, r6, r1, r9
        MLA     r10, r6, r2, r10
found_next_is_equal
; Exit
        Pull    "r0,r1,r2,r3,r4,r5,r6,r7,PC"
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


        END
@


4.3
log
@32-bit compatible.

Version 1.69. Tagged as 'Colours-1_69'
@
text
@d176 1
a176 1
        DivRem  r6, r3, r4, r5
@


4.2
log
@Spinner and Ursula branches merged.
Changed to use srccommit.

Version 1.67. Tagged as 'Colours-1_67'
@
text
@d24 1
a24 1
        Pull    "R2,PC",,^
d125 1
a125 1
        Pull    "r5,r6,r7,r8,r9,r10,PC",,^
@


4.1
log
@Initial revision
@
text
@d19 1
a19 1
convert_screen_colour2 ROUT                                      
d33 1
a33 1
      [ Version <= 065
d41 1
a41 1
        
d45 1
a45 1
           
d50 1
a50 1
10     
d93 1
a93 1
        MOV     r4, r4, LSR #8     
d98 1
a98 1
       
d149 2
a150 2
found_next_highest         
        MOVEQ   lr, r7       
d152 1
a152 1
        BEQ     %BT99        
d167 1
a167 1
        SUB     r2, r3, r2        
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
