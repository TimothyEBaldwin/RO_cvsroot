head	4.2;
access;
symbols
	RO_5_07:4.2
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	DrawFile-1_49:4.1
	nicke_DrawFile-1_48:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	99.11.30.11.48.53;	author sbrodie;	state dead;
branches;
next	4.1;

4.1
date	96.11.05.09.42.51;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.42.51;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.12.19;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.49.52;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.12.51;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  Removed C compiler output files.
  Removed assembler.
Detail:
  Removed unnecessary assembler - which was just cc -S output for the C
    files!
  Imports the muldiv and riscosa (osvarlen) functions from AsmUtils.
Admin:
  Requires AsmUtils 0.03 or later.
  RAM build tested.

Version 1.50. Tagged as 'DrawFile-1_50'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; generated by Norcroft RISC OS ARM C vsn 4.10 [Jan 13 1993]
a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lr RN 14
pc RN 15

f0 FN 0
f1 FN 1
f2 FN 2
f3 FN 3
f4 FN 4
f5 FN 5
f6 FN 6
f7 FN 7

        AREA |C$$code|, CODE, READONLY

        IMPORT  |__main|
|x$codeseg|
        B       |__main|

        IMPORT  |x$stack_overflow|
        IMPORT  callback
        EXPORT  declare
declare
        MOV     ip, sp
        STMFD   sp!, {v1,v2,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        SUB     sp, sp, #24
        STR     a1, [sp, #8]
        STR     a2, [sp, #4]
        MOV     a1, #0
        STR     a1, [sp, #12]
        STR     a1, [sp, #16]
        ADD     v1, a2, a3
        ADD     a1, a2, #40
        STR     a1, [sp, #20]
        LDR     v2, [pc, #L00004c-.-8]
        LDR     ip, [sl, #0]
        ADD     v2, ip, v2
        B       |L000080.J5.declare|
L00004c
        IMPORT  main_declaration_callback
        DCD     main_declaration_callback
|L000050.J4.declare|
        STR     a1, [sp, #0]
        LDR     a4, [a1, #0]
        MOV     a2, sp
        LDR     a1, [v2, #0]
        MOV     a3, #1
        BL      callback
        ADD     a1, sp, #20
        LDR     a2, [sp, #20]
        LDR     a2, [a2, #4]
        LDR     a3, [a1, #0]
        ADD     a2, a2, a3
        STR     a2, [a1, #0]
|L000080.J5.declare|
        LDR     a1, [sp, #20]
        CMPS    a1, v1
        BLT     |L000050.J4.declare|
        LDR     a1, [sp, #16]
        LDMEA   fp, {v1,v2,fp,sp,pc}^

        IMPORT  xpdriver_declare_font
        IMPORT  strlen
        EXPORT  declare_font_table
declare_font_table
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,v5,v6,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        SUB     sp, sp, #4
        MOV     v4, #0
        MOV     v2, v4
        MOV     v1, a2
        LDR     a1, [v1, #0]
        STR     a1, [v1, #12]
        LDR     a2, [a1, #4]
        ADD     v6, a1, a2
        LDR     a1, [v1, #8]
        ANDS    a1, a1, #1
        MOVEQ   a1, v4
        MOVNE   a1, #1
        ORR     v5, a1, #2
        LDR     a1, [v1, #12]
        ADD     a1, a1, #8
        STR     a1, [sp, #0]
        B       |L000124.J8.declare_font_table|
|L0000ec.J7.declare_font_table|
        ADD     a2, a1, #1
        MOV     a3, v5
        MOV     a1, #0
        BL      xpdriver_declare_font
        MOVS    v2, a1
        BNE     |L00013c.J11.declare_font_table|
        MOV     v3, sp
        LDR     a1, [sp, #0]
        ADD     a1, a1, #1
        BL      strlen
        ADD     a2, a1, #2
        LDR     a1, [v3, #0]
        ADD     a1, a2, a1
        STR     a1, [v3, #0]
|L000124.J8.declare_font_table|
        LDR     a1, [sp, #0]
        CMPS    a1, v6
        BGE     |L00013c.J11.declare_font_table|
        LDRB    a2, [a1, #0]
        CMPS    a2, #0
        BNE     |L0000ec.J7.declare_font_table|
|L00013c.J11.declare_font_table|
        LDR     a1, [v1, #16]
        CMPS    a1, #0
        STREQ   v2, [v1, #16]
        CMPS    v2, #0
        MOVNE   a1, v4
        MOVEQ   a1, #1
        LDMEA   fp, {v1,v2,v3,v4,v5,v6,fp,sp,pc}^

        EXPORT  declare_group
declare_group
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,v5,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v4, #0
        MOV     v2, v4
        MOV     v1, a2
        LDR     a1, [v1, #0]
        LDR     a2, [a1, #4]
        ADD     v3, a1, a2
        ADD     a1, a1, #36
        STR     a1, [sp, #-4]!
        LDR     v5, [pc, #L00004c-.-8]
        LDR     ip, [sl, #0]
        ADD     v5, ip, v5
        B       |L0001d0.J5.declare_group|
|L00019c.J4.declare_group|
        STR     a1, [v1, #0]
        LDR     a1, [sp, #0]
        LDR     a4, [a1, #0]
        MOV     a2, v1
        LDR     a1, [v5, #0]
        MOV     a3, #1
        BL      callback
        MOV     a1, sp
        LDR     a2, [sp, #0]
        LDR     a2, [a2, #4]
        LDR     a3, [a1, #0]
        ADD     a2, a2, a3
        STR     a2, [a1, #0]
|L0001d0.J5.declare_group|
        LDR     a1, [sp, #0]
        CMPS    a1, v3
        BLT     |L00019c.J4.declare_group|
        LDR     a1, [v1, #16]
        CMPS    a1, #0
        STREQ   v2, [v1, #16]
        CMPS    v2, #0
        MOVNE   a1, v4
        MOVEQ   a1, #1
        LDMEA   fp, {v1,v2,v3,v4,v5,fp,sp,pc}^

        EXPORT  declare_tagged
declare_tagged
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,v4,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v4, #0
        MOV     v3, v4
        MOV     v2, a2
        LDR     a1, [v2, #0]
        ADD     a1, a1, #28
        STR     a1, [v2, #0]
        LDR     a4, [a1, #0]
        MOV     a2, v2
        LDR     a1, [pc, #L00004c-.-8]
        LDR     ip, [sl, #0]
        ADD     a1, ip, a1
        LDR     a1, [a1, #0]
        MOV     v1, #1
        MOV     a3, v1
        BL      callback
        LDR     a1, [v2, #16]
        CMPS    a1, #0
        STREQ   v3, [v2, #16]
        CMPS    v3, #0
        MOVNE   a1, v4
        MOVEQ   a1, v1
        LDMEA   fp, {v1,v2,v3,v4,fp,sp,pc}^

        IMPORT  textarea_declare
        EXPORT  declare_text_area
declare_text_area
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,fp,ip,lr,pc}
        SUB     fp, ip, #4
        CMPS    sp, sl
        BLLT    |x$stack_overflow|
        MOV     v3, #0
        MOV     v1, a2
        LDR     a1, [v1, #8]
        ANDS    a1, a1, #1
        MOV     v2, #1
        MOVEQ   a1, v3
        MOVNE   a1, v2
        ORR     a2, a1, #2
        LDR     a1, [v1, #0]
        BL      textarea_declare
        LDR     a2, [v1, #16]
        CMPS    a2, #0
        STREQ   a1, [v1, #16]
        CMPS    a1, #0
        MOVNE   a1, v3
        MOVEQ   a1, v2
        LDMEA   fp, {v1,v2,v3,fp,sp,pc}^

        AREA |C$$data|

|x$dataseg|

        END
@


4.1
log
@Initial revision
@
text
@@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
