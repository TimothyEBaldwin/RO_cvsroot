head	4.3;
access;
symbols
	DrawFile-1_59:4.3
	DrawFile-1_58:4.3
	DrawFile-1_57:4.3
	DrawFile-1_56:4.3
	DrawFile-1_55:4.3
	DrawFile-1_54:4.3
	DrawFile-1_53:4.3
	RO_5_07:4.3
	DrawFile-1_52:4.3
	DrawFile-1_51:4.2
	dellis_autobuild_BaseSW:4.2
	sbrodie_sedwards_16Mar2000:4.2
	DrawFile-1_50:4.2
	dcotton_autobuild_BaseSW:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	DrawFile-1_49:4.2
	nicke_DrawFile-1_48:4.1.7.2
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	hsimons_BOCA-1_2-Release:4.1.7.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.2
	ARTtmp:4.1.7.2.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2002.11.22.21.41.26;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.17.49.22;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.42.40;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.42.40;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.11.12;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.49.20;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.12.20;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	96.12.11.15.30.07;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Made to work with C99

Version 1.52. Tagged as 'DrawFile-1_52'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*declare.c - implementation file for drawfile_declare_fonts*/

/*From CLib*/
#include <stddef.h>
#include <string.h>

/*From OSLib*/
#include "drawfile.h"
#include "os.h"
#include "pdriver.h"

/*From Support*/
#include "riscos.h"
#include "jc_trace.h"
#include "trfm.h"

/*Local*/
#include "declare.h"
#include "main.h"
#include "textarea.h"
#include "verify.h"

/*------------------------------------------------------------------------*/
os_error *declare (bits flags, drawfile_diagram *diagram, int size)

{  drawfile_object *end, *o;
   drawfile_declare_fonts_state state;
   os_error *error = NULL;
   osbool unclaimed;

   tracef ("declare\n");
   state.diagram    = diagram;
   state.font_table = NULL;
   state.flags      = flags;
   state.error      = NULL;

   tracef ("declare: despatching\n");
   end = (drawfile_object *) &((byte *) diagram) [size];
   for (o = diagram->objects; o < end; *(byte **) &o += o->size)
   {  state.object = o;
      if ((error = callback (main_declaration_callback, &state, &unclaimed,
            1, o->type)) != NULL)
         goto finish;

      if (unclaimed && o->type >= 0x100)
      {  if ((error = xservice_draw_object_declare_fonts (o->type, &state,
               NULL)) != NULL)
            goto finish;
      }
   }

finish:
   return error != NULL? error: state.error;
}
/*------------------------------------------------------------------------*/
os_error *declare_font_table (void *null, void *s, osbool *unclaimed)

{  os_error *error = NULL;
   drawfile_declare_fonts_state *state = (drawfile_declare_fonts_state *) s; /*save typing*/
   drawfile_font_def *font_def, *end;
   bits flags;

   tracef ("declare_font_table\n");
   NOT_USED (null)

   /*Save the pointer.*/
   state->font_table = state->object;

   end = (drawfile_font_def *) &((byte *) state->font_table)
         [state->font_table->size];
   flags = ((state->flags & drawfile_NO_DOWNLOAD) != NONE?
         pdriver_NO_DOWNLOAD: NONE) | pdriver_KERNED;

   for (font_def = state->font_table->data AS font_table.font_def;
         font_def < end && font_def->font_index != 0; *(byte **) &font_def
         += drawfile_SIZEOF_FONT_DEF (strlen (font_def->font_name) + 1))
   {  tracef ("declaring font \"%s\"\n" _ font_def->font_name);
      if ((error = xpdriver_declare_font (0, font_def->font_name, flags))
            != NULL)
         goto finish;
   }

   *unclaimed = FALSE;

finish:
   if (state->error == NULL) state->error = error;
   if (error != NULL)
      tracef ("declare_font_table: \"%s\"\n" _ error->errmess);
   return NULL;
}
/*------------------------------------------------------------------------*/
os_error *declare_group (void *null, void *s, osbool *unclaimed)

{  os_error *error = NULL;
   drawfile_declare_fonts_state *state = (drawfile_declare_fonts_state *) s /*save typing*/;
   drawfile_object *o, *end;
   osbool u;

   tracef ("declare_group\n");
   NOT_USED (null)

   end = (drawfile_object *) &((byte *) state->object)
         [state->object->size];
   for (o = (drawfile_object *) &state->object->data AS group.objects;
         o < end; *(byte **) &o += o->size)
   {  state->object = o;
      if ((error = callback (main_declaration_callback, state, &u, 1,
            o->type)) != NULL)
         goto finish;

      if (u && o->type >= 0x100)
      {  if ((error = xservice_draw_object_declare_fonts (o->type, state,
               NULL)) != NULL)
            goto finish;
      }
   }

   *unclaimed = FALSE;

finish:
   if (state->error == NULL) state->error = error;
   if (error != NULL)
      tracef ("declare_group: \"%s\"\n" _ error->errmess);
   return NULL;
}
/*------------------------------------------------------------------------*/
os_error *declare_tagged (void *null, void *s, osbool *unclaimed)

{  os_error *error = NULL;
   drawfile_declare_fonts_state *state = (drawfile_declare_fonts_state *) s /*save typing*/;
   drawfile_object *o, *end;
   osbool u;

   tracef ("declare_tagged\n");
   NOT_USED (null)

   o = (drawfile_object *) &state->object->data AS tagged.object;
   end = (drawfile_object *) &((byte *) state->object)
         [state->object->size];

   state->object = o;
   if ((error = callback (main_declaration_callback, state, &u, 1,
         o->type)) != NULL)
      goto finish;

   if (u && o->type >= 0x100)
      if ((error = xservice_draw_object_declare_fonts (o->type, state, NULL))
            != NULL)
         goto finish;

   *unclaimed = FALSE;

finish:
   if (state->error == NULL) state->error = error;
   if (error != NULL)
      tracef ("declare_tagged: \"%s\"\n" _ error->errmess);
   return NULL;
}
/*------------------------------------------------------------------------*/
os_error *declare_text_area (void *null, void *s, osbool *unclaimed)

{  os_error *error = NULL;
   drawfile_declare_fonts_state *state = (drawfile_declare_fonts_state *) s; /*save typing*/

   tracef ("declare_text_area\n");
   NOT_USED (null)

   if ((error = textarea_declare (state->object, ((state->flags &
         drawfile_NO_DOWNLOAD) != NONE? pdriver_NO_DOWNLOAD: NONE) |
         pdriver_KERNED)) != NULL)
      goto finish;

   *unclaimed = FALSE;

finish:
   if (state->error == NULL) state->error = error;
   if (error != NULL)
      tracef ("declare_text_area: \"%s\"\n" _ error->errmess);
   return NULL;
}
@


4.2
log
@Version Spin_merge taken
@
text
@d43 1
a43 1
   bool unclaimed;
d70 1
a70 1
os_error *declare_font_table (void *null, void *s, bool *unclaimed)
d106 1
a106 1
os_error *declare_group (void *null, void *s, bool *unclaimed)
d111 1
a111 1
   bool u;
d141 1
a141 1
os_error *declare_tagged (void *null, void *s, bool *unclaimed)
d146 1
a146 1
   bool u;
d174 1
a174 1
os_error *declare_text_area (void *null, void *s, bool *unclaimed)
@


4.1
log
@Initial revision
@
text
@d28 1
a28 1
#include "trace.h"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Fixed name clash with trace.h:  New name jc_trace.h
@
text
@d28 1
a28 1
#include "jc_trace.h"
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
