head	4.1;
access;
symbols
	ADFS-3_54:4.1
	ADFS-3_53:4.1
	ADFS-3_52:4.1
	ADFS-3_51:4.1
	ADFS-3_50:4.1
	ADFS-3_49:4.1
	ADFS-3_48:4.1
	ADFS-3_47:4.1
	ADFS-3_46:4.1
	ADFS-3_45:4.1
	ADFS-3_44:4.1
	ADFS-3_43:4.1
	ADFS-3_42:4.1
	ADFS-3_41:4.1
	ADFS-3_40:4.1
	ADFS-3_39:4.1
	ADFS-3_38:4.1
	ADFS-3_37:4.1
	ADFS-3_36:4.1
	RO_5_07:4.1
	ADFS-3_35:4.1
	ADFS-3_34:4.1
	ADFS-3_33:4.1
	dellis_autobuild_BaseSW:4.1
	ADFS-3_32:4.1
	Ursula_merge:4.1
	Ursula_RiscPC_merge:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	sbrodie_UrsulaRiscPC_ADFS-3_30:4.1
	Ursula_RiscPC_bp:4.1
	nturton_ADFS-3_29:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sproven_ADFS-3_31:4.1
	nicke_ADFS_3_26:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	sproven_330:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.31.14;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.31.14;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.34.56;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.28.33;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.24.06;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@New ADFS SWIs and service calls

;*********************************************************************

ADFS_ControllerType
;
; Returns the controller type of a disc
;
; Entry:
;    R0 = drive number (0..7)
;
; Exit:
;    R0 = controller type
;         0 => disc not present
;         1 => 1772
;         2 => 765
;         3 => ST506
;         4 => IDE

;*********************************************************************

ADFS_PowerControl
;
; Controls the power-saving features of the ADFS system
; It can be dangerous to use the drive spin control SWIs on drives that do
; not fully support them: the controllers on at least two drives tested hang
; up when autospindown is enabled and a reset does not recover the situation
; (power-on reset does).
;
; Entry:
;    R0 = reason
;
;         0 => read drive spin status
;           Entry:
;              R1 = drive (4..7)
;           Exit:
;              R2 = 0 => drive is not spinning
;                  !0 => drive is spinning
;
;         1 => set drive autospindown
;           Entry:
;              R1 = drive (4..7)
;              R2 =  0 => disable autospindown and spinup drive
;                   !0 => set autospindown to R2*5 seconds
;           Exit:
;                 R3 = previous enable value
;
;         2 => manual control of drive spin without affecting autospindown
;           Entry:
;              R1 = drive (4..7)
;              R2 = 0 => spin down immediately
;                  !0 => spin up immediately

;*********************************************************************

ADFS_SetIDEController
;
; Gives the IDE driver the details of an alternative controller.
;
; Entry:
;    R2 -> IDE controller
;    R3 -> interrupt status of controller
;    R4 =  AND with status, NE => IRQ
;    R5 -> interrupt mask
;    R6 =  OR into mask enables IRQ
;    R7 -> data read routine (0 for default)
;    R8 -> data write routine (0 for default)
;    SB -> static workspace
;
; Exit:
;    VS => error
;          R0 = error
;    VC => no error
;          R0 preserved
;    All other registers preserved

;*********************************************************************

ADFS_IDEUserOp
;
; Direct user interface for low-level IDE commands.
; Must not be called in background.
;
; Entry:
;    R0 = b0 = action
;              1 => reset controller
;              0 => process command
;         b25..b25 = transfer direction
;              00 => no transfer
;              01 => read
;              10 => write
;              11 reserved
;    R2 -> parameter block for command and results
;    R3 -> buffer
;    R4 = length to transfer
;    R5 = timeout in centiseconds (0 = default)
;    SB -> static workspace  
;    MODE: SVC
;    IRQ state: unknown
;
; Exit:
;    VS => error
;          R0 -> error block
;    VC => no error
;          R0 = command status (0 or a disc error number)
;          Parameter block updated
;    R3 updated
;    R4 updated
;    R5 undefined
;    All other registers preserved
;    IRQ state: preserved but IRQs enabled during call

;*********************************************************************

Service_ADFSPoduleIDE
;
; Issued by ADFS to locate an IDE podule.
;
; Entry:
;    R1 = Service_ADFSPoduleIDE
;    R2 -> current IDE controller
;    R3 -> interrupt status of controller
;    R4 =  AND with status, NE => IRQ
;    R5 -> interrupt mask
;    R6 =  OR into mask enables IRQ
;    R7 -> data read routine (0 for default)
;    R8 -> data write routine (0 for default)
;
; Exit:
;    R1 = Service_Serviced
;    R2 -> new IDE controller
;    R3 -> interrupt status of controller
;    R4 =  AND with status, NE => IRQ
;    R5 -> interrupt mask
;    R6 =  OR into mask enables IRQ
;    R7 -> data read routine (0 for default)
;    R8 -> data write routine (0 for default)

;*********************************************************************

Service_ADFSPoduleIDEDying
;
; Issued by podule module to tell ADFS of imminent demise.
;
; Entry:
;    R1 = Service_ADFSPoduleIDEDying
;
; Exit:
;    All registers preserved

;*********************************************************************
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
