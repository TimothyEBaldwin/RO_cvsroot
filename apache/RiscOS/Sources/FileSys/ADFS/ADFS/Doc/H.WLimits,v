head	4.1;
access;
symbols
	ADFS-3_54:4.1
	ADFS-3_53:4.1
	ADFS-3_52:4.1
	ADFS-3_51:4.1
	ADFS-3_50:4.1
	ADFS-3_49:4.1
	ADFS-3_48:4.1
	ADFS-3_47:4.1
	ADFS-3_46:4.1
	ADFS-3_45:4.1
	ADFS-3_44:4.1
	ADFS-3_43:4.1
	ADFS-3_42:4.1
	ADFS-3_41:4.1
	ADFS-3_40:4.1
	ADFS-3_39:4.1
	ADFS-3_38:4.1
	ADFS-3_37:4.1
	ADFS-3_36:4.1
	RO_5_07:4.1
	ADFS-3_35:4.1
	ADFS-3_34:4.1
	ADFS-3_33:4.1
	dellis_autobuild_BaseSW:4.1
	ADFS-3_32:4.1
	Ursula_merge:4.1
	Ursula_RiscPC_merge:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	sbrodie_UrsulaRiscPC_ADFS-3_30:4.1
	Ursula_RiscPC_bp:4.1
	nturton_ADFS-3_29:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sproven_ADFS-3_31:4.1
	nicke_ADFS_3_26:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	sproven_330:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.31.09;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.31.09;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.34.42;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.28.16;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.23.52;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@This document describes the hardware parameters relevant to ADFS.


Disc Drives
-----------

Speed stability:
For the purposes of formatting the speed stability of disc drives will be
assumed to be 1.5%.


Formats
-------

ADFS supports 3 formats, D, E and L. Here are the 'perfect' parameters for
these formats:
Format  g1s0    g1s1    g3      ss      spt     im
L       42      42      57      256     16      no
D       32+271  32+0    90      1024    5       no
E       32+271  32+0    90      1024    5       no

g1s0 - gap 1, side 0
g1s1 - gap 1, side 1
g3   - gap 3
ss   - sector size
spt  - sectors per track
im   - index mark


Controllers
-----------

These are the limit parameters for the two floppy controllers ADFS supports:

C       sptL    sptH    tl      th      l2slL   l2slH   fsnL    fsnH
1772    1       240     0       240     7       10      0       255
710     0       255     0       255     7       14      0       255

C       ff              FI              gap3
1772    00-f4, ff       optional        track length
710     00-ff           mandatory       255

C     - controller
sptL  - sectors per track, low
sptH  - sectors per track, high
tl    - track, low
th    - track, high
l2slL - log2 sector length, Low
l2slH - log2 sector length, high
fsnL  - sector number low (formatting)
fsnH  - sector number high (formatting)
ff    - format fill values allowed on all densities
FI    - formatting with ID mark
gap3  - gap3 maximum length (when formatting)


Track layouts
-------------

To clarify the terms, a description of track layout is given.

A track is layed out as follows:

<gap4a><ID><gap1><sector><gap3><sector><gap3><S..  ..r><gap3><Sector><gap4b>

The start of this diagram is where the index pulse occurs, and the end is
where the next index pulse occurs. Due to mechanical variation in speed the
time between the start and end varies, which is why there are gaps - the
gaps 'absorb' the speed variations. So, in words:
gap4a is the gap between the (mechanical) index pulse and the (magnetic)
        index mark.
ID is the index mark.
gap1 is the gap between the index mark and the 1st sector.
sector is a sector.
gap3 is the gap between sectors.
gap4b is the gap between the last sector and the index pulse.

A sector has the following format:

<sector ID><gap2><sector data>

Due to hardware limitations, gap2 is fixed. Each of sector ID and sector
data have a preamble or 00 bytes, a synchronisation patern, an
identification byte (which says what sort of information follows: ID or
Data), and the data itself (ID or data). The reason the data is separated
from the ID is that during sector writing the ID is read to determine which
bit of the disc is currently going under the head, then the drive is
switched to writing, which takes some time, and then a whole section of data
is written (the 00 bytes, sync bytes, ID byte and data). gap2 is there to
accomodate variations in hardware (different spin speeds etc).

Recommended formats:

(These values are extracted from the 1772 data sheet)
Dens    gap1    gap3    ~gap4
FM:     >=16    >=11    >=16
MFM:    >=32    >=24    >=16

Evaluation of 'does it fit' is:
    Low track length - gap1 + gap3 - (secsize + SecOvrhead + gap3)*secs >= min. gap4

If 'no', does min. gap1 and 3 fit?
  If still 'no' return error
  Otherwise divide slack amoungst gaps (incl. gap4)

Does the side/side skew invalidate gap4, if so shorten to min. gap4



@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
