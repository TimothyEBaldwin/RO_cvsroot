head	4.1;
access;
symbols
	PipeFS-0_24:4.1
	PipeFS-0_23:4.1
	RO_5_07:4.1
	PipeFS-0_22:4.1
	PipeFS-0_21:4.1
	PipeFS-0_20:4.1
	PipeFS-0_19:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	PipeFS-0_18:4.1
	Ursula_merge:4.1
	PipeFS-0_17:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_PipeFS-0_15:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.33.42;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.33.42;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.01.07;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.40.17;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.36.43;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@> net#arf:$.a500.riscos+.doc.Sleep

Author: Neil Raine
  Date: 13-Feb-91

The Sleep upcall
----------------

The sleep upcall provides a mechanism for a task to "block", ie. if it needs
to wait for something to happen and would like to let the rest of the system
have a go.

If the task is running in a task window, then the TaskWindow module traps
the upcall and starts polling the Wimp, returning to the task every so often
to allow it to continue (or call UpCall_Sleep again).

PipeFS calls UpCall_Sleep if a pipe being read becomes empty, or if one
being written to gets full, and thus cooperates with the Task Window.

UpCall_SleepNoMore is provided so that if the task which called PipeFS is
killed by the user, the pipe can be released.

Note that a process must not call UpCall_Sleep if it is not re-entrant, or
may have been called by a task which is not re-entrant.

For example, ADFS is not re-entrant, so cannot call UpCall_Sleep, because if
it did, then the Task Window would poll the Wimp, and some other task might
call ADFS, which would result in an error.

Definition:

        SWI OS_UpCall
        In:     R0 = UpCall_Sleep (6)
                R1 -> poll word (in a global memory area, eg. the RMA)
        Out:    R0 = 0 if upcall claimed

        The task wants to sleep until the contents of the poll word become
        non-zero.

        The only program which should intercept this upcall is the task
        window, which copies away the supervisor stack, flattens it,
        switches to USR mode, stashes any pending callback and polls the
        Wimp until the poll word becomes non-zero.  It then goes back to SVC
        mode, restores the supervisor stack, restores the pending callback
        (if any) and returns to the caller.

        The caller should make the call, then set the poll word non-zero
        when the termination condition is met.  If this cannot be done
        externally, ie. in another Wimp task or under interrupt, then the
        poll word should be set non-zero on entry, so the callee will return
        to the caller after each Wimp Poll.

        Note that the callee may return before the poll word becomes
        non-zero, but may not return if the poll word does not become
        non-zero.

                poll word non-zero => callee will return
                poll word zero => callee may or may not return

        SWI OS_UpCall
        In:     R0 = UpCall_SleepNoMore (7)
                R1 -> poll word
        Out:    VC => R0 preserved
                VS => R0 -> error block
                This upcall should not be claimed unless an error is to be
                returned.

        This call is made by PipeFS if an open pipe is closed or deleted. 
        The Task Window module then traps this and objects if any of its
        tasks are currently waiting for the poll word related to that pipe
        to become non-zero, by returning an error.

        This prevents a *Shut command from deleting the workspace which is
        being accessed by the Task Window, which could potentially cause
        address exceptions.

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
