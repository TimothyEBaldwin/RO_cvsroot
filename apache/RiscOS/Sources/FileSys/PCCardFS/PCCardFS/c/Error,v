head	4.1;
access;
symbols
	RO_5_07:4.1
	PCCardFS-0_10:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.33.26;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.33.26;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.59.01;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.39.22;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.35.47;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*****************************************************************************************/
/***                                                                                   ***/
/***  Error.c                                                                          ***/
/***                                                                                   ***/
/***  Application:   PCMCIA_Drv Module                                                 ***/
/***  Version:       0.01                                                              ***/
/***                                                                                   ***/
/***  By:            Neil Critchell, Acorn Computers Ltd.                              ***/
/***  Date:          15th July 1993                                                    ***/
/***                                                                                   ***/
/***  Purpose:       Contains all the code needed to handle any error messages         ***/
/***                 generated by the PCMCIA driver.                                   ***/
/***                                                                                   ***/
/***  History:       0.01 15th July 1993 - Original version                            ***/
/***                                                                                   ***/
/*****************************************************************************************/

/*****************************************************************************************/
/***                                                                                   ***/
/***  Routines:                                                                        ***/
/***    SetError()                                                                     ***/
/***                                                                                   ***/
/*****************************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include <string.h>

#include "Defs.h"
#include "Structs.h"
#include "Error.h"
#include "Debug.h"
#include "Variables.h"


/*****************************************************************************************/
/***                                                                                   ***/
/***  SetError(error_code)                                                             ***/
/***                                                                                   ***/
/***  Takes a PCMCIA Driver Error code value and returns a pointer to a standard RISC  ***/
/***  OS error message block.                                                          ***/
/***                                                                                   ***/
/***  Return:                                                                          ***/
/***    pointer to a global _kernel_oserror datablock for specified error.             ***/
/***                                                                                   ***/
/*****************************************************************************************/
_kernel_oserror *SetError(PCCardFS_ErrorCode error_code)
    {
    _kernel_swi_regs    callregs;

    if (error_code != NO_ERROR) {
        #if Debug == TRUE
            DebugMessage("cK", "Trying to look up error %d\n", error_code);
        #endif
        KernErrorBlock.errnum = ERROR_BASE + error_code;
        #if Debug == TRUE
            DebugMessage("cK", "Reckon it's real error number is %d\n", KernErrorBlock.errnum);
        #endif
        sprintf(KernErrorBlock.errmess, ERROR_MESSAGE_TOKEN_STRING, error_code);
        #if Debug == TRUE
            DebugMessage("cK", "So, it's token is %s\n", KernErrorBlock.errmess);
        #endif
        callregs.r[0] = (int)&KernErrorBlock;
        callregs.r[1] = (int)Message_FileDescriptor;
        callregs.r[2] = (int)&KernErrorBlock;
        callregs.r[3] = 0;
        callregs.r[4] = 0;
        callregs.r[5] = 0;
        callregs.r[6] = 0;
        callregs.r[7] = 0;
        _kernel_swi(MessageTrans_ErrorLookup, &callregs, &callregs);
        if(KernErrorBlock.errnum != ERROR_BASE + error_code) {
            KernErrorBlock.errnum = ERROR_BASE;
            strcpy(KernErrorBlock.errmess, "Bah, someone's nicked the messages.");
        }

        #if Debug == TRUE
            DebugMessage("cK", "\n\n>>>>>  Error: &%8X, \"", KernErrorBlock.errnum);
            DebugMessage("cK", "%s", KernErrorBlock.errmess);
            DebugMessage("cK", "\"  <<<<<\n\n");
        #endif
    return(&KernErrorBlock);
    }
    else return(NULL);
}
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
