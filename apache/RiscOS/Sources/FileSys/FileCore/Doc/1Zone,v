head	1.1;
access;
symbols
	FileCore-3_75:1.1
	FileCore-3_74:1.1
	FileCore-3_73:1.1
	FileCore-3_72:1.1
	FileCore-3_71:1.1
	FileCore-3_70:1.1
	FileCore-3_69:1.1
	FileCore-3_68:1.1
	FileCore-3_67:1.1
	FileCore-3_66:1.1
	FileCore-3_65:1.1
	FileCore-3_64:1.1
	FileCore-3_63:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.20.14.09.55;	author rsprowson;	state Exp;
branches;
next	;
commitid	qZtNVkGjzh5uqdYw;


desc
@@


1.1
log
@Add support for 2k and 4k sector sizes
s/Commands:
Make sure the defect list (via *DEFECT) does a read/modify/write of the boot block on 2k and 4k drives.
The checksum generation code was largely common and although commented to be called as though it was common wasn't actually due to a cut and paste mistake on label 37. Deleted common/uncalled code.
s/DebugOpts; s/FileCore15:
Peripheral changes.
s/FileCore20:
Read in the defect list via an intermediate buffer then copy out into the dynamic area.
s/FileCore70:
Declare the buffer size as 4k to FileSwitch, internally FileCore expresses this in a single byte * 32 so is now at the limit of the range of FcbBufSz.
s/FileCore80:
Perform transfers in the foreground when the sector size exceeds FileCore's 1k buffers. It's not worth bothering.
s/FormSWIs; s/Identify:
Vet and reject attempts to layout invalid zone/sector size combos (see Doc/1Zone).
Doc/MiscOp:
Correct a couple of calculation mistakes.
Doc/1Zone:
New documentation detailing the possible valid combinations of a 1 zone fixed disc, and why for 2k and 4k sectors this is rejected.
Test/BigSectors:
Patch to apply to RAMFS to make it a 4k filing system. Note, the smallest 2 zone RAM disc with 4k sectors is 4052kB, in which case the map is at +3F0000; copy at +3F2000; root directory object at +3F4000.

Version 3.63. Tagged as 'FileCore-3_63'
@
text
@Placement of the boot block for 1 zone discs
============================================
The 15-bit free link in new map discs sets the maximum number of bits in a map block to 32768, hence bytes in a map block to 32768/8 = 4kB.
As a map block is a single sector, the sector also cannot exceed 4kB.

Assuming 256; 512; 1024; 2048; 4096 sector sizes it is therefore possible to enumerate all 10 layouts of the single zone case (where the map must fit in too).

Recall that old map discs have a fixed size free space map and don't have zones, so can be ignored here.

Recall the new map discs have the disc record at the start of zone 0, when the map is also in zone 0 it is lower capacity than usual.

From these tables it can be seen that new dir can only permit single zone layouts with boot blocks that use log2ss=8;9 and big dir can use log2ss=8;9;10.
FileCore therefore should detect and reject the invalid combinations.

For 2 or more zones there's no problem, since only the disc record needs to fit under the 0C00 limit.

For log2ss=8
------------
New dir                                Big dir
0000-00FF Map 1                        0000-00FF Map 1
0100-01FF Map 2                        0100-01FF Map 2
0200-09FF Root directory               0200-0BFF Gap (root is in object #3)
0A00-0BFF Gap                          0C00      Boot block
0C00      Boot block

For log2ss=9
------------
New dir                                Big dir
0000-01FF Map 1                        0000-01FF Map 1
0200-03FF Map 2                        0200-03FF Map 2
0400-0BFF Root directory               0400-0BFF Gap (root is in object #3)
0C00      Boot block                   0C00      Boot block

For log2ss=10
-------------
New dir                                Big dir
0000-03FF Map 1                        0000-03FF Map 1
0400-07FF Map 2                        0400-07FF Map 2
0800-1000 Root overlaps boot block!    0800-0BFF Gap (root is in object #3)
0C00      Invalid!                     0C00      Boot block

For log2ss=11
-------------
New dir                                Big dir
0000-07FF Map 1                        0000-07FF Map 1
0800-1000 Map 2 overlaps boot block!   0800-1000 Map 2 overlaps boot block!
0C00      Invalid!                     0C00      Invalid!

For log2ss=12
-------------
New dir                                Big dir
0000-1000 Map 1 overlaps boot block!   0000-1000 Map 1 overlaps boot block!
0C00      Invalid!                     0C00      Invalid!
@
