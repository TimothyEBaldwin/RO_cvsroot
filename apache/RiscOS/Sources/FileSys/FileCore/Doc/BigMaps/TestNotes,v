head	1.2;
access;
symbols
	FileCore-3_75:1.2
	FileCore-3_74:1.2
	FileCore-3_73:1.2
	FileCore-3_72:1.2
	FileCore-3_71:1.2
	FileCore-3_70:1.2
	FileCore-3_69:1.2
	FileCore-3_68:1.2
	FileCore-3_67:1.2
	FileCore-3_66:1.2
	FileCore-3_65:1.2
	FileCore-3_64:1.2
	FileCore-3_63:1.2
	FileCore-3_62:1.2
	FileCore-3_61:1.2
	FileCore-3_60:1.2
	FileCore-3_59:1.2
	FileCore-3_58:1.2
	FileCore-3_57:1.2
	FileCore-3_56:1.2
	FileCore-3_55:1.2
	FileCore-3_54:1.2
	FileCore-3_53:1.2
	FileCore-3_52:1.2
	FileCore-3_51:1.2
	FileCore-3_50:1.2
	FileCore-3_49:1.2
	FileCore-3_48:1.2
	FileCore-3_47:1.2
	FileCore-3_46:1.2
	FileCore-3_45:1.2
	FileCore-3_44:1.2
	FileCore-3_43:1.2
	FileCore-3_42:1.2
	FileCore-3_41:1.2
	FileCore-3_40:1.2
	FileCore-3_39:1.2
	FileCore-3_38:1.2
	FileCore-3_37:1.2
	FileCore-3_36:1.2
	FileCore-3_35:1.2
	FileCore-3_34:1.2
	FileCore-3_33:1.2
	RO_5_07:1.2
	FileCore-3_32:1.2
	FileCore-3_31:1.2
	FileCore-3_30:1.2
	FileCore-3_29:1.2
	FileCore-3_28:1.2
	FileCore-3_25-4_9_2_2:1.2
	FileCore-3_27:1.2
	FileCore-3_26:1.2
	FileCore-3_22-4_6_2_1:1.2
	bavison_FileCore-3_22_dev_bp:1.2
	bavison_FileCore-3_22:1.2.0.4
	FileCore-3_25-4_9_2_1:1.2
	HAL:1.2.0.2
	FileCore-3_25:1.2
	FileCore-3_24:1.2
	FileCore-3_23:1.2
	dellis_autobuild_BaseSW:1.2
	FileCore-3_22:1.2
	dcotton_autobuild_BaseSW:1.2
	Ursula_merge:1.1.2.1
	ROL_merge:1.1.2.1
	FileCore-3_21:1.2
	ROL_Ursula_merge:1.1.2.1
	Ursula_RiscPC_merge:1.1.2.1
	ROL_FileCore-3_21:1.1.2.1
	ROL_FileCore-3_20:1.1.2.1
	ROL:1.1.2.1.0.4
	ROL_bp:1.1.2.1
	Ursula_RiscPC_bp:1.1.2.1
	FileCore-3_18:1.1.2.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.2.1
	Ursula_RiscPC:1.1.2.1.0.2
	aglover_FileCore-3_17:1.1.2.1
	sproven_FileCore-3_16:1.1.2.1
	rthornb_UrsulaBuild-19Aug1998:1.1.2.1
	UrsulaBuild_FinalSoftload:1.1.2.1
	rthornb_UrsulaBuild-12Aug1998:1.1.2.1
	aglover_UrsulaBuild-05Aug1998:1.1.2.1
	rthornb_UrsulaBuild-29Jul1998:1.1.2.1
	rthornb_UrsulaBuild-22Jul1998:1.1.2.1
	rthornb_UrsulaBuild-15Jul1998:1.1.2.1
	rthornb_UrsulaBuild-07Jul1998:1.1.2.1
	rthornb_UrsulaBuild-17Jun1998:1.1.2.1
	rthornb_UrsulaBuild-03Jun1998:1.1.2.1
	rthornb_UrsulaBuild-27May1998:1.1.2.1
	rthornb_UrsulaBuild-21May1998:1.1.2.1
	sproven_FileCore-3_15:1.1.2.1
	sproven_314:1.1.2.1
	rthornb_UrsulaBuild_01May1998:1.1.2.1
	sproven_313:1.1.2.1
	Ursula:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2000.05.09.11.36.43;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.04.02.15.46.36;	author sproven;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	98.04.02.15.46.37;	author sproven;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Merge of Ursula branch to the trunk.
Detail:
  This module represents the latest version of FileCore incorporating
    both the Ursula changes and the ROL changes as we have them to date.
  Changes from ROL-FileCore-3_21 are basically the stripping of trailling
    spaces and the change of Version to Module_Version in the conditionals.
    No other changes.
Admin:
  ROL branch tagged ROL_merge
  Ursula branch tagged Ursula_merge.
  Untested, but essentially the same as ROL-FileCore-3_21, so no problems
    expected.

Version 3.21. Tagged as 'FileCore-3_21'
@
text
@
Notes on potential problems/issues with FileCore guinea-pigs:

1) Fixing broken discs.

   On the old FileCore, if someone's disc became corrupted, the disc
   could be recovered (potentially with some data loss) using fsck,
   by Sergio Monesi.  Because this is 3rd party software, it won't
   be able to cope with new disc formats.  So we have to fix the
   discs on our own.  We don't yet have automated tools for this, so
   it'd have to be done manually (or some work is needed on writing
   the tools).  The knowledge to write these sort of tools, or to 
   manually fix a FileCore disc is not common.
   
   If the problem occurs on an old format disc, then fixing will be
   easier since fsck should be able to run on that machine.

2) Corruption of files.

   Files might be corrupted, but you may not notice.  If files that
   are rarely accessed are damaged, you might not know until months
   later.


What can be done to protect against problems or reduce their impact?

1) Make a weekly back-up onto CD-ROM.  Keep all the back-ups, so that
   if something gets corrupted months ago, it'll still be fine.
   
   This is relatively time consuming, though.

2) Have two discs on the system, one old format, one new format.  If
   one is on a RapIDE card, for example, and the other is on ADFS, then
   it's possible to make one, or the other, or both accessible.  Then,
   one disc can be kept safe while the other is put "at risk".
   
   Problems:  Transferring data between the two needs them both accessible,
              so risk can't be eliminated entirely.

3) Take regular copies of the free space map/boot block.

   If this is done, then if the map gets badly damaged (beyond repair) then
   recovery is much easier.  Any work done since the copy of the map being
   taken may still be lost; there's no guarantee that any given file or 
   directory will be recoverable, however.

4) Regularly check the map for problems (eg daily).  My map checker tool finds
   problems which *checkmap will not report; if problems are occuring then they
   will be spotted sooner rather than later.

@


1.1
log
@file TestNotes was initially added on branch Ursula.
@
text
@d1 50
@


1.1.2.1
log
@Fixed bug in handling of Service_EnumerateFormats which was preventing all
formats being listed by ADFSFiler.
@
text
@a0 50

Notes on potential problems/issues with FileCore guinea-pigs:

1) Fixing broken discs.

   On the old FileCore, if someone's disc became corrupted, the disc
   could be recovered (potentially with some data loss) using fsck,
   by Sergio Monesi.  Because this is 3rd party software, it won't
   be able to cope with new disc formats.  So we have to fix the
   discs on our own.  We don't yet have automated tools for this, so
   it'd have to be done manually (or some work is needed on writing
   the tools).  The knowledge to write these sort of tools, or to 
   manually fix a FileCore disc is not common.
   
   If the problem occurs on an old format disc, then fixing will be
   easier since fsck should be able to run on that machine.

2) Corruption of files.

   Files might be corrupted, but you may not notice.  If files that
   are rarely accessed are damaged, you might not know until months
   later.


What can be done to protect against problems or reduce their impact?

1) Make a weekly back-up onto CD-ROM.  Keep all the back-ups, so that
   if something gets corrupted months ago, it'll still be fine.
   
   This is relatively time consuming, though.

2) Have two discs on the system, one old format, one new format.  If
   one is on a RapIDE card, for example, and the other is on ADFS, then
   it's possible to make one, or the other, or both accessible.  Then,
   one disc can be kept safe while the other is put "at risk".
   
   Problems:  Transferring data between the two needs them both accessible,
              so risk can't be eliminated entirely.

3) Take regular copies of the free space map/boot block.

   If this is done, then if the map gets badly damaged (beyond repair) then
   recovery is much easier.  Any work done since the copy of the map being
   taken may still be lost; there's no guarantee that any given file or 
   directory will be recoverable, however.

4) Regularly check the map for problems (eg daily).  My map checker tool finds
   problems which *checkmap will not report; if problems are occuring then they
   will be spotted sooner rather than later.

@
