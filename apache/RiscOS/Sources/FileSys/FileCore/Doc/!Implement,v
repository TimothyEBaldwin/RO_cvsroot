head	4.3;
access;
symbols
	FileCore-3_75:4.3
	FileCore-3_74:4.3
	FileCore-3_73:4.3
	FileCore-3_72:4.3
	FileCore-3_71:4.3
	FileCore-3_70:4.3
	FileCore-3_69:4.3
	FileCore-3_68:4.3
	FileCore-3_67:4.3
	FileCore-3_66:4.3
	FileCore-3_65:4.3
	FileCore-3_64:4.3
	FileCore-3_63:4.3
	FileCore-3_62:4.3
	FileCore-3_61:4.3
	FileCore-3_60:4.3
	FileCore-3_59:4.3
	FileCore-3_58:4.3
	FileCore-3_57:4.3
	FileCore-3_56:4.3
	FileCore-3_55:4.2
	FileCore-3_54:4.2
	FileCore-3_53:4.2
	FileCore-3_52:4.2
	FileCore-3_51:4.2
	FileCore-3_50:4.2
	FileCore-3_49:4.2
	FileCore-3_48:4.2
	FileCore-3_47:4.2
	FileCore-3_46:4.2
	FileCore-3_45:4.2
	FileCore-3_44:4.2
	FileCore-3_43:4.2
	FileCore-3_42:4.2
	FileCore-3_41:4.2
	FileCore-3_40:4.1
	FileCore-3_39:4.1
	FileCore-3_38:4.1
	FileCore-3_37:4.1
	FileCore-3_36:4.1
	FileCore-3_35:4.1
	FileCore-3_34:4.1
	FileCore-3_33:4.1
	RO_5_07:4.1
	FileCore-3_32:4.1
	FileCore-3_31:4.1
	FileCore-3_30:4.1
	FileCore-3_29:4.1
	FileCore-3_28:4.1
	FileCore-3_25-4_9_2_2:4.1
	FileCore-3_27:4.1
	FileCore-3_26:4.1
	FileCore-3_22-4_6_2_1:4.1
	bavison_FileCore-3_22_dev_bp:4.1
	bavison_FileCore-3_22:4.1.0.14
	FileCore-3_25-4_9_2_1:4.1
	HAL:4.1.0.12
	FileCore-3_25:4.1
	FileCore-3_24:4.1
	FileCore-3_23:4.1
	dellis_autobuild_BaseSW:4.1
	FileCore-3_22:4.1
	Ursula_merge:4.1
	ROL_merge:4.1
	FileCore-3_21:4.1
	ROL_Ursula_merge:4.1
	Ursula_RiscPC_merge:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	ROL_FileCore-3_21:4.1
	ROL_FileCore-3_20:4.1
	ROL:4.1.0.10
	ROL_bp:4.1
	Ursula_RiscPC_bp:4.1
	FileCore-3_18:4.1
	FileCore-3_01:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	FileCore-3_00:4.1
	FileCore-2_99:4.1
	aglover_FileCore-3_17:4.1
	sproven_FileCore-3_16:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	sproven_FileCore-3_15:4.1
	sproven_314:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_Funai01-33:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	sproven_313:4.1
	sproven_3_11:4.1
	sproven_3_10:4.1
	sproven_Ursula_3_09:4.1
	sproven_3_07:4.1
	sproven_3_06:4.1
	sproven_3_05:4.1
	sproven_3_04:4.1
	Spinner_RCA116:4.1.7.1
	sproven_3_03:4.1
	sproven_3_02:4.1
	sproven_3_01:4.1
	sproven_2_99:4.1
	sproven_2_98:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2013.02.24.21.08.51;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	rgJG8ZFRF8o9ruFw;

4.2
date	2011.09.13.19.13.11;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	PKTDORFkNFRVOmzv;

4.1
date	96.11.05.09.32.04;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.32.04;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.58.23;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.32.45;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.29.39;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Extend upper permissable file size to 4GB-1
Tested for ~200,000 cycles in various configurations with FSBash, with no integrity problems, nor bad maps. However, background transfers (currently only used by ADFS) is still being endurance tested, hence is currently disabled.
Users should note that they can create big files without needing to reformat their drives, however if reverting to an older copy of FileCore the files must not be opened, loaded, or deleted (it's fine to view the directory, just don't expect old FileCore to know how to parse such long fragment runs).
Current versions of DiscKnight (1.49) do not understand long fragment runs.

FSBash
------
* Reviewed and expunged various signed comparisons of file pointers in the existing tests
* Added new tests for big files which attempt to aggrevate all the usual problems passing over and up to important boundaries
* Makefile recreated from fragments
* Some compiler warning squashed

Docs
----
* Some notes added for big file support

Misc
----
Commands: swapped to using Command macro
HelpText: labels renamed to help Command macro
GenSWIs: text table name for SectorDiscOp ammended to match exported header and corresponding secondary module names (ADFS_SectorDiscOp et al). The usefulness of calling the base instantiation of FileCore_SectorDiscOp is minimal, especially from BASIC.
Messages: message for attempting to check an old map disc made less terse
hdr/FileCore: typo

Version 3.56. Tagged as 'FileCore-3_56'
@
text
@>!Implement

NOTES ON THE IMPLEMENTATION OF FILECORE
=======================================

This document has the following sections:

1) contents of source files
2) use of workspace
3) conventions
4) debugging

1) contents of source files
---------------------------

BigDirCode Handling big directories
Commands   Handling *commands
DebugOpts  Declares T and F and sets the debugging options
Defns      Definitions of constants
Errors     declares error numbers and builds error table
FileCore   GETs all the source files
FileCore00 Start of module, allocates workspace, and GETs Errors
FileCore05 useful subroutines
FileCore15 interfaces to low level disc op at various abstraction levels
FileCore20 routines maintaining disc <-> drive mapping
FileCore25 directory caching
FileCore30 more useful subroutines, including interfaces to rest of system
FileCore31 new map allocation
FileCore32 new map zone compaction
FileCore33 new map primitives
FileCore35 old free space map operations
FileCore40 filename and directory operations
FileCore45 OSFILE and map/directory writing to disc
FileCore60 OSFUN
FileCore70 open files
FileCore80 new open file write behind/read ahead/caching
Fixes      documents and sets switches for fixes since image became stable
FormSrvcs  Image filing system services
FormSWIs   Image filing system SWIs
GenSWIs    SWI decod
Identify   Identify
InitDieSvc Module init and finalisation and service calls
MsgsStuff  MessageTrans glue
MyMacros   Macros not in Hdr:Macros
TokHelpSrc Tokenised help generated from HelpText

2) use of workspace
-------------------

main module workspace
----------------------------------------------------------------------------
| misc. | Dir    | Directory cache : open file         | free    | winnie
| work  | Buffer |                 : file buffer cache | space   | defect
| space |        |                 :                   | maps    | lists
----------------------------------------------------------------------------
^0                                 ^ FileBufsStart     ^MapSpace ^DefectSpace

The size of the directory cache, file buffer cache, and hard disc maps are
kept in CMOS RAM. The hard disc maps are claimed in separate blocks from the
RMA so that if the value in CMOS RAM is wrong (due to reformatting or
connecting a different drive) the blocks can be returned and ones of the
correct size claimed. The file buffers are held after the file is closed and
are only thrown away when needed for other files, or when the directory
cache is allowed to temporarily expand into the file buffer cache.

The miscellaneous workspace contains various byte and word variables and
records such as the disc and drive records.

3) conventions
--------------
a) The routines are mostly callee save ie registers not explicitly returning
a result are preserved. Many subroutine calls document the registers
expected for parameters and results eg.

 BL     FullLookUp      ;(R1,R2->R0-R6,C,V)

means that R1 and R2 are parameters and that R0 to R6 are modified by the
call. Flags are listed in the result if they have significant meaning after
the call and it cannot be assumed that other flags are preserved.

b) The variable ReEntrance keeps track of the levels of nesting of calls.
This is used to detect illegal reentrance and must be modified appropriately
by all entry and exit points. Suitable macros and routines are declared in
FileCore30.

c) errors are kept in a different format internally - see Errors

d) disc addresses are kept in three forms for different levels of
abstraction. In each case the top 3 bits indicate the device and the other
29 bits define the position on the device.

external disc address - This is the form used to communicate with the
external device drivers and when calling RetryDriveOp. The top 3 bits is
the drive number and the bottom 29 bits is an offset in bytes from the
beginning of the disc.

disc address - This is the next level up where discs are abstracted from
drives and is used when calling RetryDiscOp. The top 3 bits is the disc
number and the bottom 29 bits is an offset in bytes from the beginning of
the disc.

indirect disc address - This is the top level and is used in new map discs
to abstract the SIN (system internal number) of a file from its allocation
on the disc. On old map discs it is exactly the same as a disc address. On
new map discs the top 3 bits are still the disc number. However bits 8-23 is a file id which can be looked up in the map and bits 0-7 are 0 for a file
which does not share a map chunk or the sector offset + 1 in the map chunk
if it does.

4) Debugging
------------
FileCore00 contains various switches which can be turned on to aid debugging.
Some of the more specialised are:

ExceptionTrap - To ensure the FIRST exception is trapped
VduTrap - To redirect debugging text in a circular fashion into the memory
          reserved for RAMFS. For time critical debugging.
SpoolOff - To turn spooling off for debugging text to prevent illegal reentry
IrqDebug - To disable debugging while IrqSema set to avoid being swamped by
           background scheduling debugging.
DebugSwitch - For all debugging to be conditional on the contents of a
              memory location to allow debugging to be turned on and off
              during a test.
@


4.2
log
@Delete s.AsmHdr, s.DevVersion, Version, s.ModHand
Delete Doc.!ReadMe, update Doc.!Implement
Collapse dead switches.
s.MyMacros:
 Remove 'nop' macro, use NOP.
s.Defns:
 Some definitions taken from global headers.
s.Commands:
 Indentation and function calling parameter comments reviewed.

Still produces the same binary as 3.40.
@
text
@d58 1
a58 1
The size of the directory cach, file buffer cache, and hard disc maps are
@


4.1
log
@Initial revision
@
text
@d16 2
a17 6
FileCore   GETs all the source files
Version    Version, date, and highest fix number to be applied
Fixes      documents and sets switches for fixes since image became stable
AsmHdr     more switches
DevVersion declares development version number for test versions, incremented
           with each assembly and GETs system header files
a18 2
MyMacros   Macros not in Hdr:Macros
CoreHdr    Exported FileCore values
d20 2
a22 1
Errors     declares error numbers and builds error table
a33 2
TekneHelp  Tokenised help from HelpText
FileCore50 module interfaces and * commands
d37 9
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
