head	4.5;
access;
symbols
	FileCore-3_75:4.5
	FileCore-3_74:4.5
	FileCore-3_73:4.5
	FileCore-3_72:4.5
	FileCore-3_71:4.5
	FileCore-3_70:4.5
	FileCore-3_69:4.5
	FileCore-3_68:4.5
	FileCore-3_67:4.5
	FileCore-3_66:4.5
	FileCore-3_65:4.5
	FileCore-3_64:4.5
	FileCore-3_63:4.5
	FileCore-3_62:4.5
	FileCore-3_61:4.5
	FileCore-3_60:4.5
	FileCore-3_59:4.5
	FileCore-3_58:4.5
	FileCore-3_57:4.5
	FileCore-3_56:4.5
	FileCore-3_55:4.5
	FileCore-3_54:4.5
	FileCore-3_53:4.5
	FileCore-3_52:4.5
	FileCore-3_51:4.5
	FileCore-3_50:4.5
	FileCore-3_49:4.5
	FileCore-3_48:4.5
	FileCore-3_47:4.5
	FileCore-3_46:4.5
	FileCore-3_45:4.5
	FileCore-3_44:4.4
	FileCore-3_43:4.4
	FileCore-3_42:4.4
	FileCore-3_41:4.4
	FileCore-3_40:4.4
	FileCore-3_39:4.4
	FileCore-3_38:4.4
	FileCore-3_37:4.4
	FileCore-3_36:4.4
	FileCore-3_35:4.4
	FileCore-3_34:4.4
	FileCore-3_33:4.4
	RO_5_07:4.4
	FileCore-3_32:4.4
	FileCore-3_31:4.4
	FileCore-3_30:4.3
	FileCore-3_29:4.3
	FileCore-3_28:4.3
	FileCore-3_25-4_9_2_2:4.3
	FileCore-3_27:4.3
	FileCore-3_26:4.3
	FileCore-3_22-4_6_2_1:4.2
	bavison_FileCore-3_22_dev_bp:4.2
	bavison_FileCore-3_22:4.2.0.2
	FileCore-3_25-4_9_2_1:4.3
	HAL:4.3.0.2
	FileCore-3_25:4.3
	FileCore-3_24:4.3
	FileCore-3_23:4.3
	dellis_autobuild_BaseSW:4.2
	FileCore-3_22:4.2
	Ursula_merge:4.1.4.2
	ROL_merge:4.1.4.2
	FileCore-3_21:4.2
	ROL_Ursula_merge:4.1.4.2
	Ursula_RiscPC_merge:4.1.4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.3
	ROL_FileCore-3_21:4.1.4.2
	ROL_FileCore-3_20:4.1.4.2
	ROL:4.1.4.2.0.2
	ROL_bp:4.1.4.2
	Ursula_RiscPC_bp:4.1.4.1
	FileCore-3_18:4.1.4.2
	FileCore-3_01:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1
	Ursula_RiscPC:4.1.4.1.0.2
	FileCore-3_00:4.1
	FileCore-2_99:4.1
	aglover_FileCore-3_17:4.1.4.2
	sproven_FileCore-3_16:4.1.4.2
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	sproven_FileCore-3_15:4.1.4.1
	sproven_314:4.1.4.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	afrost_Funai01-33:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	sproven_313:4.1.4.1
	sproven_3_11:4.1.4.1
	sproven_3_10:4.1.4.1
	sproven_Ursula_3_09:4.1.4.1
	sproven_3_07:4.1.4.1
	sproven_3_06:4.1.4.1
	sproven_3_05:4.1.4.1
	sproven_3_04:4.1
	Spinner_RCA116:4.1.7.1
	sproven_3_03:4.1
	sproven_3_02:4.1
	sproven_3_01:4.1
	sproven_2_99:4.1
	sproven_2_98:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2011.10.14.07.23.52;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	D2Id4aPp4zmuUhDv;

4.4
date	2003.04.03.18.33.29;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	2000.10.30.13.26.35;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	2000.05.09.11.37.02;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.32.25;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.32.25;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.41.27;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	98.01.09.11.45.11;	author sproven;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	98.09.02.16.15.07;	author sproven;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.34.28;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.31.20;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Revise exports in "hdr.FileCore".
Now, for each SWI call there is a definition of any pertinent structures it asks for and definitions of any bitfields within those flags. This avoids the need for clients to endlessly redefine these locally (in practice it looks like sections of FileCore were simply copy and pasted into clients RAMFS/SCSIFS/ADFS). Delete private definitions.
This binary was carefully checked to be identical since so many locations were changed.
Then, the following additional changes:
* InitDieSvc line 74, the floppy config is extracted using a mask and shift rather than reaching up the stack
* Identify lin 1254, the superfluous instruction marked as such deleted
* FileCore15 line 762 recoded the check for background op to not need the bit number defined any more
* FileCore00 moved the label 'anull' to be word aligned guaranteed
The duff pointer marker ('nowt' = &40000000) is no longer used to mark territory translation tables as invalid as that address is now quite reasonable. -1 is used instead.

Version 3.45. Tagged as 'FileCore-3_45'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;>MsgsStuff

        TTL     "Message file handling"

; Message file handling code

; ----------
; copy_error
; ----------
;
; In    r0 = pointer to error block with text <tag>
;       r1 = error number
; Out   r0 = pointer to translated error block
copy_error ROUT
        Push    "r1-r7,lr"
        MOV     R4, #0
10
 [ Debug
        ADD     r0, r0, #4
        DSTRING r0, "copy_error in: "
        SUB     r0, r0, #4
 ]
        MOV     R5, #0
        MOV     R6, #0
30
        MOV     R7, #0
        CLRV                    ; To avoid interaction with any V set on entry
        BL      open_message_file
        Pull    "r1-r7,pc",VS

        ; Hold the old error number
        LDR     r3, [r0]

        ; Lookup the error
        ADR     R1, message_file_block
        MOV     R2, #0
        BL      DoXMessageTrans_ErrorLookup
 [ :LNOT:NewErrors
        BIC     r0, r0, #ExternalErrorBit
 ]

        ; Adjust the error number if it's unchanged from entry
        LDR     r1, [r0]
        TEQ     r1, r3
        Pull    "r1"
        STREQ   r1, [r0]

 [ Debug
        ADD     r0, r0, #4
        DSTRING r0, "copy_error out: "
        SUB     r0, r0, #4
 ]

        Pull    "r2-r7,pc"

; -----------
; copy_error1
; -----------
;
; In    r0 = pointer to error block with text <tag>
;       r1 = error number
;       r4 = 1st parameter
; Out   r0 = pointer to translated error block
copy_error1
        Push    "r1-r7,lr"
        B       %BT10

; -----------
; copy_error3
; -----------
;
; In    r0 = pointer to error block with text <tag>
;       r1 = error number
;       r4 = 1st parameter
;       r5 = 2nd parameter
;       r6 = 3rd parameter
; Out   r0 = pointer to translated error block
copy_error3
        Push    "r1-r7,lr"
        B       %BT30

; ------------------------
; message_lookup_to_buffer
; ------------------------
;
; In    r0 = pointer to nul-terminated tag
;       r2 = buffer
;       r3 = buffer size
; Out   r0 = pointer to \0 terminated string in buffer
;       error possible
message_lookup_to_buffer ROUT
        Push    "r0-r7,lr"
        MOV     r4, #0
10
        MOV     r5, #0
20
        MOV     r6, #0
        MOV     r7, #0
        MOV     r1, r0
        ADR     r0, message_file_block
        BL      open_message_file
        SWI     XMessageTrans_Lookup
        STRVC   r2, [sp]
        STRVS   r0, [sp]
        Pull    "r0-r7,pc"

; --------------------------
; message_lookup_to_buffer01
; --------------------------
;
; In    r0 = pointer to nul-terminated tag
;       r2 = buffer
;       r3 = buffer size
;       r4 = pointer to substitute string
; Out   r0 = pointer to \0 terminated string in buffer
;       error possible

message_lookup_to_buffer01
        Push    "r0-r7,lr"
        B       %BT10

; --------------------------
; message_lookup_to_buffer02
; --------------------------
;
; In    r0 = pointer to nul-terminated tag
;       r2 = buffer
;       r3 = buffer size
;       r4 = pointer to substitute string
;       r5 = pointer to substitute string
; Out   r0 = pointer to \0 terminated string in buffer
;       error possible

message_lookup_to_buffer02
        Push    "r0-r7,lr"
        B       %BT20

; ----------------
; message_gswrite0
; ----------------
;
; In    r0 = pointer to nul-terminated <tag>
; Out   all regs preserved unless error
message_gswrite0 ROUT
        Push    "r0-r7,lr"
        MOV     r4, #0
10
        MOV     r5, #0
20
        MOV     r6, #0
        MOV     r7, #0
        SUB     sp, sp, #1024
        BL      open_message_file
        BVS     %FT30
        MOVVC   r1, r0
        ADRVC   r0, message_file_block
        MOVVC   r2, sp
        MOVVC   r3, #1024
        BLVC    DoXMessageTrans_GSLookup
        BVS     %FT30
        MOVVC   r0, r2
        MOVVC   r1, r3
        BLVC    DoXOS_WriteN
30
        STRVS   r0, [sp, #1024 + 0*4]
        ADD     sp, sp, #1024
        Pull    "r0-r7,pc"

; -----------------
; message_gswrite01
; -----------------
;
; In    r0 = pointer to nul-terminated <tag>
;       r4 = pointer to substitute string
; Out   all regs preserved unless error
message_gswrite01
        Push    "r0-r7,lr"
        B       %BT10


; -----------------
; message_gswrite02
; -----------------
;
; In    r0 = pointer to nul-terminated <tag>
;       r4 = pointer to substitute string
;       r5 = pointer to substitute string
; Out   all regs preserved unless error
message_gswrite02
        Push    "r0-r7,lr"
        B       %BT20


message_filename
        DCB     "Resources:$.Resources.FileCore.Messages", 0
        ALIGN

; -----------------
; open_message_file
; -----------------
;
; In    -
; Out   -
open_message_file ROUT
        Push    "r0-r7,lr"

        ; Ensure file not open already
        LDR     r1, message_file_open
        TEQ     r1, #0
        BNE     %FT01
01
        Pull    "r0-r7,pc",NE

        ; Open it
        ADR     R0, message_file_block
        ADR     R1, message_filename
        MOV     r2, #0
        BL      DoXMessageTrans_OpenFile

        LDR     r1, message_file_block
        LDR     r1, message_file_block+4
        LDR     r1, message_file_block+8
        LDR     r1, message_file_block+12

        MOVVC   r1, #1
        STRVC   r1, message_file_open

        STRVS   r0, [sp]
        Pull    "r0-r7,pc"

        END
@


4.4
log
@* Various 32-bit compatibility fixes.
* Can use HAL for FIQ+timer manipulations.
* FileCore_DiscOp64 added (as user API - currently just converted to the
  standard byte or sector DiscOp call to the underlying module). See
  Doc.32bitAPIs for full details.
* New error-passing scheme to modules added (for full 32-bit addressing).
* FileCore_Features added (indicates new error scheme).
* OS_FSControl 49 (read 32-bit free space) now reports sensible clamped
  values for large discs, rather than values modulo 2^32.
* Accessing the end of files near 2GB in size could cause lock-ups in
  background transfers.
* F(+) and G(+) disc formats adjusted to have a little more skew to
  help the rather poor Iyonix floppy controller.

Version 3.31. Tagged as 'FileCore-3_31'
@
text
@d33 3
a35 3
	ADD	r0, r0, #4
	DSTRING r0, "copy_error in: "
	SUB	r0, r0, #4
d63 3
a65 3
	ADD	r0, r0, #4
	DSTRING r0, "copy_error out: "
	SUB	r0, r0, #4
d128 1
a128 1
;	r4 = pointer to substitute string
d134 1
a134 1
	B	%BT10
d143 2
a144 2
;	r4 = pointer to substitute string
;	r5 = pointer to substitute string
d150 1
a150 1
	B	%BT20
@


4.3
log
@32-bit compatible. Some known issues remaining - don't use, except for
testing.

Version 3.23. Tagged as 'FileCore-3_23'
@
text
@d52 1
d54 1
@


4.2
log
@  Merge of Ursula branch to the trunk.
Detail:
  This module represents the latest version of FileCore incorporating
    both the Ursula changes and the ROL changes as we have them to date.
  Changes from ROL-FileCore-3_21 are basically the stripping of trailling
    spaces and the change of Version to Module_Version in the conditionals.
    No other changes.
Admin:
  ROL branch tagged ROL_merge
  Ursula branch tagged Ursula_merge.
  Untested, but essentially the same as ROL-FileCore-3_21, so no problems
    expected.

Version 3.21. Tagged as 'FileCore-3_21'
@
text
@d27 1
a27 1
; Out   r0 = pointer to translated error block flags preserved
d43 1
a43 1
        Pull    "r1-r7,pc",VS,^
d66 1
a66 1
        Pull    "r2-r7,pc",,^
d75 1
a75 1
; Out   r0 = pointer to translated error block flags preserved
d89 1
a89 1
; Out   r0 = pointer to translated error block flags preserved
d116 1
a116 2
        Pull    "r0-r7,pc",VC,^
        STR     r0, [sp]
a155 1
;       all flags preserved unless error
a178 1
        Pull    "r0-r7,pc", VC, ^
@


4.1
log
@Initial revision
@
text
@d32 5
d60 6
d106 1
d108 1
d119 31
@


4.1.4.1
log
@Fixed s.BigDirCode (GrowBigDir and ShrinkBigDir) to cope with BitSize<SecSize
and rewrote free space map memory management to place free space maps in
dynamic areas.
@
text
@a94 1
10
a95 1
20
a105 31

; --------------------------
; message_lookup_to_buffer01
; --------------------------
;
; In    r0 = pointer to nul-terminated tag
;       r2 = buffer
;       r3 = buffer size
;	r4 = pointer to substitute string
; Out   r0 = pointer to \0 terminated string in buffer
;       error possible

message_lookup_to_buffer01
        Push    "r0-r7,lr"
	B	%BT10

; --------------------------
; message_lookup_to_buffer02
; --------------------------
;
; In    r0 = pointer to nul-terminated tag
;       r2 = buffer
;       r3 = buffer size
;	r4 = pointer to substitute string
;	r5 = pointer to substitute string
; Out   r0 = pointer to \0 terminated string in buffer
;       error possible

message_lookup_to_buffer02
        Push    "r0-r7,lr"
	B	%BT20
@


4.1.4.2
log
@Fixed bug with zone compaction with idlen>15, in CompactZone.
@
text
@a31 5
 [ Debug
	ADD	r0, r0, #4
	DSTRING r0, "copy_error in: "
	SUB	r0, r0, #4
 ]
a53 6

 [ Debug
	ADD	r0, r0, #4
	DSTRING r0, "copy_error out: "
	SUB	r0, r0, #4
 ]
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
