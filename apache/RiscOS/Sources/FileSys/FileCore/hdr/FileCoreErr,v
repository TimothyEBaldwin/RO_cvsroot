head	1.2;
access;
symbols
	FileCore-3_75:1.2
	FileCore-3_74:1.2
	FileCore-3_73:1.2
	FileCore-3_72:1.2
	FileCore-3_71:1.2
	FileCore-3_70:1.2
	FileCore-3_69:1.2
	FileCore-3_68:1.2
	FileCore-3_67:1.2
	FileCore-3_66:1.2
	FileCore-3_65:1.2
	FileCore-3_64:1.2
	FileCore-3_63:1.2
	FileCore-3_62:1.2
	FileCore-3_61:1.2
	FileCore-3_60:1.2
	FileCore-3_59:1.2
	FileCore-3_58:1.2
	FileCore-3_57:1.2
	FileCore-3_56:1.2
	FileCore-3_55:1.2
	FileCore-3_54:1.2
	FileCore-3_53:1.2
	FileCore-3_52:1.2
	FileCore-3_51:1.2
	FileCore-3_50:1.2
	FileCore-3_49:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.04.14.00.43.14;	author bavison;	state Exp;
branches;
next	1.1;
commitid	xkSKw5i9HVYqOL0w;

1.1
date	2012.03.19.01.02.12;	author bavison;	state Exp;
branches;
next	;
commitid	kiHA1sAUGttNKqXv;


desc
@@


1.2
log
@  Miscellaneous improvements
Detail:
  * Added the ability for a filing system to specify to FileCore that floppy
    discs should be mounted like hard discs, to complement the existing flag
    that specifies the opposite. SDFS requires this. Ideally SCSIFS should
    start using this as well, to encapsulate boot block handling within
    FileCore.
  * Added header definitions so the FileCore and the filing systems can
    negotiate the use of a new MiscOp entry, needed as part of partitioning
    support, especially important for filing systems that use the hardware-
    specific section of the boot block, like ADFS. At present, FileCore
    doesn't do anything different (it still doesn't support partitions) but
    this enables filing systems to be modified in preparation.
  * Removed the only place where FileCore paid any attention to the
    EmptyWorks flag returned by MiscOp 1 - an obscure and not very useful
    edge case not used by any current filing systems.
  * Added 650 lines of documentation for the MiscOp SWI and low-level entry
    to the Doc directory, giving the information you need in order to
    implement a FileCore filing system.
  * Added missing header file definitions for the low-level background DiscOp
    reason code and the hot-plug drive removed flag to MiscOp 7.
  * Removed some RISC OS 2 legacy code whereby FileCore maintained its idea
    of the internal disc address of the CSD @@, PSD \, Library % and URD & for
    each filing system. Since RISC OS 3.00, FileSwitch handles these
    internally and passes canonicalised paths to FileCore, so FileCore's disc
    addresses for these directories remained unset. This allows some
    considerable simplification of FileCore's path parser in particular, but
    also affects other code like that which decides how to expire disc
    records. Also note that FileCore has been unable to generate certain
    errors (like "Can't delete current directory") since RISC OS 3.00 for the
    same reason.
  * Changed loading of the map for FileCore-format discs so that the map is
    loaded into the dynamic area during the Service_IdentifyDisc handler in
    one big DiscOp rather than loading it twice, sector-by-sector, via one
    big sector cache. For one thing, the sector cache is implemented
    inefficiently - O(n^2) - and for another thing, single-sector DiscOps are
    relatively inefficient on many filing systems, especially on SD cards.
    Some example speed-ups measured for mounting discs are:
      SCSIFS,   1GB drive: was 0.62 sec, now 0.40 sec (1.55 x speedup)
      SCSIFS, 256GB drive: was 1.44 sec, now 0.52 sec (2.77 x speedup)
      SDFS,     2GB drive: was 1.25 sec, now 0.14 sec (8.93 x speedup)
Admin:
  Tested on a beagleboard, with SCSIFS and SDFS.

Version 3.50. Tagged as 'FileCore-3_50'
@
text
@; Copyright (c) 2012, RISC OS Open Ltd
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY RISC OS OPEN LTD ''AS IS'' AND ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
; EVENT SHALL RISC OS OPEN LTD BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
; WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
; OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


        SUBT    Exported FileCore error constants

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

      [ :LNOT: :DEF: fcerror
        GBLS    fcerror
fcerror SETS    "FileCoreErr"
      
        MACRO
$num    FileCoreErr $name, $str
        ASSERT  &$num>0               ; 0 is used as table terminator in FileCore
        ASSERT  &$num<&100
$name.Err   *   &$num
        MEND
      ]

; The argument in the label position is (hex) number which a FileCore client
; filing system can return from its low-level DiscOp or MiscOp calls, or in the
; "Process error" word of a background transfer scatter list. Additionally,
; FileCore will generate errors at that offset into the FS's error block, so the
; filing system should avoid generating those errors itself unless they have the
; same semantics.

; The first postfix argument is used in generating the symbol by which the
; error is referenced. The low-level FileCore error number is called <name>Err
; and filing systems typically define ErrorNumber_<fs><name> and and
; ErrorString_<fs><name>. It is usually also used as the MessageTrans token
; to look up the internationalised version of the error string.

; The second postfix argument is ued to set the value of the
; ErrorString_<fs><name> variable. Typically this is only used by the
; MakeErrorBlock macro (the non-internationalised case).

; In the interests of consistency between FileCore-based filing systems, other
; errors are mentioned in comments. This includes the BBC version of ADFS
; (although only the least-significant byte of error numbers were used there).
;
; In general, it's best to avoid using errors < &40, since these numbers can
; also be disc error numbers. On the BBC, filing system errors were supposed to
; be >= &80, and this is still evidenced below.

11      $fcerror   ExtEscape, "Escape"
;70                                                                                                    ; "Format not available for Winnies" (ADFS)
;71                                                                                                    ; "Density not supported" (ADFS)
;72                                                                                                    ; "Sector size not supported" (ADFS)
;73                                                                                                    ; "Too many sectors on a track" (ADFS)
;74                                                                                                    ; "Disc format not known" (ADFS)
;75                                                                                                    ; "Too many defects" (ADFS)
;76                                                                                                    ; "The floppy drive is not connected" (ADFS)
;92                                                                                                    ; "Aborted" (BBC)
;93                                                                                                    ; "No!" (BBC)
94      $fcerror   Defect, "Defect cannot be mapped out"                                               ; was "Can't map defect out" before RISC OS 3.1; also "Bad compact" on BBC     
95      $fcerror   TooManyDefects, "Too many defects"
96      $fcerror   CantDelCsd, "Can't delete current directory"                                        ; was "Can't delete CSD" on BBC
97      $fcerror   CantDelLib, "Can't delete library"
98      $fcerror   CompactReq, "Compaction required"
99      $fcerror   MapFull, "Free space map full"                                                      ; was "Map full" on BBC
9A      $fcerror   BadDisc, "Disc not formatted"
9B      $fcerror   TooManyDiscs, "Too many discs"
9D      $fcerror   BadUp, "Illegal use of ^"
9E      $fcerror   AmbigDisc, "Ambiguous disc name"
9F      $fcerror   NotRefDisc, "Not same disc"
A0      $fcerror   InUse, "FileCore in use"                                                            ; also "Driver in use" in ADFS
A1      $fcerror   BadParms, "Parameters not recognised"                                               ; was "Bad parameters" before RISC OS 3.1
A2      $fcerror   CantDelUrd, "Can't delete user root directory"
A5      $fcerror   Buffer, "No room for buffer"
A6      $fcerror   Workspace, "FileCore Workspace broken"                                              ; was "FileCore Workspace corrupt" before RISC OS 3.1
A7      $fcerror   MultipleClose, "Multiple file closing errors"
A8      $fcerror   BrokenDir, "Broken directory"
A9      $fcerror   BadFsMap, "Bad free space map"                                                      ; was "Bad FS map" on BBC; also "No directory" (BBC)
AA      $fcerror   OneBadFsMap, "One copy of map corrupt (use *CheckMap)"                              ; also "Bad sum" on BBC
AB      $fcerror   BadDefectList, "Bad defect list"
AC      $fcerror   BadDrive, "Disc drive not known"                                                    ; was "Bad drive" before RISC OS 3.1
AD      $fcerror   Size, "Sizes don't match"
AF      $fcerror   DestDefects, "Destination disc has defects"
B0      $fcerror   BadRename, "Bad RENAME"
B3      $fcerror   DirFull, "The maximum number of items in a directory has been reached"              ; was "Directory full" before RISC OS 3.1, and "Dir full" on BBC
B4      $fcerror   DirNotEmpty, "Directory not empty"                                                  ; was "Dir not empty" on BBC
;B7                                                                                                    ; "Outside file" (BBC)
BD      $fcerror   Access, "The access details for this item do not allow this"                        ; was "Access violation" before RISC OS 3.1
C0      $fcerror   TooManyOpen, "Too many open files"
;C1                                                                                                    ; "Not open for update" (BBC)
C2      $fcerror   Open, "This file is already open"                                                   ; was "File open" before RISC OS 3.1, and "Can't - file open" on BBC
C3      $fcerror   Locked, "This item is locked to stop changes being made to it"                      ; was "Locked" before RISC OS 3.1
C4      $fcerror   Exists, "Already exists"
C5      $fcerror   Types, "Types don't match"
C6      $fcerror   DiscFull, "The disc has no more available space"                                    ; was "Disc full" before RISC OS 3.1
C7      $fcerror   Disc, "Disc error"
;C8                                                                                                    ; "Disc changed" (BBC)
C9      $fcerror   WriteProt, "The disc is write protected. Move the write-protect tab and try again." ; was "Protected disc" before RISC OS 3.1, and "Disc protected" on BBC
CA      $fcerror   DataLost, "Data lost"
;CB                                                                                                    ; "Bad opt" (BBC)
CC      $fcerror   BadName, "Name not recognised"                                                      ; was "Bad name" before RISC OS 3.1
;CD                                                                                                    ; "Drive not ready" (BBC)
CF      $fcerror   BadAtt, "Bad attribute"
D3      $fcerror   DriveEmpty, "The disc drive is empty"                                               ; was "Drive empty" before RISC OS 3.1
D4      $fcerror   DiscNotFound, "Disc not found"
D5      $fcerror   DiscNotPresent, "Disc not present"
D6      $fcerror   NotFound, "Not found"
D7      $fcerror   DiscNotFileCore, "FileCore does not understand this disc"
D8      $fcerror   NotToAnImageYouDont, "Operation inapplicable to disc images"
DE      $fcerror   Channel, "Channel"
;DF                                                                                                    ; "EOF" (BBC)
E0      $fcerror   FSLocked, "The disc is write protected"
E1      $fcerror   FileTooBig, "File too big"
;F8                                                                                                    ; "Bad operation on <FS>:" (common to all filing systems)
;F9                                                                                                    ; "<FS>: is a write only filing system" (common to all filing systems)
;FA                                                                                                    ; "<FS>: is a read only filing system" (common to all filing systems)
FD      $fcerror   WildCards, "Wild cards"
FE      $fcerror   BadCom, "Bad command"

        OPT     OldOpt
        END
@


1.1
log
@  Reworked error code
Detail:
  Created a new exported header file, Hdr:FileCoreErr, which will serve as
  the single centralised location that defines the error numbers used in the
  low-level FileCore interfaces. s.Errors is now only used for allocating
  error blocks, not for defining error numbers. Also now exports C versions
  of both the pre-existing Hdr:FileCore and the new header.
Admin:
  No changes to the binary.

Version 3.49. Tagged as 'FileCore-3_49'
@
text
@d64 4
@

