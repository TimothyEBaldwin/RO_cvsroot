head	4.5;
access;
symbols
	DOSFS-0_95:4.4
	DOSFS-0_94:4.3
	DOSFS-0_93:4.3
	DOSFS-0_92:4.3
	DOSFS-0_91:4.3
	DOSFS-0_90:4.3
	DOSFS-0_89:4.3
	DOSFS-0_88:4.3
	DOSFS-0_87:4.3
	DOSFS-0_86:4.3
	DOSFS-0_85:4.3
	DOSFS-0_84:4.3
	DOSFS-0_83:4.3
	DOSFS-0_82:4.3
	DOSFS-0_81:4.3
	DOSFS-0_80:4.3
	DOSFS-0_79:4.3
	RO_5_07:4.3
	DOSFS-0_78:4.3
	DOSFS-0_77:4.3
	DOSFS-0_76:4.3
	DOSFS-0_75:4.3
	DOSFS-0_74:4.3
	DOSFS-0_73:4.3
	DOSFS-0_72:4.3
	DOSFS-0_71:4.3
	DOSFS-0_70:4.3
	DOSFS-0_69:4.2
	DOSFS-0_68:4.2
	DOSFS-0_67:4.2
	DOSFS-0_66:4.2
	DOSFS-0_65:4.2
	dellis_autobuild_BaseSW:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.2
	DOSFS-0_64:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1
	Ursula_RiscPC:4.1.4.1.0.2
	nicke_DOSFS_0_63:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2012.12.07.14.20.20;	author rsprowson;	state dead;
branches;
next	4.4;
commitid	jnwtWy3St1iqIivw;

4.4
date	2012.09.02.13.28.59;	author bavison;	state Exp;
branches;
next	4.3;
commitid	7d95TmqsXKS9wXiw;

4.3
date	2002.11.08.10.09.01;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	98.11.25.12.52.55;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.55.19;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.06.19.08.36.01;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.37.47;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.34.15;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Source file subdivision
The sources to DOSFS had become rather jumbled and monolithic
* Split FileSwitch interface out into seperate ops source files.
* Combined international error lookup with MsgTrans code.
* Split utility functions into 'Helpers.c' along with wildcard matching functions.
* Moved DOS naming functions into, erm, 'DOSnaming.c'.
Also
* Makefile tweaked to remove 'symbols' on clean.
* Obsolete 'Help' and 'Syntax' placed in attic.

RAM, debug, and ROM targets built. RAM target tested with a DOS floppy disc.

Version 0.96. Tagged as 'DOSFS-0_96'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*> h.DOSFSctl <*/
/*---------------------------------------------------------------------------*/
/* DOS C module support functions                Copyright (c) 1990, JGSmith */
/*---------------------------------------------------------------------------*/

#ifndef __h_DOSFSctl
#define __h_DOSFSctl

/*---------------------------------------------------------------------------*/
/* assembler functions provided to support the C module world */

extern char      *moduleName(void) ;       /* ASCII module name */
extern void       moduleBase(void);        /* module address in RMA */
#define moduleBase (*(int *)moduleBase)
extern word       read_fp(void) ;          /* Frame-Pointer */
extern word       read_sl(void) ;          /* Stack-Limit */
extern word       read_sp(void) ;          /* Stack-Pointer */
extern word       read_pc(void) ;          /* Program-Counter */
extern void       writeWORD(char *address,word datavalue) ;
extern word       loadWORD(char *address) ;

/*---------------------------------------------------------------------------*/
/* These are only exported to provide function addresses */

extern void             DOSFS_Open(void) ;
extern void             DOSFS_GetBytes(void) ;
extern void             DOSFS_PutBytes(void) ;
extern void             DOSFS_Args(void) ;
extern void             DOSFS_Close(void) ;
extern void             DOSFS_File(void) ;
extern void             DOSFS_Func(void) ;

/*---------------------------------------------------------------------------*/

#endif /* __h_DOSFSctl */

/*---------------------------------------------------------------------------*/
/*> EOF h.DOSFSctl <*/
@


4.4
log
@  Fixed support for certain sized DOS discs
Detail:
  In the code which determined the bitmask to apply to cluster numbers, the
  calculation of the number of clusters in the data area (which is the
  deciding factor between FAT12, FAT16 and FAT32) contained an operator
  precedence error in the calculation of the root directory size. The result
  was that if the disc size was within approx 8 MB of the FAT type threshold
  then the wrong mask was selected. (For clusters of 4*512 bytes, the FAT12/16
  threshold is about 8 MB, so discs between 8 and 16 MB would fail.)
  Also:
  * Fixed the module base address and offsets registered with FileSwitch -
    previously the static data relocation offset was incorrectly applied.
    FileSwitch didn't actually care as long as they added up to the right
    address, but it was still wrong.
  * 32-bitting was incorrectly done using the No26bitCode switch rather than
    the No32bitCode switch, meaning that softloadable builds of this module
    were not 32-bit compatible. Softloadable builds now work on anything from
    RISC OS 3.5 onwards.
Admin:
  Tested on Raspberry Pi and Iyonix.

Version 0.95. Tagged as 'DOSFS-0_95'
@
text
@@


4.3
log
@Missed an ORRNES while 32 bitting,corrected.
Unused MSDOStoSTRING #if'd out to save a massive 112 bytes!
Corrected tracef1 in map_file_rostype which was printing out the
debugging before the variable got assigned.
Conditionally uses FileCore_DiscOp64 now,if available when the module
starts.
Eliminated some local 64 bit time handling code in favour of using that
already in the compiler (thanks to Kevin).
Now requires a compile time switch PCMCIA=<TRUE | FALSE> which leaves in
or takes out the PCMCIA card support.

Version 0.70. Tagged as 'DOSFS-0_70'
@
text
@d27 2
a28 1
extern const int *moduleBase ;             /* module address in RMA */
@


4.2
log
@Changed to use srccommit.
Updated for Link 5.07 and CMHG 5.16. Fixed to not overwrite command tail.
Changed to use LocalRes$Path.
German resources imported.

Version 0.64. Tagged as 'DOSFS-0_64'
@
text
@a33 4
extern word      *library_double_udivide(word *divisor,word *dividend) ;
extern word      *library_double_uremainder(word *divisor,word *dividend) ;
extern word      *library_double_subtraction(word *arg1,word *arg2) ;
extern word      *library_double_addition(word *arg1,word *arg2);
@


4.1
log
@Initial revision
@
text
@a41 5
extern _kernel_oserror *fs_swi(int swi,_kernel_swi_regs *rset,void *private) ;
extern void             fs_service(int num,_kernel_swi_regs *rset,void *priv) ;
extern _kernel_oserror *fs_commands(char *argv,int argc,int cmd,void *priv) ;
extern int              init_fs(char *cmd_tail,int podule_base,void *private) ;

@


4.1.4.1
log
@Return type of init_fs corrected
@
text
@d42 5
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
