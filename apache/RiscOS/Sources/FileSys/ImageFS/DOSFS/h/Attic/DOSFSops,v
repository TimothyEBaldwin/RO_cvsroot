head	4.5;
access;
symbols
	DOSFS-0_95:4.4
	DOSFS-0_94:4.4
	DOSFS-0_93:4.4
	DOSFS-0_92:4.4
	DOSFS-0_91:4.4
	DOSFS-0_90:4.4
	DOSFS-0_89:4.4
	DOSFS-0_88:4.4
	DOSFS-0_87:4.4
	DOSFS-0_86:4.4
	DOSFS-0_85:4.4
	DOSFS-0_84:4.4
	DOSFS-0_83:4.4
	DOSFS-0_82:4.4
	DOSFS-0_81:4.4
	DOSFS-0_80:4.4
	DOSFS-0_79:4.4
	RO_5_07:4.3
	DOSFS-0_78:4.3
	DOSFS-0_77:4.3
	DOSFS-0_76:4.3
	DOSFS-0_75:4.3
	DOSFS-0_74:4.3
	DOSFS-0_73:4.3
	DOSFS-0_72:4.3
	DOSFS-0_71:4.3
	DOSFS-0_70:4.3
	DOSFS-0_69:4.3
	DOSFS-0_68:4.2
	DOSFS-0_67:4.2
	DOSFS-0_66:4.2
	DOSFS-0_65:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.2
	DOSFS-0_64:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_DOSFS_0_63:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2012.12.07.14.20.20;	author rsprowson;	state dead;
branches;
next	4.4;
commitid	jnwtWy3St1iqIivw;

4.4
date	2004.09.30.21.59.07;	author jballance;	state Exp;
branches;
next	4.3;

4.3
date	2002.09.22.11.30.07;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	2001.08.16.16.00.44;	author rsprowso;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.55.21;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.37.48;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.34.16;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Source file subdivision
The sources to DOSFS had become rather jumbled and monolithic
* Split FileSwitch interface out into seperate ops source files.
* Combined international error lookup with MsgTrans code.
* Split utility functions into 'Helpers.c' along with wildcard matching functions.
* Moved DOS naming functions into, erm, 'DOSnaming.c'.
Also
* Makefile tweaked to remove 'symbols' on clean.
* Obsolete 'Help' and 'Syntax' placed in attic.

RAM, debug, and ROM targets built. RAM target tested with a DOS floppy disc.

Version 0.96. Tagged as 'DOSFS-0_96'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*> h.DOSFSops <*/
/*-------------------------------------------------------------------------*/
/* DOSFS filing system image operations         Copyright (c) 1990 JGSmith */
/*-------------------------------------------------------------------------*/

#ifndef _h_DOSFSops
#define _h_DOSFSops      

/*-------------------------------------------------------------------------*/
/* internal object types */

typedef enum {isFILE,isDIR,isPSEUDODIR} objecttype ;

/*-------------------------------------------------------------------------*/

extern DOS_direntry  *findDIRtype(byte mask,byte ftype,DOS_direntry *dir,int dir_size,int *index) ;

/*-------------------------------------------------------------------------*/

int                   shorten_lfn(char * longfname, char * shortname, char * shortnamebuff, DIR_info * cdir);

extern DOSdisc       *DOSFS_image_open(word fshand,word buffsize) ;

extern int            DOSFS_image_close(DOSdisc *ihand) ;

extern FS_open_block *DOSFS_open_file(word op,char *fname,DOSdisc *ihand) ;

extern int            DOSFS_get_bytes(FILEhand *fhand,char *memaddr,word bytes,word foff) ;

extern int            DOSFS_put_bytes(FILEhand *fhand,char *ma,word bytes,word foff,char dbyte) ;

extern int            DOSFS_write_zeros(FILEhand *fhand,word foff,word bytes) ;

extern int            DOSFS_close_file(FILEhand *fhand,word loadaddr,word execaddr) ;

extern int            DOSFS_write_extent(FILEhand *fhand,word fext) ;

extern word           DOSFS_alloc(FILEhand *fhand) ;

extern FS_datestamp  *DOSFS_flush(FILEhand *fhand) ;

extern word           DOSFS_ensure(FILEhand *fhand,word ensure) ;

extern FS_datestamp  *DOSFS_read_datestamp(FILEhand *fhand) ;

void                  packdir(DIR_info * cdir, DOS_direntry ** preserve);

extern char          *DOSFS_save_file(char *fname,word ld,word ex,char *base,char *end,DOSdisc *ihand) ;

extern int            DOSFS_write_cat(char *fname,word ld,word ex,word attr,DOSdisc *ihand) ;

extern FS_cat_entry  *DOSFS_read_cat(char *fname,DOSdisc *ihand) ;

extern FS_cat_entry  *DOSFS_delete(char *fname,DOSdisc *ihand) ;

extern int            DOSFS_create(char *fname,word ld,word ex,char *base,char *end,DOSdisc *ihand) ;

extern int            DOSFS_create_dir(char *fname,word ld,word ex,word size,DOSdisc *ihand) ;

extern word           DOSFS_read_block_size(char *filename,DOSdisc *ihand) ;

extern word           DOSFS_rename(char *oldname,char *newname,DOSdisc *ihand) ;

extern byte           lfnchecksum(char * filename);

extern FS_dir_block  *DOSFS_read_dir(char *fname,word dest,word num,word off,word blen,DOSdisc *ihand) ;

extern FS_dir_block  *DOSFS_read_dir_info(char *fname,word dest,word num,word off,word blen,DOSdisc *ihand) ;

extern int            DOSFS_defect_list(char *fname,word buffer,word blen,DOSdisc *ihand) ;

extern int            DOSFS_add_defect(char *fname,word offset,DOSdisc *ihand) ;

extern word           DOSFS_read_boot_option(char *fname,DOSdisc *ihand) ;

extern int            DOSFS_write_boot_option(char *fname,word newoption,DOSdisc *ihand) ;

extern int            DOSFS_used_space_map(char *buffer,word blen,DOSdisc *ihand) ;

extern FS_free_space *DOSFS_read_free_space(DOSdisc *ihand) ;

extern int            DOSFS_namedisc(char *newname,DOSdisc *ihand) ;

extern int            DOSFS_stampimage(int type,DOSdisc *ihand) ;

extern int            DOSFS_objectatoffset(int offset,char *buffer,int blen,DOSdisc *ihand) ;

extern word           DOSFS_max_sect(DOS_bootsector *bblock) ;

/* compute details needed for a given dirinfo for directory of 'size' bytes*/
#define DI_Size(size)   (                                        \
                          sizeof(DIR_info)                       \
                          + (((size/sizeof(DOS_direntry))-1)*    \
                           (sizeof(DOS_direntry)                 \
                            + sizeof(char*)))                    \
                        )
/* compute offset of dirstruct->dir_entries[0] from its 'starting' point */
#define DI_Offset(size) (((size/sizeof(DOS_direntry))-1) * sizeof(char*))
/* compute offset of dirstruct->dir_entries[0] from its 'starting' point */
#define DI_Base(p)      (((int)(&((p)->dir_entries[0])) + ((p)->dir_entryoffset)))
/*-------------------------------------------------------------------------*/

#endif /* _h_DOSFSops */

/*-------------------------------------------------------------------------*/
/*> EOF h.DOSFSops <*/
@


4.4
log
@   Update of DOSFS to handle Long File Names and FAT32 (up to 2GB)
Detail:
   Extend DOSFS to correctly recognise FAT32 DOS images and to
   use the Long File Name extensions. NOTE that there is still
   a 2gb size limit imposed by the max filecore image file
   size limitiations. NOTE also that as yet there is no support for
   UTF encoding of file names.
Admin:
   Tested at castle and with beta testers.
   Modifications are castle and castle assigned IP (from CJB)


Version 0.79. Tagged as 'DOSFS-0_79'
@
text
@@


4.3
log
@Deleted some dead variables and switches.
Eliminated MOVS and R14 fiddling to achieve 32 bit compatibility
RISCOS Ltd made 3 changes in their sources
 - ensure disc titles don't contain rogue characters (added)
 - files with time,date,and reserved fields of zero appears as DEADDEAD
   which is silly since Winodws uses this to mark a file unstamped which
   isn't quite the same thing! (not added)
 - syslog debugging support (not added)

Version 0.69. Tagged as 'DOSFS-0_69'
@
text
@d21 1
a21 1
#define _h_DOSFSops
d34 2
d60 2
d78 2
d104 11
@


4.2
log
@Will now recognise the disc title of discs containing Win95 long filenames.
Formatting now pads disc titles with spaces rather than NULs.

Version 0.66. Tagged as 'DOSFS-0_66'
@
text
@a43 1
#if 1
a44 1
#endif
a65 1
#if 1 /* documentation failure */
a66 3
#else
extern int            DOSFS_create(char *fname,word ld,word ex,word length,DOSdisc *ihand) ;
#endif
@


4.1
log
@Initial revision
@
text
@d30 1
a30 1
extern DOS_direntry  *findDIRtype(byte ftype,DOS_direntry *dir,int dir_size,int *index) ;
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
