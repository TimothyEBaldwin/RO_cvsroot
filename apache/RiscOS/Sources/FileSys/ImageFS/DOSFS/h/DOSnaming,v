head	4.6;
access;
symbols
	DOSFS-1_14:4.6
	DOSFS-1_13:4.6
	DOSFS-1_12:4.6
	DOSFS-1_11:4.6
	DOSFS-1_10:4.6
	DOSFS-1_09:4.6
	DOSFS-1_08:4.6
	DOSFS-1_07:4.6
	DOSFS-1_06:4.6
	DOSFS-1_05:4.5
	DOSFS-1_04:4.5
	DOSFS-1_03:4.5
	DOSFS-1_02:4.5
	DOSFS-1_01:4.5
	DOSFS-1_00:4.5
	DOSFS-0_99:4.5
	DOSFS-0_98:4.5
	DOSFS-0_97:4.4
	DOSFS-0_96:4.4
	DOSFS-0_95:4.3
	DOSFS-0_94:4.3
	DOSFS-0_93:4.3
	DOSFS-0_92:4.3
	DOSFS-0_91:4.3
	DOSFS-0_90:4.3
	DOSFS-0_89:4.3
	DOSFS-0_88:4.3
	DOSFS-0_87:4.3
	DOSFS-0_86:4.3
	DOSFS-0_85:4.3
	DOSFS-0_84:4.3
	DOSFS-0_83:4.3
	DOSFS-0_82:4.3
	DOSFS-0_81:4.3
	DOSFS-0_80:4.3
	DOSFS-0_79:4.3
	RO_5_07:4.2
	DOSFS-0_78:4.2
	DOSFS-0_77:4.2
	DOSFS-0_76:4.2
	DOSFS-0_75:4.2
	DOSFS-0_74:4.2
	DOSFS-0_73:4.2
	DOSFS-0_72:4.2
	DOSFS-0_71:4.2
	DOSFS-0_70:4.2
	DOSFS-0_69:4.2
	DOSFS-0_68:4.1
	DOSFS-0_67:4.1
	DOSFS-0_66:4.1
	DOSFS-0_65:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	DOSFS-0_64:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_DOSFS_0_63:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2014.06.25.19.37.23;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	gFu51vOmpefejWFx;

4.5
date	2013.01.13.18.49.47;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	fjzSOoRRnhA815Aw;

4.4
date	2012.12.07.14.20.20;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	jnwtWy3St1iqIivw;

4.3
date	2004.09.30.21.59.07;	author jballance;	state Exp;
branches;
next	4.2;

4.2
date	2002.09.22.11.30.07;	author rsprowson;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.55.25;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.37.50;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.34.18;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.6
log
@Revise filename shortening rules
The rules DOSFS used to create the short name version of a long filename were quite wide of the recommendations from Microsoft. This causes problems in particular with bootloaders that are a little more simplistic and use the short name form, only to find "BOOTCODE.BIN" has been replaced by "BOOTCO~1.BIN" by DOSFS.
Also, the long filename entried created for new long filenames left the reserved fields unset. Some of these seem to have special meanings to Windows which faults them ("extended attribute handle invalid") when running chkdsk.

DOSnaming.c: replaced the shorten_lfn function, sprinkled in a few token consts, set the reserved fields in long file names to 0
DOSclusters.c/OpsFunc.c/OpsFile.c: remove shorttemp[14] no longer needed, simplify sprintf/memcpy/memcpy into a single sprintf
DOSFS.h: familiar MIN/MAX maxros added

Tested in isolation in harness "test/shorten" and comparing floppy discs generated with "test/shortgen" from Windows and DOSFS.
Fixes ticket #313.

Version 1.06. Tagged as 'DOSFS-1_06'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*> h.DOSnaming <*/
/*---------------------------------------------------------------------------*/
/* MSDOS to RISCOS name conversion                Copyright (c) 1989 JGSmith */
/*---------------------------------------------------------------------------*/

#ifndef _h_DOSnaming
#define _h_DOSnaming

/*---------------------------------------------------------------------------*/

#define MaxString (256)    /* maximum length of internal string */
#define DOSwcmult  ('*')   /* "zero or more" wildcard character */
#define ROwcmult   ('*')
#define DOSwcsing  ('?')   /* "one" wildcard character */
#define ROwcsing   ('#')

typedef enum {noName,noTrans,extTrans} transinfo ;

/*---------------------------------------------------------------------------*/

int validchar(char *string,char init) ;
char *before(char *newptr,char *text,char marker,int npad) ;
char *after(char *newptr,char *text,char marker,int npad) ;
int namematch(char *wcname,char *fname) ;
char *convertRISCOStoDOS(char *source,char *dest) ;
char *convertRISCOStoLFN(char *source,char *dest) ;
char *convertDOStoRISCOS(char *source,char *dest) ;
char mapchar(char cchr,char *fromlist,char *tolist) ;
int shorten_lfn(char * longfname, char * shortname, DIR_info * cdir);
void MakeLFNEntries(DOS_direntry * lfn[],int numreq,char* leafname,char* shortname);
byte lfnchecksum(const char *filename);
char *buildFILEname(DOS_direntry * dentry,char *name);

/*---------------------------------------------------------------------------*/

typedef struct {
                char name[DOSnamesize] ;
                word flags ;               /* cache entry description flags */
                /* the above flag field ensures the structure end is aligned */
               } name_cache ;

typedef struct {
                char        name[MaxString] ; /* pathname */
                name_cache *ncache ;          /* and the attached name cache */
               } dirname_cache ;

/*---------------------------------------------------------------------------*/

extern name_cache *create_cache(int number_of_entries) ;
extern int         add_to_cache(name_cache *namecache,char *DOSextension) ;
extern int         check_cache(name_cache *namecache,char *DOSextension) ;

/*---------------------------------------------------------------------------*/

#endif /* _h_DOSnaming */

/*---------------------------------------------------------------------------*/
/*> EOF h.DOSnaming <*/
@


4.5
log
@Rationalise some defines
Many magic numbers changed to exported defines.
Eliminated unused "BOOTblock.h" (was just nesting 1 include file).
Moved non ASCII definitions out of "ASCII.h" then found the remainder weren't used => eliminated.

Version 0.98. Tagged as 'DOSFS-0_98'
@
text
@d43 1
a43 1
int shorten_lfn(char * longfname, char * shortname, char * shortnamebuff, DIR_info * cdir);
d45 1
a45 1
byte lfnchecksum(char * filename);
@


4.4
log
@Source file subdivision
The sources to DOSFS had become rather jumbled and monolithic
* Split FileSwitch interface out into seperate ops source files.
* Combined international error lookup with MsgTrans code.
* Split utility functions into 'Helpers.c' along with wildcard matching functions.
* Moved DOS naming functions into, erm, 'DOSnaming.c'.
Also
* Makefile tweaked to remove 'symbols' on clean.
* Obsolete 'Help' and 'Syntax' placed in attic.

RAM, debug, and ROM targets built. RAM target tested with a DOS floppy disc.

Version 0.96. Tagged as 'DOSFS-0_96'
@
text
@d25 6
@


4.3
log
@   Update of DOSFS to handle Long File Names and FAT32 (up to 2GB)
Detail:
   Extend DOSFS to correctly recognise FAT32 DOS images and to
   use the Long File Name extensions. NOTE that there is still
   a 2gb size limit imposed by the max filecore image file
   size limitiations. NOTE also that as yet there is no support for
   UTF encoding of file names.
Admin:
   Tested at castle and with beta testers.
   Modifications are castle and castle assigned IP (from CJB)


Version 0.79. Tagged as 'DOSFS-0_79'
@
text
@d29 12
a40 8
extern int   validchar(char *string,char init) ;
extern char *before(char *newptr,char *text,char marker,int npad) ;
extern char *after(char *newptr,char *text,char marker,int npad) ;
extern int   namematch(char *wcname,char *fname) ;
extern char *convertRISCOStoDOS(char *source,char *dest) ;
extern char *convertRISCOStoLFN(char *source,char *dest) ;
extern char *convertDOStoRISCOS(char *source,char *dest) ;
extern char mapchar(char cchr,char *fromlist,char *tolist) ;
@


4.2
log
@Deleted some dead variables and switches.
Eliminated MOVS and R14 fiddling to achieve 32 bit compatibility
RISCOS Ltd made 3 changes in their sources
 - ensure disc titles don't contain rogue characters (added)
 - files with time,date,and reserved fields of zero appears as DEADDEAD
   which is silly since Winodws uses this to mark a file unstamped which
   isn't quite the same thing! (not added)
 - syslog debugging support (not added)

Version 0.69. Tagged as 'DOSFS-0_69'
@
text
@d34 1
@


4.1
log
@Initial revision
@
text
@d35 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
