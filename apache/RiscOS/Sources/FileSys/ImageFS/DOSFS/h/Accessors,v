head	4.1;
access;
symbols
	DOSFS-1_14:4.1
	DOSFS-1_13:4.1
	DOSFS-1_12:4.1;
locks; strict;
comment	@# @;


4.1
date	2018.02.19.00.06.08;	author jlee;	state Exp;
branches;
next	;
commitid	ic65jLota7NRUorA;


desc
@@


4.1
log
@Reject overly-large discs, and other invalid things
Detail:
  c/Accessors, h/Accessors, Makefile - Added some simple 'image accessor' routines to abstract over accessing the underlying disc/image file. These accept 64bit disc addresses and will check to make sure any size limits imposed by the lower-level API are adhered to (512MB limit for FileCore_DiscOp, or extent of image file for OS_GBPB)
  h/MsgTrans, Resources/Germany/Messages, Resources/UK/Messages - Add a couple of new error messages
  h/Helpers - Add a couple of macros to simplify reading 16/32bit values that are split into multiple bytes in struct definitions. Change writeWORD & loadWORD to accept void* instead of char* so they can be used with other types like 'byte'
  h/DOSshape - Add '0' suffix to some struct members so they can be used with new READ_0123 macro
  h/ADFSshape - Make sure put_doublestep is safe to use with bools
  c/DOSdirs - Remove pointless malloc of small temporary array
  c/DOSclusters - Use new READ_ macros in max_sector()
  c/DOSFS - Use new READ_ macros so code is less painful to read. Use new image accessor system to get rid of some boilerplate for reading from the disc (+ extra error checks). Change 32bit values to 64bit where it looks like it's necessary, and use bools in place of a couple of 0/1 ints. Reject any discs which are too big for the 32bit fields in the ADFS disc record.
  c/OpsFunc - Update DOSFS_image_open in ways similar to the code in c/DOSFS, making use of READ_, image accessor, 64bit values, and adding extra error checks.
Admin:
  Tested with assorted large & small image files & SD cards on a BB-xM, and some DOS/Atari floppy discs on a RiscPC
  FAT partitions larger than 4GB (or which extend past the 4GB FileSwitch limit) are now rejected, as are image files which have been truncated
  A future improvement could be to lift the disc/partition identification code out of c/DOSFS and c/OpsFunc and unify it, since both files contain fairly similar code
  German messages are in need of translation


Version 1.12. Tagged as 'DOSFS-1_12'
@
text
@/* Copyright 2018 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef ACCESSORS_H
#define ACCESSORS_H

#include <stdint.h>
#include <stdbool.h>
#include "kernel.h"

#include "DOSFS.h"
#include "ADFSshape.h"

/* Flags */
#define ACC_READ 0
#define ACC_WRITE 1
#define ACC_USE_CACHE 2

/* Struct used to abstract over accessing the underlying file */
typedef struct image_accessor {
  /* Function pointer for reading/writing data from the underlying file */
  _kernel_oserror *(*readwrite)(uint64_t addr,uint32_t len,void *buf,int flags,struct image_accessor *ctx);
} image_accessor_t;

#define image_readwrite(addr,len,buf,flags,ctx) (((ctx)->readwrite)(addr,len,buf,flags,ctx))

typedef struct {
  image_accessor_t a;
  int fshand;
  uint32_t size;
} image_accessor_file;

extern image_accessor_file new_image_accessor_file(int fshand);

typedef struct {
  image_accessor_t a;
  ADFS_drecord *dr;
  int sector_cache_handle;
  int filecore_pw;
} image_accessor_disc;

extern image_accessor_disc new_image_accessor_disc(ADFS_drecord *dr,int sector_cache_handle,int filecore_pw);
  

#endif
@
