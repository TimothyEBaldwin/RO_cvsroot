head	4.9;
access;
symbols
	DOSFS-1_14:4.9
	DOSFS-1_13:4.9
	DOSFS-1_12:4.9
	DOSFS-1_11:4.9
	DOSFS-1_10:4.9
	DOSFS-1_09:4.9
	DOSFS-1_08:4.9
	DOSFS-1_07:4.9
	DOSFS-1_06:4.9
	DOSFS-1_05:4.8
	DOSFS-1_04:4.8
	DOSFS-1_03:4.8
	DOSFS-1_02:4.8
	DOSFS-1_01:4.8
	DOSFS-1_00:4.8
	DOSFS-0_99:4.7
	DOSFS-0_98:4.6
	DOSFS-0_97:4.5
	DOSFS-0_96:4.5
	DOSFS-0_95:4.4
	DOSFS-0_94:4.4
	DOSFS-0_93:4.4
	DOSFS-0_92:4.4
	DOSFS-0_91:4.4
	DOSFS-0_90:4.4
	DOSFS-0_89:4.4
	DOSFS-0_88:4.4
	DOSFS-0_87:4.4
	DOSFS-0_86:4.3
	DOSFS-0_85:4.3
	DOSFS-0_84:4.3
	DOSFS-0_83:4.3
	DOSFS-0_82:4.3
	DOSFS-0_81:4.3
	DOSFS-0_80:4.3
	DOSFS-0_79:4.3
	RO_5_07:4.3
	DOSFS-0_78:4.3
	DOSFS-0_77:4.3
	DOSFS-0_76:4.3
	DOSFS-0_75:4.3
	DOSFS-0_74:4.3
	DOSFS-0_73:4.2
	DOSFS-0_72:4.2
	DOSFS-0_71:4.2
	DOSFS-0_70:4.2
	DOSFS-0_69:4.1
	DOSFS-0_68:4.1
	DOSFS-0_67:4.1
	DOSFS-0_66:4.1
	DOSFS-0_65:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	DOSFS-0_64:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_DOSFS_0_63:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.9
date	2014.06.25.19.37.23;	author rsprowson;	state Exp;
branches;
next	4.8;
commitid	gFu51vOmpefejWFx;

4.8
date	2013.01.13.18.55.07;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	3lYJMhP8ONWX25Aw;

4.7
date	2013.01.13.18.52.37;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	oq0uLRDtA5Y625Aw;

4.6
date	2013.01.13.18.49.47;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	fjzSOoRRnhA815Aw;

4.5
date	2012.12.07.14.20.20;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	jnwtWy3St1iqIivw;

4.4
date	2009.06.11.21.01.29;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2003.05.23.17.21.16;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	2002.11.08.10.09.01;	author rsprowson;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.33.05;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.55.17;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.37.46;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.34.14;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.9
log
@Revise filename shortening rules
The rules DOSFS used to create the short name version of a long filename were quite wide of the recommendations from Microsoft. This causes problems in particular with bootloaders that are a little more simplistic and use the short name form, only to find "BOOTCODE.BIN" has been replaced by "BOOTCO~1.BIN" by DOSFS.
Also, the long filename entried created for new long filenames left the reserved fields unset. Some of these seem to have special meanings to Windows which faults them ("extended attribute handle invalid") when running chkdsk.

DOSnaming.c: replaced the shorten_lfn function, sprinkled in a few token consts, set the reserved fields in long file names to 0
DOSclusters.c/OpsFunc.c/OpsFile.c: remove shorttemp[14] no longer needed, simplify sprintf/memcpy/memcpy into a single sprintf
DOSFS.h: familiar MIN/MAX maxros added

Tested in isolation in harness "test/shorten" and comparing floppy discs generated with "test/shortgen" from Windows and DOSFS.
Fixes ticket #313.

Version 1.06. Tagged as 'DOSFS-1_06'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*> h.DOSFS <*/
/*-------------------------------------------------------------------------*/
/* System static variables                      Copyright (c) 1990 JGSmith */
/*-------------------------------------------------------------------------*/

#ifndef __h_DOSFS
#define __h_DOSFS

/*-------------------------------------------------------------------------*/

typedef unsigned char   byte ;
typedef unsigned int    word ;

#define MAX(a,b)        ((a)>(b)?(a):(b))
#define MIN(a,b)        ((a)<(b)?(a):(b))
#define WORDALIGN(v)    (((v) + 3) & ~3)
#define UNUSED(x)       ((x) = (x))    /* deal with unused parameters */
#ifndef FALSE
#define FALSE           0
#define TRUE            (!FALSE)
#endif

/*-------------------------------------------------------------------------*/
/* global (static) variables used within the module */
extern void *dosfs_msgarea(void); /* Generated by 'resgen' */
extern int discopswi;
extern int module_flags ;         /* Global flags, mixture of: */
#define TRUNCATE_NAMES        0x00000001

#include "DOSshape.h"

/* The DOSMAP structure */
typedef struct mapentry {
                         struct mapentry *next ;
                         char             dosext[8] ; /* 7 chars + NULL */
                         word             ROtype ; /* lo 12bits */
                        } mapentry ;

extern mapentry *maplist ;      /* list of defined mappings */

/*-------------------------------------------------------------------------*/
/* Data return structures to RISC OS world (from C module world) */

extern FS_open_block fblock ;
extern FS_datestamp  tstamp ;
extern FS_cat_entry  fcat ;
extern FS_dir_block  dblock ;
extern FS_free_space fspace ;

/*-------------------------------------------------------------------------*/
/* open file handle list */

extern FILEhand *FILE_list ;

/*-------------------------------------------------------------------------*/
/* DOS disc type descriptions */

typedef struct DOSdiscinfo {
/* format identifier      */ char *idtext;
/* format table entry     */ byte findex;
/* show in format menu?   */ byte in_menu;
/* The following used for constructing boot block: */
/* shape identity byte    */ byte magic_ID;
/* secs/cluster           */ byte secsclus;
/* secs/FAT               */ byte secsFAT;
/* root directory size    */ byte rootsize;
                           } DOSdiscinfo;

/*-------------------------------------------------------------------------*/

#endif /* __h_DOSFS */

/*-------------------------------------------------------------------------*/
/*> EOF h.DOSFS <*/
@


4.8
log
@Allow RAM builds with messages in, fix for saving to images > 2G
RAM build include messages.
Removed atexit() handler, in favour of finalisation-code option in CMHG file.
Changed cluster rounding in saveFILE() to deal with extents > 2G.

Version 1.00. Tagged as 'DOSFS-1_00'
@
text
@d28 2
@


4.7
log
@Add some comments (!) and reindent FileSwitch interface
OpsGetPut
  DOSFS_put_bytes no longer passes an unnecessary dummy argument.
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFind
  Suggested buffer to FileSwitch is now 1x512 sector (rather than 256).
  Note - nothing seems to use the cluster buffering code in DOSFS,
indeed nothing ever malloc()s a buffer.
  Check at line 237 of OpFind would never be true since FILE_subdir is
not 1, fixed.
  Return an error if the handle to close is invalid.
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFile
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFunc
  A failure to find a slot to set the disc title now reports "Dir full"
not "Disc full"
  Reindented.
  Doxygen comments added to FileSwitch layer.

Version 0.99. Tagged as 'DOSFS-0_99'
@
text
@d37 1
d39 1
a39 1
extern int module_flags ;                     /* Global flags, mixture of: */
@


4.6
log
@Rationalise some defines
Many magic numbers changed to exported defines.
Eliminated unused "BOOTblock.h" (was just nesting 1 include file).
Moved non ASCII definitions out of "ASCII.h" then found the remainder weren't used => eliminated.

Version 0.98. Tagged as 'DOSFS-0_98'
@
text
@d28 1
a28 5
typedef void          (*VoidFnPtr)() ;     /* ptr to fn returning void */
typedef word          (*WordFnPtr)() ;     /* ptr to fn returning word */

#define wordalign(v)  ((v + (sizeof(int)-1)) & -sizeof(int))

a59 1
extern char          tline[] ;
@


4.5
log
@Source file subdivision
The sources to DOSFS had become rather jumbled and monolithic
* Split FileSwitch interface out into seperate ops source files.
* Combined international error lookup with MsgTrans code.
* Split utility functions into 'Helpers.c' along with wildcard matching functions.
* Moved DOS naming functions into, erm, 'DOSnaming.c'.
Also
* Makefile tweaked to remove 'symbols' on clean.
* Obsolete 'Help' and 'Syntax' placed in attic.

RAM, debug, and ROM targets built. RAM target tested with a DOS floppy disc.

Version 0.96. Tagged as 'DOSFS-0_96'
@
text
@d25 13
a37 1
#include "DOSshape.h"
a41 1
#if 1 /* SMC_TRUNCATE */
d44 2
a45 1
#endif
@


4.4
log
@  #include file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both Norcroft and GCC.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 0.86. Not tagged
@
text
@d35 9
@


4.3
log
@Rewrote Service_IdentifyDisc partly because it was an unreadable mess but
mainly so it can handle fixed discs too - this will be useful for DOS
format USB mass storage.
Also it will have a go at interpreting the partition table on fixed discs.
Tweak to filetyping logic (again!).

Version 0.74. Tagged as 'DOSFS-0_74'
@
text
@d25 1
a25 1
#include "h.DOSshape"
@


4.2
log
@Missed an ORRNES while 32 bitting,corrected.
Unused MSDOStoSTRING #if'd out to save a massive 112 bytes!
Corrected tracef1 in map_file_rostype which was printing out the
debugging before the variable got assigned.
Conditionally uses FileCore_DiscOp64 now,if available when the module
starts.
Eliminated some local 64 bit time handling code in favour of using that
already in the compiler (thanks to Kevin).
Now requires a compile time switch PCMCIA=<TRUE | FALSE> which leaves in
or takes out the PCMCIA card support.

Version 0.70. Tagged as 'DOSFS-0_70'
@
text
@a52 1
#if 1 /* SMC_REDUCE_RMA */
a62 16
#else
typedef struct DOSdiscinfo {
/* shape identity byte    */byte  magic_ID ;
#if 1 /* SMC_FIX_RO_5593 */
/* Show in format menu?   */byte in_menu;
#endif
/* format table entry     */word  findex ;
/* format identifier      */char *idtext ;
/* brief disc description */char *description ;
#if 1 /* SMC_FIX_RO_5593 */
/* MsgTrans help token    */char *help;
#endif
                           } DOSdiscinfo ;

extern DOSdiscinfo DOS_formats[] ;
#endif
@


4.1
log
@Initial revision
@
text
@d29 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
