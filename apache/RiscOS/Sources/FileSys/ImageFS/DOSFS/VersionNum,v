head	4.53;
access;
symbols
	DOSFS-1_14:4.53
	DOSFS-1_13:4.52
	DOSFS-1_12:4.51
	DOSFS-1_11:4.50
	DOSFS-1_10:4.49
	DOSFS-1_09:4.48
	DOSFS-1_08:4.47
	DOSFS-1_07:4.46
	DOSFS-1_06:4.45
	DOSFS-1_05:4.44
	DOSFS-1_04:4.43
	DOSFS-1_03:4.42
	DOSFS-1_02:4.41
	DOSFS-1_01:4.40
	DOSFS-1_00:4.39
	DOSFS-0_99:4.38
	DOSFS-0_98:4.37
	DOSFS-0_97:4.36
	DOSFS-0_96:4.35
	DOSFS-0_95:4.34
	DOSFS-0_94:4.33
	DOSFS-0_93:4.32
	DOSFS-0_92:4.31
	DOSFS-0_91:4.30
	DOSFS-0_90:4.29
	DOSFS-0_89:4.28
	DOSFS-0_88:4.27
	DOSFS-0_87:4.26
	DOSFS-0_86:4.24
	DOSFS-0_85:4.23
	DOSFS-0_84:4.22
	DOSFS-0_83:4.21
	DOSFS-0_82:4.20
	DOSFS-0_81:4.19
	DOSFS-0_80:4.18
	DOSFS-0_79:4.17
	RO_5_07:4.16
	DOSFS-0_78:4.16
	DOSFS-0_77:4.15
	DOSFS-0_76:4.14
	DOSFS-0_75:4.13
	DOSFS-0_74:4.12
	DOSFS-0_73:4.11
	DOSFS-0_72:4.10
	DOSFS-0_71:4.9
	DOSFS-0_70:4.8
	DOSFS-0_69:4.7
	DOSFS-0_68:4.6
	DOSFS-0_67:4.5
	DOSFS-0_66:4.4
	DOSFS-0_65:4.3
	dellis_autobuild_BaseSW:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.4
	DOSFS-0_64:4.2;
locks; strict;
comment	@# @;


4.53
date	2018.07.24.21.13.46;	author rsprowson;	state Exp;
branches;
next	4.52;
commitid	l0lt3WfBYpnUWqLA;

4.52
date	2018.02.19.20.41.01;	author jlee;	state Exp;
branches;
next	4.51;
commitid	ow6xUu8jYJzzKvrA;

4.51
date	2018.02.19.00.05.56;	author jlee;	state Exp;
branches;
next	4.50;
commitid	ic65jLota7NRUorA;

4.50
date	2017.12.17.09.29.15;	author rsprowson;	state Exp;
branches;
next	4.49;
commitid	38CSk47LemUE5ejA;

4.49
date	2017.11.21.21.34.03;	author rsprowson;	state Exp;
branches;
next	4.48;
commitid	jPD29OqViOM7WWfA;

4.48
date	2016.03.18.21.44.12;	author rsprowson;	state Exp;
branches;
next	4.47;
commitid	tMFs57eIOarfHaZy;

4.47
date	2014.11.02.17.53.51;	author rsprowson;	state Exp;
branches;
next	4.46;
commitid	jLG2K2peqo1FyDWx;

4.46
date	2014.06.25.20.13.32;	author rsprowson;	state Exp;
branches;
next	4.45;
commitid	E7yWETwfWvNEvWFx;

4.45
date	2014.06.25.19.37.18;	author rsprowson;	state Exp;
branches;
next	4.44;
commitid	gFu51vOmpefejWFx;

4.44
date	2014.06.24.07.34.33;	author rsprowson;	state Exp;
branches;
next	4.43;
commitid	yjODkHAzwcqhlKFx;

4.43
date	2014.05.31.17.21.01;	author rsprowson;	state Exp;
branches;
next	4.42;
commitid	7CKbqkXT93CimICx;

4.42
date	2014.05.22.09.50.02;	author rsprowson;	state Exp;
branches;
next	4.41;
commitid	J18R8TiBgxsw9wBx;

4.41
date	2013.10.15.18.54.42;	author bavison;	state Exp;
branches;
next	4.40;
commitid	Glj6c18RNe8Pcq9x;

4.40
date	2013.01.13.18.57.25;	author rsprowson;	state Exp;
branches;
next	4.39;
commitid	IcVKoGKFReBN35Aw;

4.39
date	2013.01.13.18.54.59;	author rsprowson;	state Exp;
branches;
next	4.38;
commitid	3lYJMhP8ONWX25Aw;

4.38
date	2013.01.13.18.52.31;	author rsprowson;	state Exp;
branches;
next	4.37;
commitid	oq0uLRDtA5Y625Aw;

4.37
date	2013.01.13.18.49.40;	author rsprowson;	state Exp;
branches;
next	4.36;
commitid	fjzSOoRRnhA815Aw;

4.36
date	2012.12.07.14.25.57;	author rsprowson;	state Exp;
branches;
next	4.35;
commitid	vz81mkusjqgpKivw;

4.35
date	2012.12.07.14.20.12;	author rsprowson;	state Exp;
branches;
next	4.34;
commitid	jnwtWy3St1iqIivw;

4.34
date	2012.09.02.13.28.54;	author bavison;	state Exp;
branches;
next	4.33;
commitid	7d95TmqsXKS9wXiw;

4.33
date	2012.08.06.22.54.11;	author bavison;	state Exp;
branches;
next	4.32;
commitid	zQpkXhOxPHjTvxfw;

4.32
date	2012.07.23.16.02.09;	author bavison;	state Exp;
branches;
next	4.31;
commitid	qSAM3nuJ4CArGHdw;

4.31
date	2012.07.21.19.07.19;	author jlee;	state Exp;
branches;
next	4.30;
commitid	RrZGA8eWEPFWLsdw;

4.30
date	2012.07.14.20.27.42;	author jlee;	state Exp;
branches;
next	4.29;
commitid	jbK70oWaDbltrzcw;

4.29
date	2012.06.10.13.25.07;	author bavison;	state Exp;
branches;
next	4.28;
commitid	tzPLCsjFs2keca8w;

4.28
date	2012.04.14.20.47.41;	author rsprowson;	state Exp;
branches;
next	4.27;
commitid	JIilnwocc1uGtS0w;

4.27
date	2012.04.13.23.01.52;	author bavison;	state Exp;
branches;
next	4.26;
commitid	6katJPHCkf0IfL0w;

4.26
date	2010.01.19.16.53.20;	author rool;	state Exp;
branches;
next	4.25;

4.25
date	2009.06.11.21.01.25;	author bavison;	state Exp;
branches;
next	4.24;

4.24
date	2009.05.17.01.51.46;	author bavison;	state Exp;
branches;
next	4.23;

4.23
date	2007.10.19.14.47.37;	author srevill;	state Exp;
branches;
next	4.22;

4.22
date	2004.11.04.21.16.36;	author jballance;	state Exp;
branches;
next	4.21;

4.21
date	2004.10.29.01.22.34;	author jballance;	state Exp;
branches;
next	4.20;

4.20
date	2004.10.25.21.38.05;	author jballance;	state Exp;
branches;
next	4.19;

4.19
date	2004.10.07.23.31.21;	author jballance;	state Exp;
branches;
next	4.18;

4.18
date	2004.10.07.01.29.02;	author jballance;	state Exp;
branches;
next	4.17;

4.17
date	2004.09.30.21.59.04;	author jballance;	state Exp;
branches;
next	4.16;

4.16
date	2003.07.25.14.29.06;	author rsprowson;	state Exp;
branches;
next	4.15;

4.15
date	2003.06.26.11.44.23;	author rsprowson;	state Exp;
branches;
next	4.14;

4.14
date	2003.06.13.17.25.28;	author rsprowson;	state Exp;
branches;
next	4.13;

4.13
date	2003.06.06.17.23.24;	author rsprowson;	state Exp;
branches;
next	4.12;

4.12
date	2003.05.23.17.21.15;	author rsprowson;	state Exp;
branches;
next	4.11;

4.11
date	2003.03.06.17.11.04;	author rsprowson;	state Exp;
branches;
next	4.10;

4.10
date	2003.01.31.10.50.56;	author rsprowson;	state Exp;
branches;
next	4.9;

4.9
date	2002.12.10.21.01.37;	author rsprowson;	state Exp;
branches;
next	4.8;

4.8
date	2002.11.08.10.08.59;	author rsprowson;	state Exp;
branches;
next	4.7;

4.7
date	2002.09.22.11.30.05;	author rsprowson;	state Exp;
branches;
next	4.6;

4.6
date	2002.05.03.15.31.26;	author rsprowso;	state Exp;
branches;
next	4.5;

4.5
date	2002.03.15.13.05.06;	author rsprowso;	state Exp;
branches;
next	4.4;

4.4
date	2001.08.16.16.00.43;	author rsprowso;	state Exp;
branches;
next	4.3;

4.3
date	2001.08.08.14.56.39;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.11.25.12.52.47;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	98.11.25.12.45.48;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.53
log
@Fix pointer compare confusion
OpsFunc.c: don't compare fname with a null string, when a NULL pointer was intended
Found by cppcheck static analysis.

Version 1.14. Tagged as 'DOSFS-1_14'
@
text
@/* (1.14)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        1.14
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                24 Jul 2018

#define Module_MajorVersion             "1.14"
#define Module_Version                  114
#define Module_MinorVersion             ""
#define Module_Date                     "24 Jul 2018"

#define Module_ApplicationDate          "24-Jul-18"

#define Module_ComponentName            "DOSFS"
#define Module_ComponentPath            "castle/RiscOS/Sources/FileSys/ImageFS/DOSFS"

#define Module_FullVersion              "1.14"
#define Module_HelpVersion              "1.14 (24 Jul 2018)"
#define Module_LibraryVersionInfo       "1:14"
@


4.52
log
@Remove redundant NULL pointer check
Detail:
  c/DOSdirs - Now that nbuff is an array held on the stack, there's no need for findSUBDIR to check whether it's a null pointer
Admin:
  Builds, untested
  Issue spotted by Dominic Plunkett


Version 1.13. Tagged as 'DOSFS-1_13'
@
text
@d1 1
a1 1
/* (1.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.13
d9 1
a9 1
#define Module_Date_CMHG                19 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "1.13"
#define Module_Version                  113
d14 1
a14 1
#define Module_Date                     "19 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "19-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "1.13"
#define Module_HelpVersion              "1.13 (19 Feb 2018)"
#define Module_LibraryVersionInfo       "1:13"
@


4.51
log
@Reject overly-large discs, and other invalid things
Detail:
  c/Accessors, h/Accessors, Makefile - Added some simple 'image accessor' routines to abstract over accessing the underlying disc/image file. These accept 64bit disc addresses and will check to make sure any size limits imposed by the lower-level API are adhered to (512MB limit for FileCore_DiscOp, or extent of image file for OS_GBPB)
  h/MsgTrans, Resources/Germany/Messages, Resources/UK/Messages - Add a couple of new error messages
  h/Helpers - Add a couple of macros to simplify reading 16/32bit values that are split into multiple bytes in struct definitions. Change writeWORD & loadWORD to accept void* instead of char* so they can be used with other types like 'byte'
  h/DOSshape - Add '0' suffix to some struct members so they can be used with new READ_0123 macro
  h/ADFSshape - Make sure put_doublestep is safe to use with bools
  c/DOSdirs - Remove pointless malloc of small temporary array
  c/DOSclusters - Use new READ_ macros in max_sector()
  c/DOSFS - Use new READ_ macros so code is less painful to read. Use new image accessor system to get rid of some boilerplate for reading from the disc (+ extra error checks). Change 32bit values to 64bit where it looks like it's necessary, and use bools in place of a couple of 0/1 ints. Reject any discs which are too big for the 32bit fields in the ADFS disc record.
  c/OpsFunc - Update DOSFS_image_open in ways similar to the code in c/DOSFS, making use of READ_, image accessor, 64bit values, and adding extra error checks.
Admin:
  Tested with assorted large & small image files & SD cards on a BB-xM, and some DOS/Atari floppy discs on a RiscPC
  FAT partitions larger than 4GB (or which extend past the 4GB FileSwitch limit) are now rejected, as are image files which have been truncated
  A future improvement could be to lift the disc/partition identification code out of c/DOSFS and c/OpsFunc and unify it, since both files contain fairly similar code
  German messages are in need of translation


Version 1.12. Tagged as 'DOSFS-1_12'
@
text
@d1 1
a1 1
/* (1.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.12
d9 1
a9 1
#define Module_Date_CMHG                18 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "1.12"
#define Module_Version                  112
d14 1
a14 1
#define Module_Date                     "18 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "18-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "1.12"
#define Module_HelpVersion              "1.12 (18 Feb 2018)"
#define Module_LibraryVersionInfo       "1:12"
@


4.50
log
@No longer offer PCMCIA SRAM card as a format option
Untangle the PCMCIATRUE misnomer - what it really meant was "offer PCMCIA card as an option for *Format AND allow non floppy geometries".
Nothing has shipped with PCCardFS since October 1994, so stop offering it as a possible *Format.
However, we do rely on the non floppy geometries for things like SD cards and USB sticks, so retain that with a new switch (permanently enabled) called NONFLOPPIES.

Tested with a Pi SD card and a 4GB USB stick.

Version 1.11. Tagged as 'DOSFS-1_11'
@
text
@d1 1
a1 1
/* (1.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.11
d9 1
a9 1
#define Module_Date_CMHG                17 Dec 2017
d11 2
a12 2
#define Module_MajorVersion             "1.11"
#define Module_Version                  111
d14 1
a14 1
#define Module_Date                     "17 Dec 2017"
d16 1
a16 1
#define Module_ApplicationDate          "17-Dec-17"
d21 3
a23 3
#define Module_FullVersion              "1.11"
#define Module_HelpVersion              "1.11 (17 Dec 2017)"
#define Module_LibraryVersionInfo       "1:11"
@


4.49
log
@Allow mounting discs with 1 letter names, and 2x buffer overrun fixes
DOSFS would prefer to use the disc title from the volume name entry in the root directory, even if this reduced to 1 letter, which would then lead to "Disc drive not known" errors. Since the disc couldn't be mounted it couldn't be renamed either, requiring a trip to a PC to do so.
Now, if the cleaned up name is < 2 characters long, ignore it and use the one based on the volumeid, and if that doesn't exist, use the default one ("Untitled") from the Messages file.
In OpsFunc.c used memset() in place of a byte set loop.

Ref https://www.riscosopen.org/forum/forums/4/topics/9503
DOSFS.c, line 621: remove the excess NULL so the sprintf fits into the 10 byte buffer, not 11.
DOSFS.c, line 1556: restore the original intent for *CopyBoot in light of the structure/union reorg DOSshape.h revision 4.7 in DOSFS-0_79. Previously the boot code was copied in its entirity as an opaque blob, but the loop was left unchanged, overrunning the sector buffer.

A useful example of the extent of the boot code is given in
  http://thestarman.pcministry.com/asm/mbr/DOS50FDB.htm
which shows the code uses up every last byte of the sector.

Tested with a disc called "R", which can now be mounted. A floppy with no name and no volume id, and one with no name and a volume id.

Version 1.10. Tagged as 'DOSFS-1_10'
@
text
@d1 1
a1 1
/* (1.10)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.10
d9 1
a9 1
#define Module_Date_CMHG                21 Nov 2017
d11 2
a12 2
#define Module_MajorVersion             "1.10"
#define Module_Version                  110
d14 1
a14 1
#define Module_Date                     "21 Nov 2017"
d16 1
a16 1
#define Module_ApplicationDate          "21-Nov-17"
d21 3
a23 3
#define Module_FullVersion              "1.10"
#define Module_HelpVersion              "1.10 (21 Nov 2017)"
#define Module_LibraryVersionInfo       "1:10"
@


4.48
log
@Fix a few potential memory leaks
Some of the long filenames handling added in DOSFS-0_79 (DOSFSops.c revision 4.10) introduced extra points to return in the face of error, but didn't free memory allocated earlier in the function.
Add missing free()'s.
From a tip off from Dominic Plunkett in http://www.riscosopen.org/forum/forums/4/topics/3990#posts-51013

Version 1.09. Tagged as 'DOSFS-1_09'
@
text
@d1 1
a1 1
/* (1.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.09
d9 1
a9 1
#define Module_Date_CMHG                18 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "1.09"
#define Module_Version                  109
d14 1
a14 1
#define Module_Date                     "18 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "18-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "1.09"
#define Module_HelpVersion              "1.09 (18 Mar 2016)"
#define Module_LibraryVersionInfo       "1:9"
@


4.47
log
@Fixes to stop DOSFS erroneously claiming partitions that aren't valid
In particular with ADFS, attempting to format an ATA drive purchased from a PC box shifter would often lead to the machine hanging on startup meaning you can't get as far as running !HForm. Further analysis showed that the problem was caused by DOSFS latching onto the PC partition table and attempting to claim the Service_IdentifyDisc. This would then be followed by trying to load the FAT via FileCore in situations where the FAT to load were bigger than the disc size represented by the disc record FileCore has attached to the disc.

This primarily concerns things with partition tables (like a fixed disc).
Things got off to a bad start, some inaccurate keyboard mashing meant the definition for DOS_bootsector added up to 520 bytes, and this was loaded into a malloc'd 512 byte buffer.
The representation of the disc size (bbsize) was being kept in a signed integer, so the single (rather weak) test of checking the boot block declared size (bbsize) being greater than the partition declared size (winisize) would always be accepted for partitions > 2GB.
Additionally, the bbsize was multiplied by DOSsecsize and performed as a byte compare rather than a sector compare, leading to overflow.
Invariably this check would pass (either due to the sign bit being set, or overflow) and DOSFS would claim the service and go ahead and try to read in an unfeasibly large FAT.

DOSFS is now much more strict about checking
* be sure bbsize can fit in the partition by comparing as unsigned number of sectors, convert to bytes later
* be sure bbsize is non zero
* be sure the FAT isn't bigger than bbsize
* be sure the root directory isn't bigger than bbsize
only then claim the service.

DOSshape.h:
Correct the size of the DOS_bootsector back to 512 bytes.
ADFSshape.h:
Remove unused grubby FileCore constants, especially as we're not likely to encounter any 256B/sector drives!
Add the extra disc record fields to get us up to 'BigDisc' in FileCore parlance.
DOSFS.c:
If the rootsize is zero, have a go at using the FAT32 ones instead. Previously this logic only triggered if the FAT32 extended signature was present, but that signature is for the fields that follow it - the FAT size preceeds.
Only update the return variables if we're confident we're going to claim the service.
Remove dead variable 'notracks'.

Tested on a sample of 4 ATA drives > 10GB from different vendors previously used in PCs. All 4 used to hang when installed, now they do not.

Version 1.08. Tagged as 'DOSFS-1_08'
@
text
@d1 1
a1 1
/* (1.08)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.08
d9 1
a9 1
#define Module_Date_CMHG                02 Nov 2014
d11 2
a12 2
#define Module_MajorVersion             "1.08"
#define Module_Version                  108
d14 1
a14 1
#define Module_Date                     "02 Nov 2014"
d16 1
a16 1
#define Module_ApplicationDate          "02-Nov-14"
d21 3
a23 3
#define Module_FullVersion              "1.08"
#define Module_HelpVersion              "1.08 (02 Nov 2014)"
#define Module_LibraryVersionInfo       "1:8"
@


4.46
log
@Change last couple of uses of trace macros to use DebugLib
This town ain't big enough for the two of us.

Version 1.07. Tagged as 'DOSFS-1_07'
@
text
@d1 1
a1 1
/* (1.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.07
d9 1
a9 1
#define Module_Date_CMHG                25 Jun 2014
d11 2
a12 2
#define Module_MajorVersion             "1.07"
#define Module_Version                  107
d14 1
a14 1
#define Module_Date                     "25 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "25-Jun-14"
d21 3
a23 3
#define Module_FullVersion              "1.07"
#define Module_HelpVersion              "1.07 (25 Jun 2014)"
#define Module_LibraryVersionInfo       "1:7"
@


4.45
log
@Revise filename shortening rules
The rules DOSFS used to create the short name version of a long filename were quite wide of the recommendations from Microsoft. This causes problems in particular with bootloaders that are a little more simplistic and use the short name form, only to find "BOOTCODE.BIN" has been replaced by "BOOTCO~1.BIN" by DOSFS.
Also, the long filename entried created for new long filenames left the reserved fields unset. Some of these seem to have special meanings to Windows which faults them ("extended attribute handle invalid") when running chkdsk.

DOSnaming.c: replaced the shorten_lfn function, sprinkled in a few token consts, set the reserved fields in long file names to 0
DOSclusters.c/OpsFunc.c/OpsFile.c: remove shorttemp[14] no longer needed, simplify sprintf/memcpy/memcpy into a single sprintf
DOSFS.h: familiar MIN/MAX maxros added

Tested in isolation in harness "test/shorten" and comparing floppy discs generated with "test/shortgen" from Windows and DOSFS.
Fixes ticket #313.

Version 1.06. Tagged as 'DOSFS-1_06'
@
text
@d1 1
a1 1
/* (1.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.06
d11 2
a12 2
#define Module_MajorVersion             "1.06"
#define Module_Version                  106
d21 3
a23 3
#define Module_FullVersion              "1.06"
#define Module_HelpVersion              "1.06 (25 Jun 2014)"
#define Module_LibraryVersionInfo       "1:6"
@


4.44
log
@Added some doxygen comments
Also corrected various confusions about NULL (a pointer) and the ASCII character 0.
Reindented consistently.

Version 1.05. Tagged as 'DOSFS-1_05'
@
text
@d1 1
a1 1
/* (1.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.05
d9 1
a9 1
#define Module_Date_CMHG                24 Jun 2014
d11 2
a12 2
#define Module_MajorVersion             "1.05"
#define Module_Version                  105
d14 1
a14 1
#define Module_Date                     "24 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jun-14"
d21 3
a23 3
#define Module_FullVersion              "1.05"
#define Module_HelpVersion              "1.05 (24 Jun 2014)"
#define Module_LibraryVersionInfo       "1:5"
@


4.43
log
@Don't subscribe to service calls you do nothing with
0x42 and 0x68 removed from service call table and service call handler.

Version 1.04. Tagged as 'DOSFS-1_04'
@
text
@d1 1
a1 1
/* (1.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.04
d9 1
a9 1
#define Module_Date_CMHG                31 May 2014
d11 2
a12 2
#define Module_MajorVersion             "1.04"
#define Module_Version                  104
d14 1
a14 1
#define Module_Date                     "31 May 2014"
d16 1
a16 1
#define Module_ApplicationDate          "31-May-14"
d21 3
a23 3
#define Module_FullVersion              "1.04"
#define Module_HelpVersion              "1.04 (31 May 2014)"
#define Module_LibraryVersionInfo       "1:4"
@


4.42
log
@Fix a few null pointer dereferences in dprintf() statements
DOSdirs.c: be more careful about %s of NULL pointers
DOSFS.c: don't waste time strcmp() of PCMCIA format name when you can compare by index

Debug version built, less oflaoflaolfa now.

Version 1.03. Tagged as 'DOSFS-1_03'
@
text
@d1 1
a1 1
/* (1.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.03
d9 1
a9 1
#define Module_Date_CMHG                22 May 2014
d11 2
a12 2
#define Module_MajorVersion             "1.03"
#define Module_Version                  103
d14 1
a14 1
#define Module_Date                     "22 May 2014"
d16 1
a16 1
#define Module_ApplicationDate          "22-May-14"
d21 3
a23 3
#define Module_FullVersion              "1.03"
#define Module_HelpVersion              "1.03 (22 May 2014)"
#define Module_LibraryVersionInfo       "1:3"
@


4.41
log
@  Fix divide-by-zero bug
Detail:
  Somewhere in the process of adding FAT16/FAT32 support, a bug was
  was introduced where an attempt was made to calculate the number of
  sectors in a cluster before the cluster size (in bytes) had been
  determined. This affected invalid (e.g. blank) image files, as well as
  old 160K/320K DOS floppies that aren't supposed to contain a valid boot
  block.
Admin:
  Issue raised by the Raspberry Pi NOOBS team when they failed to set up
  the DOS partition where FileCore was expecting it to be.

Version 1.02. Tagged as 'DOSFS-1_02'
@
text
@d1 1
a1 1
/* (1.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.02
d9 1
a9 1
#define Module_Date_CMHG                15 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "1.02"
#define Module_Version                  102
d14 1
a14 1
#define Module_Date                     "15 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "15-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "1.02"
#define Module_HelpVersion              "1.02 (15 Oct 2013)"
#define Module_LibraryVersionInfo       "1:2"
@


4.40
log
@Add missing message, use central allocations for DOSFS' FS number
Missing 'Stack full' error message added (German translation needed).
Use DOSFS FS number from headers.
Tested with floppy disc (FAT12), 1GB image file (FAT16) and 4GB image file (FAT32) with no issues seen.

Version 1.01. Tagged as 'DOSFS-1_01'
@
text
@d1 1
a1 1
/* (1.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.01
d9 1
a9 1
#define Module_Date_CMHG                13 Jan 2013
d11 2
a12 2
#define Module_MajorVersion             "1.01"
#define Module_Version                  101
d14 1
a14 1
#define Module_Date                     "13 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "13-Jan-13"
d21 3
a23 3
#define Module_FullVersion              "1.01"
#define Module_HelpVersion              "1.01 (13 Jan 2013)"
#define Module_LibraryVersionInfo       "1:1"
@


4.39
log
@Allow RAM builds with messages in, fix for saving to images > 2G
RAM build include messages.
Removed atexit() handler, in favour of finalisation-code option in CMHG file.
Changed cluster rounding in saveFILE() to deal with extents > 2G.

Version 1.00. Tagged as 'DOSFS-1_00'
@
text
@d1 1
a1 1
/* (1.00)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.00
d11 2
a12 2
#define Module_MajorVersion             "1.00"
#define Module_Version                  100
d21 3
a23 3
#define Module_FullVersion              "1.00"
#define Module_HelpVersion              "1.00 (13 Jan 2013)"
#define Module_LibraryVersionInfo       "1:0"
@


4.38
log
@Add some comments (!) and reindent FileSwitch interface
OpsGetPut
  DOSFS_put_bytes no longer passes an unnecessary dummy argument.
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFind
  Suggested buffer to FileSwitch is now 1x512 sector (rather than 256).
  Note - nothing seems to use the cluster buffering code in DOSFS,
indeed nothing ever malloc()s a buffer.
  Check at line 237 of OpFind would never be true since FILE_subdir is
not 1, fixed.
  Return an error if the handle to close is invalid.
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFile
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFunc
  A failure to find a slot to set the disc title now reports "Dir full"
not "Disc full"
  Reindented.
  Doxygen comments added to FileSwitch layer.

Version 0.99. Tagged as 'DOSFS-0_99'
@
text
@d1 1
a1 1
/* (0.99)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.99
d11 2
a12 2
#define Module_MajorVersion             "0.99"
#define Module_Version                  99
d21 3
a23 3
#define Module_FullVersion              "0.99"
#define Module_HelpVersion              "0.99 (13 Jan 2013)"
#define Module_LibraryVersionInfo       "0:99"
@


4.37
log
@Rationalise some defines
Many magic numbers changed to exported defines.
Eliminated unused "BOOTblock.h" (was just nesting 1 include file).
Moved non ASCII definitions out of "ASCII.h" then found the remainder weren't used => eliminated.

Version 0.98. Tagged as 'DOSFS-0_98'
@
text
@d1 1
a1 1
/* (0.98)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.98
d11 2
a12 2
#define Module_MajorVersion             "0.98"
#define Module_Version                  98
d21 3
a23 3
#define Module_FullVersion              "0.98"
#define Module_HelpVersion              "0.98 (13 Jan 2013)"
#define Module_LibraryVersionInfo       "0:98"
@


4.36
log
@Makefile recreated from fragments
Replaced 'lk' register name with 'lr', now APCS is not set to -none.
Inverted the sense of the conditional in CMHG file, following the more common ROM predefine use (eg. the Toolbox).
Removed obsolete NoFAT32 obey files - the switch remains but there's little point omitting that now (since the switch actually leaves most of the code in anyway).
Tested in IOMD ROM build (export, resources, ROM phases) mounting a DOS floppy and 1GB image file.

Version 0.97. Tagged as 'DOSFS-0_97'
@
text
@d1 1
a1 1
/* (0.97)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.97
d9 1
a9 1
#define Module_Date_CMHG                07 Dec 2012
d11 2
a12 2
#define Module_MajorVersion             "0.97"
#define Module_Version                  97
d14 1
a14 1
#define Module_Date                     "07 Dec 2012"
d16 1
a16 1
#define Module_ApplicationDate          "07-Dec-12"
d21 3
a23 3
#define Module_FullVersion              "0.97"
#define Module_HelpVersion              "0.97 (07 Dec 2012)"
#define Module_LibraryVersionInfo       "0:97"
@


4.35
log
@Source file subdivision
The sources to DOSFS had become rather jumbled and monolithic
* Split FileSwitch interface out into seperate ops source files.
* Combined international error lookup with MsgTrans code.
* Split utility functions into 'Helpers.c' along with wildcard matching functions.
* Moved DOS naming functions into, erm, 'DOSnaming.c'.
Also
* Makefile tweaked to remove 'symbols' on clean.
* Obsolete 'Help' and 'Syntax' placed in attic.

RAM, debug, and ROM targets built. RAM target tested with a DOS floppy disc.

Version 0.96. Tagged as 'DOSFS-0_96'
@
text
@d1 1
a1 1
/* (0.96)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.96
d11 2
a12 2
#define Module_MajorVersion             "0.96"
#define Module_Version                  96
d21 3
a23 3
#define Module_FullVersion              "0.96"
#define Module_HelpVersion              "0.96 (07 Dec 2012)"
#define Module_LibraryVersionInfo       "0:96"
@


4.34
log
@  Fixed support for certain sized DOS discs
Detail:
  In the code which determined the bitmask to apply to cluster numbers, the
  calculation of the number of clusters in the data area (which is the
  deciding factor between FAT12, FAT16 and FAT32) contained an operator
  precedence error in the calculation of the root directory size. The result
  was that if the disc size was within approx 8 MB of the FAT type threshold
  then the wrong mask was selected. (For clusters of 4*512 bytes, the FAT12/16
  threshold is about 8 MB, so discs between 8 and 16 MB would fail.)
  Also:
  * Fixed the module base address and offsets registered with FileSwitch -
    previously the static data relocation offset was incorrectly applied.
    FileSwitch didn't actually care as long as they added up to the right
    address, but it was still wrong.
  * 32-bitting was incorrectly done using the No26bitCode switch rather than
    the No32bitCode switch, meaning that softloadable builds of this module
    were not 32-bit compatible. Softloadable builds now work on anything from
    RISC OS 3.5 onwards.
Admin:
  Tested on Raspberry Pi and Iyonix.

Version 0.95. Tagged as 'DOSFS-0_95'
@
text
@d1 1
a1 1
/* (0.95)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.95
d9 1
a9 1
#define Module_Date_CMHG                02 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.95"
#define Module_Version                  95
d14 1
a14 1
#define Module_Date                     "02 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.95"
#define Module_HelpVersion              "0.95 (02 Sep 2012)"
#define Module_LibraryVersionInfo       "0:95"
@


4.33
log
@  Fix setting disc name for DOS discs
Admin:
  Changes received from Willi Theiss

Version 0.94. Tagged as 'DOSFS-0_94'
@
text
@d1 1
a1 1
/* (0.94)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.94
d9 1
a9 1
#define Module_Date_CMHG                06 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.94"
#define Module_Version                  94
d14 1
a14 1
#define Module_Date                     "06 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.94"
#define Module_HelpVersion              "0.94 (06 Aug 2012)"
#define Module_LibraryVersionInfo       "0:94"
@


4.32
log
@  Now creates a disc name from FAT32-formatted media
Admin:
  Changes received from Willi Theiss

Version 0.93. Tagged as 'DOSFS-0_93'
@
text
@d1 1
a1 1
/* (0.93)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.93
d9 1
a9 1
#define Module_Date_CMHG                23 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.93"
#define Module_Version                  93
d14 1
a14 1
#define Module_Date                     "23 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "23-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.93"
#define Module_HelpVersion              "0.93 (23 Jul 2012)"
#define Module_LibraryVersionInfo       "0:93"
@


4.31
log
@Fix null pointer dereference in findSUBDIR
Detail:
  c/DOSFSops - The while() loop in findSUBDIR now bails immediately if getnextDIRentry() returns NULL. Avoids null pointer dereference when calling buildFILEname().
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.92. Tagged as 'DOSFS-0_92'
@
text
@d1 1
a1 1
/* (0.92)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.92
d9 1
a9 1
#define Module_Date_CMHG                21 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.92"
#define Module_Version                  92
d14 1
a14 1
#define Module_Date                     "21 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.92"
#define Module_HelpVersion              "0.92 (21 Jul 2012)"
#define Module_LibraryVersionInfo       "0:92"
@


4.30
log
@Fix packdir peeking and potentially poking the reset vector
Detail:
  c/DOSFSops - packdir() was treating its optional 'preserve' parameter as mandatory, leading to peeking (and potentially poking) of null pointers
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.91. Tagged as 'DOSFS-0_91'
@
text
@d1 1
a1 1
/* (0.91)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.91
d9 1
a9 1
#define Module_Date_CMHG                14 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.91"
#define Module_Version                  91
d14 1
a14 1
#define Module_Date                     "14 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.91"
#define Module_HelpVersion              "0.91 (14 Jul 2012)"
#define Module_LibraryVersionInfo       "0:91"
@


4.29
log
@  Fixed timestamping
Detail:
  Renamed function "localTIME" to "get_RISCOS_TIME" since it has nothing to do
  with local time. This function used to call the C library function
  localtime(), but until recently the C library was non-conformant to the
  C standard, and simply produced a year/month/day/hour/minute/second breakdown
  as UTC. When this was fixed (RISC_OSLib 5.68) it changed DOSFS's behaviour;
  it was first detected because the reverse operation is implemented locally
  within DOSFS, so a read-modify-write of file attributes leads to the
  modification time being skewed by an amount equal to the difference between
  UTC and local time. Arguments can be made either to treat the on-disc time as
  local time (for compatibility with Windows and Mac OS) or as UTC (for
  compatibility with Linux or older RISC OS systems); I have opted to return
  behaviour to UTC. Also placed a lower limit on dates of the earliest date
  supported by FAT (1980), so for example if your system clock is set to 1970,
  as it will be if there is no RTC and NetTime is not operational, then you
  don't end up creating dates in the far future due to underflow.
Admin:
  Tested on a beagleboard

Version 0.90. Tagged as 'DOSFS-0_90'
@
text
@d1 1
a1 1
/* (0.90)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.90
d9 1
a9 1
#define Module_Date_CMHG                10 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.90"
#define Module_Version                  90
d14 1
a14 1
#define Module_Date                     "10 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.90"
#define Module_HelpVersion              "0.90 (10 Jun 2012)"
#define Module_LibraryVersionInfo       "0:90"
@


4.28
log
@Trim out some local definitions, use header files instead
Use Push/Pull macros for stack operations.
Unix-ify path names in assembler files.

Version 0.89. Tagged as 'DOSFS-0_89'
@
text
@d1 1
a1 1
/* (0.89)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.89
d9 1
a9 1
#define Module_Date_CMHG                14 Apr 2012
d11 2
a12 2
#define Module_MajorVersion             "0.89"
#define Module_Version                  89
d14 1
a14 1
#define Module_Date                     "14 Apr 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-12"
d21 3
a23 3
#define Module_FullVersion              "0.89"
#define Module_HelpVersion              "0.89 (14 Apr 2012)"
#define Module_LibraryVersionInfo       "0:89"
@


4.27
log
@  Changed *OPT 4 setting
Detail:
  DOS-formatted discs don't have a FileCore boot block, so there's nowhere
  to store the *OPT 4 setting. Up till now, it's been hard-coded to 0; this
  commit changes it to a hard-coded 2, which means that (at least in theory)
  it is now possible to construct a bootable DOS-formatted medium - like, say,
  the same SD card that contains a beagleboard ROM image.
Admin:
  Verified the reported boot option using *Cat.

Version 0.88. Tagged as 'DOSFS-0_88'
@
text
@d1 1
a1 1
/* (0.88)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.88
d9 1
a9 1
#define Module_Date_CMHG                13 Apr 2012
d11 2
a12 2
#define Module_MajorVersion             "0.88"
#define Module_Version                  88
d14 1
a14 1
#define Module_Date                     "13 Apr 2012"
d16 1
a16 1
#define Module_ApplicationDate          "13-Apr-12"
d21 3
a23 3
#define Module_FullVersion              "0.88"
#define Module_HelpVersion              "0.88 (13 Apr 2012)"
#define Module_LibraryVersionInfo       "0:88"
@


4.26
log
@Incremented version number, no other change.
Previous changes were untagged, but incrementing the version number gives
us a tag we can associate with the official RISC OS 5.16 release.

Version 0.87. Tagged as 'DOSFS-0_87'
@
text
@d1 1
a1 1
/* (0.87)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.87
d9 1
a9 1
#define Module_Date_CMHG                19 Jan 2010
d11 2
a12 2
#define Module_MajorVersion             "0.87"
#define Module_Version                  87
d14 1
a14 1
#define Module_Date                     "19 Jan 2010"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-10"
d21 3
a23 3
#define Module_FullVersion              "0.87"
#define Module_HelpVersion              "0.87 (19 Jan 2010)"
#define Module_LibraryVersionInfo       "0:87"
@


4.25
log
@  #include file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both Norcroft and GCC.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 0.86. Not tagged
@
text
@d1 1
a1 1
/* (0.86)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.86
d9 1
a9 1
#define Module_Date_CMHG                11 Jun 2009
d11 2
a12 2
#define Module_MajorVersion             "0.86"
#define Module_Version                  86
d14 1
a14 1
#define Module_Date                     "11 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jun-09"
d21 3
a23 3
#define Module_FullVersion              "0.86"
#define Module_HelpVersion              "0.86 (11 Jun 2009)"
#define Module_LibraryVersionInfo       "0:86"
@


4.24
log
@  Architecture-based optimisation
Detail:
  Unaligned word loads and stores have been optimised if only pre-ARMv6 or
  if only ARM6+ arachitectures need be supported.
Admin:
  Builds but untested

Version 0.86. Tagged as 'DOSFS-0_86'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                17 May 2009
d14 1
a14 1
#define Module_Date                     "17 May 2009"
d16 1
a16 1
#define Module_ApplicationDate          "17-May-09"
d22 1
a22 1
#define Module_HelpVersion              "0.86 (17 May 2009)"
@


4.23
log
@Fixed so that it builds and installs. No runtime checking.

Version 0.85. Tagged as 'DOSFS-0_85'
@
text
@d1 1
a1 1
/* (0.85)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.85
d9 1
a9 1
#define Module_Date_CMHG                19 Oct 2007
d11 2
a12 2
#define Module_MajorVersion             "0.85"
#define Module_Version                  85
d14 1
a14 1
#define Module_Date                     "19 Oct 2007"
d16 1
a16 1
#define Module_ApplicationDate          "19-Oct-07"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/FileSys/ImageFS/DOSFS"
d21 3
a23 3
#define Module_FullVersion              "0.85"
#define Module_HelpVersion              "0.85 (19 Oct 2007)"
#define Module_LibraryVersionInfo       "0:85"
@


4.22
log
@         now ensures that any long name that doesn't match the linked
         shortname is markee erased. This then copes with images where a
         longnamed file is deleted on shortname filing system, thus
         leaving several longname name entries 'hanging around'
Detail:

Admin:
         tested at castle.. castle added IP


Version 0.84. Tagged as 'DOSFS-0_84'
@
text
@d1 1
a1 1
/* (0.84)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.84
d9 1
a9 1
#define Module_Date_CMHG                04 Nov 2004
d11 2
a12 2
#define Module_MajorVersion             "0.84"
#define Module_Version                  84
d14 1
a14 1
#define Module_Date                     "04 Nov 2004"
d16 1
a16 1
#define Module_ApplicationDate          "04-Nov-04"
d21 3
a23 3
#define Module_FullVersion              "0.84"
#define Module_HelpVersion              "0.84 (04 Nov 2004)"
#define Module_LibraryVersionInfo       "0:84"
@


4.21
log
@       repair DOSMap display/output prior to rom inclusion
Detail:
       the DOSMap command had a couple of *8 multipliers which
       thus wrongly indexed dos extent info in printout.
Admin:
       long file name dosfs beta tested in the field .. appears fit
       for purpose.. Also tested at castle
       castle added IP


Version 0.83. Tagged as 'DOSFS-0_83'
@
text
@d1 1
a1 1
/* (0.83)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.83
d9 1
a9 1
#define Module_Date_CMHG                29 Oct 2004
d11 2
a12 2
#define Module_MajorVersion             "0.83"
#define Module_Version                  83
d14 1
a14 1
#define Module_Date                     "29 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "29-Oct-04"
d21 3
a23 3
#define Module_FullVersion              "0.83"
#define Module_HelpVersion              "0.83 (29 Oct 2004)"
#define Module_LibraryVersionInfo       "0:83"
@


4.20
log
@    ensure short dosfs name cannot contain a space

Detail:
    bug fix reported from beta release of 0.81.
Admin:
    castle testes.. castle IP


Version 0.82. Tagged as 'DOSFS-0_82'
@
text
@d1 1
a1 1
/* (0.82)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.82
d9 1
a9 1
#define Module_Date_CMHG                25 Oct 2004
d11 2
a12 2
#define Module_MajorVersion             "0.82"
#define Module_Version                  82
d14 1
a14 1
#define Module_Date                     "25 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "25-Oct-04"
d21 3
a23 3
#define Module_FullVersion              "0.82"
#define Module_HelpVersion              "0.82 (25 Oct 2004)"
#define Module_LibraryVersionInfo       "0:82"
@


4.19
log
@   more bug fixes..
Detail:
   1: loading dir could occasionally blank the first dir entry.. lfn ptr
      blanking went too far
   2: long names and short names could get out of sync if the short
      name was changed on a non long name dosfs
Admin:
   castle tested
   castle added ip


Version 0.81. Tagged as 'DOSFS-0_81'
@
text
@d1 1
a1 1
/* (0.81)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.81
d9 1
a9 1
#define Module_Date_CMHG                08 Oct 2004
d11 2
a12 2
#define Module_MajorVersion             "0.81"
#define Module_Version                  81
d14 1
a14 1
#define Module_Date                     "08 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "08-Oct-04"
d21 3
a23 3
#define Module_FullVersion              "0.81"
#define Module_HelpVersion              "0.81 (08 Oct 2004)"
#define Module_LibraryVersionInfo       "0:81"
@


4.18
log
@   bugfix: first entry of a directory was occasionally overwritten
Detail:
   ensure long file name pointer nulling stopped in time
Admin:
   Tested at castle
   Castel IP


Version 0.80. Tagged as 'DOSFS-0_80'
@
text
@d1 1
a1 1
/* (0.80)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.80
d9 1
a9 1
#define Module_Date_CMHG                07 Oct 2004
d11 2
a12 2
#define Module_MajorVersion             "0.80"
#define Module_Version                  80
d14 1
a14 1
#define Module_Date                     "07 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-04"
d21 3
a23 3
#define Module_FullVersion              "0.80"
#define Module_HelpVersion              "0.80 (07 Oct 2004)"
#define Module_LibraryVersionInfo       "0:80"
@


4.17
log
@   Update of DOSFS to handle Long File Names and FAT32 (up to 2GB)
Detail:
   Extend DOSFS to correctly recognise FAT32 DOS images and to
   use the Long File Name extensions. NOTE that there is still
   a 2gb size limit imposed by the max filecore image file
   size limitiations. NOTE also that as yet there is no support for
   UTF encoding of file names.
Admin:
   Tested at castle and with beta testers.
   Modifications are castle and castle assigned IP (from CJB)


Version 0.79. Tagged as 'DOSFS-0_79'
@
text
@d1 1
a1 1
/* (0.79)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.79
d9 1
a9 1
#define Module_Date_CMHG                30 Sep 2004
d11 2
a12 2
#define Module_MajorVersion             "0.79"
#define Module_Version                  79
d14 1
a14 1
#define Module_Date                     "30 Sep 2004"
d16 1
a16 1
#define Module_ApplicationDate          "30-Sep-04"
d21 3
a23 3
#define Module_FullVersion              "0.79"
#define Module_HelpVersion              "0.79 (30 Sep 2004)"
#define Module_LibraryVersionInfo       "0:79"
@


4.16
log
@When a disc has no title but does have the extended boot sig and the
volumeid is non zero then the disc title will be set to %04X-%04X of
the volumeid instead of "Untitled" which should cut down on ambiguous
disc names a bit.

Version 0.78. Tagged as 'DOSFS-0_78'
@
text
@d1 1
a1 1
/* (0.78)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.78
d9 1
a9 1
#define Module_Date_CMHG                25 Jul 2003
d11 2
a12 2
#define Module_MajorVersion             "0.78"
#define Module_Version                  78
d14 1
a14 1
#define Module_Date                     "25 Jul 2003"
d16 1
a16 1
#define Module_ApplicationDate          "25-Jul-03"
d21 3
a23 3
#define Module_FullVersion              "0.78"
#define Module_HelpVersion              "0.78 (25 Jul 2003)"
#define Module_LibraryVersionInfo       "0:78"
@


4.15
log
@Change to the policy of loading the FAT inside Service_Identify disc.
Now,for fixed discs,we read uncached as much as possible into as big a
lump of RMA as possible.
Reduced mounting a 128M flash keyring from 21s to 1.5s!

Version 0.77. Tagged as 'DOSFS-0_77'
@
text
@d1 1
a1 1
/* (0.77)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.77
d9 1
a9 1
#define Module_Date_CMHG                26 Jun 2003
d11 2
a12 2
#define Module_MajorVersion             "0.77"
#define Module_Version                  77
d14 1
a14 1
#define Module_Date                     "26 Jun 2003"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jun-03"
d21 3
a23 3
#define Module_FullVersion              "0.77"
#define Module_HelpVersion              "0.77 (26 Jun 2003)"
#define Module_LibraryVersionInfo       "0:77"
@


4.14
log
@For non floppies passed to Service_IdentifyDisc the disc record is
updated to the correct number of sectors per track.This was causing
exceptionally slow backups from the filer as it dribbled one sector
at a time.

Version 0.76. Tagged as 'DOSFS-0_76'
@
text
@d1 1
a1 1
/* (0.76)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.76
d9 1
a9 1
#define Module_Date_CMHG                13 Jun 2003
d11 2
a12 2
#define Module_MajorVersion             "0.76"
#define Module_Version                  76
d14 1
a14 1
#define Module_Date                     "13 Jun 2003"
d16 1
a16 1
#define Module_ApplicationDate          "13-Jun-03"
d21 3
a23 3
#define Module_FullVersion              "0.76"
#define Module_HelpVersion              "0.76 (13 Jun 2003)"
#define Module_LibraryVersionInfo       "0:76"
@


4.13
log
@Fix to cycle ID calculation inside Service_IdentifyDisc,this was
causing lots of "Ambiguous disc name"s

Version 0.75. Tagged as 'DOSFS-0_75'
@
text
@d1 1
a1 1
/* (0.75)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.75
d9 1
a9 1
#define Module_Date_CMHG                06 Jun 2003
d11 2
a12 2
#define Module_MajorVersion             "0.75"
#define Module_Version                  75
d14 1
a14 1
#define Module_Date                     "06 Jun 2003"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jun-03"
d21 3
a23 3
#define Module_FullVersion              "0.75"
#define Module_HelpVersion              "0.75 (06 Jun 2003)"
#define Module_LibraryVersionInfo       "0:75"
@


4.12
log
@Rewrote Service_IdentifyDisc partly because it was an unreadable mess but
mainly so it can handle fixed discs too - this will be useful for DOS
format USB mass storage.
Also it will have a go at interpreting the partition table on fixed discs.
Tweak to filetyping logic (again!).

Version 0.74. Tagged as 'DOSFS-0_74'
@
text
@d1 1
a1 1
/* (0.74)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.74
d9 1
a9 1
#define Module_Date_CMHG                23 May 2003
d11 2
a12 2
#define Module_MajorVersion             "0.74"
#define Module_Version                  74
d14 1
a14 1
#define Module_Date                     "23 May 2003"
d16 1
a16 1
#define Module_ApplicationDate          "23-May-03"
d21 3
a23 3
#define Module_FullVersion              "0.74"
#define Module_HelpVersion              "0.74 (23 May 2003)"
#define Module_LibraryVersionInfo       "0:74"
@


4.11
log
@Assumption that TRUE was -1 in the filetype lookup removed,this was
causing filetype 0 to be overriden to FE4.
Module date string now got from VersionNum file so I don't have to keep
remembering to stamp the CMHG file.

Version 0.73. Tagged as 'DOSFS-0_73'
@
text
@d1 1
a1 1
/* (0.73)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.73
d9 1
a9 1
#define Module_Date_CMHG                06 Mar 2003
d11 2
a12 2
#define Module_MajorVersion             "0.73"
#define Module_Version                  73
d14 1
a14 1
#define Module_Date                     "06 Mar 2003"
d16 1
a16 1
#define Module_ApplicationDate          "06-Mar-03"
d21 3
a23 3
#define Module_FullVersion              "0.73"
#define Module_HelpVersion              "0.73 (06 Mar 2003)"
#define Module_LibraryVersionInfo       "0:73"
@


4.10
log
@Looks like Win2k is zeroing the reserved fields where the RISC OS filetype
is stored leading to directory viewers full of type &000 files.
To combat this the ROS filetype is only used when the creation date is
zero (as DOSFS always clears this when writing a file).
Also,when a settype is performed DOSFS will zero it (this isn't a problem
for DOSFS 0.6x because you could never have a filetype of zero anyway!)

Version 0.72. Tagged as 'DOSFS-0_72'
@
text
@d1 1
a1 1
/* (0.72)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.72
d9 1
a9 1
#define Module_Date_CMHG                31 Jan 2003
d11 2
a12 2
#define Module_MajorVersion             "0.72"
#define Module_Version                  72
d14 1
a14 1
#define Module_Date                     "31 Jan 2003"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jan-03"
d21 3
a23 3
#define Module_FullVersion              "0.72"
#define Module_HelpVersion              "0.72 (31 Jan 2003)"
#define Module_LibraryVersionInfo       "0:72"
@


4.9
log
@Made sure on return from global_error the V bit gets set,fixes bug in
finding the free space on a floppy (since freespace64 is tried first but
which led to the pointer to the error message being returned as the
freespace rather than the caller trying again another way).
Correction to missing \ in the makefile,meant you could only compile
it once having checked it out.
Fixed a pointer in the DiscOp64 support added,this caused DOSFS to go
pop when you asked it to vet a format.

Version 0.71. Tagged as 'DOSFS-0_71'
@
text
@d1 1
a1 1
/* (0.71)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.71
d9 1
a9 1
#define Module_Date_CMHG                10 Dec 2002
d11 2
a12 2
#define Module_MajorVersion             "0.71"
#define Module_Version                  71
d14 1
a14 1
#define Module_Date                     "10 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "10-Dec-02"
d21 3
a23 3
#define Module_FullVersion              "0.71"
#define Module_HelpVersion              "0.71 (10 Dec 2002)"
#define Module_LibraryVersionInfo       "0:71"
@


4.8
log
@Missed an ORRNES while 32 bitting,corrected.
Unused MSDOStoSTRING #if'd out to save a massive 112 bytes!
Corrected tracef1 in map_file_rostype which was printing out the
debugging before the variable got assigned.
Conditionally uses FileCore_DiscOp64 now,if available when the module
starts.
Eliminated some local 64 bit time handling code in favour of using that
already in the compiler (thanks to Kevin).
Now requires a compile time switch PCMCIA=<TRUE | FALSE> which leaves in
or takes out the PCMCIA card support.

Version 0.70. Tagged as 'DOSFS-0_70'
@
text
@d1 1
a1 1
/* (0.70)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.70
d9 1
a9 1
#define Module_Date_CMHG                08 Nov 2002
d11 2
a12 2
#define Module_MajorVersion             "0.70"
#define Module_Version                  70
d14 1
a14 1
#define Module_Date                     "08 Nov 2002"
d16 1
a16 1
#define Module_ApplicationDate          "08-Nov-02"
d21 3
a23 3
#define Module_FullVersion              "0.70"
#define Module_HelpVersion              "0.70 (08 Nov 2002)"
#define Module_LibraryVersionInfo       "0:70"
@


4.7
log
@Deleted some dead variables and switches.
Eliminated MOVS and R14 fiddling to achieve 32 bit compatibility
RISCOS Ltd made 3 changes in their sources
 - ensure disc titles don't contain rogue characters (added)
 - files with time,date,and reserved fields of zero appears as DEADDEAD
   which is silly since Winodws uses this to mark a file unstamped which
   isn't quite the same thing! (not added)
 - syslog debugging support (not added)

Version 0.69. Tagged as 'DOSFS-0_69'
@
text
@d1 1
a1 1
/* (0.69)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.69
d9 1
a9 1
#define Module_Date_CMHG                22 Sep 2002
d11 2
a12 2
#define Module_MajorVersion             "0.69"
#define Module_Version                  69
d14 1
a14 1
#define Module_Date                     "22 Sep 2002"
d16 1
a16 2
#define Module_ApplicationDate2         "22-Sep-02"
#define Module_ApplicationDate4         "22-Sep-2002"
d21 3
a23 3
#define Module_FullVersion              "0.69"
#define Module_HelpVersion              "0.69 (22 Sep 2002)"
#define Module_LibraryVersionInfo       "0:69"
@


4.6
log
@Jump instruction in the boot sector of Atari discs now correct.
Dates on machines not running Win95FS no longer stuck at 1900 (got
broken in 0.67 by a missing && somewhere).

Version 0.68. Tagged as 'DOSFS-0_68'
@
text
@d1 1
a1 1
/* (0.68)
d4 1
a4 1
 * Last processed by srccommit version: 1.63.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.68
d9 1
a9 1
#define Module_Date_CMHG                03 May 2002
d11 2
a12 2
#define Module_MajorVersion             "0.68"
#define Module_Version                  68
d14 1
a14 1
#define Module_Date                     "03 May 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "03-May-02"
#define Module_ApplicationDate4         "03-May-2002"
d22 3
a24 3
#define Module_FullVersion              "0.68"
#define Module_HelpVersion              "0.68 (03 May 2002)"
#define Module_LibraryVersionInfo       "0:68"
@


4.5
log
@Unstamped files (marked by DOS with a time and date of 0x0000) will now
return 01-Jan-1900 rather than very late at night on 31-Dec-1979.
Can now set the RISC OS type to 0x000 (previously this would then have been
stamped as 0xFE4 since 0x000 was used as a magic 'no filetype found' marker.
Will now try to use MimeMap if no 'dosmap'ping was found,in this way dosmap
overrides MimeMap for DOSFS - if neither offer a match,0xFE4 is used.
Updated messages to reflect this.
Discs formatted under DOSFS will now set the OEM vendor id to "DOSFS   ".

Version 0.67. Tagged as 'DOSFS-0_67'
@
text
@d1 1
a1 1
/* (0.67)
d4 1
a4 1
 * Last processed by srccommit version: 1.62.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.67
d9 1
a9 1
#define Module_Date_CMHG                15 Mar 2002
d11 2
a12 2
#define Module_MajorVersion             "0.67"
#define Module_Version                  67
d14 1
a14 1
#define Module_Date                     "15 Mar 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "15-Mar-02"
#define Module_ApplicationDate4         "15-Mar-2002"
d22 3
a24 3
#define Module_FullVersion              "0.67"
#define Module_HelpVersion              "0.67 (15 Mar 2002)"
#define Module_LibraryVersionInfo       "0:67"
@


4.4
log
@Will now recognise the disc title of discs containing Win95 long filenames.
Formatting now pads disc titles with spaces rather than NULs.

Version 0.66. Tagged as 'DOSFS-0_66'
@
text
@d1 1
a1 1
/* (0.66)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.66
d9 1
a9 1
#define Module_Date_CMHG                16 Aug 2001
d11 2
a12 2
#define Module_MajorVersion             "0.66"
#define Module_Version                  66
d14 1
a14 1
#define Module_Date                     "16 Aug 2001"
d16 2
a17 2
#define Module_ApplicationDate2         "16-Aug-01"
#define Module_ApplicationDate4         "16-Aug-2001"
d22 3
a24 2
#define Module_FullVersion              "0.66"
#define Module_HelpVersion              "0.66 (16 Aug 2001)"
@


4.3
log
@Fixed to build RAM version correctly without the "Cannot be RAM loaded" check.
Modified "Cannot be RAM loaded" check to work correctly with recent versions
of CMHG - was branching through zero.

Version 0.65. Tagged as 'DOSFS-0_65'
@
text
@d1 1
a1 1
/* (0.65)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.65
d8 1
a8 1
#define Module_Date_CMHG                08 Aug 2001
d10 2
a11 2
#define Module_MajorVersion             "0.65"
#define Module_Version                  65
d13 1
a13 1
#define Module_Date                     "08 Aug 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "08-Aug-01"
#define Module_ApplicationDate4         "08-Aug-2001"
d21 2
a22 2
#define Module_FullVersion              "0.65"
#define Module_HelpVersion              "0.65 (08 Aug 2001)"
@


4.2
log
@Changed to use srccommit.
Updated for Link 5.07 and CMHG 5.16. Fixed to not overwrite command tail.
Changed to use LocalRes$Path.
German resources imported.

Version 0.64. Tagged as 'DOSFS-0_64'
@
text
@d1 1
a1 1
/* (0.64)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	0.64
#define Module_MinorVersion_CMHG	
#define Module_Date_CMHG      		25 Nov 1998
d10 4
a13 4
#define Module_MajorVersion     	"0.64"
#define Module_Version                  64
#define Module_MinorVersion		""
#define Module_Date      		"25 Nov 1998"
d15 8
@


4.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.63)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.63
d10 2
a11 2
#define Module_MajorVersion     	"0.63"
#define Module_Version                  63
@
