head	4.21;
access;
symbols
	DOSFS-1_14:4.21
	DOSFS-1_13:4.21
	DOSFS-1_12:4.21
	DOSFS-1_11:4.20
	DOSFS-1_10:4.19
	DOSFS-1_09:4.19
	DOSFS-1_08:4.19
	DOSFS-1_07:4.19
	DOSFS-1_06:4.18
	DOSFS-1_05:4.18
	DOSFS-1_04:4.18
	DOSFS-1_03:4.18
	DOSFS-1_02:4.18
	DOSFS-1_01:4.18
	DOSFS-1_00:4.18
	DOSFS-0_99:4.17
	DOSFS-0_98:4.16
	DOSFS-0_97:4.15
	DOSFS-0_96:4.14
	DOSFS-0_95:4.13
	DOSFS-0_94:4.13
	DOSFS-0_93:4.13
	DOSFS-0_92:4.13
	DOSFS-0_91:4.13
	DOSFS-0_90:4.13
	DOSFS-0_89:4.13
	DOSFS-0_88:4.13
	DOSFS-0_87:4.13
	DOSFS-0_86:4.13
	DOSFS-0_85:4.13
	DOSFS-0_84:4.10
	DOSFS-0_83:4.10
	DOSFS-0_82:4.10
	DOSFS-0_81:4.10
	DOSFS-0_80:4.10
	DOSFS-0_79:4.10
	RO_5_07:4.9
	DOSFS-0_78:4.9
	DOSFS-0_77:4.9
	DOSFS-0_76:4.9
	DOSFS-0_75:4.8
	DOSFS-0_74:4.8
	DOSFS-0_73:4.7
	DOSFS-0_72:4.7
	DOSFS-0_71:4.6
	DOSFS-0_70:4.5
	DOSFS-0_69:4.4
	DOSFS-0_68:4.4
	DOSFS-0_67:4.4
	DOSFS-0_66:4.4
	DOSFS-0_65:4.4
	dellis_autobuild_BaseSW:4.3
	sbrodie_sedwards_16Mar2000:4.3
	dcotton_autobuild_BaseSW:4.4
	DOSFS-0_64:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2.2.1
	Ursula_RiscPC:4.2.2.1.0.2
	nicke_DOSFS_0_63:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2.2.1
	UrsulaBuild_FinalSoftload:4.2.2.1
	rthornb_UrsulaBuild-12Aug1998:4.2.2.1
	aglover_UrsulaBuild-05Aug1998:4.2.2.1
	rthornb_UrsulaBuild-29Jul1998:4.2.2.1
	rthornb_UrsulaBuild-22Jul1998:4.2.2.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.2.2.1
	rthornb_UrsulaBuild-07Jul1998:4.2.2.1
	rthornb_UrsulaBuild-17Jun1998:4.2.2.1
	rthornb_UrsulaBuild-03Jun1998:4.2.2.1
	rthornb_UrsulaBuild-27May1998:4.2.2.1
	rthornb_UrsulaBuild-21May1998:4.2.2.1
	rthornb_UrsulaBuild_01May1998:4.2.2.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.21
date	2018.02.19.00.05.56;	author jlee;	state Exp;
branches;
next	4.20;
commitid	ic65jLota7NRUorA;

4.20
date	2017.12.17.09.29.15;	author rsprowson;	state Exp;
branches;
next	4.19;
commitid	38CSk47LemUE5ejA;

4.19
date	2014.06.25.20.13.32;	author rsprowson;	state Exp;
branches;
next	4.18;
commitid	E7yWETwfWvNEvWFx;

4.18
date	2013.01.13.18.54.59;	author rsprowson;	state Exp;
branches;
next	4.17;
commitid	3lYJMhP8ONWX25Aw;

4.17
date	2013.01.13.18.52.31;	author rsprowson;	state Exp;
branches;
next	4.16;
commitid	oq0uLRDtA5Y625Aw;

4.16
date	2013.01.13.18.49.40;	author rsprowson;	state Exp;
branches;
next	4.15;
commitid	fjzSOoRRnhA815Aw;

4.15
date	2012.12.07.14.25.56;	author rsprowson;	state Exp;
branches;
next	4.14;
commitid	vz81mkusjqgpKivw;

4.14
date	2012.12.07.14.20.11;	author rsprowson;	state Exp;
branches;
next	4.13;
commitid	jnwtWy3St1iqIivw;

4.13
date	2007.10.19.20.20.13;	author srevill;	state Exp;
branches;
next	4.12;

4.12
date	2007.10.19.14.47.37;	author srevill;	state Exp;
branches;
next	4.11;

4.11
date	2004.11.09.18.03.10;	author bavison;	state Exp;
branches;
next	4.10;

4.10
date	2004.09.30.21.59.04;	author jballance;	state Exp;
branches;
next	4.9;

4.9
date	2003.06.13.17.25.28;	author rsprowson;	state Exp;
branches;
next	4.8;

4.8
date	2003.05.23.17.21.15;	author rsprowson;	state Exp;
branches;
next	4.7;

4.7
date	2003.01.31.10.50.56;	author rsprowson;	state Exp;
branches;
next	4.6;

4.6
date	2002.12.10.21.01.37;	author rsprowson;	state Exp;
branches;
next	4.5;

4.5
date	2002.11.08.10.08.59;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2001.08.08.14.56.39;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.11.25.12.52.46;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.14.17.14.09;	author nturton;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.32.53;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	98.03.26.14.09.54;	author rthornb;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.32.53;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.52.51;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.37.15;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.33.46;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.21
log
@Reject overly-large discs, and other invalid things
Detail:
  c/Accessors, h/Accessors, Makefile - Added some simple 'image accessor' routines to abstract over accessing the underlying disc/image file. These accept 64bit disc addresses and will check to make sure any size limits imposed by the lower-level API are adhered to (512MB limit for FileCore_DiscOp, or extent of image file for OS_GBPB)
  h/MsgTrans, Resources/Germany/Messages, Resources/UK/Messages - Add a couple of new error messages
  h/Helpers - Add a couple of macros to simplify reading 16/32bit values that are split into multiple bytes in struct definitions. Change writeWORD & loadWORD to accept void* instead of char* so they can be used with other types like 'byte'
  h/DOSshape - Add '0' suffix to some struct members so they can be used with new READ_0123 macro
  h/ADFSshape - Make sure put_doublestep is safe to use with bools
  c/DOSdirs - Remove pointless malloc of small temporary array
  c/DOSclusters - Use new READ_ macros in max_sector()
  c/DOSFS - Use new READ_ macros so code is less painful to read. Use new image accessor system to get rid of some boilerplate for reading from the disc (+ extra error checks). Change 32bit values to 64bit where it looks like it's necessary, and use bools in place of a couple of 0/1 ints. Reject any discs which are too big for the 32bit fields in the ADFS disc record.
  c/OpsFunc - Update DOSFS_image_open in ways similar to the code in c/DOSFS, making use of READ_, image accessor, 64bit values, and adding extra error checks.
Admin:
  Tested with assorted large & small image files & SD cards on a BB-xM, and some DOS/Atari floppy discs on a RiscPC
  FAT partitions larger than 4GB (or which extend past the 4GB FileSwitch limit) are now rejected, as are image files which have been truncated
  A future improvement could be to lift the disc/partition identification code out of c/DOSFS and c/OpsFunc and unify it, since both files contain fairly similar code
  German messages are in need of translation


Version 1.12. Tagged as 'DOSFS-1_12'
@
text
@# Copyright 1996 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for DOSFS
#

COMPONENT    = DOSFS
OBJS         = DOSFS DOSFSctl DOSclusters DOSdirs DOSnaming Helpers MsgTrans \
               OpsArgs OpsFind OpsFunc OpsFile OpsGetPut \
               Statics TIMEconv StaticDefs Accessors
ROM_OBJS     = ${OBJS} init
ROMCDEFINES  = -DROM
RES_AREA     = dosfs_msgarea
CMHGDEFINES  = ${CDEFINES}
CMHGDEPENDS  = DOSFS MsgTrans
ASMHDRS      = DOSFS
HDRS         =
CINCLUDES    = -IC:
LIBS         = ${ASMUTILS}

include CModule

DBG_LIBS    += ${NET5LIBS}
CFLAGS      += -DNONFLOPPIES
CDFLAGS     += -DDEBUGLIB

# Dynamic dependencies:
@


4.20
log
@No longer offer PCMCIA SRAM card as a format option
Untangle the PCMCIATRUE misnomer - what it really meant was "offer PCMCIA card as an option for *Format AND allow non floppy geometries".
Nothing has shipped with PCCardFS since October 1994, so stop offering it as a possible *Format.
However, we do rely on the non floppy geometries for things like SD cards and USB sticks, so retain that with a new switch (permanently enabled) called NONFLOPPIES.

Tested with a Pi SD card and a 4GB USB stick.

Version 1.11. Tagged as 'DOSFS-1_11'
@
text
@d21 1
a21 1
               Statics TIMEconv StaticDefs
@


4.19
log
@Change last couple of uses of trace macros to use DebugLib
This town ain't big enough for the two of us.

Version 1.07. Tagged as 'DOSFS-1_07'
@
text
@d35 1
a35 2
ASFLAGS     += -pd "PCMCIATRUE SETL {${PCMCIA}}"
CFLAGS      += -DPCMCIA${PCMCIA}
@


4.18
log
@Allow RAM builds with messages in, fix for saving to images > 2G
RAM build include messages.
Removed atexit() handler, in favour of finalisation-code option in CMHG file.
Changed cluster rounding in saveFILE() to deal with extents > 2G.

Version 1.00. Tagged as 'DOSFS-1_00'
@
text
@d21 1
a21 1
               Statics TIMEconv debug StaticDefs
@


4.17
log
@Add some comments (!) and reindent FileSwitch interface
OpsGetPut
  DOSFS_put_bytes no longer passes an unnecessary dummy argument.
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFind
  Suggested buffer to FileSwitch is now 1x512 sector (rather than 256).
  Note - nothing seems to use the cluster buffering code in DOSFS,
indeed nothing ever malloc()s a buffer.
  Check at line 237 of OpFind would never be true since FILE_subdir is
not 1, fixed.
  Return an error if the handle to close is invalid.
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFile
  Reindented.
  Doxygen comments added to FileSwitch layer.
OpsFunc
  A failure to find a slot to set the disc title now reports "Dir full"
not "Disc full"
  Reindented.
  Doxygen comments added to FileSwitch layer.

Version 0.99. Tagged as 'DOSFS-0_99'
@
text
@d24 1
d37 1
a37 1
CDFLAGS     += -DPCMCIA${PCMCIA} -DDEBUGLIB
@


4.16
log
@Rationalise some defines
Many magic numbers changed to exported defines.
Eliminated unused "BOOTblock.h" (was just nesting 1 include file).
Moved non ASCII definitions out of "ASCII.h" then found the remainder weren't used => eliminated.

Version 0.98. Tagged as 'DOSFS-0_98'
@
text
@d29 1
a29 1
LIBS        += ${ASMUTILS}
d33 1
@


4.15
log
@Makefile recreated from fragments
Replaced 'lk' register name with 'lr', now APCS is not set to -none.
Inverted the sense of the conditional in CMHG file, following the more common ROM predefine use (eg. the Toolbox).
Removed obsolete NoFAT32 obey files - the switch remains but there's little point omitting that now (since the switch actually leaves most of the code in anyway).
Tested in IOMD ROM build (export, resources, ROM phases) mounting a DOS floppy and 1GB image file.

Version 0.97. Tagged as 'DOSFS-0_97'
@
text
@d25 1
a25 1
CMHGDEPENDS  = DOSFS
@


4.14
log
@Source file subdivision
The sources to DOSFS had become rather jumbled and monolithic
* Split FileSwitch interface out into seperate ops source files.
* Combined international error lookup with MsgTrans code.
* Split utility functions into 'Helpers.c' along with wildcard matching functions.
* Moved DOS naming functions into, erm, 'DOSnaming.c'.
Also
* Makefile tweaked to remove 'symbols' on clean.
* Obsolete 'Help' and 'Syntax' placed in attic.

RAM, debug, and ROM targets built. RAM target tested with a DOS floppy disc.

Version 0.96. Tagged as 'DOSFS-0_96'
@
text
@a16 8
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 25-May-94  AMcC         Created.
# 30-Aug-94  AMcC         Added rom_link rule
# 07-Nov-02  RPS          Ability to pass PCMCIA switch in
d18 18
a35 171
# For objasm 3.00 (comment out if using earlier assembler)
APCS_NONE = -apcs none

#
# Paths
#
EXP_HDR = <export$dir>

#
# Generic options:
#
MKDIR   = do mkdir -p
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link 
RM      = remove
WIPE    = x wipe

ifeq ($(FAT32_DISABLE),TRUE)
FAT_DISABLE = -DNO_FAT32
endif

AFLAGS  = -depend !Depend -Stamp -quit -predefine "PCMCIATRUE SETL {${PCMCIA}}"
CFLAGS  = -c -depend !Depend -ffah -zps1 -zM ${INCLUDES} ${DFLAGS} ${FAT_DISABLE} ${THROWBACK}
CPFLAGS = ~cfr~v
WFLAGS  = ~c~v

#
# Libraries
#
include ModuleLibs

CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
RSTUBS    = RISCOSLIB:o.rstubs
ROMSTUBS  = RISCOSLIB:o.romstubs
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.AbsSym

#
# Include files
#
INCLUDES = -IC:

DEBUG    ?= FALSE
# DFLAGS should be NULL for any non-debugging release
DFLAGS    = -dPCMCIA${PCMCIA} -dDEBUG${DEBUG} 
#DFLAGS    = -dPCMCIA${PCMCIA} -dTRACE -dTUBE=1  

#
# Program specific options:
#
COMPONENT = DOSFS
TARGET    = aof.DOSFS
EXPORTS   = ${EXP_HDR}.DOSFS

OBJS_COMMON =\
 o.DOSFS\
 o.DOSFSctl\
 o.DOSclusters\
 o.DOSdirs\
 o.DOSnaming\
 o.Helpers\
 o.MsgTrans\
 o.OpsArgs\
 o.OpsFind\
 o.OpsFunc\
 o.OpsFile\
 o.OpsGetPut\
 o.Statics\
 o.TIMEconv\
 o.debug\
 o.StaticDefs\

OBJS_RAM =\
 ${OBJS_COMMON}\
 o.DOSFShdrRAM

OBJS_ROM =\
 ${OBJS_COMMON}\
 o.init\
 o.DOSFShdr

#
# Rule patterns
#
.c.o:;      ${CC} ${CFLAGS} -o $@@ $<
.s.o:;      ${AS} ${AFLAGS} $< $@@
.cmhg.o:;   ${CMHG} -p -o $@@ $<
.cmhg.h:;   ${CMHG} -p -d $@@ $<

#
# build a relocatable module:
#
all: rm.DOSFS

debug: rm.DOSFSD

#
# RISC OS ROM build rules:
#
rom: ${TARGET}
        @@echo ${COMPONENT}: rom module built

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

install: rm.DOSFS
        ${MKDIR} ${INSTDIR}
        ${CP} rm.${COMPONENT} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: installed (disc)

install_rom: ${TARGET}
        ${MKDIR} ${INSTDIR}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: installed (rom)

clean:
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} rm.* ${WFLAGS}
        ${WIPE} linked.* ${WFLAGS}
        ${RM} symbols
        ${RM} ${TARGET}
        ${RM} h.DOSFShdr
        @@echo ${COMPONENT}: cleaned

resources:
        ${MKDIR} ${RESDIR}.${COMPONENT}
        TokenCheck LocalRes:Messages
        ${CP} LocalRes:Messages  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied

#
# ROM target (re-linked at ROM Image build time)
#
${TARGET}: ${OBJS_ROM} ${ROMCSTUBS}
        ${LD} -o $@@ -aof ${OBJS_ROM} ${ASMUTILS} ${ROMCSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${TARGET} ${ABSSYM}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete

rm.DOSFS: ${OBJS_RAM} ${CLIB}
        ${LD} -o $@@ -module ${OBJS_RAM} ${ASMUTILS} ${CLIB} 
        @@echo ${COMPONENT}: RAM module built

rm.DOSFSd: ${OBJS_RAM} ${CLIB}
        ${LD} -o $@@ -module -symbols symbols ${OBJS_RAM} ${DEBUGLIB} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB} ${NET5LIBS} ${ASMUTILS} ${CLIB}
        @@echo ${COMPONENT}: RAM debug module built

${EXP_HDR}.DOSFS: hdr.DOSFS
        ${CP} hdr.DOSFS $@@ ${CPFLAGS}

# Static dependencies:

o.DOSFShdrRAM: cmhg.DOSFShdr
        ${CMHG} -p -DRAM -o $@@ cmhg.DOSFShdr

# recreate h.DOSFShdr if necessary
o.DOSFS: h.DOSFShdr

# DOSFS C Support functions (defines C register definitions)
# Workaround required when using Objasm 3.00
o.DOSFSctl: s.DOSFSctl
        ${AS} ${AFLAGS} ${APCS_NONE} s.DOSFSctl $@@
@


4.13
log
@Missed a trick in the export phase. Now works.
@
text
@a85 1
 o.DOSFSops\
d87 2
d90 8
a97 1
 o.FSerrors\
a98 1
 o.wcompare\
a99 2
 o.MsgTrans\
 o.Statics\
a105 1

d149 1
d164 1
a164 1
        ${LD} -o $@@ -aof ${OBJS_ROM} ${ROMCSTUBS}
d175 1
a175 1
        ${LD} -o $@@ -module ${OBJS_RAM} ${CLIB}
d179 1
a179 1
        ${LD} -o $@@ -module -symbols symbols ${OBJS_RAM} ${DEBUGLIB} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB} ${NET5LIBS} ${CLIB}
@


4.12
log
@Fixed so that it builds and installs. No runtime checking.

Version 0.85. Tagged as 'DOSFS-0_85'
@
text
@d133 1
a133 1
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
@


4.11
log
@Throwback should be specified in the !Mk files, not hard-coded in the
Makefile.

Not tagged, since this is a trivial change.
@
text
@d37 1
a37 1
MKDIR   = cdir
d44 1
a44 1
WIPE    = -wipe
d131 5
d137 1
d139 1
a139 1
        @@echo ${COMPONENT}: rom module installed
@


4.10
log
@   Update of DOSFS to handle Long File Names and FAT32 (up to 2GB)
Detail:
   Extend DOSFS to correctly recognise FAT32 DOS images and to
   use the Long File Name extensions. NOTE that there is still
   a 2gb size limit imposed by the max filecore image file
   size limitiations. NOTE also that as yet there is no support for
   UTF encoding of file names.
Admin:
   Tested at castle and with beta testers.
   Modifications are castle and castle assigned IP (from CJB)


Version 0.79. Tagged as 'DOSFS-0_79'
@
text
@d51 1
a51 1
CFLAGS  = -c -depend !Depend -ffah -zps1 -zM ${INCLUDES} ${DFLAGS} ${FAT_DISABLE} -throwback
@


4.9
log
@For non floppies passed to Service_IdentifyDisc the disc record is
updated to the correct number of sectors per track.This was causing
exceptionally slow backups from the filer as it dribbled one sector
at a time.

Version 0.76. Tagged as 'DOSFS-0_76'
@
text
@d42 1
a42 1
LD      = link
d46 4
d51 1
a51 1
CFLAGS  = -c -depend !Depend -ffah -zps1 -zM ${INCLUDES} ${DFLAGS}
d58 2
d72 1
d74 2
a75 2
DFLAGS    = -dPCMCIA${PCMCIA}
#DFLAGS    = -dPCMCIA${PCMCIA} -dTRACE -dTUBE=1
d101 1
d120 2
d166 4
@


4.8
log
@Rewrote Service_IdentifyDisc partly because it was an unreadable mess but
mainly so it can handle fixed discs too - this will be useful for DOS
format USB mass storage.
Also it will have a go at interpreting the partition table on fixed discs.
Tweak to filetyping logic (again!).

Version 0.74. Tagged as 'DOSFS-0_74'
@
text
@d155 1
@


4.7
log
@Looks like Win2k is zeroing the reserved fields where the RISC OS filetype
is stored leading to directory viewers full of type &000 files.
To combat this the ROS filetype is only used when the creation date is
zero (as DOSFS always clears this when writing a file).
Also,when a settype is performed DOSFS will zero it (this isn't a problem
for DOSFS 0.6x because you could never have a filetype of zero anyway!)

Version 0.72. Tagged as 'DOSFS-0_72'
@
text
@d68 1
a68 1
#DFLAGS    = -dPCMCIA${PCMCIA} -dTRACE -dTUBE=0
@


4.6
log
@Made sure on return from global_error the V bit gets set,fixes bug in
finding the free space on a floppy (since freespace64 is tried first but
which led to the pointer to the error message being returned as the
freespace rather than the caller trying again another way).
Correction to missing \ in the makefile,meant you could only compile
it once having checked it out.
Fixed a pointer in the DiscOp64 support added,this caused DOSFS to go
pop when you asked it to vet a format.

Version 0.71. Tagged as 'DOSFS-0_71'
@
text
@d172 1
a172 1
# Dynamic dependencies:@


4.5
log
@Missed an ORRNES while 32 bitting,corrected.
Unused MSDOStoSTRING #if'd out to save a massive 112 bytes!
Corrected tracef1 in map_file_rostype which was printing out the
debugging before the variable got assigned.
Conditionally uses FileCore_DiscOp64 now,if available when the module
starts.
Eliminated some local 64 bit time handling code in favour of using that
already in the compiler (thanks to Kevin).
Now requires a compile time switch PCMCIA=<TRUE | FALSE> which leaves in
or takes out the PCMCIA card support.

Version 0.70. Tagged as 'DOSFS-0_70'
@
text
@d88 1
a88 1
 o.StaticDefs
d172 1
a172 1
# Dynamic dependencies:
@


4.4
log
@Fixed to build RAM version correctly without the "Cannot be RAM loaded" check.
Modified "Cannot be RAM loaded" check to work correctly with recent versions
of CMHG - was branching through zero.

Version 0.65. Tagged as 'DOSFS-0_65'
@
text
@d24 1
d46 1
a46 1
AFLAGS  = -depend !Depend -Stamp -quit
d67 2
a68 2
DFLAGS    =
#DFLAGS    = -dTRACE -dTUBE=0
@


4.3
log
@Changed to use srccommit.
Updated for Link 5.07 and CMHG 5.16. Fixed to not overwrite command tail.
Changed to use LocalRes$Path.
German resources imported.

Version 0.64. Tagged as 'DOSFS-0_64'
@
text
@d76 1
a76 1
OBJS =\
d87 8
a94 1
 o.StaticDefs\
d141 2
a142 2
${TARGET}: ${OBJS} ${ROMCSTUBS}
        ${LD} -o $@@ -aof ${OBJS} ${ROMCSTUBS}
d152 2
a153 2
rm.DOSFS: ${OBJS} ${CLIB}
        ${LD} -o $@@ -module ${OBJS} ${CLIB}
d159 3
@


4.2
log
@RiscOS 3.70 version taken
@
text
@d88 2
a89 1
 o.init
d96 2
a120 1
        ${WIPE} map.* ${WFLAGS}
d127 2
a128 1
        ${CP} Resources.${LOCALE}.Messages  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
d134 2
a135 3
${TARGET}: cmhg.DOSFShdr ${OBJS} ${ROMCSTUBS}
        ${CMHG} cmhg.DOSFShdr o.DOSFShdr
        ${LD} -o $@@ -aof o.DOSFShdr ${OBJS} ${ROMCSTUBS}
d141 1
a141 2
        ${LD} -o linked.${COMPONENT} -map -bin -base ${ADDRESS} ${TARGET} ${ABSSYM} > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
d145 2
a146 3
rm.DOSFS: cmhg.DOSFShdr ${OBJS} ${CLIB}
        ${CMHG} cmhg.DOSFShdr o.DOSFShdr
        ${LD} -o $@@ -module o.DOSFShdr ${OBJS} ${CLIB}
a154 3
h.DOSFShdr: cmhg.DOSFShdr
        ${CMHG} cmhg.DOSFShdr o.DOSFShdr h.DOSFShdr
        ${RM} o.DOSFShdr
a161 118
o.DOSFS:	c.DOSFS
o.DOSFS:	C:h.kernel
o.DOSFS:	C:h.swis
o.DOSFS:	C:h.ctype
o.DOSFS:	h.ASCII
o.DOSFS:	h.DOSFS
o.DOSFS:	h.DOSshape
o.DOSFS:	h.ASCII
o.DOSFS:	h.DOSFSctl
o.DOSFS:	h.debug
o.DOSFS:	h.DOSFShdr
o.DOSFS:	h.ADFSshape
o.DOSFS:	h.DOSshape
o.DOSFS:	h.FSerrors
o.DOSFS:	C:h.kernel
o.DOSFS:	h.DOSmapping
o.DOSFS:	h.DOSnaming
o.DOSFS:	h.DOSFSops
o.DOSFS:	h.MultiFS
o.DOSFS:	h.wcompare
o.DOSFS:	h.BOOTBLOCK
o.DOSFS:	h.DOSshape
o.DOSFS:	h.TIMEconv
o.DOSFS:	h.ASCII
o.DOSFS:	h.MsgTrans
o.DOSFS:	h.Statics
o.DOSFSops:	c.DOSFSops
o.DOSFSops:	C:h.kernel
o.DOSFSops:	C:h.swis
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.debug
o.DOSFSops:	h.DOSFS
o.DOSFSops:	h.DOSshape
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.DOSFSctl
o.DOSFSops:	h.DOSshape
o.DOSFSops:	h.FSerrors
o.DOSFSops:	C:h.kernel
o.DOSFSops:	h.wcompare
o.DOSFSops:	h.DOSnaming
o.DOSFSops:	h.DOSFSops
o.DOSFSops:	h.MultiFS
o.DOSFSops:	h.TIMEconv
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.DOSmapping
o.DOSFSops:	h.ADFSshape
o.DOSFSops:	h.Statics
o.DOSFSctl: s.DOSFSctl
o.DOSFSctl: "Hdr:listopts"
o.DOSFSctl: "Hdr:macros"
o.DOSFSctl: "Hdr:system"
o.DOSFSctl: Hdr:SWIs
o.DOSFSctl: Hdr:CPU.Generic26
o.DOSFSctl: Hdr:IO.GenericIO
o.DOSFSctl: Hdr:RISCOS
o.DOSFSctl: "Hdr:modhand"
o.DOSFSctl: "Hdr:wimp"
o.DOSFSctl: "Hdr:hostfs"
o.DOSFSctl: "Hdr:NdrDebug"
o.DOSFSctl: "Hdr:DDVMacros"
o.DOSFSctl: "s.MFSmacros"
o.DOSnaming:	c.DOSnaming
o.DOSnaming:	C:h.kernel
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.debug
o.DOSnaming:	h.ADFSshape
o.DOSnaming:	h.DOSshape
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.TIMEconv
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.DOSnaming
o.DOSnaming:	h.wcompare
o.DOSnaming:	h.FSerrors
o.DOSnaming:	C:h.kernel
o.DOSnaming:	h.DOSFS
o.DOSnaming:	h.DOSshape
o.FSerrors:	c.FSerrors
o.FSerrors:	C:h.kernel
o.FSerrors:	C:h.swis
o.FSerrors:	h.ASCII
o.FSerrors:	h.DOSFSctl
o.FSerrors:	h.debug
o.FSerrors:	h.FSerrors
o.FSerrors:	C:h.kernel
o.FSerrors:	h.MsgTrans
o.TIMEconv:	c.TIMEconv
o.TIMEconv:	C:h.kernel
o.TIMEconv:	C:h.swis
o.TIMEconv:	h.debug
o.TIMEconv:	h.TIMEconv
o.TIMEconv:	h.ASCII
o.TIMEconv:	h.FSerrors
o.TIMEconv:	C:h.kernel
o.TIMEconv:	h.DOSFSctl
o.TIMEconv:	h.DOSshape
o.TIMEconv:	h.ASCII
o.TIMEconv:	h.ADFSshape
o.wcompare:	c.wcompare
o.wcompare:	h.ASCII
o.wcompare:	h.wcompare
o.debug:	c.debug
o.debug:	C:h.kernel
o.debug:	C:h.swis
o.debug:	h.debug
o.MsgTrans:	c.MsgTrans
o.MsgTrans:	C:h.kernel
o.MsgTrans:	C:h.swis
o.MsgTrans:	h.MsgTrans
o.MsgTrans:	h.debug
o.Statics:	c.Statics
o.Statics:	h.DOSFS
o.Statics:	h.DOSshape
o.Statics:	h.ASCII
o.Statics:	h.DOSshape
o.Statics:	h.MultiFS
o.Statics:	h.Statics
o.StaticDefs: s.StaticDefs
o.init: s.init
@


4.2.2.1
log
@Removed dynamic dependancies from Makefiles and removed all reference to Prefix
@
text
@d165 118
@


4.1
log
@Initial revision
@
text
@a164 41
o.DOSFSctl: s.DOSFSctl
o.DOSFSctl: "Hdr:listopts"
o.DOSFSctl: "Hdr:macros"
o.DOSFSctl: "Hdr:system"
o.DOSFSctl: Hdr:SWIs
o.DOSFSctl: Hdr:CPU.Generic26
o.DOSFSctl: Hdr:IO.GenericIO
o.DOSFSctl: Hdr:RISCOS
o.DOSFSctl: "Hdr:modhand"
o.DOSFSctl: "Hdr:wimp"
o.DOSFSctl: "Hdr:hostfs"
o.DOSFSctl: "Hdr:NdrDebug"
o.DOSFSctl: "Hdr:DDVMacros"
o.DOSFSctl: "s.MFSmacros"
o.DOSnaming:	c.DOSnaming
o.DOSnaming:	C:h.kernel
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.debug
o.DOSnaming:	h.ADFSshape
o.DOSnaming:	h.DOSshape
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.TIMEconv
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.DOSnaming
o.DOSnaming:	h.wcompare
o.DOSnaming:	h.FSerrors
o.DOSnaming:	C:h.kernel
o.DOSnaming:	h.DOSFS
o.DOSnaming:	h.DOSshape
o.wcompare:	c.wcompare
o.wcompare:	h.ASCII
o.wcompare:	h.wcompare
o.Statics:	c.Statics
o.Statics:	h.DOSFS
o.Statics:	h.DOSshape
o.Statics:	h.ASCII
o.Statics:	h.DOSshape
o.Statics:	h.MultiFS
o.Statics:	h.Statics
o.StaticDefs: s.StaticDefs
o.init: s.init
d212 29
d262 3
d274 9
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a164 21
o.DOSFSops:	c.DOSFSops
o.DOSFSops:	C:h.kernel
o.DOSFSops:	C:h.swis
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.debug
o.DOSFSops:	h.DOSFS
o.DOSFSops:	h.DOSshape
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.DOSFSctl
o.DOSFSops:	h.DOSshape
o.DOSFSops:	h.FSerrors
o.DOSFSops:	C:h.kernel
o.DOSFSops:	h.wcompare
o.DOSFSops:	h.DOSnaming
o.DOSFSops:	h.DOSFSops
o.DOSFSops:	h.MultiFS
o.DOSFSops:	h.TIMEconv
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.DOSmapping
o.DOSFSops:	h.ADFSshape
o.DOSFSops:	h.Statics
a193 21
o.FSerrors:	c.FSerrors
o.FSerrors:	C:h.kernel
o.FSerrors:	C:h.swis
o.FSerrors:	h.ASCII
o.FSerrors:	h.DOSFSctl
o.FSerrors:	h.debug
o.FSerrors:	h.FSerrors
o.FSerrors:	C:h.kernel
o.FSerrors:	h.MsgTrans
o.TIMEconv:	c.TIMEconv
o.TIMEconv:	C:h.kernel
o.TIMEconv:	C:h.swis
o.TIMEconv:	h.debug
o.TIMEconv:	h.TIMEconv
o.TIMEconv:	h.ASCII
o.TIMEconv:	h.FSerrors
o.TIMEconv:	C:h.kernel
o.TIMEconv:	h.DOSFSctl
o.TIMEconv:	h.DOSshape
o.TIMEconv:	h.ASCII
o.TIMEconv:	h.ADFSshape
a196 9
o.debug:	c.debug
o.debug:	C:h.kernel
o.debug:	C:h.swis
o.debug:	h.debug
o.MsgTrans:	c.MsgTrans
o.MsgTrans:	C:h.kernel
o.MsgTrans:	C:h.swis
o.MsgTrans:	h.MsgTrans
o.MsgTrans:	h.debug
d232 51
@


4.1.5.1
log
@Import from SrcFiler
@
text
@a164 21
o.DOSFSops:	c.DOSFSops
o.DOSFSops:	C:h.kernel
o.DOSFSops:	C:h.swis
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.debug
o.DOSFSops:	h.DOSFS
o.DOSFSops:	h.DOSshape
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.DOSFSctl
o.DOSFSops:	h.DOSshape
o.DOSFSops:	h.FSerrors
o.DOSFSops:	C:h.kernel
o.DOSFSops:	h.wcompare
o.DOSFSops:	h.DOSnaming
o.DOSFSops:	h.DOSFSops
o.DOSFSops:	h.MultiFS
o.DOSFSops:	h.TIMEconv
o.DOSFSops:	h.ASCII
o.DOSFSops:	h.DOSmapping
o.DOSFSops:	h.ADFSshape
o.DOSFSops:	h.Statics
a193 21
o.FSerrors:	c.FSerrors
o.FSerrors:	C:h.kernel
o.FSerrors:	C:h.swis
o.FSerrors:	h.ASCII
o.FSerrors:	h.DOSFSctl
o.FSerrors:	h.debug
o.FSerrors:	h.FSerrors
o.FSerrors:	C:h.kernel
o.FSerrors:	h.MsgTrans
o.TIMEconv:	c.TIMEconv
o.TIMEconv:	C:h.kernel
o.TIMEconv:	C:h.swis
o.TIMEconv:	h.debug
o.TIMEconv:	h.TIMEconv
o.TIMEconv:	h.ASCII
o.TIMEconv:	h.FSerrors
o.TIMEconv:	C:h.kernel
o.TIMEconv:	h.DOSFSctl
o.TIMEconv:	h.DOSshape
o.TIMEconv:	h.ASCII
o.TIMEconv:	h.ADFSshape
a196 9
o.debug:	c.debug
o.debug:	C:h.kernel
o.debug:	C:h.swis
o.debug:	h.debug
o.MsgTrans:	c.MsgTrans
o.MsgTrans:	C:h.kernel
o.MsgTrans:	C:h.swis
o.MsgTrans:	h.MsgTrans
o.MsgTrans:	h.debug
d232 51
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@d165 41
a252 29
o.DOSFSctl: s.DOSFSctl
o.DOSFSctl: "Hdr:listopts"
o.DOSFSctl: "Hdr:macros"
o.DOSFSctl: "Hdr:system"
o.DOSFSctl: Hdr:SWIs
o.DOSFSctl: Hdr:CPU.Generic26
o.DOSFSctl: Hdr:IO.GenericIO
o.DOSFSctl: Hdr:RISCOS
o.DOSFSctl: "Hdr:modhand"
o.DOSFSctl: "Hdr:wimp"
o.DOSFSctl: "Hdr:hostfs"
o.DOSFSctl: "Hdr:NdrDebug"
o.DOSFSctl: "Hdr:DDVMacros"
o.DOSFSctl: "s.MFSmacros"
o.DOSnaming:	c.DOSnaming
o.DOSnaming:	C:h.kernel
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.debug
o.DOSnaming:	h.ADFSshape
o.DOSnaming:	h.DOSshape
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.TIMEconv
o.DOSnaming:	h.ASCII
o.DOSnaming:	h.DOSnaming
o.DOSnaming:	h.wcompare
o.DOSnaming:	h.FSerrors
o.DOSnaming:	C:h.kernel
o.DOSnaming:	h.DOSFS
o.DOSnaming:	h.DOSshape
a273 3
o.wcompare:	c.wcompare
o.wcompare:	h.ASCII
o.wcompare:	h.wcompare
a282 9
o.Statics:	c.Statics
o.Statics:	h.DOSFS
o.Statics:	h.DOSshape
o.Statics:	h.ASCII
o.Statics:	h.DOSshape
o.Statics:	h.MultiFS
o.Statics:	h.Statics
o.StaticDefs: s.StaticDefs
o.init: s.init
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
