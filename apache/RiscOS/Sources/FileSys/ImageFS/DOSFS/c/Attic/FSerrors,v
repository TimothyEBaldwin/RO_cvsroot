head	4.4;
access;
symbols
	DOSFS-0_95:4.3
	DOSFS-0_94:4.3
	DOSFS-0_93:4.3
	DOSFS-0_92:4.3
	DOSFS-0_91:4.3
	DOSFS-0_90:4.3
	DOSFS-0_89:4.3
	DOSFS-0_88:4.3
	DOSFS-0_87:4.3
	DOSFS-0_86:4.2
	DOSFS-0_85:4.2
	DOSFS-0_84:4.2
	DOSFS-0_83:4.2
	DOSFS-0_82:4.2
	DOSFS-0_81:4.2
	DOSFS-0_80:4.2
	DOSFS-0_79:4.2
	RO_5_07:4.2
	DOSFS-0_78:4.2
	DOSFS-0_77:4.2
	DOSFS-0_76:4.2
	DOSFS-0_75:4.2
	DOSFS-0_74:4.2
	DOSFS-0_73:4.1
	DOSFS-0_72:4.1
	DOSFS-0_71:4.1
	DOSFS-0_70:4.1
	DOSFS-0_69:4.1
	DOSFS-0_68:4.1
	DOSFS-0_67:4.1
	DOSFS-0_66:4.1
	DOSFS-0_65:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	DOSFS-0_64:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_DOSFS_0_63:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2012.12.07.14.20.16;	author rsprowson;	state dead;
branches;
next	4.3;
commitid	jnwtWy3St1iqIivw;

4.3
date	2009.06.11.21.01.27;	author bavison;	state Exp;
branches;
next	4.2;

4.2
date	2003.05.23.17.21.16;	author rsprowson;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.33.02;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.33.02;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.00.54.35;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.37.32;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.34.02;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Source file subdivision
The sources to DOSFS had become rather jumbled and monolithic
* Split FileSwitch interface out into seperate ops source files.
* Combined international error lookup with MsgTrans code.
* Split utility functions into 'Helpers.c' along with wildcard matching functions.
* Moved DOS naming functions into, erm, 'DOSnaming.c'.
Also
* Makefile tweaked to remove 'symbols' on clean.
* Obsolete 'Help' and 'Syntax' placed in attic.

RAM, debug, and ROM targets built. RAM target tested with a DOS floppy disc.

Version 0.96. Tagged as 'DOSFS-0_96'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*> c.FSerrors <*/
/*---------------------------------------------------------------------------*/
/* Error strings and handler functions            Copyright (c) 1989 JGSmith */
/*---------------------------------------------------------------------------*/

#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"

#include "ASCII.h"
#include "DOSFSctl.h"
#include "debug.h"
#include "FSerrors.h"
#include "MsgTrans.h"

/*-------------------------------------------------------------------------*/

_kernel_oserror *_syserr ;      /* global error pointer */

/*---------------------------------------------------------------------------*/

/* The following is used to construct MessageTrans tokens for errors. */
#define ERROR_FMT "ERR%2.2X"

_kernel_oserror  _gerror = {0} ; /* static error structure */
_kernel_oserror *_syserr ;       /* static pointer to the error structure */

/*---------------------------------------------------------------------------*/
/* global_error:
 * Return a RISC OS error block pointer for the given error number.
 */
_kernel_oserror *global_error(int number)
{
 /* return a pointer to the "_kernel_oserror" block for error "number" */
 char token[8];
 _kernel_oserror *err;
 char *buf = _gerror.errmess;
 int bufsz = 252;
 _gerror.errnum = ext_err(number) ;
 /* lookup Messages file for error text */
 sprintf(token, ERROR_FMT, number);
 if ((err = msgtrans_lookup(token, &buf, &bufsz, 0, 0, 0, 0)) != NULL)
  return err;
 tracef2("DOSFS: global_error: &%08X \"%s\"\n",_gerror.errnum,_gerror.errmess);
 return(_syserr) ;
}

/*---------------------------------------------------------------------------*/
/* global_errorP:
 * Return a RISC OS error block pointer for the given error number. The
 * passed parameter is placed into the error message.
 */

_kernel_oserror *global_errorP(int number,char *par1)
{
 /* return a pointer to the "_kernel_oserror" block for error "number" */
 char token[8];
 _kernel_oserror *err;
 char *buf = _gerror.errmess;
 int bufsz = 252;
 _gerror.errnum = ext_err(number) ;
 /* lookup Messages file for error text */
 sprintf(token, ERROR_FMT, number);
 if ((err = msgtrans_lookup(token, &buf, &bufsz, par1, 0, 0, 0)) != NULL)
  return err;
 tracef2("DOSFS: global_errorP: &%08X \"%s\"\n",_syserr->errnum,_syserr->errmess) ;
 return(_syserr) ;
}

/*---------------------------------------------------------------------------*/

void global_error0(int number)
{
 /* place error number and message into "_syserr" */
 global_error(number) ;
 return ;
}

/*---------------------------------------------------------------------------*/
#if 0 /* not used at the moment */
int exported_error_number(int number)
{
 return(ext_err(errlist[number].errnum)) ;
}
#endif
/*---------------------------------------------------------------------------*/

void global_error1(int number,char *par1)
{
 /* place error number and message into "_syserr" */
 global_errorP(number, par1);
 return ;
}

/*---------------------------------------------------------------------------*/

void global_errorX(_kernel_oserror *errptr)
{
 _gerror.errnum = errptr->errnum ;
 sprintf(&(_gerror.errmess[0]),errptr->errmess) ;
 return ;
}

/*---------------------------------------------------------------------------*/

_kernel_oserror *global_errorT(int number,char *token,char *par1,char *par2)
{
 _kernel_oserror *err;
 char *buf = _gerror.errmess;
 int bufsz = 252;
 _gerror.errnum = ext_err(number) ;
 /* lookup Messages file for error text */
 if ((err = msgtrans_lookup(token, &buf, &bufsz, par1, par2, 0, 0)) != NULL)
  return err;
 tracef2("DOSFS: global_errorT: &%08X \"%s\"\n",_syserr->errnum,_syserr->errmess) ;
 return(_syserr) ;
} 
/*> EOF c.FSerrors <*/
@


4.3
log
@  #include file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both Norcroft and GCC.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 0.86. Not tagged
@
text
@@


4.2
log
@Rewrote Service_IdentifyDisc partly because it was an unreadable mess but
mainly so it can handle fixed discs too - this will be useful for DOS
format USB mass storage.
Also it will have a go at interpreting the partition table on fixed discs.
Tweak to filetyping logic (again!).

Version 0.74. Tagged as 'DOSFS-0_74'
@
text
@d25 5
a29 5
#include "h.ASCII"
#include "h.DOSFSctl"
#include "h.debug"
#include "h.FSerrors"
#include "h.MsgTrans"
@


4.1
log
@Initial revision
@
text
@d29 1
a29 3
#if 1 /* SMC_FIX_RO_5593 */
  #include "h.MsgTrans"
#endif
a36 1
#if 1 /* SMC_FIX_RO_5593 */
a38 43
#else
static errentry errlist[] = {
         {0x00,NO, "Filing system operation not supported"},
         {0x01,YES,"File \"%s\" not found"},
         {0x02,YES,"Directory \"%s\" not found"},
         {0x03,YES,"Object \"%s\" not a file"},
         {0x04,YES,"File \"%s\" already open"},
         {0x05,NO, "C heap exhausted"},
         {0x06,NO, "Failed to load DOS FAT sectors"},
         {0x07,YES,"\"%s\" contains wild cards"},
         {0x08,YES,"Failed to save \"%s\""},
         {0x09,NO, "Name translation failed"},
         {0x0A,NO, "Image read failed"},
         {0x0B,NO, "Image write failed"},
         {0x0C,NO, "Cluster chain is not consistent"},
         {0x0D,NO, "Feature not yet implemented"},
         {0x0E,NO, "Disc full"},
         {0x0F,NO, "Transfer request is not sector multiple"},
         {0x10,NO, "DOS disc does NOT have 512byte sectors"},
         {0x11,NO, "DOS image not formatted"},
         {0x12,NO, "Winchester image does NOT contain a bootable partition"},
         {0x13,NO, "Winchester bootable partition is NOT MSDOS"},
         {0x14,NO, "Already exists"},
         {0x15,NO, "Types don't match"},
         {0x16,YES,"Failed to create directory \"%s\""},
         {0x17,YES,"Directory \"%s\" not empty"},
         {0x18,NO, "EOF"},
         {0x19,NO, "Directory full"},
         {0x1A,NO, "Failed to ensure file length"},
         {0x1B,NO, "DOS BOOT block contains invalid information"},
         {0x1C,NO, "Invalid MSDOS extension character given"},
         {0x1D,NO, "MSDOS extension given longer than 3 characters"},
         {0x1E,NO, "Image type not supported (invalid magic number)"},
         {0x1F,NO, "MS-DOS discs do not have boot options"},
         {0x20,NO, "Desired format cannot be supported"},
         {0x21,YES,"Invalid name \"%s\" (cannot translate to MS-DOS name)"},
         {0x22,NO ,"Invalid drive specifier"},
         {0x22,NO ,"Unknown keyboard read error"},
         {0x23,NO ,"CLUSTER in use"},

         {0x00,NO, "<end of error message list>"},
                            } ; /* errlist[] */
#endif
a49 1
#if 1 /* SMC_FIX_RO_5593 */
a53 1
#endif
a54 1
#if 1 /* SMC_FIX_RO_5593 */
a58 3
#else
 sprintf(&(_gerror.errmess[0]),errlist[number].errtext) ;
#endif
a71 1
#if 1 /* SMC_FIX_RO_5593 */
a75 1
#endif
a76 1
#if 1 /* SMC_FIX_RO_5593 */
a80 3
#else
 sprintf(&(_gerror.errmess[0]),errlist[number].errtext,par1) ;
#endif
a105 1
#if 1 /* SMC_FIX_RO_5593 */
a106 5
#else
 _gerror.errnum = ext_err(errlist[number].errnum) ;
 sprintf(&(_gerror.errmess[0]),errlist[number].errtext,par1) ;
 tracef2("DOSFS: global_error1: &%08X \"%s\"\n",_syserr->errnum,_syserr->errmess) ;
#endif
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
