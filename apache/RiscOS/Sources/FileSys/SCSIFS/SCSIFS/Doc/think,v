head	4.1;
access;
symbols
	SCSIFS-1_35:4.1
	SCSIFS-1_34:4.1
	SCSIFS-1_33:4.1
	SCSIFS-1_32:4.1
	SCSIFS-1_31:4.1
	SCSIFS-1_30:4.1
	SCSIFS-1_29:4.1
	SCSIFS-1_28:4.1
	SCSIFS-1_27:4.1
	SCSIFS-1_26:4.1
	SCSIFS-1_25:4.1
	SCSIFS-1_24:4.1
	SCSIFS-1_23:4.1
	SCSIFS-1_22:4.1
	SCSIFS-1_21:4.1
	SCSIFS-1_20:4.1
	SCSIFS-1_19:4.1
	SCSIFS-1_18:4.1
	SCSIFS-1_17:4.1
	SCSIFS-1_16:4.1
	SCSIFS-1_15:4.1
	SCSIFS-1_14:4.1
	SCSIFS-1_13:4.1
	SCSIFS-1_12:4.1
	RO_5_07:4.1
	SCSIFS-1_11:4.1
	dellis_autobuild_BaseSW:4.1
	SCSIFS-0_25:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_SCSIFS-0_25:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	RCA:4.1.0.2
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.34.08;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.34.08;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.04.35;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.41.59;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.38.17;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@
The current SCSIdriver/SCSIFS pair suffer from potential data/map corruption
problems in that any program may (by accident or on purpose) issue
Write/Format/ModeSelect commands to a device currently mounted by SCSIFS.

The problem is not just one of preventing use by other programs but of
providing a clean change of device ownership from one user to another, as
SCSIdm for example is entitled to modify your disc, (to map out defects/
format/partition it etc) but must only do so once SCSIFS has closed down all
open files and dismounted the disc.

I propose adding the following SWI call to SCSIdriver



SCSI_Reserve
============

'Claim' - Claim exclusive use of a device
-------

This call attempts to claim exclusive use of the given device.
If the call is successful, the caller will be granted sole use of the
'dangerous' SCSIdriver calls for that device and may use them itself, only
by supplying the access key registered at 'Claim' time. Other callers
may only use safe calls such as SCSI_Initialise-DetermineDevice.

If the device has already been claimed, an error message 'Device Reserved'
will be returned.

entry
  R0 0
  R1 device ID
  R2 release address
  R3 workspace pointer, to be passed in R12 when release address is called
  R8 access key

exit
  VC
  VS & R0->error



'ForceClaim'
------------

This call is similar to 'Claim' above, however, if the device is already
claimed, it will ask the current claimant to release it, by calling the
release address registered for that device.
The current owner should try to tidy up, and call 'Release' but may refuse
by returning VS and R0 pointing to an error message

Aside: This call will be used by SCSIdm to ask SCSIfs to close files and
       dismount etc

entry
  R0 1
  R1 device ID
  R2 release address
  R3 workspace pointer, to be passed in R12 when release address is called
  R8 access key

exit
  VC
  VS & R0->error



'Release'
---------
This call will remove the reservation of a device.

entry
  R0 2
  R1 device ID
  R8 access key  (to prove you actually claimed it)

exit
  VC
  VS -> error (probably just "you haven't claimed it")


Aside: This call is used by SCSIFS in response to *DISMOUNT/*BYE



Passing access key value to SCSI SWI's
======================================
The access key (probably WorkSpacePointer) should be passed in R8
and is only checked if the specified device is claimed and the call/reason
code is 'dangerous'.





Comments please


---Richard
          
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
