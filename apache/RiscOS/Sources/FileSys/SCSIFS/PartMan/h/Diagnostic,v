head	1.3;
access;
symbols
	PartMan-0_16:1.3
	PartMan-0_15:1.3
	PartMan-0_14:1.3
	PartMan-0_13:1.3
	PartMan-0_12:1.3
	PartMan-0_11:1.2
	PartMan-0_10:1.1.1.1
	PartMan-0_09:1.1.1.1
	start:1.1.1.1
	INITIAL:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.12.11.21.27.52;	author jballance;	state Exp;
branches;
next	1.2;
commitid	Gg0AAlw0femwZBxz;

1.2
date	2016.12.06.08.24.18;	author jballance;	state Exp;
branches;
next	1.1;
commitid	n7zTGodkOF8GOTwz;

1.1
date	2016.11.28.22.08.42;	author jballance;	state Exp;
branches
	1.1.1.1;
next	;
commitid	HKcQ8iJU5OQNCWvz;

1.1.1.1
date	2016.11.28.22.08.42;	author jballance;	state Exp;
branches;
next	;
commitid	HKcQ8iJU5OQNCWvz;


desc
@@


1.3
log
@  Further work to the filecore formatter routine
Detail:
  The formatter now produces a layout comparable to the !HForm one
  (The 16 bit zonecount was erroneously cast to 8bit)
Admin:
  produces a layout that passes DiscKnight validation. After copyint 15Gig
  of data in sone 250000 files the disc usage is comparable.

Version 0.12. Tagged as 'PartMan-0_12'
@
text
@/* Copyright 2016 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef DIAGNOSTIC_H
#define DIAGNOSTIC_H
//#define Debug 1
#ifndef Debug
#define Debug FALSE
#endif

void testfileinit (void);
void testsave (char * title, char * data, int size);
void testprint (char * data, ...);
void testprintGUID (char * ptr);

void reportfmt(FormatArray * fmt);
void reportAcornBootSec(disc_record* dr);





#endif
@


1.2
log
@   progress, bug fixes, and improved diagnostics
Detail:
  still needs optimisation of formatter element
Admin:


Version 0.11. Tagged as 'PartMan-0_11'
@
text
@d28 1
@


1.1
log
@Initial revision
@
text
@d17 2
a18 1
//#define Debug TRUE
d20 1
d24 1
a24 7
void testprint (char * data);
void testprint1 (char * data,  int a1);
void testprint2 (char * data,  int a1,int a2);
void testprint3 (char * data,  int a1,int a2,int a3);
void testprint4 (char * data,  int a1,int a2,int a3,int a4);
void testprint5 (char * data,  int a1,int a2,int a3,int a4,int a5);
void testprint6 (char * data,  int a1,int a2,int a3,int a4,int a5,int a6);
@


1.1.1.1
log
@  Initial import of PartMan module
Detail:
  This is early work. It can be used 'manually' to format up a disc using
  the GPT partition header system. Current working format is filecore, though
  with a non optimal format. Functional, but work in progress.
Admin:
@
text
@@
