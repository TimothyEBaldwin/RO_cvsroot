head	4.1;
access;
symbols
	PDModules-4_64:4.1
	PDModules-4_63:4.1
	PDModules-4_62:4.1
	PDModules-4_61:4.1
	PDModules-4_60:4.1
	PDModules-4_59:4.1
	PDModules-4_58:4.1
	PDModules-4_57:4.1
	PDModules-4_56:4.1
	PDModules-4_55:4.1
	PDModules-4_54:4.1
	PDModules-4_53:4.1
	PDModules-4_52:4.1
	PDModules-4_51:4.1
	PDModules-4_50:4.1
	PDModules-4_49:4.1
	PDModules-4_48:4.1
	PDModules-4_47:4.1
	PDModules-4_46:4.1
	kbracey_32bit_merge:4.1
	PDModules-4_45:4.1
	PDModules-4_44-4_1_2_7:4.1
	PDModules-4_44-4_1_2_6:4.1
	PDModules-4_44-4_1_2_5:4.1
	PDModules-4_44-4_1_2_4:4.1
	PDModules-4_44-4_1_2_3:4.1
	PDModules-4_44-4_1_2_2:4.1
	PDModules-4_44-4_1_2_1:4.1
	kbracey_32bit:4.1.0.4
	kbracey_32bit_bp:4.1
	dellis_autobuild_BaseSW:4.1
	Ursula_merge:4.1.7.1
	PDModules-4_44:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.1
	Ursula_RiscPC:4.1.7.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.7.1
	UrsulaBuild_FinalSoftload:4.1.7.1
	rthornb_UrsulaBuild-12Aug1998:4.1.7.1
	aglover_UrsulaBuild-05Aug1998:4.1.7.1
	rthornb_UrsulaBuild-29Jul1998:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.7.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1.7.1
	rthornb_UrsulaBuild-17Jun1998:4.1.7.1
	rthornb_UrsulaBuild-03Jun1998:4.1.7.1
	rthornb_UrsulaBuild-27May1998:4.1.7.1
	rthornb_UrsulaBuild-21May1998:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Ursula:4.1.7.1.0.4
	Ursula_bp:4.1.7.1
	Ursula_31Mar1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spin_merge_28May97:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.48.23;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.48.23;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.03.03;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.26.33;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.30.23;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@
SWI Documentation:
 PDriver_DeclareFont
 PDriver_DeclareDriver
 PDriver_RemoveDriver
 PDriver_SelectDriver
 PDriver_EnumerateDrivers
 PDriver_MiscOp
 PDriver_MiscOpForDriver
 PDriver_SetDriver

New structure of Printer drivers, ie. pdumpers, pdriver, pdriverXX
Notes on writing your own printer drivers
Driver numbers *upto date list*

PDumpers:
 What are they
 How do they work
 Writing them
 Limitations
 
Suggested practices, suggested interface.

--------------------------------------------

PDriverPS: need to think of a defined method for ISVs to add their own
procs.  Don't want them polluting PDdict, but we could reserve one entry
in PDDict (say ISVdict) for them to define and use.  Then need code to
ensure that it is on the dict stack whenever required:

PDDict begin ISVdict begin              % but with a check that ISVdict exists...

and need to ensure that "def" definitions go to the right place!!  One way would
be to ensure that stuff in PDDict never assumes the PDDict is on the top of the dict
stack.

Also need: a way for ISVs to augment the prologue on the fly

PDDict begin
   /ISVDict 1 dict def
end

PDDict begin ISVDict begin

end  /ISVDict 100 dict begin  ... definitions in ISVdict ...

end end

--------------------------------------------

PDriverPS: Remapping to fonts with funny encodings
==================================================

SAH: 3FEB93

At present any font that is mapped to a native printer font will get
re-encoded.  If the font does have an Encoding associated with it (either by
the based-on method or by having an Encoding file in it) then we currently
just default to Old Latin 1.  This causes problems when the font is
non-alphabetic (eg Dingbats).  We should perhaps assume that the font should
not be re-encoded in this case, and hope the glyph positions match up
adequately; alternatively, make use of the encoding information specified in
FontPrint.  The latter approach is much better because we know that Old
Latin 1 and Adobe Standard differ quite a lot.

Augment the information specified in the Encoding menu of FontPrint to include
an "As Is" option, which does forces MakePSFont to not re-encode:-

  Adobe.Standard -> use Old Latin 1
  Adobe.Special -> use Sidney encoding
  Adobe.Dingbats -> use Selwyn encoding.
  As Is -> do not re-encode; assume the printer encoding is same as ours.
           This is not perfect, but will probably be a lot more helpful
           than using Old Latin 1 if the font is a symbolic one!

Could be implemented by replacing the contents of the Adobe directory (not
used at present) by files containing OUR versions of the Adobe encodings;
for example, Adobe.Standard would contain Old Latin 1, Adobe.Special would
contain Sidney encoding.  The scheme is extensible; the FontPrint menu
is generated with reference to this directory.  It would be necessary
to carefully document what is going on so that people do not assume that
these files *are* the Adobe ones. MakePSFont would then need to be modified
to use these specified encoding file if it can't pick the "right" one
by the normal methods.

The "do not re-encode" option would need special support in FontPrint and
MakePSFont; should be quite easy to do.

--------------------------------------------

PDriverPS: Determining when to generate EPS
===========================================

SAH: 17FEB93

Traditionally all PDriver_SelectIllustration jobs are output as EPS under
the assumption that they need to be includable in other PS jobs. 
Unfortunately programs like Draw *always* use PDriver_SelectIllustration,
even though the user typically wants to send the result to the printer
straight away.

The problem is that illustration jobs don't have device setup code, because
this violates EPS structuring rules, so these jobs do not work properly when
printed standalone!  (As a workaround the current version of PageBox on the
SrcFiler (3.41) has the test commented out, so that *all* jobs get device
setup code, even if they are illustrations).

The situation is not satisfactory.  The assumption appears to have been that
all 1-page jobs can be done as EPS, but this is clearly wrong; in fact the
decision as to whether EPS should be produced should be made by the USER.
Ideally I'd like to add an option button to the PostScript printer
configuration window, saying "Produce EPS".  Only if this is set AND the job
is an illustration one, then the EPS header should be produced.  This avoids
making any changes to other apps, which can still call
PDriver_SelectIllustration for single-page jobs, and PDriver_SelectJob
otherwise.

(As a bodge-up, we could just alter the code so that
PDriver_SelectIllustration gets treated the same as PDriver_SelectJob unless
output is to a file.  But this would not help people who are just spooling
to a floppy to take to a remote printer. Doing this bodge would only add to
the confusion, so let's not do it.)

BCockburn 17-Feb-93

  As a follow-on to the comments above about an EPS button in the printer
configuration window perhaps with this interface the difference between
PDriver_SelectIllustration and PDriver_SelectJob could be removed!  If EPS
is not selected the job is output with job setup information and as many
pages as required, if EPS is selected then no job setup information is
included.  If more than one page starts to emerge and the job is going to
disc then create Printout.Page001, and Printout.Page002 etc. as separate
files each truly EPS conformant!
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
