head	4.4;
access;
symbols
	PDModules-4_64:4.4
	PDModules-4_63:4.4
	PDModules-4_62:4.4
	PDModules-4_61:4.4
	PDModules-4_60:4.4
	PDModules-4_59:4.4
	PDModules-4_58:4.4
	PDModules-4_57:4.4
	PDModules-4_56:4.4
	PDModules-4_55:4.4
	PDModules-4_54:4.4
	PDModules-4_53:4.4
	PDModules-4_52:4.4
	PDModules-4_51:4.4
	PDModules-4_50:4.4
	PDModules-4_49:4.4
	PDModules-4_48:4.4
	PDModules-4_47:4.4
	PDModules-4_46:4.3
	kbracey_32bit_merge:4.2.2.1
	PDModules-4_45:4.3
	PDModules-4_44-4_1_2_7:4.2.2.1
	PDModules-4_44-4_1_2_6:4.2.2.1
	PDModules-4_44-4_1_2_5:4.2.2.1
	PDModules-4_44-4_1_2_4:4.2.2.1
	PDModules-4_44-4_1_2_3:4.2.2.1
	PDModules-4_44-4_1_2_2:4.2.2.1
	PDModules-4_44-4_1_2_1:4.2.2.1
	kbracey_32bit:4.2.0.2
	kbracey_32bit_bp:4.2
	dellis_autobuild_BaseSW:4.2
	Ursula_merge:4.1.7.2
	PDModules-4_44:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.2
	Ursula_RiscPC:4.1.7.2.0.4
	rthornb_UrsulaBuild-19Aug1998:4.1.7.2
	UrsulaBuild_FinalSoftload:4.1.7.2
	rthornb_UrsulaBuild-12Aug1998:4.1.7.2
	aglover_UrsulaBuild-05Aug1998:4.1.7.2
	rthornb_UrsulaBuild-29Jul1998:4.1.7.2
	rthornb_UrsulaBuild-22Jul1998:4.1.7.2
	hsimons_BOCA-1_2-Release:4.1.7.2
	rthornb_UrsulaBuild-15Jul1998:4.1.7.2
	rthornb_UrsulaBuild-07Jul1998:4.1.7.2
	rthornb_UrsulaBuild-17Jun1998:4.1.7.2
	rthornb_UrsulaBuild-03Jun1998:4.1.7.2
	rthornb_UrsulaBuild-27May1998:4.1.7.2
	rthornb_UrsulaBuild-21May1998:4.1.7.2
	rthornb_UrsulaBuild_01May1998:4.1.7.2
	afrost_NC2_Generic:4.1.7.2
	afrost_Funai01-33:4.1.7.2
	Ursula:4.1.7.2.0.2
	Ursula_bp:4.1.7.2
	Ursula_31Mar1998:4.2
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spin_merge_28May97:4.1.7.2
	Spinner_B10:4.1.7.2
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2002.12.05.20.45.10;	author srevill;	state Exp;
branches;
next	4.3;

4.3
date	2001.01.09.13.59.43;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.05.16.12.55.53;	author kbracey;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.48.41;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	2000.10.18.11.32.02;	author sbrodie;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.48.41;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.05.40;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.27.53;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.31.32;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.05.14.09.37.00;	author jcoxhead;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Changed to use objasm to avoid any LDR rN,[rN],#0 problems
Changed to use shared Makefiles
Numerous small 32 bit conversion improvements
Bugfix to PDriverPS,it was pulling LR not PC - this has been the case for
many years so not sure how it ever worked.
Due to a bug in objasm 3.27 this checkin will infact not build directly.
You must first
 - rename the PDriverDP dir to PDriverDP2
 - rename the PDriverPS dir to PDriverPS2
 - move the 2 source files of the same name up a directory
checked in in this way to minimise messing in CVS.

Version 4.47. Tagged as 'PDModules-4_47'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.PDriverPS.Macros

                GET     hdr:DDVMacros
JPEG            SETD    {TRUE}
PageBox         SETD    {TRUE}
mjs             SETD    {TRUE}
misc		SETD	{TRUE}
svc		SETD	{TRUE}	;service calls

; Macro definitions for the PostScript printer driver

; Macros to output data to the printer

                GBLS    PrErrLabel
PrErrLabel      SETS    ""

; Macro to set a place to branch to on errors in the other macros. It must be
; used before any of the other macros are. Used without a parameter, it
; resets to the initial state of not being able to use the other macros.

        MACRO
        PrError $errlabel
        OPT     OptNoSets+OptNoControl+OptNoMends
PrErrLabel SETS "$errlabel"
        MEND

        MACRO
$label  PrPassError $fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       "$fallthrough" = ""
        [       PrErrLabel = ""
        !       8,"No error label set for PostScript output macros"
        |
        BVS     $PrErrLabel
        ]
        ]
        MEND

        MACRO
$label  PrChrIm $char,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        ASSERT  :LEN:"$char" = 1
$label  BL      output_immstring
        DCB     "$char",0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrChr   $reg,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        LCLA    tempa
        [       ("$reg":LEFT:1) = "#"
tempa   SETA    -1
        |
tempa   SETA    $reg
        ]
        [       tempa <> R0
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_character
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  BL      output_character
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrNewLn $fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrLnIm  "",$fallthrough
        MEND

        MACRO
$label  PrStrIm $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_immstring
        DCB     "$string",0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrLnIm  $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_immstring
        DCB     "$string",10,0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrStr   $base,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $base <> R0
$label  Push    "R0,R2,R3"
        MOV     R0,$base
        |
$label  Push    "R2,R3"
        ]
        MOV     R2,#$min
        MOV     R3,#($max)-($min)
        BL      output_string
        [       $base <> R0
        STRVS   R0,[R13]
        Pull    "R0,R2,R3"
        |
        Pull    "R2,R3"
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrLn    $base,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrStr   $base,$min,$max
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrGStIm $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_immgstring
        DCB     "$string",0
        ALIGN
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrGLnIm $string,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrGStIm $string
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrGSt   $reg,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_gstring
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  BL      output_gstring
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrGLn   $reg,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrGSt   $reg
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrStrN  $base,$len,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $base <> R0
        [       $len <> R2
$label  Push    "R0,R2,R3,R4"
        [       $len <> R0
        MOV     R0,$base
        MOV     R2,$len
        |
        [       $base <> R2
        MOV     R2,$len
        MOV     R0,$base
        |
        EOR     R0,R0,R2
        EOR     R2,R2,R0
        EOR     R0,R0,R2
        ]
        ]
        |
$label  Push    "R0,R3,R4"
        MOV     R0,$base
        ]
        |
        [       $len <> R2
$label  Push    "R2,R3,R4"
        MOV     R2,$len
        |
$label  Push    "R3,R4"
        ]
        ]
        MOV     R3,#$min
        MOV     R4,#($max)-($min)
        BL      output_stringN
        [       $base <> R0
        [       $len <> R2
        STRVS   R0,[R13]
        Pull    "R0,R2,R3,R4"
        |
        STRVS   R0,[R13]
        Pull    "R0,R3,R4"
        ]
        |
        [       $len <> R2
        Pull    "R2,R3,R4"
        |
        Pull    "R3,R4"
        ]
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrLnN   $base,$len,$min,$max,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  PrStrN  $base,$len,$min,$max
        PrNewLn $fallthrough
        MEND

        MACRO
$label  PrHex   $reg,$corruptR0,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
        [       "$corruptR0" = ""
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_hexbyte
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg
        BL      output_hexbyte
        ]
        |
        BL      output_hexbyte
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrNum   $reg,$corruptR0,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
        [       "$corruptR0" = ""
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_number
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg
        BL      output_number
        ]
        |
        BL      output_number
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrNumSp $reg,$corruptR0,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R0
        [       "$corruptR0" = ""
$label  Push    "R0"
        MOV     R0,$reg
        BL      output_numberspace
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg
        BL      output_numberspace
        ]
        |
        BL      output_numberspace
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrPair  $reg1,$reg2,$corruptR0andR1,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg1 <> R0
        [       $reg2 <> R1
        [       "$corruptR0andR1" = ""
$label  Push    "R0,R1"
        [       $reg2 <> R0
        MOV     R0,$reg1
        MOV     R1,$reg2
        |
        [       $reg1 <> R1
        MOV     R1,$reg2
        MOV     R0,$reg1
        |
        EOR     R0,R0,R1
        EOR     R1,R1,R0
        EOR     R0,R0,R1
        ]
        ]
        BL      output_coordpair
        STRVS   R0,[R13]
        Pull    "R0,R1"
        |
        [       $reg2 <> R0
$label  MOV     R0,$reg1
        MOV     R1,$reg2
        |
        [       $reg1 <> R1
$label  MOV     R1,$reg2
        MOV     R0,$reg1
        |
$label  EOR     R0,R0,R1
        EOR     R1,R1,R0
        EOR     R0,R0,R1
        ]
        ]
        BL      output_coordpair
        ]
        |
        [       "$corruptR0andR1" = ""
$label  Push    "R0"
        MOV     R0,$reg1
        BL      output_coordpair
        STRVS   R0,[R13]
        Pull    "R0"
        |
$label  MOV     R0,$reg1
        BL      output_coordpair
        ]
        ]
        |
        [       $reg2 <> R1
        [       "$corruptR0andR1" = ""
$label  Push    "R1"
        MOV     R1,$reg2
        BL      output_coordpair
        Pull    "R1"
        |
$label  MOV     R1,$reg2
        BL      output_coordpair
        ]
        |
$label  BL      output_coordpair
        ]
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrRGB   $reg,$corruptR1,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
        [       $reg <> R1
        [       "$corruptR1" = ""
$label  Push    "R1"
        MOV     R1,$reg
        BL      output_rgbvalue
        Pull    "R1"
        |
$label  MOV     R1,$reg
        BL      output_rgbvalue
        ]
        |
        BL      output_rgbvalue
        ]
        PrPassError $fallthrough
        MEND

        MACRO
$label  PrVarIm $varname,$fallthrough
        OPT     OptNoSets+OptNoControl+OptNoMends
$label  BL      output_variable
        DCB     "$varname",0
        ALIGN
        PrPassError $fallthrough
        MEND

	MACRO
$l	DebugEscState	$fn
	[		debug
$l	Push		"r0-r2, lr"
	SavePSR         lr
	Push		"lr"			;save flags
	MOV		r0, #229
	MOV		r1, #0
	MOV		r2, #255
	SWI		XOS_Byte
	Debug		misc, "$fn: esc disabled", r1
	Pull		"lr"
	RestPSR         lr,,f			;restore flags
	Pull		"r0-r2, lr"		;restore everything else
	]
	MEND

      [ debug
        InsertNDRDebugRoutines
      ]

        END
@


4.3
log
@  Merge of 32-bit branch.
Detail:
  These modules are now thought to work.
Admin:
  This module has received some testing of both 26-bit and 32-bit
    builds and is believed to function correctly.

Version 4.45. Tagged as 'PDModules-4_45'
@
text
@d18 5
a22 5
JPEG            SETD    true
PageBox         SETD    true
mjs             SETD    true
misc		SETD	true
svc		SETD	true	;service calls
@


4.2
log
@Spinner branch merged
@
text
@d394 2
a395 1
	Push		"pc"			;save flags
d402 1
a402 1
	TEQP		lr, #0			;restore flags
@


4.2.2.1
log
@  First attempt at 32-bit compatible modules.
Admin:
  Tested that modules build 26-bit and 32-bit.
  Requires HdrSrc-1_05 or later.

Version 4.44, 4.1.2.1. Tagged as 'PDModules-4_44-4_1_2_1'
@
text
@d394 1
a394 2
	SavePSR         lr
	Push		"lr"			;save flags
d401 1
a401 1
	RestPSR         lr,,f			;restore flags
@


4.1
log
@Initial revision
@
text
@d21 2
d389 16
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@   New version to keep in step with PDriverDP.
@
text
@a20 2
misc		SETD	true
svc		SETD	true	;service calls
a386 16

	MACRO
$l	DebugEscState	$fn
	[		debug
$l	Push		"r0-r2, lr"
	Push		"pc"			;save flags
	MOV		r0, #229
	MOV		r1, #0
	MOV		r2, #255
	SWI		XOS_Byte
	Debug		misc, "$fn: esc disabled", r1
	Pull		"lr"
	TEQP		lr, #0			;restore flags
	Pull		"r0-r2, lr"		;restore everything else
	]
	MEND
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
