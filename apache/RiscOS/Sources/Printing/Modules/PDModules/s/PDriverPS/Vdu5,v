head	4.3;
access;
symbols
	PDModules-4_64:4.3
	PDModules-4_63:4.3
	PDModules-4_62:4.3
	PDModules-4_61:4.3
	PDModules-4_60:4.3
	PDModules-4_59:4.3
	PDModules-4_58:4.3
	PDModules-4_57:4.3
	PDModules-4_56:4.3
	PDModules-4_55:4.3
	PDModules-4_54:4.3
	PDModules-4_53:4.3
	PDModules-4_52:4.3
	PDModules-4_51:4.3
	PDModules-4_50:4.3
	PDModules-4_49:4.3
	PDModules-4_48:4.3
	PDModules-4_47:4.3
	PDModules-4_46:4.2
	kbracey_32bit_merge:4.2
	PDModules-4_45:4.2
	PDModules-4_44-4_1_2_7:4.2
	PDModules-4_44-4_1_2_6:4.2
	PDModules-4_44-4_1_2_5:4.2
	PDModules-4_44-4_1_2_4:4.2
	PDModules-4_44-4_1_2_3:4.2
	PDModules-4_44-4_1_2_2:4.2
	PDModules-4_44-4_1_2_1:4.2
	kbracey_32bit:4.2.0.2
	kbracey_32bit_bp:4.2
	dellis_autobuild_BaseSW:4.2
	Ursula_merge:4.1.7.2
	PDModules-4_44:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.2
	Ursula_RiscPC:4.1.7.2.0.4
	rthornb_UrsulaBuild-19Aug1998:4.1.7.2
	UrsulaBuild_FinalSoftload:4.1.7.2
	rthornb_UrsulaBuild-12Aug1998:4.1.7.2
	aglover_UrsulaBuild-05Aug1998:4.1.7.2
	rthornb_UrsulaBuild-29Jul1998:4.1.7.2
	rthornb_UrsulaBuild-22Jul1998:4.1.7.2
	hsimons_BOCA-1_2-Release:4.1.7.2
	rthornb_UrsulaBuild-15Jul1998:4.1.7.2
	rthornb_UrsulaBuild-07Jul1998:4.1.7.2
	rthornb_UrsulaBuild-17Jun1998:4.1.7.2
	rthornb_UrsulaBuild-03Jun1998:4.1.7.2
	rthornb_UrsulaBuild-27May1998:4.1.7.2
	rthornb_UrsulaBuild-21May1998:4.1.7.2
	rthornb_UrsulaBuild_01May1998:4.1.7.2
	afrost_NC2_Generic:4.1.7.2
	afrost_Funai01-33:4.1.7.2
	Ursula:4.1.7.2.0.2
	Ursula_bp:4.1.7.2
	Ursula_31Mar1998:4.2
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spin_merge_28May97:4.1.7.2
	Spinner_B10:4.1.7.2
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2002.12.05.20.45.10;	author srevill;	state Exp;
branches;
next	4.2;

4.2
date	97.05.16.12.55.57;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.48.43;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.48.43;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.06.12;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.28.07;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.31.44;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.05.01.12.38.49;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Changed to use objasm to avoid any LDR rN,[rN],#0 problems
Changed to use shared Makefiles
Numerous small 32 bit conversion improvements
Bugfix to PDriverPS,it was pulling LR not PC - this has been the case for
many years so not sure how it ever worked.
Due to a bug in objasm 3.27 this checkin will infact not build directly.
You must first
 - rename the PDriverDP dir to PDriverDP2
 - rename the PDriverPS dir to PDriverPS2
 - move the 2 source files of the same name up a directory
checked in in this way to minimise messing in CVS.

Version 4.47. Tagged as 'PDModules-4_47'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.PDriverPS.Vdu5

; VDU 5 character handlers for the PostScript printer driver

; Subroutine to deal with a VDU 5 character

vdu5_char
        Push    "LR"
        LDRB    R3,textbufferpos
        TEQ     R3,#0                   ;If we're starting a VDU 5 string,
        ADREQ   LR,startofvdu5str       ;  record where it starts
        STMEQIA LR,{R1,R2}
        ADR     LR,textbuffer           ;Store the character
        STRB    R0,[LR,R3]
        ADD     R3,R3,#1                ;Increment character count - store
        STRB    R3,textbufferpos        ;  only relevant if buffer not full
        TEQ     R3,#textbufferlen       ;If buffer is full, empty it
        BLEQ    vdu5_emptybuffer
vdu5_char_return
        Pull    "PC"

; Subroutine to deal with a VDU 5 DELETE.

vdu5_delete
        Push    "LR"
        PrError vdu5_delete_return

        [       PSCoordSpeedUps
        BL      ensure_OScoords
        BLVC    colour_ensure
        BVS     vdu5_delete_return
        ]

        PrStrIm "(\\177) "

        PrPair  R1,R2

        ADR     LR,vdu5charsize
        LDMIA   LR,{R0,R1}
        PrPair  R0,R1

        PrLnIm  "0 0 V",FallThroughOnError

        PrError
vdu5_delete_return
        Pull    "PC"

; Subroutine to flush the VDU 5 characters in 'textbuffer'.

vdu5_flush
        Push    "R3,LR"
        LDRB    R3,textbufferpos
        CMP     R3,#0                   ;NB clears V
        BLNE    vdu5_emptybuffer
        Pull    "R3,PC"

; Subroutine to empty the characters in 'textbuffer'.
; Entry: R3 = number of characters to print, known not to be zero
; Exit:  All registers preserved

vdu5_emptybuffer
        Push    "R0-R2,R4-R6,LR"
        PrError vdu5_emptybuffer_return

; If the character size is zero, don't output anything

        ADR     LR,vdu5charsize
        LDMIA   LR,{R0,R1}              ; X and Y size
        TEQ     R0, #0
        TEQNE   R1, #0
        BEQ     vdu5_emptybuffer_zeroandreturn

        [       PSCoordSpeedUps
        BL      ensure_OScoords
        BLVC    colour_ensure
        BVS     vdu5_emptybuffer_return
        ]

; First make certain that definitions of all characters in the string are
; known to the PostScript interpreter.

        ADR     R1,textbuffer
        ADD     R2,R1,R3
        ADR     R4,vducharsdefined-4
        MOV     R5,#1
vdu5_emptybuffer_defineloop
        CMP     R1,R2
        BHS     vdu5_emptybuffer_continue
        LDRB    R0,[R1],#1
        LDRB    R6,[R4,R0,LSR #3]
        AND     LR,R0,#7
        TST     R6,R5,LSL LR
        BNE     vdu5_emptybuffer_defineloop
        BL      vdu5_define
        BVC     vdu5_emptybuffer_defineloop
        B       vdu5_emptybuffer_return

vdu5_emptybuffer_continue

        ADR     R1,textbuffer
        MOV     R5,R3
        BL      output_PSstring
        BVS     vdu5_emptybuffer_return

        ADR     LR,startofvdu5str
        LDMIA   LR,{R0,R1}
        PrPair  R0,R1

        ADR     LR,vdu5charsize
        LDMIA   LR,{R0,R1}
        PrPair  R0,R1

        ADR     LR,vdu5autoadvance
        LDMIA   LR,{R0,R1}
        PrPair  R0,R1

        PrLnIm  "V",FallThroughOnError

vdu5_emptybuffer_zeroandreturn
        MOVVC   LR,#0
        STRVCB  LR,textbufferpos

        PrError
vdu5_emptybuffer_return
        STRVS   R0,[R13]
        Pull    "R0-R2,R4-R6,PC"

; Subroutine to deal with a VDU 5 character definition (or all character
; definitions) becoming unknown to the PostScript interpreter.

vdu5_changed
        Push    "R0-R2,LR"
        BICS    LR,R1,#&FF
        ADR     LR,vducharsdefined-4
        BNE     vdu5_changed_all

        LDRB    R0,[LR,R1,LSR #3]!
        MOV     R2,#1
        AND     R1,R1,#&7
        BIC     R0,R0,R2,LSL R1
        STRB    R0,[LR]
        B       vdu5_changed_return

vdu5_changed_all
        MOV     R0,#0
        MOV     R2,#(vducharsdefend - vducharsdefined)/4
vdu5_changed_all_loop
        STR     R0,[LR,#4]!
        SUBS    R2,R2,#1                ;NB clears V last time through
        BNE     vdu5_changed_all_loop

vdu5_changed_return
        Pull    "R0-R2,PC"

; Subroutine to define a VDU 5 character to the PostScript interpreter. Will
; not attempt to define character 127 under any circumstances.
; Entry: R0 = character to be defined to the interpreter.
; Exit:  All registers preserved (except R0 on an error).

vdu5_define
        TEQ     R0,#127
        MOVEQ   PC,LR
        Push    "R0-R2,LR"
        PrError vdu5_define_return

; Start the defining sequence

        PrNumSp R0
        PrStrIm "DC "

; Get the character definition

        ADRL    R1,chardefnblock
        STRB    R0,[R1]
        MOV     R0,#&0A
        SWI     XOS_Word
        BVS     vdu5_define_return

; Output the character definition as a straight hexadecimal string, in
; bottom to top, left to right order.

        MOV     R2,#8
vdu5_define_loop
        LDRB    R0,[R1,R2]
        PrHex   R0
        SUBS    R2,R2,#1
        BNE     vdu5_define_loop

; Finish the line

        PrNewLn

; And finally mark the character concerned as having been defined to the
; PostScript interpreter.

        LDR     R1,[R13]                ;Recover character code
        ADR     LR,vducharsdefined-4
        LDRB    R0,[LR,R1,LSR #3]!
        MOV     R2,#1
        AND     R1,R1,#&7
        ORR     R0,R0,R2,LSL R1
        STRB    R0,[LR]

        PrError
vdu5_define_return
        STRVS   R0,[R13]
        Pull    "R0-R2,PC"

        END
@


4.2
log
@Spinner branch merged
@
text
@d48 1
a48 1
        PrStrIm "(\177) "
@


4.1
log
@Initial revision
@
text
@d187 1
a187 1
        ADR     R1,chardefnblock
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Fixed data abort on init
@
text
@d187 1
a187 1
        ADRL    R1,chardefnblock
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
