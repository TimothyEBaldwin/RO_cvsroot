head	4.4;
access;
symbols
	PDModules-4_64:4.4
	PDModules-4_63:4.4
	PDModules-4_62:4.4
	PDModules-4_61:4.4
	PDModules-4_60:4.4
	PDModules-4_59:4.4
	PDModules-4_58:4.4
	PDModules-4_57:4.4
	PDModules-4_56:4.4
	PDModules-4_55:4.4
	PDModules-4_54:4.4
	PDModules-4_53:4.4
	PDModules-4_52:4.4
	PDModules-4_51:4.4
	PDModules-4_50:4.4
	PDModules-4_49:4.4
	PDModules-4_48:4.4
	PDModules-4_47:4.4
	PDModules-4_46:4.3
	kbracey_32bit_merge:4.2.2.1
	PDModules-4_45:4.3
	PDModules-4_44-4_1_2_7:4.2.2.1
	PDModules-4_44-4_1_2_6:4.2.2.1
	PDModules-4_44-4_1_2_5:4.2.2.1
	PDModules-4_44-4_1_2_4:4.2.2.1
	PDModules-4_44-4_1_2_3:4.2.2.1
	PDModules-4_44-4_1_2_2:4.2.2.1
	PDModules-4_44-4_1_2_1:4.2.2.1
	kbracey_32bit:4.2.0.2
	kbracey_32bit_bp:4.2
	dellis_autobuild_BaseSW:4.2
	Ursula_merge:4.1.7.3
	PDModules-4_44:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.3
	Ursula_RiscPC:4.1.7.3.0.4
	rthornb_UrsulaBuild-19Aug1998:4.1.7.3
	UrsulaBuild_FinalSoftload:4.1.7.3
	rthornb_UrsulaBuild-12Aug1998:4.1.7.3
	aglover_UrsulaBuild-05Aug1998:4.1.7.3
	rthornb_UrsulaBuild-29Jul1998:4.1.7.3
	rthornb_UrsulaBuild-22Jul1998:4.1.7.3
	hsimons_BOCA-1_2-Release:4.1.7.3
	rthornb_UrsulaBuild-15Jul1998:4.1.7.3
	rthornb_UrsulaBuild-07Jul1998:4.1.7.3
	rthornb_UrsulaBuild-17Jun1998:4.1.7.3
	rthornb_UrsulaBuild-03Jun1998:4.1.7.3
	rthornb_UrsulaBuild-27May1998:4.1.7.3
	rthornb_UrsulaBuild-21May1998:4.1.7.3
	rthornb_UrsulaBuild_01May1998:4.1.7.3
	afrost_NC2_Generic:4.1.7.3
	afrost_Funai01-33:4.1.7.3
	Ursula:4.1.7.3.0.2
	Ursula_bp:4.1.7.3
	Ursula_31Mar1998:4.2
	Spinner_RCA116:4.1.7.3
	Spinner_B20_2:4.1.7.3
	Spinner_19_3:4.1.7.3
	Spinner_B18:4.1.7.3
	Spinner_B17:4.1.7.3
	Spinner_B15:4.1.7.3
	Spinner_B14:4.1.7.3
	Spinner_B13:4.1.7.3
	Spinner_B12:4.1.7.3
	Spin_merge_28May97:4.1.7.3
	Spinner_B10:4.1.7.3
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.3
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2002.12.05.20.45.09;	author srevill;	state Exp;
branches;
next	4.3;

4.3
date	2001.01.09.13.59.35;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.05.16.12.55.37;	author kbracey;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.48.33;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	2000.10.18.11.32.02;	author sbrodie;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.48.33;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.04.07;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.27.04;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.30.49;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.04.30.17.46.02;	author scormie;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.05.14.09.36.00;	author jcoxhead;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Changed to use objasm to avoid any LDR rN,[rN],#0 problems
Changed to use shared Makefiles
Numerous small 32 bit conversion improvements
Bugfix to PDriverPS,it was pulling LR not PC - this has been the case for
many years so not sure how it ever worked.
Due to a bug in objasm 3.27 this checkin will infact not build directly.
You must first
 - rename the PDriverDP dir to PDriverDP2
 - rename the PDriverPS dir to PDriverPS2
 - move the 2 source files of the same name up a directory
checked in in this way to minimise messing in CVS.

Version 4.47. Tagged as 'PDModules-4_47'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Core.MsgCode

; Internationalisation functions for PDrivers common to PDriver, PDumpers
; and PDModules.
;
; Within the global workspace for each module are two words:
;
;  wp, MessagesBlock
;  wp, MessagesOpen
;  wp, SharedMessages
;
; SharedMessages points at the following structure:
;
                ^ 0
shared_block    # 16
shared_count    # 4
shared_size     * :INDEX: @@

;
; If the following constant is defined then the routines will attempt to look
; in a private messages file.  For optimum usage when the variable is not
; defined the routines will be compiled not to check there.
;
;               GBLS PrivMessages
; PrivMessages  SETS ""
;



; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; LookupError
;
; in:   r0 -> error block
;       r1 -> %0 parameter
;
; Will attempt to open a messages file resolve the error token and then
; return a suitable block.  If this is not possible then the original
; error is scanned for a suitable token.
;

LookupError     ROUT

                Push    "r1-r8, lr"

                BL      OpenMessages
                Pull    "r1-r8, pc", VS                         ; return if could not open messages

                MOV     r8, r0                                  ; take copy of token

                MOV     r4, r1                                  ; -> %0 parameter
                LDR     r1, SharedMessages                      ; -> shared block
                ASSERT  shared_block =0

		[	{TRUE}
		ADRL	r2, error_buffer
		MOV	r3, #?error_buffer
		|
        	MOV     r2, #0 ; use internal buffer
		]
                MOV     r5, #0
                MOV     r6, #0
                MOV     r7, #0                                  ; no substitution
                SWI     XMessageTrans_ErrorLookup               ; attempt to resolve

                LDR     r1, [r0]
                LDR     r2, =ErrorNumber_MessageTrans_TokenNotFound
                TEQ     r1, r2                                  ; did we find the token?

              [ "$PrivMessages"<>""
                MOVEQ   r0, r8
                ADREQ   r1, messageblock                        ; -> private block
                SWIEQ   XMessageTrans_ErrorLookup               ; (other parameters preserved)
              |
                MOVEQ   r0, r8
              ]


                BL      CloseMessages

                Pull    "r1-r8, pc"                             ; otherwise return

                LTORG

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; LookupSingle
;
; in:   r0 -> token
;
; This code will look up a token without any substitution.
;

LookupSingle    ROUT

                Push    "r1, lr"

                MOV     r1, #0                                  ; no parameter in r1
                BL      LookupError

                Pull    "r1, pc"                                ; must preserve r1

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; LookupToken
;
; in:   r0 -> token
;
; out:  r0 -> resolved string
;       r1  = length of resolved string
;
; This code will look up the token specified at r0 and return it back to the
; caller.
;
                ASSERT  shared_block =0

LookupToken     ROUT

                Push    "r2-r7, lr"

                BL      OpenMessages
                Pull    "r2-r7, pc", VS                         ; return if could not open messages

                MOV     r1, r0                                  ; -> token to munge with

                LDR     r0, SharedMessages                      ; -> shared block
                MOV     r2, #0
                MOV     r4, #0
                MOV     r5, #0
                MOV     r6, #0
                MOV     r7, #0                                  ; no substitution
                SWI     XMessageTrans_Lookup                    ; attempt to resolve

              [ "$PrivMessages"<>""
                BVC     %10

                LDR     r1, [r0]
                LDR     r2, =ErrorNumber_MessageTrans_TokenNotFound
                TEQ     r1, r2                                  ; did we find the token?
                ADREQ   r1, messageblock                        ; -> private block
                SWIEQ   XMessageTrans_GSLookup                  ; (other parameters preserved)
10
              ]

                MOVVC   r0, r2                                  ; -> token
                MOVVC   r1, r3

                BL      CloseMessages

                Pull    "r2-r7, pc"                             ; otherwise return

                LTORG

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Open the messages file.
;
; This code will attempt to open the shared messages file, once it has
; done this it will attempt to open the private messages if required.
;
                ASSERT  shared_block =0

OpenMessages    ROUT

                Push    "r0-r3, lr"

                LDR     r3, SharedMessages                      ; is there a shared messages block?
                TEQ     r3, #0
                BNE     %00

                MOV     r1, #Service_PDriverGetMessages
                SWI     XOS_ServiceCall                         ; attempt to look up block (has anyone else got it?)
                TEQ     r1, #Service_Serviced
                STREQ   r3, SharedMessages
                BEQ     %00

                MOV     r0, #ModHandReason_Claim
                LDR     r3, =shared_size                        ; size of block
                SWI     XOS_Module
                BVS     %90                                     ; give up because errored

                MOV     r3, r2
                STR     r3, SharedMessages                      ; -> shared block

                MOV     r2, #0
                STR     r2, [r3, #shared_count]                 ; usage count is 0

                ADR     r1, MessagesName
                MOV     r0, r3                                  ; -> control block
                SWI     XMessageTrans_OpenFile
                BVS     %90                                     ; give up because errored
00
                LDR     r0, [r3, #shared_count]
                ADD     r0, r0, #1
                STR     r0, [r3, #shared_count]                 ; increase the usage count then.

              [ "$PrivMessages"<>""

                LDR     r0, MessagesOpen
                TEQ     r0, #0                                  ; is the private block open?
                BNE     %10                                     ; yes, so don't open it again

                ADR     r0, MessagesBlock
                ADR     r1, PrivateMessages
                MOV     r2, #0                                  ; don't load into memory
                SWI     XMessageTrans_Open
10
              ]

                Pull    "r0-r3, pc", VC
90
                STR     r0, [sp]
                BL      CloseMessages
                SETV
                Pull    "r0-r3, pc"

MessagesName    = "Resources:$.Resources.PDrivers.Messages", 0

              [ "$PrivMessages"<>""
PrivateMessages = "$PrivMessages", 0
              ]
                ALIGN

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Handle closing of messages files,
;
                ASSERT  shared_block =0

CloseMessages   ROUT

                EntryS  "r0-r2"

                LDR     r2, SharedMessages
                TEQ     r2, #0                                  ; shared messages block?
                BEQ     %00

                MOV     r0, r2
                SWI     XMessageTrans_CloseFile

                LDR     r0, [r2, #shared_count]
                SUBS    r0, r0, #1
                STR     r0, [r2, #shared_count]                 ; update usage count
                BGT     %00                                     ; if still valid then skip release

                MOV     r0, #ModHandReason_Free
                SWI     XOS_Module                              ; attempt to remove the block (ignore errors)

                MOV     r0, #0
                STR     r0, SharedMessages                      ; mark as no shared messages anymore
00
             [ "$PrivMessages"<>""

                LDR     r0, MessagesOpen                        ; is the messages file open?
                TEQ     r0, #0
                MOVNE   r0, #0
                STRNE   r0, MessagesOpen                        ; mark as closed
                ADRNE   r0, MessagesBlock
                SWINE   XMessagesTrans_CloseFile                ; then attempt to close the file

             ]
                EXITS

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Handle service broadcast for getting messages block.
;

ServiceMessages ROUT

                LDR     r3, SharedMessages
                TEQ     r3, #0                                  ; do I have a shared block?
                MOVNE   r1, #Service_Serviced                   ; yes, so claim message
		Debug	svc, "-service"
                MOV     pc, lr

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                END
@


4.3
log
@  Merge of 32-bit branch.
Detail:
  These modules are now thought to work.
Admin:
  This module has received some testing of both 26-bit and 32-bit
    builds and is believed to function correctly.

Version 4.45. Tagged as 'PDModules-4_45'
@
text
@d69 1
a69 1
		[	true
d246 1
a246 1
MessagesName    = "resources:$.Resources.PDrivers.Messages", 0
@


4.2
log
@Spinner branch merged
@
text
@d17 1
a17 1
; Internationalisation functions for PDrivers common to PDriver, PDumpers 
d27 1
a27 1
; 
d39 2
a40 2
; PrivMessages  SETS ""   
; 
d45 1
a45 1
; 
d47 1
a47 1
;            
d54 2
a55 2
; 
                                        
d59 1
a59 1
                                   
d67 2
a68 2
                ASSERT  shared_block =0 
 
d83 1
a83 1
              
d95 1
a95 1
                Pull    "r1-r8, pc"                             ; otherwise return             
d112 1
a112 1
                                                          
d135 1
a135 1
; 
d139 2
a140 2
                ASSERT  shared_block =0         
                                        
d144 1
a144 1
                                   
d171 1
a171 1
  
d174 1
a174 1
                Pull    "r2-r7, pc"                             ; otherwise return             
d197 1
a197 1
                TEQ     r3, #0                            
d228 1
a228 1
                LDR     r0, MessagesOpen                
d243 2
a244 2
                Pull    "r0-r3, lr"
                ORRS    pc, lr, #V_bit                          ; only change V
d263 1
a263 1
                                   
d265 2
a266 2
                            
                Push    "r0-r2, lr"
d271 1
a271 1
                   
d287 1
a287 1
              
d294 1
a294 1
   
d296 1
a296 1
                Pull    "r0-r2, pc",,^
d314 1
a314 1
                MOVS    pc, lr
@


4.2.2.1
log
@  First attempt at 32-bit compatible modules.
Admin:
  Tested that modules build 26-bit and 32-bit.
  Requires HdrSrc-1_05 or later.

Version 4.44, 4.1.2.1. Tagged as 'PDModules-4_44-4_1_2_1'
@
text
@d17 1
a17 1
; Internationalisation functions for PDrivers common to PDriver, PDumpers
d27 1
a27 1
;
d39 2
a40 2
; PrivMessages  SETS ""
;
d45 1
a45 1
;
d47 1
a47 1
;
d54 2
a55 2
;

d59 1
a59 1

d67 2
a68 2
                ASSERT  shared_block =0

d83 1
a83 1

d95 1
a95 1
                Pull    "r1-r8, pc"                             ; otherwise return
d112 1
a112 1

d135 1
a135 1
;
d139 2
a140 2
                ASSERT  shared_block =0

d144 1
a144 1

d171 1
a171 1

d174 1
a174 1
                Pull    "r2-r7, pc"                             ; otherwise return
d197 1
a197 1
                TEQ     r3, #0
d228 1
a228 1
                LDR     r0, MessagesOpen
d243 2
a244 2
                SETV
                Pull    "r0-r3, pc"
d263 1
a263 1

d265 2
a266 2

                EntryS  "r0-r2"
d271 1
a271 1

d287 1
a287 1

d294 1
a294 1

d296 1
a296 1
                EXITS
d314 1
a314 1
                MOV     pc, lr
@


4.1
log
@Initial revision
@
text
@d69 6
a74 1
                MOV     r2, #0
d313 1
a318 3



@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@   Use buffer in workspace for MessageTrans.
   Added 'Colour' debugging flag.
   Do not pass SpriteV calls to pdriver if a Wimp error box is open.
@
text
@d69 1
a69 6
		[	true
		ADRL	r2, error_buffer
		MOV	r3, #?error_buffer
		|
        	MOV     r2, #0 ; use internal buffer
		]
@


4.1.7.3
log
@   Enable escapes round all calls to PDumper.
   Replace the caller's escape handler with a NOP. Otherwise, we end
up calling the current escape handler when we acknowledge the escape,
which has potentially horrible consequences. In the case of the C
library, the escape handler is expecting to have to raise a signal,
and if it can't do this is generates an error instead.
@
text
@a312 1
		Debug	svc, "-service"
d318 3
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
