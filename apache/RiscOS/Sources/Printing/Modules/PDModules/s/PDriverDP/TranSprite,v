head	4.5;
access;
symbols
	PDModules-4_64:4.5
	PDModules-4_63:4.4
	PDModules-4_62:4.4
	PDModules-4_61:4.3
	PDModules-4_60:4.3
	PDModules-4_59:4.3
	PDModules-4_58:4.2
	PDModules-4_57:4.2
	PDModules-4_56:4.2
	PDModules-4_55:4.2
	PDModules-4_54:4.2
	PDModules-4_53:4.2
	PDModules-4_52:4.2
	PDModules-4_51:4.2
	PDModules-4_50:4.2
	PDModules-4_49:4.2
	PDModules-4_48:4.2
	PDModules-4_47:4.2
	PDModules-4_46:4.2
	kbracey_32bit_merge:4.1.4.2
	PDModules-4_45:4.2
	PDModules-4_44-4_1_2_7:4.1.4.2
	PDModules-4_44-4_1_2_6:4.1.4.2
	PDModules-4_44-4_1_2_5:4.1.4.2
	PDModules-4_44-4_1_2_4:4.1.4.2
	PDModules-4_44-4_1_2_3:4.1.4.2
	PDModules-4_44-4_1_2_2:4.1.4.2
	PDModules-4_44-4_1_2_1:4.1.4.1
	kbracey_32bit:4.1.0.4
	kbracey_32bit_bp:4.1
	dellis_autobuild_BaseSW:4.1
	Ursula_merge:4.1.7.1
	PDModules-4_44:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.1
	Ursula_RiscPC:4.1.7.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.7.1
	UrsulaBuild_FinalSoftload:4.1.7.1
	rthornb_UrsulaBuild-12Aug1998:4.1.7.1
	aglover_UrsulaBuild-05Aug1998:4.1.7.1
	rthornb_UrsulaBuild-29Jul1998:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.7.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1.7.1
	rthornb_UrsulaBuild-17Jun1998:4.1.7.1
	rthornb_UrsulaBuild-03Jun1998:4.1.7.1
	rthornb_UrsulaBuild-27May1998:4.1.7.1
	rthornb_UrsulaBuild-21May1998:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Ursula:4.1.7.1.0.4
	Ursula_bp:4.1.7.1
	Ursula_31Mar1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spin_merge_28May97:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2018.07.18.07.53.24;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	svgg0RWLmbKgIAKA;

4.4
date	2018.07.03.21.14.45;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	8KGlIKKeLIz2DJIA;

4.3
date	2014.10.20.21.53.05;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	kYvwc1FHitWAiZUx;

4.2
date	2001.01.09.13.59.39;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.48.39;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.48.39;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.05.16;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	2000.10.18.11.32.02;	author sbrodie;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	2000.11.24.13.27.32;	author sbrodie;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.27.40;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.31.20;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Let through post 3.50 sprite types in PDriverDP
Pass the sprite type to OS_ReadModeVariable rather than trying to infer the Log2BPP from the sprite type directly.
Tested printing a Draw file with all true colour combinations of test sprites, via the PCL dumper, to a Kyocera 2551ci colour laser printer.

Version 4.64. Tagged as 'PDModules-4_64'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > TranSprite

; ********************************************************************************
;
; sprite_plotmasktransformed
; sprite_plotspritetransformed
;
;   in: r0  = reason code, tells you how r1, r2 should be handled.
;       r1 -> sprite control block
;       r2 -> sprite name / pointer to sprite (if r0 =&2xx).
;       r3  = flags word
;                   bit 0 set => R6 -> destination co-ords, else matrix.
;                   bit 1 set => R4 -> source rectangle within sprite.
;                   others are reserved for future expansion.
;
;       r4   = source rectangle block (if R3 bit 1 set).
;       r5   = GCOL action (bit 3 for masking, bit 4 for using sprite's palette)
;       r6  -> matrix (if R3 bit 0 clear):
;               r6!0,4,8,12,16,20 = matrix (as for Draw module)
;       r6  -> destination co-ordinates
;               r6!0,4 = X0,Y0 screen (1/256ths OS unit)
;               r6!8,12 = X1,Y1 on screen (1/256ths OS unit)
;               r6!16,20 = X2, Y2 on screen (1/256ths OS unit)
;               r6!24,28 = X3, Y3 on screen (1/256ths OS unit)
;       r7  -> translation table ( = 0 or -1 => none).
;
; The source cordinates are inclusive at the bottom-left, and exclusive at the
; top right.
;
; When specifying a destination parallelogram, the source rectangle is mapped as onto
; the destination as follows:
;
;       x0, y1  ->  X0, Y0
;       x1, y1  ->  X1, Y1
;       x1, y0  ->  X2, Y2
;       x0, y0  ->  X3, Y3
;
; In the future it may be possible to set the destination to an arbitary
; quadrilateral, rather than a parallelogram.   ** THIS IS NOT YET SUPPORTED **
;
; The routine handling this call should ensure that the resulting image covers exactly
; the area that a call to Draw_Fill would produce if passed the same rectangle
; and relevant transformation matrix, where it is filling to half-way through
; the boundary.
;
; If your printer driver supports transformed sprites then it should set bit 27
; of the printer driver info word to reflect this, so that applications
; authors can take advantage of the new features.
;
; ********************************************************************************

sprite_plotmasktransformed
sprite_plotspritetransformed
        Push    "R0-R7,R8-R10,LR"
        CLRV

        LDR     LR,disabled             ; if a null clip area then return
        TST     lr,#disabled_nullclip
        Pull    "R0-R7,R8-R10,PC",NE

        TST     R3,#1:SHL:0             ; is it a matrix or a parallelogram?
        BEQ     sprite_transformtomatrix

        MOV     R8,R6
        MOV     R9,#4                   ; transform 4 co-ordinates

sprite_transformtocoordsloop
        LDMIA   R8,{R0,R1}
        BL      offset_R0R1             ; adjust via a suitable offset
        STMIA   R8!,{R0,R1}
        SUBS    R9,R9,#1
        BNE     sprite_transformtocoordsloop

        B       sprite_plotittransformed

sprite_transformtomatrix
        LDR     R0,[R6,#4*0]            ; adjust matrix xx
  Debug JPEG, "sprite matrix xx > ", R0
        BL      XScale
  Debug JPEG, "sprite matrix xx < ", R0
        STR     R0,[R6,#4*0]

        LDR     R0,[R6,#4*2]            ; adjust matrix xy
  Debug JPEG, "sprite matrix xy > ", R0
        BL      XScale
  Debug JPEG, "sprite matrix xy < ", R0
        STR     R0,[R6,#4*2]

        LDR     R0,[R6,#4*1]            ; adjust matrix yx
  Debug JPEG, "sprite matrix yx > ", R0
        BL      YScale
  Debug JPEG, "sprite matrix yx < ", R0
        STR     R0,[R6,#4*1]

        LDR     R0,[R6,#4*3]            ; adjust matrix yy
  Debug JPEG, "sprite matrix yy > ", R0
        BL      YScale
  Debug JPEG, "sprite matrix yy < ", R0
        STR     R0,[R6,#4*3]

        ADD     R8,R6,#16               ; -> co-ordinates
        LDMIA   R8,{R0,R1}
        BL      offset_R0R1
        STMIA   R8,{R0,R1}              ; adjust and store them back

sprite_plotittransformed
        LDMIA   SP,{R0-R1}
        BICS    R9,R0,#&FF              ; get area code, 256, 512 or 768
        BNE     sprite_transhasvalidareapointer

        AND     R0,R0,#&0FF
        ORR     R0,R0,#&100             ; so convert to a named call with given block


        Push    "R0"
        MOV     R0,#3                   ; =sprite pool reason
        SWI     XOS_ReadDynamicArea
        MOV     R1,R0                   ; -> system sprite pool
        Pull    "R0"

sprite_transhasvalidareapointer
        [ Medusa
        Push    "R0-R6"

        MOV     R0,#3                   ; =sprite pool reason
        SWI     XOS_ReadDynamicArea
        MOV     R1,R0                   ; -> system sprite pool

        LDR     R0, [SP, #4*7]
        BIC     R0,R0,#&ff
        ORR     R0,R0, #SpriteReason_ReadSpriteSize
        SWI     XOS_SpriteOp

        MOV     R0,R6
        MOV     R1,#VduExt_Log2BPP
        SWI     XOS_ReadModeVariable 
        MOV     LR,R2
        TEQ     LR,#4
        TEQNE   LR,#5
        BNE     %FT02                   ; only fake colourtrans tables for 16bpp and 32bpp

        [ Libra1
        LDRB    R6, job_strip_type
        CMP     R6, #0
        CMPNE   R6, #1
        BLEQ    sprite_makemono32Ktable ; create fake greyscale colourtrans32K
        CMP     R6, #2
        BLEQ    sprite_make256c32Ktable ; create fake colour colourtrans32K
        |
        LDRB    R6, printer_strip_type
        CMP     R6,#2
        BLEQ    sprite_make256c32Ktable ; create fake colour colourtrans32K
        BLNE    sprite_makemono32Ktable ; create fake greyscale colourtrans32K
        ]
        ]

02
        Pull    "R0-R6"


        CMP     R7, R7, ASR#31          ; did the caller specify a transformation table
        MOVEQ   R7,#0
        BNE     sprite_plottransformed


        Push    "R0-R4"
        MOV     R0,#-1
        MOV     R1,#-1
        MOV     R2,#-1
        MOV     R3,#-1
        ADRL    R4,job_spritetrans
        SWI     XColourTrans_SelectTable; make a temp translation table as required
        STRVS   R0,[SP,#0]              ; stash error pointer if required
        Pull    "R0-R4"                 ; and balance the stack
        BVS     sprite_plottransformedreturn

        ADRL    R7,job_spritetrans      ; -> translation table setup

sprite_plottransformed
        BL      pass_spriteop           ; pass on the sprite op call


sprite_plottransformedreturn
        STRVS   R0,[SP]                 ; stash the error pointer as required
        Pull    "R0-R7,R8-R10,PC"

offset_R0R1 EntryS  "R0"
        BL      XScale                  ; scale X co-ordinate
        LDR     LR,job_currentXoffset
        SUB     R0,R0,LR                ; adjust via user offset
        STR     R0,[sp,#Proc_RegOffset] ; store return R0 on stack
        MOV     R0,R1
        BL      YScale
        LDR     LR,job_currentYoffset
        SUB     R1,R0,LR                ; do same for Y co-ordinate
        EXITS                           ; and then pull the lot back!


        END
@


4.4
log
@Update SpriteOp support, loosen/tighten some checks
Core/Header.s,Core/SWIs.s,Core/Constants.s: Define a new bad pointer rather than using &80000000 since that's now a perfectly valid logical address to have.
Core/Device.s, Core/Sprite.s, PDriverDP/Sprite.s, PDriverPS/Sprite.s: Delete support for the greyscale SpriteOp plots, these were removed from SpriteExtend in 1993. Just error them now. Extend the table of SpriteOps to include letting through TileSpriteScaled.
PDriverDP/Transprite.s: Allow 0 or -1 to mean "has no translation table" in line with PDriverPS and SpriteExtend.
PDriverPS/Sprite.s, PDriverPS/TranSprite.s: Use define instead of magic numbers.

Version 4.62. Tagged as 'PDModules-4_62'
@
text
@d148 6
a153 3
        MOV     LR, R6, LSR #27
        TEQ     LR, #SpriteType_New16bpp
        TEQNE   LR, #SpriteType_New32bpp
@


4.3
log
@Some PDModule tidy ups
Core/FontSWI.s & PDriverDP/Font.s:
 The pointer compares are now unsigned, so raise the limit for printing strings in top bit set addresses when no length is passed in R7.
 Couple of comment typos.
Core/Header.s:
 A CVS merge mistake left behind two copies of Push/return sequence.
Core/PDriver.s:
 Unused VersionString removed.
PDriverDP/Macros.s & PDriverDP/ManageJob.s:
 Single use unhelpful debug message removed.
PDriverDP/Private2.s & Sprite.s & TranSprite.s:
 Use some of the defines from Hdr:Sprite.
Makefile:
 For ROMming, explicitly state there's no resources phase
PDriverDP/PageBox.s:
 Unjumble the set_sprite_output_state data. The MonoBufferOK and Libra1 switch happen to work when both are {TRUE} but other combinations would output a silly table. Let ObjAsm work out the size instead.

Tested briefly, still printed OK.

Version 4.59. Tagged as 'PDModules-4_59'
@
text
@d39 1
a39 1
;       r7  -> translation table ( <= 0 => none).
d172 2
a173 1
        TEQ     R7,#0                   ; did the caller specify a transformation table
@


4.2
log
@  Merge of 32-bit branch.
Detail:
  These modules are now thought to work.
Admin:
  This module has received some testing of both 26-bit and 32-bit
    builds and is believed to function correctly.

Version 4.45. Tagged as 'PDModules-4_45'
@
text
@d149 3
a151 4
        AND     LR, LR, #31
        TEQ     LR, #5                  ; is sprite 16bpp
        TEQNE   LR, #6                  ; or 32bpp ?
        BNE     %FT02
@


4.1
log
@Initial revision
@
text
@d16 1
a16 1
                                                                                           
d18 1
a18 1
; 
d21 1
a21 1
; 
d51 1
a51 1
; 
d61 2
a62 2
; of the printer driver info word to reflect this, so that applications 
; authors can take advantage of the new features. 
d65 1
a65 1
 
d88 1
a88 1
        B       sprite_plotittransformed        
d138 1
a138 1
        
d153 1
a153 1
       
d168 1
a168 1
        
d171 1
a171 1
        
d190 1
a190 1
sprite_plottransformed  
d198 1
a198 2
offset_R0R1
        Push    "LR"
d200 1
a200 1
        LDR     LR,job_currentXoffset   
d202 1
a202 1
        Push    "R0"                    ; push to stack
d207 1
a207 1
        Pull    "R0,PC",,^              ; and then pull the lot back!
@


4.1.4.1
log
@  First attempt at 32-bit compatible modules.
Admin:
  Tested that modules build 26-bit and 32-bit.
  Requires HdrSrc-1_05 or later.

Version 4.44, 4.1.2.1. Tagged as 'PDModules-4_44-4_1_2_1'
@
text
@d16 1
a16 1

d18 1
a18 1
;
d21 1
a21 1
;
d51 1
a51 1
;
d61 2
a62 2
; of the printer driver info word to reflect this, so that applications
; authors can take advantage of the new features.
d65 1
a65 1

d88 1
a88 1
        B       sprite_plotittransformed
d138 1
a138 1

d153 1
a153 1

d168 1
a168 1

d171 1
a171 1

d190 1
a190 1
sprite_plottransformed
d199 1
a199 1
        EntryS  "R0"
d201 1
a201 1
        LDR     LR,job_currentXoffset
d203 1
a203 1
        STR     R0,[sp,#Proc_RegOffset] ; store return R0 on stack
d208 1
a208 1
        EXITS                           ; and then pull the lot back!
@


4.1.4.2
log
@  Lots of fixes.
Detail:
  Several stack imbalances and missing conditions on instructions fixed.
  Some flag removal code sequences improved (RSB rn,pc,pc:SUB rn,lr,rn)
Admin:
  Built both 26 and 32-bit versions - neither tested.

Version 4.44, 4.1.2.2. Tagged as 'PDModules-4_44-4_1_2_2'
@
text
@d198 2
a199 1
offset_R0R1 EntryS  "R0"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
