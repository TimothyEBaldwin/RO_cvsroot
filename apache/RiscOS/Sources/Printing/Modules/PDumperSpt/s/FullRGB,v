head	4.2;
access;
symbols
	PDumperSpt-1_31:4.2
	PDumperSpt-1_30:4.2
	PDumperSpt-1_29:4.2
	PDumperSpt-1_28:4.2
	PDumperSpt-1_27:4.2
	PDumperSpt-1_26:4.2
	PDumperSpt-1_25:4.2
	dellis_autobuild_BaseSW:4.2
	PDumperSpt-1_24:4.2
	PDumperSpt-1_23:4.2
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.2
	nturton_PDumperSpt-1_22:4.1.7.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.1
	Ursula_RiscPC:4.1.7.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.7.1
	UrsulaBuild_FinalSoftload:4.1.7.1
	rthornb_UrsulaBuild-12Aug1998:4.1.7.1
	aglover_UrsulaBuild-05Aug1998:4.1.7.1
	rthornb_UrsulaBuild-29Jul1998:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.7.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1.7.1
	rthornb_UrsulaBuild-17Jun1998:4.1.7.1
	rthornb_UrsulaBuild-03Jun1998:4.1.7.1
	rthornb_UrsulaBuild-27May1998:4.1.7.1
	rthornb_UrsulaBuild-21May1998:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Ursula:4.1.7.1.0.4
	Ursula_bp:4.1.7.1
	Ursula_31Mar1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spin_merge_28May97:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2000.06.09.11.59.57;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.48.52;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.48.52;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.07.32;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.28.46;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.32.22;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@32-bit compatible.

Version 1.23. Tagged as 'PDumperSpt-1_23'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > FullRGB
;-------------------------------
; This contains the code changes necessary for 16/24-bit sprite handling
; routines are called using something like
; LDR R14,KCMYTable:CMP R14,#1:BLLS FullRGB
; where KCMYTable is set to 1 for 16-bit, 0 for 24-bit
;-------------------------------

   [ fullrgb
FullRGB
;very few registers left, values calibrated at rendering time (=quicker)
;not including the overlap compensation (which depends on the halftone used)
;still have to consider Removal (also dictated by the palette)
 EntryS "R0-R6"
;For fifteen bit worlds, this code is entered with EQ status
 ADR R11,FullRGBInfo             ;Goes redbuffer,greenbuffer,bluebuffer,pixsep,remove
 LDMIA R11,{R3-R6,R14}
 AND R14,R14,#&FF                ;Often next door to Overlap flag
 BNE Not15bit
 LDR  R0,[R3],R6                 ;Load 16 bits/R6=2 for next load
 MOV  R4,#&F8                    ;Mask for the bits, shift to the top end
 AND  R2,R4,R0,LSR#7
 AND  R1,R4,R0,LSR#2
 AND  R0,R4,R0,LSL#3
 ORR  R0,R0,R0,LSR#5             ;Increase the range to 0-255
 ORR  R1,R1,R1,LSR#5
 ORR  R2,R2,R2,LSR#5
Not15bit
;Flags are still set for continuation....
 LDRNEB R0,[R3],R6                 ;Load red
 LDRNEB R1,[R4],R6                 ;green
 LDRNEB R2,[R5],R6                 ;blue

 STMIA R11,{R3-R5}               ;remember next load position

 MVN  R11,#&FF
 EOR  R11,R11,R0,LSL#8
 EOR  R11,R11,R1,LSL#16
 EORS R11,R11,R2,LSL#24          ;Z will be set if we had white (R=G=B=255) ...
 EXITS EQ                        ;and white means no need to think about key removal

 CMP   R0,R1
 MOVLO R0,R1
 CMP   R0,R2
 MOVLO R0,R2

;R0 has max RGB i.e.NOT min CMY
 EOR   R0,R0,#&FF
 MUL   R0,R14,R0
 MOV   R0,R0,LSR#3
 ADD   R11,R11,R0
 SUB   R11,R11,R0,LSL#8
 SUB   R11,R11,R0,LSL#16
 SUB   R11,R11,R0,LSL#24
 EXITS

;Replace loads with this
; LDR   R14,KCMYTable
; CMP   R14,#1
; LDRHIB R11,[R10]
; LDRHI R11,[R14,R11,LSL#2]
; BLLS  FullRGB

;Also need to change end of line compensations in error diffuser
;(i.e. in addition to ADD R10,R10,R0 need 3*ADD xbuffer,xbuffer,(R0+R8)*pixsep:pixsep=-pixsep
FullRGBSwitch
 EntryS "R3-R6,R11"
 ADR R11,FullRGBInfo             ;Goes redbuffer,greenbuffer,bluebuffer,pixsep,remove
 LDMIA R11,{R3-R6}
 ADD R14,R0,R8
 MULS R14,R6,R14
 RSBMI R14,R14,#0                ;Answer must be +ve (R6 may have switched)
 ADD R3,R3,R14
 ADD R4,R4,R14                   ;These are two junk if 16 bit
 ADD R5,R5,R14
 RSB R6,R6,#0
 STMIA R11,{R3-R6}
 EXITS

;and check after ADD R10,R10,R0:ADD R10,R10,R8 ....
; LDR    R14,KCMYTable
; CMP    R14,#1
; BLLS   FullRGBSwitch

  ]

  END
@


4.1
log
@Initial revision
@
text
@d28 1
a28 1
 STMFD SP!,{R0-R6,R14}
d54 1
a54 1
 LDMEQFD SP!,{R0-R6,PC}^         ;and white means no need to think about key removal
d69 1
a69 1
 LDMFD SP!,{R0-R6,PC}^
d81 1
a81 1
 STMFD SP!,{R3-R6,R11,R14}
d92 1
a92 1
 LDMFD SP!,{R3-R6,R11,PC}^
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
