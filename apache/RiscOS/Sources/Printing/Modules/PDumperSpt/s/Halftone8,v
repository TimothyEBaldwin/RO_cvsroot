head	4.3;
access;
symbols
	PDumperSpt-1_31:4.3
	PDumperSpt-1_30:4.3
	PDumperSpt-1_29:4.3
	PDumperSpt-1_28:4.3
	PDumperSpt-1_27:4.3
	PDumperSpt-1_26:4.3
	PDumperSpt-1_25:4.2
	dellis_autobuild_BaseSW:4.2
	PDumperSpt-1_24:4.2
	PDumperSpt-1_23:4.2
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.3
	nturton_PDumperSpt-1_22:4.1.7.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.1
	Ursula_RiscPC:4.1.7.1.0.6
	rthornb_UrsulaBuild-19Aug1998:4.1.7.1
	UrsulaBuild_FinalSoftload:4.1.7.1
	rthornb_UrsulaBuild-12Aug1998:4.1.7.1
	aglover_UrsulaBuild-05Aug1998:4.1.7.1
	rthornb_UrsulaBuild-29Jul1998:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.7.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1.7.1
	rthornb_UrsulaBuild-17Jun1998:4.1.7.1
	rthornb_UrsulaBuild-03Jun1998:4.1.7.1
	rthornb_UrsulaBuild-27May1998:4.1.7.1
	rthornb_UrsulaBuild-21May1998:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Ursula:4.1.7.1.0.4
	Ursula_bp:4.1.7.1
	Ursula_31Mar1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spin_merge_28May97:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	StrongARM:4.1.3;
locks; strict;
comment	@# @;


4.3
date	2000.10.19.14.47.16;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	2000.06.09.11.59.57;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.06.03.07.36;	author nturton;	state Exp;
branches
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.3.1
date	96.11.06.03.07.36;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.28.58;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.32.25;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@  More 32-bit compatibility - stack references were wrong in places.
Detail:
Admin:
  Built.

Version 1.23. Tagged as 'PDumperSpt-1_23'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; > Halftone8
;revamped code for 8 bit grey quality


;process white space margin, left or right
; entry: R9 = size of margin (left or right)
;        R10 -> next input/output pixel (1 byte/pixel)
;
; doesn't need to actually process margins, since they are already set
; white in k space - does adjust ptrs and halftone postn
;
ht_process_margin8
        Push      "R7,LR"
  Debug mjs,"ht process_margin8 ",R9
        ADD       R10,R10,R9       ;adjust input/output ptr
  Debug mjs,"Key",R9
        ADR       R7,KeyHalfInfo
        STMIA     R7,{R2,R3}       ;current x,y
        MOV       R2,R9
        BL        ht_adjust_ht
        LDR       R2,[R7]          ;new x (new y already in R3)
        Pull      "R7,PC"


Do_HalftoneGreySprite
;only one halftone is required
        EntryS  "r0"

;initialise margin handling
        Push  "R2,R3"
        STR   R10,rowmargins
        MOV   R2,#0
        STR   R2,lastleftmargin
        STR   R2,lastrightmargin
        LDR   R2,[R10,#0]
        MOV   R3,#0
        STR   R3,[R10,#0]
        MOV   R3,R2,LSR #16                ;right margin
        BIC   R2,R2,#&FF000000
        BIC   R2,R2,#&00FF0000             ;left margin
        STR   R2,thisleftmargin
        STR   R3,thisrightmargin
        Pull  "R2,R3"

        SUB   R5,R4,R6,LSL #2                             ;(rowmove=table-4*halfsize) to save doing it later

hg_rowloop
        LDR   R0,[SP,#Proc_RegOffset]      ;Reinstate columncount

  Debug mjs,"  left margin"
        LDR   R9,thisleftmargin
        SUB   R0,R0,R9
        BL    ht_process_margin8     ;process R9 marginal pixels on left
        LDR   R9,thisrightmargin
        SUB   R0,R0,R9               ;R0 is now no. of non-marginal pixels
  Debug mjs,"  left margin done (R0)",R0

        CMP   R0,#0
        BEQ   hg_columnloop1a

hg_columnloop
        MOV   R11,#0                                      ;clear the pixel
        LDRB  R9,[R10]                                    ;Load level,[sprite] (pre-compensated)
        HalfTone32 R2,R3,R6,R4,R9,R14                       ;check the halftone
        ORRHS R11,R11,#&FF                                ;Set if halftone says so (all the bits!)
        STRB  R11,[R10],#1                                ;store the result

        NextRow2_32 R2,R3,R6,R5

        SUBS  R0,R0,#1                                    ;next column
        BNE   hg_columnloop

hg_columnloop1a

  Debug mjs,"  right margin"
        LDR   R9,thisrightmargin
        BL    ht_process_margin8             ;process R9 marginal pixels on right
  Debug mjs,"  right margin done "

        NextColumn32 R2,R3,R6,R5,R7,R8

        LDR   R0,[SP,#Proc_RegOffset]      ;Reinstate columncount
        CMP   R1,#1
        BLE   hg_columnloop2
;update margins
        Push  "R3-R5,R14"
        LDR   R14,rowmargins
        ADD   R14,R14,R0
        STR   R14,rowmargins
        LDR   R3,[R14]
        MOV   R4,#0
        STR   R4,[R14]
        MOV   R4,R3,LSR #16                ;right margin
        BIC   R3,R3,#&FF000000
        BIC   R3,R3,#&00FF0000             ;left margin
        LDR   R5,thisleftmargin
        STR   R3,thisleftmargin
        STR   R5,lastleftmargin
        LDR   R5,thisrightmargin
        STR   R4,thisrightmargin
        STR   R5,lastrightmargin
        Pull  "R3-R5,R14"

hg_columnloop2
        SUBS  R1,R1,#1                                    ;next row
        BNE   hg_rowloop

        EXITS


        END
@


4.2
log
@32-bit compatible.

Version 1.23. Tagged as 'PDumperSpt-1_23'
@
text
@d63 1
a63 1
        LDR   R0,[SP]                                     ;Reinstate columncount
d97 1
a97 1
        LDR   R0,[SP]                                     ;Reinstate columncount
@


4.1
log
@Initial revision
@
text
@d22 1
a22 1
;        R10 -> next input/output pixel (1 byte/pixel) 
d42 1
a42 1
        STMFD SP!,{R0,R14}
d123 1
a123 1
        LDMFD SP!,{R0,PC}^
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@
