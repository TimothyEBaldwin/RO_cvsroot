head	4.12;
access;
symbols
	PDumpers-1_46:4.12
	PDumpers-1_45:4.12
	PDumpers-1_44:4.12
	PDumpers-1_43:4.12
	PDumpers-1_42:4.12
	PDumpers-1_41:4.11
	RO_5_07:4.10
	PDumpers-1_40:4.10
	PDumpers-1_39:4.10
	PDumpers-1_38:4.10
	PDumpers-1_37:4.9
	PDumpers-1_36:4.9
	PDumpers-1_35:4.9
	PDumpers-1_33:4.8
	PDumpers-1_32:4.8
	PDumpers-1_31:4.8
	PDumpers-1_30:4.7
	PDumpers-1_29:4.6
	PDumpers-1_27:4.6
	PDumpers-1_26:4.6
	PDumpers-1_25:4.6
	Spin_merge-1_21:4.1.7.3
	PDumpers-1_24:4.6
	PDumpers-1_23:4.6
	PDumpers-1_22:4.6
	dellis_autobuild_BaseSW:4.5
	PDumpers-1_21:4.5
	sbrodie_sedwards_16Mar2000:4.4
	dcotton_autobuild_BaseSW:4.6
	dcotton_MPT2_build_16061999:4.1.7.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.3
	Ursula_RiscPC:4.1.7.3.0.4
	nicke_PDumpers-1_21:4.1.7.3
	rthornb_UrsulaBuild-19Aug1998:4.1.7.3
	UrsulaBuild_FinalSoftload:4.1.7.3
	rthornb_UrsulaBuild-12Aug1998:4.1.7.3
	aglover_UrsulaBuild-05Aug1998:4.1.7.3
	rthornb_UrsulaBuild-29Jul1998:4.1.7.3
	rthornb_UrsulaBuild-22Jul1998:4.1.7.3
	hsimons_BOCA-1_2-Release:4.1.7.3
	rthornb_UrsulaBuild-15Jul1998:4.1.7.3
	rthornb_UrsulaBuild-07Jul1998:4.1.7.3
	rthornb_UrsulaBuild-17Jun1998:4.1.7.3
	rthornb_UrsulaBuild-03Jun1998:4.1.7.3
	rthornb_UrsulaBuild-27May1998:4.1.7.3
	rthornb_UrsulaBuild-21May1998:4.1.7.3
	rthornb_UrsulaBuild_01May1998:4.1.7.3
	afrost_NC2_Generic:4.1.7.3
	afrost_Funai01-33:4.1.7.3
	Ursula:4.1.7.3.0.2
	Ursula_bp:4.1.7.3
	Ursula_31Mar1998:4.4
	Spinner_RCA116:4.1.7.3
	Spinner_B20_2:4.1.7.3
	Spinner_19_3:4.1.7.3
	Spinner_B18:4.1.7.3
	Spinner_B17:4.1.7.3
	Spinner_B15:4.1.7.3
	Spinner_B14:4.1.7.3
	Spinner_B13:4.1.7.3
	Spinner_B12:4.1.7.3
	Spin_merge_28May97:4.1.7.2
	Spinner_B10:4.1.7.3
	Spin_merge_16May97:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.3
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.12
date	2005.06.02.22.16.30;	author jballance;	state Exp;
branches;
next	4.11;

4.11
date	2005.05.13.21.18.37;	author jballance;	state Exp;
branches;
next	4.10;

4.10
date	2002.12.17.18.54.54;	author srevill;	state Exp;
branches;
next	4.9;

4.9
date	2002.11.15.16.05.34;	author srevill;	state Exp;
branches;
next	4.8;

4.8
date	2002.01.25.17.23.49;	author mboura;	state Exp;
branches;
next	4.7;

4.7
date	2002.01.25.17.08.53;	author mboura;	state Exp;
branches;
next	4.6;

4.6
date	2000.10.19.14.01.57;	author sbrodie;	state Exp;
branches;
next	4.5;

4.5
date	2000.06.09.11.08.05;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	97.05.28.12.20.13;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	97.05.16.12.47.20;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.22.15.09.11;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.49.27;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.49.27;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.13.49;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.31.45;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.35.08;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.05.14.09.42.01;	author jcoxhead;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.05.22.10.49.53;	author jcoxhead;	state Exp;
branches;
next	;


desc
@@


4.12
log
@	Further change to PDumperLJ . 1.41 broke vertical
	page offset string.
Detail:
	moved code added in 1.41 slightly later to ensure page
	offset string always got through intact.
Admin:
	checked with 'print to file' inspection
	Castle added IP


Version 1.42. Tagged as 'PDumpers-1_42'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > StartPage

;..............................................................................
;
; call: StartPage_Code
;
; in:   r0   = copies to do
;       r1   = file handle
;       r2   = strip type
;       r3   = number of blank pixel rows before start of data
;       r4  -> our private pdumper word for job
;       r5   = job workspace
;       r6   = number of blank pixels before start of line
;       r7   = horizontal and vertical resolution packed into a single word.
;
; out:  V clear;
;         r0 = number of copies to be performed
;         r3 = number of blank pixel rows before start of of image
;
;       V set;
;         r0 -> error block.
;
; This routine is called at the start of the page.  The routine will allow
; the PDumper to setup the printer and skip to the correct print position,
; the driver is also passed the number of copies to be performed.  Both
; of these values can be modified.  The device is also passed the horizontal
; margin for its own reference, this cannot be modified and it is assumed
; that the dumping routine will pad the line start with null bytes.
;
; The number of copies when returned should be non-zero, but the vertical
; skip should just be be +VE.
;

StartPage_Colour256 ROUT
StartPage_Multi		ROUT
StartPage_16Bit		ROUT
StartPage_24Bit		ROUT

        Push    "R9,LR"
        MOV     R9,#"3"
        BL      StartPage_General
        Pull    "R9,PC"

StartPage_Monochrome ROUT
StartPage_Grey ROUT

        Push    "R9,LR"
        MOV     R9,#"1"
        BL      StartPage_General
        Pull    "R9,PC"

StartPage_General

        PDumper_Entry "R0-R2,R4,R6-R8"

        LDRB    R8,[R5,#pd_private_flags]
        TST     R8,#pdf_SupportsYOffset
        MOVNE   R8,#0                   ;supports Y Offset - zero the counter
        MOVEQ   R8,#&80000000           ;does not - set disable flag
        STR     R8,pending_blank_lines

        LDR     R8,[R5,#pd_linelength]
        Push    "R8"
        LDRB    R8,[R5,#pd_private_flags]

        ADD     R5,R5,#pd_data
        PDumper_AdjustFeed R6,R3,R5,R14


        STR     R1,FileHandle           ;Stash the stream handle
        PDumper_Reset

        [ PrefixWithZeroes
        Push    "R0, R2"
        MOV     R2, #1024 * 10   ; The HP driver sends 10K as the default
        MOV     R0, #0
5
        SWI     XOS_BPut
        BVS     %f6                ; defeatest approach. Error => stop trying
        SUBS    R2, R2, #1
        BNE     %b5
6
        Pull    "R0, R2"
        ]

        ADRL	R2,reset                ;Send the reset sequence
        PDumper_PrintCountedString R2,R4,LR
 [ :LNOT: RobStrings
        TST     R8,#pdf_MultiCopies     ;Does this printer support multiple copies?
        BEQ     %FT10

        Debug   StartPage,"Device supports multi-copy sequences"

        ADRL    R2,setcopies            ;Define the number of copies
        PDumper_PrintCountedString R2,R4,LR
        BL      print_number
        MOV     R0,#"X"
        PDumper_OutputReg R0            ;Terminate the escape sequence
10
 ]
      [ Module_Version >= 012
        BL      sendextra               ;Send contents of the extra escape sequence var
      ]

        ADRL    R0,reset2               ;Disable page skipping
        PDumper_PrintCountedString R0,R4,LR

        ADRL    R0,setdpi               ;Setup the resolution
        PDumper_PrintCountedString R0,R4,LR
        MOV     R4,R7,LSR #16
        BIC     R7,R7,R4,LSL #16        ;R4 =vertical, R7 =horizontal
        MOV     R0,R7
        BL      print_number            ;Output the horizontal resolution

        MOV     R0,#"R"                 ;Have to finish that string now
        PDumper_OutputReg R0            ;Because of new code!
;New section for outputing the StartPage code (normally null!)
        LDRB    R0,[R5,#pd_data_page_start]
        TEQ     R0,#0
        BEQ     %FT42
        ADD     R0,R5,R0
        PDumper_PrintCountedString R0,R5,LR  ;Don't need R5 now in fact
42
        TST     R8,#pdf_DeciPoints
        ADREQL  R0,cursorpos             ;Define the cursor position
        ADRNEL  R0,dcursorpos            ;depends on positioning style

        PDumper_PrintCountedString R0,R2,R5

        TST     R8,#pdf_DeciPoints
        LDREQ   R2,=300
        LDRNE   R2,=720
        MUL     R3,R2,R3                ;vertical *pointsize
        DivRem  R0,R3,R4,LR             ;(vertical *pointsize)/vertical resolution
        BL      print_number

        TST     R8,#pdf_DeciPoints
        ADREQL  R3,cursorpos2           ;Set the horizontal one aswell
        ADRNEL  R3,dcursorpos2
        PDumper_PrintCountedString R3,R5,LR

        MUL     R6,R2,R6
        DivRem  R0,R6,R7,LR             ;(horizontal *pointsize)/horizontal resolution
        BL      print_number

        TST     R8,#pdf_DeciPoints
        ADREQL  R3,curposend            
        ADRNEL  R3,dcurposend
        PDumper_PrintCountedString R3,R5,LR
 [  RobStrings
        TST     R8,#pdf_MultiCopies     ;Does this printer support multiple copies?
        BEQ     %FT11

        Debug   StartPage,"Device supports multi-copy sequences"

        ADRL    R2,setcopies            ;Define the number of copies
        PDumper_PrintCountedString R2,R4,LR
        LDR     R0, [R13, #4]           ; recover copy count from TOS -4
        BL      print_number
        MOV     R0,#"X"
        PDumper_OutputReg R0            ;Terminate the escape sequence
11
 ]
        
        TST     R8,#pdf_DeciPoints
        ADREQL  R0,graphicswidth        ;Set the width (depends on dpi?)
        ADRNEL  R0,dgraphicswidth
        PDumper_PrintCountedString R0,R4,R5

        Pull    "R0"
        BL      print_number            ;Picture width (pinched from job_ws)
        MOV     R0,#"s"
        PDumper_OutputReg R0

        TEQ     R9,#"1"                 ;SMC: If not a colour print job and not a colour printer then skip planes command.
        TSTEQ   R8,#pdf_SupportsColour
        ADREQL	R0,startgraphics2
        BEQ     %FT30

        [ FourPlanes
        TEQ     R9,#"1"                 ;Is this a colour dump?
        TSTNE   R8,#pdf_FourPlanes      ;Is is a four-plane device?
        BEQ     %FT20
        MOV     R9,#"-"
        PDumper_OutputReg R9
        MOV     R9,#"4"
20
        ]

        PDumper_OutputReg R9            ;Colour planes (entry R9="1" or "3")

        ADRL	R0,startgraphics        ;Put into a suitable graphics mode
30
        PDumper_PrintCountedString R0,R4,R5

        PDumper_EmptyBuffer             ;Flush buffer to the file

        MOV     R3,#0                   ;Vertical margin taken care of

        TST     R8,#pdf_MultiCopies
        MOVNE   LR,#1
        STRNE   LR,[SP]                 ;And store a suitable value to indicate copies handled by device

        PDumper_Exit
 [ RobStrings
reset           = 11,27,"%-12345X",27,"E"
 |
reset           = 2,27,"E"
 ]
reset2          = 5,27,"&l0L"
setcopies       = 3,27,"&l"
setdpi          = 3,27,"*t"

cursorpos       = 3,27,"*p"
cursorpos2      = 1,"y"
curposend       = 1,"X"
graphicswidth   = 3,27,"*r"

dcursorpos      = 3,27,"&a"             ; tc
dcursorpos2     = 1,"v"                 ; tc
dcurposend      = 1,"H"                 ; tc
dgraphicswidth  = 3,27,"*r"             ; tc

startgraphics   = 3,"u1A"               ; tc
startgraphics2  = 2,"1A"                ; SMC

        ALIGN

;..............................................................................

        GetIf   ^.Generic.SendExtra.s, Module_Version >= 012
$GetConditionally

;..............................................................................
;
; Output the number in R0 as an ASCII string.
;
; in    R0 number to send
; out   V =1 => R0 -> error block

print_number ROUT

        EntryS  "r0-r2", 8              ;Allow a maxmimum of eight characters

        ADD     R1,SP,#1
        MOV     R2,#8                   ;->buffer and its size
        SWI     XOS_BinaryToDecimal

        STRB    R2,[R1,#-1]!            ;Stash the sequence length before printing
        PDumper_PrintCountedString R1,R0,LR

        EXITS

        END

@


4.11
log
@	Slight change to start strings in PDumperLJ .. reflects mods
	Rob made and sent to Castle, but didn't commit.

Detail: Allows multi page printing in PDumperLJ to printers requiring the
	PJL job command to be given .. change moves the page print
	quantity printout to after the page start string, which can be used
	to insert the relevant PJL command
Admin:  used at Castle .. field tested


Version 1.41. Tagged as 'PDumpers-1_41'
@
text
@a137 14
 [  RobStrings
        TST     R8,#pdf_MultiCopies     ;Does this printer support multiple copies?
        BEQ     %FT10

        Debug   StartPage,"Device supports multi-copy sequences"

        ADRL    R2,setcopies            ;Define the number of copies
        PDumper_PrintCountedString R2,R4,LR
        LDR     R0, [R13, #4]           ; recover copy count from TOS -4
        BL      print_number
        MOV     R0,#"X"
        PDumper_OutputReg R0            ;Terminate the escape sequence
10
 ]
d161 19
d230 2
a231 1
graphicswidth   = 4,"X",27,"*r"
d235 2
a236 1
dgraphicswidth  = 4,"H",27,"*r"         ; tc
@


4.10
log
@Build changes,no code changes.
Took out the bodge of prefixing all the files GOT from the Generic
directory with a G,and replaced it with use of new flag "-J" in objasm.
Improved clean rule in top MakeFile.
Deleted some unused !Mk files.

Version 1.38. Tagged as 'PDumpers-1_38'
@
text
@d102 1
a102 1

d114 1
d138 14
d214 3
a216 1

d218 1
@


4.9
log
@Renamed generic driver sources
Makefiles rewritten
Converted to use objasm
First pass at 32 bit compatibility.

Version 1.34. Tagged as 'PDumpers-1_34'
@
text
@d220 1
a220 1
        GetIf   ^.Generic.GSendExtra.s, Module_Version >= 012
@


4.8
log
@A gremlin had danced on the keyboard. Stray characters removed.

Version 1.31. Tagged as 'PDumpers-1_31'
@
text
@d83 1
a83 1
        
d220 1
a220 1
        GetIf   ^.Generic.s.SendExtra, Module_Version >= 012
@


4.7
log
@Send 10K of zeroes at start of page
Detail:
USB interface to HP810C is broken. This fixes the problem. It will also help
parallel to recover from a partialy completed job.
Admin:
Fixes the USB printing problem from DSL4000

Version 1.30. Tagged as 'PDumpers-1_30'
@
text
@d89 1
a89 1
        MOV     R2, #10show 10   ; The HP driver sends 10K as the default
@


4.6
log
@  32-bit fixes - some stack offsets were wrong.
Admin:
  Built 26-bit and 32-bit builds.
  Not tested.

Version 1.22. Tagged as 'PDumpers-1_22'
@
text
@d83 1
d86 13
@


4.5
log
@32-bit compatible.

Version 1.21. Tagged as 'PDumpers-1_21'
@
text
@d218 1
a218 3
        EntryS  "r0-r2"

        SUB     SP,SP,#8                ;Allow a maxmimum of eight characters
a226 1
        ADD     SP,SP,#8                ;Balance the stack correctly
@


4.4
log
@Spinner branch taken
@
text
@d78 2
a79 2
        LDRB    R8,[R5,#pd_private_flags]                      
                                         
d88 1
a88 1
                 
d93 1
a93 1
        
d100 1
a100 1
      [ Version >= 012
d111 1
a111 1
        MOV     R0,R7           
d135 1
a135 1
        
d143 1
a143 1
        BL      print_number            
d180 1
a180 1
        TST     R8,#pdf_MultiCopies          
d206 1
a206 1
        GetIf   ^.Generic.s.SendExtra, Version >= 012
d210 1
a210 1
; 
d218 2
a219 2
        Push    "R0-R2,LR"
                             
d224 1
a224 1
        SWI     XOS_BinaryToDecimal 
d230 1
a230 1
        Pull    "R0-R2,PC",,^
@


4.3
log
@Spinner branch merged
@
text
@d49 3
@


4.2
log
@Version Spin_merge taken
@
text
@d83 1
a83 1
        ADR     R2,reset                ;Send the reset sequence
d154 1
a154 1
        ADREQ   R0,startgraphics2
d169 1
a169 1
        ADR     R0,startgraphics        ;Put into a suitable graphics mode
@


4.1
log
@Initial revision
@
text
@d67 6
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a66 6
        LDRB    R8,[R5,#pd_private_flags]
        TST     R8,#pdf_SupportsYOffset
        MOVNE   R8,#0                   ;supports Y Offset - zero the counter
        MOVEQ   R8,#&80000000           ;does not - set disable flag
        STR     R8,pending_blank_lines

@


4.1.7.2
log
@   Return an error EscDisabled if any PDumper is called with escape disabled.
   Check the GBPB error flag before checking the error-suppress flag.
   Copy the error block returned by OS_GBPB so FileSwitch doesn't overwrite it.
@
text
@d83 1
a83 1
        ADRL	R2,reset                ;Send the reset sequence
d154 1
a154 1
        ADREQL	R0,startgraphics2
d169 1
a169 1
        ADRL	R0,startgraphics        ;Put into a suitable graphics mode
@


4.1.7.3
log
@   Unbreak 15- and 24-bit strip-type code.
@
text
@a48 3
StartPage_Multi		ROUT
StartPage_16Bit		ROUT
StartPage_24Bit		ROUT
@


4.1.5.1
log
@Import from SrcFiler
@
text
@a66 6
        LDRB    R8,[R5,#pd_private_flags]
        TST     R8,#pdf_SupportsYOffset
        MOVNE   R8,#0                   ;supports Y Offset - zero the counter
        MOVEQ   R8,#&80000000           ;does not - set disable flag
        STR     R8,pending_blank_lines

@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a66 6
        LDRB    R8,[R5,#pd_private_flags]
        TST     R8,#pdf_SupportsYOffset
        MOVNE   R8,#0                   ;supports Y Offset - zero the counter
        MOVEQ   R8,#&80000000           ;does not - set disable flag
        STR     R8,pending_blank_lines

@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
