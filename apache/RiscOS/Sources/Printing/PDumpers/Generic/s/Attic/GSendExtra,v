head	1.2;
access;
symbols
	RO_5_07:1.2
	PDumpers-1_37:1.1
	PDumpers-1_36:1.1
	PDumpers-1_35:1.1
	PDumpers-1_34:1.1;
locks; strict;
comment	@# @;


1.2
date	2002.12.17.18.54.43;	author srevill;	state dead;
branches;
next	1.1;

1.1
date	2002.11.15.16.05.23;	author srevill;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Build changes,no code changes.
Took out the bodge of prefixing all the files GOT from the Generic
directory with a G,and replaced it with use of new flag "-J" in objasm.
Improved clean rule in top MakeFile.
Deleted some unused !Mk files.

Version 1.38. Tagged as 'PDumpers-1_38'
@
text
@; Copyright 2002 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > SendExtra

;;-----------------------------------------------------------------------------
;; Common routine for sending the PDumperXY$Extra variable, the routine
;;   attempts to read the variable onto the stack and then GSTran's it,
;;   finally it will spit it out into the file.
;;
;; in   -
;; out  R0 corrupt / -> error
;;-----------------------------------------------------------------------------
                             
sendextra ROUT
        
        Push    "R1-R5,LR"

        SUB     SP,SP,#512              ; allocate a temporary buffer to be used
        MOV     R5,SP

        ADRL	R0,varname              ; -> variable to be spat out
        MOV     R1,R5                   ; first buffer to be filled
        MOV     R2,#256                 ; maximum size of the buffer
        MOV     R3,#0                   ; read the first variable
        MOV     R4,#3                   ;   returning the expanded version
        SWI     XOS_ReadVarVal

        MOVVC   R0,#13
        STRVCB  R0,[R1,R2]              ; terminate the string (with a c/r)

      [ debugStartPage
        BVS     %FT10
        DebugS  StartPage,"Start page extra sequence: ",R5
10
      ]
        
        MOVVC   R0,R5
        ADDVC   R1,R5,#256              ; allocate some buffers to trans into
        MOVVC   R2,#256                 ;   quoting their size
        SWIVC   XOS_GSTrans             ;     convert away baby
        BVS     sendextra_giveup        ; haaargh it went wrong        

        Debug   StartPage,"Length of sequence to send",R2
                                                         
        ADD     R0,R5,#256              ; -> data that has been generated
        PDumper_PrintLengthString R0,R2,R1

sendextra_giveup
        DebugE  StartPage,"Sending extra went howwibly wrong: "

        ADD     SP,SP,#512              ; flatten out the stack
        Pull    "R1-R5,PC"

varname = "$PDumperTitle.$Extra",0
        ALIGN


        END
@


1.1
log
@Renamed generic driver sources
Makefiles rewritten
Converted to use objasm
First pass at 32 bit compatibility.

Version 1.34. Tagged as 'PDumpers-1_34'
@
text
@@

