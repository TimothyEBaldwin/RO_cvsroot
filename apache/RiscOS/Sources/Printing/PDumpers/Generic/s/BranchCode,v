head	4.13;
access;
symbols
	PDumpers-1_46:4.13
	PDumpers-1_45:4.13
	PDumpers-1_44:4.13
	PDumpers-1_43:4.13
	PDumpers-1_42:4.13
	PDumpers-1_41:4.13
	RO_5_07:4.13
	PDumpers-1_40:4.13
	PDumpers-1_39:4.13
	PDumpers-1_38:4.13
	PDumpers-1_33:4.11
	PDumpers-1_32:4.11
	PDumpers-1_31:4.11
	PDumpers-1_30:4.11
	PDumpers-1_29:4.11
	PDumpers-1_28:4.10
	PDumpers-1_27:4.9
	PDumpers-1_26:4.8
	PDumpers-1_25:4.8
	Spin_merge-1_21:4.1.7.4
	PDumpers-1_24:4.7
	PDumpers-1_23:4.6
	PDumpers-1_22:4.5
	dellis_autobuild_BaseSW:4.5
	PDumpers-1_21:4.5
	sbrodie_sedwards_16Mar2000:4.4
	dcotton_autobuild_BaseSW:4.11
	dcotton_MPT2_build_16061999:4.1.7.5
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.5
	Ursula_RiscPC:4.1.7.5.0.4
	nicke_PDumpers-1_21:4.1.7.5
	rthornb_UrsulaBuild-19Aug1998:4.1.7.5
	UrsulaBuild_FinalSoftload:4.1.7.5
	rthornb_UrsulaBuild-12Aug1998:4.1.7.5
	aglover_UrsulaBuild-05Aug1998:4.1.7.5
	rthornb_UrsulaBuild-29Jul1998:4.1.7.5
	rthornb_UrsulaBuild-22Jul1998:4.1.7.5
	hsimons_BOCA-1_2-Release:4.1.7.5
	rthornb_UrsulaBuild-15Jul1998:4.1.7.5
	rthornb_UrsulaBuild-07Jul1998:4.1.7.5
	rthornb_UrsulaBuild-17Jun1998:4.1.7.5
	rthornb_UrsulaBuild-03Jun1998:4.1.7.5
	rthornb_UrsulaBuild-27May1998:4.1.7.5
	rthornb_UrsulaBuild-21May1998:4.1.7.5
	rthornb_UrsulaBuild_01May1998:4.1.7.5
	afrost_NC2_Generic:4.1.7.5
	afrost_Funai01-33:4.1.7.5
	Ursula:4.1.7.5.0.2
	Ursula_bp:4.1.7.5
	Ursula_31Mar1998:4.4
	Spinner_RCA116:4.1.7.5
	Spinner_B20_2:4.1.7.4
	Spinner_19_3:4.1.7.4
	Spinner_B18:4.1.7.4
	Spinner_B17:4.1.7.4
	Spinner_B15:4.1.7.4
	Spinner_B14:4.1.7.4
	Spinner_B13:4.1.7.4
	Spinner_B12:4.1.7.4
	Spin_merge_28May97:4.1.7.3
	Spinner_B10:4.1.7.4
	Spin_merge_16May97:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.5
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.13
date	2002.12.17.18.54.43;	author srevill;	state Exp;
branches;
next	4.12;

4.12
date	2002.11.15.16.05.22;	author srevill;	state dead;
branches;
next	4.11;

4.11
date	2001.09.18.09.25.32;	author mboura;	state Exp;
branches;
next	4.10;

4.10
date	2001.09.04.12.09.10;	author mboura;	state Exp;
branches;
next	4.9;

4.9
date	2001.06.20.15.00.02;	author sbrodie;	state Exp;
branches;
next	4.8;

4.8
date	2001.01.03.16.29.58;	author sbrodie;	state Exp;
branches;
next	4.7;

4.7
date	2000.11.26.11.22.00;	author sbrodie;	state Exp;
branches;
next	4.6;

4.6
date	2000.10.20.09.50.55;	author sbrodie;	state Exp;
branches;
next	4.5;

4.5
date	2000.06.09.11.07.56;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	97.05.28.12.19.55;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	97.05.16.12.47.00;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.17.13.54;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.49.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.49.10;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.10.09;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.30.05;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.33.28;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.04.30.17.17.31;	author scormie;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.05.14.09.41.13;	author jcoxhead;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	97.05.22.10.48.40;	author jcoxhead;	state Exp;
branches;
next	4.1.7.5;

4.1.7.5
date	97.08.19.14.35.16;	author arodger;	state Exp;
branches;
next	;


desc
@@


4.13
log
@Build changes,no code changes.
Took out the bodge of prefixing all the files GOT from the Generic
directory with a G,and replaced it with use of new flag "-J" in objasm.
Improved clean rule in top MakeFile.
Deleted some unused !Mk files.

Version 1.38. Tagged as 'PDumpers-1_38'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > BranchCode

;..............................................................................

; Handle the reason codes being sent from the PDriverDP module to the
; dumper.   We must range check this value and then attempt to
; despatch as required, the strip type is also checked to ensure that
; it is supported.

; in    R11 reason code

BranchCode ROUT
        Push    "lr"
        CLRPSR  I_bit+F_bit,lr           ;Enable IRQs

	DebugEscState BranchCode

	Debug	Calls, "+BranchCode", r11
	Debug	Calls, "strip type", r2

	;AR 14 Aug 1997 this is used to notify that the reason code is not supported unless.
	TEQ	R11,#PDumperReason_Command
	;Raise Not Supported Error
	BEQ	BadPDumperCall

;for OutputDump, check width is multiple of 8 (assumed by newer code)
;ie. prevent old PDriverDP causing crash
        TEQ     R11,#PDumperReason_OutputDump
        BNE     bc_checkw_done
        TST     R3,#7
        BEQ     bc_checkw_done
        ADRL	R0,bc_old_pdriverdp
        SETV
        Pull	"pc"

bc_checkw_done
	;Get the strip type or make one up if required (strip type present for all pdumper
	;reasons but SetDriver and MiscOp)
	MOV	r9, r2
	TEQ	r11, #PDumperReason_SetDriver
 	TEQNE	r11, #PDumperReason_MiscOp
        MOVEQ   r9, #0

        CMP     R9, #StripType_MAX
        BCS     BadStripType            ;Complain about the bad strip type

        MOV     R10,#(%10-%00)/4
        CMP     R11,R10                 ;Is the reason code valid?
	BCS	BadPDumperCall          ;Complain about an invalid operation

	;Check that escape is enabled
	Push	"r0-r2"
	MOV	r0, #229
	MOV	r1, #0
	MOV	r2, #255
	SWI	XOS_Byte
	TEQ	r1, #0
	Pull	"r0-r2"
	BNE	EscDisabled             ; just returns an error

	;Check reentrancy (must be last test, or the bit will get set in error).
	;JRC Mon 28th April 1997
	Push	"r0, r1"
	ADR	r1, pd_error_flag_set
	LDR	r0, [r1]
	TST	r0, #1 :SHL: 2
	ORREQ	r0, r0, #1 :SHL: 2	;if the bit is clear, set it
	STREQ	r0, [r1]
	Pull	"r0, r1"
	BNE	InUse			;otherwise, it's a mistake

        JumpAddress lr, unthread, forward
        Push    "r11"                   ; Preserve r11 as required by PRM3-664 and needed by UpCall in PDriverDP
	Debug	Calls, "r9 (strip type) X r10 (8) + r11 (reason)", r9, r10, r11
        MLA	r11, r9, r10, r11	;Index via n*strip type, where n is the number of jumps
        Debug	Calls, "taking table entry", r11
        ADD	pc, pc, r11, LSL #2
	&	0			;filler
00
        B       SetDriver_Monochrome
        B       OutputStrip_Monochrome
        B       ColourSet_Monochrome
        B       StartPage_Monochrome
        B       EndPage_Monochrome
        B       StartJob_Monochrome
        B       AbortJob_Monochrome
        B       MiscOp_Monochrome
10
        B       SetDriver_Grey
        B       OutputStrip_Grey
        B       ColourSet_Grey
        B       StartPage_Grey
        B       EndPage_Grey
        B       StartJob_Grey
        B       AbortJob_Grey
        B       MiscOp_Grey

        B       SetDriver_Colour256
        B       OutputStrip_Colour256
        B       ColourSet_Colour256
        B       StartPage_Colour256
        B       EndPage_Colour256
        B       StartJob_Colour256
        B       AbortJob_Colour256
        B       MiscOp_Colour256

	B	SetDriver_Multi
	B	OutputStrip_Multi
	B	ColourSet_Multi
	B	StartPage_Multi
	B	EndPage_Multi
	B	StartJob_Multi
	B	AbortJob_Multi
	B	MiscOp_Multi

	B	SetDriver_16Bit
	B	OutputStrip_16Bit
	B	ColourSet_16Bit
	B	StartPage_16Bit
	B	EndPage_16Bit
	B	StartJob_16Bit
	B	AbortJob_16Bit
	B	MiscOp_16Bit

	B	SetDriver_24Bit
	B	OutputStrip_24Bit
	B	ColourSet_24Bit
	B	StartPage_24Bit
	B	EndPage_24Bit
	B	StartJob_24Bit
	B	AbortJob_24Bit
	B	MiscOp_24Bit

unthread
        Pull    "r11"                   ; restore reason code for use by the UpCall in PDriverDP
	Push	"r0, r1"
	ADR	r1, pd_error_flag_set
	LDR	r0, [r1]
	BIC	r0, r0, #1 :SHL: 2	;clear the reentrancy bit
	STR	r0, [r1]
	Pull	"r0, r1"

	DebugIf	VC, Calls, "-BranchCode"
	DebugE	Calls, "-BranchCode"
	;NB flags preserved from subroutine
	Pull	"pc"

        GET     24Bit.s

;..............................................................................

;rare error, not internationalised
bc_old_pdriverdp
        DCD     0
        DCB     "$PDumperTitle needs newer PDriverDP (illegal strip width)",0
        ALIGN

InUse
        ADR     R0,ErrorBlock_PDumperInUse
        B       %FT95

BadStripType
        ADR     R0,ErrorBlock_PDumperBadStrip
        B       %FT95

EscDisabled
	ADR	R0,ErrorBlock_PDumperEscDisabled
	B	%FT95

BadPDumperCall
        ADR     R0,ErrorBlock_PDumperBadCall
95
        Push    "R1,LR"
        ADDR    R1,title                ;->Title string
        SWI     XPDumper_LookupError
        Pull    "R1,LR"
        DebugE	Calls, "-BranchCode"
        Pull	"pc"


        MakeInternatErrorBlock	PDumperInUse,,InUse
        MakeInternatErrorBlock	PDumperBadCall,,BadCall
        MakeInternatErrorBlock	PDumperBadStrip,,BadStrp
        MakeInternatErrorBlock	PDumperEscDisabled,,NoEsc

        END
@


4.12
log
@Renamed generic driver sources
Makefiles rewritten
Converted to use objasm
First pass at 32 bit compatibility.

Version 1.34. Tagged as 'PDumpers-1_34'
@
text
@d149 1
a149 1
        Pull    "r11"                   ; restore reason code for use by the UpCall in PDriverDP 
d162 1
a162 1
        GET     s.24Bit
@


4.11
log
@Summarry:
Fix of bug #5159. (Interim)
Detail:
At the start of a print job, now checks for an outstanding OS_GBPB error. If there is, then the printer has probably been left with an incomplete raster line in its input buffer. The generic start page code will then send 64K of ASCII NULL to flush it.
PDumperLJ.s.StartPage now uses the generic code (whish was identical apart from a few debugging lines).
Admin:
Tested with HP 610C using the 550C driver.

Version 1.29. Tagged as 'PDumpers-1_29'
@
text
@@


4.10
log
@PDumperCX corrupting r11
Detail:
PDumperCX was corrupting r11, the reason code. This is now needed by the page counting upcall. Since the fix is in Generic.s.BranchCOde it will apply to a number of other drivers.
Admin:
Tested for PDriverCX on RPC. The UpCall now provides the expected

Version 1.28. Tagged as 'PDumpers-1_28'
@
text
@d73 1
a73 1
	BNE	EscDisabled
@


4.9
log
@  Fixed some stack imbalances that had gone undetected ... until we shipped
    the source code to third parties who actually tested it.
Admin:
  Probably ought to build correct code.


Version 1.27. Tagged as 'PDumpers-1_27'
@
text
@d87 1
d149 1
@


4.8
log
@  Merge of Spinner branch.
Detail:
  All Makefiles now export the PDumper header.
Admin:
  Fixes from the spinner branch have been merged in.
  Should now build in the build system.

Version 1.25. Tagged as 'PDumpers-1_25'
@
text
@a34 2
	Push	"lr"

@


4.7
log
@  32-bit fixes.
Detail:
  Some routines using EXITS needed R14 as a result register.
    These routines now work in 32-bit modes.
  Fixed ADR lr, unthread to be JumpAddress lr, unthread so that
    26-bit builds work when the routine jumped to uses EntryS.
Admin:
  Built 26-bit and 32-bit versions - untested,

Version 1.24. Tagged as 'PDumpers-1_24'
@
text
@d35 7
@


4.6
log
@  Fixed some macro problems.
Detail:
  One function was using R14 as a function result register, but R14 is corrupted
    by EXITS in 32-bit builds.  Some faffing around added to get around this.
  Some minor improvements to remove No32bitCode conditionals - the Generic26 and
    Generic32 macros can sort out the differences so this modules invokes those
    macros (CLRPSR, TOGPSRR, WritePSRc) instead.
  Fast service call table added (not the broken one on the Ursula branch)
Admin:
  Built, not tested.

Version 1.23. Tagged as 'PDumpers-1_23'
@
text
@d81 1
a81 3
	ADR	lr, unthread
	TEQ     pc, pc
	ORRNE	lr, lr, #SVC_mode	;must be in SVC26 mode when return
@


4.5
log
@32-bit compatible.

Version 1.21. Tagged as 'PDumpers-1_21'
@
text
@a26 2
    [ No32bitCode
        TEQP	PC,#SVC_mode            ;Enable IRQs (26-mode module)
d28 1
a28 6
    |
        Push    "lr"
        mrs    ,lr, CPSR
        BIC     lr, lr, #I32_bit+F32_bit
        msr    ,CPSR_c, lr
    ]
@


4.4
log
@Spinner branch taken
@
text
@d19 2
a20 2
; Handle the reason codes being sent from the PDriverDP module to the 
; dumper.   We must range check this value and then attempt to 
d27 9
a35 1
        TEQP	PC,#SVC_mode            ;Enable IRQs
a41 2
	Push	"lr"

d89 2
a90 1
	ORR	lr, lr, #SVC_mode	;must be in SVC mode
d189 3
a191 3
        Push    "R1,LR"                 
        ADDR    R1,title                ;->Title string 
        SWI     XPDumper_LookupError     
@


4.3
log
@Spinner branch merged
@
text
@d27 1
a27 1
        TEQ     PC,#SVC_mode            ;Enable IRQs
d32 1
d47 6
a52 3
        TEQ     R11,#PDumperReason_SetDriver
        MOVEQ   R9,#0
        ANDNE   R9,R2,#&FF              ;Get the strip type or make one up if required
d54 1
a54 1
        CMP     R9,#StripType_MAX
d84 1
d86 1
d107 1
a107 1
                
d116 27
@


4.2
log
@Version Spin_merge taken
@
text
@d27 3
d31 1
d33 1
a33 1
        TEQ     PC,#SVC_mode            ;Enable IRQs
d41 1
a41 1
        ADR     R0,bc_old_pdriverdp
d43 1
a43 1
        MOV     PC,LR
d52 1
a52 1
                     
d55 28
a82 3
        MLACC   R11,R9,R10,R11          ;If it is then index via n*strip type, where n is the number of jumps
        ADDCC   PC,PC,R11,LSL #2     
        B       BadPDumperCall          ;Complain about an invalid operation
d111 13
a125 2
   

d134 4
d142 4
d152 4
a155 1
        Pull    "R1,PC"
d157 4
a160 2
        MakeInternatErrorBlock PDumperBadCall,,BadCall
        MakeInternatErrorBlock PDumperBadStrip,,BadStrp
@


4.1
log
@Initial revision
@
text
@d31 11
d87 6
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a30 11
;for OutputDump, check width is multiple of 8 (assumed by newer code)
;ie. prevent old PDriverDP causing crash
        TEQ     R11,#PDumperReason_OutputDump
        BNE     bc_checkw_done
        TST     R3,#7
        BEQ     bc_checkw_done
        ADR     R0,bc_old_pdriverdp
        SETV
        MOV     PC,LR

bc_checkw_done
a75 6

;rare error, not internationalised
bc_old_pdriverdp
        DCD     0
        DCB     "$PDumperTitle needs newer PDriverDP (illegal strip width)",0
        ALIGN
@


4.1.7.2
log
@  Introduce 'PDumper in use' error, reported if PDumper is reentered (in the
foreground).
   Introduce 'GBPB error' bit, suppresses calls to OS_GBPB while set.
   Use local error block for MessageTrans.
@
text
@a26 1
        TEQ     PC,#SVC_mode            ;Enable IRQs
a27 1
	Debug	Calls, "+BranchCode", r11
d29 1
a29 1
	Push	"lr"
d39 1
a39 1
        Pull	"pc"
d48 1
a48 1

d51 3
a53 18
	BCS	BadPDumperCall          ;Complain about an invalid operation

	;Check reentrancy (must be last test, or the bit will get set in error).
	;JRC Mon 28th April 1997
	Push	"r0, r1"
	ADR	r1, pd_error_flag_set
	LDR	r0, [r1]
	TST	r0, #1 :SHL: 2
	ORREQ	r0, r0, #1 :SHL: 2	;if the bit is clear, set it
	STREQ	r0, [r1]
	Pull	"r0, r1"
	BNE	InUse			;otherwise, it's a mistake

	ADR	lr, unthread
	ORR	lr, lr, #SVC_mode	;must be in SVC mode
        MLA	r11, r9, r10, r11	;Index via n*strip type, where n is the number of jumps
        ADD	pc, pc, r11, LSL #2
	&	0			;filler
d82 1
a82 11
unthread
	Push	"r0, r1"
	ADR	r1, pd_error_flag_set
	LDR	r0, [r1]
	BIC	r0, r0, #1 :SHL: 2	;clear the reentrancy bit
	STR	r0, [r1]
	Pull	"r0, r1"

	Debug	Calls, "-BranchCode"
	;NB flags preserved from subroutine
	Pull	"pc"
d84 1
a84 1
        GET     s.24Bit
a93 4
InUse
        ADR     R0,ErrorBlock_PDumperInUse
        B       %FT95

d104 1
a104 3
        Pull    "R1,LR"
        DebugE	Calls, "-BranchCode"
        Pull	"pc"
a105 1
        MakeInternatErrorBlock PDumperInUse,,InUse
@


4.1.7.3
log
@   Return an error EscDisabled if any PDumper is called with escape disabled.
   Check the GBPB error flag before checking the error-suppress flag.
   Copy the error block returned by OS_GBPB so FileSwitch doesn't overwrite it.
@
text
@a28 2
	DebugEscState BranchCode

d39 1
a39 1
        ADRL	R0,bc_old_pdriverdp
a54 10
	;Check that escape is enabled
	Push	"r0-r2"
	MOV	r0, #229
	MOV	r1, #0
	MOV	r2, #255
	SWI	XOS_Byte
	TEQ	r1, #0
	Pull	"r0-r2"
	BNE	EscDisabled

d107 1
a107 2
	DebugIf	VC, Calls, "-BranchCode"
	DebugE	Calls, "-BranchCode"
a128 4
EscDisabled
	ADR	R0,ErrorBlock_PDumperEscDisabled
	B	%FT95

d139 3
a141 5

        MakeInternatErrorBlock	PDumperInUse,,InUse
        MakeInternatErrorBlock	PDumperBadCall,,BadCall
        MakeInternatErrorBlock	PDumperBadStrip,,BadStrp
        MakeInternatErrorBlock	PDumperEscDisabled,,NoEsc
@


4.1.7.4
log
@   Unbreak 15- and 24-bit strip-type code.
@
text
@d27 1
a27 1
        TEQP	PC,#SVC_mode            ;Enable IRQs
a31 1
	Debug	Calls, "strip type", r2
d46 3
a48 6
	;Get the strip type or make one up if required (strip type present for all pdumper
	;reasons but SetDriver and MiscOp)
	MOV	r9, r2
	TEQ	r11, #PDumperReason_SetDriver
 	TEQNE	r11, #PDumperReason_MiscOp
        MOVEQ   r9, #0
d50 1
a50 1
        CMP     R9, #StripType_MAX
a79 1
	Debug	Calls, "r9 (strip type) X r10 (8) + r11 (reason)", r9, r10, r11
a80 1
        Debug	Calls, "taking table entry", r11
d101 1
a101 1

a109 27

	B	SetDriver_Multi
	B	OutputStrip_Multi
	B	ColourSet_Multi
	B	StartPage_Multi
	B	EndPage_Multi
	B	StartJob_Multi
	B	AbortJob_Multi
	B	MiscOp_Multi

	B	SetDriver_16Bit
	B	OutputStrip_16Bit
	B	ColourSet_16Bit
	B	StartPage_16Bit
	B	EndPage_16Bit
	B	StartJob_16Bit
	B	AbortJob_16Bit
	B	MiscOp_16Bit

	B	SetDriver_24Bit
	B	OutputStrip_24Bit
	B	ColourSet_24Bit
	B	StartPage_24Bit
	B	EndPage_24Bit
	B	StartJob_24Bit
	B	AbortJob_24Bit
	B	MiscOp_24Bit
@


4.1.7.5
log
@Added handler for Command as the general case is no support
@
text
@a35 8
	;AR 14 Aug 1997 this is used to notify that the reason code is not supported unless.
	TEQ	R11,#PDumperReason_Command
	BNE	not_command
	;Raise Not Supported Error
	B	BadPDumperCall
	Pull	"pc"
not_command

@


4.1.5.1
log
@Import from SrcFiler
@
text
@a30 11
;for OutputDump, check width is multiple of 8 (assumed by newer code)
;ie. prevent old PDriverDP causing crash
        TEQ     R11,#PDumperReason_OutputDump
        BNE     bc_checkw_done
        TST     R3,#7
        BEQ     bc_checkw_done
        ADR     R0,bc_old_pdriverdp
        SETV
        MOV     PC,LR

bc_checkw_done
a75 6

;rare error, not internationalised
bc_old_pdriverdp
        DCD     0
        DCB     "$PDumperTitle needs newer PDriverDP (illegal strip width)",0
        ALIGN
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a30 11
;for OutputDump, check width is multiple of 8 (assumed by newer code)
;ie. prevent old PDriverDP causing crash
        TEQ     R11,#PDumperReason_OutputDump
        BNE     bc_checkw_done
        TST     R3,#7
        BEQ     bc_checkw_done
        ADR     R0,bc_old_pdriverdp
        SETV
        MOV     PC,LR

bc_checkw_done
a75 6

;rare error, not internationalised
bc_old_pdriverdp
        DCD     0
        DCB     "$PDumperTitle needs newer PDriverDP (illegal strip width)",0
        ALIGN
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
