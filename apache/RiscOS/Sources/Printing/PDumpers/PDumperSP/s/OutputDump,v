head	4.4;
access;
symbols
	PDumpers-1_46:4.4
	PDumpers-1_45:4.4
	PDumpers-1_44:4.4
	PDumpers-1_43:4.4
	PDumpers-1_42:4.4
	PDumpers-1_41:4.4
	RO_5_07:4.4
	PDumpers-1_40:4.4
	PDumpers-1_39:4.4
	PDumpers-1_38:4.4
	PDumpers-1_37:4.3
	PDumpers-1_36:4.3
	PDumpers-1_35:4.3
	PDumpers-1_33:4.2
	PDumpers-1_32:4.2
	PDumpers-1_31:4.2
	PDumpers-1_30:4.2
	PDumpers-1_29:4.2
	PDumpers-1_27:4.2
	PDumpers-1_26:4.2
	PDumpers-1_25:4.2
	Spin_merge-1_21:4.1.7.1
	PDumpers-1_24:4.2
	PDumpers-1_23:4.2
	PDumpers-1_22:4.2
	dellis_autobuild_BaseSW:4.2
	PDumpers-1_21:4.2
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.2
	dcotton_MPT2_build_16061999:4.1.7.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.1
	Ursula_RiscPC:4.1.7.1.0.6
	nicke_PDumpers-1_21:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1.7.1
	UrsulaBuild_FinalSoftload:4.1.7.1
	rthornb_UrsulaBuild-12Aug1998:4.1.7.1
	aglover_UrsulaBuild-05Aug1998:4.1.7.1
	rthornb_UrsulaBuild-29Jul1998:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.7.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1.7.1
	rthornb_UrsulaBuild-17Jun1998:4.1.7.1
	rthornb_UrsulaBuild-03Jun1998:4.1.7.1
	rthornb_UrsulaBuild-27May1998:4.1.7.1
	rthornb_UrsulaBuild-21May1998:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Ursula:4.1.7.1.0.4
	Ursula_bp:4.1.7.1
	Ursula_31Mar1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spin_merge_28May97:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_16May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2002.12.17.18.54.55;	author srevill;	state Exp;
branches;
next	4.3;

4.3
date	2002.11.15.16.05.35;	author srevill;	state Exp;
branches;
next	4.2;

4.2
date	2000.06.09.11.08.06;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.49.30;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.49.30;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.14.31;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.31.58;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.35.20;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Build changes,no code changes.
Took out the bodge of prefixing all the files GOT from the Generic
directory with a G,and replaced it with use of new flag "-J" in objasm.
Improved clean rule in top MakeFile.
Deleted some unused !Mk files.

Version 1.38. Tagged as 'PDumpers-1_38'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > OutputDump

        GET     ^.Generic.OutputDump.s

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; in:   r0  -> strip
;       r3   = dump width (in bytes)
;       r4   = dump height
;       r5   = row width in bytes ( >= r3 )
;       r7  -> job workspace
;
; Output strip as monochrome data to device.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

output_mono_sprite ROUT

        MOV     R3,R5           ;Get the byte width of the image correct

output_mono_altentry
        EntryS

        LDRB    R7,[R7,#pd_private_flags]
        Debug   Dump,"PDumper byte contains",R7

        ADD     R1,R3,#3       ;Get the width of the sprite in words
        BIC     R1,R1,#3
        PDumper_PrintBinaryWord R1,R14
        PDumper_PrintBinaryWord R4,R14
10
        SWI     XOS_ReadEscapeState
        EXIT    CS              ;Return if escape pressed

        Push    "R0,R3"
        PDumper_PrintLengthString R0,R3,R14

        LDR     R3,[SP,#4]
15      ANDS    R0,R3,#3        ;Get remaining bytes to send
        BEQ     %FT20

        MOV     R0,#0
        PDumper_OutputReg R0    ;Pad with a null byte
        ADD     R3,R3,#1
        B       %BT15           ;Loop back until finished
20
        Pull    "R0,R3"

        ADD     R0,R0,R5
        SUBS    R4,R4,#1
        BNE     %BT10           ;Loop back until all scan lines checked

        EXITS


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; in:   r0  -> strip
;       r3   = dump width
;       r4   = dump height
;       r5   = row width in bytes ( >= r3 )
;       r7  -> job workspace
;
; Output and 8BPP strip for the current device, this is done by converting
; the data from the 8BPP data to the 1BPP data suitable for printing via
; the monochrome output routines, we need not attempt to perform bit
; reversal.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

output_colour_sprite ROUT
        B       BadStripType    ;Complain about invalid strip type

output_grey_sprite ROUT

        Push    "R0-R2,R4,R6-R8,LR"

        Debug   Dump,"Converting to monochrome"
        Debuga  Dump,"At",R0
        Debuga  Dump,", Width",R3
        Debuga  Dump,", Height",R4
        Debuga  Dump,", Byte width",R5
        Debug   Dump,", Workspace at",R7

        MOV     R1,R0           ;->Scan line to convert
        MOV     R2,#1:SHL:0     ;Bit to modify in source data
10
        Push    "R1,R3-R5"      ;Store the byte width of the line

        MOV     R4,#0           ;Reset the pixel to write
        MOV     R6,#0
15
        SUBS    R3,R3,#1        ;Decrease the pixel count along the scan line
        BLT     %FT20           ;If <min width then exit

        LDRB    R7,[R1],#1      ;Get a byte from the source and check to see if K bit set
        TST     R7,#1:SHL:3
        ORRNE   R4,R4,R2,LSL R6

        ADD     R6,R6,#1
        ANDS    R6,R6,#7
        STREQB  R4,[R0],#1      ;Write a destination byte if finished a complete one
        MOVEQ   R4,#0           ;...and then reset the byte to write
        B       %BT15
20
        ANDS    R6,R6,#7
        STRNEB  R4,[R0],#1      ;Store the byte if bit index >0

        ADD     R0,R0,#3
        BIC     R0,R0,#3        ;Align to a word boundary (nb - pad bytes contain junk!)

        Pull    "R1,R3-R5"
        ADD     R1,R1,R5        ;Adjust the line pointer
        SUBS    R4,R4,#1
        BGT     %BT10           ;Loop back until all bits tested

        ADD     R3,R3,#7
        MOV     R3,R3,LSR #3    ;Ensure a nice byte width of the scan
        ADD     R5,R3,#3
        BIC     R5,R5,#3        ;Word align the width of the strip

        Pull    "R0-R2,R4,R6-R8,LR"
        B       output_mono_altentry

        END
@


4.3
log
@Renamed generic driver sources
Makefiles rewritten
Converted to use objasm
First pass at 32 bit compatibility.

Version 1.34. Tagged as 'PDumpers-1_34'
@
text
@d17 1
a17 1
        GET     ^.Generic.GOutputDump.s
@


4.2
log
@32-bit compatible.

Version 1.21. Tagged as 'PDumpers-1_21'
@
text
@d17 1
a17 1
        GET     ^.Generic.s.OutputDump
@


4.1
log
@Initial revision
@
text
@d18 1
a18 1
        
d32 1
a32 2
              
        Push    "LR"
d34 4
a37 3
                  
output_mono_altentry ROUT
                  
d47 1
a47 1
        Pull    "PC",CS         ;Return if escape pressed
d55 1
a55 1
                    
d65 1
a65 1
        BNE     %BT10           ;Loop back until all scan lines checked       
d67 1
a67 1
        Pull    "PC",,^
d98 1
a98 1
       
d103 1
a103 1
        
d109 1
a109 1
        
d111 1
a111 1
        TST     R7,#1:SHL:3     
d126 1
a126 1
        Pull    "R1,R3-R5"      
d130 1
a130 1
         
d136 1
a136 1
        Pull    "R0-R2,R4,R6-R8"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
