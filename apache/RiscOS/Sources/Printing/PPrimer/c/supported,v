head	4.4;
access;
symbols
	PPrimer-0_30:4.4
	PPrimer-0_29:4.4
	PPrimer-0_28:4.4
	PPrimer-0_27:4.4
	PPrimer-0_26:4.4
	PPrimer-0_25:4.4
	PPrimer-0_24:4.3
	PPrimer-0_23:4.3
	dellis_autobuild_BaseSW:4.3
	PPrimer-0_22:4.3
	PPrimer-0_21:4.3
	PPrimer-0_20:4.3
	sbrodie_sedwards_16Mar2000:4.3
	PPrimer-0_19:4.3
	PPrimer-0_18:4.3
	PPrimer-0_17:4.2
	PPrimer-0_16:4.2
	dcotton_autobuild_BaseSW:4.3
	PPrimer-0_15-1_1_2_3:4.1.7.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.3
	Ursula_RiscPC:4.1.7.3.0.4
	PPrimer-0_15-1_1_2_2:4.1.7.3
	FunaiNC2_PPrimer-0_15:4.1.7.3
	FunaiNC2_PPrimer-0_14:4.1.7.3
	rthornb_UrsulaBuild-19Aug1998:4.1.7.3
	UrsulaBuild_FinalSoftload:4.1.7.3
	rthornb_UrsulaBuild-12Aug1998:4.1.7.3
	aglover_UrsulaBuild-05Aug1998:4.1.7.3
	rthornb_UrsulaBuild-29Jul1998:4.1.7.3
	rthornb_UrsulaBuild-22Jul1998:4.1.7.3
	hsimons_BOCA-1_2-Release:4.1.7.3
	rthornb_UrsulaBuild-15Jul1998:4.1.7.3
	rthornb_UrsulaBuild-07Jul1998:4.1.7.3
	rthornb_UrsulaBuild-17Jun1998:4.1.7.3
	rthornb_UrsulaBuild-03Jun1998:4.1.7.3
	rthornb_UrsulaBuild-27May1998:4.1.7.3
	rthornb_UrsulaBuild-21May1998:4.1.7.3
	rthornb_UrsulaBuild_01May1998:4.1.7.3
	afrost_NC2_Generic:4.1.7.3
	afrost_Funai01-33:4.1.7.3
	Ursula:4.1.7.3.0.2
	Ursula_bp:4.1.7.3
	Ursula_31Mar1998:4.1
	Spinner_RCA116:4.1.7.3
	Spinner_B20_2:4.1.7.3
	Spinner_19_3:4.1.7.3
	Spinner_B18:4.1.7.3
	Spinner_B17:4.1.7.3
	Spinner_B15:4.1.7.3
	Spinner_B14:4.1.7.3
	Spinner_B13:4.1.7.3
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.3
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.4
date	2002.02.05.13.41.56;	author mboura;	state Exp;
branches;
next	4.3;

4.3
date	99.12.09.15.48.56;	author dcotton;	state Exp;
branches;
next	4.2;

4.2
date	99.09.30.10.55.50;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.21.11.19.10;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.21.11.19.10;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.44.23;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.06.09.13.51.29;	author scormie;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.06.11.10.06.39;	author scormie;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Changing printer driver no longer always resets connection to parallel.
Detail:
Printer$Path is only changed if Printer$Path == PrinterType$1 thus ensuring that fastparallel is dealt with correctly, but without upsetting other printer connections, notably USB.
Misleading comments that confused _kernel_oserror* with _kernel_oserror and 'defined' with 'declared' fixed.
Admin:
Tested on DSL 4000

Version 0.25. Tagged as 'PPrimer-0_25'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*----------------------------------------------------------------------*/
/*    Filename    : c.supported                                       	*/
/*    Author	  : R.W.Buckley						*/
/*    Date        : Tue 28th March 1995					*/
/*    Description : Look at the supported file and obtain filename for  */
/*    		    printer definition file. Load this file into memory */
/*    Modification history:    	    		       			*/
/*    		   							*/
/*    03/05/95 RWB, If printer number found in CMOS is not in the file  */
/*    	      	    Supported, configure for no printer and do not      */
/* 		    report an error. The supported file may be on the   */
/* 		    server.   	     	 	   	       	  	*/
/*    		   							*/
/*----------------------------------------------------------------------*/

#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#include "kernel.h"
#include "swis.h"
#include "constants.h"
#include "cmos.h"
#include "file.h"
#include "text.h"

#include "Debuglib/Debuglib.h"

extern _kernel_swi_regs reg;	 /* Declared in main */
extern _kernel_oserror *err; 	 /* Error block pointer defined in main */

/*----------------------------------------------------------------------
    Name : supported_process_line

    Description : This function parses a line of characters extracting
    		  the printer id number, printer name and two printer
    		  definition filenames. A # character identified a
    		  comment and all characters after this are ignored.
    		  The printer name is enclosed in "s to allow space to
    		  be included in the name.

    Dependencies : constants.h
    		   malloc, atoi, ... - stdlib.h;
    		   strncpy 	     - string.h;

    File format : <Printer id> "<Printer name>" <FilenameBW> <FilenameC>

    Parameters : s_line - line of text to be parsed
    	       	 retuns - printer structure.
----------------------------------------------------------------------*/

static _kernel_oserror *supported_process_line(char *s_line, int i_colour, char **s_filename)
{
  char *start;	      	 /* Start of line (missing leading spaces) */
  int count;	      	 /* Number of characters to be copied */

  dprintf(("", "supported_process_line()\n"));

  /* Printer name is in quotes, look for its start */
  count = 0;
  while (*(s_line+count) != '"' && *(s_line+count) != '\n') count++;
  if (*(s_line+count) == '\n') return error_construct("Err_ReadSupport");

  /* Found the start of name, move to end of name */
  start = s_line + count + 1;         /* Point character after " */
  while (*(start+count) != '"' && *(start+count) != '\n') count++;
  if (*(start+count) == '\n') return error_construct("Err_ReadSupport");

  /* Now skip leading spaces before 1st filename */
  start = start + count + 1;
  count = 0;
  while (*(start+count) == ' ' || *(start+count) == '\t') count++;
  if (*(start+count) == '\n' || *(start+count) == '#') return error_construct("Err_ReadSupport");

  /* Found the start of b&w filename, count characters until end of filename */
  start = start + count;               /* Point character after " */
  count = 0;
  while (!isspace(*(start+count)) && *(start+count) != '#') count++;
  /* Don't check for \n or # here */

  if (i_colour == 1)
  {
    /* Skip leading spaces before 2nd filename */
    start = start + count;
    count = 0;
    while (*(start+count) == ' ' || *(start+count) == '\t') count++;
    if (*(start+count) == '\n' || *(start+count) == '#') return error_construct("Err_Colour");

    /* Found the start of filename col, count characters until end of filename */
    start = start + count;               /* Point character after " */
    count = 0;
    while (!isspace(*(start+count)) && *(start+count) != '#') count++;
  }

  /* Allocate enough space for b&w path and filename */
  *s_filename = (char *)malloc(strlen(PATH_DEFN)+count+1);   /* Allow space for \0 */
  if (*s_filename == NULL) return error_construct("Err_Memory");

  /* Copy filename into allocated space */
  strcpy(*s_filename, PATH_DEFN);
  strncat(*s_filename, start, count);
  *(*s_filename+strlen(PATH_DEFN)+count) = '\0';
  return NULL; /* Searching complete, return no error status */
}


/*----------------------------------------------------------------------
    Name : supported_find_filename

    Description : returns the filename of the printer definition file
    		  required

    Dependencies : file_load - file.h

    Parameters :
----------------------------------------------------------------------*/
static _kernel_oserror *supported_find_filename(int i_printer, int i_colour, char **s_filename)
{
  int  i_size;             /* Size of loaded file */
  char *m_supported;       /* Pointer to block of memory containing file */
  int  i_matched= 0;	   /* Pointer to line where text is matched */
  int  i_offset = 0;       /* Offset to start of next line */

  dprintf(("", "supported_find_filename()\n"));

  err = file_load(FILENAME_SUPPORTED, 0, &m_supported, &i_size); /* Load supported file into memory */
  if (err != NULL) return err;

  /* Default to no filename. */
  *s_filename = NULL;

  do
  {
    i_matched=text_match_line("p:", m_supported,i_size,&i_offset);
    if (atoi(m_supported+i_matched) == i_printer)
    {
      err = supported_process_line(m_supported+i_matched, i_colour, s_filename);
      free(m_supported); /* Free up support file memory block */
      ERROR_RETURN(err)

      return NULL;
      break;
    }
  } while (i_matched != -1);

  free(m_supported); /* Free up support file memory block */
  return error_construct("Err_FindPrinter");
}

/*----------------------------------------------------------------------
    Name : supported_get_definition

    Description : Obtains current printer setting and loads associated
    		  printer definition file.

    Dependencies : cmos_get_printer       - cmos.h
    		   supported_find_filename - this file
    		   file_load		  - file.h
    		   strncpy 		  - string.h

    Parameters : m_definition - memory where definition is to be stored
    	       	 i_defn_size  - size of printer definition file
----------------------------------------------------------------------*/
_kernel_oserror *supported_get_definition(char **m_definition, int *i_defn_size)
{
  int i_printer, i_colour, i_paper; /* Current printer id and colour setting */
  char *s_filename = NULL;          /* String containing printer defintion filename and path */

  dprintf(("", "supported_get_definition()\n"));

  err = cmos_get_printer(&i_printer, &i_colour, &i_paper);   /* Find out what printer is currently configured */
  ERROR_RETURN(err);

  dprintf(("", "supported_get_definition(): iprinter is %d\n", i_printer));

  /* Check for no configured printer (0) or special IZipFS code (999). */
  if ((i_printer > 0) && (i_printer < 999)) /* We have a configured printer */
  {
    err = supported_find_filename(i_printer, i_colour, &s_filename); /* Find associated printer definition filename */
    ERROR_RETURN(err);

    if (s_filename == NULL)
    {
      i_printer = 0;
    }
    else
    {
      err = file_load(s_filename, 0, m_definition, i_defn_size);  /* Now load the printer definition file */
      ERROR_RETURN(err);
      free(s_filename);
    }
  }
  if ((i_printer == 0) || (i_printer == 999))
  {
    dprintf(("", "supported_get_definition(): No currently active driver; driver is either 0 (none) or 999 (izipfs). Selecting no currently active driver.\n"));
    reg.r[0] = -1; /* Select no currently active driver */
    err = _kernel_swi(PDriver_SelectDriver,&reg,&reg);
    ERROR_RETURN(err);
  }
  return NULL;
}
@


4.3
log
@	Added DebugLib support.
Detail:
	Added DebugLib support to help debug a fault in the Lazarus build.
	Added stripdepnd support.
	Added MkD and MkRomD targets.
Admin:
	Tested as a softload on a Lazarus box.

Version 0.18. Tagged as 'PPrimer-0_18'
@
text
@d44 1
a44 1
extern _kernel_oserror *err; 	 /* Error block declared in main */
@


4.2
log
@Merged Spinner branch to trunk.

Version 0.16. Tagged as 'PPrimer-0_16'
@
text
@d41 2
d71 2
d138 2
d183 2
d188 2
d209 1
@


4.1
log
@Initial revision
@
text
@d97 1
a97 1
    if (*(start+count) == '\n' || *(start+count) == '#') return error_construct("Err_ReadSupport");
d137 3
d146 1
a148 1
      free(m_supported); /* Free up support file memory block */
d155 1
a155 1
  return NULL;
d180 2
a181 1
  if (i_printer > 0) /* We have a configured printer */
d197 1
a197 1
  if (i_printer == 0)
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Return correct errors when configured printer number is not found and
when colour is selected for a monochrome printer.

No longer fails to initialise when configured parameters are invalid.
@
text
@d97 1
a97 1
    if (*(start+count) == '\n' || *(start+count) == '#') return error_construct("Err_Colour");
a136 3
  /* Default to no filename. */
  *s_filename = NULL;

a142 1
      free(m_supported); /* Free up support file memory block */
d145 1
d152 1
a152 1
  return error_construct("Err_FindPrinter");
@


4.1.7.3
log
@Disregard printer code of 999 (reserved for Zip drive).
@
text
@d180 1
a180 2
  /* Check for no configured printer (0) or special IZipFS code (999). */
  if ((i_printer > 0) && (i_printer < 999)) /* We have a configured printer */
d196 1
a196 1
  if ((i_printer == 0) || (i_printer == 999))
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
