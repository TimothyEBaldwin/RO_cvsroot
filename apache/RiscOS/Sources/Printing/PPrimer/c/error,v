head	4.2;
access;
symbols
	PPrimer-0_30:4.2
	PPrimer-0_29:4.2
	PPrimer-0_28:4.2
	PPrimer-0_27:4.2
	PPrimer-0_26:4.2
	PPrimer-0_25:4.2
	PPrimer-0_24:4.1
	PPrimer-0_23:4.1
	dellis_autobuild_BaseSW:4.1
	PPrimer-0_22:4.1
	PPrimer-0_21:4.1
	PPrimer-0_20:4.1
	sbrodie_sedwards_16Mar2000:4.1
	PPrimer-0_19:4.1
	PPrimer-0_18:4.1
	PPrimer-0_17:4.1
	PPrimer-0_16:4.1
	dcotton_autobuild_BaseSW:4.1
	PPrimer-0_15-1_1_2_3:4.1.7.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.1
	Ursula_RiscPC:4.1.7.1.0.6
	PPrimer-0_15-1_1_2_2:4.1.7.1
	FunaiNC2_PPrimer-0_15:4.1.7.1
	FunaiNC2_PPrimer-0_14:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1.7.1
	UrsulaBuild_FinalSoftload:4.1.7.1
	rthornb_UrsulaBuild-12Aug1998:4.1.7.1
	aglover_UrsulaBuild-05Aug1998:4.1.7.1
	rthornb_UrsulaBuild-29Jul1998:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.7.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1.7.1
	rthornb_UrsulaBuild-17Jun1998:4.1.7.1
	rthornb_UrsulaBuild-03Jun1998:4.1.7.1
	rthornb_UrsulaBuild-27May1998:4.1.7.1
	rthornb_UrsulaBuild-21May1998:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Ursula:4.1.7.1.0.4
	Ursula_bp:4.1.7.1
	Ursula_31Mar1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.2
date	2002.02.05.13.41.56;	author mboura;	state Exp;
branches;
next	4.1;

4.1
date	96.11.21.11.19.05;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.21.11.19.05;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.44.16;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Changing printer driver no longer always resets connection to parallel.
Detail:
Printer$Path is only changed if Printer$Path == PrinterType$1 thus ensuring that fastparallel is dealt with correctly, but without upsetting other printer connections, notably USB.
Misleading comments that confused _kernel_oserror* with _kernel_oserror and 'defined' with 'declared' fixed.
Admin:
Tested on DSL 4000

Version 0.25. Tagged as 'PPrimer-0_25'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*----------------------------------------------------------------------*/
/*    Filename    : c.error	                                       	*/
/*    Author	  : R.W.Buckley						*/
/*    Date        : Mon 20th February 1995				*/
/*    Description :      						*/
/*    Modification history:    	    		       			*/
/*    		   							*/
/*----------------------------------------------------------------------*/

/* This array is accessed by the error i_numbers in convert.h, minus 1 */

#include <string.h>
#include <stdlib.h>

#include "kernel.h"
#include "swis.h"

#include "constants.h"

extern _kernel_swi_regs reg; /* Global set of registers to use */
extern _kernel_oserror *err; /* Error block pointer */

/*----------------------------------------------------------------------
    Name : error_construct

    Description :

    Dependencies :

    Parameters :
----------------------------------------------------------------------*/
_kernel_oserror *error_construct (char *s_token)
{
  static _kernel_oserror err_block;
  int    i_msg_desc[4];      /* Message file descriptor */
  char   *m_block = NULL;

  reg.r[1] = (int)FILENAME_MESSAGES;                    /* Messages file */
  err = _kernel_swi(MessageTrans_FileInfo, &reg, &reg);
  ERROR_RETURN(err);

  m_block = (char*)malloc(reg.r[2]);  /* Allocate memory for messages */
  if (m_block == NULL) return NULL;

  reg.r[0] = (int)i_msg_desc;         /* Load the messages file */
  reg.r[1] = (int)FILENAME_MESSAGES;
  reg.r[2] = (int)m_block;
  err = _kernel_swi(MessageTrans_OpenFile, &reg, &reg);
  ERROR_RETURN(err);

  reg.r[0] = (int)i_msg_desc;         /* Close the messages file */
  err = _kernel_swi(MessageTrans_CloseFile, &reg, &reg);
  ERROR_RETURN(err);

  reg.r[0] = (int)i_msg_desc;
  reg.r[1] = (int)s_token;
  reg.r[2] = (int)&(err_block.errmess);
  reg.r[3] = 256;
  reg.r[4] = reg.r[5] = reg.r[6] = reg.r[7] = 0;
  err = _kernel_swi(MessageTrans_GSLookup, &reg, &reg);
  ERROR_RETURN(err);

  free(m_block);

  err_block.errnum = ERROR_BASE;

  return &err_block;
}
@


4.1
log
@Initial revision
@
text
@d35 1
a35 1
extern _kernel_oserror *err; /* Error block */
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
