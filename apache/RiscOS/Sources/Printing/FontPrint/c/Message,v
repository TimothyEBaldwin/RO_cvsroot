head	4.4;
access;
symbols
	FontPrint-1_37:4.4
	FontPrint-1_36:4.4
	FontPrint-1_35:4.4
	FontPrint-1_34:4.4
	FontPrint-1_33:4.3
	FontPrint-1_32:4.3
	FontPrint-1_31:4.3
	FontPrint-1_30:4.2
	FontPrint-1_29:4.2
	FontPrint-1_28:4.2
	FontPrint-1_27:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.7.1
	Ursula_RiscPC:4.1.7.1.0.4
	rthornb_UrsulaBuild-19Aug1998:4.1.7.1
	UrsulaBuild_FinalSoftload:4.1.7.1
	rthornb_UrsulaBuild-12Aug1998:4.1.7.1
	aglover_UrsulaBuild-05Aug1998:4.1.7.1
	rthornb_UrsulaBuild-29Jul1998:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1.7.1
	rthornb_UrsulaBuild-17Jun1998:4.1.7.1
	rthornb_UrsulaBuild-03Jun1998:4.1.7.1
	rthornb_UrsulaBuild-27May1998:4.1.7.1
	rthornb_UrsulaBuild-21May1998:4.1.7.1
	rthornb_UrsulaBuild_01May1998:4.1.7.1
	Ursula:4.1.7.1.0.2
	Ursula_bp:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	RO_3_71:4.1.3.1
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2014.07.22.08.23.49;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	MFwpWoWE70dmIlJx;

4.3
date	2012.08.30.07.20.31;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	A6S1t212qh0Jzxiw;

4.2
date	2003.03.05.14.56.51;	author srevill;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.46.37;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.46.37;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.52.48;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.20.30;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.24.34;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Use NoMem global message to say there isn't enough memory
Get version string from messages file.
Resolve the trivial compiler warnings.
Tested briefly, still works.

Version 1.34. Tagged as 'FontPrint-1_34'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * I allocate a per-MsgRec dynamic buffer to receive message expansions, which
 * must be considered private and volatile.  The size of this buffer has to be
 * specified when opening the message file with open_messagefile().  It should
 * be big enough for the longest entry in the Messages file.
 */

#include <stdlib.h>
#include <string.h>
#include "swis.h"
#include "message.h"


/*
 * The 'longest' parameter is used to allocate the buffer for storing
 * messages in.  It must be at least as big as the longest
 * message in the messages file (after any expansion done by
 * MessageTrans_GSLookup.  Returns pointer to error block if open failed, else
 * NULL for success.
 */

_kernel_oserror *message_openfile (MsgPtr msgs, char *filename, int longest)
{
    static const _kernel_oserror nomem = { 299, "NoMem" };
    _kernel_oserror *err;

    err = _swix(MessageTrans_FileInfo, _IN(1) | _OUT(2), filename, &(msgs->size));
    if (err != NULL) return err;

    msgs->buffersize = longest;
    msgs->data = malloc(msgs->size);
    msgs->buffer = malloc(msgs->buffersize);
    if ((msgs->data == NULL) || (msgs->buffer == NULL))
    {
        err = _swix(MessageTrans_ErrorLookup, _INR(0,3), &nomem, NULL, NULL, 0);
    }
    else
    {
        err = _swix(MessageTrans_OpenFile, _INR(0,2), &(msgs->opaque), filename, msgs->data);
    }
    
    if (err != NULL)
    {
        free(msgs->data);
        free(msgs->buffer);
        msgs->data = msgs->buffer = NULL;
        msgs->size = msgs->buffersize = 0;
        return err;
    }


    return NULL;
}


void message_closefile (MsgPtr msgs)
{
    _swix(MessageTrans_CloseFile, _IN(0), &(msgs->opaque));
    if (msgs->buffer)
        free(msgs->buffer);
    if (msgs->data)
        free(msgs->data);
}


/*
 * Simple lookup with GSTransing but no parameter substitution.
 * The pointer returned points to a malloced buffer which is
 * private to the msgs structure passed in.  That is, the caller can
 * expect the contents to remain there until the next call
 * to message_lookup() with the same msgs parameter, or until
 * message_closefile() is called.
 *
 * A return value of NULL means some error occurred.
 */

char *message_lookup (MsgPtr msgs, char *token)

{   char *res;

    /*Use NONX form - don't return if there's an error. JRC 17 Feb '92*/
    _swi(MessageTrans_GSLookup, _INR(0,3) | _OUT(2), &(msgs->opaque), token, msgs->buffer, msgs->buffersize, &res);

    /*Assert res != NULL*/
    return res;
}
@


4.3
log
@Import of missing Sprites11 file
Recreate makefile from fragments.
Remove unused source files.
Insert version number at run time to info box from VersionNum.

Version 1.31. Tagged as 'FontPrint-1_31'
@
text
@a26 1
static _kernel_oserror myerror = {299, "Could not allocate memory for messages"};
d38 1
d40 1
d42 1
a42 2
    if (err)
        return err;
a44 1

a45 2
    if (!msgs->data)
        return &myerror;
d47 10
a56 5
    if (!msgs->buffer)
        return &myerror;

    err = _swix(MessageTrans_OpenFile, _INR(0,2), &(msgs->opaque), filename, msgs->data);
    if (err)
@


4.2
log
@Changes to allow it to be compiled with a vaguely recent compiler.
Sprites 23 removed.
RISC OS 5 Sprites and Sprites22 added.

Version 1.27. Tagged as 'FontPrint-1_27'
@
text
@a25 1
/* #include "swicall.h" */
@


4.1
log
@Initial revision
@
text
@d24 1
d26 1
a26 1
#include "swicall.h"
d36 1
a36 1
 */ 
d41 1
a41 2
    err = swi(MessageTrans_FileInfo, R1, filename,
              OUT,  R2, &(msgs->size),  END);
d46 1
a46 1
    
d53 2
a54 5
    
    err = swi(MessageTrans_OpenFile,
              R0, &(msgs->opaque),
              R1, filename,
              R2, msgs->data,  END);
d71 1
a71 1
    swi(MessageTrans_CloseFile,  R0, &(msgs->opaque),  END);
d93 1
a93 1
                
d95 1
a95 6
    swi(MessageTrans_GSLookup, NONX,
            R0, &(msgs->opaque),
            R1, token,
            R2, msgs->buffer,
            R3, msgs->buffersize,
            OUT,  R2, &res,  END);
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
