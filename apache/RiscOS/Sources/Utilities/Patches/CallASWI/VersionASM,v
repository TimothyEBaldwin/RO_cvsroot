head	4.19;
access;
symbols
	CallASWI-0_19:4.19
	CallASWI-0_18:4.18
	CallASWI-0_17:4.17
	CallASWI-0_16:4.16
	CallASWI-0_15:4.15
	CallASWI-0_14:4.14
	CallASWI-0_13:4.13
	CallASWI-0_12:4.12
	CallASWI-0_11:4.11
	CallASWI-0_10:4.10
	CallASWI-0_09:4.9
	CallASWI-0_08:4.8
	CallASWI-0_07:4.7
	CallASWI-0_06:4.6
	CallASWI-0_05:4.5
	CallASWI-0_04:4.4
	CallASWI-0_03:4.3
	CallASWI-0_02:4.2;
locks; strict;
comment	@# @;


4.19
date	2018.04.29.10.13.33;	author rsprowson;	state Exp;
branches;
next	4.18;
commitid	riCpYoCwjEKN3kAA;

4.18
date	2017.08.27.08.07.02;	author rsprowson;	state Exp;
branches;
next	4.17;
commitid	CKu0U5f2os1FeP4A;

4.17
date	2017.02.09.20.45.10;	author rsprowson;	state Exp;
branches;
next	4.16;
commitid	4PfjGUGGrPMkPjFz;

4.16
date	2016.06.30.19.50.35;	author rsprowson;	state Exp;
branches;
next	4.15;
commitid	oXVAWluFYcP0Jwcz;

4.15
date	2016.05.28.19.09.15;	author jlee;	state Exp;
branches;
next	4.14;
commitid	XHYiMg47VKFByh8z;

4.14
date	2016.05.24.22.16.59;	author jlee;	state Exp;
branches;
next	4.13;
commitid	WHeEChyZ0KwYIM7z;

4.13
date	2016.04.26.00.42.11;	author jlee;	state Exp;
branches;
next	4.12;
commitid	Gb5INtdVt3sAs44z;

4.12
date	2016.04.23.19.13.13;	author rsprowson;	state Exp;
branches;
next	4.11;
commitid	5OPsirFBEw7IHM3z;

4.11
date	2012.10.14.19.09.38;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	F1Njghd5tnCl3oow;

4.10
date	2012.04.24.22.53.48;	author jlee;	state Exp;
branches;
next	4.9;
commitid	10mvo5UPO3f1Ra2w;

4.9
date	2011.11.27.13.11.42;	author rsprowson;	state Exp;
branches;
next	4.8;
commitid	h1B9JPg0EswgqYIv;

4.8
date	2011.11.27.13.10.36;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	vY6HGe3Xmt5TpYIv;

4.7
date	2011.11.27.13.09.31;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	opsC251ERGywpYIv;

4.6
date	2011.11.27.13.08.21;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	Ibir1NFeDzo7pYIv;

4.5
date	2010.05.27.07.36.34;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2005.08.12.13.42.10;	author srevill;	state Exp;
branches;
next	4.3;

4.3
date	2002.12.20.16.50.32;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	2002.12.20.16.45.02;	author rsprowson;	state Exp;
branches;
next	4.1;

4.1
date	2002.12.20.16.43.49;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


4.19
log
@Fix for abort loading on OS 3.50/3.60
The logic to detect if SWP is available relies on being able to write the procecssor vectors, which isn't possible on OS 3.50/3.60 directly. Since anything that ran those OS versions certainly has SWP, just skip the check.
Tested on OS 3.60, no longer aborts.

Version 0.19. Tagged as 'CallASWI-0_19'
@
text
@;
; This file is automatically maintained by srccommit, do not edit manually.
; Last processed by srccommit version: 1.1.
;
                        GBLS    Module_MajorVersion
                        GBLA    Module_Version
                        GBLS    Module_MinorVersion
                        GBLS    Module_Date
                        GBLS    Module_FullVersion
                        GBLS    Module_ApplicationDate
                        GBLS    Module_HelpVersion
                        GBLS    Module_ComponentName
                        GBLS    Module_ComponentPath
Module_MajorVersion     SETS    "0.19"
Module_Version          SETA    19
Module_MinorVersion     SETS    ""
Module_Date             SETS    "29 Apr 2018"
Module_ApplicationDate  SETS    "29-Apr-18"
Module_ComponentName    SETS    "CallASWI"
Module_ComponentPath    SETS    "castle/RiscOS/Sources/Utilities/Patches/CallASWI"
Module_FullVersion      SETS    "0.19"
Module_HelpVersion      SETS    "0.19 (29 Apr 2018)"
                        END
@


4.18
log
@Add UUID output formatter to conversions
OS_ConvertVariform 15 outputs 128b numbers per RFC4122.
From Kernel-5_88.

Version 0.18. Tagged as 'CallASWI-0_18'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.18"
Module_Version          SETA    18
d17 2
a18 2
Module_Date             SETS    "27 Aug 2017"
Module_ApplicationDate  SETS    "27-Aug-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.18"
Module_HelpVersion      SETS    "0.18 (27 Aug 2017)"
@


4.17
log
@Expose CLREX via OS_PlatformFeatures
Except on all 26 bit CPUs there's no need, so we just return 0 for compatibility.

Version 0.17. Tagged as 'CallASWI-0_17'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.17"
Module_Version          SETA    17
d17 2
a18 2
Module_Date             SETS    "09 Feb 2017"
Module_ApplicationDate  SETS    "09-Feb-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.17"
Module_HelpVersion      SETS    "0.17 (09 Feb 2017)"
@


4.16
log
@Fix escape from OS_ReadLine32
On 26 bit systems this calls SWI OS_ReadLine internally, and thus pushes R14. However, on popping the carry flag isn't transferred for SLVK to give back to the user, so pressing Escape returns with C undefined.
After the pop, transfer C into the returned flags.

Version 0.16. Tagged as 'CallASWI-0_16'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.16"
Module_Version          SETA    16
d17 2
a18 2
Module_Date             SETS    "30 Jun 2016"
Module_ApplicationDate  SETS    "30-Jun-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.16"
Module_HelpVersion      SETS    "0.16 (30 Jun 2016)"
@


4.15
log
@Fix pre-RISC OS 3.7 support
Detail:
  s/CallASWI - Copy & paste error led to a key LDR going missing in the pre-RISC OS 3.7 code path of the module init, resulting in incorrect patching of some SWIs.
Admin:
  Tested PlingSystem build under RISC OS 3.1


Version 0.15. Tagged as 'CallASWI-0_15'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.15"
Module_Version          SETA    15
d17 2
a18 2
Module_Date             SETS    "28 May 2016"
Module_ApplicationDate  SETS    "28-May-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.15"
Module_HelpVersion      SETS    "0.15 (28 May 2016)"
@


4.14
log
@Add OS_PlatformFeatures 34 implementation. Fix unknown OS_PlatformFeatures reason codes always raising an error.
Detail:
  s/CPUFeatures - A copy of the kernel's s/CPUFeatures, to provide the OS_PlatformFeatures 34 implementation
  s/CallASWI:
  - Adjust OS_PlatformFeatures implementation so that it can be used on all OS versions supported by the module, instead of just pre-3.7
  - For 3.8+ allow unknown OS_PlatformFeatures reason codes to be passed on to the OS, otherwise generate our own error (and also fix bug in the error generation that would have resulted in the X bit being ignored, the same bug that was present in the kernel).
  - Hook up OS_PlatformFeatures 34, and indicate in OS_PlatformFeatures 0 that the error generation bug has been fixed.
Admin:
  Tested on ARM2/250/3 RISC OS 3.1 (emulated) + StrongARM RISC OS 3.7 (native)
  Requires Kernel-5_35-4_79_2_325


Version 0.14. Tagged as 'CallASWI-0_14'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.14"
Module_Version          SETA    14
d17 2
a18 2
Module_Date             SETS    "24 May 2016"
Module_ApplicationDate  SETS    "24-May-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.14"
Module_HelpVersion      SETS    "0.14 (24 May 2016)"
@


4.13
log
@Fix SWP detection
Detail:
  s/CallASWI - SWP detection rewritten to directly poke a replacement handler into the undefined instruction vector. This avoids:
  (a) SWP [sp] trashing the error handler pointer (Not an issue for CLib since it used an ascending stack in its SWP detection code)
  (b) If the SWP aborted, the XOS_EnterOS was corrupting the SVC stack before we're able to restore SP (CLib has the advantage that the SVC stack is empty)
  (c) A bug in FPEmulator versions 4.12-4.31 which prevents us from using OS_ChangeEnvironment to replace the undefined instruction handler
Admin:
  Tested on RISC OS 3.1 running under ArcEm, ARM2 & ARM250 emulation
  (Admittedly, after fixing ArcEm's ARM2 emulation to abort on SWP)


Version 0.13. Tagged as 'CallASWI-0_13'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.13"
Module_Version          SETA    13
d17 2
a18 2
Module_Date             SETS    "26 Apr 2016"
Module_ApplicationDate  SETS    "26-Apr-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.13"
Module_HelpVersion      SETS    "0.13 (26 Apr 2016)"
@


4.12
log
@Compute CPUFlag_NoSWP correctly on ARMv2
On startup, try a SWP instruction and if it aborts it must be pre ARMv2a, so set CPUFlag_NoSWP in the OS_PlatformFeatures 0 flags.

Version 0.12. Tagged as 'CallASWI-0_12'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.12"
Module_Version          SETA    12
d17 2
a18 2
Module_Date             SETS    "23 Apr 2016"
Module_ApplicationDate  SETS    "23-Apr-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.12"
Module_HelpVersion      SETS    "0.12 (23 Apr 2016)"
@


4.11
log
@Don't corrupt the reason code for Service_Reset
The Service_Reset code called OS_Byte without preserving the calling registers so anyone downstream wouldn't see the right service call.
Also, don't create a loop on OS_FSControl with an non fatal finalisation by checking the copy of the old caller isn't actually Our_FSControl again.

Version 0.11. Tagged as 'CallASWI-0_11'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.11"
Module_Version          SETA    11
d17 2
a18 2
Module_Date             SETS    "14 Oct 2012"
Module_ApplicationDate  SETS    "14-Oct-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.11"
Module_HelpVersion      SETS    "0.11 (14 Oct 2012)"
@


4.10
log
@Fix OS_LeaveOS
Detail:
  s/CallASWI - OS_LeaveOS was clearing the bottom four bits of LR, as if it held the 32bit PSR. But on all released 26bit OS versions LR contains the 26bit PSR+return address, so depending on the alignment of the instruction OS_LeaveOS could end up returning to a point several instructions before the SWI, resulting in a crash or infinite loop.
Admin:
  Tested on RISC OS 3.1


Version 0.10. Tagged as 'CallASWI-0_10'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.10"
Module_Version          SETA    10
d17 2
a18 2
Module_Date             SETS    "24 Apr 2012"
Module_ApplicationDate  SETS    "24-Apr-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.10"
Module_HelpVersion      SETS    "0.10 (24 Apr 2012)"
@


4.9
log
@Add 64 bit OS_ReadUnsigned for 26 bit users.

Version 0.09. Tagged as 'CallASWI-0_09'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.09"
Module_Version          SETA    9
d17 2
a18 2
Module_Date             SETS    "27 Nov 2011"
Module_ApplicationDate  SETS    "27-Nov-11"
d21 2
a22 2
Module_FullVersion      SETS    "0.09"
Module_HelpVersion      SETS    "0.09 (27 Nov 2011)"
@


4.8
log
@Sync function exits with main Kernel sources.
Magic macros.

Version 0.08. Tagged as 'CallASWI-0_08'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.08"
Module_Version          SETA    8
d21 2
a22 2
Module_FullVersion      SETS    "0.08"
Module_HelpVersion      SETS    "0.08 (27 Nov 2011)"
@


4.7
log
@Add OS_FSControl 58 for 26 bit users.

Version 0.07. Tagged as 'CallASWI-0_07'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.07"
Module_Version          SETA    7
d21 2
a22 2
Module_FullVersion      SETS    "0.07"
Module_HelpVersion      SETS    "0.07 (27 Nov 2011)"
@


4.6
log
@Add OS_ConvertVariform to CallASWI for 26 bit users.

Version 0.06. Tagged as 'CallASWI-0_06'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.06"
Module_Version          SETA    6
d21 2
a22 2
Module_FullVersion      SETS    "0.06"
Module_HelpVersion      SETS    "0.06 (27 Nov 2011)"
@


4.5
log
@Change bad platform features error code to be non zero.
Mirrors change in Kernel-5_35-4_79_2_99, the non-internationalised error text is used because the ROM messages file wouldn't contain the error text for a SWI that wasn't implemented of course.

Version 0.05. Tagged as 'CallASWI-0_05'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.05"
Module_Version          SETA    5
d17 2
a18 2
Module_Date             SETS    "27 May 2010"
Module_ApplicationDate  SETS    "27-May-10"
d21 2
a22 2
Module_FullVersion      SETS    "0.05"
Module_HelpVersion      SETS    "0.05 (27 May 2010)"
@


4.4
log
@  Makefile bug fix
Detail:
  There was no LF at the end of the makefile so the first (only)
  dynamic dependency ended up on the end of the comment line.
Admin:
  No code change.

Version 0.04. Tagged as 'CallASWI-0_04'
@
text
@d3 1
a3 1
; Last processed by srccommit version: 1.2.
d14 2
a15 2
Module_MajorVersion     SETS    "0.04"
Module_Version          SETA    4
d17 2
a18 2
Module_Date             SETS    "12 Aug 2005"
Module_ApplicationDate  SETS    "12-Aug-05"
d20 3
a22 3
Module_ComponentPath    SETS    "RiscOS/Sources/Utilities/Patches/CallASWI"
Module_FullVersion      SETS    "0.04"
Module_HelpVersion      SETS    "0.04 (12 Aug 2005)"
@


4.3
log
@Reverse engineered 0.02 to get the Service_Reset code added.
Addition of OS_HeapSort32,OS_SubstituteArgs32,OS_ReadLine32,OS_LeaveOS
for people with pre RISC OS 5.These get patched in to all pre 5.00
versions whereas the older 4 SWIs only get added if pre 3.70.
Tested on 4.02,3.80,3.70 (see test program)
Docs updated.

Version 0.03. Tagged as 'CallASWI-0_03'
@
text
@d3 1
a3 1
; Last processed by srccommit version: 1.68.
d14 2
a15 2
Module_MajorVersion     SETS    "0.03"
Module_Version          SETA    3
d17 2
a18 2
Module_Date             SETS    "20 Dec 2002"
Module_ApplicationDate  SETS    "20-Dec-02"
d21 2
a22 2
Module_FullVersion      SETS    "0.03"
Module_HelpVersion      SETS    "0.03 (20 Dec 2002)"
@


4.2
log
@Store 0.02 binary for reference,no idea where the sources are
Version 0.02 02-Oct-2000

Version 0.02. Tagged as 'CallASWI-0_02'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.02"
Module_Version          SETA    2
d21 2
a22 2
Module_FullVersion      SETS    "0.02"
Module_HelpVersion      SETS    "0.02 (20 Dec 2002)"
@


4.1
log
@Addition of VersionNum/Asm
@
text
@d14 9
a22 1
Module_HelpVersion      SETS    "0.01 (17 Jul 1996)"
@

