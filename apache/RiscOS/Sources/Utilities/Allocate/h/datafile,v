head	1.2;
access;
symbols
	Allocate-1_18:1.2
	Allocate-1_17:1.2
	Allocate-1_16:1.2
	Allocate-1_15:1.1.1.1
	Allocate-1_14:1.1.1.1
	Allocate-1_11-ish:1.1.1.1
	Allocate-1_10:1.1.1.1
	rool:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.11.15.10.14.01;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	Yavg3gWio5xyRaJy;

1.1
date	2015.11.14.22.53.41;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	suFyC0XgsYsF57Jy;

1.1.1.1
date	2015.11.14.22.53.41;	author rsprowson;	state Exp;
branches;
next	;
commitid	suFyC0XgsYsF57Jy;


desc
@@


1.2
log
@No longer try reading/writing user details inside the app
Remove support for the user details being written inside the app - they moved to Choices in Justin Fletcher's 2003 version, so that's > decade to click 'Save details'.
Get filetypes from central headers, amongst other constants.

Version 1.16. Tagged as 'Allocate-1_16'
@
text
@/* Copyright 2015 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Name   : datafile.h
 * Desc   : datafile control for the !allocate application
 * Auther : James Bye
 * Date   : 21-Jul-1994
 *
 *
 */
 
 
#ifndef __datafile_h
#define __datafile_h

#ifndef __object_h
#include "object.h"
#endif


/*-- link list of object blocks --*/

typedef struct DataFileObjectList
{
  ObjectBlock *object;
  
  /*-- pointer to next item --*/
  
  struct DataFileObjectList *next;
} DataFileObjectList;


/*
 * Name     : datafile_write_reserve_csv
 * Desc     : writes a CSV file for reserved names
 * Parms    : char *filename
 *            DataFileObjecList *objects - list of reserved objects (only!)
 * Returns  : True or False on result
 */
 
extern BOOL datafile_write_reserve_csv ( char *filename, DataFileObjectList *objects );




/*
 * Name     : datafile_load_file
 * Desc     : loads an allocate data file
 * Parms    : char *filename
 *            DataFileObjectList **objects - destination for linked list pointer
 * Returns  : True or False on result
 */

extern BOOL datafile_load_file ( char *filename, DataFileObjectList **objects );




/*
 * Name     : datafile_write_file
 * Desc     : writes a allocate data file
 * Parms    : char *filename
 *            DataFileObjectList *objects  - pointer to link list of objects
 *            int no_objects               - number of objects in list
 * Returns  : True or False on result
 */

extern BOOL datafile_write_file ( char *filename, DataFileObjectList *objects, int no_objects );



#endif

@


1.1
log
@Initial revision
@
text
@a32 2
#define DataFile_Type  0xFB0

@


1.1.1.1
log
@Import of Allocate sources
Lost since 2003-ish, these correspond to version 1.10 at the point of handover from Pineapple.
Since the application was originally written by James Bye of Acorn customer services and a number of the sources have Acorn headers, they've been placed under the Castle licence.
@
text
@@
