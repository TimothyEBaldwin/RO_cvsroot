head	1.2;
access;
symbols
	ShrinkWrap-0_07:1.2
	ShrinkWrap-0_06-2:1.2
	ShrinkWrap-0_06:1.2
	dellis_autobuild_BaseSW:1.2
	ShrinkWrap-0_05:1.2
	ShrinkWrap-0_04:1.2
	sbrodie_sedwards_16Mar2000:1.2
	dcotton_autobuild_BaseSW:1.2
	ShrinkWrap-0_03:1.2
	nturton_ShrinkWrap-0_02:1.2
	Spin_merge:1.1.1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	Ursula_RiscPC:1.1.0.8
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	rthornb_UrsulaBuild_01May1998:1.1
	afrost_Funai01-33:1.1.1.2
	afrost_NC2_Generic:1.1.1.2
	Spinner_RCA116:1.1.1.2
	Spinner_B20_2:1.1.1.2
	Spinner_19_3:1.1.1.2
	Spinner_B18:1.1.1.2
	Spinner_B17:1.1.1.2
	Spinner_B15:1.1.1.2
	Spinner_B14:1.1.1.2
	Spinner_B13:1.1.1.2
	Spinner_B12:1.1.1.2
	Spinner_B10:1.1.1.2
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.1.0.4
	Ursula_bp:1.1
	Spinner_B7:1.1.1.2
	ARTtmp_merge:1.1.1.2
	Spin_3Apr97:1.1.1.2
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.2.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.2
date	98.12.04.15.34.52;	author nturton;	state Exp;
branches;
next	1.1;

1.1
date	97.03.19.14.15.17;	author scormie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.19.14.15.17;	author scormie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.19.23.33.40;	author nturton;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Spinner branch merged.  Updated to use -rmf option to link
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*->h.flex
 * Copyright (C) Acorn Computers Ltd., 1989
 * Copyright (C) Codemist Ltd., 1989
 */

#ifndef __flex_h
#define __flex_h

#define flex_alloc		swflex_alloc
#define flex_allocc		swflex_allocc
#define flex_free		swflex_free
#define flex_size		swflex_size
#define flex_extend		swflex_extend
#define flex_midextend		swflex_midextend
#define flex_chunk		swflex_chunk
#define flex_init		swflex_init
#define flex_inuse		swflex_inuse
#define flex_max		swflex_max
#define flex_reloc		swflex_reloc
#define flex_newmax		swflex_newmax
#define flex_check		swflex_check

typedef void **flex_ptr;
_kernel_oserror * swflex_alloc(flex_ptr anchor, int n);
_kernel_oserror * swflex_allocc(flex_ptr anchor, int n);
void swflex_free(flex_ptr anchor);
int swflex_size(flex_ptr);
_kernel_oserror * swflex_extend(flex_ptr, int newsize);
_kernel_oserror * swflex_midextend(flex_ptr, int at, int by);
_kernel_oserror * swflex_chunk(flex_ptr anchor,int size,int chunksize);
int swflex_init(char * chunk,int size);
int swflex_inuse(void);
int swflex_max(void);
int swflex_reloc(char * newbase);
int swflex_newmax(char * chunk,int size);
int swflex_check(void);
#endif
@


1.1
log
@Initial revision
@
text
@d22 15
d38 13
a50 13
_kernel_oserror * flex_alloc(flex_ptr anchor, int n);
_kernel_oserror * flex_allocc(flex_ptr anchor, int n);
void flex_free(flex_ptr anchor);
int flex_size(flex_ptr);
_kernel_oserror * flex_extend(flex_ptr, int newsize);
_kernel_oserror * flex_midextend(flex_ptr, int at, int by);
_kernel_oserror * flex_chunk(flex_ptr anchor,int size,int chunksize);
int flex_init(char * chunk,int size);
int flex_inuse(void);
int flex_max(void);
int flex_reloc(char * newbase);
int flex_newmax(char * chunk,int size);
int flex_check(void);
@


1.1.1.1
log
@Initial version.

@
text
@@


1.1.1.2
log
@Set up #defines for flex_ functions to swflex_ functions to avoid build clashes.
@
text
@a21 15

#define flex_alloc		swflex_alloc
#define flex_allocc		swflex_allocc
#define flex_free		swflex_free
#define flex_size		swflex_size
#define flex_extend		swflex_extend
#define flex_midextend		swflex_midextend
#define flex_chunk		swflex_chunk
#define flex_init		swflex_init
#define flex_inuse		swflex_inuse
#define flex_max		swflex_max
#define flex_reloc		swflex_reloc
#define flex_newmax		swflex_newmax
#define flex_check		swflex_check

d23 13
a35 13
_kernel_oserror * swflex_alloc(flex_ptr anchor, int n);
_kernel_oserror * swflex_allocc(flex_ptr anchor, int n);
void swflex_free(flex_ptr anchor);
int swflex_size(flex_ptr);
_kernel_oserror * swflex_extend(flex_ptr, int newsize);
_kernel_oserror * swflex_midextend(flex_ptr, int at, int by);
_kernel_oserror * swflex_chunk(flex_ptr anchor,int size,int chunksize);
int swflex_init(char * chunk,int size);
int swflex_inuse(void);
int swflex_max(void);
int swflex_reloc(char * newbase);
int swflex_newmax(char * chunk,int size);
int swflex_check(void);
@
