head	1.1;
access;
symbols
	ShrinkWrap-0_07:1.1
	ShrinkWrap-0_06-2:1.1
	ShrinkWrap-0_06:1.1
	dellis_autobuild_BaseSW:1.1
	ShrinkWrap-0_05:1.1
	ShrinkWrap-0_04:1.1
	sbrodie_sedwards_16Mar2000:1.1
	dcotton_autobuild_BaseSW:1.1
	ShrinkWrap-0_03:1.1
	nturton_ShrinkWrap-0_02:1.1
	Spin_merge:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	Ursula_RiscPC:1.1.0.8
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	rthornb_UrsulaBuild_01May1998:1.1
	afrost_Funai01-33:1.1.1.1
	afrost_NC2_Generic:1.1.1.1
	Spinner_RCA116:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.1.0.4
	Ursula_bp:1.1
	Spinner_B7:1.1.1.1
	ARTtmp_merge:1.1.1.1
	Spin_3Apr97:1.1.1.1
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.1.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.03.19.14.15.16;	author scormie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.19.14.15.16;	author scormie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*->h.buffer */

#define DEFPACKSIZE   0x4000
#define DEFUNPACKSIZE 0x4000


#define BCRC    0x1
#define BCODE   0x2


typedef struct buffer 
{
 char * data;     /* pointer to start of buffer        */
 char * p;        /* pointer into data                 */
 char * f;        /* another pointer into data         */
 char * end;      /* pointer to end of data !          */
 int    buffsize; /* length of buffer                  */
 int    datasize; /* amount of data to read            */
 int    left;     /* amount of data left to read       */
 int    fh;       /* file handle to refill buffer from */
 int    flags;    /* control CRC and codec             */
 int    crc;
} buffer;


#define COPYCRC    0x1
#define COPYCODE   0x2
#define COPYDECODE 0x4


extern void initbuff(buffer * b,char * data,int datasize,int buffsize,int fh);
extern _kernel_oserror * initsrcbuffer(buffer * src);
extern _kernel_oserror * fillsrcbuffer(buffer * src);
extern _kernel_oserror * dumpdestbuffer(buffer * dest);
extern _kernel_oserror * copyfile(int source,int dest,int length,int flags);
extern _kernel_oserror * writeblock(char * source,int dest,int length,
                                                                 int flags);
extern _kernel_oserror * readblock(char * dest,int source,int length,
                                                                 int flags);
extern _kernel_oserror * getfirstbyte(int fh,char * b,int at);

extern int copylen;
extern int copycrc;

extern void setcode(void);
extern void closecode(void);
extern void clearcode(buffer * dest);

extern _kernel_oserror * buff_alloc(flex_ptr b,int size,int * bsize);
extern _kernel_oserror * dumpblock(buffer * dest,char * p,int len);


@


1.1.1.1
log
@Initial version.

@
text
@@
