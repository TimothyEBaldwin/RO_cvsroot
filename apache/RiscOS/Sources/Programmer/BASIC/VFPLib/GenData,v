head	1.1;
access;
symbols
	BASIC-1_75:1.1
	BASIC-1_74:1.1
	BASIC-1_73:1.1
	BASIC-1_72:1.1
	BASIC-1_71:1.1
	BASIC-1_70:1.1
	BASIC-1_69:1.1
	BASIC-1_68:1.1
	BASIC-1_67:1.1
	BASIC-1_66:1.1
	BASIC-1_65:1.1
	BASIC-1_64:1.1
	BASIC-1_63:1.1
	BASIC-1_62:1.1
	BASIC-1_61:1.1
	BASIC-1_60:1.1
	BASIC-1_59:1.1
	BASIC-1_58:1.1
	BASIC-1_57-pre4:1.1
	BASIC-1_57:1.1
	BASIC-1_57-pre3:1.1
	BASIC-1_57-pre2:1.1
	BASIC-1_57-pre1:1.1
	BASIC-1_56:1.1
	BASIC-1_55:1.1
	BASIC-1_54:1.1
	BASIC-1_53:1.1
	BASIC-1_52:1.1
	BASIC-1_51:1.1
	BASIC-1_50:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.03.07.23.34.19;	author jlee;	state Exp;
branches;
next	;
commitid	mqtCES9yyNSyC0Wv;


desc
@@


1.1
log
@VFP/NEON assembler fixes and improvements
Detail:
  * Reworked to make ROM builds reference VFP/NEON assembler lookup tables held in ResourceFS instead of using local copies held in the module. Saves ~32K of ROM space due to reduced data duplication between BASIC & BASIC64.
  * Replace OPT flag magic numbers with symbols
  * Added support for VFPv4/ASIMDv2 instructions (VFMA/VFMS, VFNMA/VFNMS)
  * Updated DCFD/EQUFD to add support for .VFP and .FPA suffixes, to indicate whether VFP or FPA word order should be used
  * Added DCFH/EQUFH for storing half precision floats (in advanced half precision format)
  * Rework MSG routine to preserve R4-R7, for passing to BASICTrans as message parameters
  * Added a few new error messages (118-123) for the VFP/NEON assembler
  * Enable OWNERRORS option for standalone builds, and set DO32BIT to 0 for 26bit builds
  * Fixed VLDM/VSTM style register lists not working correctly when using commas to list the registers
  * Improved handling of VFP/NEON 8 bit immediate constants:
    - No longer possible to use #I64.<n>, #F32.<n>, #F64.<n> notation to directly specify the 8-bit encoded value for I64/F32/F64 constants, nor to force one instruction to attempt to use a constant in a format that doesn't match the .<dt> instruction suffix
    - Instead, .I64 constants can either be specified as a number (which will be converted to an integer and then zero-extended to 64 bits) or a string (which will be parsed by the 64bit version of OS_ReadUnsigned)
    - .F32 and .F64 constants should now be specified as floating point numbers which will then be correctly converted to the 8 bit encoding
    - .F32 and .F64 constants which can't be converted will result in a error message indicating the closest possible floating point number that can be encoded (but not necessarily the closest number that can be encoded; e.g. when assembling NEON instructions the assembler can automatically make use of .I32 encoding formats for some numbers)
  * Fixed instructions that have an 'imn' field (e.g. VSHR immediate) being incorrectly assembled
  * VFPLib.GenData & VFPLib.VFPLib now stored as text instead of tokenised BASIC
  Files changed:
  * Makefile, VFPLib.GenData, VFPLib.VFPLib, hdr.VFPMacros, hdr.Workspace, s.Assembler, s.Basic, s.ErrorMsgs, s.Factor, s.ModHead, s.VFP
Admin:
  Tested as softloaded module & in Iyonix ROM softload
  Requires BASICTrans 2.13 for new error messages to work properly


Version 1.50. Tagged as 'BASIC-1_50'
@
text
@REM Copyright 2012 Castle Technology Ltd
REM
REM Licensed under the Apache License, Version 2.0 (the "License");
REM you may not use this file except in compliance with the License.
REM You may obtain a copy of the License at
REM
REM     http://www.apache.org/licenses/LICENSE-2.0
REM
REM Unless required by applicable law or agreed to in writing, software
REM distributed under the License is distributed on an "AS IS" BASIS,
REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
REM See the License for the specific language governing permissions and
REM limitations under the License.
REM
REM >GenData
REM
REM Regenerate the s.VFPData file
TEXTLOAD "VFPLib.VFPLib"
PROCinitVFPLib
PROCVFPLib_saveasm("s.VFPData")
QUIT
@
