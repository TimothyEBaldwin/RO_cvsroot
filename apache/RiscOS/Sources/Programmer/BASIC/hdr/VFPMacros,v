head	1.3;
access;
symbols
	BASIC-1_75:1.3
	BASIC-1_74:1.3
	BASIC-1_73:1.2
	BASIC-1_72:1.2
	BASIC-1_71:1.2
	BASIC-1_70:1.2
	BASIC-1_69:1.2
	BASIC-1_68:1.2
	BASIC-1_67:1.2
	BASIC-1_66:1.2
	BASIC-1_65:1.2
	BASIC-1_64:1.2
	BASIC-1_63:1.2
	BASIC-1_62:1.2
	BASIC-1_61:1.2
	BASIC-1_60:1.2
	BASIC-1_59:1.2
	BASIC-1_58:1.2
	BASIC-1_57-pre4:1.2
	BASIC-1_57:1.2
	BASIC-1_57-pre3:1.2
	BASIC-1_57-pre2:1.2
	BASIC-1_57-pre1:1.2
	BASIC-1_56:1.2
	BASIC-1_55:1.2
	BASIC-1_54:1.2
	BASIC-1_53:1.2
	BASIC-1_52:1.2
	BASIC-1_51:1.2
	BASIC-1_50:1.2
	BASIC-1_49:1.1;
locks; strict;
comment	@# @;


1.3
date	2018.02.25.18.47.39;	author jlee;	state Exp;
branches;
next	1.2;
commitid	plJX5OQyK2HFVgsA;

1.2
date	2012.03.07.23.34.22;	author jlee;	state Exp;
branches;
next	1.1;
commitid	mqtCES9yyNSyC0Wv;

1.1
date	2011.12.19.16.48.33;	author jlee;	state Exp;
branches;
next	;
commitid	pdX82Kz8wJDIUOLv;


desc
@@


1.3
log
@VFP/NEON assembler improvements
Detail:
 - Makefile - Add hdr.VFPMacros as a dependency of VFPData
 - Tests/VFP/TestVFP,ffb - Add some assembly tests for the new instructions
 - VFPLib/VFPLib - Remove some non-standard patterns ('D' and 'F' used as data type specifiers). Add the ARMv8 (AArch32) VFP/NEON instructions, and VFPv3 half-precision VCVTB/VCVTT
 - hdr/VFPMacros - Save a few KB of ROM space by changing some tables to use halfword elements instead of words
 - s/VFP - Add VFP_LDRH macro to deal with the compressed tables. Fix VMRS of MVFRn registers (erroneously attempted to convert the digit to upper-case), and add MVFR2
Admin:
  Tested on Raspberry Pi 3


Version 1.74. Tagged as 'BASIC-1_74'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; objAsm - BASIC VFP Lib Macros
; (C)2011 TBA Software
; 0.01 - 16/06/2011

; ** OP Table Entry **
; $Op must be length 4
; $Ptr points to the first syntax lookup entry for this 4 char code

        MACRO
$Label  VFP_OpTableEntry $Op,$Ptr
$Label  DCB "$Op"
        DCD $Ptr
        MEND

; ** Syntax Lookup **
; $DataTypeList, $AlignList, $ParamsTable can be 0 when not used

VFP_syn          EQU 10
VFP_syn_pattern  EQU 0
VFP_syn_encoding EQU 2
VFP_syn_datatype EQU 4
VFP_syn_align    EQU 6
VFP_syn_params   EQU 8

        MACRO
$Label  VFP_SyntaxLookup $Pattern, $Encoding, $DataTypeList, $AlignList, $ParamsTable
$Label  DCW $Pattern
        DCW $Encoding
        DCW $DataTypeList
        DCW $AlignList
        DCW $ParamsTable
        MEND

; ** Syntax String **

        MACRO
$Label  VFP_Pattern $Pattern
$Label  DCB "$Pattern"
        DCB 0
        MEND

; ** Data-Type List Entry **
; $DT is one of S/U/I/F        (P is not currently used here)
; $DTSizeStr must be length 2  (pad with space)

        MACRO
$Label  VFP_DataTypeListEntry $DT,$DTSizeStr,$DTSize
$Label  DCB "$DT"
        DCB "$DTSizeStr"
        DCB $DTSize
        MEND

; ** Alignment List **
; followed by $Variations number of alignment list entries
; (1 = one for all data-types, >1 = 1 per datatype)

        MACRO
$Label  VFP_AlignList $Variations
$Label  DCD $Variations
        MEND

; ** Alignment List Entry **
;$Align     = size of alignment
;$AlignBits = encoding

        MACRO
$Label  VFP_AlignListEntry $Align,$AlignBits
$Label  DCW $Align
        DCB $AlignBits
        DCB 0
        MEND

; ** Params List **
; opnumber is VFP_Op_ prefixed constant
; bitfields is the number of bitfield records that follow
; (more than 1 indicates one per data-type)

VFP_par           EQU 4
VFP_par_opnumber  EQU 0
VFP_par_bitfields EQU 1

        MACRO
$Label  VFP_ParamsList $OpNumber, $Bitfields
$Label  DCB $OpNumber
        DCB $Bitfields
        DCB 0
        DCB 0
        MEND

; ** Bitfield Record **
; when args is 0 - followed by bit-field args

VFP_bf          EQU 8
VFP_bfshift     EQU 3
VFP_bf_constant EQU 0
VFP_bf_args     EQU 4

        MACRO
$Label  VFP_BitFieldRecord $Constant,$Args
$Label  DCD $Constant
        DCD $Args
        MEND

; ** Bit Field Argument **

VFP_bfa          EQU 4
VFP_bfa_opnumber EQU 0
VFP_bfa_bitmask  EQU 1
VFP_bfa_shift    EQU 2

        MACRO
$Label  VFP_BitFieldArgs $OpNumber, $BitMask, $Shift
$Label  DCB $OpNumber
        DCB $BitMask
        DCB $Shift
        DCB 0
        MEND

; ** Encoding **
; followed by bit-field record/args containing encoding data
; $OPCModeList = 0 when not used

VFP_Enc_Flag_VFPv2  EQU 1
VFP_Enc_Flag_VFPv3  EQU 2
VFP_Enc_Flag_VFPv4  EQU 4
VFP_Enc_Flag_SIMDv1 EQU 8
VFP_Enc_Flag_SIMDv2 EQU 16
VFP_Enc_Flag_ARMv8  EQU 32
VFP_Enc_Flag_VFPv3H EQU 64

VFP_enc             EQU 4
VFP_enc_flags       EQU 0
VFP_enc_opcmodelist EQU 2

        MACRO
$Label  VFP_Encoding $Flags, $OPCModeList
$Label  DCW $Flags
        DCW $OPCModeList
        MEND

; ** OPCMode List Entry **
; $BitPattern is a 5 char string of 0,1 or 'x' (meaning either 0 or 1)

        MACRO
$Label  VFP_OPCModeListEntry $BitPattern
$Label  DCB "$BitPattern"
        DCB 0,0,0
        MEND

        END
@


1.2
log
@VFP/NEON assembler fixes and improvements
Detail:
  * Reworked to make ROM builds reference VFP/NEON assembler lookup tables held in ResourceFS instead of using local copies held in the module. Saves ~32K of ROM space due to reduced data duplication between BASIC & BASIC64.
  * Replace OPT flag magic numbers with symbols
  * Added support for VFPv4/ASIMDv2 instructions (VFMA/VFMS, VFNMA/VFNMS)
  * Updated DCFD/EQUFD to add support for .VFP and .FPA suffixes, to indicate whether VFP or FPA word order should be used
  * Added DCFH/EQUFH for storing half precision floats (in advanced half precision format)
  * Rework MSG routine to preserve R4-R7, for passing to BASICTrans as message parameters
  * Added a few new error messages (118-123) for the VFP/NEON assembler
  * Enable OWNERRORS option for standalone builds, and set DO32BIT to 0 for 26bit builds
  * Fixed VLDM/VSTM style register lists not working correctly when using commas to list the registers
  * Improved handling of VFP/NEON 8 bit immediate constants:
    - No longer possible to use #I64.<n>, #F32.<n>, #F64.<n> notation to directly specify the 8-bit encoded value for I64/F32/F64 constants, nor to force one instruction to attempt to use a constant in a format that doesn't match the .<dt> instruction suffix
    - Instead, .I64 constants can either be specified as a number (which will be converted to an integer and then zero-extended to 64 bits) or a string (which will be parsed by the 64bit version of OS_ReadUnsigned)
    - .F32 and .F64 constants should now be specified as floating point numbers which will then be correctly converted to the 8 bit encoding
    - .F32 and .F64 constants which can't be converted will result in a error message indicating the closest possible floating point number that can be encoded (but not necessarily the closest number that can be encoded; e.g. when assembling NEON instructions the assembler can automatically make use of .I32 encoding formats for some numbers)
  * Fixed instructions that have an 'imn' field (e.g. VSHR immediate) being incorrectly assembled
  * VFPLib.GenData & VFPLib.VFPLib now stored as text instead of tokenised BASIC
  Files changed:
  * Makefile, VFPLib.GenData, VFPLib.VFPLib, hdr.VFPMacros, hdr.Workspace, s.Assembler, s.Basic, s.ErrorMsgs, s.Factor, s.ModHead, s.VFP
Admin:
  Tested as softloaded module & in Iyonix ROM softload
  Requires BASICTrans 2.13 for new error messages to work properly


Version 1.50. Tagged as 'BASIC-1_50'
@
text
@d32 1
a32 1
VFP_syn          EQU 20
d34 4
a37 4
VFP_syn_encoding EQU 4
VFP_syn_datatype EQU 8
VFP_syn_align    EQU 12
VFP_syn_params   EQU 16
d41 5
a45 5
$Label  DCD $Pattern
        DCD $Encoding
        DCD $DataTypeList
        DCD $AlignList
        DCD $ParamsTable
a53 1
        ALIGN
d142 2
d145 1
a145 1
VFP_enc             EQU 8
d147 1
a147 1
VFP_enc_opcmodelist EQU 4
d151 2
a152 2
$Label  DCD $Flags
        DCD $OPCModeList
@


1.1
log
@Add TBA Software's VFP/NEON assembler
Detail:
  This is version 0.06 of TBA's VFP/NEON BASIC assembler, with the following modifications:
  * VFPASM makefile option can be used to toggle the assembler on/off. Currently only used by the Tungsten ROM, due to lack of ROM space.
  * EnableVFPDebug switch added to turn on/off debugging code
  * VFP_Error macro fixed (VFPError symbol wasn't defined in 0.06 sources; now it just calls MSGERR directly)
  * Debug messages tweaked to make them a bit more useful
  * Single-register LDM/STM swapped for LDR/STR to avoid objasm 4 performance warnings
  * Fixed a bug in VFPop_imm_bits that caused parsing of immediate constants to fail in ROM builds, and potentially fail or misbehave in RAM builds. A sequence of conditional instructions incorrectly had the 'S' flag set on each instruction, which could cause the execution to stop halfway through.
  * VFPLib BASIC file moved from Tests.VFP folder into all-new VFPLib folder
  * Makefile modified and VFPLib.GenData script added, in order to allow s.VFPData to be built automatically as part of the build process instead of relying on a prebuilt version in CVS
  File changes:
  - Doc/VFPdoc - VFP assembler implementation notes & usage notes
  - Tests/VFP/!Setup,feb, Tests/VFP/TestVFP,ffb, Tests/VFP/VFPLibAsm,ffb, Tests/VFP/VFPLibTest,ffb - VFP test programs
  - VFPLib/GenData,ffb, VFPLib/VFPLib,ffb - Common BASIC files used to generate the pattern tables used by the assembler, and used by the test programs
  - s/VFP, hdr/VFPMacros - Main VFP/NEON assembler source code
  - Makefile - Modified to allow automatic generation of s.VFPData file
  - s/Assembler - Modified to call VFP assembler for instructions starting with 'V'
  - s/ModHead - Replaced ADRL with a sequence of ADD instructions due to module now being over 64K in size
Admin:
  Tested on rev A2 BB-xM in ROM & softload forms


Version 1.49. Tagged as 'BASIC-1_49'
@
text
@d138 5
a142 3
VFP_Enc_Flag_VFPv2 EQU 1
VFP_Enc_Flag_VFPv3 EQU 2
VFP_Enc_Flag_SIMD  EQU 4
@

