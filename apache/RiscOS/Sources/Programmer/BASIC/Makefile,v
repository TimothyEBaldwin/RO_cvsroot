head	4.22;
access;
symbols
	BASIC-1_75:4.22
	BASIC-1_74:4.22
	BASIC-1_73:4.21
	BASIC-1_72:4.21
	BASIC-1_71:4.21
	BASIC-1_70:4.21
	BASIC-1_69:4.21
	BASIC-1_68:4.21
	BASIC-1_67:4.21
	BASIC-1_66:4.20
	BASIC-1_65:4.20
	BASIC-1_64:4.20
	BASIC-1_63:4.20
	BASIC-1_62:4.20
	BASIC-1_61:4.18
	BASIC-1_60:4.18
	BASIC-1_59:4.18
	BASIC-1_58:4.16
	BASIC-1_57-pre4:4.15
	BASIC-1_57:4.16
	BASIC-1_57-pre3:4.15
	BASIC-1_57-pre2:4.15
	BASIC-1_57-pre1:4.15
	BASIC-1_56:4.15
	BASIC-1_55:4.15
	BASIC-1_54:4.15
	BASIC-1_53:4.15
	BASIC-1_52:4.15
	BASIC-1_51:4.15
	BASIC-1_50:4.14
	BASIC-1_49:4.13
	BASIC-1_48:4.11
	BASIC-1_47:4.11
	BASIC-1_46:4.11
	BASIC-1_45:4.11
	BASIC-1_44:4.11
	BASIC-1_43:4.11
	BASIC-1_42:4.11
	BASIC-1_41:4.11
	BASIC-1_40:4.11
	BASIC-1_39:4.11
	BASIC-1_37:4.11
	RO_5_07:4.11
	BASIC-1_36:4.11
	BASIC-1_35:4.11
	BASIC-1_34:4.11
	BASIC-1_33:4.11
	BASIC-1_32:4.11
	BASIC-1_31:4.11
	BASIC-1_30:4.11
	BASIC-1_29:4.11
	BASIC-1_28:4.11
	BASIC-1_27:4.11
	BASIC-1_26:4.10
	BASIC-1_25:4.10
	BASIC-1_24:4.10
	BASIC-1_23:4.9
	BASIC-1_22:4.8
	BASIC-1_21:4.7
	BASIC-1_20:4.6
	BASIC-1_19:4.6
	BASIC-1_18:4.5
	Ursula_merge:4.3.2.1
	nturton_BASIC-1_18:4.5
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3.2.1
	Ursula_RiscPC:4.3.2.1.0.2
	nicke_BASIC_13-10-98:4.5
	rthornb_UrsulaBuild-19Aug1998:4.3.2.1
	UrsulaBuild_FinalSoftload:4.3.2.1
	rthornb_UrsulaBuild-12Aug1998:4.3.2.1
	aglover_UrsulaBuild-05Aug1998:4.3.2.1
	rthornb_UrsulaBuild-29Jul1998:4.3.2.1
	rthornb_UrsulaBuild-22Jul1998:4.3.2.1
	rthornb_UrsulaBuild-15Jul1998:4.3.2.1
	rthornb_UrsulaBuild-07Jul1998:4.3.2.1
	rthornb_UrsulaBuild-17Jun1998:4.3.2.1
	rthornb_UrsulaBuild-03Jun1998:4.3.2.1
	rthornb_UrsulaBuild-27May1998:4.3.2.1
	rthornb_UrsulaBuild-21May1998:4.3.2.1
	rthornb_UrsulaBuild_01May1998:4.3.2.1
	afrost_NC2_Generic:4.1.7.3
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Daytona:4.3.0.4
	Daytona_bp:4.3
	Ursula:4.3.0.2
	Ursula_bp:4.3
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.2
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	ARTtmp:4.1.7.2.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.22
date	2018.02.25.18.47.29;	author jlee;	state Exp;
branches;
next	4.21;
commitid	plJX5OQyK2HFVgsA;

4.21
date	2017.06.03.22.30.14;	author jlee;	state Exp;
branches;
next	4.20;
commitid	3Iuze3DCMuQaKYTz;

4.20
date	2016.05.30.08.25.17;	author rsprowson;	state Exp;
branches;
next	4.19;
commitid	ILKuI8PcXDF5Vt8z;

4.19
date	2016.05.29.15.05.59;	author rsprowson;	state Exp;
branches;
next	4.18;
commitid	MkqD0n1ng1K3bo8z;

4.18
date	2015.01.06.02.12.19;	author jlee;	state Exp;
branches;
next	4.17;
commitid	WAhc6xI7JGZ7gU4y;

4.17
date	2014.09.24.21.07.28;	author bavison;	state Exp;
branches;
next	4.16;
commitid	qciAFgpcX9uOSDRx;

4.16
date	2013.12.01.18.09.26;	author rsprowson;	state Exp;
branches;
next	4.15;
commitid	g83hl4RCFV1Crsfx;

4.15
date	2012.03.08.20.48.59;	author jlee;	state Exp;
branches;
next	4.14;
commitid	yE826IbqBRjSF7Wv;

4.14
date	2012.03.07.23.34.17;	author jlee;	state Exp;
branches;
next	4.13;
commitid	mqtCES9yyNSyC0Wv;

4.13
date	2012.02.05.09.06.54;	author rsprowson;	state Exp;
branches;
next	4.12;
commitid	s8YK6hsUfVcIOWRv;

4.12
date	2011.12.19.16.48.18;	author jlee;	state Exp;
branches;
next	4.11;
commitid	pdX82Kz8wJDIUOLv;

4.11
date	2001.05.11.09.31.10;	author sbrodie;	state Exp;
branches;
next	4.10;

4.10
date	2001.03.16.19.11.50;	author srevill;	state Exp;
branches;
next	4.9;

4.9
date	2001.03.14.20.00.30;	author srevill;	state Exp;
branches;
next	4.8;

4.8
date	2001.02.23.11.33.39;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	2001.02.22.17.17.18;	author kbracey;	state Exp;
branches;
next	4.6;

4.6
date	2000.05.12.11.58.14;	author kbracey;	state Exp;
branches;
next	4.5;

4.5
date	98.09.22.10.43.30;	author nturton;	state Exp;
branches;
next	4.4;

4.4
date	98.09.08.08.02.29;	author kbracey;	state dead;
branches;
next	4.3;

4.3
date	97.05.07.10.16.22;	author kbracey;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	97.01.22.15.14.28;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.49.55;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.3.2.1
date	98.03.26.14.18.04;	author rthornb;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.49.55;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.18.00;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.04.52;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.36.26;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.11.19.18.02;	author nturton;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.09.04.13.11.34;	author rbuckley;	state dead;
branches;
next	;


desc
@@


4.22
log
@VFP/NEON assembler improvements
Detail:
 - Makefile - Add hdr.VFPMacros as a dependency of VFPData
 - Tests/VFP/TestVFP,ffb - Add some assembly tests for the new instructions
 - VFPLib/VFPLib - Remove some non-standard patterns ('D' and 'F' used as data type specifiers). Add the ARMv8 (AArch32) VFP/NEON instructions, and VFPv3 half-precision VCVTB/VCVTT
 - hdr/VFPMacros - Save a few KB of ROM space by changing some tables to use halfword elements instead of words
 - s/VFP - Add VFP_LDRH macro to deal with the compressed tables. Fix VMRS of MVFRn registers (erroneously attempted to convert the digit to upper-case), and add MVFR2
Admin:
  Tested on Raspberry Pi 3


Version 1.74. Tagged as 'BASIC-1_74'
@
text
@# Copyright 1996 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for BASIC
#

COMPONENT    ?= BASIC105
VFPASM       ?= TRUE
RESDIR       ?= _!_x_!_
RESFSDIR      = ${RESDIR}.BASIC

ifeq ($(VFPASM),TRUE)
ASFLAGS       = -PD "VFPAssembler SETL {TRUE}"
SA_DEPEND     = VFPData
INSTRES_FILES = VFPData
INSTRES_DEPENDS = VFPData

s.VFPData: VFPLib.VFPLib VFPLib.GenData
	BASIC { < VFPLib.GenData }

VFPData: s.VFPData hdr.VFPMacros
	${MKDIR} o
	${AS} ${ASFLAGS} -PD "BuildingVFPData SETL {TRUE}" -o o.VFPData s.VFPData
	${LD} -BIN -o $@@ o.VFPData

clean::
	${RM} s.VFPData
	${RM} VFPData
endif

include StdTools
include AAsmModule

ifeq ($(COMPONENT),BASICVFP)
AS            = ObjAsmVFP
endif

# Dynamic dependencies:
@


4.21
log
@Add "BASICVFP", a VFP version of BASIC64
Detail:
  See Doc/BASICVFP for overall design/specification
  File changes:
  - !Mk,fd7, !MkClean,fd7, !MkRom,fd7, Makefile - update build scripts to support BASICVFP target
  - Resources/UK/Messages - Add a few new messages
  - hdr/Definitions - Define BASICVFP register usage and a few utility macros
  - hdr/WorkSpace - Define BASICVFP workspace adjustments. Add a few asserts to check some workspace constraints are maintained.
  - s/* - Lots of changes to add support for BASICVFP variant of the module
Admin:
  Tested on Raspberry Pi 1/2/3, BB-xM


Version 1.67. Tagged as 'BASIC-1_67'
@
text
@d32 1
a32 1
VFPData: s.VFPData
@


4.20
log
@Build fix
For standalone builds wanting VFP assembler support, a dependency is needed on VFPData since there's no preceding resources phase. This dependency got trimmed in error in revision 4.19 of this file.
Retagged as BASIC-1_62.
@
text
@d45 4
@


4.19
log
@Remove use of RESOURCEEXTRA
Requires BuildSys-6_91.
Retagged as BASIC-1_62.
@
text
@d25 1
@


4.18
log
@Makefile fix for s.VFPData
Detail:
  Makefile - Split the VFPData rule into two parts so that it's clear where s.VFPData comes from. Fixes amu throwing 'Don't know how to make ...' errors when doing repeated builds of PlingSystem.
Admin:
  Tested with PlingSystem build


Version 1.59. Retagged as 'BASIC-1_59'
@
text
@d25 2
a26 6
RESOURCEEXTRA = ${RESFSDIR}.VFPData
SA_DEPEND     = VFPData

${RESOURCEEXTRA}: VFPData
	${MKDIR} ${RESFSDIR}
	${CP} VFPData $@@ ${CPFLAGS}
@


4.17
log
@  Tweaks to permit BASIC to cross-compile
Detail:
  * Changed file paths to forms that also work when cross-compiling
  * Changed case of filenames so they match on case-sensitive filing systems
  * Makefile needs to use leading tabs
  * Escaped the '$' in 'BASIC$Crunch' (squashes a warning in new version of
    objasm - unrelated to cross-compilation)
Admin:
  Cross-compiles OK with Norcroft tools, though asasm can't stomach the
  expressions BASIC uses. Checked it still builds with RISC OS Norcroft.

Version 1.59. Not tagged
@
text
@d32 4
a35 1
VFPData: VFPLib.VFPLib VFPLib.GenData
a36 1
	BASIC { < VFPLib.GenData }
@


4.16
log
@Have BASIC manage its own messages
For the standalone case BASIC[64] will now register its own resources into Resources/BASIC/BASIC[64]Msgs.
For the ROM case BASIC[64] will share them in Resources/BASIC/Messages as before.
This ensures that regardless of the order of loading, and the potential that a ROM and standalone version might be mixed, both ends up seeing the messages its expecting to see.
Tested in a ROM build and softloaded on RISC OS 4.02.

Version 1.57. Tagged as 'BASIC-1_57'
@
text
@d29 2
a30 2
        ${MKDIR} ${RESFSDIR}
        ${CP} VFPData $@@ ${CPFLAGS}
d33 4
a36 4
        ${MKDIR} o
        BASIC { < VFPLib.GenData }
        ${AS} ${ASFLAGS} -PD "BuildingVFPData SETL {TRUE}" -o o.VFPData s.VFPData
        ${LD} -BIN -o $@@ o.VFPData
d39 2
a40 2
        ${RM} s.VFPData
        ${RM} VFPData
@


4.15
log
@Fix building from clean
Detail:
  Makefile - Make sure 'o' directory exists when creating VFPData file. Required since for ROM builds VFPData is now generated during resources phase instead of rom phase.
Admin:
  Tested with building IOMD ROM from clean


Version 1.50. Not tagged
@
text
@d18 4
a21 11
COMPONENT   ?= BASIC105
VFPASM      ?= TRUE
ifeq ($(VFPASM),TRUE)
RESOURCES    = -private
else
RESOURCES    = no
endif
RESFSDIR     = ${RESDIR}.BASIC

include StdTools
include AAsmModule
d24 3
a26 2
${ROM_OBJECT} ${SA_OBJECT} ${DBG_OBJECT}: s.VFPData
ASFLAGS += -PD "VFPAssembler SETL {TRUE}"
d28 1
a28 1
resources: o.VFPData
d30 1
a30 2
        ${LD} -BIN -Output ${RESFSDIR}.VFPData o.VFPData
endif
d32 2
a33 1
s.VFPData: VFPLib.VFPLib VFPLib.GenData
d35 2
a36 4

o.VFPData: s.VFPData
        ${MKDIR} o
        ${AS} ${ASFLAGS} -PD "standaloneVFPData SETL {TRUE}" -PD "standalone SETL {TRUE}" -o $@@ s.VFPData 
d40 5
@


4.14
log
@VFP/NEON assembler fixes and improvements
Detail:
  * Reworked to make ROM builds reference VFP/NEON assembler lookup tables held in ResourceFS instead of using local copies held in the module. Saves ~32K of ROM space due to reduced data duplication between BASIC & BASIC64.
  * Replace OPT flag magic numbers with symbols
  * Added support for VFPv4/ASIMDv2 instructions (VFMA/VFMS, VFNMA/VFNMS)
  * Updated DCFD/EQUFD to add support for .VFP and .FPA suffixes, to indicate whether VFP or FPA word order should be used
  * Added DCFH/EQUFH for storing half precision floats (in advanced half precision format)
  * Rework MSG routine to preserve R4-R7, for passing to BASICTrans as message parameters
  * Added a few new error messages (118-123) for the VFP/NEON assembler
  * Enable OWNERRORS option for standalone builds, and set DO32BIT to 0 for 26bit builds
  * Fixed VLDM/VSTM style register lists not working correctly when using commas to list the registers
  * Improved handling of VFP/NEON 8 bit immediate constants:
    - No longer possible to use #I64.<n>, #F32.<n>, #F64.<n> notation to directly specify the 8-bit encoded value for I64/F32/F64 constants, nor to force one instruction to attempt to use a constant in a format that doesn't match the .<dt> instruction suffix
    - Instead, .I64 constants can either be specified as a number (which will be converted to an integer and then zero-extended to 64 bits) or a string (which will be parsed by the 64bit version of OS_ReadUnsigned)
    - .F32 and .F64 constants should now be specified as floating point numbers which will then be correctly converted to the 8 bit encoding
    - .F32 and .F64 constants which can't be converted will result in a error message indicating the closest possible floating point number that can be encoded (but not necessarily the closest number that can be encoded; e.g. when assembling NEON instructions the assembler can automatically make use of .I32 encoding formats for some numbers)
  * Fixed instructions that have an 'imn' field (e.g. VSHR immediate) being incorrectly assembled
  * VFPLib.GenData & VFPLib.VFPLib now stored as text instead of tokenised BASIC
  Files changed:
  * Makefile, VFPLib.GenData, VFPLib.VFPLib, hdr.VFPMacros, hdr.Workspace, s.Assembler, s.Basic, s.ErrorMsgs, s.Factor, s.ModHead, s.VFP
Admin:
  Tested as softloaded module & in Iyonix ROM softload
  Requires BASICTrans 2.13 for new error messages to work properly


Version 1.50. Tagged as 'BASIC-1_50'
@
text
@d43 1
@


4.13
log
@Clean step simplified.
Retagged.
@
text
@d19 4
d24 2
a25 1
VFPASM      ?= TRUE
d31 1
a31 1
o.${MACHINE}.${COMPONENT}: s.VFPData
d33 4
d40 4
a43 1
        ${RUN}VFPLib.GenData
@


4.12
log
@Add TBA Software's VFP/NEON assembler
Detail:
  This is version 0.06 of TBA's VFP/NEON BASIC assembler, with the following modifications:
  * VFPASM makefile option can be used to toggle the assembler on/off. Currently only used by the Tungsten ROM, due to lack of ROM space.
  * EnableVFPDebug switch added to turn on/off debugging code
  * VFP_Error macro fixed (VFPError symbol wasn't defined in 0.06 sources; now it just calls MSGERR directly)
  * Debug messages tweaked to make them a bit more useful
  * Single-register LDM/STM swapped for LDR/STR to avoid objasm 4 performance warnings
  * Fixed a bug in VFPop_imm_bits that caused parsing of immediate constants to fail in ROM builds, and potentially fail or misbehave in RAM builds. A sequence of conditional instructions incorrectly had the 'S' flag set on each instruction, which could cause the execution to stop halfway through.
  * VFPLib BASIC file moved from Tests.VFP folder into all-new VFPLib folder
  * Makefile modified and VFPLib.GenData script added, in order to allow s.VFPData to be built automatically as part of the build process instead of relying on a prebuilt version in CVS
  File changes:
  - Doc/VFPdoc - VFP assembler implementation notes & usage notes
  - Tests/VFP/!Setup,feb, Tests/VFP/TestVFP,ffb, Tests/VFP/VFPLibAsm,ffb, Tests/VFP/VFPLibTest,ffb - VFP test programs
  - VFPLib/GenData,ffb, VFPLib/VFPLib,ffb - Common BASIC files used to generate the pattern tables used by the assembler, and used by the test programs
  - s/VFP, hdr/VFPMacros - Main VFP/NEON assembler source code
  - Makefile - Modified to allow automatic generation of s.VFPData file
  - s/Assembler - Modified to call VFP assembler for instructions starting with 'V'
  - s/ModHead - Replaced ADRL with a sequence of ADD instructions due to module now being over 64K in size
Admin:
  Tested on rev A2 BB-xM in ROM & softload forms


Version 1.49. Tagged as 'BASIC-1_49'
@
text
@a16 6
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name   Description
# ----       ----   -----------
# 11-May-01  SNB    Recreated.
a20 1
CLEAN_DEPEND = vfpclean
d31 1
a31 1
        VFPLib.GenData
d33 1
a33 1
vfpclean::
@


4.11
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.72 or later.
  Requires BuildSys 3.09 or later.
  Requires Env 0.65 or later.

Version 1.27. Tagged as 'BASIC-1_27'
@
text
@d26 2
d32 11
@


4.10
log
@  Some bug fixes and a few new features.
Detail:
  * ALIGN will now force any unused bytes to zero when assembling at
    both P% and O%. This is better than leaving possibly uninitialised
    memory behind (makes diffs very difficult).

  * The assembler now correctly recognises the new 'LR' special variable
    when the L is lower-case.

  * The assembler also has the 'SP' (13) special variable defined.

  * TRACE PROC (and the identical TRACE FN) now flushes the VCACHE when
    it is encountered.

  * TRACE ENDPROC has been implemented to allow the output of 'ENDPROC'
    and 'ENDFN' in the trace output whenever a procedure or function is
    exited. This complements the TRACE PROC/FN functionality.

  * QUIT <expression> has been added to allow a return code to be passed
    back to the called when BASIC exits. This is the /only/ sensible way
    for a BASIC program to set Sys$ReturnCode on exit (others get trashed
    when BASIC removes it's environment handlers).
Admin:
  Tested on a StrongARM RiscPC.

  Some of the reformatting from the last checkin has been improved.

  s.ModuleAB and s.ModuleAB64 have been renamed to s.BASIC105 and
  s.BASIC64 respectively. This will help with the new Brodie Make-o-
  Matik(tm) Makefiles.

Version 1.24. Tagged as 'BASIC-1_24'
@
text
@d22 1
a22 2
# 08-Jun-94  AMcC   Created.
# 08-Nov-94  AMcC   Updated to install BASIC64 (non ROM)
d24 2
a25 4
#
# Paths
#
EXP_HDR = <export$dir>
d27 2
a28 54
#
# Generic options:
#
MKDIR   = cdir
AS      = aasm
CP      = copy
RM      = remove
CCFLAGS = -c -depend !Depend -IC:
ASFLAGS = -depend !Depend -Stamp -quit -module -To $@@ -From
CPFLAGS = ~cfr~v

TOKENISE = tokenise
TOKENS   = Hdr:Tokens

#
# Program specific options:
#
EXPORTS   =
TARGETS   = rm.${COMPONENT}

#
# Generic rules:
#
all: rm.BASIC64 rm.BASIC105
        @@echo ${COMPONENT}: BASIC64 and BASIC105 modules built

rom: ${TARGETS}
        @@echo ${COMPONENT}: rom module built

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

install: rm.BASIC64
        ${CP} rm.BASIC64 ${INSTDIR}.BASIC64 ${CPFLAGS}
        Access ${INSTDIR}.BASIC64 WR/r
        @@echo ${COMPONENT}: BASIC64 installed (Disc)

install_rom: ${TARGETS}
        ${CP} rm.${COMPONENT} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom module installed

clean:
        ${RM} rm.BASIC64
        ${RM} rm.BASIC105
        @@echo ${COMPONENT}: cleaned

resources:
        @@echo ${COMPONENT}: resource files copied

rm.BASIC105: s.BASIC105
        ${AS} ${ASFLAGS} s.BASIC105

rm.BASIC64: s.BASIC64
        ${AS} ${ASFLAGS} s.BASIC64
@


4.9
log
@  Improved BASIC build structure. No code change.
Detail:
  Makefile strips dependencies during the clean phase.

  Sources moved into an 's' directory.

  All sources reformatted into a more readable layout.
Admin:
  Builds binary-identical versions of BASIC and BASIC64 modules to
  version 1.22

Version 1.23. Tagged as 'BASIC-1_23'
@
text
@a36 1
STRIP   = -stripdepnd
d47 1
a47 1
EXPORTS   = 
a73 1
        ${STRIP}
d79 2
a80 2
rm.BASIC105: s.ModuleAB
        ${AS} ${ASFLAGS} s.ModuleAB
d82 2
a83 2
rm.BASIC64: s.ModuleAB64
        ${AS} ${ASFLAGS} s.ModuleAB64
@


4.8
log
@* Added !Mk and !MkClean TaskObey files for convenience.
* Added new LDC CP0,C0,[R0],{opt} syntax.
* Fixed coprocessor register parsing error in previous version.

Version 1.22. Tagged as 'BASIC-1_22'
@
text
@d37 1
d75 1
d81 2
a82 2
rm.BASIC105: ModuleAB
        ${AS} ${ASFLAGS} ModuleAB
d84 2
a85 2
rm.BASIC64: ModuleAB64
        ${AS} ${ASFLAGS} ModuleAB64
@


4.7
log
@* Added ARMv5TE opcodes to assembler.
* Fixed some minor parsing errors in long opcodes.

Version 1.21. Tagged as 'BASIC-1_21'
@
text
@d53 2
a54 2
all: rm.BASIC64
        @@echo ${COMPONENT}: BASIC64 module built
@


4.6
log
@32-bit compatible. Tagged as BASIC-1_19.
@
text
@a46 1
COMPONENT = BASIC
d48 1
a48 1
TARGETS   = rm.BASIC105
d68 1
a68 1
        ${CP} rm.BASIC105 ${INSTDIR}.BASIC105 ${CPFLAGS}
@


4.5
log
@Removed BASICTrans.  Now in a separate directory.
@
text
@a86 26
rm.BASIC64: BASIC
rm.BASIC64: Fp
rm.BASIC64: Fp2
rm.BASIC64: Expr
rm.BASIC64: Factor
rm.BASIC64: Funct
rm.BASIC64: Stmt
rm.BASIC64: Stmt2
rm.BASIC64: Array
rm.BASIC64: Assembler
rm.BASIC64: Lexical
rm.BASIC64: Command
rm.BASIC64: ErrorMsgs
rm.BASIC105: BASIC
rm.BASIC105: Fp
rm.BASIC105: Fp2
rm.BASIC105: Expr
rm.BASIC105: Factor
rm.BASIC105: Funct
rm.BASIC105: Stmt
rm.BASIC105: Stmt2
rm.BASIC105: Array
rm.BASIC105: Assembler
rm.BASIC105: Lexical
rm.BASIC105: Command
rm.BASIC105: ErrorMsgs
@


4.4
log
@Spinner branch merged
@
text
@d48 2
a49 3
EXPORTS   = ${EXP_HDR}.BASICTrans
TARGETS   = rm.BASIC105 \
            rm.BASICTrans
a69 1
        ${CP} rm.BASICTrans ${INSTDIR}.BASICTrans ${CPFLAGS}
a74 1
        ${RM} rm.BASICTrans
d77 1
a77 1
resources: resources-${CMDHELP}
a79 10
resources_common:
        ${MKDIR} ${RESDIR}.${COMPONENT}
        ${CP} Resources.${LOCALE}.Messages  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}

resources-None: resources_common
	@@

resources-: resources_common
	print Resources.${LOCALE}.CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }

a85 6
rm.BASICTrans: TransSrc
        ${AS} ${ASFLAGS} TransSrc

${EXP_HDR}.BASICTrans: hdr.BASICTrans
        ${CP} hdr.BASICTrans $@@ ${CPFLAGS}

a112 14
rm.BASICTrans: Hdr:ListOpts
rm.BASICTrans: Hdr:Macros
rm.BASICTrans: Hdr:System
rm.BASICTrans: Hdr:SWIs
rm.BASICTrans: Hdr:CPU.Generic26
rm.BASICTrans: Hdr:IO.GenericIO
rm.BASICTrans: Hdr:RISCOS
rm.BASICTrans: Hdr:CMOS
rm.BASICTrans: Hdr:ModHand
rm.BASICTrans: Hdr:Services
rm.BASICTrans: Hdr:Proc
rm.BASICTrans: Hdr:FSNumbers
rm.BASICTrans: Hdr:NewErrors
rm.BASICTrans: Hdr:MsgTrans
@


4.3
log
@ARTtmp branch folded
@
text
@@


4.3.2.1
log
@Removed dynamic dependancies from Makefiles and removed all reference to Prefix
@
text
@d106 40
@


4.2
log
@Version Spin_merge taken
@
text
@d80 4
a83 1
resources:
d86 6
a91 1
        @@echo ${COMPONENT}: resource files copied
@


4.1
log
@Initial revision
@
text
@d98 13
a137 13
rm.BASIC64: BASIC
rm.BASIC64: Fp
rm.BASIC64: Fp2
rm.BASIC64: Expr
rm.BASIC64: Factor
rm.BASIC64: Funct
rm.BASIC64: Stmt
rm.BASIC64: Stmt2
rm.BASIC64: Array
rm.BASIC64: Assembler
rm.BASIC64: Lexical
rm.BASIC64: Command
rm.BASIC64: ErrorMsgs
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a97 13
rm.BASIC64: BASIC
rm.BASIC64: Fp
rm.BASIC64: Fp2
rm.BASIC64: Expr
rm.BASIC64: Factor
rm.BASIC64: Funct
rm.BASIC64: Stmt
rm.BASIC64: Stmt2
rm.BASIC64: Array
rm.BASIC64: Assembler
rm.BASIC64: Lexical
rm.BASIC64: Command
rm.BASIC64: ErrorMsgs
d125 13
@


4.1.7.2
log
@Command line messages removed
@
text
@d80 1
a80 4
resources: resources-${CMDHELP}
        @@echo ${COMPONENT}: resource files copied

resources_common:
d83 1
a83 6

resources-None: resources_common
	@@

resources-: resources_common
	print Resources.${LOCALE}.CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }
@


4.1.7.3
log
@Re-jigged the BASIC build such that the two modules have seperate makefiles
to simplify the build process.
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
