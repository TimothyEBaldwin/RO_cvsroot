head	4.37;
access;
symbols
	HdrSrc-2_77:4.37
	HdrSrc-2_76:4.37
	HdrSrc-2_75:4.37
	HdrSrc-2_74:4.37
	HdrSrc-2_73:4.37
	HdrSrc-2_72:4.37
	HdrSrc-2_71:4.37
	HdrSrc-2_70:4.37
	HdrSrc-2_69:4.37
	HdrSrc-2_68:4.37
	HdrSrc-2_67:4.37
	HdrSrc-2_66:4.37
	HdrSrc-2_65:4.37
	HdrSrc-2_64:4.37
	HdrSrc-2_63:4.37
	HdrSrc-2_62:4.37
	HdrSrc-2_61:4.37
	HdrSrc-2_60:4.37
	HdrSrc-2_59:4.37
	HdrSrc-2_58:4.37
	HdrSrc-2_57:4.37
	HdrSrc-2_56:4.37
	HdrSrc-2_55:4.37
	HdrSrc-2_54:4.37
	HdrSrc-2_53:4.37
	HdrSrc-2_52:4.37
	HdrSrc-2_51:4.37
	HdrSrc-2_50:4.37
	HdrSrc-2_49:4.37
	HdrSrc-2_48:4.36
	HdrSrc-2_47:4.35
	HdrSrc-2_46-4_247_2_1:4.34
	XCompile:4.34.0.2
	XCompile_bp:4.34
	HdrSrc-2_46:4.34
	HdrSrc-2_45:4.34
	HdrSrc-2_44:4.34
	HdrSrc-2_43:4.34
	HdrSrc-2_42:4.34
	HdrSrc-2_41:4.34
	HdrSrc-2_40-1:4.34
	HdrSrc-2_40:4.34
	HdrSrc-2_39:4.34
	HdrSrc-2_38:4.34
	HdrSrc-2_37:4.34
	HdrSrc-2_36:4.34
	HdrSrc-2_35:4.33
	HdrSrc-2_34:4.33
	HdrSrc-2_33:4.33
	HdrSrc-2_32:4.33
	HdrSrc-2_31:4.33
	HdrSrc-2_30:4.33
	HdrSrc-2_29:4.33
	HdrSrc-2_28:4.33
	HdrSrc-2_27:4.33
	HdrSrc-2_26:4.32
	HdrSrc-2_25:4.32
	HdrSrc-2_24:4.32
	HdrSrc-2_23:4.32
	HdrSrc-2_22:4.32
	HdrSrc-2_21:4.32
	HdrSrc-2_20:4.32
	HdrSrc-2_19:4.32
	HdrSrc-2_18:4.32
	HdrSrc-2_17:4.32
	HdrSrc-2_16:4.32
	HdrSrc-2_15:4.32
	HdrSrc-2_14:4.32
	HdrSrc-2_13:4.32
	HdrSrc-2_12:4.32
	HdrSrc-2_11:4.32
	HdrSrc-2_10:4.32
	HdrSrc-2_09:4.32
	HdrSrc-2_08:4.32
	HdrSrc-2_07:4.32
	HdrSrc-2_06:4.32
	HdrSrc-2_05:4.32
	HdrSrc-2_04:4.32
	HdrSrc-2_03:4.32
	HdrSrc-2_02:4.32
	HdrSrc-2_01:4.32
	HdrSrc-2_00:4.32
	HdrSrc-1_99:4.32
	HdrSrc-1_98:4.32
	HdrSrc-1_97:4.32
	HdrSrc-1_96:4.31
	HdrSrc-1_95:4.31
	HdrSrc-1_94:4.31
	HdrSrc-1_93:4.31
	HdrSrc-1_92:4.31
	HdrSrc-1_91:4.31
	HdrSrc-1_90:4.31
	HdrSrc-1_89:4.31
	HdrSrc-1_88:4.31
	HdrSrc-1_87:4.30
	HdrSrc-1_86:4.30
	HdrSrc-1_85:4.30
	HdrSrc-1_84:4.30
	HdrSrc-1_83:4.30
	HdrSrc-1_82:4.30
	HdrSrc-1_81:4.30
	HdrSrc-1_80:4.29
	HdrSrc-1_79:4.29
	HdrSrc-1_78:4.29
	HdrSrc-1_77:4.28
	HdrSrc-1_76:4.28
	Cortex_merge:4.25.2.3
	HdrSrc-1_62-4_162_2_15:4.25.2.3
	HdrSrc-1_75:4.27
	HdrSrc-1_62-4_162_2_14:4.25.2.3
	HdrSrc-1_74:4.27
	HdrSrc-1_62-4_162_2_13:4.25.2.2
	HdrSrc-1_62-4_162_2_12:4.25.2.2
	HdrSrc-1_73:4.27
	HdrSrc-1_72:4.27
	HdrSrc-1_62-4_162_2_11:4.25.2.2
	HdrSrc-1_62-4_162_2_10:4.25.2.2
	HdrSrc-1_71:4.27
	HdrSrc-1_70:4.27
	HdrSrc-1_69:4.26
	Cortex_bp:4.26
	HdrSrc-1_62-4_162_2_9:4.25.2.2
	HdrSrc-1_62-4_162_2_8:4.25.2.2
	HdrSrc-1_68:4.26
	HdrSrc-1_62-4_162_2_7:4.25.2.2
	HdrSrc-1_62-4_162_2_6:4.25.2.2
	HdrSrc-1_62-4_162_2_5:4.25.2.2
	HdrSrc-1_62-4_162_2_4:4.25.2.2
	HdrSrc-1_67:4.26
	HdrSrc-1_66:4.26
	HdrSrc-1_62-4_162_2_3:4.25.2.2
	HdrSrc-1_65:4.26
	HdrSrc-1_64:4.25
	HdrSrc-1_63:4.25
	HdrSrc-1_62-4_162_2_2:4.25.2.1
	HdrSrc-1_62-4_162_2_1:4.25
	Cortex:4.25.0.2
	HdrSrc-1_62:4.25
	HdrSrc-1_61:4.25
	HdrSrc-1_60:4.25
	HdrSrc-1_59:4.24
	HdrSrc-1_58:4.24
	HdrSrc-1_57:4.24
	HdrSrc-1_56:4.24
	HdrSrc-1_55:4.24
	HdrSrc-1_54:4.24
	HdrSrc-1_53:4.24
	HdrSrc-1_52:4.24
	HdrSrc-1_51:4.24
	HdrSrc-1_50:4.24
	HdrSrc-1_49:4.22
	HdrSrc-1_48:4.22
	HdrSrc-1_47:4.22
	RO_5_07:4.22
	HdrSrc-1_46:4.22
	HdrSrc-1_45:4.22
	HdrSrc-1_44:4.22
	HdrSrc-1_43:4.22
	HdrSrc-1_42:4.22
	HdrSrc-1_41:4.22
	HdrSrc-1_40:4.21
	HdrSrc-1_39:4.21
	HdrSrc-1_38:4.21
	HdrSrc-1_37:4.21
	HdrSrc-1_36:4.21
	HdrSrc-1_35:4.21
	HdrSrc-1_34:4.20
	HdrSrc-1_33:4.20
	HdrSrc-1_32:4.19
	HdrSrc-1_31:4.19
	HdrSrc-1_30:4.19
	HdrSrc-1_29:4.19
	HdrSrc-1_28:4.19
	HdrSrc-1_27:4.19
	HdrSrc-1_26:4.19
	HdrSrc-1_25:4.19
	HdrSrc-1_24:4.19
	HdrSrc-1_23:4.19
	HdrSrc-1_22:4.19
	HdrSrc-1_21:4.19
	HdrSrc-1_20:4.19
	HdrSrc-1_19:4.19
	HdrSrc-1_18:4.19
	HdrSrc-1_17:4.19
	HdrSrc-1_16:4.18
	HdrSrc-1_15:4.18
	HdrSrc-1_14:4.18
	HdrSrc-1_13:4.18
	HdrSrc-1_12:4.18
	HdrSrc-1_11:4.18
	HdrSrc-0_71-4_72_2_2:4.15
	HdrSrc-1_10:4.18
	HdrSrc-1_09:4.18
	HdrSrc-1_08:4.18
	HdrSrc-1_07:4.18
	HdrSrc-1_06:4.18
	HdrSrc-1_05:4.18
	dellis_autobuild_BaseSW:4.18
	HdrSrc-1_04:4.18
	HdrSrc-1_03:4.18
	HdrSrc-1_02:4.18
	HdrSrc-1_00:4.18
	HdrSrc-0_99:4.18
	HdrSrc-0_71-4_72_2_1:4.15
	Lazarus_Z11:4.15.0.2
	HdrSrc-0_98:4.18
	HdrSrc-0_97:4.18
	HdrSrc-0_95:4.18
	HdrSrc-0_94:4.18
	HdrSrc-0_93:4.18
	HdrSrc-0_92:4.18
	HdrSrc-0_91:4.18
	HdrSrc-0_90:4.18
	HdrSrc-0_89:4.18
	HdrSrc-0_88:4.18
	HdrSrc-0_87:4.18
	HdrSrc-0_86:4.17
	HdrSrc-0_85:4.17
	HdrSrc-0_84:4.17
	HdrSrc-0_83:4.17
	HdrSrc-0_82:4.17
	HdrSrc-0_81:4.17
	HdrSrc-0_80:4.17
	HdrSrc-0_79:4.17
	HdrSrc-0_78:4.16
	HdrSrc-0_77:4.16
	sbrodie_sedwards_16Mar2000:4.16
	HdrSrc-0_76:4.16
	HdrSrc-0_75:4.16
	HdrSrc-0_74:4.16
	HdrSrc-0_73:4.16
	HdrSrc-0_72:4.16
	HdrSrc-0_71:4.15
	HdrSrc-0_70:4.15
	HdrSrc-0_69:4.15
	HdrSrc-0_68:4.15
	HdrSrc-0_67:4.15
	HdrSrc-0_66:4.14
	HdrSrc-0_65:4.14
	HdrSrc-0_64:4.14
	kbracey_32bit_merge:4.11.2.2
	HdrSrc-0_63:4.14
	HdrSrc-0_57-4_58_2_9:4.11.2.2
	HdrSrc-0_57-4_58_2_8:4.11.2.2
	HdrSrc-0_57-4_58_2_7:4.11.2.2
	HdrSrc-0_57-4_58_2_6:4.11.2.2
	HdrSrc-0_57-4_58_2_5:4.11.2.2
	HdrSrc-0_57-4_58_2_4:4.11.2.2
	HdrSrc-0_57-4_58_2_3:4.11.2.2
	HdrSrc-0_62:4.13
	HdrSrc-0_61:4.13
	HdrSrc-0_60:4.13
	HdrSrc-0_57-4_58_2_2:4.11.2.2
	HdrSrc-0_59:4.13
	HdrSrc-0_58:4.12
	HdrSrc-0_57-4_58_2_1:4.11.2.1
	kbracey_32bit:4.11.0.2
	HdrSrc-0_57:4.11
	HdrSrc-0_56:4.11
	HdrSrc-0_55:4.11
	HdrSrc-0_54:4.11
	HdrSrc-0_53:4.11
	HdrSrc-0_52:4.11
	HdrSrc-0_51:4.11
	HdrSrc-0_50:4.11
	HdrSrc-0_49:4.11
	HdrSrc-0_48:4.11
	HdrSrc-0_47:4.11
	HdrSrc-0_46:4.11
	HdrSrc-0_45:4.11
	HdrSrc-0_44:4.11
	HdrSrc-0_43:4.11
	HdrSrc-0_42:4.11
	dcotton_autobuild_BaseSW:4.19
	HdrSrc-0_41:4.11
	HdrSrc-0_39:4.11
	HdrSrc-0_38:4.11
	HdrSrc-0_37:4.11
	HdrSrc-0_36:4.11
	HdrSrc-0_35:4.11
	HdrSrc-0_34:4.11
	HdrSrc-0_33:4.10
	HdrSrc-0_32:4.9
	HdrSrc-0_31:4.8
	Ursula_RiscPC_merge:4.2.8.1
	HdrSrc-0_30:4.8
	HdrSrc-0_29:4.8
	Ursula_merge:4.2.2.1
	HdrSrc-0_28:4.8
	HdrSrc-0_27:4.8
	HdrSrc-0_26:4.7
	HdrSrc-0_25:4.7
	HdrSrc-0_24:4.7
	HdrSrc-0_23:4.7
	HdrSrc-0_22:4.7
	HdrSrc-0_21:4.7
	HdrSrc-0_20:4.7
	HdrSrc-0_19:4.7
	nturton_HdrSrc-0_11:4.6
	HdrSrc-0_18:4.6
	HdrSrc-0_17:4.6
	HdrSrc-0_16:4.6
	HdrSrc-0_15:4.6
	HdrSrc-0_14:4.6
	HdrSrc-0_13:4.6
	HdrSrc-0_12:4.6
	HdrSrc-0_11:4.6
	HdrSrc-0_10:4.5
	HdrSrc-0_09:4.5
	HdrSrc-0_08:4.3
	HdrSrc-0_07:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2.8.1
	Ursula_RiscPC:4.2.0.8
	HdrSrc-0_06:4.3
	HdrSrc-0_05:4.3
	HdrSrc-0_04:4.3
	HdrSrc-0_03:4.3
	HdrSrc-0_02:4.3
	HdrSrc-0_01:4.3
	nicke_HdrSrc_21_9_98:4.3
	nicke_HdrSrc_21_8_98:4.1.7.5
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	afrost_NC2_Generic:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	Spinner_B20_2:4.1.7.5
	Spinner_19_3:4.1.7.5
	Spinner_B18:4.1.7.5
	Spinner_B17:4.1.7.5
	Spinner_B15:4.1.7.5
	Spinner_B14:4.1.7.5
	Spinner_B13:4.1.7.5
	Spinner_B12:4.1.7.5
	Spinner_B10:4.1.7.4
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.2
	Spinner_B7:4.1.7.3
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_merge:4.1.7.5
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.37
date	2015.01.06.02.04.17;	author jlee;	state Exp;
branches;
next	4.36;
commitid	w6QxdHzwtU6ndU4y;

4.36
date	2014.10.19.11.43.21;	author srevill;	state Exp;
branches;
next	4.35;
commitid	o1rCxwKAaIKsXNUx;

4.35
date	2014.10.12.13.39.05;	author srevill;	state Exp;
branches;
next	4.34;
commitid	12q5whUt2Tl7PUTx;

4.34
date	2013.11.18.03.15.48;	author bavison;	state Exp;
branches;
next	4.33;
commitid	Kyfspx7N7uGXUHdx;

4.33
date	2013.04.06.11.41.58;	author bavison;	state Exp;
branches;
next	4.32;
commitid	yP4L1EYkOhQ0ZHKw;

4.32
date	2012.03.02.19.33.25;	author bavison;	state Exp;
branches;
next	4.31;
commitid	IE1z9Qaa5UVTrlVv;

4.31
date	2011.09.21.20.50.24;	author jlee;	state Exp;
branches;
next	4.30;
commitid	Few26Tl37WW97pAv;

4.30
date	2011.05.22.19.53.18;	author jlee;	state Exp;
branches;
next	4.29;
commitid	bqq0FgvX0hzHIIkv;

4.29
date	2011.02.08.10.51.11;	author srevill;	state Exp;
branches;
next	4.28;

4.28
date	2011.01.15.22.29.55;	author jlee;	state Exp;
branches;
next	4.27;

4.27
date	2009.06.26.01.06.22;	author bavison;	state Exp;
branches;
next	4.26;

4.26
date	2009.05.06.16.13.23;	author bavison;	state Exp;
branches;
next	4.25;

4.25
date	2008.03.21.00.03.52;	author bavison;	state Exp;
branches
	4.25.2.1;
next	4.24;

4.24
date	2004.10.29.20.14.55;	author bavison;	state Exp;
branches;
next	4.23;

4.23
date	2004.10.29.20.12.20;	author bavison;	state Exp;
branches;
next	4.22;

4.22
date	2003.12.02.17.38.15;	author bavison;	state Exp;
branches;
next	4.21;

4.21
date	2002.10.29.21.42.04;	author rsprowson;	state Exp;
branches;
next	4.20;

4.20
date	2002.03.12.19.54.05;	author bavison;	state Exp;
branches;
next	4.19;

4.19
date	2001.03.01.10.50.06;	author sforrest;	state Exp;
branches;
next	4.18;

4.18
date	2000.05.26.21.57.44;	author bavison;	state Exp;
branches;
next	4.17;

4.17
date	2000.04.04.10.03.58;	author kbracey;	state Exp;
branches;
next	4.16;

4.16
date	2000.01.28.11.20.00;	author bavison;	state Exp;
branches;
next	4.15;

4.15
date	2000.01.11.10.54.25;	author bavison;	state Exp;
branches;
next	4.14;

4.14
date	99.11.26.14.32.23;	author sbrodie;	state Exp;
branches;
next	4.13;

4.13
date	99.11.08.15.04.29;	author sbrodie;	state Exp;
branches;
next	4.12;

4.12
date	99.11.08.13.30.33;	author sbrodie;	state Exp;
branches;
next	4.11;

4.11
date	99.08.25.16.18.14;	author sforrest;	state Exp;
branches
	4.11.2.1;
next	4.10;

4.10
date	99.08.24.10.06.34;	author sforrest;	state Exp;
branches;
next	4.9;

4.9
date	99.08.23.08.51.16;	author sbrodie;	state Exp;
branches;
next	4.8;

4.8
date	99.08.10.14.17.10;	author sbrodie;	state Exp;
branches;
next	4.7;

4.7
date	99.05.13.17.18.52;	author nturton;	state Exp;
branches;
next	4.6;

4.6
date	99.03.10.11.17.30;	author nturton;	state Exp;
branches;
next	4.5;

4.5
date	99.02.02.19.31.47;	author nturton;	state Exp;
branches;
next	4.4;

4.4
date	99.02.02.18.38.29;	author nturton;	state Exp;
branches;
next	4.3;

4.3
date	98.09.04.09.39.06;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	96.12.17.11.14.06;	author nturton;	state Exp;
branches
	4.2.2.1
	4.2.8.1;
next	4.1;

4.1
date	96.11.05.09.21.20;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.25.2.1
date	2009.03.06.23.06.43;	author jlee;	state Exp;
branches;
next	4.25.2.2;

4.25.2.2
date	2009.05.06.16.17.54;	author bavison;	state Exp;
branches;
next	4.25.2.3;

4.25.2.3
date	2010.11.20.17.09.32;	author jlee;	state Exp;
branches;
next	;

4.11.2.1
date	99.11.05.13.17.05;	author kbracey;	state Exp;
branches;
next	4.11.2.2;

4.11.2.2
date	99.11.10.13.33.00;	author kbracey;	state Exp;
branches;
next	;

4.2.2.1
date	99.08.17.12.37.30;	author sbrodie;	state Exp;
branches;
next	;

4.2.8.1
date	98.11.20.20.14.11;	author aglover;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.21.20;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.36.36;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.35.40;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.32.15;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.04.08.11.36.17;	author nturton;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.04.21.15.48.19;	author scormie;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	97.05.19.09.11.20;	author nturton;	state Exp;
branches;
next	4.1.7.5;

4.1.7.5
date	97.06.06.10.10.38;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.37
log
@Always export the 'All' machine config file
Detail:
  Makefile - As with 'All32', 'All' is now always exported. Useful for PlingSystem.
Admin:
  Tested building PlingSystem


Version 2.49. Tagged as 'HdrSrc-2_49'
@
text
@# Copyright 1996 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for Global Assembler Header files
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name   Description
# ----       ----   -----------
# 26-May-94  AMcC   Created.
# 28-Jul-94  AMcC   removed build rules for h.swis (done by RISC_OSLib)
# 11-Aug-94  AMcC   Don't create an Arthur directory in Export.Hdr.Global
# 19-Oct-94  AMcC   Export ImageSize hdrs
# 31-Oct-94  AMcC   Export IO.IOMDL (IOMD for Morris)
# 03-Dec-96  RWB    Don't derive headers, import them instead.
# 21-Aug-99  SNB    Restored derived headers now that our master copies
#                   are in CVS. Added use of OPTIONS=ALL to force all
#                   Machine and ImageSize headers to be exported.
# 24-Aug 99  SBF    Added export of C headers, and support for StripDepnd tool
# 25-Aug 99  SBF    Created "Register.Keyboard"; added this to makefile
# 11-Jan-00  BJGA   Exports Global.IO.h.GenericIO
# 28-Jan-00  BJGA   Exports Global.IO.h.IOMD
# 23-Feb-01  SBF    Exports Hdr:UserIF.UserIF plus UI-specific files; added to this makefile
# 28-Aug-02  KJB    Added Hdr:GraphicsV

#
# Paths
#
ifeq ("${MAKECMDGOALS}","install")
INSTDIR ?= <Install$Dir>.Export.<APCS>
TOPDIR   = ${INSTDIR}.Hdr
HDRDIR   = ${TOPDIR}.Global
HDIR     = ${INSTDIR}.C
LIBDIR   = ${INSTDIR}.Lib
else
# i.e. this is an export phase, not install
TOPDIR  = <hdr$dir>
HDRDIR  = ${TOPDIR}.Global
HDIR    = <CExport$dir>
LIBDIR  = <Lib$Dir>
endif

include StdTools

#
# Program specific options:
#
COMPONENT = HdrSrc

EXPORTS   = \
 ${HDRDIR}.APCS.<APCS> \
 ${HDRDIR}.APCS.Common \
 ${HDRDIR}.AUN \
 ${HDRDIR}.CMOS \
 ${HDRDIR}.Countries \
 ${HDRDIR}.CPU.Arch \
 ${HDRDIR}.CPU.ARM600 \
 ${HDRDIR}.CPU.FPA \
 ${HDRDIR}.CPU.Generic26 \
 ${HDRDIR}.CPU.Generic32 \
 ${HDRDIR}.DDVMacros \
 ${HDRDIR}.Debug \
 ${HDRDIR}.Devices \
 ${HDRDIR}.DevNos \
 ${HDRDIR}.DrawObj \
 ${HDRDIR}.ExtraLong \
 ${HDRDIR}.FDC.FDC711 \
 ${HDRDIR}.FileTypes \
 ${HDRDIR}.FSNumbers \
 ${HDRDIR}.GraphicsV \
 ${HDRDIR}.HALSize.<HALSize> \
 ${HDRDIR}.Heap \
 ${HDRDIR}.ImageSize.<ImageSize> \
 ${HDRDIR}.IO.GenericIO \
 ${HDRDIR}.IO.IOC \
 ${HDRDIR}.IO.IOC-A1 \
 ${HDRDIR}.IO.IOEB \
 ${HDRDIR}.IO.IOMD \
 ${HDRDIR}.IO.IOMDL \
 ${HDRDIR}.Keyboard \
 ${HDRDIR}.ListOpts \
 ${HDRDIR}.MEMM.ARM600 \
 ${HDRDIR}.MEMM.MEMC1 \
 ${HDRDIR}.MEMM.VMSAv6 \
 ${HDRDIR}.Machine.<Machine> \
 ${HDRDIR}.Machine.All \
 ${HDRDIR}.Machine.All32 \
 ${HDRDIR}.Machine.Machine \
 ${HDRDIR}.Macros \
 ${HDRDIR}.Messages \
 ${HDRDIR}.NdrDebug \
 ${HDRDIR}.NewErrors \
 ${HDRDIR}.OsBytes \
 ${HDRDIR}.OsWords \
 ${HDRDIR}.PaletteV \
 ${HDRDIR}.PDriverReg \
 ${HDRDIR}.PDumperReg \
 ${HDRDIR}.PoduleReg \
 ${HDRDIR}.Pointer \
 ${HDRDIR}.Proc \
 ${HDRDIR}.Services \
 ${HDRDIR}.Sprite \
 ${HDRDIR}.Symbols \
 ${HDRDIR}.System \
 ${HDRDIR}.SWIs \
 ${HDRDIR}.Tokens \
 ${HDRDIR}.UpCall \
 ${HDRDIR}.UserIF.<UserIF> \
 ${HDRDIR}.UserIF.UserIF \
 ${HDRDIR}.VIDC.VIDC1a \
 ${HDRDIR}.VIDC.VIDC20 \
 ${HDIR}.Global.h.AUN \
 ${HDIR}.Global.h.CMOS \
 ${HDIR}.Global.h.Countries \
 ${HDIR}.Global.h.Devices \
 ${HDIR}.Global.h.DevNos \
 ${HDIR}.Global.h.DrawObj \
 ${HDIR}.Global.h.EnvNumbers \
 ${HDIR}.Global.h.FileTypes \
 ${HDIR}.Global.h.FreewayReg \
 ${HDIR}.Global.h.FSNumbers \
 ${HDIR}.Global.h.GraphicsV \
 ${HDIR}.Global.h.Heap \
 ${HDIR}.Global.h.Keyboard \
 ${HDIR}.Global.h.NewErrors \
 ${HDIR}.Global.h.OsBytes \
 ${HDIR}.Global.h.OsWords \
 ${HDIR}.Global.h.PaletteV \
 ${HDIR}.Global.h.PDriverReg \
 ${HDIR}.Global.h.PDumperReg \
 ${HDIR}.Global.h.PoduleReg \
 ${HDIR}.Global.h.Pointer \
 ${HDIR}.Global.h.Services \
 ${HDIR}.Global.h.Sprite \
 ${HDIR}.Global.h.SWIs \
 ${HDIR}.Global.h.Upcall \
 ${HDIR}.Global.h.Tokens \
 ${HDIR}.Global.h.IOCtl \
 ${HDIR}.Global.IO.h.GenericIO \
 ${HDIR}.Global.IO.h.IOMD \

#
# Generic rules:
#

export: ${OPTIONS} ${EXPORTS} Dirs
ifeq ("${OPTIONS}","")
        @@echo ${COMPONENT}: export complete
else
        @@echo ${COMPONENT}: export complete (${OPTIONS})
endif

Dirs:
        @@echo TOPDIR ${TOPDIR}
        @@echo HDRDIR ${HDRDIR}
        @@echo HDIR   ${HDIR}
        @@echo LIBDIR ${LIBDIR}
        ${MKDIR} ${HDRDIR}
        ${MKDIR} ${TOPDIR}.Interface
        ${MKDIR} ${TOPDIR}.Interface2
        ${MKDIR} ${HDRDIR}.APCS
        ${MKDIR} ${HDRDIR}.CPU
        ${MKDIR} ${HDRDIR}.FDC
        ${MKDIR} ${HDRDIR}.HALSize
        ${MKDIR} ${HDRDIR}.IO
        ${MKDIR} ${HDRDIR}.ImageSize
        ${MKDIR} ${HDRDIR}.Machine
        ${MKDIR} ${HDRDIR}.MEMM
        ${MKDIR} ${HDRDIR}.UserIF
        ${MKDIR} ${HDRDIR}.VIDC
        ${MKDIR} ${HDIR}.h
        ${MKDIR} ${HDIR}.o
        ${MKDIR} ${HDIR}.Global.h
        ${MKDIR} ${HDIR}.Global.IO.h
        ${MKDIR} ${HDIR}.Interface.h
        ${MKDIR} ${LIBDIR}

install: ${OPTIONS} ${EXPORTS} Dirs
ifeq ("${OPTIONS}","")
        @@echo ${COMPONENT}: installed
else
        @@echo ${COMPONENT}: installed (${OPTIONS})
endif

clean:
        @@echo ${COMPONENT}: nothing to clean

#
# Special rule for exporting all ImageSize, Machine and UserIF files.
# Trigger by invoking the export (or install) phase with OPTIONS=ALL.
#
ALL: ${HDRDIR}.Machine.Machine ${HDRDIR}.UserIF.UserIF ${HDRDIR}.HALSize.<HALSize> ${HDRDIR}.ImageSize.<ImageSize> ${HDRDIR}.APCS.<APCS>
        ${CP} hdr.Machine ${HDRDIR}.Machine ${CPFLAGS}
        ${CP} hdr.UserIF ${HDRDIR}.UserIF ${CPFLAGS}
        ${CP} hdr.HALSize ${HDRDIR}.HALSize ${CPFLAGS}
        ${CP} hdr.ImageSize ${HDRDIR}.ImageSize ${CPFLAGS}
        ${CP} hdr.APCS ${HDRDIR}.APCS ${CPFLAGS}

#
# Rules for exporting:
#

# Registration headers:
${HDRDIR}.AUN:        hdr.AUN;         ${CP} hdr.AUN        $@@ ${CPFLAGS}
${HDRDIR}.Countries:  hdr.Countries;   ${CP} hdr.Countries  $@@ ${CPFLAGS}
${HDRDIR}.Devices:    hdr.Devices;     ${CP} hdr.Devices    $@@ ${CPFLAGS}
${HDRDIR}.DevNos:     hdr.DevNos;      ${CP} hdr.DevNos     $@@ ${CPFLAGS}
${HDRDIR}.DrawObj:    hdr.DrawObj;     ${CP} hdr.DrawObj    $@@ ${CPFLAGS}
${HDRDIR}.FileTypes:  hdr.FileTypes;   ${CP} hdr.FileTypes  $@@ ${CPFLAGS}
${HDRDIR}.FSNumbers:  hdr.FSNumbers;   ${CP} hdr.FSNumbers  $@@ ${CPFLAGS}
${HDRDIR}.GraphicsV:  hdr.GraphicsV;   ${CP} hdr.GraphicsV  $@@ ${CPFLAGS}
${HDRDIR}.Keyboard:   hdr.Keyboard;    ${CP} hdr.Keyboard   $@@ ${CPFLAGS}
${HDRDIR}.Messages:   hdr.Messages;    ${CP} hdr.Messages   $@@ ${CPFLAGS}
${HDRDIR}.NewErrors:  hdr.NewErrors;   ${CP} hdr.NewErrors  $@@ ${CPFLAGS}
${HDRDIR}.OsBytes:    hdr.OsBytes;     ${CP} hdr.OsBytes    $@@ ${CPFLAGS}
${HDRDIR}.OsWords:    hdr.OsWords;     ${CP} hdr.OsWords    $@@ ${CPFLAGS}
${HDRDIR}.PaletteV:   hdr.PaletteV;    ${CP} hdr.PaletteV   $@@ ${CPFLAGS}
${HDRDIR}.PDriverReg: hdr.PDriverReg;  ${CP} hdr.PDriverReg $@@ ${CPFLAGS}
${HDRDIR}.PDumperReg: hdr.PDumperReg;  ${CP} hdr.PDumperReg $@@ ${CPFLAGS}
${HDRDIR}.PoduleReg:  hdr.PoduleReg;   ${CP} hdr.PoduleReg  $@@ ${CPFLAGS}
${HDRDIR}.Pointer:    hdr.Pointer;     ${CP} hdr.Pointer    $@@ ${CPFLAGS}
${HDRDIR}.Services:   hdr.Services;    ${CP} hdr.Services   $@@ ${CPFLAGS}
${HDRDIR}.SWIs:       hdr.SWIs;        ${CP} hdr.SWIs       $@@ ${CPFLAGS}
${HDRDIR}.UpCall:     hdr.UpCall;      ${CP} hdr.UpCall     $@@ ${CPFLAGS}

# The C versions of registration headers:
${HDIR}.Global.h.AUN:        hdr.AUN;         ${HDR2H} hdr.AUN        $@@
${HDIR}.Global.h.Countries:  hdr.Countries;   ${HDR2H} hdr.Countries  $@@
${HDIR}.Global.h.Devices:    hdr.Devices;     ${HDR2H} hdr.Devices    $@@
${HDIR}.Global.h.DevNos:     hdr.DevNos;      ${HDR2H} hdr.DevNos     $@@
${HDIR}.Global.h.DrawObj:    hdr.DrawObj;     ${HDR2H} hdr.DrawObj    $@@
${HDIR}.Global.h.EnvNumbers: hdr.EnvNumbers;  ${HDR2H} hdr.EnvNumbers $@@
${HDIR}.Global.h.FileTypes:  hdr.FileTypes;   ${HDR2H} hdr.FileTypes  $@@
${HDIR}.Global.h.FreewayReg: hdr.FreewayReg;  ${HDR2H} hdr.FreewayReg $@@
${HDIR}.Global.h.FSNumbers:  hdr.FSNumbers;   ${HDR2H} hdr.FSNumbers  $@@
${HDIR}.Global.h.GraphicsV:  hdr.GraphicsV;   ${HDR2H} hdr.GraphicsV  $@@
${HDIR}.Global.h.Keyboard:   hdr.Keyboard;    ${HDR2H} hdr.Keyboard   $@@
${HDIR}.Global.h.Messages:   hdr.Messages;    ${HDR2H} hdr.Messages   $@@
${HDIR}.Global.h.NewErrors:  hdr.NewErrors;   ${HDR2H} hdr.NewErrors  $@@
# NewErrors still has a few problems.  Partial support is there.
${HDIR}.Global.h.OsBytes:    hdr.OsBytes;     ${HDR2H} hdr.OsBytes    $@@
${HDIR}.Global.h.OsWords:    hdr.OsWords;     ${HDR2H} hdr.OsWords    $@@
${HDIR}.Global.h.PaletteV:   hdr.PaletteV;    ${HDR2H} hdr.PaletteV   $@@
${HDIR}.Global.h.PDriverReg: hdr.PDriverReg;  ${HDR2H} hdr.PDriverReg $@@
${HDIR}.Global.h.PDumperReg: hdr.PDumperReg;  ${HDR2H} hdr.PDumperReg $@@
${HDIR}.Global.h.PoduleReg:  hdr.PoduleReg;   ${HDR2H} hdr.PoduleReg  $@@
${HDIR}.Global.h.Pointer:    hdr.Pointer;     ${HDR2H} hdr.Pointer    $@@
${HDIR}.Global.h.Services:   hdr.Services;    ${HDR2H} hdr.Services   $@@
${HDIR}.Global.h.SWIs:       hdr.SWIs;        ${HDR2H} hdr.SWIs       $@@
${HDIR}.Global.h.UpCall:     hdr.UpCall;      ${HDR2H} hdr.UpCall     $@@


# The C versions of local header files.
# Files which don't work yet:
#   No files remaining which do not work at all.
# Files which work with some warnings (which indicate incorrect constants have been declared)
#   Sprite
# Files which have no equivalent.
#   DDVMacros   Debug       ExtraLong   ListOpts    Macros      NdrDebug    Proc        Symbols
${HDIR}.Global.h.Heap:         hdr.Heap;         ${HDR2H} hdr.Heap         $@@
${HDIR}.Global.h.Sprite:       hdr.Sprite;       ${HDR2H} hdr.Sprite       $@@
${HDIR}.Global.h.Tokens:       hdr.Tokens;       ${HDR2H} hdr.Tokens       $@@
${HDIR}.Global.h.CMOS:         hdr.CMOS;         ${HDR2H} hdr.CMOS         $@@
${HDIR}.Global.IO.h.GenericIO: hdr.IO.GenericIO; ${HDR2H} hdr.IO.GenericIO $@@
${HDIR}.Global.IO.h.IOMD:      hdr.IO.IOMD;      ${HDR2H} hdr.IO.IOMD      $@@


# C headers:
${HDIR}.Global.h.IOCtl:      h.IOCtl;               ${CP} h.IOCtl                  $@@ ${CPFLAGS}

# Machine/UI/hardware specific headers:
${HDRDIR}.Machine.<Machine>: hdr.Machine.<Machine>; ${CP} hdr.Machine.<Machine>    $@@ ${CPFLAGS}
${HDRDIR}.Machine.All:       hdr.Machine.All;       ${CP} hdr.Machine.All          $@@ ${CPFLAGS}
${HDRDIR}.Machine.All32:     hdr.Machine.All32;     ${CP} hdr.Machine.All32        $@@ ${CPFLAGS}
${HDRDIR}.Machine.Machine:   hdr.Machine.Machine;   ${CP} hdr.Machine.Machine      $@@ ${CPFLAGS}
${HDRDIR}.HALSize.<HALSize>: hdr.HALSize.<HALSize>; ${CP} hdr.HALSize.<HALSize>    $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.<ImageSize>: hdr.ImageSize.<ImageSize>; ${CP} hdr.ImageSize.<ImageSize> $@@ ${CPFLAGS}
${HDRDIR}.APCS.<APCS>:       hdr.APCS.<APCS>;       ${CP} hdr.APCS.<APCS>          $@@ ${CPFLAGS}
${HDRDIR}.APCS.Common:       hdr.APCS.Common;       ${CP} hdr.APCS.Common          $@@ ${CPFLAGS}
${HDRDIR}.CPU.Arch:          hdr.CPU.Arch;          ${CP} hdr.CPU.Arch             $@@ ${CPFLAGS}
${HDRDIR}.CPU.ARM600:        hdr.CPU.ARM600;        ${CP} hdr.CPU.ARM600           $@@ ${CPFLAGS}
${HDRDIR}.CPU.FPA:           hdr.CPU.FPA;           ${CP} hdr.CPU.FPA              $@@ ${CPFLAGS}
${HDRDIR}.CPU.Generic26:     hdr.CPU.Generic26;     ${CP} hdr.CPU.Generic26        $@@ ${CPFLAGS}
${HDRDIR}.CPU.Generic32:     hdr.CPU.Generic32;     ${CP} hdr.CPU.Generic32        $@@ ${CPFLAGS}
${HDRDIR}.FDC.FDC711:        hdr.FDC.FDC711;        ${CP} hdr.FDC.FDC711           $@@ ${CPFLAGS}
${HDRDIR}.IO.GenericIO:      hdr.IO.GenericIO;      ${CP} hdr.IO.GenericIO         $@@ ${CPFLAGS}
${HDRDIR}.IO.IOC:            hdr.IO.IOC;            ${CP} hdr.IO.IOC               $@@ ${CPFLAGS}
${HDRDIR}.IO.IOC-A1:         hdr.IO.IOC-A1;         ${CP} hdr.IO.IOC-A1            $@@ ${CPFLAGS}
${HDRDIR}.IO.IOEB:           hdr.IO.IOEB;           ${CP} hdr.IO.IOEB              $@@ ${CPFLAGS}
${HDRDIR}.IO.IOMD:           hdr.IO.IOMD;           ${CP} hdr.IO.IOMD              $@@ ${CPFLAGS}
${HDRDIR}.IO.IOMDL:          hdr.IO.IOMDL;          ${CP} hdr.IO.IOMDL             $@@ ${CPFLAGS}
${HDRDIR}.MEMM.ARM600:       hdr.MEMM.ARM600;       ${CP} hdr.MEMM.ARM600          $@@ ${CPFLAGS}
${HDRDIR}.MEMM.MEMC1:        hdr.MEMM.MEMC1;        ${CP} hdr.MEMM.MEMC1           $@@ ${CPFLAGS}
${HDRDIR}.MEMM.VMSAv6:       hdr.MEMM.VMSAv6;       ${CP} hdr.MEMM.VMSAv6          $@@ ${CPFLAGS}
${HDRDIR}.VIDC.VIDC1a:       hdr.VIDC.VIDC1a;       ${CP} hdr.VIDC.VIDC1a          $@@ ${CPFLAGS}
${HDRDIR}.VIDC.VIDC20:       hdr.VIDC.VIDC20;       ${CP} hdr.VIDC.VIDC20          $@@ ${CPFLAGS}

# User interface specific headers:
${HDRDIR}.UserIF.<UserIF>:   hdr.UserIF.<UserIF>;   ${CP} hdr.UserIF.<UserIF>      $@@ ${CPFLAGS}
${HDRDIR}.UserIF.UserIF:     hdr.UserIF.UserIF;     ${CP} hdr.UserIF.UserIF        $@@ ${CPFLAGS}

# Macros:
${HDRDIR}.DDVMacros:         hdr.DDVMacros;         ${CP} hdr.DDVMacros            $@@ ${CPFLAGS}
${HDRDIR}.Debug:             hdr.Debug;             ${CP} hdr.Debug                $@@ ${CPFLAGS}
${HDRDIR}.ExtraLong:         hdr.ExtraLong;         ${CP} hdr.ExtraLong            $@@ ${CPFLAGS}
${HDRDIR}.Macros:            hdr.Macros;            ${CP} hdr.Macros               $@@ ${CPFLAGS}
${HDRDIR}.NdrDebug:          hdr.NdrDebug;          ${CP} hdr.NdrDebug             $@@ ${CPFLAGS}
${HDRDIR}.Proc:              hdr.Proc;              ${CP} hdr.Proc                 $@@ ${CPFLAGS}

# The rest:
${HDRDIR}.CMOS:              hdr.CMOS;              ${CP} hdr.CMOS                 $@@ ${CPFLAGS}
${HDRDIR}.Heap:              hdr.Heap;              ${CP} hdr.Heap                 $@@ ${CPFLAGS}
${HDRDIR}.ListOpts:          hdr.ListOpts;          ${CP} hdr.ListOpts             $@@ ${CPFLAGS}
${HDRDIR}.Sprite:            hdr.Sprite;            ${CP} hdr.Sprite               $@@ ${CPFLAGS}
${HDRDIR}.Symbols:           hdr.Symbols;           ${CP} hdr.Symbols              $@@ ${CPFLAGS}
${HDRDIR}.System:            hdr.System;            ${CP} hdr.System               $@@ ${CPFLAGS}
${HDRDIR}.Tokens:            hdr.Tokens;            ${CP} hdr.Tokens               $@@ ${CPFLAGS}

# Dynamic dependencies:
@


4.36
log
@Complete re-implementation of install phase.

We now do the same things as for the export phase, but rather than putting
the results into the build's export directory, we put them somewhere relative
to the INSTDIR directory.

Version 2.48. Tagged as 'HdrSrc-2_48'
@
text
@d98 1
d285 1
@


4.35
log
@Modified the HdrSrc makefile's install phase for DDE builds.

Version 2.47. Tagged as 'HdrSrc-2_47'
@
text
@d41 3
a43 1
TOPDIR   = <hdr$dir>
d45 9
a53 3
HDIR     = <CExport$dir>
LIBDIR   = <Lib$Dir>
INSTDIR ?= <APCSExport$Dir>
a152 8
INSTALLS   = \
 ${INSTDIR}.Hdr.APCS.APCS-32 \
 ${INSTDIR}.Hdr.APCS.APCS-R \
 ${INSTDIR}.Hdr.APCS.Common \
 ${INSTDIR}.Hdr.CPU.Generic26 \
 ${INSTDIR}.Hdr.CPU.Generic32 \
 ${INSTDIR}.Hdr.ListOpts \

d158 1
d160 3
d165 4
d189 2
a190 3
install: install_Dirs
        ${CP} hdr ${INSTDIR}.Hdr ${CPFLAGS}
        ${ERASECVS} ${INSTDIR}.Hdr
d192 3
a194 3

install_Dirs:
        ${MKDIR} ${INSTDIR}
d201 1
a201 1
# Trigger by invoking the export with OPTIONS=ALL.
@


4.34
log
@  Resync with allocations database
Detail:
  * Retire hdr:FreeWay in favour of hdr:FreewayReg
  * SWI chunk and error base for RTC module
  * New shared single error number for drivers to report hardware not found
  * Single service calls for boot sequence to inform (primarily ROM) modules
    that system variables have become valid


Version 2.36. Tagged as 'HdrSrc-2_36'
@
text
@d181 4
a184 1
install: ${INSTALLS} install_Dirs
d187 1
a187 2
        ${MKDIR} ${INSTDIR}.Hdr.APCS
        ${MKDIR} ${INSTDIR}.Hdr.CPU
a192 11
# Rules for installing:
#

${INSTDIR}.Hdr.APCS.APCS-32:  hdr.APCS.APCS-32;  ${CP} hdr.APCS.APCS-32  $@@ ${CPFLAGS}
${INSTDIR}.Hdr.APCS.APCS-R:   hdr.APCS.APCS-R;   ${CP} hdr.APCS.APCS-R   $@@ ${CPFLAGS}
${INSTDIR}.Hdr.APCS.Common:   hdr.APCS.Common;   ${CP} hdr.APCS.Common   $@@ ${CPFLAGS}
${INSTDIR}.Hdr.CPU.Generic26: hdr.CPU.Generic26; ${CP} hdr.CPU.Generic26 $@@ ${CPFLAGS}
${INSTDIR}.Hdr.CPU.Generic32: hdr.CPU.Generic32; ${CP} hdr.CPU.Generic32 $@@ ${CPFLAGS}
${INSTDIR}.Hdr.ListOpts:      hdr.ListOpts;      ${CP} hdr.ListOpts      $@@ ${CPFLAGS}

#
@


4.33
log
@Forgot to change Makefile to export new header.

Version 2.27. Not tagged
@
text
@a122 1
 ${HDIR}.Global.h.FreeWay \
a246 1
${HDIR}.Global.h.FreeWay:    hdr.FreeWay;     ${HDR2H} hdr.FreeWay    $@@
@


4.32
log
@  Resync with allocations database
Detail:
  * Hdr:KEYV merged into Hdr:Keyboard - warning: anything that depends on the
    former *will break*
  * New header file, Hdr:OsBytes - for consistency with Hdr:OsWords, we'll
    keep this under the allocations system even though it's highly unlikely
    that any new allocations will be requested
Admin:
  Changes from Rob Sprowson

Version 1.97. Tagged as 'HdrSrc-1_97'
@
text
@d124 1
d249 1
@


4.31
log
@Always export Machine.All32
Detail:
  Makefile - Always export Machine.All32, to provide a safe machine type for assembler-based host tools
Admin:
  Required for building ColourTrans 1.79


Version 1.88. Tagged as 'HdrSrc-1_88'
@
text
@a84 1
 ${HDRDIR}.KEYV \
d96 1
a127 1
 ${HDIR}.Global.h.KeyV \
d129 1
a225 1
${HDRDIR}.KEYV:       hdr.KEYV;        ${CP} hdr.KEYV       $@@ ${CPFLAGS}
d228 1
a250 1
${HDIR}.Global.h.KeyV:       hdr.KeyV;        ${HDR2H} hdr.KeyV       $@@
d254 1
@


4.30
log
@Add HALSize support. Fix TEX definitions in VMSAv6 MMU file.
Detail:
  Makefile - Now uses the HALSize environment variable to select which HALSize file to export
  hdr/HALSize/64K, hdr/HALSize/96K, hdr/HALSize/128K - HALSize files for 64K, 96K, 128K HAL sizes
  hdr/MEMM/VMSAv6 - Fix the incorrect TEX definitions that were corrupting the page permissions and resulting in ROM pages being writeable.
Admin:
  Tested on rev A2 BB-xM.
  Needs latest Env folder.


Version 1.81. Tagged as 'HdrSrc-1_81'
@
text
@d91 1
d286 1
@


4.29
log
@Fix the Makefile's install phase.

This component could fail during the install phase due to the INSTDIR
symbol not being defined. The Makefile will now set this to the appropriate
value if not already set.

Version 1.78. Tagged as 'HdrSrc-1_78'
@
text
@d75 1
d166 1
d204 1
a204 1
ALL: ${HDRDIR}.Machine.Machine ${HDRDIR}.UserIF.UserIF ${HDRDIR}.ImageSize.<ImageSize> ${HDRDIR}.APCS.<APCS>
d207 1
d286 1
@


4.28
log
@Merge Cortex branch of HdrSrc into trunk
Detail:
  This should merge all of the Cortex HdrSrc changes into the trunk, so we don't have to worry about OMAP builds breaking each time the trunk HdrSrc changes
Admin:
  Untested!


Version 1.76. Tagged as 'HdrSrc-1_76'
@
text
@d41 5
a45 4
TOPDIR = <hdr$dir>
HDRDIR = ${TOPDIR}.Global
HDIR   = <CExport$dir>
LIBDIR = <Lib$Dir>
@


4.27
log
@  Added install rule
Admin:
  This is only intended for use when building the disc image for the C/C++ CD.

Version 1.70. Tagged as 'HdrSrc-1_70'
@
text
@d87 1
d299 1
@


4.26
log
@  Added new assembler header file Hdr:CPU.Arch
Detail:
  Defines a large selection of boolean assembler variables, permitting
  authors to test the CPU architecture features required by the target
  platform(s) of a given build. Examples of use are included.
Admin:
  Not tested in anger yet.

Version 1.65. Tagged as 'HdrSrc-1_65'
@
text
@d141 8
d176 6
d186 11
@


4.25
log
@  Overhaul of HdrSrc.
Detail:
  To allow public release of this component, sensitive header files have
  been moved out of the way. HdrSrc will in future only contain preprocessed
  versions of those files with confidential information filtered out.
Admin:
  Not tested in a build yet.

Version 1.59. Not tagged
@
text
@d59 1
d259 1
@


4.25.2.1
log
@Add support for VMSAv6 MMU architecture
Detail:
  Makefile - add hdr.MEMM.VMSAv6
  hdr.MEMM.VMSAv6 - Definitions for VMSAv6 page table structure and ARMv6/v7 CP15 flags
Admin:
  Tested with appropriate RISC OS kernel under qemu-omap3 and rev B6 beagleboard


Version 1.62, 4.162.2.2. Tagged as 'HdrSrc-1_62-4_162_2_2'
@
text
@a85 1
 ${HDRDIR}.MEMM.VMSAv6 \
a270 1
${HDRDIR}.MEMM.VMSAv6:       hdr.MEMM.VMSAv6;       ${CP} hdr.MEMM.VMSAv6          $@@ ${CPFLAGS}
@


4.25.2.2
log
@Merged trunk version 1.65 to branch Cortex

Version 1.62, 4.162.2.3. Tagged as 'HdrSrc-1_62-4_162_2_3'
@
text
@a58 1
 ${HDRDIR}.CPU.Arch \
a258 1
${HDRDIR}.CPU.Arch:          hdr.CPU.Arch;          ${CP} hdr.CPU.Arch             $@@ ${CPFLAGS}
@


4.25.2.3
log
@Bring Cortex branch of HdrSrc in line with trunk
Detail:
  * Added VFPSupport SWI definition
  * Added some new industry standard file types
  * Aded some new sprite errors
  * Added install rule for C/C++ CD
  * Added support for machine-neutral builds
Admin:
  Untested!


Version 1.62, 4.162.2.14. Tagged as 'HdrSrc-1_62-4_162_2_14'
@
text
@a141 8
INSTALLS   = \
 ${INSTDIR}.Hdr.APCS.APCS-32 \
 ${INSTDIR}.Hdr.APCS.APCS-R \
 ${INSTDIR}.Hdr.APCS.Common \
 ${INSTDIR}.Hdr.CPU.Generic26 \
 ${INSTDIR}.Hdr.CPU.Generic32 \
 ${INSTDIR}.Hdr.ListOpts \

a168 6
install: ${INSTALLS} install_Dirs

install_Dirs:
        ${MKDIR} ${INSTDIR}.Hdr.APCS
        ${MKDIR} ${INSTDIR}.Hdr.CPU

a172 11
# Rules for installing:
#

${INSTDIR}.Hdr.APCS.APCS-32:  hdr.APCS.APCS-32;  ${CP} hdr.APCS.APCS-32  $@@ ${CPFLAGS}
${INSTDIR}.Hdr.APCS.APCS-R:   hdr.APCS.APCS-R;   ${CP} hdr.APCS.APCS-R   $@@ ${CPFLAGS}
${INSTDIR}.Hdr.APCS.Common:   hdr.APCS.Common;   ${CP} hdr.APCS.Common   $@@ ${CPFLAGS}
${INSTDIR}.Hdr.CPU.Generic26: hdr.CPU.Generic26; ${CP} hdr.CPU.Generic26 $@@ ${CPFLAGS}
${INSTDIR}.Hdr.CPU.Generic32: hdr.CPU.Generic32; ${CP} hdr.CPU.Generic32 $@@ ${CPFLAGS}
${INSTDIR}.Hdr.ListOpts:      hdr.ListOpts;      ${CP} hdr.ListOpts      $@@ ${CPFLAGS}

#
@


4.24
log
@Regressed that last change to the Makefile, that was a mistake.
@
text
@d46 1
a46 21
# Generic options:
#
MKDIR    = do mkdir -p
AC       = access
AS       = objasm
LD       = link
CP       = copy
RM       = remove
WIPE     = -wipe
TOKENISE = tokenise
HDR2H    = build:Hdr2H
STRIP    = stripdepnd

CFLAGS   = -c -depend !Depend ${THROWBACK} -IC:
AFLAGS   = -depend !Depend ${THROWBACK}
LDFLAGS  = -bin
ACFLAGS  = rw/r
CPFLAGS  = ~cfr~v
WFLAGS   = FR~C~V

TOKENS   = Hdr:Tokens
a67 1
 ${HDRDIR}.DrawTags \
a97 1
 ${HDRDIR}.PrintTypes \
a115 1
 ${HDIR}.Global.h.DrawTags \
a140 6
# Derived assembler header files
#
FILETYPES = Derived.FileTypes
SWIS      = Derived.SWIs

#
a164 1
        ${MKDIR} ${HDIR}.Interface2.h
a165 1
        ${MKDIR} o
d168 1
a168 4
        ${RM} ${FILETYPES}
        ${RM} ${SWIS}
        ${WIPE} o ${WFLAGS}
        @@echo ${COMPONENT}: derived headers cleaned
a180 21
# Rules for deriving headers:
#
${FILETYPES}: o.FileTypes
        ${LD} ${LDFLAGS} -o $@@ o.FileTypes
        stripnulls $@@
        ${AC} $@@ ${ACFLAGS}
        settype $@@ text

o.FileTypes: Register.ISV-Types s.DoTypes
        ${AS} ${AFLAGS} s.DoTypes -o $@@

${SWIS}: o.SWIs
        ${LD} -bin -o $@@ o.SWIs
        stripnulls $@@
        ${AC} $@@ ${ACFLAGS}
        settype $@@ text

o.SWIs: Register.ISV-SWIs s.DoSWIs
        ${AS} ${AFLAGS} s.DoSWIs -o $@@

#
d185 21
a205 25
${HDRDIR}.AUN:        Register.AUN;            ${CP} Register.AUN        $@@ ${CPFLAGS}
${HDRDIR}.Countries:  Register.Countries;      ${CP} Register.Countries  $@@ ${CPFLAGS}
${HDRDIR}.Devices:    Register.Devices;        ${CP} Register.Devices    $@@ ${CPFLAGS}
${HDRDIR}.DevNos:     Register.DevNos;         ${CP} Register.DevNos     $@@ ${CPFLAGS}
${HDRDIR}.DrawObj:    Register.DrawObj;        ${CP} Register.DrawObj    $@@ ${CPFLAGS}
${HDRDIR}.DrawTags:   Register.DrawTags;       ${CP} Register.DrawTags   $@@ ${CPFLAGS}
${HDRDIR}.FSNumbers:  Register.FSNumbers;      ${CP} Register.FSNumbers  $@@ ${CPFLAGS}
${HDRDIR}.GraphicsV:  Register.GraphicsV;      ${CP} Register.GraphicsV  $@@ ${CPFLAGS}
${HDRDIR}.Keyboard:   Register.Keyboard;       ${CP} Register.Keyboard   $@@ ${CPFLAGS}
${HDRDIR}.KEYV:       Register.KEYV;           ${CP} Register.KEYV       $@@ ${CPFLAGS}
${HDRDIR}.Messages:   Register.Messages;       ${CP} Register.Messages   $@@ ${CPFLAGS}
${HDRDIR}.NewErrors:  Register.NewErrors;      ${CP} Register.NewErrors  $@@ ${CPFLAGS}
${HDRDIR}.OsWords:    Register.OsWords;        ${CP} Register.OsWords    $@@ ${CPFLAGS}
${HDRDIR}.PaletteV:   Register.PaletteV;       ${CP} Register.PaletteV   $@@ ${CPFLAGS}
${HDRDIR}.Pointer:    Register.Pointer;        ${CP} Register.Pointer    $@@ ${CPFLAGS}
${HDRDIR}.PDriverReg: Register.PDriverReg;     ${CP} Register.PDriverReg $@@ ${CPFLAGS}
${HDRDIR}.PDumperReg: Register.PDumperReg;     ${CP} Register.PDumperReg $@@ ${CPFLAGS}
${HDRDIR}.PoduleReg:  Register.PoduleReg;      ${CP} Register.PoduleReg  $@@ ${CPFLAGS}
${HDRDIR}.PrintTypes: Register.PrintTypes;     ${CP} Register.PrintTypes $@@ ${CPFLAGS}
${HDRDIR}.Services:   Register.Services;       ${CP} Register.Services   $@@ ${CPFLAGS}
${HDRDIR}.UpCall:     Register.UpCall;         ${CP} Register.UpCall     $@@ ${CPFLAGS}

# Derived registration headers:
${HDRDIR}.FileTypes:  ${FILETYPES};            ${CP} ${FILETYPES}        $@@ ${CPFLAGS}
${HDRDIR}.SWIs:       ${SWIS};                 ${CP} ${SWIS}             $@@ ${CPFLAGS}
d208 14
a221 14
${HDIR}.Global.h.AUN:        Register.AUN ${HDR2H};            perl ${HDR2H} Register.AUN        $@@
${HDIR}.Global.h.Countries:  Register.Countries ${HDR2H};      perl ${HDR2H} Register.Countries  $@@
${HDIR}.Global.h.Devices:    Register.Devices ${HDR2H};        perl ${HDR2H} Register.Devices    $@@
${HDIR}.Global.h.DevNos:     Register.DevNos ${HDR2H};         perl ${HDR2H} Register.DevNos     $@@
${HDIR}.Global.h.DrawObj:    Register.DrawObj ${HDR2H};        perl ${HDR2H} Register.DrawObj    $@@
${HDIR}.Global.h.DrawTags:   Register.DrawTags ${HDR2H};       perl ${HDR2H} Register.DrawTags   $@@
${HDIR}.Global.h.EnvNumbers: Register.EnvNumbers ${HDR2H};     perl ${HDR2H} Register.EnvNumbers $@@
${HDIR}.Global.h.FreeWay:    Register.FreeWay ${HDR2H};        perl ${HDR2H} Register.FreeWay    $@@
${HDIR}.Global.h.FSNumbers:  Register.FSNumbers ${HDR2H};      perl ${HDR2H} Register.FSNumbers  $@@
${HDIR}.Global.h.GraphicsV:  Register.GraphicsV ${HDR2H};      perl ${HDR2H} Register.GraphicsV  $@@
${HDIR}.Global.h.Keyboard:   Register.Keyboard  ${HDR2H};      perl ${HDR2H} Register.Keyboard   $@@
${HDIR}.Global.h.KeyV:       Register.KeyV ${HDR2H};           perl ${HDR2H} Register.KeyV       $@@
${HDIR}.Global.h.Messages:   Register.Messages ${HDR2H};       perl ${HDR2H} Register.Messages   $@@
${HDIR}.Global.h.NewErrors:   Register.NewErrors ${HDR2H};       perl ${HDR2H} Register.NewErrors   $@@
d223 9
a231 13
${HDIR}.Global.h.OsWords:    Register.OsWords ${HDR2H};        perl ${HDR2H} Register.OsWords    $@@
${HDIR}.Global.h.PaletteV:   Register.PaletteV ${HDR2H};       perl ${HDR2H} Register.PaletteV   $@@
${HDIR}.Global.h.PDriverReg: Register.PDriverReg ${HDR2H};     perl ${HDR2H} Register.PDriverReg $@@
${HDIR}.Global.h.PDumperReg: Register.PDumperReg ${HDR2H};     perl ${HDR2H} Register.PDumperReg $@@
${HDIR}.Global.h.PoduleReg:  Register.PoduleReg ${HDR2H};      perl ${HDR2H} Register.PoduleReg  $@@
${HDIR}.Global.h.Pointer:    Register.Pointer ${HDR2H};        perl ${HDR2H} Register.Pointer    $@@
# PrintTypes is just full of comments
${HDIR}.Global.h.Services:   Register.Services ${HDR2H};       perl ${HDR2H} Register.Services   $@@
${HDIR}.Global.h.UpCall:     Register.UpCall ${HDR2H};         perl ${HDR2H} Register.UpCall     $@@

# The C versions of derived registration headers:
${HDIR}.Global.h.FileTypes:  ${FILETYPES} ${HDR2H};            perl ${HDR2H} ${FILETYPES}        $@@
${HDIR}.Global.h.SWIs:       ${SWIS} ${HDR2H};                 perl ${HDR2H} ${SWIS}             $@@
d241 6
a246 6
${HDIR}.Global.h.Heap:       Hdr.Heap ${HDR2H};           perl ${HDR2H} Hdr.Heap       $@@
${HDIR}.Global.h.Sprite:     Hdr.Sprite ${HDR2H};         perl ${HDR2H} Hdr.Sprite     $@@
${HDIR}.Global.h.Tokens:     Hdr.Tokens ${HDR2H};         perl ${HDR2H} Hdr.Tokens     $@@
${HDIR}.Global.h.CMOS:       Hdr.CMOS ${HDR2H};           perl ${HDR2H} Hdr.CMOS       $@@
${HDIR}.Global.IO.h.GenericIO: Hdr.IO.GenericIO ${HDR2H}; perl ${HDR2H} Hdr.IO.GenericIO $@@
${HDIR}.Global.IO.h.IOMD:    Hdr.IO.IOMD ${HDR2H};        perl ${HDR2H} Hdr.IO.IOMD    $@@
@


4.23
log
@Fixed name clash with AppFS *again*.
Retagged as HdrSrc-1_49 this time.
@
text
@a358 6
o.FileTypes: s.DoTypes
o.FileTypes: Hdr.ListOpts
o.FileTypes: register.ISV-Types
o.SWIs: s.DoSWIs
o.SWIs: Hdr.ListOpts
o.SWIs: register.ISV-SWIs
@


4.22
log
@Changed to use objasm instead of aasm.

Version 1.41. Tagged as 'HdrSrc-1_41'
@
text
@d359 6
@


4.21
log
@Addition (manually at present) of new allocations requested from AMG.
Addition of Tungsten machine and Iyonix user interface.
New 1024k ROM image size.

Version 1.35. Tagged as 'HdrSrc-1_35'
@
text
@d28 2
a29 2
# 21-Aug-99  SNB    Restored derived headers now that our master copies 
#                   are in CVS. Added use of OPTIONS=ALL to force all 
d50 2
a51 1
AS       = aasm
d54 1
d60 2
a61 1
AFLAGS   = -depend !Depend ${THROWBACK} -stamp -quit
d64 1
d196 1
d201 1
a202 2
        ${STRIP}
        @@echo ${COMPONENT}: dynamic dependancies removed from makefile
d217 3
a219 2
${FILETYPES}: Register.ISV-Types s.DoTypes
        ${AS} ${AFLAGS} -from s.DoTypes -to $@@ 
d223 6
a228 2
${SWIS}: Register.ISV-SWIs s.DoSWIs
        ${AS} ${AFLAGS} -from s.DoSWIs -to $@@ 
d231 3
@


4.20
log
@  Now exports a C version of Hdr:NewErrors.
Detail:
  See above.
Admin:
  Requires Library-0_94. Required by DVBSubtitles.

Version 1.33. Tagged as 'HdrSrc-1_33'
@
text
@d36 1
d89 1
d139 1
d235 1
d264 1
@


4.19
log
@
  * New header file "Hdr:UserIF.UserIF" provided for definitions specific
    to the user interface on products.  This abstracts the UI definitions from
    the machine-specific ones, and (ultimately) allows more flexibility in
    the choice of Machine and UserIF build combinations.

Detail:

  * As part of the work to remove the (almost obsolete) STB flag, a new
    flag has been defined: Embedded_UI.  This is provided by the "UserIF"
    header file.  The file should not be directly included; instead use the
    same mechanism as for "Hdr:Machine.Machine" and use "Hdr:UserIF.<UserIF>".

    In the past, the STB flag has been used to mean different things in
    different software components, some machine-dependent but more often than
    not to differentiate desktop builds from STB/NC versions.  Two types
    of system are identified: "Desktop" and "Embedded"; UserIF_Type is
    defined as a string containing the UI type.  STB/NC user interface
    differences should be encapsulated in appropriate "Embedded_UI" switches.
    Any other user interface-specific changes should probably define a new
    flag in the UserIF header file.

    Presently, the STB flag remains intact in "Hdr:Machine.Machine" to allow
    builds to progress as normal until all software components that utilise
    it have been appropriately modified to remove the dependency.  For
    example, the Kernel makes heavy use of the flag, but after HAL-isation
    will no longer do so.  Once all software components have been modified
    the flag will be withdrawn, and feature tests or appropriately defined
    user interface flags will be used instead.

  * "Hdr:CMOS" revised to remove definitions under the control of the defunct
    ObsoleteNC1CMOS flag.  Furthermore, the STB flag conditional has been
    removed.

Admin:

  * Tested using appropriately modified software components on a 32-bit
    Lazarus build.

  * Use of the STB flag is now deprecated.  Software components should
    use "Hdr:UserIF.<UserIF>" or specific feature tests from this point
    onwards.  Appropriate header files exist inside the "Hdr.UserIF"
    directory for each user interface type.

Version 1.17. Tagged as 'HdrSrc-1_17'
@
text
@d140 1
d263 1
@


4.18
log
@Exports a C version of Hdr:Sprite, required by MPEGDriver 0.11.

Version 0.87. Tagged as 'HdrSrc-0_87'
@
text
@d35 1
d122 2
d179 1
d190 2
a191 2
	${RM} ${FILETYPES}
	${RM} ${SWIS}
d197 1
a197 1
# Special rule for exporting all ImageSize and Machine files.
d200 5
a204 4
ALL: ${HDRDIR}.Machine.Machine ${HDRDIR}.ImageSize.<ImageSize> ${HDRDIR}.APCS.<APCS>
	${CP} hdr.Machine ${HDRDIR}.Machine ${CPFLAGS}
	${CP} hdr.ImageSize ${HDRDIR}.ImageSize ${CPFLAGS}
	${CP} hdr.APCS ${HDRDIR}.APCS ${CPFLAGS}
d296 1
a296 1
# Machine/hardware specific headers:
d307 1
a307 1
${HDRDIR}.IO.GenericIO:      hdr.IO.GenericIO;      ${CP} hdr.IO.GenericIO 	   $@@ ${CPFLAGS}
d317 4
@


4.17
log
@More 32-bit tweaks. Some assembler macros extended to accept condition codes
and PSR flag subset specifiers.
CPU.FPA header file added.

Version 0.79. Tagged as 'HdrSrc-0_79'
@
text
@d144 1
d277 1
a277 2
# and have rules declared below but which are NOT GENERATED because they are not in the export list:
#   Sprite      Messages
@


4.16
log
@Exports hdr.IO.IOMD as the new C header ${HDIR}.Global.IO.h.IOMD.
Needed by STB-400 MPEGDriver.

Version 0.72. Tagged as 'HdrSrc-0_72'
@
text
@d74 1
d298 1
@


4.15
log
@Now exports a C version of Hdr.IO.GenericIO as {HDIR}.Global.IO.h.GenericIO.

Version 0.67. Tagged as 'HdrSrc-0_67'
@
text
@d34 1
d148 1
d284 1
@


4.14
log
@  Merge of 32-bit capable macros to trunk.
Detail:
  The 26-bit and 32-bit capable macros have been added.
  Header files choose which set of macros to use based on <Machine>.
  If you want the new macros, include "Hdr:APCS.<APCS>" in addition
    to the usual inclusions at the top of assembler files.
  Choices are based on the settings of macros No32bitCode and
    No26bitCode.  By default, all existing machines define these
    as {TRUE} and {FALSE} respectively.  This yields the same macros
    as before (tested in Customer F 5 build) and should yield code which
    functions on RISC OS 3.1.  Any other combination of settings is
    untested at this time.
  New assembler code should use the macros FunctionEntry, Return et al
    to ensure that they build correctly.
  New assembler code should be written to not require flag preservation
    across internal function calls and to not assume it on external
    function calls where it is possible to do so.  DO NOT simply replace
    "MOVS pc, lr" with "MOV pc, lr" as this doesn't work properly.
    Replace "MOVS pc, lr" with "Return ,LinkNotStacked"
  Do not write code which simply masks out &FC000003 from pc or some kind
    or pc originated value (eg. on r14 to attempt to remove the PSR flags
    from it.  Use the RemovePSRFromReg macro instead.
Admin:
  Tested with Customer F 5 build.
  Requires FPEmulator 4.11
  Requires Portable 0.65 (or Portable75 0.04)
  Required by any new or modified assembler code in future, pretty much.
    Such components may not necessarily specify a dependency on this
    or any other later version of HdrSrc.

Version 0.63. Tagged as 'HdrSrc-0_63'
@
text
@d33 1
d146 1
d176 1
d281 1
@


4.13
log
@Creates <Lib$Dir> too
@
text
@d37 2
a38 1
HDRDIR = <hdr$dir>.Global
d66 2
d73 1
d161 3
a163 2
        ${MKDIR} ${HDRDIR}.^.Interface
        ${MKDIR} ${HDRDIR}.^.Interface2
d189 1
a189 1
ALL: ${HDRDIR}.Machine.Machine ${HDRDIR}.ImageSize.<ImageSize>
d192 1
d287 2
d291 1
@


4.12
log
@  Directory creation rationalised.
Detail:
  All mkdir commands are preceded by do to ensure system variables
    are expanded before mkdir sees them.
  Relies on the header directory variables instead of <Build$Dir>
    since the export directories may not be <Build$Dir>.Export any
    more.
Admin:
  This change is required if <CExport$Dir> or <Hdr$Dir> do not exist
    when HdrSrc's export phase is executed.

Version 0.58. Tagged as 'HdrSrc-0_58'
@
text
@d39 1
d171 1
@


4.11
log
@
  Added "Keyboard" definitions.

Detail:

  No centralised keyboard definition file was available, so the file
  "Register.Keyboard" has been added.  This defines all keyboard type IDs,
  KeyV reason codes and flags words, and also includes definitions of
  the standard low-level key numbers.

  The assembler header file is processed by Hdr2H to produce the C version
  as expected.
  The new file "Register.Keyboard" has been despatched to Pineapple, since
  it will be centrally maintained under their allocation procedures.  (The
  file was sent on 25/08/99.)
Admin:

  Tested.  Verified that the C file is generated correctly.

Version 0.34. Tagged as 'HdrSrc-0_34'
@
text
@d42 1
a42 1
MKDIR    = mkdir -p
d155 3
a157 5
        ${MKDIR} <build$dir>.Export.C.h
        ${MKDIR} <build$dir>.Export.C.o
        ${MKDIR} <build$dir>.Export.Hdr.Global
        ${MKDIR} <build$dir>.Export.Hdr.Interface
        ${MKDIR} <build$dir>.Export.Hdr.Interface2
d165 2
@


4.11.2.1
log
@First attempt at 32-bit support.

Version 0.57, 4.58.2.1. Tagged as 'HdrSrc-0_57-4_58_2_1'
@
text
@a68 1
 ${HDRDIR}.CPU.Generic32 \
a280 1
${HDRDIR}.CPU.Generic32:     hdr.CPU.Generic32;     ${CP} hdr.CPU.Generic32        $@@ ${CPFLAGS}
@


4.11.2.2
log
@More macros added to Hdr:Proc and Hdr:CPU.
msr macro now understands _cxsf form.
APCS macros now available in Hdr:APCS.<APCS>

Version 0.57, 4.58.2.2. Tagged as 'HdrSrc-0_57-4_58_2_2'
@
text
@a63 2
 ${HDRDIR}.APCS.<APCS> \
 ${HDRDIR}.APCS.Common \
a160 1
        ${MKDIR} ${HDRDIR}.APCS
d183 1
a183 1
ALL: ${HDRDIR}.Machine.Machine ${HDRDIR}.ImageSize.<ImageSize> ${HDRDIR}.APCS.<APCS>
a185 1
	${CP} hdr.APCS ${HDRDIR}.APCS ${CPFLAGS}
a279 2
${HDRDIR}.APCS.<APCS>:       hdr.APCS.<APCS>;       ${CP} hdr.APCS.<APCS>          $@@ ${CPFLAGS}
${HDRDIR}.APCS.Common:       hdr.APCS.Common;       ${CP} hdr.APCS.Common          $@@ ${CPFLAGS}
@


4.10
log
@  New C header file added containing global definitions of all IOCtl calls
  presently supported.
Detail:
  The IOCtl calls used to be defined only within the DualSerial sources;
  no central (global) definitions were available.  The file "IOCtl.h" has
  been added to overcome this, defining IOCtl call reason and group codes,
  and declaring a structure "ioctl_t" used when using IOCtls via OS_Args.
  This is exported to "C.Global.h.IOCtl" by HdrSrc.
  At present, no assembler header file exists as it is unlikely
  to be required due to the majority of new source being written in C,
  although the file "IOCtl.h" could be auto-generated by Hdr2H from an
  assembler variant in the future if required.
  Also added support for StripDepnd into makefile.
Admin:
  Tested.


Version 0.33. Tagged as 'HdrSrc-0_33'
@
text
@d32 1
d87 1
d127 1
d211 1
d239 1
@


4.9
log
@  Re-integration of unique system resource allocation system.
  Added capability to export all ImageSize and Machine files.
Detail:
  Our local copies of The Pineapple-maintained master files are now
    maintained by CVS.  The Register directory holds all files
    controlled by Pineapple and must only be updated with imports from
    Pineapple.  All files inside Import directory have been removed.
    Moved several header files from hdr to Register directory to
    signify change control has passed to Pineapple.  This applies to:
    DevNos EnvNumbers, KEYV, Messages, PaletteV and Pointer.  New
    contents of Register directory are up-to-date masters from
    Pineapple as of Friday 20th August 1999.
  Added OPTIONS to the export target list.  If OPTIONS=ALL is
    specified on the make command, then all the Machine and ImageSize
    files will be exported.  This has been added primarily for the use
    of the BaseSW build process.
Admin:
  Tested.

Version 0.32. Tagged as 'HdrSrc-0_32'
@
text
@d31 1
a31 1
#
d48 1
d136 1
d172 2
d266 3
@


4.8
log
@  Hdr2H migrated to library.
  More assembler files translated to C.
  CMOS header file modified slightly to enable Hdr2H to translate it.
Detail:
  Hdr2H has been removed - it's now in the library (v0.28 or later).
Admin:
  The extra header files have been checked for correctness.
  Requires Library 0.28 or later (RiscOS/Library  Tag: Library-0_28)
  C module which import the exported header files will require
    cmhg 5.25 or later (RiscOS/Library  Tag: Library-0_28 or later)

Version 0.27. Tagged as 'HdrSrc-0_27'
@
text
@d28 3
d41 2
a42 1
MKDIR    = cdir
d49 3
a51 2
CFLAGS   = -c -depend !Depend -IC:
AFLAGS   = -depend !Depend -stamp -quit
d113 1
d116 1
d119 1
d123 2
d126 1
d130 1
a133 6
 ${HDIR}.Global.h.DevNos \
 ${HDIR}.Global.h.EnvNumbers \
 ${HDIR}.Global.h.Heap \
 ${HDIR}.Global.h.KeyV \
 ${HDIR}.Global.h.PaletteV \
 ${HDIR}.Global.h.Pointer \
d135 6
a140 1
 ${HDIR}.Global.h.CMOS \
d146 1
a146 1
export: ${EXPORTS} Dirs
a149 2
        ${MKDIR} <build$dir>.Export
        ${MKDIR} <build$dir>.Export.C
a151 1
        ${MKDIR} <build$dir>.Export.Hdr
a161 1
        ${MKDIR} ${HDIR}.Global
a162 1
        ${MKDIR} ${HDIR}.Interface
d164 1
d167 24
a190 1
         @@echo ${COMPONENT}: NOT cleaning imported headers
d197 36
a232 26
${HDRDIR}.AUN:        Import.Global.AUN;            ${CP} Import.Global.AUN        $@@ ${CPFLAGS}
${HDRDIR}.Countries:  Import.Global.Countries;      ${CP} Import.Global.Countries  $@@ ${CPFLAGS}
${HDRDIR}.Devices:    Import.Global.Devices;        ${CP} Import.Global.Devices    $@@ ${CPFLAGS}
${HDRDIR}.DrawObj:    Import.Global.DrawObj;        ${CP} Import.Global.DrawObj    $@@ ${CPFLAGS}
${HDRDIR}.DrawTags:   Import.Global.DrawTags;       ${CP} Import.Global.DrawTags   $@@ ${CPFLAGS}
${HDRDIR}.FileTypes:  Import.Global.FileTypes;      ${CP} Import.Global.FileTypes  $@@ ${CPFLAGS}
${HDRDIR}.FSNumbers:  Import.Global.FSNumbers;      ${CP} Import.Global.FSNumbers  $@@ ${CPFLAGS}
${HDRDIR}.NewErrors:  Import.Global.NewErrors;      ${CP} Import.Global.NewErrors  $@@ ${CPFLAGS}
${HDRDIR}.OsWords:    Import.Global.OsWords;        ${CP} Import.Global.OsWords    $@@ ${CPFLAGS}
${HDRDIR}.PDriverReg: Import.Global.PDriverReg;     ${CP} Import.Global.PDriverReg $@@ ${CPFLAGS}
${HDRDIR}.PDumperReg: Import.Global.PDumperReg;     ${CP} Import.Global.PDumperReg $@@ ${CPFLAGS}
${HDRDIR}.PoduleReg:  Import.Global.PoduleReg;      ${CP} Import.Global.PoduleReg  $@@ ${CPFLAGS}
${HDRDIR}.PrintTypes: Import.Global.PrintTypes;     ${CP} Import.Global.PrintTypes $@@ ${CPFLAGS}
${HDRDIR}.Services:   Import.Global.Services;       ${CP} Import.Global.Services   $@@ ${CPFLAGS}
${HDRDIR}.SWIs:       Import.Global.SWIs;           ${CP} Import.Global.SWIs       $@@ ${CPFLAGS}
${HDRDIR}.UpCall:     Import.Global.UpCall;         ${CP} Import.Global.UpCall     $@@ ${CPFLAGS}

# The C versions of imported files.
${HDIR}.Global.h.AUN:        Import.Global.AUN ${HDR2H};            perl ${HDR2H} Import.Global.AUN        $@@
${HDIR}.Global.h.Countries:  Import.Global.Countries ${HDR2H};      perl ${HDR2H} Import.Global.Countries  $@@
${HDIR}.Global.h.Devices:    Import.Global.Devices ${HDR2H};        perl ${HDR2H} Import.Global.Devices    $@@
${HDIR}.Global.h.DrawObj:    Import.Global.DrawObj ${HDR2H};        perl ${HDR2H} Import.Global.DrawObj    $@@
${HDIR}.Global.h.DrawTags:   Import.Global.DrawTags ${HDR2H};       perl ${HDR2H} Import.Global.DrawTags   $@@
${HDIR}.Global.h.FileTypes:  Import.Global.FileTypes ${HDR2H};      perl ${HDR2H} Import.Global.FileTypes  $@@
${HDIR}.Global.h.FreeWay:    Import.Global.FreeWay ${HDR2H};        perl ${HDR2H} Import.Global.FreeWay    $@@
${HDIR}.Global.h.FSNumbers:  Import.Global.FSNumbers ${HDR2H};      perl ${HDR2H} Import.Global.FSNumbers  $@@
d234 6
a239 4
${HDIR}.Global.h.OsWords:    Import.Global.OsWords ${HDR2H};        perl ${HDR2H} Import.Global.OsWords    $@@
${HDIR}.Global.h.PDriverReg: Import.Global.PDriverReg ${HDR2H};     perl ${HDR2H} Import.Global.PDriverReg $@@
${HDIR}.Global.h.PDumperReg: Import.Global.PDumperReg ${HDR2H};     perl ${HDR2H} Import.Global.PDumperReg $@@
${HDIR}.Global.h.PoduleReg:  Import.Global.PoduleReg ${HDR2H};      perl ${HDR2H} Import.Global.PoduleReg  $@@
d241 7
a247 3
${HDIR}.Global.h.Services:   Import.Global.Services ${HDR2H};       perl ${HDR2H} Import.Global.Services   $@@
${HDIR}.Global.h.SWIs:       Import.Global.SWIs ${HDR2H};           perl ${HDR2H} Import.Global.SWIs       $@@
${HDIR}.Global.h.UpCall:     Import.Global.UpCall ${HDR2H};         perl ${HDR2H} Import.Global.UpCall     $@@
a256 2
${HDIR}.Global.h.DevNos:     Hdr.DevNos ${HDR2H};         perl ${HDR2H} Hdr.DevNos     $@@
${HDIR}.Global.h.EnvNumbers: Hdr.EnvNumbers ${HDR2H};     perl ${HDR2H} Hdr.EnvNumbers $@@
a257 4
${HDIR}.Global.h.KeyV:       Hdr.KeyV ${HDR2H};           perl ${HDR2H} Hdr.KeyV       $@@
${HDIR}.Global.h.Messages:   Hdr.Messages ${HDR2H};       perl ${HDR2H} Hdr.Messages   $@@
${HDIR}.Global.h.Pointer:    Hdr.Pointer ${HDR2H};        perl ${HDR2H} Hdr.Pointer    $@@
${HDIR}.Global.h.PaletteV:   Hdr.PaletteV ${HDR2H};       perl ${HDR2H} Hdr.PaletteV   $@@
a290 1
${HDRDIR}.DevNos:            hdr.DevNos;            ${CP} hdr.DevNos               $@@ ${CPFLAGS}
a291 1
${HDRDIR}.KEYV:              hdr.KEYV;              ${CP} hdr.KEYV                 $@@ ${CPFLAGS}
a292 3
${HDRDIR}.Messages:          hdr.Messages;          ${CP} hdr.Messages             $@@ ${CPFLAGS}
${HDRDIR}.PaletteV:          hdr.PaletteV;          ${CP} hdr.PaletteV             $@@ ${CPFLAGS}
${HDRDIR}.Pointer:           hdr.Pointer;           ${CP} hdr.Pointer              $@@ ${CPFLAGS}
@


4.7
log
@Added #ifdef guard lines to exported C headers.

Version 0.19. Tagged as 'HdrSrc-0_19'
@
text
@d43 1
a43 1
HDR2H    = perl.Hdr2H
d126 4
a129 1
 ${HDIR}.Global.h.PaletteV
d156 2
d205 4
a208 1
#   CMOS        Sprite      Tokens      Pointer     Messages
d215 2
d218 3
@


4.6
log
@Added PortMan SWI, Error block & Service call.  Now exports
DevNos, EnvNumbers, Heap, KeyV and PaletteV as C header files.

Version 0.11. Tagged as 'HdrSrc-0_11'
@
text
@d43 1
d180 8
a187 8
${HDIR}.Global.h.AUN:        Import.Global.AUN;            perl perl.Hdr2H Import.Global.AUN        $@@
${HDIR}.Global.h.Countries:  Import.Global.Countries;      perl perl.Hdr2H Import.Global.Countries  $@@
${HDIR}.Global.h.Devices:    Import.Global.Devices;        perl perl.Hdr2H Import.Global.Devices    $@@
${HDIR}.Global.h.DrawObj:    Import.Global.DrawObj;        perl perl.Hdr2H Import.Global.DrawObj    $@@
${HDIR}.Global.h.DrawTags:   Import.Global.DrawTags;       perl perl.Hdr2H Import.Global.DrawTags   $@@
${HDIR}.Global.h.FileTypes:  Import.Global.FileTypes;      perl perl.Hdr2H Import.Global.FileTypes  $@@
${HDIR}.Global.h.FreeWay:    Import.Global.FreeWay;        perl perl.Hdr2H Import.Global.FreeWay    $@@
${HDIR}.Global.h.FSNumbers:  Import.Global.FSNumbers;      perl perl.Hdr2H Import.Global.FSNumbers  $@@
d189 4
a192 4
${HDIR}.Global.h.OsWords:    Import.Global.OsWords;        perl perl.Hdr2H Import.Global.OsWords    $@@
${HDIR}.Global.h.PDriverReg: Import.Global.PDriverReg;     perl perl.Hdr2H Import.Global.PDriverReg $@@
${HDIR}.Global.h.PDumperReg: Import.Global.PDumperReg;     perl perl.Hdr2H Import.Global.PDumperReg $@@
${HDIR}.Global.h.PoduleReg:  Import.Global.PoduleReg;      perl perl.Hdr2H Import.Global.PoduleReg  $@@
d194 3
a196 3
${HDIR}.Global.h.Services:   Import.Global.Services;       perl perl.Hdr2H Import.Global.Services   $@@
${HDIR}.Global.h.SWIs:       Import.Global.SWIs;           perl perl.Hdr2H Import.Global.SWIs       $@@
${HDIR}.Global.h.UpCall:     Import.Global.UpCall;         perl perl.Hdr2H Import.Global.UpCall     $@@
d203 5
a207 5
${HDIR}.Global.h.DevNos:     Hdr.DevNos;         perl perl.Hdr2H Hdr.DevNos     $@@
${HDIR}.Global.h.EnvNumbers: Hdr.EnvNumbers;     perl perl.Hdr2H Hdr.EnvNumbers $@@
${HDIR}.Global.h.Heap:       Hdr.Heap;           perl perl.Hdr2H Hdr.Heap       $@@
${HDIR}.Global.h.KeyV:       Hdr.KeyV;           perl perl.Hdr2H Hdr.KeyV       $@@
${HDIR}.Global.h.PaletteV:   Hdr.PaletteV;       perl perl.Hdr2H Hdr.PaletteV   $@@
@


4.5
log
@Modified to export C files to Global.h.* instead of h.Global.*
@
text
@d120 6
a125 1
 ${HDIR}.Global.h.Upcall
d178 1
a178 1
# The C versions
d196 12
@


4.4
log
@Export C versions of some of the ASM header files.
@
text
@d34 1
a34 1
HDIR   = <CExport$dir>.h
d106 15
a120 15
 ${HDIR}.Global.AUN \
 ${HDIR}.Global.Countries \
 ${HDIR}.Global.Devices \
 ${HDIR}.Global.DrawObj \
 ${HDIR}.Global.DrawTags \
 ${HDIR}.Global.FileTypes \
 ${HDIR}.Global.FreeWay \
 ${HDIR}.Global.FSNumbers \
 ${HDIR}.Global.OsWords \
 ${HDIR}.Global.PDriverReg \
 ${HDIR}.Global.PDumperReg \
 ${HDIR}.Global.PoduleReg \
 ${HDIR}.Global.Services \
 ${HDIR}.Global.SWIs \
 ${HDIR}.Global.Upcall
d146 1
d174 8
a181 8
${HDIR}.Global.AUN:        Import.Global.AUN;            perl perl.Hdr2H Import.Global.AUN        $@@
${HDIR}.Global.Countries:  Import.Global.Countries;      perl perl.Hdr2H Import.Global.Countries  $@@
${HDIR}.Global.Devices:    Import.Global.Devices;        perl perl.Hdr2H Import.Global.Devices    $@@
${HDIR}.Global.DrawObj:    Import.Global.DrawObj;        perl perl.Hdr2H Import.Global.DrawObj    $@@
${HDIR}.Global.DrawTags:   Import.Global.DrawTags;       perl perl.Hdr2H Import.Global.DrawTags   $@@
${HDIR}.Global.FileTypes:  Import.Global.FileTypes;      perl perl.Hdr2H Import.Global.FileTypes  $@@
${HDIR}.Global.FreeWay:    Import.Global.FreeWay;        perl perl.Hdr2H Import.Global.FreeWay    $@@
${HDIR}.Global.FSNumbers:  Import.Global.FSNumbers;      perl perl.Hdr2H Import.Global.FSNumbers  $@@
d183 4
a186 4
${HDIR}.Global.OsWords:    Import.Global.OsWords;        perl perl.Hdr2H Import.Global.OsWords    $@@
${HDIR}.Global.PDriverReg: Import.Global.PDriverReg;     perl perl.Hdr2H Import.Global.PDriverReg $@@
${HDIR}.Global.PDumperReg: Import.Global.PDumperReg;     perl perl.Hdr2H Import.Global.PDumperReg $@@
${HDIR}.Global.PoduleReg:  Import.Global.PoduleReg;      perl perl.Hdr2H Import.Global.PoduleReg  $@@
d188 3
a190 3
${HDIR}.Global.Services:   Import.Global.Services;       perl perl.Hdr2H Import.Global.Services   $@@
${HDIR}.Global.SWIs:       Import.Global.SWIs;           perl perl.Hdr2H Import.Global.SWIs       $@@
${HDIR}.Global.UpCall:     Import.Global.UpCall;         perl perl.Hdr2H Import.Global.UpCall     $@@
@


4.3
log
@Spinner branch merged. Updated to make sure it exports all registration
files.
@
text
@d34 1
d105 16
a120 1
 ${HDRDIR}.VIDC.VIDC20
d145 1
d171 19
@


4.2
log
@New version of HdrSrc introduced
@
text
@d55 1
d57 1
d62 1
d64 2
d71 1
a71 3
 ${HDRDIR}.ImageSize.2048K \
 ${HDRDIR}.ImageSize.4096K \
 ${HDRDIR}.ImageSize.8192K \
d83 1
d88 1
d94 1
d138 5
a142 1
${HDRDIR}.SWIs:       Import.Global.SWIs;           ${CP} Import.Global.SWIs       $@@ ${CPFLAGS}
d145 2
d150 1
a150 1
${HDRDIR}.NewErrors:  Import.Global.NewErrors;      ${CP} Import.Global.NewErrors  $@@ ${CPFLAGS}
d152 1
d157 2
a158 3
${HDRDIR}.ImageSize.2048K:   hdr.ImageSize.2048K;   ${CP} hdr.ImageSize.2048K      $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.4096K:   hdr.ImageSize.4096K;   ${CP} hdr.ImageSize.4096K      $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.8192K:   hdr.ImageSize.8192K;   ${CP} hdr.ImageSize.8192K      $@@ ${CPFLAGS}
@


4.2.2.1
log
@Merged Ursula RiscPC branch
@
text
@a83 1
 ${HDRDIR}.Oswords \
a138 1
${HDRDIR}.Oswords:    Import.Global.Oswords;        ${CP} Import.Global.Oswords    $@@ ${CPFLAGS}
@


4.2.8.1
log
@Makefile edits and various plumbing to make the darn thing build
@
text
@a83 1
 ${HDRDIR}.Oswords \
a138 1
${HDRDIR}.Oswords:    Import.Global.Oswords;        ${CP} Import.Global.Oswords    $@@ ${CPFLAGS}
@


4.1
log
@Initial revision
@
text
@d26 2
a27 1
# 31-Oct-94  AMcC   Export IO.IOMDL (IOMD for Morris)    
d68 1
d79 1
a79 2
 ${HDRDIR}.Machine.Jordan \
 ${HDRDIR}.Machine.Morris \
a100 6
# Derived hdr files
#
FILETYPES = derived.FileTypes
SWIS      = derived.SWIs

#
a102 2
all: ${FILETYPES} ${SWIS}
        @@echo all derived hdrs are up to date
d109 3
d115 1
d125 1
a125 17
         @@echo ${COMPONENT}: NOT cleaning derived headers

#clean:
#        ${RM} ${SWIS}
#        ${RM} ${FILETYPES}
#        @@echo ${COMPONENT}: cleaned

#
# Rules for deriving headers:
#
${FILETYPES}: Register.ISV-Types s.DoTypes
        ${AS} ${AFLAGS} -from s.DoTypes -to $@@ 
        settype $@@ text

${SWIS}: Register.ISV-SWIs s.DoSWIs
        ${AS} ${AFLAGS} -from s.DoSWIs -to $@@ 
        settype $@@ text
a129 2
${HDRDIR}.SWIs: ${SWIS};                       ${CP} ${SWIS} $@@ ${CPFLAGS}
${HDRDIR}.FileTypes: ${FILETYPES};             ${CP} ${FILETYPES} $@@ ${CPFLAGS}
d132 9
a140 7
${HDRDIR}.FSNumbers: Register.FSNumbers;       ${CP} Register.FSNumbers $@@ ${CPFLAGS}
${HDRDIR}.PDriverReg: Register.PDriverReg;     ${CP} Register.PDriverReg $@@ ${CPFLAGS}
${HDRDIR}.PDumperReg: Register.PDumperReg;     ${CP} Register.PDumperReg $@@ ${CPFLAGS}
${HDRDIR}.PoduleReg: Register.PoduleReg;       ${CP} Register.PoduleReg $@@ ${CPFLAGS}
${HDRDIR}.NewErrors: Register.NewErrors;       ${CP} Register.NewErrors $@@ ${CPFLAGS}
${HDRDIR}.Services: Register.Services;         ${CP} Register.Services $@@ ${CPFLAGS}
${HDRDIR}.UpCall: Register.UpCall;             ${CP} Register.UpCall $@@ ${CPFLAGS}
d143 17
a159 17
${HDRDIR}.Machine.Jordan: hdr.Machine.Jordan;  ${CP} hdr.Machine.Jordan $@@ ${CPFLAGS}
${HDRDIR}.Machine.Morris: hdr.Machine.Morris;  ${CP} hdr.Machine.Morris $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.2048K: hdr.ImageSize.2048K; ${CP} hdr.ImageSize.2048K $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.4096K: hdr.ImageSize.4096K; ${CP} hdr.ImageSize.4096K $@@ ${CPFLAGS}
${HDRDIR}.CPU.ARM600: hdr.CPU.ARM600;          ${CP} hdr.CPU.ARM600 $@@ ${CPFLAGS}
${HDRDIR}.CPU.Generic26: hdr.CPU.Generic26;    ${CP} hdr.CPU.Generic26 $@@ ${CPFLAGS}
${HDRDIR}.FDC.FDC711: hdr.FDC.FDC711;          ${CP} hdr.FDC.FDC711 $@@ ${CPFLAGS}
${HDRDIR}.IO.GenericIO: hdr.IO.GenericIO;      ${CP} hdr.IO.GenericIO $@@ ${CPFLAGS}
${HDRDIR}.IO.IOC: hdr.IO.IOC;                  ${CP} hdr.IO.IOC $@@ ${CPFLAGS}
${HDRDIR}.IO.IOC-A1: hdr.IO.IOC-A1;            ${CP} hdr.IO.IOC-A1 $@@ ${CPFLAGS}
${HDRDIR}.IO.IOEB: hdr.IO.IOEB;                ${CP} hdr.IO.IOEB $@@ ${CPFLAGS}
${HDRDIR}.IO.IOMD: hdr.IO.IOMD;                ${CP} hdr.IO.IOMD $@@ ${CPFLAGS}
${HDRDIR}.IO.IOMDL: hdr.IO.IOMDL;              ${CP} hdr.IO.IOMDL $@@ ${CPFLAGS}
${HDRDIR}.MEMM.ARM600: hdr.MEMM.ARM600;        ${CP} hdr.MEMM.ARM600 $@@ ${CPFLAGS}
${HDRDIR}.MEMM.MEMC1: hdr.MEMM.MEMC1;          ${CP} hdr.MEMM.MEMC1 $@@ ${CPFLAGS}
${HDRDIR}.VIDC.VIDC1a: hdr.VIDC.VIDC1a;        ${CP} hdr.VIDC.VIDC1a $@@ ${CPFLAGS}
${HDRDIR}.VIDC.VIDC20: hdr.VIDC.VIDC20;        ${CP} hdr.VIDC.VIDC20 $@@ ${CPFLAGS}
d162 6
a167 6
${HDRDIR}.DDVMacros: hdr.DDVMacros;            ${CP} hdr.DDVMacros $@@ ${CPFLAGS}
${HDRDIR}.Debug: hdr.Debug;                    ${CP} hdr.Debug $@@ ${CPFLAGS}
${HDRDIR}.ExtraLong: hdr.ExtraLong;            ${CP} hdr.ExtraLong $@@ ${CPFLAGS}
${HDRDIR}.Macros: hdr.Macros;                  ${CP} hdr.Macros $@@ ${CPFLAGS}
${HDRDIR}.NdrDebug: hdr.NdrDebug;              ${CP} hdr.NdrDebug $@@ ${CPFLAGS}
${HDRDIR}.Proc: hdr.Proc;                      ${CP} hdr.Proc $@@ ${CPFLAGS}
d170 12
a181 12
${HDRDIR}.CMOS: hdr.CMOS;                      ${CP} hdr.CMOS $@@ ${CPFLAGS}
${HDRDIR}.DevNos: hdr.DevNos;                  ${CP} hdr.DevNos $@@ ${CPFLAGS}
${HDRDIR}.Heap: hdr.Heap;                      ${CP} hdr.Heap $@@ ${CPFLAGS}
${HDRDIR}.KEYV: hdr.KEYV;                      ${CP} hdr.KEYV $@@ ${CPFLAGS}
${HDRDIR}.ListOpts: hdr.ListOpts;              ${CP} hdr.ListOpts $@@ ${CPFLAGS}
${HDRDIR}.Messages: hdr.Messages;              ${CP} hdr.Messages $@@ ${CPFLAGS}
${HDRDIR}.PaletteV: hdr.PaletteV;              ${CP} hdr.PaletteV $@@ ${CPFLAGS}
${HDRDIR}.Pointer: hdr.Pointer;                ${CP} hdr.Pointer $@@ ${CPFLAGS}
${HDRDIR}.Sprite: hdr.Sprite;                  ${CP} hdr.Sprite $@@ ${CPFLAGS}
${HDRDIR}.Symbols: hdr.Symbols;                ${CP} hdr.Symbols $@@ ${CPFLAGS}
${HDRDIR}.System: hdr.System;                  ${CP} hdr.System $@@ ${CPFLAGS}
${HDRDIR}.Tokens: hdr.Tokens;                  ${CP} hdr.Tokens $@@ ${CPFLAGS}
a183 4
derived.FileTypes: Hdr:ListOpts
derived.FileTypes: register.ISV-Types
derived.SWIs: Hdr:ListOpts
derived.SWIs: register.ISV-SWIs
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@d77 2
a78 1
 ${HDRDIR}.Machine.<Machine> \
a115 3
        ${MKDIR} <build$dir>.Export.C
        ${MKDIR} <build$dir>.Export.C.h
        ${MKDIR} <build$dir>.Export.C.o
a118 1
        ${MKDIR} <build$dir>.Export.Hdr.Interface2
d162 2
a163 1
${HDRDIR}.Machine.<Machine>: hdr.Machine.<Machine>;  ${CP} hdr.Machine.<Machine> $@@ ${CPFLAGS}
@


4.1.7.2
log
@New version imported from TRUNK
@
text
@d26 1
a26 2
# 31-Oct-94  AMcC   Export IO.IOMDL (IOMD for Morris)
# 03-Dec-96  RWB    Don't derive headers, import them instead.
a66 1
 ${HDRDIR}.ImageSize.8192K \
d99 6
d107 2
d131 17
a147 1
         @@echo ${COMPONENT}: NOT cleaning imported headers
d152 2
d156 7
a162 9
${HDRDIR}.SWIs:       Import.Global.SWIs;           ${CP} Import.Global.SWIs       $@@ ${CPFLAGS}
${HDRDIR}.FileTypes:  Import.Global.FileTypes;      ${CP} Import.Global.FileTypes  $@@ ${CPFLAGS}
${HDRDIR}.FSNumbers:  Import.Global.FSNumbers;      ${CP} Import.Global.FSNumbers  $@@ ${CPFLAGS}
${HDRDIR}.PDriverReg: Import.Global.PDriverReg;     ${CP} Import.Global.PDriverReg $@@ ${CPFLAGS}
${HDRDIR}.PDumperReg: Import.Global.PDumperReg;     ${CP} Import.Global.PDumperReg $@@ ${CPFLAGS}
${HDRDIR}.PoduleReg:  Import.Global.PoduleReg;      ${CP} Import.Global.PoduleReg  $@@ ${CPFLAGS}
${HDRDIR}.NewErrors:  Import.Global.NewErrors;      ${CP} Import.Global.NewErrors  $@@ ${CPFLAGS}
${HDRDIR}.Services:   Import.Global.Services;       ${CP} Import.Global.Services   $@@ ${CPFLAGS}
${HDRDIR}.UpCall:     Import.Global.UpCall;         ${CP} Import.Global.UpCall     $@@ ${CPFLAGS}
d165 16
a180 17
${HDRDIR}.Machine.<Machine>: hdr.Machine.<Machine>; ${CP} hdr.Machine.<Machine>    $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.2048K:   hdr.ImageSize.2048K;   ${CP} hdr.ImageSize.2048K      $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.4096K:   hdr.ImageSize.4096K;   ${CP} hdr.ImageSize.4096K      $@@ ${CPFLAGS}
${HDRDIR}.ImageSize.8192K:   hdr.ImageSize.8192K;   ${CP} hdr.ImageSize.8192K      $@@ ${CPFLAGS}
${HDRDIR}.CPU.ARM600:        hdr.CPU.ARM600;        ${CP} hdr.CPU.ARM600           $@@ ${CPFLAGS}
${HDRDIR}.CPU.Generic26:     hdr.CPU.Generic26;     ${CP} hdr.CPU.Generic26        $@@ ${CPFLAGS}
${HDRDIR}.FDC.FDC711:        hdr.FDC.FDC711;        ${CP} hdr.FDC.FDC711           $@@ ${CPFLAGS}
${HDRDIR}.IO.GenericIO:      hdr.IO.GenericIO;      ${CP} hdr.IO.GenericIO 	   $@@ ${CPFLAGS}
${HDRDIR}.IO.IOC:            hdr.IO.IOC;            ${CP} hdr.IO.IOC               $@@ ${CPFLAGS}
${HDRDIR}.IO.IOC-A1:         hdr.IO.IOC-A1;         ${CP} hdr.IO.IOC-A1            $@@ ${CPFLAGS}
${HDRDIR}.IO.IOEB:           hdr.IO.IOEB;           ${CP} hdr.IO.IOEB              $@@ ${CPFLAGS}
${HDRDIR}.IO.IOMD:           hdr.IO.IOMD;           ${CP} hdr.IO.IOMD              $@@ ${CPFLAGS}
${HDRDIR}.IO.IOMDL:          hdr.IO.IOMDL;          ${CP} hdr.IO.IOMDL             $@@ ${CPFLAGS}
${HDRDIR}.MEMM.ARM600:       hdr.MEMM.ARM600;       ${CP} hdr.MEMM.ARM600          $@@ ${CPFLAGS}
${HDRDIR}.MEMM.MEMC1:        hdr.MEMM.MEMC1;        ${CP} hdr.MEMM.MEMC1           $@@ ${CPFLAGS}
${HDRDIR}.VIDC.VIDC1a:       hdr.VIDC.VIDC1a;       ${CP} hdr.VIDC.VIDC1a          $@@ ${CPFLAGS}
${HDRDIR}.VIDC.VIDC20:       hdr.VIDC.VIDC20;       ${CP} hdr.VIDC.VIDC20          $@@ ${CPFLAGS}
d183 6
a188 6
${HDRDIR}.DDVMacros:         hdr.DDVMacros;         ${CP} hdr.DDVMacros            $@@ ${CPFLAGS}
${HDRDIR}.Debug:             hdr.Debug;             ${CP} hdr.Debug                $@@ ${CPFLAGS}
${HDRDIR}.ExtraLong:         hdr.ExtraLong;         ${CP} hdr.ExtraLong            $@@ ${CPFLAGS}
${HDRDIR}.Macros:            hdr.Macros;            ${CP} hdr.Macros               $@@ ${CPFLAGS}
${HDRDIR}.NdrDebug:          hdr.NdrDebug;          ${CP} hdr.NdrDebug             $@@ ${CPFLAGS}
${HDRDIR}.Proc:              hdr.Proc;              ${CP} hdr.Proc                 $@@ ${CPFLAGS}
d191 12
a202 12
${HDRDIR}.CMOS:              hdr.CMOS;              ${CP} hdr.CMOS                 $@@ ${CPFLAGS}
${HDRDIR}.DevNos:            hdr.DevNos;            ${CP} hdr.DevNos               $@@ ${CPFLAGS}
${HDRDIR}.Heap:              hdr.Heap;              ${CP} hdr.Heap                 $@@ ${CPFLAGS}
${HDRDIR}.KEYV:              hdr.KEYV;              ${CP} hdr.KEYV                 $@@ ${CPFLAGS}
${HDRDIR}.ListOpts:          hdr.ListOpts;          ${CP} hdr.ListOpts             $@@ ${CPFLAGS}
${HDRDIR}.Messages:          hdr.Messages;          ${CP} hdr.Messages             $@@ ${CPFLAGS}
${HDRDIR}.PaletteV:          hdr.PaletteV;          ${CP} hdr.PaletteV             $@@ ${CPFLAGS}
${HDRDIR}.Pointer:           hdr.Pointer;           ${CP} hdr.Pointer              $@@ ${CPFLAGS}
${HDRDIR}.Sprite:            hdr.Sprite;            ${CP} hdr.Sprite               $@@ ${CPFLAGS}
${HDRDIR}.Symbols:           hdr.Symbols;           ${CP} hdr.Symbols              $@@ ${CPFLAGS}
${HDRDIR}.System:            hdr.System;            ${CP} hdr.System               $@@ ${CPFLAGS}
${HDRDIR}.Tokens:            hdr.Tokens;            ${CP} hdr.Tokens               $@@ ${CPFLAGS}
d205 4
@


4.1.7.3
log
@Export new Machine.Machine header file.
@
text
@a79 1
 ${HDRDIR}.Machine.Machine \
a143 1
${HDRDIR}.Machine.Machine:   hdr.Machine.Machine;   ${CP} hdr.Machine.Machine      $@@ ${CPFLAGS}
@


4.1.7.4
log
@Added 6M ImageSize to list of exported Headers
@
text
@a67 1
 ${HDRDIR}.ImageSize.6144K \
@


4.1.7.5
log
@Fixed export of imagesize
@
text
@d66 4
a69 1
 ${HDRDIR}.ImageSize.<ImageSize> \
d147 3
a149 1
${HDRDIR}.ImageSize.<ImageSize>: hdr.ImageSize.<ImageSize>; ${CP} hdr.ImageSize.<ImageSize> $@@ ${CPFLAGS}
@


4.1.5.1
log
@Import from SrcFiler
@
text
@d77 2
a78 1
 ${HDRDIR}.Machine.<Machine> \
a115 3
        ${MKDIR} <build$dir>.Export.C
        ${MKDIR} <build$dir>.Export.C.h
        ${MKDIR} <build$dir>.Export.C.o
a118 1
        ${MKDIR} <build$dir>.Export.Hdr.Interface2
d162 2
a163 1
${HDRDIR}.Machine.<Machine>: hdr.Machine.<Machine>;  ${CP} hdr.Machine.<Machine> $@@ ${CPFLAGS}
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
