head	1.4;
access;
symbols
	HdrSrc-2_77:1.4
	HdrSrc-2_76:1.4
	HdrSrc-2_75:1.4
	HdrSrc-2_74:1.4
	HdrSrc-2_73:1.4
	HdrSrc-2_72:1.4
	HdrSrc-2_71:1.4
	HdrSrc-2_70:1.4
	HdrSrc-2_69:1.4
	HdrSrc-2_68:1.4
	HdrSrc-2_67:1.4
	HdrSrc-2_66:1.4
	HdrSrc-2_65:1.4
	HdrSrc-2_64:1.4
	HdrSrc-2_63:1.4
	HdrSrc-2_62:1.4
	HdrSrc-2_61:1.4
	HdrSrc-2_60:1.4
	HdrSrc-2_59:1.4
	HdrSrc-2_58:1.4
	HdrSrc-2_57:1.4
	HdrSrc-2_56:1.4
	HdrSrc-2_55:1.4
	HdrSrc-2_54:1.4
	HdrSrc-2_53:1.4
	HdrSrc-2_52:1.4
	HdrSrc-2_51:1.4
	HdrSrc-2_50:1.4
	HdrSrc-2_49:1.4
	HdrSrc-2_48:1.4
	HdrSrc-2_47:1.4
	HdrSrc-2_46-4_247_2_1:1.4
	XCompile:1.4.0.4
	XCompile_bp:1.4
	HdrSrc-2_46:1.4
	HdrSrc-2_45:1.4
	HdrSrc-2_44:1.4
	HdrSrc-2_43:1.4
	HdrSrc-2_42:1.4
	HdrSrc-2_41:1.4
	HdrSrc-2_40-1:1.4
	HdrSrc-2_40:1.4
	HdrSrc-2_39:1.4
	HdrSrc-2_38:1.4
	HdrSrc-2_37:1.4
	HdrSrc-2_36:1.4
	HdrSrc-2_35:1.4
	HdrSrc-2_34:1.4
	HdrSrc-2_33:1.4
	HdrSrc-2_32:1.4
	HdrSrc-2_31:1.4
	HdrSrc-2_30:1.4
	HdrSrc-2_29:1.4
	HdrSrc-2_28:1.4
	HdrSrc-2_27:1.4
	HdrSrc-2_26:1.4
	HdrSrc-2_25:1.4
	HdrSrc-2_24:1.4
	HdrSrc-2_23:1.4
	HdrSrc-2_22:1.4
	HdrSrc-2_21:1.4
	HdrSrc-2_20:1.4
	HdrSrc-2_19:1.4
	HdrSrc-2_18:1.4
	HdrSrc-2_17:1.4
	HdrSrc-2_16:1.4
	HdrSrc-2_15:1.4
	HdrSrc-2_14:1.4
	HdrSrc-2_13:1.4
	HdrSrc-2_12:1.4
	HdrSrc-2_11:1.4
	HdrSrc-2_10:1.4
	HdrSrc-2_09:1.4
	HdrSrc-2_08:1.4
	HdrSrc-2_07:1.4
	HdrSrc-2_06:1.4
	HdrSrc-2_05:1.4
	HdrSrc-2_04:1.4
	HdrSrc-2_03:1.4
	HdrSrc-2_02:1.4
	HdrSrc-2_01:1.4
	HdrSrc-2_00:1.4
	HdrSrc-1_99:1.4
	HdrSrc-1_98:1.4
	HdrSrc-1_97:1.4
	HdrSrc-1_96:1.4
	HdrSrc-1_95:1.4
	HdrSrc-1_94:1.4
	HdrSrc-1_93:1.4
	HdrSrc-1_92:1.4
	HdrSrc-1_91:1.4
	HdrSrc-1_90:1.4
	HdrSrc-1_89:1.4
	HdrSrc-1_88:1.4
	HdrSrc-1_87:1.4
	HdrSrc-1_86:1.4
	HdrSrc-1_85:1.4
	HdrSrc-1_84:1.4
	HdrSrc-1_83:1.4
	HdrSrc-1_82:1.4
	HdrSrc-1_81:1.4
	HdrSrc-1_80:1.4
	HdrSrc-1_79:1.4
	HdrSrc-1_78:1.4
	HdrSrc-1_77:1.4
	HdrSrc-1_76:1.4
	Cortex_merge:1.4
	HdrSrc-1_62-4_162_2_15:1.4
	HdrSrc-1_75:1.4
	HdrSrc-1_62-4_162_2_14:1.4
	HdrSrc-1_74:1.4
	HdrSrc-1_62-4_162_2_13:1.4
	HdrSrc-1_62-4_162_2_12:1.4
	HdrSrc-1_73:1.4
	HdrSrc-1_72:1.4
	HdrSrc-1_62-4_162_2_11:1.4
	HdrSrc-1_62-4_162_2_10:1.4
	HdrSrc-1_71:1.4
	HdrSrc-1_70:1.4
	HdrSrc-1_69:1.4
	Cortex_bp:1.4
	HdrSrc-1_62-4_162_2_9:1.4
	HdrSrc-1_62-4_162_2_8:1.4
	HdrSrc-1_68:1.4
	HdrSrc-1_62-4_162_2_7:1.4
	HdrSrc-1_62-4_162_2_6:1.4
	HdrSrc-1_62-4_162_2_5:1.4
	HdrSrc-1_62-4_162_2_4:1.4
	HdrSrc-1_67:1.4
	HdrSrc-1_66:1.4
	HdrSrc-1_62-4_162_2_3:1.4
	HdrSrc-1_65:1.4
	HdrSrc-1_64:1.4
	HdrSrc-1_63:1.4
	HdrSrc-1_62-4_162_2_2:1.4
	HdrSrc-1_62-4_162_2_1:1.4
	Cortex:1.4.0.2
	HdrSrc-1_62:1.4
	HdrSrc-1_61:1.4
	HdrSrc-1_60:1.4
	HdrSrc-1_59:1.4
	HdrSrc-1_58:1.4
	HdrSrc-1_57:1.4
	HdrSrc-1_56:1.4
	HdrSrc-1_55:1.4
	HdrSrc-1_54:1.4
	HdrSrc-1_53:1.4
	HdrSrc-1_52:1.4
	HdrSrc-1_51:1.4
	HdrSrc-1_50:1.4
	HdrSrc-1_49:1.4
	HdrSrc-1_48:1.4
	HdrSrc-1_47:1.4
	RO_5_07:1.4
	HdrSrc-1_46:1.4
	HdrSrc-1_45:1.4
	HdrSrc-1_44:1.4
	HdrSrc-1_43:1.4
	HdrSrc-1_42:1.4
	HdrSrc-1_41:1.4
	HdrSrc-1_40:1.4
	HdrSrc-1_39:1.4
	HdrSrc-1_38:1.4
	HdrSrc-1_37:1.4
	HdrSrc-1_36:1.4
	HdrSrc-1_35:1.4
	HdrSrc-1_34:1.4
	HdrSrc-1_33:1.4
	HdrSrc-1_32:1.4
	HdrSrc-1_31:1.4
	HdrSrc-1_30:1.4
	HdrSrc-1_29:1.4
	HdrSrc-1_28:1.4
	HdrSrc-1_27:1.4
	HdrSrc-1_26:1.4
	HdrSrc-1_25:1.4
	HdrSrc-1_24:1.4
	HdrSrc-1_23:1.4
	HdrSrc-1_22:1.4
	HdrSrc-1_21:1.4
	HdrSrc-1_20:1.4
	HdrSrc-1_19:1.4
	HdrSrc-1_18:1.4
	HdrSrc-1_17:1.4
	HdrSrc-1_16:1.4
	HdrSrc-1_15:1.3
	HdrSrc-1_14:1.3
	HdrSrc-1_13:1.3
	HdrSrc-1_12:1.3
	HdrSrc-1_11:1.3
	HdrSrc-0_71-4_72_2_2:1.2
	HdrSrc-1_10:1.3
	HdrSrc-1_09:1.3
	HdrSrc-1_08:1.3
	HdrSrc-1_07:1.3
	HdrSrc-1_06:1.3
	HdrSrc-1_05:1.3
	dellis_autobuild_BaseSW:1.3
	HdrSrc-1_04:1.3
	HdrSrc-1_03:1.3
	HdrSrc-1_02:1.3
	HdrSrc-1_00:1.3
	HdrSrc-0_99:1.3
	HdrSrc-0_71-4_72_2_1:1.2
	Lazarus_Z11:1.2.0.2
	HdrSrc-0_98:1.3
	HdrSrc-0_97:1.3
	HdrSrc-0_95:1.3
	HdrSrc-0_94:1.3
	HdrSrc-0_93:1.3
	HdrSrc-0_92:1.3
	HdrSrc-0_91:1.3
	HdrSrc-0_90:1.3
	HdrSrc-0_89:1.3
	HdrSrc-0_88:1.3
	HdrSrc-0_87:1.3
	HdrSrc-0_86:1.3
	HdrSrc-0_85:1.3
	HdrSrc-0_84:1.3
	HdrSrc-0_83:1.3
	HdrSrc-0_82:1.3
	HdrSrc-0_81:1.2
	HdrSrc-0_80:1.2
	HdrSrc-0_79:1.2
	HdrSrc-0_78:1.2
	HdrSrc-0_77:1.2
	sbrodie_sedwards_16Mar2000:1.2
	HdrSrc-0_76:1.2
	HdrSrc-0_75:1.2
	HdrSrc-0_74:1.2
	HdrSrc-0_73:1.2
	HdrSrc-0_72:1.2
	HdrSrc-0_71:1.2
	HdrSrc-0_70:1.2
	HdrSrc-0_69:1.2
	HdrSrc-0_68:1.2
	HdrSrc-0_67:1.2
	HdrSrc-0_66:1.2
	HdrSrc-0_65:1.2
	HdrSrc-0_64:1.2
	dcotton_autobuild_BaseSW:1.4
	kbracey_32bit_merge:1.1.2.6
	HdrSrc-0_63:1.2
	HdrSrc-0_57-4_58_2_9:1.1.2.6
	HdrSrc-0_57-4_58_2_8:1.1.2.6
	HdrSrc-0_57-4_58_2_7:1.1.2.6
	HdrSrc-0_57-4_58_2_6:1.1.2.6
	HdrSrc-0_57-4_58_2_5:1.1.2.3
	HdrSrc-0_57-4_58_2_4:1.1.2.2
	HdrSrc-0_57-4_58_2_3:1.1.2.1
	HdrSrc-0_57-4_58_2_2:1.1.2.1
	kbracey_32bit:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2001.01.29.16.36.10;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.12.12.25.32;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	99.11.26.14.32.28;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	99.11.10.13.33.13;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	99.11.10.13.33.14;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	99.11.20.17.22.24;	author sbrodie;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	99.11.22.12.59.11;	author sbrodie;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	99.11.22.13.04.51;	author sbrodie;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	99.11.22.13.07.23;	author sbrodie;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	99.11.23.17.26.34;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Corrected a typo in the EXITAPCS macro.

Version 1.16. Tagged as 'HdrSrc-1_16'
@
text
@; Copyright 1999 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Hdr:APCS.Common

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_APCS
        GBLL    Included_Hdr_APCS
Included_Hdr_APCS SETL {TRUE}

; All the following macros use {CONFIG} to determine the APCS in force.
; This means they are NOT directly affected by the APCS variable.
; This allows them to work when the APCS has been overridden - for example
; the SharedCLibrary will build using APCS-R to keep 26-bit compatibility
; where possible.

; This also means that these macros are not AAsm compatible.


; *****************************************
; ***  Pull registers given in reglist  ***
; *****************************************
        MACRO
$label  PullAPCS $reglist, $cond
        [ "$reglist" :RIGHT: 2 <> "pc" :LAND: "$reglist" :RIGHT: 2 <> "PC"
        ! 1, "PullAPCS must pull PC at the end. Use Pull instead"
        ]
 [ {CONFIG}=26
$label  LDM$cond.FD sp!, {$reglist}^
 |
$label  LDM$cond.FD sp!, {$reglist}
 ]
        MEND

; *****************************
; ***  APCS function entry  ***
; *****************************
        MACRO
        FunctionEntry $SaveList, $MakeFrame
        LCLS    Temps
        LCLS    TempsC
Temps   SETS    "$SaveList"
TempsC  SETS    ""
 [ Temps <> ""
TempsC SETS Temps :CC: ","
 ]

 [ "$MakeFrame" = ""
   [ TempsC = ""
        STR     lr, [sp, #-4]!
   |
        Push    "$TempsC.lr"
   ]
 |
        MOV     ip, sp
        Push    "$TempsC.fp,ip,lr,pc"
        SUB     fp, ip, #4
 ]
        MEND

; ******************************
; ***  APCS function return  ***
; ******************************
        MACRO
        Return  $ReloadList, $Base, $CC, $linkreg
        LCLS    Temps
        LCLS    Tempr
Temps   SETS    "$ReloadList"
Tempr   SETS    "$linkreg"

 [ "$Base"<>"LinkNotStacked" :LAND: "$Base"<>"" :LAND: "$Base"<>"fpbased"
 ! 1, "Unrecognised value for $Base"
 ]

 [ "$Base"="LinkNotStacked" :LAND: "$ReloadList"=""
   [ "$Tempr" = ""
Tempr   SETS    "lr"
   ]
 |
   [ "$Tempr" <> ""
   ! 1, "Return address cannot be held in register when LR is stacked"
   ]
 ]

 [ {CONFIG} = 26
   [ "$Base" = "LinkNotStacked" :LAND: "$ReloadList"=""
        MOV$CC.S pc, $Tempr
   |
     [ Temps <> ""
Temps   SETS    Temps :CC: ","
     ]
     [ "$Base" = "fpbased"
        LDM$CC.DB fp, {$Temps.fp,sp,pc}^
     |
        LDM$CC.FD sp!, {$Temps.pc}^
     ]
   ]
 |
   [ "$Base" = "LinkNotStacked" :LAND: "$ReloadList"=""
        MOV$CC  pc, $Tempr
   |
     [ Temps <> ""
Temps   SETS    Temps :CC: ","
     ]
     [ "$Base" = "fpbased"
        LDM$CC.DB fp, {$Temps.fp,sp,pc}
     |
       [ Temps = ""
        LDR$CC  pc, [sp], #4
       |
        LDM$CC.FD sp!, {$Temps.pc}
       ]
     ]
   ]
 ]
        MEND

; This function goes with those in Hdr:Proc

; *****************************************************************************
; *** Exit procedure, restore stack and saved registers to values on entry. ***
; *** Restore PSR if APCS-R in force.                                       ***
; *****************************************************************************
        MACRO
$label  EXITAPCS $cond
$label
 [ Proc_SavedCPSR
        ! 1, "Don't use EntryS with EXITAPCS"
 ]
 [ Proc_LocalStack <> 0
        ADD$cond sp, sp, #Proc_LocalStack
 ]
 [ APCS_Type = "APCS-R"
 [ "$Proc_RegList" = ""
        Pull    "pc",$cond,^
 |
        Pull    "$Proc_RegList, pc",$cond,^
 ]
 |
 [ "$Proc_RegList" = ""
        LDR$cond pc, [sp], #4
 |
        Pull    "$Proc_RegList, pc",$cond
 ]
 ]
        MEND

 ] ; :LNOT::DEF:Included_Hdr_APCS

        OPT     OldOpt
        END
@


1.3
log
@Fixed 'JumpAddress' macro. Optimised APCS function entry/routine to use
LDR/STR instead of single-register LDM/STM.

Version 0.82. Tagged as 'HdrSrc-0_82'
@
text
@d146 1
a146 1
 [ APCS = "APCS-R"
@


1.2
log
@  Merge of 32-bit capable macros to trunk.
Detail:
  The 26-bit and 32-bit capable macros have been added.
  Header files choose which set of macros to use based on <Machine>.
  If you want the new macros, include "Hdr:APCS.<APCS>" in addition
    to the usual inclusions at the top of assembler files.
  Choices are based on the settings of macros No32bitCode and
    No26bitCode.  By default, all existing machines define these
    as {TRUE} and {FALSE} respectively.  This yields the same macros
    as before (tested in Customer F 5 build) and should yield code which
    functions on RISC OS 3.1.  Any other combination of settings is
    untested at this time.
  New assembler code should use the macros FunctionEntry, Return et al
    to ensure that they build correctly.
  New assembler code should be written to not require flag preservation
    across internal function calls and to not assume it on external
    function calls where it is possible to do so.  DO NOT simply replace
    "MOVS pc, lr" with "MOV pc, lr" as this doesn't work properly.
    Replace "MOVS pc, lr" with "Return ,LinkNotStacked"
  Do not write code which simply masks out &FC000003 from pc or some kind
    or pc originated value (eg. on r14 to attempt to remove the PSR flags
    from it.  Use the RemovePSRFromReg macro instead.
Admin:
  Tested with Customer F 5 build.
  Requires FPEmulator 4.11
  Requires Portable 0.65 (or Portable75 0.04)
  Required by any new or modified assembler code in future, pretty much.
    Such components may not necessarily specify a dependency on this
    or any other later version of HdrSrc.

Version 0.63. Tagged as 'HdrSrc-0_63'
@
text
@d62 3
d66 1
d121 3
d125 1
@


1.1
log
@file Common was initially added on branch kbracey_32bit.
@
text
@d1 156
@


1.1.2.1
log
@More macros added to Hdr:Proc and Hdr:CPU.
msr macro now understands _cxsf form.
APCS macros now available in Hdr:APCS.<APCS>

Version 0.57, 4.58.2.2. Tagged as 'HdrSrc-0_57-4_58_2_2'
@
text
@a0 110
; Copyright 1999 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Hdr:APCS.Common

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_APCS
        GBLL    Included_Hdr_APCS
Included_Hdr_APCS SETL {TRUE}

; All the following macros use {CONFIG} to determine the APCS in force.
; This means they are NOT directly affected by the APCS variable.
; This allows them to work when the APCS has been overridden - for example
; the SharedCLibrary will build using APCS-R to keep 26-bit compatibility
; where possible.

; This also means that these macros are not AAsm compatible.


; *****************************************
; ***  Pull registers given in reglist  ***
; *****************************************
        MACRO
$label  PullAPCS $reglist, $cond
        [ "$reglist" :RIGHT: 2 <> "pc" :LAND: "$reglist" :RIGHT: 2 <> "PC"
        ! 1, "PullAPCS must pull PC at the end. Use Pull instead"
        ]
 [ {CONFIG}=26
$label  LDM$cond.FD sp!, {$reglist}^
 |
$label  LDM$cond.FD sp!, {$reglist}
 ]
        MEND

; *****************************
; ***  APCS function entry  ***
; *****************************
        MACRO
        FunctionEntry $SaveList, $MakeFrame
        LCLS    Temps
        LCLS    TempsC
Temps   SETS    "$SaveList"
TempsC  SETS    ""
 [ Temps <> ""
TempsC SETS Temps :CC: ","
 ]

 [ "$MakeFrame" = ""
        Push    "$TempsC.lr"
 |
        MOV     ip, sp
        Push    "$TempsC.fp,ip,lr,pc"
        SUB     fp, ip, #4
 ]
        MEND

; ******************************
; ***  APCS function return  ***
; ******************************
        MACRO
        Return  $ReloadList, $Base, $CC
        LCLS    Temps
Temps   SETS    "$ReloadList"

 [ {CONFIG} = 26
   [ "$Base" = "LinkNotStacked" :LAND: "$ReloadList"=""
        MOV$CC.S pc, lr
   |
     [ Temps <> ""
Temps   SETS    Temps :CC: ","
     ]
     [ "$Base" = "fpbased"
        LDM$CC.DB fp, {$Temps.fp,sp,pc}^
     |
        LDM$CC.FD sp!, {$Temps.pc}^
     ]
   ]
 |
   [ "$Base" = "LinkNotStacked" :LAND: "$ReloadList"=""
        MOV$CC  pc, lr
   |
     [ Temps <> ""
Temps   SETS    Temps :CC: ","
     ]
     [ "$Base" = "fpbased"
        LDM$CC.DB fp, {$Temps.fp,sp,pc}
     |
        LDM$CC.FD sp!, {$Temps.pc}
     ]
   ]
 ]
        MEND

 ] ; :LNOT::DEF:Included_Hdr_APCS

        OPT     OldOpt
        END
@


1.1.2.2
log
@  Enhanced Return macro.
Detail:
  Return macro now has a fourth optional parameter which
    is used if the return address is not stacked and is not
    in lr but in some other register.  Default value is "lr".
Admin:
  Required by RiscOS/Sources/Lib/AsmUtils.

Version 0.57, 4.58.2.4. Tagged as 'HdrSrc-0_57-4_58_2_4'
@
text
@d74 1
a74 1
        Return  $ReloadList, $Base, $CC, $linkreg
a75 1
        LCLS    Tempr
a76 11
Tempr   SETS    "$linkreg"

 [ "$Base"="LinkNotStacked" :LAND: "$ReloadList"=""
   [ "$Tempr" = ""
Tempr   SETS    "lr"
   ]
 |
   [ "$Tempr" <> ""
   ! 1, "Return address cannot be held in register when LR is stacked"
   ]
 ]
d80 1
a80 1
        MOV$CC.S pc, $Tempr
d93 1
a93 1
        MOV$CC  pc, $Tempr
@


1.1.2.3
log
@  RemovePSRFromReg macro added.
  Assertion added to Return to catch wrong values for $Base
Detail:
  RemovePSRFromReg $pcr, $tmp, $dest
    This macro removes the PSR bits from register $pcr, storing
    the result in $dest (defaults to $pcr).  Macro does not
    affect any PSR flags.  Code will execute in any currently
    defined 26 or 32 bit processor mode.
Admin:
  Required by the SharedCLibrary.

Version 0.57, 4.58.2.5. Tagged as 'HdrSrc-0_57-4_58_2_5'
@
text
@a79 4
 [ "$Base<>"LinkNotStacked" :LAND: "$Base<>""
 ! 0, "Unrecognised value for $Base"
 ]

@


1.1.2.4
log
@Added missing quotes
@
text
@d80 1
a80 1
 [ "$Base"<>"LinkNotStacked" :LAND: "$Base"<>""
@


1.1.2.5
log
@Added missing quotes
@
text
@d80 2
a81 2
 [ "$Base"<>"LinkNotStacked" :LAND: "$Base"<>"" :LAND: "$Base"<>"fpbased"
 ! 1, "Unrecognised value for $Base"
@


1.1.2.6
log
@Lots of exciting 32-bit stuff. Try it at your peril.

Version 0.57, 4.58.2.6. Tagged as 'HdrSrc-0_57-4_58_2_6'
@
text
@a122 30
; This function goes with those in Hdr:Proc

; *****************************************************************************
; *** Exit procedure, restore stack and saved registers to values on entry. ***
; *** Restore PSR if APCS-R in force.                                       ***
; *****************************************************************************
        MACRO
$label  EXITAPCS $cond
$label
 [ Proc_SavedCPSR
        ! 1, "Don't use EntryS with EXITAPCS"
 ]
 [ Proc_LocalStack <> 0
        ADD$cond sp, sp, #Proc_LocalStack
 ]
 [ APCS = "APCS-R"
 [ "$Proc_RegList" = ""
        Pull    "pc",$cond,^
 |
        Pull    "$Proc_RegList, pc",$cond,^
 ]
 |
 [ "$Proc_RegList" = ""
        LDR$cond pc, [sp], #4
 |
        Pull    "$Proc_RegList, pc",$cond
 ]
 ]
        MEND

@


