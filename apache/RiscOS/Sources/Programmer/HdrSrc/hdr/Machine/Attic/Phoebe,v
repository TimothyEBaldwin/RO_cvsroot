head	4.2;
access;
symbols
	HdrSrc-2_23:4.1
	HdrSrc-2_22:4.1
	HdrSrc-2_21:4.1
	HdrSrc-2_20:4.1
	HdrSrc-2_19:4.1
	HdrSrc-2_18:4.1
	HdrSrc-2_17:4.1
	HdrSrc-2_16:4.1
	HdrSrc-2_15:4.1
	HdrSrc-2_14:4.1
	HdrSrc-2_13:4.1
	HdrSrc-2_12:4.1
	HdrSrc-2_11:4.1
	HdrSrc-2_10:4.1
	HdrSrc-2_09:4.1
	HdrSrc-2_08:4.1
	HdrSrc-2_07:4.1
	HdrSrc-2_06:4.1
	HdrSrc-2_05:4.1
	HdrSrc-2_04:4.1
	HdrSrc-2_03:4.1
	HdrSrc-2_02:4.1
	HdrSrc-2_01:4.1
	HdrSrc-2_00:4.1
	HdrSrc-1_99:4.1
	HdrSrc-1_98:4.1
	HdrSrc-1_97:4.1
	HdrSrc-1_96:4.1
	HdrSrc-1_95:4.1
	HdrSrc-1_94:4.1
	HdrSrc-1_93:4.1
	HdrSrc-1_92:4.1
	HdrSrc-1_91:4.1
	HdrSrc-1_90:4.1
	HdrSrc-1_89:4.1
	HdrSrc-1_88:4.1
	HdrSrc-1_87:4.1
	HdrSrc-1_86:4.1
	HdrSrc-1_85:4.1
	HdrSrc-1_84:4.1
	HdrSrc-1_83:4.1
	HdrSrc-1_82:4.1
	HdrSrc-1_81:4.1
	HdrSrc-1_80:4.1
	HdrSrc-1_79:4.1
	HdrSrc-1_78:4.1
	HdrSrc-1_77:4.1
	HdrSrc-1_76:4.1
	Cortex_merge:4.1
	HdrSrc-1_62-4_162_2_15:4.1
	HdrSrc-1_75:4.1
	HdrSrc-1_62-4_162_2_14:4.1
	HdrSrc-1_74:4.1
	HdrSrc-1_62-4_162_2_13:4.1
	HdrSrc-1_62-4_162_2_12:4.1
	HdrSrc-1_73:4.1
	HdrSrc-1_72:4.1
	HdrSrc-1_62-4_162_2_11:4.1
	HdrSrc-1_62-4_162_2_10:4.1
	HdrSrc-1_71:4.1
	HdrSrc-1_70:4.1
	HdrSrc-1_69:4.1
	Cortex_bp:4.1
	HdrSrc-1_62-4_162_2_9:4.1
	HdrSrc-1_62-4_162_2_8:4.1
	HdrSrc-1_68:4.1
	HdrSrc-1_62-4_162_2_7:4.1
	HdrSrc-1_62-4_162_2_6:4.1
	HdrSrc-1_62-4_162_2_5:4.1
	HdrSrc-1_62-4_162_2_4:4.1
	HdrSrc-1_67:4.1
	HdrSrc-1_66:4.1
	HdrSrc-1_62-4_162_2_3:4.1
	HdrSrc-1_65:4.1
	HdrSrc-1_64:4.1
	HdrSrc-1_63:4.1
	HdrSrc-1_62-4_162_2_2:4.1
	HdrSrc-1_62-4_162_2_1:4.1
	Cortex:4.1.0.6
	HdrSrc-1_62:4.1
	HdrSrc-1_61:4.1
	HdrSrc-1_60:4.1
	HdrSrc-1_59:4.1
	HdrSrc-1_58:4.1
	HdrSrc-1_57:4.1
	HdrSrc-1_56:4.1
	HdrSrc-1_55:4.1
	HdrSrc-1_54:4.1
	HdrSrc-1_53:4.1
	HdrSrc-1_52:4.1
	HdrSrc-1_51:4.1
	HdrSrc-1_50:4.1
	HdrSrc-1_49:4.1
	HdrSrc-1_48:4.1
	HdrSrc-1_47:4.1
	RO_5_07:4.1
	HdrSrc-1_46:4.1
	HdrSrc-1_45:4.1
	HdrSrc-1_44:4.1
	HdrSrc-1_43:4.1
	HdrSrc-1_42:4.1
	HdrSrc-1_41:4.1
	HdrSrc-1_40:4.1
	HdrSrc-1_39:4.1
	HdrSrc-1_38:4.1
	HdrSrc-1_37:4.1
	HdrSrc-1_36:4.1
	HdrSrc-1_35:4.1
	HdrSrc-1_34:4.1
	HdrSrc-1_33:4.1
	HdrSrc-1_32:4.1
	HdrSrc-1_31:4.1
	HdrSrc-1_30:4.1
	HdrSrc-1_29:4.1
	HdrSrc-1_28:4.1
	HdrSrc-1_27:4.1
	HdrSrc-1_26:4.1
	HdrSrc-1_25:4.1
	HdrSrc-1_24:4.1
	HdrSrc-1_23:4.1
	HdrSrc-1_22:4.1
	HdrSrc-1_21:4.1
	HdrSrc-1_20:4.1
	HdrSrc-1_19:4.1
	HdrSrc-1_18:4.1
	HdrSrc-1_17:4.1
	HdrSrc-1_16:4.1
	HdrSrc-1_15:4.1
	HdrSrc-1_14:4.1
	HdrSrc-1_13:4.1
	HdrSrc-1_12:4.1
	HdrSrc-1_11:4.1
	HdrSrc-0_71-4_72_2_2:4.1
	HdrSrc-1_10:4.1
	HdrSrc-1_09:4.1
	HdrSrc-1_08:4.1
	HdrSrc-1_07:4.1
	HdrSrc-1_06:4.1
	HdrSrc-1_05:4.1
	dellis_autobuild_BaseSW:4.1
	HdrSrc-1_04:4.1
	HdrSrc-1_03:4.1
	HdrSrc-1_02:4.1
	HdrSrc-1_00:4.1
	HdrSrc-0_99:4.1
	HdrSrc-0_71-4_72_2_1:4.1
	Lazarus_Z11:4.1.0.4
	HdrSrc-0_98:4.1
	HdrSrc-0_97:4.1
	HdrSrc-0_95:4.1
	HdrSrc-0_94:4.1
	HdrSrc-0_93:4.1
	HdrSrc-0_92:4.1
	HdrSrc-0_91:4.1
	HdrSrc-0_90:4.1
	HdrSrc-0_89:4.1
	HdrSrc-0_88:4.1
	HdrSrc-0_87:4.1
	HdrSrc-0_86:4.1
	HdrSrc-0_85:4.1
	HdrSrc-0_84:4.1
	HdrSrc-0_83:4.1
	HdrSrc-0_82:4.1
	HdrSrc-0_81:4.1
	HdrSrc-0_80:4.1
	HdrSrc-0_79:4.1
	HdrSrc-0_78:4.1
	HdrSrc-0_77:4.1
	sbrodie_sedwards_16Mar2000:4.1
	HdrSrc-0_76:4.1
	HdrSrc-0_75:4.1
	HdrSrc-0_74:4.1
	HdrSrc-0_73:4.1
	HdrSrc-0_72:4.1
	HdrSrc-0_71:4.1
	HdrSrc-0_70:4.1
	HdrSrc-0_69:4.1
	HdrSrc-0_68:4.1
	HdrSrc-0_67:4.1
	HdrSrc-0_66:4.1
	HdrSrc-0_65:4.1
	HdrSrc-0_64:4.1
	kbracey_32bit_merge:4.1
	HdrSrc-0_63:4.1
	HdrSrc-0_57-4_58_2_9:4.1
	HdrSrc-0_57-4_58_2_8:4.1
	HdrSrc-0_57-4_58_2_7:4.1
	HdrSrc-0_57-4_58_2_6:4.1
	HdrSrc-0_57-4_58_2_5:4.1
	HdrSrc-0_57-4_58_2_4:4.1
	HdrSrc-0_57-4_58_2_3:4.1
	HdrSrc-0_62:4.1
	HdrSrc-0_61:4.1
	HdrSrc-0_60:4.1
	HdrSrc-0_57-4_58_2_2:4.1
	HdrSrc-0_59:4.1
	HdrSrc-0_58:4.1
	HdrSrc-0_57-4_58_2_1:4.1
	kbracey_32bit:4.1.0.2
	HdrSrc-0_57:4.1
	HdrSrc-0_56:4.1
	HdrSrc-0_55:4.1
	HdrSrc-0_54:4.1
	HdrSrc-0_53:4.1
	HdrSrc-0_52:4.1
	HdrSrc-0_51:4.1
	HdrSrc-0_50:4.1
	HdrSrc-0_49:4.1
	HdrSrc-0_48:4.1
	HdrSrc-0_47:4.1
	HdrSrc-0_46:4.1
	HdrSrc-0_45:4.1
	HdrSrc-0_44:4.1
	HdrSrc-0_43:4.1
	HdrSrc-0_42:4.1
	dcotton_autobuild_BaseSW:4.1
	HdrSrc-0_41:4.1
	HdrSrc-0_39:4.1
	HdrSrc-0_38:4.1
	HdrSrc-0_37:4.1
	HdrSrc-0_36:4.1
	HdrSrc-0_35:4.1
	HdrSrc-0_34:4.1
	HdrSrc-0_33:4.1
	HdrSrc-0_32:4.1
	HdrSrc-0_31:4.1
	Ursula_RiscPC_merge:1.1.2.1
	HdrSrc-0_30:4.1
	HdrSrc-0_29:4.1
	Ursula_merge:1.1.2.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.2.1
	Ursula_RiscPC:1.1.2.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.2.1
	UrsulaBuild_FinalSoftload:1.1.2.1
	rthornb_UrsulaBuild-12Aug1998:1.1.2.1
	aglover_UrsulaBuild-05Aug1998:1.1.2.1
	rthornb_UrsulaBuild-29Jul1998:1.1.2.1
	rthornb_UrsulaBuild-22Jul1998:1.1.2.1
	rthornb_UrsulaBuild-15Jul1998:1.1.2.1
	rthornb_UrsulaBuild-07Jul1998:1.1.2.1
	rthornb_UrsulaBuild-17Jun1998:1.1.2.1
	rthornb_UrsulaBuild-03Jun1998:1.1.2.1
	rthornb_UrsulaBuild-27May1998:1.1.2.1
	rthornb_UrsulaBuild-21May1998:1.1.2.1
	rthornb_UrsulaBuild_01May1998:1.1.2.1
	Ursula_bp:1.1
	Ursula:1.1.0.2;
locks; strict;
comment	@# @;


4.2
date	2013.01.27.16.15.11;	author bavison;	state dead;
branches;
next	4.1;
commitid	wCHkhF97vZhdIRBw;

4.1
date	99.08.17.09.45.37;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.05.20.13.36.30;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.05.20.13.36.31;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  Rationalisation of Hdr:Machine
Detail:
  * Updated comments in 32, All, All32
  * New Machine for IOMD class
  * Phoebe support removed
  * In Hdr:Machine.Machine:
    + Moved the 4 common switches to the top (No32bitCode; No26bitCode;
      NoUnaligned; StrongARM_MSR_bug).
    + Bracketed non 'All' switches, mid term most of these are actually
      kernel private switches, but the HAL kernel still includes a lot of
      pre HAL code so making it tricky to obsolete them in one pass.
    + Bracketed non 'HAL' switches, pending deletion.
    + Bracketed non 'HAL' STB switches, pending deletion.
    + Deleted unused "NewClockChip", "CDVPoduleIRQs", "OldComboSupport",
       "DoPOSTwithoutPowerOn", "M_Phoebe".
    + Moved "HAL32"; "HAL26"; "ROMSizeOffset" to kernel header.
    + Added some comments.
Admin:
  Changes provided by Sprow

Version 2.24. Tagged as 'HdrSrc-2_24'
@
text
@; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    Definition of machines that can run RISC OS Ursula

        GBLS    Machine
Machine SETS    "Phoebe"

        GET     Hdr:Machine.Machine

        END
@


4.1
log
@Ursula branch merged. Might not work though.

Version 0.29. Tagged as 'HdrSrc-0_29'
@
text
@@


1.1
log
@file Phoebe was initially added on branch Ursula.
@
text
@d1 22
@


1.1.2.1
log
@Phoebe machine header file created
@
text
@a0 205
; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    Definition of machines that can run RISC OS Ursula

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************
;
; Date       Name          Description
; ----       ----          -----------
; 20-May-97  KBracey       Created from Hdr:Machine.Morris

; CPU type (processor model, excluding cache and memory management)
                GBLS    CPU_Type
CPU_Type        SETS    "ARM600"
                GBLS    GetCPU
GetCPU          SETS    ("GET Hdr:CPU." :CC: "$CPU_Type")

; IO type (non generic interrupt masks, some IO locations)
                GBLS    IO_Type
IO_Type         SETS    "IOMD"
                GBLS    GetIO
GetIO           SETS    ("GET Hdr:IO.IOMDL")

; Video controller - does the sound too
                GBLS    VIDC_Type
VIDC_Type       SETS    "VIDC20"
                GBLS    GetVIDC
GetVIDC         SETS    "GET Hdr:VIDC." :CC: VIDC_Type

; Memory controller, excluding memory management stuff. This
; one deals with memory speeds and DMA
                GBLS    MEMC_Type
MEMC_Type       SETS    "IOMD"
                GBLS    GetMEMC
GetMEMC         SETS    "GET Hdr:IO." :CC: MEMC_Type

                GBLS    MEMM_Type
MEMM_Type       SETS    "ARM600"
                GBLS    GetMEMM
GetMEMM         SETS    "GET Hdr:MEMM.ARM600"

; floppy controller
                GBLS    FDC_Type
FDC_Type        SETS    "FDC711"
                GBLS    GetFDC
GetFDC          SETS    "GET Hdr:FDC." :CC: FDC_Type

                GBLL    NewClockChip
NewClockChip    SETL    {TRUE}

                GBLS    Keyboard_Type
Keyboard_Type   SETS    "PC"

                GBLL    MorrisSupport
MorrisSupport   SETL    {TRUE}

                GBLL    StorkPowerSave
StorkPowerSave  SETL    {TRUE}

SystemROMspeed  * 156                           ;ROM speed in nS
BurstROMspeed   * 93                            ;ROM burst speed in nS. 0 = no burst mode

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;		Options for STB/NCD builds
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; General flag for STB/NCD-type products
		GBLL	STB
STB		SETL	{FALSE}

; Various STB options. Don't turn any on without first checking the sources!
; Support for battery manager hardware
		GBLL	BatManSupport
BatManSupport	SETL	{FALSE} :LAND: StorkPowerSave :LAND: STB

; Podule type of hardware in podule 0 address space
; number taken from Hdr:PoduleReg, or 0 if podule0 slot is a real slot.
		GBLA	FakePodule0
FakePodule0	SETA	0

; Support for network 'podule' cards
		GBLL	NetPodSupport
NetPodSupport	SETL	{TRUE} :LAND::LNOT: STB

; Support for extension ROMs in 2nd bank
		GBLL	ExtROMSupport
ExtROMSupport	SETL	{TRUE} :LAND: STB

; Support for OS images in 2nd ROM bank
		GBLL	ROMCardSupport
ROMCardSupport	SETL	{TRUE} :LAND: STB

; Support for being an OS image in 2nd ROM bank
		GBLL	CanLiveOnROMCard
CanLiveOnROMCard	SETL	ROMCardSupport :LAND: {TRUE} :LAND: STB

; 2nd ROM bank is 16bit wide
		GBLL	ExtROMis16bit
ExtROMis16bit	SETL	{FALSE} :LAND: STB

; E2ROM is supported at i2c addresses >= A8 in addition to normal CMOS RAM
		GBLL	E2ROMSupport
E2ROMSupport	SETL	{TRUE} :LAND: STB

; Support for 82C710 and 82C711 combo chips in addition to 665
		GBLL	OldComboSupport
OldComboSupport	SETL	{FALSE} :LAND: STB

; Whether combo chip should be configured for active high interrupts
		GBLL	ComboIRQsActiveHigh
ComboIRQsActiveHigh SETL {TRUE} :LAND: STB		; active high on NC

; Address of NTSC/not PAL flag, if on MPEG podule rather than CLINES, else 0

		GBLA	MPEGPoduleNTSCNotPALAddress
MPEGPoduleNTSCNotPALAddress SETA	0	; it's in CLINES

; Bit mask for above (0 if not applicable)

		GBLA	MPEGPoduleNTSCNotPALMask
MPEGPoduleNTSCNotPALMask	SETA	0	; it's in CLINES

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;		Allocation of bits in 8bit I/O port at IOMD_CLINES
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; Onboard podule 0 MPEG bit, 0 if bit not present
		GBLA	IOMD_C_MPEGfitted
IOMD_C_MPEGfitted	SETA	(1<<0)

; Front panel Red LED Write bit, or 0 if bit not present
		GBLA	IOMD_C_FrontPanelRedLED
IOMD_C_FrontPanelRedLED	SETA	(1<<1)

; Front panel Green LED Write bit, or 0 if bit not present
		GBLA	IOMD_C_FrontPanelGrnLED
IOMD_C_FrontPanelGrnLED	SETA	(1<<2)

; CD fitted bit. 0=fitted
		GBLA	IOMD_C_CDfitted
IOMD_C_CDfitted		SETA	(1<<4)

; Joystick type bits in IOMD, or 0 if bits not present
		GBLA	IOMD_C_JoystickDetectBits
IOMD_C_JoystickDetectBits	SETA	(2_11<<5)

; Watchdog Write bit.
		GBLA	IOMD_C_Watchdog
IOMD_C_Watchdog		SETA	(1<<7)


; MonitorTypeLatch, or 0 if latch not present
		GBLA	IOMD_C_MonitorType
IOMD_C_MonitorType	SETA	0

; ROM Card Vpp control, or 0 if bit not present
		GBLA	IOMD_C_ROMCardVpp
IOMD_C_ROMCardVpp	SETA	0

; TVMode Write bit, or 0 if bit not present
		GBLA	IOMD_C_TVMode
IOMD_C_TVMode		SETA	0

; General IO bit
		GBLA	IOMD_C_GenIO
IOMD_C_GenIO		SETA	0

; PAL/NTSC bit, or 0 if bit not present
		GBLA	IOMD_C_PALNTSCType
IOMD_C_PALNTSCType	SETA	0

; Interlace phase bit in IOMD, or 0 if bit not present
		GBLA	IOMD_C_PhaseDetectBit
IOMD_C_PhaseDetectBit	SETA	0

; Front panel button. 0=pressed
		GBLA	IOMD_C_FrontPanelButton
IOMD_C_FrontPanelButton	SETA	0

; Front panel LED Write bit. 1=red, 0=green
		GBLA	IOMD_C_FrontPanelLED
IOMD_C_FrontPanelLED	SETA	0

; Mask of all the readable bits
		GBLA	IOMD_C_ReadMask
IOMD_C_ReadMask	SETA	(IOMD_C_MPEGfitted :OR: IOMD_C_MonitorType :OR: IOMD_C_GenIO :OR: IOMD_C_CDfitted :OR: IOMD_C_PALNTSCType :OR: IOMD_C_PhaseDetectBit :OR: IOMD_C_JoystickDetectBits :OR: IOMD_C_FrontPanelButton)

        OPT     OldOpt
        END
@
