head	1.22;
access;
symbols
	HdrSrc-2_77:1.22
	HdrSrc-2_76:1.22
	HdrSrc-2_75:1.22
	HdrSrc-2_74:1.22
	HdrSrc-2_73:1.22
	HdrSrc-2_72:1.21
	HdrSrc-2_71:1.21
	HdrSrc-2_70:1.21
	HdrSrc-2_69:1.21
	HdrSrc-2_68:1.21
	HdrSrc-2_67:1.21
	HdrSrc-2_66:1.21
	HdrSrc-2_65:1.21
	HdrSrc-2_64:1.21
	HdrSrc-2_63:1.20
	HdrSrc-2_62:1.19
	HdrSrc-2_61:1.19
	HdrSrc-2_60:1.19
	HdrSrc-2_59:1.19
	HdrSrc-2_58:1.19
	HdrSrc-2_57:1.19
	HdrSrc-2_56:1.19
	HdrSrc-2_55:1.19
	HdrSrc-2_54:1.18
	HdrSrc-2_53:1.18
	HdrSrc-2_52:1.18
	HdrSrc-2_51:1.18
	HdrSrc-2_50:1.18
	HdrSrc-2_49:1.17
	HdrSrc-2_48:1.17
	HdrSrc-2_47:1.17
	HdrSrc-2_46-4_247_2_1:1.17.2.1
	XCompile:1.17.0.2
	XCompile_bp:1.17
	HdrSrc-2_46:1.17
	HdrSrc-2_45:1.17
	HdrSrc-2_44:1.17
	HdrSrc-2_43:1.17
	HdrSrc-2_42:1.17
	HdrSrc-2_41:1.17
	HdrSrc-2_40-1:1.16
	HdrSrc-2_40:1.17
	HdrSrc-2_39:1.17
	HdrSrc-2_38:1.17
	HdrSrc-2_37:1.17
	HdrSrc-2_36:1.16
	HdrSrc-2_35:1.16
	HdrSrc-2_34:1.16
	HdrSrc-2_33:1.16
	HdrSrc-2_32:1.16
	HdrSrc-2_31:1.16
	HdrSrc-2_30:1.16
	HdrSrc-2_29:1.16
	HdrSrc-2_28:1.16
	HdrSrc-2_27:1.16
	HdrSrc-2_26:1.16
	HdrSrc-2_25:1.15
	HdrSrc-2_24:1.15
	HdrSrc-2_23:1.14
	HdrSrc-2_22:1.14
	HdrSrc-2_21:1.14
	HdrSrc-2_20:1.13
	HdrSrc-2_19:1.13
	HdrSrc-2_18:1.13
	HdrSrc-2_17:1.13
	HdrSrc-2_16:1.13
	HdrSrc-2_15:1.13
	HdrSrc-2_14:1.13
	HdrSrc-2_13:1.12
	HdrSrc-2_12:1.12
	HdrSrc-2_11:1.12
	HdrSrc-2_10:1.12
	HdrSrc-2_09:1.11
	HdrSrc-2_08:1.11
	HdrSrc-2_07:1.11
	HdrSrc-2_06:1.11
	HdrSrc-2_05:1.11
	HdrSrc-2_04:1.11
	HdrSrc-2_03:1.11
	HdrSrc-2_02:1.11
	HdrSrc-2_01:1.11
	HdrSrc-2_00:1.11
	HdrSrc-1_99:1.11
	HdrSrc-1_98:1.11
	HdrSrc-1_97:1.11
	HdrSrc-1_96:1.11
	HdrSrc-1_95:1.10
	HdrSrc-1_94:1.10
	HdrSrc-1_93:1.9
	HdrSrc-1_92:1.9
	HdrSrc-1_91:1.9
	HdrSrc-1_90:1.9
	HdrSrc-1_89:1.9
	HdrSrc-1_88:1.9
	HdrSrc-1_87:1.9
	HdrSrc-1_86:1.8
	HdrSrc-1_85:1.8
	HdrSrc-1_84:1.8
	HdrSrc-1_83:1.8
	HdrSrc-1_82:1.7
	HdrSrc-1_81:1.6
	HdrSrc-1_80:1.6
	HdrSrc-1_79:1.6
	HdrSrc-1_78:1.6
	HdrSrc-1_77:1.6
	HdrSrc-1_76:1.5
	Cortex_merge:1.2.2.5
	HdrSrc-1_62-4_162_2_15:1.2.2.5
	HdrSrc-1_75:1.4
	HdrSrc-1_62-4_162_2_14:1.2.2.5
	HdrSrc-1_74:1.4
	HdrSrc-1_62-4_162_2_13:1.2.2.4
	HdrSrc-1_62-4_162_2_12:1.2.2.3
	HdrSrc-1_73:1.4
	HdrSrc-1_72:1.4
	HdrSrc-1_62-4_162_2_11:1.2.2.3
	HdrSrc-1_62-4_162_2_10:1.2.2.2
	HdrSrc-1_71:1.4
	HdrSrc-1_70:1.4
	HdrSrc-1_69:1.4
	Cortex_bp:1.3
	HdrSrc-1_62-4_162_2_9:1.2.2.2
	HdrSrc-1_62-4_162_2_8:1.2.2.2
	HdrSrc-1_68:1.3
	HdrSrc-1_62-4_162_2_7:1.2.2.1
	HdrSrc-1_62-4_162_2_6:1.2.2.1
	HdrSrc-1_62-4_162_2_5:1.2.2.1
	HdrSrc-1_62-4_162_2_4:1.2
	HdrSrc-1_67:1.2
	HdrSrc-1_66:1.2
	HdrSrc-1_62-4_162_2_3:1.2
	HdrSrc-1_65:1.2
	HdrSrc-1_64:1.2
	HdrSrc-1_63:1.2
	HdrSrc-1_62-4_162_2_2:1.2
	HdrSrc-1_62-4_162_2_1:1.2
	Cortex:1.2.0.2
	HdrSrc-1_62:1.2
	HdrSrc-1_61:1.1
	HdrSrc-1_60:1.1
	HdrSrc-1_59:1.1
	HdrSrc-1_58:1.1
	HdrSrc-1_57:1.1
	HdrSrc-1_56:1.1
	HdrSrc-1_55:1.1
	HdrSrc-1_54:1.1
	HdrSrc-1_53:1.1
	HdrSrc-1_52:1.1
	HdrSrc-1_51:1.1
	HdrSrc-1_50:1.1
	HdrSrc-1_49:1.1
	HdrSrc-1_48:1.1
	HdrSrc-1_47:1.1
	RO_5_07:1.1
	HdrSrc-1_46:1.1
	HdrSrc-1_45:1.1
	HdrSrc-1_44:1.1
	HdrSrc-1_43:1.1
	HdrSrc-1_42:1.1
	HdrSrc-1_41:1.1
	HdrSrc-1_40:1.1
	HdrSrc-1_39:1.1
	HdrSrc-1_38:1.1
	HdrSrc-1_37:1.1
	HdrSrc-1_36:1.1
	HdrSrc-1_35:1.1
	HdrSrc-1_34:1.1
	HdrSrc-1_33:1.1
	HdrSrc-1_32:1.1
	HdrSrc-1_31:1.1
	HdrSrc-1_30:1.1
	HdrSrc-1_29:1.1
	HdrSrc-1_28:1.1
	HdrSrc-1_27:1.1
	HdrSrc-1_26:1.1
	HdrSrc-1_25:1.1
	HdrSrc-1_24:1.1
	HdrSrc-1_23:1.1
	HdrSrc-1_22:1.1
	HdrSrc-1_21:1.1
	HdrSrc-1_20:1.1
	HdrSrc-1_19:1.1
	HdrSrc-1_18:1.1
	HdrSrc-1_17:1.1
	HdrSrc-1_16:1.1
	HdrSrc-1_15:1.1
	HdrSrc-1_14:1.1
	HdrSrc-1_13:1.1
	HdrSrc-1_12:1.1
	HdrSrc-1_11:1.1
	HdrSrc-0_71-4_72_2_2:1.1
	HdrSrc-1_10:1.1
	HdrSrc-1_09:1.1
	HdrSrc-1_08:1.1
	HdrSrc-1_07:1.1
	HdrSrc-1_06:1.1
	HdrSrc-1_05:1.1
	dellis_autobuild_BaseSW:1.1
	HdrSrc-1_04:1.1
	HdrSrc-1_03:1.1
	HdrSrc-1_02:1.1
	HdrSrc-1_00:1.1
	HdrSrc-0_99:1.1
	HdrSrc-0_71-4_72_2_1:1.1
	HdrSrc-0_98:1.1
	HdrSrc-0_97:1.1
	HdrSrc-0_95:1.1
	HdrSrc-0_94:1.1
	HdrSrc-0_93:1.1
	HdrSrc-0_92:1.1
	HdrSrc-0_91:1.1
	HdrSrc-0_90:1.1
	HdrSrc-0_89:1.1
	HdrSrc-0_88:1.1
	HdrSrc-0_87:1.1
	HdrSrc-0_86:1.1
	HdrSrc-0_85:1.1
	HdrSrc-0_84:1.1
	HdrSrc-0_83:1.1
	HdrSrc-0_82:1.1
	HdrSrc-0_81:1.1
	HdrSrc-0_80:1.1
	HdrSrc-0_79:1.1
	HdrSrc-0_78:1.1
	HdrSrc-0_77:1.1
	sbrodie_sedwards_16Mar2000:1.1
	HdrSrc-0_76:1.1
	HdrSrc-0_75:1.1
	HdrSrc-0_74:1.1
	HdrSrc-0_73:1.1
	HdrSrc-0_72:1.1
	HdrSrc-0_71:1.1
	HdrSrc-0_70:1.1
	HdrSrc-0_69:1.1
	HdrSrc-0_68:1.1
	HdrSrc-0_67:1.1
	HdrSrc-0_66:1.1
	HdrSrc-0_65:1.1
	HdrSrc-0_64:1.1
	kbracey_32bit_merge:1.1
	HdrSrc-0_63:1.1
	HdrSrc-0_57-4_58_2_9:1.1
	HdrSrc-0_57-4_58_2_8:1.1
	HdrSrc-0_57-4_58_2_7:1.1
	HdrSrc-0_57-4_58_2_6:1.1
	HdrSrc-0_57-4_58_2_5:1.1
	HdrSrc-0_57-4_58_2_4:1.1
	HdrSrc-0_57-4_58_2_3:1.1
	HdrSrc-0_62:1.1
	HdrSrc-0_61:1.1
	HdrSrc-0_60:1.1
	HdrSrc-0_57-4_58_2_2:1.1
	HdrSrc-0_59:1.1
	HdrSrc-0_58:1.1
	HdrSrc-0_57-4_58_2_1:1.1
	kbracey_32bit:1.1
	HdrSrc-0_57:1.1
	HdrSrc-0_56:1.1
	HdrSrc-0_55:1.1
	HdrSrc-0_54:1.1
	HdrSrc-0_53:1.1
	HdrSrc-0_52:1.1
	HdrSrc-0_51:1.1
	HdrSrc-0_50:1.1
	HdrSrc-0_49:1.1
	HdrSrc-0_48:1.1
	HdrSrc-0_47:1.1
	HdrSrc-0_46:1.1
	HdrSrc-0_45:1.1
	HdrSrc-0_44:1.1
	HdrSrc-0_43:1.1
	HdrSrc-0_42:1.1
	dcotton_autobuild_BaseSW:1.1
	HdrSrc-0_41:1.1
	HdrSrc-0_39:1.1
	HdrSrc-0_38:1.1
	HdrSrc-0_37:1.1
	HdrSrc-0_36:1.1
	HdrSrc-0_35:1.1
	HdrSrc-0_34:1.1
	HdrSrc-0_33:1.1
	HdrSrc-0_32:1.1
	HdrSrc-0_31:1.1
	HdrSrc-0_30:1.1
	HdrSrc-0_29:1.1
	HdrSrc-0_28:1.1
	HdrSrc-0_27:1.1
	HdrSrc-0_26:1.1
	HdrSrc-0_25:1.1
	HdrSrc-0_24:1.1
	HdrSrc-0_23:1.1
	HdrSrc-0_22:1.1
	HdrSrc-0_21:1.1
	HdrSrc-0_20:1.1
	HdrSrc-0_19:1.1
	nturton_HdrSrc-0_11:1.1
	HdrSrc-0_18:1.1
	HdrSrc-0_17:1.1
	HdrSrc-0_16:1.1
	HdrSrc-0_15:1.1
	HdrSrc-0_14:1.1
	HdrSrc-0_13:1.1
	HdrSrc-0_12:1.1
	HdrSrc-0_11:1.1
	HdrSrc-0_10:1.1
	HdrSrc-0_09:1.1
	HdrSrc-0_08:1.1
	HdrSrc-0_07:1.1
	HdrSrc-0_06:1.1
	HdrSrc-0_05:1.1
	HdrSrc-0_04:1.1
	HdrSrc-0_03:1.1
	HdrSrc-0_02:1.1
	HdrSrc-0_01:1.1
	nicke_HdrSrc_21_9_98:1.1
	Spin_merge:1.1
	nicke_HdrSrc_21_8_98:1.1
	Spinner_B20_2:1.1
	Spinner_19_3:1.1
	Spinner_B18:1.1
	Spinner_B17:1.1
	Spinner_B15:1.1
	Spinner_B14:1.1
	Spinner_B13:1.1
	Spinner_B12:1.1
	Spinner_B10:1.1
	Spinner_B7:1.1;
locks; strict;
comment	@# @;


1.22
date	2018.01.26.00.37.28;	author jlee;	state Exp;
branches;
next	1.21;
commitid	8RzZe9Xa4RXuRjoA;

1.21
date	2016.06.05.13.33.58;	author srevill;	state Exp;
branches;
next	1.20;
commitid	TqNyZXGAvmeCrh9z;

1.20
date	2016.05.28.18.30.11;	author jlee;	state Exp;
branches;
next	1.19;
commitid	DbPnp2msZ7Galh8z;

1.19
date	2015.11.08.02.42.37;	author bavison;	state Exp;
branches;
next	1.18;
commitid	aGqeeBPfobqCAeIy;

1.18
date	2015.02.02.11.33.47;	author bavison;	state Exp;
branches;
next	1.17;
commitid	9PbSXB0QlH2Uuq8y;

1.17
date	2013.11.29.15.14.15;	author bavison;	state Exp;
branches
	1.17.2.1;
next	1.16;
commitid	X2ywpgF0eWOtxbfx;

1.16
date	2013.03.23.20.11.18;	author bavison;	state Exp;
branches;
next	1.15;
commitid	uzJEZhKdPyLAfXIw;

1.15
date	2013.01.27.16.15.11;	author bavison;	state Exp;
branches;
next	1.14;
commitid	wCHkhF97vZhdIRBw;

1.14
date	2012.12.05.02.05.52;	author jlee;	state Exp;
branches;
next	1.13;
commitid	Bu4joeXOVXtuIYuw;

1.13
date	2012.08.28.23.49.16;	author jlee;	state Exp;
branches;
next	1.12;
commitid	op9CEMcXIpeW6niw;

1.12
date	2012.07.15.10.56.46;	author bavison;	state Exp;
branches;
next	1.11;
commitid	MpPSVQsLknBBfEcw;

1.11
date	2012.02.16.22.34.22;	author jlee;	state Exp;
branches;
next	1.10;
commitid	fpxZyNEbOuZOVqTv;

1.10
date	2012.01.11.00.50.39;	author srevill;	state Exp;
branches;
next	1.9;
commitid	7FECLin9asalSGOv;

1.9
date	2011.09.12.18.28.53;	author bavison;	state Exp;
branches;
next	1.8;
commitid	CQMkxUsfjT6xCezv;

1.8
date	2011.06.04.16.01.00;	author jlee;	state Exp;
branches;
next	1.7;
commitid	p4WXNZCREr251nmv;

1.7
date	2011.06.03.22.34.57;	author bavison;	state Exp;
branches;
next	1.6;
commitid	1MRpLHHoRzAcehmv;

1.6
date	2011.01.16.04.04.01;	author jlee;	state Exp;
branches;
next	1.5;

1.5
date	2011.01.15.22.30.02;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.14.01.33.16;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.17.01.11.59;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.22.03.23.35;	author srevill;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2008.03.21.00.01.21;	author bavison;	state Exp;
branches;
next	;

1.17.2.1
date	2014.09.24.20.51.22;	author bavison;	state Exp;
branches;
next	;
commitid	FLu4L8VxkYPcNDRx;

1.2.2.1
date	2009.05.08.20.19.00;	author bavison;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2009.05.17.01.14.55;	author bavison;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2009.07.17.00.23.22;	author jlee;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2009.11.07.00.02.46;	author jlee;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2010.11.20.17.09.47;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Fix non-functional teletext on some platforms, and standardise on HiResTTX across the board
Detail:
  * Neither of our native Cortex-A9 machines natively support 16 colour modes, so HiResTTX must be used since the kernel only supports >16 colour TTX when that option is on.
  * Our Cortex-A8 machines can do 16 colours, but we might as well switch them to HiResTTX as well since they've got plenty of horsepower to render it at that resolution.
  * That just leaves IOMD as the odd one out using low-res TTX. If hardware scrolling or VDU 23,18,1 is used then performance of hi-res TTX doesn't seem to be that much worse than low-res, so for consistency it's probably best to take the performance hit and run all platforms with HiResTTX.
  hdr/Machine/Machine - Updated as above. Also use TTX256 for Cortex-A9 so that the "native" mode 7 will be 256 colour instaed of 16 colour.
Admin:
  Tested on Pandaboard, iMX6, BB-xM, StrongARM RiscPC
  Fixes lack of teletext on Pandaboard + iMX6


Version 2.73. Tagged as 'HdrSrc-2_73'
@
text
@; Copyright 2008 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    Definition of the machine

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

 [ :LNOT: :DEF: Included_Hdr_Machine_Machine
        GBLL    Included_Hdr_Machine_Machine
Included_Hdr_Machine_Machine SETL {TRUE}

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************
;
; Date       Name          Description
; ----       ----          -----------
; 21-Apr-97  SMC           Now only one header file.

; Define Machine variable and set it by including appropriate header.
;

; Define boolean variables for each machine to avoid possibility of typos in
; strings.  NEVER use these outside this header file.  Use feature tests
; instead.
                GBLL    M_Falcon     ; } 
                GBLL    M_Morris     ; } 
                GBLL    M_Omega      ; } Support being
                GBLL    M_Peregrine  ; } phased out
                GBLL    M_STB3       ; } 
                GBLL    M_STB400     ; }
                GBLL    M_Lazarus    ; }
M_Falcon        SETL    Machine="Falcon"
M_Lazarus       SETL    Machine="Lazarus"
M_Morris        SETL    Machine="Morris"
M_Omega         SETL    Machine="Omega"
M_Peregrine     SETL    Machine="Peregrine"
M_STB3          SETL    Machine="STB3"
M_STB400        SETL    Machine="STB400"
                GBLL    M_26
                GBLL    M_32
                GBLL    M_All
                GBLL    M_All32
                GBLL    M_Archimedes
                GBLL    M_ARM11ZF
                GBLL    M_RPi
                GBLL    M_CortexA8
                GBLL    M_CortexA9
                GBLL    M_CortexA7
                GBLL    M_IOMD
                GBLL    M_STB5
                GBLL    M_Tungsten
M_26            SETL    Machine="26"
M_32            SETL    Machine="32"
M_All           SETL    Machine="All"
M_All32         SETL    Machine="All32"
M_Archimedes    SETL    Machine="Archimedes"
M_ARM11ZF       SETL    Machine="ARM11ZF"
M_RPi           SETL    Machine="RPi"
M_CortexA8      SETL    Machine="CortexA8"
M_CortexA9      SETL    Machine="CortexA9"
M_CortexA7      SETL    Machine="CortexA7"
M_IOMD          SETL    Machine="IOMD"
M_STB5          SETL    Machine="STB5"
M_Tungsten      SETL    Machine="Tungsten"
 [ Machine="CortexA15" :LOR: Machine="CortexA17"
        !       1, "You probably wanted to use Machine=CortexA7"
 ]

; Are we only supporting 26bit processor modes?
; If true, we mustn't rely on MSR, MRS etc, and we should be
; RISC OS 3.1 compatible.
                GBLL    No32bitCode
No32bitCode     SETL    M_26 :LOR: M_Archimedes :LOR: M_Morris :LOR: M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400

; Are we only supporting 32bit processor modes?
                GBLL    No26bitCode
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9 :LOR: M_CortexA7

        ; If this makes your head hurt, the other way of looking at it is
        ;   26/32 neutral => No32bitCode FALSE No26bitCode FALSE
        ;   32 only       => No32bitCode FALSE No26bitCode TRUE
        ;   26 only       => No32bitCode TRUE  No26bitCode FALSE
        ASSERT  :LNOT: (No26bitCode :LAND: No32bitCode)

; Override optimisation settings to avoid using unaligned LDR(H)/STR(H) on ARMv6+
; This switch should only be enabled for debugging purposes
                GBLL    NoUnaligned
NoUnaligned     SETL    M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9 :LOR: M_CortexA7

; Do we need to deal with the StrongARM conditional MSR CPSR_c bug?
                GBLL    StrongARM_MSR_bug
StrongARM_MSR_bug SETL  M_26 :LOR: M_All :LOR: M_All32 :LOR: M_IOMD

     [ :LNOT: M_All :LAND: :LNOT: M_All32 :LAND: :LNOT: M_26

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;               Switches that should not be used by machine-independent code
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; CPU type (processor model, excluding cache and memory management)
                GBLS    CPU_Type
CPU_Type        SETS    "ARM600"
                GBLS    GetCPU
GetCPU          SETS    ("GET Hdr:CPU." :CC: "$CPU_Type")

; IO type (non generic interrupt masks, some IO locations)
                GBLS    IO_Type
IO_Type         SETS    "IOMD"
                GBLS    GetIO
GetIO           SETS    ("GET Hdr:IO." :CC: "$IO_Type")

; Video controller - does the sound too
                GBLS    VIDC_Type
VIDC_Type       SETS    "VIDC20"
                GBLS    GetVIDC
GetVIDC         SETS    "GET Hdr:VIDC." :CC: VIDC_Type

; Memory controller, excluding memory management stuff. This
; one deals with memory speeds and DMA
                GBLS    MEMC_Type
MEMC_Type       SETS    "IOMD"
                GBLS    GetMEMC
GetMEMC         SETS    "GET Hdr:IO." :CC: MEMC_Type

                GBLS    MEMM_Type
        [ M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9 :LOR: M_CortexA7
MEMM_Type       SETS    "VMSAv6"
        |
MEMM_Type       SETS    "ARM600"
        ]
                GBLS    GetMEMM
GetMEMM         SETS    "GET Hdr:MEMM." :CC: MEMM_Type

; Floppy controller
                GBLS    FDC_Type
FDC_Type        SETS    "FDC711"
                GBLS    GetFDC
GetFDC          SETS    "GET Hdr:FDC." :CC: FDC_Type

; Keyboard style
                GBLS    Keyboard_Type
        [ M_Lazarus
Keyboard_Type   SETS    "RCMM"
        |
Keyboard_Type   SETS    "PC"
        ]

; VIDC Clock sources
                GBLS    VIDCClockSource
        [ M_Falcon :LOR: M_Morris :LOR: M_IOMD :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_32
VIDCClockSource SETS    "VCO"
        |
         [ M_STB400
VIDCClockSource SETS    "HCLK"
         |
          [ M_Lazarus
VIDCClockSource SETS    "RCLK"
          |
VIDCClockSource SETS    "VCLK"
          ]
         ]
        ]

; VCO not fitted, so don't attempt to use VCLK.
                GBLL    DontUseVCO
DontUseVCO      SETL    M_Lazarus :LOR: M_STB400

; Are we using a HAL?
                GBLL    HAL
HAL             SETL    M_32 :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9 :LOR: M_CortexA7

; General flag for STB/NCD-type products
                GBLL    STB
STB             SETL    M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_Lazarus

; Support for extension ROMs in 2nd bank
                GBLL    ExtROMSupport
ExtROMSupport   SETL    M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: ((M_Omega :LOR: M_Lazarus :LOR: M_STB400) :LAND: {FALSE})

; Support for OS images in 2nd ROM bank
                GBLL    ROMCardSupport
ROMCardSupport  SETL    M_Omega

; 2nd ROM bank is 16bit wide
                GBLL    ExtROMis16bit
ExtROMis16bit   SETL    M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400

; Maximum clock rate (in kHz) for the I2C bus? Limited by the slowest device on the bus.
                GBLA    MaxI2Cspeed
 [ M_Lazarus
MaxI2Cspeed     SETA    1000
 |
MaxI2Cspeed     SETA    100
 ]

; E2ROM is supported at i2c addresses >= A8 in addition to normal CMOS RAM
; Note that this also controls HAL NVRAM support, and RTCSupport.
                GBLL    E2ROMSupport
E2ROMSupport    SETL    M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9 :LOR: M_CortexA7

; Support for network 'podule' cards
                GBLL    NetPodSupport
NetPodSupport   SETL    M_IOMD :LOR: M_Morris

; Number of podules to look at (can be zero)
                GBLA    NumberOfPodules
 [ M_STB400 :LOR: M_Lazarus
NumberOfPodules SETA    1
 |
   [ M_STB3 :LOR: M_Tungsten
NumberOfPodules SETA    4
   |
     [ M_Morris :LOR: M_IOMD
NumberOfPodules SETA    8
     |
NumberOfPodules SETA    0
     ]
   ]
 ]

; Whether combo chip should be configured for active high interrupts
                GBLL    ComboIRQsActiveHigh
ComboIRQsActiveHigh SETL M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB400 :LOR: M_Lazarus

; Some IOMD interrupts have been reassigned, to cope with the combo chip
; now having active-high interrupts.
; Printer, serial, expansion card 0 move; floppy, IDE, NIC go; gain 2 MPEG interrupts
                GBLL    ReassignedIOMDInterrupts
ReassignedIOMDInterrupts SETL ComboIRQsActiveHigh :LAND: :LNOT: NetPodSupport :LAND: M_STB400

; Power saving model from the Stork laptop
                GBLL    StorkPowerSave
StorkPowerSave  SETL    {TRUE}

; Support for battery manager hardware
                GBLL    BatManSupport
BatManSupport   SETL    {FALSE} :LAND: StorkPowerSave

; Support for 7500FE
                GBLL    MorrisSupport
MorrisSupport   SETL    {TRUE}

; Less blocky teletext font + support for any TTX mode colour depth >= 4bpp
                GBLL    HiResTTX
HiResTTX        SETL    {TRUE}

; Default teletext mode is 8bpp (when HiResTTX = {TRUE})
                GBLL    TTX256
TTX256          SETL    M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA9

; Safe area when doing TV modes
; Expressed as percentage of screen not to use - left, bottom, right, top
                GBLS    PALSafeArea
                GBLS    NTSCSafeArea
  [ M_Lazarus
PALSafeArea     SETS    "6, 6, 6, 6"
NTSCSafeArea    SETS    "3, 6, 3, 6" ; This is what the original Model 1 had
  |
    [ M_STB400
PALSafeArea     SETS    "8, 6, 8, 6"
    |
PALSafeArea     SETS    "8, 8, 8, 8"
    ]
NTSCSafeArea    SETS    "5, 6, 5, 6"
  ]

; Only 13.5MHz pixel clock available for TV monitor types
                GBLL    Only13500kHzTV
Only13500kHzTV  SETL    M_STB5

; Hardware interlace available from HAL
                GBLL    HWInterlace
HWInterlace     SETL    M_STB5

; Number of columns to use for default PAL mode - some systems
; don't use the standard 768.
                GBLA    PAL_Columns
 [ M_Lazarus
PAL_Columns     SETA    800
 |
  [ M_STB5 :LOR: M_STB400 :LOR: M_STB3
PAL_Columns     SETA    720
  |
PAL_Columns     SETA    768
  ]
 ]

         [ :LNOT: HAL

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;               Switches that are pre-HAL & due for retirement
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


; Define the number of cycles required to access the ROMs.  These only work in 7500/7500FE based systems at the moment.
                        GBLS    ROMSpeedNSTicks
                        GBLS    ROMSpeedBurstTicks
 [ M_STB3 :LOR: M_Lazarus
ROMSpeedNSTicks         SETS    "4"
ROMSpeedBurstTicks      SETS    "0"
; Ultimately STB400 should be 7+4 (109ns+62ns). For development, 10+8 (156ns+125ns)
 |
ROMSpeedNSTicks         SETS    "5"
ROMSpeedBurstTicks      SETS    "4"
 ]

; ROM speed is normal, not divide by 2
                GBLL    ROMSpeedNormal
ROMSpeedNormal  SETL    M_Falcon :LOR: M_Morris

                        GBLL    FECPUSpeedNormal
FECPUSpeedNormal        SETL    M_STB3 :LOR: M_STB400 :LOR: M_Lazarus

                        GBLL    FEIOSpeedHalf
FEIOSpeedHalf           SETL    M_Lazarus

         ] ; :LNOT: HAL
        
         [ STB :LAND: :LNOT: HAL

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;               Switches that are pre-HAL set top box & due for retirement
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; The combo chip is clocked at 14.318MHz, instead of 24MHz
                GBLL    ComboClock14MHz
ComboClock14MHz SETL    {FALSE}

; TV modes are produced by Chrontel device
                GBLL    ChrontelSupport
ChrontelSupport SETL    M_32

; Modems as found in STB Roadsters, NC (Model 1) and NC
        [ M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_Omega :LOR: M_Lazarus
                GBLA    Modem_DefaultPodule
                GBLA    Modem_RegisterSetOffset         ; offset within EASI
                GBLA    Modem_InterruptStatusOffset     ; offset within EASI
         [ M_Falcon :LOR: M_Peregrine :LOR: M_STB3
Modem_DefaultPodule     SETA    1       ; default podule is 1 on an STB
         |
Modem_DefaultPodule     SETA    0       ; have real podules on the rest
         ]
         [ M_Lazarus
Modem_RegisterSetOffset         SETA    &800000         ; Kerner modem card
Modem_InterruptStatusOffset     SETA    -1              ; no status...
         |
         [ M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_Omega
Modem_RegisterSetOffset         SETA    &803000         ; CME modem card
Modem_InterruptStatusOffset     SETA    &802000         ; CME modem card
         |
Modem_RegisterSetOffset         SETA    &000be0         ; NC modem
Modem_InterruptStatusOffset     SETA    &000bfc         ; NC modem
         ]
         ]
        ]

; Configurable Standby key
                GBLA    SpecialKeyStandby
   [ M_Lazarus :LOR: M_32
SpecialKeyStandby SETA  &D7
   |
    [ M_STB5 :LOR: M_STB400
SpecialKeyStandby SETA  &D1
    |
SpecialKeyStandby SETA  -1
    ]
   ]

; Podule type of hardware in podule 0 address space
; number taken from Hdr:PoduleReg, or 0 if podule0 slot is a real slot.
                GBLA    FakePodule0
        [ M_Falcon
FakePodule0     SETA    &10E
        |
         [ M_Peregrine :LOR: M_STB3
FakePodule0     SETA    &121
         |
FakePodule0     SETA    0
         ]
        ]

; Address of NTSC/not PAL flag, if on MPEG podule rather than CLINES, else 0
                GBLA    MPEGPoduleNTSCNotPALAddress
                GBLA    MPEGPoduleNTSCNotPALMask
        [ M_Falcon
MPEGPoduleNTSCNotPALAddress SETA    &88200000
MPEGPoduleNTSCNotPALMask    SETA    1 :SHL: 7
        |
         [ M_Peregrine
MPEGPoduleNTSCNotPALAddress SETA    &88400000
MPEGPoduleNTSCNotPALMask    SETA    1 :SHL: 5
         |
MPEGPoduleNTSCNotPALAddress SETA    0
MPEGPoduleNTSCNotPALMask    SETA    0
         ]
        ]

; Name of the the header file which defines the MPEG podule
                GBLS    MPEGPoduleType
        [ M_Falcon
MPEGPoduleType  SETS    "MPEGCard"
        |
          [ M_Peregrine
MPEGPoduleType  SETS    "MPEG2Card"
          |
            [ M_STB3
MPEGPoduleType  SETS    "MPEG2bCard"
            |
              [ M_STB400
MPEGPoduleType  SETS    "MPEG2cCard"
              |
MPEGPoduleType  SETS    "Unknown..."    ; Unknown MPEG Podule type
              ]
            ]
          ]
        ]

; Onboard podule 0 MPEG bit, 0 if bit not present
                GBLA    IOMD_C_MPEGfitted
        [ M_Falcon :LOR: M_Morris :LOR: M_Peregrine :LOR: M_STB3
IOMD_C_MPEGfitted       SETA    (1<<0)
        |
IOMD_C_MPEGfitted       SETA    0
        ]

; MonitorTypeLatch, or 0 if latch not present
                GBLA    IOMD_C_MonitorType
        [ M_Omega
IOMD_C_MonitorType      SETA    (1<<0)
        |
IOMD_C_MonitorType      SETA    0
        ]

; Front panel Red LED Write bit, or 0 if bit not present
                GBLA    IOMD_C_FrontPanelRedLED
        [ M_Falcon :LOR: M_Morris :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
IOMD_C_FrontPanelRedLED SETA    (1<<1)
        |
IOMD_C_FrontPanelRedLED SETA    0
        ]

; Video power down for Chrontel, or 0 if bit not present
                GBLA    IOMD_C_VideoPowerDown
IOMD_C_VideoPowerDown   SETA    0

; ROM Card Vpp control, or 0 if bit not present
                GBLA    IOMD_C_ROMCardVpp
        [ M_Omega
IOMD_C_ROMCardVpp       SETA    (1<<1)
        |
IOMD_C_ROMCardVpp       SETA    0
        ]

; EEPROM protection control, or 0 if bit not present
                GBLA    IOMD_C_EEPROMProtect
        [ M_Lazarus
IOMD_C_EEPROMProtect    SETA    (1<<1)
        |
IOMD_C_EEPROMProtect    SETA    0
        ]

; Front panel Green LED Write bit, or 0 if bit not present
                GBLA    IOMD_C_FrontPanelGrnLED
        [ M_Falcon :LOR: M_Morris :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
IOMD_C_FrontPanelGrnLED SETA    (1<<2)
        |
IOMD_C_FrontPanelGrnLED SETA    0
        ]

; TVMode Write bit, or 0 if bit not present
                GBLA    IOMD_C_TVMode
        [ M_Omega
IOMD_C_TVMode           SETA    (1<<2)
        |
IOMD_C_TVMode           SETA    0
        ]

; Right LED bit, or 0 if bit not present
                GBLA    IOMD_C_FrontPanelRightLED
        [ M_Lazarus
IOMD_C_FrontPanelRightLED       SETA    (1<<3)
        |
IOMD_C_FrontPanelRightLED       SETA    0
        ]

; General IO bit
                GBLA    IOMD_C_GenIO
        [ M_Omega
IOMD_C_GenIO            SETA    (1<<3)
        |
IOMD_C_GenIO            SETA    0
        ]

; SCART Control bit 0
                GBLA    IOMD_C_MPEG_CTRL_0
        [ M_STB3 :LOR: M_STB400
IOMD_C_MPEG_CTRL_0      SETA    (1<<3)
        |
IOMD_C_MPEG_CTRL_0      SETA    0
        ]

; CD fitted bit. 0=fitted, or 0 if bit not present
                GBLA    IOMD_C_CDfitted
        [ M_Falcon :LOR: M_Morris :LOR: M_Peregrine
IOMD_C_CDfitted         SETA    (1<<4)
        |
IOMD_C_CDfitted         SETA    0
        ]

; PAL/NTSC bit, or 0 if bit not present
                GBLA    IOMD_C_PALNTSCType
        [ M_Omega :LOR: M_STB3 :LOR: M_STB400 :LOR: M_Lazarus
IOMD_C_PALNTSCType      SETA    (1<<4)
        |
IOMD_C_PALNTSCType      SETA    0
        ]

; Joystick type bits in IOMD, or 0 if bits not present
                GBLA    IOMD_C_JoystickDetectBits
        [ M_Falcon :LOR: M_Morris :LOR: M_Peregrine
IOMD_C_JoystickDetectBits       SETA    (2_11<<5)
        |
IOMD_C_JoystickDetectBits       SETA    0
        ]

; Interlace phase bit in IOMD, or 0 if bit not present
                GBLA    IOMD_C_PhaseDetectBit
        [ M_Omega :LOR: M_STB3 :LOR: M_STB400
IOMD_C_PhaseDetectBit   SETA    (1<<5)
        |
IOMD_C_PhaseDetectBit   SETA    0
        ]

; Front panel button (may not actually be on front panel), 0=pressed
                GBLA    IOMD_C_FrontPanelButton
        [ M_Omega :LOR: M_Lazarus
IOMD_C_FrontPanelButton SETA    (1<<6)
        |
IOMD_C_FrontPanelButton SETA    0
        ]

; SCART Control bit 1
                GBLA    IOMD_C_MPEG_CTRL_1
        [ M_STB3 :LOR: M_STB400
IOMD_C_MPEG_CTRL_1      SETA    (1<<6)
        |
IOMD_C_MPEG_CTRL_1      SETA    0
        ]

; Front panel button function
;selects the front panel buton function
;used to select the maintainance OS or clear CMOS setting
                GBLL    FrontPanelButtClearsCMOS
FrontPanelButtClearsCMOS        SETL    {TRUE}

; If nothing relies on CLK16, CLK8, REF8M or CLK2 for anything other
; than timing processor I/O, we can stop them when the processor is
; placed into suspend mode. Any system with a real expansion card slot
; must keep them runnning.
                GBLL    StopClocksDuringIdle
StopClocksDuringIdle    SETL    M_Lazarus :LOR: M_STB400

; Front panel Write bit. 1=red, 0=green
                GBLA    IOMD_C_FrontPanelLED
        [ M_Omega
IOMD_C_FrontPanelLED    SETA    (1<<7)
        |
IOMD_C_FrontPanelLED    SETA    0
        ]

; Left LED bit, or 0 if not present
                GBLA    IOMD_C_FrontPanelLeftLED
        [ M_Lazarus
IOMD_C_FrontPanelLeftLED        SETA    (1<<7)
        |
IOMD_C_FrontPanelLeftLED        SETA    0
        ]

; Watchdog Write bit.
                GBLA    IOMD_C_Watchdog
        [ M_Falcon :LOR: M_Morris :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
IOMD_C_Watchdog         SETA    (1<<7)
        |
IOMD_C_Watchdog         SETA    0
        ]

; Mask of all the readable bits
                GBLA    IOMD_C_ReadMask
IOMD_C_ReadMask SETA    (IOMD_C_MPEGfitted :OR: IOMD_C_MonitorType :OR: IOMD_C_GenIO :OR: IOMD_C_CDfitted :OR: IOMD_C_PALNTSCType :OR: IOMD_C_PhaseDetectBit :OR: IOMD_C_JoystickDetectBits :OR: IOMD_C_FrontPanelButton)

; Do we flash the LEDs in POST? Yes, if we have them, and we're not Lazarus (they're not
; really LEDs).
                GBLL    POSTFlashesFrontPanelLEDs
POSTFlashesFrontPanelLEDs       SETL    ((IOMD_C_FrontPanelLED <> 0) :LOR: (IOMD_C_FrontPanelRightLED <> 0 :LAND: IOMD_C_FrontPanelLeftLED <> 0)) :LAND: :LNOT: M_Lazarus

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;               MAC Address Read from NVRAM
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;       The MAC address can be read from the NVRAM tag MACAddress and
;       a SetMac utility is provided in !Boot.Utils to enable the MAC address to be
;       programmed for prototypes and development machines.
;
;       Since it is dangerous to rely on the NVRAM to hold our MAC address when it is not
;       protected in any way, we can store two copies of it, each with their own checksum.
;       If either copy becomes damaged we can repair it using the other copy.
;       MACNVRAM2COPIES is set to indicate that we are using two copies in the NVRAM.
;
;       Paul Skirrow, 22 Feb 2000

                GBLL    MACNVRAM2copies
MACNVRAM2copies SETL    {FALSE}

         ] ; STB :LAND: :LNOT: HAL
     ] ; :LNOT: M_All :LAND: :LNOT: M_All32
 ] ; :LNOT: :DEF: Included_Hdr_Machine_Machine

        OPT     OldOpt
        END
@


1.21
log
@CortexA7 is missing from the HiResTTX switch. This means on Titanium
MODE 7 doesn't really work because the DVI framer chip can't clock
as low as 13.5MHz for 320x200.

Version 2.64. Tagged as 'HdrSrc-2_64'
@
text
@d256 1
a256 1
; Less blocky teletext font
d258 1
a258 1
HiResTTX        SETL    M_Lazarus :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Tungsten :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA7
d260 1
a260 1
; Teletext rendered at 8bpp
d262 1
a262 1
TTX256          SETL    M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_RPi
@


1.20
log
@Add new "26" machine type. Simplify ARM2 support.
Detail:
  hdr/Machine/26, hdr/Machine/Machine - Add new "26" machine type, which targets all 26 bit machines/OS versions (running only in 26 bit mode)
  hdr/CPU/Arch - Use ELIF to avoid bracket spam. Remove duplicate CortexA7 case.
  hdr/CPU/Generic26 - Add NOPs to PSR manipulation macros in order to make them ARM2-safe (Generic32 macros are already structured to have suitable NOPs when generating 32bit-neutral code, so it makes sense for Generic26 to take care of ARM2 as well). This removes the need for components which use these macros to insert any manual NOPs, whether for the StrongARM MSR bug or the ARM2 TEQP bug.
  hdr/CPU/Generic32 - Flag the StrongARM MSR NOP diagnostic message as a warning, so the line number can be included in the output, so developers can more easily investigate the issue.
Admin:
  Tested with PlingSystem build


Version 2.63. Tagged as 'HdrSrc-2_63'
@
text
@d258 1
a258 1
HiResTTX        SETL    M_Lazarus :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Tungsten :LOR: M_ARM11ZF :LOR: M_RPi
@


1.19
log
@  Support for OMAP543x, AM5728 and ADFS 4
Detail:
  * Complete the Cortex-A7 support which was initially added for RPi 2, to
    allow for builds that only target Cortex-A7. Because Cortex-A15 and
    Cortex-A17 CPUs are indistinguishable architecturally from Cortex-A7
    (all are ARMv7VE with VFPv4, Advanced SIMD v2 and hardware integer divide)
    any such platforms are expected to use Machine=CortexA7. Also bear in
    mind that if we ever support multiple cores on big.LITTLE CPUs, execution
    can move between these core types at runtime, making an assembly time
    option to distinguish between them meaningless!
  * Correct Machines All and All32 to include support for VFPv4
  * Decloak the ATA driver SWI chunk
  * Add a global error allocation for use by the ATA subsystem (placed in
    global space because it propagates into the CD stack)


Version 2.55. Tagged as 'HdrSrc-2_55'
@
text
@d52 1
d65 1
d86 1
a86 1
No32bitCode     SETL    M_Archimedes :LOR: M_Morris :LOR: M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
d105 1
a105 1
StrongARM_MSR_bug SETL  M_All :LOR: M_All32 :LOR: M_IOMD
d107 1
a107 1
     [ :LNOT: M_All :LAND: :LNOT: M_All32
@


1.18
log
@  Add Raspberry Pi 2 support
Detail:
  The Raspberry Pi ROM now joins the IOMD ROM in supporting multiple
  architectures, in this case ARMv6 and ARMv7. This has been achieved by
  creating a new machine type specific for Raspberry Pi. The old ARM11ZF
  machine type remains for builds that are ARM11-only.

  The Raspberry Pi 2 uses the Cortex-A7 processor, which includes version 4
  of the VFP instruction set and version 2 of the Advanced SIMD (NEON)
  instruction set. You can now switch on this at assembly time using the new
  switches NoARMVv4 and SupportARMVv4.

Version 2.50. Tagged as 'HdrSrc-2_50'
@
text
@d60 1
d72 1
d76 3
d88 1
a88 1
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9
d99 1
a99 1
NoUnaligned     SETL    M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9
d137 1
a137 1
        [ M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9
d181 1
a181 1
HAL             SETL    M_32 :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9
d210 1
a210 1
E2ROMSupport    SETL    M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_ARM11ZF :LOR: M_RPi :LOR: M_CortexA8 :LOR: M_CortexA9
@


1.17
log
@  Resync with allocations database
Detail:
  * Add error block for BASIC module
  * Retire RTCSupport switch in Hdr:Machine.Machine

Version 2.37. Tagged as 'HdrSrc-2_37'
@
text
@d57 1
d68 1
d83 1
a83 1
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9
d94 1
a94 1
NoUnaligned     SETL    M_CortexA8 :LOR: M_ARM11ZF :LOR: M_CortexA9
d132 1
a132 1
        [ M_CortexA8 :LOR: M_CortexA9 :LOR: M_ARM11ZF
d176 1
a176 1
HAL             SETL    M_32 :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9
d205 1
a205 1
E2ROMSupport    SETL    M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_IOMD :LOR: M_Tungsten :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9
d251 1
a251 1
HiResTTX        SETL    M_Lazarus :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Tungsten :LOR: M_ARM11ZF
d255 1
a255 1
TTX256          SETL    M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF
@


1.17.2.1
log
@  Cross-compile version of HdrSrc
Detail:
  Mostly a question of changing directory separators and removing reliance
  upon path variables and system variable expansion. One day, when all
  components use the shared makefiles (or at least use the necessary -pd and
  -i switches to objasm), we will be able to switch over to using this
  version for all builds. In the meantime, I have created a new branch for
  the HdrSrc component, called XCompile, to store these changes. The downside
  is the fact that we'll now have to maintain unrelated changes on both
  branches until they can be merged.
Admin:
  Tested by cross-assembling the BASIC module.

Version 2.46, 4.247.2.1. Tagged as 'HdrSrc-2_46-4_247_2_1'
@
text
@d108 1
a108 1
GetCPU          SETS    ("GET CPU/" :CC: "$CPU_Type")
d114 1
a114 1
GetIO           SETS    ("GET IO/" :CC: "$IO_Type")
d120 1
a120 1
GetVIDC         SETS    "GET VIDC/" :CC: VIDC_Type
d127 1
a127 1
GetMEMC         SETS    "GET IO/" :CC: MEMC_Type
d136 1
a136 1
GetMEMM         SETS    "GET MEMM/" :CC: MEMM_Type
d142 1
a142 1
GetFDC          SETS    "GET FDC/" :CC: FDC_Type
@


1.16
log
@  Second of a two-part update of HdrSrc.
Detail:
  Hdr:System:
  * Hdr:CPU.Arch added to the list of header files included here. This is
    because it's now needed by Hdr:CPU.Generic*.
  Hdr:CPU.Generic*:
  * Reintroduced ARMv2 compatibility to many macros. Should allow a new
    universal boot sequence to be constructed.
  * SCPSR in Generic26 optimised in cases where no PSR bits are preserved.
  * RemovePSRFromReg optimised for 32bit-only builds - becomes a no-op.
  Hdr:Machine.Machine:
  * Reordering of braces so that symbol "HAL" doesn't have to be defined -
    useful for disc builds, which target both HAL and non-HAL machines, so
    the symbol is undefined.
  * Added some comments and an assert about No26bitCode and No32bitCode.
Admin:
  Update originally from Rob Sprowson, bugfixes and additions and split into
  two parts by me.

Version 2.26. Tagged as 'HdrSrc-2_26'
@
text
@a204 5
; Should we probe IIC addresses &A0 and &D0 for an RTC? (Requires E2ROMSupport, else Phillips RTC at &A0 is assumed)
; Disabling this is useful for HAL platforms that use the HAL RTC API
                GBLL    RTCSupport
RTCSupport      SETL    :LNOT: (M_CortexA8 :LOR: M_CortexA9)

@


1.15
log
@  Rationalisation of Hdr:Machine
Detail:
  * Updated comments in 32, All, All32
  * New Machine for IOMD class
  * Phoebe support removed
  * In Hdr:Machine.Machine:
    + Moved the 4 common switches to the top (No32bitCode; No26bitCode;
      NoUnaligned; StrongARM_MSR_bug).
    + Bracketed non 'All' switches, mid term most of these are actually
      kernel private switches, but the HAL kernel still includes a lot of
      pre HAL code so making it tricky to obsolete them in one pass.
    + Bracketed non 'HAL' switches, pending deletion.
    + Bracketed non 'HAL' STB switches, pending deletion.
    + Deleted unused "NewClockChip", "CDVPoduleIRQs", "OldComboSupport",
       "DoPOSTwithoutPowerOn", "M_Phoebe".
    + Moved "HAL32"; "HAL26"; "ROMSizeOffset" to kernel header.
    + Added some comments.
Admin:
  Changes provided by Sprow

Version 2.24. Tagged as 'HdrSrc-2_24'
@
text
@d83 6
d98 1
a98 1
        [ :LNOT: M_All :LAND: :LNOT: M_All32
a295 1
        ] ; :LNOT: M_All :LAND: :LNOT: M_All32
d297 1
a297 1
        [ :LNOT: HAL
d326 1
a326 1
        ] ; :LNOT: HAL
d328 1
a328 1
        [ STB :LAND: :LNOT: HAL
d623 2
a624 1
        ] ; STB :LAND: :LNOT: HAL
@


1.14
log
@Enable 256 colour, high-res teletext for M_ARM11ZF (i.e. Raspberry Pi)
Detail:
  hdr/Machine/Machine - Enabled 256 colour teletext mode for M_ARM11ZF. High-res teletext also enabled, as the kernel doesn't support low-res 256 colour teletext.
Admin:
  Tested on Raspberry Pi


Version 2.21. Tagged as 'HdrSrc-2_21'
@
text
@d38 15
d54 1
a54 2
                GBLL    M_Falcon
                GBLL    M_Morris
a55 9
                GBLL    M_Omega
                GBLL    M_Lazarus
                GBLL    M_Peregrine
                GBLL    M_STB3
                GBLL    M_STB400
                GBLL    M_STB5
                GBLL    M_Phoebe
                GBLL    M_Tungsten
                GBLL    M_32
d59 4
d64 1
a64 2
M_Falcon        SETL    Machine="Falcon"
M_Morris        SETL    Machine="Morris"
a65 9
M_Omega         SETL    Machine="Omega"
M_Lazarus       SETL    Machine="Lazarus"
M_Peregrine     SETL    Machine="Peregrine"
M_STB3          SETL    Machine="STB3"
M_STB400        SETL    Machine="STB400"
M_STB5          SETL    Machine="STB5"
M_Phoebe        SETL    Machine="Phoebe"
M_Tungsten      SETL    Machine="Tungsten"
M_32            SETL    Machine="32"
d69 18
d88 9
a96 6
                GBLS    SystemName
        [ M_Omega :LOR: M_Lazarus
SystemName      SETS    "NC OS"
        |
SystemName      SETS    "RISC OS"
        ]
a97 1
        [ :LNOT: M_All ; these switches should not be used by machine-independent code
d132 1
a132 1
; floppy controller
d138 1
a138 3
                GBLL    NewClockChip
NewClockChip    SETL    {TRUE}

d146 15
a160 2
                GBLL    MorrisSupport
MorrisSupport   SETL    {TRUE}
d162 3
a164 5
                GBLL    StorkPowerSave
StorkPowerSave  SETL    {TRUE}

                GBLL    HiResTTX
HiResTTX        SETL    M_Lazarus :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Tungsten :LOR: M_ARM11ZF
a165 15
                GBLL    TTX256
TTX256          SETL    M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF
        ] ; :LNOT: M_All

; Are we only supporting 26bit processor modes?
; If true, we mustn't rely on MSR, MRS etc, and we should be
; RISC OS 3.1 compatible.
                GBLL    No32bitCode
No32bitCode     SETL    M_Archimedes :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400

; Are we only supporting 32bit processor modes?
                GBLL    No26bitCode
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9

        [ :LNOT: M_All
d168 1
a168 22
HAL             SETL    M_32 :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9

; HAL32 indicates the new 32-bit memory map in use.
                GBLL    HAL26
                GBLL    HAL32
HAL32           SETL    HAL :LAND: No26bitCode
HAL26           SETL    HAL :LAND: :LNOT: No26bitCode
        ] ; :LNOT: M_All

; Override optimisation settings to avoid using unaligned LDR(H)/STR(H) on ARMv6+
; This switch should only be enabled for debugging purposes
                GBLL    NoUnaligned
NoUnaligned     SETL    M_CortexA8 :LOR: M_ARM11ZF :LOR: M_CortexA9

; Do we need to deal with the StrongARM conditional MSR CPSR_c bug?
                GBLL    StrongARM_MSR_bug
StrongARM_MSR_bug SETL  M_All :LOR: M_32 :LOR: M_Phoebe

        [ :LNOT: M_All
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;               System build options added for STB/NCD
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
a173 37
; Support for battery manager hardware
                GBLL    BatManSupport
BatManSupport   SETL    {FALSE} :LAND: StorkPowerSave

; Podule type of hardware in podule 0 address space
; number taken from Hdr:PoduleReg, or 0 if podule0 slot is a real slot.
                GBLA    FakePodule0
        [ M_Falcon
FakePodule0     SETA    &10E
        |
         [ M_Peregrine :LOR: M_STB3
FakePodule0     SETA    &121
         |
FakePodule0     SETA    0
         ]
        ]

; Traditional podule IRQ (8 & 13) behaviour for OS_ClaimDeviceVector
                GBLL    CDVPoduleIRQs
CDVPoduleIRQs   SETL    (:LNOT: HAL) :LOR: M_Tungsten

; Support for network 'podule' cards
                GBLL    NetPodSupport
NetPodSupport   SETL    :LNOT: (M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_Lazarus :LOR: M_Tungsten)

; Number of podules to look at.
                GBLA    NumberOfPodules
 [ M_STB400
NumberOfPodules SETA    1
 |
 [ M_STB3 :LOR: M_Tungsten
NumberOfPodules SETA    4
 |
NumberOfPodules SETA    8
 ]
 ]

a181 4
; Support for being an OS image in 2nd ROM bank
                GBLL    CanLiveOnROMCard
CanLiveOnROMCard        SETL    ROMCardSupport :LAND: {TRUE}

d186 8
d197 1
a197 1
E2ROMSupport    SETL    M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_Tungsten :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9
d204 19
a222 3
; Support for 82C710 and 82C711 combo chips in addition to 665
                GBLL    OldComboSupport
OldComboSupport SETL    {FALSE}
a227 4
; The combo chip is clocked at 14.318MHz, instead of 24MHz
                GBLL    ComboClock14MHz
ComboClock14MHz SETL    {FALSE}

d234 3
a236 11
; Address of NTSC/not PAL flag, if on MPEG podule rather than CLINES, else 0
                GBLA    MPEGPoduleNTSCNotPALAddress
        [ M_Falcon
MPEGPoduleNTSCNotPALAddress SETA        &88200000
        |
         [ M_Peregrine
MPEGPoduleNTSCNotPALAddress SETA        &88400000
         |
MPEGPoduleNTSCNotPALAddress SETA        0
         ]
        ]
d238 3
a240 11
; Bit mask for above (0 if not applicable)
                GBLA    MPEGPoduleNTSCNotPALMask
        [ M_Falcon
MPEGPoduleNTSCNotPALMask        SETA    1 :SHL: 7
        |
         [ M_Peregrine
MPEGPoduleNTSCNotPALMask        SETA    1 :SHL: 5
         |
MPEGPoduleNTSCNotPALMask        SETA    0
         ]
        ]
d242 3
a244 19
; Name of the the header file which defines the MPEG podule
                GBLS    MPEGPoduleType
        [ M_Falcon
MPEGPoduleType  SETS    "MPEGCard"
        |
          [ M_Peregrine
MPEGPoduleType  SETS    "MPEG2Card"
          |
            [ M_STB3
MPEGPoduleType  SETS    "MPEG2bCard"
            |
              [ M_STB400
MPEGPoduleType  SETS    "MPEG2cCard"
              |
MPEGPoduleType  SETS    "Unknown..."    ; Unknown MPEG Podule type
              ]
            ]
          ]
        ]
d246 3
a248 15
; VIDC Clock sources
                GBLS    VIDCClockSource
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_32
VIDCClockSource SETS    "VCO"
        |
         [ M_STB400
VIDCClockSource SETS    "HCLK"
         |
          [ M_Lazarus
VIDCClockSource SETS    "RCLK"
          |
VIDCClockSource SETS    "VCLK"
          ]
         ]
        ]
d250 3
a252 7
; TV modes are produced by Chrontel device
                GBLL    ChrontelSupport
ChrontelSupport SETL    M_32

; ROM speed is normal, not divide by 2
                GBLL    ROMSpeedNormal
ROMSpeedNormal  SETL    M_Falcon :LOR: M_Morris :LOR: M_Phoebe
d258 1
a258 1
 [ M_Lazarus
d260 3
a262 2
 |
  [ M_STB400
d264 1
a264 1
  |
d266 1
a266 6
  ]
 ]

  [ M_Lazarus
NTSCSafeArea    SETS    "3, 6, 3, 6" ; This is what the original Model 1 had
  |
a269 4
; VCO not fitted, so don't attempt to use VCLK.
                GBLL    DontUseVCO
DontUseVCO      SETL    M_Lazarus :LOR: M_STB400

d290 8
d311 3
a313 5
 [ M_Phoebe
SystemROMspeed  * 156                           ;ROM speed in nS
BurstROMspeed   * 93                            ;ROM burst speed in nS. 0 = no burst mode
 ]

d321 16
d373 12
a384 7
; Perform POST on non-power on resets (eg if ROM card selection is inside POST)
                GBLL    DoPOSTwithoutPowerOn
DoPOSTwithoutPowerOn SETL {FALSE}

; Offset from start of ROM to word containing ROM size.
                GBLA    ROMSizeOffset
ROMSizeOffset   SETA    &60
d386 15
d402 19
a420 3
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;               Allocation of bits in 8bit I/O port at IOMD_CLINES
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
d424 1
a424 1
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Peregrine :LOR: M_STB3
d440 1
a440 1
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
d468 1
a468 1
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
d508 1
a508 1
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Peregrine
d524 1
a524 1
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Peregrine
a559 15
; What is the maximum clock rate (in kHz) for the I2C bus? The
; Kernel will clock the EEPROM at up to this speed (depending
; on the part fitted). The limiting factor will be the slowest
; device on the bus.
                GBLA    MaxI2Cspeed

;default value
MaxI2Cspeed     SETA    100

;different values for faster systems
 [ M_Lazarus
MaxI2Cspeed     SETA    1000
 ]


d585 1
a585 1
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
a590 1

d618 1
a618 1
        ] ; :LNOT: M_All
@


1.13
log
@Enable RTCSupport for M_ARM11ZF
Detail:
  hdr/Machine/Machine - Enabled RTCSupport for M_ARM11ZF. Required for any IIC-attached RTC on the Raspberry Pi to be picked up by the kernel.
Admin:
  Untested locally, but reported working by Dave Higton


Version 2.14. Tagged as 'HdrSrc-2_14'
@
text
@d136 1
a136 1
HiResTTX        SETL    M_Lazarus :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Tungsten
d139 1
a139 1
TTX256          SETL    M_Tungsten :LOR: M_STB5
@


1.12
log
@  Turn on E2ROMSupport switch for machine ARM11ZF
Detail:
  This is necessary to enable the Raspberry Pi HAL to provide non-volatile RAM.
Admin:
  Tested on Raspberry Pi

Version 2.10. Tagged as 'HdrSrc-2_10'
@
text
@d243 1
a243 1
RTCSupport      SETL    :LNOT: (M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9)
@


1.11
log
@Add protection against StrongARM conditional MSR CPSR_c bug
Detail:
  hdr/Machine/Machine - Add new StrongARM_MSR_bug global that's TRUE when we're targeting a StrongARM-compatible machine type.
  Corrected No26bitCode and No32bitCode comments to say that it's all about whether we're supporting 26/32bit processor modes, not about whether we're targetting 26/32bit only processors
  hdr/CPU/Generic32 - Modify macros to protect against StrongARM MSR bug where appropriate.
Admin:
  Tested with IOMD softload on StrongARM RiscPC.
  Fixes issue with Maestro crashing due to MSR bug creating a stack imbalance in SoundScheduler.


Version 1.96. Tagged as 'HdrSrc-1_96'
@
text
@d238 1
a238 1
E2ROMSupport    SETL    M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_Tungsten :LOR: M_CortexA8 :LOR: M_CortexA9
@


1.10
log
@Updates and additions for non-Iyonix builds and !System distribution.

Changes provided by sprow.

Version 1.94. Tagged as 'HdrSrc-1_94'
@
text
@d142 1
a142 1
; Do we support 26-bit only processors? (ARM2, ARM3)
d148 1
a148 1
; Do we support 32-bit only processors? (ARM9, ARM10...)
d169 4
@


1.9
log
@  Added CortexA9 Machine
Admin:
  Submission from Willi Theiß

Version 1.87. Tagged as 'HdrSrc-1_87'
@
text
@d41 1
d53 1
a53 1
		GBLL	M_CortexA9
d57 1
d69 1
a69 1
M_CortexA9	SETL	Machine="CortexA9"
d105 1
a105 1
	[ M_CortexA8 :LOR: M_CortexA9 :LOR: M_ARM11ZF
d146 1
a146 1
No32bitCode     SETL    M_Morris :LOR: M_Phoebe :LOR: M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
d150 1
a150 1
No26bitCode	SETL	M_32 :LOR: M_Lazarus :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9
d155 1
a155 1
HAL		SETL	M_32 :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8 :LOR: M_CortexA9
d167 1
a167 1
NoUnaligned	SETL	M_CortexA8 :LOR: M_ARM11ZF :LOR: M_CortexA9
d171 1
a171 1
;		System build options added for STB/NCD
d175 2
a176 2
		GBLL	STB
STB		SETL	M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_Lazarus
d179 2
a180 2
		GBLL	BatManSupport
BatManSupport	SETL	{FALSE} :LAND: StorkPowerSave
d184 1
a184 1
		GBLA	FakePodule0
d186 1
a186 1
FakePodule0	SETA	&10E
d189 1
a189 1
FakePodule0	SETA	&121
d191 1
a191 1
FakePodule0	SETA	0
d200 1
a200 1
		GBLL	NetPodSupport
d204 1
a204 1
		GBLA	NumberOfPodules
d209 1
a209 1
NumberOfPodules	SETA	4
d211 1
a211 1
NumberOfPodules	SETA	8
d216 2
a217 2
		GBLL	ExtROMSupport
ExtROMSupport	SETL	M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: ((M_Omega :LOR: M_Lazarus :LOR: M_STB400) :LAND: {FALSE})
d220 2
a221 2
		GBLL	ROMCardSupport
ROMCardSupport	SETL	M_Omega
d224 2
a225 2
		GBLL	CanLiveOnROMCard
CanLiveOnROMCard	SETL	ROMCardSupport :LAND: {TRUE}
d228 2
a229 2
		GBLL	ExtROMis16bit
ExtROMis16bit	SETL	M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400
d233 2
a234 2
		GBLL	E2ROMSupport
E2ROMSupport	SETL	M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_Tungsten :LOR: M_CortexA8 :LOR: M_CortexA9
d242 2
a243 2
		GBLL	OldComboSupport
OldComboSupport	SETL	{FALSE}
d246 1
a246 1
		GBLL	ComboIRQsActiveHigh
d260 1
a260 1
		GBLA	MPEGPoduleNTSCNotPALAddress
d262 1
a262 1
MPEGPoduleNTSCNotPALAddress SETA	&88200000
d265 1
a265 1
MPEGPoduleNTSCNotPALAddress SETA	&88400000
d267 1
a267 1
MPEGPoduleNTSCNotPALAddress SETA	0
d272 1
a272 1
		GBLA	MPEGPoduleNTSCNotPALMask
d274 1
a274 1
MPEGPoduleNTSCNotPALMask	SETA	1 :SHL: 7
d277 1
a277 1
MPEGPoduleNTSCNotPALMask	SETA	1 :SHL: 5
d279 1
a279 1
MPEGPoduleNTSCNotPALMask	SETA	0
d284 10
a293 10
		GBLS	MPEGPoduleType
	[ M_Falcon
MPEGPoduleType	SETS	"MPEGCard"
	|
	  [ M_Peregrine
MPEGPoduleType	SETS	"MPEG2Card"
	  |
	    [ M_STB3
MPEGPoduleType	SETS	"MPEG2bCard"
	    |
d297 1
a297 1
MPEGPoduleType	SETS	"Unknown..."	; Unknown MPEG Podule type
d299 3
a301 3
	    ]
	  ]
	]
d304 1
a304 1
		GBLS	VIDCClockSource
d306 1
a306 1
VIDCClockSource	SETS	"VCO"
d309 1
a309 1
VIDCClockSource	SETS	"HCLK"
d312 1
a312 1
VIDCClockSource	SETS	"RCLK"
d314 1
a314 1
VIDCClockSource	SETS	"VCLK"
d320 2
a321 2
		GBLL	ChrontelSupport
ChrontelSupport	SETL	M_32
d373 2
a374 2
			GBLS	ROMSpeedNSTicks
			GBLS	ROMSpeedBurstTicks
d376 2
a377 2
ROMSpeedNSTicks		SETS	"4"
ROMSpeedBurstTicks	SETS	"0"
d380 2
a381 2
ROMSpeedNSTicks		SETS	"5"
ROMSpeedBurstTicks	SETS	"4"
d390 2
a391 2
			GBLL	FECPUSpeedNormal
FECPUSpeedNormal	SETL	M_STB3 :LOR: M_STB400 :LOR: M_Lazarus
d397 9
a405 9
	[ M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_Omega :LOR: M_Lazarus
		GBLA	Modem_DefaultPodule
		GBLA	Modem_RegisterSetOffset		; offset within EASI
		GBLA	Modem_InterruptStatusOffset	; offset within EASI
 	 [ M_Falcon :LOR: M_Peregrine :LOR: M_STB3
Modem_DefaultPodule	SETA	1	; default podule is 1 on an STB
	 |
Modem_DefaultPodule	SETA	0	; have real podules on the rest
	 ]
d410 6
a415 7
	 [ M_Falcon :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_Omega
Modem_RegisterSetOffset		SETA	&803000		; CME modem card
Modem_InterruptStatusOffset	SETA	&802000 	; CME modem card
	 |
Modem_RegisterSetOffset		SETA	&000be0		; NC modem
Modem_InterruptStatusOffset	SETA	&000bfc		; NC modem
	 ]
d417 2
a418 1
	]
d428 1
a428 1
SpecialKeyStandby SETA	-1
d442 1
a442 1
;		Allocation of bits in 8bit I/O port at IOMD_CLINES
d446 1
a446 1
		GBLA	IOMD_C_MPEGfitted
d448 1
a448 1
IOMD_C_MPEGfitted	SETA	(1<<0)
d450 1
a450 1
IOMD_C_MPEGfitted	SETA	0
d454 1
a454 1
		GBLA	IOMD_C_MonitorType
d456 1
a456 1
IOMD_C_MonitorType	SETA	(1<<0)
d458 1
a458 1
IOMD_C_MonitorType	SETA	0
d462 1
a462 1
		GBLA	IOMD_C_FrontPanelRedLED
d464 1
a464 1
IOMD_C_FrontPanelRedLED	SETA	(1<<1)
d466 1
a466 1
IOMD_C_FrontPanelRedLED	SETA	0
d470 2
a471 2
		GBLA	IOMD_C_VideoPowerDown
IOMD_C_VideoPowerDown	SETA	0
d474 1
a474 1
		GBLA	IOMD_C_ROMCardVpp
d476 1
a476 1
IOMD_C_ROMCardVpp	SETA	(1<<1)
d478 1
a478 1
IOMD_C_ROMCardVpp	SETA	0
d490 1
a490 1
		GBLA	IOMD_C_FrontPanelGrnLED
d492 1
a492 1
IOMD_C_FrontPanelGrnLED	SETA	(1<<2)
d494 1
a494 1
IOMD_C_FrontPanelGrnLED	SETA	0
d498 1
a498 1
		GBLA	IOMD_C_TVMode
d500 1
a500 1
IOMD_C_TVMode		SETA	(1<<2)
d502 1
a502 1
IOMD_C_TVMode		SETA	0
d506 1
a506 1
		GBLA	IOMD_C_FrontPanelRightLED
d508 1
a508 1
IOMD_C_FrontPanelRightLED	SETA	(1<<3)
d510 1
a510 1
IOMD_C_FrontPanelRightLED	SETA	0
d514 1
a514 1
		GBLA	IOMD_C_GenIO
d516 1
a516 1
IOMD_C_GenIO		SETA	(1<<3)
d518 1
a518 1
IOMD_C_GenIO		SETA	0
d522 1
a522 1
		GBLA	IOMD_C_MPEG_CTRL_0
d524 1
a524 1
IOMD_C_MPEG_CTRL_0	SETA	(1<<3)
d526 1
a526 1
IOMD_C_MPEG_CTRL_0	SETA	0
d530 1
a530 1
		GBLA	IOMD_C_CDfitted
d532 1
a532 1
IOMD_C_CDfitted		SETA	(1<<4)
d534 1
a534 1
IOMD_C_CDfitted		SETA	0
d538 1
a538 1
		GBLA	IOMD_C_PALNTSCType
d540 1
a540 1
IOMD_C_PALNTSCType	SETA	(1<<4)
d542 1
a542 1
IOMD_C_PALNTSCType	SETA	0
d546 1
a546 1
		GBLA	IOMD_C_JoystickDetectBits
d548 1
a548 1
IOMD_C_JoystickDetectBits	SETA	(2_11<<5)
d550 1
a550 1
IOMD_C_JoystickDetectBits	SETA	0
d554 1
a554 1
		GBLA	IOMD_C_PhaseDetectBit
d556 1
a556 1
IOMD_C_PhaseDetectBit	SETA	(1<<5)
d558 1
a558 1
IOMD_C_PhaseDetectBit	SETA	0
d562 1
a562 1
		GBLA	IOMD_C_FrontPanelButton
d564 1
a564 1
IOMD_C_FrontPanelButton	SETA	(1<<6)
d566 1
a566 1
IOMD_C_FrontPanelButton	SETA	0
d570 1
a570 1
		GBLA	IOMD_C_MPEG_CTRL_1
d572 1
a572 1
IOMD_C_MPEG_CTRL_1	SETA	(1<<6)
d574 1
a574 1
IOMD_C_MPEG_CTRL_1	SETA	0
d580 2
a581 2
		GBLL	FrontPanelButtClearsCMOS
FrontPanelButtClearsCMOS        SETL	{TRUE}
d606 1
a606 1
		GBLA	IOMD_C_FrontPanelLED
d608 1
a608 1
IOMD_C_FrontPanelLED	SETA	(1<<7)
d610 1
a610 1
IOMD_C_FrontPanelLED	SETA	0
d614 1
a614 1
		GBLA	IOMD_C_FrontPanelLeftLED
d616 1
a616 1
IOMD_C_FrontPanelLeftLED	SETA	(1<<7)
d618 1
a618 1
IOMD_C_FrontPanelLeftLED	SETA	0
d622 1
a622 1
		GBLA	IOMD_C_Watchdog
d624 1
a624 1
IOMD_C_Watchdog		SETA	(1<<7)
d626 1
a626 1
IOMD_C_Watchdog		SETA	0
d631 2
a632 2
		GBLA	IOMD_C_ReadMask
IOMD_C_ReadMask	SETA	(IOMD_C_MPEGfitted :OR: IOMD_C_MonitorType :OR: IOMD_C_GenIO :OR: IOMD_C_CDfitted :OR: IOMD_C_PALNTSCType :OR: IOMD_C_PhaseDetectBit :OR: IOMD_C_JoystickDetectBits :OR: IOMD_C_FrontPanelButton)
d640 1
a640 1
;		MAC Address Read from NVRAM
d643 3
a645 3
;	The MAC address can be read from the NVRAM tag MACAddress and
;	a SetMac utility is provided in !Boot.Utils to enable the MAC address to be
;	programmed for prototypes and development machines.
d647 4
a650 4
;	Since it is dangerous to rely on the NVRAM to hold our MAC address when it is not
;	protected in any way, we can store two copies of it, each with their own checksum.
;	If either copy becomes damaged we can repair it using the other copy.
; 	MACNVRAM2COPIES is set to indicate that we are using two copies in the NVRAM.
d652 1
a652 1
;	Paul Skirrow, 22 Feb 2000
d654 2
a655 2
		GBLL 	MACNVRAM2copies
MACNVRAM2copies	SETL	{FALSE}
@


1.8
log
@Update HdrSrc for correct ARM11ZF settings
Detail:
  hdr/Machine/Machine - Use VMSAv6 and disable unaligned memory accesses when compiling for ARM11ZF (i.e. ARMv6)
Admin:
  Tested with S3C6440 ROM build. Untested at runtime.


Version 1.83. Tagged as 'HdrSrc-1_83'
@
text
@d52 1
d67 1
d103 1
a103 1
        [ M_CortexA8 :LOR: M_ARM11ZF
d148 1
a148 1
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8
d153 1
a153 1
HAL             SETL    M_32 :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_ARM11ZF :LOR: M_CortexA8
d165 1
a165 1
NoUnaligned     SETL    M_CortexA8 :LOR: M_ARM11ZF
d232 1
a232 1
E2ROMSupport	SETL	M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_Tungsten :LOR: M_CortexA8
d237 1
a237 1
RTCSupport      SETL    :LNOT: (M_ARM11ZF :LOR: M_CortexA8)
@


1.7
log
@  Added support for Machine=ARM11ZF
Detail:
  Suitable for ARMv6Z CPUs with VFPv2, e.g. ARM1176JZF-S
Admin:
  Required by the S3C6410 HAL

Version 1.82. Tagged as 'HdrSrc-1_82'
@
text
@d101 1
a101 1
        [ M_CortexA8
d163 1
a163 1
NoUnaligned     SETL    M_CortexA8
@


1.6
log
@Fix HdrSrc merge error

Version 1.77. Tagged as 'HdrSrc-1_77'
@
text
@d50 1
d64 1
d146 1
a146 1
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_CortexA8
d151 1
a151 1
HAL             SETL    M_32 :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_CortexA8
d235 1
a235 1
RTCSupport      SETL    :LNOT: (M_CortexA8)
@


1.5
log
@Merge Cortex branch of HdrSrc into trunk
Detail:
  This should merge all of the Cortex HdrSrc changes into the trunk, so we don't have to worry about OMAP builds breaking each time the trunk HdrSrc changes
Admin:
  Untested!


Version 1.76. Tagged as 'HdrSrc-1_76'
@
text
@d163 1
@


1.4
log
@  Added support for machine-neutral builds
Detail:
  For use when building binaries which must run on a wide range of ARM
  architectures - typically used by disc builds rather than rom builds.
  Use Machine=All to target all machines, or Machine=All32 for any
  architecture from v3 (ARM600) upwards.
Admin:
  Tested in a BuildHost build.

Version 1.69. Tagged as 'HdrSrc-1_69'
@
text
@d50 1
d63 1
d99 3
d103 1
d105 1
a105 1
GetMEMM         SETS    "GET Hdr:MEMM.ARM600"
d144 1
a144 1
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_Tungsten :LOR: M_STB5
d149 1
a149 1
HAL             SETL    M_32 :LOR: M_Tungsten :LOR: M_STB5
d161 1
a161 1
NoUnaligned     SETL    {FALSE}
a162 1
        [ :LNOT: M_All
d225 1
d227 1
a227 1
E2ROMSupport	SETL	M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_Tungsten
d229 2
a230 2
; RTC is supported at IIC &A0 or &D0 (should really be HAL, but defer until
; there's a full HAL RTC API).
d232 1
a232 1
RTCSupport      SETL    {TRUE}
@


1.3
log
@  Another change required on the trunk of HdrSrc
Detail:
  Added NoUnaligned flag to Hdr:Machine:Machine to aid with debugging of
  unaligned loads.
Admin:
  Various other modules will shortly start checking this flag to decide
  whether to enable unaligned loads on ARMv6/v7.

Since I've only just committed 1.68, I'll reapply the tag at this revision.

Version 1.68. Not tagged
@
text
@d38 1
d50 1
d70 1
d128 1
d140 1
d150 1
d157 1
d644 1
@


1.2
log
@Updated to use latest HdrGen sources and modified Hdr:Machine.Machine
(HdrGen 1.77)

Version 1.62. Tagged as 'HdrSrc-1_62'
@
text
@d146 5
@


1.2.2.1
log
@  Added support for CortexA8 machine type
Detail:
  We're moving the OMAP port from using the generic Machine="32" setting so
  that the kernel can be build using VMSAv6 - and also so that other modules
  can be built to take advantage of post-ARMv4 CPU features.
Admin:
  Not tested yet. Will require RiscOS/Env 1.06 to take advantage of this, but
  then you should be able to build an OMAP ROM unaltered from CVS.

Version 1.62, 4.162.2.5. Tagged as 'HdrSrc-1_62-4_162_2_5'
@
text
@a48 1
                GBLL    M_CortexA8
a59 1
M_CortexA8      SETL    Machine="CortexA8"
a93 3
        [ M_CortexA8
MEMM_Type       SETS    "VMSAv6"
        |
a94 1
        ]
d96 1
a96 1
GetMEMM         SETS    "GET Hdr:MEMM." :CC: MEMM_Type
d134 1
a134 1
No26bitCode     SETL    M_32 :LOR: M_Lazarus :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_CortexA8
d138 1
a138 1
HAL             SETL    M_32 :LOR: M_Tungsten :LOR: M_STB5 :LOR: M_CortexA8
d209 1
a209 1
E2ROMSupport	SETL	M_Falcon :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3 :LOR: M_STB400 :LOR: M_STB5 :LOR: M_Lazarus :LOR: M_32 :LOR: M_Tungsten :LOR: M_CortexA8
@


1.2.2.2
log
@Another merge from the trunk

Version 1.62, 4.162.2.8. Tagged as 'HdrSrc-1_62-4_162_2_8'
@
text
@a151 5
; Override optimisation settings to avoid using unaligned LDR(H)/STR(H) on ARMv6+
; This switch should only be enabled for debugging purposes
                GBLL    NoUnaligned
NoUnaligned     SETL    {FALSE}

@


1.2.2.3
log
@Disable RTCSupport for CortexA8 machine type
Detail:
  hdr/Machine/Machine - The OMAP3 HAL will soon use the new HAL RTC API, so kernel probing of I2C for an RTC has been disabled. E2ROMSupport and RTCSupport descriptions have also been updated to more accurately describe what they control.
Admin:
  Tested on rev C2 beagleboard


Version 1.62, 4.162.2.11. Tagged as 'HdrSrc-1_62-4_162_2_11'
@
text
@a218 1
; Note that this also controls HAL NVRAM support, and RTCSupport.
d222 2
a223 2
; Should we probe IIC addresses &A0 and &D0 for an RTC? (Requires E2ROMSupport, else Phillips RTC at &A0 is assumed)
; Disabling this is useful for HAL platforms that use the HAL RTC API
d225 1
a225 1
RTCSupport      SETL    :LNOT: (M_CortexA8)
@


1.2.2.4
log
@Enable NoUnaligned option for Cortex builds
Detail:
  RISC OS now seems to work OK with NoUnaligned turned on, so for the moment we might as well have it turned on by default to help people detect potentially bad code.
Admin:
  Tested on rev C2 beagleboard


Version 1.62, 4.162.2.13. Tagged as 'HdrSrc-1_62-4_162_2_13'
@
text
@d155 1
a155 1
NoUnaligned     SETL    M_CortexA8
@


1.2.2.5
log
@Bring Cortex branch of HdrSrc in line with trunk
Detail:
  * Added VFPSupport SWI definition
  * Added some new industry standard file types
  * Aded some new sprite errors
  * Added install rule for C/C++ CD
  * Added support for machine-neutral builds
Admin:
  Untested!


Version 1.62, 4.162.2.14. Tagged as 'HdrSrc-1_62-4_162_2_14'
@
text
@a37 1
                GBLL    M_All
a49 1
M_All           SETL    Machine="All"
a69 1
        [ :LNOT: M_All ; these switches should not be used by machine-independent code
a130 1
        ] ; :LNOT: M_All
a141 1
        [ :LNOT: M_All
a150 1
        ] ; :LNOT: M_All
a156 1
        [ :LNOT: M_All
a643 1
        ] ; :LNOT: M_All
@


1.1
log
@Fresh commit of Machine and UserIF headers to lose the revision history
(which contains sensitive customer data).
@
text
@d280 1
a280 1
        [ M_Falcon :LOR: M_Morris :LOR: M_Phoebe :LOR: M_Omega :LOR: M_Peregrine :LOR: M_STB3
@

