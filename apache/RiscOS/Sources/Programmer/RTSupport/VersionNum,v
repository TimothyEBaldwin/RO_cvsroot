head	1.17;
access;
symbols
	RTSupport-0_17-1:1.17
	RTSupport-0_17:1.17
	RTSupport-0_16:1.16
	RTSupport-0_15:1.15
	RTSupport-0_14:1.14
	RTSupport-0_13:1.13
	RTSupport-0_12:1.12
	RTSupport-0_11:1.11
	RTSupport-0_10:1.10
	RTSupport-0_09:1.9
	RTSupport-0_08:1.8
	RTSupport-0_07:1.7
	RTSupport-0_06:1.6
	RTSupport-0_05:1.5
	RTSupport-0_04:1.4
	RTSupport-0_03:1.3
	RTSupport-0_02:1.2
	RTSupport-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.17
date	2016.06.15.19.29.25;	author jlee;	state Exp;
branches;
next	1.16;
commitid	itT7BGNkit9E5Baz;

1.16
date	2016.05.02.19.21.26;	author rsprowson;	state Exp;
branches;
next	1.15;
commitid	le5smv9L8JqBsW4z;

1.15
date	2016.04.05.20.04.13;	author jlee;	state Exp;
branches;
next	1.14;
commitid	1p7UAqGTBsP4zt1z;

1.14
date	2015.10.23.19.30.17;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	UChxUqEgGQmgGgGy;

1.13
date	2015.10.07.20.37.23;	author jlee;	state Exp;
branches;
next	1.12;
commitid	N94qAJ70PFKazdEy;

1.12
date	2015.08.03.20.36.16;	author rsprowson;	state Exp;
branches;
next	1.11;
commitid	bQQrYl79aejkERvy;

1.11
date	2012.08.20.20.39.33;	author jlee;	state Exp;
branches;
next	1.10;
commitid	zH8wrUQRZfJNjkhw;

1.10
date	2012.06.03.13.58.17;	author jlee;	state Exp;
branches;
next	1.9;
commitid	vjkAlMljwSvABg7w;

1.9
date	2012.03.31.11.38.07;	author jlee;	state Exp;
branches;
next	1.8;
commitid	V2zaRljJAJg3T1Zv;

1.8
date	2012.03.22.22.45.07;	author jlee;	state Exp;
branches;
next	1.7;
commitid	LSkTzCtrWScORVXv;

1.7
date	2012.02.02.22.23.51;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	05g2nKGEsdlakDRv;

1.6
date	2011.08.04.22.35.27;	author jlee;	state Exp;
branches;
next	1.5;
commitid	OqQ1DRKmkhSQefuv;

1.5
date	2009.10.22.01.04.53;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.27.19.29.24;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.19.16.01.28;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.27.15.52.04;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.12.19.55.22;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.12.19.55.22;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Clear the exclusive monitor when returning to pre-empted code
Detail:
  s/scheduler - Add a second variant of the PreEmptionRecovery routine, which issues a CLREX on entry. Use a workspace variable to select which routine is required (for supporting multiple CPU architectures at runtime)
  h/scheduler - Declare new symbols exported by s/scheduler
  c/module - Initialise PreEmptionRecoveryPtr with the correct value, depending on whether the CPU supports LDREX/STREX or not
Admin:
  Tested on Raspberry Pi


Version 0.17. Tagged as 'RTSupport-0_17'
@
text
@/* (0.17)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.17
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                15 Jun 2016

#define Module_MajorVersion             "0.17"
#define Module_Version                  17
#define Module_MinorVersion             ""
#define Module_Date                     "15 Jun 2016"

#define Module_ApplicationDate          "15-Jun-16"

#define Module_ComponentName            "RTSupport"
#define Module_ComponentPath            "castle/RiscOS/Sources/Programmer/RTSupport"

#define Module_FullVersion              "0.17"
#define Module_HelpVersion              "0.17 (15 Jun 2016)"
#define Module_LibraryVersionInfo       "0:17"
@


1.16
log
@Fix to processor identification
The expression would never match an ARM7, so attempting to softload the module on an ARMv3 era machine (no SYS mode) would not give a graceful error message.
From a tip off in https://www.riscosopen.org/forum/forums/4/topics/3990

Version 0.16. Tagged as 'RTSupport-0_16'
@
text
@d1 1
a1 1
/* (0.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.16
d9 1
a9 1
#define Module_Date_CMHG                02 May 2016
d11 2
a12 2
#define Module_MajorVersion             "0.16"
#define Module_Version                  16
d14 1
a14 1
#define Module_Date                     "02 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "02-May-16"
d21 3
a23 3
#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (02 May 2016)"
#define Module_LibraryVersionInfo       "0:16"
@


1.15
log
@Listen out for SeriousErrorV_Recover
Detail:
  c/module, cmhg/RTSupportHdr, h/global, s/scheduler - Add a handler for SeriousErrorV, so we can be notified when the privileged mode stacks are being flattened. This is safer than watching out for serious errors to arrive via ErrorV, although the ErrorV approach is still necessary in order to deal with old kernels or serious error generators that don't currently use SeriousErrorV (e.g. FPASC/VFPSupport)
Admin:
  Tested on Raspberry Pi


Version 0.15. Tagged as 'RTSupport-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d9 1
a9 1
#define Module_Date_CMHG                05 Apr 2016
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d14 1
a14 1
#define Module_Date                     "05 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "05-Apr-16"
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (05 Apr 2016)"
#define Module_LibraryVersionInfo       "0:15"
@


1.14
log
@Leave A bit set in SPSR when creating a thread
ARM have started using the extension bits (8 to 15) of the PSR, but have given bit 8 a safe default of being set (mask asynchronous aborts).
Since the kernel doesn't handle these RTSupport will create the thread state with A=1 as it would be at reset.

Version 0.14. Tagged as 'RTSupport-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d9 1
a9 1
#define Module_Date_CMHG                23 Oct 2015
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d14 1
a14 1
#define Module_Date                     "23 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "23-Oct-15"
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (23 Oct 2015)"
#define Module_LibraryVersionInfo       "0:14"
@


1.13
log
@Cache translated error messages
Detail:
  c/module - Make use of mess.c's error caching facility to avoid having to call MessageTrans when returning errors. Should give a bit of a performance boost when dealing with common errors (e.g. "Cannot yield in this context")
Admin:
  Tested on Raspberry Pi


Version 0.13. Tagged as 'RTSupport-0_13'
@
text
@d1 1
a1 1
/* (0.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.13
d9 1
a9 1
#define Module_Date_CMHG                07 Oct 2015
d11 2
a12 2
#define Module_MajorVersion             "0.13"
#define Module_Version                  13
d14 1
a14 1
#define Module_Date                     "07 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-15"
d21 3
a23 3
#define Module_FullVersion              "0.13"
#define Module_HelpVersion              "0.13 (07 Oct 2015)"
#define Module_LibraryVersionInfo       "0:13"
@


1.12
log
@Simplify standalone build
Lump the Priorities in with the Messages using INSTRES_FILES.
Remame CMHG file to match the default.
Delete double message file handling code.
Build, but not tested.

Version 0.12. Tagged as 'RTSupport-0_12'
@
text
@d1 1
a1 1
/* (0.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.12
d9 1
a9 1
#define Module_Date_CMHG                03 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "0.12"
#define Module_Version                  12
d14 1
a14 1
#define Module_Date                     "03 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "03-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "0.12"
#define Module_HelpVersion              "0.12 (03 Aug 2015)"
#define Module_LibraryVersionInfo       "0:12"
@


1.11
log
@Fix building of disc image softload version
Detail:
  s/scheduler - ADR range issues strike again; now use ADRL unconditionally instead of only in debug builds.
Admin:
  Builds but untested


Version 0.11. Tagged as 'RTSupport-0_11'
@
text
@d1 1
a1 1
/* (0.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.11
d9 1
a9 1
#define Module_Date_CMHG                20 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.11"
#define Module_Version                  11
d14 1
a14 1
#define Module_Date                     "20 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.11"
#define Module_HelpVersion              "0.11 (20 Aug 2012)"
#define Module_LibraryVersionInfo       "0:11"
@


1.10
log
@Fix r14_usr corruption in Yield when called from IRQ context
Detail:
  s/scheduler - Yield was failing to restore r14_usr to its previous value when exiting with an error (e.g. due to RT_Yield being called from an IRQ context)
Admin:
  Tested in BCM2835 ROM


Version 0.10. Tagged as 'RTSupport-0_10'
@
text
@d1 1
a1 1
/* (0.10)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.10
d9 1
a9 1
#define Module_Date_CMHG                03 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.10"
#define Module_Version                  10
d14 1
a14 1
#define Module_Date                     "03 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.10"
#define Module_HelpVersion              "0.10 (03 Jun 2012)"
#define Module_LibraryVersionInfo       "0:10"
@


1.9
log
@Tidy makefile
Detail:
  Makefile - removed rendundant -cpu assembler flag that causes an error with asasm 2.00 due to two CPU types being specified
  Removed -cpu 3 setting from CFLAGS since CC 5.69 doesn't seem to suffer from the same internal compiler error bug
Admin:
  Tested in OMAP3 ROM


Version 0.09. Tagged as 'RTSupport-0_09'
@
text
@d1 1
a1 1
/* (0.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.09
d9 1
a9 1
#define Module_Date_CMHG                31 Mar 2012
d11 2
a12 2
#define Module_MajorVersion             "0.09"
#define Module_Version                  9
d14 1
a14 1
#define Module_Date                     "31 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "31-Mar-12"
d21 3
a23 3
#define Module_FullVersion              "0.09"
#define Module_HelpVersion              "0.09 (31 Mar 2012)"
#define Module_LibraryVersionInfo       "0:9"
@


1.8
log
@Fix some nasty bugs. Add extensive debug logging code.
Detail:
  s/scheduler - Fix PreEmptionRecovery and ThreadResumed to update LastKnownIRQsema with the new value of IRQsema
  s/scheduler - Fix SVC stack copying code to decrement both pointers instead of incrementing one and decrementing the other. Fix PreEmpt loading the wrong values for SVCStackCopy and SVCStackBase.
  s/scheduler - Fix Yielded loading Context into R2, and thus overwriting any timeout the routine specified
  c/module, hdr/RTSupport, Resources/UK/Messages - Module now errors when RTSupport SWIs are called with nonzero flags
  Makefile, c/module, h/scheduler, s/scheduler - Added lots of debugging code, based around debuglib for C code and DADebug for assembler code. Debug code toggled on/off by passing DEBUG=TRUE to makefile. PC-relative variables shifted to middle of file to keep them within LDR range when debugging enabled.
Admin:
  Tested in OMAP3 ROM on BB-xM
  Fixes issues seen when multiple RTSupport threads are in use


Version 0.08. Tagged as 'RTSupport-0_08'
@
text
@d1 1
a1 1
/* (0.08)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.08
d9 1
a9 1
#define Module_Date_CMHG                22 Mar 2012
d11 2
a12 2
#define Module_MajorVersion             "0.08"
#define Module_Version                  8
d14 1
a14 1
#define Module_Date                     "22 Mar 2012"
d16 1
a16 1
#define Module_ApplicationDate          "22-Mar-12"
d21 3
a23 3
#define Module_FullVersion              "0.08"
#define Module_HelpVersion              "0.08 (22 Mar 2012)"
#define Module_LibraryVersionInfo       "0:8"
@


1.7
log
@Change to use CModule shared makefile.
Participated in a ROM build with no errors, but not functionally tested.

Version 0.07. Tagged as 'RTSupport-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.07
d9 1
a9 1
#define Module_Date_CMHG                02 Feb 2012
d11 2
a12 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d14 1
a14 1
#define Module_Date                     "02 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Feb-12"
d21 3
a23 3
#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (02 Feb 2012)"
#define Module_LibraryVersionInfo       "0:7"
@


1.6
log
@Update to work with zero page relocation
Detail:
  c/cmodule - Try using OS_ReadSysInfo 6 to find IRQsema before falling back on the legacy address
  h/scheduler - Add IRQsema pointer extern, update ThreadResumed extern to cope with it now being in a data area
  s/scheduler - Use workspace IRQsema pointer instead of hardcoded legacy address. Moved PreEmptionRecovery & ThreadResumed into data area for easier access to IRQsema ptr.
Admin:
  Tested on rev A2 BB-xM


Version 0.06. Tagged as 'RTSupport-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                04 Aug 2011
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "04 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "04-Aug-11"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (04 Aug 2011)"
#define Module_LibraryVersionInfo       "0:6"
@


1.5
log
@Fixes & improvements for RTSupport module
Detail:
  - Makefile (hopefully temporarily) modified to use "-cpu 3" setting for compiling C files, to work around internal compiler error
  - RT_Deregister fixed (in s/scheduler) to behave properly if a routine attempts to deregister itself after being entered from the foreground via RT_Yield
  - Simple test program added to test correct behaviour of RT_Deregister
  - SVC stack allocation routines rewritten to cope with the possibility that OS_DynamicArea 9/10 may be unable to move pages (e.g. RT_Deregister called while IRQSema is nonzero)
  - Stack allocation routine also attempts to deal with kernels which have broken sparse area error reporting (anything below version 5.15), by falling back on a simpler allocation scheme that doesn't resize the dynamic area.
  - Erroneous comment in s/scheduler fixed
  - Erroneous #define in h/scheduler fixed
Admin:
  Tested on RISC OS 5.15 rev C2 beagleboard, RISC OS 5.12 Iyonix
  Makefile fix "fixes" bug #218


Version 0.05. Tagged as 'RTSupport-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d9 1
a9 1
#define Module_Date_CMHG                22 Oct 2009
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d14 1
a14 1
#define Module_Date                     "22 Oct 2009"
d16 1
a16 1
#define Module_ApplicationDate          "22-Oct-09"
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (22 Oct 2009)"
#define Module_LibraryVersionInfo       "0:5"
@


1.4
log
@  Fixes some nasty bugs.
Detail:
  * First bug was that due to a careless slip-up in the very last stage of
    the process of switching to a routine (the loading of the SPSR), all
    routines were actually being entered in SYS mode with IRQs disabled. This
    was leading to horrendous interrupt latency - exactly the situation this
    module was written to avert! The most obvious reproducible symptom was
    that the real time clock ran slowly.
  * Once this was fixed, it revealed the presence of a more complicated bug:
    the module wasn't including the most-recently-executed routine along
    with the list of other routines in a non-sleeping state for a certain
    sub-set of actions. This was fixed by setting the pollword pointer to
    yet another magic address while it was executing, to minimise the
    disruption to existing code.
Admin:
  Tested with a deinterlacing routine.

Version 0.04. Tagged as 'RTSupport-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                27 Aug 2005
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "27 Aug 2005"
d16 1
a16 1
#define Module_ApplicationDate          "27-Aug-05"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Programmer/RTSupport"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (27 Aug 2005)"
#define Module_LibraryVersionInfo       "0:4"
@


1.3
log
@Null-terminated the dynamic area name.

Version 0.03. Tagged as 'RTSupport-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                19 Apr 2005
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "19 Apr 2005"
d16 1
a16 1
#define Module_ApplicationDate          "19-Apr-05"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (19 Apr 2005)"
#define Module_LibraryVersionInfo       "0:3"
@


1.2
log
@Fixed Makefile - resources phase was failing due to lack of a CmdHelp file.
Also fixed length calculation when setting system variable to exclude
trailing null byte (not that FileSwitch seems to mind!)

Version 0.02. Tagged as 'RTSupport-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                27 Jan 2005
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "27 Jan 2005"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jan-05"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (27 Jan 2005)"
#define Module_LibraryVersionInfo       "0:2"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                12 Jan 2005
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "12 Jan 2005"
d16 1
a16 1
#define Module_ApplicationDate          "12-Jan-05"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (12 Jan 2005)"
#define Module_LibraryVersionInfo       "0:1"
@


1.1.1.1
log
@Initial import of the RTSupport module, the real-time routine scheduler.
This has so far been demonstrated to work with a single client under
RISC OS-STB 5.0.0 and 5.0.2.
@
text
@@
