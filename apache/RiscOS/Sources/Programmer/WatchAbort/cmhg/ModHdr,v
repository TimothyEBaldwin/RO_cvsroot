head	1.2;
access;
symbols
	WatchAbort-0_05:1.2
	WatchAbort-0_04:1.2
	WatchAbort-0_03:1.2
	WatchAbort-0_02:1.1.1.1
	WatchAbort-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2007.05.24.14.16.00;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.17.12.17.27;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.07.17.12.17.27;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Added facility to watch undefined instructions.
Detail:
  Based on the data abort / prefetch abort code. Also has a build-time
  switch (currently on) to ignore FPA instructions.
Admin:
  Tested briefly.

Version 0.03. Tagged as 'WatchAbort-0_03'
@
text
@; Copyright 2001 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
#include "VersionNum"

initialisation-code:    Module_Init

finalisation-code:      Module_Final

title-string:		WatchAbort

help-string:		WatchAbort Module_MajorVersion_CMHG Module_MinorVersion_CMHG

date-string:		Module_Date_CMHG

command-keyword-table:  Module_Commands ShowDataAbort(), ShowPreFetchAbort(), ShowUndefined
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
command-keyword-table:  Module_Commands ShowDataAbort(), ShowPreFetchAbort()
@


1.1.1.1
log
@  Initial import of WatchAbort module, a debugging aid.
Detail:
  The C runtime system claims the abort handlers, so if an abort happens
  while the current application is written in C (which is a lot of the time
  for embedded systems), the kernel's register dump doesn't get filled in,
  making debugging harder. This module sits on the hardware vectors and notes
  the contents of all registers in all modes (except the mode the vector is
  called in, of course). Currently data aborts and prefetch aborts are
  handled, though undefined instructions and branches through 0 could be
  added fairly easily. Note, however, that you get "false positives" when
  lazy schemes (for aborts) or emulated instructions (for undefined traps)
  are in use - ideally, the whole abort system would be overhauled so that
  this module is no longer necessary.
Admin:
  Module name and star commands have not been registered.
@
text
@@
