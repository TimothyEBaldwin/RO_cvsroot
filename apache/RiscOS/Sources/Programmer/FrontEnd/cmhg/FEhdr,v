head	1.4;
access;
symbols
	FrontEnd-1_34:1.4
	FrontEnd-1_33:1.3
	FrontEnd-1_32:1.3
	FrontEnd-1_31:1.3
	FrontEnd-1_30-2:1.3
	FrontEnd-1_30:1.3
	FrontEnd-1_29:1.3
	FrontEnd-1_28:1.3
	FrontEnd-1_27:1.3
	FrontEnd-1_26:1.3
	FrontEnd-1_25:1.3
	FrontEnd-1_24:1.3
	FrontEnd-1_23:1.2
	FrontEnd-1_22:1.2
	FrontEnd-1_21:1.2
	FrontEnd-1_20:1.2
	FrontEnd-1_19:1.2
	FrontEnd-1_18:1.2
	FrontEnd-1_17:1.2
	FrontEnd-1_16:1.2
	FrontEnd-Aquarius-1_16:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.12.16.09.37.00;	author rool;	state Exp;
branches;
next	1.3;
commitid	HC348gxkM0Bia6jA;

1.3
date	2001.06.01.12.53.45;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	99.03.18.12.38.48;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	99.03.18.10.30.28;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.03.18.10.30.28;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add some FrontEnd syntax
Detail:
  The syntax string was in help, and no help given. Add/ammend these.
Admin:
  Spotted during User Guide command summary review.

Version 1.34. Tagged as 'FrontEnd-1_34'
@
text
@; Copyright 1999 Element 14 Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Title:   cmhg.FEHdr
; Purpose: module header for the generalised front end module
; Author:  IDJ
; History: 06-Apr-90: IDJ: created
;          21-May-90: IDJ: added frontend_setup
;          06-Jul-90: IDJ: added SWI FrontEnd_ExtendedCmdLine
;
;          Re-release
;          19-Nov-91: IDJ: version 1.14
;
;          Acorn C/C++:
;          24-Nov-94: IDJ: version 1.15
;          20-Dec-94: IDJ: version 1.16
;
#include "VersionNum"


module-is-runnable:                               ; module start code

initialisation-code:            FrontEnd_init
finalisation-code:              FrontEnd_final

service-call-handler:           FrontEnd_services  0x11; service-memory

title-string:                   FrontEnd

help-string:                    DDE_FrontEnd  1.16

help-string: 		        DDE_FrontEnd  Module_MajorVersion_CMHG Module_MinorVersion_CMHG

date-string: 		        Module_Date_CMHG


command-keyword-table:          FrontEnd_commands
                                FrontEnd_Start(min-args: 4, max-args: 5, add-syntax:,
                                               help-text: "*FrontEnd_Start creates a new application by starting a new instance of the FrontEnd module.\r"
                                               invalid-syntax: "Syntax: *FrontEnd_Start -app <appname> -desc <filename> [input file]"),
                                FrontEnd_Setup(min-args: 10, max-args: 10, add-syntax:,
                                               help-text: "*FrontEnd_Setup runs a front end application as a child of another by starting a new instance of the FrontEnd module.\r"
                                               invalid-syntax: "Syntax: *FrontEnd_Setup -app <appname> -desc <filename> -task <task-id> -handle <handle> -toolflags <filename>")

swi-chunk-base-number:          0x081400

swi-handler-code:               FrontEnd_SWI_handler

swi-decoding-table:             FrontEnd, ExtendedCmdLine, FreeCmdLine


@


1.3
log
@  Refuses to die if in use.
Detail:
  A new flag in the application structure is set if an application is
  running. Finalisation code checks this flag and if set, raises an
  error, stopping the module from dying. This should prevent anyone
  accidentally loading the module when applications which are using it
  are running.
Admin:
  Tested via. various killing methods (*RMKill at CLI and in a task
  window, reloading the module) whilst applications were and were not
  running. Behaviour followed expectations.

  Beware that FrontEnd 1.23 and earlier do not have this protection in;
  before loading 1.24 at run-time, ensure you have quitted any apps that
  are using it (see instantiations for FrontEnd in the *Modules list).

Version 1.24. Tagged as 'FrontEnd-1_24'
@
text
@d49 6
a54 4
                                FrontEnd_Start(min-args: 4, max-args: 5,
                                               help-text: "Syntax\tFrontEnd_Start -app <appname> -desc <filename> [input file]\n"),
                                FrontEnd_Setup(min-args: 10, max-args: 10,
                                               help-text: "Syntax\tFrontEnd_Setup -app <appname> -desc <filename> -task <task-id> -handle <handle> -toolflags <filename>\n")
@


1.2
log
@Build structure standardised.
This source set will actually build using the latest RISC_OSlib.
Functionally equivalent to FrontEnd-Aquarius-1_16.
Moved to srccommit.

Tagged as FrontEnd-1_16.
@
text
@d35 1
@


1.1
log
@Initial revision
@
text
@d29 1
d41 5
@


1.1.1.1
log
@  Initial import of FrontEnd module to CVS from Aquarius.
Detail:
  Code claims to build FrontEnd 1.16 (11 Jan 1995), but will not
    build in current build environment.
Admin:
  Does not compile - checked in for reference purposes only.
  Tagged appropriately.  Use tag FrontEnd-1_16 to extract version
    which builds in the current build environment.

Tagged as FrontEnd-Aquarius-1_16


@
text
@@
