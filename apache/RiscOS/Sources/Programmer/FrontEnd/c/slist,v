head	1.3;
access;
symbols
	FrontEnd-1_34:1.3
	FrontEnd-1_33:1.3
	FrontEnd-1_32:1.3
	FrontEnd-1_31:1.3
	FrontEnd-1_30-2:1.3
	FrontEnd-1_30:1.2
	FrontEnd-1_29:1.2
	FrontEnd-1_28:1.2
	FrontEnd-1_27:1.2
	FrontEnd-1_26:1.2
	FrontEnd-1_25:1.2
	FrontEnd-1_24:1.2
	FrontEnd-1_23:1.2
	FrontEnd-1_22:1.2
	FrontEnd-1_21:1.2
	FrontEnd-1_20:1.2
	FrontEnd-1_19:1.2
	FrontEnd-1_18:1.2
	FrontEnd-1_17:1.2
	FrontEnd-1_16:1.2
	FrontEnd-Aquarius-1_16:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2009.06.11.21.45.20;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	99.03.18.12.38.47;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	99.03.18.10.30.27;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.03.18.10.30.27;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  GET file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both objasm and asasm.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 1.30. Not tagged
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> c.Slist
 * Title:       Slist - singly-linked lists
 * Author:      JGT (converted from MJJ)
 *
 */

#include <stdio.h>
#include "slist.h"

typedef struct listrec * ListPtr;

struct listrec
{
  ListPtr next;
};

#define next_(p) (((ListPtr)p)->next)

void *slist_add(void *listhead, void *newelement)
{
   next_(newelement) = listhead;
   return newelement;
}

void * slist_addend(void *listhead, void *newelement)
{
   void *t, *tf;

   next_(newelement) = NULL;
   if (!listhead) return newelement;
   t = listhead;
   do
   {
     tf = next_(t);
     if (!tf) break;
     t = tf;
   } while (1);
   next_(t) = newelement;
   return listhead;
}

void *slist_remove(void *listhead, void *element)
{
void *t, *tf;

   if (!listhead) return NULL;
   if (listhead == element) return next_(listhead);
   t = listhead;
   do
   {
     tf = next_(t);
     if (!tf) return listhead;
     if (tf == element)
     {
       /* match - remove it */
       next_(t) = next_(tf);
       return listhead;
     };
     t = tf; /* onto next */
   } while (1);
}

void *slist_joinend(void *listhead, void *newlist)
{
   void *t, *tf;

   if (!listhead) return newlist;
   t = listhead;
   do
   {
     tf = next_(t);
     if (!tf) break;
     t = tf;
   } while (1);
   next_(t) = newlist;
   return listhead;
}
@


1.2
log
@Build structure standardised.
This source set will actually build using the latest RISC_OSlib.
Functionally equivalent to FrontEnd-Aquarius-1_16.
Moved to srccommit.

Tagged as FrontEnd-1_16.
@
text
@d22 1
a22 1
#include "h.slist"
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
typedef struct listrec
@


1.1.1.1
log
@  Initial import of FrontEnd module to CVS from Aquarius.
Detail:
  Code claims to build FrontEnd 1.16 (11 Jan 1995), but will not
    build in current build environment.
Admin:
  Does not compile - checked in for reference purposes only.
  Tagged appropriately.  Use tag FrontEnd-1_16 to extract version
    which builds in the current build environment.

Tagged as FrontEnd-Aquarius-1_16


@
text
@@
