head	1.4;
access;
symbols
	FrontEnd-1_34:1.4
	FrontEnd-1_33:1.4
	FrontEnd-1_32:1.4
	FrontEnd-1_31:1.4
	FrontEnd-1_30-2:1.4
	FrontEnd-1_30:1.4
	FrontEnd-1_29:1.4
	FrontEnd-1_28:1.4
	FrontEnd-1_27:1.4
	FrontEnd-1_26:1.3
	FrontEnd-1_25:1.3
	FrontEnd-1_24:1.3
	FrontEnd-1_23:1.3
	FrontEnd-1_22:1.2
	FrontEnd-1_21:1.1.1.1
	FrontEnd-1_20:1.1.1.1
	FrontEnd-1_19:1.1.1.1
	FrontEnd-1_18:1.1.1.1
	FrontEnd-1_17:1.1.1.1
	FrontEnd-1_16:1.1.1.1
	FrontEnd-Aquarius-1_16:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2001.06.15.17.25.01;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.22.13.58.41;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.11.15.37.35;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	99.03.18.10.30.32;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.03.18.10.30.32;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@  Finally got the rules stuff sorted. Hurrah.
Detail:
  A few tricks to this; maintain a usage count for greying/ungreying where
  the initial state for an icon is zero, meaning 'unknown', and going to
  either < or > 0 thereafter once the state is determined. That's done
  at load-time from the Defaults and Choices settings. In addition, the
  module has to know when an icon is part of a selection group - normally
  this means a radio button - and detects that when this is happening, the
  'off' rules for items deselected by the selection of another should *not*
  be run. This makes a great deal of difference to behaviour, which is now
  a lot more straightforward and a lot clearer in the code itself.

  The caveat of this is that exclude on = include off / exclude off =
  include on, which never worked before, now should; you can infact totally
  remove inclusion support internally beyond leaving it as syntactic sugar
  for the Desc file by undefining INCLUDES_AS_INCLUDES when building. By
  default, this isn't done, as there's an omission in this work. Since any
  item judged to be in a selection group will not have its Off rules run
  (or On rules unwound IYSWIM) then *any* off item for a radio won't be
  run. What FrontEnd *should* do is compare the list of icons altered by
  the selecting item's selection rules and only run rules for the
  deselecting items that are not part of the other list. It doesn't do
  this, which creates a slight lack of orthogonality overall. It's minor.
Admin:
  Tested it as heavily as I easily can in UpgCreate. Ensured that Link
  still works. Had a quick look at menu behaviour (sane); brought Docs up
  to date.

Version 1.27. Tagged as 'FrontEnd-1_27'
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:    gen.h
 * Purpose:  To generate a data structure describing an application
 * Author:   IDJ
 * History:  9-Apr-90: IDJ: Created
 *           19-Mar-91: IDJ: added "prefix_by" to icons and menu entries
 *           11-May-01: ADH: added gen_ctrlchars and gen_tabwidth
 *
 */

#ifndef __gen_h
#define __gen_h

#ifndef __lexer_h
#include "lexer.h"
#endif

#ifndef __bool_h
#include "bool.h"
#endif

extern void gen_appname(lexer_token *token);
extern void gen_appcommand(lexer_token *token);
extern void gen_version(lexer_token *token);
extern void gen_filetype(lexer_token *token);
extern void gen_wimpslot(lexer_token *token);
extern void gen_extended_cmdline(void);
extern void gen_autorun(void);
extern void gen_autosave(void);
extern void gen_setautorun(lexer_token *token);
extern void gen_setautosave(lexer_token *token);
extern void gen_leafname(void);
extern void gen_numhats(int n);
extern void gen_saveprefix(lexer_token *token);
extern void gen_savesuffix(lexer_token *token);
extern void gen_savefrom(lexer_token *token);
extern void gen_outname(lexer_token *token);
extern void gen_produces_output_dft(lexer_token *token);
extern void gen_outputwindow(void);
extern void gen_summarywindow(void);
extern void gen_displaydft(lexer_token *token);
extern void gen_ctrlchars(lexer_token *token);
extern void gen_tabwidth(lexer_token *token);
extern void gen_dbox(void);
extern void gen_outputoption(lexer_token *token);
extern void gen_icon(lexer_token *token);
extern void gen_mapstring(lexer_token *token);
extern void gen_mapstring_off(lexer_token *token);
extern void gen_conversion(lexer_token *token);
extern void gen_minval(lexer_token *token);
extern void gen_maxval(lexer_token *token);
extern void gen_followiconspaces(void);
extern void gen_followiconspaces_off(void);
extern void gen_followicon(lexer_token *token, BOOL off);
extern void gen_separator(lexer_token *token);
extern void gen_separator_off(lexer_token *token);
extern void gen_icon_prefix(lexer_token *token);
extern void gen_iconproducesnooutput(void);
extern void gen_iconproducesoutput(void);
extern void gen_iconnotsaved(void);
extern void gen_changesicon(lexer_token *token, int updown);
extern void gen_extends(int icon);
extern void gen_extendsfrom(lexer_token *token);
extern void gen_extendsto(lexer_token *token);
extern void gen_by(lexer_token *token);
extern void gen_insertliteral(lexer_token *token);
extern void gen_icondefaults(lexer_token *token, int icn);
extern void gen_make_icondefaults(lexer_token *token, int icn);

typedef void (*gen_icon_dsei_ptr) (int value, int menu_or_icon);

extern void gen_icon_setdsei(int value);
extern void gen_icon_deselects(int value, int menu_or_icon);
extern void gen_icon_deselects_off(int value, int menu_or_icon);
extern void gen_icon_selects(int value, int menu_or_icon);
extern void gen_icon_selects_off(int value, int menu_or_icon);
extern void gen_icon_excludes(int value, int menu_or_icon);
extern void gen_icon_excludes_off(int value, int menu_or_icon);

#ifdef INCLUDES_AS_INCLUDES
   extern void gen_icon_includes(int value, int menu_or_icon);
   extern void gen_icon_includes_off(int value, int menu_or_icon);
#endif

extern void gen_menu_setdsei(int value);
extern void gen_menu_deselects(int value, int menu_or_icon);
extern void gen_menu_deselects_off(int value, int menu_or_icon);
extern void gen_menu_selects(int value, int menu_or_icon);
extern void gen_menu_selects_off(int value, int menu_or_icon);
extern void gen_menu_excludes(int value, int menu_or_icon);
extern void gen_menu_excludes_off(int value, int menu_or_icon);

#ifdef INCLUDES_AS_INCLUDES
   extern void gen_menu_includes(int value, int menu_or_icon);
   extern void gen_menu_includes_off(int value, int menu_or_icon);
#endif

extern void gen_make_excludes(lexer_token *token, int menu_or_icon);

extern void gen_wildcard(lexer_token *token);
extern void gen_dragto(lexer_token *token);
extern void gen_insert(lexer_token *token);
extern void gen_dragseparator(lexer_token *token);
extern void gen_menuentry(void);
extern void gen_addmenutext(lexer_token *token);
extern void gen_menumapsto(lexer_token *token);
extern void gen_menumapsto_off(lexer_token *token);
extern void gen_subtext(lexer_token *token);
extern void gen_menubufsize(lexer_token *token);
extern void gen_menu_prefix(lexer_token *token);
extern void gen_menuproducesnooutput(void);
extern void gen_menuproducesoutput(void);
extern void gen_menunotsaved(void);
extern void gen_menudefaults(lexer_token *token, int m);
extern void gen_make_menudefaults(lexer_token *token, int m);
extern void gen_sub_menudefaults(lexer_token *token, int m);
extern void gen_make_sub_menudefaults(lexer_token *token, int m);
extern void gen_orderis(lexer_token *token, int menu_or_icn, BOOL make_order);
#endif
@


1.3
log
@  Great many changes and a few fixes.
Detail:
  See 'ReadMe' in the Docs directory. Summary - new includes and selections
  rules, rules_start/rules_end section, lists before rules keywords, actions
  can take place when icons go off as well as on, and more.
Admin:
  Tested new features a reasonable amount by playing around with the UpgFetch
  front-end. Link still behaves as it should, and all the other Desktop tools
  run without any parser errors or obvious faults in behaviour.


Version 1.23. Tagged as 'FrontEnd-1_23'
@
text
@d92 5
a96 2
extern void gen_icon_includes(int value, int menu_or_icon);
extern void gen_icon_includes_off(int value, int menu_or_icon);
d105 5
a109 2
extern void gen_menu_includes(int value, int menu_or_icon);
extern void gen_menu_includes_off(int value, int menu_or_icon);
@


1.2
log
@  Improved redraw strategy; added 'quoted_string' option for icons, plus
  'ctrl_chars' and 'tab_width' for metaoptions.
Detail:
  Previously the redraw engine stayed one line behind current output as it
  did not know where to terminate redraw of the current line. At task exit
  it forced \n\r into the output to flush the last line. Now, the incoming
  data buffer is oversized by 1 byte and a \0 written in to give the redraw
  engine something to stop at. This allows it to redraw the current line,
  meaning e.g. "....[...]" progress indicators and so-on will work. It also
  means the \r\n hack isn't needed so saved output doesn't have a spurious
  blank line.

  For 'icn <n> maps_to ...' you can now say 'quoted_string' where you used
  to say 'string'. This encloses the relevant writable field's text in
  double quotes, escaping any double quotes from the writable with '\'. If
  you use 'prefix_by', all of the prefixes and strings are within the
  double quotes (rather than e.g. enclosing each item individually).

  Previously, control characters were output more or less directly. This
  could cause a crash for some nasty ones (e.g. send output to printer)
  or just cause redraw corruptions and the bell to ring. Now, any control
  characters are replaced with "?" by default, including &7F, except for
  tab (&09), which is replaced with a single space. Behaviour is chosen by
  the "ctrl_chars" metaoption, which takes parameters "text" for the usual
  behaviour as described, "escape" for !Edit-style "[aa]" escaping, or
  "hide" to not draw anything at all (so e.g. put "ctrl_chars escape" in
  your metaoptions section of the Desc file). Another new option is
  "tab_width"; tabs are now understood for all three output types. To
  avoid unduly changing existing output the default tab width is 1, but it
  can be 0 to hide tabs, or up to 32. The limit is arbitrary and only in
  place to stop the redraw engine trying to do silly things if given a
  very large value.

  Finally, lexer.c's list of text items was mirrored in lexer.h by a list
  of numbered items - all done by #define, so you had to manually renumber
  them all! This has been changed to an enum, with compiled output checked
  against the previous version - identical as expected.
Admin:
  Remember, you MUST NOT soft load this if you have any FrontEnd apps
  running already! Either quit them all (check there are no instantiations
  with *Modules) and then run it, or put it in !System and reboot. The new
  features have been tested with a work-in-progress !UpgCreate utility,
  and the usual set of DDE apps run to ensure they don't give any syntax
  errors. GNUDiff and Find tested fairly heavily. Builds ROM and RAM
  variants from clean.


Version 1.22. Tagged as 'FrontEnd-1_22'
@
text
@d35 5
a39 5
extern void gen_appname(lexer_token token);
extern void gen_appcommand(lexer_token token);
extern void gen_version(lexer_token token);
extern void gen_filetype(lexer_token token);
extern void gen_wimpslot(lexer_token token);
d43 2
a44 2
extern void gen_setautorun(lexer_token token);
extern void gen_setautosave(lexer_token token);
d47 5
a51 5
extern void gen_saveprefix(lexer_token token);
extern void gen_savesuffix(lexer_token token);
extern void gen_savefrom(lexer_token token);
extern void gen_outname(lexer_token token);
extern void gen_produces_output_dft(lexer_token token);
d54 3
a56 3
extern void gen_displaydft(lexer_token token);
extern void gen_ctrlchars(lexer_token token);
extern void gen_tabwidth(lexer_token token);
d58 7
a64 6
extern void gen_outputoption(lexer_token token);
extern void gen_icon(lexer_token token);
extern void gen_mapstring(lexer_token token);
extern void gen_conversion(lexer_token token);
extern void gen_minval(lexer_token token);
extern void gen_maxval(lexer_token token);
d66 5
a70 3
extern void gen_followicon(lexer_token token);
extern void gen_separator(lexer_token token);
extern void gen_icon_prefix(lexer_token token);
d74 1
a74 1
extern void gen_changesicon(lexer_token token, int updown);
d76 35
a110 19
extern void gen_extendsfrom(lexer_token token);
extern void gen_extendsto(lexer_token token);
extern void gen_by(lexer_token token);
extern void gen_insertliteral(lexer_token token);
extern void gen_icondefaults(lexer_token token, int icn);
extern void gen_make_icondefaults(lexer_token token, int icn);
extern void gen_icon_setdeselects(lexer_token token);
extern void gen_icon_deselects(lexer_token token, int menu_or_icon);
extern void gen_icon_setexcludes(lexer_token token);
extern void gen_icon_excludes(lexer_token token, int menu_or_icon);
extern void gen_make_excludes(lexer_token token, int menu_or_icon);
extern void gen_menu_setdeselects(lexer_token token);
extern void gen_menu_deselects(lexer_token token, int menu_or_icon);
extern void gen_menu_setexcludes(lexer_token token);
extern void gen_menu_excludes(lexer_token token, int menu_or_icon);
extern void gen_wildcard(lexer_token token);
extern void gen_dragto(lexer_token token);
extern void gen_insert(lexer_token token);
extern void gen_dragseparator(lexer_token token);
d112 6
a117 5
extern void gen_addmenutext(lexer_token token);
extern void gen_menumapsto(lexer_token token);
extern void gen_subtext(lexer_token token);
extern void gen_menubufsize(lexer_token token);
extern void gen_menu_prefix(lexer_token token);
d121 5
a125 5
extern void gen_menudefaults(lexer_token token, int m);
extern void gen_make_menudefaults(lexer_token token, int m);
extern void gen_sub_menudefaults(lexer_token token, int m);
extern void gen_make_sub_menudefaults(lexer_token token, int m);
extern void gen_orderis(lexer_token token, int menu_or_icn, BOOL make_order);
@


1.1
log
@Initial revision
@
text
@d20 1
d55 2
@


1.1.1.1
log
@  Initial import of FrontEnd module to CVS from Aquarius.
Detail:
  Code claims to build FrontEnd 1.16 (11 Jan 1995), but will not
    build in current build environment.
Admin:
  Does not compile - checked in for reference purposes only.
  Tagged appropriately.  Use tag FrontEnd-1_16 to extract version
    which builds in the current build environment.

Tagged as FrontEnd-Aquarius-1_16


@
text
@@
