head	1.4;
access;
symbols
	FrontEnd-1_34:1.4
	FrontEnd-1_33:1.4
	FrontEnd-1_32:1.4
	FrontEnd-1_31:1.4
	FrontEnd-1_30-2:1.4
	FrontEnd-1_30:1.4
	FrontEnd-1_29:1.4
	FrontEnd-1_28:1.4
	FrontEnd-1_27:1.4
	FrontEnd-1_26:1.4
	FrontEnd-1_25:1.4
	FrontEnd-1_24:1.4
	FrontEnd-1_23:1.3
	FrontEnd-1_22:1.2
	FrontEnd-1_21:1.1.1.1
	FrontEnd-1_20:1.1.1.1
	FrontEnd-1_19:1.1.1.1
	FrontEnd-1_18:1.1.1.1
	FrontEnd-1_17:1.1.1.1
	FrontEnd-1_16:1.1.1.1
	FrontEnd-Aquarius-1_16:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2001.06.01.12.53.45;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.22.13.58.41;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.11.15.37.35;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	99.03.18.10.30.32;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.03.18.10.30.32;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@  Refuses to die if in use.
Detail:
  A new flag in the application structure is set if an application is
  running. Finalisation code checks this flag and if set, raises an
  error, stopping the module from dying. This should prevent anyone
  accidentally loading the module when applications which are using it
  are running.
Admin:
  Tested via. various killing methods (*RMKill at CLI and in a task
  window, reloading the module) whilst applications were and were not
  running. Behaviour followed expectations.

  Beware that FrontEnd 1.23 and earlier do not have this protection in;
  before loading 1.24 at run-time, ensure you have quitted any apps that
  are using it (see instantiations for FrontEnd in the *Modules list).

Version 1.24. Tagged as 'FrontEnd-1_24'
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   global.h
 * Purpose: global definitions
 * Author:  IDJ
 * History: 20-Apr-90: IDJ: created
 *          11-May-01: ADH: added application flags for control code handling
 *                          and an icon flag for quoted_string
 *
 */

#ifndef __global_h
#define __global_h

#ifndef __wimp_h
#include "wimp.h"
#endif

#ifndef __wimpt_h
#include "wimpt.h"
#endif

#ifndef __bbc_h
#include "bbc.h"
#endif

#define IGNORE(x)  (x=x)

#define VARIABLE_LENGTH_TOKENS 1

/* distinguishing menus and icons */
#define  IS_MENU   0
#define  IS_ICON   1
#define  IS_STRING 2
#define  IS_OUTPUT 3

/* application flags */
#define  AF_HAS_OUTPUT_WINDOW      0x00000001   /* application has a text output window */
#define  AF_HAS_SUMMARY_WINDOW     0x00000002   /*     "        "  " summary       "    */
#define  AF_DFT_SUMMARY            0x00000004   /* default display is a summary window  */
#define  AF_HAS_AUTORUN            0x00000008   /* app. can run when file dragged on    */
#define  AF_HAS_AUTOSAVE           0x00000010   /* app. can save without asking where   */
#define  AF_AUTORUN                0x00000020   /* auto-run picked as default opn.      */
#define  AF_AUTOSAVE               0x00000040   /* auto-save "      "   "      "        */
#define  AF_MAKE                   0x00000080   /* invoked by msg. from !Make           */
#define  AF_NO_OUTPUT              0x00000100   /* produce no saveas dbox               */
#define  AF_LEAFNAME               0x00000200   /* leafname is used in output name      */
#define  AF_EXTENDED_CMDLINE       0x00000400   /* uses extended cmdline                */
#define  AF_DFT_PRODUCES_OUTPUT    0x00000800   /* produces output by default?          */
#define  AF_ESCAPE_CTRL_CHARS      0x00001000   /* escape control chars when redrawing? */
#define  AF_HIDE_CTRL_CHARS        0x00002000   /* hide control chars when redrawing?   */
#define  AF_I_AM_ACTIVE            0x00004000   /* set if the application is running    */


/* icon flags */
#define  ANY_ICON                  (-1)
#define  ICONBAR_ICON              (-2)
#define  IF_STRING                 0x00000001   /* icon contents are string             */
#define  IF_NUMBER                 0x00000002   /*  "     "      "   integer            */
#define  IF_ARROWUP                0x00000004   /* icon increases another icon          */
#define  IF_ARROWDOWN              0x00000008   /*   "  decreases   "      "            */
#define  IF_EXTENDS                0x00000010   /*   "  icon extends the dbox           */
#define  IF_SPACES                 0x00000020   /* option is followed by spaces         */
#define  IF_FOLLOWSPACES           0x00000040   /* spaces before any extra icons        */
#define  IF_FOLLOW                 0x00000080   /* icon follows some other in cmdline   */
#define  IF_PRODUCES_OUTPUT        0x00000100   /* when selected, produces output       */
#define  IF_PRODUCES_NO_OUTPUT     0x00000200   /* when selected, produce no output     */
#define  IF_SELECTED               0x00000400   /* icon is selected                     */
#define  IF_FADED                  0x00000800   /* icon is faded (non-selectable)       */
#define  IF_MAKE_EXCLUDES          0x00001000   /* icon is excluded if called from make */
#define  IF_NOT_SAVED              0x00002000   /* option state not saved               */
#define  IF_QUOTED_STRING          0x00004000   /* icon contents = string to be quoted  */
#define  IF_DEFAULT_GIVEN          0x00008000   /* a default value was explicitly given */
#define  IF_FOLLOWSPACES_OFF       0x00010000   /* as IF_FOLLOWSPACES but for OFF items */


/* task flags */
#define  TF_Running        0x00000001
#define  TF_Aborted        0x00000002
#define  TF_Paused         0x00000004
#define  TF_Completed      0x00000008
#define  TF_Dead           0x00000010           /* task has been killed off by closing
                                                   its output window, but data structure
                                                   still around, til we get a morio msg
                                                 */
#define  TF_Unsaved_Output 0x00000020           /* output has been produced but not yet
                                                   saved
                                                 */


/* useful macros */
#define is_writeable_indirecttext(wi)  ((wi->flags & wimp_INDIRECT) && (wi->flags & wimp_ITEXT) \
                                         && ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BWRITABLE * wimp_IBTYPE))
#define is_click(wi)                   ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BCLICKDEBOUNCE * wimp_IBTYPE)
#define is_autorepeat(wi)              ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BCLICKAUTO * wimp_IBTYPE)
#define is_menu(wi)                    ((wi->flags & (15 * wimp_IBTYPE)) == wimp_BSELNOTIFY * wimp_IBTYPE)
#define sysfont_height                 (wimpt_dy() * bbc_vduvar(bbc_GCharSpaceY))
#define sysfont_width                  (wimpt_dx() * bbc_vduvar(bbc_GCharSpaceX))
#define min(a,b)                       ((a<b)?a:b)
#ifdef TEST_RELEASE
#define assert(c,m)  FEinterr_assert(c,m,__FILE__,__LINE__);
#else
#define assert(c,m)
#endif

/* global constants */
#define MAXFILENAME   256
#define MAXCMDLINE  256       /* this is the RISCOS imposed CLI limit (sod it) */

#endif


@


1.3
log
@  Great many changes and a few fixes.
Detail:
  See 'ReadMe' in the Docs directory. Summary - new includes and selections
  rules, rules_start/rules_end section, lists before rules keywords, actions
  can take place when icons go off as well as on, and more.
Admin:
  Tested new features a reasonable amount by playing around with the UpgFetch
  front-end. Link still behaves as it should, and all the other Desktop tools
  run without any parser errors or obvious faults in behaviour.


Version 1.23. Tagged as 'FrontEnd-1_23'
@
text
@d64 1
@


1.2
log
@  Improved redraw strategy; added 'quoted_string' option for icons, plus
  'ctrl_chars' and 'tab_width' for metaoptions.
Detail:
  Previously the redraw engine stayed one line behind current output as it
  did not know where to terminate redraw of the current line. At task exit
  it forced \n\r into the output to flush the last line. Now, the incoming
  data buffer is oversized by 1 byte and a \0 written in to give the redraw
  engine something to stop at. This allows it to redraw the current line,
  meaning e.g. "....[...]" progress indicators and so-on will work. It also
  means the \r\n hack isn't needed so saved output doesn't have a spurious
  blank line.

  For 'icn <n> maps_to ...' you can now say 'quoted_string' where you used
  to say 'string'. This encloses the relevant writable field's text in
  double quotes, escaping any double quotes from the writable with '\'. If
  you use 'prefix_by', all of the prefixes and strings are within the
  double quotes (rather than e.g. enclosing each item individually).

  Previously, control characters were output more or less directly. This
  could cause a crash for some nasty ones (e.g. send output to printer)
  or just cause redraw corruptions and the bell to ring. Now, any control
  characters are replaced with "?" by default, including &7F, except for
  tab (&09), which is replaced with a single space. Behaviour is chosen by
  the "ctrl_chars" metaoption, which takes parameters "text" for the usual
  behaviour as described, "escape" for !Edit-style "[aa]" escaping, or
  "hide" to not draw anything at all (so e.g. put "ctrl_chars escape" in
  your metaoptions section of the Desc file). Another new option is
  "tab_width"; tabs are now understood for all three output types. To
  avoid unduly changing existing output the default tab width is 1, but it
  can be 0 to hide tabs, or up to 32. The limit is arbitrary and only in
  place to stop the redraw engine trying to do silly things if given a
  very large value.

  Finally, lexer.c's list of text items was mirrored in lexer.h by a list
  of numbered items - all done by #define, so you had to manually renumber
  them all! This has been changed to an enum, with compiled output checked
  against the previous version - identical as expected.
Admin:
  Remember, you MUST NOT soft load this if you have any FrontEnd apps
  running already! Either quit them all (check there are no instantiations
  with *Modules) and then run it, or put it in !System and reboot. The new
  features have been tested with a work-in-progress !UpgCreate utility,
  and the usual set of DDE apps run to ensure they don't give any syntax
  errors. GNUDiff and Find tested fairly heavily. Builds ROM and RAM
  variants from clean.


Version 1.22. Tagged as 'FrontEnd-1_22'
@
text
@d84 2
@


1.1
log
@Initial revision
@
text
@d19 2
d62 2
d83 1
@


1.1.1.1
log
@  Initial import of FrontEnd module to CVS from Aquarius.
Detail:
  Code claims to build FrontEnd 1.16 (11 Jan 1995), but will not
    build in current build environment.
Admin:
  Does not compile - checked in for reference purposes only.
  Tagged appropriately.  Use tag FrontEnd-1_16 to extract version
    which builds in the current build environment.

Tagged as FrontEnd-Aquarius-1_16


@
text
@@
