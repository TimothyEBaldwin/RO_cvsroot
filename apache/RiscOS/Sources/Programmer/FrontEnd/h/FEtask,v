head	1.1;
branch	1.1.1;
access;
symbols
	FrontEnd-1_34:1.1.1.1
	FrontEnd-1_33:1.1.1.1
	FrontEnd-1_32:1.1.1.1
	FrontEnd-1_31:1.1.1.1
	FrontEnd-1_30-2:1.1.1.1
	FrontEnd-1_30:1.1.1.1
	FrontEnd-1_29:1.1.1.1
	FrontEnd-1_28:1.1.1.1
	FrontEnd-1_27:1.1.1.1
	FrontEnd-1_26:1.1.1.1
	FrontEnd-1_25:1.1.1.1
	FrontEnd-1_24:1.1.1.1
	FrontEnd-1_23:1.1.1.1
	FrontEnd-1_22:1.1.1.1
	FrontEnd-1_21:1.1.1.1
	FrontEnd-1_20:1.1.1.1
	FrontEnd-1_19:1.1.1.1
	FrontEnd-1_18:1.1.1.1
	FrontEnd-1_17:1.1.1.1
	FrontEnd-1_16:1.1.1.1
	FrontEnd-Aquarius-1_16:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	99.03.18.10.30.31;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.03.18.10.30.31;	author sbrodie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   FEtask.h
 * Purpose: running multiple tasks under the task window module
 * Author:  IDJ
 * History: 24-Apr-90: IDJ: created
 *
 */

#ifndef __FEtask_h
#define __FEtask_h

#ifndef __os_h
#include "os.h"
#endif

#ifndef __wimpt_h
#include "wimpt.h"
#endif

#ifndef __bool_h
#include "bool.h"
#endif

#ifndef __types_h
#include "types.h"
#endif


#define TaskModuleSWI 0x808C0

typedef enum 
{
      FEtask_input   = TaskModuleSWI,      /* Parent has input for child */
      FEtask_output  = TaskModuleSWI + 1,  /* Child has output for parent */
      FEtask_ego     = TaskModuleSWI + 2,  /* Child tells parent its name */
      FEtask_morio   = TaskModuleSWI + 3,  /* Child dies */
      FEtask_morite  = TaskModuleSWI + 4,  /* Parent kills child */
      FEtask_newtask = TaskModuleSWI + 5,  /* External agent requests task window */
      FEtask_suspend = TaskModuleSWI + 6,  /* Parent halts child */
      FEtask_resume  = TaskModuleSWI + 7   /* Parent continues child */
} FEtask_action;

typedef struct
{
      int    size;
      char * data;
} FEtask_data;


extern os_error * FEtask_sendchar(Frontend_outputwin *t, char c);
extern void FEtask_dispose(Frontend_task *s);
extern char *FEtask_get_cmdline(Frontend_outputwin *t);
extern char *FEtask_get_extcmdline(Frontend_outputwin *t);
extern char *FEtask_get_tmpfile(Frontend_outputwin *t);
extern char *FEtask_get_outfile(Frontend_outputwin *t);
extern void FEtask_continue(Frontend_outputwin *t);
extern void FEtask_pause(Frontend_outputwin *t);
extern void FEtask_abort(Frontend_outputwin *t);
extern void FEtask_abort_and_dispose(Frontend_outputwin *t);
extern void FEtask_killalltasks(void);
extern int  FEtask_getflags(Frontend_outputwin *w);
extern BOOL FEtask_anyactive(void);
extern void FEtask_request_taskwindow(char taskcmd[], char tmpfile[], char outfile[], char *extcmdline);
extern void FEtask_init(void);

#endif
@


1.1.1.1
log
@  Initial import of FrontEnd module to CVS from Aquarius.
Detail:
  Code claims to build FrontEnd 1.16 (11 Jan 1995), but will not
    build in current build environment.
Admin:
  Does not compile - checked in for reference purposes only.
  Tagged appropriately.  Use tag FrontEnd-1_16 to extract version
    which builds in the current build environment.

Tagged as FrontEnd-Aquarius-1_16


@
text
@@
