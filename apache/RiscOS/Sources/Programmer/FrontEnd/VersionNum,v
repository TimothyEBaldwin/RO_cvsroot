head	1.20;
access;
symbols
	FrontEnd-1_34:1.20
	FrontEnd-1_33:1.19
	FrontEnd-1_32:1.18
	FrontEnd-1_31:1.17
	FrontEnd-1_30-2:1.16
	FrontEnd-1_30:1.15
	FrontEnd-1_29:1.14
	FrontEnd-1_28:1.13
	FrontEnd-1_27:1.12
	FrontEnd-1_26:1.11
	FrontEnd-1_25:1.10
	FrontEnd-1_24:1.9
	FrontEnd-1_23:1.8
	FrontEnd-1_22:1.7
	FrontEnd-1_21:1.6
	FrontEnd-1_20:1.5
	FrontEnd-1_19:1.4
	FrontEnd-1_18:1.3
	FrontEnd-1_17:1.2
	FrontEnd-1_16:1.1;
locks; strict;
comment	@# @;


1.20
date	2017.12.16.09.36.57;	author rool;	state Exp;
branches;
next	1.19;
commitid	HC348gxkM0Bia6jA;

1.19
date	2015.08.01.09.11.53;	author rsprowson;	state Exp;
branches;
next	1.18;
commitid	BuHD1AiFr85xVxvy;

1.18
date	2013.04.04.20.20.30;	author rsprowson;	state Exp;
branches;
next	1.17;
commitid	cngL88ePoJ3TUuKw;

1.17
date	2011.04.03.16.49.27;	author bavison;	state Exp;
branches;
next	1.16;
commitid	iQmytGpPDYDhhpev;

1.16
date	2009.06.11.21.45.19;	author bavison;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.24.01.43.25;	author srevill;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.13.17.32.17;	author ahodgkin;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.17.16.02.01;	author kbracey;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.15.17.24.58;	author ahodgkin;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.01.15.56.00;	author ahodgkin;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.01.14.54.36;	author ahodgkin;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.01.12.53.44;	author ahodgkin;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.22.13.58.39;	author ahodgkin;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.11.15.37.33;	author ahodgkin;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.02.12.05.07;	author sbrodie;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.02.15.57.33;	author kbracey;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.13.14.50.55;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.12.14.14.51;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.10.17.45.27;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	99.03.18.12.38.43;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Add some FrontEnd syntax
Detail:
  The syntax string was in help, and no help given. Add/ammend these.
Admin:
  Spotted during User Guide command summary review.

Version 1.34. Tagged as 'FrontEnd-1_34'
@
text
@/* (1.34)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        1.34
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                16 Dec 2017

#define Module_MajorVersion             "1.34"
#define Module_Version                  134
#define Module_MinorVersion             ""
#define Module_Date                     "16 Dec 2017"

#define Module_ApplicationDate          "16-Dec-17"

#define Module_ComponentName            "FrontEnd"
#define Module_ComponentPath            "castle/RiscOS/Sources/Programmer/FrontEnd"

#define Module_FullVersion              "1.34"
#define Module_HelpVersion              "1.34 (16 Dec 2017)"
#define Module_LibraryVersionInfo       "1:34"
@


1.19
log
@Makefile amendment
Use CUSTOMRES=no to denote no resources.
Get the service call numbers from the Services.h.
Get the image base from AsmUtils.

Version 1.33. Tagged as 'FrontEnd-1_33'
@
text
@d1 1
a1 1
/* (1.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.33
d9 1
a9 1
#define Module_Date_CMHG                01 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "1.33"
#define Module_Version                  133
d14 1
a14 1
#define Module_Date                     "01 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "01-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "1.33"
#define Module_HelpVersion              "1.33 (01 Aug 2015)"
#define Module_LibraryVersionInfo       "1:33"
@


1.18
log
@Makefile correction
During the export headers phase FrontEnd would erroneously export one of its internal header files (which happen to be called FrontEnd) into the exports.

Version 1.32. Tagged as 'FrontEnd-1_32'
@
text
@d1 1
a1 1
/* (1.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.32
d9 1
a9 1
#define Module_Date_CMHG                04 Apr 2013
d11 2
a12 2
#define Module_MajorVersion             "1.32"
#define Module_Version                  132
d14 1
a14 1
#define Module_Date                     "04 Apr 2013"
d16 1
a16 1
#define Module_ApplicationDate          "04-Apr-13"
d21 3
a23 3
#define Module_FullVersion              "1.32"
#define Module_HelpVersion              "1.32 (04 Apr 2013)"
#define Module_LibraryVersionInfo       "1:32"
@


1.17
log
@  Fixed a buffer overrun
Detail:
  A fixed-size, 256-byte buffer was used in generation of the main menu. If
  the text in the menu exceeded this amount, stack corruption occurred,
  leading to unpredictable crashes.
  Changed to use shared makefiles (to make it easy to get a GPA debug listing).
Admin:
  Tested with, and required by, the new version of !ObjAsm.

Version 1.31. Tagged as 'FrontEnd-1_31'
@
text
@d1 1
a1 1
/* (1.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.31
d9 1
a9 1
#define Module_Date_CMHG                03 Apr 2011
d11 2
a12 2
#define Module_MajorVersion             "1.31"
#define Module_Version                  131
d14 1
a14 1
#define Module_Date                     "03 Apr 2011"
d16 1
a16 1
#define Module_ApplicationDate          "03-Apr-11"
d21 3
a23 3
#define Module_FullVersion              "1.31"
#define Module_HelpVersion              "1.31 (03 Apr 2011)"
#define Module_LibraryVersionInfo       "1:31"
@


1.16
log
@  GET file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both objasm and asasm.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 1.30. Not tagged
@
text
@d1 1
a1 1
/* (1.30)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.30
d9 1
a9 1
#define Module_Date_CMHG                11 Jun 2009
d11 2
a12 2
#define Module_MajorVersion             "1.30"
#define Module_Version                  130
d14 1
a14 1
#define Module_Date                     "11 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jun-09"
d21 3
a23 3
#define Module_FullVersion              "1.30"
#define Module_HelpVersion              "1.30 (11 Jun 2009)"
#define Module_LibraryVersionInfo       "1:30"
@


1.15
log
@  Makefile fixes.
Detail:
  Addressed some issues which stopped ROOL Batch One source release from
  working correctly.
Admin:
  Tested in patched Batch One BBE.

Version 1.30. Tagged as 'FrontEnd-1_30'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d9 1
a9 1
#define Module_Date_CMHG                24 May 2007
d14 1
a14 1
#define Module_Date                     "24 May 2007"
d16 1
a16 1
#define Module_ApplicationDate          "24-May-07"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Programmer/FrontEnd"
d22 1
a22 1
#define Module_HelpVersion              "1.30 (24 May 2007)"
@


1.14
log
@  Bug fix, bug aversion, compiles.
Detail:
  "Command line too short" error from DDEUtils down to not including space
  for a terminating NUL character fixed. Nasty crashes due to lines being
  exactly 64 characters long averted, but I don't understand the root cause
  of the fault; changing the parser block size to 128 pushes the problem
  further away. Not ideal but time was short. A few instances of static
  structures initialised to "{}" removed; the C99 compiler disliked them.
Admin:
  !MkBrowse FrontEnd application being developed at the time, provoking
  the above faults. Faults no longer show up, FrontEnd behaves as hoped.

Version 1.29. Tagged as 'FrontEnd-1_29'
@
text
@d1 1
a1 1
/* (1.29)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.29
d9 1
a9 1
#define Module_Date_CMHG                13 Mar 2006
d11 2
a12 2
#define Module_MajorVersion             "1.29"
#define Module_Version                  129
d14 1
a14 1
#define Module_Date                     "13 Mar 2006"
d16 1
a16 1
#define Module_ApplicationDate          "13-Mar-06"
d21 3
a23 3
#define Module_FullVersion              "1.29"
#define Module_HelpVersion              "1.29 (13 Mar 2006)"
#define Module_LibraryVersionInfo       "1:29"
@


1.13
log
@Fixed the same FrontEnd%MLinkLinkLink problem as fixed in version 1.19, but
for FrontEnd_Setup this time (ie when called from !Make).

Version 1.28. Tagged as 'FrontEnd-1_28'
@
text
@d1 1
a1 1
/* (1.28)
d4 1
a4 1
 * Last processed by srccommit version: 1.61.
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.28
d9 1
a9 1
#define Module_Date_CMHG                17 Dec 2001
d11 2
a12 2
#define Module_MajorVersion             "1.28"
#define Module_Version                  128
d14 1
a14 1
#define Module_Date                     "17 Dec 2001"
d16 1
a16 2
#define Module_ApplicationDate2         "17-Dec-01"
#define Module_ApplicationDate4         "17-Dec-2001"
d21 3
a23 3
#define Module_FullVersion              "1.28"
#define Module_HelpVersion              "1.28 (17 Dec 2001)"
#define Module_LibraryVersionInfo       "1:28"
@


1.12
log
@  Finally got the rules stuff sorted. Hurrah.
Detail:
  A few tricks to this; maintain a usage count for greying/ungreying where
  the initial state for an icon is zero, meaning 'unknown', and going to
  either < or > 0 thereafter once the state is determined. That's done
  at load-time from the Defaults and Choices settings. In addition, the
  module has to know when an icon is part of a selection group - normally
  this means a radio button - and detects that when this is happening, the
  'off' rules for items deselected by the selection of another should *not*
  be run. This makes a great deal of difference to behaviour, which is now
  a lot more straightforward and a lot clearer in the code itself.

  The caveat of this is that exclude on = include off / exclude off =
  include on, which never worked before, now should; you can infact totally
  remove inclusion support internally beyond leaving it as syntactic sugar
  for the Desc file by undefining INCLUDES_AS_INCLUDES when building. By
  default, this isn't done, as there's an omission in this work. Since any
  item judged to be in a selection group will not have its Off rules run
  (or On rules unwound IYSWIM) then *any* off item for a radio won't be
  run. What FrontEnd *should* do is compare the list of icons altered by
  the selecting item's selection rules and only run rules for the
  deselecting items that are not part of the other list. It doesn't do
  this, which creates a slight lack of orthogonality overall. It's minor.
Admin:
  Tested it as heavily as I easily can in UpgCreate. Ensured that Link
  still works. Had a quick look at menu behaviour (sane); brought Docs up
  to date.

Version 1.27. Tagged as 'FrontEnd-1_27'
@
text
@d1 1
a1 1
/* (1.27)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.27
d9 1
a9 1
#define Module_Date_CMHG                15 Jun 2001
d11 2
a12 2
#define Module_MajorVersion             "1.27"
#define Module_Version                  127
d14 1
a14 1
#define Module_Date                     "15 Jun 2001"
d16 2
a17 2
#define Module_ApplicationDate2         "15-Jun-01"
#define Module_ApplicationDate4         "15-Jun-2001"
d22 3
a24 2
#define Module_FullVersion              "1.27"
#define Module_HelpVersion              "1.27 (15 Jun 2001)"
@


1.11
log
@  Doh.
Detail:
  Testing "fairly thoroughly" wasn't thoroughly enough. I'd missed two
  tricks; first, it's only necessary to do that last minute inclusion
  unwind and exclusion run at the outer recursion level, and second, it
  must *not* be done if the icon in question is already part of the
  causal link between selection/deselection items - i.e. check it's not
  mentioned in the [i|m]sel / [i|m]desel arrays before proceeding.
Admin:
  More confident of this one!

Version 1.26. Tagged as 'FrontEnd-1_26'
@
text
@d1 1
a1 1
/* (1.26)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.26
d8 1
a8 1
#define Module_Date_CMHG                01 Jun 2001
d10 2
a11 2
#define Module_MajorVersion             "1.26"
#define Module_Version                  126
d13 1
a13 1
#define Module_Date                     "01 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "01-Jun-01"
#define Module_ApplicationDate4         "01-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "1.26"
#define Module_HelpVersion              "1.26 (01 Jun 2001)"
@


1.10
log
@  Extended unwind of include and running of exclude rules.
Detail:
  A large group of items excluded by one single item would all be included
  again when that item was [de]selected. E.g., a radio button is selected
  and excludes (greys out) a group of other icons; it's later deselected, so
  those icons are 'unexcluded' again. Unfortunately this trashes any include
  or exclude rules within that set of icons. To work around it, any item
  that would be included at a given point has its own include rules unwound
  and exclude rules run. Works fine on UpgFetch front-end, but really a full
  and proper recursive system with true infinite recursion detection and
  so-on would be ideal. This is certainly good enough to provide logical
  behaviour and be useful for real interfaces.
Admin:
  Tested fairly thoroughly.

Version 1.25. Tagged as 'FrontEnd-1_25'
@
text
@d1 1
a1 1
/* (1.25)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.25
d10 2
a11 2
#define Module_MajorVersion             "1.25"
#define Module_Version                  125
d21 2
a22 2
#define Module_FullVersion              "1.25"
#define Module_HelpVersion              "1.25 (01 Jun 2001)"
@


1.9
log
@  Refuses to die if in use.
Detail:
  A new flag in the application structure is set if an application is
  running. Finalisation code checks this flag and if set, raises an
  error, stopping the module from dying. This should prevent anyone
  accidentally loading the module when applications which are using it
  are running.
Admin:
  Tested via. various killing methods (*RMKill at CLI and in a task
  window, reloading the module) whilst applications were and were not
  running. Behaviour followed expectations.

  Beware that FrontEnd 1.23 and earlier do not have this protection in;
  before loading 1.24 at run-time, ensure you have quitted any apps that
  are using it (see instantiations for FrontEnd in the *Modules list).

Version 1.24. Tagged as 'FrontEnd-1_24'
@
text
@d1 1
a1 1
/* (1.24)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.24
d10 2
a11 2
#define Module_MajorVersion             "1.24"
#define Module_Version                  124
d21 2
a22 2
#define Module_FullVersion              "1.24"
#define Module_HelpVersion              "1.24 (01 Jun 2001)"
@


1.8
log
@  Great many changes and a few fixes.
Detail:
  See 'ReadMe' in the Docs directory. Summary - new includes and selections
  rules, rules_start/rules_end section, lists before rules keywords, actions
  can take place when icons go off as well as on, and more.
Admin:
  Tested new features a reasonable amount by playing around with the UpgFetch
  front-end. Link still behaves as it should, and all the other Desktop tools
  run without any parser errors or obvious faults in behaviour.


Version 1.23. Tagged as 'FrontEnd-1_23'
@
text
@d1 1
a1 1
/* (1.23)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.23
d8 1
a8 1
#define Module_Date_CMHG                22 May 2001
d10 2
a11 2
#define Module_MajorVersion             "1.23"
#define Module_Version                  123
d13 1
a13 1
#define Module_Date                     "22 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "22-May-01"
#define Module_ApplicationDate4         "22-May-2001"
d21 2
a22 2
#define Module_FullVersion              "1.23"
#define Module_HelpVersion              "1.23 (22 May 2001)"
@


1.7
log
@  Improved redraw strategy; added 'quoted_string' option for icons, plus
  'ctrl_chars' and 'tab_width' for metaoptions.
Detail:
  Previously the redraw engine stayed one line behind current output as it
  did not know where to terminate redraw of the current line. At task exit
  it forced \n\r into the output to flush the last line. Now, the incoming
  data buffer is oversized by 1 byte and a \0 written in to give the redraw
  engine something to stop at. This allows it to redraw the current line,
  meaning e.g. "....[...]" progress indicators and so-on will work. It also
  means the \r\n hack isn't needed so saved output doesn't have a spurious
  blank line.

  For 'icn <n> maps_to ...' you can now say 'quoted_string' where you used
  to say 'string'. This encloses the relevant writable field's text in
  double quotes, escaping any double quotes from the writable with '\'. If
  you use 'prefix_by', all of the prefixes and strings are within the
  double quotes (rather than e.g. enclosing each item individually).

  Previously, control characters were output more or less directly. This
  could cause a crash for some nasty ones (e.g. send output to printer)
  or just cause redraw corruptions and the bell to ring. Now, any control
  characters are replaced with "?" by default, including &7F, except for
  tab (&09), which is replaced with a single space. Behaviour is chosen by
  the "ctrl_chars" metaoption, which takes parameters "text" for the usual
  behaviour as described, "escape" for !Edit-style "[aa]" escaping, or
  "hide" to not draw anything at all (so e.g. put "ctrl_chars escape" in
  your metaoptions section of the Desc file). Another new option is
  "tab_width"; tabs are now understood for all three output types. To
  avoid unduly changing existing output the default tab width is 1, but it
  can be 0 to hide tabs, or up to 32. The limit is arbitrary and only in
  place to stop the redraw engine trying to do silly things if given a
  very large value.

  Finally, lexer.c's list of text items was mirrored in lexer.h by a list
  of numbered items - all done by #define, so you had to manually renumber
  them all! This has been changed to an enum, with compiled output checked
  against the previous version - identical as expected.
Admin:
  Remember, you MUST NOT soft load this if you have any FrontEnd apps
  running already! Either quit them all (check there are no instantiations
  with *Modules) and then run it, or put it in !System and reboot. The new
  features have been tested with a work-in-progress !UpgCreate utility,
  and the usual set of DDE apps run to ensure they don't give any syntax
  errors. GNUDiff and Find tested fairly heavily. Builds ROM and RAM
  variants from clean.


Version 1.22. Tagged as 'FrontEnd-1_22'
@
text
@d1 1
a1 1
/* (1.22)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.22
d8 1
a8 1
#define Module_Date_CMHG                11 May 2001
d10 2
a11 2
#define Module_MajorVersion             "1.22"
#define Module_Version                  122
d13 1
a13 1
#define Module_Date                     "11 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "11-May-01"
#define Module_ApplicationDate4         "11-May-2001"
d21 2
a22 2
#define Module_FullVersion              "1.22"
#define Module_HelpVersion              "1.22 (11 May 2001)"
@


1.6
log
@Admin:
  Forced commit to increment version number so that the new front ends
  can RMEnsure this version of the module rather than 1.20 which exists
  as various binaries both internally and externally.

Version 1.21. Tagged as 'FrontEnd-1_21'
@
text
@d1 1
a1 1
/* (1.21)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.21
d8 1
a8 1
#define Module_Date_CMHG                02 Mar 2001
d10 2
a11 2
#define Module_MajorVersion             "1.21"
#define Module_Version                  121
d13 1
a13 1
#define Module_Date                     "02 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Mar-01"
#define Module_ApplicationDate4         "02-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "1.21"
#define Module_HelpVersion              "1.21 (02 Mar 2001)"
@


1.5
log
@Removed spurious trailing blank line that appeared in output window when
final line was terminated by VDU 10,13.

Version 1.20. Tagged as 'FrontEnd-1_20'
@
text
@d1 1
a1 1
/* (1.20)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.20
d8 1
a8 1
#define Module_Date_CMHG                02 Jan 2001
d10 2
a11 2
#define Module_MajorVersion             "1.20"
#define Module_Version                  120
d13 1
a13 1
#define Module_Date                     "02 Jan 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Jan-01"
#define Module_ApplicationDate4         "02-Jan-2001"
d21 2
a22 2
#define Module_FullVersion              "1.20"
#define Module_HelpVersion              "1.20 (02 Jan 2001)"
@


1.4
log
@  Fixed the FrontEnd%DecAOFDecAOFDecAOF ... problem.
Detail:
  When I made the argument strings static to avoid the problem of arg
    overwriting on the flattened SVC stack, I didn't notice that it relied
    on the re-initialisation of the automatic array to terminate the
    new module name buffer.  This is now fixed.
Admin:
  Tested in desktop build.
  Only affects desktop builds.

Version 1.19. Tagged as 'FrontEnd-1_19'
@
text
@d1 1
a1 1
/* (1.19)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.19
d8 1
a8 1
#define Module_Date_CMHG                13 Nov 2000
d10 2
a11 2
#define Module_MajorVersion             "1.19"
#define Module_Version                  119
d13 1
a13 1
#define Module_Date                     "13 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "13-Nov-00"
#define Module_ApplicationDate4         "13-Nov-2000"
d21 2
a22 2
#define Module_FullVersion              "1.19"
#define Module_HelpVersion              "1.19 (13 Nov 2000)"
@


1.3
log
@  Fixed the "spurious blank line" problem.
  Builds completely cleanly now.
Detail:
  The extra blank line problem has been solved.  This was caused by
    multicharacter lineend character sequences (\r\n or \n\r) being
    delivered split across different TaskWindow messages.
Admin:
  Tested by getting DecAOF to disassemble a large file.  No more spurious
    blank lines appeared.

Version 1.18. Tagged as 'FrontEnd-1_18'
@
text
@d1 1
a1 1
/* (1.18)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.18
d8 1
a8 1
#define Module_Date_CMHG                12 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "1.18"
#define Module_Version                  118
d13 1
a13 1
#define Module_Date                     "12 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "12-Oct-00"
#define Module_ApplicationDate4         "12-Oct-2000"
d18 5
a22 2
#define Module_FullVersion              "1.18"
#define Module_HelpVersion              "1.18 (12 Oct 2000)"
@


1.2
log
@  Fixed a redraw bug/assumption and a crash bug.
Detail:
  * A recent C library change which altered line endings from CR LF to LF CR (as
    common throughout the rest of RISC OS) exposed an assumption that caused
    redraw problems (in some circumstances the text in the output window would
    be redrawn offset one character to the right).  It should now cope with any
    line ending.  You'll probably only have seen this if you run a relatively
    recent Usrula softload.
  * The code to tidy-up when a text output window is closed was trying to free
    a pointer that was never malloc'd to start with, which made the task
    instantiation silently quit.  On investigation, it seems likely that when
    FrontEnd was built for Aquarius, it was done so using a version of
    RISC_OSLib that has never been anywhere near CVS.  The version of
    RISC_OSLib on the Developer CD ROM (circa 1998) looks as though it would
    have worked - this is described as a "StrongARM-compatible RISC_OSLib
    (as shipped with C Release 4)".  This would also explain why Stewart had
    to modify the flex stuff to get it building in 'modern' environments to
    start with.
Admin:
  Tested with a recent Ursula build (C library LF CR line endings) and with
  RISC OS 3.7 (C library CR LF line endings).

Version 1.17. Tagged as 'FrontEnd-1_17'
@
text
@d1 1
a1 1
/* (1.17)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.17
d8 1
a8 1
#define Module_Date_CMHG                10 Apr 2000
d10 2
a11 2
#define Module_MajorVersion             "1.17"
#define Module_Version                  117
d13 1
a13 1
#define Module_Date                     "10 Apr 2000"
d15 5
a19 1
#define Module_FullVersion              "1.17"
@


1.1
log
@Build structure standardised.
This source set will actually build using the latest RISC_OSlib.
Functionally equivalent to FrontEnd-Aquarius-1_16.
Moved to srccommit.

Tagged as FrontEnd-1_16.
@
text
@d1 1
a1 1
/* (1.16)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	1.16
#define Module_MinorVersion_CMHG	
#define Module_Date_CMHG      		11 Jan 1995
d10 4
a13 4
#define Module_MajorVersion     	"1.16"
#define Module_Version                  116
#define Module_MinorVersion		
#define Module_Date      		"11 Jan 1995"
d15 1
@

