head	1.1;
access;
symbols
	MemInfo-0_10:1.1
	MemInfo-0_09:1.1
	MemInfo-0_08:1.1
	MemInfo-0_07:1.1
	dellis_autobuild_BaseSW:1.1
	sbrodie_sedwards_16Mar2000:1.1
	dcotton_autobuild_BaseSW:1.1
	MemInfo-0_06:1.1
	MemInfo-0_05:1.1
	MemInfo-0_04:1.1
	MemInfo-0_03:1.1
	nicke_MemInfo_0_02:1.1
	afrost_NC2_Generic:1.1;
locks; strict;
comment	@# @;


1.1
date	97.11.20.17.10.34;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Added for first time.
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

#ifndef __module_h
#define __module_h

#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43

#define ERR_RETURN(err,stmt)   {err = (stmt); if (err) return err;}
#define ERR_GOTO(err,stmt)     {err = (stmt); if (err) goto exit_gracefully;}

#ifndef TaskModule_SendMessage
#define TaskModule_SendMessage 0x4d300
#endif

#define ERROR_NO_FILE	       0x0

#define ERROR_STRUCT(name,text) \
  static struct {int errnum; char errmess[sizeof(text)+1];} name={ERROR_##name,text}

#define ERROR_EXTERN(name) extern struct {int errnum; char errmess[1];} name

#define ERROR(e)  ((_kernel_oserror *)&(e))


#endif
@
