head	1.6;
access;
symbols
	MemInfo-0_10:1.6
	MemInfo-0_09:1.5
	MemInfo-0_08:1.5
	MemInfo-0_07:1.5
	dellis_autobuild_BaseSW:1.5
	sbrodie_sedwards_16Mar2000:1.5
	dcotton_autobuild_BaseSW:1.5
	MemInfo-0_06:1.5
	MemInfo-0_05:1.5
	MemInfo-0_04:1.4
	MemInfo-0_03:1.3
	nicke_MemInfo_0_02:1.1
	afrost_NC2_Generic:1.1;
locks; strict;
comment	@# @;


1.6
date	2007.05.24.01.43.35;	author srevill;	state Exp;
branches;
next	1.5;

1.5
date	98.10.28.13.23.44;	author smiddle;	state Exp;
branches;
next	1.4;

1.4
date	98.10.28.13.04.23;	author smiddle;	state Exp;
branches;
next	1.3;

1.3
date	98.09.14.13.34.56;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	98.09.03.14.42.27;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.11.20.17.10.19;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


1.6
log
@  Makefile fixes.
Detail:
  Addressed some issues which stopped ROOL Batch One source release from
  working correctly.
Admin:
  Tested in patched Batch One BBE.

Version 0.10. Tagged as 'MemInfo-0_10'
@
text
@# Copyright 1997 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# MemHTML OBJASM/C Makefile
#
# *****************************************
# ***       C h a n g e   L i s t       ***
# *****************************************
# Date       	Name         	Description
# ----       	----         	-----------
# 17 Sep 1997	RWB		Created

#
# Paths
#
EXP_HDR = <export$dir>.^.Interface2
EXP_C_H = <Cexport$dir>.h
EXP_C_O = <Cexport$dir>.o

#
# Generic options:
#
MKDIR   = do mkdir -p
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
RM      = remove
WIPE    = x wipe
CD	= dir
CHMOD	= access

AFLAGS     = -depend !Depend ${THROWBACK} -Stamp -quit
CFLAGS     = -c -depend !Depend ${THROWBACK} -zM -ff ${INCLUDES} ${DFLAGS}
CMHGFLAGS  = -p ${DFLAGS} ${THROWBACK} ${INCLUDES}
CPFLAGS    = ~cfr~v
WFLAGS     = ~c~v
CHMODFLAGS = RW/R

DFLAGS  = -DUSE_TINY ${DEBUG}
#
# Libraries
#
CLIB       = CLIB:o.stubs
RLIB       = RISCOSLIB:o.risc_oslib
RSTUBS     = RISCOSLIB:o.rstubs
ROMSTUBS   = RISCOSLIB:o.romstubs
ROMCSTUBS  = RISCOSLIB:o.romcstubs
ABSSYM     = RISC_OSLib:o.AbsSym
REMOTEDB   = <Lib$Dir>.debug.o.remotezm
#
# Include files
#
INCLUDES = -IC:,<Lib$Dir>.

# Program specific options:
#
COMPONENT = MemInfo
TARGET    = aof.${COMPONENT}
RMTARGET  = rm.${COMPONENT}
EXPORTS   = #${EXP_C_H}.${COMPONENT}

OBJS      =	\
o.module	\
o.header

#
# Rule patterns
#
.c.o:;      ${CC}   ${CFLAGS} -o $@@ $<
.cmhg.o:;   ${CMHG} ${CMHGFLAGS} -o $@@ $<
.cmhg.h:;   ${CMHG} ${CMHGFLAGS} -d h.$* $< 
.s.o:;      ${AS}   ${AFLAGS} $< $@@


# build a relocatable module:
#
all: ${RMTARGET}
	@@echo ${COMPONENT}: all complete

#
# RISC OS ROM build rules:
#
rom: ${TARGET}
        @@echo ${COMPONENT}: rom complete

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

install: ${RMTARGET}
        ${MKDIR} ${INSTDIR}
        ${CP} rm.${COMPONENT} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: disc module installed

install_rom: ${TARGET}
        ${MKDIR} ${INSTDIR}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom module installed

clean:
        ${WIPE} o.*      ${WFLAGS}
        ${WIPE} linked.* ${WFLAGS}
        ${RM} ${RMTARGET}
        ${RM} ${TARGET}
        ${RM} h.header
        @@echo ${COMPONENT}: cleaned

#
# ROM target (re-linked at ROM Image build time)
#
${TARGET}: ${OBJS} ${ROMCSTUBS} header.h
        ${LD} -o $@@ -aof ${OBJS} ${ROMCSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${TARGET} ${ABSSYM}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete

#
# Relocatable module target
#
${RMTARGET}: ${OBJS} header.h
        ${LD} -rmf -o $@@ ${OBJS} ${CLIB}
        ${CHMOD} rm.${COMPONENT} ${CHMODFLAGS}

${EXP_C_H}.${COMPONENT}:	h.${COMPONENT}
        ${CP} h.${COMPONENT} $@@ ${CPFLAGS}

#
# Dynamic dependencies:
@


1.5
log
@Removed autogenerated header and fixed for clean build.

Version 0.05. Tagged as 'MemInfo-0_05'
@
text
@d34 1
a34 1
MKDIR   = cdir
d41 1
a41 1
WIPE    = -wipe
d102 5
d108 1
@


1.4
log
@Updated to fill in much more information about memory used
in the box. Should now mostly add up. Also uses the task manager
if it is about to get task information.

Version 0.04. Tagged as 'MemInfo-0_04'
@
text
@d49 1
a49 1
WFLAGS     = ~c~vr
d83 2
a84 1
.cmhg.o:;   ${CMHG} ${CMHGFLAGS} -o $@@ $< h.$*
d111 1
d117 1
a117 1
${TARGET}: ${OBJS} ${ROMCSTUBS} 
d131 1
a131 1
${RMTARGET}: ${OBJS}
@


1.3
log
@Fixed for CMHG 5.16.
Modified to use Link 5.08.

Version 0.03. Tagged as 'MemInfo-0_03'
@
text
@d91 1
a91 1
	
d111 1
a111 1
        
@


1.2
log
@Export rule fixed
@
text
@a107 1
        ${WIPE} map.*    ${WFLAGS}
d122 1
a122 2
        ${LD} -o linked.${COMPONENT} -map -bin -base ${ADDRESS} ${TARGET} ${ABSSYM} > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
@


1.1
log
@Added for first time.
@
text
@d73 1
a73 1
EXPORTS   = ${EXP_C_H}.${COMPONENT}
a139 5
o.module:	c.module
o.module:	C:h.swis
o.module:	C:h.kernel
o.module:	h.module
o.module:	h.header
@
