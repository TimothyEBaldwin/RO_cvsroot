head	4.16;
access;
symbols
	Debugger-2_02-1:4.16
	Debugger-2_02:4.16
	Debugger-2_01:4.15
	Debugger-2_00:4.15
	Debugger-1_99:4.15
	Debugger-1_98:4.15
	Debugger-1_97:4.14
	Debugger-1_96:4.14
	Debugger-1_95:4.14
	Debugger-1_94:4.14
	Debugger-1_93:4.14
	Debugger-1_92:4.14
	Debugger-1_91:4.13
	Debugger-1_90:4.13
	Debugger-1_89:4.13
	Debugger-1_88:4.13
	Debugger-1_87:4.13
	Debugger-1_86:4.12
	Debugger-1_85:4.12
	Debugger-1_84:4.11
	Debugger-1_83:4.11
	Debugger-1_82:4.11
	Debugger-1_81:4.11
	Debugger-1_80:4.11
	Debugger-1_79:4.11
	Debugger-1_78:4.10
	RO_5_07:4.10
	Debugger-1_77:4.10
	Debugger-1_76:4.10
	Debugger-1_75:4.9
	Debugger-1_74:4.9
	Debugger-1_73:4.8
	Debugger-1_72:4.7
	Debugger-1_71:4.7
	Debugger-1_70:4.7
	Debugger-1_68:4.7
	Debugger-1_67:4.7
	Debugger-1_66:4.7
	Debugger-1_65:4.7
	Debugger-1_64:4.7
	Debugger-1_63:4.7
	dellis_autobuild_BaseSW:4.7
	Debugger-1_62:4.7
	Debugger-1_61:4.7
	Debugger-1_60:4.7
	sbrodie_sedwards_16Mar2000:4.6
	dcotton_autobuild_BaseSW:4.9
	Debugger-1_59:4.6
	Debugger-1_58:4.5
	dcotton_debugger_MPTBuild_14Apr1999:4.4
	dcotton_debugger_MPTInitialBuild:4.4
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3.2.1
	Ursula_RiscPC:4.3.2.1.0.2
	Debugger-1_57:4.4
	rthornb_UrsulaBuild-19Aug1998:4.3.2.1
	UrsulaBuild_FinalSoftload:4.3.2.1
	rthornb_UrsulaBuild-12Aug1998:4.3.2.1
	aglover_UrsulaBuild-05Aug1998:4.3.2.1
	rthornb_UrsulaBuild-29Jul1998:4.3.2.1
	rthornb_UrsulaBuild-22Jul1998:4.3.2.1
	rthornb_UrsulaBuild-15Jul1998:4.3.2.1
	rthornb_UrsulaBuild-07Jul1998:4.3.2.1
	rthornb_UrsulaBuild-17Jun1998:4.3.2.1
	rthornb_UrsulaBuild-03Jun1998:4.3.2.1
	rthornb_UrsulaBuild-27May1998:4.3.2.1
	rthornb_UrsulaBuild-21May1998:4.3.2.1
	rthornb_UrsulaBuild_01May1998:4.3.2.1
	afrost_NC2_Generic:4.1.7.2
	afrost_Funai01-33:4.1.7.2
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Daytona:4.3.0.4
	Daytona_bp:4.3
	Ursula:4.3.0.2
	Ursula_bp:4.3
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.2
	ARTtmp:4.1.7.2.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.16
date	2018.02.25.19.12.59;	author jlee;	state Exp;
branches;
next	4.15;
commitid	PliTQiXFRyup4hsA;

4.15
date	2016.11.11.22.58.01;	author rsprowson;	state Exp;
branches;
next	4.14;
commitid	qeQW0pSFnTogsLtz;

4.14
date	2016.04.05.20.41.13;	author jlee;	state Exp;
branches;
next	4.13;
commitid	xIAY2HYlqbqLLt1z;

4.13
date	2014.10.24.12.39.46;	author rsprowson;	state Exp;
branches;
next	4.12;
commitid	91DMgFBApLOQ6sVx;

4.12
date	2013.11.28.01.29.10;	author jlee;	state Exp;
branches;
next	4.11;
commitid	STgm4PaoUxPr0Zex;

4.11
date	2009.06.16.00.00.17;	author bavison;	state Exp;
branches;
next	4.10;

4.10
date	2002.12.03.21.28.02;	author bavison;	state Exp;
branches;
next	4.9;

4.9
date	2001.06.01.08.52.21;	author dcotton;	state Exp;
branches;
next	4.8;

4.8
date	2001.05.10.16.47.20;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	2000.05.02.15.58.40;	author kbracey;	state Exp;
branches;
next	4.6;

4.6
date	99.04.20.08.08.26;	author dcotton;	state Exp;
branches;
next	4.5;

4.5
date	99.04.19.15.10.27;	author dcotton;	state Exp;
branches;
next	4.4;

4.4
date	98.09.21.10.51.21;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	97.05.09.06.10.50;	author kbracey;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	97.01.21.17.26.49;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.50.02;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.3.2.1
date	98.03.26.14.18.17;	author rthornb;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.50.02;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.03.19.08;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.05.19;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.36.45;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.11.19.18.22;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.16
log
@VFP/NEON disassembly improvements
Detail:
  actions/ARMv8FP_AArch32, Makefile - Add disasembly for the ARMv8 VFP/NEON instructions
  actions/ARMv7_ASIMD, actions/ARMv7_VFP - Fix incorrect disassembly of VCLS, VMOVN, VRSUBHN, VFNMA, VFNMS
  c/util - Add disassembly for MVFR2 register
  s/ARM - Tweak coprocessor instruction decoding logic; ARMv8 uses some of the CDP2 instructions for VFP/NEON
  cache/vfp - Updated decgen cache file
  Test/c/testbed - Improve fopen/system error checking. Add some more rules to deal with (expected) differences between Debugger/dis2 and decaof.
Admin:
  Tested on Raspberry Pi 3
  Disassembly for new instructions (+ some nearby values) checked against BASIC 1.74 + decaof 5.18
  Requires Library-1_92


Version 2.02. Tagged as 'Debugger-2_02'
@
text
@# Copyright 1996 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for Debugger
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 10-May-01  KJB          Nicked
#

# Use COMPONENT=Debugger (or leave unset) to build the Debugger module
# Use COMPONENT=dis2 to build a full, standalone version of the C-based disassembler
COMPONENT    ?= Debugger

ifeq ("${COMPONENT}","Debugger")
HELPSRC       = HelpSrc
TOKENSOURCE   = TokHelpSrc
TOKHELPSRC    = ${TOKENSOURCE}
ASMHDRS       = Debugger
OBJS          = Debugger util dis2_vfp support exc
HDRS          =
CMHGFILE      =

# dis2 build options
ARM           = FALSE
THUMB         = FALSE
MODULE        = TRUE
endif

ifeq ("${COMPONENT}","dis2")
OBJS          = util dis2_arm main

# dis2 build options
ARM           = TRUE
THUMB         = FALSE
MODULE        = FALSE
endif


ifeq (${ARM},TRUE)
CDEFINES += -DDISASSEMBLE_ARM
endif

ifeq (${THUMB},TRUE)
CDEFINES += -DDISASSEMBLE_THUMB
endif

ifeq (${MODULE},TRUE)
CDEFINES += -DMODULE
RAMASMDEFINES += -PD "standalone SETL {TRUE}" -PD "MergedMsgs SETS \"${MERGEDMSGS}\""
endif

ifeq ("${COMPONENT}","Debugger")
include CModule

# We don't want to link to CLib
ROM_LIBS =
SA_LIBS  =
ROM_SYMS =

CFLAGS += -apcs /nofp
else
include CApp
endif

ACTIONS_ARM = actions/common \
              actions/ARMv7 \
              actions/ARMv7_ASIMD \
              actions/ARMv7_VFP \
              actions/ARMv8_AArch32 \
              actions/ARMv8FP_AArch32 \
              actions/FPA \
              actions/XScale_DSP

ACTIONS_VFP = actions/common \
              actions/ARMv7_ASIMD \
              actions/ARMv7_VFP \
              actions/ARMv8FP_AArch32

ENCODINGS = Build:decgen.encodings.ARMv7 \
            Build:decgen.encodings.ARMv8FP_AArch32 \
            Build:decgen.encodings.ARMv8_AArch32 \
            Build:decgen.encodings.FPA \
            Build:decgen.encodings.XScale_DSP

DECGEN = <Tools$Dir>.Misc.decgen.decgen 

# dis2 build rules

dis2_arm.c: $(ACTIONS_ARM) head.c $(ENCODINGS)
	$(DECGEN) -bits=32 -e "-DCDP={ne(coproc,1)}" "-DLDC_STC={ne(coproc,1)}{ne(coproc,2)}" "-DMRC_MCR={ne(coproc,1)}" -DVFP1=(cond:4) "-DVFP2={ne(cond,15)}" -DAS1(X)=1111001[X] -DAS2=11110100 -DAS3=(cond:4)1110 "-DAS4={ne(cond,15)}" "-DCC={ne(cond,15)}" $(ENCODINGS) -valid -a $(ACTIONS_ARM) -pre head.c -o dis2_arm.c -prefix=dis2_ -name=dis2 -void -maxmaskbits=3 -opt-strings -treewalker -useargstruct -updatecache cache/arm

dis2_arm.o: dis2_arm.c
	${CC} ${CFLAGS} -o $@@ dis2_arm.c

dis2_arm.oz: dis2_arm.c
	${CC} ${CFLAGS} ${C_MODULE} -o $@@ dis2_arm.c

dis2_vfp.c: $(ACTIONS_VFP) head.c $(ENCODINGS)
	$(DECGEN) -bits=32 -e "-DCDP={ne(coproc,1)}" "-DLDC_STC={ne(coproc,1)}{ne(coproc,2)}" "-DMRC_MCR={ne(coproc,1)}" -DVFP1=(cond:4) "-DVFP2={ne(cond,15)}" -DAS1(X)=1111001[X] -DAS2=11110100 -DAS3=(cond:4)1110 "-DAS4={ne(cond,15)}" "-DCC={ne(cond,15)}" $(ENCODINGS) -valid -a $(ACTIONS_VFP) -pre head.c -o dis2_vfp.c -prefix=dis2_ -name=dis2 -default=UNDEFINED -void -maxmaskbits=3 -opt-strings -treewalker -useargstruct -updatecache cache/vfp

dis2_vfp.o: dis2_vfp.c
	${CC} ${CFLAGS} -o $@@ dis2_vfp.c

dis2_vfp.oz: dis2_vfp.c
	${CC} ${CFLAGS} ${C_MODULE} -o $@@ dis2_vfp.c

excdump.h: hdr.ExcDump
	${HDR2H} hdr.ExcDump $@@

exc.c: excdump.h

clean::
	${RM} c.dis2_vfp
	${RM} c.dis2_arm
	${RM} h.excdump
	${RM} ${TOKENSOURCE}

# Stuff from AAsmModule that's missing from CModule

TOKENS     ?= Hdr:Tokens

${TOKENSOURCE}: ${HELPSRC} ${TOKENS}
        ${TOKENISE} ${TOKENS} ${HELPSRC} $@@

Debugger.s: ${TOKENSOURCE}

# Dynamic dependencies:
@


4.15
log
@Add ARMv8 AArch32 disassembly
Opcodes for CRC32/HLT/SEVL/LDA/STL/LDAEX/STLEX and DMB/DSB options.
Makefile:
  Add ARMv8_AArch32 actions and encodings to dis2.
actions/ARMv7,dis2.h:
  Extend the DMS/DSB decoding to warn about ARMv8 specific ones (previously undefined)
ARM.s/ARMv6.s:
  Slot in decode.
CGlue.s/Debugger.s/Messages
  New token for "ARMv8 or later" warnings.

Tested by brute force all 256M instructions in NV space and 256M conditionals, comparing the output against dis2.
Currently missing the new VFP and SIMD opcodes.

Version 1.98. Tagged as 'Debugger-1_98'
@
text
@d85 1
d91 2
a92 1
              actions/ARMv7_VFP
d95 1
a95 2
            Build:decgen.encodings.ARMv7_ASIMD \
            Build:decgen.encodings.ARMv7_VFP \
@


4.14
log
@Add exception dump generation and processing facilities
Detail:
  This set of changes adds support for the following features:
  * A new code system variable, Debugger$DumpOptions, to control whether exception/crash dumps are collected from SeriousErrorV and where they should be output
  * Dump output can be in raw (binary) or annotated (text) form.
  * Annotated form provides detailed annotation of the stack(s), detecting certain constructs such as SWI invocations, IRQsema frames, CMHG veneers, APCS stack frame chains, and most forms of assembler function calls. The output isn't as easy to understand as a proper stack backtrace would be, but the low-level nature allows it to cope with corrupt or partially-overwritten stack frames, and avoids making invasive changes to components in order to make them backtrace-friendly
  * Stack annotation is able to make use of embedded ROM debug symbols (to be supported by romlinker 0.06) and Norcroft-style embedded function names in order to provide function-level location information for most ROM components and applications
  * System variables Debugger$RawFile and Debugger$AnnotatedFile to specify where to save raw and annotated exception dumps (preliminary, approach may change in future)
  * As well as supporting saving to file, the exception dumps can also be sent to the HAL via HAL_DebugTX, or if a program is driving SeriousErrorV directly it can use SeriousErrorV_CustomReport to have it fed to a custom callback function
  The code is structured in such a way that the core dump annotation code can potentially be built into a standalone application to allow offline processing of dumps (offline application not part of this checkin)
  File changes:
  c/exc, h/exc - Core code for producing the annotated exception dumps
  hdr/ExcDump - Header detailing the format of the binary dump
  s/ExceptionDump - Code variable and SeriousErrorV handling. Several support calls (used by c/exc) are also implemented here, in order to separate the dump processing from any interrogation of the originating machine
  Makefile - Updated for c/exc inclusion, and C header generation from hdr/ExcDump
  Resources/UK/Messages, Resources/Germany/Messages - New messages used by exception dump code
  c/support - Add a strcmp implementation, and extend vsprintf to be vsnprintf. Add support for string width format specifier.
  s/Debugger - Workspace definitions and init/shutdown hooks for exception dump code. Refactor *Where so that the locate logic is separate from the message output logic, to allow the locate logic to be used by the exception dump code.
Admin:
  Tested on Raspberry Pi
  German messages in need of translation


Version 1.92. Tagged as 'Debugger-1_92'
@
text
@d84 1
d95 1
@


4.13
log
@Build fix
Update for BuildSys-6_60. No need to force things in ModuleLibs to blank now.

Version 1.87. Tagged as 'Debugger-1_87'
@
text
@d34 1
a34 1
OBJS          = Debugger util dis2_vfp support
d119 5
d127 1
@


4.12
log
@Add a new, machine-generated VFP/NEON disassembler. Fix some ARMv6/v7 disassembly bugs.
Detail:
  This change adds up-to-date VFP & NEON disassembly to the module, by way of a partially machine-generated disassembler written in C.
  It's also possible to build a standalone disassembler utility (dubbed 'dis2') which is 100% C and has support for all ARM instructions (including some obscure stuff the assembler disassembler currently lacks, e.g. XScale DSP instructions). One day this may completely replace the assembler disassembler, but at the moment it's a bit bulky and probably has a few bugs left to squash. The disassembler is also fairly flexible, supporting various output formatting options.

  Main changes:
  - Makefile - Rewritten to switch over to using the CModule makefile fragment instead of AAsmModule, to allow the C code to be included in the component. Also added 'dis2' as an alternative component to build as.
  - Resources/UK/Messages, Resources/Germany/Messages - Updated with new disassembler messages
  - s/Debugger - Add new UseCVFPNEON switch to allow control over whether the module builds with the C VFP/NEON disassembler or the original assembler VFP disassembler
  - s/CGlue - Glue code used with the C disassembler to bridge the gap between the assembler world and the C world
  - actions/* - A set of decgen action files describing what to do for each instruction the new disassembler supports. These are basically just blocks of C code - although they need to match up with the encoding names in Library/Misc/decgen/encodings
  - cache/* - Folder for decgen to cache decision trees in. Building the decision tree for the disassembler is currently a lengthy process, but caching the trees reduces the build time to a fraction of the full time.
  - c/head - Stub C file that decgen prepends to the code it generates
  - c/main - main frontend for the standalone version of the disassembler
  - c/support - Reimplementation of the standard C library functions required for the disassembler. This allows us to avoid a runtime dependency on the shared C library, and also allows us to deal with control-terminated strings from messagetrans where relevant. For convenience this file also has the main entry point that's called from assembler.
  - c/util - Utility code for outputting various forms of instruction, decoding immediate constants, etc.
  - h/dis2 - Header file for the C code
  - Test/c/testbed - Simple C testbed app to allow the output of dis2 to be compared against the Debugger module and decaof
  - !MkDis2,fd7 - Script to allow easy building of the standalone 'dis2' disassembler
  Bugfixes:
  - s/ARMv6 - Change 'ROR#' to 'ROR #' for UXTAB, etc. disassembly. Fix bitfield extract & clear instructions to detect unpredictable/invalid bitfield definitions
  Misc other changes:
  - s/* - Source files updated so s/Debugger contains a list of GETs instead of each source file LNK'ing to the next
Admin:
  Tested in ROM form on BB-xM, and as softload on Iyonix
  German messages are in need of translation
  Requires Library-1_65 and BuildSys-6_34


Version 1.85. Tagged as 'Debugger-1_85'
@
text
@d71 3
a73 3
CLIB =
ROMCSTUBS =
ABSSYM =
@


4.11
log
@  Build change
Detail:
  CPU version is no longer specified in the makefile - it's better to inherit
  it from the build environment now that we actually set it appropriately.
Admin:
  Built but not tested. Binary should be unchanged - this only affects the
  warnings generated during assembly.

Version 1.78. Not tagged
@
text
@d25 5
a29 1
COMPONENT     = Debugger
d33 97
a129 1
HEADER1       = Debugger
d131 1
a131 2
include StdTools
include AAsmModule
@


4.10
log
@  A new feature and a bugfix.
Detail:
  * Added 'H' flag to *Memory and *MemoryA to allow half-word memory accesses.
    On 26-bit machines, this is emulated using 32-bit reads and read-modify-
    writes; on 32-bit machines, LDRH and STRH are used. Address header in
    *Memory byte mode changed to be only one digit per byte for consistency
    with word and half-word modes. *MemoryA H in interactive mode gives a
    Thumb disassembly.
  * STM Rn!,{reg_list_including_Rn} is actually allowed, provided Rn is the
    lowest register in the list. Warning code adjusted accordingly.
Admin:
  Tested on Risc PC and Tungsten.

Version 1.76. Tagged as 'Debugger-1_76'
@
text
@a28 1
ASFLAGS       = -cpu 4
@


4.9
log
@    Header exports now work.

Detail:
    Build would not build with this version of the module as the last change
to the makefile did not include the line needed to export the Debugger
header. This line has now been added.
    Added an !MkExport to enable testing of the export.
    Converted the existing Mk... obey files to !Mk... files.

Admin:
    Some basic testing.

Version 1.74. Tagged as 'Debugger-1_74'
@
text
@d29 1
a29 1

@


4.8
log
@* Fixed register clash warnings on SWP.
* Changes to message files to correct syntax errors.
* *MemoryX P works on IOMD-based systems is OS_Memory 13 fails.
* Changed to use ObjAsm and centralised Makefiles.

Version 1.73. Tagged as 'Debugger-1_73'
@
text
@d30 2
@


4.7
log
@* 32-bit compatibility added.
* New *ShowFPRegs command.
* Added ARMv5 instructions (BLX, CLZ, BKPT, CDP2 et al)
* Handling of instruction extension space adjusted as per ARMv4.
* Fixed some Thumb instructions.
* Added "info" form of LDC and STC.
* NV condition code is now undefined, except for the new instructions using
  it.

Version 1.60. Tagged as 'Debugger-1_60'
@
text
@d22 1
a22 1
# 08-Jun-94  AMcC         Created.
d25 4
a28 76
#
# Paths
#
EXP_HDR = <export$dir>

#
# Generic options:
#
MKDIR   = cdir
AS      = aasm
CP      = copy
RM      = remove
WIPE    = -wipe
CCFLAGS = -c -depend !Depend -IC:
ASFLAGS = -depend !Depend -Stamp -quit -module -To $@@ -From
CPFLAGS = ~cfr~v
WFLAGS  = ~cr~v

TOKENISE = tokenise
TOKENS   = Hdr:Tokens

#
# Program specific options:
#
COMPONENT = Debugger
SOURCE    = s.Debugger
TARGET    = rm.${MACHINE}.Debugger
EXPORTS   = ${EXP_HDR}.Debugger

#
# Generic rules:
#
rom: $(TARGET) local_dirs
        @@echo ${COMPONENT}: rom module built

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

install_rom: $(TARGET)
        $(CP) $(TARGET) $(INSTDIR).$(COMPONENT) $(CPFLAGS)
        @@echo ${COMPONENT}: rom module installed

clean:
        ${WIPE} rm ${WFLAGS}
        $(RM) $(TARGET)
        $(RM) TokHelpSrc
        @@echo ${COMPONENT}: cleaned

resources: resources-${CMDHELP}
        @@echo ${COMPONENT}: resource files copied

resources_common:
        ${MKDIR} ${RESDIR}.${COMPONENT}
	TokenCheck LocalRes:Messages
        ${CP} LocalRes:Messages  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}

resources-None: resources_common
	@@

resources-: resources_common
	TokenCheck LocalRes:CmdHelp
	print LocalRes:CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }

local_dirs:
        ${MKDIR} rm
        ${MKDIR} rm.${MACHINE}

$(TARGET): $(SOURCE) TokHelpSrc
        ${MKDIR} rm.${MACHINE}
        $(AS) $(ASFLAGS) $(SOURCE)

${EXP_HDR}.Debugger: hdr.Debugger
        ${CP} hdr.Debugger $@@ ${CPFLAGS}

TokHelpSrc: $(TOKENS) HelpSrc
        $(TOKENISE) $(TOKENS) HelpSrc $@@
d30 2
@


4.6
log
@Now also creates and removed the rm directory. Should now build straight from CVS.

Version 1.59. Tagged as 'Debugger-1_59'
@
text
@d37 1
a37 1
WIPE    = wipe
d41 1
a41 1
WFLAGS  = ~c~v
d68 1
a68 3
        ${WIPE} rm.${MACHINE} ${WFLAGS}
        ${RM} rm.${MACHINE}
        ${RM} rm
@


4.5
log
@Altered Makefile to automatically create and delete the rm.{MACHINE}
directory.

Version 1.58. Tagged as 'Debugger-1_58'
@
text
@d70 1
d91 1
@


4.4
log
@Ursula and Spinner branches merged.
Makefile changed to use LocalRes$Path.
Changed to use srccommit.

Version 1.57. Tagged as 'Debugger-1_57'
@
text
@d37 1
d41 1
d57 1
a57 1
rom: $(TARGET)
d68 2
d89 3
d101 1
@


4.3
log
@Lots of bug fixes and extra warnings. Source code tidied.
Thumb disassembly added.
@
text
@d70 4
a73 1
resources:
d75 9
a83 2
        ${CP} Resources.${LOCALE}.Messages  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied
a95 65
rm.Jordan.Debugger: Hdr:ListOpts
rm.Jordan.Debugger: Hdr:Macros
rm.Jordan.Debugger: Hdr:System
rm.Jordan.Debugger: Hdr:SWIs
rm.Jordan.Debugger: Hdr:CPU.Generic26
rm.Jordan.Debugger: Hdr:IO.GenericIO
rm.Jordan.Debugger: Hdr:RISCOS
rm.Jordan.Debugger: Hdr:Machine.<Machine>
rm.Jordan.Debugger: Hdr:ModHand
rm.Jordan.Debugger: Hdr:Services
rm.Jordan.Debugger: Hdr:FSNumbers
rm.Jordan.Debugger: Hdr:NewErrors
rm.Jordan.Debugger: Hdr:EnvNumbers
rm.Jordan.Debugger: Hdr:Proc
rm.Jordan.Debugger: Hdr:VduExt
rm.Jordan.Debugger: Hdr:Tokens
rm.Jordan.Debugger: Hdr:MsgTrans
rm.Jordan.Debugger: Hdr:Debugger
rm.Jordan.Debugger: Version
rm.Jordan.Debugger: Hdr:Debug
rm.Jordan.Debugger: TokHelpSrc
rm.Omega.Debugger: Hdr:ListOpts
rm.Omega.Debugger: Hdr:Macros
rm.Omega.Debugger: Hdr:System
rm.Omega.Debugger: Hdr:SWIs
rm.Omega.Debugger: Hdr:CPU.Generic26
rm.Omega.Debugger: Hdr:IO.GenericIO
rm.Omega.Debugger: Hdr:RISCOS
rm.Omega.Debugger: Hdr:Machine.<Machine>
rm.Omega.Debugger: Hdr:ModHand
rm.Omega.Debugger: Hdr:Services
rm.Omega.Debugger: Hdr:FSNumbers
rm.Omega.Debugger: Hdr:NewErrors
rm.Omega.Debugger: Hdr:EnvNumbers
rm.Omega.Debugger: Hdr:Proc
rm.Omega.Debugger: Hdr:VduExt
rm.Omega.Debugger: Hdr:Tokens
rm.Omega.Debugger: Hdr:MsgTrans
rm.Omega.Debugger: Hdr:Debugger
rm.Omega.Debugger: Version
rm.Omega.Debugger: Hdr:Debug
rm.Omega.Debugger: TokHelpSrc
rm.Morris.Debugger: Hdr:ListOpts
rm.Morris.Debugger: Hdr:Macros
rm.Morris.Debugger: Hdr:System
rm.Morris.Debugger: Hdr:SWIs
rm.Morris.Debugger: Hdr:CPU.Generic26
rm.Morris.Debugger: Hdr:IO.GenericIO
rm.Morris.Debugger: Hdr:RISCOS
rm.Morris.Debugger: Hdr:Machine.<Machine>
rm.Morris.Debugger: Hdr:ModHand
rm.Morris.Debugger: Hdr:Services
rm.Morris.Debugger: Hdr:FSNumbers
rm.Morris.Debugger: Hdr:NewErrors
rm.Morris.Debugger: Hdr:EnvNumbers
rm.Morris.Debugger: Hdr:Proc
rm.Morris.Debugger: Hdr:VduExt
rm.Morris.Debugger: Hdr:Tokens
rm.Morris.Debugger: Hdr:MsgTrans
rm.Morris.Debugger: Hdr:Debugger
rm.Morris.Debugger: Version
rm.Morris.Debugger: Hdr:Debug
rm.Morris.Debugger: TokHelpSrc
rm.Morris.Debugger: s.FP
rm.Morris.Debugger: s.Thumb
@


4.3.2.1
log
@Removed dynamic dependancies from Makefiles and removed all reference to Prefix
@
text
@d86 65
@


4.2
log
@Version Spin_merge taken
@
text
@d67 1
a67 1
        $(RM) s.TokHelpSrc
d107 21
d149 2
a150 21
rm.Omega.Debugger: Hdr:ListOpts
rm.Omega.Debugger: Hdr:Macros
rm.Omega.Debugger: Hdr:System
rm.Omega.Debugger: Hdr:SWIs
rm.Omega.Debugger: Hdr:CPU.Generic26
rm.Omega.Debugger: Hdr:IO.GenericIO
rm.Omega.Debugger: Hdr:RISCOS
rm.Omega.Debugger: Hdr:Machine.<Machine>
rm.Omega.Debugger: Hdr:ModHand
rm.Omega.Debugger: Hdr:Services
rm.Omega.Debugger: Hdr:FSNumbers
rm.Omega.Debugger: Hdr:NewErrors
rm.Omega.Debugger: Hdr:EnvNumbers
rm.Omega.Debugger: Hdr:Proc
rm.Omega.Debugger: Hdr:VduExt
rm.Omega.Debugger: Hdr:Tokens
rm.Omega.Debugger: Hdr:MsgTrans
rm.Omega.Debugger: Hdr:Debugger
rm.Omega.Debugger: Version
rm.Omega.Debugger: Hdr:Debug
rm.Omega.Debugger: TokHelpSrc
@


4.1
log
@Initial revision
@
text
@d128 21
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a127 21
rm.Omega.Debugger: Hdr:ListOpts
rm.Omega.Debugger: Hdr:Macros
rm.Omega.Debugger: Hdr:System
rm.Omega.Debugger: Hdr:SWIs
rm.Omega.Debugger: Hdr:CPU.Generic26
rm.Omega.Debugger: Hdr:IO.GenericIO
rm.Omega.Debugger: Hdr:RISCOS
rm.Omega.Debugger: Hdr:Machine.<Machine>
rm.Omega.Debugger: Hdr:ModHand
rm.Omega.Debugger: Hdr:Services
rm.Omega.Debugger: Hdr:FSNumbers
rm.Omega.Debugger: Hdr:NewErrors
rm.Omega.Debugger: Hdr:EnvNumbers
rm.Omega.Debugger: Hdr:Proc
rm.Omega.Debugger: Hdr:VduExt
rm.Omega.Debugger: Hdr:Tokens
rm.Omega.Debugger: Hdr:MsgTrans
rm.Omega.Debugger: Hdr:Debugger
rm.Omega.Debugger: Version
rm.Omega.Debugger: Hdr:Debug
rm.Omega.Debugger: TokHelpSrc
@


4.1.7.2
log
@Command line messages removed
@
text
@d70 1
a70 4
resources: resources-${CMDHELP}
        @@echo ${COMPONENT}: resource files copied

resources_common:
d73 1
a73 6

resources-None: resources_common
	@@

resources-: resources_common
	print Resources.${LOCALE}.CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
