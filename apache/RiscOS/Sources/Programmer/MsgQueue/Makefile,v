head	1.6;
access;
symbols
	MsgQueue-0_09-1:1.6
	MsgQueue-0_09:1.6
	MsgQueue-0_08:1.5
	MsgQueue-0_07:1.5
	MsgQueue-0_06:1.4
	MsgQueue-0_05:1.3
	MsgQueue-0_04:1.2
	MsgQueue-0_03:1.2
	MsgQueue-0_02:1.2
	MsgQueue-0_01:1.2
	iniitial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2012.01.14.22.59.58;	author srevill;	state Exp;
branches;
next	1.5;
commitid	3gXUTjU6ZPuq8cPv;

1.5
date	2002.04.12.13.46.20;	author srevill;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.01.15.50.29;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	99.11.30.11.35.27;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	99.02.02.11.01.36;	author srose;	state Exp;
branches;
next	1.1;

1.1
date	99.01.15.09.59.16;	author srose;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.01.15.09.59.16;	author srose;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.09. Tagged as 'MsgQueue-0_09'
@
text
@# Copyright 1999 Element 14 Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for MsgQueue
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 05-Jan-99  SNB          Created

COMPONENT = MsgQueue
RAM_MODULE = rm.${COMPONENT}
ROM_MODULE = aof.${COMPONENT}
DBG_MODULE = rm.${COMPONENT}D

FULL_COMPONENT = MessageQueue

#
# Paths
#
EXP_HDR = <export$dir>

#
# Export Paths for Messages module
#
RESDIR = <resource$dir>.Resources2.${FULL_COMPONENT}
RESFSDIR   = Resources.${FULL_COMPONENT}

#
# Generic options:
#
MKDIR   = do mkdir -p
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
RM      = remove
MODSQZ  = modsqz
WIPE    = x wipe
CD	= dir
TOUCH	= stamp

CPFLAGS = ~cfr~v
WFLAGS = ~c~v

#
# Include files
#
INCLUDES=	-IC:

#
# Libraries
#
CLIB		= Clib:o.Stubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.AbsSym
INETLIB		= TCPIPLibs:o.inetlibzm
SOCKLIB		= TCPIPLibs:o.socklibzm
ASMUTILS        = C:AsmUtils.o.AsmUtilszm

DEPEND		= -depend !Depend
DBGFLAGS        = -DTRACE
DEFINES         = 
CENV		= ${DEPEND} ${THROWBACK}

ASFLAGS		= ${DEPEND} ${THROWBACK}
CFLAGS		= -c -ffah -zM -zps1 -Wp ${INCLUDES} ${DEFINES} ${CENV}
CMHGFLAGS	= ${DEPEND} ${THROWBACK} -p

ROM_OBJS	= or.msgqueue or.module or.utils o.msgqhdr
RAM_OBJS	= o.msgqueue  o.module  o.utils  o.msgqhdr ${RESF}
DBG_OBJS	= od.msgqueue od.module od.utils o.msgqhdr ${RESF}

RESF		= o.msgs

#
# Rule patterns
#
.SUFFIXES:	.o .od .or .s .c .cmhg .h
.c.o:;		${CC} ${CFLAGS} -o $@@ $<
.c.or:;		${CC} ${CFLAGS} -DROM -o $@@ $<
.c.od:;		${CC} ${CFLAGS} ${DBGFLAGS} -o $@@ $<
.cmhg.o:;	${CMHG} ${CMHGFLAGS} -o $@@ $< -d h.msgqhdr
.cmhg.h:;	${CMHG} ${CMHGFLAGS} -d $@@ $<
.cmhg.od:;	${CMHG} ${CMHGFLAGS} -o $@@ $< -d h.msgqhdr ${DBGFLAGS}
.s.o:;		${AS} ${ASFLAGS} -o $@@ $<

msgqhdr.h: msgqhdr.o
	${TOUCH} $@@
	
msgqhdr.o: VersionNum

od.msgqhdr: VersionNum

#
# Main rules:
#
#
all: ${RAM_MODULE} o.dirs
        @@echo ${COMPONENT}: Module built (RAM)

ramtrace: ${DBG_MODULE} o.dirs
	@@echo ${COMPONENT}: Module built (TRACE)

rom: ${ROM_MODULE} o.dirs
        @@echo ${COMPONENT}: Module built (ROM)

install: ${RAM_MODULE} o.dirs
        ${MKDIR} ${INSTDIR}
        ${CP} ${RAM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: Module installed (RAM)

install_rom: ${ROM_MODULE}
        ${CP} ${ROM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: Module installed (ROM)

resources: LocalRes:Messages
        TokenCheck LocalRes:Messages
        ${MKDIR} ${RESDIR}
        ${CP} LocalRes:Messages ${RESDIR}.Messages ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied to Messages module

clean:
        ${WIPE} o ${WFLAGS}
        ${WIPE} od ${WFLAGS}
        ${WIPE} or ${WFLAGS}
        ${WIPE} aof ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
        ${WIPE} h.msgqhdr ${WFLAGS}
        ${WIPE} linked ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

o.dirs:
	${MKDIR} o
	${MKDIR} od
	${MKDIR} or
	create $@@

export:
        @@echo ${COMPONENT}: export complete


#
# Targets
#
${RAM_MODULE}:	${RAM_OBJS} ${CLIB} ${ASMUTILS}
	${MKDIR} rm
	$(LD) -o $@@ -rmf ${RAM_OBJS} ${CLIB} ${ASMUTILS}
        ${MODSQZ} $@@
        Access $@@ RW/R

${ROM_MODULE}:	${ROM_OBJS} ${ROMCSTUBS} ${ASMUTILS}
	${MKDIR} aof
	$(LD) -o $@@ -aof ${ROM_OBJS} ${ROMCSTUBS} ${ASMUTILS}

${DBG_MODULE}:	${DBG_OBJS} ${CLIB} ${ASMUTILS}
	${MKDIR} rm
	$(LD) -o $@@ -rmf ${DBG_OBJS} ${CLIB} ${ASMUTILS}
        Access $@@ RW/R

${RESF}: LocalRes:Messages
	TokenCheck LocalRes:Messages
	resgen messages_file $@@ LocalRes:Messages ${RESFSDIR}.Messages

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${MKDIR} linked
        ${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${ROM_MODULE} ${ABSSYM}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete


# Dynamic dependencies:
@


1.5
log
@  Makefile improvements.
Detail:
  * Added/fixed the install rule for disc builds as required for the Baseline
    builds.
  * The MkClean file now calls stripdepnd to remove dynamic dependencies.
Admin:
  Builds and installs.

Version 0.07. Tagged as 'MsgQueue-0_07'
@
text
@d53 1
a53 1
WIPE    = -wipe
@


1.4
log
@  Fix for ROM builds so that they find their message files.
Detail:
  The ROM builds export the Message file to the messages module as
  Resources2.MessageQueue.Messages instead of *.MsgQueue.*.
Admin:
  Requires build to occur on long filename disc.

Version 0.06. Tagged as 'MsgQueue-0_06'
@
text
@d45 1
a45 1
MKDIR   = cdir
d121 5
@


1.3
log
@  Assembler code removed.
Detail:
  Imports IRQ management from AsmUtils.
  c/msgqueue modified to call ensure_irqs_off/restore_irqs instead of
    enter_critical/leave_critical.  Replacement done via macros.
Admin:
  Build RAM build.

Version 0.05. Tagged as 'MsgQueue-0_05'
@
text
@d39 1
a39 1
RESDIR = <resource$dir>.Resources2.${COMPONENT}
@


1.2
log
@MsgQ is now in an acceptable state for integration testing to begin.

Version 0.01. Tagged as 'MsgQueue-0_01'
@
text
@d73 1
d84 3
a86 3
ROM_OBJS	= or.msgqueue or.module or.utils o.msgqhdr o.calls
RAM_OBJS	= o.msgqueue  o.module  o.utils  o.msgqhdr o.calls ${RESF}
DBG_OBJS	= od.msgqueue od.module od.utils o.msgqhdr o.calls ${RESF}
d155 1
a155 1
${RAM_MODULE}:	${RAM_OBJS} ${CLIB}
d157 1
a157 1
	$(LD) -o $@@ -rmf ${RAM_OBJS} ${CLIB}
d161 1
a161 1
${ROM_MODULE}:	${ROM_OBJS} ${ROMCSTUBS}
d163 1
a163 1
	$(LD) -o $@@ -aof ${ROM_OBJS} ${ROMCSTUBS}
d165 1
a165 1
${DBG_MODULE}:	${DBG_OBJS} ${CLIB}
d167 1
a167 1
	$(LD) -o $@@ -rmf ${DBG_OBJS} ${CLIB}
@


1.1
log
@Initial revision
@
text
@d83 3
a85 3
ROM_OBJS	= or.msgqueue or.module or.utils o.msgqhdr
RAM_OBJS	= o.msgqueue  o.module  o.utils  o.msgqhdr ${RESF}
DBG_OBJS	= od.msgqueue od.module od.utils o.msgqhdr ${RESF}
@


1.1.1.1
log
@Initial import.  Snapshot following review with Richard Warren (review
changes / notes included).  Review focussed mainly on checking and 
confirming validity of (pseudo) code in messagequeue_send() under various
interrupt conditions, and the best way of optimizing the registering and
deregistering of queues. 
@
text
@@
