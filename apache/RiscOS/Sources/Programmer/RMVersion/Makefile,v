head	1.3;
access;
symbols
	RMVersion-0_04:1.3
	RMVersion-0_03:1.2
	RMVersion-0_02:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.01.14.23.00.05;	author srevill;	state Exp;
branches;
next	1.2;
commitid	vWCtkRahNaKs8cPv;

1.2
date	99.11.18.12.56.15;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.12.07.14.38.26;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.07.14.38.26;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.04. Tagged as 'RMVersion-0_04'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for RMVersion
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 25-Jan-98  SNB          Created.
#

LIBDIR = <Lib$Dir>

#
# Generic options:
#
MKDIR   = cdir
AR	= libfile
AS      = objasm
CC	= cc
LD	= link
CP      = copy
RM      = remove
TOUCH	= create
WIPE	= x wipe
RM	= remove

CCFLAGS = -c -depend !Depend ${THROWBACK} -IC:
CPFLAGS = ~cfr~v
WFLAGS  = ~c~v
ASFLAGS	= -depend !Depend -Stamp -quit ${THROWBACK} -o $@@ RMVersion.s
ARFLAGS = -c

LDFLAGS_A=-o $@@
LDFLAGS_U=-bin -base 0 -o $@@

CLIB		= Clib:o.Stubs

#
# Program specific options:
#
COMPONENT = RMVersion
SOURCE    = s.RMVersion
TARGET_U  = RMVersion
TARGET_A  = TestApp

OBJ_A	= RMVersionA.o
OBJ_Z	= RMVersionZ.o
OBJ_U	= RMVersionU.o

OBJS	= ${OBJ_A} ${OBJ_Z} ${OBJ_U}
HDRS	= ${COMPONENT}

#
# Rule patterns
#
.c.o:;	${CC} ${CCFLAGS} -o $@@ c.$*


#
# Generic rules:
#
export: export_${PHASE}

clean:
	${WIPE} o ${WFLAGS}
	${RM} ${TARGET_U}
	${RM} ${TARGET_A}
        @@echo ${COMPONENT}: cleaned

export_libs: export_docs ${OBJ_A} ${OBJ_Z} dirs
	${AR} ${ARFLAGS} -o ${LIBDIR}.${COMPONENT}.o.RMVersion ${OBJ_A}
	${AR} ${ARFLAGS} -o ${LIBDIR}.${COMPONENT}.o.RMVersionZ ${OBJ_Z}
        @@echo ${COMPONENT}: export complete (libs)

export_hdrs: export_docs ${HDRS} dirs
	${CP} h ${LIBDIR}.${COMPONENT}.h ${CPFLAGS}
	${CP} VersionNum ${LIBDIR}.${COMPONENT}.VersionNum ${CPFLAGS}
        @@echo ${COMPONENT}: export complete (hdrs)

export_docs: dirs
	${CP} VersionNum ${LIBDIR}.${COMPONENT}.VersionNum ${CPFLAGS}
	${CP} Docs ${LIBDIR}.${COMPONENT}.Docs ${CPFLAGS}

dirs:
	${MKDIR} ${LIBDIR}
	${MKDIR} ${LIBDIR}.${COMPONENT}
	${MKDIR} ${LIBDIR}.${COMPONENT}.o


all: ${TARGET_U} ${TARGET_A} ${OBJS}

${TARGET_U}: ${OBJ_U}
	${LD} ${LDFLAGS_U} ${OBJ_U}
	settype $@@ Utility

${TARGET_A}: ${OBJ_A} TestApp.o
	${LD} ${LDFLAGS_A} ${OBJ_A} TestApp.o ${CLIB}
	
${OBJ_A}: ${SOURCE} o.dirs
	${AS} ${ASFLAGS} -PreDefine "utility SETL 1=0"
${OBJ_U}: ${SOURCE} o.dirs
	${AS} ${ASFLAGS} -PreDefine "utility SETL 1=1"
${OBJ_Z}: ${SOURCE} o.dirs
	${AS} ${ASFLAGS} -PreDefine "utility SETL 1=0" \
		-PreDefine "module SETL 1=1"

o.dirs:
	${MKDIR} o
	${TOUCH} $@@

# Dynamic dependencies:
@


1.2
log
@  32-bit capability added.
Detail:
  The Utility can run in either USR26 or USR32 mode.
  The AOF files contain APCS-R or APCS-32 code as per build options.
Admin:
  Test application run to verify code still works.

Version 0.03. Tagged as 'RMVersion-0_03'
@
text
@d38 1
a38 1
WIPE	= -wipe
@


1.1
log
@Initial revision
@
text
@d84 1
a84 1
export_libs: ${OBJ_A} ${OBJ_Z} dirs
d89 1
a89 1
export_hdrs: ${HDRS} dirs
d91 6
@


1.1.1.1
log
@
Initial import of a small library to provide module version extraction
facilities.  A library is exported containing code providing a single
API to extract version numbers from ROM modules, modules in the RMA and
modules stored in files.

A test program can be built and a Utility can be built which exports
version numbers via system variables.

Tagged as RMVersion-0_02.

@
text
@@
