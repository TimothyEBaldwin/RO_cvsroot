head	1.6;
access;
symbols
	CLXLite-2_07:1.6
	CLXLite-2_06:1.6
	CLXLite-2_05:1.6
	CLXLite-2_04:1.6
	CLXLite-2_03:1.6
	CLXLite-2_02:1.6
	CLXLite-2_01:1.5
	CLXLite-2_00:1.5
	CLX-1_35:1.5
	CLX-1_34:1.5
	CLX-1_33:1.5
	CLX-1_32:1.5
	CLX-1_31:1.5
	CLX-1_30:1.5
	CLX-1_29:1.5
	CLX-1_28:1.5
	CLX-1_27:1.5
	CLX-1_26:1.5
	CLX-1_25:1.5
	CLX-1_24:1.4
	CLX-1_23:1.4
	CLX-1_22:1.4
	CLX-1_21:1.4
	CLX-1_20:1.4
	CLX-1_19:1.3
	dellis_autobuild_BaseSW:1.2
	CLX-1_18:1.2
	CLX-1_17:1.2
	CLX-1_16:1.2
	dcotton_autobuild_BaseSW:1.5
	CLX-1_15:1.2
	CLX-1_14:1.2
	CLX-1_13:1.2
	CLX-1_12:1.2
	CLX-1_11:1.2
	CLX-1_10:1.2
	CLX-1_09:1.2
	CLX-1_08:1.2
	CLX-1_07:1.1
	CLX-1_06:1.1
	CLX-1_05:1.1
	CLX-1_04:1.1;
locks; strict;
comment	@# @;


1.6
date	2010.05.19.15.03.12;	author bavison;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.04.12.24.56;	author jberanek;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.02.13.47.28;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.27.14.45.46;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	99.10.08.21.36.14;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.11.11.12.30.56;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@  Changes to facilitate platform independence.
Detail:
  * Added shell-script make wrapper
  * Removed Norcroft-specific options from Makefile
  * Added GCC equivalents of inline assembler
  * Force use of our kernel.h with GCC (its own one is incomplete)
  * Workarounds to allow full-fat CLX library to use shared makefiles
Admin:
  Tested by rebuilding the DDE tools

Version 2.02. Tagged as 'CLXLite-2_02'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
  Title:        host - What system am I running on?
  Copyright:    (C) 1987, Acorn Computers Ltd., Cambridge, England.
  $Id: host,v 1.5 2000/12/04 12:24:56 jberanek Exp $
*/

#include <string.h>
#include "CLib/kernel.h"
#include "host.h"

static int host = _kernel_SPRINGBOARD;
static char sep_ch = '\\';
static char select_dir[5] = "cd ";
static char logon_dir_sym[4] = "\\";
static char var_sep_ch = ':';

extern char host_dir_sep_char(void)
{
  return sep_ch;
}

extern char host_env_var_sep_char(void)
{
  return var_sep_ch;
}

extern char *host_select_dir(void)
{
  return (char *) &select_dir;
}

extern char *host_logon_dir_sym(void)
{
  return (char *) &logon_dir_sym;
}

extern int host_system(void)
{
#ifndef __riscos
  host = _kernel_A_UNIX;
#else
  host = _kernel_hostos();
#endif
  return host;
}

extern int host_init(void)
{
  switch (host_system()) {
    case _kernel_SPRINGBOARD:
             sep_ch = '\\'; strcpy(select_dir, "cd "); strcpy(logon_dir_sym, "\\");
             var_sep_ch = ':';
             break;
    case _kernel_A_UNIX:
             sep_ch = '/'; strcpy(select_dir, "cd "); strcpy(logon_dir_sym, "~");
             var_sep_ch = ':';
             break;
    default: sep_ch = '.'; strcpy(select_dir, "dir "); strcpy(logon_dir_sym, "&");
             var_sep_ch = ',';
  }
  return host;
}
@


1.5
log
@  Build fixes
Detail:
  Build fixes for Unix:

* We now use -I{RISCOS_CLIB_HDRS} -I- to ensure that RISCOS C
   library headers aren't used in preference to system headers.

* INSTALL(1) now used to install the clx library.  This is available
   on both Solaris and Linux systems.

Admin:
  Built on Solaris and on a Linux glibc 2.1.3 system.


Version 1.25. Tagged as 'CLX-1_25'
@
text
@d18 1
a18 1
  $Id: host,v 1.4 2000/10/02 13:47:28 sbrodie Exp $
d22 1
a22 1
#include "kernel.h"
d53 1
a53 1
#ifdef unix
@


1.4
log
@  Added elf.h, updated some definitions in aof.h
  Added the thumb disassembler and symbol mapping.
  Added more functionality to bytesex and symdefs.
Detail:
  The symdefs library code can now identify a file without loading it
    into memory in its entirety - this saves the linker a lot of grief.
    A new API is available to ask CLX whether the file is a symdefs
    file or not and defer loading of the symbols until a later date
    (during the load1 phase where the linker is concerned).
  elf.h makes all the definitions per the ARM ELF specification.  The
    linker requires these definitions (even if TARGET_HAS_ELF is not
    defined).
  Some more fixes to the disassembler.
  bytesex has a new API: bytesex_reverse_auto(flag), where flag is either
    bytesex_WANT_LITTLE_ENDIAN or bytesex_WANT_BIG_ENDIAN.  This relieves
    tools of the need to mess around trying to work out the endianness of
    the host to call bytesex_reverse or not.  (bytesex_reversing can be
    called to find out if reversing is happening or not after the call
    to bytesex_reverse_auto.)
  A new macro has been added to aof.h: rel_II to construct the II field
    of a type 2 AOF relocation.
Admin:
  Required by link 5.19 and later.
  Required by objasm 3.19 and later.

Version 1.20. Tagged as 'CLX-1_20'
@
text
@d18 1
a18 1
  $Id$
d22 1
a22 1
#include <kernel.h>
@


1.3
log
@  Added pathmacro source.
  Added hash_destroy.
Detail:
  The pathmacro source file exports a single function for resolving
    RISC OS pathnames on whatever the host system is.  For example, this
    means that provided the environment variable HdrPATH is set to point
    to the appropriate directories, then "Hdr:RISCOS" will be resolved
    to the full pathname that can be passed to fopen et al.
  hash_destroy function added to enable hash tables to be destroyed.
    Each associate value is passed to a supplied callback function to
    permit each value to be freed.  Usually this will be NULL (no action)
    or the address of the library function free unless a private allocator
    has been used by the caller.
Admin:
  Tested on RISC OS and Solaris.

Version 1.19. Tagged as 'CLX-1_19'
@
text
@d18 1
a18 2
  $Revision: 1.2 $  LDS 03-Feb-88
  $Revision: 1.2 $  LH 28-Feb-89
@


1.2
log
@  filestamp functions for UNIX added.
  host functions for UNIX corrected.
Detail:
  host.c will now tell UNIX targets that:
    The command to change directory is "cd" and not "dir"
    The directory separator is / and not .
    Home directory synonym is ~ and not &
  filestamp.c functions for UNIX added (were never there!)
    filestamp_now() returns result of time() C library call
    filestamp_get(file) returns st_mtime from stat(file) result
    filestamp_mk_execable does nothing.
    filestamp_ignore_centiseconds does nothing.
Admin:
  Tested on Solaris (x86 and SPARC) and RISC OS.
  Required by Solaris builds of modgen (1.01 and later)
  Required by other UNIX builds which rely on host bits being right!
  This implementation of filestamp_* functions will have severe
    difficulties functioning in an environment which utilises 64-bit
    time_t.

Version 1.08. Tagged as 'CLX-1_08'
@
text
@d18 2
a19 2
  $Revision: 1.1 $  LDS 03-Feb-88
  $Revision: 1.1 $  LH 28-Feb-89
d30 1
d37 5
d67 1
d71 1
d74 1
@


1.1
log
@* Imported host and hash header and source files from older CLX's so
  that modsqz can build.
* Makefile uses -ff to strip function names from the code areas.

Version 1.04. Tagged as 'CLX-1_04'
@
text
@d18 2
a19 2
  $Revision: 1.02 $  LDS 03-Feb-88
  $Revision: 1.03 $  LH 28-Feb-89
d61 3
@
