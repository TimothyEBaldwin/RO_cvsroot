head	1.2;
access;
symbols
	CLXLite-2_07:1.2
	CLXLite-2_06:1.2
	CLXLite-2_05:1.2
	CLXLite-2_04:1.2
	CLXLite-2_03:1.2
	CLXLite-2_02:1.2
	CLXLite-2_01:1.1
	CLXLite-2_00:1.1
	CLX-1_35:1.1
	CLX-1_34:1.1
	CLX-1_33:1.1
	CLX-1_32:1.1
	CLX-1_31:1.1
	CLX-1_30:1.1
	CLX-1_29:1.1
	CLX-1_28:1.1
	CLX-1_27:1.1
	CLX-1_26:1.1
	CLX-1_25:1.1
	CLX-1_24:1.1
	CLX-1_23:1.1
	CLX-1_22:1.1
	CLX-1_21:1.1
	dcotton_autobuild_BaseSW:1.1
	CLX-1_20:1.1;
locks; strict;
comment	@# @;


1.2
date	2010.05.19.15.03.13;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.02.13.47.28;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Changes to facilitate platform independence.
Detail:
  * Added shell-script make wrapper
  * Removed Norcroft-specific options from Makefile
  * Added GCC equivalents of inline assembler
  * Force use of our kernel.h with GCC (its own one is incomplete)
  * Workarounds to allow full-fat CLX library to use shared makefiles
Admin:
  Tested by rebuilding the DDE tools

Version 2.02. Tagged as 'CLXLite-2_02'
@
text
@/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
  Title:     Code to support mapping symbols
  $Revision: 1.1 $  LDS 16-Jan-91
*/

#ifndef __mapping_h
#define __mapping_h

#include "CLX/aof_.h"

typedef struct
{
    unsigned32 base;
    unsigned32 size;
    int type;
} map_entry;

typedef struct
{
    unsigned32 last_base;
    unsigned32 last_size;
    int last_entry;
    int last_type;
    int entries;
    map_entry entry[1];
} symbol_map;

symbol_map *mapping_init(const char *areaname, int32 attributes,
                         unsigned32 base, const char *strt,
                         const aof_symbol *symt, int nsyms);
/*
 * Prepare a map for an area. For the area, pass in the name,
 * the attributes and the base address from the area header.
 * Pass in the object file's symbol table by symt and nsyms.
 * Pass in the string table as strt.
 */

const map_entry *mapping_region(symbol_map *map, unsigned32 addr);
/*
 * Return the region enclosing the address addr. Addr should
 * either be the offset within the area, or the absolute
 * address if an absolute area. The returned entry will give
 * the base address of the enclosing area, and its size (the last
 * area will have size 0xFFFFFFFF). The type will be one of
 * 'a', 'd' or 't'.
 */

void mapping_final(symbol_map *map);
/*
 * Free the symbol map.
 */

#endif
@


1.1
log
@  Added elf.h, updated some definitions in aof.h
  Added the thumb disassembler and symbol mapping.
  Added more functionality to bytesex and symdefs.
Detail:
  The symdefs library code can now identify a file without loading it
    into memory in its entirety - this saves the linker a lot of grief.
    A new API is available to ask CLX whether the file is a symdefs
    file or not and defer loading of the symbols until a later date
    (during the load1 phase where the linker is concerned).
  elf.h makes all the definitions per the ARM ELF specification.  The
    linker requires these definitions (even if TARGET_HAS_ELF is not
    defined).
  Some more fixes to the disassembler.
  bytesex has a new API: bytesex_reverse_auto(flag), where flag is either
    bytesex_WANT_LITTLE_ENDIAN or bytesex_WANT_BIG_ENDIAN.  This relieves
    tools of the need to mess around trying to work out the endianness of
    the host to call bytesex_reverse or not.  (bytesex_reversing can be
    called to find out if reversing is happening or not after the call
    to bytesex_reverse_auto.)
  A new macro has been added to aof.h: rel_II to construct the II field
    of a type 2 AOF relocation.
Admin:
  Required by link 5.19 and later.
  Required by objasm 3.19 and later.

Version 1.20. Tagged as 'CLX-1_20'
@
text
@d23 1
a23 1
#include "aof.h"
@

