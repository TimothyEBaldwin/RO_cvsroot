head	1.35;
access;
symbols
	DebugLib-0_72:1.35
	DebugLib-0_71:1.35
	DebugLib-0_70:1.35
	DebugLib-0_69:1.35
	DebugLib-0_68:1.35
	DebugLib-0_67:1.34
	DebugLib-0_66:1.34
	DebugLib-0_65:1.34
	DebugLib-0_64:1.33
	RO_5_07:1.32
	DebugLib-0_63:1.32
	DebugLib-0_62:1.32
	DebugLib-0_61:1.31
	DebugLib-0_60:1.30
	DebugLib-0_59:1.29
	DebugLib-0_58:1.29
	DebugLib-0_57:1.28
	dellis_autobuild_BaseSW:1.27
	DebugLib-0_56:1.27
	DebugLib-0_55:1.27
	DebugLib-0_54:1.27
	DebugLib-0_53:1.26
	DebugLib-0_52:1.25
	DebugLib-0_51:1.25
	DebugLib-0_50:1.24
	DebugLib-0_49:1.24
	sbrodie_sedwards_16Mar2000:1.23
	DebugLib-0_48:1.23
	DebugLib-0_47:1.23
	DebugLib-0_46:1.22
	dcotton_autobuild_BaseSW:1.31
	DebugLib-0_45:1.22
	DebugLib-0_44:1.21
	DebugLib-0_43:1.20
	DebugLib-0_42:1.19
	DebugLib-0_41:1.19
	DebugLib-0_40:1.18
	DebugLib-0_39:1.17
	DebugLib-0_38:1.16
	DebugLib-0_33-1_28_2_1:1.14.2.1
	DebugLib-0_37:1.15
	DebugLib-0_36:1.15
	DebugLib-0_35:1.15
	DebugLib-0_34:1.15
	nturton_DebugLib-0_24:1.9
	DebugLib-0_33:1.14
	DebugLib-0_32:1.13
	DebugLib-0_31:1.13
	DebugLib-0_30:1.12
	DebugLib-0_29:1.12
	DebugLib-0_28:1.11
	DebugLib-0_27:1.11
	DebugLib-0_26:1.11
	DebugLib-0_25:1.10
	DebugLib-0_24:1.8
	DebugLib-0_23:1.8
	DebugLib-0_22:1.8
	DebugLib-0_21:1.8
	DebugLib-0_20:1.8
	DebugLib-0_19:1.7
	DebugLib-0_18:1.7
	sforrest_daytona_appflash-0_31:1.1.2.2
	DebugLib-0_17:1.7
	DebugLib-0_16:1.7
	DebugLib-0_15:1.7
	DebugLib-0_14:1.7
	DebugLib-0_13:1.6
	DebugLib-0_12:1.5
	DebugLib-0_11:1.3
	DebugLib-0_10:1.3
	blaughto_daytona_appflash-0_30:1.1.2.2
	blaughto_daytona_appflash-0_29:1.1.2.2
	blaughto_daytona_appflash-0_28:1.1.2.2
	jberanek_debuglib-0_09:1.1.2.2
	blaughto_daytona_appflash-0_27:1.1.2.2
	blaughto_daytona_appflash-0_26:1.1.2.2
	blaughto_daytona_appflash-0_25:1.1.2.2
	blaughto_daytona_appflash-0_24:1.1.2.2
	blaughto_daytona_appflash-0_23:1.1.2.2
	jberanek_debuglib-0_08:1.1.2.2
	blaughto_daytona_appflash-0_21:1.1.2.2
	blaughto_daytona_appflash-0_20:1.1.2.2
	rwarren_debuglib-0_07:1.1.2.2
	blaughto_daytona_appflash-0_19:1.1.2.1
	jberanek_debuglib-0_06:1.1.2.1
	blaughto_daytona_appflash-0_18:1.1.2.1
	jberanek_debuglib-0_05:1.1.2.1
	Daytona_bp:1.1
	Daytona:1.1.0.2;
locks; strict;
comment	@# @;


1.35
date	2014.10.01.07.56.28;	author rsprowson;	state Exp;
branches;
next	1.34;
commitid	I4DkrDPuu5YshtSx;

1.34
date	2010.03.23.00.36.50;	author jlee;	state Exp;
branches;
next	1.33;

1.33
date	2008.09.10.15.40.00;	author srevill;	state Exp;
branches;
next	1.32;

1.32
date	2002.05.24.09.33.03;	author jberanek;	state Exp;
branches;
next	1.31;

1.31
date	2001.09.17.10.53.32;	author jberanek;	state Exp;
branches;
next	1.30;

1.30
date	2001.05.02.17.08.21;	author mjenning;	state Exp;
branches;
next	1.29;

1.29
date	2001.02.01.16.55.16;	author bavison;	state Exp;
branches;
next	1.28;

1.28
date	2000.10.16.11.52.50;	author jberanek;	state Exp;
branches;
next	1.27;

1.27
date	2000.05.17.09.56.24;	author jberanek;	state Exp;
branches;
next	1.26;

1.26
date	2000.05.16.16.01.42;	author jberanek;	state Exp;
branches;
next	1.25;

1.25
date	2000.04.13.11.25.49;	author sbrodie;	state Exp;
branches;
next	1.24;

1.24
date	2000.04.05.09.15.00;	author jberanek;	state Exp;
branches;
next	1.23;

1.23
date	2000.01.21.10.56.44;	author jberanek;	state Exp;
branches;
next	1.22;

1.22
date	99.09.21.08.58.35;	author jberanek;	state Exp;
branches;
next	1.21;

1.21
date	99.09.21.08.54.03;	author jberanek;	state Exp;
branches;
next	1.20;

1.20
date	99.09.13.14.20.22;	author jberanek;	state Exp;
branches;
next	1.19;

1.19
date	99.09.08.13.40.18;	author jberanek;	state Exp;
branches;
next	1.18;

1.18
date	99.05.28.15.21.56;	author jberanek;	state Exp;
branches;
next	1.17;

1.17
date	99.05.27.15.51.53;	author nbingham;	state Exp;
branches;
next	1.16;

1.16
date	99.05.26.13.19.45;	author jberanek;	state Exp;
branches;
next	1.15;

1.15
date	99.05.19.15.20.16;	author sbrodie;	state Exp;
branches;
next	1.14;

1.14
date	99.05.10.15.48.50;	author jberanek;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	99.04.26.08.39.04;	author jberanek;	state Exp;
branches;
next	1.12;

1.12
date	99.03.19.11.54.14;	author blaughto;	state Exp;
branches;
next	1.11;

1.11
date	99.01.14.17.43.51;	author jberanek;	state Exp;
branches;
next	1.10;

1.10
date	99.01.11.16.03.50;	author nbingham;	state Exp;
branches;
next	1.9;

1.9
date	98.11.17.12.51.26;	author jberanek;	state Exp;
branches;
next	1.8;

1.8
date	98.11.05.15.14.55;	author Spin;	state Exp;
branches;
next	1.7;

1.7
date	98.09.17.12.48.18;	author jberanek;	state Exp;
branches;
next	1.6;

1.6
date	98.09.16.13.48.47;	author jberanek;	state Exp;
branches;
next	1.5;

1.5
date	98.09.16.11.28.49;	author jberanek;	state Exp;
branches;
next	1.4;

1.4
date	98.09.16.09.33.06;	author jberanek;	state Exp;
branches;
next	1.3;

1.3
date	98.09.04.17.19.02;	author jberanek;	state Exp;
branches;
next	1.2;

1.2
date	98.09.04.15.33.35;	author jberanek;	state Exp;
branches;
next	1.1;

1.1
date	98.02.16.14.18.26;	author jberanek;	state Exp;
branches
	1.1.2.1;
next	;

1.14.2.1
date	99.05.20.12.57.16;	author nbingham;	state Exp;
branches;
next	;

1.1.2.1
date	98.02.25.16.30.21;	author jberanek;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	98.03.25.18.31.02;	author rwarren;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Relocate remotedb
Requires remotedb-0_12.

Version 0.68. Tagged as 'DebugLib-0_68'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************************/
/* File:    DebugLib.h                                                    */
/* Purpose: Header file for DebugLib API.                                 */
/*                                                                        */
/* Copyright [1999-2002] Pace Micro Technology PLC.  All rights reserved. */
/*                                                                        */
/* The copyright in this material is owned by Pace Micro Technology PLC   */
/* ("Pace").  This material is regarded as a highly confidential trade    */
/* secret of Pace.  It may not be reproduced, used, sold or in any        */
/* other way exploited or transferred to any third party without the      */
/* prior written permission of Pace.                                      */
/**************************************************************************/

#ifndef __debuglib_h
#define __debuglib_h

#ifdef DEBUGLIB

#    include <stdio.h>
#    include <stdarg.h>
#    include <stdlib.h>

#    ifndef __kernel_h
#      include "kernel.h"
#    endif

/* Lots of fun trying to set up a boolean type */
#    ifndef BOOL_DEFINED
#      define BOOL_DEFINED
#      if defined(bool)
#        define DebugLib_BOOL bool
#      else
#        define DebugLib_BOOL int
#      endif
#      if !defined(BOOL)
#        define BOOL DebugLib_BOOL
#      endif /* !BOOL */
#      if !defined(TRUE)
#        define TRUE 1
#      endif /* !TRUE */
#      if !defined(FALSE)
#        define FALSE 0
#      endif /* !FALSE */
#    else /* BOOL_DEFINED defined */
#      define DebugLib_BOOL BOOL
#    endif /* BOOL_DEFINED */


    typedef enum
    {
      NULL_OUTPUT = 0,       /* No valid debugging mechanisms found. */
      TRACKER_OUTPUT = 1,    /* Output to !Tracker by Andy Armstrong. (Wimp window) */
      PRINTF_OUTPUT = 2,     /* Standard printf statements. */
      NOTUSED_OUTPUT = 3,    /* Not currently used. */
      PDEBUG_OUTPUT = 4,     /* Parallel port debugging (JSmith). */
      SOCKET_OUTPUT = 5,     /* Debug to network socket (RBuckley). */
      DEBUGIT_OUTPUT = 6,    /* Output to !List-Debug - Wimp based debug system (MChallis). */
      TML_OUTPUT = 7,        /* Output to TML debugging podule. */
      FILE_OUTPUT = 8,       /* Output to file. */
      SERIAL_OUTPUT = 9,     /* Output to serial port (dual serial interface only). */
      DADEBUG_OUTPUT = 10,   /* Output to dynamic area. */
      BRAINLINK_OUTPUT = 11, /* Output to BrainLink .*/
      REPORTER_OUTPUT = 12,  /* Output to Reporter. */
      SYSLOG_OUTPUT = 13,    /* Output to SysLog module. */
      HAL_OUTPUT = 14,       /* Output to HAL via HAL_DebugTX. */
      /* Put new devices in this space */
      UNSET_OUTPUT        /* Special case, not equivalent NULL_OUTPUT */
    }debug_device;

#    define DebugLib_Options_TasknamePrefix_Off   0u
#    define DebugLib_Options_TasknamePrefix_On    1u
#    define DebugLib_Options_SerialPortLF_Off     0u
#    define DebugLib_Options_SerialPortLF_On      (1u<<1)
#    define DebugLib_Options_ScreenCornering_Off  0
#    define DebugLib_Options_ScreenCornering_On   (1u<<2)
#    define DebugLib_Options_StampDebug_Off       0
#    define DebugLib_Options_StampDebug_On        (1u<<3)

#    define DebugLib_OutputBufferOff_Flag_UseCurrentDevice   1u

#    ifdef __cplusplus
    extern "C" {
#    endif

    extern void debug_initialise (const char *, const char *, const char *);
    extern void debug_initialise_trace (debug_device, const char *);
    extern void debug_terminate (void);
    extern void debug_output_device (debug_device);
    extern _kernel_oserror *debug_output_buffer_on (int, int);
    extern void debug_output_buffer_off (int flags, debug_device device);
    extern void debug_beep (void);
    extern const char *debug_version (void);
    /* This call now deprecated, DebugLib now adds the atexit itself in debug_initialise */
#    define debug_atexit()

    /* Functions to set options */
    extern void debug_set_device (debug_device);
    extern void debug_set_raw_device (debug_device);
    extern void debug_set_trace_device (debug_device);
    extern void debug_set_taskname_prefix (DebugLib_BOOL);
    extern void debug_set_area_level_prefix (DebugLib_BOOL);
    extern void debug_set_stamp_debug (DebugLib_BOOL);
    extern void debug_set_screen_cornering (DebugLib_BOOL);
    extern void debug_set_unbuffered_files (DebugLib_BOOL);
    extern void debug_set_serial_lf (DebugLib_BOOL);
    extern void debug_set_serial_port_speed (int);
    extern void debug_set_serial_port_number (int);
    extern void debug_set_dump_width (size_t);
    extern void debug_set_area_pad_limit (size_t);

    /* Functions to read settings/options */
    extern debug_device debug_read_device (void);

    /* Deprecated functions */
#    define debug_output_device(debug_device) debug_set_device(debug_device)
    extern void debug_set_options (unsigned int, int, int);

    /* Debug output functions that are masked by the macros. These declarations have to be in the
     * header file to avoid linking problems
     */
#    pragma -v1 /* hint to compiler to check f/s/printf format */
    extern void _dprintf(const char *, const char * /*format*/, ...);
    extern void _dprintf_raw(void *, const char * /*format*/, ...);
    extern void _dfprintf(const char *, debug_device stream, const char * /*format*/, ...);
    extern void _dvprintf(const char *area_level, const char *format, const va_list arg);
#    pragma -v0 /* back to the default */

    extern void ddumpbuf(const char *area_level, const void *buffer, size_t size, size_t offset);

#    ifdef DEBUGLIB_NOBRACKETS
#        define dprintf(a,...)          _dprintf(a,__VA_ARGS__)
#        define dprintf_raw(a,...)      _dprintf_raw(a,__VA_ARGS__)
#        define dfprintf(a,b,...)       _dfprintf(a,b,__VA_ARGS__)
#        define dvprintf(a,b,c)         _dvprintf(a,b,c)
#    else
#        define dprintf(a)              _dprintf a
#        define dprintf_raw(a)          _dprintf_raw a
#        define dfprintf(a)             _dfprintf a
#        define dvprintf(a)             _dvprintf a
#    endif

    /* Include the remotedb headers */
#    ifndef REMOTE_DEBUG
#      define REMOTE_DEBUG
#      define __BODGE
#    endif
#    include "remotedb/remote.h"
#    ifdef __BODGE
#      undef REMOTE_DEBUG
#      undef __BODGE
#    endif

    /* And export the remote debug session variable */
    extern remote_debug_session *debug_remotedb_info;

#    ifdef __cplusplus
    }
#    endif

#else

#    define debug_initialise(a,b,c)
#    define debug_output_device(a)
#    define debug_output_buffer_on(a,b)
#    define debug_output_buffer_off(a,b)
#    define debug_terminate()
#    define debug_beep()
#    define debug_initialise_trace(a,b)
#    define debug_set_options(a,b,c)
#    define debug_set_device(a)
#    define debug_set_trace_device(a)
#    define debug_set_raw_device(a)
#    define debug_set_taskname_prefix(a)
#    define debug_set_area_level_prefix(a)
#    define debug_set_stamp_debug(a)
#    define debug_set_screen_cornering(a)
#    define debug_set_unbuffered_files(a)
#    define debug_set_serial_lf(a)
#    define debug_set_serial_port_speed(a)
#    define debug_set_serial_port_number(a)
#    define debug_set_dump_width(a)
#    define debug_set_area_pad_limit(a)
#    define debug_atexit()
#    define debug_version()
#    define ddumpbuf(a,b,c,d)

#    ifdef DEBUGLIB_NOBRACKETS
#        define dprintf(a,...)
#        define dprintf_raw(a,...)
#        define dfprintf(a,b,...)
#        define dvprintf(a,b,c)
#    else
#        define dprintf(a)
#        define dprintf_raw(a)
#        define dfprintf(a)
#        define dvprintf(a)
#    endif

#endif

#endif

/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ END +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
@


1.34
log
@Add HAL_DebugTX support to DebugLib
Detail:
  Makefile, c/hal, h/hal, c/debug, h/DebugLib - Added new HAL_OUTPUT debug device that calls HAL_DebugTX
  Docs/DebugLib,3d6 - updated StrongHelp docs
Admin:
  Tested in OMAP ROM on rev C2 beagleboard


Version 0.65. Tagged as 'DebugLib-0_65'
@
text
@d161 1
a161 1
#    include "debug/remote.h"
@


1.33
log
@  Adding SysLog and Reporter logging backends to the DebugLib library.
Detail:
  I've added simple backends for the standard SysLog SWI interface and
  the Reporter module. Both of these provide line based APIs so the output
  is line buffered (to a width of 80 characters). I also removed two
  unnecessary forward declarations for static functions in debug.c which
  were producing warnings from Norcroft CC.
Admin:
   Compiled with Norcroft 5.65. Tested on RISC OS 5.13, using DoggySoft
   SysLog 0.20, Reporter 2.64d via a debug build of the USBDriver module.

Version 0.64. Tagged as 'DebugLib-0_64'
@
text
@d79 1
@


1.32
log
@  Added support for variadic macros
Detail:

* If your C compiler supports variadic macros, you can now define
 DEBUGLIB_NOBRACKETS and use dprintf(...) instead of dprintf((...))
 This works with cc 5.45

Admin:
  Tested by taking test harnesses and defining DEBUGLIB_NOBRACKETS
 and removing the extra brackets around all the dprintf statements.


Version 0.62. Tagged as 'DebugLib-0_62'
@
text
@d77 2
@


1.31
log
@  Updated Copyrights, tidied comment header blocks
Detail:
  Updated Copyright messages to show range of years, up to 2001...a bit
 late in the year for that...

  Tidied a few file header comment blocks.

Admin:
  Built on RiscPC.


Version 0.61. Tagged as 'DebugLib-0_61'
@
text
@d19 1
a19 1
/* Copyright [1999-2001] Pace Micro Technology PLC.  All rights reserved. */
a133 1
#    pragma -v1 /* hint to compiler to check f/s/printf format */
a134 1
#    pragma -v1 /* hint to compiler to check f/s/printf format */
a135 1
#    pragma -v1 /* hint to compiler to check f/s/printf format */
d141 11
a151 4
#    define dprintf(a)			_dprintf a
#    define dprintf_raw(a)		_dprintf_raw a
#    define dvprintf(a)			_dvprintf a
#    define dfprintf(a)			_dfprintf a
d198 11
a208 4
#    define dprintf(a)
#    define dprintf_raw(a)
#    define dvprintf(a)
#    define dfprintf(a)
@


1.30
log
@  A new DebugLib device added to allow debugging via the BrainLink module.
  The GUI_test program has been modified to support the new DebugLib device.
  DebugLib stronghelp documentaion has been updated.
Detail:

Admin:
  Tested on my RiscPC, seems to work fine.


Version 0.60. Tagged as 'DebugLib-0_60'
@
text
@d15 12
a26 12
/************************************************************************/
/* File:    DebugLib.h                                                  */
/* Purpose: Header file for DebugLib API.                               */
/*                                                                      */
/* Copyright [1999] Pace Micro Technology PLC.  All rights reserved.    */
/*                                                                      */
/* The copyright in this material is owned by Pace Micro Technology PLC */
/* ("Pace").  This material is regarded as a highly confidential trade  */
/* secret of Pace.  It may not be reproduced, used, sold or in any      */
/* other way exploited or transferred to any third party without the    */
/* prior written permission of Pace.                                    */
/************************************************************************/
@


1.29
log
@Added DADebug support (see RiscOS/Sources/Programmer/DADebug). Original work
was done against version 0.45 of DebugLib, but I don't think anything's
changed that cvs update can't deal with. Not tested.

Version 0.58. Tagged as 'DebugLib-0_58'
@
text
@d65 12
a76 11
      NULL_OUTPUT = 0,    /* No valid debugging mechanisms found. */
      TRACKER_OUTPUT = 1, /* Output to !Tracker by Andy Armstrong. (Wimp window) */
      PRINTF_OUTPUT = 2,  /* Standard printf statements. */
      NOTUSED_OUTPUT = 3, /* Not currently used. */
      PDEBUG_OUTPUT = 4,  /* Parallel port debugging (JSmith). */
      SOCKET_OUTPUT = 5,  /* Debug to network socket (RBuckley). */
      DEBUGIT_OUTPUT = 6, /* Output to !List-Debug - Wimp based debug system (MChallis). */
      TML_OUTPUT = 7,     /* Output to TML debugging podule. */
      FILE_OUTPUT = 8,    /* Output to file. */
      SERIAL_OUTPUT = 9,  /* Output to serial port (dual serial interface only). */
      DADEBUG_OUTPUT = 10,/* Output to dynamic area. */
@


1.28
log
@  A number of changes, made over the months, but which I'd failed to
   checkin.  Tsk.
Detail:
  Some additions to CLI test harness.

  Bits of code in CLI and GUI test harness to check at compile time if
   OSLib and "Toolbox" style boolean definitions work with DebugLib.h

  Changed GUI test harness Makefile to use LocalRes:

  Removed calls to debug_atexit() in test harnesses, they're no longer
   necessary.

  Behaviour change: if you set a device in DebugLib$Device_<taskname>,
   debug_set_device() is called for that device on debug_initialise().

  Added check into debug_set_device(), if it's called with the current
   device, and the current device is initialised, it now does nothing,
   because it doesn't need to.

  Added extra checks into file and socket output methods that ensure
   initialising and/or terminating these devices repeatedly won't
   cause problems.

  Added some extra preprocessor malarky into DebugLib.h so that it should
   handle more boolean definitions.  It should handle (at least) "Toolbox"
   style ones and OSLib ones.

  Changed some used of debug_output_device() to debug_set_device() in Module
   test harness. debug_output_device() is deprecated.

  Fixed a bug in the core termination code...all open devices should now
   be closed correctly on exit.
Admin:
  Built library.
  Built and ran through some tests in the 3 test harnesses.


Version 0.57. Tagged as 'DebugLib-0_57'
@
text
@d75 1
@


1.27
log
@  More boolean type changes.
Detail:
  More drastic changes to try and fix all the wonderful variants of
   the boolean type.

  DebugLib now uses <stdbool.h>, "bool", "false" and "true"
   internally.

  DebugLib.h now prototypes its functions with the type DebugLib_BOOL,
   and does preprocessor jiggery-pokery to try and ensure that
   it, plus TRUE, FALSE and BOOL get defined as something appropriate.
Admin:
  Tested by changing some of the test harnesses to include OSLib,
   stdbool and tboxlib headers.
  Fixed test harness module Makefile to include zm versions of
   libraries in all cases.


Version 0.54. Tagged as 'DebugLib-0_54'
@
text
@d41 1
d58 2
@


1.26
log
@  Boolean definitions updated
Detail:
  Definitions updated to catch OSLib's view on booleans.  If BOOL isn't
   defined, but TRUE is, then we define BOOL to bool and don't redefine
   TRUE and FALSE.

Admin:
  The sooner we're all using <stdbool.h> the better.


Version 0.53. Tagged as 'DebugLib-0_53'
@
text
@d43 14
a56 10
#      ifndef BOOL
         /* Catch OSLib, which defines TRUE and FALSE, but not BOOL or BOOL_DEFINED */
#        ifdef TRUE
#          define BOOL bool
#        else
#          define BOOL int
#          define TRUE 1
#          define FALSE 0
#        endif /* TRUE */
#      endif /* BOOL */
d106 6
a111 6
    extern void debug_set_taskname_prefix (BOOL);
    extern void debug_set_area_level_prefix (BOOL);
    extern void debug_set_stamp_debug (BOOL);
    extern void debug_set_screen_cornering (BOOL);
    extern void debug_set_unbuffered_files (BOOL);
    extern void debug_set_serial_lf (BOOL);
@


1.25
log
@  Moved hashes to left hand column in DebugLib.h
Detail:
  Without this, any RPC software (eg. NFS, rpclib) cannot be compiled
    to use DebugLib for debugging.
Admin:
  Required by anything which uses the current version of rpcgen.


Version 0.51. Tagged as 'DebugLib-0_51'
@
text
@d42 13
a54 7
#    define BOOL_DEFINED
#    ifndef BOOL
#    define BOOL int
#    define TRUE 1
#    define FALSE 0
#    endif
#    endif
@


1.24
log
@  Changed atexit handling + code tidying
Detail:
  debug_atexit() is now deprecated and DebugLib adds its own atexit
  handler to close down debug devices.  debug_atexit() calls in code
  are now removed by the preprocessor even when DEBUGLIB is defined.
  The atexit handler is added in the debug_initialise() call.

  Tidied debug.c.  Made more functions static, and moved all the static
  functions to before the exported functions.
Admin:
  Built and tested.
  StrongHelp manual updated to reflect atexit change.


Version 0.49. Tagged as 'DebugLib-0_49'
@
text
@d33 16
a48 16
    #include <stdio.h>
    #include <stdarg.h>
    #include <stdlib.h>

    #ifndef __kernel_h
      #include "kernel.h"
    #endif

    #ifndef BOOL_DEFINED
    #define BOOL_DEFINED
    #ifndef BOOL
    #define BOOL int
    #define TRUE 1
    #define FALSE 0
    #endif
    #endif
d66 8
a73 8
    #define DebugLib_Options_TasknamePrefix_Off   0u
    #define DebugLib_Options_TasknamePrefix_On    1u
    #define DebugLib_Options_SerialPortLF_Off     0u
    #define DebugLib_Options_SerialPortLF_On      (1u<<1)
    #define DebugLib_Options_ScreenCornering_Off  0
    #define DebugLib_Options_ScreenCornering_On   (1u<<2)
    #define DebugLib_Options_StampDebug_Off       0
    #define DebugLib_Options_StampDebug_On        (1u<<3)
d75 1
a75 1
    #define DebugLib_OutputBufferOff_Flag_UseCurrentDevice   1u
d77 1
a77 1
    #ifdef __cplusplus
d79 1
a79 1
    #endif
d90 1
a90 1
    #define debug_atexit()
d111 1
a111 1
    #define debug_output_device(debug_device) debug_set_device(debug_device)
d117 1
a117 1
    #pragma -v1 /* hint to compiler to check f/s/printf format */
d119 1
a119 1
    #pragma -v1 /* hint to compiler to check f/s/printf format */
d121 1
a121 1
    #pragma -v1 /* hint to compiler to check f/s/printf format */
d123 1
a123 1
    #pragma -v1 /* hint to compiler to check f/s/printf format */
d125 1
a125 1
    #pragma -v0 /* back to the default */
d129 4
a132 4
    #define dprintf(a)			_dprintf a
    #define dprintf_raw(a)		_dprintf_raw a
    #define dvprintf(a)			_dvprintf a
    #define dfprintf(a)			_dfprintf a
d135 9
a143 9
    #ifndef REMOTE_DEBUG
      #define REMOTE_DEBUG
      #define __BODGE
    #endif
    #include "debug/remote.h"
    #ifdef __BODGE
      #undef REMOTE_DEBUG
      #undef __BODGE
    #endif
d148 1
a148 1
    #ifdef __cplusplus
d150 1
a150 1
    #endif
d154 29
a182 29
    #define debug_initialise(a,b,c)
    #define debug_output_device(a)
    #define debug_output_buffer_on(a,b)
    #define debug_output_buffer_off(a,b)
    #define debug_terminate()
    #define debug_beep()
    #define debug_initialise_trace(a,b)
    #define debug_set_options(a,b,c)
    #define debug_set_device(a)
    #define debug_set_trace_device(a)
    #define debug_set_raw_device(a)
    #define debug_set_taskname_prefix(a)
    #define debug_set_area_level_prefix(a)
    #define debug_set_stamp_debug(a)
    #define debug_set_screen_cornering(a)
    #define debug_set_unbuffered_files(a)
    #define debug_set_serial_lf(a)
    #define debug_set_serial_port_speed(a)
    #define debug_set_serial_port_number(a)
    #define debug_set_dump_width(a)
    #define debug_set_area_pad_limit(a)
    #define debug_atexit()
    #define debug_version()
    #define ddumpbuf(a,b,c,d)

    #define dprintf(a)
    #define dprintf_raw(a)
    #define dvprintf(a)
    #define dfprintf(a)
@


1.23
log
@  Tidy-up
Detail:
  Stewart's checkin about LibVersion reminded me I'd done some tidying
  (including the LibVersion thing) and not checked it in.  So here it is.

  Tidied Makefile, added standard headers to all the c and h files,
  including the regulation copyright message.

  Changed options.c so that it fits the coding style of the rest of
  DebugLib (naughty Stewart).

  Improved "strdup" routine.

  Moved stripdepend call into Makefile.

Admin:
  Built and tested.


Version 0.47. Tagged as 'DebugLib-0_47'
@
text
@d89 2
a90 1
    #define debug_atexit() atexit(debug_terminate)
@


1.22
log
@ * Ahem.  TTOTD, when you make a change to a library header file to make
   something that uses the library work, check that the library still
   builds too.  Fixed now.


Version 0.45. Tagged as 'DebugLib-0_45'
@
text
@a14 1

d18 8
a26 9

/*
   Copyright 1997-1999 Acorn Computers Ltd

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.
*/
@


1.21
log
@ * Requires remotedb 0.07.  Now uses new namespacing that remotedb received at
   version 0.07.  DebugLib.h updated so that it will always build, there
   was a problem with #including the remotedb header file without defining
   "REMOTE_DEBUG".


Version 0.44. Tagged as 'DebugLib-0_44'
@
text
@d136 4
a139 1
    #define REMOTE_DEBUG
d141 4
a144 1
    #undef REMOTE_DEBUG
@


1.20
log
@ * Forgot to copy h directory back to NFS before previous check-in.  This
   is now rectified, which should allow DebugLib to build correctly.


Version 0.43. Tagged as 'DebugLib-0_43'
@
text
@d136 1
d138 1
d141 1
a141 1
    extern debug_session *debug_remotedb_info;
@


1.19
log
@ * Improved DebugLib's area handling system.  Lines of debug may now belong
   to multiple "areas" of code, each at a specific level.  The filtering of
   debug at runtime is now done with a much more flexible system,
   areas/levels are masked in/out based on a new format for the
   DebugLib$Level_<taskname> system variable.  The description of this
   format has not made it into the StrongHelp document, it will go into
   this, and into the DebugLib web docs ASAP.

 * Added a new option to allow the area/level prefix in debug output to
   be padded to a particular width.  This makes the prefix much more
   useable.  The prefixing is turned on with the option
   "debug_set_area_level_prefix", and the padding controlled with
   "debug_set_area_pad_limit".

 * Added test cases for new levelling scheme into CLI test harness.

 * Updated StrongHelp manual somewhat.


Version 0.41. Tagged as 'DebugLib-0_41'
@
text
@d108 3
d134 6
@


1.18
log
@ * Fixed the logic in debug_close_device.  The changes made for raw mode
   meant that the raw device wouldn't be closed.

 * Changed the copyright messages a little.


Version 0.40. Tagged as 'DebugLib-0_40'
@
text
@d106 1
d158 1
@


1.17
log
@Summary
-------
  * Initial checkin of code to allow data to be output in a raw form.
  * Added copyright messages to DebugLib.h (the exported header) as
    DebugLib has now been shipped to one customer.
Detail
------
  * Two new functions debug_set_raw_device() and dprintf_raw() have been
    added to debug.c.  This allows debug data to be output unprocessed;
    i.e. without taskname prefixing, timestamping etc.  This was done for
    HierProf, MemCheck and McCabe.  This is especially important for McCabe
    as no formatting must be done to the output generated by the program.
    Subject to testing against McCabe, it will be possible to send output
    for analysis via any debug stream (except RemoteDB due to the nature
    of the daemon).  DebugLib$RawDevice_<taskname> can be used to override
    debug_set_raw_device().
Admin
-----
  * Tested that the data is output in a raw form.  Testing with McCabe
    not yet accomplished.

Version 0.39. Tagged as 'DebugLib-0_39'
@
text
@d22 1
a22 1
   Copyright 1998 Acorn Computers Ltd
@


1.16
log
@ * Continued tidy-up of DebugLib:

 * All DebugLib functions now namespaced, they all start debug_<filename>_
  (except the functions in debug.c which are debug_).

 * Device specific #defines etc moved into device specific header files,
   e.g. debugit.h

 * Moved taskname prefixing to a central location, moved timestamping here
   also, added area/level prefixing, and tidied up this prefixing to make
   sure it looks good on all the possible debug devices.

 * Can now do any debuglib function to any debug device, including trace
   output, this hasn't been the case for a while.

 * Added new option, to set whether you want to prefix all debug lines
   with the area/level pair specified in dprintf, dfprintf etc.  Added
   new function to set this option.  debug_set_area_level_prefix ()

 * remotedb output now uses new "raw" output mode added to remotedb in
   version 0.06.  _DebugLib now requires remotedb version >= 0.06_

 * Added new test cases into CLI_App test harness, and changed a few things
   in TestMod.

 * Added Memcheck misc block registration into buffering code, which allows
   buffering to be used on the DebugLib Memcheck build.

 * Added lots of new function names into the always_ignore field which is
   used to tell trace which functions to ignore.  It seems that some the
   internet libraries have function names emebedded, which causes horrible
   loops when using DebugLib to output trace info to remotedb.  Also added
   debug_* and remote_debug_*

 * Added StrongHelp topics for ddumpbuf, debug_output_buffer_* and
   debug_set_area_level_prefix.  Updated the "Setting up the library"
   section.

 * Checked with all the debug devices except TML and serial.


Version 0.38. Tagged as 'DebugLib-0_38'
@
text
@d21 9
d95 1
d117 2
d127 1
d147 1
d162 1
@


1.15
log
@  Buffer dumper added.
  A handful of miscellaneous header file fixes.
Detail:
  ddumpbuf(area, buffer pointer, size of buffer, offset) added to enable
    binary data to be dumped out to debug.
  debug_set_dump_width(width) sets the number of bytes of data per line
    of debug output.  This must be a positive integer greater than zero
    and less than 64.
  Macro out of serial port function fixed.
  Pragma declarations fixed.
Admin:
  Modified CLI test program to dump buffers out and verified the widthing
    and offset work.

Version 0.34. Tagged as 'DebugLib-0_34'
@
text
@d68 2
d88 1
d135 1
@


1.14
log
@ * Overhauled how DebugLib options are handled.  Options are now held in
   an options structure internal to DebugLib.  Options are set one at a
   time by function calls, this makes it much easier to add new options
   over time.  debug_set_options and debug_output_device now deprecated,
   but still provided.  Updated StrongHelp manual to document this
   new behaviour.

 * Fixed trace output somewhat...should now look better on remotedb
   output (no extraneous CRs), and you can now set the trace device to
   be the same as the main debug device.  Setting trace device to "printf"
   now also works (file still to do, as you still can't "dfprintf" to file)

 * Added one of the new options function calls to the CLI_App test harness,
   to test functionality.

 * Improved the !MkCleans for the test harnesses.


Version 0.33. Tagged as 'DebugLib-0_33'
@
text
@d26 1
d92 1
d106 4
a109 1
    void _dvprintf(const char *area_level, const char *format, const va_list arg);
d137 2
a138 1
    #define debug_set_serial_port_number(a)a
d141 1
@


1.14.2.1
log
@Produced a version for Alastair Roger to use which has copyright
messages in place on debug output and the header files.
Branch work.

Version 0.33, 1.28.2.1. Tagged as 'DebugLib-0_33-1_28_2_1'
@
text
@d15 1
a19 8

/* Copyright 1997, 98, 99 Acorn Computers Ltd.

   This material is the confidential trade secret and proprietary information
   of Acorn Computers. It may not be reproduced, used sold, or transferred to
   any third party without the prior written consent of Acorn Computers.
   All rights reserved.
 */
@


1.13
log
@ * Renamed function "strdup" in c.misc to avoid conflicts when building
   with other code that define strdup

 * Added extra option to debug_set_options to allow timestamping of debug
   output...doesn't handle \n chars in debug output very elegantly, but
   it'll do for now.  Option is DebugLib_Options_StampDebug_(On/Off)


Version 0.31. Tagged as 'DebugLib-0_31'
@
text
@a27 1
    #include "kernel.h"
d29 37
a65 21
    #define NULL_OUTPUT		0	/* No valid debugging mechanisms found */
    #define TRACKER_OUTPUT	1	/* !Tracker by Andy Armstrong Debugging Output Window. */
    #define PRINTF_OUTPUT	2	/* Standard printf statements with  a black background. */
    #define NOTUSED_OUTPUT    	3	/* Not used.                  */
    #define PDEBUG_OUTPUT	4	/* Parallel Port Debugging (JSmith). */
    #define SOCKET_OUTPUT	5	/* Debug to Network Socket (RBuckley). */
    #define DEBUGIT_OUTPUT	6	/* !List-Debug - Wimp based debug system (MChallis) */
    #define TML_OUTPUT		7	/* TML Debugging Podule. */
    #define FILE_OUTPUT		8	/* FILE output mode */
    #define SERIAL_OUTPUT	9	/* Serial Port output - dual serial interface only */

    #define no_devices		9	/* Number of debug devices available */

    #define DebugLib_Options_TasknamePrefix_Off        0u
    #define DebugLib_Options_TasknamePrefix_On         1u
    #define DebugLib_Options_SerialPortLF_Off        (0u<<1)
    #define DebugLib_Options_SerialPortLF_On         (1u<<1)
    #define DebugLib_Options_ScreenCornering_Off     (0u<<2)
    #define DebugLib_Options_ScreenCornering_On      (1u<<2)
    #define DebugLib_Options_StampDebug_Off     (0u<<3)
    #define DebugLib_Options_StampDebug_On      (1u<<3)
d71 2
a72 1
    extern void debug_initialise (char *, char *, char *);
d74 3
a76 3
    extern void debug_output_device (int);
    extern _kernel_oserror *debug_output_buffer_on(int, int);
    extern void debug_output_buffer_off(int flags, int device);
d78 17
a94 3
    extern void debug_initialise_trace (int, char *);
    extern void debug_set_options (const unsigned int, const int, const int);
    extern const char *debuglib_version (void);
d102 1
a102 1
    extern void _dfprintf(const char *, const int stream, const char * /*format*/, ...);
d104 1
a104 1
    void _dvprintf(const char *area_level, const char *format, va_list arg);
a108 1
    #define debug_atexit()		atexit(debug_terminate)
d124 11
a138 2
    #define debug_atexit()
    #define debuglib_version()
@


1.12
log
@Summary
    * Added dvprintf courtesy of Neil Bingham.
    * Fixed module tracing.
Detail
    * dvprintf speaks for iteslf.
    * Fixed module trace builds - they were not linking against the module
      version of the trace library.  It was mostly working, but one of the
      things that wasn't was the ability to ignore certain functions.
    * Tidied up debug_trace_initialise a bit to find the length of the string
      of functions it always ignores by using strlen, instead of having a
      hard-coded integer.  Also fixed a memory leak - wasn't freeing the
      string of ignored functions.
Admin
    * dvprintf tested with the test harnesses and with the ATM driver.
    * Module trace fixes tested with the ATM driver.

Version 0.29. Tagged as 'DebugLib-0_29'
@
text
@d49 2
@


1.11
log
@ * DebugLib now uses PDebug object and header from inside build tree
   Export.Lib directory.  Removed header and objects from DebugLib itself

 * Added stripdepend call to Makefile, requires new Library.

 * DebugLib.h now include "kernel.h", to stop complaints about
   _kernel_oserror


Version 0.26. Tagged as 'DebugLib-0_26'
@
text
@d26 1
d71 2
a72 1

d75 1
d95 1
@


1.10
log
@--------
  * Added buffering support.
Detail:
-------
  * DebugLib output can now be buffered and then output.  This is primarily
    for debugging ROM modules that would be active before the parallel
    port is alive during boot up.  Two new functions have been added to
    support this; debug_output_buffer_on() and debug_output_buffer_off().
    Updated documentation to follow.
Admin:
------
  * Tested on RiscPC/NC with Parallel, DebugIt and System variable
    override of output settings.

Version 0.25. Tagged as 'DebugLib-0_25'
@
text
@d27 1
@


1.9
log
@ * Fixes a possible compile warning for programs using DebugLib.  The
   exported header includes a macro that uses "atexit", and until now it
   wasn't including the ANSI header "stdlib.h" that defines "atexit".


Version 0.24. Not tagged
@
text
@d55 2
d83 2
@


1.8
log
@ * Added version number method (debuglib_version).


Version 0.20. Tagged as 'DebugLib-0_20'
@
text
@d26 2
@


1.7
log
@  Updated Documentation for debug_initialise, to clarify some of the
parameters.
  Fixed a few cases where NULLs could be passed to strcpy etc. in
debug_initialise.
  VersionNum file now gets exported to the DebugLib's Export directory, so
you always know what version you've got compiled.
  Tidied some header files a bit.

Version 0.14. Tagged as 'DebugLib-0_14'
@
text
@d56 1
d87 1
@


1.6
log
@The stub for debug_set_options had too few dummy arguments, so a
  program with debug_set_options wouldn't build if debugging was turned off.
  Fixed this oversight.

Version 0.13. Tagged as 'DebugLib-0_13'
@
text
@d37 2
@


1.5
log
@ * New features:
   - You can now set a system variable to override the output method
     compiled into the program. (DebugLib$Device_<Taskname>)
   - Printf output now has an option bit associated with it.  This option
     being whether or not the cursor is sent to the top-left of the screen
     before outputting text.  Default is on.

 * Bug fix - printf output wasn't working due to an oversight in the device
   selection function.
 * Updated manual for new features

Version 0.12. Tagged as 'DebugLib-0_12'
@
text
@d79 1
a79 1
    #define debug_set_options(a)
@


1.4
log
@Added __cplusplus wrappers to the exportable headers, no real functional
  change, so major version number not incremented.

Version 0.11. Not tagged
@
text
@d41 2
@


1.3
log
@Added Serial Output device.
Added CLI, Module and Toolbox test applications
Tidied various sections
Tidied StrongHelp manual
Removed remotedb from Libs folder, now fetched from build structure
Removed svcprint from Libs folder, wasn't being used
Added srccommit support

Version 0.10. Tagged as 'DebugLib-0_10'
@
text
@d42 4
d65 4
@


1.2
log
@Merged DebugLib from Daytona branch onto trunk

Version 0.09. Not tagged
@
text
@d17 2
a18 8
/* File:    DEBUG.h                                                     */
/* Purpose: Header file for all things to do with Debugging.            */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@@art.acorn.co.uk)              */
/* History: Tue 18th February 1997  ver 0.01 - Created.                 */
/*          Wed 23rd March 1998     ver 0.02 - #include <stdlib.h> added*/
/*             This should have been present before as this file uses   */
/*             atexit() which is defined in <stdlib.h>                  */
a20 2
#include <stdlib.h>

d29 1
a29 1
    #define WIMP_OUTPUT		3	/* Use wimp message boxes to output data (last resort). */
d35 1
d37 11
a47 5
    extern void debug_initialise(char *, char *, char *);
    extern void debug_terminate(void);
    extern void debug_output_device(int);
    extern void debug_beep(void);
    extern void debug_initialise_trace(int, char *);
d69 1
@


1.1
log
@Debug Library used in Daytona project.  First CVS checkin
@
text
@d22 3
d27 1
d29 2
d49 1
a49 1
    
d51 1
a51 1
     * header file to avoid linking problems 
d57 1
a57 1
    
d62 1
a62 1
    
d70 1
a70 1
    
d77 1
@


1.1.2.1
log
@Added a #ifndef __debuglib_h etc. to the header file
@
text
@d24 1
a24 2
#ifndef __debuglib_h
#define __debuglib_h
d43 1
a43 1

d45 1
a45 1
     * header file to avoid linking problems
d51 1
a51 1

d56 1
a56 1

d64 1
a64 1

a70 1
#endif
@


1.1.2.2
log
@DebugLib 0.07	#include <stdlib> added to DebugLib.h file as it references
		atexit() function.  Fixes error/warning in code using
		DebugLib about this.
@
text
@a21 3
/*          Wed 23rd March 1998     ver 0.02 - #include <stdlib.h> added*/
/*             This should have been present before as this file uses   */
/*             atexit() which is defined in <stdlib.h>                  */
a22 2

#include <stdlib.h>
@
