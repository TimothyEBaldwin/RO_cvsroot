head	1.14;
access;
symbols
	DebugLib-0_72:1.14
	DebugLib-0_71:1.14
	DebugLib-0_70:1.14
	DebugLib-0_69:1.14
	DebugLib-0_68:1.14
	DebugLib-0_67:1.14
	DebugLib-0_66:1.14
	DebugLib-0_65:1.14
	DebugLib-0_64:1.14
	RO_5_07:1.14
	DebugLib-0_63:1.14
	DebugLib-0_62:1.14
	DebugLib-0_61:1.14
	DebugLib-0_60:1.13
	DebugLib-0_59:1.13
	DebugLib-0_58:1.13
	DebugLib-0_57:1.13
	dellis_autobuild_BaseSW:1.13
	DebugLib-0_56:1.13
	DebugLib-0_55:1.13
	DebugLib-0_54:1.13
	DebugLib-0_53:1.13
	DebugLib-0_52:1.13
	DebugLib-0_51:1.13
	DebugLib-0_50:1.13
	DebugLib-0_49:1.13
	sbrodie_sedwards_16Mar2000:1.12
	DebugLib-0_48:1.12
	DebugLib-0_47:1.12
	DebugLib-0_46:1.11
	dcotton_autobuild_BaseSW:1.14
	DebugLib-0_45:1.11
	DebugLib-0_44:1.11
	DebugLib-0_43:1.11
	DebugLib-0_42:1.11
	DebugLib-0_41:1.11
	DebugLib-0_40:1.11
	DebugLib-0_39:1.10
	DebugLib-0_38:1.8
	DebugLib-0_33-1_28_2_1:1.6
	DebugLib-0_37:1.7
	DebugLib-0_36:1.6
	DebugLib-0_35:1.6
	DebugLib-0_34:1.6
	nturton_DebugLib-0_24:1.4
	DebugLib-0_33:1.6
	DebugLib-0_32:1.5
	DebugLib-0_31:1.5
	DebugLib-0_30:1.5
	DebugLib-0_29:1.5
	DebugLib-0_28:1.5
	DebugLib-0_27:1.5
	DebugLib-0_26:1.5
	DebugLib-0_25:1.5
	DebugLib-0_24:1.4
	DebugLib-0_23:1.4
	DebugLib-0_22:1.4
	DebugLib-0_21:1.4
	DebugLib-0_20:1.4
	DebugLib-0_19:1.4
	DebugLib-0_18:1.4
	sforrest_daytona_appflash-0_31:1.1
	DebugLib-0_17:1.4
	DebugLib-0_16:1.4
	DebugLib-0_15:1.4
	DebugLib-0_14:1.4
	DebugLib-0_13:1.3
	DebugLib-0_12:1.3
	DebugLib-0_11:1.2
	DebugLib-0_10:1.2
	blaughto_daytona_appflash-0_30:1.1
	blaughto_daytona_appflash-0_29:1.1
	blaughto_daytona_appflash-0_28:1.1
	jberanek_debuglib-0_09:1.1
	blaughto_daytona_appflash-0_27:1.1
	blaughto_daytona_appflash-0_26:1.1
	blaughto_daytona_appflash-0_25:1.1
	blaughto_daytona_appflash-0_24:1.1
	blaughto_daytona_appflash-0_23:1.1
	jberanek_debuglib-0_08:1.1
	blaughto_daytona_appflash-0_21:1.1
	blaughto_daytona_appflash-0_20:1.1
	rwarren_debuglib-0_07:1.1
	blaughto_daytona_appflash-0_19:1.1
	jberanek_debuglib-0_06:1.1
	blaughto_daytona_appflash-0_18:1.1
	jberanek_debuglib-0_05:1.1
	Daytona_bp:1.1
	Daytona:1.1.0.2;
locks; strict;
comment	@# @;


1.14
date	2001.09.17.10.53.32;	author jberanek;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.05.09.15.00;	author jberanek;	state Exp;
branches;
next	1.12;

1.12
date	2000.01.21.10.56.44;	author jberanek;	state Exp;
branches;
next	1.11;

1.11
date	99.05.28.15.21.57;	author jberanek;	state Exp;
branches;
next	1.10;

1.10
date	99.05.27.15.51.53;	author nbingham;	state Exp;
branches;
next	1.9;

1.9
date	99.05.26.17.47.32;	author jberanek;	state Exp;
branches;
next	1.8;

1.8
date	99.05.26.13.19.47;	author jberanek;	state Exp;
branches;
next	1.7;

1.7
date	99.05.20.10.01.03;	author jberanek;	state Exp;
branches;
next	1.6;

1.6
date	99.05.10.15.48.52;	author jberanek;	state Exp;
branches;
next	1.5;

1.5
date	99.01.11.16.03.52;	author nbingham;	state Exp;
branches;
next	1.4;

1.4
date	98.09.17.12.48.20;	author jberanek;	state Exp;
branches;
next	1.3;

1.3
date	98.09.16.11.28.50;	author jberanek;	state Exp;
branches;
next	1.2;

1.2
date	98.09.04.17.19.03;	author jberanek;	state Exp;
branches;
next	1.1;

1.1
date	98.02.16.14.18.30;	author jberanek;	state Exp;
branches;
next	;


desc
@@


1.14
log
@  Updated Copyrights, tidied comment header blocks
Detail:
  Updated Copyright messages to show range of years, up to 2001...a bit
 late in the year for that...

  Tidied a few file header comment blocks.

Admin:
  Built on RiscPC.


Version 0.61. Tagged as 'DebugLib-0_61'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************************/
/* File:    debug.h                                                       */
/*                                                                        */
/* Copyright [1999-2001] Pace Micro Technology PLC.  All rights reserved. */
/*                                                                        */
/* The copyright in this material is owned by Pace Micro Technology PLC   */
/* ("Pace").  This material is regarded as a highly confidential trade    */
/* secret of Pace.  It may not be reproduced, used, sold or in any        */
/* other way exploited or transferred to any third party without the      */
/* prior written permission of Pace.                                      */
/**************************************************************************/

#ifndef __debug_h
#define __debug_h

/* Defines */

/* Size of DebugLib's internal debug buffer */
#define Debug_Buffer_Size 1024

/* Copyright message */
#define COPYRIGHT_MESSAGE "DebugLib is (c) Pace Micro Technology plc. 1997-2001"

/* Functions */

void debug_output (unsigned int, const char *, debug_device, const char *);

#endif

/* end of debug.h */
@


1.13
log
@  Changed atexit handling + code tidying
Detail:
  debug_atexit() is now deprecated and DebugLib adds its own atexit
  handler to close down debug devices.  debug_atexit() calls in code
  are now removed by the preprocessor even when DEBUGLIB is defined.
  The atexit handler is added in the debug_initialise() call.

  Tidied debug.c.  Made more functions static, and moved all the static
  functions to before the exported functions.
Admin:
  Built and tested.
  StrongHelp manual updated to reflect atexit change.


Version 0.49. Tagged as 'DebugLib-0_49'
@
text
@d15 11
a25 11
/************************************************************************/
/* File:    debug.h                                                     */
/*                                                                      */
/* Copyright [1999] Pace Micro Technology PLC.  All rights reserved.    */
/*                                                                      */
/* The copyright in this material is owned by Pace Micro Technology PLC */
/* ("Pace").  This material is regarded as a highly confidential trade  */
/* secret of Pace.  It may not be reproduced, used, sold or in any      */
/* other way exploited or transferred to any third party without the    */
/* prior written permission of Pace.                                    */
/************************************************************************/
d36 1
a36 1
#define COPYRIGHT_MESSAGE "DebugLib is (c) Pace Micro Technology plc. 1997-2000"
@


1.12
log
@  Tidy-up
Detail:
  Stewart's checkin about LibVersion reminded me I'd done some tidying
  (including the LibVersion thing) and not checked it in.  So here it is.

  Tidied Makefile, added standard headers to all the c and h files,
  including the regulation copyright message.

  Changed options.c so that it fits the coding style of the rest of
  DebugLib (naughty Stewart).

  Improved "strdup" routine.

  Moved stripdepend call into Makefile.

Admin:
  Built and tested.


Version 0.47. Tagged as 'DebugLib-0_47'
@
text
@d36 1
a36 1
#define COPYRIGHT_MESSAGE "DebugLib is (c) Pace Micro Technology plc. 1997-1999"
a39 1
void debug_close_device (debug_device);
a40 1
void debug_terminate (void);
@


1.11
log
@ * Fixed the logic in debug_close_device.  The changes made for raw mode
   meant that the raw device wouldn't be closed.

 * Changed the copyright messages a little.


Version 0.40. Tagged as 'DebugLib-0_40'
@
text
@d15 11
a25 1
/* debug.h */
d36 1
a36 1
#define COPYRIGHT_MESSAGE	"DebugLib is (c) Acorn Computers Ltd 1997-1999"
@


1.10
log
@Summary
-------
  * Initial checkin of code to allow data to be output in a raw form.
  * Added copyright messages to DebugLib.h (the exported header) as
    DebugLib has now been shipped to one customer.
Detail
------
  * Two new functions debug_set_raw_device() and dprintf_raw() have been
    added to debug.c.  This allows debug data to be output unprocessed;
    i.e. without taskname prefixing, timestamping etc.  This was done for
    HierProf, MemCheck and McCabe.  This is especially important for McCabe
    as no formatting must be done to the output generated by the program.
    Subject to testing against McCabe, it will be possible to send output
    for analysis via any debug stream (except RemoteDB due to the nature
    of the daemon).  DebugLib$RawDevice_<taskname> can be used to override
    debug_set_raw_device().
Admin
-----
  * Tested that the data is output in a raw form.  Testing with McCabe
    not yet accomplished.

Version 0.39. Tagged as 'DebugLib-0_39'
@
text
@d26 1
a26 1
#define COPYRIGHT_MESSAGE	"DebugLib is (c) Acorn Computers Ltd 1997, 1998 & 1999"
@


1.9
log
@ * Tidied "include.h":

 * Moved non-general definitions into appropriate
   header files.  e.g. Default serial options into serial.h etc.
 * Removed DEBUGLIB_UNUSED() macro, as there was already a similar macro
   IGNORE()

 * "globals.h" now includes "options.h" to get the definition of the
   options structure.


Version 0.38. Not tagged
@
text
@d25 3
d31 1
a31 1
void debug_output (const char *, debug_device, const char *);
@


1.8
log
@ * Continued tidy-up of DebugLib:

 * All DebugLib functions now namespaced, they all start debug_<filename>_
  (except the functions in debug.c which are debug_).

 * Device specific #defines etc moved into device specific header files,
   e.g. debugit.h

 * Moved taskname prefixing to a central location, moved timestamping here
   also, added area/level prefixing, and tidied up this prefixing to make
   sure it looks good on all the possible debug devices.

 * Can now do any debuglib function to any debug device, including trace
   output, this hasn't been the case for a while.

 * Added new option, to set whether you want to prefix all debug lines
   with the area/level pair specified in dprintf, dfprintf etc.  Added
   new function to set this option.  debug_set_area_level_prefix ()

 * remotedb output now uses new "raw" output mode added to remotedb in
   version 0.06.  _DebugLib now requires remotedb version >= 0.06_

 * Added new test cases into CLI_App test harness, and changed a few things
   in TestMod.

 * Added Memcheck misc block registration into buffering code, which allows
   buffering to be used on the DebugLib Memcheck build.

 * Added lots of new function names into the always_ignore field which is
   used to tell trace which functions to ignore.  It seems that some the
   internet libraries have function names emebedded, which causes horrible
   loops when using DebugLib to output trace info to remotedb.  Also added
   debug_* and remote_debug_*

 * Added StrongHelp topics for ddumpbuf, debug_output_buffer_* and
   debug_set_area_level_prefix.  Updated the "Setting up the library"
   section.

 * Checked with all the debug devices except TML and serial.


Version 0.38. Tagged as 'DebugLib-0_38'
@
text
@d20 7
@


1.7
log
@ * Continued tidy of DebugLib structure/implementation...added an "Open"
   variable to the debug_output_method structure, to replace the
   sessions_available struct that was used previously.  Now check for
   whether a device is open at the top level (debug.c) instead of once
   for each device.  Removed the "quit" function for a few devices, because
   it was doing nothing.
 * Reduced global variable count to 1. :)

 * Split option setting functions to options.[ch], left debug_set_device
   in c.debug, as it does a bit more that just set an option.


Version 0.37. Tagged as 'DebugLib-0_37'
@
text
@d21 1
a21 1
void debug_output (debug_device, const char *);
@


1.6
log
@ * Overhauled how DebugLib options are handled.  Options are now held in
   an options structure internal to DebugLib.  Options are set one at a
   time by function calls, this makes it much easier to add new options
   over time.  debug_set_options and debug_output_device now deprecated,
   but still provided.  Updated StrongHelp manual to document this
   new behaviour.

 * Fixed trace output somewhat...should now look better on remotedb
   output (no extraneous CRs), and you can now set the trace device to
   be the same as the main debug device.  Setting trace device to "printf"
   now also works (file still to do, as you still can't "dfprintf" to file)

 * Added one of the new options function calls to the CLI_App test harness,
   to test functionality.

 * Improved the !MkCleans for the test harnesses.


Version 0.33. Tagged as 'DebugLib-0_33'
@
text
@d20 2
a21 3
void debug_close_device (void);
void debug_output (const char *);
void stream_debug_output (debug_device, const char *);
@


1.5
log
@--------
  * Added buffering support.
Detail:
-------
  * DebugLib output can now be buffered and then output.  This is primarily
    for debugging ROM modules that would be active before the parallel
    port is alive during boot up.  Two new functions have been added to
    support this; debug_output_buffer_on() and debug_output_buffer_off().
    Updated documentation to follow.
Admin:
------
  * Tested on RiscPC/NC with Parallel, DebugIt and System variable
    override of output settings.

Version 0.25. Tagged as 'DebugLib-0_25'
@
text
@a19 7
#pragma -v1 /* hint to compiler to check f/s/printf format */
void _dprintf (const char *, const char * /*format*/, ...);
#pragma -v1 /* hint to compiler to check f/s/printf format */
void _dfprintf (const char *, int stream, const char * /*format*/, ...);

extern int sysvar_provided_device;

d22 1
a22 6
void stream_debug_output (int, const char *);

void debug_initialise (char *, char *, char *);

void debug_output_device (int);

a23 6

void debug_beep (void);

void debug_initialise_trace (int, char *);

void debug_set_options (const unsigned int, const int, const int);
@


1.4
log
@  Updated Documentation for debug_initialise, to clarify some of the
parameters.
  Fixed a few cases where NULLs could be passed to strcpy etc. in
debug_initialise.
  VersionNum file now gets exported to the DebugLib's Export directory, so
you always know what version you've got compiled.
  Tidied some header files a bit.

Version 0.14. Tagged as 'DebugLib-0_14'
@
text
@d25 2
@


1.3
log
@ * New features:
   - You can now set a system variable to override the output method
     compiled into the program. (DebugLib$Device_<Taskname>)
   - Printf output now has an option bit associated with it.  This option
     being whether or not the cursor is sent to the top-left of the screen
     before outputting text.  Default is on.

 * Bug fix - printf output wasn't working due to an oversight in the device
   selection function.
 * Updated manual for new features

Version 0.12. Tagged as 'DebugLib-0_12'
@
text
@a19 7
#define DebugLib_Options_TasknamePrefix_Off        0u
#define DebugLib_Options_TasknamePrefix_On         1u
#define DebugLib_Options_SerialPortLF_Off        (0u<<1)
#define DebugLib_Options_SerialPortLF_On         (1u<<1)
#define DebugLib_Options_ScreenCornering_Off     (0u<<2)
#define DebugLib_Options_ScreenCornering_On      (1u<<2)

@


1.2
log
@Added Serial Output device.
Added CLI, Module and Toolbox test applications
Tidied various sections
Tidied StrongHelp manual
Removed remotedb from Libs folder, now fetched from build structure
Removed svcprint from Libs folder, wasn't being used
Added srccommit support

Version 0.10. Tagged as 'DebugLib-0_10'
@
text
@d24 2
a25 1

@


1.1
log
@Debug Library used in Daytona project.  First CVS checkin
@
text
@d20 6
d32 2
a33 2
void debug_output (const char *, const char *);
void stream_debug_output (int, const char *, const char *);
d44 2
@
