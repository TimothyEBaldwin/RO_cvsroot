head	1.7;
access;
symbols
	DebugLib-0_72:1.7
	DebugLib-0_71:1.7
	DebugLib-0_70:1.7
	DebugLib-0_69:1.7
	DebugLib-0_68:1.7
	DebugLib-0_67:1.7
	DebugLib-0_66:1.7
	DebugLib-0_65:1.7
	DebugLib-0_64:1.7
	RO_5_07:1.7
	DebugLib-0_63:1.7
	DebugLib-0_62:1.7
	DebugLib-0_61:1.7
	DebugLib-0_60:1.7
	DebugLib-0_59:1.7
	DebugLib-0_58:1.7
	DebugLib-0_57:1.7
	dellis_autobuild_BaseSW:1.7
	DebugLib-0_56:1.7
	DebugLib-0_55:1.7
	DebugLib-0_54:1.6
	DebugLib-0_53:1.6
	DebugLib-0_52:1.6
	DebugLib-0_51:1.6
	DebugLib-0_50:1.6
	DebugLib-0_49:1.6
	sbrodie_sedwards_16Mar2000:1.6
	DebugLib-0_48:1.6
	DebugLib-0_47:1.6
	DebugLib-0_46:1.5
	dcotton_autobuild_BaseSW:1.7
	DebugLib-0_45:1.5
	DebugLib-0_44:1.5
	DebugLib-0_43:1.5
	DebugLib-0_42:1.5
	DebugLib-0_41:1.5
	DebugLib-0_40:1.4
	DebugLib-0_39:1.4
	DebugLib-0_38:1.4
	DebugLib-0_33-1_28_2_1:1.4
	DebugLib-0_37:1.4
	DebugLib-0_36:1.4
	DebugLib-0_35:1.4
	DebugLib-0_34:1.4
	nturton_DebugLib-0_24:1.3
	DebugLib-0_33:1.4
	DebugLib-0_32:1.4
	DebugLib-0_31:1.3
	DebugLib-0_30:1.3
	DebugLib-0_29:1.3
	DebugLib-0_28:1.3
	DebugLib-0_27:1.3
	DebugLib-0_26:1.3
	DebugLib-0_25:1.3
	DebugLib-0_24:1.3
	DebugLib-0_23:1.2
	DebugLib-0_22:1.2
	DebugLib-0_21:1.2
	DebugLib-0_20:1.2
	DebugLib-0_19:1.2
	DebugLib-0_18:1.2
	DebugLib-0_17:1.2
	DebugLib-0_16:1.2
	DebugLib-0_15:1.1
	DebugLib-0_14:1.1
	DebugLib-0_13:1.1
	DebugLib-0_12:1.1
	DebugLib-0_11:1.1
	DebugLib-0_10:1.1;
locks; strict;
comment	@# @;


1.7
date	2000.05.18.15.33.04;	author jberanek;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.21.10.56.35;	author jberanek;	state Exp;
branches;
next	1.5;

1.5
date	99.09.08.13.40.10;	author jberanek;	state Exp;
branches;
next	1.4;

1.4
date	99.04.29.15.51.01;	author jberanek;	state Exp;
branches;
next	1.3;

1.3
date	98.11.17.12.34.44;	author jberanek;	state Exp;
branches;
next	1.2;

1.2
date	98.10.07.08.39.23;	author nbingham;	state Exp;
branches;
next	1.1;

1.1
date	98.09.04.17.18.22;	author jberanek;	state Exp;
branches;
next	;


desc
@@


1.7
log
@  Efficiency improvement and obscure overflow fix in area checking code
Detail:
  Every dprintf() call calls debug_check_level() to check whether the
   statement should be printed or not.  This function did take 2
   parameters, the 2nd of which was no longer being used.  The function
   now only takes 1 parameter.

  You are limited to having 16 comma-seperated area/level
   pairs in each dprintf(), but the routine to tokenise this string
   would've written into and beyond position 16 of a 16 element
   array if you passed a string with more than 16 pairs.  Routine now
   bails out after 16 pairs.
Admin:
  MemCheck rule of CLI test harness now uses correct MemCheck library,
   so actually does check memory. Only violations appear to be deep
   inside trace library.

  Added debug statement into CLI test harness with 18 levels, and
   verified DebugLib only uses 16. [Unfortunately couldn't verify
   array bounds were(n't) being violated, cos of MemCheck's limited
   stack protection].

  Fiddled with DebugLib's internal debugging so that DebugLib internal
   debug gets labelled with the level "__DebugLib".


Version 0.55. Tagged as 'DebugLib-0_55'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
CC 		= ${MemChecKCC} cc
LD 		= Link
ASM 		= ObjAsm
CMHG	 	= CMHG
LB  		= LibFile
RM  		= Remove
WIPE 		= -Wipe
MKDIR 		= cdir
STRIP		= stripdepnd

LIBDIR 		= <Lib$Dir>
CFLAGS 		= -c -depend !Depend -IC: -fah ${THROWBACK}
CPPFLAGS 	= -c -depend !Depend -IC: ${THROWBACK}
LDFLAGS		= -aif -c++
ASMFLAGS 	= -NoCache -depend !Depend
CMHGFLAGS 	= -depend !Depend ${THROWBACK}
WIPEFLAGS 	= ~CFR~V

DEBUGLIB 	= ${LIBDIR}.Debuglib.o.debuglib
MEMCHECKLIB	= MemCheck:o.MC

DFLAGS 		= -DDEBUGLIB

DIRS		= o._dirs

TARGET 		= CLI_App
TARGETMC	= CLI_AppMC

OBJS =\
 o.main\

OBJSMC =\
 oMC.main\

LIBS =\
 C:o.stubs\
 ${DEBUGLIB}\
 TCPIPLibs:o.socklib5\
 TCPIPLibs:o.inetlib\

LIBSMC =\
 C:o.stubs\
 ${DEBUGLIB}MCD\
 TCPIPLibs:o.socklib5\
 TCPIPLibs:o.inetlib\
 ${MEMCHECKLIB}\

.SUFFIXES:	.o .oMC .c
.c.o:;		${CC} ${CFLAGS} ${DFLAGS} -o $@@ $<
.c.oMC:;	${CC} ${CFLAGS} ${DFLAGS} -fn -o $@@ $<

all:    ${TARGET}

memcheck:	${TARGETMC}

clean:
	${RM}		${TARGET}
	${RM}		${TARGETMC}
	${WIPE}	o	${WIPEFLAGS}
	${WIPE} oMC	${WIPEFLAGS}
	${STRIP}

${DIRS}:
	${MKDIR} o
	${MKDIR} oMC
	create ${DIRS}
	stamp  ${DIRS}

${TARGET}: ${OBJS} ${LIBS} ${DIRS}
	${LD} ${LDFLAGS} -o $@@ ${OBJS} ${LIBS}

${TARGETMC}: ${OBJSMC} ${LIBSMC} ${DIRS}
	${LD} ${LDFLAGS} -o $@@ ${OBJSMC} ${LIBSMC}

# Dynamic dependencies:
@


1.6
log
@  Tidy-up
Detail:
  Stewart's checkin about LibVersion reminded me I'd done some tidying
  (including the LibVersion thing) and not checked it in.  So here it is.

  Tidied Makefile, added standard headers to all the c and h files,
  including the regulation copyright message.

  Changed options.c so that it fits the coding style of the rest of
  DebugLib (naughty Stewart).

  Improved "strdup" routine.

  Moved stripdepend call into Makefile.

Admin:
  Built and tested.


Version 0.47. Tagged as 'DebugLib-0_47'
@
text
@d34 1
a34 1
MEMCHECKLIB	= MemCheck:o.MC_M
@


1.5
log
@ * Improved DebugLib's area handling system.  Lines of debug may now belong
   to multiple "areas" of code, each at a specific level.  The filtering of
   debug at runtime is now done with a much more flexible system,
   areas/levels are masked in/out based on a new format for the
   DebugLib$Level_<taskname> system variable.  The description of this
   format has not made it into the StrongHelp document, it will go into
   this, and into the DebugLib web docs ASAP.

 * Added a new option to allow the area/level prefix in debug output to
   be padded to a particular width.  This makes the prefix much more
   useable.  The prefixing is turned on with the option
   "debug_set_area_level_prefix", and the padding controlled with
   "debug_set_area_pad_limit".

 * Added test cases for new levelling scheme into CLI test harness.

 * Updated StrongHelp manual somewhat.


Version 0.41. Tagged as 'DebugLib-0_41'
@
text
@d23 1
d38 2
d43 2
a44 2
OBJS = \
 o.main \
d46 2
a47 2
OBJSMC = \
 oMC.main \
d49 12
a60 12
LIBS = \
 C:o.stubs \
 ${DEBUGLIB} \
 TCPIPLibs:o.socklib5 \
 TCPIPLibs:o.inetlib \

LIBSMC = \
 C:o.stubs \
 ${DEBUGLIB}MCD \
 TCPIPLibs:o.socklib5 \
 TCPIPLibs:o.inetlib \
 ${MEMCHECKLIB} \
d75 1
d77 1
a77 1
o.dirs:
d80 2
a81 2
	create o.dirs
	stamp  o.dirs
d83 1
a83 1
${TARGET}: ${OBJS} ${LIBS} o.dirs
d86 1
a86 1
${TARGETMC}: ${OBJSMC} ${LIBSMC} o.dirs
@


1.4
log
@ * Added debug and MemCheck targets to DebugLib.  They don't get exported,
   as they are only for DebugLib development.  They were used to spot...

 * Found and fixed malloc block overwrite in the level checking code.  I
   was mallocing too small of a block by doing strlen on the wrong
   string.  This bug was causing problems when level filtering was used
   with apps compiled with DebugLib.

 * Tidied OS_ReadVarVal veneer.

 * Added MemCheck code and build target to CLI_App test program, which uses
   the new MemCheck target of DebugLib.


Version 0.32. Tagged as 'DebugLib-0_32'
@
text
@d54 1
a54 1
 ${DEBUGLIB}MC \
@


1.3
log
@ * Fixed Makefile so that it doesn't use "newer" when copying files.  This
   meant that an export wouldn't overwrite newer libraries, when you'd
   expect it to.

 * Tidied test app Makefiles and build obey files.

 * Fixed GUI test app, wasn't declaring it's windows as autocreate and/or
   shared, which meant it missed events.  Removed all warnings also.

 * Now outputs the PDebug version information when a device is activiated.


Version 0.24. Tagged as 'DebugLib-0_24'
@
text
@d15 1
a15 1
CC 		= cc
d33 1
d38 1
d43 3
d52 8
a59 1
.SUFFIXES:	.o .c
d61 1
d65 2
d69 1
d71 1
a71 1

d75 1
d81 3
@


1.2
log
@Changed Makefile to remove mistake in Module build.

Version 0.16. Tagged as 'DebugLib-0_16'
@
text
@d15 16
a30 16
CC =		cc
LD = 		Link
ASM =	 	ObjAsm
CMHG =	 	CMHG
LB =		LibFile
RM =		Remove
WIPE =		-Wipe
MKDIR = 	cdir

LIBDIR =	<Lib$Dir>
CFLAGS =	-c -depend !Depend -IC: -DDEBUGLIB -fah -strict -throwback
CPPFLAGS = 	-c -depend !Depend -IC: -throwback
LDFLAGS	= 	-aif -c++
ASMFLAGS =	-throwback -NoCache -depend !Depend
CMHGFLAGS = 	-depend !Depend -throwback -IC:
WIPEFLAGS =	~C~V
d32 1
a32 1
DEBUGLIB =	${LIBDIR}.Debuglib.o.debuglib
d34 1
a34 1
TARGET = 	CLI_App
d36 3
a38 1
OBJECTS	= \
d48 1
a48 1
.c.o:;		${CC} ${CFLAGS} -o $@@ $<
d62 3
a64 3
${TARGET}: ${OBJECTS} ${LIBS} o.dirs
	${LD} ${LDFLAGS} -o $@@ ${OBJECTS} ${LIBS}
	
a65 4
o.main:	c.main
o.main:	C:DebugLib.h.debuglib
o.main:	c.main
o.main:	C:DebugLib.h.debuglib
@


1.1
log
@Added Serial Output device.
Added CLI, Module and Toolbox test applications
Tidied various sections
Tidied StrongHelp manual
Removed remotedb from Libs folder, now fetched from build structure
Removed svcprint from Libs folder, wasn't being used
Added srccommit support

Version 0.10. Tagged as 'DebugLib-0_10'
@
text
@d66 2
@
