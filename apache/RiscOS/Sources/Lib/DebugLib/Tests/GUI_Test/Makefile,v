head	1.7;
access;
symbols
	DebugLib-0_72:1.7
	DebugLib-0_71:1.7
	DebugLib-0_70:1.7
	DebugLib-0_69:1.7
	DebugLib-0_68:1.7
	DebugLib-0_67:1.7
	DebugLib-0_66:1.7
	DebugLib-0_65:1.6
	DebugLib-0_64:1.6
	RO_5_07:1.6
	DebugLib-0_63:1.6
	DebugLib-0_62:1.5
	DebugLib-0_61:1.5
	DebugLib-0_60:1.5
	DebugLib-0_59:1.4
	DebugLib-0_58:1.4
	DebugLib-0_57:1.4
	dellis_autobuild_BaseSW:1.3
	DebugLib-0_56:1.3
	DebugLib-0_55:1.3
	DebugLib-0_54:1.3
	DebugLib-0_53:1.3
	DebugLib-0_52:1.3
	DebugLib-0_51:1.3
	DebugLib-0_50:1.3
	DebugLib-0_49:1.3
	sbrodie_sedwards_16Mar2000:1.3
	DebugLib-0_48:1.3
	DebugLib-0_47:1.3
	DebugLib-0_46:1.2
	dcotton_autobuild_BaseSW:1.5
	DebugLib-0_45:1.2
	DebugLib-0_44:1.2
	DebugLib-0_43:1.2
	DebugLib-0_42:1.2
	DebugLib-0_41:1.2
	DebugLib-0_40:1.2
	DebugLib-0_39:1.2
	DebugLib-0_38:1.2
	DebugLib-0_33-1_28_2_1:1.2
	DebugLib-0_37:1.2
	DebugLib-0_36:1.2
	DebugLib-0_35:1.2
	DebugLib-0_34:1.2
	nturton_DebugLib-0_24:1.2
	DebugLib-0_33:1.2
	DebugLib-0_32:1.2
	DebugLib-0_31:1.2
	DebugLib-0_30:1.2
	DebugLib-0_29:1.2
	DebugLib-0_28:1.2
	DebugLib-0_27:1.2
	DebugLib-0_26:1.2
	DebugLib-0_25:1.2
	DebugLib-0_24:1.2
	DebugLib-0_23:1.1
	DebugLib-0_22:1.1
	DebugLib-0_21:1.1
	DebugLib-0_20:1.1
	DebugLib-0_19:1.1
	DebugLib-0_18:1.1
	DebugLib-0_17:1.1
	DebugLib-0_16:1.1
	DebugLib-0_15:1.1
	DebugLib-0_14:1.1
	DebugLib-0_13:1.1
	DebugLib-0_12:1.1
	DebugLib-0_11:1.1
	DebugLib-0_10:1.1;
locks; strict;
comment	@# @;


1.7
date	2012.01.14.22.54.42;	author srevill;	state Exp;
branches;
next	1.6;
commitid	1AHo2G30D6qB6cPv;

1.6
date	2003.12.02.16.28.40;	author bavison;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.02.17.08.18;	author mjenning;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.16.11.52.50;	author jberanek;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.21.10.56.36;	author jberanek;	state Exp;
branches;
next	1.2;

1.2
date	98.11.17.12.34.51;	author jberanek;	state Exp;
branches;
next	1.1;

1.1
date	98.09.04.17.18.30;	author jberanek;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.66. Tagged as 'DebugLib-0_66'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for GUI Debuglib test harness
# ======================================
#

# -----------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= DebugTest
APP		= !DebugTest
MODULE		= rm.!DebugTest
ROM_MODULE	= aof.DebugTest

# -----------------------------------------------------------------------------
# Export Paths for Messages module
#

RESDIR          := ${RESDIR}.${COMPONENT}
RESAPP          = <Resource$Dir>.Apps.${APP}

# -----------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
AS		= objasm
CC		= ${MemCheckCC} cc
CMHG		= cmhg
CP		= copy
LD		= link #${MemCheckLD} link
RM		= remove
SQUEEZE		= squeeze
WIPE		= x wipe
STRIP		= stripdepnd

AFLAGS		= -depend !Depend -nocache -stamp -quit ${THROWBACK}
CFLAGS		= -depend !Depend -ffah ${INCLUDES} -wp ${THROWBACK}
CPFLAGS		= ~cfr~v~n
SQFLAGS		= -f
WFLAGS		= ~cf~vr


# -----------------------------------------------------------------------------
# Flags
#

# These are for the standard Desktop build (plus debug)

DFLAGS		= -fn -DDEBUGLIB
DDFLAGS		= -fn -DDEBUGLIB
DZFLAGS		= -fn -DDEBUGLIB
DDZFLAGS	= -fn -DDEBUGLIB


# -----------------------------------------------------------------------------
# Libraries
#

LIBDIR		= <Lib$Dir>

CLIB		= C:o.stubs
CPPLIB		= CPPLib:o.c++lib
ROMCSTUBS	= RISC_OSLib:o.romcstubs
ABSSYM		= RISC_OSLib:o.c_abssym
WRAPPER		= RISC_OSLib:s.ModuleWrap

EVENTLIB	= tbox:o.eventlib
TOOLBOXLIB	= tbox:o.toolboxlib
WIMPLIB		= tbox:o.wimplib

MSGLIB		= ${LIBDIR}.MsgLib.o.MsgLib
DEBUGLIB	= ${LIBDIR}.DebugLib.o.debuglib
ERRORLIB	= ${LIBDIR}.ErrorLib.o.errorlib
MEMCHECKLIB	= MemCheck:o.MC

LIBSM =\
 ${MSGLIB}zm\
 ${WIMPLIB}\
 ${TOOLBOXLIB}\
 ${EVENTLIB}m\
 ${ERRORLIB}zm\
 ${MEMCHECKLIB}\
 ${DEBUGLIB}zm\
 TCPIPLibs:o.socklib5zm\
 TCPIPLibs:o.inetlibzm\


LIBS =\
 ${MSGLIB}\
 ${WIMPLIB}\
 ${TOOLBOXLIB}\
 ${EVENTLIB}\
 ${ERRORLIB}\
 ${CLIB}\
 ${MEMCHECKLIB}\
 ${DEBUGLIB}\
 TCPIPLibs:o.socklib5\
 TCPIPLibs:o.inetlib\

#LIBSD =\

# -----------------------------------------------------------------------------
# Include files (libraries and resources)
#

INCLUDES	= -Itbox:,C:

DIRS = o._dirs

FILES =\
 LocalRes:!Boot\
 LocalRes:!Run\
 LocalRes:!Sprites22\
 LocalRes:Messages\
 LocalRes:Res\
 ${TARGET}

# Include these in the ROM module
RESFILES =\
 LocalRes:!Sprites22\


# -----------------------------------------------------------------------------
# Include files (objects)
#

OBJS =\
 o.eventmgr\
 o.main\
 o.outputer\

OBJSZ =\
 oz.eventmgr\
 oz.main\
 oz.outputer\

#OBJSZ =\

#OBJSD =\

#OBJSDZ =\


# -----------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES: .o .oz .od .odz .s .c

.c.o:;		@@echo
		@@echo Compiling $<
		@@echo ${DFLAGS}
		@@${CC} ${CFLAGS} ${DFLAGS} ${EXTRAFLAGS} -c -o $@@ $<

.c.oz:;		@@echo
		@@echo Compiling $<
		@@echo ${DZFLAGS}
		@@${CC} ${CFLAGS} ${DZFLAGS} ${EXTRAFLAGS} -c -zM -zps1 -DROM -o $@@ $<

.c.od:;		@@echo
		@@echo Compiling $<
		@@echo ${DDFLAGS}
		@@${CC} ${CFLAGS} ${DDFLAGS} ${EXTRAFLAGS} -c -o $@@ $<

.c.odz:;	@@echo
		@@echo Compiling $<
		@@echo ${DDZFLAGS}
		@@${CC} ${CFLAGS} ${DDZFLAGS} ${EXTRAFLAGS} -c -zM -zps1 -DROM -o $@@ $<

.s.o:;		@@echo
		@@echo Assembling $<
		@@echo ${AFLAGS}
		@@${AS} ${AFLAGS} $< $@@



# -----------------------------------------------------------------------------
# Main rules
#

all: ${FILES}
	@@echo ${COMPONENT}: Application built (Disc)

rom: ${ROM_MODULE}
	@@echo ${COMPONENT}: Module built (ROM)

install_common: ${FILES}
	@@echo
	${CP} LocalRes:!Boot			${INSTDIR}.!Boot		${CPFLAGS}
	${CP} LocalRes:!Sprites22		${INSTDIR}.!Sprites22   	${CPFLAGS}
	${CP} LocalRes:Messages			${INSTDIR}.Messages		${CPFLAGS}
	${CP} LocalRes:Res			${INSTDIR}.Res			${CPFLAGS}

install: install_common
	${CP} LocalRes:!Run		${INSTDIR}.!Run		${CPFLAGS}
	${CP} ${TARGET}			${INSTDIR}.!RunImage	${CPFLAGS}
	-Access ${INSTDIR}.!Boot	lr/r
	-Access ${INSTDIR}.!Run		lr/r
	-Access ${INSTDIR}.!RunImage	lr/r
	-Access ${INSTDIR}.Messages	lr/r
	-Access ${INSTDIR}.Res		lr/r
	@@echo
	@@echo ${COMPONENT}: Application installed to ${INSTDIR}

installd: install_common
	${CP} LocalRes:!RunT		${INSTDIR}.!RunT	${CPFLAGS}
	${CP} ${TARGET}			${INSTDIR}.!RunImageT	${CPFLAGS}
	@@echo
	@@echo ${COMPONENT}: Debug application installed ${INSTDIR}

install_rom: ${ROM_MODULE}
	${CP} ${ROM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
	@@echo
	@@echo ${COMPONENT}: Module installed (ROM)

resources:
	${MKDIR} ${RESDIR}
	${MKDIR} ${RESAPP}
	${MKDIR} ${RESDIR}.User
	${CP} LocalRes:ROM.!Run		${RESAPP}.!Run		${CPFLAGS}
	${CP} LocalRes:!Sprites22	${RESDIR}.!Sprites22	${CPFLAGS}
	${CP} LocalRes:Messages		${RESDIR}.Messages	${CPFLAGS}
	${CP} LocalRes:Res		${RESDIR}.Res		${CPFLAGS}
	@@echo
	@@echo ${COMPONENT}: Resource files copied to Messages module

clean:
	@@echo starting
	${WIPE}	abs		${WFLAGS}
	${WIPE}	aof		${WFLAGS}
	${WIPE}	linked		${WFLAGS}
	${WIPE}	map		${WFLAGS}
	${WIPE}	o		${WFLAGS}
	${WIPE}	od		${WFLAGS}
	${WIPE}	oz		${WFLAGS}
	${WIPE}	odz		${WFLAGS}
	${WIPE}	rm		${WFLAGS}
	${WIPE} syms		${WFLAGS}
	${RM}	s.AppName
	${RM}	s.ModuleWrap
	${STRIP}
	@@echo
	@@echo ${COMPONENT}: Cleaned

${DIRS}:
	@@${MKDIR} abs
	@@${MKDIR} aof
	@@${MKDIR} linked
	@@${MKDIR} map
	@@${MKDIR} o
	@@${MKDIR} od
	@@${MKDIR} oz
	@@${MKDIR} odz
	@@${MKDIR} rm
	@@${MKDIR} syms
	@@${MKDIR} Targets
	@@${MKDIR} Targets.!DebugTest
	create ${DIRS}
	stamp  ${DIRS}


# -----------------------------------------------------------------------------
# Development rules
#

linkmap: ${OBJS} ${LIBS}
	${LD} -map -o null:x ${OBJS} ${LIBS} > map.linked

map:
	${LD} -map -bin -base 0 -o null: ${OBJS} ${LIBS} > map.base0

clean_all: clean
	${WIPE}	Targets		${WFLAGS}
	@@echo ${COMPONENT}: Cleaned all


# -----------------------------------------------------------------------------
# Final linkfor ROM Image (using given base address)
#

rom_link:
	${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} \
		${ROM_MODULE} ${ABSSYM} -map > map.${COMPONENT}
	${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
	@@echo ${COMPONENT}: rom_link complete

oz.ModuleWrap: s.ModuleWrap s.AppName ${RESFILES}
	${AS} ${AFLAGS} s.ModuleWrap $@@

s.ModuleWrap: ${WRAPPER}
	${CP} ${WRAPPER} $@@ ${CPFLAGS}

s.AppName: LocalRes:Messages
	GNU.gawk -f awk.AppName LocalRes:Messages > $@@


# -----------------------------------------------------------------------------
# Static dependencies
#

abs.!RI: ${OBJS} ${LIBS} ${DIRS}
	@@echo
	${LD} -s syms.!RI -o $@@ ${OBJS} ${LIBS}
	${SQUEEZE} ${SQFLAGS} $@@

abs.!RI_D: ${OBJSD} ${LIBSD} ${DIRS}
	@@echo
	${LD} -s syms.!RI_D -o $@@ ${OBJSD} ${LIBSD}

${MODULE}: oz.ModuleWrap ${OBJSZ} ${LIBSM} ${CLIB} ${DIRS}
	@@echo
	${LD} -s syms.RAMMod -o $@@ -module oz.ModuleWrap ${OBJSZ} ${LIBSM} ${CLIB}

${ROM_MODULE}: oz.ModuleWrap ${OBJSZ} ${ROMCSTUBS} ${LIBSM} ${DIRS}
	@@echo
	${LD} -s syms.ROMMod -o $@@ -aof oz.ModuleWrap ${OBJSZ} ${LIBSM} ${ROMCSTUBS}

rm.!GUID: odz.ModuleWrap ${OBJSDZ} ${LIBSM} ${DIRS}
	@@echo
	${LD} -s syms.ROMDMod -o $@@ -module oz.ModuleWrap ${OBJSDZ} ${LIBSM}


# -----------------------------------------------------------------------------
# Dynamic dependencies:
@


1.6
log
@Because the partially-linked versions of PDebugLib and TraceLib now export
all the DeskLib symbols, they can't both be linked into DebugLib. Instead,
DebugLib no longer contains any copies of DeskLib, and you will need to
explicitly link DeskLib into any debug builds.

Version 0.63. Tagged as 'DebugLib-0_63'
@
text
@d47 1
a47 1
WIPE		= -wipe
@


1.5
log
@  A new DebugLib device added to allow debugging via the BrainLink module.
  The GUI_test program has been modified to support the new DebugLib device.
  DebugLib stronghelp documentaion has been updated.
Detail:

Admin:
  Tested on my RiscPC, seems to work fine.


Version 0.60. Tagged as 'DebugLib-0_60'
@
text
@d308 1
a308 1
	awk -f awk.AppName LocalRes:Messages > $@@
@


1.4
log
@  A number of changes, made over the months, but which I'd failed to
   checkin.  Tsk.
Detail:
  Some additions to CLI test harness.

  Bits of code in CLI and GUI test harness to check at compile time if
   OSLib and "Toolbox" style boolean definitions work with DebugLib.h

  Changed GUI test harness Makefile to use LocalRes:

  Removed calls to debug_atexit() in test harnesses, they're no longer
   necessary.

  Behaviour change: if you set a device in DebugLib$Device_<taskname>,
   debug_set_device() is called for that device on debug_initialise().

  Added check into debug_set_device(), if it's called with the current
   device, and the current device is initialised, it now does nothing,
   because it doesn't need to.

  Added extra checks into file and socket output methods that ensure
   initialising and/or terminating these devices repeatedly won't
   cause problems.

  Added some extra preprocessor malarky into DebugLib.h so that it should
   handle more boolean definitions.  It should handle (at least) "Toolbox"
   style ones and OSLib ones.

  Changed some used of debug_output_device() to debug_set_device() in Module
   test harness. debug_output_device() is deprecated.

  Fixed a bug in the core termination code...all open devices should now
   be closed correctly on exit.
Admin:
  Built library.
  Built and ran through some tests in the 3 test harnesses.


Version 0.57. Tagged as 'DebugLib-0_57'
@
text
@d32 1
a32 1
RESDIR          = ${RESDIR}.${COMPONENT}
@


1.3
log
@  Tidy-up
Detail:
  Stewart's checkin about LibVersion reminded me I'd done some tidying
  (including the LibVersion thing) and not checked it in.  So here it is.

  Tidied Makefile, added standard headers to all the c and h files,
  including the regulation copyright message.

  Changed options.c so that it fits the coding style of the rest of
  DebugLib (naughty Stewart).

  Improved "strdup" routine.

  Moved stripdepend call into Makefile.

Admin:
  Built and tested.


Version 0.47. Tagged as 'DebugLib-0_47'
@
text
@a26 1
LDIR		= Resources.${LOCALE}
d125 5
a129 5
 ${LDIR}.!Boot\
 ${LDIR}.!Run\
 ${LDIR}.!Sprites22\
 ${LDIR}.Messages\
 ${LDIR}.Res\
d134 1
a134 1
 ${LDIR}.!Sprites22\
d203 4
a206 4
	${CP} ${LDIR}.!Boot			${INSTDIR}.!Boot		${CPFLAGS}
	${CP} ${LDIR}.!Sprites22		${INSTDIR}.!Sprites22   	${CPFLAGS}
	${CP} ${LDIR}.Messages			${INSTDIR}.Messages		${CPFLAGS}
	${CP} ${LDIR}.Res			${INSTDIR}.Res			${CPFLAGS}
d209 1
a209 1
	${CP} ${LDIR}.!Run		${INSTDIR}.!Run		${CPFLAGS}
d220 1
a220 1
	${CP} ${LDIR}.!RunT		${INSTDIR}.!RunT	${CPFLAGS}
d234 4
a237 4
	${CP} ${LDIR}.ROM.!Run		${RESAPP}.!Run		${CPFLAGS}
	${CP} ${LDIR}.!Sprites22        ${RESDIR}.!Sprites22	${CPFLAGS}
	${CP} ${LDIR}.Messages		${RESDIR}.Messages	${CPFLAGS}
	${CP} ${LDIR}.Res		${RESDIR}.Res		${CPFLAGS}
d307 2
a308 2
s.AppName: ${LDIR}.Messages
	awk -f awk.AppName ${LDIR}.Messages > $@@
@


1.2
log
@ * Fixed Makefile so that it doesn't use "newer" when copying files.  This
   meant that an export wouldn't overwrite newer libraries, when you'd
   expect it to.

 * Tidied test app Makefiles and build obey files.

 * Fixed GUI test app, wasn't declaring it's windows as autocreate and/or
   shared, which meant it missed events.  Removed all warnings also.

 * Now outputs the PDebug version information when a device is activiated.


Version 0.24. Tagged as 'DebugLib-0_24'
@
text
@d49 1
d91 23
a113 23
LIBSM = \
 ${MSGLIB}zm \
 ${WIMPLIB} \
 ${TOOLBOXLIB} \
 ${EVENTLIB}m \
 ${ERRORLIB}zm \
 ${MEMCHECKLIB} \
 ${DEBUGLIB}zm \
 TCPIPLibs:o.socklib5zm \
 TCPIPLibs:o.inetlibzm \


LIBS = \
 ${MSGLIB} \
 ${WIMPLIB} \
 ${TOOLBOXLIB} \
 ${EVENTLIB} \
 ${ERRORLIB} \
 ${CLIB} \
 ${MEMCHECKLIB} \
 ${DEBUGLIB} \
 TCPIPLibs:o.socklib5 \
 TCPIPLibs:o.inetlib \
d115 1
a115 1
#LIBSD = \
d123 8
a130 6
FILES = \
 ${LDIR}.!Boot \
 ${LDIR}.!Run \
 ${LDIR}.!Sprites22 \
 ${LDIR}.Messages \
 ${LDIR}.Res \
d134 2
a135 2
RESFILES = \
 ${LDIR}.!Sprites22 \
d142 4
a145 4
OBJS = \
 o.eventmgr \
 o.main \
 o.outputer \
d147 4
a150 4
OBJSZ = \
 oz.eventmgr \
 oz.main \
 oz.outputer \
d152 1
a152 1
#OBJSZ = \
d154 1
a154 1
#OBJSD = \
d156 1
a156 1
#OBJSDZ = \
d256 1
a256 1
	${RM}	o.dirs
d260 1
a260 1
o.dirs:
d273 2
a274 2
	create o.dirs
	stamp  o.dirs
d316 1
a316 1
abs.!RI: ${OBJS} ${LIBS} o.dirs
d321 1
a321 1
abs.!RI_D: ${OBJSD} ${LIBSD} o.dirs
d325 1
a325 1
${MODULE}: oz.ModuleWrap ${OBJSZ} ${LIBSM} ${CLIB} o.dirs
d329 1
a329 1
${ROM_MODULE}: oz.ModuleWrap ${OBJSZ} ${ROMCSTUBS} ${LIBSM} o.dirs
d333 1
a333 1
rm.!GUID: odz.ModuleWrap ${OBJSDZ} ${LIBSM} o.dirs
@


1.1
log
@Added Serial Output device.
Added CLI, Module and Toolbox test applications
Tidied various sections
Tidied StrongHelp manual
Removed remotedb from Libs folder, now fetched from build structure
Removed svcprint from Libs folder, wasn't being used
Added srccommit support

Version 0.10. Tagged as 'DebugLib-0_10'
@
text
@d107 1
a107 1
 ${ERRORLIB}m \
@
