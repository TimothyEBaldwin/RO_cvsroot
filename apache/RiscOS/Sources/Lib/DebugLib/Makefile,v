head	1.34;
access;
symbols
	DebugLib-0_72:1.34
	DebugLib-0_71:1.34
	DebugLib-0_70:1.33
	DebugLib-0_69:1.32
	DebugLib-0_68:1.31
	DebugLib-0_67:1.30
	DebugLib-0_66:1.30
	DebugLib-0_65:1.29
	DebugLib-0_64:1.28
	RO_5_07:1.27
	DebugLib-0_63:1.27
	DebugLib-0_62:1.26
	DebugLib-0_61:1.26
	DebugLib-0_60:1.26
	DebugLib-0_59:1.25
	DebugLib-0_58:1.24
	DebugLib-0_57:1.23
	dellis_autobuild_BaseSW:1.23
	DebugLib-0_56:1.23
	DebugLib-0_55:1.22
	DebugLib-0_54:1.22
	DebugLib-0_53:1.22
	DebugLib-0_52:1.22
	DebugLib-0_51:1.22
	DebugLib-0_50:1.22
	DebugLib-0_49:1.21
	sbrodie_sedwards_16Mar2000:1.21
	DebugLib-0_48:1.21
	DebugLib-0_47:1.21
	DebugLib-0_46:1.20
	dcotton_autobuild_BaseSW:1.26
	DebugLib-0_45:1.19
	DebugLib-0_44:1.19
	DebugLib-0_43:1.19
	DebugLib-0_42:1.19
	DebugLib-0_41:1.19
	DebugLib-0_40:1.18
	DebugLib-0_39:1.18
	DebugLib-0_38:1.18
	DebugLib-0_33-1_28_2_1:1.15
	DebugLib-0_37:1.17
	DebugLib-0_36:1.16
	DebugLib-0_35:1.15
	DebugLib-0_34:1.15
	nturton_DebugLib-0_24:1.8
	DebugLib-0_33:1.15
	DebugLib-0_32:1.15
	DebugLib-0_31:1.14
	DebugLib-0_30:1.14
	DebugLib-0_29:1.13
	DebugLib-0_28:1.12
	DebugLib-0_27:1.11
	DebugLib-0_26:1.10
	DebugLib-0_25:1.9
	DebugLib-0_24:1.8
	DebugLib-0_23:1.7
	DebugLib-0_22:1.7
	DebugLib-0_21:1.7
	DebugLib-0_20:1.6
	DebugLib-0_19:1.6
	DebugLib-0_18:1.6
	sforrest_daytona_appflash-0_31:1.1.2.3
	DebugLib-0_17:1.6
	DebugLib-0_16:1.5
	DebugLib-0_15:1.4
	DebugLib-0_14:1.4
	DebugLib-0_13:1.3
	DebugLib-0_12:1.3
	DebugLib-0_11:1.3
	DebugLib-0_10:1.3
	blaughto_daytona_appflash-0_30:1.1.2.3
	blaughto_daytona_appflash-0_29:1.1.2.3
	blaughto_daytona_appflash-0_28:1.1.2.3
	jberanek_debuglib-0_09:1.1.2.3
	blaughto_daytona_appflash-0_27:1.1.2.3
	blaughto_daytona_appflash-0_26:1.1.2.3
	blaughto_daytona_appflash-0_25:1.1.2.3
	blaughto_daytona_appflash-0_24:1.1.2.3
	blaughto_daytona_appflash-0_23:1.1.2.3
	jberanek_debuglib-0_08:1.1.2.3
	blaughto_daytona_appflash-0_21:1.1.2.3
	blaughto_daytona_appflash-0_20:1.1.2.3
	rwarren_debuglib-0_07:1.1.2.3
	blaughto_daytona_appflash-0_19:1.1.2.2
	jberanek_debuglib-0_06:1.1.2.3
	blaughto_daytona_appflash-0_18:1.1.2.2
	jberanek_debuglib-0_05:1.1.2.2
	Daytona_bp:1.1
	Daytona:1.1.0.2;
locks; strict;
comment	@# @;


1.34
date	2015.01.10.11.48.06;	author rsprowson;	state Exp;
branches;
next	1.33;
commitid	ErIQE2MFjocGjt5y;

1.33
date	2014.12.02.22.47.23;	author rsprowson;	state Exp;
branches;
next	1.32;
commitid	XZLMY963xMlAdw0y;

1.32
date	2014.10.18.13.29.02;	author srevill;	state Exp;
branches;
next	1.31;
commitid	NhCUXseMtVDHzGUx;

1.31
date	2014.10.01.07.56.21;	author rsprowson;	state Exp;
branches;
next	1.30;
commitid	I4DkrDPuu5YshtSx;

1.30
date	2012.01.14.22.54.40;	author srevill;	state Exp;
branches;
next	1.29;
commitid	1AHo2G30D6qB6cPv;

1.29
date	2010.03.23.00.36.47;	author jlee;	state Exp;
branches;
next	1.28;

1.28
date	2008.09.10.15.39.54;	author srevill;	state Exp;
branches;
next	1.27;

1.27
date	2003.12.02.16.28.39;	author bavison;	state Exp;
branches;
next	1.26;

1.26
date	2001.05.02.17.08.17;	author mjenning;	state Exp;
branches;
next	1.25;

1.25
date	2001.03.27.13.11.18;	author sbrodie;	state Exp;
branches;
next	1.24;

1.24
date	2001.02.01.16.55.15;	author bavison;	state Exp;
branches;
next	1.23;

1.23
date	2000.07.13.12.00.11;	author jberanek;	state Exp;
branches;
next	1.22;

1.22
date	2000.04.11.17.57.31;	author blaughto;	state Exp;
branches;
next	1.21;

1.21
date	2000.01.21.10.56.20;	author jberanek;	state Exp;
branches;
next	1.20;

1.20
date	2000.01.21.10.43.38;	author sbrodie;	state Exp;
branches;
next	1.19;

1.19
date	99.09.08.13.40.03;	author jberanek;	state Exp;
branches;
next	1.18;

1.18
date	99.05.26.13.19.19;	author jberanek;	state Exp;
branches;
next	1.17;

1.17
date	99.05.20.10.00.48;	author jberanek;	state Exp;
branches;
next	1.16;

1.16
date	99.05.19.19.12.31;	author jberanek;	state Exp;
branches;
next	1.15;

1.15
date	99.04.29.15.50.59;	author jberanek;	state Exp;
branches;
next	1.14;

1.14
date	99.03.19.18.48.14;	author jberanek;	state Exp;
branches;
next	1.13;

1.13
date	99.03.19.11.54.10;	author blaughto;	state Exp;
branches;
next	1.12;

1.12
date	99.03.11.18.22.49;	author nbingham;	state Exp;
branches;
next	1.11;

1.11
date	99.01.22.15.28.43;	author jberanek;	state Exp;
branches;
next	1.10;

1.10
date	99.01.14.17.43.47;	author jberanek;	state Exp;
branches;
next	1.9;

1.9
date	99.01.11.16.03.46;	author nbingham;	state Exp;
branches;
next	1.8;

1.8
date	98.11.17.12.34.40;	author jberanek;	state Exp;
branches;
next	1.7;

1.7
date	98.11.11.15.19.58;	author jberanek;	state Exp;
branches;
next	1.6;

1.6
date	98.10.22.16.32.20;	author jberanek;	state Exp;
branches;
next	1.5;

1.5
date	98.10.07.08.39.18;	author nbingham;	state Exp;
branches;
next	1.4;

1.4
date	98.09.17.12.48.07;	author jberanek;	state Exp;
branches;
next	1.3;

1.3
date	98.09.04.17.18.08;	author jberanek;	state Exp;
branches;
next	1.2;

1.2
date	98.09.04.15.33.24;	author jberanek;	state Exp;
branches;
next	1.1;

1.1
date	98.02.16.14.18.04;	author jberanek;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	98.02.19.17.44.20;	author jberanek;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	98.02.25.16.29.48;	author jberanek;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	98.03.23.11.12.34;	author jberanek;	state Exp;
branches;
next	;


desc
@@


1.34
log
@Makefile recreated from fragments
One subtle difference here is there's no intermediate link step any more, since the ${DEBUGLIBS} already drags in all the required libraries. As a result, when linking with DebugLib the linker should be able to throw away unused sections, making your debug executable a bit smaller.
Tested with a debug build of USBDriver in PRINTF_OUTPUT mode.

Version 0.71. Tagged as 'DebugLib-0_71'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for DebugLib
#

COMPONENT = DebugLib
OBJS      = debug serial_lib buffering misc options debugit file \
            pdebug printf serial socket tml tracker parse dadebug \
            brainlink reporter syslog hal
HDRS      = DebugLib

include CLibrary

# Dynamic dependencies:
@


1.33
log
@Repoint PDEBUG
Requires PDebug-0_09 or later.

Version 0.70. Tagged as 'DebugLib-0_70'
@
text
@d18 5
a22 3
# ------------------------------------------------------------------------------
# Paths
#
d24 1
a24 4
EXP_HDR		= <Export$Dir>
LIBDIR		= <Lib$Dir>
EXPORT_DIR	= <Lib$Dir>.DebugLib
INSTDIR		?= <Install$Dir>
a25 300

# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
AS		= objasm
CP		= copy
CC		= ${MemCheckCC} cc
CM		= cmhg
RM		= remove
LD		= link
LB		= libfile
WIPE		= x wipe
AOF2ALF		= aof.AOF2ALF
STRIP		= stripdepnd

CCFLAGS		= -c -depend !Depend -ffah $(INCLUDES) $(DFLAGS) $(THROWBACK)
ASFLAGS		= -depend !Depend -Stamp -quit
CPFLAGS		= ~cf~nr~v
LBFLAGS		= -o -c
LNFLAGS		= -aof
WFLAGS		= ~CFR~V


# ------------------------------------------------------------------------------
# Libraries
#

LIBDIR		= <Lib$Dir>
CLIB		= CLIB:o.stubs
RLIB		= RISCOSLIB:o.risc_oslib
RSTUBS		= RISCOSLIB:o.rstubs
ROMSTUBS	= RISCOSLIB:o.romstubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.AbsSym

REMOTEDBLIB	= $(LIBDIR).remotedb.o.remotedb
REMOTEDBLIBZM	= $(LIBDIR).remotedb.o.remotedbzm
PDEBUG		= $(LIBDIR).PDebug.o.PDebug
PDEBUGZM	= $(LIBDIR).PDebug.o.PDebugzm
TRACELIB	= $(LIBDIR).Trace.o.Trace
TRACELIBZM	= $(LIBDIR).Trace.o.Trace_M

# ------------------------------------------------------------------------------
# Include files
#

INCLUDES	= -Itbox:,C:
DFLAGS		=
#DFLAGS		= -g

DIRS		= o._dirs

# ------------------------------------------------------------------------------
# Program specific options:
#

COMPONENT	= DebugLib
TARGET		= DebugLib
TARGETZ		= DebugLibzm
TARGETD		= DebugLibD
TARGETMC	= DebugLibMC
TARGETMCD	= DebugLibMCD
AOFFile		= AOF_File
AOFFileZ	= AOF_FileZ
EXPORTS		= $(EXP_HDR).$(COMPONENT)

OBJS =\
 o.debug\
 o.serial_lib\
 o.buffering\
 o.misc\
 o.options\
 o.debugit\
 o.file\
 o.pdebug\
 o.printf\
 o.serial\
 o.socket\
 o.tml\
 o.tracker\
 o.parse\
 o.dadebug\
 o.brainlink\
 o.reporter\
 o.syslog\
 o.hal\

OBJSZ =\
 oz.debug\
 oz.serial_lib\
 oz.buffering\
 oz.misc\
 oz.options\
 oz.debugit\
 oz.file\
 oz.pdebug\
 oz.printf\
 oz.serial\
 oz.socket\
 oz.tml\
 oz.tracker\
 oz.parse\
 oz.dadebug\
 oz.brainlink\
 oz.reporter\
 oz.syslog\
 oz.hal\

OBJSD =\
 od.debug\
 od.serial_lib\
 od.buffering\
 od.misc\
 od.options\
 od.debugit\
 od.file\
 od.pdebug\
 od.printf\
 od.serial\
 od.socket\
 od.tml\
 od.tracker\
 od.parse\
 od.dadebug\
 od.brainlink\
 od.reporter\
 od.syslog\
 od.hal\

OBJSMC =\
 oMC.debug\
 oMC.serial_lib\
 oMC.buffering\
 oMC.misc\
 oMC.options\
 oMC.debugit\
 oMC.file\
 oMC.pdebug\
 oMC.printf\
 oMC.serial\
 oMC.socket\
 oMC.tml\
 oMC.tracker\
 oMC.parse\
 oMC.dadebug\
 oMC.brainlink\
 oMC.reporter\
 oMC.syslog\
 oMC.hal\

OBJSMCD =\
 oMCD.debug\
 oMCD.serial_lib\
 oMCD.buffering\
 oMCD.misc\
 oMCD.options\
 oMCD.debugit\
 oMCD.file\
 oMCD.pdebug\
 oMCD.printf\
 oMCD.serial\
 oMCD.socket\
 oMCD.tml\
 oMCD.tracker\
 oMCD.parse\
 oMCD.dadebug\
 oMCD.brainlink\
 oMCD.reporter\
 oMCD.syslog\
 oMCD.hal\

LIBS = \
 $(PDEBUG)\
 $(TRACELIB)\
 $(REMOTEDBLIB)\

LIBSZ = \
 $(PDEBUGZM)\
 $(TRACELIBZM)\
 $(REMOTEDBLIBZM)\

# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES: .o .oz .od .oMC .oMCD .s .h .c
.c.o:;		$(CC) $(CCFLAGS) ${EXTRAFLAGS} -o $@@ $<
.c.oz:;		$(CC) $(CCFLAGS) ${EXTRAFLAGS} -zm -o $@@ $<
.c.od:;		${CC} ${CCFLAGS} ${EXTRAFLAGS} -DDEBUG -fn -o $@@ $<
.c.oMC:;	${CC} ${CCFLAGS} ${EXTRAFLAGS} -fn -o $@@ $<
.c.oMCD:;	${CC} ${CCFLAGS} ${EXTRAFLAGS} -DDEBUG -fn -o $@@ $<
.s.o:;		$(AS) $(ASFLAGS) -o $@@ $<


# ------------------------------------------------------------------------------
# Build all the library
#

all:		${TARGET} ${TARGETZ}

dbg:		${TARGETD}

memcheck:	${TARGETMC} ${TARGETMCD}

# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

export: export_$(PHASE)

install_rom: $(TARGET)
	$(CP) 	$(TARGET) $(INSTDIR).$(COMPONENT) 		$(CPFLAGS)
	@@echo $(COMPONENT): rom module installed

clean:
	$(WIPE) o $(WFLAGS)
	$(WIPE) oz $(WFLAGS)
	${WIPE} od ${WFLAGS}
	${WIPE} oMC ${WFLAGS}
	${WIPE} oMCD ${WFLAGS}
	$(RM) $(TARGET)
	$(RM) $(TARGETZ)
	${RM} ${TARGETD}
	${RM} ${TARGETMC}
	${RM} ${TARGETMCD}
	${STRIP}
	@@echo $(COMPONENT): cleaned

export_hdrs: h.DebugLib export_dirs
	$(CP)	h.DebugLib	$(EXPORT_DIR).h.DebugLib 	$(CPFLAGS)
	$(CP)   VersionNum      $(EXPORT_DIR).LibVersion 	$(CPFLAGS)
	$(CP)	Docs.DebugLib	$(EXPORT_DIR).DebugLib		$(CPFLAGS)
	@@echo * $(COMPONENT): export complete (hdrs)

export_libs: export_libs-${NOLIBS}
	@@echo * $(COMPONENT): export complete (libs)

export_libs-: $(TARGET) $(TARGETZ) export_dirs
	$(CP)	$(TARGET)	$(EXPORT_DIR).o.$(TARGET)	$(CPFLAGS)
	$(CP)	$(TARGETZ)	$(EXPORT_DIR).o.$(TARGETZ)	$(CPFLAGS)

export_libs-NOLIBS:
	@@echo * $(COMPONENT): library export disabled (export_libs)

${DIRS}:
	$(MKDIR) o
	${MKDIR} od
	${MKDIR} oMC
	${MKDIR} oMCD
	$(MKDIR) oz
	create ${DIRS}
	stamp  ${DIRS}

export_dirs:
	$(MKDIR) $(LIBDIR)
	$(MKDIR) $(EXPORT_DIR)
	$(MKDIR) $(EXPORT_DIR).h
	$(MKDIR) $(EXPORT_DIR).o

install: export_libs
	$(MKDIR) $(INSTDIR)
	${CP}	$(EXPORT_DIR)	$(INSTDIR).$(COMPONENT)		$(CPFLAGS)
	@@echo * $(COMPONENT): install complete

# ------------------------------------------------------------------------------
# Final link
#

$(TARGET): $(OBJS) $(LIBS) ${DIRS}
	$(LD) $(LNFLAGS) -o $(AOFFile) $(OBJS) $(LIBS)
        $(LB) $(LBFLAGS) $(TARGET) $(AOFFile)
        $(RM) $(AOFFile)

$(TARGETZ): $(OBJSZ) $(LIBSZ) ${DIRS}
	$(LD) $(LNFLAGS) -o $(AOFFileZ) $(OBJSZ) $(LIBSZ)
        $(LB) $(LBFLAGS) $(TARGETZ) $(AOFFileZ)
        $(RM) $(AOFFileZ)

$(TARGETD): $(OBJSD) $(LIBS) ${DIRS}
	$(LD) $(LNFLAGS) -o $(AOFFile) $(OBJSD) $(LIBS)
	$(LB) $(LBFLAGS) $(TARGETD) $(AOFFile)
	$(RM) $(AOFFile)

$(TARGETMC): $(OBJSMC) $(LIBS) ${DIRS}
	$(LD) $(LNFLAGS) -o $(AOFFile) $(OBJSMC) $(LIBS)
	$(LB) $(LBFLAGS) $(TARGETMC) $(AOFFile)
	$(RM) $(AOFFile)

$(TARGETMCD): $(OBJSMCD) $(LIBS) ${DIRS}
	$(LD) $(LNFLAGS) -o $(AOFFile) $(OBJSMCD) $(LIBS)
	$(LB) $(LBFLAGS) $(TARGETMCD) $(AOFFile)
	$(RM) $(AOFFile)

$(EXP_HDR).$(COMPONENT): hdr.$(COMPONENT)
	$(CP) hdr.$(COMPONENT) $@@ $(CPFLAGS)


# ------------------------------------------------------------------------------
@


1.32
log
@Added an install phase to support CTools builds.

Version 0.69. Tagged as 'DebugLib-0_69'
@
text
@d66 2
a67 2
PDEBUG		= $(LIBDIR).PDebug.o.Lib
PDEBUGZM	= $(LIBDIR).PDebug.o.Lib_M
@


1.31
log
@Relocate remotedb
Requires remotedb-0_12.

Version 0.68. Tagged as 'DebugLib-0_68'
@
text
@d25 1
d288 5
@


1.30
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.66. Tagged as 'DebugLib-0_66'
@
text
@d63 2
a64 1
REMOTEDBLIB	= $(LIBDIR).debug.o.lremote
d207 1
a207 1
 $(REMOTEDBLIB)zm\
@


1.29
log
@Add HAL_DebugTX support to DebugLib
Detail:
  Makefile, c/hal, h/hal, c/debug, h/DebugLib - Added new HAL_OUTPUT debug device that calls HAL_DebugTX
  Docs/DebugLib,3d6 - updated StrongHelp docs
Admin:
  Tested in OMAP ROM on rev C2 beagleboard


Version 0.65. Tagged as 'DebugLib-0_65'
@
text
@d39 1
a39 1
WIPE		= -wipe
@


1.28
log
@  Adding SysLog and Reporter logging backends to the DebugLib library.
Detail:
  I've added simple backends for the standard SysLog SWI interface and
  the Reporter module. Both of these provide line based APIs so the output
  is line buffered (to a width of 80 characters). I also removed two
  unnecessary forward declarations for static functions in debug.c which
  were producing warnings from Norcroft CC.
Admin:
   Compiled with Norcroft 5.65. Tested on RISC OS 5.13, using DoggySoft
   SysLog 0.20, Reporter 2.64d via a debug build of the USBDriver module.

Version 0.64. Tagged as 'DebugLib-0_64'
@
text
@d112 1
d133 1
d154 1
d175 1
d196 1
@


1.27
log
@Because the partially-linked versions of PDebugLib and TraceLib now export
all the DeskLib symbols, they can't both be linked into DebugLib. Instead,
DebugLib no longer contains any copies of DeskLib, and you will need to
explicitly link DeskLib into any debug builds.

Version 0.63. Tagged as 'DebugLib-0_63'
@
text
@d110 2
d130 2
d150 2
d170 2
d190 2
@


1.26
log
@  A new DebugLib device added to allow debugging via the BrainLink module.
  The GUI_test program has been modified to support the new DebugLib device.
  DebugLib stronghelp documentaion has been updated.
Detail:

Admin:
  Tested on my RiscPC, seems to work fine.


Version 0.60. Tagged as 'DebugLib-0_60'
@
text
@d64 4
a67 4
PDEBUG		= $(LIBDIR).PDebug.o.Lib_PL
PDEBUGZM	= $(LIBDIR).PDebug.o.Lib_M_PL
TRACELIB	= $(LIBDIR).Trace.o.Trace_PL
TRACELIBZM	= $(LIBDIR).Trace.o.Trace_M_PL
@


1.25
log
@  New option for export_libs.
Detail:
  If you have -options NOLIBS=NOLIBS in your components file, then
    DebugLib won't attempt to build its binaries.  This avoids the
    need for several other libraries to be built just to enable
    DebugLib to build when actually all that a build needs is the
    header DebugLib.h
Admin:
  Tested with and without the option.

Version 0.59. Tagged as 'DebugLib-0_59'
@
text
@d109 1
d127 1
d145 1
d163 1
d181 1
@


1.24
log
@Added DADebug support (see RiscOS/Sources/Programmer/DADebug). Original work
was done against version 0.45 of DebugLib, but I don't think anything's
changed that cvs update can't deal with. Not tested.

Version 0.58. Tagged as 'DebugLib-0_58'
@
text
@d241 4
a244 1
export_libs: $(TARGET) $(TARGETZ) export_dirs
d247 3
a249 1
	@@echo * $(COMPONENT): export complete (libs)
@


1.23
log
@  Few little fixes
Detail:
  Levels specifier in DebugLib header now outputs correctly.  It now
   prints out a human readable form of what it's parsed from the
   DebugLib$Level_<taskname> system variable, showing the areas and
   levels specified.

  Added a few variable resets into "quit" functions of some of the
   output devices.  Done after a report from Ben that calling
   debug_terminate twice could cause a crash.  Not sure what
   device was used to cause the crash, also not sure if any of my
   changes will have changed the behaviour.  Added an extra test
   into the CLI_App test harness, it calls debug_terminate twice
   at the end. (Didn't manage to make it crash before or after
   changes).
Admin:
  StrongHelp document now gets copied to Export dir, along with
   headers, library and LibVersion.


Version 0.56. Tagged as 'DebugLib-0_56'
@
text
@d108 1
d125 1
d142 1
d159 1
d176 1
@


1.22
log
@  Modified to use newly imported version of Trace that is built from source,
  rather than using pre-built binaries.

Admin:
  Tested using the ATM driver, which uses DebugLib.  Appears to work as
  previous version using binary-only Trace did.

Version 0.50. Tagged as 'DebugLib-0_50'
@
text
@d233 1
@


1.21
log
@  Tidy-up
Detail:
  Stewart's checkin about LibVersion reminded me I'd done some tidying
  (including the LibVersion thing) and not checked it in.  So here it is.

  Tidied Makefile, added standard headers to all the c and h files,
  including the regulation copyright message.

  Changed options.c so that it fits the coding style of the rest of
  DebugLib (naughty Stewart).

  Improved "strdup" routine.

  Moved stripdepend call into Makefile.

Admin:
  Built and tested.


Version 0.47. Tagged as 'DebugLib-0_47'
@
text
@d66 2
a67 2
TRACELIB	= libs.t_pl
TRACELIBZM	= libs.t_m_pl
@


1.20
log
@  Altered exported VersionNum file to be called LibVersion.
Detail:
  Change made to avoid problems with components doing #include "VersionNum"
    whilst DebugLib's export directory is on the include search path.
Admin:
  Not tested - just changed the name.


Version 0.46. Tagged as 'DebugLib-0_46'
@
text
@d41 1
d77 2
d174 3
a176 3
 $(PDEBUG) \
 $(TRACELIB) \
 $(REMOTEDBLIB) \
d179 3
a181 3
 $(PDEBUGZM) \
 $(TRACELIBZM) \
 $(REMOTEDBLIB)zm \
d227 1
d230 1
a230 1
export_hdrs: h.DebugLib dirs
d235 1
a235 1
export_libs: $(TARGET) $(TARGETZ) dirs
d240 1
a240 1
o.dirs:
d246 2
a247 2
	create o.dirs
	stamp  o.dirs
d249 1
a249 1
dirs:
d259 1
a259 1
$(TARGET): $(OBJS) $(LIBS) o.dirs
d264 1
a264 1
$(TARGETZ): $(OBJSZ) $(LIBSZ) o.dirs
d269 1
a269 1
$(TARGETD): $(OBJSD) $(LIBS) o.dirs
d274 1
a274 1
$(TARGETMC): $(OBJSMC) $(LIBS) o.dirs
d279 1
a279 1
$(TARGETMCD): $(OBJSMCD) $(LIBS) o.dirs
@


1.19
log
@ * Improved DebugLib's area handling system.  Lines of debug may now belong
   to multiple "areas" of code, each at a specific level.  The filtering of
   debug at runtime is now done with a much more flexible system,
   areas/levels are masked in/out based on a new format for the
   DebugLib$Level_<taskname> system variable.  The description of this
   format has not made it into the StrongHelp document, it will go into
   this, and into the DebugLib web docs ASAP.

 * Added a new option to allow the area/level prefix in debug output to
   be padded to a particular width.  This makes the prefix much more
   useable.  The prefixing is turned on with the option
   "debug_set_area_level_prefix", and the padding controlled with
   "debug_set_area_pad_limit".

 * Added test cases for new levelling scheme into CLI test harness.

 * Updated StrongHelp manual somewhat.


Version 0.41. Tagged as 'DebugLib-0_41'
@
text
@d228 1
a228 1
	$(CP)   VersionNum      $(EXPORT_DIR).VersionNum 	$(CPFLAGS)
@


1.18
log
@ * Continued tidy-up of DebugLib:

 * All DebugLib functions now namespaced, they all start debug_<filename>_
  (except the functions in debug.c which are debug_).

 * Device specific #defines etc moved into device specific header files,
   e.g. debugit.h

 * Moved taskname prefixing to a central location, moved timestamping here
   also, added area/level prefixing, and tidied up this prefixing to make
   sure it looks good on all the possible debug devices.

 * Can now do any debuglib function to any debug device, including trace
   output, this hasn't been the case for a while.

 * Added new option, to set whether you want to prefix all debug lines
   with the area/level pair specified in dprintf, dfprintf etc.  Added
   new function to set this option.  debug_set_area_level_prefix ()

 * remotedb output now uses new "raw" output mode added to remotedb in
   version 0.06.  _DebugLib now requires remotedb version >= 0.06_

 * Added new test cases into CLI_App test harness, and changed a few things
   in TestMod.

 * Added Memcheck misc block registration into buffering code, which allows
   buffering to be used on the DebugLib Memcheck build.

 * Added lots of new function names into the always_ignore field which is
   used to tell trace which functions to ignore.  It seems that some the
   internet libraries have function names emebedded, which causes horrible
   loops when using DebugLib to output trace info to remotedb.  Also added
   debug_* and remote_debug_*

 * Added StrongHelp topics for ddumpbuf, debug_output_buffer_* and
   debug_set_area_level_prefix.  Updated the "Setting up the library"
   section.

 * Checked with all the debug devices except TML and serial.


Version 0.38. Tagged as 'DebugLib-0_38'
@
text
@d104 1
d120 1
d136 1
d152 1
d168 1
@


1.17
log
@ * Continued tidy of DebugLib structure/implementation...added an "Open"
   variable to the debug_output_method structure, to replace the
   sessions_available struct that was used previously.  Now check for
   whether a device is open at the top level (debug.c) instead of once
   for each device.  Removed the "quit" function for a few devices, because
   it was doing nothing.
 * Reduced global variable count to 1. :)

 * Split option setting functions to options.[ch], left debug_set_device
   in c.debug, as it does a bit more that just set an option.


Version 0.37. Tagged as 'DebugLib-0_37'
@
text
@d74 1
a74 1

@


1.16
log
@ * Oops, forgot new Makefile for re-org introduced at version 0.35


Version 0.36. Tagged as 'DebugLib-0_36'
@
text
@d95 1
d110 1
d125 1
d140 1
d155 1
@


1.15
log
@ * Added debug and MemCheck targets to DebugLib.  They don't get exported,
   as they are only for DebugLib development.  They were used to spot...

 * Found and fixed malloc block overwrite in the level checking code.  I
   was mallocing too small of a block by doing strlen on the wrong
   string.  This bug was causing problems when level filtering was used
   with apps compiled with DebugLib.

 * Tidied OS_ReadVarVal veneer.

 * Added MemCheck code and build target to CLI_App test program, which uses
   the new MemCheck target of DebugLib.


Version 0.32. Tagged as 'DebugLib-0_32'
@
text
@d90 13
a102 8
OBJS = \
 o.debug \
 o.inits \
 o.quits \
 o.output \
 o.serial_lib \
 o.buffering \
 o.misc \
d104 13
a116 8
OBJSZ = \
 oz.debug \
 oz.inits \
 oz.quits \
 oz.output \
 oz.serial_lib \
 oz.buffering \
 oz.misc \
d118 13
a130 8
OBJSD = \
 od.debug \
 od.inits \
 od.quits \
 od.output \
 od.serial_lib \
 od.buffering \
 od.misc \
d132 13
a144 8
OBJSMC = \
 oMC.debug \
 oMC.inits \
 oMC.quits \
 oMC.output \
 oMC.serial_lib \
 oMC.buffering \
 oMC.misc \
d146 13
a158 8
OBJSMCD = \
 oMCD.debug \
 oMCD.inits \
 oMCD.quits \
 oMCD.output \
 oMCD.serial_lib \
 oMCD.buffering \
 oMCD.misc \
@


1.14
log
@ * Tidied debug_initialise function greatly.  It now uses a number of
   auxiliary functions to reduce the size and complexity of the function.
   The auxiliary functions use functions in the new file misc.c, most
   importantly a veneer to use OS_ReadVarVal nicely.

 * Storage of taskname, and filename for file output method is now done
   with dynamic memory allocation, used to be statically sized buffers.


Version 0.30. Tagged as 'DebugLib-0_30'
@
text
@d34 1
a34 1
CC		= cc
d83 3
d108 27
d149 7
a155 4
.SUFFIXES: .o .oz .s .h .c
.c.o:;     $(CC) $(CCFLAGS) -o $@@ $<
.c.oz:;    $(CC) $(CCFLAGS) -zm -o $@@ $<
.s.o:;     $(AS) $(ASFLAGS) -o $@@ $<
d162 3
a164 1
all:	$(TARGET) $(TARGETZ)
d166 1
d181 3
d186 3
d203 3
d220 1
a220 1
$(TARGET): $(OBJS) o.dirs
d225 1
a225 1
$(TARGETZ): $(OBJSZ) o.dirs
d229 15
@


1.13
log
@Summary
    * Added dvprintf courtesy of Neil Bingham.
    * Fixed module tracing.
Detail
    * dvprintf speaks for iteslf.
    * Fixed module trace builds - they were not linking against the module
      version of the trace library.  It was mostly working, but one of the
      things that wasn't was the ability to ignore certain functions.
    * Tidied up debug_trace_initialise a bit to find the length of the string
      of functions it always ignores by using strlen, instead of having a
      hard-coded integer.  Also fixed a memory leak - wasn't freeing the
      string of ignored functions.
Admin
    * dvprintf tested with the test harnesses and with the ATM driver.
    * Module trace fixes tested with the ATM driver.

Version 0.29. Tagged as 'DebugLib-0_29'
@
text
@d73 1
a73 1
DFLAGS		= 
d94 1
d103 1
@


1.12
log
@* Added EraseCVS command to !MkClean.
* BLaughton spotted that DebugLib's object code was still being linked into
  apps when DEBUGLIB was not defined.  This is because the object code is of
  type AOF.  DebugLib must generate an AOF file to partially link in PDebug
  and Trace.  What happens now is that the generated AOF is now run through
  libfile to produce an ALF file.  Takes approx 31k off binary size when not
  compiled in.

Version 0.28. Tagged as 'DebugLib-0_28'
@
text
@d110 1
a110 1
 $(TRACELIB) \
@


1.11
log
@ * Removed the stripdepend command from the Makefile, because it was pointed
   out to me that it was already being done in the !MkClean :)


Version 0.27. Tagged as 'DebugLib-0_27'
@
text
@d40 1
d42 1
a42 1
CCFLAGS		= -c -depend !Depend -ffah ${INCLUDES} ${DFLAGS} ${THROWBACK}
d45 1
a45 1
LBFLAGS		= -c
d62 5
a66 4
REMOTEDBLIB	= ${LIBDIR}.debug.o.lremote
PDEBUG		= ${LIBDIR}.PDebug.o.Lib_PL
PDEBUGZM	= ${LIBDIR}.PDebug.o.Lib_M_PL

d83 3
a85 1
EXPORTS		= ${EXP_HDR}.${COMPONENT}
d104 3
a106 3
 ${PDEBUG} \
 libs.t_pl \
 ${REMOTEDBLIB} \
d109 3
a111 3
 ${PDEBUGZM} \
 libs.t_m_pl \
 ${REMOTEDBLIB}zm \
d118 3
a120 3
.c.o:;     ${CC} ${CCFLAGS} -o $@@ $<
.c.oz:;    ${CC} ${CCFLAGS} -zm -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<
d127 1
a127 1
all:	${TARGET} ${TARGETZ}
d134 1
a134 1
export: export_${PHASE}
d136 3
a138 3
install_rom: ${TARGET}
	${CP} 	${TARGET} ${INSTDIR}.${COMPONENT} 		${CPFLAGS}
	@@echo ${COMPONENT}: rom module installed
d141 5
a145 5
	${WIPE} o ${WFLAGS}
	${WIPE} oz ${WFLAGS}
	${RM} ${TARGET}
	${RM} ${TARGETZ}
	@@echo ${COMPONENT}: cleaned
d148 8
a155 8
	${CP}	h.DebugLib	${EXPORT_DIR}.h.DebugLib 	${CPFLAGS}
	${CP}   VersionNum      ${EXPORT_DIR}.VersionNum 	${CPFLAGS}
	@@echo * ${COMPONENT}: export complete (hdrs)

export_libs: ${TARGET} ${TARGETZ} dirs
	${CP}	${TARGET}	${EXPORT_DIR}.o.${TARGET}	${CPFLAGS}
	${CP}	${TARGETZ}	${EXPORT_DIR}.o.${TARGETZ}	${CPFLAGS}
	@@echo * ${COMPONENT}: export complete (libs)
d158 2
a159 2
	${MKDIR} o
	${MKDIR} oz
d164 4
a167 4
	${MKDIR} ${LIBDIR}
	${MKDIR} ${EXPORT_DIR}
	${MKDIR} ${EXPORT_DIR}.h
	${MKDIR} ${EXPORT_DIR}.o
d173 9
a181 5
${TARGET}: ${OBJS} o.dirs
	${LD} ${LNFLAGS} -o ${TARGET} ${OBJS} ${LIBS}

${TARGETZ}: ${OBJSZ} o.dirs
	${LD} ${LNFLAGS} -o ${TARGETZ} ${OBJSZ} ${LIBSZ}
d183 2
a184 2
${EXP_HDR}.${COMPONENT}: hdr.${COMPONENT}
	${CP} hdr.${COMPONENT} $@@ ${CPFLAGS}
@


1.10
log
@ * DebugLib now uses PDebug object and header from inside build tree
   Export.Lib directory.  Removed header and objects from DebugLib itself

 * Added stripdepend call to Makefile, requires new Library.

 * DebugLib.h now include "kernel.h", to stop complaints about
   _kernel_oserror


Version 0.26. Tagged as 'DebugLib-0_26'
@
text
@a39 1
STRIPDEPEND	= stripdepnd
a140 1
	${STRIPDEPEND} Makefile
@


1.9
log
@--------
  * Added buffering support.
Detail:
-------
  * DebugLib output can now be buffered and then output.  This is primarily
    for debugging ROM modules that would be active before the parallel
    port is alive during boot up.  Two new functions have been added to
    support this; debug_output_buffer_on() and debug_output_buffer_off().
    Updated documentation to follow.
Admin:
------
  * Tested on RiscPC/NC with Parallel, DebugIt and System variable
    override of output settings.

Version 0.25. Tagged as 'DebugLib-0_25'
@
text
@d40 1
d63 2
a64 4
PDEBUG		= Libs.PD_PL
PDEBUGZM	= Libs.PD_M_PL
#PDEBUG		= ${LIBDIR}.PDebug.o.Lib_PL
#PDEBUGZM	= ${LIBDIR}.PDebug.o.Lib_M_PL
d142 1
@


1.8
log
@ * Fixed Makefile so that it doesn't use "newer" when copying files.  This
   meant that an export wouldn't overwrite newer libraries, when you'd
   expect it to.

 * Tidied test app Makefiles and build obey files.

 * Fixed GUI test app, wasn't declaring it's windows as autocreate and/or
   shared, which meant it missed events.  Removed all warnings also.

 * Now outputs the PDebug version information when a device is activiated.


Version 0.24. Tagged as 'DebugLib-0_24'
@
text
@d91 1
d99 1
@


1.7
log
@ * Added new feature.  Can now override the filename which the file output
   method uses at runtime by setting a system variable
   "DebugLib$Filename_<Taskname>"

 * Can now tell debuglib to turn off file buffering for the file output
   method, with a system variable. "DebugLib$UnbufferedFiles<Taskname>" set
   to any value

 * Tidied make system, so throwback is only turned on by the build obey
   files

 * Tidied a few switch statements

 * Updated StrongHelp manual to reflect new system variables and features.


Version 0.21. Tagged as 'DebugLib-0_21'
@
text
@d43 1
a43 1
CPFLAGS		= ~clfnr~v
d62 4
d100 1
a100 1
 libs.pd_pl \
d105 1
a105 1
 libs.pd_m_pl \
@


1.6
log
@ * You can now specify the debug device that DebugLib uses for trace
   output with a system variable (DebugLib$TraceDevice_<taskname>).
   The corresponding behaviour for normal debug statements is now
   more appropriate. (i.e. The debug device specified in the variable is
   only initialised at the first call of debug_out_device())

 * Increased vsprintf buffer size to 1Kbyte (Previous buffer was overrun
   by some applications).  Could put in a hack to fprintf to Null: to
   discover the size, then create a big enough buffer to do the vsprintf...


Version 0.17. Tagged as 'DebugLib-0_17'
@
text
@d41 1
a41 1
CCFLAGS		= -c -depend !Depend -ffah ${INCLUDES} ${DFLAGS} -throwback
d129 1
a129 1
	${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
d140 2
a141 2
	${CP}	h.DebugLib	${EXPORT_DIR}.h.DebugLib ${CPFLAGS}
	${CP}   VersionNum      ${EXPORT_DIR}.VersionNum ${CPFLAGS}
@


1.5
log
@Changed Makefile to remove mistake in Module build.

Version 0.16. Tagged as 'DebugLib-0_16'
@
text
@a176 136
o.debug:	c.debug
o.debug:	h.include
o.debug:	C:h.kernel
o.debug:	C:h.swis
o.debug:	h.PDebug
o.debug:	h.Trace
o.debug:	C:debug.h.remote
o.debug:	h.serial_lib
o.debug:	C:h.kernel
o.debug:	h.DebugLib
o.debug:	h.debug
o.debug:	h.inits
o.debug:	h.output
o.debug:	h.quits
o.debug:	h.globals
o.debug:	VersionNum
o.debug:	c.debug
o.debug:	h.include
o.debug:	C:h.kernel
o.debug:	C:h.swis
o.debug:	h.PDebug
o.debug:	h.Trace
o.debug:	C:debug.h.remote
o.debug:	h.serial_lib
o.debug:	C:h.kernel
o.debug:	h.DebugLib
o.debug:	h.debug
o.debug:	h.inits
o.debug:	h.output
o.debug:	h.quits
o.debug:	h.globals
o.debug:	VersionNum
o.inits:	c.inits
o.inits:	h.include
o.inits:	C:h.kernel
o.inits:	C:h.swis
o.inits:	h.PDebug
o.inits:	h.Trace
o.inits:	C:debug.h.remote
o.inits:	h.serial_lib
o.inits:	C:h.kernel
o.inits:	h.DebugLib
o.inits:	h.output
o.inits:	h.inits
o.inits:	h.debug
o.inits:	h.globals
o.quits:	c.quits
o.quits:	h.include
o.quits:	C:h.kernel
o.quits:	C:h.swis
o.quits:	h.PDebug
o.quits:	h.Trace
o.quits:	C:debug.h.remote
o.quits:	h.serial_lib
o.quits:	C:h.kernel
o.quits:	h.DebugLib
o.quits:	h.quits
o.quits:	h.globals
o.output:	c.output
o.output:	h.include
o.output:	C:h.kernel
o.output:	C:h.swis
o.output:	h.PDebug
o.output:	h.Trace
o.output:	C:debug.h.remote
o.output:	h.serial_lib
o.output:	C:h.kernel
o.output:	h.DebugLib
o.output:	h.output
o.output:	h.debug
o.output:	h.globals
o.serial_lib:	c.serial_lib
o.serial_lib:	C:h.kernel
o.serial_lib:	C:h.swis
o.serial_lib:	h.serial_lib
o.serial_lib:	C:h.kernel
oz.debug:	c.debug
oz.debug:	h.include
oz.debug:	C:h.kernel
oz.debug:	C:h.swis
oz.debug:	h.PDebug
oz.debug:	h.Trace
oz.debug:	C:debug.h.remote
oz.debug:	h.serial_lib
oz.debug:	C:h.kernel
oz.debug:	h.DebugLib
oz.debug:	h.debug
oz.debug:	h.inits
oz.debug:	h.output
oz.debug:	h.quits
oz.debug:	h.globals
oz.debug:	VersionNum
oz.inits:	c.inits
oz.inits:	h.include
oz.inits:	C:h.kernel
oz.inits:	C:h.swis
oz.inits:	h.PDebug
oz.inits:	h.Trace
oz.inits:	C:debug.h.remote
oz.inits:	h.serial_lib
oz.inits:	C:h.kernel
oz.inits:	h.DebugLib
oz.inits:	h.output
oz.inits:	h.inits
oz.inits:	h.debug
oz.inits:	h.globals
oz.quits:	c.quits
oz.quits:	h.include
oz.quits:	C:h.kernel
oz.quits:	C:h.swis
oz.quits:	h.PDebug
oz.quits:	h.Trace
oz.quits:	C:debug.h.remote
oz.quits:	h.serial_lib
oz.quits:	C:h.kernel
oz.quits:	h.DebugLib
oz.quits:	h.quits
oz.quits:	h.globals
oz.output:	c.output
oz.output:	h.include
oz.output:	C:h.kernel
oz.output:	C:h.swis
oz.output:	h.PDebug
oz.output:	h.Trace
oz.output:	C:debug.h.remote
oz.output:	h.serial_lib
oz.output:	C:h.kernel
oz.output:	h.DebugLib
oz.output:	h.output
oz.output:	h.debug
oz.output:	h.globals
oz.serial_lib:	c.serial_lib
oz.serial_lib:	C:h.kernel
oz.serial_lib:	C:h.swis
oz.serial_lib:	h.serial_lib
oz.serial_lib:	C:h.kernel
@


1.4
log
@  Updated Documentation for debug_initialise, to clarify some of the
parameters.
  Fixed a few cases where NULLs could be passed to strcpy etc. in
debug_initialise.
  VersionNum file now gets exported to the DebugLib's Export directory, so
you always know what version you've got compiled.
  Tidied some header files a bit.

Version 0.14. Tagged as 'DebugLib-0_14'
@
text
@d111 1
a111 1
.c.oz:;    ${CC} ${CCFLAGS} -zm -zps1 -o $@@ $<
d177 136
@


1.3
log
@Added Serial Output device.
Added CLI, Module and Toolbox test applications
Tidied various sections
Tidied StrongHelp manual
Removed remotedb from Libs folder, now fetched from build structure
Removed svcprint from Libs folder, wasn't being used
Added srccommit support

Version 0.10. Tagged as 'DebugLib-0_10'
@
text
@d15 1
a15 1
# Makefile for debuglib
d22 1
a22 1
EXP_HDR		= <export$dir>
d76 3
a78 3
COMPONENT	= debuglib
TARGET		= debuglib
TARGETZ		= debuglibzm
d139 3
a141 2
export_hdrs: h.debuglib dirs
	${CP}	h.debuglib	${EXPORT_DIR}.h.debuglib ${CPFLAGS}
@


1.2
log
@Merged DebugLib from Daytona branch onto trunk

Version 0.09. Not tagged
@
text
@a16 7
# *****************************************
# ***       C h a n g e   L i s t       ***
# *****************************************
# Date		Name		Description
# ----		----		-----------
# 1997-10-07	BAL		Created

d41 1
a41 1
CCFLAGS		= -c -depend !Depend -ffah ${INCLUDES} ${DFLAGS}
d45 1
d53 1
d61 2
d81 23
a103 7
OBJS		= o.debug o.inits o.quits o.output

OBJSZ		= z.debug z.inits z.quits z.output

LIBS		= libs.pd_pl libs.svcprint libs.t_pl libs.lremote

LIBSZ		= libs.pd_m_pl libs.svcprint libs.t_m_pl libs.lremotezm
d109 1
a109 1
.SUFFIXES: .o .z .s .h .c
d111 1
a111 1
.c.z:;     ${CC} ${CCFLAGS} -zm -zps1 -o $@@ $<
d119 1
a119 1
all:	${TARGET}
d134 1
a134 1
	${WIPE} z ${WFLAGS}
d141 1
a141 1
	@@echo ${COMPONENT}: export complete (hdrs)
d146 1
a146 1
	@@echo ${COMPONENT}: export complete (libs)
d148 1
a148 1
local_dirs:
d150 3
a152 1
	${MKDIR} z
a158 2
	${MKDIR} ${EXPORT_DIR}.z
        
d164 2
a165 5
${TARGET}: ${OBJS} local_dirs
	${LD} ${LNFLAGS} -o ${TARGET} -aof ${OBJS} ${LIBS}

${TARGETZ}: ${OBJSZ} local_dirs
	${LD} ${LNFLAGS} -o ${TARGETZ} -aof ${OBJSZ} ${LIBSZ}
d167 2
a168 5
#${TARGET}: ${OBJS} local_dirs
#	${LB} ${LBFLAGS} -l -o ${TARGET} ${OBJS} ${LIBS}
        
#${TARGETZ}: ${OBJSZ} local_dirs
#	${LB} ${LBFLAGS} -l -o ${TARGETZ} ${OBJSZ} ${LIBSZ}
@


1.1
log
@Debug Library used in Daytona project.  First CVS checkin
@
text
@d15 8
a22 20
CC =		cc
LD = 		Link
ASM =	 	ObjAsm
CMHG =	 	CMHG
LB =		LibFile
RM =		Remove
WIPE =		-Wipe

#CFLAGS =	-c -depend !Depend -Itbox:,C: -zo -zps1 -ffah -throwback
CFLAGS =	-c -depend !Depend -Itbox:,C: -UNOSOCKETS -zo -zps1 -ffah -throwback
CPPFLAGS = 	-c -depend !Depend -IC: -throwback
LDFLAGS	= 	-aif -c++
LBFLAGS =	-c
ASMFLAGS =	-throwback -NoCache -depend !Depend
CMHGFLAGS = 	-depend !Depend -throwback -IC:
WIPEFLAGS =	~C~V

TARGET = 	Targets.DebugLib

OBJECTS	= 	o.debug o.inits o.quits o.output
a23 2
#LIBS =		libs.pd_pl libs.svcprint libs.t_m_pl libs.t_pl
LIBS =		libs.pd_pl libs.svcprint libs.t_m_pl libs.t_pl libs.remote
d25 3
a27 2
.SUFFIXES:	.o .c
.c.o:;		$(CC) $(CFLAGS) -o $@@ $<
d29 89
a117 1
all: $(TARGET)
d120 45
a164 2
	$(RM)	$(TARGET)
	$(WIPE)	o.*		$(WIPEFLAGS)
a165 2
$(TARGET): $(OBJECTS)
	$(LB) $(LBFLAGS) -o $@@ $(OBJECTS) $(LIBS)
d167 1
a168 65
o.debug:	c.debug
o.debug:	h.include
o.debug:	tbox:h.toolbox
o.debug:	C:h.kernel
o.debug:	tbox:h.wimp
o.debug:	tbox:h.wimp
o.debug:	tbox:h.wimplib
o.debug:	C:h.kernel
o.debug:	C:h.swis
o.debug:	h.svcprint
o.debug:	h.PDebug
o.debug:	h.Trace
o.debug:	h.remote
o.debug:	h.debug
o.debug:	h.inits
o.debug:	h.output
o.debug:	h.quits
o.debug:	h.globals
o.inits:	c.inits
o.inits:	h.include
o.inits:	tbox:h.toolbox
o.inits:	C:h.kernel
o.inits:	tbox:h.wimp
o.inits:	tbox:h.wimp
o.inits:	tbox:h.wimplib
o.inits:	C:h.kernel
o.inits:	C:h.swis
o.inits:	h.svcprint
o.inits:	h.PDebug
o.inits:	h.Trace
o.inits:	h.remote
o.inits:	h.output
o.inits:	h.inits
o.inits:	h.globals
o.quits:	c.quits
o.quits:	h.include
o.quits:	tbox:h.toolbox
o.quits:	C:h.kernel
o.quits:	tbox:h.wimp
o.quits:	tbox:h.wimp
o.quits:	tbox:h.wimplib
o.quits:	C:h.kernel
o.quits:	C:h.swis
o.quits:	h.svcprint
o.quits:	h.PDebug
o.quits:	h.Trace
o.quits:	h.remote
o.quits:	h.quits
o.quits:	h.globals
o.output:	c.output
o.output:	h.include
o.output:	tbox:h.toolbox
o.output:	C:h.kernel
o.output:	tbox:h.wimp
o.output:	tbox:h.wimp
o.output:	tbox:h.wimplib
o.output:	C:h.kernel
o.output:	C:h.swis
o.output:	h.svcprint
o.output:	h.PDebug
o.output:	h.Trace
o.output:	h.remote
o.output:	h.output
o.output:	h.debug
o.output:	h.globals
@


1.1.2.1
log
@Makefile now exports to the build structure. Renamed build obey files.
@
text
@d15 20
a34 8
# Makefile for debuglib
#
# *****************************************
# ***       C h a n g e   L i s t       ***
# *****************************************
# Date		Name		Description
# ----		----		-----------
# 1997-10-07	BAL		Created
d36 2
d39 2
a40 3
# ------------------------------------------------------------------------------
# Paths
#
d42 1
a42 89
EXP_HDR		= <export$dir>
LIBDIR		= <Lib$Dir>
EXPORT_DIR	= <Lib$Dir>.DebugLib


# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
AS		= objasm
CP		= copy
CC		= cc
CM		= cmhg
RM		= remove
LD		= link
LB		= libfile
WIPE		= -wipe

CCFLAGS		= -c -depend !Depend -ffah ${INCLUDES} ${DFLAGS}
ASFLAGS		= -depend !Depend -Stamp -quit
CPFLAGS		= ~clfnr~v
LBFLAGS		= -c
WFLAGS		= ~CFR~V


# ------------------------------------------------------------------------------
# Libraries
#

CLIB		= CLIB:o.stubs
RLIB		= RISCOSLIB:o.risc_oslib
RSTUBS		= RISCOSLIB:o.rstubs
ROMSTUBS	= RISCOSLIB:o.romstubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.AbsSym


# ------------------------------------------------------------------------------
# Include files
#

INCLUDES	= -Itbox:,C:
DFLAGS		= 


# ------------------------------------------------------------------------------
# Program specific options:
#

COMPONENT	= debuglib
TARGET		= debuglib
TARGETZ		= debuglibzm
EXPORTS		= ${EXP_HDR}.${COMPONENT}

OBJS		= o.debug o.inits o.quits o.output

OBJSZ		= z.debug z.inits z.quits z.output

LIBS		= libs.pd_pl libs.svcprint libs.t_m_pl libs.t_pl libs.remote

LIBSZ		= ${LIBS}

# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES: .o .z .s .h .c
.c.o:;     ${CC} ${CCFLAGS} -o $@@ $<
.c.z:;     ${CC} ${CCFLAGS} -zm -zps1 -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<


# ------------------------------------------------------------------------------
# Build all the library
#

all:	${TARGET} ${TARGETZ}


# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

export: export_${PHASE}

install_rom: ${TARGET}
	${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
	@@echo ${COMPONENT}: rom module installed
d45 2
a46 39
	${WIPE} o ${WFLAGS}
	${WIPE} z ${WFLAGS}
	${RM} ${TARGET}
	${RM} ${TARGETZ}
	@@echo ${COMPONENT}: cleaned

export_hdrs: h.debuglib dirs
	${CP}	h.debuglib	${EXPORT_DIR}.h.debuglib ${CPFLAGS}
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${TARGET} ${TARGETZ} dirs
	${CP}	${TARGET}	${EXPORT_DIR}.o.${TARGET}	${CPFLAGS}
	${CP}	${TARGETZ}	${EXPORT_DIR}.o.${TARGETZ}	${CPFLAGS}
	@@echo ${COMPONENT}: export complete (libs)

local_dirs:
	${MKDIR} o
	${MKDIR} z

dirs:
	${MKDIR} ${LIBDIR}
	${MKDIR} ${EXPORT_DIR}
	${MKDIR} ${EXPORT_DIR}.h
	${MKDIR} ${EXPORT_DIR}.o
	${MKDIR} ${EXPORT_DIR}.z
        

# ------------------------------------------------------------------------------
# Final link
#

${TARGET}: ${OBJS} local_dirs
	${LB} ${LBFLAGS} -o ${TARGET} ${OBJS} ${LIBS}
        
${TARGETZ}: ${OBJSZ} local_dirs
	${LB} ${LBFLAGS} -o ${TARGETZ} ${OBJSZ} ${LIBSZ}

${EXP_HDR}.${COMPONENT}: hdr.${COMPONENT}
	${CP} hdr.${COMPONENT} $@@ ${CPFLAGS}
d48 2
a50 1
# ------------------------------------------------------------------------------
a116 65
z.debug:	c.debug
z.debug:	h.include
z.debug:	tbox:h.toolbox
z.debug:	C:h.kernel
z.debug:	tbox:h.wimp
z.debug:	tbox:h.wimp
z.debug:	tbox:h.wimplib
z.debug:	C:h.kernel
z.debug:	C:h.swis
z.debug:	h.svcprint
z.debug:	h.PDebug
z.debug:	h.Trace
z.debug:	h.remote
z.debug:	h.debug
z.debug:	h.inits
z.debug:	h.output
z.debug:	h.quits
z.debug:	h.globals
z.inits:	c.inits
z.inits:	h.include
z.inits:	tbox:h.toolbox
z.inits:	C:h.kernel
z.inits:	tbox:h.wimp
z.inits:	tbox:h.wimp
z.inits:	tbox:h.wimplib
z.inits:	C:h.kernel
z.inits:	C:h.swis
z.inits:	h.svcprint
z.inits:	h.PDebug
z.inits:	h.Trace
z.inits:	h.remote
z.inits:	h.output
z.inits:	h.inits
z.inits:	h.globals
z.quits:	c.quits
z.quits:	h.include
z.quits:	tbox:h.toolbox
z.quits:	C:h.kernel
z.quits:	tbox:h.wimp
z.quits:	tbox:h.wimp
z.quits:	tbox:h.wimplib
z.quits:	C:h.kernel
z.quits:	C:h.swis
z.quits:	h.svcprint
z.quits:	h.PDebug
z.quits:	h.Trace
z.quits:	h.remote
z.quits:	h.quits
z.quits:	h.globals
z.output:	c.output
z.output:	h.include
z.output:	tbox:h.toolbox
z.output:	C:h.kernel
z.output:	tbox:h.wimp
z.output:	tbox:h.wimp
z.output:	tbox:h.wimplib
z.output:	C:h.kernel
z.output:	C:h.swis
z.output:	h.svcprint
z.output:	h.PDebug
z.output:	h.Trace
z.output:	h.remote
z.output:	h.output
z.output:	h.debug
z.output:	h.globals
@


1.1.2.2
log
@Removed dynamic dependencies
@
text
@d163 130
@


1.1.2.3
log
@  Makefile now builds correct libraries into module and non-module versions
of the library.  The unlinked version of remotedb 0.01-1.1.2.2 is used for
socket debug, and included in the Libs directory (lremote and lremotezm)
@
text
@d88 1
a88 1
LIBS		= libs.pd_pl libs.svcprint libs.t_pl libs.lremote
d90 1
a90 1
LIBSZ		= libs.pd_m_pl libs.svcprint libs.t_m_pl libs.lremotezm
d106 1
a106 1
all:	${TARGET}
d152 2
a153 2
	${LD} ${LNFLAGS} -o ${TARGET} -aof ${OBJS} ${LIBS}

d155 1
a155 7
	${LD} ${LNFLAGS} -o ${TARGETZ} -aof ${OBJSZ} ${LIBSZ}

#${TARGET}: ${OBJS} local_dirs
#	${LB} ${LBFLAGS} -l -o ${TARGET} ${OBJS} ${LIBS}
        
#${TARGETZ}: ${OBJSZ} local_dirs
#	${LB} ${LBFLAGS} -l -o ${TARGETZ} ${OBJSZ} ${LIBSZ}
@
