head	1.2;
access;
symbols
	ModuleTask-0_05:1.2
	ModuleTask-0_04:1.2
	ModuleTask-0_03:1.2
	dellis_autobuild_BaseSW:1.2
	sbrodie_sedwards_16Mar2000:1.2
	ModuleTask-0_02:1.2
	dcotton_autobuild_BaseSW:1.2
	nturton_ModuleTask-1_3:1.2
	dcotton_moduletask-MPTBuild_30Mar1999:1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.2
	Ursula_RiscPC:1.2.0.4
	rthornb_UrsulaBuild-19Aug1998:1.2
	UrsulaBuild_FinalSoftload:1.2
	rthornb_UrsulaBuild-12Aug1998:1.2
	aglover_UrsulaBuild-05Aug1998:1.2
	rthornb_UrsulaBuild-29Jul1998:1.2
	rthornb_UrsulaBuild-22Jul1998:1.2
	rthornb_UrsulaBuild-15Jul1998:1.2
	rthornb_UrsulaBuild-07Jul1998:1.2
	rthornb_UrsulaBuild-17Jun1998:1.2
	rthornb_UrsulaBuild-03Jun1998:1.2
	rthornb_UrsulaBuild-27May1998:1.2
	rthornb_UrsulaBuild-21May1998:1.2
	rthornb_UrsulaBuild_01May1998:1.2
	afrost_NC2_Generic:1.1.1.3
	afrost_Funai01-33:1.1.1.3
	Spinner_RCA116:1.1.1.3
	Spinner_B20_2:1.1.1.3
	Spinner_19_3:1.1.1.3
	Spinner_B18:1.1.1.3
	Spinner_B17:1.1.1.3
	Spinner_B15:1.1.1.3
	Spinner_B14:1.1.1.3
	Spinner_B13:1.1.1.3
	Spinner_B12:1.1.1.3
	Spinner_B10:1.1.1.3
	Spin_merge:1.1.1.3
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.2.0.2
	Ursula_bp:1.2
	Spinner_B7:1.1.1.3
	ARTtmp_merge:1.1.1.1
	Spin_3Apr97:1.1.1.2
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.1.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.2
date	97.05.21.10.52.30;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.03.18.16.19.31;	author jsmith;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.16.19.31;	author jsmith;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.27.16.46.11;	author jsmith;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	97.04.11.20.28.20;	author jsmith;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Spinner branch merged
@
text
@; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;	Start up a module as a Wimp task.


STACK_SIZE		* 8192
OS_Module		* &1e
OS_GenerateError	* &2b
OS_Exit			* &11
STACKCHUNK_HEADERSIZE	* 20

	IMPORT  |_Lib$Reloc$Off$DP|
	IMPORT  ModuleTask__ModuleEnter
	IMPORT  ModuleTask__stack

	EXPORT  |_blib_entermodule|

	AREA	|_blib_entermodulearea|,REL,CODE,READONLY

|_blib_entermodule|
	MOV	r4,r0			; Save command tail
	LDR	r12,[r12]		; Workspace ptr from private word
	LDMIB	r12,{r5,r6}		; Module relocations
	LDR	r7,taskstackptr		; A Ptr to taskstack variable
	ADD	r7,r7,r6		; Gets relocated for user variable
	MOV	r0,#6  ;ModHandReason_Claim ; Claim memory for stack
	MOV	r3,#STACK_SIZE
	SWI	OS_Module
	MOV	sl,r2			; Set up stack
	;STR	sl,[r7]
	ADD	sp,sl,r3	; sp points to first word beyond srack chunk.

		; Now set up stack chunk header (_kerne_stack_chunk). JS 27 Mar 1997
	LDR	r0, stack_magic
	STR	r0, [ sl, #0]	; sc_mark
	MOV	r0, #0
	STR	r0, [ sl, #4]	; sc_next	= 0
	STR	r0, [ sl, #8]	; sc_prev	= 0
	STR	r0, [ sl, #16]	; sc_deallocate	= 0
	STR	r3, [ sl, #12]	; chunk size
	
	;STR	r5, [ sl, #STACKCHUNK_HEADERSIZE+0]
	;STR	r6, [ sl, #STACKCHUNK_HEADERSIZE+4]
	
	ADD	sl, sl, #STACKCHUNK_HEADERSIZE
	STR	sl,[r7]
	STMIA	sl,{r5,r6}
	
	; This is equivalent of 'ADD r10, r10, #0' + |_Lib$Reloc$Off$DP|
	DCD	|_Lib$Reloc$Off$DP| + &E28AA000

	MOV	fp,#0
	MOV	r0,r4
	BL	ModuleTask__ModuleEnter

	; This is equivalent of 'SUB r10, r10, #0' + |_Lib$Reloc$Off$DP|
	DCD	|_Lib$Reloc$Off$DP| + &E24AA000

	MOV	r4,r0

	SUB	r2, sl, #STACKCHUNK_HEADERSIZE
	MOV	r0,#7
	SWI	OS_Module
	MOV	r0,#0
	STR	r0,[r7]

	MOVS	r0,r4
	SWINE	OS_GenerateError
	SWI	OS_Exit

taskstackptr
	DCD	ModuleTask__stack

stack_magic
	DCD	0xf60690ff

	END
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1

d42 16
a58 1
	ADD	sp,sl,r3
d60 1
a60 1

d73 1
a73 1
	MOV	r2,sl
d86 2
@


1.1.1.1
log
@Initial import of ModuleTask library
@
text
@@


1.1.1.2
log
@Stack created for USR mode by _blib_entermodule now has a proper chunk header. Added extra diagnostics and checking.
@
text
@d22 1
a22 1
STACKCHUNK_HEADERSIZE	* 20
a41 16
	;STR	sl,[r7]
	ADD	sp,sl,r3	; sp points to first word beyond srack chunk.

		; Now set up stack chunk header (_kerne_stack_chunk). JS 27 Mar 1997
	LDR	r0, stack_magic
	STR	r0, [ sl, #0]	; sc_mark
	MOV	r0, #0
	STR	r0, [ sl, #4]	; sc_next	= 0
	STR	r0, [ sl, #8]	; sc_prev	= 0
	STR	r0, [ sl, #16]	; sc_deallocate	= 0
	STR	r3, [ sl, #12]	; chunk size
	
	;STR	r5, [ sl, #STACKCHUNK_HEADERSIZE+0]
	;STR	r6, [ sl, #STACKCHUNK_HEADERSIZE+4]
	
	ADD	sl, sl, #STACKCHUNK_HEADERSIZE
d43 1
d45 1
a45 1
	
d53 2
a54 2
	; This is equivalent of 'SUB r10, r10, #0' + |_Lib$Reloc$Off$DP| + STACKCHUNK_HEADERSIZE
	DCD	|_Lib$Reloc$Off$DP| + &E24AA000 + STACKCHUNK_HEADERSIZE
a70 2
stack_magic
	DCD	0xf60690ff
@


1.1.1.3
log
@Fixed 'Not a heap block' error on exit from module start code. Stopped claiming Service_Memory - used to use full Next slot of app memory
@
text
@d68 2
a69 2
	; This is equivalent of 'SUB r10, r10, #0' + |_Lib$Reloc$Off$DP|
	DCD	|_Lib$Reloc$Off$DP| + &E24AA000
d73 1
a73 1
	SUB	r2, sl, #STACKCHUNK_HEADERSIZE
@
