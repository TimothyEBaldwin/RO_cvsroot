head	1.20;
access;
symbols
	AsmUtils-0_19:1.20
	AsmUtils-0_18:1.19
	AsmUtils-0_17:1.18
	AsmUtils-0_16:1.17
	AsmUtils-0_15:1.16
	AsmUtils-0_14:1.15
	AsmUtils-0_13:1.14
	AsmUtils-0_12:1.13
	AsmUtils-0_11:1.12
	AsmUtils-0_10:1.11
	RO_5_07:1.10
	dellis_autobuild_BaseSW:1.10
	AsmUtils-0_09:1.10
	AsmUtils-0_08:1.9
	AsmUtils-0_07:1.8
	sbrodie_sedwards_16Mar2000:1.7
	AsmUtils-0_06:1.7
	AsmUtils-0_05:1.6
	dcotton_autobuild_BaseSW:1.10
	AsmUtils-0_04:1.5
	AsmUtils-0_03:1.4
	AsmUtils-0_02:1.3
	AsmUtils-0_01:1.2
	AsmUtils-0_00_prerelease:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2016.06.12.13.39.40;	author rsprowson;	state Exp;
branches;
next	1.19;
commitid	rU8r2WX9H97Efbaz;

1.19
date	2016.05.08.17.13.40;	author jlee;	state Exp;
branches;
next	1.18;
commitid	74eXlqYwcboOyH5z;

1.18
date	2014.09.19.18.17.38;	author rsprowson;	state Exp;
branches;
next	1.17;
commitid	QCEO5NRsQ2Rv6ZQx;

1.17
date	2012.09.16.10.43.07;	author rsprowson;	state Exp;
branches;
next	1.16;
commitid	8gMOKXLJM5Wn9Kkw;

1.16
date	2012.02.01.08.17.01;	author rsprowson;	state Exp;
branches;
next	1.15;
commitid	AIiaU3EFT3GDFqRv;

1.15
date	2012.01.14.22.54.31;	author srevill;	state Exp;
branches;
next	1.14;
commitid	mtSwm5BZixpy6cPv;

1.14
date	2011.12.24.12.02.25;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	u9gSHjeqOuIGarMv;

1.13
date	2011.12.14.10.42.13;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	wC1I0cEKJEq639Lv;

1.12
date	2009.06.26.00.36.42;	author bavison;	state Exp;
branches;
next	1.11;

1.11
date	2005.07.01.17.28.07;	author bavison;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.04.19.48.39;	author sbrodie;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.08.08.04.49;	author sbrodie;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.05.10.10.19;	author sbrodie;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.15.13.03.17;	author sbrodie;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.10.11.53.37;	author ahodgkin;	state Exp;
branches;
next	1.5;

1.5
date	99.11.30.12.56.57;	author sbrodie;	state Exp;
branches;
next	1.4;

1.4
date	99.11.30.10.54.00;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	99.11.29.11.33.31;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	99.11.26.14.48.21;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	99.11.22.12.23.55;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.22.12.23.55;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Correction to function prototype
The implementation of osvarlen expects 2 arguments, but the header file only declares 1, so R4 becomes undefined.

Version 0.19. Tagged as 'AsmUtils-0_19'
@
text
@/* (0.19)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.19
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                12 Jun 2016

#define Module_MajorVersion             "0.19"
#define Module_Version                  19
#define Module_MinorVersion             ""
#define Module_Date                     "12 Jun 2016"

#define Module_ApplicationDate          "12-Jun-16"

#define Module_ComponentName            "AsmUtils"
#define Module_ComponentPath            "castle/RiscOS/Sources/Lib/AsmUtils"

#define Module_FullVersion              "0.19"
#define Module_HelpVersion              "0.19 (12 Jun 2016)"
#define Module_LibraryVersionInfo       "0:19"
@


1.19
log
@Prefer CPS over MSR when performing PSR manipulation
Detail:
  s/irqs - ensure_irqs_off / ensure_irqs_on now use CPS when building for ARMv6+, as it has better performance than MSR
Admin:
  Tested on Cortex-A15


Version 0.18. Tagged as 'AsmUtils-0_18'
@
text
@d1 1
a1 1
/* (0.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.18
d9 1
a9 1
#define Module_Date_CMHG                08 May 2016
d11 2
a12 2
#define Module_MajorVersion             "0.18"
#define Module_Version                  18
d14 1
a14 1
#define Module_Date                     "08 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "08-May-16"
d21 3
a23 3
#define Module_FullVersion              "0.18"
#define Module_HelpVersion              "0.18 (08 May 2016)"
#define Module_LibraryVersionInfo       "0:18"
@


1.18
log
@Makefile recreated from fragments

Version 0.17. Tagged as 'AsmUtils-0_17'
@
text
@d1 1
a1 1
/* (0.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.17
d9 1
a9 1
#define Module_Date_CMHG                19 Sep 2014
d11 2
a12 2
#define Module_MajorVersion             "0.17"
#define Module_Version                  17
d14 1
a14 1
#define Module_Date                     "19 Sep 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Sep-14"
d21 3
a23 3
#define Module_FullVersion              "0.17"
#define Module_HelpVersion              "0.17 (19 Sep 2014)"
#define Module_LibraryVersionInfo       "0:17"
@


1.17
log
@Allow No32bitCode=FALSE No26bitCode=FALSE to work
For disc targets the above condition is true, so things using AsmUtils in this situtation might be run on something with no MSR/MRS.
No32bitCode=TRUE with No26bitCode=TRUE remains invalid, but the 3 other combinations are now supported.
Binaries inspected by eye for 3 combinations.

Version 0.16. Tagged as 'AsmUtils-0_16'
@
text
@d1 1
a1 1
/* (0.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.16
d9 1
a9 1
#define Module_Date_CMHG                16 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.16"
#define Module_Version                  16
d14 1
a14 1
#define Module_Date                     "16 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "16-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (16 Sep 2012)"
#define Module_LibraryVersionInfo       "0:16"
@


1.16
log
@Fix to osvarlen.
While the filename and function prototype are 'osvarlen' the symbol in the code was not, making this quite hard to use.
Symbol renamed.

Version 0.15. Tagged as 'AsmUtils-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d9 1
a9 1
#define Module_Date_CMHG                01 Feb 2012
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d14 1
a14 1
#define Module_Date                     "01 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "01-Feb-12"
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (01 Feb 2012)"
#define Module_LibraryVersionInfo       "0:15"
@


1.15
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.14. Tagged as 'AsmUtils-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d9 1
a9 1
#define Module_Date_CMHG                14 Jan 2012
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d14 1
a14 1
#define Module_Date                     "14 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jan-12"
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (14 Jan 2012)"
#define Module_LibraryVersionInfo       "0:14"
@


1.14
log
@Fix bug in usermode_donothing() exposed by using this from the Internet module.
In the 26 bit case the TEQP pc,#0 switches to user mode and enables interrupts (see section 8.2.1 of ARM ARM revision E), however the 32 bit case only switched to user mode.
Since interrupts were not enabled, no callbacks got collected, and you just sit in a tight loop. Since a precondition of collecting callbacks is that interrupts are enabled it is safe to reenable them since the caller must have expected this to happen.
Since none of the SWIs in question corrupt R12, we no longer stack it either.

Version 0.13. Tagged as 'AsmUtils-0_13'
@
text
@d1 1
a1 1
/* (0.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.13
d9 1
a9 1
#define Module_Date_CMHG                24 Dec 2011
d11 2
a12 2
#define Module_MajorVersion             "0.13"
#define Module_Version                  13
d14 1
a14 1
#define Module_Date                     "24 Dec 2011"
d16 1
a16 1
#define Module_ApplicationDate          "24-Dec-11"
d21 3
a23 3
#define Module_FullVersion              "0.13"
#define Module_HelpVersion              "0.13 (24 Dec 2011)"
#define Module_LibraryVersionInfo       "0:13"
@


1.13
log
@Use OS_LeaveOS where possible.

Version 0.12. Tagged as 'AsmUtils-0_12'
@
text
@d1 1
a1 1
/* (0.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.12
d9 1
a9 1
#define Module_Date_CMHG                14 Dec 2011
d11 2
a12 2
#define Module_MajorVersion             "0.12"
#define Module_Version                  12
d14 1
a14 1
#define Module_Date                     "14 Dec 2011"
d16 1
a16 1
#define Module_ApplicationDate          "14-Dec-11"
d21 3
a23 3
#define Module_FullVersion              "0.12"
#define Module_HelpVersion              "0.12 (14 Dec 2011)"
#define Module_LibraryVersionInfo       "0:12"
@


1.12
log
@  Added install rule
Admin:
  This is only intended for use when building the disc image for the C/C++ CD.

Version 0.11. Tagged as 'AsmUtils-0_11'
@
text
@d1 1
a1 1
/* (0.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.11
d9 1
a9 1
#define Module_Date_CMHG                26 Jun 2009
d11 2
a12 2
#define Module_MajorVersion             "0.11"
#define Module_Version                  11
d14 1
a14 1
#define Module_Date                     "26 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jun-09"
d21 3
a23 3
#define Module_FullVersion              "0.11"
#define Module_HelpVersion              "0.11 (26 Jun 2009)"
#define Module_LibraryVersionInfo       "0:11"
@


1.11
log
@Added a CPU-independent version of CLZ that I wrote last year, plus
equivalent functions for trailing zeroes and leading and trailing ones.

Version 0.10. Tagged as 'AsmUtils-0_10'
@
text
@d1 1
a1 1
/* (0.10)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 3
a9 3
#define Module_MajorVersion_CMHG        0.10
#define Module_MinorVersion_CMHG
#define Module_Date_CMHG                01 Jul 2005
d11 2
a12 2
#define Module_MajorVersion             "0.10"
#define Module_Version                  10
d14 1
a14 1
#define Module_Date                     "01 Jul 2005"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jul-05"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Lib/AsmUtils"
d21 3
a23 3
#define Module_FullVersion              "0.10"
#define Module_HelpVersion              "0.10 (01 Jul 2005)"
#define Module_LibraryVersionInfo       "0:10"
@


1.10
log
@  Added new alias for callback collection.
Detail:
  Quite a few modules seem to use user_mode_donothing instead of just
    usermode_donothing.  This alias is now provided here too.
Admin:
  Built.

Version 0.09. Tagged as 'AsmUtils-0_09'
@
text
@d1 1
a1 1
/* (0.09)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.09
d9 1
a9 1
#define Module_Date_CMHG                04 Jun 2000
d11 2
a12 2
#define Module_MajorVersion             "0.09"
#define Module_Version                  9
d14 1
a14 1
#define Module_Date                     "04 Jun 2000"
d16 8
a23 1
#define Module_FullVersion              "0.09"
@


1.9
log
@  Added escape condition checking and handling code.
Detail:
  escape_check returns R0:0 as the escape condition flag (returned in
    C flag from OS_ReadEscapeState).
  escape_check_ack will acknowledge an escape condition if one exists
    (OS_Byte 126)
  escape_check_clear will clear an escape condition if one exists
    (OS_Byte 124)
Admin:
  Built.

Version 0.08. Tagged as 'AsmUtils-0_08'
@
text
@d1 1
a1 1
/* (0.08)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.08
d8 1
a8 1
#define Module_Date_CMHG                08 May 2000
d10 2
a11 2
#define Module_MajorVersion             "0.08"
#define Module_Version                  8
d13 1
a13 1
#define Module_Date                     "08 May 2000"
d15 1
a15 1
#define Module_FullVersion              "0.08"
@


1.8
log
@  Adding missing implemention of xosheap_realloc
Detail:
  The header file declaration was there .. the implementation wasn't.
Admin:
  Required by AcornSSL.

Version 0.07. Tagged as 'AsmUtils-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.07
d8 1
a8 1
#define Module_Date_CMHG                05 May 2000
d10 2
a11 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d13 1
a13 1
#define Module_Date                     "05 May 2000"
d15 1
a15 1
#define Module_FullVersion              "0.07"
@


1.7
log
@  Added a couple of new APIs to the 64-bit number support.
Detail:
  The ui64_value and si64_value routines now have versions with a
    return value of type unsigned int and int respectively, to
    allow callers to avoid narrowing cast warnings during builds.
Admin:
  Compiled.
  Required by NFS 3.07

Version 0.06. Tagged as 'AsmUtils-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.06
d8 1
a8 1
#define Module_Date_CMHG                15 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d13 1
a13 1
#define Module_Date                     "15 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "0.06"
@


1.6
log
@Added modulefp_enable and modulefp_disable to allow floating point code
usage from within modules. Added also fpsr_manipulate to read and set the
FPSR. First two tested on an STB from within Video Control, last one
not tested but the code is lifted straight from JSLib (where it works).

Version 0.05. Tagged as 'AsmUtils-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.05
d8 1
a8 1
#define Module_Date_CMHG                10 Feb 2000
d10 2
a11 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d13 1
a13 1
#define Module_Date                     "10 Feb 2000"
d15 1
a15 1
#define Module_FullVersion              "0.05"
@


1.5
log
@Detail:
  Exports VersionNum file as LibVersion to avoid include path problems.
Admin:
  Required to avoid build cockups in any components which put C:AsmUtils
    on the include path.

Version 0.04. Tagged as 'AsmUtils-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.04
d8 1
a8 1
#define Module_Date_CMHG                30 Nov 1999
d10 2
a11 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d13 1
a13 1
#define Module_Date                     "30 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "0.04"
@


1.4
log
@  Added osvarlen and muldiv.
  Fixed major bug in heapswis.s
Detail:
  heapswis.s was using a bad return from one of the veneer functions
    which caused things like NFS to die horribly when they loaded.
  osvarlen replaces the files commonly known as riscosa - which find
    the length of a system variable.  A veneer is needed because _swix
    does not fill in the output registers on an error.  See PRM details
    on OS_ReadVarVal for more information.
  muldiv is another frequently used lump of code to do a*b/c where a*b
    is calculated first as a 64-bit product, and then the division
    applied.
  Header files exported containing comments on usage.
Admin:
  All No32bitCode assembler disassembled and re-examined by hand to
    verify no more cockups.

Version 0.03. Tagged as 'AsmUtils-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d6 1
a6 1
#define Module_MajorVersion_CMHG        0.03
d10 2
a11 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d15 1
a15 1
#define Module_FullVersion              "0.03"
@


1.3
log
@  IRQ management support added.
Detail:
  IRQ management code has been added, provided irqs_on/irqs_off
    and ensure_irqs_on/ensure_irqs_off/restore_irqs.
  Removed the hardwiring of No26bitCode from sixtyfour.s :-)
  Missing #endif's added to other header files.
Admin:
  Code examined in decaof to validate output.
  Required by ShareFS 3.45 et al.

Version 0.02. Tagged as 'AsmUtils-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	0.02
#define Module_MinorVersion_CMHG
#define Module_Date_CMHG      		29 Nov 1999
d10 4
a13 4
#define Module_MajorVersion     	"0.02"
#define Module_Version                  2
#define Module_MinorVersion		""
#define Module_Date      		"29 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "0.02"
@


1.2
log
@  Updated to use Hdr:APCS.<APCS>
Detail:
  26-bit builds OK.
  32-bit builds OK - don't rely on UMULL working.
Admin:
  Tested by examination of object code.

Version 0.01. Tagged as 'AsmUtils-0_01'
@
text
@d1 1
a1 1
/* (0.01)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.01
d8 1
a8 1
#define Module_Date_CMHG      		26 Nov 1999
d10 2
a11 2
#define Module_MajorVersion     	"0.01"
#define Module_Version                  1
d13 1
a13 1
#define Module_Date      		"26 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "0.01"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* (0.00)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	0.00
d8 1
a8 1
#define Module_Date_CMHG      		20 Nov 1999
d10 2
a11 2
#define Module_MajorVersion     	"0.00"
#define Module_Version                  0
d13 1
a13 1
#define Module_Date      		"20 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "PRERELEASE"
@


1.1.1.1
log
@  Import of library providing assembler abstractions for C code.
Detail:
  Contains code for collecting callbacks, obtaining the base address
    of a module, 64-bit maths and the veneers to OS_Heap that pervade
    the source tree.
Admin:
  Requires kbracey_32bit:RiscOS/Sources/Programmer/HdrSrc
  Do not use (yet) on main trunk.

Tagged as AsmUtils-0_00_prerelease

@
text
@@
