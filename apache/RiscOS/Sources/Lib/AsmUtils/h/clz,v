head	1.1;
access;
symbols
	AsmUtils-0_19:1.1
	AsmUtils-0_18:1.1
	AsmUtils-0_17:1.1
	AsmUtils-0_16:1.1
	AsmUtils-0_15:1.1
	AsmUtils-0_14:1.1
	AsmUtils-0_13:1.1
	AsmUtils-0_12:1.1
	AsmUtils-0_11:1.1
	AsmUtils-0_10:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.07.01.17.28.07;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Added a CPU-independent version of CLZ that I wrote last year, plus
equivalent functions for trailing zeroes and leading and trailing ones.

Version 0.10. Tagged as 'AsmUtils-0_10'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *  AsmUtils (clz.h)
 *
 * Copyright (C) 2004 Castle Technology Ltd
 *
 * Author: Ben Avison
 *
 */

#ifndef asmuntils_clz_h_included
#define asmuntils_clz_h_included

#ifdef __cplusplus
extern "C" {
#endif

/* These functions are designed for CPUs without the CLZ instruction */

extern unsigned int clz(unsigned int);
  /* Returns the number of leading zero bits in the argument, 0 ... 32 */

extern unsigned int ctz(unsigned int);
  /* Returns the number of trailing zero bits in the argument, 0 ... 32 */

extern unsigned int clo(unsigned int);
  /* Returns the number of leading one bits in the argument, 0 ... 32 */

extern unsigned int cto(unsigned int);
  /* Returns the number of trailing one bits in the argument, 0 ... 32 */

#ifdef __cplusplus
}
#endif

#endif
@
