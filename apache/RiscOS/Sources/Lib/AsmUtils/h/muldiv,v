head	1.1;
access;
symbols
	AsmUtils-0_19:1.1
	AsmUtils-0_18:1.1
	AsmUtils-0_17:1.1
	AsmUtils-0_16:1.1
	AsmUtils-0_15:1.1
	AsmUtils-0_14:1.1
	AsmUtils-0_13:1.1
	AsmUtils-0_12:1.1
	AsmUtils-0_11:1.1
	AsmUtils-0_10:1.1
	RO_5_07:1.1
	dellis_autobuild_BaseSW:1.1
	AsmUtils-0_09:1.1
	AsmUtils-0_08:1.1
	AsmUtils-0_07:1.1
	sbrodie_sedwards_16Mar2000:1.1
	AsmUtils-0_06:1.1
	AsmUtils-0_05:1.1
	dcotton_autobuild_BaseSW:1.1
	AsmUtils-0_04:1.1
	AsmUtils-0_03:1.1;
locks; strict;
comment	@# @;


1.1
date	99.11.30.10.54.00;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Added osvarlen and muldiv.
  Fixed major bug in heapswis.s
Detail:
  heapswis.s was using a bad return from one of the veneer functions
    which caused things like NFS to die horribly when they loaded.
  osvarlen replaces the files commonly known as riscosa - which find
    the length of a system variable.  A veneer is needed because _swix
    does not fill in the output registers on an error.  See PRM details
    on OS_ReadVarVal for more information.
  muldiv is another frequently used lump of code to do a*b/c where a*b
    is calculated first as a 64-bit product, and then the division
    applied.
  Header files exported containing comments on usage.
Admin:
  All No32bitCode assembler disassembled and re-examined by hand to
    verify no more cockups.

Version 0.03. Tagged as 'AsmUtils-0_03'
@
text
@/* Copyright 1999 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *  AsmUtils (muldiv.h)
 *
 * Copyright (C) Pace Micro Technology plc. 1999
 *
 */
#ifndef asmutils_muldiv_h_inluded
#define asmutils_muldiv_h_inluded

#ifdef __cplusplus
extern "C" {
#endif

/* Routine multiplies m1 by m2 generating a 64-bit product, then
 * divides that 64-bit product by d.  Result is returned.
 * Division by zero is not raised and is treated as divide by 1.
 */
extern int muldiv(int /*m1*/, int /*m2*/, int /*d*/);

#ifdef __cplusplus
}
#endif
#endif
@
