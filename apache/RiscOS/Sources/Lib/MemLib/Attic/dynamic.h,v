head	1.2;
access;
symbols
	Spinner_RCA116:1.1
	smiddle_25Sep97:1.1.2.1
	Spin_merge:1.1
	Spinner:1.1.0.2
	RCA_bp:1.1
	RCA:1.1.0.4;
locks; strict;
comment	@ * @;


1.2
date	99.03.26.12.43.10;	author smiddle;	state dead;
branches;
next	1.1;

1.1
date	97.02.18.16.12.45;	author smiddle;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.08.20.15.00.30;	author smiddle;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.11.19.14.34.16;	author smiddle;	state dead;
branches;
next	;


desc
@Replacement malloc library
@


1.2
log
@Moved to trunk.

Version 1.01. Tagged as 'MemLib-1_01'
@
text
@/* Extras:Dynamic.h */

/* C interface to Dynamic Area routines in Risc OS 3.5 and later
 * (K) All Rites Reversed - Copy What You Like
 *
 * Authors:
 *      Peter Hartley       <peter@@ant.co.uk>
 */


#ifndef ExtrasLib_Dynamic_h
#define ExtrasLib_Dynamic_h

#ifndef __os_h
/* need os_error */
#include "os.h"
#endif

typedef struct DynamicArea *DynamicArea;    /* abstract type */

#define dynamicarea_NONE    ((DynamicArea)NULL)

/*---------------------------------------------------------------------------*
 * Create a new dynamic area                                                 *
 * Returns area number in *pAreaNumber, and a pointer to the start of the    *
 * new area.                                                                 *
 * Safe to call on earlier OS versions, but will return an error.            *
 *---------------------------------------------------------------------------*/
os_error *DynamicArea_Alloc( int nSize, char *pAreaName,
                             DynamicArea *pArea, void **ppStart );

/*---------------------------------------------------------------------------*
 * Change the size of a dynamic area                                         *
 * On entry *pSize contains the amout to alter the size by; on exit it is    *
 * set to the actual number of bytes moved.                                  *
 *---------------------------------------------------------------------------*/
os_error *DynamicArea_Realloc( DynamicArea area, int *pSize );

/*---------------------------------------------------------------------------*
 * Remove a dynamic area completely                                          *
 * You probably want to call this from your atexit handler, as dynamic areas *
 * are NOT freed automatically when tasks quit. Also writes *pArea to NULL.  *
 *---------------------------------------------------------------------------*/
os_error *DynamicArea_Free( DynamicArea *pArea );

/*---------------------------------------------------------------------------*
 * Return system memory page size                                            *
 * Not really a dynamic area routine but in here for convenience.            *
 * Calls OS_ReadMemMapInfo.                                                  *
 *---------------------------------------------------------------------------*/
int MemoryPageSize( void );

#endif
@


1.1
log
@MemLib - a malloc replacement that uses dynamic areas, for use with
NCFresco.
@
text
@@


1.1.2.1
log
@bug fixes, debugging options, subflex_reanchor call
@
text
@d29 1
a29 1
os_error *DynamicArea_Alloc( int nSize, const char *pAreaName,
@


1.1.2.2
log
@Reorganised directory so that there is a standard RiscOS build for the library
with a unix build in the 'unix' directory (run mklinks first).
No source change from previous version other than adding some externs to heapintern.h

Version 1.00, 1.1.2.2. Tagged as 'MemLib-1_00-1_1_2_2'
@
text
@@
