head	1.4;
access;
symbols
	MemLib-1_03:1.4
	MemLib-1_02:1.3
	dellis_autobuild_BaseSW:1.3
	dcotton_autobuild_BaseSW:1.3
	MemLib-1_01:1.3
	ahodgkin_207release:1.2.2.5
	mjrobert_MemLib_1_00:1.2.2.5
	MemLib-1_00-1_1_2_3:1.2.2.5
	Spinner_RCA116:1.2
	MemLib-1_00-1_1_2_2:1.2.2.4
	smiddle_25Sep97:1.2.2.3
	Spin_merge:1.2.2.5
	Spinner:1.2.0.2
	RCA_bp:1.2
	RCA:1.2.0.4;
locks; strict;
comment	@# @;


1.4
date	2012.01.14.22.55.02;	author srevill;	state Exp;
branches;
next	1.3;
commitid	vsBlWDlPpskJ6cPv;

1.3
date	99.03.26.12.43.07;	author smiddle;	state Exp;
branches;
next	1.2;

1.2
date	97.02.24.20.25.38;	author smiddle;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	97.02.18.16.12.43;	author smiddle;	state Exp;
branches;
next	;

1.2.2.1
date	97.08.20.15.00.29;	author smiddle;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	97.09.18.14.25.57;	author smiddle;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	97.09.25.10.43.05;	author smiddle;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	97.11.19.14.34.09;	author smiddle;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	97.12.16.13.10.22;	author smiddle;	state Exp;
branches;
next	;


desc
@Replacement malloc library
@


1.4
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 1.03. Tagged as 'MemLib-1_03'
@
text
@# Copyright 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for MemLib
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 06-Oct-97  SJM          Created.
#

#
# Paths
#
EXP_HDR = <export$dir>
LIBDIR = <Lib$Dir>
MEMLIBDIR = ${LIBDIR}.MemLib
#
# Generic options:
#
MKDIR   = cdir
AS      = objasm
CP      = copy
CC      = cc
CM      = cmhg
RM      = remove
LD      = link
LB      = libfile
TOUCH   = create
WIPE    = x wipe

CCFLAGS = -c -depend !Depend -fah ${INCLUDES} ${DFLAGS}
ASFLAGS = -depend !Depend -Stamp -quit
CPFLAGS = ~cfr~v
LBFLAGS = -c
WFLAGS  = ~CFR~V

#
# Libraries
#
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
RSTUBS    = RISCOSLIB:o.rstubs
ROMSTUBS  = RISCOSLIB:o.romstubs
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.AbsSym

#
# Include files
#
INCLUDES  = -IC:
DFLAGS    = -DRISCOS -DACORN_BUILD

#
# Program specific options:
#
COMPONENT  = memlib
COMPONENTZ = memlibz
COMPONENTD = memlibd
TARGET     = ${COMPONENT}
TARGETZ    = ${COMPONENTZ}
TARGETD    = ${COMPONENTD}
SOURCE     = 
EXPORTS    = 

OBJS = calloc.o malloc.o mallocsize.o mallocstat.o memflex.o realloc.o subflex.o valloc.o dynamic.o
OBJSD = od.calloc od.malloc od.mallocsize od.mallocstat od.memflex od.realloc od.subflex od.valloc dynamic.o
OBJSZ = oz.calloc oz.malloc oz.mallocsize oz.mallocstat oz.memflex oz.realloc oz.subflex oz.valloc dynamic.o

HDRS = mallinfo.h memflex.h memheap.h subflex.h dynamic.h

LIBS = ${TARGET} ${TARGETD} ${TARGETZ}

#
# Rule patterns
#
.SUFFIXES: .oz .od
.c.o:;     ${CC} ${CCFLAGS} -DROM=0 -DDEBUG=0 -ff         -o $@@ $<
.c.oz:;    ${CC} ${CCFLAGS} -DROM=1 -DDEBUG=0 -ff -zM	  -o $@@ $<
.c.od:;    ${CC} ${CCFLAGS} -DROM=0 -DDEBUG=1 -DMEM_DEBUG -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<
.cmhg.o:;  ${CM} ${CMFLAGS} -o $@@ $<
.cmhg.h:;  ${CM} ${CMFLAGS} -d $@@ $<

#
# build a the library:
#
all:	${LIBS}

#
# RISC OS ROM build rules:
#
rom: ${TARGET}
        @@echo ${COMPONENT}: rom module built

export: export_${PHASE}

install_rom: ${TARGET}
        @@echo ${COMPONENT}: rom module installed

clean:
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} oz.* ${WFLAGS}
        ${WIPE} od.* ${WFLAGS}
        ${RM} ${COMPONENT}
        ${RM} ${COMPONENTZ}
        ${RM} ${COMPONENTD}
        @@echo ${COMPONENT}: cleaned

export_hdrs: ${HDRS} dirs
	${CP} h.mallinfo ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.memflex ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.memheap ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.subflex ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.dynamic  ${MEMLIBDIR}.h.* ${CPFLAGS}
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${LIBS} dirs
	${CP} ${TARGET}  ${MEMLIBDIR}.o.* ${CPFLAGS}
	${CP} ${TARGETD} ${MEMLIBDIR}.o.* ${CPFLAGS}
	${CP} ${TARGETZ} ${MEMLIBDIR}.o.* ${CPFLAGS}
        @@echo ${COMPONENT}: export complete (libs)

local_dirs:
	${MKDIR} o
	${MKDIR} oz
	${MKDIR} od

dirs:
        ${MKDIR} ${LIBDIR}
        ${MKDIR} ${MEMLIBDIR}
        ${MKDIR} ${MEMLIBDIR}.h
        ${MKDIR} ${MEMLIBDIR}.o

#
# Final link
#
${TARGET}: ${OBJS} local_dirs
        ${LB} ${LBFLAGS} -o ${COMPONENT} ${OBJS}

${TARGETZ}: ${OBJSZ} local_dirs
	${LB} ${LBFLAGS} -o ${COMPONENTZ} ${OBJSZ}

${TARGETD}: ${OBJSD} local_dirs
	${LB} ${LBFLAGS} -o ${COMPONENTD} ${OBJSD}

# Dynamic dependencies:
@


1.3
log
@Moved to trunk.

Version 1.01. Tagged as 'MemLib-1_01'
@
text
@d43 1
a43 1
WIPE    = -wipe
@


1.2
log
@Updated to handle ROM build also
@
text
@d15 93
a107 1
# Project:   memflex
d109 1
a109 5
CC = armcc
AS = armasm
CCflags = -c -I$(RISCOS_BUILD_EXPORT)/Lib/RISC_OSLib \
	-I$(RISCOS_BUILD_EXPORT)/Lib/CLib \
	-ffa -Ospace -DRISCOS
d111 2
a112 1
ASflags = -Stamp -quit
d114 39
a152 13
.SUFFIXES: .c .s .o .oz

.c.o:;	$(CC) -DROM=0 $(CCflags) -o $@@ $<

.c.oz:;	$(CC) -zM -zps1 -DROM=1 $(CCflags) -o $@@ $<

.s.o:;	$(AS) $(ASflags) -from $< -to $@@

Objects =  dynamic.o malloc.o realloc.o calloc.o valloc.o \
           mallocsize.o mallocstat.o memflex.o subflex.o

ObjectsZM =  dynamic.o malloc.oz realloc.oz calloc.oz valloc.oz \
           mallocsize.oz mallocstat.oz memflex.oz subflex.oz
d154 2
a155 1
all: memlib memlibzm
d157 2
a158 22
memlib: $(Objects)
	armlib -c -o memlib $(Objects)

memlibzm: $(ObjectsZM)
	armlib -c -o memlibzm $(ObjectsZM)

riscos_libs: memlib memlibzm

riscos_export: riscos_libs
	@@-mkdir $(RISCOS_BUILD_EXPORT)
	@@-mkdir $(RISCOS_BUILD_EXPORT)/Lib
	@@-mkdir $(RISCOS_BUILD_EXPORT)/Lib/MemLib
	@@echo Made export directories
	@@cp -p memlib $(RISCOS_BUILD_EXPORT)/Lib/MemLib/memlib.o
	@@cp -p memlibzm $(RISCOS_BUILD_EXPORT)/Lib/MemLib/memlibzm.o
	@@echo Copied libraries

clean:
	@@-rm *.o
	@@-rm *.oz
	@@-rm memlib
	@@-rm memlibzm
a159 1
# Do not faff with the following comment as Make looks for it explicitly:
@


1.2.2.1
log
@bug fixes, debugging options, subflex_reanchor call
@
text
@d25 1
a25 1
.SUFFIXES: .c .s .o .oz .od
a28 2
.c.od:;	$(CC) -DROM=0 -DMEM_DEBUG -DDEBUG -Fn $(CCflags) -o $@@ $<

a35 3
ObjectsD =  dynamic.o malloc.od realloc.od calloc.od valloc.od \
           mallocsize.od mallocstat.od memflex.od subflex.od

d39 1
a39 1
all: memlib memlibzm memlibd
a43 3
memlibd: $(ObjectsD)
	armlib -c -o memlibd $(ObjectsD)

d47 1
a47 1
riscos_libs: memlib memlibzm memlibd
a54 1
	@@cp -p memlibd $(RISCOS_BUILD_EXPORT)/Lib/MemLib/memlibd.o
a55 4
	@@cp -p memheap.h $(RISCOS_BUILD_EXPORT)/Lib/MemLib/
	@@cp -p memflex.h $(RISCOS_BUILD_EXPORT)/Lib/MemLib/
	@@cp -p dynamic.h $(RISCOS_BUILD_EXPORT)/Lib/MemLib/
	@@cp -p subflex.h $(RISCOS_BUILD_EXPORT)/Lib/MemLib/
a59 1
	@@-rm *.od
a61 1
	@@-rm memlibd
@


1.2.2.2
log
@Split off malloc info structure and defines into a new header file so
that they can be imported by clients to get stats information out. No
actual code changes.
@
text
@a68 1
	@@cp -p mallinfo.h $(RISCOS_BUILD_EXPORT)/Lib/MemLib/
@


1.2.2.3
log
@Removed RiscOSLib code dependencies. Still relies on os.h header for
os_error definition. Changed to building with stack-checking.
@
text
@d25 1
a25 1
.SUFFIXES: .c .s .o .oz .od .odz
d31 1
a31 3
.c.oz:;	$(CC) -zM -DROM=1 $(CCflags) -o $@@ $<

.c.odz:;$(CC) -zM -DROM=1 -DMEM_DEBUG -DDEBUG -Fn  $(CCflags) -o $@@ $<
d44 1
a44 4
ObjectsDZM =  dynamic.o malloc.odz realloc.odz calloc.odz valloc.odz \
           mallocsize.odz mallocstat.odz memflex.odz subflex.odz

all: memlib memlibzm memlibd memlibdzm
d55 1
a55 4
memlibdzm: $(ObjectsDZM)
	armlib -c -o memlibdzm $(ObjectsDZM)

riscos_libs: memlib memlibzm memlibd memlibdzm
a64 1
	@@cp -p memlibdzm $(RISCOS_BUILD_EXPORT)/Lib/MemLib/memlibdzm.o
a78 1
	@@-rm memlibdzm
@


1.2.2.4
log
@Reorganised directory so that there is a standard RiscOS build for the library
with a unix build in the 'unix' directory (run mklinks first).
No source change from previous version other than adding some externs to heapintern.h

Version 1.00, 1.1.2.2. Tagged as 'MemLib-1_00-1_1_2_2'
@
text
@d15 1
a15 93
# Makefile for MemLib
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 06-Oct-97  SJM          Created.
#

#
# Paths
#
EXP_HDR = <export$dir>
LIBDIR = <Lib$Dir>
MEMLIBDIR = ${LIBDIR}.MemLib
#
# Generic options:
#
MKDIR   = cdir
AS      = objasm
CP      = copy
CC      = cc
CM      = cmhg
RM      = remove
LD      = link
LB      = libfile
TOUCH   = create
WIPE    = -wipe

CCFLAGS = -c -depend !Depend -fah ${INCLUDES} ${DFLAGS}
ASFLAGS = -depend !Depend -Stamp -quit
CPFLAGS = ~cfr~v
LBFLAGS = -c
WFLAGS  = ~CFR~V

#
# Libraries
#
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
RSTUBS    = RISCOSLIB:o.rstubs
ROMSTUBS  = RISCOSLIB:o.romstubs
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.AbsSym

#
# Include files
#
INCLUDES  = -IC:
DFLAGS    = -DRISCOS

#
# Program specific options:
#
COMPONENT  = memlib
COMPONENTZ = memlibz
COMPONENTD = memlibd
TARGET     = ${COMPONENT}
TARGETZ    = ${COMPONENTZ}
TARGETD    = ${COMPONENTD}
SOURCE     = 
EXPORTS    = 

OBJS = calloc.o malloc.o mallocsize.o mallocstat.o memflex.o realloc.o subflex.o valloc.o dynamic.o
OBJSD = od.calloc od.malloc od.mallocsize od.mallocstat od.memflex od.realloc od.subflex od.valloc dynamic.o
OBJSZ = oz.calloc oz.malloc oz.mallocsize oz.mallocstat oz.memflex oz.realloc oz.subflex oz.valloc dynamic.o

HDRS = mallinfo.h memflex.h memheap.h subflex.h dynamic.h

LIBS = ${TARGET} ${TARGETD} ${TARGETZ}

#
# Rule patterns
#
.SUFFIXES: .oz .od
.c.o:;     ${CC} ${CCFLAGS} -DROM=0 -DDEBUG=0 -ff         -o $@@ $<
.c.oz:;    ${CC} ${CCFLAGS} -DROM=1 -DDEBUG=0 -ff -zM	  -o $@@ $<
.c.od:;    ${CC} ${CCFLAGS} -DROM=0 -DDEBUG=1 -DMEM_DEBUG -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<
.cmhg.o:;  ${CM} ${CMFLAGS} -o $@@ $<
.cmhg.h:;  ${CM} ${CMFLAGS} -d $@@ $<

#
# build a the library:
#
all:	${LIBS}

#
# RISC OS ROM build rules:
#
rom: ${TARGET}
        @@echo ${COMPONENT}: rom module built
d17 5
a21 1
export: export_${PHASE}
d23 1
a23 2
install_rom: ${TARGET}
        @@echo ${COMPONENT}: rom module installed
d25 39
a63 39
clean:
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} oz.* ${WFLAGS}
        ${WIPE} od.* ${WFLAGS}
        ${RM} ${COMPONENT}
        ${RM} ${COMPONENTZ}
        ${RM} ${COMPONENTD}
        @@echo ${COMPONENT}: cleaned

export_hdrs: ${HDRS} dirs
	${CP} h.mallinfo ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.memflex ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.memheap ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.subflex ${MEMLIBDIR}.h.* ${CPFLAGS}
	${CP} h.dynamic  ${MEMLIBDIR}.h.* ${CPFLAGS}
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${LIBS} dirs
	${CP} ${TARGET}  ${MEMLIBDIR}.o.* ${CPFLAGS}
	${CP} ${TARGETD} ${MEMLIBDIR}.o.* ${CPFLAGS}
	${CP} ${TARGETZ} ${MEMLIBDIR}.o.* ${CPFLAGS}
        @@echo ${COMPONENT}: export complete (libs)

local_dirs:
	${MKDIR} o
	${MKDIR} oz
	${MKDIR} od

dirs:
        ${MKDIR} ${LIBDIR}
        ${MKDIR} ${MEMLIBDIR}
        ${MKDIR} ${MEMLIBDIR}.h
        ${MKDIR} ${MEMLIBDIR}.o

#
# Final link
#
${TARGET}: ${OBJS} local_dirs
        ${LB} ${LBFLAGS} -o ${COMPONENT} ${OBJS}
d65 15
a79 2
${TARGETZ}: ${OBJSZ} local_dirs
	${LB} ${LBFLAGS} -o ${COMPONENTZ} ${OBJSZ}
d81 8
a88 2
${TARGETD}: ${OBJSD} local_dirs
	${LB} ${LBFLAGS} -o ${COMPONENTD} ${OBJSD}
d90 1
a91 191
o.memflex:	c.memflex
o.memflex:	C:h.kernel
o.memflex:	C:h.swis
o.memflex:	C:h.os
o.memflex:	h.memflex
o.memflex:	h.memheap
o.memflex:	h.dynamic
o.subflex:	c.subflex
o.subflex:	C:h.kernel
o.subflex:	C:h.os
o.subflex:	h.memflex
o.subflex:	h.subflex
od.memflex:	c.memflex
od.memflex:	C:h.kernel
od.memflex:	C:h.swis
od.memflex:	C:h.os
od.memflex:	h.memflex
od.memflex:	h.memheap
od.memflex:	h.dynamic
od.subflex:	c.subflex
od.subflex:	C:h.kernel
od.subflex:	C:h.os
od.subflex:	h.memflex
od.subflex:	h.subflex
oz.memflex:	c.memflex
oz.memflex:	C:h.kernel
oz.memflex:	C:h.swis
oz.memflex:	C:h.os
oz.memflex:	h.memflex
oz.memflex:	h.memheap
oz.memflex:	h.dynamic
oz.subflex:	c.subflex
oz.subflex:	C:h.kernel
oz.subflex:	C:h.os
oz.subflex:	h.memflex
oz.subflex:	h.subflex
o.calloc:	c.calloc
o.calloc:	h.heapintern
o.calloc:	C:h.kernel
o.calloc:	h.dynamic
o.calloc:	C:h.os
o.calloc:	h.memheap
o.calloc:	h.mallinfo
o.calloc:	c.calloc
o.calloc:	h.heapintern
o.calloc:	C:h.kernel
o.calloc:	h.dynamic
o.calloc:	C:h.os
o.calloc:	h.memheap
o.calloc:	h.mallinfo
o.malloc:	c.malloc
o.malloc:	C:h.os
o.malloc:	C:h.kernel
o.malloc:	h.memflex
o.malloc:	h.dynamic
o.malloc:	h.heapintern
o.malloc:	C:h.kernel
o.malloc:	h.dynamic
o.malloc:	h.memheap
o.malloc:	h.mallinfo
o.malloc:	VersionNum
o.mallocsize:	c.mallocsize
o.mallocsize:	h.heapintern
o.mallocsize:	C:h.kernel
o.mallocsize:	h.dynamic
o.mallocsize:	C:h.os
o.mallocsize:	h.memheap
o.mallocsize:	h.mallinfo
o.mallocstat:	c.mallocstat
o.mallocstat:	h.heapintern
o.mallocstat:	C:h.kernel
o.mallocstat:	h.dynamic
o.mallocstat:	C:h.os
o.mallocstat:	h.memheap
o.mallocstat:	h.mallinfo
o.realloc:	c.realloc
o.realloc:	h.heapintern
o.realloc:	C:h.kernel
o.realloc:	h.dynamic
o.realloc:	C:h.os
o.realloc:	h.memheap
o.realloc:	h.mallinfo
o.valloc:	c.valloc
o.valloc:	h.heapintern
o.valloc:	C:h.kernel
o.valloc:	h.dynamic
o.valloc:	C:h.os
o.valloc:	h.memheap
o.valloc:	h.mallinfo
o.valloc:	h.dynamic
od.calloc:	c.calloc
od.calloc:	h.heapintern
od.calloc:	C:h.kernel
od.calloc:	h.dynamic
od.calloc:	C:h.os
od.calloc:	h.memheap
od.calloc:	h.mallinfo
od.malloc:	c.malloc
od.malloc:	C:h.os
od.malloc:	C:h.kernel
od.malloc:	h.memflex
od.malloc:	h.dynamic
od.malloc:	h.heapintern
od.malloc:	C:h.kernel
od.malloc:	h.dynamic
od.malloc:	h.memheap
od.malloc:	h.mallinfo
od.malloc:	VersionNum
od.mallocsize:	c.mallocsize
od.mallocsize:	h.heapintern
od.mallocsize:	C:h.kernel
od.mallocsize:	h.dynamic
od.mallocsize:	C:h.os
od.mallocsize:	h.memheap
od.mallocsize:	h.mallinfo
od.mallocstat:	c.mallocstat
od.mallocstat:	h.heapintern
od.mallocstat:	C:h.kernel
od.mallocstat:	h.dynamic
od.mallocstat:	C:h.os
od.mallocstat:	h.memheap
od.mallocstat:	h.mallinfo
od.realloc:	c.realloc
od.realloc:	h.heapintern
od.realloc:	C:h.kernel
od.realloc:	h.dynamic
od.realloc:	C:h.os
od.realloc:	h.memheap
od.realloc:	h.mallinfo
od.valloc:	c.valloc
od.valloc:	h.heapintern
od.valloc:	C:h.kernel
od.valloc:	h.dynamic
od.valloc:	C:h.os
od.valloc:	h.memheap
od.valloc:	h.mallinfo
od.valloc:	h.dynamic
oz.calloc:	c.calloc
oz.calloc:	h.heapintern
oz.calloc:	C:h.kernel
oz.calloc:	h.dynamic
oz.calloc:	C:h.os
oz.calloc:	h.memheap
oz.calloc:	h.mallinfo
oz.calloc:	c.calloc
oz.calloc:	h.heapintern
oz.calloc:	C:h.kernel
oz.calloc:	h.dynamic
oz.calloc:	C:h.os
oz.calloc:	h.memheap
oz.calloc:	h.mallinfo
oz.malloc:	c.malloc
oz.malloc:	C:h.os
oz.malloc:	C:h.kernel
oz.malloc:	h.memflex
oz.malloc:	h.dynamic
oz.malloc:	h.heapintern
oz.malloc:	C:h.kernel
oz.malloc:	h.dynamic
oz.malloc:	h.memheap
oz.malloc:	h.mallinfo
oz.malloc:	VersionNum
oz.mallocsize:	c.mallocsize
oz.mallocsize:	h.heapintern
oz.mallocsize:	C:h.kernel
oz.mallocsize:	h.dynamic
oz.mallocsize:	C:h.os
oz.mallocsize:	h.memheap
oz.mallocsize:	h.mallinfo
oz.mallocstat:	c.mallocstat
oz.mallocstat:	h.heapintern
oz.mallocstat:	C:h.kernel
oz.mallocstat:	h.dynamic
oz.mallocstat:	C:h.os
oz.mallocstat:	h.memheap
oz.mallocstat:	h.mallinfo
oz.realloc:	c.realloc
oz.realloc:	h.heapintern
oz.realloc:	C:h.kernel
oz.realloc:	h.dynamic
oz.realloc:	C:h.os
oz.realloc:	h.memheap
oz.realloc:	h.mallinfo
oz.valloc:	c.valloc
oz.valloc:	h.heapintern
oz.valloc:	C:h.kernel
oz.valloc:	h.dynamic
oz.valloc:	C:h.os
oz.valloc:	h.memheap
oz.valloc:	h.mallinfo
oz.valloc:	h.dynamic
@


1.2.2.5
log
@conditionally included VersionNum on ACORN_BUILD #define so that ANT can build it OK.

Version 1.00, 1.1.2.3. Tagged as 'MemLib-1_00-1_1_2_3'
@
text
@d65 1
a65 1
DFLAGS    = -DRISCOS -DACORN_BUILD
@


1.1
log
@MemLib - a malloc replacement that uses dynamic areas, for use with
NCFresco.
@
text
@d25 7
a31 1
.SUFFIXES: .c .s .o .oD
d36 4
a39 1
all: memlib
d44 4
a47 1
riscos_libs: memlib
d55 2
a56 1
	@@echo Copied library
d60 1
d62 1
a62 4

.c.o:;	$(CC) $(CCflags) -o $@@ $<

.s.o:;	$(AS) $(ASflags) -from $< -to $@@
@
