head	1.3;
access;
symbols
	MemLib-1_03:1.3
	MemLib-1_02:1.3
	dellis_autobuild_BaseSW:1.2
	dcotton_autobuild_BaseSW:1.3
	Spin_merge:1.1.2.1
	MemLib-1_01:1.2
	ahodgkin_207release:1.1.2.1
	mjrobert_MemLib_1_00:1.1.2.1
	MemLib-1_00-1_1_2_3:1.1.2.1
	MemLib-1_00-1_1_2_2:1.1.2.1
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2000.10.17.13.53.46;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	99.03.26.12.43.30;	author smiddle;	state Exp;
branches;
next	1.1;

1.1
date	97.11.19.14.34.52;	author smiddle;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.11.19.14.34.52;	author smiddle;	state Exp;
branches;
next	;


desc
@@


1.3
log
@32-bit compatible.

Version 1.02. Tagged as 'MemLib-1_02'
@
text
@; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Dynamic.s


        AREA |ASM$$code|, CODE, READONLY

        GET     hdr:ListOpts
        GET     hdr:Macros
        GET     hdr:System
        GET     hdr:Machine.<Machine>
        GET     hdr:APCS.<APCS>


;---------------------------------------------------------------------------
; DynamicArea_Alloc
;
;   os_error *DynamicArea_Alloc( int nSize, char *pAreaName,
;                                DynamicArea *pArea,
;                                void **ppStart );

            EXPORT DynamicArea_Alloc
DynamicArea_Alloc
            FunctionEntry "r2-r8"           ;   8 words
            MOV     R8,R1                   ;   area name
            MOV     R7,#0
            MOV     R6,#0
            MOV     R5,#-1
            MOV     R4,#&80                 ;   green bar please
            MOV     R3,#-1
            MOV     R2,R0                   ;   initial size
            MOV     R1,#-1
            MOV     R0,#0                   ; create
            SWI     XOS_DynamicArea
            Return  "r2-r8",,VS
            LDR     R0,[R13,#4]             ; R3 passed in
            STR     R3,[R0]
            LDR     R0,[R13]                ; R2 passed in
            STR     R1,[R0]
            MOV     R0,#0
            Return  "r2-r8"

;---------------------------------------------------------------------------
; DynamicArea_Realloc
;
;   os_error *DynamicArea_Realloc( DynamicArea area, int *pSize );
;
            EXPORT DynamicArea_Realloc
DynamicArea_Realloc
            FunctionEntry "r1"
            LDR     R1,[R1]
            SWI     XOS_ChangeDynamicArea
            LDMFD   R13!,{R2}               ; saved R1
            STR     R1,[R2]                 ; *not* STRVC
            MOVVC   R0,#0
            Return                          ; already pulled R1

;---------------------------------------------------------------------------
; DynamicArea_Free
;
;   os_error *DynamicArea_Free( DynamicArea *pArea );
;
            EXPORT DynamicArea_Free
DynamicArea_Free
            FunctionEntry
            MOV     R12,R0
            LDR     R1,[R12]
            MOV     R0,#1
            SWI     XOS_DynamicArea
            MOVVC   R0,#0
            STRVC   R0,[R12]
            Return

;---------------------------------------------------------------------------
; MemoryPageSize
;
;   int MemoryPageSize(void)
;
            EXPORT MemoryPageSize
MemoryPageSize
            FunctionEntry
            SWI     XOS_ReadMemMapInfo
            Return

;
            END
@


1.2
log
@Moved to trunk.

Version 1.01. Tagged as 'MemLib-1_01'
@
text
@a16 36
R0 RN 0
r0 RN 0
R1 RN 1
r1 RN 1
R2 RN 2
r2 RN 2
R3 RN 3
r3 RN 3
R4 RN 4
r4 RN 4
R5 RN 5
r5 RN 5
R6 RN 6
r6 RN 6
R7 RN 7
r7 RN 7
R8 RN 8
r8 RN 8
R9 RN 9
r9 RN 9
R10 RN 10
r10 RN 10
R11 RN 11
r11 RN 11
R12 RN 12
r12 RN 12
SP  RN 13
sp  RN 13
R13 RN 13
r13 RN 13
LR  RN 14
lr  RN 14
R14 RN 14
r14 RN 14
PC  RN 15
pc  RN 15
d20 7
d36 1
a36 1
            STMFD   R13!,{R2-R8,R14}        ;   8 words
d46 2
a47 2
            SWI     &20066                  ; XOS_DynamicArea
            LDMVSFD R13!,{R2-R8,PC}^
d53 1
a53 1
            LDMFD   R13!,{R2-R8,PC}^
d62 1
a62 1
            STMFD   R13!,{R1,R14}
d64 1
a64 2
            ;MOV    R0,R0
            SWI     &2002A                  ; XOS_ChangeDynamicArea
d68 1
a68 1
            LDMFD   R13!,{PC}^
d77 1
a77 1
            STMFD   R13!,{R14}
d81 1
a81 1
            SWI     &20066                  ; XOS_DynamicArea
d84 1
a84 1
            LDMFD   R13!,{PC}^
d93 3
a95 3
            STMFD   R13!,{R14}
            SWI     &20051                  ; XOS_ReadMemMapInfo
            LDMFD   R13!,{PC}^
@


1.1
log
@file dynamic was initially added on branch Spinner.
@
text
@d1 128
@


1.1.2.1
log
@Reorganised directory so that there is a standard RiscOS build for the library
with a unix build in the 'unix' directory (run mklinks first).
No source change from previous version other than adding some externs to heapintern.h

Version 1.00, 1.1.2.2. Tagged as 'MemLib-1_00-1_1_2_2'
@
text
@a0 128
; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Dynamic.s

R0 RN 0
r0 RN 0
R1 RN 1
r1 RN 1
R2 RN 2
r2 RN 2
R3 RN 3
r3 RN 3
R4 RN 4
r4 RN 4
R5 RN 5
r5 RN 5
R6 RN 6
r6 RN 6
R7 RN 7
r7 RN 7
R8 RN 8
r8 RN 8
R9 RN 9
r9 RN 9
R10 RN 10
r10 RN 10
R11 RN 11
r11 RN 11
R12 RN 12
r12 RN 12
SP  RN 13
sp  RN 13
R13 RN 13
r13 RN 13
LR  RN 14
lr  RN 14
R14 RN 14
r14 RN 14
PC  RN 15
pc  RN 15

        AREA |ASM$$code|, CODE, READONLY

;---------------------------------------------------------------------------
; DynamicArea_Alloc
;
;   os_error *DynamicArea_Alloc( int nSize, char *pAreaName,
;                                DynamicArea *pArea,
;                                void **ppStart );

            EXPORT DynamicArea_Alloc
DynamicArea_Alloc
            STMFD   R13!,{R2-R8,R14}        ;   8 words
            MOV     R8,R1                   ;   area name
            MOV     R7,#0
            MOV     R6,#0
            MOV     R5,#-1
            MOV     R4,#&80                 ;   green bar please
            MOV     R3,#-1
            MOV     R2,R0                   ;   initial size
            MOV     R1,#-1
            MOV     R0,#0                   ; create
            SWI     &20066                  ; XOS_DynamicArea
            LDMVSFD R13!,{R2-R8,PC}^
            LDR     R0,[R13,#4]             ; R3 passed in
            STR     R3,[R0]
            LDR     R0,[R13]                ; R2 passed in
            STR     R1,[R0]
            MOV     R0,#0
            LDMFD   R13!,{R2-R8,PC}^

;---------------------------------------------------------------------------
; DynamicArea_Realloc
;
;   os_error *DynamicArea_Realloc( DynamicArea area, int *pSize );
;
            EXPORT DynamicArea_Realloc
DynamicArea_Realloc
            STMFD   R13!,{R1,R14}
            LDR     R1,[R1]
            ;MOV    R0,R0
            SWI     &2002A                  ; XOS_ChangeDynamicArea
            LDMFD   R13!,{R2}               ; saved R1
            STR     R1,[R2]                 ; *not* STRVC
            MOVVC   R0,#0
            LDMFD   R13!,{PC}^

;---------------------------------------------------------------------------
; DynamicArea_Free
;
;   os_error *DynamicArea_Free( DynamicArea *pArea );
;
            EXPORT DynamicArea_Free
DynamicArea_Free
            STMFD   R13!,{R14}
            MOV     R12,R0
            LDR     R1,[R12]
            MOV     R0,#1
            SWI     &20066                  ; XOS_DynamicArea
            MOVVC   R0,#0
            STRVC   R0,[R12]
            LDMFD   R13!,{PC}^

;---------------------------------------------------------------------------
; MemoryPageSize
;
;   int MemoryPageSize(void)
;
            EXPORT MemoryPageSize
MemoryPageSize
            STMFD   R13!,{R14}
            SWI     &20051                  ; XOS_ReadMemMapInfo
            LDMFD   R13!,{PC}^

;
            END
@
