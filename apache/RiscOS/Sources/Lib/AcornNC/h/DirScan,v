head	1.1;
access;
symbols
	dellis_autobuild_BaseSW:1.1
	dcotton_autobuild_BaseSW:1.1
	dcotton_Spin_Merge:1.1.1.1
	AcornNC-0_02:1.1
	nturton_AcornNC-0_00:1.1
	afrost_NC2_Generic:1.1.1.1
	afrost_Funai01-33:1.1.1.1
	Spinner_RCA116:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Spinner_B7:1.1.1.1
	ARTtmp_merge:1.1.1.1
	Spin_3Apr97:1.1.1.1
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.1.0.2
	inital:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.03.18.21.10.00;	author jsmith;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.21.10.00;	author jsmith;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef __AcornNC_DirScan_h
#define __AcornNC_DirScan_h

#ifndef __Desk_LinkList_h
	#include "Desk.LinkList.h"
#endif

#ifndef __Desk_Filing_h
	#include "Desk.Filing.h"
#endif

#ifndef __Desk_Wimp_h
	#include "Desk.Wimp.h"
#endif


typedef struct	{
	Desk_linklist_header		header;
	Desk_filing_fulldirentry	info;
	}
	AcornNC_dirscan_fileblock;



typedef struct	{
	char		name[ Desk_wimp_MAXNAME];
	Desk_bool	plothalfsize;
	}
	AcornNC_dirscan_spriteinfo;
/*
Note that plothalfsize can be overwritten temporarily when sprintf-ing
into name.
 */


typedef struct	{
	Desk_linklist_header		header;
	Desk_filing_fulldirentry	info;
	AcornNC_dirscan_spriteinfo	sprite;
	}
	AcornNC_dirscan_filespriteblock;


typedef struct	{
	Desk_linklist_header	files;	/* Linked list of AcornNC_dirscan_file(sprite)block's	*/
	}
	AcornNC_dirscan_allfilesblock;




typedef enum	{
	AcornNC_dirscan_sort_NONE,
	AcornNC_dirscan_sort_NAME,
	AcornNC_dirscan_sort_TYPE,
	AcornNC_dirscan_sort_SIZE,
	AcornNC_dirscan_sort_DATE,
	AcornNC_dirscan_sort_OBJTYPE
	}
	AcornNC_dirscan_sort;


typedef enum	{
	AcornNC_dirscan_spritesize_NONE,
	AcornNC_dirscan_spritesize_LARGE,
	AcornNC_dirscan_spritesize_SMALL
	}
	AcornNC_dirscan_spritesize;

/*
void	AcornNC_DirScan_FindAll( 
		const char*			directory, 
		AcornNC_dirscan_allfilesblock*	allfiles, 
		AcornNC_dirscan_sort*		sorts, 
		const char*			match
		);
*/
#define	AcornNC_DirScan_FindAll( dir, allfiles, sorts, match)	\
	AcornNC_DirScan_FindAll2( dir, allfiles, sorts, match, AcornNC_dirscan_sprite_NONE)


void	AcornNC_DirScan_FindAll2( 
		const char*			directory, 
		AcornNC_dirscan_allfilesblock*	allfiles, 
		AcornNC_dirscan_sort*		sorts, 
		const char*			match, 
		AcornNC_dirscan_spritesize	spritesize
		);
/*
If sprite isn't AcornNC_dirscan_sprite_NONE the returned list is
actually a list of AcornNC_dirscan_allfilesspritesblock.
 */


void	AcornNC_DirScan_FreeAll( AcornNC_dirscan_allfilesblock* allfiles);

void	AcornNC_DirScan_Sort( AcornNC_dirscan_allfilesblock* allfiles, AcornNC_dirscan_sort* sorts);


#define	AcornNC_DirScan_GetType( file)	(((file)->info.loadaddr & 0xFFF00) >> 8)


const char*	AcornNC_DirScan_GetTypeName( int filetype);
/*
Returns pointer to internal static string, set to name for filetype.
 */

void	AcornNC_DirScan_FindSprite( AcornNC_dirscan_spriteinfo* spriteinfo, Desk_filing_fulldirentry* object, AcornNC_dirscan_spritesize size);

#endif
@


1.1.1.1
log
@Initial import of AcornNC library
@
text
@@
