head	1.1;
access;
symbols
	dellis_autobuild_BaseSW:1.1
	dcotton_autobuild_BaseSW:1.1
	dcotton_Spin_Merge:1.1.1.1
	AcornNC-0_02:1.1
	nturton_AcornNC-0_00:1.1
	afrost_NC2_Generic:1.1.1.1
	afrost_Funai01-33:1.1.1.1
	Spinner_RCA116:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Spinner_B7:1.1.1.1
	ARTtmp_merge:1.1.1.1
	Spin_3Apr97:1.1.1.1
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.1.0.2
	inital:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.03.18.21.10.05;	author jsmith;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.21.10.05;	author jsmith;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdarg.h>
#include <string.h>

#include "Desk.File.h"
#include "Desk.Debug.h"
#include "Desk.Error.h"

#include "AcornNC.FramePage.h"


void	AcornNC_FramePage_FreeBlocks( int n, ...)
	{
	int	i;
	va_list	va;
	
	va_start( va, n);
	
	for ( i=0; i<n; i++)	{
		AcornNC_framepage_block*	frame = va_arg( va, AcornNC_framepage_block*);
		if ( frame == NULL)	{
			Desk_Debug_Printf( Desk_error_PLACE "AcornNC_InformSTBWebOfNewFiles: Only %i framepage blocks - expected %i\n", i, n);
			break;
			}
		Desk_DeskMem_BufferFree( &frame->data);
		}
	
	va_end( va);
	}
@


1.1.1.1
log
@Initial import of AcornNC library
@
text
@@
