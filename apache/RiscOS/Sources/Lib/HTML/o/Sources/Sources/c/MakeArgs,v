head	1.1;
access;
symbols
	dellis_autobuild_BaseSW:1.1
	dcotton_autobuild_BaseSW:1.1
	dcotton_Spin_Merge:1.1.1.1
	HTML-0_02:1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	Ursula_RiscPC:1.1.0.8
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	rthornb_UrsulaBuild_01May1998:1.1
	afrost_NC2_Generic:1.1.1.1
	afrost_Funai01-33:1.1.1.1
	Spinner_RCA116:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.1.0.4
	Ursula_bp:1.1
	Spinner_B7:1.1.1.1
	ARTtmp_merge:1.1.1.1
	Spin_3Apr97:1.1.1.1
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.1.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.03.18.12.18.24;	author jsmith;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.12.18.24;	author jsmith;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <ctype.h>
#include <string.h>

#include "Desk.Debug.h"
#include "Desk.DeskMem.h"
#include "Desk.Error.h"

#include "HTML.Args.h"



int	HTML_Args_GetEscapedLength( const char* in)
	{
	int		numhex;
	const char*	c;
	
	for ( c=in, numhex=0; *c; c++)	if ( !isalnum( *c))	numhex++;
	
	return strlen( in) + 2*numhex;
	}


void	HTML_Args_GenerateEscapedText( char* buffer, int bufflen, const char* in)
	{
	const char*	c;
	char*		buffpos;
	char*		hex = "0123456789abcdef";
	
	Desk_UNUSED( bufflen);
	
	Desk_Debug_Assert( bufflen >= 1+HTML_Args_GetEscapedLength( in));
	
	for ( c=in, buffpos=buffer; *c; c++)	{
	
		if ( !isalnum( *c))	{
			buffpos[0] = '%';
			
			Desk_Debug_Assert( (*c)/16 < 16);
			Desk_Debug_Assert( (*c)%16 < 16);
			
			buffpos[1] = hex[ (*c)/16];
			buffpos[2] = hex[ (*c)%16];
			buffpos+=3;
			}
		
		else	{
			buffpos[0] = *c;
			buffpos+=1;
			}
		
		Desk_Debug_Assert( buffpos - buffer < bufflen);
		}
	
	*buffpos = 0;
	
	Desk_Debug3_Printf( Desk_error_PLACE "calculated len=%i, actual length=%i\n", HTML_Args_GetEscapedLength( in), strlen( buffer));
	Desk_Debug_Assert( strlen( buffer) == HTML_Args_GetEscapedLength( in));
	
	Desk_Debug3_Printf( Desk_error_PLACE "NCConfig_Args_GenerateEscapedText: '%s'->'%s'\n", in, buffer);
	}




char*	HTML_Args_GenerateEscapedTextAlloc( const char* in)
	{
	int	len	= 1 + HTML_Args_GetEscapedLength( in);
	char*	buffer	= Desk_DeskMem_Malloc( len);
	HTML_Args_GenerateEscapedText( buffer, len, in);
	return buffer;
	}
@


1.1.1.1
log
@Initial import of HTML library
@
text
@@
