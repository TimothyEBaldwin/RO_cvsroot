head	1.4;
access;
symbols
	callx-0_09:1.4
	callx-0_08:1.3
	RO_5_07:1.3
	callx-0_07:1.3
	callx-0_06:1.2
	callx-0_05:1.2
	dellis_autobuild_BaseSW:1.2
	dcotton_autobuild_BaseSW:1.3
	callx-0_04:1.2
	sforrest_daytona_appflash-0_31:1.1.1.2
	callx-0_03:1.1.1.2
	blaughto_daytona_appflash-0_30:1.1.1.2
	blaughto_daytona_appflash-0_29:1.1.1.2
	blaughto_daytona_appflash-0_28:1.1.1.2
	blaughto_daytona_appflash-0_27:1.1.1.2
	blaughto_daytona_appflash-0_26:1.1.1.2
	blaughto_daytona_appflash-0_25:1.1.1.2
	blaughto_daytona_appflash-0_24:1.1.1.2
	callx-0_02-1_1_2_3:1.1.1.2
	blaughto_daytona_appflash-0_23:1.1.1.2
	blaughto_daytona_appflash-0_21:1.1.1.2
	blaughto_daytona_appflash-0_20:1.1.1.2
	blaughto_daytona_appflash-0_19:1.1.1.2
	callx-0_02-1_1_2_2:1.1.1.2
	blaughto_daytona_appflash-0_18:1.1.1.1
	blaughto_callx-0_01:1.1.1.1
	initial:1.1.1.1
	Daytona:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.11.25.09.22.12;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	xzUX85FQ8nLiZxZx;

1.3
date	2001.03.07.11.39.43;	author blaughto;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.23.17.33.58;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	98.02.27.16.45.19;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.02.27.16.45.19;	author blaughto;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.03.18.11.47.15;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Makefile recreated from fragments
Unused VersionASM removed.
Tested in an OMAP3 ROM build.

Version 0.09. Tagged as 'callx-0_09'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for callx
#

COMPONENT  = callx
OBJS       = callx veneer
HDRS       = callx
CFLAGS     = -Wp
LIBRARIES  = ${LIBRARYZM} # Only the module version makes sense

include CLibrary

# Dynamic dependencies:
@


1.3
log
@  * Fixed potential problem with removing an executing callback from within a
    callafter or callevery handler.
  * Performance improvements.

Detail:
  * There was a small opportunity at the start of the assembler veneer for a
    callafter or callevery to interrupt a callback that had just gone off (this
    window was only about one or two instructions).  If the callafter/callevery
    handler deleted the executing callback then once the callback resumed
    processing it would have tried to access data from the free'd callback data
    structure, and then would have tried to free this structure again.

  * Each call to add a handler used to result in malloc being called to
    allocate an internal data structure.  A few of these data structures are
    now preallocated on initialisation, hopefully avoiding the need for calls
    to malloc/free in most circumstances.

Admin:
  Tested (last summer!) using a little test-harness module, and tested today
  using AcornPOP3 test harness to fetch all the headers from my INBOX.  Seems
  to work.

  Apologies to Dan - I'd already done the 32 bit stuff but hadn't got around
  to checking this in because I wanted to do more testing.  However, I'd missed
  the fact that 32 bit PHPSEI wants a scratch register, so it wasn't in vain.

Version 0.07. Tagged as 'callx-0_07'
@
text
@a16 6
# *****************************************
# ***       C h a n g e   L i s t       ***
# *****************************************
# Date		Name		Description
# ----		----		-----------
# 1997-11-26	BAL		Created
d18 5
d24 1
a24 3
# ------------------------------------------------------------------------------
# Paths
#
a25 95
EXP_HDR		= <export$dir>
LIBDIR		= <Lib$Dir>.${COMPONENT}


# ------------------------------------------------------------------------------
# Generic options
#

include Makefiles:StdTools

CCFLAGS		= -c -zm -zps1 -Wp -depend !Depend -ffah ${INCLUDES} ${DFLAGS} ${THROWBACK}
ASFLAGS		= -depend !Depend -Stamp -quit
LBFLAGS		= -c


# ------------------------------------------------------------------------------
# Include files
#

INCLUDES	= -IC:
DFLAGS		= 


# ------------------------------------------------------------------------------
# Program specific options:
#

COMPONENT	= callx
TARGET		= ${COMPONENT}
EXPORTS		= ${EXP_HDR}.${COMPONENT}

OBJS =\
 o.callx\
 o.veneer\
 

# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES: .o .s .h .c
.c.o:;     ${CC} ${CCFLAGS} -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<


# ------------------------------------------------------------------------------
# Build all the library
#

all:	${TARGET}


# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

export: export_${PHASE}

clean:
	${WIPE} o.* ${WFLAGS}
	${RM} ${TARGET}
	@@echo ${COMPONENT}: cleaned

export_hdrs: h.callx dirs
	${CP}	h.callx		${LIBDIR}.h.callx	${CPFLAGS}
	${MKDIR} ${LIBDIR}.Docs
	${CP}	!ReadMe		${LIBDIR}.Docs.callx	${CPFLAGS}
	${CP}	VersionNum	${LIBDIR}.LibVersion	${CPFLAGS}
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${TARGET} dirs
	${CP}	${TARGET}	${LIBDIR}.o.${TARGET}	${CPFLAGS}
	@@echo ${COMPONENT}: export complete (libs)

local_dirs:
	${MKDIR} o

dirs:
	${MKDIR} ${LIBDIR}.Docs
	${MKDIR} ${LIBDIR}.h
	${MKDIR} ${LIBDIR}.o
        

# ------------------------------------------------------------------------------
# Final link
#

${TARGET}: ${OBJS} local_dirs
	${AR} ${ARFLAGS} -o ${TARGET} ${OBJS}

${EXP_HDR}.${COMPONENT}: hdr.${COMPONENT}
	${CP} hdr.${COMPONENT} $@@ ${CPFLAGS}


# ------------------------------------------------------------------------------
@


1.2
log
@Summary
  * Uses AsmUtils for control of interrupts.
  * Miniscule performance improvement.
Detail
  * The code in the veneer that sets up the return address before calling
    the client's handler had a redundant instruction, which has now been
    removed.  This instruction was effectively compensating for its own
    presence :).
Admin
  * Compiled and tested on a Risc PC using AcornPOP3, which uses this library.
  * Modules which use this library must now also link against AsmUtils.

Version 0.04. Tagged as 'callx-0_04'
@
text
@d30 1
a30 1
LIBDIR		= <Lib$Dir>
d37 1
a37 9
MKDIR		= cdir
AS		= objasm
CP		= copy
CC		= cc
CM		= cmhg
RM		= remove
LD		= link
LB		= libfile
WIPE		= -wipe
d39 1
a39 1
CCFLAGS		= -c -zm -zps1 -Wp -depend !Depend -ffah ${INCLUDES} ${DFLAGS}
a40 1
CPFLAGS		= ~clfnr~v
a41 13
WFLAGS		= ~CFR~V


# ------------------------------------------------------------------------------
# Libraries
#

CLIB		= CLIB:o.stubs
RLIB		= RISCOSLIB:o.risc_oslib
RSTUBS		= RISCOSLIB:o.rstubs
ROMSTUBS	= RISCOSLIB:o.romstubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.AbsSym
d93 4
a96 1
	${CP}	h.callx		${LIBDIR}.${COMPONENT}.h.callx	${CPFLAGS}
d100 1
a100 1
	${CP}	${TARGET}	${LIBDIR}.${COMPONENT}.o.${TARGET}	${CPFLAGS}
d107 3
a109 4
	${MKDIR} ${LIBDIR}
	${MKDIR} ${LIBDIR}.callx
	${MKDIR} ${LIBDIR}.callx.h
	${MKDIR} ${LIBDIR}.callx.o
d117 1
a117 1
	${LB} ${LBFLAGS} -o ${TARGET} ${OBJS}
@


1.1
log
@Initial revision
@
text
@d47 1
a47 1
CCFLAGS		= -c -zm -depend !Depend -ffah ${INCLUDES} ${DFLAGS}
a83 1
 o.interrupts\
@


1.1.1.1
log
@First checkin to CVS.
@
text
@@


1.1.1.2
log
@Uses srccommit.  Fixed potential re-entrancy problems.

Version 0.02, 1.1.2.2. Tagged as 'callx-0_02-1_1_2_2'
@
text
@d47 1
a47 1
CCFLAGS		= -c -zm -zps1 -depend !Depend -ffah ${INCLUDES} ${DFLAGS}
@
