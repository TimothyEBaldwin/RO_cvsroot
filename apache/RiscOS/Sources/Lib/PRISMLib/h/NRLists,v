head	1.3;
access;
symbols
	PRISMLib-0_24:1.3
	PRISMLib-0_23:1.3
	PRISMLib-0_22:1.3
	PRISMLib-0_21:1.3
	PRISMLib-0_20:1.3
	PRISMLib-0_19:1.3
	PRISMLib-0_18:1.3
	PRISMLib-0_17:1.3
	PRISMLib-0_16:1.3
	PRISMLib-0_15:1.3
	PRISMLib-0_14:1.3
	PRISMLib-0_13:1.2
	PRISMLib-0_12:1.2
	PRISMLib-0_11:1.2
	PRISMLib-0_10:1.2
	PRISMLib-0_09:1.2
	PRISMLib-0_08:1.2
	PRISMLib-0_07:1.2
	PRISMLib-0_06:1.2
	PRISMLib-0_05:1.2
	PRISMLib-0_04:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.05.11.12.07.03;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.29.08.47.41;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.14.16.06.08;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  New function.
Detail:
  New NRLists.c function to find an element in a linked list (slow - just
  a simple linear search).
Admin:
  Test harness updated; all tests pass.

Version 0.14. Tagged as 'PRISMLib-0_14'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    NRLists.h                                         */
/*          (C) 2005 Tematic Ltd.                             */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Simple non-reentrant doubly linked list handling. */
/*          For re-entrant linked lists, see "RLists.h".      */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 14-Apr-2005 (ADH): Created from PRISMLib.h.       */
/**************************************************************/

#ifndef PRISMLIB_NRLISTS_H
  #define PRISMLIB_NRLISTS_H

  /* External inclusions */

  #include <stdbool.h>
  #include <kernel.h>

  /* Function prototypes */

  _kernel_oserror * prismlib_nrl_add_to_head
                    (
                      void         ** head,
                      const size_t    size
                    );

  _kernel_oserror * prismlib_nrl_add_to_tail
                    (
                      void         **          head,
                      void         ** restrict added,
                      const size_t             size
                    );

  _kernel_oserror * prismlib_nrl_add_at_given
                    (
                      void         **          head,
                      void         ** restrict added,
                      const void    *          position,
                      const size_t             size
                    );

  _kernel_oserror * prismlib_nrl_remove
                    (
                      void ** head,
                      void  * item
                    );

  _kernel_oserror * prismlib_nrl_remove_all
                    (
                      void ** head
                    );

  bool              prismlib_nrl_find
                    (
                      void * head,
                      void * item
                    );

#endif /* PRISMLIB_NRLISTS_H */

/* End of file */
@


1.2
log
@  New header file; 'restrict' added in NRLists.
Detail:
  NRLists.c|h can't use 'restrict' too much as it does create aliases to
  quite a few of the function parameters, but here and there it applies,
  so added it. New header file is "Interrupts.h", containing four simple
  macros to turn interrupts on and off. Makes use of Norcroft optimisation
  hack "__swi" as in RLists.c, which I don't like, but does result in code
  that's about as simple as it can be.
Admin:
  Compiled through test use in PFCBuffer's in-prorgress Session.c; DecAOF
  output from the resulting object file looks about right, but no run-time
  testing.

Version 0.05. Tagged as 'PRISMLib-0_05'
@
text
@d33 1
d70 6
@


1.1
log
@  Overhaul to improve library consistency and support new naming
  conventions.
Detail:
  Extensive set of changes to follow naming conventions covered in
  PRISM/Docs/Naming and introduce a better library structure with
  more consistent file naming (important for exported headers) as
  well as function names (important for ease of use).
Admin:
  Requires header export of PRISM 0.21 or later. Used in many other
  modules tested on an Iyonix as part of a wider set of changes.

Version 0.04. Tagged as 'PRISMLib-0_04'
@
text
@d45 3
a47 3
                      void         ** head,
                      void         ** added,
                      const size_t    size
d52 4
a55 4
                      void         ** head,
                      void         ** added,
                      const void    * position,
                      const size_t    size
@

