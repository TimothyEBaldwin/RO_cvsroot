head	1.1;
access;
symbols
	PRISMLib-0_24:1.1
	PRISMLib-0_23:1.1
	PRISMLib-0_22:1.1
	PRISMLib-0_21:1.1
	PRISMLib-0_20:1.1
	PRISMLib-0_19:1.1
	PRISMLib-0_18:1.1
	PRISMLib-0_17:1.1
	PRISMLib-0_16:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.06.16.09.46.04;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  More re-entrancy, new job queue functions.
Detail:
  Errors.c is now fully re-entrant. New JobQueue.[c|h] functions, fully
  tested in the test harness, provide a fixed length queue of a fixed
  number of words per queue entry (specified at creation time). Done here
  rather than through a SWI API in e.g. PRISM as the addition function is
  inherently variable argument based, which does not translate well to
  SWIs (the alternative is to pass a pointer to a constructed queue entry
  which has to be copied in place - fiddly and less efficient). New
  function in Mechanism.h to send a PRISM service call, but this service
  call is looking like it'll be removed due to wider architecture
  revisions anyway - recommendation is to not call this new function as
  it will probably be removed soon.
Admin:
  Test harness updated to cover job queue functions.

Version 0.16. Tagged as 'PRISMLib-0_16'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    JobQueue.h                                        */
/*          (C) 2005 Tematic Ltd.                             */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Re-entrant job queues.                            */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 16-Jun-2005 (ADH): Created.                       */
/**************************************************************/

#ifndef PRISMLIB_JOBQUEUE_H
  #define PRISMLIB_JOBQUEUE_H

  /* External inclusions */

  #include <stddef.h>
  #include <stdint.h>
  #include <kernel.h>

  /* A prismlib_jobqueue_t is a unique, opaque quantity which
   * allows PRISMLib to find run-time data specific to a given
   * job queue. A value of NULL is guaranteed to be invalid.
   */

  typedef void * prismlib_jobqueue_t;

  /* Function prototypes */

  _kernel_oserror * prismlib_jobqueue_create
                    (
                      size_t                          entries,
                      size_t                          words_per_entry,
                      prismlib_jobqueue_t  * restrict queue_handle
                    );

  _kernel_oserror * prismlib_jobqueue_delete
                    (
                      prismlib_jobqueue_t  * restrict queue_handle
                    );

  _kernel_oserror * prismlib_jobqueue_add
                    (
                      prismlib_jobqueue_t             queue_handle,
                      uint32_t            ** restrict job,
                      ...
                    );

  _kernel_oserror * prismlib_jobqueue_remove
                    (
                      prismlib_jobqueue_t             queue_handle
                    );

  _kernel_oserror * prismlib_jobqueue_read
                    (
                      prismlib_jobqueue_t             queue_handle,
                      uint32_t            ** restrict job
                    );

#endif /* PRISMLIB_JOBQUEUE_H */

/* End of file */
@
