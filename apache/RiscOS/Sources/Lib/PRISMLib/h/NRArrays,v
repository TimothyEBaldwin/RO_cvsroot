head	1.3;
access;
symbols
	PRISMLib-0_24:1.3
	PRISMLib-0_23:1.3
	PRISMLib-0_22:1.3
	PRISMLib-0_21:1.3
	PRISMLib-0_20:1.3
	PRISMLib-0_19:1.3
	PRISMLib-0_18:1.3
	PRISMLib-0_17:1.3
	PRISMLib-0_16:1.3
	PRISMLib-0_15:1.3
	PRISMLib-0_14:1.3
	PRISMLib-0_13:1.3
	PRISMLib-0_12:1.2
	PRISMLib-0_11:1.2
	PRISMLib-0_10:1.2
	PRISMLib-0_09:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.05.10.10.56.16;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.09.08.38.36;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.06.15.44.53;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  Unavoidable API chanGe to NRArrays. Debug test harness build option.
Detail:
  Function was taking an optional pointer to a routine that acted in the
  same way as 'malloc'. What it really needed was a routine that acted
  in the same way as 'realloc'. Meanwhile, the test harness can be built
  to run under DDT to pinpoint the location of a failure easily.
Admin:
  Test harness updated. Debug test harness build requires BuildSys 4.37.

Version 0.13. Tagged as 'PRISMLib-0_13'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    NRArrays.h                                        */
/*          (C) 2005 Tematic Ltd.                             */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Array management, originally from ARLib routines  */
/*          by S.J.Middleton.                                 */
/*                                                            */
/*          Simple, non-reentrant routines.                   */
/*                                                            */
/* Author:  S.J.Middleton (1992), A.D.Hodgkinson.             */
/*                                                            */
/* History: 06-May-2005 (ADH): Created from ARLib's array.h.  */
/**************************************************************/

#ifndef PRISMLIB_NRARRAYS_H
  #define PRISMLIB_NRARRAYS_H

  /* External inclusions */

  #include <kernel.h>

  /* PRISMLib inclusions */

  #include <PRISMLib/FuncTypes.h>

  /* Data types */

  typedef struct prismlib_internal_nrarray prismlib_nrarray_t;

  /* Function prototypes */

  prismlib_nrarray_t * prismlib_nrarrays_create
                       (
                         int                       initial_n,
                         size_t                    elem_size,
                         prismlib_realloc_fn_ptr_t reallocfn,
                         prismlib_free_fn_ptr_t    freefn
                       );

  _kernel_oserror    * prismlib_nrarrays_extend
                       (
                         prismlib_nrarray_t * restrict v,
                         int                           n
                       );

  _kernel_oserror    * prismlib_nrarrays_insert
                       (
                         prismlib_nrarray_t * restrict v,
                         int                           n,
                         int                           at
                       );

  _kernel_oserror    * prismlib_nrarrays_delete
                       (
                         prismlib_nrarray_t * restrict v,
                         int                           n,
                         int                           at
                       );

  void                 prismlib_nrarrays_destroy
                       (
                         prismlib_nrarray_t ** restrict pv
                       );

  int                  prismlib_nrarrays_size
                       (
                         prismlib_nrarray_t * restrict v
                       );

  void               * prismlib_nrarrays_read
                       (
                         prismlib_nrarray_t * restrict v,
                         int                  entry
                       );

  void                 prismlib_nrarrays_sort
                       (
                         prismlib_nrarray_t        * restrict v,
                         prismlib_compare_fn_ptr_t            comp_fn
                       );

  int                  prismlib_nrarrays_search
                       (
                         prismlib_nrarray_t        * restrict v,
                         const void                *          key,
                         prismlib_compare_fn_ptr_t            comp_fn
                       );

#endif /* PRISMLIB_NRARRAYS_H */

/* End of file */
@


1.2
log
@  API modification.
Detail:
  Since NRArrays is so new and nobody's using it yet, I decided to change
  the _new, _dispose and _ptr function calls to _create, _destroy and
  _read respectively, to be consistent with Handles.h and generally more
  easy to remember.
Admin:
  Builds, test harness runs and reports success.

Version 0.10. Tagged as 'PRISMLib-0_10'
@
text
@d49 4
a52 4
                         int                      initial_n,
                         size_t                   elem_size,
                         prismlib_malloc_fn_ptr_t allocfn,
                         prismlib_free_fn_ptr_t   freefn
@


1.1
log
@  New functions; bug fixes; test harness.
Detail:
  New functions added in "NRArrays.c|h". Some shared kinds of function
  pointers turned into standard types and put into "FuncTypes.h" - not
  all function pointers used throughout are there, only shared ones at
  the moment (this may change in future). New test harness showed up
  a few bugs, mostly trivial (e.g. incorrect generation of an error
  message resulting in "%0" appearing instead of a parameter).
Admin:
  Tested :-) - test harness runs to completion. See Tests/!ReadMe to
  find out which things the test harness does or does not test. The
  test harness requires BuildSys 4.35.

Version 0.09. Tagged as 'PRISMLib-0_09'
@
text
@d47 1
a47 1
  prismlib_nrarray_t * prismlib_nrarrays_new
d75 1
a75 1
  void                 prismlib_nrarrays_dispose
d85 1
a85 1
  void               * prismlib_nrarrays_ptr
@

