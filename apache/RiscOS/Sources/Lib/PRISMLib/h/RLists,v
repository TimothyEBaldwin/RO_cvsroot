head	1.2;
access;
symbols
	PRISMLib-0_24:1.2
	PRISMLib-0_23:1.2
	PRISMLib-0_22:1.2
	PRISMLib-0_21:1.2
	PRISMLib-0_20:1.2
	PRISMLib-0_19:1.2
	PRISMLib-0_18:1.2
	PRISMLib-0_17:1.2
	PRISMLib-0_16:1.2
	PRISMLib-0_15:1.2
	PRISMLib-0_14:1.2
	PRISMLib-0_13:1.2
	PRISMLib-0_12:1.2
	PRISMLib-0_11:1.2
	PRISMLib-0_10:1.2
	PRISMLib-0_09:1.2
	PRISMLib-0_08:1.1
	PRISMLib-0_07:1.1
	PRISMLib-0_06:1.1
	PRISMLib-0_05:1.1
	PRISMLib-0_04:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.05.06.15.44.53;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.14.16.06.08;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  New functions; bug fixes; test harness.
Detail:
  New functions added in "NRArrays.c|h". Some shared kinds of function
  pointers turned into standard types and put into "FuncTypes.h" - not
  all function pointers used throughout are there, only shared ones at
  the moment (this may change in future). New test harness showed up
  a few bugs, mostly trivial (e.g. incorrect generation of an error
  message resulting in "%0" appearing instead of a parameter).
Admin:
  Tested :-) - test harness runs to completion. See Tests/!ReadMe to
  find out which things the test harness does or does not test. The
  test harness requires BuildSys 4.35.

Version 0.09. Tagged as 'PRISMLib-0_09'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    RLists.h                                          */
/*          (C) 2005 Tematic Ltd.                             */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Re-entrant linked list handling.                  */
/*                                                            */
/* Author:  B.Avison.                                         */
/*                                                            */
/* History: 14-Apr-2005 (ADH): Changed to local style.        */
/**************************************************************/

#ifndef PRISMLIB_RLISTS_H
  #define PRISMLIB_RLISTS_H

  /* External inclusions */

  #include <stddef.h>
  #include <stdbool.h>
  #include <stdint.h>

  /* PRISMLib inclusions */

  #include <PRISMLib/FuncTypes.h>

  /* New type definitions */

  typedef struct prismlib_rl_list
  {
    uint32_t opaque[11];
  }
  prismlib_rl_list_t;

  typedef struct prismlib_rl_step
  {
    void     * data;
    uint32_t   opaque[4];
  }
  prismlib_rl_step_t;

  /* Function prototypes */

  void prismlib_rl_create
       (
         prismlib_rl_list_t * restrict list,
         size_t                        data_size,

         prismlib_malloc_fn_ptr_t      malloc,
         prismlib_free_fn_ptr_t        free,
         prismlib_onevent_fn_ptr_t     atremoval,

         size_t                        cluster_size
       );

  void prismlib_rl_destroy
       (
         prismlib_rl_list_t * list
       );

  void prismlib_rl_start_walk
       (
         prismlib_rl_step_t * restrict step,
         prismlib_rl_list_t * restrict list,
         bool                          backwards
       );

  void prismlib_rl_start_walk_at
       (
         prismlib_rl_step_t * restrict step,
         prismlib_rl_list_t * restrict list,
         void               * restrict position
       );

  void prismlib_rl_next_step
       (
         prismlib_rl_step_t * step,
         bool                 backwards
       );

  void prismlib_rl_abort_walk
       (
         prismlib_rl_step_t * step
       );

  bool prismlib_rl_add_at_limit
       (
         prismlib_rl_list_t * restrict list,
         bool                          backwards,
         const void         * restrict data
       );

  bool prismlib_rl_add_adjacent
       (
         prismlib_rl_step_t * restrict step,
         bool                          backwards,
         const void         * restrict data
       );

  bool prismlib_rl_add_sorted
       (
         prismlib_rl_list_t * restrict list,
         const void         * restrict data,

         prismlib_sort_fn_ptr_t        later
       );

  void prismlib_rl_delink
       (
         prismlib_rl_step_t * step
       );

#endif /* PRISMLIB_RLISTS_H */

/* End of file */
@


1.1
log
@  Overhaul to improve library consistency and support new naming
  conventions.
Detail:
  Extensive set of changes to follow naming conventions covered in
  PRISM/Docs/Naming and introduce a better library structure with
  more consistent file naming (important for exported headers) as
  well as function names (important for ease of use).
Admin:
  Requires header export of PRISM 0.21 or later. Used in many other
  modules tested on an Iyonix as part of a wider set of changes.

Version 0.04. Tagged as 'PRISMLib-0_04'
@
text
@d36 4
d62 3
a64 3
         void * (*malloc)    (size_t),
         void   (*free)      (void *),
         void   (*atremoval) (void *),
d118 1
a118 1
         bool (*later) (const void * restrict, const void * restrict)
@

