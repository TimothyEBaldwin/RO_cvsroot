head	1.1;
access;
symbols
	PRISMLib-0_24:1.1
	PRISMLib-0_23:1.1
	PRISMLib-0_22:1.1
	PRISMLib-0_21:1.1
	PRISMLib-0_20:1.1
	PRISMLib-0_19:1.1
	PRISMLib-0_18:1.1
	PRISMLib-0_17:1.1
	PRISMLib-0_16:1.1
	PRISMLib-0_15:1.1
	PRISMLib-0_14:1.1
	PRISMLib-0_13:1.1
	PRISMLib-0_12:1.1
	PRISMLib-0_11:1.1
	PRISMLib-0_10:1.1
	PRISMLib-0_09:1.1
	PRISMLib-0_08:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.04.29.18.41.51;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Support for making code reentrant from real time context.
Detail:
  New source and header files Mutex.c|h provide a simple mutex and a
  reader-writer lock.
Admin:
  Untested.

Version 0.08. Tagged as 'PRISMLib-0_08'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    Mutex.h                                           */
/*          (C) 2005 Castle Technology Ltd                    */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Simple mutex library for RTSupport threads.       */
/*                                                            */
/* Author:  B.Avison.                                         */
/*                                                            */
/* History: See source control log                            */
/**************************************************************/

#ifndef PRISMLIB_MUTEX_H
  #define PRISMLIB_MUTEX_H

  /* External inclusions */

  #include <stdbool.h>
  #include <stdint.h>

  /* Macros */

  /* New type definitions */

  typedef volatile uint32_t prismlib_mutex_pollword_t;

  typedef struct
  {
    prismlib_mutex_pollword_t pollword;
  }
  prismlib_mutex_t;

  typedef struct
  {
    prismlib_mutex_pollword_t writer_pollword;
    prismlib_mutex_pollword_t reader_pollword;
    volatile size_t readers;
    volatile size_t waiters;
  }
  prismlib_mutex_rw_t;

  /* Constants */

  /* Global variables */

  /* Inline function declarations */

  /* Function prototypes */

  prismlib_mutex_t    * prismlib_mutex_create
                        (
                          bool locked
                        );

  void                  prismlib_mutex_delete
                        (
                          prismlib_mutex_t * restrict m
                        );

  void                  prismlib_mutex_acquire
                        (
                          prismlib_mutex_t * restrict m
                        );

  void                  prismlib_mutex_release
                        (
                          prismlib_mutex_t * restrict m
                        );

  prismlib_mutex_rw_t * prismlib_mutex_rw_create
                        (
                          void
                        );

  void                  prismlib_mutex_rw_delete
                        (
                          prismlib_mutex_rw_t * restrict rw
                        );

  void                  prismlib_mutex_rw_acquire_read
                        (
                          prismlib_mutex_rw_t * restrict rw
                        );

  void                  prismlib_mutex_rw_release_read
                        (
                          prismlib_mutex_rw_t * restrict rw
                        );

  void                  prismlib_mutex_rw_acquire_write
                        (
                          prismlib_mutex_rw_t * restrict rw
                        );

  void                  prismlib_mutex_rw_release_write
                        (
                          prismlib_mutex_rw_t * restrict rw
                        );

#endif
@
