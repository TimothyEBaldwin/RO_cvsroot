head	1.7;
access;
symbols
	PRISMLib-0_24:1.7
	PRISMLib-0_23:1.7
	PRISMLib-0_22:1.7
	PRISMLib-0_21:1.7
	PRISMLib-0_20:1.7
	PRISMLib-0_19:1.7
	PRISMLib-0_18:1.7
	PRISMLib-0_17:1.6
	PRISMLib-0_16:1.6
	PRISMLib-0_15:1.5
	PRISMLib-0_14:1.5
	PRISMLib-0_13:1.5
	PRISMLib-0_12:1.5
	PRISMLib-0_11:1.5
	PRISMLib-0_10:1.5
	PRISMLib-0_09:1.5
	PRISMLib-0_08:1.4
	PRISMLib-0_07:1.4
	PRISMLib-0_06:1.4
	PRISMLib-0_05:1.4
	PRISMLib-0_04:1.4
	PRISMLib-0_03:1.3
	PRISMLib-0_02:1.2
	PRISMLib-0_01:1.1;
locks; strict;
comment	@# @;


1.7
date	2005.07.19.15.33.59;	author ahodgkin;	state Exp;
branches;
next	1.6;

1.6
date	2005.06.16.09.46.04;	author ahodgkin;	state Exp;
branches;
next	1.5;

1.5
date	2005.05.06.15.44.53;	author ahodgkin;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.14.16.06.08;	author ahodgkin;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.13.11.28.07;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.13.09.28.43;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.11.15.09.38;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.7
log
@  Added CLI and some interrupt routines; Doxygen comments.
Detail:
  Added CLI support routines in CLI.[c|h]. Added ENABLE macros to
  Interrupts.h. Some recently modified header files include Doxygen
  comments now; a configuration file, "Doxyfile", is included to
  generate documentation from files which include it. By default
  this causes output to go to "Docs.Doxygen" - you will probably
  need to create the "Docs" directory by hand first.
Admin:
  Test harness not updated; ReadMe has been. The CLI routines are
  tested from use in other components, so are not explicitly tested
  in the local test harness.

Version 0.18. Tagged as 'PRISMLib-0_18'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/*! \file PRISMLib
 *
 * (C) 2005 Castle Technology Ltd. All rights reserved.
 *
 * \brief  A collection of utilities for PRISM modules.
 *
 * The PRISMLib.h header file includes every other PRISMLib
 * header. Clients are normally advised to just include those
 * headers that their code actually uses.
 *
 * \par    Author:
 *         B.Avison and A.D.Hodgkinson, including routines
 *         adapted from code by IDJ, S.J.Middleton and others.
 *         CallOut timer system originally from the Internet
 *         module.
 *
 * \par    History:
 *
 *         - 10-Mar-2005 (ADH): Created.
 *         - 14-Apr-2005 (ADH): Turned into a file that just
 *                              includes all other library
 *                              headers.
 */
/*! \mainpage PRISMLib
 *
 * PRISMLib provides a collection of utilities for PRISM
 * modules. It covers everything from interrupt handling to
 * error message generation to high level abstractions on top
 * of PRISM module registration, along with support routines
 * to help with star commands and various different data
 * structure management routines.
 */
/**************************************************************/

#ifndef PRISMLIB_PRISMLIB_H
  #define PRISMLIB_PRISMLIB_H

  #include <PRISMLib/Errors.h>
  #include <PRISMLib/Messages.h>
  #include <PRISMLib/Clients.h>

  #include <PRISMLib/Locks.h>
  #include <PRISMLib/Interrupts.h>
  #include <PRISMLib/Timers.h>

  #include <PRISMLib/CLI.h>
  #include <PRISMLib/Mechanism.h>

  #include <PRISMLib/Handles.h>
  #include <PRISMLib/JobQueue.h>
  #include <PRISMLib/RLists.h>
  #include <PRISMLib/NRLists.h>
  #include <PRISMLib/NRArrays.h>
  #include <PRISMLib/TLV.h>

  #include <PRISMLib/FuncTypes.h>

#endif /* PRISMLIB_PRISMLIB_H */

/* End of file */
@


1.6
log
@  More re-entrancy, new job queue functions.
Detail:
  Errors.c is now fully re-entrant. New JobQueue.[c|h] functions, fully
  tested in the test harness, provide a fixed length queue of a fixed
  number of words per queue entry (specified at creation time). Done here
  rather than through a SWI API in e.g. PRISM as the addition function is
  inherently variable argument based, which does not translate well to
  SWIs (the alternative is to pass a pointer to a constructed queue entry
  which has to be copied in place - fiddly and less efficient). New
  function in Mechanism.h to send a PRISM service call, but this service
  call is looking like it'll be removed due to wider architecture
  revisions anyway - recommendation is to not call this new function as
  it will probably be removed soon.
Admin:
  Test harness updated to cover job queue functions.

Version 0.16. Tagged as 'PRISMLib-0_16'
@
text
@d16 32
a47 15
/* File:    PRISMLib.h                                        */
/*          (C) 2005 Tematic Ltd.                             */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: A collection of utilities for PRISM modules.      */
/*                                                            */
/* Author:  B.Avison and A.D.Hodgkinson, including routines   */
/*          adapted from code by IDJ, S.J.Midddleton and      */
/*          others. CallOut timer system originally from the  */
/*          Internet module.                                  */
/*                                                            */
/* History: 10-Mar-2005 (ADH): Created.                       */
/*          14-Apr-2005 (ADH): Turned into a file that just   */
/*                             includes all other library     */
/*                             headers.                       */
d61 1
@


1.5
log
@  New functions; bug fixes; test harness.
Detail:
  New functions added in "NRArrays.c|h". Some shared kinds of function
  pointers turned into standard types and put into "FuncTypes.h" - not
  all function pointers used throughout are there, only shared ones at
  the moment (this may change in future). New test harness showed up
  a few bugs, mostly trivial (e.g. incorrect generation of an error
  message resulting in "%0" appearing instead of a parameter).
Admin:
  Tested :-) - test harness runs to completion. See Tests/!ReadMe to
  find out which things the test harness does or does not test. The
  test harness requires BuildSys 4.35.

Version 0.09. Tagged as 'PRISMLib-0_09'
@
text
@d47 1
@


1.4
log
@  Overhaul to improve library consistency and support new naming
  conventions.
Detail:
  Extensive set of changes to follow naming conventions covered in
  PRISM/Docs/Naming and introduce a better library structure with
  more consistent file naming (important for exported headers) as
  well as function names (important for ease of use).
Admin:
  Requires header export of PRISM 0.21 or later. Used in many other
  modules tested on an Iyonix as part of a wider set of changes.

Version 0.04. Tagged as 'PRISMLib-0_04'
@
text
@d22 4
a25 2
/* Author:  IDJ, B.Avison, A.D.Hodgkinson. CallOut system     */
/*          originally from the Internet module.              */
a35 3
  #include <kernel.h>
  #include <PRISM/PRISM.h>

d38 5
d44 3
d48 2
a49 1
  #include <PRISMLib/NRLIsts.h>
d52 1
a52 2
  #include <PRISMLib/Timers.h>
  #include <PRISMLib/Mechanism.h>
@


1.3
log
@  Another bug fix.
Detail:
  Direct call interfaces - the void ** passed in for veneer creation
  is actually a void *** and needs to be referenced as such.
Admin:
  No more aborts in PFC Buffer with this version.

Version 0.03. Tagged as 'PRISMLib-0_03'
@
text
@d20 1
a20 1
/* Purpose: Miscellaneous utilities for PRISM modules.        */
d26 3
d31 2
a32 2
#ifndef __PRISMLIB_H
  #define __PRISMLIB_H
d37 2
a38 1
  /* Message file handling */
d40 3
a42 2
  _kernel_oserror * prismlib_open_messages      (const char * messages_filename);
  _kernel_oserror * prismlib_close_messages     (void);
d44 2
a45 3
  _kernel_oserror * prismlib_read_message
                    (
                      const char  * token,
d47 1
a47 3
                      const char ** buffer,
                      size_t      * inoutlength
                    );
d49 1
a49 68
  _kernel_oserror * prismlib_make_message
                    (
                      const char  * token,

                      const char ** buffer,
                      size_t      * inoutlength,

                      size_t        parameters,
                      ...
                    );

  /* Error handling */

  #define PRISMLIB_RETERR(fn) do {_kernel_oserror * e = (fn); if (e) return e;} while (0)

  _kernel_oserror * prismlib_make_error         (const int err_num, int num_args, ...);
  void              prismlib_store_error        (const _kernel_oserror * e);
  _kernel_oserror * prismlib_recall_error       (void);

  /* Mechanism of registration and deregistration with PRISM */

  #define PRISMLIB_ENTRIES(array) (sizeof(array) / sizeof(*array))

  _kernel_oserror * prismlib_module_initialised (const prism_id_t id, const uint32_t version);
  _kernel_oserror * prismlib_module_finalising  (const prism_id_t id, const uint32_t version);

  _kernel_oserror * prismlib_prism_started
                    (
                      const prism_id_t                      id,
                      const void                          * pw,

                      const prism_function_descriptor_t   * array,
                      const size_t                          entries,
                      void                              *** veneers,
                      const size_t                          offset
                    );

  _kernel_oserror * prismlib_prism_dying        (const prism_id_t id, void * veneers);

  /* Doubly linked lists */

  _kernel_oserror * prismlib_l_add_to_head      (void ** head, const size_t size);
  _kernel_oserror * prismlib_l_add_to_tail      (void ** head, void ** added, const size_t size);
  _kernel_oserror * prismlib_l_add_at_given     (void ** head, void ** added, const void * position, const size_t size);
  _kernel_oserror * prismlib_l_remove           (void ** head, void * item);
  _kernel_oserror * prismlib_l_remove_all       (void ** head);

  /* Timer routines */

  typedef void (*prismlib_timeout_func_t)(void *);

  _kernel_oserror * prismlib_callout_start      (const void * pw);
  _kernel_oserror * prismlib_callout_stop       (const void * pw);

  void              prismlib_timeout
                    (
                      const prismlib_timeout_func_t   fun,
                      const void                    * arg,
                      int                             t
                    );

  void              prismlib_untimeout
                    (
                      const prismlib_timeout_func_t   fun,
                      const void                    * arg
                    );

#endif  /* __PRIMSLIB_H    */
@


1.2
log
@  Compilation fixes, bug fixes, new features.

Detail:
  Added prismlib_make_message() and PRISMLIB_RETERR.

  Added -Wpe in Makefile to suppress warnings about non-standard includes,
  then standardised on using <name> for any exported inclusions and
  "name" for any local inclusions.

  Removed 'restrict' keyword on function pointers as CC 559 raises this
  as an error.

  Fixed heinous bug in Mechanism.c that prevents any client from properly
  registering (and therefore properly deregistering) with PRISM.

  Corrected reason code name using underscores to one that didn't as per
  latest definitions in PRISM.h for version 0.18 of the PRISM module.

Admin:
  Tested using in-development PFC Buffer module; new functions and bug fix
  perform correctly, other sundry fixes result in source that builds.

Version 0.02. Tagged as 'PRISMLib-0_02'
@
text
@d75 2
a76 2
                      const prism_id_t                     id,
                      const void                         * pw,
d78 4
a81 4
                      const prism_function_descriptor_t  * array,
                      const size_t                         entries,
                      void                              ** veneers,
                      const size_t                         offset
@


1.1
log
@  Initial import of PRISMLib into CVS.

Detail:
  PRISMLib provides some commonly used 'C' functions for PRISM modules.
  It is a little limited by being statically linked to a physical module
  instance, where that physical module may support multiple logical
  PRISM components; without having its own concept of sessions, no code
  that carries state data related to a particular component can be
  included. Sessions may be added in future but at the moment I see them
  as an unnecessary run-time overhead and too complex given the light-
  weight approach the library tries to take.

Admin:
  Compiled. PRISM module modified to use the library, and also compiled.
  Ran it on Iyonix - *-commands worked as expected. No other testing, but
  the code is by and large copied out of existing well tested sources.


Version 0.01. Not tagged
@
text
@d29 1
a29 1
# define __PRISMLIB_H
d31 2
a32 2
# include "kernel.h"
# include "PRISM/PRISM.h"
d38 1
d47 11
d60 2
d68 1
a68 1
# define PRISMLIB_ENTRIES(array) (sizeof(array) / sizeof(*array))
@

