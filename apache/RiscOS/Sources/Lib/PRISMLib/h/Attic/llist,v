head	1.3;
access;
symbols
	PRISMLib-0_03:1.2
	PRISMLib-0_02:1.2
	PRISMLib-0_01:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.04.14.16.06.08;	author ahodgkin;	state dead;
branches;
next	1.2;

1.2
date	2005.04.13.09.28.43;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.23.11.58.39;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  Overhaul to improve library consistency and support new naming
  conventions.
Detail:
  Extensive set of changes to follow naming conventions covered in
  PRISM/Docs/Naming and introduce a better library structure with
  more consistent file naming (important for exported headers) as
  well as function names (important for ease of use).
Admin:
  Requires header export of PRISM 0.21 or later. Used in many other
  modules tested on an Iyonix as part of a wider set of changes.

Version 0.04. Tagged as 'PRISMLib-0_04'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#if !defined(PRISMLIB_LLIST_H) /* file used if not already included */
#define PRISMLIB_LLIST_H
/*****************************************************************************
* $Id: llist,v 1.2 2005/04/13 09:28:43 ahodgkin Exp $
* $Name:  $
*
* Author(s):  Ben Avison
* Project(s): Rhenium
*
* ----------------------------------------------------------------------------
* Copyright © 2002 Castle Technology Ltd. All rights reserved.
*
* ----------------------------------------------------------------------------
* Purpose: Re-entrant linked list handling
*
* ----------------------------------------------------------------------------
* History: See source control system log
*
*****************************************************************************/


/*****************************************************************************
* Include header files
*****************************************************************************/
#include <stddef.h>
#include <stdbool.h>
#include <stdint.h>


/*****************************************************************************
* MACROS
*****************************************************************************/


/*****************************************************************************
* New type definitions
*****************************************************************************/
typedef struct
{
  uint32_t opaque[11];
} prismlib_llist_list_t;

typedef struct
{
  void *data;
  uint32_t opaque[4];
} prismlib_llist_step_t;


/*****************************************************************************
* Constants
*****************************************************************************/


/*****************************************************************************
* Global variables
*****************************************************************************/


/*****************************************************************************
* Function prototypes
*****************************************************************************/
extern void prismlib_llist_Create(prismlib_llist_list_t *restrict list, size_t data_size, void *(*malloc)(size_t), void (*free)(void *), void (*atremoval)(void *), size_t cluster_size);
extern void prismlib_llist_Destroy(prismlib_llist_list_t *list);
extern void prismlib_llist_StartWalk(prismlib_llist_step_t *restrict step, prismlib_llist_list_t *restrict list, bool backwards);
extern void prismlib_llist_StartWalkAt(prismlib_llist_step_t *restrict step, prismlib_llist_list_t *restrict list, void *restrict position);
extern void prismlib_llist_NextStep(prismlib_llist_step_t *step, bool backwards);
extern void prismlib_llist_AbortWalk(prismlib_llist_step_t *step);
extern bool prismlib_llist_AddAtLimit(prismlib_llist_list_t *restrict list, bool backwards, const void *restrict data);
extern bool prismlib_llist_AddAdjacent(prismlib_llist_step_t *restrict step, bool backwards, const void *restrict data);
extern bool prismlib_llist_AddSorted(prismlib_llist_list_t *restrict list, const void *restrict data, bool (*later)(const void *restrict, const void *restrict));
extern void prismlib_llist_Delink(prismlib_llist_step_t *step);


#endif  /* end of sentry #ifdef */
/*****************************************************************************
* END OF FILE
*****************************************************************************/
@


1.2
log
@  Compilation fixes, bug fixes, new features.

Detail:
  Added prismlib_make_message() and PRISMLIB_RETERR.

  Added -Wpe in Makefile to suppress warnings about non-standard includes,
  then standardised on using <name> for any exported inclusions and
  "name" for any local inclusions.

  Removed 'restrict' keyword on function pointers as CC 559 raises this
  as an error.

  Fixed heinous bug in Mechanism.c that prevents any client from properly
  registering (and therefore properly deregistering) with PRISM.

  Corrected reason code name using underscores to one that didn't as per
  latest definitions in PRISM.h for version 0.18 of the PRISM module.

Admin:
  Tested using in-development PFC Buffer module; new functions and bug fix
  perform correctly, other sundry fixes result in source that builds.

Version 0.02. Tagged as 'PRISMLib-0_02'
@
text
@d18 1
a18 1
* $Id: llist,v 1.1 2005/03/23 11:58:39 bavison Exp $
@


1.1
log
@  Some updates to PRISMLib - partly to allow Andrew to make sweeping changes
  to the whole PRISM codebase, partly as a safety measure prior to office move.
Detail:
  * Adapted Makefile to use shared Makefiles.
  * Added re-entrant linked list code from MPEGDriverG (originally written
    for PFCClock).
  * Added a TLV handling library, based on prototype PFCPresent.
  * Started work on generic PTL module Options handling code - still a
    work in progress, not built into library yet.
Admin:
  Not used in anger yet.

Version 0.01. Not tagged
@
text
@d18 1
a18 1
* $Id:  $
d77 1
a77 1
extern void prismlib_llist_Create(prismlib_llist_list_t *restrict list, size_t data_size, void *(*restrict malloc)(size_t), void (*restrict free)(void *), void (*restrict atremoval)(void *), size_t cluster_size);
d85 1
a85 1
extern bool prismlib_llist_AddSorted(prismlib_llist_list_t *restrict list, const void *restrict data, bool (*restrict later)(const void *restrict, const void *restrict));
@

