head	1.2;
access;
symbols
	PRISMLib-0_24:1.2
	PRISMLib-0_23:1.2
	PRISMLib-0_22:1.2
	PRISMLib-0_21:1.2
	PRISMLib-0_20:1.2
	PRISMLib-0_19:1.2
	PRISMLib-0_18:1.2
	PRISMLib-0_17:1.2
	PRISMLib-0_16:1.2
	PRISMLib-0_15:1.2
	PRISMLib-0_14:1.2
	PRISMLib-0_13:1.2
	PRISMLib-0_12:1.2
	PRISMLib-0_11:1.2
	PRISMLib-0_10:1.2
	PRISMLib-0_09:1.2
	PRISMLib-0_08:1.1
	PRISMLib-0_07:1.1
	PRISMLib-0_06:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.05.06.15.44.53;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.29.10.00.22;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  New functions; bug fixes; test harness.
Detail:
  New functions added in "NRArrays.c|h". Some shared kinds of function
  pointers turned into standard types and put into "FuncTypes.h" - not
  all function pointers used throughout are there, only shared ones at
  the moment (this may change in future). New test harness showed up
  a few bugs, mostly trivial (e.g. incorrect generation of an error
  message resulting in "%0" appearing instead of a parameter).
Admin:
  Tested :-) - test harness runs to completion. See Tests/!ReadMe to
  find out which things the test harness does or does not test. The
  test harness requires BuildSys 4.35.

Version 0.09. Tagged as 'PRISMLib-0_09'
@
text
@/* Copyright 2005 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    Locks.h                                           */
/*          (C) 2005 Tematic Ltd.                             */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Simple lock management to help functions that     */
/*          want to handle being re-entered.                  */
/*                                                            */
/* Author:  A.D.Hodgkinson.                                   */
/*                                                            */
/* History: 29-Apr-2005 (ADH): Created.                       */
/**************************************************************/

#ifndef PRISMLIB_LOCKS_H
  #define PRISMLIB_LOCKS_H

  #include <stdint.h>
  #include <stdbool.h>

  /* Lock structure */

  typedef uint32_t prismlib_lock_t;

  /* Function prototypes */

  bool prismlib_locks_lock   (prismlib_lock_t * lock);
  bool prismlib_locks_unlock (prismlib_lock_t * lock);

#endif /* PRISMLIB_LOCKS_H */
@


1.1
log
@  Clarification, correction, and new functions.
Detail:
  Clarification in NRLists.c to indicate that items are zero-initialised
  on creation. Fix to Interrupts.h which was including <kernel.h> when it
  really wanted <swis.h> (which itself includes kernel.h). New functions:
  Lock.c|h implement a (very) mundane lock system which can be used to
  defend against re-entrancy. These may well be added to with more
  sophisticated facilities over time, or removed entirely if the current
  thinking on why they are needed changes.
Admin:
  Compiles, used by PFCBuffer sources, but no run-time testing yet.

Version 0.06. Tagged as 'PRISMLib-0_06'
@
text
@d36 1
a36 1
  typedef uint32_t prismlib_simple_lock_t;
d40 2
a41 2
  bool prismlib_locks_lock   (prismlib_simple_lock_t * lock);
  bool prismlib_locks_unlock (prismlib_simple_lock_t * lock);
@

