head	1.3;
access;
symbols
	PRISMLib-0_24:1.3
	PRISMLib-0_23:1.3
	PRISMLib-0_22:1.3
	PRISMLib-0_21:1.3
	PRISMLib-0_20:1.3
	PRISMLib-0_19:1.3
	PRISMLib-0_18:1.3
	PRISMLib-0_17:1.3
	PRISMLib-0_16:1.3
	PRISMLib-0_15:1.3
	PRISMLib-0_14:1.3
	PRISMLib-0_13:1.3
	PRISMLib-0_12:1.3
	PRISMLib-0_11:1.3
	PRISMLib-0_10:1.3
	PRISMLib-0_09:1.3
	PRISMLib-0_08:1.2
	PRISMLib-0_07:1.2
	PRISMLib-0_06:1.2
	PRISMLib-0_05:1.2
	PRISMLib-0_04:1.2
	PRISMLib-0_03:1.2
	PRISMLib-0_02:1.1
	PRISMLib-0_01:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.05.06.15.44.53;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.13.11.28.06;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.11.15.09.38;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  New functions; bug fixes; test harness.
Detail:
  New functions added in "NRArrays.c|h". Some shared kinds of function
  pointers turned into standard types and put into "FuncTypes.h" - not
  all function pointers used throughout are there, only shared ones at
  the moment (this may change in future). New test harness showed up
  a few bugs, mostly trivial (e.g. incorrect generation of an error
  message resulting in "%0" appearing instead of a parameter).
Admin:
  Tested :-) - test harness runs to completion. See Tests/!ReadMe to
  find out which things the test harness does or does not test. The
  test harness requires BuildSys 4.35.

Version 0.09. Tagged as 'PRISMLib-0_09'
@
text
@Use of PRISMLib - what does the library require of its clients?
===============================================================

* Callout
  -------

  To use the Callout facilities, the component must be a module. It
  must include the following two generic veneer declarations in its
  CMHG file:

    generic-veneers: prismlib_tick_entry/prismlib_tick_handler,
                     prismlib_callout_entry/prismlib_callout_handler

  The entries are only needed if you make calls to the PRISMLib
  callout functions.


* NRLists, NRArrays, Clients
  --------------------------

  To use the NRLists, NRArrays or NRClients facilities, the component
  must have used the Messages facilities to open a Messages file and
  defined tokens for the following PRISM public errors:

    prism_ERROR_MEMORY_EXHAUSTED
    prism_ERROR_INVALID_PARAMETERS

  Presently these map to message tokens E00 and E06 respectively.
  E06 takes a single parameter. Two examples each of valid
  definitions are:

    E00:PRISM could not claim enough memory
    E06:Invalid parameters (%0) in PRISM

    E00:PTL Stream could not claim enough memory
    E06:Invalid parameters (%0) in PTL Stream

  More or less every PRISM module will tend to define this set of
  errors anyway as they are part of the PRISM public block, though
  technically they will only be required by PRISMLib if the Lists
  functions are used.

                                                  Last updated 06-May-2005
                                                  ========================

-- 
Andrew Hodgkinson, Senior Software Engineer
Tematic (Castle Technology Limited)           Tel: +44 (0) 1728 727 429
3 Signet Court, Swann Road,                   Fax: +44 (0) 1728 727 430
Cambridge, CB5 8LA, United Kingdom            WWW: http://www.tematic.com/@


1.2
log
@  Another bug fix.
Detail:
  Direct call interfaces - the void ** passed in for veneer creation
  is actually a void *** and needs to be referenced as such.
Admin:
  No more aborts in PFC Buffer with this version.

Version 0.03. Tagged as 'PRISMLib-0_03'
@
text
@d18 2
a19 2
* Lists
  -----
d21 3
a23 2
  To use the Lists facilities, the component must define tokens for
  the following PRISM public errors:
d43 1
a43 1
                                                  Last updated 13-Apr-2005
d49 1
a49 1
3 Signet Court, Swanns Road,                  Fax: +44 (0) 1728 727 430
@


1.1
log
@  Initial import of PRISMLib into CVS.

Detail:
  PRISMLib provides some commonly used 'C' functions for PRISM modules.
  It is a little limited by being statically linked to a physical module
  instance, where that physical module may support multiple logical
  PRISM components; without having its own concept of sessions, no code
  that carries state data related to a particular component can be
  included. Sessions may be added in future but at the moment I see them
  as an unnecessary run-time overhead and too complex given the light-
  weight approach the library tries to take.

Admin:
  Compiled. PRISM module modified to use the library, and also compiled.
  Ran it on Iyonix - *-commands worked as expected. No other testing, but
  the code is by and large copied out of existing well tested sources.


Version 0.01. Not tagged
@
text
@d41 9
@

