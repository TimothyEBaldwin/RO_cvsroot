head	4.8;
access;
symbols
	RISC_OSLib-5_97:4.8
	RISC_OSLib-5_96:4.8
	RISC_OSLib-5_95:4.8
	RISC_OSLib-5_94:4.8
	RISC_OSLib-5_93:4.8
	RISC_OSLib-5_92:4.8
	RISC_OSLib-5_91:4.8
	RISC_OSLib-5_90:4.8
	RISC_OSLib-5_89:4.8
	RISC_OSLib-5_88:4.8
	RISC_OSLib-5_87:4.8
	RISC_OSLib-5_86-1:4.8
	RISC_OSLib-5_86:4.8
	RISC_OSLib-5_85:4.8
	RISC_OSLib-5_84:4.8
	RISC_OSLib-5_83-2:4.7
	RISC_OSLib-5_83-1:4.7
	RISC_OSLib-5_83:4.7
	RISC_OSLib-5_82:4.7
	RISC_OSLib-5_81:4.7
	RISC_OSLib-5_75-2:4.7
	RISC_OSLib-5_80:4.7
	RISC_OSLib-5_79:4.7
	RISC_OSLib-5_78:4.7
	RISC_OSLib-5_75-1:4.7
	RISC_OSLib-5_77:4.7
	RISC_OSLib-5_76:4.7
	RISC_OSLib-5_75:4.7
	RISC_OSLib-5_74:4.7
	RISC_OSLib-5_73:4.7
	RISC_OSLib-5_72:4.7
	RISC_OSLib-5_71:4.7
	RISC_OSLib-5_70:4.7
	RISC_OSLib-5_69:4.7
	RISC_OSLib-5_68:4.7
	RISC_OSLib-5_67:4.7
	RISC_OSLib-5_66:4.7
	RISC_OSLib-5_65:4.7
	RISC_OSLib-5_64:4.7
	RISC_OSLib-5_63:4.7
	RISC_OSLib-5_62:4.7
	RISC_OSLib-5_61:4.7
	RISC_OSLib-5_60:4.7
	RISC_OSLib-5_59:4.7
	RISC_OSLib-5_58:4.7
	RISC_OSLib-5_57:4.7
	RISC_OSLib-5_56:4.7
	RISC_OSLib-5_55:4.7
	RISC_OSLib-5_54:4.7
	RISC_OSLib-5_53:4.5
	RISC_OSLib-5_52:4.5
	RISC_OSLib-5_51:4.5
	RO_5_07:4.5
	RISC_OSLib-5_50:4.5
	RISC_OSLib-5_49:4.5
	RISC_OSLib-5_46-4_64_2_1:4.4.4.1
	NoInlineAsm:4.4.0.4
	RISC_OSLib-5_48:4.5
	RISC_OSLib-5_47:4.4
	RISC_OSLib-5_46:4.4
	RISC_OSLib-5_45:4.4
	RISC_OSLib-5_44:4.4
	RISC_OSLib-5_43:4.4
	RISC_OSLib-5_42:4.4
	RISC_OSLib-5_41:4.4
	RISC_OSLib-5_40:4.4
	RISC_OSLib-5_39:4.4
	RISC_OSLib-5_38:4.4
	RISC_OSLib-5_37:4.4
	RISC_OSLib-5_36:4.4
	RISC_OSLib-5_35:4.4
	RISC_OSLib-5_34:4.4
	RISC_OSLib-5_33-4_50_2_1:4.4
	sbrodie_dev:4.4.0.2
	sbrodie_dev_bp:4.4
	RISC_OSLib-5_33:4.4
	RISC_OSLib-5_32:4.4
	RISC_OSLib-5_31:4.4
	RISC_OSLib-5_30:4.4
	RISC_OSLib-5_29:4.4
	RISC_OSLib-5_28:4.4
	RISC_OSLib-5_27:4.4
	RISC_OSLib-5_26:4.4
	RISC_OSLib-5_25:4.4
	RISC_OSLib-5_24:4.4
	RISC_OSLib-5_01-4_16_2_5:4.3
	RISC_OSLib-5_23:4.4
	RISC_OSLib-5_22:4.4
	RISC_OSLib-5_21:4.4
	RISC_OSLib-5_20:4.4
	RISC_OSLib-5_19:4.4
	RISC_OSLib-5_18:4.4
	RISC_OSLib-5_17:4.4
	RISC_OSLib-5_16:4.4
	RISC_OSLib-5_15:4.4
	dellis_autobuild_BaseSW:4.4
	RISC_OSLib-5_14:4.4
	RISC_OSLib-5_13:4.4
	RISC_OSLib-5_12:4.4
	RISC_OSLib-5_01-4_16_2_4:4.3
	RISC_OSLib-5_11:4.4
	RISC_OSLib-5_01-4_16_2_3:4.3
	RISC_OSLib-5_01-4_16_2_2:4.3
	RISC_OSLib-5_10:4.4
	RISC_OSLib-5_01-4_16_2_1:4.3
	Bethany:4.3.0.2
	RISC_OSLib-5_09:4.4
	RISC_OSLib-5_08:4.4
	RISC_OSLib-5_07:4.4
	RISC_OSLib-5_06:4.4
	RISC_OSLib-4_97-4_12_2_8:4.2
	RISC_OSLib-5_05:4.4
	RISC_OSLib-5_04:4.4
	sbrodie_sedwards_16Mar2000:4.4
	RISC_OSLib-5_03:4.4
	RISC_OSLib-5_02:4.3
	RISC_OSLib-4_97-4_12_2_7:4.2
	RISC_OSLib-5_01:4.3
	RISC_OSLib-5_00:4.3
	RISC_OSLib-4_99:4.3
	RISC_OSLib-4_98:4.3
	RISC_OSLib-4_97-4_12_2_6:4.2
	RISC_OSLib-4_97-4_12_2_5:4.2
	RISC_OSLib-4_97-4_12_2_4:4.2
	RISC_OSLib-4_97-4_12_2_3:4.2
	RISC_OSLib-4_97-4_12_2_2:4.2
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.2
	kbracey_32bit:4.2.0.2
	kbracey_32bit_bp:4.2
	dcotton_autobuild_BaseSW:4.4
	RISC_OSLib-4_97:4.2
	RISC_OSLib-4_96:4.2
	RISC_OSLib-4_95:4.2
	RISC_OSLib-4_94:4.2
	RISC_OSLib-4_93:4.2
	RISC_OSLib-4_92:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.2
	RISC_OSLib-4_90:4.2
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.8
date	2015.03.29.15.48.50;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	BAel7YuyUW7s8wfy;

4.7
date	2009.06.14.01.20.59;	author bavison;	state Exp;
branches;
next	4.6;

4.6
date	2009.05.31.17.59.03;	author pnaulls;	state Exp;
branches;
next	4.5;

4.5
date	2003.12.02.16.51.33;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2000.03.07.14.20.02;	author sbrodie;	state Exp;
branches
	4.4.4.1;
next	4.3;

4.3
date	99.11.25.11.28.08;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	98.10.26.09.57.04;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.25.43;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.4.4.1
date	2004.01.06.15.07.19;	author bavison;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.25.43;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.56.23;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.35.27;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.51.55;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.8
log
@Retire use of stripnulls
Now ObjAsm can ALIGN with arbitrary numbers, use the same trick FileCore does in its header by padding with newlines.
Not tagged.
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    Creation of swis.h ==> Hdr:makehswis

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************

; Date       Name       Description
; ----       ----       -----------
; 07-Feb-94  TMD        Created file
; 20-Jul-94  AMcC       Made compatible with Hdr file changes:
;                       - GETs Hdr:PublicWS rather than defining SoundWorkSpace.
;                       - Hdr:File has been split into Hdr:FSNumbers and Hdr:HighFSI
;                         GETs Hdr:FSNumbers (needed by NewErrors) (was GET Hdr:File).
;                       - FilerAction hdr file is now called FilerAct (was Filer).
;                       - Filter hdr file is now called Filter (was Filters).
;                       - Squash hdr file is now called Squash (was Compress).
;                       - Removed GET  Hdr:DBox
;                       - Removed GET  Hdr:ROMCache
; 22-Sep-94  AMcC       #ifdef __cplusplus lines included in derived file (from IJohnson)
; 22-Sep-94  AMcC       Generates SWI name defs for all SWIs listed in PRM (3.50 version)
; 12-Oct-94  AMcC       Added SWIs for DDT (HLLDebugger) and HostFS (Tube)
; 03-Jan-95  AMcC       Added CDROM and SCSI SWIs (as requested by SPalmer)
; 09-Jan-95  AMcC       Added #defines for INR(..) and OUTR(..)
;                       Added usage comment (for Aquarius Toolbox)
;                       Updated version and date for header of output file
;

; AAsm source file to make h.swis file from Hdr:SWIs and other headers

        GET     Hdr:ListOpts

        GBLS    SWIClass

; Now the special version of the AddSWI macro that outputs the #defines

        MACRO
        AddSWI  $SWIName,$value
        LCLA    val2
  [     "$value" = ""
$SWIClass._$SWIName # 1
  |
$SWIClass._$SWIName * $value
  ]
val2    SETA    $SWIClass._$SWIName
X$SWIClass._$SWIName * $SWIClass._$SWIName + Auto_Error_SWI_bit
        =       "#undef $SWIClass._$SWIName", 10
        =       "#define $SWIClass._$SWIName 0x$val2", 10
        MEND

        MACRO
$label  AddError $name,$text,$value
$label
   [    "$value" = ""
ErrorNumber_$name # 1
   |
ErrorNumber_$name * $value
   ]
        GBLS ErrorString_$name
ErrorString_$name SETS "$text"
        MEND

        MACRO
$label  AddError2 $name,$text,$value
$label
   [    "$value" = ""
ErrorNumber_$name # 1
   |
ErrorNumber_$name * $value
   ]
        GBLS ErrorString_$name
ErrorString_$name SETS "$text"
        MEND

        MACRO
$label  AddFSError      $class, $baseerr, $fsname, $fsnumber
$label
        LCLA    value
value   SETA    &10000 + $fsnumber*&100 + ErrorNumber_$baseerr._Pre
        LCLS    string
string  SETS    ErrorString_$baseerr._Pre :CC: "$fsname" :CC: ErrorString_$baseerr._Post
        LCLS    string2
string2 SETS    "&":CC:(:STR:value)
        AddError        $class$baseerr, "$string", $string2
        MEND

; Needed to GET Hdr:Sound without Hdr:VickySpace -> Hdr:Macros

;SoundWorkSpace * &01F04000
        GET     Hdr:PublicWS

        AREA    |Text$Data|, DATA

; First output the file header
	BIN	h.swisheader

; Now output all the SWI symbols we can access

        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors
        GET     Hdr:SWIs
        GET     Hdr:CPU.Generic26
        GET     Hdr:ModHand

        GET     swioptions.s

; And finally the trailing bits

        =       10
        =       "#endif", 10

; Pad to word align with harmless newlines        
        ALIGN   4, 0, 10

        END
@


4.7
log
@  Build fix
Detail:
  s.makehswis used to pull in various IO header files. There was no good
  reason for this, and doing so causes a dependency upon Hdr:Machine.<Machine>
  to define which generation of IOC/IOMD is in use - which is a problem if
  the C library is to be built where Machine=All.
Admin:
  Tested in a Machine=All build.

Version 5.54. Not tagged
@
text
@d125 3
@


4.6
log
@Normalise C and assembler include paths
Detail:
 This changes all the C and assembler includes to be a canoncial Unix format.
 Also match include paths to previous commit for EditIntern/DrawIntern/VerIntern
 Finally, also include some minor type fixes (NULL vs 0)
Admin:
 May be some other paths elsewhere in the source I'm not immediately able to fix.  Will address any issues ASAP, since this is a huge change.

Version 5.54. Not tagged
@
text
@a44 2
        GET     Hdr:Machine.<Machine>
        $GetIO
a115 1
        GET     Hdr:IO.GenericIO
@


4.5
log
@  Changes for Customer W; also suitable for building on an Iyonix.
Detail:
  * No longer uses aasm to build h.swis.
  * (Only) compatible with new C compilers: assumes const static data is
    placed in separate read-only areas, and suitable command-line switch
    is used to ensure that library static data is never placed in a zero-
    init area.
  * Stack extension code now thread-safe.
  * Heap thread-safety code (in clib) now uses SWP instruction test results
    from stack extension code (in kernel) - as a side effect, the exported
    symbol _swp_available now exists, if you need to use it elsewhere.
  * Slightly closer to having top-bit-set heap addresses working.
Admin:
  Tested in a Tungsten build, and with Customer W's test suite.

Version 5.48. Tagged as 'RISC_OSLib-5_48'
@
text
@d121 1
a121 1
        GET     s.swioptions
@


4.4
log
@  Automatic generation of swis.h now more automatic.
Detail:
  New script will search the export directory for headers that should
    be exported SWI symbols for it and only cause them to be included
    if it finds the header file.  This means that unless a component
    in your build actually needs the SWI symbols from another component,
    you no longer require that component to be in your modules file
    purely to enable successful generation of swis.h
Admin:
  Test build performed.

Version 5.03. Tagged as 'RISC_OSLib-5_03'
@
text
@d107 2
@


4.4.4.1
log
@Adapted version 5.46 to build on 32-bit machines.

Version 5.46, 4.64.2.1. Tagged as 'RISC_OSLib-5_46-4_64_2_1'
@
text
@a106 2
        AREA    |Text$Data|, DATA

@


4.3
log
@  swis.h only re-exported if it has changed since the last export.
Detail:
  The Makefile now performs a diff of CLIB:h.swis and derived.swis
    in order to determine whether it needs to export the header or
    not.  This can save compilation time if the header file has not
    changed since it used to cause virtually all C code to recompile.
  s/makeswish now imports Hdr:Machine.<Machine> and executes $GetIO
    to ensure that the Portable module header export functions
    correctly.
Admin:
  Tested.

Version 4.98. Tagged as 'RISC_OSLib-4_98'
@
text
@d119 1
a119 54
        GET     Hdr:ADFS
        GET     Hdr:ATAPI
        GET     Hdr:BasicTrans
        GET     Hdr:Buffer
        GET     Hdr:ARM3Cache
        GET     Hdr:CDROM
        GET     Hdr:CDFS
        GET     Hdr:ColourPick
        GET     Hdr:ColourTran
        GET     Hdr:DDT
        GET     Hdr:Debugger
        GET     Hdr:DeviceFS
        GET     Hdr:DMA
        GET     Hdr:DOSFS
        GET     Hdr:DragASprit
        GET     Hdr:DragAnObj
        GET     Hdr:Draw
        GET     Hdr:Econet
        GET     Hdr:FileCore
        GET     Hdr:FilerAct
        GET     Hdr:Filter
        GET     Hdr:Font
        GET     Hdr:FPEmulator
        GET     Hdr:Free
        GET     Hdr:FSLock
        GET     Hdr:Hourglass
        GET     Hdr:HostFS
        GET     Hdr:IIC
        GET     Hdr:Joystick
        GET     Hdr:MakePSFont
        GET     Hdr:MsgTrans
;       GET     Hdr:NetFS         SWIs defined in Hdr:Econet
;       GET     Hdr:NetPrint      SWIs defined in Hdr:Econet
        GET     Hdr:RISCOS
        GET     Hdr:Parallel
        GET     Hdr:PDriver
        GET     Hdr:PDumper
        GET     Hdr:Podule
        GET     Hdr:Portable
        GET     Hdr:RAMFS
        GET     Hdr:ResourceFS
        GET     Hdr:ScrBlank
        GET     Hdr:ScrModes
        GET     Hdr:SCSI
        GET     Hdr:SCSIFS
        GET     Hdr:SharedCLib
        GET     Hdr:Shell
        GET     Hdr:Sound
        GET     Hdr:Squash
        GET     Hdr:Super
        GET     Hdr:Switcher
        GET     Hdr:TaskWindow
        GET     Hdr:Territory
        GET     Hdr:Wimp
@


4.2
log
@  Added new -v4 pragma to derived swis.h header file.
  Moved template for swis.h out of asm source into separate text file.
Detail:
  s.makehswis: The text which forms the common header for the derived
    swis.h is now stored externally rather than declared inline with
    assembler directives.
  h.swisheaders: The external file containing the common header.
    Now wraps the declarations of _swi and _swix with "#pragma -v4"
    to activate the _swi/_swix parameter checking for those functions.
  Makefile: Added dependency of derived.swis on h.swisheader
Admin:
  Built and exported.  Tested with cc 5.09 and it was happy with the
  new pragma (it ignores it).  Tested with what will be cc 5.10 and
  it recognised it and started checking _swi and _swix calls.

Version 4.90. Tagged as 'RISC_OSLib-4_90'
@
text
@d45 2
@


4.1
log
@Initial revision
@
text
@d23 1
a23 1
; 07-Feb-94  TMD        Created file 
d106 1
a106 131

        =       "#pragma force_top_level", 10
        =       "#pragma include_only_once", 10
        =       10
        =       "/*Name:    swis.h", 10
        =       "  Purpose: Generalised SWI interface", 10
        =       "  Author:  (c) Acorn Computers Ltd, 1989", 10
        =       "  Version: 2.04 (09-Jan-1995)", 10
        =       "  This file is automatically generated from Hdr:makehswis", 10
        =       "*/", 10
        =       10
        =       "#ifndef __swis_h", 10
        =       "#define __swis_h", 10
        =       10
        =       "#ifndef __kernel_h", 10
        =       "  #include ""kernel.h""", 10
        =       "#endif", 10
        =       10
        =       "#ifdef __cplusplus", 10
        =       "extern ""C""", 10
        =       "{", 10
        =       "#endif", 10
        =       10
        =       "extern int _swi (int swi_no, unsigned int, ...);", 10
        =       10
        =       "extern _kernel_oserror *_swix (int swi_no, unsigned int, ...);", 10
        =       10
        =       "#ifdef __cplusplus", 10
        =       "}", 10
        =       "#endif", 10
        =       10
        =       "#define _FLAGS     0x10 /*use with _RETURN() or _OUT()*/", 10
        =       "#define _IN(i)     (1U << (i))", 10
        =       "#define _INR(i,j)  (~0 << (i) ^ ~0 << (j) + 1)", 10
        =       "#define _OUT(i)    ((i) != _FLAGS? 1U << 31 - (i): 1U << 21)", 10
        =       "#define _OUTR(i,j) (~0U >> (i) ^ ~0U >> (j) + 1)", 10
        =       "#define _BLOCK(i)  (1U << 11 | (unsigned) (i) << 12)", 10
        =       "#define _RETURN(i) ((i) != _FLAGS? (unsigned) (i) << 16: 0xFU << 16)", 10
        =       "#define _C         (1U << 29)", 10
        =       "#define _Z         (1U << 30)", 10
        =       "#define _N         (1U << 31)", 10
        =       10
        =       "#define XOS_Bit    (1U << 17) /*deprecated: use _swi() or _swix()*/", 10
        =       10
        =       "/*", 10
        =       " * These functions provide a generic method of calling RISC OS SWIs from C or", 10
        =       " * C++.", 10
        =       " * ", 10
        =       " * Two functions are provided:", 10
        =       " *     _swi for calling SWIs without setting the X bit", 10
        =       " *     _swix which sets the X bit before calling the SWI.", 10
        =       " * ", 10
        =       " * swi_no is the number of the SWI to be called. This should never have the", 10
        =       " * X bit set.", 10
        =       " * ", 10
        =       " * mask is a word containing an input and output register mask, a return", 10
        =       " * register, and a block parameter register.", 10
        =       " * ", 10
        =       " * The arrangement of mask is as follows:", 10
        =       " * ", 10
        =       " * Bits 0 -  9:  Set if R(N) is passed to the SWI.", 10
        =       " * Bits 22 - 31: Set if R(31-N) is output from the SWI (ie bit 31", 10
        =       " *               corresponds to R0, bit 22 corresponds to R9).", 10
        =       " * Bit 21:       Set if the PC (including the flags) is to be output.", 10
        =       " * Bits 16 - 19: Register no. to be returned from a _swi call. This is only", 10
        =       " *               applicable to _swi as _swix always returns either 0 or an error", 10
        =       " *               pointer.", 10
        =       " * Bit 11:       Set if a local block parameter is to be passed to the SWI", 10
        =       " * Bits 12 - 15: Register number for local block parameter if bit 11 set.", 10
        =       " * ", 10
        =       " * If a register is specified as a return register (bits 16-19) it must not", 10
        =       " * also be specified as an output register in the output register mask", 10
        =       " * (bits 22-31).", 10
        =       " * ", 10
        =       " * If a register is specified as a local block parameter register it must not", 10
        =       " * also be specified as an input register in the input register mask", 10
        =       " * (bits 0-9).", 10
        =       " * ", 10
        =       " * If the PC is specified as a return register (ie bits 16-19 = 15) or as an", 10
        =       " * output registers (bit 21 = 1) the value returned will contain the flags in", 10
        =       " * bits 28 to 31 (28 = V, 29 = C, 30 = Z, 31 = N).", 10
        =       " * ", 10
        =       " * The remainder of the variadic arguments are as follows (in order):", 10
        =       " * ", 10
        =       " * The word value of each input register in order from 0 to 9 as specified by", 10
        =       " * bits 0 to 9 of the mask.", 10
        =       " * ", 10
        =       " * The address of a word to be written for each output register in order from", 10
        =       " * 0 to 9 as specified by bits 31 downto 22 of the mask.", 10
        =       " * ", 10
        =       " * The address of a word to be written with the PC value on exit from the SWI", 10
        =       " * if bit 21 of the register mask is set.", 10
        =       " * ", 10
        =       " * If bit 11 is set the remainder of the arguments are placed in order in a", 10
        =       " * parameter block and the address of the parameter block is passed to the SWI", 10
        =       " * in the register specified by bits 12-15.", 10
        =       " * ", 10
        =       " * The macros are as follows:", 10
        =       " * ", 10
        =       " * _IN(n)       - Specifies that R(n) is used on input", 10
        =       " * _OUT(n)      - Specifies that R(n) is output", 10
        =       " * _BLOCK(n)    - Specifies that R(n) is a block parameter", 10
        =       " * _RETURN(n)   - Specifies that R(n) is returned from _swi.", 10
        =       " * ", 10
        =       " * The values of the macros should be ORed together to produce the value for", 10
        =       " * the mask.", 10
        =       " * ", 10
        =       " * The following constants are defined", 10
        =       " * ", 10
        =       " * _FLAGS       - the register containing the flags (currently 15)", 10
        =       " * _C           - mask for the C bit in _FLAGS", 10
        =       " * _Z           - mask for the Z bit in _FLAGS", 10
        =       " * _N           - mask for the N bit in _FLAGS", 10
        =       " * ", 10
        =       " * Example calls:", 10
        =       " * ", 10
        =       " *     _swi(OS_NewLine, 0);   // Must specify 0 register mask", 10
        =       " * ", 10
        =       " *     _swi(OS_Write0, _IN(0), ",34,"Hello, World",34,");", 10
        =       " * ", 10
        =       " *     task_handle = _swi(Wimp_Initialise, _IN(0)|_IN(1)|_IN(2)|_RETURN(1),", 10
        =       " *                        300, *(int *)",34,"TASK",34,", ",34,"Test",34,");", 10
        =       " * ", 10
        =       " *     e = _swix(Wimp_LoadTemplate, _IN(1)|_IN(2)|_IN(3)|_IN(4)|_IN(5)|_IN(6)|", 10
        =       " *                                  _OUT(2)|_OUT(6),", 10
        =       " *               template_buffer, workspace, workspace_end, -1, ",34,"MyWind",34,", next,", 10
        =       " *               &workspace_end, &next);", 10
        =       " * ", 10
        =       " *     e = _swix(Wimp_SetExtent, _IN(0)|_BLOCK(1), w, minx, miny, maxx, maxy);", 10
        =       " */", 10
        =       10
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
