head	4.1;
access;
symbols
	RISC_OSLib-5_97:4.1
	RISC_OSLib-5_96:4.1
	RISC_OSLib-5_95:4.1
	RISC_OSLib-5_94:4.1
	RISC_OSLib-5_93:4.1
	RISC_OSLib-5_92:4.1
	RISC_OSLib-5_91:4.1
	RISC_OSLib-5_90:4.1
	RISC_OSLib-5_89:4.1
	RISC_OSLib-5_88:4.1
	RISC_OSLib-5_87:4.1
	RISC_OSLib-5_86-1:4.1
	RISC_OSLib-5_86:4.1
	RISC_OSLib-5_85:4.1
	RISC_OSLib-5_84:4.1
	RISC_OSLib-5_83-2:4.1
	RISC_OSLib-5_83-1:4.1
	RISC_OSLib-5_83:4.1
	RISC_OSLib-5_82:4.1
	RISC_OSLib-5_81:4.1
	RISC_OSLib-5_75-2:4.1
	RISC_OSLib-5_80:4.1
	RISC_OSLib-5_79:4.1
	RISC_OSLib-5_78:4.1
	RISC_OSLib-5_75-1:4.1
	RISC_OSLib-5_77:4.1
	RISC_OSLib-5_76:4.1
	RISC_OSLib-5_75:4.1
	RISC_OSLib-5_74:4.1
	RISC_OSLib-5_73:4.1
	RISC_OSLib-5_72:4.1
	RISC_OSLib-5_71:4.1
	RISC_OSLib-5_70:4.1
	RISC_OSLib-5_69:4.1
	RISC_OSLib-5_68:4.1
	RISC_OSLib-5_67:4.1
	RISC_OSLib-5_66:4.1
	RISC_OSLib-5_65:4.1
	RISC_OSLib-5_64:4.1
	RISC_OSLib-5_63:4.1
	RISC_OSLib-5_62:4.1
	RISC_OSLib-5_61:4.1
	RISC_OSLib-5_60:4.1
	RISC_OSLib-5_59:4.1
	RISC_OSLib-5_58:4.1
	RISC_OSLib-5_57:4.1
	RISC_OSLib-5_56:4.1
	RISC_OSLib-5_55:4.1
	RISC_OSLib-5_54:4.1
	RISC_OSLib-5_53:4.1
	RISC_OSLib-5_52:4.1
	RISC_OSLib-5_51:4.1
	RO_5_07:4.1
	RISC_OSLib-5_50:4.1
	RISC_OSLib-5_49:4.1
	RISC_OSLib-5_46-4_64_2_1:4.1
	NoInlineAsm:4.1.0.4
	RISC_OSLib-5_48:4.1
	RISC_OSLib-5_47:4.1
	RISC_OSLib-5_46:4.1
	RISC_OSLib-5_45:4.1
	RISC_OSLib-5_44:4.1
	RISC_OSLib-5_43:4.1
	RISC_OSLib-5_42:4.1
	RISC_OSLib-5_41:4.1
	RISC_OSLib-5_40:4.1
	RISC_OSLib-5_39:4.1
	RISC_OSLib-5_38:4.1
	RISC_OSLib-5_37:4.1
	RISC_OSLib-5_36:4.1
	RISC_OSLib-5_35:4.1
	RISC_OSLib-5_34:4.1
	RISC_OSLib-5_33-4_50_2_1:4.1
	sbrodie_dev:4.1.0.2
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	dcotton_autobuild_BaseSW:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-4_97-4_12_2_8:1.1.2.1
	kbracey_32bit:1.1.0.2;
locks; strict;
comment	@# @;


4.1
date	2000.05.09.14.09.20;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.09.13.58.35;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.05.09.13.58.35;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.1
log
@32-bit work merged from kbracey_32bit branch.

Version 5.06. Tagged as 'RISC_OSLib-5_06'
@
text
@26-bit Shared C library (ROM or RAM):      ARM 2 or later (26-bit)
					   Will always be in 26-bit modes
			                   Client may be APCS-32 or APCS-R

26-bit ANSILib				   ARM 2 or later (26-bit)
					   Will always be in 26-bit modes
					   Client is APCS-R

32-bit Shared C library (ROM or RAM):      ARM 6 or later (32-bit)
					   May be in 26 or 32-bit modes
				           32-bit instructions always available
					   Client is APCS-32

32-bit ANSILib				   ARM 6 or later
					   May be in 26 or 32-bit modes
				           32-bit instructions always available
					   Client is APCS-32


32-bit ANSILib will be RISC OS 3.5 or later

other requirements for any CLib or ANSILib:

RISC OS 3.1
FPEmulator 4.03 or later
CallASWI (if RISC OS 3.6 or earlier)
@


1.1
log
@file APCSnotes was initially added on branch kbracey_32bit.
@
text
@d1 26
@


1.1.2.1
log
@Features:

* APCS-32 support complete.
* APCS-A compatibility removed.
* Old ArthurLib code removed.
* _clib_version() now reports version from VersionNum.
* time() no longer does a run-time host check - I think we know we're not a BBC
  Master ARM second processor now.
* rename() now uses OS_FSControl 25 instead of *rename.
* getenv() can handle arbitrary length variables.
* Can now handle exceptions in 32-bit form of FPEmulator (on either 26 or 32
  bit systems).
* tmpnam() switches to SVC mode to access its zero page counter.
* Faster divide routines.

Admin:

  This will build all sorts of different things depending on the flags. See
  the Docs directory for details.

  As far as ROM builds are concerned, if using APCS-R, no changes are needed.
  If using APCS-32, the Shared C Library must be built as APCS-R to ensure
  compatibility with old binaries. To achieve this, pass in the option
  SCL_APCS="-APCS 3/26bit" in the Components file.

Version 4.97, 4.12.2.8. Tagged as 'RISC_OSLib-4_97-4_12_2_8'
@
text
@a0 26
26-bit Shared C library (ROM or RAM):      ARM 2 or later (26-bit)
					   Will always be in 26-bit modes
			                   Client may be APCS-32 or APCS-R

26-bit ANSILib				   ARM 2 or later (26-bit)
					   Will always be in 26-bit modes
					   Client is APCS-R

32-bit Shared C library (ROM or RAM):      ARM 6 or later (32-bit)
					   May be in 26 or 32-bit modes
				           32-bit instructions always available
					   Client is APCS-32

32-bit ANSILib				   ARM 6 or later
					   May be in 26 or 32-bit modes
				           32-bit instructions always available
					   Client is APCS-32


32-bit ANSILib will be RISC OS 3.5 or later

other requirements for any CLib or ANSILib:

RISC OS 3.1
FPEmulator 4.03 or later
CallASWI (if RISC OS 3.6 or earlier)
@

