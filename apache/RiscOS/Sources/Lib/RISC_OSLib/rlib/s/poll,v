head	4.6;
access;
symbols
	RISC_OSLib-5_97:4.6
	RISC_OSLib-5_96:4.6
	RISC_OSLib-5_95:4.6
	RISC_OSLib-5_94:4.6
	RISC_OSLib-5_93:4.6
	RISC_OSLib-5_92:4.6
	RISC_OSLib-5_91:4.6
	RISC_OSLib-5_90:4.6
	RISC_OSLib-5_89:4.6
	RISC_OSLib-5_88:4.6
	RISC_OSLib-5_87:4.6
	RISC_OSLib-5_86-1:4.6
	RISC_OSLib-5_86:4.6
	RISC_OSLib-5_85:4.6
	RISC_OSLib-5_84:4.6
	RISC_OSLib-5_83-2:4.6
	RISC_OSLib-5_83-1:4.6
	RISC_OSLib-5_83:4.6
	RISC_OSLib-5_82:4.6
	RISC_OSLib-5_81:4.6
	RISC_OSLib-5_75-2:4.6
	RISC_OSLib-5_80:4.6
	RISC_OSLib-5_79:4.6
	RISC_OSLib-5_78:4.6
	RISC_OSLib-5_75-1:4.6
	RISC_OSLib-5_77:4.6
	RISC_OSLib-5_76:4.6
	RISC_OSLib-5_75:4.6
	RISC_OSLib-5_74:4.6
	RISC_OSLib-5_73:4.6
	RISC_OSLib-5_72:4.6
	RISC_OSLib-5_71:4.6
	RISC_OSLib-5_70:4.6
	RISC_OSLib-5_69:4.6
	RISC_OSLib-5_68:4.6
	RISC_OSLib-5_67:4.6
	RISC_OSLib-5_66:4.6
	RISC_OSLib-5_65:4.6
	RISC_OSLib-5_64:4.6
	RISC_OSLib-5_63:4.5
	RISC_OSLib-5_62:4.5
	RISC_OSLib-5_61:4.5
	RISC_OSLib-5_60:4.5
	RISC_OSLib-5_59:4.5
	RISC_OSLib-5_58:4.5
	RISC_OSLib-5_57:4.5
	RISC_OSLib-5_56:4.5
	RISC_OSLib-5_55:4.5
	RISC_OSLib-5_54:4.5
	RISC_OSLib-5_53:4.5
	RISC_OSLib-5_52:4.5
	RISC_OSLib-5_51:4.5
	RO_5_07:4.5
	RISC_OSLib-5_50:4.5
	RISC_OSLib-5_49:4.5
	RISC_OSLib-5_46-4_64_2_1:4.5
	NoInlineAsm:4.5.0.2
	RISC_OSLib-5_48:4.5
	RISC_OSLib-5_47:4.5
	RISC_OSLib-5_46:4.5
	RISC_OSLib-5_45:4.5
	RISC_OSLib-5_44:4.5
	RISC_OSLib-5_43:4.5
	RISC_OSLib-5_42:4.5
	RISC_OSLib-5_41:4.5
	RISC_OSLib-5_40:4.5
	RISC_OSLib-5_39:4.5
	RISC_OSLib-5_38:4.5
	RISC_OSLib-5_37:4.5
	RISC_OSLib-5_36:4.5
	RISC_OSLib-5_35:4.5
	RISC_OSLib-5_34:4.5
	RISC_OSLib-5_33-4_50_2_1:4.3.2.1
	sbrodie_dev:4.3.0.2
	sbrodie_dev_bp:4.3
	RISC_OSLib-5_33:4.3
	RISC_OSLib-5_32:4.3
	RISC_OSLib-5_31:4.3
	RISC_OSLib-5_30:4.3
	RISC_OSLib-5_29:4.2
	RISC_OSLib-5_28:4.2
	RISC_OSLib-5_27:4.2
	RISC_OSLib-5_26:4.2
	RISC_OSLib-5_25:4.2
	RISC_OSLib-5_24:4.2
	RISC_OSLib-5_01-4_16_2_5:4.1
	RISC_OSLib-5_23:4.2
	RISC_OSLib-5_22:4.2
	RISC_OSLib-5_21:4.2
	RISC_OSLib-5_20:4.2
	RISC_OSLib-5_19:4.2
	RISC_OSLib-5_18:4.2
	RISC_OSLib-5_17:4.2
	RISC_OSLib-5_16:4.2
	RISC_OSLib-5_15:4.2
	dellis_autobuild_BaseSW:4.2
	RISC_OSLib-5_14:4.2
	RISC_OSLib-5_13:4.2
	RISC_OSLib-5_12:4.2
	RISC_OSLib-5_01-4_16_2_4:4.1
	RISC_OSLib-5_11:4.2
	RISC_OSLib-5_01-4_16_2_3:4.1
	RISC_OSLib-5_01-4_16_2_2:4.1
	RISC_OSLib-5_10:4.2
	RISC_OSLib-5_01-4_16_2_1:4.1
	Bethany:4.1.0.12
	RISC_OSLib-5_09:4.2
	RISC_OSLib-5_08:4.2
	RISC_OSLib-5_07:4.2
	RISC_OSLib-5_06:4.2
	RISC_OSLib-4_97-4_12_2_8:4.1.10.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	RISC_OSLib-5_03:4.1
	RISC_OSLib-5_02:4.1
	RISC_OSLib-4_97-4_12_2_7:4.1.10.1
	RISC_OSLib-5_01:4.1
	RISC_OSLib-5_00:4.1
	RISC_OSLib-4_99:4.1
	RISC_OSLib-4_98:4.1
	RISC_OSLib-4_97-4_12_2_6:4.1.10.1
	RISC_OSLib-4_97-4_12_2_5:4.1.10.1
	RISC_OSLib-4_97-4_12_2_4:4.1
	RISC_OSLib-4_97-4_12_2_3:4.1
	RISC_OSLib-4_97-4_12_2_2:4.1
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.1
	kbracey_32bit:4.1.0.10
	kbracey_32bit_bp:4.1
	dcotton_autobuild_BaseSW:4.5
	RISC_OSLib-4_97:4.1
	RISC_OSLib-4_96:4.1
	RISC_OSLib-4_95:4.1
	RISC_OSLib-4_94:4.1
	RISC_OSLib-4_93:4.1
	RISC_OSLib-4_92:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.1
	RISC_OSLib-4_90:4.1
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2011.10.28.14.23.42;	author bavison;	state Exp;
branches;
next	4.5;
commitid	hIG6j26y6NoxM7Fv;

4.5
date	2001.08.23.13.54.07;	author kbracey;	state Exp;
branches;
next	4.4;

4.4
date	2001.08.23.13.47.09;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	2001.04.10.12.42.05;	author sbrodie;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	2000.05.09.14.09.41;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.25.36;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.10.1;
next	;

4.3.2.1
date	2001.07.02.15.01.17;	author sbrodie;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.25.36;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.55.57;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.34.47;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.51.32;	author nturton;	state Exp;
branches;
next	;

4.1.10.1
date	99.11.22.13.27.58;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.6
log
@  File handling improvements
Detail:
  * Added 64-bit file pointer API support, following the LFS spec v1.5
    (see Docs directory). Internally, now uses 64-bit file pointers
    exclusively. For now, the backend still limits you to 4GB-1 files, but
    clients of the C library won't need recompiling again to support larger
    files than this once they use the new API.
  * Fixed a large number of warnings produced in compilation, assembly and
    linking, many of them new and resulting from the improved checks in the
    latest toolchain.
  * Increased the maximum stream buffer size from 16MB to 1GB.
  * Added Hdr:SDFS and Hdr:SDIO to the list of headers used to build swis.h
    if they are present.
Admin:
  Verified that the new 64-bit file pointer buffering code works using a
  ROM build (since the toolchain makes extensive use of reading, writing
  and seeking internally).

Version 5.64. Tagged as 'RISC_OSLib-5_64'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;/************************************************************************/
;/* © Acorn Computers Ltd, 1992.                                         */
;/*                                                                      */
;/* This file forms part of an unsupported source release of RISC_OSLib. */
;/*                                                                      */
;/* It may be freely used to create executable images for saleable       */
;/* products but cannot be sold in source form or as an object library   */
;/* without the prior written consent of Acorn Computers Ltd.            */
;/*                                                                      */
;/* If this file is re-distributed (even if modified) it should retain   */
;/* this copyright notice.                                               */
;/*                                                                      */
;/************************************************************************/

; Title  : s.poll
; Purpose: interface to wimp poll for C programs
; History: IDJ: 07-Feb-92: prepared for source release

        GBLL    ModeMayBeNonUser
ModeMayBeNonUser   SETL  {FALSE}

        GET     Hdr:ListOpts
        GET     Hdr:APCS.Common
        GET     Hdr:Macros

XWimp_Poll     * (1 :SHL: 17) :OR: &400C7
XWimp_PollIdle * (1 :SHL: 17) :OR: &400E1

        AREA |C$$code|, CODE, READONLY

|x$codeseg|

        IMPORT  |_kernel_fpavailable|
        EXPORT  wimp_poll

; os_error * wimp_poll(wimp_emask mask, wimp_eventstr * result) ;
; a1 is poll mask, a2 is pointer to event structure

wimp_poll
        FunctionEntry "v1-v2", frame
        MOV     v2, a1
        MOV     v1, a2

        BL      |_kernel_fpavailable|
        TEQ     a1, #0
        LDRNE   a1, =poll_preserve_fp
        LDRNE   a1, [a1]
        TEQNE   a1, #0
        BLNE    save_fp_state
        MOV     lr, a1

        MOV     a1, v2                    ; restore mask
        ADD     a2, v1, #4                ; point at eventstr->data
        SWI     XWimp_Poll

        SUB     a2, a2, #4                ; point back at eventstr
        STR     a1, [a2, #0]              ; set reason code
        MOVVC   a1, #0                    ; no error

        CMP     lr, #0
        BLNE    restore_fp_state

        Return  "v1-v2", "fpbased"

; os_error *wimp_pollidle(wimp_emask mask, wimp_eventstr *result, int earliest)
; a1 mask, a2 eventstr, a3 earliest

        EXPORT  wimp_pollidle
wimp_pollidle
        FunctionEntry "v1-v3", frame
        MOV     v2, a1
        MOV     v1, a2
        MOV     v3, a3

        BL      |_kernel_fpavailable|
        TEQ     a1, #0
        LDRNE   a1, =poll_preserve_fp
        LDRNE   a1, [a1]
        TEQNE   a1, #0
        BLNE    save_fp_state
        MOV     lr, a1

        MOV     a1, v2                    ; restore mask
        ADD     a2, v1, #4                ; point at eventstr->data
        MOV     a3, v3                    ; restore time
        SWI     XWimp_PollIdle

        CMP     lr, #0
        BLNE    restore_fp_state

        SUB     a2, a2, #4                ; point back at eventstr
        STR     a1, [a2, #0]              ; set reason code
        MOVVC   a1, #0                    ; no error
        Return  "v1-v3", "fpbased"

; Only f4..f7 defined preserved over procedure call
; can corrupt a2-a4
save_fp_state
        RFS     a2                      ; read FP status
        STR     a2, [sp, #-4]!
        MOV     a2, #0
        WFS     a2
        SUB     sp, sp, #4*12           ; emulated a lot faster than writeback
        STFE    f4, [sp, #0*12]
        STFE    f5, [sp, #1*12]
        STFE    f6, [sp, #2*12]
        STFE    f7, [sp, #3*12]
        MOV     pc, lr

; v1, v2 trashable
restore_fp_state
        MOV     v1, #0
        WFS     v1
        LDFE    f4, [sp, #0*12]
        LDFE    f5, [sp, #1*12]
        LDFE    f6, [sp, #2*12]
        LDFE    f7, [sp, #3*12]
        ADD     sp, sp, #4*12           ; emulated a lot faster than writeback
        LDR     v1, [sp], #4
        WFS     v1
        MOV     pc, lr

        [ :LNOT:UROM
        EXPORT  wimp_save_fp_state_on_poll
wimp_save_fp_state_on_poll
        LDR   a1, =poll_preserve_fp
        MOV   a2, #1
        STR   a2, [a1]
        MOV   pc, lr
        ]

        [ :LNOT:UROM
        EXPORT  wimp_corrupt_fp_state_on_poll
wimp_corrupt_fp_state_on_poll
        LDR   a1, =poll_preserve_fp
        MOV   a2, #0
        STR   a2, [a1]
        MOV   pc, lr
        ]

        LTORG

    AREA |C$$data|
|x$dataseg|

poll_preserve_fp  DCD  1

    END
@


4.5
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@d114 1
a114 1
        STMFD   sp!, {a2}
d133 1
a133 1
        LDMFD   sp!, {v1}
@


4.4
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@d15 13
a27 16
; > s.poll

; ****************************************************************************
; * This source file was written by Acorn Computers Limited. It is part of   *
; * the "cwimp" library for writing applications in C for RISC OS. It may be *
; * used freely in the creation of programs for Archimedes. It should be     *
; * used with Acorn's objasm assembler.                                      *
; *                                                                          *
; * No support can be given to programmers using this code and, while we     *
; * believe that it is correct, no correspondence can be entered into        *
; * concerning behaviour or bugs.                                            *
; *                                                                          *
; * Upgrades of this code may or may not appear, and while every effort will *
; * be made to keep such upgrades upwards compatible, no guarantees can be   *
; * given.                                                                   *
; ****************************************************************************
d31 1
a31 3
; Version: 0.1               created
;          0.2 SKS 22-Nov-88 made SWI Poll use X-form SWI
;              ECN 08-May-91 '#ifndefed' out unused ROM functions
@


4.3
log
@  Removed spurious GET of rlib.s.asmdefs.
Detail:
  The file no longer exists as the UROM definition is passed on the command
    line now.
Admin:
  5.29 wouldn't build because of the missing file - didn't catch it during
    testing for some reason :-(

Version 5.30. Tagged as 'RISC_OSLib-5_30'
@
text
@d41 6
a46 2
        GET     s.h_Brazil
        GET     Hdr:Wimp
@


4.3.2.1
log
@  Merge of multiple versions of RISC_OSLib.
Detail:
  This work may be incomplete - hence import on a branch.
  It has NOT been tested.
Admin:
  Might even build.


Version 5.33, 4.50.2.1. Tagged as 'RISC_OSLib-5_33-4_50_2_1'
@
text
@d15 16
a30 13
;/************************************************************************/
;/* © Acorn Computers Ltd, 1992.                                         */
;/*                                                                      */
;/* This file forms part of an unsupported source release of RISC_OSLib. */
;/*                                                                      */
;/* It may be freely used to create executable images for saleable       */
;/* products but cannot be sold in source form or as an object library   */
;/* without the prior written consent of Acorn Computers Ltd.            */
;/*                                                                      */
;/* If this file is re-distributed (even if modified) it should retain   */
;/* this copyright notice.                                               */
;/*                                                                      */
;/************************************************************************/
d34 3
a36 1
; History: IDJ: 07-Feb-92: prepared for source release
a40 1
        GET     rlib.s.asmdefs
@


4.2
log
@32-bit work merged from kbracey_32bit branch.

Version 5.06. Tagged as 'RISC_OSLib-5_06'
@
text
@a40 1
        GET     rlib.s.asmdefs
@


4.1
log
@Initial revision
@
text
@d38 2
a39 26
a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lk RN 14
lr RN 14
pc RN 15

f0 FN 0
f1 FN 1
f2 FN 2
f3 FN 3
f4 FN 4
f5 FN 5
f6 FN 6
f7 FN 7
d41 3
a43 4
XPoll     * (1 :SHL: 17) :OR: &400C7
XPollIdle * (1 :SHL: 17) :OR: &400E1

        GET  rlib.s.asmdefs
d56 1
a56 3
        MOV     ip, sp
        STMFD   sp!, {v1,v2,fp,ip,lk,pc}
        SUB     fp, ip, #4
d60 5
a64 5
        LDR     a1, =poll_preserve_fp
        LDR     a1, [a1]
        CMP     a1, #0
        BLNE    |_kernel_fpavailable|
        CMPNE   a1, #0
d66 1
a66 1
        MOV     lk, a1
d70 1
a70 1
        SWI     XPoll
d76 1
a76 1
        CMP     lk, #0
d79 1
a79 2
        LDMEA   fp, {v1,v2,fp,sp,pc}^

d86 1
a86 3
        MOV     ip, sp
        STMFD   sp!, {v1,v2,v3,fp,ip,lk,pc}
        SUB     fp, ip, #4
d91 5
a95 5
        LDR     a1, =poll_preserve_fp
        LDR     a1, [a1]
        CMP     a1, #0
        BLNE    |_kernel_fpavailable|
        CMPNE   a1, #0
d97 1
a97 1
        MOV     lk, a1
d102 1
a102 1
        SWI     XPollIdle
d104 1
a104 1
        CMP     lk, #0
d110 1
a110 1
        LDMEA   fp, {v1,v2,v3,fp,sp,pc}^
d124 1
a124 1
        MOVS    pc, lr
d137 1
a137 1
        MOVS    pc, lr
d145 1
a145 1
        MOVS  pc, lr
d154 1
a154 1
        MOVS  pc, lr
@


4.1.10.1
log
@  Work in progress.  Do not use.
Detail:
  Many changes to use the APCS macros for function entry and exit so
    that the code can build for 32-bit environments.  Changes are NOT
    yet complete.
  Makefile rebuilds swis.h header file but only exports it if it has
    changed to avoid unnecessary rebuilding of nearly all C sources
    in a build.
Admin:
  Work in progress.  Do not use.

Version 4.97, 4.12.2.5. Tagged as 'RISC_OSLib-4_97-4_12_2_5'
@
text
@d38 26
a63 2
        GBLL    ModeMayBeNonUser
ModeMayBeNonUser   SETL  {FALSE}
d65 4
a68 3
        GET     rlib.s.asmdefs
        GET     s.h_Brazil
        GET     Hdr:Wimp
d81 3
a83 1
        FunctionEntry "v1-v2", frame
d87 5
a91 5
        BL      |_kernel_fpavailable|
        TEQ     a1, #0
        LDRNE   a1, =poll_preserve_fp
        LDRNE   a1, [a1]
        TEQNE   a1, #0
d93 1
a93 1
        MOV     lr, a1
d97 1
a97 1
        SWI     XWimp_Poll
d103 1
a103 1
        CMP     lr, #0
d106 2
a107 1
        Return  "v1-v2", "fpbased"
d114 3
a116 1
        FunctionEntry "v1-v3", frame
d121 5
a125 5
        BL      |_kernel_fpavailable|
        TEQ     a1, #0
        LDRNE   a1, =poll_preserve_fp
        LDRNE   a1, [a1]
        TEQNE   a1, #0
d127 1
a127 1
        MOV     lr, a1
d132 1
a132 1
        SWI     XWimp_PollIdle
d134 1
a134 1
        CMP     lr, #0
d140 1
a140 1
        Return  "v1-v3", "fpbased"
d154 1
a154 1
        MOV     pc, lr
d167 1
a167 1
        MOV     pc, lr
d175 1
a175 1
        MOV   pc, lr
d184 1
a184 1
        MOV   pc, lr
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
