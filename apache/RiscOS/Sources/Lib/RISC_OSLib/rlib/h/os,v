head	4.1;
access;
symbols
	RISC_OSLib-5_97:4.1
	RISC_OSLib-5_96:4.1
	RISC_OSLib-5_95:4.1
	RISC_OSLib-5_94:4.1
	RISC_OSLib-5_93:4.1
	RISC_OSLib-5_92:4.1
	RISC_OSLib-5_91:4.1
	RISC_OSLib-5_90:4.1
	RISC_OSLib-5_89:4.1
	RISC_OSLib-5_88:4.1
	RISC_OSLib-5_87:4.1
	RISC_OSLib-5_86-1:4.1
	RISC_OSLib-5_86:4.1
	RISC_OSLib-5_85:4.1
	RISC_OSLib-5_84:4.1
	RISC_OSLib-5_83-2:4.1
	RISC_OSLib-5_83-1:4.1
	RISC_OSLib-5_83:4.1
	RISC_OSLib-5_82:4.1
	RISC_OSLib-5_81:4.1
	RISC_OSLib-5_75-2:4.1
	RISC_OSLib-5_80:4.1
	RISC_OSLib-5_79:4.1
	RISC_OSLib-5_78:4.1
	RISC_OSLib-5_75-1:4.1
	RISC_OSLib-5_77:4.1
	RISC_OSLib-5_76:4.1
	RISC_OSLib-5_75:4.1
	RISC_OSLib-5_74:4.1
	RISC_OSLib-5_73:4.1
	RISC_OSLib-5_72:4.1
	RISC_OSLib-5_71:4.1
	RISC_OSLib-5_70:4.1
	RISC_OSLib-5_69:4.1
	RISC_OSLib-5_68:4.1
	RISC_OSLib-5_67:4.1
	RISC_OSLib-5_66:4.1
	RISC_OSLib-5_65:4.1
	RISC_OSLib-5_64:4.1
	RISC_OSLib-5_63:4.1
	RISC_OSLib-5_62:4.1
	RISC_OSLib-5_61:4.1
	RISC_OSLib-5_60:4.1
	RISC_OSLib-5_59:4.1
	RISC_OSLib-5_58:4.1
	RISC_OSLib-5_57:4.1
	RISC_OSLib-5_56:4.1
	RISC_OSLib-5_55:4.1
	RISC_OSLib-5_54:4.1
	RISC_OSLib-5_53:4.1
	RISC_OSLib-5_52:4.1
	RISC_OSLib-5_51:4.1
	RO_5_07:4.1
	RISC_OSLib-5_50:4.1
	RISC_OSLib-5_49:4.1
	RISC_OSLib-5_46-4_64_2_1:4.1
	NoInlineAsm:4.1.0.16
	RISC_OSLib-5_48:4.1
	RISC_OSLib-5_47:4.1
	RISC_OSLib-5_46:4.1
	RISC_OSLib-5_45:4.1
	RISC_OSLib-5_44:4.1
	RISC_OSLib-5_43:4.1
	RISC_OSLib-5_42:4.1
	RISC_OSLib-5_41:4.1
	RISC_OSLib-5_40:4.1
	RISC_OSLib-5_39:4.1
	RISC_OSLib-5_38:4.1
	RISC_OSLib-5_37:4.1
	RISC_OSLib-5_36:4.1
	RISC_OSLib-5_35:4.1
	RISC_OSLib-5_34:4.1
	RISC_OSLib-5_33-4_50_2_1:4.1
	sbrodie_dev:4.1.0.14
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_01-4_16_2_5:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_01-4_16_2_4:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_01-4_16_2_3:4.1
	RISC_OSLib-5_01-4_16_2_2:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_01-4_16_2_1:4.1
	Bethany:4.1.0.12
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-4_97-4_12_2_8:4.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	RISC_OSLib-5_03:4.1
	RISC_OSLib-5_02:4.1
	RISC_OSLib-4_97-4_12_2_7:4.1
	RISC_OSLib-5_01:4.1
	RISC_OSLib-5_00:4.1
	RISC_OSLib-4_99:4.1
	RISC_OSLib-4_98:4.1
	RISC_OSLib-4_97-4_12_2_6:4.1
	RISC_OSLib-4_97-4_12_2_5:4.1
	RISC_OSLib-4_97-4_12_2_4:4.1
	RISC_OSLib-4_97-4_12_2_3:4.1
	RISC_OSLib-4_97-4_12_2_2:4.1
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.1
	kbracey_32bit:4.1.0.10
	kbracey_32bit_bp:4.1
	dcotton_autobuild_BaseSW:4.1
	RISC_OSLib-4_97:4.1
	RISC_OSLib-4_96:4.1
	RISC_OSLib-4_95:4.1
	RISC_OSLib-4_94:4.1
	RISC_OSLib-4_93:4.1
	RISC_OSLib-4_92:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.1
	RISC_OSLib-4_90:4.1
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.25.26;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.25.26;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.55.03;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.33.05;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.50.44;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the RISCOS library for writing applications in C for RISC OS. It may be  *
 * used freely in the creation of programs for Archimedes. It should be     *
 * used with Acorn's C Compiler Release 3 or later.                         *
 *                                                                          *
 ***************************************************************************/

/*
 * Title  : os.h
 * Purpose: provides general access to low-level RISC OS routines         
 *        
 */

/*
 * This file is provided as an alternative to kernel.h
 * It provides low-level access to RISC OS.
 * 
 */

# ifndef __os_h
# define __os_h

#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef BOOL
#define BOOL int
#define TRUE 1
#define FALSE 0
#endif

typedef struct {
        int r[10];               /* only r0 - r9 matter for SWIs */
} os_regset;

typedef _kernel_oserror os_error;

/*
 * os_error * functions return a pointer to an error if it has occurred,
 * otherwise return NULL (0)
 */
   
/* -------------------------------- os_swi ---------------------------------
 * Perform the given SWI instruction, with the given registers loaded.
 * An error results in a RISC OS error being raised.
 * A NULL regset pointer means that no inout parameters are used
 *
 */
#define os_swi(swicode, regs) \
        (((swicode) & (1 << 17)) ? \
                (void)os_swix((swicode) & ~(1 << 17), regs) : \
                os_swi(swicode, regs))
void (os_swi)(int swicode, os_regset *regs);
 

#define os_X (0x00020000)

/* ------------------------------- os_swix ---------------------------------
 * Perform the given SWI instruction, with the given registers loaded.
 * Calls returning os_error* use the X form of the relevant SWI. If an error
 * is returned then the os_error should be copied before further system calls
 * are made. If no error occurs then NULL is returned.
 *
 */

os_error *os_swix(int swicode, os_regset *regs);




/* Important note: if swicode does not have the X bit set, then os_swi is
 * called
 * and these functions return NULL (regardless of whether an error was 
 * raised); please try to use X bit set swicodes to save confusion.
 *
 */


/* 
 * SWIs with varying numbers of arguments and results. NULL result pointers
 * mean that the result from that register is not required. The swi codes can
 * be of the X form if required, as specified by swicode.
 *
 */
#define os_swi0(swicode) \
        (((swicode) & (1 << 17)) ? \
                os_swix0((swicode) & ~(1 << 17)) : \
                os_swi0(swicode))
os_error *(os_swi0)(int swicode); /* zero arguments and results */
#define os_swi1(swicode, a) \
        (((swicode) & (1 << 17)) ? \
                os_swix1((swicode) & ~(1 << 17), a) : \
                os_swi1(swicode, a))
os_error *(os_swi1)(int swicode, ...);
#define os_swi2(swicode, a, b) \
        (((swicode) & (1 << 17)) ? \
                os_swix2((swicode) & ~(1 << 17), a, b) : \
                os_swi2(swicode, a, b))
os_error *(os_swi2)(int swicode, ...);
#define os_swi3(swicode, a, b, c) \
        (((swicode) & (1 << 17)) ? \
                os_swix3((swicode) & ~(1 << 17), a, b, c) : \
                os_swi3(swicode, a, b, c))
os_error *(os_swi3)(int swicode, ...);
#define os_swi4(swicode, a, b, c, d) \
        (((swicode) & (1 << 17)) ? \
                os_swix4((swicode) & ~(1 << 17), a, b, c, d) : \
                os_swi4(swicode, a, b, c, d))
os_error *(os_swi4)(int swicode, ...);
#define os_swi5(swicode, a, b, c, d, e) \
        (((swicode) & (1 << 17)) ? \
                os_swix5((swicode) & ~(1 << 17), a, b, c, d, e) : \
                os_swi5(swicode, a, b, c, d, e))
os_error *(os_swi5)(int swicode, ...);
#define os_swi6(swicode, a, b, c, d, e, f) \
        (((swicode) & (1 << 17)) ? \
                os_swix6((swicode) & ~(1 << 17), a, b, c, d, e, f) : \
                os_swi6(swicode, a, b, c, d, e, f))
os_error *(os_swi6)(int swicode, ...);

#define os_swi1r(swicode, a, b) \
        (((swicode) & (1 << 17)) ? \
                os_swix1r((swicode) & ~(1 << 17), a, b) : \
                os_swi1r(swicode, a, b))
os_error *(os_swi1r)(int swicode, ...);
#define os_swi2r(swicode, a, b, c, d) \
        (((swicode) & (1 << 17)) ? \
                os_swix2r((swicode) & ~(1 << 17), a, b, c, d) : \
                os_swi2r(swicode, a, b, c, d))
os_error *(os_swi2r)(int swicode, ...);
#define os_swi3r(swicode, a, b, c, d, e, f) \
        (((swicode) & (1 << 17)) ? \
                os_swix3r((swicode) & ~(1 << 17), a, b, c, d, e, f) : \
                os_swi3r(swicode, a, b, c, d, e, f))
os_error *(os_swi3r)(int swicode, ...);
#define os_swi4r(swicode, a, b, c, d, e, f, g, h) \
        (((swicode) & (1 << 17)) ? \
                os_swix4r((swicode) & ~(1 << 17), a, b, c, d, e, f, g, h) : \
                os_swi4r(swicode, a, b, c, d, e, f, g, h))
os_error *(os_swi4r)(int swicode, ...);
#define os_swi5r(swicode, a, b, c, d, e, f, g, h, i, j) \
        (((swicode) & (1 << 17)) ? \
                os_swix5r((swicode) & ~(1 << 17), a,b,c,d,e,f,g,h,i,j) : \
                os_swi5r(swicode, a,b,c,d,e,f,g,h,i,j))
os_error *(os_swi5r)(int swicode, ...);
#define os_swi6r(swicode, a, b, c, d, e, f, g, h, i, j, k, l) \
        (((swicode) & (1 << 17)) ? \
                os_swix6r((swicode) & ~(1 << 17),a,b,c,d,e,f,g,h,i,j,k,l) : \
                os_swi6r(swicode, a,b,c,d,e,f,g,h,i,j,k,l))
os_error *(os_swi6r)(int swicode, ...);

os_error *os_swix0(int swicode); /* zero arguments and results */
os_error *os_swix1(int swicode, ...);
os_error *os_swix2(int swicode, ...);
os_error *os_swix3(int swicode, ...);
os_error *os_swix4(int swicode, ...);
os_error *os_swix5(int swicode, ...);
os_error *os_swix6(int swicode, ...);

os_error *os_swix1r(int swicode, ...);
os_error *os_swix2r(int swicode, ...);
os_error *os_swix3r(int swicode, ...);
os_error *os_swix4r(int swicode, ...);
os_error *os_swix5r(int swicode, ...);
os_error *os_swix6r(int swicode, ...);

/* ------------------------------- os_byte ---------------------------------
 * Perform an OS_Byte SWIx, with x and y passed in register r1 and r2
 * respectively.
 *
 */

os_error *os_byte(int a, int *x /*inout*/, int *y /*inout*/);


/* ------------------------------- os_word ---------------------------------
 * Perform an OS_Word SWIx, with operation number given in "wordcode" and 
 * "p" pointing at necessary parameters to be passed in r1
 *
 */

os_error *os_word(int wordcode, void *p);

typedef struct {
        int action;             /* specifies action of osgbpb */
        int file_handle;        /* file handle, but may be used as a char *
                                 * pointing to wildcarded dir-name */
        void *data_addr;        /* memory address of data */
        int number, seq_point, buf_len;
        char *wild_fld;         /* points to wildcarded filename to match */
        int reserved[3];        /* space to allow treatment as reg_block */
} os_gbpbstr;


/* -------------------------------- os_gbpb --------------------------------
 * Perform an OS_GBPB SWI. os_gbpbstr should be used like an os_regset.
 *
 */

os_error *os_gbpb(os_gbpbstr*);

typedef struct {
        int action;             /* action or object type if output data */
        char * name;            /* pointer to filename or pathname */
        int loadaddr, execaddr; /* load, exec addresses */
        int start, end;         /* start address/length, end add./attributes */
        int reserved[4];        /* space to allow treatment as reg_block */
} os_filestr;


/* -------------------------------- os_file --------------------------------
 * Perform an OS_FILE SWI.
 *
 */

os_error *os_file(os_filestr*);


/* ------------------------------- os_args ---------------------------------
 * Perform an OS_Args SWI.
 *
 */

os_error *os_args(os_regset*);


/* ------------------------------ os_find ----------------------------------
 * Perform an OS_Find SWI.
 *
 */

os_error *os_find(os_regset*);


/* ------------------------------ os_cli -----------------------------------
 * Perform an OS_CLI SWI.
 *
 */

os_error *os_cli(char *cmd);


/* ------------------------------ os_read_var_val --------------------------
 * reads a named environment variable into a given buffer (of size "bufsize")
 * If variable doesn't exist then buf points at a null string.
 */

void os_read_var_val(char *name, char *buf /*out*/, int bufsize);


# endif

/* end of os.h */
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
