head	4.2;
access;
symbols
	RISC_OSLib-5_54:4.1
	RISC_OSLib-5_53:4.1
	RISC_OSLib-5_52:4.1
	RISC_OSLib-5_51:4.1
	RO_5_07:4.1
	RISC_OSLib-5_50:4.1
	RISC_OSLib-5_49:4.1
	RISC_OSLib-5_46-4_64_2_1:4.1
	NoInlineAsm:4.1.0.16
	RISC_OSLib-5_48:4.1
	RISC_OSLib-5_47:4.1
	RISC_OSLib-5_46:4.1
	RISC_OSLib-5_45:4.1
	RISC_OSLib-5_44:4.1
	RISC_OSLib-5_43:4.1
	RISC_OSLib-5_42:4.1
	RISC_OSLib-5_41:4.1
	RISC_OSLib-5_40:4.1
	RISC_OSLib-5_39:4.1
	RISC_OSLib-5_38:4.1
	RISC_OSLib-5_37:4.1
	RISC_OSLib-5_36:4.1
	RISC_OSLib-5_35:4.1
	RISC_OSLib-5_34:4.1
	RISC_OSLib-5_33-4_50_2_1:4.1
	sbrodie_dev:4.1.0.14
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_01-4_16_2_5:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_01-4_16_2_4:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_01-4_16_2_3:4.1
	RISC_OSLib-5_01-4_16_2_2:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_01-4_16_2_1:4.1
	Bethany:4.1.0.12
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-4_97-4_12_2_8:4.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	RISC_OSLib-5_03:4.1
	RISC_OSLib-5_02:4.1
	RISC_OSLib-4_97-4_12_2_7:4.1
	RISC_OSLib-5_01:4.1
	RISC_OSLib-5_00:4.1
	RISC_OSLib-4_99:4.1
	RISC_OSLib-4_98:4.1
	RISC_OSLib-4_97-4_12_2_6:4.1
	RISC_OSLib-4_97-4_12_2_5:4.1
	RISC_OSLib-4_97-4_12_2_4:4.1
	RISC_OSLib-4_97-4_12_2_3:4.1
	RISC_OSLib-4_97-4_12_2_2:4.1
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.1
	kbracey_32bit:4.1.0.10
	kbracey_32bit_bp:4.1
	dcotton_autobuild_BaseSW:4.1
	RISC_OSLib-4_97:4.1
	RISC_OSLib-4_96:4.1
	RISC_OSLib-4_95:4.1
	RISC_OSLib-4_94:4.1
	RISC_OSLib-4_93:4.1
	RISC_OSLib-4_92:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.1
	RISC_OSLib-4_90:4.1
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2009.05.31.17.32.24;	author pnaulls;	state dead;
branches;
next	4.1;

4.1
date	96.11.05.09.25.31;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.25.31;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.55.30;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.34.00;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.51.08;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Rationalize C include path usage
 Detail:
  Parts of RISCOS_Lib use non-standard paths that only really work on native RISC OS compilitation.
  This moves the relevant files into a more normalized dir.h.file format.
 Admin:
  Not tested yet.  #include path changes to follow.

Version 5.54. Not tagged
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the "DrawFile" library for rendering RISCOS Draw files from applications *
 * in C. It may be used freely in the creation of programs for Archimedes.  *
 * It should be used with Acorn's C Compiler Release 2 or later.            *
 *                                                                          *
 * No support can be given to programmers using this code and, while we     *
 * believe that it is correct, no correspondence can be entered into        *
 * concerning behaviour or bugs.                                            *
 *                                                                          *
 * Upgrades of this code may or may not appear, and while every effort will *
 * be made to keep such upgrades upwards compatible, no guarantees can be   *
 * given.                                                                   *
 ***************************************************************************/

/* -> h.DrawFile1 : general internal header for DrawFile module
 *
 * History:
 * Version 0.0: 22 Nov 88, DAHE: created
 * Version 0.1: 23 Nov 88, DAHE: first working version
 * Version 0.2: 15 Feb 89, DAHE: merged with stubs of other Draw headers
 *
 * Intended only to be included by the DrawFile code itself, not by clients
 * of the module.
 *
 * Header defining object types and some functions - normally to be included
 * before DrawLevel0 and DrawLevel1, if they are present.
 */

/* Macros for setting errors */
#define DrawFile_Error(Code, Location) {error->type=DrawOwnError; \
 error->err.draw.code=Code;error->err.draw.location=Location;}

#define DrawFile_OSError(error, Err) \
  {error->type=DrawOSError;error->err.os=Err;}

/*============================================================================*/

/* The following part of the file is extracted from h.draw. */


#define majorformatversionstamp 201
#define minorformatversionstamp 0

/* Macros for converting between units, for text */
#define draw_pointsToDraw(pp)  ((pp) * 640)
#define draw_pointsToFont(pp)  ((pp) * 1000)
#define draw_drawToFont(xx)    ((25 * (xx)) / 16)
#define draw_fontToDraw(xx)    ((16 * (xx)) / 25)
#define draw_fontToOS(xx)      ((xx) / 400)

#define TRANSPARENT 0xFFFFFFFF  /* Special, all other colours are */

/* Draw module SWI numbers */
#ifndef Draw_Fill
#define Draw_Fill          0x00060702     /* XDraw_Fill        */
#endif
#ifndef Draw_Stroke
#define Draw_Stroke        0x00060704     /* XDraw_Stroke      */
#endif

typedef int draw_sizetyp;
typedef struct { int x0,y0, x1,y1; } draw_bboxtyp;
typedef int draw_coltyp;
typedef int draw_pathwidth;   /* 1 word */


typedef unsigned char /*enum*/
/*{ join_mitred   = 0,****** @@@@@@ IDJ 5-7-89 type change ***
  join_round    = 1,
  join_bevelled = 2
} */draw_jointyp;

typedef unsigned char /*enum
{ cap_butt     = 0,
  cap_round    = 1,
  cap_square   = 2,
  cap_triangle = 3
} */draw_captyp;

typedef enum
{ wind_nonzero = 0,
  wind_evenodd = 1
} draw_windtyp;

typedef enum
{ dash_absent  = 0,
  dash_present = 1
} draw_dashtyp;

#define packmask_join     0x03
#define packmask_endcap   0x0C
#define packmask_startcap 0x30
#define packmask_windrule 0x40
#define packmask_dashed   0x80
#define packshft_join        0
#define packshft_endcap      2
#define packshft_startcap    4
#define packshft_windrule    6
#define packshft_dashed      7


typedef struct
{ unsigned char joincapwind;       /* 1 byte  */ /* bit 0..1 join         */
                                                 /* bit 2..3 end cap      */
                                                 /* bit 4..5 start cap    */
                                                 /* bit 6    winding rule */
                                                 /* bit 7    dashed       */
  unsigned char reserved8;         /* 1 byte  */
  unsigned char tricapwid;         /* 1 byte  */ /* 1/16th of line width */
  unsigned char tricaphei;         /* 1 byte  */ /* 1/16th of line width */
} draw_pathstyle;


typedef char draw_fontref;    /* 1 byte */


typedef struct
{ draw_fontref fontref;             /* 1 byte  */
  char         reserved8;           /* 1 byte  */
  short        reserved16;          /* 2 bytes */
} draw_textstyle;   /* 1 word */

typedef unsigned int draw_fontsize;  /* 4 bytes, unsigned */

typedef int coord;

typedef struct
{ int typeface;     /* index into fontname table */
  int typesizex;
  int typesizey;
  draw_coltyp textcolour;    /* text colour RGB */
  draw_coltyp background;    /* hint for anti-aliased printing RGB */
} fontrec;

typedef enum
{ draw_OBJFONTLIST = 0,
  draw_OBJTEXT     = 1,
  draw_OBJPATH     = 2,
/*draw_OBJRECT     = 3,*/
/*draw_OBJELLI     = 4,*/
  draw_OBJSPRITE   = 5,
  draw_OBJGROUP    = 6,
  draw_OBJTAGG     = 7, 
  draw_OBJTEXTAREA = 9,
  draw_OBJTEXTCOL  = 10
} draw_tagtyp;

typedef struct { int x,y; } draw_objcoord;

/* ------------------------------------------------------------------------- */
/*                                                                           */
/* File header                                                               */
/*                                                                           */

typedef struct
{ char title[4];
  int  majorstamp;
  int  minorstamp;
  char progident[12];
  draw_bboxtyp   bbox;      /* 4 words */
} draw_fileheader;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* General header for graphic objects - on other objects, tag & size exist   */
/*                                      other fields are unused and may not  */
/*                                                                           */

typedef struct
{ draw_tagtyp    tag;       /* 1 word  */
  draw_sizetyp   size;      /* 1 word  */
  draw_bboxtyp   bbox;      /* 4 words */
} draw_objhdr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A font list                                                               */
/*                                                                           */

typedef struct
{ draw_tagtyp    tag;       /* 1 word  */
  draw_sizetyp   size;      /* 1 word  */
} draw_fontliststrhdr;

typedef struct
{ draw_tagtyp    tag;       /* 1 word  */
  draw_sizetyp   size;      /* 1 word  */

  draw_fontref   fontref;
  char           fontname[1];   /* String, null terminated */
} draw_fontliststr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A line of text                                                            */
/*                                                                           */

typedef struct
{ draw_tagtyp    tag;        /* 1 word  */
  draw_sizetyp   size;       /* 1 word  */
  draw_bboxtyp   bbox;       /* 4 words */
  draw_coltyp    textcolour; /* 1 word  */
  draw_coltyp    background; /* 1 word  */
  draw_textstyle textstyle;  /* 1 word  */
  draw_fontsize  fsizex;     /* 1 word, unsigned */
  draw_fontsize  fsizey;     /* 1 word, unsigned */
  draw_objcoord  coord;      /* 2 words */
} draw_textstrhdr;

typedef struct
{ draw_tagtyp    tag;        /* 1 word  */
  draw_sizetyp   size;       /* 1 word  */
  draw_bboxtyp   bbox;       /* 4 words */
  draw_coltyp    textcolour; /* 1 word  */
  draw_coltyp    background; /* 1 word  */
  draw_textstyle textstyle;  /* 1 word  */
  draw_fontsize  fsizex;     /* 1 word, unsigned */
  draw_fontsize  fsizey;     /* 1 word, unsigned */
  draw_objcoord  coord;      /* 2 words */

  char           text[1];   /* String, null terminated */
} draw_textstr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* Elements within a path                                                    */
/*                                                                           */

typedef enum
 { Draw_PathTERM  = 0,     /* end of path                                   */
   Draw_PathMOVE  = 2,     /* move to (x,y), starts new subpath             */
   Draw_PathLINE  = 8,     /* line to (x,y)                                 */
   Draw_PathCURVE = 6,     /* bezier curve to (x3,y3) with 2 control points */
   Draw_PathCLOSE = 5      /* close current subpath with a line             */
} draw_path_tagvalue;


typedef struct
{ unsigned char tag;          /* 1 byte  */   /* of draw_path_tagvalue */
  char          reserved8;    /* 1 byte  */
  short         reserved16;   /* 2 bytes */
} draw_path_tagtype;


typedef struct { draw_path_tagtype tag; int x,y; } path_movestr;

typedef struct { draw_path_tagtype tag; int x,y; } path_linestr;

typedef struct { draw_path_tagtype tag; int x1,y1;
                                        int x2,y2; int x3,y3; } path_curvestr;

typedef struct { draw_path_tagtype tag; } path_closestr;

typedef struct { draw_path_tagtype tag; } path_termstr;

typedef union           /* Use ONLY for space checking purposes */
{ path_movestr a;path_linestr b;path_curvestr c;path_closestr d;path_termstr e;
} largest_path_str;


typedef union
{ path_movestr  *move;
  path_linestr  *line;
  path_curvestr *curve;
  path_closestr *close;
  path_termstr  *term;

  char *bytep;
  int  *wordp;
} path_eleptr;



/* ------------------------------------------------------------------------- */
/*                                                                           */
/* Optional dashpattern                                                      */
/*                                                                           */

typedef struct
{ int dashstart;       /* 1 word */           /* distance into pattern */
  int dashcount;       /* 1 word */           /* number of elements    */
} draw_dashstrhdr;

typedef struct
{ int dashstart;       /* 1 word */           /* distance into pattern */
  int dashcount;       /* 1 word */           /* number of elements    */
  int dashelements[6]; /* dashcount words */  /* elements of pattern   */
} draw_dashstr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* Unpacked joint,start cap,end cap structure - as fed to draw_stroke etc    */
/*                                                                           */

typedef struct
{ char join;
  char endcap;
  char startcap;
  char reserved;  /* must be zero */
  int  mitrelimit;
  short endtricapwid;
  short endtricaphei;
  short starttricapwid;
  short starttricaphei;
} draw_jointspec;


typedef struct
{ draw_pathwidth linewidth;
  draw_coltyp    linecolour;
  draw_coltyp    fillcolour;

  draw_dashstr* pattern;
  draw_jointyp  join;       /* 1 byte  */
  draw_captyp   endcap;     /* 1 byte  */
  draw_captyp   startcap;   /* 1 byte  */
  draw_windtyp  windrule;   /* 1 byte  */
  int           tricapwid;
  int           tricaphei;
} pathrec;



/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A path                                                                    */
/*                                                                           */

typedef struct
{ draw_tagtyp    tag;        /* 1 word  */
  draw_sizetyp   size;       /* 1 word  */
  draw_bboxtyp   bbox;       /* 4 words */
  draw_coltyp    fillcolour; /* 1 word  */
  draw_coltyp    pathcolour; /* 1 word  */
  draw_pathwidth pathwidth;  /* 1 word  */
  draw_pathstyle pathstyle;  /* 1 word  */
} draw_pathstrhdr;

typedef struct
{ draw_tagtyp    tag;        /* 1 word  */
  draw_sizetyp   size;       /* 1 word  */
  draw_bboxtyp   bbox;       /* 4 words */
  draw_coltyp    fillcolour; /* 1 word  */
  draw_coltyp    pathcolour; /* 1 word  */
  draw_pathwidth pathwidth;  /* 1 word  */
  draw_pathstyle pathstyle;  /* 1 word  */

  draw_dashstr data;      /* optional dash pattern, then path elements */
 int PATH;
} draw_pathstr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A rectangle T.B.A                                                         */
/*                                                                           */


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* An ellipse T.B.A                                                          */
/*                                                                           */


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A sprite                                                                  */
/*                                                                           */

typedef struct
{ draw_tagtyp    tag;       /* 1 word  */  /* NB fileIO_xxx routines assume  */
  draw_sizetyp   size;      /* 1 word  */  /*    a draw_spristrhdr is all    */
  draw_bboxtyp   bbox;      /* 4 words */  /*    that needs adding to change */
} draw_spristrhdr;

typedef struct
{ draw_tagtyp    tag;       /* 1 word  */
  draw_sizetyp   size;      /* 1 word  */
  draw_bboxtyp   bbox;      /* 4 words */
  sprite_header  sprite;
  int            palette[1]; /* depends on sprite.mode (or not present) */
} draw_spristr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A grouping                                                                */
/*                                                                           */

typedef struct { char ch[12]; } draw_groupnametyp;  /* 12 bytes */

typedef struct
{ draw_tagtyp       tag;   /* 1 word   */
  draw_sizetyp      size;  /* 1 word   */
  draw_bboxtyp      bbox;  /* 4 words  */
  draw_groupnametyp name;  /* 12 bytes */
} draw_groustr;

/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A tagged object T.B.A                                                     */
/*                                                                           */

typedef struct
{ draw_tagtyp    tag;       /* 1 word  */  /* NB fileIO_xxx routines assume  */
  draw_sizetyp   size;      /* 1 word  */  /*    a draw_spristrhdr is all    */
  draw_bboxtyp   bbox;      /* 4 words */  /*    that needs adding to change */
} draw_taggstrhdr;

typedef struct
{ draw_tagtyp    tag;       /* 1 word  */
  draw_sizetyp   size;      /* 1 word  */
  draw_bboxtyp   bbox;      /* 4 words */
} draw_taggstr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A text column                                                             */
/*                                                                           */
/* These only appear nested within a text area                               */

typedef struct
{ draw_tagtyp    tag;        /* 1 word  */
  draw_sizetyp   size;       /* 1 word  */
  draw_bboxtyp   bbox;       /* 4 words */
} draw_textcolhdr;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A text area object (new style)                                            */
/*                                                                           */
/*                                                                           */

typedef struct
{ draw_tagtyp    tag;        /* 1 word  */
  draw_sizetyp   size;       /* 1 word  */
  draw_bboxtyp   bbox;       /* 4 words */
  draw_textcolhdr column;    /* Hook for pointing to text columns */
} draw_textareastrhdr;

typedef struct
{ draw_tagtyp    tag;        /* 1 word  */
  draw_sizetyp   size;       /* 1 word  */
  draw_bboxtyp   bbox;       /* 4 words */
  /* Text columns go in here */
} draw_textareahdr;

/* End structure - follows all the column */
typedef struct               /* Structure for getting size */
{
  int            endmark;    /* 1 word, always 0 */
  int            blank1;     /* 1 word, reserved for future expansion */
  int            blank2;     /* 1 word, reserved for future expansion */
  draw_coltyp    textcolour; /* 1 word */
  draw_coltyp    backcolour; /* 1 word */
  /* String goes in here */
} draw_textareastrend;

typedef struct
{
  int            endmark;    /* 1 word, always 0 */
  int            blank1;     /* 1 word, reserved for future expansion */
  int            blank2;     /* 1 word, reserved for future expansion */
  draw_coltyp    textcolour; /* 1 word */
  draw_coltyp    backcolour; /* 1 word */
  char           text[1];    /* String, null terminated */
} draw_textareaend;


/* ------------------------------------------------------------------------- */
/*                                                                           */
/* A type that can point at any object or its sub-components                 */
/*                                                                           */

typedef union
{ draw_objhdr         *objhdrp;

  draw_fileheader     *filehdrp;

  draw_fontliststrhdr *fontlisthdrp;
  draw_textstrhdr     *texthdrp;
  draw_pathstrhdr     *pathhdrp;
  draw_spristrhdr     *spritehdrp;
  draw_taggstrhdr     *tagghdrp;
  draw_textareastrhdr *textareastrp;
  draw_textareastrend *textareastrendp;

  draw_fontliststr    *fontlistp;
  draw_textstr        *textp;
  draw_pathstr        *pathp;
  draw_spristr        *spritep;
  draw_groustr        *groupp;
  draw_taggstr        *taggp;
  draw_textareahdr    *textareap;
  draw_textareaend    *textareaendp;
  draw_textcolhdr     *textcolp;

  draw_objcoord   *coordp;      /* ? is this used ? */

  char *bytep;
  int  *wordp;
} draw_objptr;


typedef struct      /* cached values read by bbc_vduvars, so ordering */ 
                    /* is important, see cache_currentmodevars        */      
{
  int gcharaltered; /* flag set if ArcDraw changes the system font size */

  int gcharsizex;   /* if so, restore from here */  /* first cached value */
  int gcharsizey;
  int gcharspacex;
  int gcharspacey;
 
  int ncolour;
  int xeigfactor;
  int yeigfactor;                                   /* last cached value  */

  int pixsizex;     /* in dBase coords, ie 0x100 << xeigfactor */
  int pixsizey;     /* in dBase coords, ie 0x100 << yeigfactor */
} currentmodestr;

extern currentmodestr currentmode;

path_movestr *address_pathstart(draw_objptr hdrptr);
draw_dashstr *address_dashstart(draw_objptr hdrptr);

#define scaledown(A) ((int)((double)((A)<<8)/(scalefactor)))

/*============================================================================*/

/* The following part of the file is extracted from h.drawDispl. */

extern double dr_scalefactor;

void note_fontcat(draw_objptr hdrptr);

/*============================================================================*/

/* The following part of the file is extracted from h.drawMenu. */

typedef struct
{ int menu_size;        /* Number found on start up                        */
  int list_size;        /* Same or includes extra found from file fontlist */
  char* name[256];      /* Space for names is malloced, so it won't move   */
} fontcatstr;

/* extern fontcatstr fontcat; */

/*============================================================================*/

/* The following part of the file is extracted from h.drawTextC. */

/* Current version of text columns */
#define draw_text_VERSION 1

os_error *do_objtextcol
         (draw_objptr hdrptr, int orgx, int orgy, draw_bboxtyp *clip);
os_error *do_objtextarea
         (draw_objptr hdrptr, int orgx,int orgy, draw_bboxtyp *clip);

BOOL draw_verifyTextArea(char *text, int *errcode, char **location,
                         int *columns);


/*============================ Private functions ============================*/

/* Functions defined in c.drawLevel0 or c.drawLevel1 */
void dr_spaceCopy(char *to, char *from, int length);
void dr_unifyBoxes(draw_bboxtyp *box1, draw_bboxtyp *box2);

/* Functions defined in c.drawCheck */
BOOL check_Draw_file(char *buffer, int length, int *code, int *location);
BOOL check_Draw_object(draw_objptr object, int *code, int *location);
void shift_Draw_file(char *buffer, int length, int xMove, int yMove);

/* Function defined in c.drawFiles */
os_error *displ_setVDU5charsize(int xsize,int ysize, int xspace,int yspace);
@


4.1
log
@Initial revision
@
text
@@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
