head	4.3;
access;
symbols
	RISC_OSLib-5_97:4.3
	RISC_OSLib-5_96:4.3
	RISC_OSLib-5_95:4.3
	RISC_OSLib-5_94:4.3
	RISC_OSLib-5_93:4.3
	RISC_OSLib-5_92:4.3
	RISC_OSLib-5_91:4.3
	RISC_OSLib-5_90:4.3
	RISC_OSLib-5_89:4.3
	RISC_OSLib-5_88:4.3
	RISC_OSLib-5_87:4.3
	RISC_OSLib-5_86-1:4.3
	RISC_OSLib-5_86:4.3
	RISC_OSLib-5_85:4.3
	RISC_OSLib-5_84:4.3
	RISC_OSLib-5_83-2:4.3
	RISC_OSLib-5_83-1:4.3
	RISC_OSLib-5_83:4.3
	RISC_OSLib-5_82:4.2
	RISC_OSLib-5_81:4.1
	RISC_OSLib-5_75-2:4.1
	RISC_OSLib-5_80:4.1
	RISC_OSLib-5_79:4.1
	RISC_OSLib-5_78:4.1
	RISC_OSLib-5_75-1:4.1
	RISC_OSLib-5_77:4.1
	RISC_OSLib-5_76:4.1
	RISC_OSLib-5_75:4.1
	RISC_OSLib-5_74:4.1
	RISC_OSLib-5_73:4.1
	RISC_OSLib-5_72:4.1
	RISC_OSLib-5_71:4.1
	RISC_OSLib-5_70:4.1
	RISC_OSLib-5_69:4.1
	RISC_OSLib-5_68:4.1
	RISC_OSLib-5_67:4.1
	RISC_OSLib-5_66:4.1
	RISC_OSLib-5_65:4.1
	RISC_OSLib-5_64:4.1
	RISC_OSLib-5_63:4.1
	RISC_OSLib-5_62:4.1
	RISC_OSLib-5_61:4.1
	RISC_OSLib-5_60:4.1
	RISC_OSLib-5_59:4.1
	RISC_OSLib-5_58:4.1
	RISC_OSLib-5_57:4.1
	RISC_OSLib-5_56:4.1
	RISC_OSLib-5_55:4.1
	RISC_OSLib-5_54:4.1
	RISC_OSLib-5_53:4.1
	RISC_OSLib-5_52:4.1
	RISC_OSLib-5_51:4.1
	RO_5_07:4.1
	RISC_OSLib-5_50:4.1
	RISC_OSLib-5_49:4.1
	RISC_OSLib-5_46-4_64_2_1:4.1
	NoInlineAsm:4.1.0.16
	RISC_OSLib-5_48:4.1
	RISC_OSLib-5_47:4.1
	RISC_OSLib-5_46:4.1
	RISC_OSLib-5_45:4.1
	RISC_OSLib-5_44:4.1
	RISC_OSLib-5_43:4.1
	RISC_OSLib-5_42:4.1
	RISC_OSLib-5_41:4.1
	RISC_OSLib-5_40:4.1
	RISC_OSLib-5_39:4.1
	RISC_OSLib-5_38:4.1
	RISC_OSLib-5_37:4.1
	RISC_OSLib-5_36:4.1
	RISC_OSLib-5_35:4.1
	RISC_OSLib-5_34:4.1
	RISC_OSLib-5_33-4_50_2_1:4.1
	sbrodie_dev:4.1.0.14
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_01-4_16_2_5:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_01-4_16_2_4:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_01-4_16_2_3:4.1
	RISC_OSLib-5_01-4_16_2_2:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_01-4_16_2_1:4.1
	Bethany:4.1.0.12
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-4_97-4_12_2_8:4.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	RISC_OSLib-5_03:4.1
	RISC_OSLib-5_02:4.1
	RISC_OSLib-4_97-4_12_2_7:4.1
	RISC_OSLib-5_01:4.1
	RISC_OSLib-5_00:4.1
	RISC_OSLib-4_99:4.1
	RISC_OSLib-4_98:4.1
	RISC_OSLib-4_97-4_12_2_6:4.1
	RISC_OSLib-4_97-4_12_2_5:4.1
	RISC_OSLib-4_97-4_12_2_4:4.1
	RISC_OSLib-4_97-4_12_2_3:4.1
	RISC_OSLib-4_97-4_12_2_2:4.1
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.1
	kbracey_32bit:4.1.0.10
	kbracey_32bit_bp:4.1
	dcotton_autobuild_BaseSW:4.1
	RISC_OSLib-4_97:4.1
	RISC_OSLib-4_96:4.1
	RISC_OSLib-4_95:4.1
	RISC_OSLib-4_94:4.1
	RISC_OSLib-4_93:4.1
	RISC_OSLib-4_92:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.1
	RISC_OSLib-4_90:4.1
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2014.07.31.08.24.13;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	jfGiiZxupMtuqvKx;

4.2
date	2014.05.08.10.11.31;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	u7YoeZpupMfJIIzx;

4.1
date	96.11.05.09.25.26;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.25.26;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.55.00;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.32.59;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.50.40;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Some RISC_OSLib rlib enhancements
menu.c/menu.h:
Add a new menu_setcolours() function to allow the fore/background colour bits to be set on a menu entry.
colourmenu.c:
Use the new menu_setcolours() function instead of making assumptions about menu's internal structure layout.
dbox.c/dbox.h:
New functions dbox_hidefield and dbox_unhidefield added to complement the fade/unfade ones.
As dbox_findicon/findiconbefore are only ever used to find writables, rename them as such. Also, make them find writable (type 15) AND writable draggable (type 14) icons.
Allow navigation by tab/shift tab through icons like the Style Guide chapter 16 says we should. In fact it's a little odd that dbox is emulating 'Ktar' validation itself manually when the Wimp has done this since version 2.92, but maintaining it is less effort than going and checking all the templates.
Fix bug when looking for leading capital letter matches to complete a dbox, the previous code was looking at the cached copy of the icon flags in d->window rather than the ones the Wimp is actually showing on screen (as might have been modified by dbox_fadefield() for example), so it was possible to complete a dbox for an icon which wasn't visible or selectable.
Fix bug when looking for leading capital letter matches when the icon doesn't have any text - the template file format is defined as being 0x0D terminated. This would then lead to 'R' and 'S' being accepted as matches having run off the end of the text buffer and into the validation string (which usually contains an 'R' or 'S' validation first). Changed to accept any control terminator.
event.c:
When force closing the current menu, don't forget to set the two state variables back to 0.
fileicon.c/resspr.c/txt1.c/txtundo.c/wimp.c:
Use existing pointer type definitions.
flex.c:
Treat bools as bools and pointers as pointers.
Say something useful in an error box if flex fails its internal consistency check, rather than just data aborting.
font.c:
Remove ROM conditionals from around font_readdef() function, always include the function.
fontselect.c:
Use font_readdef() rather than local copies of the exact same function.
txtedit.c/txtfile.c/txtfind.c/txtedit.h:
Remove redundant 'deletepending' state variable, and confusion over 'selectrecent' being a bool.
Call os_byte directly rather than passing to os_cli("*FX").
Other minor tidy ups.
wimpt.c:
Mark messages list as a constant.
xferrecv.c:
Also preserve the size member while recycling the xferrecv_ack message block, rather than corrupting it as 256.
xfersend.c/xfersend.h:
Take out the leaf name formulator as a common function for the two places to use it. This also allows the function to return the length of the leaf name so the correct message block size can be used. Inspection with MsgMon/!Reporter was showing that all xfersend initiated saves were passing the leaf name padded to 256 with garbage.
Reindent a few functions.
Make the draggable sprite replacement follow the same validation string rules as the Wimp, previously only ";s" was accepted, so upper case 'S' and validation strings that start with the sprite validation didn't work.
xfersend_pipe() function prototype changed to match xfersend() more closely - not being able to respond to the context of a wimp_eventstr made this function practically unusable.
akbd.h:
Windows logo and menu keys defined.
flex.h/help.h/wimpt.h
Some typos in comments.
wimp.h:
Missing wimp message action codes and structure defs added for completeness.


Version 5.83. Not tagged
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the RISCOS library for writing applications in C for RISC OS. It may be  *
 * used freely in the creation of programs for Archimedes. It should be     *
 * used with Acorn's C Compiler Release 3 or later.                         *
 *                                                                          *
 ***************************************************************************/

/*
 * Title:   menu.h
 * Purpose: Menu creation/deletion/manipulation.
 *
 */

# ifndef __menu_h
# define __menu_h


typedef struct menu__str *menu; /* abstract menu handle */

/*
 * A menu description string defines a sequence of entries, with the
 * following syntax (curly brackets mean 0 or more, square brackets mean
 * 0 or 1):
 *    opt ::= "!" or "~" or ">" or " "
 *    sep ::= "," or "|"
 *    l1 ::= any char but opt or sep
 *    l2 ::= any char but sep
 *    name ::= l1 {l2}
 *    entry ::= {opt} name
 *    descr ::= entry {sep entry}
 * Each entry defines a single entry in the menu. "|" as a separator means
 * that there should be a gap or line between these menu components.
 *
 *   opt ! means, put a tick by it
 *   opt ~ means, make it non-pickable
 *   opt > means, has a dialogue box as "submenu"
 *   space has no effect as an opt.
 */


/* ----------------------------- menu_new ----------------------------------
 * Description:   Creates a new menu structure, from the given textual
 *                description (arranged as above).
 *
 * Parameters:    char *name -- name to appear in "title" of menu
 *                char *description -- textual description of menu
 * Returns:       pointer to menu structure created
 * Other Info:    creates menu structure, with entries as given in textual
 *                description. Entries are indexed from 1.
 *                         eg. m=menu_new("Edit", ">Info Create Quit");
 *                Handler needs to be attached using event_attachmenu.
 *
 */

menu menu_new(char *name, char *description);


/* ------------------------------- menu_dispose ----------------------------
 * Description:   Disposes of a menu structure.
 *
 * Parameters:    menu* -- the menu to be disposed of
 *                int recursive -- non-zero ==recursively dispose of submenus
 * Returns:       void.
 * Other Info:    none.
 *
 */

void menu_dispose(menu*, int recursive);


/* ---------------------------- menu_extend --------------------------------
 * Description:   Adds entries to the end of a menu
 *
 * Parameters:    menu -- the menu to which extension is being made
 *                char *description -- textual description of extension.
 * Returns:       void.
 * Other Info:    extension has the format:
 *                        [sep] entry {sep entry}
 *                note: a menu which is already a submenu of another menu
 *                      can't be extended
 *
 */

void menu_extend(menu, char *description);


/* --------------------------- menu_setflags -------------------------------
 * Description:   Sets/changes flags on an already existing menu entry.
 *
 * Parameters:    menu -- the menu
 *                int entry -- index into menu entries (from 1)
 *                int tick -- non-zero == tick this entry
 *                int fade -- non-zero == fade this entry (ie. unpickable)
 * Returns:       void.
 * Other Info:    none.
 *
 */

void menu_setflags(menu, int entry, int tick, int fade);


/* -------------------------- menu_setcolours ------------------------------
 * Description:   Sets the fore/background text colours on a menu entry.
 *
 * Parameters:    menu -- the menu
 *                int entry -- index into menu entries (from 1)
 *                int fore -- wimp colour number
 *                int back -- wimp colour number
 * Returns:       void.
 * Other Info:    none.
 *
 */

void menu_setcolours(menu, int entry, int fore, int back);


/* ----------------------------- menu_submenu ------------------------------
 * Description:   Attaches a menu as a submenu of another at a given entry
 *                in the parent menu.
 *
 * Parameters:    menu -- the menu
 *                int entry -- entry at which to attach submenu
 *                menu submenu -- pointer to the submenu
 * Returns:       void.
 * Other Info:    This replaces any previous submenu at this entry. Use
 *                0 for submenu to remove an existing entry. Only a strict
 *                hierarchy is allowed. When attached as a submenu, a menu
 *                can't be extended or explicitly deleted.
 *
 */

void menu_submenu(menu, int entry, menu submenu);


/* ------------------------- menu_make_writeable ---------------------------
 * Description:   Makes a particular menu entry writeable.
 *
 * Parameters:    menu m -- the menu
 *                int entry -- the entry to make writeable
 *                char *buffer -- pointer to buffer to hold text of entry
 *                int bufferlength -- size of buffer
 *                char *validstring -- pointer to validation string
 * Returns:       void.
 * Other Info:    Lifetimes of buffer and validstring must be long enough.
 *
 */
 
void menu_make_writeable(menu m, int entry, char *buffer, int bufferlength,
                         char *validstring);


/* --------------------------- menu_make_sprite ----------------------------
 * Description:   Makes a menu entry into a sprite.
 *
 * Parameters:    menu m -- the menu
 *                int entry -- entry to be made into sprite
 *                char *spritename -- name of the sprite
 * Returns:       void.
 * Other Info:    Entry which is initially a non-indirected text entry
 *                is changed to an indirected sprite, with sprite area given
 *                by resspr_area(), and name given by spritename.
 *
 */

void menu_make_sprite(menu m, int entry, char *spritename);


/* ---------------------------- menu_syshandle -----------------------------
 * Description:   Gives low-level handle to a menu.
 *
 * Parameters:    menu -- the menu
 * Returns:       pointer to underlying WIMP menu structure.
 * Other Info:    allows massaging of menu other than provided in this 
 *                module. Returned pointer is in fact a pointer to a 
 *                wimp_menustr (ie wimp_menuhdr followed by zero or more
 *                wimp_menuitems).
 *
 */

void *menu_syshandle(menu);

# endif

/* end menu.h */
@


4.2
log
@Check for NULL pointers before finding the syshandle
menu.c: if NULL return -1, this has the added advantage that a menu maker (see event_attachmenumaker) can return NULL to mean "no menu thanks" and not data abort in event.c
dbox.c: if NULL return 0, this is somewhat consistent with template_syshandle()
menu.h: typo in comment corrected

Version 5.82. Tagged as 'RISC_OSLib-5_82'
@
text
@d117 15
@


4.1
log
@Initial revision
@
text
@d37 1
a37 1
 * following syntax (curly brakets mean 0 or more, square brackets mean
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
