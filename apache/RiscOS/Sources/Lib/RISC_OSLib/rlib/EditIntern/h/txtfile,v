head	1.2;
access;
symbols
	RISC_OSLib-5_97:1.2
	RISC_OSLib-5_96:1.2
	RISC_OSLib-5_95:1.2
	RISC_OSLib-5_94:1.2
	RISC_OSLib-5_93:1.2
	RISC_OSLib-5_92:1.2
	RISC_OSLib-5_91:1.2
	RISC_OSLib-5_90:1.2
	RISC_OSLib-5_89:1.2
	RISC_OSLib-5_88:1.2
	RISC_OSLib-5_87:1.2
	RISC_OSLib-5_86-1:1.2
	RISC_OSLib-5_86:1.2
	RISC_OSLib-5_85:1.2
	RISC_OSLib-5_84:1.1
	RISC_OSLib-5_83-2:1.1
	RISC_OSLib-5_83-1:1.1
	RISC_OSLib-5_83:1.1
	RISC_OSLib-5_82:1.1
	RISC_OSLib-5_81:1.1
	RISC_OSLib-5_75-2:1.1
	RISC_OSLib-5_80:1.1
	RISC_OSLib-5_79:1.1
	RISC_OSLib-5_78:1.1
	RISC_OSLib-5_75-1:1.1
	RISC_OSLib-5_77:1.1
	RISC_OSLib-5_76:1.1
	RISC_OSLib-5_75:1.1
	RISC_OSLib-5_74:1.1
	RISC_OSLib-5_73:1.1
	RISC_OSLib-5_72:1.1
	RISC_OSLib-5_71:1.1
	RISC_OSLib-5_70:1.1
	RISC_OSLib-5_69:1.1
	RISC_OSLib-5_68:1.1
	RISC_OSLib-5_67:1.1
	RISC_OSLib-5_66:1.1
	RISC_OSLib-5_65:1.1
	RISC_OSLib-5_64:1.1
	RISC_OSLib-5_63:1.1
	RISC_OSLib-5_62:1.1
	RISC_OSLib-5_61:1.1
	RISC_OSLib-5_60:1.1
	RISC_OSLib-5_59:1.1
	RISC_OSLib-5_58:1.1
	RISC_OSLib-5_57:1.1
	RISC_OSLib-5_56:1.1
	RISC_OSLib-5_55:1.1
	RISC_OSLib-5_54:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.03.20.39.59;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	G8BXIPKUyzCGAbgy;

1.1
date	2009.05.31.17.32.21;	author pnaulls;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Switch from ArcEdit style model to clipboard cut & paste model
The txt library part of RISC_OSLib was essentially contrary to everything Acorn was telling its developers, to use the global clipboard.
Additionally, support is added for swap case within a selection.
txt.h:
 Add a new charoption type 'txt_READONLY' to inform txt that the buffer is notionally read only, this is used to supress 'Paste' in the selection menu when appropriate.
 Correct some typos in the comments.
txt1.h:
 Kill off modula 2 dummy structure member.
txtar.h:
 Remove unused function export.
txtfile.h:
 Rename basicimport to be consistent with the text version of the same function. We use 'import' to denote RAM transfers and 'insert' to denote file/scrap transfers throughout.
txtmisc.h:
 Redundant internal functions removed.
txtundo.h:
 Add a new undo operation type 't' for swap case, to avoid polluting the undo buffer with an entire copy of the text where only the case changed.
 Kill off modula 2 double pointer requirement.
txtedit.h:
 Unused structure member 'selectctl' removed.
txt.c:
 Kill off modula 2 double pointer requirement.
txtar.c:
 Refactor message despatch with a switch statement so the save/load/open operations are explicitly checked for, in case the application enables other messages.
txtedit.c:
 Adopt MOVERWRITE, been enabled since 1988 so is probably good to keep.
 Dynamically generate the Select menu by first sending a clipboard request, and fading Paste if no reply comes back.
 Implement changed mouse selection logic.
 Implement different hotkeys and caret navigation.
 Implement copy and paste/replace operations.
 Implement swap case operation.
txtfile.c:
 Type corrections and function rename admin.
 Implement copy and paste/replace operation for detokenised BASIC.
txtmisc.c:
 Supporting functions for clipboard added, supporting functions for ArcEdit removed.
txtscrap.c:
 Make sure the caret is visible for programmatical zero sized selections.
txtundo.c:
 Allow suspension of undo during known complex operations, such as import via RAM transmit. This was a longstanding bug where the import buffer was grabbed in ~4k chunks (even if only 1 byte was being transferred) which in turn resulted in a +4000 undo insertion and a -3999 removal, which given the default undo buffer is only 5k would result in it failing the reversibility test, so no undo was possible.
 Now, during a RAM transmit undo is suspended until the total transfer size is known, and only that data is placed in the undo buffer (subject to the same 5k reversibility limit).
 Add new undo type 't' for swap case operation.
rlibdata.s:
 4 new ints and 1 new BOOL, so RlibSpace increases by 5.

Version 5.85. Tagged as 'RISC_OSLib-5_85'
@
text
@/* Copyright 2009 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> h.txtfile
 * Title: txtfile.h
 * Purpose: Search text for string.
 * Author: AFP
 * Status: system-independent
 * Requires:
 *   h.txt
 *   h.txtdat
 * History:
 *   16 July 87 -- started
 *   17 December 87: AFP: converted into C.
 */

void txtfile_buildnewtimestamp(typdat oldty, typdat *newty);
/* build a stamp with the current time/date and old type */

BOOL txtfile_insert(txt t, char *filename, int length, typdat *ty /*out*/);
/* Insert the contents of the named file, returning TRUE if successful. If
you know the length of the file then pass it in length, else set length to
-1. The type/date words will be written to *ty, if successful. */

int txtfile_saverange(txt t, char *filename, typdat ty, txt_index from, txt_index to);
/* Save the given range of text, using the given type/date stamp. */

#if BASIC
BOOL txtfile_basicimport(txtedit_state *s, BOOL insrep, int detokenise, BOOL strip);
/* import some BASIC into the txt. */

BOOL txtfile_basicinsert(txt t, char *filename, int l, typdat *ty, int detokenise, BOOL strip);
/* insert a BASIC file into the txt. */

BOOL txtfile_basicsenderproc(txt t, int *maxbuf, txt_index from, txt_index to, int tokenise, int increment);
/* export some BASIC from the txt. */

BOOL txtfile_savebasicrange(txt t, char *filename, typdat ty, txt_index from, txt_index to, int tokenise, int increment);
/* export to a BASIC file from the txt. */
#endif
@


1.1
log
@Rationalize C include path usage
 Detail:
  Parts of RISCOS_Lib use non-standard paths that only really work on native RISC OS compilitation.
  This moves the relevant files into a more normalized dir.h.file format.
 Admin:
  Not tested yet.  #include path changes to follow.

Version 5.54. Not tagged
@
text
@d40 1
a40 1
BOOL txtfile_dobasicimport(txtedit_state *s, int estsize, int detokenise, BOOL strip);
d44 1
a44 1
/* import a BASIC file into the txt. */
@

