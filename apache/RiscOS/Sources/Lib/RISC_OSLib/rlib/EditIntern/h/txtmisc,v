head	1.2;
access;
symbols
	RISC_OSLib-5_97:1.2
	RISC_OSLib-5_96:1.2
	RISC_OSLib-5_95:1.2
	RISC_OSLib-5_94:1.2
	RISC_OSLib-5_93:1.2
	RISC_OSLib-5_92:1.2
	RISC_OSLib-5_91:1.2
	RISC_OSLib-5_90:1.2
	RISC_OSLib-5_89:1.2
	RISC_OSLib-5_88:1.2
	RISC_OSLib-5_87:1.2
	RISC_OSLib-5_86-1:1.2
	RISC_OSLib-5_86:1.2
	RISC_OSLib-5_85:1.2
	RISC_OSLib-5_84:1.1
	RISC_OSLib-5_83-2:1.1
	RISC_OSLib-5_83-1:1.1
	RISC_OSLib-5_83:1.1
	RISC_OSLib-5_82:1.1
	RISC_OSLib-5_81:1.1
	RISC_OSLib-5_75-2:1.1
	RISC_OSLib-5_80:1.1
	RISC_OSLib-5_79:1.1
	RISC_OSLib-5_78:1.1
	RISC_OSLib-5_75-1:1.1
	RISC_OSLib-5_77:1.1
	RISC_OSLib-5_76:1.1
	RISC_OSLib-5_75:1.1
	RISC_OSLib-5_74:1.1
	RISC_OSLib-5_73:1.1
	RISC_OSLib-5_72:1.1
	RISC_OSLib-5_71:1.1
	RISC_OSLib-5_70:1.1
	RISC_OSLib-5_69:1.1
	RISC_OSLib-5_68:1.1
	RISC_OSLib-5_67:1.1
	RISC_OSLib-5_66:1.1
	RISC_OSLib-5_65:1.1
	RISC_OSLib-5_64:1.1
	RISC_OSLib-5_63:1.1
	RISC_OSLib-5_62:1.1
	RISC_OSLib-5_61:1.1
	RISC_OSLib-5_60:1.1
	RISC_OSLib-5_59:1.1
	RISC_OSLib-5_58:1.1
	RISC_OSLib-5_57:1.1
	RISC_OSLib-5_56:1.1
	RISC_OSLib-5_55:1.1
	RISC_OSLib-5_54:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.03.20.39.59;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	G8BXIPKUyzCGAbgy;

1.1
date	2009.05.31.17.32.21;	author pnaulls;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Switch from ArcEdit style model to clipboard cut & paste model
The txt library part of RISC_OSLib was essentially contrary to everything Acorn was telling its developers, to use the global clipboard.
Additionally, support is added for swap case within a selection.
txt.h:
 Add a new charoption type 'txt_READONLY' to inform txt that the buffer is notionally read only, this is used to supress 'Paste' in the selection menu when appropriate.
 Correct some typos in the comments.
txt1.h:
 Kill off modula 2 dummy structure member.
txtar.h:
 Remove unused function export.
txtfile.h:
 Rename basicimport to be consistent with the text version of the same function. We use 'import' to denote RAM transfers and 'insert' to denote file/scrap transfers throughout.
txtmisc.h:
 Redundant internal functions removed.
txtundo.h:
 Add a new undo operation type 't' for swap case, to avoid polluting the undo buffer with an entire copy of the text where only the case changed.
 Kill off modula 2 double pointer requirement.
txtedit.h:
 Unused structure member 'selectctl' removed.
txt.c:
 Kill off modula 2 double pointer requirement.
txtar.c:
 Refactor message despatch with a switch statement so the save/load/open operations are explicitly checked for, in case the application enables other messages.
txtedit.c:
 Adopt MOVERWRITE, been enabled since 1988 so is probably good to keep.
 Dynamically generate the Select menu by first sending a clipboard request, and fading Paste if no reply comes back.
 Implement changed mouse selection logic.
 Implement different hotkeys and caret navigation.
 Implement copy and paste/replace operations.
 Implement swap case operation.
txtfile.c:
 Type corrections and function rename admin.
 Implement copy and paste/replace operation for detokenised BASIC.
txtmisc.c:
 Supporting functions for clipboard added, supporting functions for ArcEdit removed.
txtscrap.c:
 Make sure the caret is visible for programmatical zero sized selections.
txtundo.c:
 Allow suspension of undo during known complex operations, such as import via RAM transmit. This was a longstanding bug where the import buffer was grabbed in ~4k chunks (even if only 1 byte was being transferred) which in turn resulted in a +4000 undo insertion and a -3999 removal, which given the default undo buffer is only 5k would result in it failing the reversibility test, so no undo was possible.
 Now, during a RAM transmit undo is suspended until the total transfer size is known, and only that data is placed in the undo buffer (subject to the same 5k reversibility limit).
 Add new undo type 't' for swap case operation.
rlibdata.s:
 4 new ints and 1 new BOOL, so RlibSpace increases by 5.

Version 5.85. Tagged as 'RISC_OSLib-5_85'
@
text
@/* Copyright 2009 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -> h.txtmisc
 * Title: txtmisc.h
 * Purpose: Various facilities.
 * Author: AFP
 * Status: system-independent
 * Requires:
 *   h.txt
 * History:
 *   16 Jul 87 -- started
 *   18 Dec 87: AFP: converted into C.
 *   17 Mar 88: IGJ: txtmisc_formattxt added
 *    9 Jan 89: WRS: wordwrap in block ops.
 *    1 Jun 90: NDR: txtmisc_paraend, parastart, bop, eop, normalisepara
 */

#define WORDWRAP 1
/* 16-Dec-88 WRS: late experiment, not for release. */
/*  1-Jun-90 NDR: moved here from c.txtedit */

int txtmisc_alphach(char c);
/* a..z, A..Z or 192..255 (high ANSI chars) */

txt_index txtmisc_bow(txt t, txt_index i); /* beginning of word containing */
txt_index txtmisc_eow(txt t, txt_index i);
/* A word is a sequence of AlphaChs, followed by a sequence of non-AlphaChs.
EOW gets to the start of the next word. */

txt_index txtmisc_bol(txt t, txt_index i); /* beginning of line containing */
txt_index txtmisc_eol(txt t, txt_index i); /* end of line containing */

int txtmisc_bof(txt t); /* are we at beginning of file? */
int txtmisc_eof(txt t); /* are we at end of file? */

unsigned txtmisc_currentlinenumber(txt t);
void txtmisc_gotoline(txt t, unsigned l);
/* Line numbers start at 1, only NewLineCh separates lines. */

void txtmisc_tab(txt t);
/* A Twin-like Tab operation. The caret is moved horizontally, based
on the words in the line above. */

void txtmisc_tabcol(txt t);
/* Tab to next multiple of 8 columns by inserting spaces, except
that if at the end of a line, do it using txt_movehorizontal. */

void txtmisc_expandtabs(txt t);
/* Any literal tab characters in the Text are expanded to the right number of
spaces (assuming fixed font display). If the object was not already updated
then it is still marked as not updated */

void txtmisc_indentregion(txt t, txt_index from, txt_index to, int by,
                          char *with);

/* If by > 0 Inserts the first Min(by, Length(with)) chars of "with".
If by<0 then "with" is ignored, and that many chars are deleted. Blank
lines are not affected. "with" should not contain NewLineChs. */

void txtmisc_exchangecrlf(txt t);
/* Implemented by writing directly on the text object, so TextUndo.PreventUndo
is called at the end. */

void txtmisc_formattext(txt t, int width);
/* format text a la Twin - if a line is longer than 'width' characters split it
at word boundries by newlines, removing spaces, to give several lines of
'width' or less cols */

txt_index txtmisc_furthestaway(txt t, txt_index from, txt_index a1,
                                    txt_index a2);

/* one of a1 and a2, which "from" is furthest away from. */

void txtmisc_selectpointandword(txt t, txt_index point, txt_index word);
/* Set the selection to contain "point", and the word containing "word". */

void txtmisc_selectpointandline(txt t, txt_index point, txt_index line);
/* Set the selection to contain "point", and the line containing "line". */

void txtmisc_select3(txt t, txt_index a1, txt_index a2, txt_index a3);
/* Set the selection to contain all of a1-a3. */

/* --------- Wordwrap ------------------------ */

#if WORDWRAP
BOOL txtmisc_paraend(txt t, txt_index i);
BOOL txtmisc_parastart(txt t, txt_index i);
txt_index txtmisc_bop(txt t, txt_index i);
txt_index txtmisc_eop(txt t, txt_index i);
void txtmisc_normalisepara(txt t, int parawidth);
#endif
@


1.1
log
@Rationalize C include path usage
 Detail:
  Parts of RISCOS_Lib use non-standard paths that only really work on native RISC OS compilitation.
  This moves the relevant files into a more normalized dir.h.file format.
 Admin:
  Not tested yet.  #include path changes to follow.

Version 5.54. Not tagged
@
text
@d17 1
a17 1
 * Purpose: Search text for string.
a94 19
/* -------- Operations on Selections -------- */

void txtmisc_clearselection(void);
/* Clear any selection. */

void txtmisc_deleteselection(int parawidth);

void txtmisc_moveselection(txt t, int parawidthsrc, int parawidthdst);
/* The selection is copied to the caret, then deleted at the source. The new
version is now the selection. t contains the Caret, a shared location is used
for the selection. */

void txtmisc_copyselection(txt t, int parawidth);
/* The selection is copied to the caret. The old version is still the
selection. */

int txtmisc_textinsertfromflexistore(txt t, flex_ptr anchor, unsigned n);
/* Return FALSE, with situation unchanged, if out of store. */

@

