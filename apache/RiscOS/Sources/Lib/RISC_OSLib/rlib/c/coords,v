head	4.3;
access;
symbols
	RISC_OSLib-5_97:4.3
	RISC_OSLib-5_96:4.3
	RISC_OSLib-5_95:4.3
	RISC_OSLib-5_94:4.3
	RISC_OSLib-5_93:4.3
	RISC_OSLib-5_92:4.3
	RISC_OSLib-5_91:4.3
	RISC_OSLib-5_90:4.3
	RISC_OSLib-5_89:4.3
	RISC_OSLib-5_88:4.3
	RISC_OSLib-5_87:4.3
	RISC_OSLib-5_86-1:4.3
	RISC_OSLib-5_86:4.3
	RISC_OSLib-5_85:4.3
	RISC_OSLib-5_84:4.3
	RISC_OSLib-5_83-2:4.3
	RISC_OSLib-5_83-1:4.3
	RISC_OSLib-5_83:4.3
	RISC_OSLib-5_82:4.3
	RISC_OSLib-5_81:4.3
	RISC_OSLib-5_75-2:4.3
	RISC_OSLib-5_80:4.3
	RISC_OSLib-5_79:4.3
	RISC_OSLib-5_78:4.3
	RISC_OSLib-5_75-1:4.3
	RISC_OSLib-5_77:4.3
	RISC_OSLib-5_76:4.3
	RISC_OSLib-5_75:4.3
	RISC_OSLib-5_74:4.3
	RISC_OSLib-5_73:4.3
	RISC_OSLib-5_72:4.3
	RISC_OSLib-5_71:4.3
	RISC_OSLib-5_70:4.3
	RISC_OSLib-5_69:4.3
	RISC_OSLib-5_68:4.3
	RISC_OSLib-5_67:4.3
	RISC_OSLib-5_66:4.3
	RISC_OSLib-5_65:4.3
	RISC_OSLib-5_64:4.3
	RISC_OSLib-5_63:4.3
	RISC_OSLib-5_62:4.3
	RISC_OSLib-5_61:4.3
	RISC_OSLib-5_60:4.3
	RISC_OSLib-5_59:4.3
	RISC_OSLib-5_58:4.3
	RISC_OSLib-5_57:4.3
	RISC_OSLib-5_56:4.3
	RISC_OSLib-5_55:4.3
	RISC_OSLib-5_54:4.3
	RISC_OSLib-5_53:4.2
	RISC_OSLib-5_52:4.2
	RISC_OSLib-5_51:4.2
	RO_5_07:4.2
	RISC_OSLib-5_50:4.2
	RISC_OSLib-5_49:4.2
	RISC_OSLib-5_46-4_64_2_1:4.2
	NoInlineAsm:4.2.0.2
	RISC_OSLib-5_48:4.2
	RISC_OSLib-5_47:4.2
	RISC_OSLib-5_46:4.2
	RISC_OSLib-5_45:4.2
	RISC_OSLib-5_44:4.2
	RISC_OSLib-5_43:4.2
	RISC_OSLib-5_42:4.2
	RISC_OSLib-5_41:4.2
	RISC_OSLib-5_40:4.2
	RISC_OSLib-5_39:4.2
	RISC_OSLib-5_38:4.2
	RISC_OSLib-5_37:4.2
	RISC_OSLib-5_36:4.2
	RISC_OSLib-5_35:4.2
	RISC_OSLib-5_34:4.2
	RISC_OSLib-5_33-4_50_2_1:4.1.14.1
	sbrodie_dev:4.1.0.14
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_01-4_16_2_5:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_01-4_16_2_4:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_01-4_16_2_3:4.1
	RISC_OSLib-5_01-4_16_2_2:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_01-4_16_2_1:4.1
	Bethany:4.1.0.12
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-4_97-4_12_2_8:4.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	RISC_OSLib-5_03:4.1
	RISC_OSLib-5_02:4.1
	RISC_OSLib-4_97-4_12_2_7:4.1
	RISC_OSLib-5_01:4.1
	RISC_OSLib-5_00:4.1
	RISC_OSLib-4_99:4.1
	RISC_OSLib-4_98:4.1
	RISC_OSLib-4_97-4_12_2_6:4.1
	RISC_OSLib-4_97-4_12_2_5:4.1
	RISC_OSLib-4_97-4_12_2_4:4.1
	RISC_OSLib-4_97-4_12_2_3:4.1
	RISC_OSLib-4_97-4_12_2_2:4.1
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.1
	kbracey_32bit:4.1.0.10
	kbracey_32bit_bp:4.1
	dcotton_autobuild_BaseSW:4.2
	RISC_OSLib-4_97:4.1
	RISC_OSLib-4_96:4.1
	RISC_OSLib-4_95:4.1
	RISC_OSLib-4_94:4.1
	RISC_OSLib-4_93:4.1
	RISC_OSLib-4_92:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.1
	RISC_OSLib-4_90:4.1
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2009.05.31.17.58.58;	author pnaulls;	state Exp;
branches;
next	4.2;

4.2
date	2001.08.23.13.53.45;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.25.08;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.14.1;
next	;

4.1.1.1
date	96.11.05.09.25.08;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.53.25;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.29.52;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.49.08;	author nturton;	state Exp;
branches;
next	;

4.1.14.1
date	2001.07.02.15.01.13;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Normalise C and assembler include paths
Detail:
 This changes all the C and assembler includes to be a canoncial Unix format.
 Also match include paths to previous commit for EditIntern/DrawIntern/VerIntern
 Finally, also include some minor type fixes (NULL vs 0)
Admin:
 May be some other paths elsewhere in the source I'm not immediately able to fix.  Will address any issues ASAP, since this is a huge change.

Version 5.54. Not tagged
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

/*
 * Title: coords.c
 * Purpose: mapping of screen/window coords
 * History: IDJ: 05-Feb-92: prepared for source release
 *
*/


#include "wimp.h"
#include "coords.h"

/*--------------------------- Coordinate conversion -----------------------*/
/* Each of these takes a pointer to a block containing a work area box and */
/* the scroll position. Since the type of these can vary (they can appear  */
/* in different types of wimp block), we use our own type. Macros are      */
/* defined in the header file for common casts to this type.               */

int coords_x_toscreen(int x, coords_cvtstr *cvt)
{ return (x - cvt->scx + cvt->box.x0); }

int coords_y_toscreen(int y, coords_cvtstr *cvt)
{ return (y - cvt->scy + cvt->box.y1); }


int coords_x_toworkarea(int x, coords_cvtstr *cvt)
{ return (x + cvt->scx - cvt->box.x0); }

int coords_y_toworkarea(int y, coords_cvtstr *cvt)
{ return (y + cvt->scy - cvt->box.y1); }


void coords_box_toscreen(wimp_box *b, coords_cvtstr *cvt)
{
  b->x0 = coords_x_toscreen(b->x0, cvt);
  b->y0 = coords_y_toscreen(b->y0, cvt);
  b->x1 = coords_x_toscreen(b->x1, cvt);
  b->y1 = coords_y_toscreen(b->y1, cvt);
}


void coords_box_toworkarea(wimp_box *b, coords_cvtstr *cvt)
{
  b->x0 = coords_x_toworkarea(b->x0, cvt);
  b->y0 = coords_y_toworkarea(b->y0, cvt);
  b->x1 = coords_x_toworkarea(b->x1, cvt);
  b->y1 = coords_y_toworkarea(b->y1, cvt);
}

void coords_point_toscreen(coords_pointstr *point, coords_cvtstr *cvt)
{
  point->x = coords_x_toscreen(point->x, cvt);
  point->y = coords_y_toscreen(point->y, cvt);
}


void coords_point_toworkarea(coords_pointstr *point, coords_cvtstr *cvt)
{
  point->x = coords_x_toworkarea(point->x, cvt);
  point->y = coords_y_toworkarea(point->y, cvt);
}

/*----------------------------- Miscellanea ---------------------------------*/
/*
 Function    : within_box
 Purpose     : determine whether a point lies within a box
 Parameters  : pointer to point
               box
 Returns     : TRUE or FALSE
 Notes       : the box vertices need not be ordered
*/

BOOL coords_withinbox(coords_pointstr *point, wimp_box *box)
{ int dx = box->x1 - box->x0;
  int dy = box->y1 - box->y0;

  return (((dx > 0) ? (box->x1 >= point->x && point->x >= box->x0) :
                      (box->x0 >= point->x && point->x >= box->x1))
          &&
          ((dy > 0) ? (box->y1 >= point->y && point->y >= box->y0) :
                      (box->y0 >= point->y && point->y >= box->y1)));
}

/*
 Function    : offset_box
 Purpose     : offset a box by a given amount
 Parameters  : pointer to box to shift
               x, y shifts
               pointer to box for result (may be same as source)
 Returns     : void
 Description :
*/

void coords_offsetbox(wimp_box *source, int byx, int byy, wimp_box *result)
{
  result->x0 = source->x0 + byx;
  result->y0 = source->y0 + byy;
  result->x1 = source->x1 + byx;
  result->y1 = source->y1 + byy;
}

/*
 Function    : intersects
 Purpose     : determine if a line intersects a rectangle
 Parameters  : box defining end points of line
               box defining rectangle
               widening
 Returns     : TRUE or FALSE
 Description : sorts the bbox of the line, and then does an approximate
               check, by seeing if the lower limit in each direction is less
               than the upper limit of the rectangle, and similarly for the
               upper limit.
               The box around the line is widened by the specified amount in
               doing this.
*/

BOOL coords_intersects(wimp_box *line, wimp_box *rect, int widen)
{
  int x0, y0, x1, y1; /* Line points after sorting */

  if (line->x0 < line->x1)  { x0 = line->x0; x1 = line->x1; }
  else  { x1 = line->x0; x0 = line->x1; }

  if (line->y0 < line->y1)  { y0 = line->y0; y1 = line->y1; }
  else  { y1 = line->y0; y0 = line->y1; }

  x0 -= widen;
  x1 += widen;
  y0 -= widen;
  y1 += widen;
  return (x0 <= rect->x1 && y0 <= rect->y1
          && x1 >= rect->x0 && y1 >= rect->y0);
}

/*
 Function    : boxes_overlap
 Purpose     : see if two boxes overlap
 Parameters  : pointers to boxes
 Returns     : TRUE or FALSE
 Notes       : box vertices must be in correct order
*/

BOOL coords_boxesoverlap(wimp_box *box1, wimp_box *box2)
{
  return (box1->x0 <= box2->x1 && box1->y0 <= box2->y1
          && box1->x1 >= box2->x0 && box1->y1 >= box2->y0);
}
@


4.2
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@d37 2
a38 2
#include "h.wimp"
#include "h.coords"
@


4.1
log
@Initial revision
@
text
@d15 20
a34 2
/* ->c.wimpextra */
/* Extra routine for common wimpish things */
d44 1
a44 1
/* defined in the header file for common casts to this type.               */                  
a89 105
#if FALSE
/*
 Function    : point_to_workarea_by_handle
 Purpose     : convert a point from screen to workarea coordinates
 Parameters  : IN/OUT: pointer to point
               window handle
 Returns     : void
 Description :
*/

void point_to_workarea_by_handle(pointstr *point, wimp_w handle)
{ wimp_wstate windowState;

  /* Read window state */
  wimpt_complain(wimp_get_wind_state(handle, &windowState));

  /* Do conversion */
  point->x = x_to_workarea(point->x, Convert(windowState.o));
  point->y = y_to_workarea(point->y, Convert(windowState.o));
}

/*
 Function    : box_to_workarea_by_handle
 Purpose     : convert a box from screen to workarea  given window handle
 Parameters  : pointer to box
               window handle
 Returns     : void
 Description :
*/

void box_to_workarea_by_handle(wimp_box *box, wimp_w handle)
{ wimp_wstate windowState;

  /* Read window state */
  wimpt_complain(wimp_get_wind_state(handle, &windowState));

  /* Do conversion */
  box_to_workarea(box, Convert(windowState.o));
}

/*----------------------- Mode and palette routines -------------------------*/
/*
 Data Group  : static mode and palette data
 Description :
*/

/* Data block for recording the palette - set up on a mode or palette change */
static wimp_palettestr palette;
static struct
{
  int ncolours;
  int xEig;
  int yEig;
} currentmode;

static int modevarlist[] = { bbc_NColour, bbc_XEigFactor, bbc_YEigFactor, -1};

/*
 Function    : cache_modeinfo
 Purpose     : note mode and palette dependent values
 Parameters  : void
 Returns     : void
 Description : call this on a mode or palette change.
*/

void cache_modeinfo(void)
{
  wimp_readpalette(&palette);
  bbc_vduvars(modevarlist, (int *)&currentmode);
}

/*
 Function    : displ_gcol
 Purpose     : set the graphics colour from a wimp colour value
 Parameters  : gcol action
               plot colour
               background colour
 Returns     : void
 Description : sets the correct gcol and tint
               Mode info must have been cached by a call to cache_modeinfo.
               The background colour is usually 0, for the window bg.
*/

void displ_gcol(int action, int plotcol, int bgcolour)
{
  int displcolour;

  if (action == 3)
    displcolour = palette.c[bgcolour].bytes.gcol^palette.c[plotcol].bytes.gcol;
  else
    displcolour = palette.c[plotcol].bytes.gcol;

  if (currentmode.ncolours > 16)
  {
     bbc_gcol(action, displcolour >> 2);
     bbc_tint(2, displcolour & 0xff);
  }
  else
  {
     bbc_gcol(action, displcolour);
   }
}


#endif
d158 1
a158 1
  return (x0 <= rect->x1 && y0 <= rect->y1 
d172 1
a172 1
  return (box1->x0 <= box2->x1 && box1->y0 <= box2->y1 
a174 16


#if FALSE
/*
 Function    : xPixToOS/yPixToOS
 Purpose     : convert an x/y coordinate from pixels to OS units
 Parameters  : x/y value in pixels
 Returns     : x/y value in OS units
 Notes       : mode info must have been cached
*/

int xPixToOS(int x)
{ return(x * (1 << currentmode.xEig)); }
int yPixToOS(int y)
{ return(y * (1 << currentmode.yEig)); }
#endif
@


4.1.14.1
log
@  Merge of multiple versions of RISC_OSLib.
Detail:
  This work may be incomplete - hence import on a branch.
  It has NOT been tested.
Admin:
  Might even build.


Version 5.33, 4.50.2.1. Tagged as 'RISC_OSLib-5_33-4_50_2_1'
@
text
@d15 2
a16 20
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

/*
 * Title: coords.c
 * Purpose: mapping of screen/window coords
 * History: IDJ: 05-Feb-92: prepared for source release
 *
*/
d26 1
a26 1
/* defined in the header file for common casts to this type.               */
d72 105
d245 1
a245 1
  return (x0 <= rect->x1 && y0 <= rect->y1
d259 1
a259 1
  return (box1->x0 <= box2->x1 && box1->y0 <= box2->y1
d262 16
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
