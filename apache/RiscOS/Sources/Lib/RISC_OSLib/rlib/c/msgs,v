head	4.5;
access;
symbols
	RISC_OSLib-5_97:4.5
	RISC_OSLib-5_96:4.5
	RISC_OSLib-5_95:4.5
	RISC_OSLib-5_94:4.5
	RISC_OSLib-5_93:4.5
	RISC_OSLib-5_92:4.5
	RISC_OSLib-5_91:4.5
	RISC_OSLib-5_90:4.5
	RISC_OSLib-5_89:4.5
	RISC_OSLib-5_88:4.5
	RISC_OSLib-5_87:4.5
	RISC_OSLib-5_86-1:4.5
	RISC_OSLib-5_86:4.5
	RISC_OSLib-5_85:4.5
	RISC_OSLib-5_84:4.5
	RISC_OSLib-5_83-2:4.5
	RISC_OSLib-5_83-1:4.5
	RISC_OSLib-5_83:4.5
	RISC_OSLib-5_82:4.5
	RISC_OSLib-5_81:4.5
	RISC_OSLib-5_75-2:4.4
	RISC_OSLib-5_80:4.5
	RISC_OSLib-5_79:4.4
	RISC_OSLib-5_78:4.4
	RISC_OSLib-5_75-1:4.4
	RISC_OSLib-5_77:4.4
	RISC_OSLib-5_76:4.4
	RISC_OSLib-5_75:4.4
	RISC_OSLib-5_74:4.4
	RISC_OSLib-5_73:4.4
	RISC_OSLib-5_72:4.4
	RISC_OSLib-5_71:4.4
	RISC_OSLib-5_70:4.4
	RISC_OSLib-5_69:4.4
	RISC_OSLib-5_68:4.4
	RISC_OSLib-5_67:4.4
	RISC_OSLib-5_66:4.4
	RISC_OSLib-5_65:4.4
	RISC_OSLib-5_64:4.4
	RISC_OSLib-5_63:4.4
	RISC_OSLib-5_62:4.4
	RISC_OSLib-5_61:4.4
	RISC_OSLib-5_60:4.4
	RISC_OSLib-5_59:4.4
	RISC_OSLib-5_58:4.4
	RISC_OSLib-5_57:4.4
	RISC_OSLib-5_56:4.4
	RISC_OSLib-5_55:4.4
	RISC_OSLib-5_54:4.4
	RISC_OSLib-5_53:4.4
	RISC_OSLib-5_52:4.4
	RISC_OSLib-5_51:4.4
	RO_5_07:4.4
	RISC_OSLib-5_50:4.4
	RISC_OSLib-5_49:4.4
	RISC_OSLib-5_46-4_64_2_1:4.4
	NoInlineAsm:4.4.0.2
	RISC_OSLib-5_48:4.4
	RISC_OSLib-5_47:4.4
	RISC_OSLib-5_46:4.4
	RISC_OSLib-5_45:4.4
	RISC_OSLib-5_44:4.4
	RISC_OSLib-5_43:4.4
	RISC_OSLib-5_42:4.4
	RISC_OSLib-5_41:4.3
	RISC_OSLib-5_40:4.3
	RISC_OSLib-5_39:4.3
	RISC_OSLib-5_38:4.3
	RISC_OSLib-5_37:4.3
	RISC_OSLib-5_36:4.3
	RISC_OSLib-5_35:4.3
	RISC_OSLib-5_34:4.3
	RISC_OSLib-5_33-4_50_2_1:4.2.6.1
	sbrodie_dev:4.2.0.6
	sbrodie_dev_bp:4.2
	RISC_OSLib-5_33:4.2
	RISC_OSLib-5_32:4.2
	RISC_OSLib-5_31:4.2
	RISC_OSLib-5_30:4.2
	RISC_OSLib-5_29:4.2
	RISC_OSLib-5_28:4.2
	RISC_OSLib-5_27:4.2
	RISC_OSLib-5_26:4.2
	RISC_OSLib-5_25:4.2
	RISC_OSLib-5_24:4.2
	RISC_OSLib-5_01-4_16_2_5:4.2
	RISC_OSLib-5_23:4.2
	RISC_OSLib-5_22:4.2
	RISC_OSLib-5_21:4.2
	RISC_OSLib-5_20:4.2
	RISC_OSLib-5_19:4.2
	RISC_OSLib-5_18:4.2
	RISC_OSLib-5_17:4.2
	RISC_OSLib-5_16:4.2
	RISC_OSLib-5_15:4.2
	dellis_autobuild_BaseSW:4.2
	RISC_OSLib-5_14:4.2
	RISC_OSLib-5_13:4.2
	RISC_OSLib-5_12:4.2
	RISC_OSLib-5_01-4_16_2_4:4.2
	RISC_OSLib-5_11:4.2
	RISC_OSLib-5_01-4_16_2_3:4.2
	RISC_OSLib-5_01-4_16_2_2:4.2
	RISC_OSLib-5_10:4.2
	RISC_OSLib-5_01-4_16_2_1:4.2
	Bethany:4.2.0.4
	RISC_OSLib-5_09:4.2
	RISC_OSLib-5_08:4.2
	RISC_OSLib-5_07:4.2
	RISC_OSLib-5_06:4.2
	RISC_OSLib-4_97-4_12_2_8:4.2
	RISC_OSLib-5_05:4.2
	RISC_OSLib-5_04:4.2
	sbrodie_sedwards_16Mar2000:4.2
	RISC_OSLib-5_03:4.2
	RISC_OSLib-5_02:4.2
	RISC_OSLib-4_97-4_12_2_7:4.2
	RISC_OSLib-5_01:4.2
	RISC_OSLib-5_00:4.2
	RISC_OSLib-4_99:4.2
	RISC_OSLib-4_98:4.2
	RISC_OSLib-4_97-4_12_2_6:4.2
	RISC_OSLib-4_97-4_12_2_5:4.2
	RISC_OSLib-4_97-4_12_2_4:4.2
	RISC_OSLib-4_97-4_12_2_3:4.2
	RISC_OSLib-4_97-4_12_2_2:4.2
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.2
	kbracey_32bit:4.2.0.2
	kbracey_32bit_bp:4.2
	dcotton_autobuild_BaseSW:4.3
	RISC_OSLib-4_97:4.2
	RISC_OSLib-4_96:4.2
	RISC_OSLib-4_95:4.2
	RISC_OSLib-4_94:4.2
	RISC_OSLib-4_93:4.2
	RISC_OSLib-4_92:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1
	Ursula_RiscPC:4.1.4.1.0.2
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.2
	RISC_OSLib-4_90:4.2
	RISC_OSLib-4_89:4.2
	Ursula_merge:4.1.4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2014.01.21.08.18.52;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	BnlJ7u9KIS8lxXlx;

4.4
date	2002.07.23.11.52.22;	author srevill;	state Exp;
branches;
next	4.3;

4.3
date	2001.08.23.13.53.52;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.10.01.09.14.34;	author kbracey;	state Exp;
branches
	4.2.6.1;
next	4.1;

4.1
date	96.11.05.09.25.12;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.6.1
date	2001.07.02.15.01.15;	author sbrodie;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.25.12;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.53.52;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.06.16.15.53.26;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.30.40;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.49.35;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Permit wildcards in RISC_OSLib application's messages files
msgs.c: includes a MessageTrans parser that duplicates MessageTrans_Lookup (needed because the lookup function returns pointers to static C strings). However, did not allow '?' wildcards in the message token names.

Version 5.80. Tagged as 'RISC_OSLib-5_80'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

/*
 * Title:   msgs.c
 * Purpose: provide support for messages resource file
 *          (Use this to make your applications "internationalisable!")
 * History: IDJ: 06-Feb-92: prepared for source release
 *
 */

#include <stdlib.h>

#include "msgs.h"
#include "swis.h"
#include "msgtrans.h"
#include "res.h"
#include "os.h"
#include "wimpt.h"

typedef struct msgs_block {
    msgtrans_control_block cb;
    char **lines;
    int n;
} msgs_block;

#define DEFAULT_FILE_NAME "RISC_OSLibrary:Messages"

static msgs_block main_msgs_block;
static msgs_block default_msgs_block;

static void __msgs_closefiles(void)
{
    if (main_msgs_block.lines)
        _swix(MessageTrans_CloseFile, _IN(0), &main_msgs_block.cb);
    if (default_msgs_block.lines)
        _swix(MessageTrans_CloseFile, _IN(0), &default_msgs_block.cb);
}

static void __msgs_readfile(char *name, msgs_block *mb)
{
    char *data;
    int n, size;
    char *p, *e;
    int c;
    char **lines;
    os_error *err;

    n = 1;
    size = _swi(MessageTrans_FileInfo, _IN(1)|_RETURN(2), name);
    data = malloc(size);
    if (!data) {
        wimpt_reporterror((os_error *)_swix(MessageTrans_ErrorLookup, _INR(0,2), "\0\0\0\0NoMem", 0, 0), 0);
        exit(1);
    }
    err = _swix(MessageTrans_OpenFile, _INR(0,2), &mb->cb, name, data);
    if (err) {
        wimpt_reporterror(err, 0);
        exit(1);
    }
    p = data + 4;
    e = data + size;
    n = 1;
    do {
        if (*p++ < ' ') {
            *(p-1) = 0;
            n++;
        }
    } while (p < e);
    lines = malloc(n * 4);
    if (!lines) {
        _swix(MessageTrans_CloseFile, _IN(0), &mb->cb);
        wimpt_reporterror((os_error *)_swix(MessageTrans_ErrorLookup, _INR(0,2), "\0\0\0\0NoMem", 0, 0), 0);
        exit(1);
    }
    p = data + 4;
    c = 0;
    n = 0;
    do {
        if (!c) {
            if (*p != '#' && *p > ' ')
                lines[n++] = p++;
        }
        c = *p++;
    } while (p < e);
    mb->lines = lines;
    mb->n = n;
}

static char *__msgs_lookup(char *tag, msgs_block *mb)
{
    int i, n;
    char *s, *t;
    char ct, cs;
    char **lines;

    n = mb->n;
    lines = mb->lines;
    for (i = 0; i < n; i++) {
        s = lines[i];
trynexttag:
        t = tag;
        while (1) {
            if (!(ct = *t++)) ct = ':';
            cs = *s++;
            if ((cs != ct) && (cs != '?')) {
                if (cs == '/') {               /* Could be a match because ':' == '/' */
                    if (ct == ':') {
                        do {
                            cs = *s++;         /* Skip to after ':' and return string */
                        } while (cs != ':');
                        return s;
                    }
                    goto trynexttag;           /* Not a match but try again because of '/' */
                }
                while (cs != ':') {            /* Skip forward as far as ':' searching for '/' */
                    cs = *s++;
                    if (cs == '/')             /* '/' => try next token */
                        goto trynexttag;
                }
                break;
            }
            if (ct == ':')
                return s;
        }
    }
    return 0;
}

msgtrans_control_block *msgs_main_control_block(void)
{
    return &main_msgs_block.cb;
}

msgtrans_control_block *msgs_default_control_block(void)
{
    if (!default_msgs_block.lines) {
        __msgs_readfile(DEFAULT_FILE_NAME, &default_msgs_block);
    }
    return &default_msgs_block.cb;
}

char *msgs_lookup(char *tag /*and default*/)
{
    char *m;

    m = __msgs_lookup(tag, &main_msgs_block);
    if (!m) {
        if (!default_msgs_block.lines) {
            __msgs_readfile(DEFAULT_FILE_NAME, &default_msgs_block);
        }
        m = __msgs_lookup(tag, &default_msgs_block);
        if (!m) {
            m = tag;
            while (*m) {
                if (*m++ == ':')
                    return m;
            }
            return tag;
        }
    }
    return m;
}

void msgs_init(void)
{
    char name[40];   /* Long enough for <Program$Dir>.Messages */

    res_findname("Messages", name);
    __msgs_readfile(name, &main_msgs_block);
    atexit(__msgs_closefiles);
}
@


4.4
log
@  Fixed to build with the latest cc (5.54) compiler.
Detail:
  This version now builds with cc-5_45. Note: it has not been verified as
  actually functioning correctly.
Admin:
  Tested in DSL Baseline build.

Version 5.42. Tagged as 'RISC_OSLib-5_42'
@
text
@a67 1
    int f, fs;
d131 1
a131 1
            if (cs != ct) {
@


4.3
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@d44 1
@


4.2
log
@Ursula branch merged.
StrongARMfudge flag removed.
StrongARM compatibility set according to AMBKernel flag in Hdr:RISCOS
strftime %U and %W specifiers fixed for week 0.

Version 4.89. Tagged as 'RISC_OSLib-4_89'
@
text
@d15 14
d30 1
a30 1
 * Title:  msgs.c
d32 3
a34 22
 *          (Use this to make your applications "internationalisable")
 * Author:  IDJ
 * Status:  under development
 * History: 17-Mar-89  IDJ created
 *          17-Mar-89  IDJ added call to res_findname to get full path of
 *                         messages file.
 *          21-Mar-89  IDJ added tracef's for debugging
 *          27-Jun-89  IDJ added dealing with comments/blank lines
 *          14-Nov-89  JSR added msgs_readfile to read messages from a named file.
 *          13-Jan-90  JRC added multiple tags with '/', ambiguous lookups with '?'
 *          24-Jan-90  IDJ fixed bug in msgs__match - previously a tag of say 'foo'
 *                         would match with 'foo1'
 *                         made i==n....  into i==n && *tag == '\0'
 *          30-May-91  ECN changed isalnum test for message tags to
 *                         'A' >= ch <= 'Z' || '0' >= ch <= '9'
 *          19-Nov-91  JRC Uses MessageTrans; new functions msgs_main_control_
 *                         block() and msgs_default_control_block(). Uses
 *                         wimpt_complain() every time the default messsages file
 *                         cannot be opened.
 *          10-Dec-91  ECN Changed to use RISC_OSLibrary$Path again.
 *          23-Mar-92  ECN Reverted to old messages lookup scheme.
 *          16-Jun-97  KJB Close messages file on exit, for safety's sake.
@


4.2.6.1
log
@  Merge of multiple versions of RISC_OSLib.
Detail:
  This work may be incomplete - hence import on a branch.
  It has NOT been tested.
Admin:
  Might even build.


Version 5.33, 4.50.2.1. Tagged as 'RISC_OSLib-5_33-4_50_2_1'
@
text
@a0 28
/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

d16 1
a16 1
 * Title:   msgs.c
d18 22
a39 3
 *          (Use this to make your applications "internationalisable!")
 * History: IDJ: 06-Feb-92: prepared for source release
 *
@


4.1
log
@Initial revision
@
text
@d39 1
d61 8
d83 1
a83 1
        wimpt_reporterror((os_error *)_swix(MessageTrans_ErrorLookup, _IN(0)|_IN(1)|_IN(2), "\0\0\0\0NoMem", 0, 0), 0);
d86 1
a86 1
    err = _swix(MessageTrans_OpenFile, _IN(0)|_IN(1)|_IN(2), &mb->cb, name, data);
d102 2
a103 1
        wimpt_reporterror((os_error *)_swix(MessageTrans_ErrorLookup, _IN(0)|_IN(1)|_IN(2), "\0\0\0\0NoMem", 0, 0), 0);
d201 1
@


4.1.4.1
log
@Do MessageTrans_CloseFile on exit, for safety's sake.
@
text
@a38 1
 *          16-Jun-97  KJB Close messages file on exit, for safety's sake.
a59 8
static void __msgs_closefiles(void)
{
    if (main_msgs_block.lines)
        _swix(MessageTrans_CloseFile, _IN(0), &main_msgs_block.cb);
    if (default_msgs_block.lines)
        _swix(MessageTrans_CloseFile, _IN(0), &default_msgs_block.cb);
}

d74 1
a74 1
        wimpt_reporterror((os_error *)_swix(MessageTrans_ErrorLookup, _INR(0,2), "\0\0\0\0NoMem", 0, 0), 0);
d77 1
a77 1
    err = _swix(MessageTrans_OpenFile, _INR(0,2), &mb->cb, name, data);
d93 1
a93 2
        _swix(MessageTrans_CloseFile, _IN(0), &mb->cb);
        wimpt_reporterror((os_error *)_swix(MessageTrans_ErrorLookup, _INR(0,2), "\0\0\0\0NoMem", 0, 0), 0);
a190 1
    atexit(__msgs_closefiles);
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
