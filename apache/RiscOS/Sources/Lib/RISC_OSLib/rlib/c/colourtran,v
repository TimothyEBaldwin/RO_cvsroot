head	4.2;
access;
symbols
	RISC_OSLib-5_97:4.2
	RISC_OSLib-5_96:4.2
	RISC_OSLib-5_95:4.2
	RISC_OSLib-5_94:4.2
	RISC_OSLib-5_93:4.2
	RISC_OSLib-5_92:4.2
	RISC_OSLib-5_91:4.2
	RISC_OSLib-5_90:4.2
	RISC_OSLib-5_89:4.2
	RISC_OSLib-5_88:4.2
	RISC_OSLib-5_87:4.2
	RISC_OSLib-5_86-1:4.2
	RISC_OSLib-5_86:4.2
	RISC_OSLib-5_85:4.2
	RISC_OSLib-5_84:4.2
	RISC_OSLib-5_83-2:4.2
	RISC_OSLib-5_83-1:4.2
	RISC_OSLib-5_83:4.2
	RISC_OSLib-5_82:4.2
	RISC_OSLib-5_81:4.2
	RISC_OSLib-5_75-2:4.2
	RISC_OSLib-5_80:4.2
	RISC_OSLib-5_79:4.2
	RISC_OSLib-5_78:4.2
	RISC_OSLib-5_75-1:4.2
	RISC_OSLib-5_77:4.2
	RISC_OSLib-5_76:4.2
	RISC_OSLib-5_75:4.2
	RISC_OSLib-5_74:4.2
	RISC_OSLib-5_73:4.2
	RISC_OSLib-5_72:4.2
	RISC_OSLib-5_71:4.2
	RISC_OSLib-5_70:4.2
	RISC_OSLib-5_69:4.2
	RISC_OSLib-5_68:4.2
	RISC_OSLib-5_67:4.2
	RISC_OSLib-5_66:4.2
	RISC_OSLib-5_65:4.2
	RISC_OSLib-5_64:4.2
	RISC_OSLib-5_63:4.2
	RISC_OSLib-5_62:4.2
	RISC_OSLib-5_61:4.2
	RISC_OSLib-5_60:4.2
	RISC_OSLib-5_59:4.2
	RISC_OSLib-5_58:4.2
	RISC_OSLib-5_57:4.2
	RISC_OSLib-5_56:4.2
	RISC_OSLib-5_55:4.2
	RISC_OSLib-5_54:4.2
	RISC_OSLib-5_53:4.2
	RISC_OSLib-5_52:4.2
	RISC_OSLib-5_51:4.2
	RO_5_07:4.2
	RISC_OSLib-5_50:4.2
	RISC_OSLib-5_49:4.2
	RISC_OSLib-5_46-4_64_2_1:4.2
	NoInlineAsm:4.2.0.2
	RISC_OSLib-5_48:4.2
	RISC_OSLib-5_47:4.2
	RISC_OSLib-5_46:4.2
	RISC_OSLib-5_45:4.2
	RISC_OSLib-5_44:4.2
	RISC_OSLib-5_43:4.2
	RISC_OSLib-5_42:4.2
	RISC_OSLib-5_41:4.2
	RISC_OSLib-5_40:4.2
	RISC_OSLib-5_39:4.2
	RISC_OSLib-5_38:4.2
	RISC_OSLib-5_37:4.2
	RISC_OSLib-5_36:4.2
	RISC_OSLib-5_35:4.2
	RISC_OSLib-5_34:4.2
	RISC_OSLib-5_33-4_50_2_1:4.1.14.1
	sbrodie_dev:4.1.0.14
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_01-4_16_2_5:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_01-4_16_2_4:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_01-4_16_2_3:4.1
	RISC_OSLib-5_01-4_16_2_2:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_01-4_16_2_1:4.1
	Bethany:4.1.0.12
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-4_97-4_12_2_8:4.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	RISC_OSLib-5_03:4.1
	RISC_OSLib-5_02:4.1
	RISC_OSLib-4_97-4_12_2_7:4.1
	RISC_OSLib-5_01:4.1
	RISC_OSLib-5_00:4.1
	RISC_OSLib-4_99:4.1
	RISC_OSLib-4_98:4.1
	RISC_OSLib-4_97-4_12_2_6:4.1
	RISC_OSLib-4_97-4_12_2_5:4.1
	RISC_OSLib-4_97-4_12_2_4:4.1
	RISC_OSLib-4_97-4_12_2_3:4.1
	RISC_OSLib-4_97-4_12_2_2:4.1
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.1
	kbracey_32bit:4.1.0.10
	kbracey_32bit_bp:4.1
	dcotton_autobuild_BaseSW:4.2
	RISC_OSLib-4_97:4.1
	RISC_OSLib-4_96:4.1
	RISC_OSLib-4_95:4.1
	RISC_OSLib-4_94:4.1
	RISC_OSLib-4_93:4.1
	RISC_OSLib-4_92:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.1
	RISC_OSLib-4_90:4.1
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2001.08.23.13.53.45;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.25.07;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.14.1;
next	;

4.1.1.1
date	96.11.05.09.25.07;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.53.24;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.29.50;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.49.07;	author nturton;	state Exp;
branches;
next	;

4.1.14.1
date	2001.07.02.15.01.13;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.2
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

/*
 * Title:  colourtran.c
 * Purpose: C interface to the ColourTrans SWIs
 * History: IDJ: 05-Feb-92: prepared for source release
 *
 */

#include <stddef.h>
#include "colourtran.h"
#include "os.h"
#include "wimp.h"

/* -------------------- ColourTrans SWIs -------------------------- */

#define ColourTrans_SelectTable                     0x00040740
#define ColourTrans_SelectGCOLTable                 0x00040741
#define ColourTrans_ReturnGCOL                      0x00040742
#define ColourTrans_SetGCOL                         0x00040743
#define ColourTrans_ReturnColourNumber              0x00040744
#define ColourTrans_ReturnGCOLForMode               0x00040745
#define ColourTrans_ReturnColourNumberForMode       0x00040746
#define ColourTrans_ReturnOppGCOL                   0x00040747
#define ColourTrans_SetOppGCOL                      0x00040748
#define ColourTrans_ReturnOppColourNumber           0x00040749
#define ColourTrans_ReturnOppGCOLForMode            0x0004074a
#define ColourTrans_ReturnOppColourNumberForMode    0x0004074b
#define ColourTrans_GCOLToColourNumber              0x0004074c
#define ColourTrans_ColourNumberToGCOL              0x0004074d
#define ColourTrans_ReturnFontColours               0x0004074e
#define ColourTrans_SetFontColours                  0x0004074f
#define ColourTrans_InvalidateCache                 0x00040750
#define ColourTrans_SetCalibration                  0x00040751
#define ColourTrans_ReadCalibration                 0x00040752
#define ColourTrans_ConvertDeviceColour             0x00040753
#define ColourTrans_ConvertDevicePalette            0x00040754
#define ColourTrans_ConvertRGBToCIE                 0x00040755
#define ColourTrans_ConvertCIEToRGB                 0x00040756

#pragma -s1

os_error *colourtran_select_table (int source_mode,
                                   wimp_paletteword *source_palette,
                                   int dest_mode,
                                   wimp_paletteword *dest_palette,
                                   void *buffer)
{
  os_regset r;
  os_error*e;

  r.r[0] = source_mode;
  r.r[1] = (int)source_palette;
  r.r[2] = dest_mode;
  r.r[3] = (int)dest_palette;
  r.r[4] = (int)buffer;

  e = os_swix(ColourTrans_SelectTable, &r);

  return(e);
}

#ifndef UROM
os_error *colourtran_select_GCOLtable (int source_mode,
                                       wimp_paletteword *source_palette,
                                       int dest_mode,
                                       wimp_paletteword *dest_palette,
                                       void *buffer)
{
  os_regset r;
  os_error *e;

  r.r[0] = source_mode;
  r.r[1] = (int)source_palette;
  r.r[2] = dest_mode;
  r.r[3] = (int)dest_palette;
  r.r[4] = (int)buffer;

  e = os_swix(ColourTrans_SelectGCOLTable, &r);

  return(e);
}
#endif

#ifndef UROM
os_error *colourtran_returnGCOL (wimp_paletteword entry, int *gcol)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;

  e = os_swix(ColourTrans_ReturnGCOL, &r);

  if (e == 0)
    *gcol = r.r[0];

  return(e);
}
#endif

os_error *colourtran_setGCOL (wimp_paletteword entry, int fore_back,
                              int gcol_in, int *gcol_out)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;
  r.r[3] = fore_back & 0x000fffff;
  r.r[4] = gcol_in & 0x000fffff;

  e = os_swix(ColourTrans_SetGCOL, &r);

  if (e == 0)
    *gcol_out = r.r[0];

  return(e);
}

#ifndef UROM
os_error *colourtran_return_colournumber (wimp_paletteword entry, int *col)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;

  e = os_swix(ColourTrans_ReturnColourNumber, &r);

  if (e == 0)
    *col = r.r[0];

  return(e);
}
#endif


os_error *colourtran_return_GCOLformode (wimp_paletteword entry,
                                           int dest_mode,
                                           wimp_paletteword *dest_palette,
                                           int *gcol)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;
  r.r[1] = dest_mode;
  r.r[2] = (int)dest_palette;

  e = os_swix(ColourTrans_ReturnGCOLForMode, &r);

  if (e == 0)
    *gcol = r.r[0];

  return(e);
}


os_error *colourtran_return_colourformode (wimp_paletteword entry,
                                           int dest_mode,
                                           wimp_paletteword *dest_palette,
                                           int *col)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;
  r.r[1] = dest_mode;
  r.r[2] = (int)dest_palette;

  e = os_swix(ColourTrans_ReturnColourNumberForMode, &r);

  if (e == 0)
    *col = r.r[0];

  return(e);
}

#ifndef UROM
os_error *colourtran_return_OppGCOL (wimp_paletteword entry, int *gcol)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;

  e = os_swix(ColourTrans_ReturnOppGCOL, &r);

  if (e == 0)
    *gcol = r.r[0];

  return(e);
}
#endif

#ifndef UROM
os_error *colourtran_setOppGCOL (wimp_paletteword entry, int fore_back,
                                int gcol_in, int *gcol_out)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;
  r.r[3] = fore_back & 0x000fffff;
  r.r[4] = gcol_in & 0x000fffff;

  e = os_swix(ColourTrans_SetOppGCOL, &r);

  if (e == 0)
    *gcol_out = r.r[0];

  return(e);
}
#endif

#ifndef UROM
os_error *colourtran_return_Oppcolournumber (wimp_paletteword entry,
                                            int *col)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;

  e = os_swix(ColourTrans_ReturnOppColourNumber, &r);

  if (e == 0)
    *col = r.r[0];

  return(e);
}
#endif

#ifndef UROM
os_error *colourtran_return_OppGCOLformode (wimp_paletteword entry,
                                            int dest_mode,
                                            wimp_paletteword *dest_palette,
                                            int *gcol)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;
  r.r[1] = dest_mode;
  r.r[2] = (int)dest_palette;

  e = os_swix(ColourTrans_ReturnOppGCOLForMode, &r);

  if (e == 0)
    *gcol = r.r[0];

  return(e);
}
#endif

#ifndef UROM
os_error *colourtran_return_Oppcolourformode (wimp_paletteword entry,
                                              int dest_mode,
                                              wimp_paletteword *dest_palette,
                                              int *col)
{
  os_regset r;
  os_error *e;

  r.r[0] = entry.word;
  r.r[1] = dest_mode;
  r.r[2] = (int)dest_palette;

  e = os_swix(ColourTrans_ReturnOppColourNumberForMode, &r);

  if (e == 0)
    *col = r.r[0];

  return(e);
}
#endif


#ifndef UROM
os_error *colourtran_GCOL_tocolournumber (int gcol, int *col)
{
  os_regset r;
  os_error *e;

  r.r[0] = gcol;

  e = os_swix(ColourTrans_GCOLToColourNumber, &r);

  if (e == 0)
    *col = r.r[0];

  return(e);
}
#endif

#ifndef UROM
os_error *colourtran_colournumbertoGCOL (int gcol, int *col)
{
  os_regset r;
  os_error *e;

  r.r[0] = gcol;

  e = os_swix(ColourTrans_ColourNumberToGCOL, &r);

  if (e == 0)
    *col = r.r[0];

  return(e);
}
#endif

#ifndef UROM
os_error *colourtran_returnfontcolours (font *handle,
                                        wimp_paletteword *backgnd,
                                        wimp_paletteword *foregnd,
                                        int *max_offset)
{
  os_regset r;
  os_error *e;

  r.r[0] = (int)*handle;
  r.r[1] = backgnd->word;
  r.r[2] = foregnd->word;
  r.r[3] = (int)*max_offset;

  e = os_swix(ColourTrans_ReturnFontColours, &r);

  if (e == 0)
  {
    *handle = r.r[0];
    backgnd->word = r.r[1];
    foregnd->word = r.r[2];
    *max_offset = r.r[3];
  }

  return(e);
}
#endif

os_error *colourtran_setfontcolours (font *handle,
                                     wimp_paletteword *backgnd,
                                     wimp_paletteword *foregnd,
                                     int *max_offset)
{
  os_regset r;
  os_error *e;

  r.r[0] = (int)*handle;
  r.r[1] = backgnd->word;
  r.r[2] = foregnd->word;
  r.r[3] = (int)*max_offset;

  e = os_swix(ColourTrans_SetFontColours, &r);

  if (e == 0)
  {
    *handle = r.r[0];
    backgnd->word = r.r[1];
    foregnd->word = r.r[2];
    *max_offset = r.r[3];
  }

  return(e);
}

#ifndef UROM
os_error *colourtran_invalidate_cache (void)
{
  os_regset r;

  return(os_swix(ColourTrans_InvalidateCache, &r));
}
#endif

os_error *colourtran_convert_device_colour (wimp_paletteword device, wimp_paletteword *rgb)
{
  os_regset r;
  os_error *e;

  r.r[1] = device.word;
  r.r[3] = 0;

  e = os_swix(ColourTrans_ConvertDeviceColour, &r);

  if (e == 0)
    (*rgb).word = r.r[2];

  return e;
}

#pragma -s0

/* end colourtran.c */
@


4.1
log
@Initial revision
@
text
@d15 14
d32 2
a33 6
 * Author:  IDJ
 * History:
 *          10-Apr-89 IDJ Created
 *          08-May-91 ECN #ifndefed out unused functions
 *          17-Jun-91: IDJ: return_GCOLformode put back for paint
 * 28-Oct-94: AMcC: Include colourtran_return_colourformode in ROM (for Paint)
a35 1
#ifndef __stddef_h
a36 1
#endif
d67 1
a67 1
#pragma -s1 
d69 1
a69 1
os_error *colourtran_select_table (int source_mode, 
d90 1
a90 1
os_error *colourtran_select_GCOLtable (int source_mode, 
d340 1
a340 1
os_error *colourtran_returnfontcolours (font *handle, 
@


4.1.14.1
log
@  Merge of multiple versions of RISC_OSLib.
Detail:
  This work may be incomplete - hence import on a branch.
  It has NOT been tested.
Admin:
  Might even build.


Version 5.33, 4.50.2.1. Tagged as 'RISC_OSLib-5_33-4_50_2_1'
@
text
@a0 28
/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

d18 6
a23 2
 * History: IDJ: 05-Feb-92: prepared for source release
 *
d26 1
d28 1
d59 1
a59 1
#pragma -s1
d61 1
a61 1
os_error *colourtran_select_table (int source_mode,
d82 1
a82 1
os_error *colourtran_select_GCOLtable (int source_mode,
d332 1
a332 1
os_error *colourtran_returnfontcolours (font *handle,
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
