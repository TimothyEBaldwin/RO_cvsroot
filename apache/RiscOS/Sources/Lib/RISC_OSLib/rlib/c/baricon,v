head	4.3;
access;
symbols
	RISC_OSLib-5_97:4.3
	RISC_OSLib-5_96:4.3
	RISC_OSLib-5_95:4.3
	RISC_OSLib-5_94:4.3
	RISC_OSLib-5_93:4.3
	RISC_OSLib-5_92:4.3
	RISC_OSLib-5_91:4.3
	RISC_OSLib-5_90:4.3
	RISC_OSLib-5_89:4.3
	RISC_OSLib-5_88:4.3
	RISC_OSLib-5_87:4.3
	RISC_OSLib-5_86-1:4.3
	RISC_OSLib-5_86:4.3
	RISC_OSLib-5_85:4.3
	RISC_OSLib-5_84:4.3
	RISC_OSLib-5_83-2:4.3
	RISC_OSLib-5_83-1:4.3
	RISC_OSLib-5_83:4.3
	RISC_OSLib-5_82:4.3
	RISC_OSLib-5_81:4.3
	RISC_OSLib-5_75-2:4.3
	RISC_OSLib-5_80:4.3
	RISC_OSLib-5_79:4.3
	RISC_OSLib-5_78:4.3
	RISC_OSLib-5_75-1:4.3
	RISC_OSLib-5_77:4.3
	RISC_OSLib-5_76:4.3
	RISC_OSLib-5_75:4.3
	RISC_OSLib-5_74:4.3
	RISC_OSLib-5_73:4.3
	RISC_OSLib-5_72:4.3
	RISC_OSLib-5_71:4.3
	RISC_OSLib-5_70:4.3
	RISC_OSLib-5_69:4.3
	RISC_OSLib-5_68:4.3
	RISC_OSLib-5_67:4.3
	RISC_OSLib-5_66:4.3
	RISC_OSLib-5_65:4.3
	RISC_OSLib-5_64:4.3
	RISC_OSLib-5_63:4.3
	RISC_OSLib-5_62:4.3
	RISC_OSLib-5_61:4.3
	RISC_OSLib-5_60:4.3
	RISC_OSLib-5_59:4.3
	RISC_OSLib-5_58:4.3
	RISC_OSLib-5_57:4.3
	RISC_OSLib-5_56:4.3
	RISC_OSLib-5_55:4.3
	RISC_OSLib-5_54:4.3
	RISC_OSLib-5_53:4.2
	RISC_OSLib-5_52:4.2
	RISC_OSLib-5_51:4.2
	RO_5_07:4.2
	RISC_OSLib-5_50:4.2
	RISC_OSLib-5_49:4.2
	RISC_OSLib-5_46-4_64_2_1:4.2
	NoInlineAsm:4.2.0.2
	RISC_OSLib-5_48:4.2
	RISC_OSLib-5_47:4.2
	RISC_OSLib-5_46:4.2
	RISC_OSLib-5_45:4.2
	RISC_OSLib-5_44:4.2
	RISC_OSLib-5_43:4.2
	RISC_OSLib-5_42:4.2
	RISC_OSLib-5_41:4.2
	RISC_OSLib-5_40:4.2
	RISC_OSLib-5_39:4.2
	RISC_OSLib-5_38:4.2
	RISC_OSLib-5_37:4.2
	RISC_OSLib-5_36:4.2
	RISC_OSLib-5_35:4.2
	RISC_OSLib-5_34:4.2
	RISC_OSLib-5_33-4_50_2_1:4.1.14.1
	sbrodie_dev:4.1.0.14
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_01-4_16_2_5:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_01-4_16_2_4:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_01-4_16_2_3:4.1
	RISC_OSLib-5_01-4_16_2_2:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_01-4_16_2_1:4.1
	Bethany:4.1.0.12
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-4_97-4_12_2_8:4.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	RISC_OSLib-5_03:4.1
	RISC_OSLib-5_02:4.1
	RISC_OSLib-4_97-4_12_2_7:4.1
	RISC_OSLib-5_01:4.1
	RISC_OSLib-5_00:4.1
	RISC_OSLib-4_99:4.1
	RISC_OSLib-4_98:4.1
	RISC_OSLib-4_97-4_12_2_6:4.1
	RISC_OSLib-4_97-4_12_2_5:4.1
	RISC_OSLib-4_97-4_12_2_4:4.1
	RISC_OSLib-4_97-4_12_2_3:4.1
	RISC_OSLib-4_97-4_12_2_2:4.1
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.1
	kbracey_32bit:4.1.0.10
	kbracey_32bit_bp:4.1
	dcotton_autobuild_BaseSW:4.2
	RISC_OSLib-4_97:4.1
	RISC_OSLib-4_96:4.1
	RISC_OSLib-4_95:4.1
	RISC_OSLib-4_94:4.1
	RISC_OSLib-4_93:4.1
	RISC_OSLib-4_92:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.1
	RISC_OSLib-4_90:4.1
	RISC_OSLib-4_89:4.1
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.1
	RISC_OSLib-4_87:4.1
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2009.05.31.17.58.58;	author pnaulls;	state Exp;
branches;
next	4.2;

4.2
date	2001.08.23.13.53.44;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.25.07;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.14.1;
next	;

4.1.1.1
date	96.11.05.09.25.07;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.53.21;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.29.44;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.49.04;	author nturton;	state Exp;
branches;
next	;

4.1.14.1
date	2001.07.02.15.01.12;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Normalise C and assembler include paths
Detail:
 This changes all the C and assembler includes to be a canoncial Unix format.
 Also match include paths to previous commit for EditIntern/DrawIntern/VerIntern
 Finally, also include some minor type fixes (NULL vs 0)
Admin:
 May be some other paths elsewhere in the source I'm not immediately able to fix.  Will address any issues ASAP, since this is a huge change.

Version 5.54. Not tagged
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

/*
 * Title: baricon.c
 * Purpose: Support placing of an icon on the icon bar.
 * History: IDJ: 05-Feb-92: prepared for source release
 *
 */

#include <string.h>
#include <stdlib.h>

#include "os.h"
#include "wimp.h"
#include "wimpt.h"
#include "trace.h"
#include "bbc.h"
#include "sprite.h"

#include "win.h"
#include "menu.h"
#include "event.h"

#include "baricon.h"

#include "swis.h"


static baricon_clickproc baricon__leftclickproc;

static void baricon__win_event_handler(wimp_eventstr *e, void *handle)
{

  handle = handle;
  tracef1("icon bar event %i.\n", e->e);
  if (e->e == wimp_EBUT)
  { /* key click */
    if ((e->data.but.m.bbits & wimp_BLEFT) != 0)
    {
      /* left click : call registered handler */
      tracef0("icon bar left click.\n");
      (*baricon__leftclickproc)(e->data.c.i);
    }
  }
}

static wimp_icreate baricon__i; /* icon structure */
static wimp_i baricon__result;

#define ONRIGHT  (-1)
#define ONLEFT   (-2)

static wimp_i do_baricon(
    char *spritename, int spritearea, baricon_clickproc proc, int L_or_R)
{

  sprite_info result;
  os_regset r;

  r.r[0] = 40;                              /* read sprite info */
  if (spritearea != 0 && spritearea != 1)   /* not system/wimp sprite pool */
     r.r[0] += 256;
  r.r[1] = spritearea;
  r.r[2] = (int)spritename;
  if (spritearea == 1)                      /* wimp pool */
      wimpt_noerr(wimp_spriteop_full(&r));
  else
      wimpt_noerr(os_swix(OS_SpriteOp, &r));
  result.width = r.r[3];
  result.height = r.r[4];
  result.mask = r.r[5];
  result.mode = r.r[6];

  baricon__i.w = (wimp_w) L_or_R; /* icon bar  - request L or R */
  baricon__i.i.box.x0 = 0;
  baricon__i.i.box.y0 = 0;
  baricon__i.i.box.x1 = result.width << bbc_modevar(result.mode, bbc_XEigFactor);
  baricon__i.i.box.y1 = result.height << bbc_modevar(result.mode, bbc_YEigFactor);
  baricon__i.i.flags =
    wimp_ISPRITE + wimp_INDIRECT + wimp_IHCENTRE + /* wimp_IVCENTRE + */
    (wimp_IBTYPE * wimp_BCLICKDEBOUNCE);

  if ((baricon__i.i.data.indirectsprite.name = malloc(13)) == 0)
     return 0;
  strncpy(baricon__i.i.data.indirectsprite.name, spritename, 12);
  baricon__i.i.data.indirectsprite.spritearea = (void*) spritearea;
  baricon__i.i.data.indirectsprite.nameisname = TRUE;
  wimp_create_icon(&baricon__i, &baricon__result);
  baricon__leftclickproc = proc;
  win_register_event_handler(win_ICONBAR, baricon__win_event_handler,
                             0);
  win_activeinc();
    /* >>>>This means that the application will stay loaded until explicitly
    unloaded. */
  return baricon__result;
}

wimp_i baricon(char *spritename, int spritearea, baricon_clickproc proc)
{
   return do_baricon(spritename, spritearea, proc, ONRIGHT);
}

#ifndef UROM
wimp_i baricon_left(char *spritename, int spritearea, baricon_clickproc proc)
{
   return do_baricon(spritename, spritearea, proc, ONLEFT);
}
#endif

#define baricon__max(a,b)  (a>b)?(a):(b)

#ifndef UROM
static wimp_i do_baricon_textandsprite(char *spritename, char *text,
                             int bufflen, int spritearea, baricon_clickproc proc, int L_or_R)
{

  sprite_info result;
  os_regset r;

  wimpt_checkmode();
  r.r[0] = 40;                              /* read sprite info */
  if (spritearea != 0 && spritearea != 1)   /* not system/wimp sprite pool */
     r.r[0] += 256;
  r.r[1] = spritearea;
  r.r[2] = (int)spritename;
  if (spritearea == 1)                      /* wimp pool */
      wimpt_noerr(wimp_spriteop_full(&r));
  else
      wimpt_noerr(os_swix(OS_SpriteOp, &r));
  result.width = r.r[3];
  result.height = r.r[4];
  result.mask = r.r[5];
  result.mode = r.r[6];

  baricon__i.w = (wimp_w) L_or_R; /* icon bar  - request L or R */
  baricon__i.i.box.x0 = 0;
  baricon__i.i.box.y0 = -16;
  baricon__i.i.box.x1 = baricon__max(bufflen * (wimpt_dx() * bbc_vduvar(bbc_GCharSpaceX)),
                                     result.width << bbc_modevar(result.mode, bbc_XEigFactor));
  baricon__i.i.box.y1 = (result.height << bbc_modevar(result.mode, bbc_YEigFactor))
                        + (wimpt_dy() * bbc_vduvar(bbc_GCharSpaceY)) - 16;
  baricon__i.i.flags =
    wimp_ISPRITE + wimp_ITEXT + wimp_INDIRECT + wimp_IHCENTRE
                 + (wimp_IBTYPE * wimp_BCLICKDEBOUNCE)
                 + (wimp_IFORECOL * 7)   /* black */
                 + (wimp_IBACKCOL * 1);  /* v. light grey */

  if ((baricon__i.i.data.indirecttext.validstring = malloc(14)) == 0)
     return 0;
  strcpy(baricon__i.i.data.indirecttext.validstring, "s");
  strncat(baricon__i.i.data.indirecttext.validstring, spritename, 13);
  baricon__i.i.data.indirecttext.buffer = text;
  baricon__i.i.data.indirecttext.bufflen = bufflen;
  wimp_create_icon(&baricon__i, &baricon__result);
  baricon__leftclickproc = proc;
  win_register_event_handler(win_ICONBAR, baricon__win_event_handler,
                             0);
  win_activeinc();
    /* >>>>This means that the application will stay loaded until explicitly
    unloaded. */
  return baricon__result;
}
#endif

#ifndef UROM
wimp_i baricon_textandsprite(char *spritename, char *text,
                             int bufflen, int spritearea, baricon_clickproc proc)
{
   return do_baricon_textandsprite(spritename, text, bufflen, spritearea, proc, ONRIGHT);
}
#endif

#ifndef UROM
wimp_i baricon_textandsprite_left(char *spritename, char *text,
                             int bufflen, int spritearea, baricon_clickproc proc)
{
   return do_baricon_textandsprite(spritename, text, bufflen, spritearea, proc, ONLEFT);
}
#endif

#ifndef UROM
wimp_i baricon_newsprite(char *newsprite)
{
  strcpy(baricon__i.i.data.indirectsprite.name, newsprite);
  wimp_set_icon_state((wimp_w)-1, baricon__result, 0, 0);
  return baricon__result;
}
#endif

/* end */
@


4.2
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@d39 4
a42 4
#include "h.os"
#include "h.wimp"
#include "h.wimpt"
#include "h.trace"
d46 3
a48 3
#include "h.win"
#include "h.menu"
#include "h.event"
d50 1
a50 1
#include "h.baricon"
@


4.1
log
@Initial revision
@
text
@d15 14
d32 2
a33 14
 * History:
 *   21-Mar-88 WRS extracted from ArcEdit
 *   14-Apr-89 IDJ fixed Cast problem in baricon__win_event_handler
 *                 usr function was passed in via void *handle. It is now
 *                 (under C3.00), illegal to cast it back to func ptr.
 *    6-Jun-89 IDJ last minute hack - added baricon_newsprite
 *    7-Jun-89 IDJ extra hack. Roger says redraw of icon bar not good,
 *                             so do horrible grubbies to stop this
 *   13-Mar-90 IDJ allow multiple calls to baricon (ie remove some statics).
 *                 set icon size correctly (thanks for help from Neil)
 *   24-Apr-90 IDJ added baricon_text_and_sprite()
 *   23-Jul-90 LDS/IDJ added baricon_left (split baricon into do_baricon)
 *   08-May-91 ECN #ifndefed out unused ROM functions
 *   09-May-91 ECN use swi names instead of nos.
d53 1
a53 1

d62 4
a65 2
  if (e->e == wimp_EBUT) { /* key click */
    if ((e->data.but.m.bbits & wimp_BLEFT) != 0) {
d69 2
a70 2
    };
  };
d80 1
a80 1
    char *spritename, int spritearea, baricon_clickproc proc, int L_or_R)
a82 1
  /* 13-Mar-90: IDJ added code to set icon size correctly */
a85 1
  /* don't use sprite.c 'cos it's rubbish */
d98 2
a99 2
  result.mode = r.r[6];

d115 1
a115 1
  baricon__leftclickproc = proc;
d140 1
a140 1
                             int bufflen, int spritearea, baricon_clickproc proc, int L_or_R)
a142 1
  /* 13-Mar-90: IDJ added code to set icon size correctly */
a146 1
  /* don't use sprite.c 'cos it's rubbish */
d159 2
a160 2
  result.mode = r.r[6];

d167 1
a167 1
                        + (wimpt_dy() * bbc_vduvar(bbc_GCharSpaceY)) - 16;
d169 1
a169 1
    wimp_ISPRITE + wimp_ITEXT + wimp_INDIRECT + wimp_IHCENTRE
d181 1
a181 1
  baricon__leftclickproc = proc;
@


4.1.14.1
log
@  Merge of multiple versions of RISC_OSLib.
Detail:
  This work may be incomplete - hence import on a branch.
  It has NOT been tested.
Admin:
  Might even build.


Version 5.33, 4.50.2.1. Tagged as 'RISC_OSLib-5_33-4_50_2_1'
@
text
@a0 28
/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

d18 14
a31 2
 * History: IDJ: 05-Feb-92: prepared for source release
 *
d51 1
a51 1

d60 2
a61 4
  if (e->e == wimp_EBUT)
  { /* key click */
    if ((e->data.but.m.bbits & wimp_BLEFT) != 0)
    {
d65 2
a66 2
    }
  }
d76 1
a76 1
    char *spritename, int spritearea, baricon_clickproc proc, int L_or_R)
d79 1
d83 1
d96 2
a97 2
  result.mode = r.r[6];

d113 1
a113 1
  baricon__leftclickproc = proc;
d138 1
a138 1
                             int bufflen, int spritearea, baricon_clickproc proc, int L_or_R)
d141 1
d146 1
d159 2
a160 2
  result.mode = r.r[6];

d167 1
a167 1
                        + (wimpt_dy() * bbc_vduvar(bbc_GCharSpaceY)) - 16;
d169 1
a169 1
    wimp_ISPRITE + wimp_ITEXT + wimp_INDIRECT + wimp_IHCENTRE
d181 1
a181 1
  baricon__leftclickproc = proc;
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
