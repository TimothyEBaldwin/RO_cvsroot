head	4.4;
access;
symbols
	RISC_OSLib-5_97:4.4
	RISC_OSLib-5_96:4.4
	RISC_OSLib-5_95:4.4
	RISC_OSLib-5_94:4.4
	RISC_OSLib-5_93:4.4
	RISC_OSLib-5_92:4.4
	RISC_OSLib-5_91:4.4
	RISC_OSLib-5_90:4.4
	RISC_OSLib-5_89:4.4
	RISC_OSLib-5_88:4.4
	RISC_OSLib-5_87:4.4
	RISC_OSLib-5_86-1:4.4
	RISC_OSLib-5_86:4.4
	RISC_OSLib-5_85:4.4
	RISC_OSLib-5_84:4.4
	RISC_OSLib-5_83-2:4.4
	RISC_OSLib-5_83-1:4.4
	RISC_OSLib-5_83:4.4
	RISC_OSLib-5_82:4.4
	RISC_OSLib-5_81:4.4
	RISC_OSLib-5_75-2:4.4
	RISC_OSLib-5_80:4.4
	RISC_OSLib-5_79:4.4
	RISC_OSLib-5_78:4.4
	RISC_OSLib-5_75-1:4.4
	RISC_OSLib-5_77:4.4
	RISC_OSLib-5_76:4.4
	RISC_OSLib-5_75:4.4
	RISC_OSLib-5_74:4.4
	RISC_OSLib-5_73:4.4
	RISC_OSLib-5_72:4.4
	RISC_OSLib-5_71:4.4
	RISC_OSLib-5_70:4.4
	RISC_OSLib-5_69:4.4
	RISC_OSLib-5_68:4.4
	RISC_OSLib-5_67:4.4
	RISC_OSLib-5_66:4.4
	RISC_OSLib-5_65:4.4
	RISC_OSLib-5_64:4.4
	RISC_OSLib-5_63:4.4
	RISC_OSLib-5_62:4.4
	RISC_OSLib-5_61:4.4
	RISC_OSLib-5_60:4.4
	RISC_OSLib-5_59:4.4
	RISC_OSLib-5_58:4.4
	RISC_OSLib-5_57:4.4
	RISC_OSLib-5_56:4.4
	RISC_OSLib-5_55:4.4
	RISC_OSLib-5_54:4.4
	RISC_OSLib-5_53:4.3
	RISC_OSLib-5_52:4.3
	RISC_OSLib-5_51:4.3
	RO_5_07:4.3
	RISC_OSLib-5_50:4.3
	RISC_OSLib-5_49:4.3
	RISC_OSLib-5_46-4_64_2_1:4.3
	NoInlineAsm:4.3.0.2
	RISC_OSLib-5_48:4.3
	RISC_OSLib-5_47:4.3
	RISC_OSLib-5_46:4.3
	RISC_OSLib-5_45:4.3
	RISC_OSLib-5_44:4.3
	RISC_OSLib-5_43:4.3
	RISC_OSLib-5_42:4.3
	RISC_OSLib-5_41:4.3
	RISC_OSLib-5_40:4.3
	RISC_OSLib-5_39:4.3
	RISC_OSLib-5_38:4.3
	RISC_OSLib-5_37:4.3
	RISC_OSLib-5_36:4.3
	RISC_OSLib-5_35:4.3
	RISC_OSLib-5_34:4.3
	RISC_OSLib-5_33-4_50_2_1:4.2.6.1
	sbrodie_dev:4.2.0.6
	sbrodie_dev_bp:4.2
	RISC_OSLib-5_33:4.2
	RISC_OSLib-5_32:4.2
	RISC_OSLib-5_31:4.2
	RISC_OSLib-5_30:4.2
	RISC_OSLib-5_29:4.2
	RISC_OSLib-5_28:4.2
	RISC_OSLib-5_27:4.2
	RISC_OSLib-5_26:4.2
	RISC_OSLib-5_25:4.2
	RISC_OSLib-5_24:4.2
	RISC_OSLib-5_01-4_16_2_5:4.2
	RISC_OSLib-5_23:4.2
	RISC_OSLib-5_22:4.2
	RISC_OSLib-5_21:4.2
	RISC_OSLib-5_20:4.2
	RISC_OSLib-5_19:4.2
	RISC_OSLib-5_18:4.2
	RISC_OSLib-5_17:4.2
	RISC_OSLib-5_16:4.2
	RISC_OSLib-5_15:4.2
	dellis_autobuild_BaseSW:4.2
	RISC_OSLib-5_14:4.2
	RISC_OSLib-5_13:4.2
	RISC_OSLib-5_12:4.2
	RISC_OSLib-5_01-4_16_2_4:4.2
	RISC_OSLib-5_11:4.2
	RISC_OSLib-5_01-4_16_2_3:4.2
	RISC_OSLib-5_01-4_16_2_2:4.2
	RISC_OSLib-5_10:4.2
	RISC_OSLib-5_01-4_16_2_1:4.2
	Bethany:4.2.0.4
	RISC_OSLib-5_09:4.2
	RISC_OSLib-5_08:4.2
	RISC_OSLib-5_07:4.2
	RISC_OSLib-5_06:4.2
	RISC_OSLib-4_97-4_12_2_8:4.2
	RISC_OSLib-5_05:4.2
	RISC_OSLib-5_04:4.2
	sbrodie_sedwards_16Mar2000:4.2
	RISC_OSLib-5_03:4.2
	RISC_OSLib-5_02:4.2
	RISC_OSLib-4_97-4_12_2_7:4.2
	RISC_OSLib-5_01:4.2
	RISC_OSLib-5_00:4.2
	RISC_OSLib-4_99:4.2
	RISC_OSLib-4_98:4.2
	RISC_OSLib-4_97-4_12_2_6:4.2
	RISC_OSLib-4_97-4_12_2_5:4.2
	RISC_OSLib-4_97-4_12_2_4:4.2
	RISC_OSLib-4_97-4_12_2_3:4.2
	RISC_OSLib-4_97-4_12_2_2:4.2
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.2
	kbracey_32bit:4.2.0.2
	kbracey_32bit_bp:4.2
	dcotton_autobuild_BaseSW:4.3
	RISC_OSLib-4_97:4.2
	RISC_OSLib-4_96:4.2
	RISC_OSLib-4_95:4.2
	RISC_OSLib-4_94:4.2
	RISC_OSLib-4_93:4.2
	RISC_OSLib-4_92:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	sforrest_daytona_appflash-0_31:4.1
	RISC_OSLib-4_91:4.2
	RISC_OSLib-4_90:4.2
	RISC_OSLib-4_89:4.2
	Ursula_merge:4.1
	RISC_OSLib-4_88:4.2
	RISC_OSLib-4_87:4.2
	blaughto_daytona_appflash-0_30:4.1
	rmanby_clib-4_86:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2009.05.31.17.58.58;	author pnaulls;	state Exp;
branches;
next	4.3;

4.3
date	2001.08.23.13.53.43;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.08.27.10.01.17;	author smiddle;	state Exp;
branches
	4.2.6.1;
next	4.1;

4.1
date	96.11.05.09.25.07;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.6.1
date	2001.07.02.15.01.12;	author sbrodie;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.25.07;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.53.20;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.29.41;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.49.03;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	98.08.24.11.56.52;	author smiddle;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Normalise C and assembler include paths
Detail:
 This changes all the C and assembler includes to be a canoncial Unix format.
 Also match include paths to previous commit for EditIntern/DrawIntern/VerIntern
 Finally, also include some minor type fixes (NULL vs 0)
Admin:
 May be some other paths elsewhere in the source I'm not immediately able to fix.  Will address any issues ASAP, since this is a huge change.

Version 5.54. Not tagged
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/

/*
 * Title:   alarm.c
 * Purpose: alarm facilities for wimp programs, using non-busy waiting
 *          for idle events
 * History: IDJ: 05-Feb-92: prepared for source release
 *
 */

#include <stdlib.h>
#include <limits.h>
#include "alarm.h"
#include "werr.h"
#include "os.h"
#include "msgs.h"
#include "swis.h"
#include "VerIntern/messages.h"

#define alarm__laterthan(t1,t2) (t1 > t2)


typedef struct alarm__str
        {
           struct alarm__str *next;
           int at;
           alarm_handler proc;
           void *handle;
        } ALARM;

/* the list of pending alarms */
static ALARM *alarm__pending_list = 0;


void alarm_init(void)
{
  ALARM *p, *save_p;

  if (alarm__pending_list != 0)
  {
    p = alarm__pending_list;
    while (p != 0)
    {
      save_p = p;
      p = p->next;
      free(save_p);
    }
    alarm__pending_list = 0;
  }
}



int alarm_timenow(void)
{
  os_regset r;
  os_error *e;

  if ((e = os_swix(OS_ReadMonotonicTime, &r)) != 0)
  {
       werr (TRUE, msgs_lookup(MSGS_alarm1));
       return 0;   /* compiler likes this !*/
  }
  else
       return (r.r[0]);
}


int alarm_timedifference(int t1, int t2)
{
  /*
   * wrap-round of timer is not really a problem
   * we could just do a subtraction (since large_-ve - large_+ve == small+ve
   * but this kludge makes doubly sure (I think)
   */

   if (t1>0 && t2<0)
   {
     t1 |= 0x80000000;   /* ie. neg distance from 0 */
     t2 &= ~0x80000000;  /* ie. pos distance from 0 */
   }
   return(t2 -t1);
}


void alarm_set(int at, alarm_handler proc, void *handle)
{
  ALARM *p, *save_p, *new;

  p = alarm__pending_list;
  save_p = p;

  /* find where to put the alarm (in time) */
  while (p!=0 && alarm__laterthan(at, p->at))
  {
#ifdef TRACE
  tracef1("at = %d\n", (int)(p->handle));
#endif
    save_p = p;
    p = p->next;
  }

  /* insert new pending alarm */
  if((new = malloc(sizeof(ALARM)))==0)
    werr(TRUE, msgs_lookup(MSGS_alarm2));
  new->next = p;
  new->proc = proc;
  new->handle = handle;
  new->at = at;
  if(save_p == p)
    alarm__pending_list = new;
  else
    save_p->next = new;
}



BOOL alarm_next(int *result)
{
  if (alarm__pending_list != 0)
  {
    /* if there's a pending alarm say when it's for */
    *result = alarm__pending_list->at;
    return TRUE;
  }
  else
    return FALSE;
}



void alarm_callnext(void)
{
  ALARM *next_alarm;
  alarm_handler proc_to_call;
  int called_at;
  void *handle_to_pass;

  if (alarm__pending_list != 0)
  {
    /* save details of next alarm */
    proc_to_call = alarm__pending_list->proc;
    called_at = alarm__pending_list->at;
    handle_to_pass = alarm__pending_list->handle;

    /* farewell and adieu to the next pending alarm */
    next_alarm = alarm__pending_list;
    alarm__pending_list = alarm__pending_list->next;
    free(next_alarm);

    /* call supplied routine last (in case it goes bang!) */
    proc_to_call(called_at, handle_to_pass);
  }
}

#ifndef UROM
void alarm_remove(int at, void *handle)
{
  ALARM *p, *save_p;

  p = alarm__pending_list;
  save_p = p;

  while(p != 0)
  {
    if(p->at == at && p->handle == handle)
      break;
    else
    {
      save_p = p;
      p = p->next;
    }
  }

  if(p != 0)
  {
    if(save_p == p)
      alarm__pending_list = p->next;
    else
      save_p->next = p->next;
    free(p);
  }
}
#endif

void alarm_removeall(void *handle)
{
  ALARM *p, *save_p;

  p = alarm__pending_list;
  save_p = p;

  while(p != 0)
    if(p->handle == handle)
    {
      if(save_p == p)
      {
        alarm__pending_list = p->next;
        p = alarm__pending_list;
        free(save_p);
        save_p = p;
      }
      else
      {
        save_p->next = p->next;
        free(p);
        p = save_p->next;
      }
    }
    else
    {
      save_p = p;
      p = p->next;
    }
}

BOOL alarm_anypending(void *handle)
{
  ALARM *p = alarm__pending_list;

  while(p != 0)
  {
    if(p->handle == handle) return TRUE;
    p = p->next;
  }

  return FALSE;
}
@


4.3
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@d44 1
a44 1
#include "h.verintern.messages"
@


4.2
log
@Merged Spinner branch changes onto trunk (new RCA messages files
and Makefile changes). Convert to srccommit while we're at it.
Removed a few $Revision's to prevent future spurious merge clashes.

Version 4.87. Tagged as 'RISC_OSLib-4_87'
@
text
@d15 13
d33 2
a34 8
 * Author:  IDJ
 * Status:  under development
 * History:   20-Mar-89 IDJ created
 *            21-Mar-89 IDJ modified kludge to alarm_timedifference
 *            21-Mar-89 IDJ added alarm__laterthan macro
 *            08-May-91 ECN #ifndefed out unused ROM functions
 *            09-May-91 ECN use swi names instead of nos.
 *            14-Jun-91 IDJ timedifference put back in 
d46 1
a46 1
#define alarm__laterthan(t1,t2) (t1 > t2)   
d97 1
a97 1
  /* 
d128 1
a128 1
  
d164 1
a164 1
  
d175 1
a175 1
    free(next_alarm); 
@


4.2.6.1
log
@  Merge of multiple versions of RISC_OSLib.
Detail:
  This work may be incomplete - hence import on a branch.
  It has NOT been tested.
Admin:
  Might even build.


Version 5.33, 4.50.2.1. Tagged as 'RISC_OSLib-5_33-4_50_2_1'
@
text
@a0 27
/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* © Acorn Computers Ltd, 1992.                                         */
/*                                                                      */
/* This file forms part of an unsupported source release of RISC_OSLib. */
/*                                                                      */
/* It may be freely used to create executable images for saleable       */
/* products but cannot be sold in source form or as an object library   */
/* without the prior written consent of Acorn Computers Ltd.            */
/*                                                                      */
/* If this file is re-distributed (even if modified) it should retain   */
/* this copyright notice.                                               */
/*                                                                      */
/************************************************************************/
d20 8
a27 2
 * History: IDJ: 05-Feb-92: prepared for source release
 *
d39 1
a39 1
#define alarm__laterthan(t1,t2) (t1 > t2)
d90 1
a90 1
  /*
d121 1
a121 1

d157 1
a157 1

d168 1
a168 1
    free(next_alarm);
@


4.1
log
@Initial revision
@
text
@a235 1
#ifndef UROM
a247 1
#endif
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Put alarm_anypending() back into ROM builds for NCFresco
@
text
@d236 1
d249 1
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
