head	4.128;
access;
symbols
	RISC_OSLib-5_97:4.128
	RISC_OSLib-5_96:4.127
	RISC_OSLib-5_95:4.126
	RISC_OSLib-5_94:4.125
	RISC_OSLib-5_93:4.124
	RISC_OSLib-5_92:4.123
	RISC_OSLib-5_91:4.122
	RISC_OSLib-5_90:4.121
	RISC_OSLib-5_89:4.120
	RISC_OSLib-5_88:4.119
	RISC_OSLib-5_87:4.118
	RISC_OSLib-5_86-1:4.116
	RISC_OSLib-5_86:4.116
	RISC_OSLib-5_85:4.115
	RISC_OSLib-5_84:4.114
	RISC_OSLib-5_83-2:4.113
	RISC_OSLib-5_83-1:4.113
	RISC_OSLib-5_83:4.113
	RISC_OSLib-5_82:4.109
	RISC_OSLib-5_81:4.108
	RISC_OSLib-5_75-2:4.102
	RISC_OSLib-5_80:4.107
	RISC_OSLib-5_79:4.106
	RISC_OSLib-5_78:4.105
	RISC_OSLib-5_75-1:4.102
	RISC_OSLib-5_77:4.104
	RISC_OSLib-5_76:4.103
	RISC_OSLib-5_75:4.102
	RISC_OSLib-5_74:4.101
	RISC_OSLib-5_73:4.100
	RISC_OSLib-5_72:4.99
	RISC_OSLib-5_71:4.98
	RISC_OSLib-5_70:4.97
	RISC_OSLib-5_69:4.96
	RISC_OSLib-5_68:4.95
	RISC_OSLib-5_67:4.94
	RISC_OSLib-5_66:4.92
	RISC_OSLib-5_65:4.91
	RISC_OSLib-5_64:4.90
	RISC_OSLib-5_63:4.88
	RISC_OSLib-5_62:4.87
	RISC_OSLib-5_61:4.86
	RISC_OSLib-5_60:4.85
	RISC_OSLib-5_59:4.84
	RISC_OSLib-5_58:4.83
	RISC_OSLib-5_57:4.82
	RISC_OSLib-5_56:4.81
	RISC_OSLib-5_55:4.80
	RISC_OSLib-5_54:4.79
	RISC_OSLib-5_53:4.74
	RISC_OSLib-5_52:4.72
	RISC_OSLib-5_51:4.71
	RO_5_07:4.70
	RISC_OSLib-5_50:4.70
	RISC_OSLib-5_49:4.69
	RISC_OSLib-5_46-4_64_2_1:4.64.2.1
	NoInlineAsm:4.64.0.2
	RISC_OSLib-5_48:4.68
	RISC_OSLib-5_47:4.66
	RISC_OSLib-5_46:4.64
	RISC_OSLib-5_45:4.63
	RISC_OSLib-5_44:4.61
	RISC_OSLib-5_43:4.60
	RISC_OSLib-5_42:4.59
	RISC_OSLib-5_41:4.58
	RISC_OSLib-5_40:4.57
	RISC_OSLib-5_39:4.56
	RISC_OSLib-5_38:4.55
	RISC_OSLib-5_37:4.54
	RISC_OSLib-5_36:4.53
	RISC_OSLib-5_35:4.52
	RISC_OSLib-5_34:4.51
	RISC_OSLib-5_33-4_50_2_1:4.50.2.1
	sbrodie_dev:4.50.0.2
	sbrodie_dev_bp:4.50
	RISC_OSLib-5_33:4.50
	RISC_OSLib-5_32:4.49
	RISC_OSLib-5_31:4.48
	RISC_OSLib-5_30:4.47
	RISC_OSLib-5_29:4.46
	RISC_OSLib-5_28:4.45
	RISC_OSLib-5_27:4.44
	RISC_OSLib-5_26:4.43
	RISC_OSLib-5_25:4.42
	RISC_OSLib-5_24:4.41
	RISC_OSLib-5_01-4_16_2_5:4.16.2.5
	RISC_OSLib-5_23:4.40
	RISC_OSLib-5_22:4.39
	RISC_OSLib-5_21:4.38
	RISC_OSLib-5_20:4.37
	RISC_OSLib-5_19:4.35
	RISC_OSLib-5_18:4.34
	RISC_OSLib-5_17:4.33
	RISC_OSLib-5_16:4.32
	RISC_OSLib-5_15:4.31
	dellis_autobuild_BaseSW:4.30
	RISC_OSLib-5_14:4.30
	RISC_OSLib-5_13:4.29
	RISC_OSLib-5_12:4.28
	RISC_OSLib-5_01-4_16_2_4:4.16.2.4
	RISC_OSLib-5_11:4.27
	RISC_OSLib-5_01-4_16_2_3:4.16.2.3
	RISC_OSLib-5_01-4_16_2_2:4.16.2.2
	RISC_OSLib-5_10:4.26
	RISC_OSLib-5_01-4_16_2_1:4.16.2.1
	Bethany:4.16.0.2
	RISC_OSLib-5_09:4.25
	RISC_OSLib-5_08:4.23
	RISC_OSLib-5_07:4.22
	RISC_OSLib-5_06:4.21
	RISC_OSLib-4_97-4_12_2_8:4.12.2.8
	RISC_OSLib-5_05:4.20
	RISC_OSLib-5_04:4.19
	sbrodie_sedwards_16Mar2000:4.18
	RISC_OSLib-5_03:4.18
	RISC_OSLib-5_02:4.17
	RISC_OSLib-4_97-4_12_2_7:4.12.2.7
	RISC_OSLib-5_01:4.16
	RISC_OSLib-5_00:4.15
	RISC_OSLib-4_99:4.14
	RISC_OSLib-4_98:4.13
	RISC_OSLib-4_97-4_12_2_6:4.12.2.6
	RISC_OSLib-4_97-4_12_2_5:4.12.2.5
	RISC_OSLib-4_97-4_12_2_4:4.12.2.4
	RISC_OSLib-4_97-4_12_2_3:4.12.2.3
	RISC_OSLib-4_97-4_12_2_2:4.12.2.2
	sbrodie_RISC_OSLib-4_97-4_12_2_1:4.12.2.1
	kbracey_32bit:4.12.0.2
	kbracey_32bit_bp:4.12
	dcotton_autobuild_BaseSW:4.51
	RISC_OSLib-4_97:4.12
	RISC_OSLib-4_96:4.11
	RISC_OSLib-4_95:4.10
	RISC_OSLib-4_94:4.9
	RISC_OSLib-4_93:4.8
	RISC_OSLib-4_92:4.7
	RISC_OSLib-4_91:4.6
	RISC_OSLib-4_90:4.5
	RISC_OSLib-4_89:4.4
	RISC_OSLib-4_88:4.3
	RISC_OSLib-4_87:4.2;
locks; strict;
comment	@# @;


4.128
date	2018.06.11.00.05.07;	author jlee;	state Exp;
branches;
next	4.127;
commitid	B7wQuIyWYAjnjNFA;

4.127
date	2018.06.10.22.59.51;	author jlee;	state Exp;
branches;
next	4.126;
commitid	Gm9P7LGkgxxZWMFA;

4.126
date	2018.04.14.16.06.01;	author jlee;	state Exp;
branches;
next	4.125;
commitid	afB85cupMVhCuqyA;

4.125
date	2017.10.29.18.36.12;	author rsprowson;	state Exp;
branches;
next	4.124;
commitid	5bYJCEyn9zRWGYcA;

4.124
date	2017.09.03.22.22.18;	author jlee;	state Exp;
branches;
next	4.123;
commitid	o2klppFenR57KN5A;

4.123
date	2016.05.28.18.55.59;	author jlee;	state Exp;
branches;
next	4.122;
commitid	iLtWPZpTlif3uh8z;

4.122
date	2016.05.24.22.50.20;	author jlee;	state Exp;
branches;
next	4.121;
commitid	RYaH5CsBb1WpUM7z;

4.121
date	2016.05.14.12.28.33;	author rool;	state Exp;
branches;
next	4.120;
commitid	SD1SHLulN4j2Nr6z;

4.120
date	2016.05.08.17.28.44;	author jlee;	state Exp;
branches;
next	4.119;
commitid	EXWpQR82F1tYDH5z;

4.119
date	2016.02.29.10.24.05;	author bavison;	state Exp;
branches;
next	4.118;
commitid	4Cb775DX43yNvNWy;

4.118
date	2016.02.13.09.21.18;	author rool;	state Exp;
branches;
next	4.117;
commitid	lLmpwBqr2Bl9GJUy;

4.117
date	2016.02.07.16.35.08;	author rsprowson;	state Exp;
branches;
next	4.116;
commitid	TlF3STjWlU3Wg0Uy;

4.116
date	2015.06.30.01.16.26;	author jlee;	state Exp;
branches;
next	4.115;
commitid	jvZB6uMyaGIbkory;

4.115
date	2015.04.03.20.39.54;	author rsprowson;	state Exp;
branches;
next	4.114;
commitid	G8BXIPKUyzCGAbgy;

4.114
date	2015.04.03.19.21.03;	author rsprowson;	state Exp;
branches;
next	4.113;
commitid	U0s6ekpjDdEE9bgy;

4.113
date	2014.08.23.21.27.27;	author rsprowson;	state Exp;
branches;
next	4.112;
commitid	oe7YyRjInqWq1xNx;

4.112
date	2014.07.31.08.24.01;	author rsprowson;	state Exp;
branches;
next	4.111;
commitid	jfGiiZxupMtuqvKx;

4.111
date	2014.07.08.08.20.26;	author rsprowson;	state Exp;
branches;
next	4.110;
commitid	gJ2MD6EsPAT69yHx;

4.110
date	2014.06.15.19.33.16;	author bavison;	state Exp;
branches;
next	4.109;
commitid	YBWyQLItjOoMBEEx;

4.109
date	2014.05.08.10.11.20;	author rsprowson;	state Exp;
branches;
next	4.108;
commitid	u7YoeZpupMfJIIzx;

4.108
date	2014.03.25.19.26.39;	author bavison;	state Exp;
branches;
next	4.107;
commitid	11tVf4nIpBpVc7ux;

4.107
date	2014.01.21.08.18.44;	author rsprowson;	state Exp;
branches;
next	4.106;
commitid	BnlJ7u9KIS8lxXlx;

4.106
date	2014.01.20.21.32.26;	author jlee;	state Exp;
branches;
next	4.105;
commitid	Gyv6odvmqENCXTlx;

4.105
date	2013.10.24.20.03.46;	author rsprowson;	state Exp;
branches;
next	4.104;
commitid	8snV0tcFxVQyiAax;

4.104
date	2013.03.24.08.06.47;	author rsprowson;	state Exp;
branches;
next	4.103;
commitid	sKrRgCgz4PD5d1Jw;

4.103
date	2013.03.20.08.34.44;	author rsprowson;	state Exp;
branches;
next	4.102;
commitid	L7rulQ2qjYwEuvIw;

4.102
date	2013.01.15.21.21.19;	author rsprowson;	state Exp;
branches;
next	4.101;
commitid	MsWwzb2yEPfbNlAw;

4.101
date	2012.10.12.22.20.02;	author bavison;	state Exp;
branches;
next	4.100;
commitid	2yBRiGPuRMmEa9ow;

4.100
date	2012.09.25.07.29.39;	author rsprowson;	state Exp;
branches;
next	4.99;
commitid	6J3Lmu3fDeb4NSlw;

4.99
date	2012.08.28.20.50.57;	author jlee;	state Exp;
branches;
next	4.98;
commitid	WCYE684PPsgM7miw;

4.98
date	2012.08.15.22.03.11;	author jlee;	state Exp;
branches;
next	4.97;
commitid	dksbCCJBeaesWGgw;

4.97
date	2012.06.26.23.25.23;	author jlee;	state Exp;
branches;
next	4.96;
commitid	jkPFvMf2hJLi0haw;

4.96
date	2012.06.11.07.32.18;	author rsprowson;	state Exp;
branches;
next	4.95;
commitid	O2lGWYMHaZ6edg8w;

4.95
date	2012.05.28.18.04.00;	author rsprowson;	state Exp;
branches;
next	4.94;
commitid	psVvzYlFFIpQ9w6w;

4.94
date	2012.02.16.22.42.19;	author jlee;	state Exp;
branches;
next	4.93;
commitid	dDPxGaAkFdvBYqTv;

4.93
date	2012.02.04.21.29.32;	author jlee;	state Exp;
branches;
next	4.92;
commitid	jI3TOSAqOuXxXSRv;

4.92
date	2011.12.06.00.02.58;	author jlee;	state Exp;
branches;
next	4.91;
commitid	xGUSvbmR1wWJL3Kv;

4.91
date	2011.11.26.13.04.50;	author rsprowson;	state Exp;
branches;
next	4.90;
commitid	oqcep4Kpl6STpQIv;

4.90
date	2011.11.12.01.12.13;	author bavison;	state Exp;
branches;
next	4.89;
commitid	BPjVlzYW1sAkVYGv;

4.89
date	2011.10.28.14.23.08;	author bavison;	state Exp;
branches;
next	4.88;
commitid	hIG6j26y6NoxM7Fv;

4.88
date	2011.10.28.00.40.41;	author bavison;	state Exp;
branches;
next	4.87;
commitid	ICGaod8Pekupe3Fv;

4.87
date	2011.10.18.18.35.08;	author rsprowson;	state Exp;
branches;
next	4.86;
commitid	9dWPVLILS9MVuRDv;

4.86
date	2011.09.24.14.51.54;	author jlee;	state Exp;
branches;
next	4.85;
commitid	KFhDiqb18Pnb2LAv;

4.85
date	2011.08.06.20.05.07;	author jlee;	state Exp;
branches;
next	4.84;
commitid	D9pXqV2mtIAhluuv;

4.84
date	2010.12.06.22.41.19;	author rsprowson;	state Exp;
branches;
next	4.83;

4.83
date	2010.11.30.09.29.04;	author rsprowson;	state Exp;
branches;
next	4.82;

4.82
date	2010.11.26.18.54.49;	author jlee;	state Exp;
branches;
next	4.81;

4.81
date	2009.11.28.21.52.13;	author jlee;	state Exp;
branches;
next	4.80;

4.80
date	2009.07.17.17.44.50;	author srevill;	state Exp;
branches;
next	4.79;

4.79
date	2009.06.26.00.49.44;	author bavison;	state Exp;
branches;
next	4.78;

4.78
date	2009.06.14.01.20.55;	author bavison;	state Exp;
branches;
next	4.77;

4.77
date	2009.06.07.14.25.26;	author bavison;	state Exp;
branches;
next	4.76;

4.76
date	2009.05.31.17.32.17;	author pnaulls;	state Exp;
branches;
next	4.75;

4.75
date	2008.10.04.21.21.36;	author bavison;	state Exp;
branches;
next	4.74;

4.74
date	2005.03.17.18.42.21;	author kbracey;	state Exp;
branches;
next	4.73;

4.73
date	2005.03.14.12.15.39;	author kbracey;	state Exp;
branches;
next	4.72;

4.72
date	2005.03.07.15.19.17;	author kbracey;	state Exp;
branches;
next	4.71;

4.71
date	2004.10.27.17.29.17;	author bavison;	state Exp;
branches;
next	4.70;

4.70
date	2004.07.01.18.08.29;	author kbracey;	state Exp;
branches;
next	4.69;

4.69
date	2004.01.23.19.10.17;	author kbracey;	state Exp;
branches;
next	4.68;

4.68
date	2003.12.02.16.51.28;	author bavison;	state Exp;
branches;
next	4.67;

4.67
date	2003.11.03.18.53.00;	author bavison;	state Exp;
branches;
next	4.66;

4.66
date	2003.10.13.15.41.19;	author bavison;	state Exp;
branches;
next	4.65;

4.65
date	2003.10.09.17.39.46;	author bavison;	state Exp;
branches;
next	4.64;

4.64
date	2003.04.15.16.50.22;	author kbracey;	state Exp;
branches
	4.64.2.1;
next	4.63;

4.63
date	2003.01.17.19.12.58;	author kbracey;	state Exp;
branches;
next	4.62;

4.62
date	2003.01.16.12.43.30;	author bavison;	state Exp;
branches;
next	4.61;

4.61
date	2002.11.15.15.00.25;	author kbracey;	state Exp;
branches;
next	4.60;

4.60
date	2002.08.12.13.35.13;	author bavison;	state Exp;
branches;
next	4.59;

4.59
date	2002.07.23.11.52.21;	author srevill;	state Exp;
branches;
next	4.58;

4.58
date	2002.05.22.10.45.23;	author kbracey;	state Exp;
branches;
next	4.57;

4.57
date	2002.04.12.15.19.39;	author kbracey;	state Exp;
branches;
next	4.56;

4.56
date	2002.04.11.16.37.51;	author kbracey;	state Exp;
branches;
next	4.55;

4.55
date	2002.03.26.16.17.25;	author kbracey;	state Exp;
branches;
next	4.54;

4.54
date	2002.03.21.14.36.24;	author kbracey;	state Exp;
branches;
next	4.53;

4.53
date	2002.02.22.15.59.09;	author srevill;	state Exp;
branches;
next	4.52;

4.52
date	2002.01.29.16.03.33;	author kbracey;	state Exp;
branches;
next	4.51;

4.51
date	2001.08.23.13.46.57;	author kbracey;	state Exp;
branches;
next	4.50;

4.50
date	2001.05.10.09.26.09;	author sbrodie;	state Exp;
branches
	4.50.2.1;
next	4.49;

4.49
date	2001.04.17.13.23.50;	author sbrodie;	state Exp;
branches;
next	4.48;

4.48
date	2001.04.11.14.40.50;	author sbrodie;	state Exp;
branches;
next	4.47;

4.47
date	2001.04.10.12.42.04;	author sbrodie;	state Exp;
branches;
next	4.46;

4.46
date	2001.04.06.14.29.03;	author sbrodie;	state Exp;
branches;
next	4.45;

4.45
date	2001.03.02.12.15.10;	author sbrodie;	state Exp;
branches;
next	4.44;

4.44
date	2001.02.22.13.10.49;	author sbrodie;	state Exp;
branches;
next	4.43;

4.43
date	2000.12.13.10.38.27;	author sbrodie;	state Exp;
branches;
next	4.42;

4.42
date	2000.11.30.09.18.30;	author kbracey;	state Exp;
branches;
next	4.41;

4.41
date	2000.11.22.13.16.12;	author sforrest;	state Exp;
branches;
next	4.40;

4.40
date	2000.11.21.15.03.21;	author sbrodie;	state Exp;
branches;
next	4.39;

4.39
date	2000.11.20.17.27.37;	author dellis;	state Exp;
branches;
next	4.38;

4.38
date	2000.11.08.15.26.24;	author kbracey;	state Exp;
branches;
next	4.37;

4.37
date	2000.10.19.12.55.16;	author pskirrow;	state Exp;
branches;
next	4.36;

4.36
date	2000.10.17.16.07.28;	author kbracey;	state Exp;
branches;
next	4.35;

4.35
date	2000.10.16.16.30.40;	author sbrodie;	state Exp;
branches;
next	4.34;

4.34
date	2000.10.09.10.12.36;	author sbrodie;	state Exp;
branches;
next	4.33;

4.33
date	2000.10.03.08.18.22;	author kbracey;	state Exp;
branches;
next	4.32;

4.32
date	2000.10.02.14.29.31;	author sbrodie;	state Exp;
branches;
next	4.31;

4.31
date	2000.10.02.10.46.57;	author kbracey;	state Exp;
branches;
next	4.30;

4.30
date	2000.09.14.14.42.06;	author sbrodie;	state Exp;
branches;
next	4.29;

4.29
date	2000.08.17.15.20.14;	author sbrodie;	state Exp;
branches;
next	4.28;

4.28
date	2000.08.15.12.07.10;	author dcotton;	state Exp;
branches;
next	4.27;

4.27
date	2000.08.11.13.33.44;	author sbrodie;	state Exp;
branches;
next	4.26;

4.26
date	2000.07.03.12.30.41;	author kbracey;	state Exp;
branches;
next	4.25;

4.25
date	2000.06.20.11.21.57;	author jfletche;	state Exp;
branches;
next	4.24;

4.24
date	2000.06.20.10.51.48;	author jfletche;	state Exp;
branches;
next	4.23;

4.23
date	2000.05.16.13.09.18;	author kbracey;	state Exp;
branches;
next	4.22;

4.22
date	2000.05.10.16.48.46;	author kbracey;	state Exp;
branches;
next	4.21;

4.21
date	2000.05.09.14.09.19;	author kbracey;	state Exp;
branches;
next	4.20;

4.20
date	2000.04.28.14.35.44;	author ahodgkin;	state Exp;
branches;
next	4.19;

4.19
date	2000.04.10.10.14.56;	author jberanek;	state Exp;
branches;
next	4.18;

4.18
date	2000.03.07.14.20.02;	author sbrodie;	state Exp;
branches;
next	4.17;

4.17
date	2000.03.07.09.45.13;	author kbracey;	state Exp;
branches;
next	4.16;

4.16
date	2000.01.14.09.12.09;	author sforrest;	state Exp;
branches
	4.16.2.1;
next	4.15;

4.15
date	2000.01.13.12.45.01;	author sforrest;	state Exp;
branches;
next	4.14;

4.14
date	99.11.25.12.23.17;	author sbrodie;	state Exp;
branches;
next	4.13;

4.13
date	99.11.25.11.28.06;	author sbrodie;	state Exp;
branches;
next	4.12;

4.12
date	99.09.22.10.23.20;	author sbrodie;	state Exp;
branches
	4.12.2.1;
next	4.11;

4.11
date	99.09.21.10.21.27;	author sbrodie;	state Exp;
branches;
next	4.10;

4.10
date	99.07.09.12.27.14;	author kbracey;	state Exp;
branches;
next	4.9;

4.9
date	99.05.12.09.56.49;	author sbrodie;	state Exp;
branches;
next	4.8;

4.8
date	99.05.11.14.47.22;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	98.12.06.15.12.47;	author dcotton;	state Exp;
branches;
next	4.6;

4.6
date	98.10.29.10.48.04;	author kbracey;	state Exp;
branches;
next	4.5;

4.5
date	98.10.26.09.56.59;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	98.10.01.09.14.10;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.09.11.14.36.55;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.08.27.10.01.07;	author smiddle;	state Exp;
branches;
next	4.1;

4.1
date	98.08.27.09.55.43;	author smiddle;	state Exp;
branches;
next	;

4.64.2.1
date	2004.01.06.15.07.17;	author bavison;	state Exp;
branches;
next	;

4.50.2.1
date	2001.07.02.15.01.12;	author sbrodie;	state Exp;
branches;
next	;

4.16.2.1
date	2000.06.20.12.58.19;	author jfletche;	state Exp;
branches;
next	4.16.2.2;

4.16.2.2
date	2000.07.10.11.36.31;	author jfletche;	state Exp;
branches;
next	4.16.2.3;

4.16.2.3
date	2000.08.01.13.22.12;	author jfletche;	state Exp;
branches;
next	4.16.2.4;

4.16.2.4
date	2000.08.14.11.06.50;	author dcotton;	state Exp;
branches;
next	4.16.2.5;

4.16.2.5
date	2000.11.22.13.08.05;	author sforrest;	state Exp;
branches;
next	;

4.12.2.1
date	99.11.08.15.51.28;	author sbrodie;	state Exp;
branches;
next	4.12.2.2;

4.12.2.2
date	99.11.09.11.02.36;	author sbrodie;	state Exp;
branches;
next	4.12.2.3;

4.12.2.3
date	99.11.10.14.02.19;	author kbracey;	state Exp;
branches;
next	4.12.2.4;

4.12.2.4
date	99.11.10.16.59.05;	author kbracey;	state Exp;
branches;
next	4.12.2.5;

4.12.2.5
date	99.11.22.13.27.42;	author sbrodie;	state Exp;
branches;
next	4.12.2.6;

4.12.2.6
date	99.11.23.13.42.39;	author sbrodie;	state Exp;
branches;
next	4.12.2.7;

4.12.2.7
date	2000.01.14.11.02.17;	author kbracey;	state Exp;
branches;
next	4.12.2.8;

4.12.2.8
date	2000.05.09.13.58.34;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.128
log
@Fix to CopyError change
Detail:
  kernel/s/k_body - CPSR_f is the correct field for the NZCV flags, not _c
Admin:
  Untested


Version 5.97. Tagged as 'RISC_OSLib-5_97'
@
text
@/* (5.97)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        5.97
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                11 Jun 2018

#define Module_MajorVersion             "5.97"
#define Module_Version                  597
#define Module_MinorVersion             ""
#define Module_Date                     "11 Jun 2018"

#define Module_ApplicationDate          "11-Jun-18"

#define Module_ComponentName            "RISC_OSLib"
#define Module_ComponentPath            "castle/RiscOS/Sources/Lib/RISC_OSLib"

#define Module_FullVersion              "5.97"
#define Module_HelpVersion              "5.97 (11 Jun 2018)"
#define Module_LibraryVersionInfo       "5:97"
@


4.127
log
@Try and avoid blocking callbacks
Detail:
  The kernel has a 'callback postponement flag' which will be set whenever an X SWI, called from user mode, returns a pointer to an error (and the error block looks like it's in RAM).
  Although this flag will help prevent the error buffer from being overwritten by any errors generated by callbacks, it will also have the effect of blocking Alt-Break and CLib's Escape handler, due to them both being reliant on callbacks.
  Since the flag may persist for a long time, it can be dangerous to leave the OS in this state (the flag can only be cleared by a SWI call from user mode - which may never happen if the program is stuck in a bad state).
  So to combat this, CLib will now make some effort to try and avoid leaving the postponement flag in situations where it shouldn't be needed.
  File changes:
  - c/armsys:
    - Change _sys_flen to return 0 for TTY streams, since calling OS_Args for them isn't going to generate any useful result (previously it was generating an error, causing the postponement flag to be left set on entry to main())
    - Be extra vigilant when entering main() to make sure the callback postponement flag isn't set, just in case other checks don't resolve it
  - kernel/s/k_body:
    - Change CopyError to attempt to clear the callback postponement flag if we suspect it's set. We've just copied the error to our own buffer, so it should be our job to worry about preventing that buffer being prematurely overwritten, not the kernel's.
Admin:
  Tested on BB-xM
  'while (1) {}' (and similar variants) now multitasks in task windows and is no longer unkillable
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/4/topics/11542#posts-79767


Version 5.96. Tagged as 'RISC_OSLib-5_96'
@
text
@d1 1
a1 1
/* (5.96)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.96
d9 1
a9 1
#define Module_Date_CMHG                10 Jun 2018
d11 2
a12 2
#define Module_MajorVersion             "5.96"
#define Module_Version                  596
d14 1
a14 1
#define Module_Date                     "10 Jun 2018"
d16 1
a16 1
#define Module_ApplicationDate          "10-Jun-18"
d21 3
a23 3
#define Module_FullVersion              "5.96"
#define Module_HelpVersion              "5.96 (10 Jun 2018)"
#define Module_LibraryVersionInfo       "5:96"
@


4.126
log
@Make abort handling more robust
Detail:
  kernel/s/k_body - Update AbortFindHandler to check that SP & SL are both word aligned, especially because the code will attempt to load from SL to check for the stack chunk magic marker.
Admin:
  Tested on BB-xM
  Avoids some "abort while in abort handler" type scenarios if an abort occurs while SP/SL are invalid


Version 5.95. Tagged as 'RISC_OSLib-5_95'
@
text
@d1 1
a1 1
/* (5.95)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.95
d9 1
a9 1
#define Module_Date_CMHG                14 Apr 2018
d11 2
a12 2
#define Module_MajorVersion             "5.95"
#define Module_Version                  595
d14 1
a14 1
#define Module_Date                     "14 Apr 2018"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-18"
d21 3
a23 3
#define Module_FullVersion              "5.95"
#define Module_HelpVersion              "5.95 (14 Apr 2018)"
#define Module_LibraryVersionInfo       "5:95"
@


4.125
log
@Put ctl in the attic
The ctl part of rlib has various memory leaks (ref https://www.riscosopen.org/forum/forums/4/topics/9503) reflecting its abandoned state. See the FrontEnd module for a more flexible implementation of the same GUI-in-a-text-file scripting language.
The ctl API was not in C release 3 (it post dates that) nor in C release 4 manual, and the whole of rlib was removed from C release 5 in favour of the Toolbox.
The change log at the top of rlib/s/rl_spare shows it was briefly added in early 1990 then removed in April 1991. 26 years later, cull it from the Makefile too.

Version 5.94. Tagged as 'RISC_OSLib-5_94'
@
text
@d1 1
a1 1
/* (5.94)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.94
d9 1
a9 1
#define Module_Date_CMHG                29 Oct 2017
d11 2
a12 2
#define Module_MajorVersion             "5.94"
#define Module_Version                  594
d14 1
a14 1
#define Module_Date                     "29 Oct 2017"
d16 1
a16 1
#define Module_ApplicationDate          "29-Oct-17"
d21 3
a23 3
#define Module_FullVersion              "5.94"
#define Module_HelpVersion              "5.94 (29 Oct 2017)"
#define Module_LibraryVersionInfo       "5:94"
@


4.124
log
@Eliminate some global OS_SynchroniseCodeAreas calls
Detail:
  kernel/s/k_body - Eliminate a couple of global OS_SynchroniseCodeAreas calls in _kernel_init and _kernel_system
  s/initmodule - Eliminate a global OS_SynchroniseCodeAreas call in _Shared_Lib_Module_SWI_Code
Admin:
  Tested on iMx6
  Improves performance with SMP ROMs, where global D-cache clean isn't really possible


Version 5.93. Tagged as 'RISC_OSLib-5_93'
@
text
@d1 1
a1 1
/* (5.93)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.93
d9 1
a9 1
#define Module_Date_CMHG                03 Sep 2017
d11 2
a12 2
#define Module_MajorVersion             "5.93"
#define Module_Version                  593
d14 1
a14 1
#define Module_Date                     "03 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "03-Sep-17"
d21 3
a23 3
#define Module_FullVersion              "5.93"
#define Module_HelpVersion              "5.93 (03 Sep 2017)"
#define Module_LibraryVersionInfo       "5:93"
@


4.123
log
@Remove ARM2 NOPs
Detail:
  kernel/s/k_body, s/initmodule - Remove NOPs from after PSR manipulation macros; the macros now fully take care of ARM2 & StrongARM compatibility for us
Admin:
  Tested PlingSystem build on (ARM3) RISC OS 3.1
  Requires HdrSrc-2_63 for ARM2 compatibility


Version 5.92. Tagged as 'RISC_OSLib-5_92'
@
text
@d1 1
a1 1
/* (5.92)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.92
d9 1
a9 1
#define Module_Date_CMHG                28 May 2016
d11 2
a12 2
#define Module_MajorVersion             "5.92"
#define Module_Version                  592
d14 1
a14 1
#define Module_Date                     "28 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "28-May-16"
d21 3
a23 3
#define Module_FullVersion              "5.92"
#define Module_HelpVersion              "5.92 (28 May 2016)"
#define Module_LibraryVersionInfo       "5:92"
@


4.122
log
@When multiple CPU architectures are supported, allow dynamically linked clients to be given optimal versions of routines where possible
Detail:
  This set of changes adds support for representing architecture-specific variants of routines within the export tables which the shared C library uses to fill in the client's stubs.
  This allows builds of the module which target multiple architectures (e.g. IOMD, Raspberry Pi, or softloads) to offer the most optimal versions of routines to clients wherever multiple variants exist.
  If only one architecture is supported, only one version of each routine will be built, and no variant tables will be generated.
  Currently routine selection for staticly linked clients isn't supported - staticly linked targets will only use the most backwards-compatible version of the routines, as before. Also not all routines are catered for yet (e.g. _ll_udiv)
  File changes:
  - s/h_common - New file containing macros used during variant table construction
  - Makefile - Set SHARED_C_LIBRARY to {TRUE} for SCL builds of assembler code, as per the SHARED_C_LIBRARY #define
  - kernel/s/k_body, s/longlong - For routines which have multiple variants available for the target architectures, build all variants, and generate variant table entries using the new RoutineVariant macro. This has required some reordering of the different variants to make sure that when both versions are built, the most backwards-compatible one will be first (and thus will be called by staticly linked clients)
  - s/h_modmacro - "Entry" macro (when building SCL export tables) changed to use DCD instead of B, to allow byte-aligned symbols to be represented (low bits of symbol address is now used as 'is a variant table' flag)
  - s/initmodule - Client stub initialisation rewritten to take into account the B -> DCD change, and to detect and evaluate variant entries
  - clib/s/cl_entries, kernel/s/k_entries, kernel/s/k_entries2 - Update library entry tables to reference the variant forms of routines where relevant
Admin:
  Tested on Raspberry Pi 1, 2, 3 (ROM), RISC OS 3.1 & StrongARM 3.7 (softload 26bit build)
  Requires Kernel-5_35-4_79_2_325


Version 5.91. Tagged as 'RISC_OSLib-5_91'
@
text
@d1 1
a1 1
/* (5.91)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.91
d9 1
a9 1
#define Module_Date_CMHG                24 May 2016
d11 2
a12 2
#define Module_MajorVersion             "5.91"
#define Module_Version                  591
d14 1
a14 1
#define Module_Date                     "24 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "24-May-16"
d21 3
a23 3
#define Module_FullVersion              "5.91"
#define Module_HelpVersion              "5.91 (24 May 2016)"
#define Module_LibraryVersionInfo       "5:91"
@


4.121
log
@[391] localtime() ignores manual timezone configuration
Detail:
  When in the default C locale localtime() would return the wrong time for nonzero timezones.
Admin:
  Tested with softloaded C library for each ROM release supported.
  Submission from Rick Murray.

Version 5.90. Tagged as 'RISC_OSLib-5_90'
@
text
@d1 1
a1 1
/* (5.90)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.90
d9 1
a9 1
#define Module_Date_CMHG                14 May 2016
d11 2
a12 2
#define Module_MajorVersion             "5.90"
#define Module_Version                  590
d14 1
a14 1
#define Module_Date                     "14 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "14-May-16"
d21 3
a23 3
#define Module_FullVersion              "5.90"
#define Module_HelpVersion              "5.90 (14 May 2016)"
#define Module_LibraryVersionInfo       "5:90"
@


4.120
log
@Prefer CPS over MSR for PSR manipulation. Use UDIV/SDIV for general-purpose division, and UMULL for /10.
Detail:
  s/k_body:
  - _kernel_irqs_off and _kernel_irqs_on now use CPS for disabling/enabling IRQs as opposed to MSR. Apart from being shorter code sequences, it's generally a faster instruction.
  - __rt_udiv and __rt_sdiv (and aliases) now use the UDIV and SDIV instructions if building for ARMv7VE
  - __rt_udiv10 and __rt_sdiv10 (and aliases) now use UMULL to multiply by 1/10 when building for targets with long multiply support, as this is faster than the old method. UDIV/SDIV can be fast too, but only for small numbers, making UMULL the best for the general case.
Admin:
  Tested on Cortex-A15
  Prototyping of division routines on assorted CPUs shows that UDIV/SDIV is generally between 20% and 400% faster than the old routine (Cortex-A7, Cortex-A53), or up to 1300% faster on Cortex-A15 (the CPU does not like the old routine!)
  Division by 10 is now about 20% faster across all appropriate CPUs


Version 5.89. Tagged as 'RISC_OSLib-5_89'
@
text
@d1 1
a1 1
/* (5.89)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.89
d9 1
a9 1
#define Module_Date_CMHG                08 May 2016
d11 2
a12 2
#define Module_MajorVersion             "5.89"
#define Module_Version                  589
d14 1
a14 1
#define Module_Date                     "08 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "08-May-16"
d21 3
a23 3
#define Module_FullVersion              "5.89"
#define Module_HelpVersion              "5.89 (08 May 2016)"
#define Module_LibraryVersionInfo       "5:89"
@


4.119
log
@  Support for ARMv8
Detail:
  The SWP and SWPB instructions have finally been removed in ARMv8, after
  having been deprecated for a very long time. This version adds alternative
  versions of code that used to use them with ones that use LDREX/STREX and
  LDREXB/STREXB instead. Soft-loadable C libraries will choose between
  implementations at runtime using OS_PlatformFeatures; ROM builds only
  include the appropriate version for the target hardware.
Admin:
  Tested on Raspberry Pi 3.

Version 5.88. Tagged as 'RISC_OSLib-5_88'
@
text
@d1 1
a1 1
/* (5.88)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.88
d9 1
a9 1
#define Module_Date_CMHG                29 Feb 2016
d11 2
a12 2
#define Module_MajorVersion             "5.88"
#define Module_Version                  588
d14 1
a14 1
#define Module_Date                     "29 Feb 2016"
d16 1
a16 1
#define Module_ApplicationDate          "29-Feb-16"
d21 3
a23 3
#define Module_FullVersion              "5.88"
#define Module_HelpVersion              "5.88 (29 Feb 2016)"
#define Module_LibraryVersionInfo       "5:88"
@


4.118
log
@Remove arbitrary limits on menu sizes
Detail:
  When RISC_OSLib is used to generate menus using menu_new and menu_extend
  there are two (undocumented?) limits on the total menu size:
  - 64 items on a menu. Any more are silently ignored.
  - 1024 bytes of indirect text. Above this, any items have
    several bytes of random rubbish displayed in the menu entry.

  rlib.c.menu (r4.6) has been changed to:
  - remove menu_workarea which was on the stack, and caused limits.
  - only use malloc'd storage areas for the menu.
  - reduce the data copied by at least 50% by changing processing
    from: copy; update; copy
    to  : realloc extend (& copy?); update; realloc shrink (no copy).
  - remove the limits by adding more storage dynamically.
  - simplify code, which reduces the object code size by about 7%.
Admin:
  The changes have been tested on an Iyonix running RO5.23, and VRPC
  running RO4.39, with a large C program with about 80 menus.
  The only noticeable effects were beneficial.
  It has also been tested with artificially low ADDITEMS and ADDBYTES.
  Submission from Martin Avison.

Version 5.87. Tagged as 'RISC_OSLib-5_87'
@
text
@d1 1
a1 1
/* (5.87)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.87
d9 1
a9 1
#define Module_Date_CMHG                13 Feb 2016
d11 2
a12 2
#define Module_MajorVersion             "5.87"
#define Module_Version                  587
d14 1
a14 1
#define Module_Date                     "13 Feb 2016"
d16 1
a16 1
#define Module_ApplicationDate          "13-Feb-16"
d21 3
a23 3
#define Module_FullVersion              "5.87"
#define Module_HelpVersion              "5.87 (13 Feb 2016)"
#define Module_LibraryVersionInfo       "5:87"
@


4.117
log
@Open colour picker menus in the right place
Function dboxtcol() always opens colour pickers as transient submenus (in the flags to ColourPicker_OpenDialogue, plus listening for the menus deleted message) but chose to open the dialogue at the current mouse pointer, so obscuring part of the menu rather than opening it where the Style Guide wants it.
wimp.h:
  Add a struct definition of menuwarn messages.
txtedit.c/dbox.c/ctl.c:
  Use the menuwarn struct rather than indexing the words[].
dboxtcol.c:
  Provided the last wimp event was the menu warning, use the x/y coordinates from that instead of the mouse pointer.
  Remove some local defines in favour of central ones.
  Make sure we use 0x80000000/0x7F000000 like the PRM says for the other 2 corners of the dialogue, not 0,0.
Tested in a disc build of !Draw.

Version 5.86. Not tagged
@
text
@d1 1
a1 1
/* (5.86)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.86
d9 1
a9 1
#define Module_Date_CMHG                07 Feb 2016
d11 2
a12 2
#define Module_MajorVersion             "5.86"
#define Module_Version                  586
d14 1
a14 1
#define Module_Date                     "07 Feb 2016"
d16 1
a16 1
#define Module_ApplicationDate          "07-Feb-16"
d21 3
a23 3
#define Module_FullVersion              "5.86"
#define Module_HelpVersion              "5.86 (07 Feb 2016)"
#define Module_LibraryVersionInfo       "5:86"
@


4.116
log
@Fix null pointer dereference in stack backtrace code
Detail:
  c/armsys - _kernel_language will return NULL if the PC was outside any known library language block, so make sure to check for that before dereferencing the pointer
Admin:
  Builds, untested


Version 5.86. Tagged as 'RISC_OSLib-5_86'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                30 Jun 2015
d14 1
a14 1
#define Module_Date                     "30 Jun 2015"
d16 1
a16 1
#define Module_ApplicationDate          "30-Jun-15"
d22 1
a22 1
#define Module_HelpVersion              "5.86 (30 Jun 2015)"
@


4.115
log
@Switch from ArcEdit style model to clipboard cut & paste model
The txt library part of RISC_OSLib was essentially contrary to everything Acorn was telling its developers, to use the global clipboard.
Additionally, support is added for swap case within a selection.
txt.h:
 Add a new charoption type 'txt_READONLY' to inform txt that the buffer is notionally read only, this is used to supress 'Paste' in the selection menu when appropriate.
 Correct some typos in the comments.
txt1.h:
 Kill off modula 2 dummy structure member.
txtar.h:
 Remove unused function export.
txtfile.h:
 Rename basicimport to be consistent with the text version of the same function. We use 'import' to denote RAM transfers and 'insert' to denote file/scrap transfers throughout.
txtmisc.h:
 Redundant internal functions removed.
txtundo.h:
 Add a new undo operation type 't' for swap case, to avoid polluting the undo buffer with an entire copy of the text where only the case changed.
 Kill off modula 2 double pointer requirement.
txtedit.h:
 Unused structure member 'selectctl' removed.
txt.c:
 Kill off modula 2 double pointer requirement.
txtar.c:
 Refactor message despatch with a switch statement so the save/load/open operations are explicitly checked for, in case the application enables other messages.
txtedit.c:
 Adopt MOVERWRITE, been enabled since 1988 so is probably good to keep.
 Dynamically generate the Select menu by first sending a clipboard request, and fading Paste if no reply comes back.
 Implement changed mouse selection logic.
 Implement different hotkeys and caret navigation.
 Implement copy and paste/replace operations.
 Implement swap case operation.
txtfile.c:
 Type corrections and function rename admin.
 Implement copy and paste/replace operation for detokenised BASIC.
txtmisc.c:
 Supporting functions for clipboard added, supporting functions for ArcEdit removed.
txtscrap.c:
 Make sure the caret is visible for programmatical zero sized selections.
txtundo.c:
 Allow suspension of undo during known complex operations, such as import via RAM transmit. This was a longstanding bug where the import buffer was grabbed in ~4k chunks (even if only 1 byte was being transferred) which in turn resulted in a +4000 undo insertion and a -3999 removal, which given the default undo buffer is only 5k would result in it failing the reversibility test, so no undo was possible.
 Now, during a RAM transmit undo is suspended until the total transfer size is known, and only that data is placed in the undo buffer (subject to the same 5k reversibility limit).
 Add new undo type 't' for swap case operation.
rlibdata.s:
 4 new ints and 1 new BOOL, so RlibSpace increases by 5.

Version 5.85. Tagged as 'RISC_OSLib-5_85'
@
text
@d1 1
a1 1
/* (5.85)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.85
d9 1
a9 1
#define Module_Date_CMHG                03 Apr 2015
d11 2
a12 2
#define Module_MajorVersion             "5.85"
#define Module_Version                  585
d14 1
a14 1
#define Module_Date                     "03 Apr 2015"
d16 1
a16 1
#define Module_ApplicationDate          "03-Apr-15"
d21 3
a23 3
#define Module_FullVersion              "5.85"
#define Module_HelpVersion              "5.85 (03 Apr 2015)"
#define Module_LibraryVersionInfo       "5:85"
@


4.114
log
@Extend rlib xferrecv API
Add xferrecv_last_ref to get hold of the Wimp message id of the request for a scrap file data save, when the RAM transfer gets no reply. This is useful to allow the data save to be distinguished from a file being dragged to an application, without having to resort to string compares against <wimp$scrap>.
SWIOptions:
 Also add RTC to SWI exports, and remove redundant ones.
armsys.c:
 Treat cmd_string as a pointer.
xferrecv.c/.h/rl_entries:
 New function xferrecv_last_ref.

Version 5.84. Tagged as 'RISC_OSLib-5_84'
@
text
@d1 1
a1 1
/* (5.84)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.84
d11 2
a12 2
#define Module_MajorVersion             "5.84"
#define Module_Version                  584
d21 3
a23 3
#define Module_FullVersion              "5.84"
#define Module_HelpVersion              "5.84 (03 Apr 2015)"
#define Module_LibraryVersionInfo       "5:84"
@


4.113
log
@Minor rlib cleanups
dbox.c: address of cancelled by dereference
event.c: spelling
txtar.c: don't grab the caret when clicking toggle size
txtedit.c: use BOOL for a boolean
win.c: when looking at the behind window handle we want -1 not 'DUD' (which happens to be -1)
wimp.h: add comment about window handle -3
Retagged as RISC_OSLib-5_83.

Version 5.83. Not tagged
@
text
@d1 1
a1 1
/* (5.83)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.83
d9 1
a9 1
#define Module_Date_CMHG                23 Aug 2014
d11 2
a12 2
#define Module_MajorVersion             "5.83"
#define Module_Version                  583
d14 1
a14 1
#define Module_Date                     "23 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "23-Aug-14"
d21 3
a23 3
#define Module_FullVersion              "5.83"
#define Module_HelpVersion              "5.83 (23 Aug 2014)"
#define Module_LibraryVersionInfo       "5:83"
@


4.112
log
@Some RISC_OSLib rlib enhancements
menu.c/menu.h:
Add a new menu_setcolours() function to allow the fore/background colour bits to be set on a menu entry.
colourmenu.c:
Use the new menu_setcolours() function instead of making assumptions about menu's internal structure layout.
dbox.c/dbox.h:
New functions dbox_hidefield and dbox_unhidefield added to complement the fade/unfade ones.
As dbox_findicon/findiconbefore are only ever used to find writables, rename them as such. Also, make them find writable (type 15) AND writable draggable (type 14) icons.
Allow navigation by tab/shift tab through icons like the Style Guide chapter 16 says we should. In fact it's a little odd that dbox is emulating 'Ktar' validation itself manually when the Wimp has done this since version 2.92, but maintaining it is less effort than going and checking all the templates.
Fix bug when looking for leading capital letter matches to complete a dbox, the previous code was looking at the cached copy of the icon flags in d->window rather than the ones the Wimp is actually showing on screen (as might have been modified by dbox_fadefield() for example), so it was possible to complete a dbox for an icon which wasn't visible or selectable.
Fix bug when looking for leading capital letter matches when the icon doesn't have any text - the template file format is defined as being 0x0D terminated. This would then lead to 'R' and 'S' being accepted as matches having run off the end of the text buffer and into the validation string (which usually contains an 'R' or 'S' validation first). Changed to accept any control terminator.
event.c:
When force closing the current menu, don't forget to set the two state variables back to 0.
fileicon.c/resspr.c/txt1.c/txtundo.c/wimp.c:
Use existing pointer type definitions.
flex.c:
Treat bools as bools and pointers as pointers.
Say something useful in an error box if flex fails its internal consistency check, rather than just data aborting.
font.c:
Remove ROM conditionals from around font_readdef() function, always include the function.
fontselect.c:
Use font_readdef() rather than local copies of the exact same function.
txtedit.c/txtfile.c/txtfind.c/txtedit.h:
Remove redundant 'deletepending' state variable, and confusion over 'selectrecent' being a bool.
Call os_byte directly rather than passing to os_cli("*FX").
Other minor tidy ups.
wimpt.c:
Mark messages list as a constant.
xferrecv.c:
Also preserve the size member while recycling the xferrecv_ack message block, rather than corrupting it as 256.
xfersend.c/xfersend.h:
Take out the leaf name formulator as a common function for the two places to use it. This also allows the function to return the length of the leaf name so the correct message block size can be used. Inspection with MsgMon/!Reporter was showing that all xfersend initiated saves were passing the leaf name padded to 256 with garbage.
Reindent a few functions.
Make the draggable sprite replacement follow the same validation string rules as the Wimp, previously only ";s" was accepted, so upper case 'S' and validation strings that start with the sprite validation didn't work.
xfersend_pipe() function prototype changed to match xfersend() more closely - not being able to respond to the context of a wimp_eventstr made this function practically unusable.
akbd.h:
Windows logo and menu keys defined.
flex.h/help.h/wimpt.h
Some typos in comments.
wimp.h:
Missing wimp message action codes and structure defs added for completeness.


Version 5.83. Not tagged
@
text
@d9 1
a9 1
#define Module_Date_CMHG                31 Jul 2014
d14 1
a14 1
#define Module_Date                     "31 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jul-14"
d22 1
a22 1
#define Module_HelpVersion              "5.83 (31 Jul 2014)"
@


4.111
log
@Don't export any of txt's internal headers
Edit-1_70 and SrcEdit-1_28 no longer require these private headers.

Version 5.83. Not tagged
@
text
@d9 1
a9 1
#define Module_Date_CMHG                08 Jul 2014
d14 1
a14 1
#define Module_Date                     "08 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "08-Jul-14"
d22 1
a22 1
#define Module_HelpVersion              "5.83 (08 Jul 2014)"
@


4.110
log
@  Add C99 standard headers wchar.h and wctype.h
Detail:
  These were previously languishing in the C compiler sources, but they
  belong in the C library. Note however that the library does not implement
  the functions described in these headers at the present time, so any
  attempt to use them will result in link-time errors.
Admin:
  Untested (known not working)

Version 5.83. Tagged as 'RISC_OSLib-5_83'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                15 Jun 2014
d14 1
a14 1
#define Module_Date                     "15 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jun-14"
d22 1
a22 1
#define Module_HelpVersion              "5.83 (15 Jun 2014)"
@


4.109
log
@Check for NULL pointers before finding the syshandle
menu.c: if NULL return -1, this has the added advantage that a menu maker (see event_attachmenumaker) can return NULL to mean "no menu thanks" and not data abort in event.c
dbox.c: if NULL return 0, this is somewhat consistent with template_syshandle()
menu.h: typo in comment corrected

Version 5.82. Tagged as 'RISC_OSLib-5_82'
@
text
@d1 1
a1 1
/* (5.82)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.82
d9 1
a9 1
#define Module_Date_CMHG                08 May 2014
d11 2
a12 2
#define Module_MajorVersion             "5.82"
#define Module_Version                  582
d14 1
a14 1
#define Module_Date                     "08 May 2014"
d16 1
a16 1
#define Module_ApplicationDate          "08-May-14"
d21 3
a23 3
#define Module_FullVersion              "5.82"
#define Module_HelpVersion              "5.82 (08 May 2014)"
#define Module_LibraryVersionInfo       "5:82"
@


4.108
log
@  Unbreak stdio.h for C90 mode
Detail:
  Large file support made use of long longs in various definitions. These
  were switched out in PCC mode, but no allowances were made for the fact
  that C90 doesn't define long long either.
  Remember that to force cc to use non-builtin standard headers, you need
  to point at these using the -j switch (e.g. -jC:). The only version of
  cc which featured the C90-incompatible stdio.h was 5.70.
Admin:
  Checked that the header now works when included in -pcc, -c90 and -c99 modes.

Version 5.81. Tagged as 'RISC_OSLib-5_81'
@
text
@d1 1
a1 1
/* (5.81)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.81
d9 1
a9 1
#define Module_Date_CMHG                25 Mar 2014
d11 2
a12 2
#define Module_MajorVersion             "5.81"
#define Module_Version                  581
d14 1
a14 1
#define Module_Date                     "25 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "25-Mar-14"
d21 3
a23 3
#define Module_FullVersion              "5.81"
#define Module_HelpVersion              "5.81 (25 Mar 2014)"
#define Module_LibraryVersionInfo       "5:81"
@


4.107
log
@Permit wildcards in RISC_OSLib application's messages files
msgs.c: includes a MessageTrans parser that duplicates MessageTrans_Lookup (needed because the lookup function returns pointers to static C strings). However, did not allow '?' wildcards in the message token names.

Version 5.80. Tagged as 'RISC_OSLib-5_80'
@
text
@d1 1
a1 1
/* (5.80)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.80
d9 1
a9 1
#define Module_Date_CMHG                21 Jan 2014
d11 2
a12 2
#define Module_MajorVersion             "5.80"
#define Module_Version                  580
d14 1
a14 1
#define Module_Date                     "21 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jan-14"
d21 3
a23 3
#define Module_FullVersion              "5.80"
#define Module_HelpVersion              "5.80 (21 Jan 2014)"
#define Module_LibraryVersionInfo       "5:80"
@


4.106
log
@Fix 32bitification error
Detail:
  kernel/s/k_body - At CopyUpDone in _kernel_system(), a big block of conditional code was converted to unconditional as part of the 32bit conversion process. However one line for setting up the error handler remained conditional, potentially preventing the correct error buffer pointer being set when about to start the child task.
Admin:
  Tested on BB-xM


Version 5.79. Tagged as 'RISC_OSLib-5_79'
@
text
@d1 1
a1 1
/* (5.79)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.79
d9 1
a9 1
#define Module_Date_CMHG                20 Jan 2014
d11 2
a12 2
#define Module_MajorVersion             "5.79"
#define Module_Version                  579
d14 1
a14 1
#define Module_Date                     "20 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jan-14"
d21 3
a23 3
#define Module_FullVersion              "5.79"
#define Module_HelpVersion              "5.79 (20 Jan 2014)"
#define Module_LibraryVersionInfo       "5:79"
@


4.105
log
@Some library fixes
Fix for problem passing long command lines via system(), while there are good arguments to leave the threshold at 255, non DDEUtils aware programs get brutally truncated command strings, and since the old threshold of 255 applied when the kernel handled 256 command lines, upping the limit to 1k is no worse than before.
Fix for Edit failing to draw lines of text longer than 192 characters (ticket #350). Several factors were conspiring here: on a mode change the window width in characters wasn't being clamped, whereas user entered limits in the menu were, then the internal buffer ("PAINTBUFSIZE") was too short so lines got truncated, and when larger than 256 got wrapped modulo 256 due to the use of an array of chars. Now set at compile time with BIG_WINDOW_SIZE_LIMIT with a new theoretical maximum of 8192. Currently limited to 480 since it uses stack variables.

In the C library:
 armsys.c: adapt the threshold at which to use DDEUtils based on the kernel version number
 scanf.c: squash a warning
 time.c: mark the table of month lengths as constant so we can claw back 13 words of static workspace without having to change the stubs

In RISC OS lib:
 bbc.c: remove local definitions of some SWI numbers
 template.c: squash a warning
 txt.c: delete Modula-2 support
 txt1.c: compare pointer with NULL not an integer
 txtar.c: introduce BIG_WINDOW_SIZE_LIMIT, rationalise a few sprintf's, mark private functions as static
 txtundo.c/txtedit.c: squash old style function warnings
 txtoptmenu.c: clamp the window width read from Edit$Options properly, delete long disabled code
 txtscrap.c: dead function deleted


Version 5.78. Tagged as 'RISC_OSLib-5_78'
@
text
@d1 1
a1 1
/* (5.78)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.78
d9 1
a9 1
#define Module_Date_CMHG                24 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "5.78"
#define Module_Version                  578
d14 1
a14 1
#define Module_Date                     "24 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "24-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "5.78"
#define Module_HelpVersion              "5.78 (24 Oct 2013)"
#define Module_LibraryVersionInfo       "5:78"
@


4.104
log
@Build fix
s/h_brazil: use Hdr:System instead of GETting them one at a time
c/scanf: type cast

Version 5.77. Tagged as 'RISC_OSLib-5_77'
@
text
@d1 1
a1 1
/* (5.77)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.77
d9 1
a9 1
#define Module_Date_CMHG                24 Mar 2013
d11 2
a12 2
#define Module_MajorVersion             "5.77"
#define Module_Version                  577
d14 1
a14 1
#define Module_Date                     "24 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "24-Mar-13"
d21 3
a23 3
#define Module_FullVersion              "5.77"
#define Module_HelpVersion              "5.77 (24 Mar 2013)"
#define Module_LibraryVersionInfo       "5:77"
@


4.103
log
@Fix to scanf of a scanlist where no match occurs
In this situation, the conversion should fail.
Fixes ticket #252.

Version 5.76. Tagged as 'RISC_OSLib-5_76'
@
text
@d1 1
a1 1
/* (5.76)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.76
d9 1
a9 1
#define Module_Date_CMHG                20 Mar 2013
d11 2
a12 2
#define Module_MajorVersion             "5.76"
#define Module_Version                  576
d14 1
a14 1
#define Module_Date                     "20 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "20-Mar-13"
d21 3
a23 3
#define Module_FullVersion              "5.76"
#define Module_HelpVersion              "5.76 (20 Mar 2013)"
#define Module_LibraryVersionInfo       "5:76"
@


4.102
log
@Add JPEG_ to swis.h
This is in the 'SprExtend' header, which messes up the alphabetical ordering a bit.

Version 5.75. Tagged as 'RISC_OSLib-5_75'
@
text
@d1 1
a1 1
/* (5.75)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.75
d9 1
a9 1
#define Module_Date_CMHG                15 Jan 2013
d11 2
a12 2
#define Module_MajorVersion             "5.75"
#define Module_Version                  575
d14 1
a14 1
#define Module_Date                     "15 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jan-13"
d21 3
a23 3
#define Module_FullVersion              "5.75"
#define Module_HelpVersion              "5.75 (15 Jan 2013)"
#define Module_LibraryVersionInfo       "5:75"
@


4.101
log
@  Merged in a fix to <math.h> from C compiler
Detail:
  This change was first applied to the inbuilt headers in the C compiler at
  version 5.59 (07 Apr 2005), but was accidentally not copied into the
  RISC_OSLib version of math.h. Fortunately, this would only have affected
  anyone compiling software with the -jC: switch.
Admin:
  Untested, but should be a safe change.

Version 5.74. Tagged as 'RISC_OSLib-5_74'
@
text
@d1 1
a1 1
/* (5.74)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.74
d9 1
a9 1
#define Module_Date_CMHG                12 Oct 2012
d11 2
a12 2
#define Module_MajorVersion             "5.74"
#define Module_Version                  574
d14 1
a14 1
#define Module_Date                     "12 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "12-Oct-12"
d21 3
a23 3
#define Module_FullVersion              "5.74"
#define Module_HelpVersion              "5.74 (12 Oct 2012)"
#define Module_LibraryVersionInfo       "5:74"
@


4.100
log
@Style guide ammendment
While the txtedit part of RISC_OSLib has never been famed for its adherence this brings the delete operation (^K ref Style Guide p38, !ResEd, and the drag & drop protocol specification) into line.

Version 5.73. Tagged as 'RISC_OSLib-5_73'
@
text
@d1 1
a1 1
/* (5.73)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.73
d9 1
a9 1
#define Module_Date_CMHG                25 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "5.73"
#define Module_Version                  573
d14 1
a14 1
#define Module_Date                     "25 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "25-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "5.73"
#define Module_HelpVersion              "5.73 (25 Sep 2012)"
#define Module_LibraryVersionInfo       "5:73"
@


4.99
log
@Fix "Task not known" error masking real error message in some situations
Detail:
  c/armsys - _desktop_report now always caches the error message in the local error block. This avoids the error potentially being overwritten with "Task not known" if TaskManager_TaskNameFromHandle fails.
Admin:
  Tested on Raspberry Pi


Version 5.72. Tagged as 'RISC_OSLib-5_72'
@
text
@d1 1
a1 1
/* (5.72)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.72
d9 1
a9 1
#define Module_Date_CMHG                28 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "5.72"
#define Module_Version                  572
d14 1
a14 1
#define Module_Date                     "28 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "28-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "5.72"
#define Module_HelpVersion              "5.72 (28 Aug 2012)"
#define Module_LibraryVersionInfo       "5:72"
@


4.98
log
@Add VCHIQ to SWIOptions
Detail:
  SWIOptions,feb - Added VCHIQ to SWI header list
  Makefile - Add SWIOptions as a dependency to s.swioptions, so exported swis.h will rebuild correctly if SWIOptions is changed
Admin:
  Tested briefly


Version 5.71. Tagged as 'RISC_OSLib-5_71'
@
text
@d1 1
a1 1
/* (5.71)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.71
d9 1
a9 1
#define Module_Date_CMHG                15 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "5.71"
#define Module_Version                  571
d14 1
a14 1
#define Module_Date                     "15 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "5.71"
#define Module_HelpVersion              "5.71 (15 Aug 2012)"
#define Module_LibraryVersionInfo       "5:71"
@


4.97
log
@Improve sanity checks in default_unwind_handler
Detail:
  kernel/s/k_body - Now ignores unaligned PC values, as they either indicate stack corruption or Thumb use (which the unwind handler doesn't support anyway)
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 5.70. Tagged as 'RISC_OSLib-5_70'
@
text
@d1 1
a1 1
/* (5.70)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.70
d9 1
a9 1
#define Module_Date_CMHG                27 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "5.70"
#define Module_Version                  570
d14 1
a14 1
#define Module_Date                     "27 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "5.70"
#define Module_HelpVersion              "5.70 (27 Jun 2012)"
#define Module_LibraryVersionInfo       "5:70"
@


4.96
log
@Make mktime() correct for local time.
Following an earlier fix, the logic of mktime() has turned out to need reviewing too.
To summarise
  time() -> a UTC time in seconds
  gmtime() -> breaks down a UTC time into components
  localtime() -> breaks down a UTC time into local components (tz + DST)
  mktime() -> converts local components back into UTC time, normalising
In mktime(), the current locale (via setlocale()) is considered and used to choose the timezone, assuming an appropriate territory module is loaded.
The value of the tm_isdst field is factored into the offset calculation.
However, mktime() is also defined as normalising the components of time and updating the caller's block with normalised values, in local time, so the local offset is reapplied at the end.

Moved time_to_tm up in the function so mktime() can use it.
Corrected/lined up some comments.
Also, mktime() no longer forces tm_isdst to -1, it preserves the user's value, so consecutive mktime()s are consistent.
Added test to "test/tzones.c", results compared with Windows XP.

Version 5.69. Tagged as 'RISC_OSLib-5_69'
@
text
@d1 1
a1 1
/* (5.69)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.69
d9 1
a9 1
#define Module_Date_CMHG                11 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "5.69"
#define Module_Version                  569
d14 1
a14 1
#define Module_Date                     "11 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "5.69"
#define Module_HelpVersion              "5.69 (11 Jun 2012)"
#define Module_LibraryVersionInfo       "5:69"
@


4.95
log
@Add locale support for selecting timezones from C
armsys.c
  Ammended time() to match ISO9899 and just return UTC like it says.
  Inlined the single use of _bbctime() macro.
locale.c
  The timezone within a territory can now be specified as part of the setlocale() function.
  This uses a qualifier to the already accepted territory name, for an example see test/tzones.c
  Shock addition of some comments to the locale parsing function.
  To avoid needing to mess about with C library workspace the timezone and territory are encoded internally into 1 word, with 10 bits allowing up to 1024 territories worldwide.
  Ripple through to strftime().
time.c
  localtime() updated to respect locale selection.
test/file,gen_inputs,test64
  Copyright headers added.

Output compared with Windows XP using setlocale versus tzset to shift the program into Pacific time.

Version 5.68. Tagged as 'RISC_OSLib-5_68'
@
text
@d1 1
a1 1
/* (5.68)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.68
d9 1
a9 1
#define Module_Date_CMHG                28 May 2012
d11 2
a12 2
#define Module_MajorVersion             "5.68"
#define Module_Version                  568
d14 1
a14 1
#define Module_Date                     "28 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "28-May-12"
d21 3
a23 3
#define Module_FullVersion              "5.68"
#define Module_HelpVersion              "5.68 (28 May 2012)"
#define Module_LibraryVersionInfo       "5:68"
@


4.94
log
@Protect against StrongARM MSR bug & ARM2 "banked register after mode change" bug
Detail:
  kernel/s/k_body - NOP in Aborted2 is only needed if we're targeting StrongARM
  s/longlong - Make ReadCPUArch StrongARM & ARM2 safe
Admin:
  Tested in IOMD ROM softload


Version 5.67. Tagged as 'RISC_OSLib-5_67'
@
text
@d1 1
a1 1
/* (5.67)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.67
d9 1
a9 1
#define Module_Date_CMHG                16 Feb 2012
d11 2
a12 2
#define Module_MajorVersion             "5.67"
#define Module_Version                  567
d14 1
a14 1
#define Module_Date                     "16 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "16-Feb-12"
d21 3
a23 3
#define Module_FullVersion              "5.67"
#define Module_HelpVersion              "5.67 (16 Feb 2012)"
#define Module_LibraryVersionInfo       "5:67"
@


4.93
log
@Add ZLib module to SWIOptions
Detail:
  SWIOptions,feb - Now includes ZLib module SWIs
Admin:
  SWI export tested, seems OK


Version 5.66. Not tagged
@
text
@d1 1
a1 1
/* (5.66)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.66
d9 1
a9 1
#define Module_Date_CMHG                04 Feb 2012
d11 2
a12 2
#define Module_MajorVersion             "5.66"
#define Module_Version                  566
d14 1
a14 1
#define Module_Date                     "04 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "04-Feb-12"
d21 3
a23 3
#define Module_FullVersion              "5.66"
#define Module_HelpVersion              "5.66 (04 Feb 2012)"
#define Module_LibraryVersionInfo       "5:66"
@


4.92
log
@Use correct CLZ check
Detail:
  s/longlong - Only look for ARMv5 support when deciding if CLZ is available, not ARMv5T
Admin:
  Tested in OMAP3 ROM


Version 5.66. Tagged as 'RISC_OSLib-5_66'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                06 Dec 2011
d14 1
a14 1
#define Module_Date                     "06 Dec 2011"
d16 1
a16 1
#define Module_ApplicationDate          "06-Dec-11"
d22 1
a22 1
#define Module_HelpVersion              "5.66 (06 Dec 2011)"
@


4.91
log
@Review use of StrongARM switch.
Was being used to conditionalise things which aren't really StrongARM related, now should be read as "support split I+D caches" switch.

Version 5.65. Tagged as 'RISC_OSLib-5_65'
@
text
@d1 1
a1 1
/* (5.65)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.65
d9 1
a9 1
#define Module_Date_CMHG                26 Nov 2011
d11 2
a12 2
#define Module_MajorVersion             "5.65"
#define Module_Version                  565
d14 1
a14 1
#define Module_Date                     "26 Nov 2011"
d16 1
a16 1
#define Module_ApplicationDate          "26-Nov-11"
d21 3
a23 3
#define Module_FullVersion              "5.65"
#define Module_HelpVersion              "5.65 (26 Nov 2011)"
#define Module_LibraryVersionInfo       "5:65"
@


4.90
log
@  Fix stack imbalance in module stubs
Detail:
  A minus sign was missing - this meant that any module built using stubs
  from the last 2 weeks would branch through zero at the end of initialisation.
Admin:
  Modules now work again!

Retagged as 'RISC_OSLib-5_64'

Version 5.64. Not tagged
@
text
@d1 1
a1 1
/* (5.64)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.64
d9 1
a9 1
#define Module_Date_CMHG                12 Nov 2011
d11 2
a12 2
#define Module_MajorVersion             "5.64"
#define Module_Version                  564
d14 1
a14 1
#define Module_Date                     "12 Nov 2011"
d16 1
a16 1
#define Module_ApplicationDate          "12-Nov-11"
d21 3
a23 3
#define Module_FullVersion              "5.64"
#define Module_HelpVersion              "5.64 (12 Nov 2011)"
#define Module_LibraryVersionInfo       "5:64"
@


4.89
log
@  File handling improvements
Detail:
  * Added 64-bit file pointer API support, following the LFS spec v1.5
    (see Docs directory). Internally, now uses 64-bit file pointers
    exclusively. For now, the backend still limits you to 4GB-1 files, but
    clients of the C library won't need recompiling again to support larger
    files than this once they use the new API.
  * Fixed a large number of warnings produced in compilation, assembly and
    linking, many of them new and resulting from the improved checks in the
    latest toolchain.
  * Increased the maximum stream buffer size from 16MB to 1GB.
  * Added Hdr:SDFS and Hdr:SDIO to the list of headers used to build swis.h
    if they are present.
Admin:
  Verified that the new 64-bit file pointer buffering code works using a
  ROM build (since the toolchain makes extensive use of reading, writing
  and seeking internally).

Version 5.64. Tagged as 'RISC_OSLib-5_64'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                28 Oct 2011
d14 1
a14 1
#define Module_Date                     "28 Oct 2011"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-11"
d22 1
a22 1
#define Module_HelpVersion              "5.64 (28 Oct 2011)"
@


4.88
log
@  Long long multiply bugfix
Detail:
  Last revision broke _ll_mullu (the runtime support function for multiplying
  a 64-bit integer by an unsigned 32-bit integer) except for ROM builds that
  target CPUs with the M extension. So in practice, IOMD ROMs and softloadable
  C libraries both exhibited the bug.
Admin:
  Verified that the compiler will now run against this C library (previously
  it reported many non-sensical errors).

Version 5.63. Tagged as 'RISC_OSLib-5_63'
@
text
@d1 1
a1 1
/* (5.63)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.63
d11 2
a12 2
#define Module_MajorVersion             "5.63"
#define Module_Version                  563
d21 3
a23 3
#define Module_FullVersion              "5.63"
#define Module_HelpVersion              "5.63 (28 Oct 2011)"
#define Module_LibraryVersionInfo       "5:63"
@


4.87
log
@Change to use StdTools.
Be more quiet when cleaning.
STM/LDM changed to Push/Pull.
Moved an illegal instruction back into ARM's illegal instruction space.

Version 5.62. Tagged as 'RISC_OSLib-5_62'
@
text
@d1 1
a1 1
/* (5.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.62
d9 1
a9 1
#define Module_Date_CMHG                18 Oct 2011
d11 2
a12 2
#define Module_MajorVersion             "5.62"
#define Module_Version                  562
d14 1
a14 1
#define Module_Date                     "18 Oct 2011"
d16 1
a16 1
#define Module_ApplicationDate          "18-Oct-11"
d21 3
a23 3
#define Module_FullVersion              "5.62"
#define Module_HelpVersion              "5.62 (18 Oct 2011)"
#define Module_LibraryVersionInfo       "5:62"
@


4.86
log
@Fix objasm 4 warnings. Enable (S|U)MULL/CLZ in math code.
Detail:
  s/longlong - The code has always had the ability to use CLZ & long multiply instructions, but it's never been enabled. The nonfunctional code to detect the CPU architecture at runtime has been disabled, and instead a fixed configuration is selected at compile time with the help of Hdr:CPU.Arch. Also added lots of ROUT's for safety.
  s/objmacs - Updated push/pop macros to make use of LDR/STR when only one register is to be transferred. This fixes a few objasm 4 warnings and should result in a speed boost where applicable.
Admin:
  Tested on rev A2 BB-xM.
  Different math code configurations tested briefly.


Version 5.61. Tagged as 'RISC_OSLib-5_61'
@
text
@d1 1
a1 1
/* (5.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.61
d9 1
a9 1
#define Module_Date_CMHG                24 Sep 2011
d11 2
a12 2
#define Module_MajorVersion             "5.61"
#define Module_Version                  561
d14 1
a14 1
#define Module_Date                     "24 Sep 2011"
d16 1
a16 1
#define Module_ApplicationDate          "24-Sep-11"
d21 3
a23 3
#define Module_FullVersion              "5.61"
#define Module_HelpVersion              "5.61 (24 Sep 2011)"
#define Module_LibraryVersionInfo       "5:61"
@


4.85
log
@Update to work with zero page relocation
Detail:
  clib/s/cl_stub, kernel/s/k_body, s/initmodule - Use OS_ReadSysInfo 6 to look up CLibWord/RISCOSLibWord/CLibCounter location each time it's needed instead of using hardcoded addresses. SWI overhead shouldn't be too bad since the zero page areas are rarely used.
  rlib/c/menu - Fix null pointer access when attempting to clear a submenu pointer via menu_submenu(...,...,NULL)
  s/h_workspc - Remove old local definitions of CLibCounter, RISCOSLibWorkSpace and CLibWorkSpace. Use Hdr:PublicWS instead.
Admin:
  Tested on rev A2 BB-xM


Version 5.60. Tagged as 'RISC_OSLib-5_60'
@
text
@d1 1
a1 1
/* (5.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.60
d9 1
a9 1
#define Module_Date_CMHG                06 Aug 2011
d11 2
a12 2
#define Module_MajorVersion             "5.60"
#define Module_Version                  560
d14 1
a14 1
#define Module_Date                     "06 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-11"
d21 3
a23 3
#define Module_FullVersion              "5.60"
#define Module_HelpVersion              "5.60 (06 Aug 2011)"
#define Module_LibraryVersionInfo       "5:60"
@


4.84
log
@Import of JPEG support code to RISC_OSLib.
Functionality to query, plot, and transform a JPEG file modelled on the functions provided in 'sprite.c/h'.
To be used to share more code between !Paint and !Draw.

Version 5.59. Tagged as 'RISC_OSLib-5_59'
@
text
@d1 1
a1 1
/* (5.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.59
d9 1
a9 1
#define Module_Date_CMHG                06 Dec 2010
d11 2
a12 2
#define Module_MajorVersion             "5.59"
#define Module_Version                  559
d14 1
a14 1
#define Module_Date                     "06 Dec 2010"
d16 1
a16 1
#define Module_ApplicationDate          "06-Dec-10"
d21 3
a23 3
#define Module_FullVersion              "5.59"
#define Module_HelpVersion              "5.59 (06 Dec 2010)"
#define Module_LibraryVersionInfo       "5:59"
@


4.83
log
@Enable 2 functions in RISC_OSLib shared entry table.
Needed by !Paint 2.02.
Fix some easy warnings in wimp.c/sprite.c.
Add new function (not in the ROM version) 'wimp_baseofromsprites()'.
bbc_adval fixed to return -1 when no ADC fitted to match Electron behaviour.
Note: the 2 reenabled functions haven't been appended to the table, so anyone who linked a RAM application against 'romastubs' would need to relink.

Version 5.58. Tagged as 'RISC_OSLib-5_58'
@
text
@d1 1
a1 1
/* (5.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.58
d9 1
a9 1
#define Module_Date_CMHG                30 Nov 2010
d11 2
a12 2
#define Module_MajorVersion             "5.58"
#define Module_Version                  558
d14 1
a14 1
#define Module_Date                     "30 Nov 2010"
d16 1
a16 1
#define Module_ApplicationDate          "30-Nov-10"
d21 3
a23 3
#define Module_FullVersion              "5.58"
#define Module_HelpVersion              "5.58 (30 Nov 2010)"
#define Module_LibraryVersionInfo       "5:58"
@


4.82
log
@Fix alignment fault when reporting the "This file doesn't contain a BASIC program" error
Detail:
  rlib/c/txtedit - Rather than generating a proper error block to send to Wimp_ReportError, txtedit__validbasicfile was just subtracting 4 from the pointer to the error string.
  The resulting address isn't guaranteed to be aligned properly, resulting in an alignment fault on ARMv7 when Wimp_ReportError examines the error number.
  The new code just reuses the 'buff' array to build a temporary error block.
Admin:
  Fixes alignment fault on beagleboard when attempting to load a detokenized BASIC file into !Edit.


Version 5.57. Tagged as 'RISC_OSLib-5_57'
@
text
@d1 1
a1 1
/* (5.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.57
d9 1
a9 1
#define Module_Date_CMHG                26 Nov 2010
d11 2
a12 2
#define Module_MajorVersion             "5.57"
#define Module_Version                  557
d14 1
a14 1
#define Module_Date                     "26 Nov 2010"
d16 1
a16 1
#define Module_ApplicationDate          "26-Nov-10"
d21 3
a23 3
#define Module_FullVersion              "5.57"
#define Module_HelpVersion              "5.57 (26 Nov 2010)"
#define Module_LibraryVersionInfo       "5:57"
@


4.81
log
@Improve safety & reliability of callback handling in SharedCLibrary
Detail:
  CallBackHandler in kernel.s.k_body now ensures that the stored 'sp' and 'sl' values are word-aligned before attempting to read from 'sl' to verify that it points to a stack chunk. This avoids an exception being triggered in certain situations when alignment exceptions are turned on and a piece of hand-written assembler is using the sl register to store data.
Admin:
  Further checks should be added to check that 'fp' is valid before calling _kernel_unwind, as _kernel_unwind currently only performs minimal checks that are not always sufficient.
  Tested on rev C2 beagleboard with KinoAmp pre-release.


Version 5.56. Tagged as 'RISC_OSLib-5_56'
@
text
@d1 1
a1 1
/* (5.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.56
d9 1
a9 1
#define Module_Date_CMHG                28 Nov 2009
d11 2
a12 2
#define Module_MajorVersion             "5.56"
#define Module_Version                  556
d14 1
a14 1
#define Module_Date                     "28 Nov 2009"
d16 1
a16 1
#define Module_ApplicationDate          "28-Nov-09"
d21 3
a23 3
#define Module_FullVersion              "5.56"
#define Module_HelpVersion              "5.56 (28 Nov 2009)"
#define Module_LibraryVersionInfo       "5:56"
@


4.80
log
@Change to install rules for CToolsDev build.

Make this component install more stuff that is required for the CToolsDev
build. Shouldn't hurt anything else.

Version 5.55. Tagged as 'RISC_OSLib-5_55'
@
text
@d1 1
a1 1
/* (5.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.55
d9 1
a9 1
#define Module_Date_CMHG                17 Jul 2009
d11 2
a12 2
#define Module_MajorVersion             "5.55"
#define Module_Version                  555
d14 1
a14 1
#define Module_Date                     "17 Jul 2009"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jul-09"
d21 3
a23 3
#define Module_FullVersion              "5.55"
#define Module_HelpVersion              "5.55 (17 Jul 2009)"
#define Module_LibraryVersionInfo       "5:55"
@


4.79
log
@  Build process changes
Detail:
  Install rule now takes an optional INSTTYPE switch: if this is set to
  "libraries" then instead of installing the SCL module, we install the
  headers, stubs, ansilib, risc_oslib and overlay manager libraries. This is
  intended primarily for the tools CD disc image.
  The component is also now cleaned in the "clean" phase. Historically, the
  exception made for this component (and OSLib and Desk, both now binary
  imports) was made on the grounds of speed, and this is not such an issue
  these days. Moreover, we need cleaning to take place on desktop disc builds
  because the SCL must be built and installed in both APCS-R and APCS-32
  versions, which requires an intermediate clean.
Admin:
  Tested in a Tools CD build.

Retagged as 'RISC_OSLib-5_54'

Version 5.54. Not tagged
@
text
@d1 1
a1 1
/* (5.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.54
d9 1
a9 1
#define Module_Date_CMHG                26 Jun 2009
d11 2
a12 2
#define Module_MajorVersion             "5.54"
#define Module_Version                  554
d14 1
a14 1
#define Module_Date                     "26 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jun-09"
d21 3
a23 3
#define Module_FullVersion              "5.54"
#define Module_HelpVersion              "5.54 (26 Jun 2009)"
#define Module_LibraryVersionInfo       "5:54"
@


4.78
log
@  Build fix
Detail:
  s.makehswis used to pull in various IO header files. There was no good
  reason for this, and doing so causes a dependency upon Hdr:Machine.<Machine>
  to define which generation of IOC/IOMD is in use - which is a problem if
  the C library is to be built where Machine=All.
Admin:
  Tested in a Machine=All build.

Version 5.54. Not tagged
@
text
@d9 1
a9 1
#define Module_Date_CMHG                14 Jun 2009
d14 1
a14 1
#define Module_Date                     "14 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jun-09"
d22 1
a22 1
#define Module_HelpVersion              "5.54 (14 Jun 2009)"
@


4.77
log
@  Build fix
Detail:
  Previous commit moved the location of the EditIntern directory within the
  sources but did not update the export rules in the Makefile to match.
  The result was that Edit no longer builds from clean, breaking Tungsten and
  IOMD ROM builds.
Admin:
  Checked in a TungstenDev build.

Version 5.54. Not tagged
@
text
@d9 1
a9 1
#define Module_Date_CMHG                07 Jun 2009
d14 1
a14 1
#define Module_Date                     "07 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jun-09"
d22 1
a22 1
#define Module_HelpVersion              "5.54 (07 Jun 2009)"
@


4.76
log
@Rationalize C include path usage
 Detail:
  Parts of RISCOS_Lib use non-standard paths that only really work on native RISC OS compilitation.
  This moves the relevant files into a more normalized dir.h.file format.
 Admin:
  Not tested yet.  #include path changes to follow.

Version 5.54. Not tagged
@
text
@d9 1
a9 1
#define Module_Date_CMHG                31 May 2009
d14 1
a14 1
#define Module_Date                     "31 May 2009"
d16 1
a16 1
#define Module_ApplicationDate          "31-May-09"
d22 1
a22 1
#define Module_HelpVersion              "5.54 (31 May 2009)"
@


4.75
log
@  Merged in changes from Castle
Detail:
  Added terminating null to clib messages file for tokens C53, C36, C37, C66,
  C70
  appears lost a while ago .. error in field suggested need for this.
  examination of r0 3.7 etc clib messages file showed NULLs here.. believe
  they are the only messages in clib that can emerge through a printf.. and
  this need a null terminator.
Admin:
  Not tested

Version 5.54. Tagged as 'RISC_OSLib-5_54'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                04 Oct 2008
d14 1
a14 1
#define Module_Date                     "04 Oct 2008"
d16 1
a16 1
#define Module_ApplicationDate          "04-Oct-08"
d22 1
a22 1
#define Module_HelpVersion              "5.54 (04 Oct 2008)"
@


4.74
log
@Fixed "/* in comment" error in <complex.h>. Retagged as 5.53.

Version 5.53. Not tagged
@
text
@d1 1
a1 1
/* (5.53)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.53
d9 1
a9 1
#define Module_Date_CMHG                17 Mar 2005
d11 2
a12 2
#define Module_MajorVersion             "5.53"
#define Module_Version                  553
d14 1
a14 1
#define Module_Date                     "17 Mar 2005"
d16 1
a16 1
#define Module_ApplicationDate          "17-Mar-05"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Lib/RISC_OSLib"
d21 3
a23 3
#define Module_FullVersion              "5.53"
#define Module_HelpVersion              "5.53 (17 Mar 2005)"
#define Module_LibraryVersionInfo       "5:53"
@


4.73
log
@* Improved stdio to allocate extra FILE objects beyond the static array of
  16. Number of open files now only limited by memory and the OS.
* FOPEN_MAX in <stdio.h> increased from 8 to 16 to reflect reality.
* Minor corrections to comments in <stdio.h>.
* Library shutdown tidied for modules. In particular, shutdown of I/O was
  broken for modules which had been entered as applications.

Version 5.53. Tagged as 'RISC_OSLib-5_53'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                14 Mar 2005
d14 1
a14 1
#define Module_Date                     "14 Mar 2005"
d16 1
a16 1
#define Module_ApplicationDate          "14-Mar-05"
d22 1
a22 1
#define Module_HelpVersion              "5.53 (14 Mar 2005)"
@


4.72
log
@Added run-time and ISO C library support for C99 complex numbers.

Version 5.52. Tagged as 'RISC_OSLib-5_52'
@
text
@d1 1
a1 1
/* (5.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.52
d9 1
a9 1
#define Module_Date_CMHG                07 Mar 2005
d11 2
a12 2
#define Module_MajorVersion             "5.52"
#define Module_Version                  552
d14 1
a14 1
#define Module_Date                     "07 Mar 2005"
d16 1
a16 1
#define Module_ApplicationDate          "07-Mar-05"
d21 3
a23 3
#define Module_FullVersion              "5.52"
#define Module_HelpVersion              "5.52 (07 Mar 2005)"
#define Module_LibraryVersionInfo       "5:52"
@


4.71
log
@  Bugfix and system mode support.
Detail:
  * Fixed signed pointer comparison: most top-bit-set pointers passed to
    _kernel_raise_error() were being translated into "Exit called"
  * Stack extension is now permitted in SYS mode; includes support in longjmp()
Admin:
  Verified that stack extension works.

Version 5.51. Tagged as 'RISC_OSLib-5_51'
@
text
@d1 1
a1 1
/* (5.51)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.51
d9 1
a9 1
#define Module_Date_CMHG                27 Oct 2004
d11 2
a12 2
#define Module_MajorVersion             "5.51"
#define Module_Version                  551
d14 1
a14 1
#define Module_Date                     "27 Oct 2004"
d16 1
a16 1
#define Module_ApplicationDate          "27-Oct-04"
d21 3
a23 3
#define Module_FullVersion              "5.51"
#define Module_HelpVersion              "5.51 (27 Oct 2004)"
#define Module_LibraryVersionInfo       "5:51"
@


4.70
log
@New abs etc macros in <math.h> and <stdlib.h> made -pcc compatible.

Version 5.50. Tagged as 'RISC_OSLib-5_50'
@
text
@d1 1
a1 1
/* (5.50)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.50
d9 1
a9 1
#define Module_Date_CMHG                01 Jul 2004
d11 2
a12 2
#define Module_MajorVersion             "5.50"
#define Module_Version                  550
d14 1
a14 1
#define Module_Date                     "01 Jul 2004"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jul-04"
d21 3
a23 3
#define Module_FullVersion              "5.50"
#define Module_HelpVersion              "5.50 (01 Jul 2004)"
#define Module_LibraryVersionInfo       "5:50"
@


4.69
log
@<ctype.h> * isblank() added.
          * isprint() now true for non-breaking spaces
<math.h>  * FP_INFINITY corrected to FP_INFINITE
          * fma(), fmal(), llrint(), llrintf(), llrintl(),
            llround(), llroundf(), llroundl(),
            remquo(), remquof(), remquol() added.
          * added inlining for remainder() and fmaf() and various
            float functions.
          * math_errhandling removed pending overhaul - it was misleading.
          * expm1() and log1p() now provide decent (< 1 ulp) accuracy,
            rather than only being marginally better than exp(x)-1 and
            log(1+x).
          * new version of copysign() with standard calling conventions.
          * some C99 functions changed to use infinity/NaNs and exceptions
            for error handling - see comments in header file about the
            changes in progress.
<stdio.h>  * output from %a now correctly rounded
<stdlib.h> * strtof() and strtold() added.
<string.h> * strerror() no longer clears _kernel_last_oserror().

Version 5.49. Tagged as 'RISC_OSLib-5_49'
@
text
@d1 1
a1 1
/* (5.49)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.49
d9 1
a9 1
#define Module_Date_CMHG                23 Jan 2004
d11 2
a12 2
#define Module_MajorVersion             "5.49"
#define Module_Version                  549
d14 1
a14 1
#define Module_Date                     "23 Jan 2004"
d16 1
a16 1
#define Module_ApplicationDate          "23-Jan-04"
d21 3
a23 3
#define Module_FullVersion              "5.49"
#define Module_HelpVersion              "5.49 (23 Jan 2004)"
#define Module_LibraryVersionInfo       "5:49"
@


4.68
log
@  Changes for Customer W; also suitable for building on an Iyonix.
Detail:
  * No longer uses aasm to build h.swis.
  * (Only) compatible with new C compilers: assumes const static data is
    placed in separate read-only areas, and suitable command-line switch
    is used to ensure that library static data is never placed in a zero-
    init area.
  * Stack extension code now thread-safe.
  * Heap thread-safety code (in clib) now uses SWP instruction test results
    from stack extension code (in kernel) - as a side effect, the exported
    symbol _swp_available now exists, if you need to use it elsewhere.
  * Slightly closer to having top-bit-set heap addresses working.
Admin:
  Tested in a Tungsten build, and with Customer W's test suite.

Version 5.48. Tagged as 'RISC_OSLib-5_48'
@
text
@d1 1
a1 1
/* (5.48)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.48
d9 1
a9 1
#define Module_Date_CMHG                02 Dec 2003
d11 2
a12 2
#define Module_MajorVersion             "5.48"
#define Module_Version                  548
d14 1
a14 1
#define Module_Date                     "02 Dec 2003"
d16 1
a16 1
#define Module_ApplicationDate          "02-Dec-03"
d21 3
a23 3
#define Module_FullVersion              "5.48"
#define Module_HelpVersion              "5.48 (02 Dec 2003)"
#define Module_LibraryVersionInfo       "5:48"
@


4.67
log
@  Ansilib improvements, and a bugfix to system()
Detail:
  * _kernel_irqs_disabled() is included in ansilib build, now needed for
    ARM 2 SWP replacement in c.alloc
  * _kernel_entrypoint() for ansilib now initialises relocation offsets in
    root stack chunk, necessary if linking with -zm object code
  * system() implementation now calls DDEUtils_FlushCL if starting a
    short command line - necessary in case previous system() call was a
    long command line directed at a DDE-unaware application
Admin:
  Ansilib changes tested, DDE change not expected to cause problems.

Version 5.47. Not tagged
@
text
@d1 1
a1 1
/* (5.47)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.47
d9 1
a9 1
#define Module_Date_CMHG                03 Nov 2003
d11 2
a12 2
#define Module_MajorVersion             "5.47"
#define Module_Version                  547
d14 1
a14 1
#define Module_Date                     "03 Nov 2003"
d16 1
a16 1
#define Module_ApplicationDate          "03-Nov-03"
d21 3
a23 3
#define Module_FullVersion              "5.47"
#define Module_HelpVersion              "5.47 (03 Nov 2003)"
#define Module_LibraryVersionInfo       "5:47"
@


4.66
log
@Added ARM2 support to the threadsafe dynamic memory manager.
Retagged as 'RISC_OSLib-5_47'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                13 Oct 2003
d14 1
a14 1
#define Module_Date                     "13 Oct 2003"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-03"
d22 1
a22 1
#define Module_HelpVersion              "5.47 (13 Oct 2003)"
@


4.65
log
@  Changes required for Customer W.
Detail:
  * Implemented the thread-safety mutex macros for the user mode heap.
  * Created ansilibm, a version of ansilib suitable for building modules.
  * Fixed an overestimation of the size of the workspace passed to
    SharedCLibrary_LibInitModule[APCS_32] by the stubs.
  * Fixed bug in SharedCLibrary_LibInitModule[APCS_32] regarding handling of
    non-reentrant modules - if module code was at a higher address than the
    module data, then all the intervening data would be pointlessly copied
    back over itself with no allowance for volatility.
  * Removed the bsearch source file, since it was only required for APCS-A
    which the library has not supported since the year 2000, and which the
    compiler is now no longer able to build.
Admin:
  ansilibm builds working modules, but thread safety has not been
  extensively tested.

Version 5.47. Tagged as 'RISC_OSLib-5_47'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                09 Oct 2003
d14 1
a14 1
#define Module_Date                     "09 Oct 2003"
d16 1
a16 1
#define Module_ApplicationDate          "09-Oct-03"
d22 1
a22 1
#define Module_HelpVersion              "5.47 (09 Oct 2003)"
@


4.64
log
@* __assert2() added to support for C99 assert(), which displays
  function name.
* _Exit() added.
* Lots of new <math.h> functions (acosh, asinh, atanh, exp2, expm1,
  ilogb, log1p, log2, logb, scalbn, scalbln, cbrt, erf, erfc,
  lgamma, tgamma, nexttoward, fmaf). Float and long double forms
  of every function added; long double forms are included as another
  library object in the stubs rather than the shared library, as they
  just branch to the double form.
* Subnormal/NaN/infinity cases in various <math.h> functions improved.
* Added <tgmath.h>.
* Headers brought into line with CC 5.54.
* RMEnsures added to C library initialisation to try to load minimum
  CallASWI, FPEmulator, CLib. No errors reported if load fails.
* A few pointless inter-file dependencies removed to reduce minimum
  size of included ANSILib.

Version 5.46. Tagged as 'RISC_OSLib-5_46'
@
text
@d1 1
a1 1
/* (5.46)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.46
d9 1
a9 1
#define Module_Date_CMHG                15 Apr 2003
d11 2
a12 2
#define Module_MajorVersion             "5.46"
#define Module_Version                  546
d14 1
a14 1
#define Module_Date                     "15 Apr 2003"
d16 1
a16 1
#define Module_ApplicationDate          "15-Apr-03"
d21 3
a23 3
#define Module_FullVersion              "5.46"
#define Module_HelpVersion              "5.46 (15 Apr 2003)"
#define Module_LibraryVersionInfo       "5:46"
@


4.64.2.1
log
@Adapted version 5.46 to build on 32-bit machines.

Version 5.46, 4.64.2.1. Tagged as 'RISC_OSLib-5_46-4_64_2_1'
@
text
@d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d8 2
a9 2
#define Module_MinorVersion_CMHG        4.64.2.1
#define Module_Date_CMHG                06 Jan 2004
d13 2
a14 2
#define Module_MinorVersion             "4.64.2.1"
#define Module_Date                     "06 Jan 2004"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jan-04"
d21 2
a22 2
#define Module_FullVersion              "5.46 (4.64.2.1)"
#define Module_HelpVersion              "5.46 (06 Jan 2004) 4.64.2.1"
@


4.63
log
@Added atoll, strtoll, strtoull, strtoimax, strtoumax, imaxabs and imaxdiv
functions to the standard C library.

Version 5.45. Tagged as 'RISC_OSLib-5_45'
@
text
@d1 1
a1 1
/* (5.45)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.45
d9 1
a9 1
#define Module_Date_CMHG                17 Jan 2003
d11 2
a12 2
#define Module_MajorVersion             "5.45"
#define Module_Version                  545
d14 1
a14 1
#define Module_Date                     "17 Jan 2003"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jan-03"
d21 3
a23 3
#define Module_FullVersion              "5.45"
#define Module_HelpVersion              "5.45 (17 Jan 2003)"
#define Module_LibraryVersionInfo       "5:45"
@


4.62
log
@  Misc changes.
Detail:
  * Improved lookup of application Sprites file: uses Wimp_Extend 13 (in
    Wimps that support it) to work out the appropriate resolution suffix,
    and prefixes with "<Wimp$IconTheme>" to allow a future Theme Manager
    to operate.
  * Preserves attributes of any existing file when saving sprite or text
    files.
  * Changed two null menu handles from 0 to (doucmented) -1. Despite the
    fact that the Wimp is actually happy with 0 as a null handle here,
    this was reported as a fault.
  * Changed rlib.c.version to use VersionNum, deleted thereby-obsoleted
    rlib.h.VerIntern.version file. Not that rlib.c.version seems to be used
    at the moment.
  * Added Kevin's additions to the test directory.
Admin:
  Tested briefly.

Version 5.44. Not tagged
@
text
@d1 1
a1 1
/* (5.44)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.44
d9 1
a9 1
#define Module_Date_CMHG                16 Jan 2003
d11 2
a12 2
#define Module_MajorVersion             "5.44"
#define Module_Version                  544
d14 1
a14 1
#define Module_Date                     "16 Jan 2003"
d16 1
a16 1
#define Module_ApplicationDate          "16-Jan-03"
d21 3
a23 3
#define Module_FullVersion              "5.44"
#define Module_HelpVersion              "5.44 (16 Jan 2003)"
#define Module_LibraryVersionInfo       "5:44"
@


4.61
log
@ROM build fixed for 64-bit stuff.
PCI added to swis.h
alloc.c updated to handle bigger slots (new code merged from ARM libraries)
Various 32-bit fixes for backtracing, and general trap handling.
Polite "Application is not 32-bit compatible" message.
Headers <stdint.h> and <inttypes.h> fixed to work in non-C99 mode.
txt changed to do new-style Delete behaviour

Version 5.44. Tagged as 'RISC_OSLib-5_44'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                15 Nov 2002
d14 1
a14 1
#define Module_Date                     "15 Nov 2002"
d16 1
a16 1
#define Module_ApplicationDate          "15-Nov-02"
d22 1
a22 1
#define Module_HelpVersion              "5.44 (15 Nov 2002)"
@


4.60
log
@  How did we not notice this before?
Detail:
  Fixed a stack imbalance in _memcpy that's been there since 32-bitting.
Admin:
  Not tested yet.

Version 5.43. Tagged as 'RISC_OSLib-5_43'
@
text
@d1 1
a1 1
/* (5.43)
d4 1
a4 1
 * Last processed by srccommit version: 1.67.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.43
d9 1
a9 1
#define Module_Date_CMHG                12 Aug 2002
d11 2
a12 2
#define Module_MajorVersion             "5.43"
#define Module_Version                  543
d14 1
a14 1
#define Module_Date                     "12 Aug 2002"
d16 1
a16 2
#define Module_ApplicationDate2         "12-Aug-02"
#define Module_ApplicationDate4         "12-Aug-2002"
d21 3
a23 3
#define Module_FullVersion              "5.43"
#define Module_HelpVersion              "5.43 (12 Aug 2002)"
#define Module_LibraryVersionInfo       "5:43"
@


4.59
log
@  Fixed to build with the latest cc (5.54) compiler.
Detail:
  This version now builds with cc-5_45. Note: it has not been verified as
  actually functioning correctly.
Admin:
  Tested in DSL Baseline build.

Version 5.42. Tagged as 'RISC_OSLib-5_42'
@
text
@d1 1
a1 1
/* (5.42)
d4 1
a4 1
 * Last processed by srccommit version: 1.64.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.42
d9 1
a9 1
#define Module_Date_CMHG                23 Jul 2002
d11 2
a12 2
#define Module_MajorVersion             "5.42"
#define Module_Version                  542
d14 1
a14 1
#define Module_Date                     "23 Jul 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "23-Jul-02"
#define Module_ApplicationDate4         "23-Jul-2002"
d22 3
a24 3
#define Module_FullVersion              "5.42"
#define Module_HelpVersion              "5.42 (23 Jul 2002)"
#define Module_LibraryVersionInfo       "5:42"
@


4.58
log
@* Added two new library chunks, 4 and 5, which contain extensions to the kernel
  and C library respectively. These have no static data associated with them,
  just being extensions of the stub tables. The reason for this is to minimise
  wasted space in programs that don't use the C99 facilities; o.stubs is now
  a library split into 3 pieces - basic kernel and CLib, extra kernel and extra
  CLib; only the bits a program needs get included.

* Previous extensions to the C library stubs revoked - they now stop at _swix;
  all the new C99 functions now live in chunk 4. Anyone using those new
  functions should relink with new stubs and ensure this C library version.

* printf/scanf now support 64-bit types through "ll" and "j" length modifiers.

* Run-time support for VLAs (__rt_allocauto and __rt_freeauto) added. No
  attempt is currently made to clear up on longjmp or to cope with someone
  changing the kernel allocator while a VLA is active. These would be a
  future enhancement.

* Added complete 64-bit run-time support (48 functions) to kernel library;
  these functions are compatible with the ones used by the ARM ADS. Many of
  the simpler functions will not normally be used by the compiler, as it
  will generate inline code. There is scope for improvement by switching
  in MULL and CLZ-using forms of multiply and divide when possible.

* llabs and lldiv added to C library.

* Header files corrected in a few areas, and changed to match the C compiler.
  <stdint.h> and <stdbool.h> now require the compiler to be in C99 mode
  (as detected using __STDC_VERSION__).


Version 5.41. Tagged as 'RISC_OSLib-5_41'
@
text
@d1 1
a1 1
/* (5.41)
d4 1
a4 1
 * Last processed by srccommit version: 1.63.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.41
d9 1
a9 1
#define Module_Date_CMHG                22 May 2002
d11 2
a12 2
#define Module_MajorVersion             "5.41"
#define Module_Version                  541
d14 1
a14 1
#define Module_Date                     "22 May 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "22-May-02"
#define Module_ApplicationDate4         "22-May-2002"
d22 3
a24 3
#define Module_FullVersion              "5.41"
#define Module_HelpVersion              "5.41 (22 May 2002)"
#define Module_LibraryVersionInfo       "5:41"
@


4.57
log
@Lots of #ifndef __cplusplus added to <math.h>.

Version 5.40. Tagged as 'RISC_OSLib-5_40'
@
text
@d1 1
a1 1
/* (5.40)
d4 1
a4 1
 * Last processed by srccommit version: 1.62.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.40
d9 1
a9 1
#define Module_Date_CMHG                12 Apr 2002
d11 2
a12 2
#define Module_MajorVersion             "5.40"
#define Module_Version                  540
d14 1
a14 1
#define Module_Date                     "12 Apr 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "12-Apr-02"
#define Module_ApplicationDate4         "12-Apr-2002"
d22 3
a24 3
#define Module_FullVersion              "5.40"
#define Module_HelpVersion              "5.40 (12 Apr 2002)"
#define Module_LibraryVersionInfo       "5:40"
@


4.56
log
@* Added C99 functions floorf, ceilf, [l]rint[f], trunc[f], [l]round[f],
  nearbyint[f] and remainder[f].
* Added macros (only) for sinf, cosf, atanf.
* Requires cc 5.43

Version 5.39. Tagged as 'RISC_OSLib-5_39'
@
text
@d1 1
a1 1
/* (5.39)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.39
d9 1
a9 1
#define Module_Date_CMHG                11 Apr 2002
d11 2
a12 2
#define Module_MajorVersion             "5.39"
#define Module_Version                  539
d14 1
a14 1
#define Module_Date                     "11 Apr 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "11-Apr-02"
#define Module_ApplicationDate4         "11-Apr-2002"
d22 3
a24 3
#define Module_FullVersion              "5.39"
#define Module_HelpVersion              "5.39 (11 Apr 2002)"
#define Module_LibraryVersionInfo       "5:39"
@


4.55
log
@* Added C99 extensions to strftime(). All basic specifiers supported, but "E"
  and "O" modifiers ignored.
* strftime specifiers %c, %X and %x for "C" locale changed to match C99.
* Optimised hypot[f].
* Missing hypotf() declaration added to <math.h>.
* Fixed Shared C Library - inadvertent change to static data size meant it was
  incompatible with the stubs.

Version 5.38. Tagged as 'RISC_OSLib-5_38'
@
text
@d1 1
a1 1
/* (5.38)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.38
d9 1
a9 1
#define Module_Date_CMHG                26 Mar 2002
d11 2
a12 2
#define Module_MajorVersion             "5.38"
#define Module_Version                  538
d14 1
a14 1
#define Module_Date                     "26 Mar 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "26-Mar-02"
#define Module_ApplicationDate4         "26-Mar-2002"
d22 3
a24 3
#define Module_FullVersion              "5.38"
#define Module_HelpVersion              "5.38 (26 Mar 2002)"
#define Module_LibraryVersionInfo       "5:38"
@


4.54
log
@Added the following C99 features:

  * snprintf(), vsnprintf(), vfscanf(), vscanf(), vsscanf()
  * hh, j, z and t printf length modifiers (indicating char, intmax_t, size_t
    and ptrdiff_t respectively)
  * Hexadecimal floating-point printing and scanning (%a/%A)
  * %F printf() specifier (upper-case form of %F)
  * Input/output of NaNs and Infinities
  * imaxdiv_t, imaxdiv(), strtoimax(), strtoumax() (simulated through macros)
  * <fenv.h>: feclearexcept(), fegetexceptflag(), feraiseexcept(),
              fesetexceptflag(), fetestexcept(), fegetround(), fesetround(),
              fegetenv(), feholdexcept(), fesetenv(), feupdateenv()
  * FLT_EVAL_METHOD, DECIMAL_DIG
  * hypot(), hypotf(), fabsf(), fdim(), fdimf(), fmax(), fmaxf(), fmin(),
    fminf()
  * INFINITY, NAN, fpclassify(), isfinite(), isinf(), isnan(), isnormal(),
    signbit(), copysign(), copysignf(), nan(), nanf(), nextafter(),
    nextafterf() isgreater(), isgreaterequal(), isless(), islessequal(),
    islessgreater(), isunordered()

This involves adding 36 new entries to the stubs. Current versions of the C
library will not fault client programs with such larger stubs, but will fill
in the extra entries with junk. Programs requiring the new functions will have
to RMEnsure this version of the Shared C Library.

This version of the C library has been fixed so that in future, any extra
unknown stubs entries will be filled in with a branch to zero, rather than
corrupted.

Requires cc 5.41 or later, both to build, and to make use of some of the extra
facilities.


Version 5.37. Tagged as 'RISC_OSLib-5_37'
@
text
@d1 1
a1 1
/* (5.37)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.37
d9 1
a9 1
#define Module_Date_CMHG                21 Mar 2002
d11 2
a12 2
#define Module_MajorVersion             "5.37"
#define Module_Version                  537
d14 1
a14 1
#define Module_Date                     "21 Mar 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "21-Mar-02"
#define Module_ApplicationDate4         "21-Mar-2002"
d22 3
a24 3
#define Module_FullVersion              "5.37"
#define Module_HelpVersion              "5.37 (21 Mar 2002)"
#define Module_LibraryVersionInfo       "5:37"
@


4.53
log
@Added a ram install phase to the Makefile.

Version 5.36. Tagged as 'RISC_OSLib-5_36'
@
text
@d1 1
a1 1
/* (5.36)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.36
d9 1
a9 1
#define Module_Date_CMHG                22 Feb 2002
d11 2
a12 2
#define Module_MajorVersion             "5.36"
#define Module_Version                  536
d14 1
a14 1
#define Module_Date                     "22 Feb 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "22-Feb-02"
#define Module_ApplicationDate4         "22-Feb-2002"
d22 3
a24 3
#define Module_FullVersion              "5.36"
#define Module_HelpVersion              "5.36 (22 Feb 2002)"
#define Module_LibraryVersionInfo       "5:36"
@


4.52
log
@Abort and error handling massively overhauled:
  Aborts now give standard error messages (Abort on Data Transfer at... etc)
  *ShowRegs now filled in after aborts
  assert(), abort(), "free failed" and standard signal handlers now use Wimp
    error boxes if in the desktop
  Postmortem button on error boxes to view the postmortem

Also, x$multiply, x$divide, __rt_sdiv, x$remainder, x$udivide, __rt_udiv and
x$uremainder optimised.

Version 5.35. Tagged as 'RISC_OSLib-5_35'
@
text
@d1 1
a1 1
/* (5.35)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.35
d9 1
a9 1
#define Module_Date_CMHG                29 Jan 2002
d11 2
a12 2
#define Module_MajorVersion             "5.35"
#define Module_Version                  535
d14 1
a14 1
#define Module_Date                     "29 Jan 2002"
d16 2
a17 2
#define Module_ApplicationDate2         "29-Jan-02"
#define Module_ApplicationDate4         "29-Jan-2002"
d22 3
a24 3
#define Module_FullVersion              "5.35"
#define Module_HelpVersion              "5.35 (29 Jan 2002)"
#define Module_LibraryVersionInfo       "5:35"
@


4.51
log
@* Merged in (via sbrodie's branch) public source release of RISC_OSLib.
* Fixed C library tty so it can output '\b' (backspace).
* Made offsetof() and va_arg() macros work with C++.

Version 5.34. Tagged as 'RISC_OSLib-5_34'
@
text
@d1 1
a1 1
/* (5.34)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.34
d9 1
a9 1
#define Module_Date_CMHG                23 Aug 2001
d11 2
a12 2
#define Module_MajorVersion             "5.34"
#define Module_Version                  534
d14 1
a14 1
#define Module_Date                     "23 Aug 2001"
d16 2
a17 2
#define Module_ApplicationDate2         "23-Aug-01"
#define Module_ApplicationDate4         "23-Aug-2001"
d22 3
a24 2
#define Module_FullVersion              "5.34"
#define Module_HelpVersion              "5.34 (23 Aug 2001)"
@


4.50
log
@  Fix for strxfrm()
Detail:
  strxfrm was passing the buffers to the Territory module SWI the wrong
    way around so Territory_TransformString copied the destination over
    the source rather than vice versa!
Admin:
  Reported by <mailto:ian.foster@@gps.tandb.co.uk>
  Fixes Bugzilla bug #4375


Version 5.33. Tagged as 'RISC_OSLib-5_33'
@
text
@d1 1
a1 1
/* (5.33)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.33
d8 1
a8 1
#define Module_Date_CMHG                10 May 2001
d10 2
a11 2
#define Module_MajorVersion             "5.33"
#define Module_Version                  533
d13 1
a13 1
#define Module_Date                     "10 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "10-May-01"
#define Module_ApplicationDate4         "10-May-2001"
d21 2
a22 2
#define Module_FullVersion              "5.33"
#define Module_HelpVersion              "5.33 (10 May 2001)"
@


4.50.2.1
log
@  Merge of multiple versions of RISC_OSLib.
Detail:
  This work may be incomplete - hence import on a branch.
  It has NOT been tested.
Admin:
  Might even build.


Version 5.33, 4.50.2.1. Tagged as 'RISC_OSLib-5_33-4_50_2_1'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.50.2.1
#define Module_Date_CMHG                02 Jul 2001
d12 2
a13 2
#define Module_MinorVersion             "4.50.2.1"
#define Module_Date                     "02 Jul 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Jul-01"
#define Module_ApplicationDate4         "02-Jul-2001"
d21 2
a22 2
#define Module_FullVersion              "5.33 (4.50.2.1)"
#define Module_HelpVersion              "5.33 (02 Jul 2001) (4.50.2.1)"
@


4.49
log
@  Tidied up the strcmp() fix to remove an unused variable.
  Initialised so_far in stdio.c to remove compiler warning.
Admin:
  Built.  strcmptest() still indicates that strcmp() is working OK!

Version 5.32. Tagged as 'RISC_OSLib-5_32'
@
text
@d1 1
a1 1
/* (5.32)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.32
d8 1
a8 1
#define Module_Date_CMHG                17 Apr 2001
d10 2
a11 2
#define Module_MajorVersion             "5.32"
#define Module_Version                  532
d13 1
a13 1
#define Module_Date                     "17 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "17-Apr-01"
#define Module_ApplicationDate4         "17-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.32"
#define Module_HelpVersion              "5.32 (17 Apr 2001)"
@


4.48
log
@  strcmp() fix was broken.
Detail:
  This alternate implementation returned non-zero for equal strings,
    because the tidyup routine failed to stop examining the differing
    words when it found matching zero bytes.
Admin:
  Tested in softload C library, and in Lazarus ROM image.  strcmp()
    appears to be working per spec now.

Version 5.31. Tagged as 'RISC_OSLib-5_31'
@
text
@d1 1
a1 1
/* (5.31)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.31
d8 1
a8 1
#define Module_Date_CMHG                11 Apr 2001
d10 2
a11 2
#define Module_MajorVersion             "5.31"
#define Module_Version                  531
d13 1
a13 1
#define Module_Date                     "11 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "11-Apr-01"
#define Module_ApplicationDate4         "11-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.31"
#define Module_HelpVersion              "5.31 (11 Apr 2001)"
@


4.47
log
@  Removed spurious GET of rlib.s.asmdefs.
Detail:
  The file no longer exists as the UROM definition is passed on the command
    line now.
Admin:
  5.29 wouldn't build because of the missing file - didn't catch it during
    testing for some reason :-(

Version 5.30. Tagged as 'RISC_OSLib-5_30'
@
text
@d1 1
a1 1
/* (5.30)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.30
d8 1
a8 1
#define Module_Date_CMHG                10 Apr 2001
d10 2
a11 2
#define Module_MajorVersion             "5.30"
#define Module_Version                  530
d13 1
a13 1
#define Module_Date                     "10 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "10-Apr-01"
#define Module_ApplicationDate4         "10-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.30"
#define Module_HelpVersion              "5.30 (10 Apr 2001)"
@


4.46
log
@  Fix for strcmp().
  Fix for RISC_OSLib res() function.
Detail:
  Version 4.89 featured an improved strcmp() routine that didn't actually
    work properly (bug #4085).  The return values had the wrong sign if this
    optimised code was used and the string contained top-bit set chars.
  Removed that rlib.s.asmdefs hack as the comment in the makefile suggested.
    Nothing needs it any more as the assembler sources that require it now
    get via a -PD argument.
  res_ prefix function was still wrong as it failed to detect valid but wrong
    filenames, hence the "Make$Path not defined" errors in the latest tools
    release.
Admin:
  Fixes Bugzilla bug #4085
  Should fix BaseSW's build problems too.

Version 5.29. Tagged as 'RISC_OSLib-5_29'
@
text
@d1 1
a1 1
/* (5.29)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.29
d8 1
a8 1
#define Module_Date_CMHG                06 Apr 2001
d10 2
a11 2
#define Module_MajorVersion             "5.29"
#define Module_Version                  529
d13 1
a13 1
#define Module_Date                     "06 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "06-Apr-01"
#define Module_ApplicationDate4         "06-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "5.29"
#define Module_HelpVersion              "5.29 (06 Apr 2001)"
@


4.45
log
@  Fixed fault in res library in RISC_OSLib.
  Module library builds of RISC_OSLib are exported during export_libs
Detail:
  Ever since res_findname was altered to use <appname>:<resourcename> as
    the filename, the !C++ tool has been broken, because C++:Messages
    returns a different error to "not found" when you try to open it (it
    says it is an invalid filename).  This error is now caught explicitly
    and res_findname falls back to using <appname$Dir>.<resourcename>
    like it did before.
Admin:
  Required by FrontEnd 1.21 or later.
  Required by !C++ (c++cmd-3_17 or later to function correctly)

Version 5.28. Tagged as 'RISC_OSLib-5_28'
@
text
@d1 1
a1 1
/* (5.28)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.28
d8 1
a8 1
#define Module_Date_CMHG                02 Mar 2001
d10 2
a11 2
#define Module_MajorVersion             "5.28"
#define Module_Version                  528
d13 1
a13 1
#define Module_Date                     "02 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Mar-01"
#define Module_ApplicationDate4         "02-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "5.28"
#define Module_HelpVersion              "5.28 (02 Mar 2001)"
@


4.44
log
@  fwrite performance improved significantly.
  Another getenv() bug fixed.
Detail:
  stdio.c contains a vastly improved implementation of fwrite.
  hostsys.h declares _terminate_getenv to remove build warnings.
  armsys.c contains fix to getenv() to stop Omni dying.
Admin:
  Tested on desktop machine for over a week without incident, including
    several heavy fwrite users (WebServe, C compiler)
  fwrite change is documented in Doc/fwrite
  getenv() bug is Bugzilla bug #28

Version 5.27. Tagged as 'RISC_OSLib-5_27'
@
text
@d1 1
a1 1
/* (5.27)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.27
d8 1
a8 1
#define Module_Date_CMHG                22 Feb 2001
d10 2
a11 2
#define Module_MajorVersion             "5.27"
#define Module_Version                  527
d13 1
a13 1
#define Module_Date                     "22 Feb 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "22-Feb-01"
#define Module_ApplicationDate4         "22-Feb-2001"
d21 2
a22 2
#define Module_FullVersion              "5.27"
#define Module_HelpVersion              "5.27 (22 Feb 2001)"
@


4.43
log
@  BBE support added.
Detail:
  The BBE export rules for this component are fairly complex.  The rom_link
    bbe rule is overridden in its entirety by clib.rom_link_v as the symbol
    definitions need to be generated and exported during the rom_link phase.
Admin:
  Tested in BBE build; does not affect other builds.

Version 5.26. Tagged as 'RISC_OSLib-5_26'
@
text
@d1 1
a1 1
/* (5.26)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.26
d8 1
a8 1
#define Module_Date_CMHG                13 Dec 2000
d10 2
a11 2
#define Module_MajorVersion             "5.26"
#define Module_Version                  526
d13 1
a13 1
#define Module_Date                     "13 Dec 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "13-Dec-00"
#define Module_ApplicationDate4         "13-Dec-2000"
d21 2
a22 2
#define Module_FullVersion              "5.26"
#define Module_HelpVersion              "5.26 (13 Dec 2000)"
@


4.42
log
@Stubs were using some 26/32-bit switching macros, which is invalid for a
component that has to work on all OS versions. Changed to use 26/32-bit
neutral code. Stubs issued in first 32-bit library release were using 26-bit
forms, but they should only go wrong on a 32-bit system in failure cases
(such as the SharedCLibrary being unplugged).

Version 5.25. Tagged as 'RISC_OSLib-5_25'
@
text
@d1 1
a1 1
/* (5.25)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.25
d8 1
a8 1
#define Module_Date_CMHG                30 Nov 2000
d10 2
a11 2
#define Module_MajorVersion             "5.25"
#define Module_Version                  525
d13 1
a13 1
#define Module_Date                     "30 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "30-Nov-00"
#define Module_ApplicationDate4         "30-Nov-2000"
d21 2
a22 2
#define Module_FullVersion              "5.25"
#define Module_HelpVersion              "5.25 (30 Nov 2000)"
@


4.41
log
@
  * Merged South African resource changes made on Bethany branch.

Detail:

  * (As above.)  It would perhaps be a worthwhile change to use LocalRes
    type functionality in future to allow the UK resources to be chosen
    when no locale-specific resources exist.

Admin:

  * Changes first applied to Bethany branch version.  Resources are
    copied from UK -> SAfrica.

Version 5.24. Tagged as 'RISC_OSLib-5_24'
@
text
@d1 1
a1 1
/* (5.24)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.24
d8 1
a8 1
#define Module_Date_CMHG                22 Nov 2000
d10 2
a11 2
#define Module_MajorVersion             "5.24"
#define Module_Version                  524
d13 1
a13 1
#define Module_Date                     "22 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "22-Nov-00"
#define Module_ApplicationDate4         "22-Nov-2000"
d21 2
a22 2
#define Module_FullVersion              "5.24"
#define Module_HelpVersion              "5.24 (22 Nov 2000)"
@


4.40
log
@  Fix to 32-bit flag - it was previously inverted.
  Modulewrapped modules will now have the correct 32-bitness flag.
Admin:
  Built.

Version 5.23. Tagged as 'RISC_OSLib-5_23'
@
text
@d1 1
a1 1
/* (5.23)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.23
d8 1
a8 1
#define Module_Date_CMHG                21 Nov 2000
d10 2
a11 2
#define Module_MajorVersion             "5.23"
#define Module_Version                  523
d13 1
a13 1
#define Module_Date                     "21 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "21-Nov-00"
#define Module_ApplicationDate4         "21-Nov-2000"
d21 2
a22 2
#define Module_FullVersion              "5.23"
#define Module_HelpVersion              "5.23 (21 Nov 2000)"
@


4.39
log
@  Improved abort handling
Detail:
  * One check for 26-bit mode wan't being made, leading to the runtime reporting
    'Uncaught trap:' when a trap should have been catching the abort.  This
    prevented signal handlers from trapping some aborts.
  * When an abort was occuring in SVC mode, the stack wasn't being flattened,
    resulting in all sorts of nasty things when you tried to carry on from a
    signal handler (probably the main reason why you ever see 'No stack for trap
    handler'). SVC and undefined stacks are now flattened.  Further work should
    be done to restore the state of the OS after an abort, but this probably
    requires a new OS call to tidy itself up adequately.
Admin:
  Built 26-bit versions of the library with new 32-bit compatible entry points and checked abort handling with both sharedclibrary and ansilib.

Version 5.22. Tagged as 'RISC_OSLib-5_22'
@
text
@d1 1
a1 1
/* (5.22)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.22
d8 1
a8 1
#define Module_Date_CMHG                20 Nov 2000
d10 2
a11 2
#define Module_MajorVersion             "5.22"
#define Module_Version                  522
d13 1
a13 1
#define Module_Date                     "20 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "20-Nov-00"
#define Module_ApplicationDate4         "20-Nov-2000"
d21 2
a22 2
#define Module_FullVersion              "5.22"
#define Module_HelpVersion              "5.22 (20 Nov 2000)"
@


4.38
log
@WimpSlot extension code failed on a 32-bit system.
Second attempt at getting 32-bit overlay manager to work.

Version 5.21. Tagged as 'RISC_OSLib-5_21'
@
text
@d1 1
a1 1
/* (5.21)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.21
d8 1
a8 1
#define Module_Date_CMHG                08 Nov 2000
d10 2
a11 2
#define Module_MajorVersion             "5.21"
#define Module_Version                  521
d13 1
a13 1
#define Module_Date                     "08 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "08-Nov-00"
#define Module_ApplicationDate4         "08-Nov-2000"
d21 2
a22 2
#define Module_FullVersion              "5.21"
#define Module_HelpVersion              "5.21 (08 Nov 2000)"
@


4.37
log
@  Changed getenv to ensure it always allocates a buffer before calling
  OS_ReadVarVal.

Detail:
  getenv calls OS_ReadVarVal to read a system variable into a buffer.
  If the buffer is not big enough it increases the size of the buffer by
  256 bytes and tries again.
  However, the first time it was called, it would have no buffer and
  would call OS_ReadVarVal with r2=-1. The PRM says this "may" return an error
  which should be ignored, but if it did not return an error then getenv
  would not allocate a buffer and the call would fail.
  This change allocates a 256 byte buffer before OS_ReadVarVal is called.

Admin:
  Untested.

Version 5.20. Tagged as 'RISC_OSLib-5_20'
@
text
@d1 1
a1 1
/* (5.20)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.20
d8 1
a8 1
#define Module_Date_CMHG                19 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "5.20"
#define Module_Version                  520
d13 1
a13 1
#define Module_Date                     "19 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "19-Oct-00"
#define Module_ApplicationDate4         "19-Oct-2000"
d18 5
a22 2
#define Module_FullVersion              "5.20"
#define Module_HelpVersion              "5.20 (19 Oct 2000)"
@


4.36
log
@* RAM build of CLib now squeezed.
* First attempt at a working 32-bit overlay manager. Untested.

Version 5.19. Not tagged
@
text
@d1 1
a1 1
/* (5.19)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.19
d8 1
a8 1
#define Module_Date_CMHG                17 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "5.19"
#define Module_Version                  519
d13 1
a13 1
#define Module_Date                     "17 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "17-Oct-00"
#define Module_ApplicationDate4         "17-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.19"
#define Module_HelpVersion              "5.19 (17 Oct 2000)"
@


4.35
log
@  Fixed bug in _swi/_swix code.
Detail:
  This code would only work in 26-bit modes, since it stored the output
    flags using STR pc, [sp, #4*4]!.  When {CONFIG} is 32, it stores the
    CPSR instead.
Admin:
  Tested in 32-bit Lazarus build - this fixes the RCMMDriver stiffing
    (because it sits with interrupts off waiting for the C flag to be
    set on exit from an OS_Byte call it calls through _swix)

Version 5.19. Tagged as 'RISC_OSLib-5_19'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                16 Oct 2000
d13 1
a13 1
#define Module_Date                     "16 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "16-Oct-00"
#define Module_ApplicationDate4         "16-Oct-2000"
d19 1
a19 1
#define Module_HelpVersion              "5.19 (16 Oct 2000)"
@


4.34
log
@  Fixed _kernel_setenv.
Detail:
  _kernel_setenv(varname, NULL) should delete the variables.  It now does.
Admin:
  Tested in module.

Version 5.18. Tagged as 'RISC_OSLib-5_18'
@
text
@d1 1
a1 1
/* (5.18)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.18
d8 1
a8 1
#define Module_Date_CMHG                09 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "5.18"
#define Module_Version                  518
d13 1
a13 1
#define Module_Date                     "09 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "09-Oct-00"
#define Module_ApplicationDate4         "09-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.18"
#define Module_HelpVersion              "5.18 (09 Oct 2000)"
@


4.33
log
@printf specifier %#x corrected to prepend "0x" instead of "0X".

Version 5.17. Tagged as 'RISC_OSLib-5_17'
@
text
@d1 1
a1 1
/* (5.17)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.17
d8 1
a8 1
#define Module_Date_CMHG                03 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "5.17"
#define Module_Version                  517
d13 1
a13 1
#define Module_Date                     "03 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "03-Oct-00"
#define Module_ApplicationDate4         "03-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.17"
#define Module_HelpVersion              "5.17 (03 Oct 2000)"
@


4.32
log
@  Uses SYMDEFS files to avoid xtentries(app) and symgen.
  Fixed bug in getenv() relating to macro and numeric system variables.
Detail:
  Uses SYMDEFS file to avoid messing around with generating little text
    files, generating assembler source, assembling it etc.  abssym et al
    are construct as symbol definition template files and then updated
    directly by the linker ready for export.  The linker can use these
    files directly without needing them to be assembled into AOF format.
  Fixed getenv so that it can read macro and numeric variables.  With these
    variable types, R2 does not equal -length of the variable value, so
    trying to obtain a variable with a larger value than any previously
    read variable would fail.  This is now fixed.
  This module will refuse to build without link 5.19 or later.
Admin:
  Requires Library 0.54 or later.

  This component will not build with Library 0.53 or earlier.

Version 5.16. Tagged as 'RISC_OSLib-5_16'
@
text
@d1 1
a1 1
/* (5.16)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.16
d8 1
a8 1
#define Module_Date_CMHG                02 Oct 2000
d10 2
a11 2
#define Module_MajorVersion             "5.16"
#define Module_Version                  516
d13 1
a13 1
#define Module_Date                     "02 Oct 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Oct-00"
#define Module_ApplicationDate4         "02-Oct-2000"
d18 2
a19 2
#define Module_FullVersion              "5.16"
#define Module_HelpVersion              "5.16 (02 Oct 2000)"
@


4.31
log
@* Trailing garbage no longer appears after some perror() calls.
* Correction to static base location in modulewrap - was affecting some
  DSL 4000 video software.

Version 5.15. Tagged as 'RISC_OSLib-5_15'
@
text
@d1 1
a1 1
/* (5.15)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.15
d10 2
a11 2
#define Module_MajorVersion             "5.15"
#define Module_Version                  515
d18 2
a19 2
#define Module_FullVersion              "5.15"
#define Module_HelpVersion              "5.15 (02 Oct 2000)"
@


4.30
log
@  Fixed minor printf bug.
Detail:
  %#x shows a leading 0x (and %#X leads with 0X) only when the value
    to be displayed is NOT zero.
Admin:
  Cross-verified against: C89 standard; C9X standard; gcc 2.95 implementation.
  Built.

Version 5.14. Tagged as 'RISC_OSLib-5_14'
@
text
@d1 1
a1 1
/* (5.14)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.14
d8 1
a8 1
#define Module_Date_CMHG                14 Sep 2000
d10 2
a11 2
#define Module_MajorVersion             "5.14"
#define Module_Version                  514
d13 1
a13 1
#define Module_Date                     "14 Sep 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "14-Sep-00"
#define Module_ApplicationDate4         "14-Sep-2000"
d18 2
a19 1
#define Module_FullVersion              "5.14"
@


4.29
log
@  Major fix to Makefile.
Detail:
  Due to a dependency cockup, the C library wasn't being relinked properly
    during rom_link, so all the symbols exported in abssym files pointed
    to the locations the previous build was linked at.  This is now fixed
    by the addition of a new pseudo-target.
Admin:
  Tested clean and incremental build and verified the abssym file.
  Checked the build log to ensure relinking was occurring.
  Versions 5.11 and 5.12 of this component are fundamentally flawed.

Version 5.13. Tagged as 'RISC_OSLib-5_13'
@
text
@d1 1
a1 1
/* (5.13)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.13
d8 1
a8 1
#define Module_Date_CMHG                17 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "5.13"
#define Module_Version                  513
d13 1
a13 1
#define Module_Date                     "17 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "17-Aug-00"
#define Module_ApplicationDate4         "17-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "5.13"
@


4.28
log
@	Added Australian and Irish resources to the trunk version.
Detail:
	These had been missed during earlier translation efforts.
Admin:
	Tested in a Lazarus build.

Version 5.12. Tagged as 'RISC_OSLib-5_12'
@
text
@d1 1
a1 1
/* (5.12)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.12
d8 1
a8 1
#define Module_Date_CMHG                15 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "5.12"
#define Module_Version                  512
d13 1
a13 1
#define Module_Date                     "15 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "15-Aug-00"
#define Module_ApplicationDate4         "15-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "5.12"
@


4.27
log
@  Added cut-down target which excludes RISC_OSLib.
Detail:
  This component now supports multiple TARGETs being passed in:
    Pass in CLib for a minimal C library excluding RISC_OSLib.
    Pass in RISC_OSLib to continue to build the full thing.
  BuildSys will be modified to make SharedCLibrary build ONLY
    the minimal library - this may mean that products that are
    to be updated may have to alter their components file to
    take the new SharedRISC_OSLib component instead of the
    SharedCLibrary target.
  syms.A_Entries is now automatically generated from C_Entries
    because this is the easiest way to generate the file.  If
    extra symbols are added to C_Entries, they will need to be
    removed by the egrep command which strips out _swi and _swix.
  Makefile tidied to be more careful about ${COMPONENT} and ${TARGET}
  clean_all rule improved to really clean things properly.
Admin:
  Tested in STB400-2M build and on desktop build.
  Requires BuildSys-2_41 or later.

Version 5.11. Tagged as 'RISC_OSLib-5_11'
@
text
@d1 1
a1 1
/* (5.11)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.11
d8 1
a8 1
#define Module_Date_CMHG                11 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "5.11"
#define Module_Version                  511
d13 1
a13 1
#define Module_Date                     "11 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "11-Aug-00"
#define Module_ApplicationDate4         "11-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "5.11"
@


4.26
log
@C library now has a default message for C71 (Calling standard no longer
supported), so you get a meaningful message if soft-loading a new version.
No code changes.

Version 5.10. Tagged as 'RISC_OSLib-5_10'
@
text
@d1 1
a1 1
/* (5.10)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.10
d8 1
a8 1
#define Module_Date_CMHG                03 Jul 2000
d10 2
a11 2
#define Module_MajorVersion             "5.10"
#define Module_Version                  510
d13 1
a13 1
#define Module_Date                     "03 Jul 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "03-Jul-00"
#define Module_ApplicationDate4         "03-Jul-2000"
d18 1
a18 1
#define Module_FullVersion              "5.10"
@


4.25
log
@Recommitted to get tag allocated.

Version 5.09. Tagged as 'RISC_OSLib-5_09'
@
text
@d1 1
a1 1
/* (5.09)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.09
d8 1
a8 1
#define Module_Date_CMHG                20 Jun 2000
d10 2
a11 2
#define Module_MajorVersion             "5.09"
#define Module_Version                  509
d13 1
a13 1
#define Module_Date                     "20 Jun 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "20-Jun-00"
#define Module_ApplicationDate4         "20-Jun-2000"
d18 1
a18 1
#define Module_FullVersion              "5.09"
@


4.24
log
@  Support for additional SCL resources in multi-language builds.
Detail:
  * Copied UK resources to Italy, Germany (excepting where already
    present), France and Turkey for multi-language builds.
    LocalRes: cannot be used here, because of the clib/rlib prefixes on
    the resource paths.
    Note: These languages will need translating at some point, but are not
    generally user visible.
Admin:
  Required for multiple language build of Bethany.

Version 5.08. Not tagged
@
text
@d1 1
a1 1
/* (5.08)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.08
d10 2
a11 2
#define Module_MajorVersion             "5.08"
#define Module_Version                  508
d18 1
a18 1
#define Module_FullVersion              "5.08"
@


4.23
log
@C library would fail on new Kernels due to an incorrect call to
OS_ReadSysInfo 6.

Version 5.08. Tagged as 'RISC_OSLib-5_08'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                16 May 2000
d13 4
a16 1
#define Module_Date                     "16 May 2000"
@


4.22
log
@tmpnam() would cause system crashes in version 5.06

Version 5.07. Tagged as 'RISC_OSLib-5_07'
@
text
@d1 1
a1 1
/* (5.07)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.07
d8 1
a8 1
#define Module_Date_CMHG                10 May 2000
d10 2
a11 2
#define Module_MajorVersion             "5.07"
#define Module_Version                  507
d13 1
a13 1
#define Module_Date                     "10 May 2000"
d15 1
a15 1
#define Module_FullVersion              "5.07"
@


4.21
log
@32-bit work merged from kbracey_32bit branch.

Version 5.06. Tagged as 'RISC_OSLib-5_06'
@
text
@d1 1
a1 1
/* (5.06)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.06
d8 1
a8 1
#define Module_Date_CMHG                09 May 2000
d10 2
a11 2
#define Module_MajorVersion             "5.06"
#define Module_Version                  506
d13 1
a13 1
#define Module_Date                     "09 May 2000"
d15 1
a15 1
#define Module_FullVersion              "5.06"
@


4.20
log
@  Extensions to modulewrap.s.
Detail:
  UsePathForHelpMessages switch added - if the symbol is defined, Messages
  are obtained from <AppName>:Messages, requiring an <AppName>$Path system
  variable. Previously, they were always fetched from Resources which is
  only correct if the module is in ROM. This only influences the ability to
  give sensible *help output for *help Desktop_<AppName>. In addition, KJB
  added code to export the module private word pointer as
  'module_private_word_ptr'.
Admin:
  Tested inside PlugPlay RAM module build.

Version 5.05. Tagged as 'RISC_OSLib-5_05'
@
text
@d1 1
a1 1
/* (5.05)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.05
d8 1
a8 1
#define Module_Date_CMHG                28 Apr 2000
d10 2
a11 2
#define Module_MajorVersion             "5.05"
#define Module_Version                  505
d13 1
a13 1
#define Module_Date                     "28 Apr 2000"
d15 1
a15 1
#define Module_FullVersion              "5.05"
@


4.19
log
@  Updated Japanese translations
Detail:
  Updated translations for C55,C57,C58 in
  CLib messages.


Version 5.04. Tagged as 'RISC_OSLib-5_04'
@
text
@d1 1
a1 1
/* (5.04)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.04
d8 1
a8 1
#define Module_Date_CMHG                10 Apr 2000
d10 2
a11 2
#define Module_MajorVersion             "5.04"
#define Module_Version                  504
d13 1
a13 1
#define Module_Date                     "10 Apr 2000"
d15 1
a15 1
#define Module_FullVersion              "5.04"
@


4.18
log
@  Automatic generation of swis.h now more automatic.
Detail:
  New script will search the export directory for headers that should
    be exported SWI symbols for it and only cause them to be included
    if it finds the header file.  This means that unless a component
    in your build actually needs the SWI symbols from another component,
    you no longer require that component to be in your modules file
    purely to enable successful generation of swis.h
Admin:
  Test build performed.

Version 5.03. Tagged as 'RISC_OSLib-5_03'
@
text
@d1 1
a1 1
/* (5.03)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.03
d8 1
a8 1
#define Module_Date_CMHG                07 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "5.03"
#define Module_Version                  503
d13 1
a13 1
#define Module_Date                     "07 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "5.03"
@


4.17
log
@Changed console output so that '\n' outputs VDU 10,13 rather than 13,10.
This is the standard RISC OS convention (cf OS_NewLine) - some apps assume
it when redirecting output.

Version 5.02. Tagged as 'RISC_OSLib-5_02'
@
text
@d1 1
a1 1
/* (5.02)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.02
d10 2
a11 2
#define Module_MajorVersion             "5.02"
#define Module_Version                  502
d15 1
a15 1
#define Module_FullVersion              "5.02"
@


4.16
log
@
  * Further message changes for the Lazarus project.

Detail:

  * More minor message alterations: removed "Network Computer" and replaced
    this with "system", since this is generic.  Also brought the
    other resources up-to-date by including messages missing from the
    non-UK resources.

Admin:

  * Checked but untested.  (These additional changes made after having
    discovered the phrase "Network Computer" within "rlib" during a
    search across the whole of the Lazarus sources; hopefully, I have
    found them all this time!)

Version 5.01. Tagged as 'RISC_OSLib-5_01'
@
text
@d1 1
a1 1
/* (5.01)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.01
d8 1
a8 1
#define Module_Date_CMHG                14 Jan 2000
d10 2
a11 2
#define Module_MajorVersion             "5.01"
#define Module_Version                  501
d13 1
a13 1
#define Module_Date                     "14 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "5.01"
@


4.16.2.1
log
@  Added resource files for more languages (dupe of that on the Trunk)
Detail:
  * Copied UK resources to Turkey, Italy, France, Germany for Bethany
    build.
Admin:
  Dupe of changes on Trunk; needed on a branch because otherwise many
  other components need dragging in.

Version 5.01, 4.16.2.1. Tagged as 'RISC_OSLib-5_01-4_16_2_1'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.16.2.1
#define Module_Date_CMHG                20 Jun 2000
d12 2
a13 2
#define Module_MinorVersion             "4.16.2.1"
#define Module_Date                     "20 Jun 2000"
d15 1
a15 4
#define Module_ApplicationDate2         "20-Jun-00"
#define Module_ApplicationDate4         "20-Jun-2000"

#define Module_FullVersion              "5.01 (4.16.2.1)"
@


4.16.2.2
log
@  Copied UK resources as Spain.
Detail:
  * It's possible that Customer A are going to want a Spanish language version.
    In case this is the case, this set of resources will allow SCL to
    build.
Admin:
  Just copied the resources. They may need translating at some later
  point.

Version 5.01, 4.16.2.2. Tagged as 'RISC_OSLib-5_01-4_16_2_2'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.16.2.2
#define Module_Date_CMHG                10 Jul 2000
d12 2
a13 2
#define Module_MinorVersion             "4.16.2.2"
#define Module_Date                     "10 Jul 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "10-Jul-00"
#define Module_ApplicationDate4         "10-Jul-2000"
d18 1
a18 1
#define Module_FullVersion              "5.01 (4.16.2.2)"
@


4.16.2.3
log
@  Added additional territories needed by Customer A.
Detail:
  * Spain, Australia and Ireland are copies of the UK territory.
Admin:
  These messages are rarely seen - if at all - but are required by SCL if
  it wants to work in those territories.

Version 5.01, 4.16.2.3. Tagged as 'RISC_OSLib-5_01-4_16_2_3'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.16.2.3
#define Module_Date_CMHG                01 Aug 2000
d12 2
a13 2
#define Module_MinorVersion             "4.16.2.3"
#define Module_Date                     "01 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "01-Aug-00"
#define Module_ApplicationDate4         "01-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "5.01 (4.16.2.3)"
@


4.16.2.4
log
@  version 5_01-4_16_2_3 was incomplete.
Detail:
  The Australia and Ireland resources had been added to clib, but
not rlib. They have now been added to rlib.
Admin:
  Untested.

Version 5.01, 4.16.2.4. Tagged as 'RISC_OSLib-5_01-4_16_2_4'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.16.2.4
#define Module_Date_CMHG                14 Aug 2000
d12 2
a13 2
#define Module_MinorVersion             "4.16.2.4"
#define Module_Date                     "14 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "14-Aug-00"
#define Module_ApplicationDate4         "14-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "5.01 (4.16.2.4)"
@


4.16.2.5
log
@
  * Added resources for South Africa.

Detail:

  * Both rlib and clib now contain resources for SAfrica: a simple copy
    of the UK set.

Admin:

  * Noted as a failure in development Bethany build.

Version 5.01, 4.16.2.5. Tagged as 'RISC_OSLib-5_01-4_16_2_5'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.16.2.5
#define Module_Date_CMHG                22 Nov 2000
d12 2
a13 2
#define Module_MinorVersion             "4.16.2.5"
#define Module_Date                     "22 Nov 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "22-Nov-00"
#define Module_ApplicationDate4         "22-Nov-2000"
d18 1
a18 5
#define Module_ComponentName            "RISC_OSLib"
#define Module_ComponentPath            "RiscOS/Sources/Lib/RISC_OSLib"

#define Module_FullVersion              "5.01 (4.16.2.5)"
#define Module_HelpVersion              "5.01 (22 Nov 2000) (4.16.2.5)"
@


4.15
log
@
  * Message changes for Lazarus project.

Detail:

  * Modified the text of the C library error C55, C57 and C58.  They no
    longer refer to the "Network Computer" and now preserve both
    PC and register information.  (The actual error string remains
    suppressed, however.)  [Fault fix for fault ID 1119.]

Admin:

  * Untested.  Affects RCA resources only.

Version 5.00. Tagged as 'RISC_OSLib-5_00'
@
text
@d1 1
a1 1
/* (5.00)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.00
d8 1
a8 1
#define Module_Date_CMHG                13 Jan 2000
d10 2
a11 2
#define Module_MajorVersion             "5.00"
#define Module_Version                  500
d13 1
a13 1
#define Module_Date                     "13 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "5.00"
@


4.14
log
@  No longer relies on Sys$ReturnCode for swis.h export
Detail:
  amu cleverly sets Sys$ReturnCode to zero just prior to executing
    any command from the Makefile, hence checking for Sys$ReturnCode
    does not work.  Script changed to look for AMU$ReturnCode which
    is (in amu 5.06 and later) the return code of the previous command.
    However, since the variable will not be set by earlier versions of
    amu, the behaviour of always copying the file will return until
    amu 5.06 appears in the build.
Admin:
  Tested manually.

Version 4.99. Tagged as 'RISC_OSLib-4_99'
@
text
@d1 1
a1 1
/* (4.99)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	4.99
#define Module_MinorVersion_CMHG	
#define Module_Date_CMHG      		25 Nov 1999
d10 4
a13 4
#define Module_MajorVersion     	"4.99"
#define Module_Version                  499
#define Module_MinorVersion		""
#define Module_Date      		"25 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "4.99"
@


4.13
log
@  swis.h only re-exported if it has changed since the last export.
Detail:
  The Makefile now performs a diff of CLIB:h.swis and derived.swis
    in order to determine whether it needs to export the header or
    not.  This can save compilation time if the header file has not
    changed since it used to cause virtually all C code to recompile.
  s/makeswish now imports Hdr:Machine.<Machine> and executes $GetIO
    to ensure that the Portable module header export functions
    correctly.
Admin:
  Tested.

Version 4.98. Tagged as 'RISC_OSLib-4_98'
@
text
@d1 1
a1 1
/* (4.98)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.98
d10 2
a11 2
#define Module_MajorVersion     	"4.98"
#define Module_Version                  498
d15 1
a15 1
#define Module_FullVersion              "4.98"
@


4.12
log
@  Fix for strcoll
Detail:
  Somebody had modified the SWI call to Territory_Collate to be done
    via _swix instead of _kernel_swi, but didn't remove the _kernel_swi_regs
    variable (r) and didn't change the function return value to return the
    new "ret" variable instead of r.r[0] which gives arbitrary results - in
    particular it confuses qsort.
Admin:
  Tested that it builds.

Version 4.97. Tagged as 'RISC_OSLib-4_97'
@
text
@d1 1
a1 1
/* (4.97)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.97
d8 1
a8 1
#define Module_Date_CMHG      		22 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.97"
#define Module_Version                  497
d13 1
a13 1
#define Module_Date      		"22 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "4.97"
@


4.12.2.1
log
@  _kernel_call_client is now 32-bit application safe.
Detail:
  Since calls up to a 32-bit application (eg. main, atexit functions,
    qsort/bsearch comparison functions) won't preserve flags if the
    application is 32-bit, the _kernel_call_client needs to know that
    the Z flag it was relying on being preserved won't be any more.
Admin:
  Tested and verified by dry run inspection only.
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	4.12.2.1
#define Module_Date_CMHG      		08 Nov 1999
d12 2
a13 2
#define Module_MinorVersion		"4.12.2.1"
#define Module_Date      		"08 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.1)"
@


4.12.2.2
log
@  Stack extension return code is now APCS variant safe.
Detail:
  Extension exit code relied on the user function preserving the
    Z flag across the function call.  This no longer happens.
Admin:
  Work in progress.

Version 4.97, 4.12.2.2. Tagged as 'RISC_OSLib-4_97-4_12_2_2'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	4.12.2.2
#define Module_Date_CMHG      		09 Nov 1999
d12 2
a13 2
#define Module_MinorVersion		"4.12.2.2"
#define Module_Date      		"09 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.2)"
@


4.12.2.3
log
@_kernel_unwind now understands SFMFD instructions in function entry.
It also copes with STFE now - it was totally broken.
32-bit stubs and corresponding LibInit SWIs created.
All rather untested.

Version 4.97, 4.12.2.3. Tagged as 'RISC_OSLib-4_97-4_12_2_3'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	4.12.2.3
#define Module_Date_CMHG      		10 Nov 1999
d12 2
a13 2
#define Module_MinorVersion		"4.12.2.3"
#define Module_Date      		"10 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.3)"
@


4.12.2.4
log
@Most of the obvious problems in the last check-in fixed. It now builds, at
least.
Stubs now correctly, and internationalisably, report "C library too old".
Both BL and LDR PC forms of branch table successfully created.
Tested on various existing 26-bit programs, and one 32-bit program tested.

Version 4.97, 4.12.2.4. Tagged as 'RISC_OSLib-4_97-4_12_2_4'
@
text
@d7 1
a7 1
#define Module_MinorVersion_CMHG	4.12.2.4
d12 1
a12 1
#define Module_MinorVersion		"4.12.2.4"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.4)"
@


4.12.2.5
log
@  Work in progress.  Do not use.
Detail:
  Many changes to use the APCS macros for function entry and exit so
    that the code can build for 32-bit environments.  Changes are NOT
    yet complete.
  Makefile rebuilds swis.h header file but only exports it if it has
    changed to avoid unnecessary rebuilding of nearly all C sources
    in a build.
Admin:
  Work in progress.  Do not use.

Version 4.97, 4.12.2.5. Tagged as 'RISC_OSLib-4_97-4_12_2_5'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	4.12.2.5
#define Module_Date_CMHG      		22 Nov 1999
d12 2
a13 2
#define Module_MinorVersion		"4.12.2.5"
#define Module_Date      		"22 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.5)"
@


4.12.2.6
log
@More 32-bit compatibility added.  All the C code should now be OK.
Fixed some typos in kernel.s.k_body too.

Version 4.97, 4.12.2.6. Tagged as 'RISC_OSLib-4_97-4_12_2_6'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	4.12.2.6
#define Module_Date_CMHG      		23 Nov 1999
d12 2
a13 2
#define Module_MinorVersion		"4.12.2.6"
#define Module_Date      		"23 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.6)"
@


4.12.2.7
log
@More 32-bit work. Now functional, but still need to sort out various
build issues.

Version 4.97, 4.12.2.7. Tagged as 'RISC_OSLib-4_97-4_12_2_7'
@
text
@d6 3
a8 3
#define Module_MajorVersion_CMHG        4.97
#define Module_MinorVersion_CMHG        4.12.2.7
#define Module_Date_CMHG                14 Jan 2000
d10 1
a10 1
#define Module_MajorVersion             "4.97"
d12 2
a13 2
#define Module_MinorVersion             "4.12.2.7"
#define Module_Date                     "14 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.7)"
@


4.12.2.8
log
@Features:

* APCS-32 support complete.
* APCS-A compatibility removed.
* Old ArthurLib code removed.
* _clib_version() now reports version from VersionNum.
* time() no longer does a run-time host check - I think we know we're not a BBC
  Master ARM second processor now.
* rename() now uses OS_FSControl 25 instead of *rename.
* getenv() can handle arbitrary length variables.
* Can now handle exceptions in 32-bit form of FPEmulator (on either 26 or 32
  bit systems).
* tmpnam() switches to SVC mode to access its zero page counter.
* Faster divide routines.

Admin:

  This will build all sorts of different things depending on the flags. See
  the Docs directory for details.

  As far as ROM builds are concerned, if using APCS-R, no changes are needed.
  If using APCS-32, the Shared C Library must be built as APCS-R to ensure
  compatibility with old binaries. To achieve this, pass in the option
  SCL_APCS="-APCS 3/26bit" in the Components file.

Version 4.97, 4.12.2.8. Tagged as 'RISC_OSLib-4_97-4_12_2_8'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG        4.12.2.8
#define Module_Date_CMHG                09 May 2000
d12 2
a13 2
#define Module_MinorVersion             "4.12.2.8"
#define Module_Date                     "09 May 2000"
d15 1
a15 1
#define Module_FullVersion              "4.97 (4.12.2.8)"
@


4.11
log
@  Fix for qsort to stop aborts.
Detail:
  If qsort is passed an invalid base pointer and the number of entries
    is zero, then due to some pointer artihmetic going wrong, it aborts.
    The fix is to trap zero length arrays and exit quickly.
Admin:
  Required by cmhg prior to version 5.20 which had an explicit fix to
    prevent triggering this bug.
  Reportedly this fix is required by PhotoDesk prior to version 3.03.

Version 4.96. Tagged as 'RISC_OSLib-4_96'
@
text
@d1 1
a1 1
/* (4.96)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.96
d8 1
a8 1
#define Module_Date_CMHG      		21 Sep 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.96"
#define Module_Version                  496
d13 1
a13 1
#define Module_Date      		"21 Sep 1999"
d15 1
a15 1
#define Module_FullVersion              "4.96"
@


4.10
log
@Incorporated _swi/_swix bug fix that was released in the RISC OS 3.70/3.71
ROM patches.
fp and lr are now set correctly before calling a SWI. This allows much better
recovery if the SWI aborts or generates an error.

Version 4.95. Tagged as 'RISC_OSLib-4_95'
@
text
@d1 1
a1 1
/* (4.95)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.95
d8 1
a8 1
#define Module_Date_CMHG      		09 Jul 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.95"
#define Module_Version                  495
d13 1
a13 1
#define Module_Date      		"09 Jul 1999"
d15 1
a15 1
#define Module_FullVersion              "4.95"
@


4.9
log
@  Fixed up Makefile to export new header files.
  Added protection for cfront inclusion of stdint.h to ensure
    inclusion is faulted.
Admin:
  Tested.
  Sources which are compiled -fussy will require Norcroft cc version
    5.11 or later in order to avoid the warning about the use of an
    undefined macro in an #if pre-processor statement and to avoid
    the non-ANSI include warning.

Version 4.94. Tagged as 'RISC_OSLib-4_94'
@
text
@d1 1
a1 1
/* (4.94)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.94
d8 1
a8 1
#define Module_Date_CMHG      		12 May 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.94"
#define Module_Version                  494
d13 1
a13 1
#define Module_Date      		"12 May 1999"
d15 1
a15 1
#define Module_FullVersion              "4.94"
@


4.8
log
@Added <stdbool.h>, <iso646.h>, <stdint.h> and <inttypes.h>, as per the
current ISO C9X FDIS, as far as is possible given a non-C9X compiler.

Version 4.93. Tagged as 'RISC_OSLib-4_93'
@
text
@d1 1
a1 1
/* (4.93)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.93
d8 1
a8 1
#define Module_Date_CMHG      		11 May 1999
d10 2
a11 2
#define Module_MajorVersion     	"4.93"
#define Module_Version                  493
d13 1
a13 1
#define Module_Date      		"11 May 1999"
d15 1
a15 1
#define Module_FullVersion              "4.93"
@


4.7
log
@Added Finnish, Swedish, Danish and Norwegian resources.

Version 4.92. Tagged as 'RISC_OSLib-4_92'
@
text
@d1 1
a1 1
/* (4.92)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.92
d8 1
a8 1
#define Module_Date_CMHG      		06 Dec 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.92"
#define Module_Version                  492
d13 1
a13 1
#define Module_Date      		"06 Dec 1998"
d15 1
@


4.6
log
@New Japanese NC crash messages.
A feeble hack to get Edit to display Japanese, plus a more serious attempt
that doesn't work, compiled out.

Version 4.91. Tagged as 'RISC_OSLib-4_91'
@
text
@d1 1
a1 1
/* (4.91)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.91
d8 1
a8 1
#define Module_Date_CMHG      		29 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.91"
#define Module_Version                  491
d13 1
a13 1
#define Module_Date      		"29 Oct 1998"
@


4.5
log
@  Added new -v4 pragma to derived swis.h header file.
  Moved template for swis.h out of asm source into separate text file.
Detail:
  s.makehswis: The text which forms the common header for the derived
    swis.h is now stored externally rather than declared inline with
    assembler directives.
  h.swisheaders: The external file containing the common header.
    Now wraps the declarations of _swi and _swix with "#pragma -v4"
    to activate the _swi/_swix parameter checking for those functions.
  Makefile: Added dependency of derived.swis on h.swisheader
Admin:
  Built and exported.  Tested with cc 5.09 and it was happy with the
  new pragma (it ignores it).  Tested with what will be cc 5.10 and
  it recognised it and started checking _swi and _swix calls.

Version 4.90. Tagged as 'RISC_OSLib-4_90'
@
text
@d1 1
a1 1
/* (4.90)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.90
d8 1
a8 1
#define Module_Date_CMHG      		26 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.90"
#define Module_Version                  490
d13 1
a13 1
#define Module_Date      		"26 Oct 1998"
@


4.4
log
@Ursula branch merged.
StrongARMfudge flag removed.
StrongARM compatibility set according to AMBKernel flag in Hdr:RISCOS
strftime %U and %W specifiers fixed for week 0.

Version 4.89. Tagged as 'RISC_OSLib-4_89'
@
text
@d1 1
a1 1
/* (4.89)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.89
d8 1
a8 1
#define Module_Date_CMHG      		01 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.89"
#define Module_Version                  489
d13 1
a13 1
#define Module_Date      		"01 Oct 1998"
@


4.3
log
@Japanese resources added.

Version 4.88. Tagged as 'RISC_OSLib-4_88'
@
text
@d1 1
a1 1
/* (4.88)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.88
d8 1
a8 1
#define Module_Date_CMHG      		11 Sep 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.88"
#define Module_Version                  488
d13 1
a13 1
#define Module_Date      		"11 Sep 1998"
@


4.2
log
@Merged Spinner branch changes onto trunk (new RCA messages files
and Makefile changes). Convert to srccommit while we're at it.
Removed a few $Revision's to prevent future spurious merge clashes.

Version 4.87. Tagged as 'RISC_OSLib-4_87'
@
text
@d1 1
a1 1
/* (4.87)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.87
d8 1
a8 1
#define Module_Date_CMHG      		27 Aug 1998
d10 2
a11 2
#define Module_MajorVersion     	"4.87"
#define Module_Version                  487
d13 1
a13 1
#define Module_Date      		"27 Aug 1998"
@


4.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (4.86)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	4.86
d10 2
a11 2
#define Module_MajorVersion     	"4.86"
#define Module_Version                  486
@
