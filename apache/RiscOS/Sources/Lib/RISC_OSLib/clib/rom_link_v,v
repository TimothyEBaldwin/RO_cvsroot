head	1.2;
access;
symbols
	RISC_OSLib-5_97:1.2
	RISC_OSLib-5_96:1.2
	RISC_OSLib-5_95:1.2
	RISC_OSLib-5_94:1.2
	RISC_OSLib-5_93:1.2
	RISC_OSLib-5_92:1.2
	RISC_OSLib-5_91:1.2
	RISC_OSLib-5_90:1.2
	RISC_OSLib-5_89:1.2
	RISC_OSLib-5_88:1.2
	RISC_OSLib-5_87:1.2
	RISC_OSLib-5_86-1:1.2
	RISC_OSLib-5_86:1.2
	RISC_OSLib-5_85:1.2
	RISC_OSLib-5_84:1.2
	RISC_OSLib-5_83-2:1.2
	RISC_OSLib-5_83-1:1.2
	RISC_OSLib-5_83:1.2
	RISC_OSLib-5_82:1.2
	RISC_OSLib-5_81:1.2
	RISC_OSLib-5_75-2:1.2
	RISC_OSLib-5_80:1.2
	RISC_OSLib-5_79:1.2
	RISC_OSLib-5_78:1.2
	RISC_OSLib-5_75-1:1.2
	RISC_OSLib-5_77:1.2
	RISC_OSLib-5_76:1.2
	RISC_OSLib-5_75:1.2
	RISC_OSLib-5_74:1.2
	RISC_OSLib-5_73:1.2
	RISC_OSLib-5_72:1.2
	RISC_OSLib-5_71:1.2
	RISC_OSLib-5_70:1.2
	RISC_OSLib-5_69:1.2
	RISC_OSLib-5_68:1.2
	RISC_OSLib-5_67:1.2
	RISC_OSLib-5_66:1.2
	RISC_OSLib-5_65:1.2
	RISC_OSLib-5_64:1.2
	RISC_OSLib-5_63:1.2
	RISC_OSLib-5_62:1.2
	RISC_OSLib-5_61:1.2
	RISC_OSLib-5_60:1.2
	RISC_OSLib-5_59:1.2
	RISC_OSLib-5_58:1.2
	RISC_OSLib-5_57:1.2
	RISC_OSLib-5_56:1.2
	RISC_OSLib-5_55:1.2
	RISC_OSLib-5_54:1.2
	RISC_OSLib-5_53:1.2
	RISC_OSLib-5_52:1.2
	RISC_OSLib-5_51:1.2
	RO_5_07:1.1
	RISC_OSLib-5_50:1.1
	RISC_OSLib-5_49:1.1
	RISC_OSLib-5_46-4_64_2_1:1.1
	NoInlineAsm:1.1.0.4
	RISC_OSLib-5_48:1.1
	RISC_OSLib-5_47:1.1
	RISC_OSLib-5_46:1.1
	RISC_OSLib-5_45:1.1
	RISC_OSLib-5_44:1.1
	RISC_OSLib-5_43:1.1
	RISC_OSLib-5_42:1.1
	RISC_OSLib-5_41:1.1
	RISC_OSLib-5_40:1.1
	RISC_OSLib-5_39:1.1
	RISC_OSLib-5_38:1.1
	RISC_OSLib-5_37:1.1
	RISC_OSLib-5_36:1.1
	RISC_OSLib-5_35:1.1
	RISC_OSLib-5_34:1.1
	RISC_OSLib-5_33-4_50_2_1:1.1
	sbrodie_dev:1.1.0.2
	sbrodie_dev_bp:1.1
	RISC_OSLib-5_33:1.1
	RISC_OSLib-5_32:1.1
	RISC_OSLib-5_31:1.1
	RISC_OSLib-5_30:1.1
	RISC_OSLib-5_29:1.1
	RISC_OSLib-5_28:1.1
	RISC_OSLib-5_27:1.1
	dcotton_autobuild_BaseSW:1.1
	RISC_OSLib-5_26:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.11.09.18.14.15;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.13.10.38.27;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@BBE-related changes:
* clib.rom_link_v doesn't seem to have been kept in step with the changes
  to srcbuild as part of the cross-compilation work: it is no longer the
  job of the verbatim rom link makefie fragment to provide a rom_link rule.
  An appropriate alternative set of forwarding rules have been implemented
  instead.
* clib.rom_link_v was never taught about the new C99 library chunks, and the
  relevant s files weren't being exported in the BBE phase either.

Retagged since this won't affect code generation for existing builds.
@
text
@#
# BBE Makefile fragment for rom_link for the C library
#
XTENT   = perl build:xtentries >
LD      = link
LDFLAGS = -linkversion 519
ABSSYM    = RISC_OSLib:o.abssym
C_ABSSYM  = RISC_OSLib:o.c_abssym
A_ABSSYM  = RISC_OSLib:o.a_abssym

#
# Final link for the ROM Image {using given base address}
#
rom_link-RISC_OSLib: rom_link__link rom_link__RISC_OSLib rom_link__Entries
        @@echo ${COMPONENT}: rom_link complete

rom_link-CLib: rom_link__link rom_link__CLib rom_link__Entries
        @@echo ${COMPONENT}: rom_link complete

rom_link__Entries:
        ${XTENT} syms.C_Entries kernel.s.k_entries kernel.s.k_entries2 clib.s.cl_entries clib.s.cl_entry2
        print rlib.swi { >> syms.C_Entries }
        | C_Entries *currently* only adds _swi/_swix to RO2 symbols.
        egrep -v "^(0x00000000 . )?_swix?$" < syms.C_Entries > syms.A_Entries

rom_link__RISC_OSLib:
        ${XTENT} syms.Entries kernel.s.k_entries kernel.s.k_entries2 clib.s.cl_entries clib.s.cl_entry2 rlib.s.rl_entries
        print rlib.swi { >> syms.Entries }

rom_link__CLib:
        ${XTENT} syms.Entries kernel.s.k_entries kernel.s.k_entries2 clib.s.cl_entries clib.s.cl_entry2
        print rlib.swi { >> syms.Entries }

rom_link__link:
        ${LD} ${LDFLAGS} -o linked.${TARGET} aof.${TARGET} \
              -symdefs syms.C_Entries \
              -symdefs syms.A_Entries \
              -symdefs syms.Entries \
              -symbols syms.${TARGET} \
              -bin -base ${ADDRESS} \
              -map > map.${TARGET}
        |
        ${CP} linked.${TARGET} ${LINKDIR}.${TARGET} ${CPFLAGS}
        |
        ${CP} syms.Entries ${ABSSYM} ${CPFLAGS}
        ${CP} syms.C_Entries ${C_ABSSYM} ${CPFLAGS}
        ${CP} syms.A_Entries ${A_ABSSYM} ${CPFLAGS}

@


1.1
log
@  BBE support added.
Detail:
  The BBE export rules for this component are fairly complex.  The rom_link
    bbe rule is overridden in its entirety by clib.rom_link_v as the symbol
    definitions need to be generated and exported during the rom_link phase.
Admin:
  Tested in BBE build; does not affect other builds.

Version 5.26. Tagged as 'RISC_OSLib-5_26'
@
text
@d14 8
a21 2
rom_link_Entries:
        ${XTENT} syms.C_Entries kernel.s.k_entries clib.s.cl_entries
d26 2
a27 2
rom_link_RISC_OSLib:
        ${XTENT} syms.Entries kernel.s.k_entries clib.s.cl_entries rlib.s.rl_entries
d30 2
a31 2
rom_link_CLib:
        ${XTENT} syms.Entries kernel.s.k_entries clib.s.cl_entries
d34 1
a34 1
rom_link: rom_link_${TARGET} rom_link_Entries
a47 2
        |
        @@echo ${COMPONENT}: rom_link complete
@

