head	4.10;
access;
symbols
	RISC_OSLib-5_97:4.10
	RISC_OSLib-5_96:4.10
	RISC_OSLib-5_95:4.10
	RISC_OSLib-5_94:4.10
	RISC_OSLib-5_93:4.10
	RISC_OSLib-5_92:4.10
	RISC_OSLib-5_91:4.10
	RISC_OSLib-5_90:4.10
	RISC_OSLib-5_89:4.10
	RISC_OSLib-5_88:4.10
	RISC_OSLib-5_87:4.10
	RISC_OSLib-5_86-1:4.10
	RISC_OSLib-5_86:4.9
	RISC_OSLib-5_85:4.9
	RISC_OSLib-5_84:4.9
	RISC_OSLib-5_83-2:4.8
	RISC_OSLib-5_83-1:4.8
	RISC_OSLib-5_83:4.8
	RISC_OSLib-5_82:4.8
	RISC_OSLib-5_81:4.8
	RISC_OSLib-5_75-2:4.6
	RISC_OSLib-5_80:4.8
	RISC_OSLib-5_79:4.8
	RISC_OSLib-5_78:4.8
	RISC_OSLib-5_75-1:4.6
	RISC_OSLib-5_77:4.8
	RISC_OSLib-5_76:4.6
	RISC_OSLib-5_75:4.6
	RISC_OSLib-5_74:4.5
	RISC_OSLib-5_73:4.5
	RISC_OSLib-5_72:4.5
	RISC_OSLib-5_71:4.5
	RISC_OSLib-5_70:4.4
	RISC_OSLib-5_69:4.4
	RISC_OSLib-5_68:4.4
	RISC_OSLib-5_67:4.4
	RISC_OSLib-5_66:4.3
	RISC_OSLib-5_65:4.3
	RISC_OSLib-5_64:4.3
	RISC_OSLib-5_63:4.2
	RISC_OSLib-5_62:4.2
	RISC_OSLib-5_61:4.2
	RISC_OSLib-5_60:4.2
	RISC_OSLib-5_59:4.2
	RISC_OSLib-5_58:4.2
	RISC_OSLib-5_57:4.2
	RISC_OSLib-5_56:4.2
	RISC_OSLib-5_55:4.2
	RISC_OSLib-5_54:4.2
	RISC_OSLib-5_53:4.2
	RISC_OSLib-5_52:4.2
	RISC_OSLib-5_51:4.2
	RO_5_07:4.2
	RISC_OSLib-5_50:4.2
	RISC_OSLib-5_49:4.2
	RISC_OSLib-5_46-4_64_2_1:4.2
	NoInlineAsm:4.2.0.2
	RISC_OSLib-5_48:4.2
	RISC_OSLib-5_47:4.2
	RISC_OSLib-5_46:4.2
	RISC_OSLib-5_45:4.2
	RISC_OSLib-5_44:4.2
	RISC_OSLib-5_43:4.1
	RISC_OSLib-5_42:4.1
	RISC_OSLib-5_41:4.1
	RISC_OSLib-5_40:4.1
	RISC_OSLib-5_39:4.1
	RISC_OSLib-5_38:4.1
	RISC_OSLib-5_37:4.1
	RISC_OSLib-5_36:4.1
	RISC_OSLib-5_35:4.1
	RISC_OSLib-5_34:4.1
	RISC_OSLib-5_33-4_50_2_1:4.1
	sbrodie_dev:4.1.0.2
	sbrodie_dev_bp:4.1
	RISC_OSLib-5_33:4.1
	RISC_OSLib-5_32:4.1
	RISC_OSLib-5_31:4.1
	RISC_OSLib-5_30:4.1
	RISC_OSLib-5_29:4.1
	RISC_OSLib-5_28:4.1
	RISC_OSLib-5_27:4.1
	RISC_OSLib-5_26:4.1
	RISC_OSLib-5_25:4.1
	RISC_OSLib-5_24:4.1
	RISC_OSLib-5_23:4.1
	RISC_OSLib-5_22:4.1
	RISC_OSLib-5_21:4.1
	RISC_OSLib-5_20:4.1
	RISC_OSLib-5_19:4.1
	RISC_OSLib-5_18:4.1
	RISC_OSLib-5_17:4.1
	RISC_OSLib-5_16:4.1
	RISC_OSLib-5_15:4.1
	dellis_autobuild_BaseSW:4.1
	RISC_OSLib-5_14:4.1
	RISC_OSLib-5_13:4.1
	RISC_OSLib-5_12:4.1
	RISC_OSLib-5_11:4.1
	RISC_OSLib-5_10:4.1
	RISC_OSLib-5_09:4.1
	RISC_OSLib-5_08:4.1
	RISC_OSLib-5_07:4.1
	RISC_OSLib-5_06:4.1
	RISC_OSLib-5_05:4.1
	RISC_OSLib-5_04:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	RISC_OSLib-5_03:4.1;
locks; strict;
comment	@# @;


4.10
date	2015.11.08.11.04.09;	author rool;	state Exp;
branches;
next	4.9;
commitid	kfJxxqUF6wh8mhIy;

4.9
date	2015.04.03.19.21.02;	author rsprowson;	state Exp;
branches;
next	4.8;
commitid	U0s6ekpjDdEE9bgy;

4.8
date	2013.10.06.18.24.11;	author jlee;	state Exp;
branches;
next	4.7;
commitid	rVovmDCDuEcikg8x;

4.7
date	2013.04.06.07.08.25;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	YORuNumPMe00tGKw;

4.6
date	2013.01.15.21.21.18;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	MsWwzb2yEPfbNlAw;

4.5
date	2012.08.15.22.03.10;	author jlee;	state Exp;
branches;
next	4.4;
commitid	dksbCCJBeaesWGgw;

4.4
date	2012.02.04.21.29.32;	author jlee;	state Exp;
branches;
next	4.3;
commitid	jI3TOSAqOuXxXSRv;

4.3
date	2011.10.28.14.23.07;	author bavison;	state Exp;
branches;
next	4.2;
commitid	hIG6j26y6NoxM7Fv;

4.2
date	2002.11.15.15.00.25;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	2000.03.07.14.20.01;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.10
log
@Extra SWIOptions
Detail:
  Export Hdr:ATA if present.
Admin:
  Tagged as RISC_OSLib-5_86-1 since existing binaries unchanged.
@
text
@| Copyright 2000 Pace Micro Technology plc
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
Remove s.swioptions
Echo SWIOptions: Searching Hdr: for assembler headers ...
Echo <32> ; Automatically generated file <Sys$Date> { > s.swioptions }

IfThere Hdr:ADFS         Then Echo <32> GET Hdr:ADFS         { >> s.swioptions }
IfThere Hdr:ATAPI        Then Echo <32> GET Hdr:ATAPI        { >> s.swioptions }
IfThere Hdr:ATA          Then Echo <32> GET Hdr:ATA          { >> s.swioptions }
IfThere Hdr:BlendTable   Then Echo <32> GET Hdr:BlendTable   { >> s.swioptions }
IfThere Hdr:Buffer       Then Echo <32> GET Hdr:Buffer       { >> s.swioptions }
IfThere Hdr:CDROM        Then Echo <32> GET Hdr:CDROM        { >> s.swioptions }
IfThere Hdr:CDFS         Then Echo <32> GET Hdr:CDFS         { >> s.swioptions }
IfThere Hdr:ColourPick   Then Echo <32> GET Hdr:ColourPick   { >> s.swioptions }
IfThere Hdr:ColourTran   Then Echo <32> GET Hdr:ColourTran   { >> s.swioptions }
IfThere Hdr:DDT          Then Echo <32> GET Hdr:DDT          { >> s.swioptions }
IfThere Hdr:Debugger     Then Echo <32> GET Hdr:Debugger     { >> s.swioptions }
IfThere Hdr:DeviceFS     Then Echo <32> GET Hdr:DeviceFS     { >> s.swioptions }
IfThere Hdr:DMA          Then Echo <32> GET Hdr:DMA          { >> s.swioptions }
IfThere Hdr:DOSFS        Then Echo <32> GET Hdr:DOSFS        { >> s.swioptions }
IfThere Hdr:DragASprit   Then Echo <32> GET Hdr:DragASprit   { >> s.swioptions }
IfThere Hdr:DragAnObj    Then Echo <32> GET Hdr:DragAnObj    { >> s.swioptions }
IfThere Hdr:Draw         Then Echo <32> GET Hdr:Draw         { >> s.swioptions }
IfThere Hdr:Econet       Then Echo <32> GET Hdr:Econet       { >> s.swioptions }
IfThere Hdr:FileCore     Then Echo <32> GET Hdr:FileCore     { >> s.swioptions }
IfThere Hdr:FilerAct     Then Echo <32> GET Hdr:FilerAct     { >> s.swioptions }
IfThere Hdr:Filter       Then Echo <32> GET Hdr:Filter       { >> s.swioptions }
IfThere Hdr:Font         Then Echo <32> GET Hdr:Font         { >> s.swioptions }
IfThere Hdr:FPEmulator   Then Echo <32> GET Hdr:FPEmulator   { >> s.swioptions }
IfThere Hdr:Free         Then Echo <32> GET Hdr:Free         { >> s.swioptions }
IfThere Hdr:Freeway      Then Echo <32> GET Hdr:Freeway      { >> s.swioptions }
IfThere Hdr:FSLock       Then Echo <32> GET Hdr:FSLock       { >> s.swioptions }
IfThere Hdr:Hourglass    Then Echo <32> GET Hdr:Hourglass    { >> s.swioptions }
IfThere Hdr:HostFS       Then Echo <32> GET Hdr:HostFS       { >> s.swioptions }
IfThere Hdr:IIC          Then Echo <32> GET Hdr:IIC          { >> s.swioptions }
IfThere Hdr:ITable       Then Echo <32> GET Hdr:ITable       { >> s.swioptions }
IfThere Hdr:Joystick     Then Echo <32> GET Hdr:Joystick     { >> s.swioptions }
IfThere Hdr:SprExtend    Then Echo <32> GET Hdr:SprExtend    { >> s.swioptions }
IfThere Hdr:MakePSFont   Then Echo <32> GET Hdr:MakePSFont   { >> s.swioptions }
IfThere Hdr:MsgTrans     Then Echo <32> GET Hdr:MsgTrans     { >> s.swioptions }
IfThere Hdr:RISCOS       Then Echo <32> GET Hdr:RISCOS       { >> s.swioptions }
IfThere Hdr:Parallel     Then Echo <32> GET Hdr:Parallel     { >> s.swioptions }
IfThere Hdr:PCI          Then Echo <32> GET Hdr:PCI          { >> s.swioptions }
IfThere Hdr:PDriver      Then Echo <32> GET Hdr:PDriver      { >> s.swioptions }
IfThere Hdr:PDumper      Then Echo <32> GET Hdr:PDumper      { >> s.swioptions }
IfThere Hdr:Podule       Then Echo <32> GET Hdr:Podule       { >> s.swioptions }
IfThere Hdr:Portable     Then Echo <32> GET Hdr:Portable     { >> s.swioptions }
IfThere Hdr:RAMFS        Then Echo <32> GET Hdr:RAMFS        { >> s.swioptions }
IfThere Hdr:RemotePrin   Then Echo <32> GET Hdr:RemotePrin   { >> s.swioptions }
IfThere Hdr:ResourceFS   Then Echo <32> GET Hdr:ResourceFS   { >> s.swioptions }
IfThere Hdr:RTC          Then Echo <32> GET Hdr:RTC          { >> s.swioptions }
IfThere Hdr:ScrBlank     Then Echo <32> GET Hdr:ScrBlank     { >> s.swioptions }
IfThere Hdr:ScrModes     Then Echo <32> GET Hdr:ScrModes     { >> s.swioptions }
IfThere Hdr:SCSI         Then Echo <32> GET Hdr:SCSI         { >> s.swioptions }
IfThere Hdr:SCSIFS       Then Echo <32> GET Hdr:SCSIFS       { >> s.swioptions }
IfThere Hdr:SDFS         Then Echo <32> GET Hdr:SDFS         { >> s.swioptions }
IfThere Hdr:SDIO         Then Echo <32> GET Hdr:SDIO         { >> s.swioptions }
IfThere Hdr:SharedCLib   Then Echo <32> GET Hdr:SharedCLib   { >> s.swioptions }
IfThere Hdr:Shell        Then Echo <32> GET Hdr:Shell        { >> s.swioptions }
IfThere Hdr:Sound        Then Echo <32> GET Hdr:Sound        { >> s.swioptions }
IfThere Hdr:Squash       Then Echo <32> GET Hdr:Squash       { >> s.swioptions }
IfThere Hdr:Super        Then Echo <32> GET Hdr:Super        { >> s.swioptions }
IfThere Hdr:Switcher     Then Echo <32> GET Hdr:Switcher     { >> s.swioptions }
IfThere Hdr:TaskWindow   Then Echo <32> GET Hdr:TaskWindow   { >> s.swioptions }
IfThere Hdr:Territory    Then Echo <32> GET Hdr:Territory    { >> s.swioptions }
IfThere Hdr:VCHIQ        Then Echo <32> GET Hdr:VCHIQ        { >> s.swioptions }
IfThere Hdr:Wimp         Then Echo <32> GET Hdr:Wimp         { >> s.swioptions }
IfThere Hdr:ZLib         Then Echo <32> GET Hdr:ZLib         { >> s.swioptions }

Echo <32> END { >> s.swioptions }
Echo SWIOptions: search complete

SetType s.swioptions Text
@


4.9
log
@Extend rlib xferrecv API
Add xferrecv_last_ref to get hold of the Wimp message id of the request for a scrap file data save, when the RAM transfer gets no reply. This is useful to allow the data save to be distinguished from a file being dragged to an application, without having to resort to string compares against <wimp$scrap>.
SWIOptions:
 Also add RTC to SWI exports, and remove redundant ones.
armsys.c:
 Treat cmd_string as a pointer.
xferrecv.c/.h/rl_entries:
 New function xferrecv_last_ref.

Version 5.84. Tagged as 'RISC_OSLib-5_84'
@
text
@d21 1
@


4.8
log
@Add BlendTable and InverseTable SWIs to swis.h
Detail:
  SWIOptions,feb - Add BlendTable and InverseTable SWIs to the generated swis.h
Admin:
  Tested in OMAP3 ROM build


Version 5.77. Retagged as 'RISC_OSLib-5_77'
@
text
@a20 1
IfThere Hdr:BasicTrans   Then Echo <32> GET Hdr:BasicTrans   { >> s.swioptions }
a22 1
IfThere Hdr:ARM3Cache    Then Echo <32> GET Hdr:ARM3Cache    { >> s.swioptions }
d62 1
@


4.7
log
@Add Freeway and RemotePrinterSupport to SWIOptions
No code change, retagged as RISC_OSLib-5_77.
@
text
@d22 1
d49 1
@


4.6
log
@Add JPEG_ to swis.h
This is in the 'SprExtend' header, which messes up the alphabetical ordering a bit.

Version 5.75. Tagged as 'RISC_OSLib-5_75'
@
text
@d43 1
d60 1
@


4.5
log
@Add VCHIQ to SWIOptions
Detail:
  SWIOptions,feb - Added VCHIQ to SWI header list
  Makefile - Add SWIOptions as a dependency to s.swioptions, so exported swis.h will rebuild correctly if SWIOptions is changed
Admin:
  Tested briefly


Version 5.71. Tagged as 'RISC_OSLib-5_71'
@
text
@d48 1
@


4.4
log
@Add ZLib module to SWIOptions
Detail:
  SWIOptions,feb - Now includes ZLib module SWIs
Admin:
  SWI export tested, seems OK


Version 5.66. Not tagged
@
text
@d73 1
@


4.3
log
@  File handling improvements
Detail:
  * Added 64-bit file pointer API support, following the LFS spec v1.5
    (see Docs directory). Internally, now uses 64-bit file pointers
    exclusively. For now, the backend still limits you to 4GB-1 files, but
    clients of the C library won't need recompiling again to support larger
    files than this once they use the new API.
  * Fixed a large number of warnings produced in compilation, assembly and
    linking, many of them new and resulting from the improved checks in the
    latest toolchain.
  * Increased the maximum stream buffer size from 16MB to 1GB.
  * Added Hdr:SDFS and Hdr:SDIO to the list of headers used to build swis.h
    if they are present.
Admin:
  Verified that the new 64-bit file pointer buffering code works using a
  ROM build (since the toolchain makes extensive use of reading, writing
  and seeking internally).

Version 5.64. Tagged as 'RISC_OSLib-5_64'
@
text
@d74 1
@


4.2
log
@ROM build fixed for 64-bit stuff.
PCI added to swis.h
alloc.c updated to handle bigger slots (new code merged from ARM libraries)
Various 32-bit fixes for backtracing, and general trap handling.
Polite "Application is not 32-bit compatible" message.
Headers <stdint.h> and <inttypes.h> fixed to work in non-C99 mode.
txt changed to do new-style Delete behaviour

Version 5.44. Tagged as 'RISC_OSLib-5_44'
@
text
@d63 2
@


4.1
log
@  Automatic generation of swis.h now more automatic.
Detail:
  New script will search the export directory for headers that should
    be exported SWI symbols for it and only cause them to be included
    if it finds the header file.  This means that unless a component
    in your build actually needs the SWI symbols from another component,
    you no longer require that component to be in your modules file
    purely to enable successful generation of swis.h
Admin:
  Test build performed.

Version 5.03. Tagged as 'RISC_OSLib-5_03'
@
text
@d52 1
@

