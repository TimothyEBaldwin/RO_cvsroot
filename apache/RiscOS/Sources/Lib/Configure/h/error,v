head	1.3;
access;
symbols
	Configure-0_11:1.3
	Configure-0_10:1.3
	Configure-0_09:1.3
	Configure-0_08:1.3
	Configure-0_07:1.3
	Configure-0_06:1.2
	Configure-0_01:1.2
	Ursula_merge:1.1.2.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.2.1
	Ursula_RiscPC:1.1.2.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.2.1
	UrsulaBuild_FinalSoftload:1.1.2.1
	rthornb_UrsulaBuild-12Aug1998:1.1.2.1
	aglover_UrsulaBuild-05Aug1998:1.1.2.1
	rthornb_UrsulaBuild-29Jul1998:1.1.2.1
	rthornb_UrsulaBuild-22Jul1998:1.1.2.1
	rthornb_UrsulaBuild-15Jul1998:1.1.2.1
	rthornb_UrsulaBuild-07Jul1998:1.1.2.1
	bavison_ConfigureLib-0_05:1.1.2.1
	bavison_ConfigureLib-0_04:1.1.2.1
	rthornb_UrsulaBuild-17Jun1998:1.1.2.1
	bavison_ConfigureLib-0_03:1.1.2.1
	rthornb_UrsulaBuild-03Jun1998:1.1.2.1
	rthornb_UrsulaBuild-27May1998:1.1.2.1
	rthornb_UrsulaBuild-21May1998:1.1.2.1
	rthornb_UrsulaBuild_01May1998:1.1.2.1
	initial:1.1.2.1
	Ursula:1.1.2;
locks; strict;
comment	@# @;


1.3
date	2007.05.24.15.59.26;	author srevill;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.24.02.05.41;	author srevill;	state Exp;
branches;
next	1.1;

1.1
date	98.04.06.11.18.09;	author bavison;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	98.04.06.11.40.51;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  Corrected license wording.
Detail:
  cvsmunge got confused by the fact that this component was only on the
  Ursula branch and not on TRUNK. That meant we ended up with license
  wording at the top _and_ bottom of the files.
Admin:
  As I only removed comments, there is no actual code change.

Version 0.07. Tagged as 'Configure-0_07'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	error.h ***********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Modular Configure
Purpose:	Application error handling code, shared by multiple plug-ins

History:
Date		Who	Change
----------------------------------------------------------------------------
08/12/1997	BJGA	Renamed functions to error_foo convention
			Added these headers

\**************************************************************************/

/* The famous Kev C error handling system, hacked by Ben.
 *
 * Errors and traps are reported in the standard RISC OS fashion.
 * In particular data aborts are reported as "Internal error: Data abort at
 * &xxxxxxxx" instead of "Illegal address (eg wildly outside array bounds)".
 * This is achieved by removing the Data Abort etc handlers so they go
 * through the default handler (helpfully dumping into the register area)
 * which then raises the usual error message. The signal handlers are then
 * called as normal, but _kernel_last_oserror() now returns something
 * useful.
 *
 * Error boxes have two buttons, "Continue" and "Quit", unless the toolbox
 * hasn't initialised, in which case the only option is "Quit". "Continue"
 * will jump back into the polling loop.
 *
 * Note that RISC OS 3.50-3.60 Wimps screw up in the case of serious errors
 * (eg traps); the "May have gone wrong" preliminary box will have the wrong
 * sprite, and the "Describe"d secondary box will be missing its Quit button.
 */

/*
 * Ben's version does *not* use OSLib, is held in these files, separate from
 * the rest of the source, and can cope with the message file not having been
 * opened yet. It should also be more tolerant of errors during the error
 * report process.
 *
 * It requires the following of the main program:
 * 
 * * Global definitions (&messages should be passed to Toolbox_Initialise):
 *   #include "Error.h"
 *   MessagesFD messages;
 * 
 * * First statement in main():
 *   error_initialise ();
 * 
 * * Last statement before going into polling loop (NB this is a macro):
 *   error_recover_point();
 *
 * Must only be included by the main program, because of the jmp_buf.
 * Nasty, isn't it?
 */

/* Clib */
#include <setjmp.h>

jmp_buf restart_buf;
int init_state = 0;

extern void error_sighandler (int sig);
extern void error_initialise (void);

#define error_recover_point() \
  setjmp (restart_buf); \
  init_state = 1
@


1.2
log
@Merged to trunk.

Version 0.01. Tagged as 'Configure-0_01'
@
text
@@


1.1
log
@file error was initially added on branch Ursula.
@
text
@d1 82
@


1.1.2.1
log
@Initial checkin of ConfigureLib to CVS.
@
text
@a0 82
/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/******	error.h ***********************************************************\

Project:	Ursula (RISC OS for Risc PC II)
Component:	Modular Configure
Purpose:	Application error handling code, shared by multiple plug-ins

History:
Date		Who	Change
----------------------------------------------------------------------------
08/12/1997	BJGA	Renamed functions to error_foo convention
			Added these headers

\**************************************************************************/

/* The famous Kev C error handling system, hacked by Ben.
 *
 * Errors and traps are reported in the standard RISC OS fashion.
 * In particular data aborts are reported as "Internal error: Data abort at
 * &xxxxxxxx" instead of "Illegal address (eg wildly outside array bounds)".
 * This is achieved by removing the Data Abort etc handlers so they go
 * through the default handler (helpfully dumping into the register area)
 * which then raises the usual error message. The signal handlers are then
 * called as normal, but _kernel_last_oserror() now returns something
 * useful.
 *
 * Error boxes have two buttons, "Continue" and "Quit", unless the toolbox
 * hasn't initialised, in which case the only option is "Quit". "Continue"
 * will jump back into the polling loop.
 *
 * Note that RISC OS 3.50-3.60 Wimps screw up in the case of serious errors
 * (eg traps); the "May have gone wrong" preliminary box will have the wrong
 * sprite, and the "Describe"d secondary box will be missing its Quit button.
 */

/*
 * Ben's version does *not* use OSLib, is held in these files, separate from
 * the rest of the source, and can cope with the message file not having been
 * opened yet. It should also be more tolerant of errors during the error
 * report process.
 *
 * It requires the following of the main program:
 * 
 * * Global definitions (&messages should be passed to Toolbox_Initialise):
 *   #include "Error.h"
 *   MessagesFD messages;
 * 
 * * First statement in main():
 *   error_initialise ();
 * 
 * * Last statement before going into polling loop (NB this is a macro):
 *   error_recover_point();
 *
 * Must only be included by the main program, because of the jmp_buf.
 * Nasty, isn't it?
 */

/* Clib */
#include <setjmp.h>

jmp_buf restart_buf;
int init_state = 0;

extern void error_sighandler (int sig);
extern void error_initialise (void);

#define error_recover_point() \
  setjmp (restart_buf); \
  init_state = 1
@
