head	1.3;
access;
symbols
	Common-0_09:1.3
	dellis_autobuild_BaseSW:1.3
	dcotton_autobuild_BaseSW:1.3
	Common-0_08:1.3
	Common-0_07:1.3
	Common-0_06:1.3
	Common-0_05:1.3
	Common-0_04:1.3
	Common-0_03:1.3
	Common-0_02:1.3
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	98.08.27.12.53.57;	author rwarren;	state Exp;
branches;
next	1.2;

1.2
date	98.08.27.12.52.01;	author rwarren;	state dead;
branches;
next	1.1;

1.1
date	98.08.26.16.17.09;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.08.26.16.17.09;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Put back Makefile, bool.h, list.h and types.h without execute attribute
so that RISC OS NFS doesn't view them as UNIX EX type.
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#if !defined(Email_Common_bool_h)              /* Sentry, use file only if it's not already included. */
#define Email_Common_bool_h
/*	Project Post (769)
	Acorn Computers Ltd
	Copyright © 1998. All Rights Reserved.

	FILE:		bool.h
	AUTHOR:		Richard D. Warren
	VERSION:	0.01 for RISC OS

	OVERVIEW
	========
	Header file for bool definition for C, CFRONT and C++ compilers

	HISTORY
	=======
	24/06/98	0.01	RDW	initial version
*/

#ifndef __bool_true_false_are_defined

#ifdef __cplusplus
#ifdef __CC_NORCROFT
typedef enum
{
  false,
  true
} bool;

#define false(expr) ((expr) == false)
#define true(expr) ((expr) != false)

#define __bool_true_false_are_defined
#endif  /* endif check for norcroft compiler */
#else
typedef enum
{
  false,
  true
} bool;

#define false(expr) ((expr) == false)
#define true(expr) ((expr) != false)

#define __bool_true_false_are_defined
#endif  /* check for C++ or C compiler */

#endif  /* end of check for true false already defined */

#endif  /* end of sentry #ifdef */
@


1.2
log
@Removed Makefile, bool.h, list.h and types.h to get rid of execute file
permissions.
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@    Initial import to CVS for backup purposes.

Details:
    Only purpose at the moment is to export header files, although code
    will be added later.

Admin:
    Headers export to a clean source tree.
@
text
@@
