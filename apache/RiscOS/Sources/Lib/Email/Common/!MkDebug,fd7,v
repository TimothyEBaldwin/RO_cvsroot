head	1.1;
access;
symbols
	Common-0_09:1.1
	dellis_autobuild_BaseSW:1.1
	dcotton_autobuild_BaseSW:1.1
	Common-0_08:1.1
	Common-0_07:1.1;
locks; strict;
comment	@# @;


1.1
date	98.11.04.11.31.22;	author rwarren;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Email/Common library now has object code for linking with as well has the
  current type definitions provided in headers.

  Common library now defines the base class - Version - which provides a
  generic class interface to the version information provided by srccommit.
  Other components then derive and implement a singleton class from this
  Version class,
    ie. for Common library: CommonVersion class
  and setup this singleton object with the data from the srccommit
  VersionNum file.

  These singleton objects provide a common interface to all components to
  obtain their version information at runtime.

  See the Detail section below, the VersionDef.h header file and the
  Version.h and CommonVersion.c++ files as an implementation example
  - CommonVersion.c++ implements this library's Version singleton object.
Detail:
  Version singleton objects have been added to NetLink, Mailbox and
  EmailLib librarys and will be added to the Engine and UI components of
  !NCMail.  This will allow the NCMail app. at runtime to easily display
  the version information of all the components within it.

  Each Version singleton object follows the naming convention:
    [COMPONENTNAME]Version
  and provide the 'Instance' static method to obtain the instance of the
  singleton object.  The base class Version methods can then be used on the
  instance to obtain version information.

  eg. In your app, doing something like:

    void DoVersion(Version* instance)
    {
      printf("Name         : %s\n", instance->Name());
      printf("VersionNumber: %d\n", instance->VersionNumber());
      printf("MajorVersion : %s\n", instance->MajorVersion());
      printf("MinorVersion : %s\n", instance->MinorVersion());
      printf("Date         : %s\n", instance->Date());
    }
    .
    .
    ...
    DoVersion(NetLinkVersion::Instance());	// Display NetLink  version
    DoVersion(MailboxVersion::Instance());	// Display Mailbox  version
    DoVersion(EmailLibVersion::Instance());	// Display EmailLib version
    DoVersion(CommonVersion::Instance());	// Display Common   version
  Currently, this is all C++.  However, a C veneer API could be added at
  a later date if required.
  File Changes
  ------------
  h.Version
    Created.  Defines the CommonVersion class - the Version singleton object
    for this library.
  h.VersionDef
    Created.  Defines the base Version class.
  c++.CommonVersion
    Created.  Implements the CommonVersion singleton class.  Uses the
    srccommit VersionNum file for version details.
  c++.VersionDef
    Created.  Implements the base Version class.
  Makefile
    Changed to Ben's cunning 2 level makefile for multiple builds.
  MainMake
    Created to implement Ben's cunning 2 level makefile system for multiple
    builds.
  !MkClean
    Created.
  !MkDebug
    Created.  Builds Commond - DDT build.
  !MkExport
    Modified for new makefiles
  !MkHP
    Created.  Builds CommonHP - HierProf build.  Has function names embedded
    for use by HierProf.
  !MkMC
    Created.  Builds CommonMC - MemCheck build.
  !MkMcCabe
    Created.  Outputs preprocessed files into i directory for input into
    McCabe tools.
Admin:
  Version and CommonVersion classes tested in testharness.
  New Makefile system tested by building all varients and cleaning all.

Version 0.07. Tagged as 'Common-0_07'
@
text
@| Copyright 1998 Acorn Computers Ltd
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
Dir <Obey$Dir>
wimpslot 4096k
amu_machine THROWBACK=-throwback debug
@
