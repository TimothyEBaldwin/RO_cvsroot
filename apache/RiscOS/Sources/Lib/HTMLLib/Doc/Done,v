head	1.2;
access;
symbols
	HTMLLib-0_04:1.2
	HTMLLib-0_03:1.2
	HTMLLib-0_02:1.2
	HTMLLib-0_01:1.2
	ahodgkin_207release:1.2
	ahodgkin_206release:1.2
	ahodgkin_205release:1.2
	ahodgkin_204release:1.2
	ahodgkin_133beta:1.1.2.6
	kbracey_126:1.1.2.6
	kbracey_AW97patch:1.1.2.6
	ahodgkin_AW97:1.1.2.6
	Web:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	98.02.17.10.41.31;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.06.23.16.45.02;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.06.23.16.45.03;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.06.24.11.19.20;	author kbracey;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	97.06.26.11.02.38;	author kbracey;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	97.06.30.09.10.28;	author kbracey;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	97.07.02.08.39.32;	author kbracey;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	97.07.03.13.37.20;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Web branch merged
@
text
@<BODY> and <HEAD> elements issue - autodetection of when you're in HEAD
and when you're in BODY is no longer working at all. This is frequently
catastrophic to a web page. We need to in the short term get this working,
and in the not-much-longer term review this entire philosophy. I'm
starting to think that the entire HEAD / BODY distinction is not needed,
and perhaps we should just have any tag that can appear in HEAD or BODY
using separate identification bits in the HStream structure so the actual
parsing context becomes irrelevant.

Remove <SCRIPT> stuff

Vertical white space - needs sorting; find out what tokens can be
coagulated, which are not necessary, and get rid of the type 0x100 tags
which should never be generated at all.

The table system uses sensible defaults for various table attributes, but
these only work if the TABLE tag has at least one attribute already.
E.g. <TABLE WIDTH=50> will also set up, say, BORDER=1. So these defaults
should always happen, even if there are no attributes on TABLE; we also
need to review what those defaults are (e.g. should be BORDER=0, not
BORDER=1).

Entities split across fetched chunks often fail to work, and reverse entity
scanning is required so &quotThis (for example) can be handled (priority
on this has been raised recently).

Missing out a TR appears fatal to HTMLLib (it generates garbage
structures) even when it is implied, e.g.

<TABLE>
  <TD></TD>
  <!-- and maybe several of... -->
  <TR><TD></TD></TR> <!-- etc. -->
</TABLE>

FRAME tags are not passed to the browser if they have no content, i.e.
you just have <FRAME>. This is crucial to some page layouts though,
so such tags need to be sent with sensible defaults (e.g. the
URL to fetch in the 'src' field of the HStream would be NULL or point
to a null string).

Horizontal spacing:

There are various spacing rules for when white space should and should
not be ignored in HTML, dependent upon whether the spaces come before
or after starting or ending tags. However, I believe there should be a
special case for comments where white space is ignored. The effects of
not doing so can be seen for example at

http://www.fibblesnork.com/lego/guide/wildwest

The left hand 'List by...' frame has an 'Aspects' section, where the
'Set name' item is indented by a preceeding space. The HTML source
for this section is:

  <TR>
    <TD ALIGN="CENTER" BGCOLOR="#996633">
      <FONT FACE="Arial,Helvetica,Geneva"><B>Aspects</B></FONT>
    </TD>
  </TR>
  <TR>
    <TD ALIGN="LEFT"> <!-- BGCOLOR="#003366" -->
      <FONT SIZE="-1">
      <A TARGET="series" HREF="data/setname.html">Set&nbsp;Name</A><BR>
      <A TARGET="series" HREF="data/setnumber.html">Set&nbsp;Number</A><BR>
      <A TARGET="series" HREF="data/setsize.html">Number&nbsp;of&nbsp;Pieces</A><BR>
      </FONT>
    </TD>
  </TR>

The space between the '<TD ALIGN="LEFT">' and '<!--' comment start is,
I think, the one that's getting through to the browser. I strongly
suggest chatting to Kevin about this one as he wrote the new code that
handles spacing rules more intelligently and should be able to point
you to the section that needs altering.

This seems a valid thing to do as comments 'don't exist' as far as the
parser is supposed to be concerned, so they should certainly not interfere
with the spacing rules code.

@


1.1
log
@file Done? was initially added on branch Web.
@
text
@d1 80
@


1.1.2.1
log
@Tables with missing <TR>s now handled
@
text
@a0 9
Missing out a TR appears fatal to HTMLLib (it generates garbage
structures) even when it is implied, e.g.

<TABLE>
  <TD></TD>
  <!-- and maybe several of... -->
  <TR><TD></TD></TR> <!-- etc. -->
</TABLE>

@


1.1.2.2
log
@Removed some compilation warnings. Fixed handling of vanilla <FRAME> tags
(ie ones with no attributes).
@
text
@a9 6
FRAME tags are not passed to the browser if they have no content, i.e.
you just have <FRAME>. This is crucial to some page layouts though,
so such tags need to be sent with sensible defaults (e.g. the
URL to fetch in the 'src' field of the HStream would be NULL or point
to a null string).

@


1.1.2.3
log
@Improved comment handling.
Started work on SUB, SUP, U and STRIKE support.
@
text
@a0 4
Entities split across fetched chunks often fail to work, and reverse entity
scanning is required so &quotThis (for example) can be handled (priority
on this has been raised recently).

a14 33

There are various spacing rules for when white space should and should
not be ignored in HTML, dependent upon whether the spaces come before
or after starting or ending tags. However, I believe there should be a
special case for comments where white space is ignored. The effects of
not doing so can be seen for example at

http://www.fibblesnork.com/lego/guide/wildwest

The left hand 'List by...' frame has an 'Aspects' section, where the
'Set name' item is indented by a preceeding space. The HTML source
for this section is:

  <TR>
    <TD ALIGN="CENTER" BGCOLOR="#996633">
      <FONT FACE="Arial,Helvetica,Geneva"><B>Aspects</B></FONT>
    </TD>
  </TR>
  <TR>
    <TD ALIGN="LEFT"> <!-- BGCOLOR="#003366" -->
      <FONT SIZE="-1">
      <A TARGET="series" HREF="data/setname.html">Set&nbsp;Name</A><BR>
      <A TARGET="series" HREF="data/setnumber.html">Set&nbsp;Number</A><BR>
      <A TARGET="series" HREF="data/setsize.html">Number&nbsp;of&nbsp;Pieces</A><BR>
      </FONT>
    </TD>
  </TR>

The space between the '<TD ALIGN="LEFT">' and '<!--' comment start is,
I think, the one that's getting through to the browser. I strongly
suggest chatting to Kevin about this one as he wrote the new code that
handles spacing rules more intelligently and should be able to point
you to the section that needs altering.
@


1.1.2.4
log
@Tweaked colour names Pink and DarkTurqoise.
Strips leading space from start of HTML.
@
text
@a19 2
Horizontal spacing:

a51 4

This seems a valid thing to do as comments 'don't exist' as far as the
parser is supposed to be concerned, so they should certainly not interfere
with the spacing rules code.
@


1.1.2.5
log
@Added previous pointers to table rows and cells.
Implemented skipping of <STYLE> and <SCRIPT>.
@
text
@a0 2
Remove <SCRIPT> stuff

@


1.1.2.6
log
@Improved <STYLE> and <SCRIPT> skipping
Stopped multiple <DT>s with no <DD>s being concatenated
Fixed a few null pointer dereferences
Corrected definition of st->send_list
@
text
@a0 9
<BODY> and <HEAD> elements issue - autodetection of when you're in HEAD
and when you're in BODY is no longer working at all. This is frequently
catastrophic to a web page. We need to in the short term get this working,
and in the not-much-longer term review this entire philosophy. I'm
starting to think that the entire HEAD / BODY distinction is not needed,
and perhaps we should just have any tag that can appear in HEAD or BODY
using separate identification bits in the HStream structure so the actual
parsing context becomes irrelevant.

a1 11

Vertical white space - needs sorting; find out what tokens can be
coagulated, which are not necessary, and get rid of the type 0x100 tags
which should never be generated at all.

The table system uses sensible defaults for various table attributes, but
these only work if the TABLE tag has at least one attribute already.
E.g. <TABLE WIDTH=50> will also set up, say, BORDER=1. So these defaults
should always happen, even if there are no attributes on TABLE; we also
need to review what those defaults are (e.g. should be BORDER=0, not
BORDER=1).
@
