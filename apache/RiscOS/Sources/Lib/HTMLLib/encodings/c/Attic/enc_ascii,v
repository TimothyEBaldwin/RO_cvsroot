head	1.1;
access;
symbols
	kbracey_126:1.1.2.1
	kbracey_AW97patch:1.1.2.1
	ahodgkin_AW97:1.1.2.1
	Web:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	97.09.18.14.11.34;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.09.18.14.11.35;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.11.28.15.32.12;	author kbracey;	state dead;
branches;
next	;


desc
@@


1.1
log
@file enc_ascii was initially added on branch Web.
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@


1.1.2.1
log
@Encoding support added (yippee). #define UNIFONT to get UTF-8 output,
otherwise Latin-1 output is provided. Lots of encoding files...
@
text
@a0 70
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdlib.h>

#include "encoding.h"

#include "enc_ascii.h"

/*
 * Routines for encoding US-ASCII
 * Number: 3
 * Names: US-ASCII
 *        ANSI_X3.4-1968
 *        iso-ir-6
 *        ISO_646.irv:1991
 *        ASCII
 *        ISO646-US
 *        us
 *        IBM367
 *        cp367
 *        csASCII
 */
static void ascii_reset(Encoding *e)
{
}

static unsigned int ascii_read(struct Encoding *e,
                               int (*ucs_out)(void *, UCS4),
                               const char *s,
                               unsigned int n,
                               void *handle)
{
    unsigned int count;

    for (count = n; count; count--)
    {
        char c = *s++;
        UCS4 u = c < 0x80 ? c : 0xFFFD;

        if (ucs_out)
            if (ucs_out(handle, u))
                break;
    }

    return n - count;
}

static void ascii_delete(Encoding *e)
{
}

Encoding enc_ascii =
{
    ascii_read,
    ascii_reset,
    0,
    ascii_delete
};
@


1.1.2.2
log
@Modified to use external Unicode resources and UnicodeLib.
@
text
@@
