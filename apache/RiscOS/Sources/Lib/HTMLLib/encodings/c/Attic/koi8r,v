head	1.1;
access;
symbols
	kbracey_126:1.1.2.2
	kbracey_AW97patch:1.1.2.2
	ahodgkin_AW97:1.1.2.2
	Web:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	97.09.18.14.12.03;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.09.18.14.12.03;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.09.30.14.13.54;	author kbracey;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	97.11.28.15.32.25;	author kbracey;	state dead;
branches;
next	;


desc
@@


1.1
log
@file koi8r was initially added on branch Web.
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@


1.1.2.1
log
@Encoding support added (yippee). #define UNIFONT to get UTF-8 output,
otherwise Latin-1 output is provided. Lots of encoding files...
@
text
@a0 72
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdlib.h>

#include "encoding.h"

#include "koi8r.h"

/*
 * Routines for KOI-8R (Cyrillic)
 * Number: 2084
 * Names: KOI8-R
 *        csKOI8R
 */

static UCS2 *koi8r_table;

static void koi8r_reset(Encoding *e)
{
    EightBit_Encoding *ee = (EightBit_Encoding *) e;

    if (!koi8r_table)
        koi8r_table = encoding_load_map_file("KOI8-R");

    ee->table = koi8r_table;
}

unsigned int eightbit_read(struct Encoding *e,
                           int (*ucs_out)(void *, UCS4),
                           const char *s,
                           unsigned int n,
                           void *handle)
{
    EightBit_Encoding *ee = (EightBit_Encoding *) e;
    unsigned int count;

    for (count = n; count; count--)
    {
        char c = *s++;
        UCS4 u = c < 0x80 ? c : ee->table[c - 0x80];

        if (ucs_out)
            if (ucs_out(handle, u))
                break;
    }

    return n - count;
}

void eightbit_delete(Encoding *e)
{
}

Encoding enc_koi8r =
{
    eightbit_read,
    koi8r_reset,
    sizeof(EightBit_Encoding) - sizeof(Encoding),
    eightbit_delete
};
@


1.1.2.2
log
@Turned off CUSTOMER_SPECIAL.
Changed encoding tables to use FFFF as a null value instead of FFFD.
Added OBJECT support (more testing required - PARAM not yet done).
Added AREA support (commented out - MAP not yet done). They come out
looking like <A></A> elements.
Souped up mapping to Latin-1 (added lossy tables for Latin Extended
Additional, CJK Punctuation and Fullwidth forms).
Added support for <H1 align=...>
Stripped some superfluous whitespace caused by linefeeds.
Fixed missing linebreak in "<DT>One<DT>Two" by turning the second DT into
a BR.
Removed now unnecessary free(malloc(16384)) bodge.
Put in CJK code even if UNIFONT not defined (hey - why not?).
Added code to take direct pointer to table rather than loading it if
it's in ResourceFS.
Added support for encoding "x-acorn-latin1".
Ensured correct handling of OPTIONs when UNIFONT not defined.
@
text
@a53 3
        if (u == NULL_UCS2)
            u = 0xFFFD;

@


1.1.2.3
log
@Modified to use external Unicode resources and UnicodeLib.
@
text
@@
