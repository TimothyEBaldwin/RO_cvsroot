head	1.1;
access;
symbols
	Web:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	97.08.27.08.29.20;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.08.27.08.29.21;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.09.18.14.12.56;	author kbracey;	state dead;
branches;
next	;


desc
@@


1.1
log
@file utf8 was initially added on branch Web.
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@


1.1.2.1
log
@Some Unicode support added (#ifdefed out). Table cells now have parent rows.
@
text
@a0 42
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "iso10646.h"

/*
 * UCS4_to_UTF8 converts a UCS-4 code to UTF-8, storing the result
 * in the array pointed to by out. This array must be large enough
 * to store the resulting UTF-8 element (6 bytes will always be
 * sufficient). The return value is a pointer to the byte after
 * the last one written.
 */
extern char *UCS4_to_UTF8(char *out, UCS4 code);

/*
 * UTF8_codelen gives the length of a UCS-4 code when converted to UTF-8
 * using the above function.
 */
extern int UTF8_codelen(UCS4 code);

/*
 * UTF8_seqlen gives the length of a UTF-8 sequence, given its first
 * byte.
 */
extern int UTF8_seqlen(char c);

/*
 * UTF8_to_UCS4 takes a pointer to a UTF-8 sequence and outputs
 * the corresponding UCS4 code, returning the number of bytes consumed.
 */
extern int UTF8_to_UCS4(const char *in, UCS4 *code_out);
@


1.1.2.2
log
@Encoding support added (yippee). #define UNIFONT to get UTF-8 output,
otherwise Latin-1 output is provided. Lots of encoding files...
@
text
@@
