head	1.3;
access;
symbols
	HTMLLib-0_04:1.3
	HTMLLib-0_03:1.3
	HTMLLib-0_02:1.3
	HTMLLib-0_01:1.3
	ahodgkin_207release:1.3
	ahodgkin_206release:1.3
	ahodgkin_205release:1.2
	ahodgkin_204release:1.2
	ahodgkin_133beta:1.1.2.10
	kbracey_126:1.1.2.9
	kbracey_AW97patch:1.1.2.9
	ahodgkin_AW97:1.1.2.8
	Web:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	98.07.01.08.40.40;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	98.02.17.10.42.28;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.07.24.16.21.02;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.07.24.16.21.02;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.07.24.16.56.28;	author kbracey;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	97.07.30.12.09.34;	author kbracey;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	97.08.01.09.00.05;	author kbracey;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	97.08.01.15.06.39;	author kbracey;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	97.09.30.14.14.05;	author kbracey;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	97.10.08.12.34.05;	author kbracey;	state Exp;
branches;
next	1.1.2.8;

1.1.2.8
date	97.10.13.10.01.28;	author kbracey;	state Exp;
branches;
next	1.1.2.9;

1.1.2.9
date	97.10.22.14.23.54;	author kbracey;	state Exp;
branches;
next	1.1.2.10;

1.1.2.10
date	97.11.14.15.43.20;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@The sequence <option value=""> followed by a comment would lead to some
characters from zero page being spat out as menu entries; the browser
then failed with "Illegal character in font string" when it tried to do
things with those entries. NULL values in [HStream]->text are now
correctly checked for and dealt with in __html_form_parse_select().
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
typedef struct elementinfo_body
{
    char *onload;
    char *onunload;
    char *background;
    unsigned int text;
    unsigned int bgcolour;
    unsigned int link;
    unsigned int vlink;
    unsigned int alink;
} elementinfo_body;

typedef struct elementinfo_meta
{
    char *http_equiv;
    char *name;
    char *content;
    char *scheme;
} elementinfo_meta;

typedef struct elementinfo_form
{
    char *action;
    formmethod method;
    char *enctype;
    char *accept_charset;
    char *onsubmit;
    char *onreset;
    char *target;
} elementinfo_form;

typedef struct elementinfo_input
{
    inputtype type;
    char *name;
    char *value;
    unsigned int checked:1;
    unsigned int disabled:1;
    unsigned int readonly:1;
    unsigned int size;
    unsigned int maxlength;
    char *src;
    char *alt;
    char *usemap;
    imgalign align;
    int tabindex;
    char *onfocus;
    char *onblur;
    char *onselect;
    char *onclick;
    char *onchange;
    char *accept;
} elementinfo_input;

typedef struct elementinfo_select
{
    char *name;
    unsigned int size;
    unsigned int multiple:1;
    unsigned int disabled:1;
    int tabindex;
    char *onfocus;
    char *onblur;
    char *onselect;
    char *onclick;
    char *onchange;
    int *options;
} elementinfo_select;

typedef struct elementinfo_option
{
    unsigned int selected:1;
    unsigned int disabled:1;
} elementinfo_option;

typedef struct elementinfo_object
{
    unsigned int declare:1;
    unsigned int shapes:1;
    int tabindex;
    char *type;
    char *usemap;
    int vspace;
    int hspace;
    imgalign align;
    char *archive;
    int border;
    char *classid;
    char *codebase;
    char *codetype;
    char *data;
    char *standby;
    HStream *hstream;
    HStream *mapstream;
    MapStream *maps;
    HStream *parent;
} elementinfo_object;

typedef struct elementinfo_param
{
    const char *name;
    const char *type;
    const char *value;
    paramtype valuetype;
}
elementinfo_param;

union elementinfo
{
    elementinfo_body   body;
    elementinfo_meta   meta;
    elementinfo_form   form;
    elementinfo_input  input;
    elementinfo_select select;
    elementinfo_option option;
    elementinfo_object object;
    elementinfo_param  param;
};
@


1.2
log
@Web branch merged
@
text
@d64 1
d79 1
@


1.1
log
@file elementinf was initially added on branch Web.
@
text
@d1 130
@


1.1.2.1
log
@Totally redesigned attribute parsing code.
Started new API for accessing attributes - only implemented for BODY.
Added <BODY alink onload onunload> support.
@
text
@a0 30
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
typedef struct elementinfo_body
{
    char *onload;
    char *onunload;
    char *background;
    unsigned int text;
    unsigned int bgcolour;
    unsigned int link;
    unsigned int vlink;
    unsigned int alink;
} elementinfo_body;

union elementinfo
{
    elementinfo_body body;
};
@


1.1.2.2
log
@Added META support
@
text
@a26 8
typedef struct elementinfo_meta
{
    char *http_equiv;
    char *name;
    char *content;
    char *scheme;
} elementinfo_meta;

a29 1
    elementinfo_meta meta;
@


1.1.2.3
log
@Redid handling of FORM tags to use an elementinfo structure.
@
text
@a34 11
typedef struct elementinfo_form
{
    char *action;
    formmethod method;
    char *enctype;
    char *accept_charset;
    char *onsubmit;
    char *onreset;
    char *target;
} elementinfo_form;

a38 1
    elementinfo_form form;
@


1.1.2.4
log
@Revised INPUT handling - made INPUT type=image work
@
text
@a45 36
typedef struct elementinfo_input
{
    inputtype type;
    char *name;
    char *value;
    unsigned int checked:1;
    unsigned int disabled:1;
    unsigned int readonly:1;
    unsigned int size;
    unsigned int maxlength;
    char *src;
    char *alt;
    char *usemap;
    imgalign align;
    int tabindex;
    char *onfocus;
    char *onblur;
    char *onselect;
    char *onchange;
    char *accept;
} elementinfo_input;

typedef struct elementinfo_select
{
    char *name;
    unsigned int size;
    unsigned int multiple:1;
    unsigned int disabled:1;
    int tabindex;
    char *onfocus;
    char *onblur;
    char *onselect;
    char *onchange;
    int *options;
} elementinfo_select;

d48 3
a50 5
    elementinfo_body   body;
    elementinfo_meta   meta;
    elementinfo_form   form;
    elementinfo_input  input;
    elementinfo_select select;
@


1.1.2.5
log
@Fixed &#160;, fixed option selection, changed GOT_MORE flag
@
text
@a81 6
typedef struct elementinfo_option
{
    unsigned int selected:1;
    unsigned int disabled:1;
} elementinfo_option;

a88 1
    elementinfo_option option;
@


1.1.2.6
log
@Turned off CUSTOMER_SPECIAL.
Changed encoding tables to use FFFF as a null value instead of FFFD.
Added OBJECT support (more testing required - PARAM not yet done).
Added AREA support (commented out - MAP not yet done). They come out
looking like <A></A> elements.
Souped up mapping to Latin-1 (added lossy tables for Latin Extended
Additional, CJK Punctuation and Fullwidth forms).
Added support for <H1 align=...>
Stripped some superfluous whitespace caused by linefeeds.
Fixed missing linebreak in "<DT>One<DT>Two" by turning the second DT into
a BR.
Removed now unnecessary free(malloc(16384)) bodge.
Put in CJK code even if UNIFONT not defined (hey - why not?).
Added code to take direct pointer to table rather than loading it if
it's in ResourceFS.
Added support for encoding "x-acorn-latin1".
Ensured correct handling of OPTIONs when UNIFONT not defined.
@
text
@a87 20
typedef struct elementinfo_object
{
    unsigned int declare:1;
    unsigned int shapes:1;
    int tabindex;
    char *type;
    char *usemap;
    int vspace;
    int hspace;
    imgalign align;
    char *archive;
    int border;
    char *classid;
    char *codebase;
    char *codetype;
    char *data;
    HStream *hstream;
    HStream *parent;
} elementinfo_object;

a95 1
    elementinfo_object object;
@


1.1.2.7
log
@Implemented ordered lists.
Implemented <Q> ... </Q>.
Caused a linebreak after </DD>.
Finished implementing attributes for <OBJECT>.
Stopped HTML after a </FRAMESET> leaking through.
Ensured that FRAME and FRAMESET tokens aren't passed up if not using frames.

Removed lots of unnecessary #include "utf8.h" lines from encoding files.
Ensured unsigned constants used in UTF-8 code.
Added UTF8_next and UTF8_prev functions.
@
text
@a103 1
    char *standby;
@


1.1.2.8
log
@PARAM and APPLET, take 1.
@
text
@a108 9
typedef struct elementinfo_param
{
    char *name;
    char *type;
    char *value;
    paramtype valuetype;
}
elementinfo_param;

a117 1
    elementinfo_param  param;
@


1.1.2.9
log
@Added EMBED support (creating lookalike OBJECTs).
Removed startup table initialisation, because latest compiler can do it.
@
text
@d111 3
a113 3
    const char *name;
    const char *type;
    const char *value;
@


1.1.2.10
log
@MAP and AREA handling - first attempt
@
text
@a105 2
    HStream *mapstream;
    MapStream *maps;
@
