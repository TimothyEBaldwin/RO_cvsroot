head	1.9;
access;
symbols
	Unicode-0_63:1.9
	Unicode-0_62:1.9
	Unicode-0_61:1.9
	Unicode-0_60:1.8
	Unicode-0_59:1.8
	Unicode-0_58:1.8
	Unicode-0_57:1.8
	Unicode-0_56:1.8
	Unicode-0_55:1.8
	Unicode-0_54:1.8
	RO_5_07:1.8
	Unicode-0_53:1.8
	Unicode-0_52:1.8
	Unicode-0_51:1.8
	Unicode-0_50:1.8
	Unicode-0_49:1.8
	Unicode-0_48:1.8
	Unicode-0_47:1.8
	Unicode-0_46:1.7
	Unicode-0_45:1.6
	dellis_autobuild_BaseSW:1.5
	sbrodie_sedwards_16Mar2000:1.5
	Unicode-0_44:1.5
	dcotton_autobuild_BaseSW:1.7
	Unicode-0_43:1.5
	Unicode-0_42:1.5
	Unicode-0_41:1.5
	Unicode-0_40:1.5
	Unicode-0_39:1.5
	Unicode-0_38:1.5
	Unicode-0_37:1.5
	Unicode-0_36:1.5
	Unicode-0_35:1.5
	Unicode-0_34:1.5
	Unicode-0_33:1.5
	Unicode-0_32:1.4
	Unicode-0_31:1.4
	Unicode-0_30:1.3
	Unicode-0_29:1.3
	Unicode-0_28:1.3
	Unicode-0_27:1.3
	Unicode-0_26:1.3
	Unicode-0_25:1.2
	Unicode-0_24:1.2
	Unicode-0_23:1.2
	ahodgkin_207release:1.2
	Unicode-0_22:1.2
	Unicode-0_21:1.2
	Unicode-0_20:1.2
	Unicode-0_19:1.2
	Unicode-0_18:1.2
	Unicode-0_16:1.2
	Unicode-0_15:1.2
	ahodgkin_205release:1.2
	ahodgkin_204release:1.2
	Unicode-0_14:1.2
	ahodgkin_133beta:1.2
	Unicode-0_13:1.2
	Unicode-0_12:1.2
	Unicode-0_10:1.1
	Unicode-0_09:1.1
	Unicode-0_08:1.1
	Unicode-0_07:1.1
	Unicode-0_06:1.1
	Unicode-0_05:1.1
	Unicode-0_04:1.1
	Unicode-0_03:1.1
	Unicode-0_02:1.1;
locks; strict;
comment	@# @;


1.9
date	2015.01.10.12.07.43;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	qI3ykr7ckehoqt5y;

1.8
date	2002.06.10.15.08.35;	author sbrodie;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.13.10.38.05;	author jberanek;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.05.14.46.35;	author jberanek;	state Exp;
branches;
next	1.5;

1.5
date	99.02.24.13.33.45;	author smiddle;	state Exp;
branches;
next	1.4;

1.4
date	99.01.11.15.32.09;	author kbracey;	state Exp;
branches;
next	1.3;

1.3
date	98.11.02.13.26.58;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	98.01.05.10.24.28;	author smiddle;	state Exp;
branches;
next	1.1;

1.1
date	97.11.11.16.24.41;	author smiddle;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Makefile recreated from fragments
Swap
 #if DEBUG
for
 #ifdef DEBUG
since the debug defines get appended to the non debug defines in the shared makefiles, so there's no way to set it to zero conveniently.
Requires BuildSys-6_63 for $LIBDEPENDS support.

Version 0.61. Tagged as 'Unicode-0_61'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* > autojp.c */

/**************************************************************************/
/*                                                                        */
/* Copyright [1997-2000] Pace Micro Technology PLC.  All rights reserved. */
/*                                                                        */
/* The copyright in this material is owned by Pace Micro Technology PLC   */
/* ("Pace").  This material is regarded as a highly confidential trade    */
/* secret of Pace.  It may not be reproduced, used, sold or in any        */
/* other way exploited or transferred to any third party without the      */
/* prior written permission of Pace.                                      */
/**************************************************************************/

/* DetectCodeType algorithm by, Ken R. Lunde, Adobe Systems
 * Incorporated, lunde@@mv.us.adobe.com,
 * ftp://ftp.ora.com/pub/examples/nutshell/ujip/src/jconv.c

 * 06-Oct-97: SJM: Created from the above code modified to turn it
 * into a state machine

 */

#include "charsets.h"
#include "autojp.h"
#include "encpriv.h"

#define NEW         csISO2022JP		/* Normal JIS */
#define OLD         csISO2022JP		/* Obselete JIS variant */
/* #define NEC         3		   Unknown variant */
#define EUC         csEUCPkdFmtJapanese
#define SJIS        csShiftJIS
#define EUCORSJIS   csEUCorShiftJIS	/* can't be JIS */
#define ASCII       csAutodetectJP	/* ie no decision has been made yet - treat as ASCII */

#define HAD_NONE		0
#define HAD_ESC			1
#define HAD_ESC_DOLLAR		2
#define HAD_SS2			3
#define HAD_161_223		4
#define HAD_224_239_A		5
#define HAD_224_239_B		6

#define ESC         27
#define SS2         142

#ifdef DEBUG
static const char *states[] =
{
    "HAD_NONE",
    "HAD_ESC",
    "HAD_ESC_DOLLAR",
    "HAD_SS2",
    "HAD_161_223",
    "HAD_224_239_A",
    "HAD_224_239_B"
};
#endif

/*
#define SJIS1(A)    ((A >= 129 && A <= 159) || (A >= 224 && A <= 239))
#define SJIS2(A)    (A >= 64 && A <= 252)
#define HANKATA(A)  (A >= 161 && A <= 223)
#define ISEUC(A)    (A >= 161 && A <= 254)
#define ISMARU(A)   (A >= 202 && A <= 206)
#define ISNIGORI(A) ((A >= 182 && A <= 196) || (A >= 202 && A <= 206) || (A == 179))
*/

static int get_return_val(int whatcode, int state)
{
    if (whatcode == ASCII)
	return state == HAD_NONE ? autojp_ASCII : autojp_THINKING;

    if (whatcode == EUCORSJIS)
	return autojp_UNDECIDED;

    return autojp_DECIDED;
}

int autojp_consume(int *pencoding, int *pstate, char cc)
{
    unsigned char c = (unsigned char)cc;
    int whatcode = *pencoding;
    int state = *pstate;

    if (whatcode != ASCII && whatcode != EUCORSJIS)
	return autojp_DECIDED;

    UNIDBG(("autojp_consume: %02x (%c) ", c, c < 32 ? '.' : c));

    switch (state)
    {
    case HAD_ESC:
        switch (c)
	{
	case '$':
	    state = HAD_ESC_DOLLAR;
	    break;
/* 	case 'K':  - apparently unused form, which we can't handle - so ignore */
/* 	    whatcode = NEC; */
/* 	    break; */
	default:
	    state = HAD_NONE;
	    break;
	}
	break;

    case HAD_ESC_DOLLAR:
	state = HAD_NONE;
	switch (c)
	{
	case 'B':
	    whatcode = NEW;
	    break;
	case '@@':
	    whatcode = OLD;
	    break;
        }
	break;

    case HAD_SS2:
	state = HAD_NONE;
	if (c < 64 || c == 127)
	    ;
	else if (c <= 160)
	    whatcode = SJIS;
        else if (c <= 223)
	    whatcode = EUCORSJIS;
	else if (c <= 252)
	    whatcode = SJIS;
	break;

    case HAD_161_223:
	state = HAD_NONE;
        if (c <= 159)
	    whatcode = SJIS;
	else if (c == 160)
		;
        else if (c <= 223)
	    whatcode = EUCORSJIS;
        else if (c <= 239)
        {
	    state = HAD_224_239_A;
            whatcode = EUCORSJIS;
        }
        else if (c <= 254)
	    whatcode = EUC;
	break;

    case HAD_224_239_A:         /* Had a start byte 161-223 + second byte 224-239 */
        if (c < 64)
            state = HAD_NONE;
	else if (c <= 128 || c == 142)
	    ;
	else if (c <= 159)
	    whatcode = SJIS;
	else if (c == 253 || c == 254)
	    whatcode = EUC;
	break;

    case HAD_224_239_B:         /* Just had a start byte 224-239 */
	state = HAD_NONE;
	if (c < 64 || c == 127)
	    ;
	else if (c <= 160)
	    whatcode = SJIS;
	else if (c <= 252)
	    whatcode = EUCORSJIS;
	else if (c <= 254)
	    whatcode = EUC;
	break;

    case HAD_NONE:
	if (c == ESC)
	    state = HAD_ESC;
	else if (c <= 128)
	    ;			/* no new decision */
	else if (c <= 141)
	    whatcode = SJIS;
	else if (c == SS2)
	    state = HAD_SS2;
	else if (c <= 159)
	    whatcode = SJIS;
	else if (c == 160)
	    ;
	else if (c <= 223)
	    state = HAD_161_223;
	else if (c <= 239)
	    state = HAD_224_239_B;
	else if (c <= 254)
	    whatcode = EUC;
	break;
    }

    UNIDBG(("enc %d '%s'\n", whatcode, states[state]));

    *pencoding = whatcode;
    *pstate = state;

    return get_return_val(whatcode, state);
}

/*
 * If we determine, then say pass all on in given encoding
 * If we change encoding without deciding then pass number u
 */

int autojp_consume_string(int *pencoding, int *pstate, const char *buffer, int *pbytes)
{
    int determined = get_return_val(*pencoding, *pstate);
    int i, n = *pbytes;
    int ascii_bytes = 0;

    for (i = 1; i <= n; i++)
    {
	unsigned char c = (unsigned char)*buffer++;

	determined = autojp_consume(pencoding, pstate, c);

	if (determined == autojp_ASCII)
	    ascii_bytes = i;
	else if (determined == autojp_DECIDED)
	    break;
    }

    if (determined == autojp_UNDECIDED)
	*pbytes -= ascii_bytes;
    else
	*pbytes = 0;

    return determined;
}

/* eof autojp.c */
@


1.8
log
@  Merge of bug fixes from NCBrowser tree.
Detail:
  Buffer overrun fixed; some buffer counting problems fixed too.  There is
    now helpful initialisation and tidyup routines you can call too (called
    encoding_initialise and encoding_tidyup)
Admin:
  I've built this with cc 5.45 in basic build environment - it built OK.
  This source code now matches that in NCBrowser 5.28.


Version 0.47. Tagged as 'Unicode-0_47'
@
text
@d60 1
a60 1
#if DEBUG
@


1.7
log
@  More syncronisation with Unicode lib in branched tree
Detail:
  Added some changes from Unicode lib in branched tree.  All basically
   type changes.  This appears to be because other compilers are
   more picky about types than armcc.

Admin:
  Will add 0.46 VersionNum file into branched tree, and all will be
   syncronised fully.


Version 0.46. Tagged as 'Unicode-0_46'
@
text
@d61 1
a61 1
static char *states[] =
@


1.6
log
@  Copyright message changes + changes from branch + Unified
   branched/non-branched builds
Detail:
  Copyright messages changed from E-14 to Pace throughout, filename
   placed at top of file throughout, instead of in just some files.

  Merged branch's fixes into our code base, plus made it possible to
   get nice debug output in branched tree, and vfprintf() to stderr in
   RISC OS tree.  Exactly same source used in branched tree now (apart
   from OS specific files riscos.c and unix.c moving into layers
   directory structure).

Admin:
  Built for branched, both Unix and RISC OS.
  Built in RISC OS tree, and compiled into TextConv.


Version 0.45. Tagged as 'Unicode-0_45'
@
text
@d93 1
a93 1
int autojp_consume(int *pencoding, int *pstate, int c)
d95 1
d229 1
a229 1
	char c = *buffer++;
@


1.5
log
@Added copyright messages to all source files and unified the
header #define's.

Version 0.33. Not tagged
@
text
@d16 11
a26 9
/************************************************************************/
/*                  Copyright 1997-1999 Element 14 Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Element 14 Ltd.  It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Element 14 Ltd.  All rights reserved.                    */
/*                                                                      */
/************************************************************************/
d39 1
a39 2

#include <stdio.h>			/* for debugging */
d60 1
a60 4
//#define DBG	    DEBUG
#define DBG 0

#if DBG
d101 1
a101 3
#if DBG
    fprintf(stderr, "autojp_consume: %02x (%c) ", c, c < 32 ? '.' : c);
#endif
d207 1
a207 3
#if DBG
    fprintf(stderr, "enc %d '%s'\n", whatcode, states[state]);
#endif
@


1.4
log
@More messing with the state machine - some state transitions were still
totally wrong, causing some EUC pages to come up as Shift-JIS. Maybe this
one will work?

Version 0.31. Tagged as 'Unicode-0_31'
@
text
@d15 10
a24 1
/* > autojp.c
d26 1
a26 1
 * DetectCodeType algorithm by, Ken R. Lunde, Adobe Systems
@


1.3
log
@Fixed problem in autojp state machine causing EUC pages to be erroneously
detected as Shift-JIS.

Version 0.26. Tagged as 'Unicode-0_26'
@
text
@d149 4
a152 1
	    state = HAD_224_239_B;
d157 5
a161 4
    case HAD_224_239_A:
	state = HAD_NONE;
	if (c < 129 || c == 142)
	    whatcode = EUCORSJIS;
a165 2
	else
	    whatcode = EUCORSJIS;
d168 2
a169 1
    case HAD_224_239_B:
d171 1
a171 1
	    state = HAD_NONE;
d196 1
a196 1
	    state = HAD_224_239_A;
@


1.2
log
@ Fixed autojp state machine. It wasn't resetting 'state' to HAD_NONE after
changing whatcode. So basically it was lucky it ever worked. Also rewrote
the various range tests to only use one compare per case.
Changed the 'for_encoding' parameter to encoding_write() to an enumeration.
Added a new type of writing where if the character cannot be encoded then
the function returns -1 rather than writing a default character
Added the pseudo-charsets csAutodetectJP and csEUCorShiftJIS to the encoding
table so that they return the correct default language (ja).
Added function to remove unused encoding tables (must be called explicitly).
Fixed usage counting in iso2022 (I think).
When looking up encoding name try stripping 'x-' and 'X-' off the front i
can't find on first pass.

Version 0.12. Tagged as 'Unicode-0_12'
@
text
@d23 1
a23 1
 
d93 1
a93 1
    
d97 1
a97 1
    
d127 1
a127 1
	
d139 1
a139 1
	
d147 1
a147 1
	    whatcode = EUCORSJIS; 
d153 1
a153 1
	
a166 1
	state = HAD_NONE;
d168 1
a168 1
	    ;
@


1.1
log
@Initial version checked in

Version 0.01. Not tagged
@
text
@d29 2
d50 16
d94 4
d116 1
a124 3
	default:
	    state = HAD_NONE;
	    break;
d129 4
a132 1
        if ((c >= 64 && c <= 126) || (c >= 128 && c <= 160) || (c >= 224 && c <= 252))
d134 1
a134 1
        else if (c >= 161 && c <= 223)
d136 2
a137 2
	else
	    state = HAD_NONE;
d141 10
a150 1
        if (c >= 240 && c <= 254)
a151 8
        else if (c >= 161 && c <= 223)
	    whatcode = EUCORSJIS;
        else if (c >= 224 && c <= 239)
	    state = HAD_224_239_B;
        else if (c <= 159)
	    whatcode = SJIS;
	else
	    state = HAD_NONE;
d155 2
a156 1
	if (c < 129)
d158 1
a158 1
	else if (c <= 141 || (c >= 143 && c <= 159))
d160 1
a160 1
	else if (c >= 253 && c <= 254)
d167 4
a170 1
        if ((c >= 64 && c <= 126) || (c >= 128 && c <= 160))
d172 3
a174 1
        else if (c >= 253 && c <= 254)
a175 4
        else if (c >= 161 && c <= 252)
	    whatcode = EUCORSJIS;
	else
	    state = HAD_NONE;
d183 1
a183 1
	else if ((c >= 129 && c <= 141) || (c >= 143 && c <= 159))
d187 5
a191 1
	else if (c >= 161 && c <= 223)
d193 3
a195 1
	else if (c >= 240 && c <= 254)
a196 2
	else if (c >= 224 && c <= 239)
	    state = HAD_224_239_A;
d199 4
@
