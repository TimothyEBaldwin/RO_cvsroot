head	1.3;
access;
symbols
	Unicode-0_63:1.3
	Unicode-0_62:1.3
	Unicode-0_61:1.3
	Unicode-0_60:1.3
	Unicode-0_59:1.3
	Unicode-0_58:1.3
	Unicode-0_57:1.3
	Unicode-0_56:1.3
	Unicode-0_55:1.2
	Unicode-0_54:1.2
	RO_5_07:1.1
	Unicode-0_53:1.1
	Unicode-0_52:1.1
	Unicode-0_51:1.1
	Unicode-0_50:1.1
	Unicode-0_49:1.1
	Unicode-0_48:1.1
	Unicode-0_47:1.1
	Unicode-0_46:1.1
	Unicode-0_45:1.1
	dellis_autobuild_BaseSW:1.1
	sbrodie_sedwards_16Mar2000:1.1
	Unicode-0_44:1.1
	dcotton_autobuild_BaseSW:1.1
	Unicode-0_43:1.1
	Unicode-0_42:1.1
	Unicode-0_41:1.1
	Unicode-0_40:1.1
	Unicode-0_39:1.1
	Unicode-0_38:1.1
	Unicode-0_37:1.1
	Unicode-0_36:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.12.05.00.29.46;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.25.11.57.08;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	99.03.12.17.10.00;	author smiddle;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  Fix bugs and inconsistencies in encoding handlers.
  Fix inconsistency in handling illegal byte sequences.
  Convert surrogate codepoints and U+FFFE, U+FFFF to U+FFFD.
  Also, a few extra mappings.
Detail:
  enc_utf8.c: 0x80 is a continuation byte. Map stray ones to U+FFFD.
              Reset the count of expected continuation bytes to 0 when
              encountering illegal byte sequences. Previously, if the character
              callback returned non-zero, this count would not be reset, thus
              leaving the codec in an inconsistent state. Additionally, we no
              longer consume the illegal continuation byte: instead, we process
              it as a start byte next time round.
  encoding.c: Do not load extension tables for ISO-8859-{1,2,9,10,15,16}
              If these are needed, it's probably best that different charset
              names are used rather than overloading 8859-n.
  iso2022.c:  Permit SS2/3 escape sequences for EUC encode/decode.
              Disable C1 characters for EUC encode/decode.
              Fix G94x94 read function to handle GR 0xA0/0xFF correctly.
              Fix writing of C1 controls for 8859-n.
              Prevent dereference of NULL pointer when scanning tables.
  iso6937.c:  Replace C99 loop iterators with C89 friendly versions.
  johab.c:    Fix final_only lookup table to have entries in the right place.
              Map 0x5C to the Won sign.
              Actually pay attention to encoding_WRITE_STRICT.
  shiftjis.c: Map 0x7E to overbar rather than tilde.
  textconv.c: Fix static assignment of stdin/stdout.
  unix.c:     Perform wildcard lookup of mapping tables.
  ccsolaris/Makefile: Modify for use with GCCSDK
Admin:
  Tested with the Iconv module testsuite.
Author:
  John-Mark Bell


Version 0.56. Tagged as 'Unicode-0_56'
@
text
@# Copyright 1999 Element 14 Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Project:   Unicode

ifeq ($(findstring riscos,$(TARGET)),riscos)
  GCCSDK_INSTALL_CROSSBIN ?= /home/riscos/cross/bin

  CC = $(wildcard $(GCCSDK_INSTALL_CROSSBIN)/*gcc)

  ifeq ($(findstring module,$(TARGET)),module)
    PlatCCflags = -mmodule
  endif

  PlatObjs = riscos.o
else
  CC = gcc

  PlatObjs = unix.o
endif

HOST_CC = gcc

CCflags = -funsigned-char -g -O0 $(PlatCCflags)

.c.o:;	$(CC) -c -DDEBUG=0 $(CCflags) -o $@@ $<

Objects = autojp.o \
	unictype.o \
	utf8.o \
	utf16.o \
	encoding.o \
	iso2022.o \
	eightbit.o \
	iso6937.o \
	shiftjis.o \
	johab.o \
	bigfive.o \
	enc_utf7.o \
	enc_utf8.o \
	enc_ascii.o \
	enc_utf16.o \
	enc_ucs4.o \
	enc_scsu.o \
	enc_system.o \
	acorn.o \
	combine.o \
	debug.o \
	$(PlatObjs)

all:	ucodelib.a textconv

ucodelib.a: $(Objects)
	${AR} r $@@ $(Objects)

textconv: textconv.o ucodelib.a
	${CC} $(CCflags) -o $@@ textconv.o ucodelib.a

mkunictype: mkunictype.c
	${HOST_CC} -o $@@ $<

clean:
	@@-rm mkunictype textconv
	@@-rm unictype.c
	@@-rm *.o
	@@-rm ucodelib.a
	echo Done clean

realclean: clean
	find . -type l -print | xargs rm
	echo Done realclean

unictype.c: ../data/UnicodeData mkunictype
	./mkunictype < ../data/UnicodeData > unictype.c
	echo Made unictype.c

links: ; ./mklinks
	echo made links

# Do not faff with the following comment as Make looks for it explicitly:
# Dynamic dependencies:
@


1.2
log
@* Added support for ISO 6937:2001, and the variant with Euro used by DVB.
  (This isn't integrated with ISO 2022 processing though - it's standalone).
* Added a Dstroke -> Eth second-attempt conversion in various write routines,
  primarily for ISO 6937 -> Latin1 conversion (ISO 6937 unifies them).

Version 0.54. Tagged as 'Unicode-0_54'
@
text
@d17 2
a18 1
CC=gcc
d20 16
a35 1
CCflags=-funsigned-char
d59 2
a60 1
	unix.o
d68 4
a71 1
	${CC} -o $@@ textconv.o ucodelib.a
@


1.1
log
@Changed encoding_table_remove_unused() so that it takes a
parameter giving the depth from which to start purging.
Fixed ISO2022 write code to free search tables.
Added unix.c for unix-targeted builds.
Updated cross-compile build.
Added unix-targeted build of library and textconv tool
in ccsolaris directory.

Version 0.36. Tagged as 'Unicode-0_36'
@
text
@d30 1
@

