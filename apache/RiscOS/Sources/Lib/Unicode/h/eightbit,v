head	1.7;
access;
symbols
	Unicode-0_63:1.7
	Unicode-0_62:1.7
	Unicode-0_61:1.7
	Unicode-0_60:1.7
	Unicode-0_59:1.6
	Unicode-0_58:1.6
	Unicode-0_57:1.6
	Unicode-0_56:1.6
	Unicode-0_55:1.6
	Unicode-0_54:1.6
	RO_5_07:1.6
	Unicode-0_53:1.6
	Unicode-0_52:1.6
	Unicode-0_51:1.6
	Unicode-0_50:1.5
	Unicode-0_49:1.5
	Unicode-0_48:1.5
	Unicode-0_47:1.5
	Unicode-0_46:1.5
	Unicode-0_45:1.4
	dellis_autobuild_BaseSW:1.3
	sbrodie_sedwards_16Mar2000:1.3
	Unicode-0_44:1.3
	dcotton_autobuild_BaseSW:1.5
	Unicode-0_43:1.3
	Unicode-0_42:1.3
	Unicode-0_41:1.3
	Unicode-0_40:1.3
	Unicode-0_39:1.3
	Unicode-0_38:1.3
	Unicode-0_37:1.3
	Unicode-0_36:1.3
	Unicode-0_35:1.3
	Unicode-0_34:1.3
	Unicode-0_33:1.3
	Unicode-0_32:1.2
	Unicode-0_31:1.2
	Unicode-0_30:1.2
	Unicode-0_29:1.2
	Unicode-0_28:1.2
	Unicode-0_27:1.2
	Unicode-0_26:1.2
	Unicode-0_25:1.2
	Unicode-0_24:1.2
	Unicode-0_23:1.2
	ahodgkin_207release:1.2
	Unicode-0_22:1.2
	Unicode-0_21:1.2
	Unicode-0_20:1.2
	Unicode-0_19:1.2
	Unicode-0_18:1.2
	Unicode-0_16:1.2
	Unicode-0_15:1.2
	ahodgkin_205release:1.2
	ahodgkin_204release:1.2
	Unicode-0_14:1.2
	ahodgkin_133beta:1.2
	Unicode-0_13:1.2
	Unicode-0_12:1.2
	Unicode-0_10:1.2
	Unicode-0_09:1.2
	Unicode-0_08:1.2
	Unicode-0_07:1.2
	Unicode-0_06:1.1
	Unicode-0_05:1.1
	Unicode-0_04:1.1
	Unicode-0_03:1.1;
locks; strict;
comment	@# @;


1.7
date	2013.01.06.22.32.11;	author jbell;	state Exp;
branches;
next	1.6;
commitid	mXR1bDbpHeiotczw;

1.6
date	2003.07.02.15.39.15;	author rsprowson;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.13.10.38.05;	author jberanek;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.05.14.46.35;	author jberanek;	state Exp;
branches;
next	1.3;

1.3
date	99.02.24.13.33.51;	author smiddle;	state Exp;
branches;
next	1.2;

1.2
date	97.12.02.10.31.46;	author smiddle;	state Exp;
branches;
next	1.1;

1.1
date	97.11.12.18.11.56;	author smiddle;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add encoding_read_in_multibyte_sequence API.
Detail:
  The new API allows the client to determine if a read codec has run
  out of input in the middle of a multibyte sequence. This permits a
  client to distinguish between the two cases in which no output
  character is generated:

    a) insufficient input has been provided to complete an output character
    b) the input consisted of a complete multibyte sequence which generates
       no output (e.g. an ISO-2022 shift sequence)
Admin:
  Tested using Iconv.


Version 0.60. Tagged as 'Unicode-0_60'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* > eightbit.h */

/**************************************************************************/
/*                                                                        */
/* Copyright [1997-2003] All rights reserved.                             */
/*                                                                        */
/* This file may be included in profit making or non profit making        */
/* software on any system running any version of RISC OS, provided it was */
/* used along with a licensed binary of Unicode Lib                       */
/* It is supplied "as is" without warranty, express or implied, of        */
/* merchantability for any purpose.                                       */
/* No liability can be claimed for any direct or indirect loss            */
/**************************************************************************/

extern EncodingPriv enc_eightbit;

typedef struct EightBit_Encoding
{
    EncodingPriv e;
    encoding_table table; /* 128-entry table for codes 0x80-0xFF */
} EightBit_Encoding;

extern int eightbit_reset(Encoding *e, int for_encoding);
extern unsigned int eightbit_read(EncodingPriv *e,
			   encoding_read_callback_fn ucs_out,
                           const unsigned char *s,
                           unsigned int n,
                           void *handle);
extern int eightbit_read_in_multibyte_sequence(EncodingPriv *e);
extern int eightbit_write(EncodingPriv *e, UCS4 u, unsigned char **s, int *bufsize);
extern void eightbit_delete(EncodingPriv *e);
@


1.6
log
@Merged some updated constants off Kevin's local copy.
Changed (C) message ready for release with C tools.
Module form renamed to "unicodelibm".

Version 0.51. Tagged as 'Unicode-0_51'
@
text
@d43 1
@


1.5
log
@  More syncronisation with Unicode lib in branched tree
Detail:
  Added some changes from Unicode lib in branched tree.  All basically
   type changes.  This appears to be because other compilers are
   more picky about types than armcc.

Admin:
  Will add 0.46 VersionNum file into branched tree, and all will be
   syncronised fully.


Version 0.46. Tagged as 'Unicode-0_46'
@
text
@d19 1
a19 1
/* Copyright [1997-2000] Pace Micro Technology PLC.  All rights reserved. */
d21 6
a26 5
/* The copyright in this material is owned by Pace Micro Technology PLC   */
/* ("Pace").  This material is regarded as a highly confidential trade    */
/* secret of Pace.  It may not be reproduced, used, sold or in any        */
/* other way exploited or transferred to any third party without the      */
/* prior written permission of Pace.                                      */
@


1.4
log
@  Copyright message changes + changes from branch + Unified
   branched/non-branched builds
Detail:
  Copyright messages changed from E-14 to Pace throughout, filename
   placed at top of file throughout, instead of in just some files.

  Merged branch's fixes into our code base, plus made it possible to
   get nice debug output in branched tree, and vfprintf() to stderr in
   RISC OS tree.  Exactly same source used in branched tree now (apart
   from OS specific files riscos.c and unix.c moving into layers
   directory structure).

Admin:
  Built for branched, both Unix and RISC OS.
  Built in RISC OS tree, and compiled into TextConv.


Version 0.45. Tagged as 'Unicode-0_45'
@
text
@d39 1
a39 1
                           const char *s,
d42 1
a42 1
extern int eightbit_write(EncodingPriv *e, UCS4 u, char **s, int *bufsize);
@


1.3
log
@Added copyright messages to all source files and unified the
header #define's.

Version 0.33. Not tagged
@
text
@d15 12
a26 9
/************************************************************************/
/*                  Copyright 1997-1999 Element 14 Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Element 14 Ltd.  It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Element 14 Ltd.  All rights reserved.                    */
/*                                                                      */
/************************************************************************/
@


1.2
log
@Recreated acorn.c to hold new encoding cdAcornFuzzy. This writes an
Acorn Latin1 encoding using fuzzy mapping to get the greatest number
of displayable characters. Reads as Acorn.Latin1.

Version 0.07. Tagged as 'Unicode-0_07'
@
text
@d15 10
@


1.1
log
@Fixed encoding table so that modules builds will work.
Made all tables be on linked list to avoid static copies of pointers.
Removed redundant 8bit files.

Version 0.03. Tagged as 'Unicode-0_03'
@
text
@d16 15
@
