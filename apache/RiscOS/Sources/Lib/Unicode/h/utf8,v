head	1.6;
access;
symbols
	Unicode-0_63:1.6
	Unicode-0_62:1.6
	Unicode-0_61:1.6
	Unicode-0_60:1.6
	Unicode-0_59:1.6
	Unicode-0_58:1.6
	Unicode-0_57:1.6
	Unicode-0_56:1.6
	Unicode-0_55:1.6
	Unicode-0_54:1.6
	RO_5_07:1.6
	Unicode-0_53:1.6
	Unicode-0_52:1.6
	Unicode-0_51:1.6
	Unicode-0_50:1.5
	Unicode-0_49:1.5
	Unicode-0_48:1.5
	Unicode-0_47:1.5
	Unicode-0_46:1.5
	Unicode-0_45:1.5
	dellis_autobuild_BaseSW:1.4
	sbrodie_sedwards_16Mar2000:1.4
	Unicode-0_44:1.4
	dcotton_autobuild_BaseSW:1.5
	Unicode-0_43:1.4
	Unicode-0_42:1.4
	Unicode-0_41:1.4
	Unicode-0_40:1.4
	Unicode-0_39:1.4
	Unicode-0_38:1.4
	Unicode-0_37:1.4
	Unicode-0_36:1.4
	Unicode-0_35:1.4
	Unicode-0_34:1.4
	Unicode-0_33:1.4
	Unicode-0_32:1.3
	Unicode-0_31:1.3
	Unicode-0_30:1.3
	Unicode-0_29:1.3
	Unicode-0_28:1.3
	Unicode-0_27:1.3
	Unicode-0_26:1.3
	Unicode-0_25:1.3
	Unicode-0_24:1.3
	Unicode-0_23:1.3
	ahodgkin_207release:1.3
	Unicode-0_22:1.3
	Unicode-0_21:1.3
	Unicode-0_20:1.3
	Unicode-0_19:1.3
	Unicode-0_18:1.3
	Unicode-0_16:1.3
	Unicode-0_15:1.3
	ahodgkin_205release:1.3
	ahodgkin_204release:1.3
	Unicode-0_14:1.3
	ahodgkin_133beta:1.3
	Unicode-0_13:1.3
	Unicode-0_12:1.3
	Unicode-0_10:1.3
	Unicode-0_09:1.3
	Unicode-0_08:1.3
	Unicode-0_07:1.3
	Unicode-0_06:1.3
	Unicode-0_05:1.2
	Unicode-0_04:1.2
	Unicode-0_03:1.1
	Unicode-0_02:1.1;
locks; strict;
comment	@# @;


1.6
date	2003.07.02.15.39.16;	author rsprowson;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.05.14.46.36;	author jberanek;	state Exp;
branches;
next	1.4;

1.4
date	99.02.24.13.33.55;	author smiddle;	state Exp;
branches;
next	1.3;

1.3
date	97.11.25.15.03.34;	author smiddle;	state Exp;
branches;
next	1.2;

1.2
date	97.11.21.18.21.55;	author smiddle;	state Exp;
branches;
next	1.1;

1.1
date	97.11.11.16.25.20;	author smiddle;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merged some updated constants off Kevin's local copy.
Changed (C) message ready for release with C tools.
Module form renamed to "unicodelibm".

Version 0.51. Tagged as 'Unicode-0_51'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* > utf8.h */

/**************************************************************************/
/*                                                                        */
/* Copyright [1997-2003] All rights reserved.                             */
/*                                                                        */
/* This file may be included in profit making or non profit making        */
/* software on any system running any version of RISC OS, provided it was */
/* used along with a licensed binary of Unicode Lib                       */
/* It is supplied "as is" without warranty, express or implied, of        */
/* merchantability for any purpose.                                       */
/* No liability can be claimed for any direct or indirect loss            */
/**************************************************************************/

#ifndef unicode_utf8_h
#define unicode_utf8_h

#include "iso10646.h"

/*
 * UCS4_to_UTF8 converts a UCS-4 code to UTF-8, storing the result
 * in the array pointed to by out. This array must be large enough
 * to store the resulting UTF-8 element (6 bytes will always be
 * sufficient). The return value is a pointer to the byte after
 * the last one written. Assumes code is a legal UCS value (ie
 * in the range 0-0x7FFFFFFF).
 */
extern char *UCS4_to_UTF8(char *out, UCS4 code);

/*
 * UTF8_codelen gives the length of a UCS-4 code when converted to UTF-8
 * using the above function.
 */
extern int UTF8_codelen(UCS4 code);

/*
 * UTF8_seqlen gives the length of a UTF-8 sequence, given its first
 * byte.
 */
extern int UTF8_seqlen(char c);

/*
 * UTF8_to_UCS4 takes a pointer to a UTF-8 sequence and outputs
 * the corresponding UCS4 code, returning the number of bytes consumed.
 * Incorrect sequences are dealt with by returning 1 and setting
 * *code_out to 0xFFFD.
 */
extern int UTF8_to_UCS4(const char *in, UCS4 *code_out);

/*
 * UTF8_next advances the pointer to the next UTF-8 code in a string.
 * If p points to the middle of a UTF-8 sequence, it will be advanced
 * to the next UTF-8 sequence.
 *
 * Note that p + UTF8_seqlen(p[0]) != UTF8_next(p) if p points to the
 * middle of a sequence.
 */
extern char *UTF8_next(const char *p);

/*
 * UTF8_prev reverses the pointer to the previous UTF-8 code in a string.
 * If p points to the middle of a UTF-8 sequence, it will be reversed
 * to the start of that UTF-8 sequence.
 */
extern char *UTF8_prev(const char *p);

/*
 * UTF8_next_n advances the pointer over 'n' UTF8 characters and returns the
 * new pointer. It uses UTF8_next so has its behaviour over starting conditions.
 */

extern char *UTF8_next_n(const char *p, int n_chars);

/*
 * Count the number of utf8 'characters' in the string
 */

extern int UTF8_strlen(const char *p);
extern int UTF8_strlen_n(const char *p, int n_bytes);

#endif
@


1.5
log
@  Copyright message changes + changes from branch + Unified
   branched/non-branched builds
Detail:
  Copyright messages changed from E-14 to Pace throughout, filename
   placed at top of file throughout, instead of in just some files.

  Merged branch's fixes into our code base, plus made it possible to
   get nice debug output in branched tree, and vfprintf() to stderr in
   RISC OS tree.  Exactly same source used in branched tree now (apart
   from OS specific files riscos.c and unix.c moving into layers
   directory structure).

Admin:
  Built for branched, both Unix and RISC OS.
  Built in RISC OS tree, and compiled into TextConv.


Version 0.45. Tagged as 'Unicode-0_45'
@
text
@d19 1
a19 1
/* Copyright [1997-2000] Pace Micro Technology PLC.  All rights reserved. */
d21 6
a26 5
/* The copyright in this material is owned by Pace Micro Technology PLC   */
/* ("Pace").  This material is regarded as a highly confidential trade    */
/* secret of Pace.  It may not be reproduced, used, sold or in any        */
/* other way exploited or transferred to any third party without the      */
/* prior written permission of Pace.                                      */
@


1.4
log
@Added copyright messages to all source files and unified the
header #define's.

Version 0.33. Not tagged
@
text
@d15 12
a26 9
/************************************************************************/
/*                  Copyright 1997-1999 Element 14 Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Element 14 Ltd.  It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Element 14 Ltd.  All rights reserved.                    */
/*                                                                      */
/************************************************************************/
@


1.3
log
@Added another UTF8 function to get string lengths in terms of UTF8 characters.

Version 0.06. Tagged as 'Unicode-0_06'
@
text
@d15 13
a28 3

#ifndef __utf8_h
#define __utf8_h
@


1.2
log
@Added new file 'languages.h' with some ISO639 language codes.
Added a default language field to each encoding (using above codes).
Added a max char size field to each encoding.
Tidied up some of the reencoders behaviour when output ptr NULL.
Fixed a load of charset numbers which were wrong.
New UTF8 function to skiop multiple characters in a string.
Fixed RISC OS build which was out of date.

Version 0.04. Tagged as 'Unicode-0_04'
@
text
@d74 7
@


1.1
log
@Initial version checked in

Version 0.01. Not tagged
@
text
@d58 1
a58 1
char *UTF8_next(const char *p);
d65 8
a72 1
char *UTF8_prev(const char *p);
@
