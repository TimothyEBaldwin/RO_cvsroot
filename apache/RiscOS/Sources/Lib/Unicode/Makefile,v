head	1.23;
access;
symbols
	Unicode-0_63:1.23
	Unicode-0_62:1.23
	Unicode-0_61:1.22
	Unicode-0_60:1.21
	Unicode-0_59:1.21
	Unicode-0_58:1.20
	Unicode-0_57:1.20
	Unicode-0_56:1.18
	Unicode-0_55:1.18
	Unicode-0_54:1.18
	RO_5_07:1.17
	Unicode-0_53:1.17
	Unicode-0_52:1.16
	Unicode-0_51:1.16
	Unicode-0_50:1.15
	Unicode-0_49:1.15
	Unicode-0_48:1.15
	Unicode-0_47:1.15
	Unicode-0_46:1.15
	Unicode-0_45:1.15
	dellis_autobuild_BaseSW:1.14
	sbrodie_sedwards_16Mar2000:1.14
	Unicode-0_44:1.14
	dcotton_autobuild_BaseSW:1.15
	Unicode-0_43:1.14
	Unicode-0_42:1.14
	Unicode-0_41:1.14
	Unicode-0_40:1.14
	Unicode-0_39:1.14
	Unicode-0_38:1.13
	Unicode-0_37:1.13
	Unicode-0_36:1.13
	Unicode-0_35:1.12
	Unicode-0_34:1.11
	Unicode-0_33:1.10
	Unicode-0_32:1.7
	Unicode-0_31:1.7
	Unicode-0_30:1.7
	Unicode-0_29:1.7
	Unicode-0_28:1.7
	Unicode-0_27:1.7
	Unicode-0_26:1.7
	Unicode-0_25:1.7
	Unicode-0_24:1.7
	Unicode-0_23:1.7
	ahodgkin_207release:1.5
	Unicode-0_22:1.7
	Unicode-0_21:1.7
	Unicode-0_20:1.6
	Unicode-0_19:1.6
	Unicode-0_18:1.5
	Unicode-0_16:1.5
	Unicode-0_15:1.4
	ahodgkin_205release:1.4
	ahodgkin_204release:1.4
	Unicode-0_14:1.4
	ahodgkin_133beta:1.4
	Unicode-0_13:1.4
	Unicode-0_12:1.3
	Unicode-0_10:1.3
	Unicode-0_09:1.3
	Unicode-0_08:1.3
	Unicode-0_07:1.3
	Unicode-0_06:1.2
	Unicode-0_05:1.2
	Unicode-0_04:1.2
	Unicode-0_03:1.1
	Unicode-0_02:1.1;
locks; strict;
comment	@# @;


1.23
date	2017.01.20.12.33.56;	author rsprowson;	state Exp;
branches;
next	1.22;
commitid	p7du1DXyeQDnKHCz;

1.22
date	2015.01.10.12.07.39;	author rsprowson;	state Exp;
branches;
next	1.21;
commitid	qI3ykr7ckehoqt5y;

1.21
date	2012.01.14.22.55.29;	author srevill;	state Exp;
branches;
next	1.20;
commitid	L2eck8F3B0SS6cPv;

1.20
date	2009.06.26.00.38.02;	author bavison;	state Exp;
branches;
next	1.19;

1.19
date	2009.06.13.23.39.33;	author bavison;	state Exp;
branches;
next	1.18;

1.18
date	2005.08.25.11.57.07;	author kbracey;	state Exp;
branches;
next	1.17;

1.17
date	2004.07.01.14.57.50;	author srevill;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.02.15.39.15;	author rsprowson;	state Exp;
branches;
next	1.15;

1.15
date	2000.10.05.14.46.35;	author jberanek;	state Exp;
branches;
next	1.14;

1.14
date	99.03.26.15.27.22;	author smiddle;	state Exp;
branches;
next	1.13;

1.13
date	99.03.12.17.09.57;	author smiddle;	state Exp;
branches;
next	1.12;

1.12
date	99.03.12.15.53.09;	author kbracey;	state Exp;
branches;
next	1.11;

1.11
date	99.03.11.17.01.13;	author kbracey;	state Exp;
branches;
next	1.10;

1.10
date	99.02.24.17.17.05;	author smiddle;	state Exp;
branches;
next	1.9;

1.9
date	99.02.24.12.04.19;	author smiddle;	state Exp;
branches;
next	1.8;

1.8
date	99.02.23.17.03.07;	author kbracey;	state Exp;
branches;
next	1.7;

1.7
date	98.09.22.09.42.53;	author smiddle;	state Exp;
branches;
next	1.6;

1.6
date	98.09.15.14.09.43;	author kbracey;	state Exp;
branches;
next	1.5;

1.5
date	98.09.10.09.18.44;	author smiddle;	state Exp;
branches;
next	1.4;

1.4
date	98.01.14.11.22.49;	author smiddle;	state Exp;
branches;
next	1.3;

1.3
date	97.12.02.10.31.14;	author smiddle;	state Exp;
branches;
next	1.2;

1.2
date	97.11.21.18.21.40;	author smiddle;	state Exp;
branches;
next	1.1;

1.1
date	97.11.11.16.24.33;	author smiddle;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Minor Makefile correction
Allow TARGET to be passed in from the build system, else default to previous value.
Retagged as Unicode-0_62.
@
text
@# Copyright 1997 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for UnicodeLib
#

COMPONENT  = UnicodeLib
TARGET    ?= ucode
EXPDIR     = ${LIBDIR}${SEP}Unicode
LIBRARIES  = ${LIBRARY} ${LIBRARYZM} ${LIBRARYD}
LIBDEPENDS = unictype
CDFLAGS    = -DDEBUG=1
OBJS       = autojp unictype utf8 utf16 encoding iso2022 eightbit iso6937 \
             shiftjis johab bigfive enc_utf7 enc_utf8 enc_ascii enc_utf16 \
             enc_ucs4 enc_scsu enc_system acorn combine riscos
HDRS       = autojp charsets encoding iso10646 iso3166 \
             languages unictype utf8 combine

include CLibrary

clean::
        ${RM} mkunictype
        ${RM} c${SEP}unictype

unictype: mkunictype data${SEP}UnicodeData
        ${RUN}mkunictype < data${SEP}UnicodeData > c${SEP}unictype

mkunictype: mkunictype.c
        ${MAKE} -f mkunictype/mk THROWBACK=${THROWBACK}

# Dynamic dependencies:
@


1.22
log
@Makefile recreated from fragments
Swap
 #if DEBUG
for
 #ifdef DEBUG
since the debug defines get appended to the non debug defines in the shared makefiles, so there's no way to set it to zero conveniently.
Requires BuildSys-6_63 for $LIBDEPENDS support.

Version 0.61. Tagged as 'Unicode-0_61'
@
text
@d19 1
a19 1
TARGET     = ucode
@


1.21
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.59. Tagged as 'Unicode-0_59'
@
text
@d15 1
a15 1
# Makefile for Unicode
a16 135
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 06-Oct-97  SJM          Created.
#

#
# Paths
#
EXP_HDR = <export$dir>
LIBDIR = <Lib$Dir>
UNICODELIBDIR = ${LIBDIR}.Unicode
#
# Generic options:
#
MKDIR   = do mkdir -p
AS      = objasm
CP      = copy
CC      = cc
CM      = cmhg
RM      = remove
LD      = link
LB      = libfile
TOUCH   = create
WIPE    = x wipe
SQUEEZE = squeeze
STRIP   = stripdepnd

CCFLAGS = -c -depend !Depend -fah ${INCLUDES} ${DFLAGS} ${THROWBACK}
ASFLAGS = -depend !Depend -Stamp -quit
CPFLAGS = ~cfr~v
LBFLAGS = -c
WFLAGS  = ~CFR~V

#
# Libraries
#
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
RSTUBS    = RISCOSLIB:o.rstubs
ROMSTUBS  = RISCOSLIB:o.romstubs
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.AbsSym

#
# Include files
#
INCLUDES  =
DFLAGS    = 

#
# Program specific options:
#
COMPONENT  = ucodelib
COMPONENTZ = ucodelibm
COMPONENTD = ucodelibd
TARGET     = ${COMPONENT}
TARGETZ    = ${COMPONENTZ}
TARGETD    = ${COMPONENTD}
SOURCE     = 
EXPORTS    = 

OBJS = autojp.o \
        unictype.o \
	utf8.o \
	utf16.o \
	encoding.o \
	iso2022.o \
	eightbit.o \
	iso6937.o \
	shiftjis.o \
	johab.o \
	bigfive.o \
	enc_utf7.o \
	enc_utf8.o \
	enc_ascii.o \
	enc_utf16.o \
	enc_ucs4.o \
	enc_scsu.o \
	enc_system.o \
	acorn.o \
	combine.o \
	riscos.o

OBJSZ = \
	oz.autojp \
	oz.unictype \
	oz.utf8 \
	oz.utf16 \
	oz.encoding \
	oz.iso2022 \
	oz.eightbit \
	oz.iso6937 \
	oz.shiftjis \
	oz.johab \
	oz.bigfive \
	oz.enc_utf7 \
	oz.enc_utf8 \
	oz.enc_ascii \
	oz.enc_utf16 \
	oz.enc_ucs4 \
	oz.enc_scsu \
	oz.enc_system \
	oz.acorn \
	oz.combine \
	oz.riscos


OBJSD = \
	od.autojp \
	od.unictype \
	od.utf8 \
	od.utf16 \
	od.encoding \
	od.iso2022 \
	od.eightbit \
	od.iso6937 \
	od.shiftjis \
	od.johab \
	od.bigfive \
	od.enc_utf7 \
	od.enc_utf8 \
	od.enc_ascii \
	od.enc_utf16 \
	od.enc_ucs4 \
	od.enc_scsu \
	od.enc_system \
	od.acorn \
	od.combine \
	od.riscos \
	od.debug

HDRS = autojp.h charsets.h encoding.h iso10646.h iso3166.h languages.h unictype.h utf8.h combine.h
d18 11
a28 1
LIBS = ${TARGET} ${TARGETD} ${TARGETZ} 
d30 1
a30 21
#
# Rule patterns
#
.SUFFIXES: .o .oz .od .c .h .s
.c.o:;     ${CC} ${CCFLAGS} -DROM=0 -DDEBUG=0 -ff     -o $@@ $<
.c.oz:;    ${CC} ${CCFLAGS} -DROM=1 -DDEBUG=0 -ff -zM -o $@@ $<
.c.od:;    ${CC} ${CCFLAGS} -DROM=0 -DDEBUG=1         -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<
.cmhg.o:;  ${CM} ${CMFLAGS} -o $@@ $<
.cmhg.h:;  ${CM} ${CMFLAGS} -d $@@ $<

#
# build the library:
#
all:	${LIBS}

#
# RISC OS ROM build rules:
#
rom: ${TARGET}
        @@echo ${COMPONENT}: rom module built
d32 1
a32 19
export: export_${PHASE}

install_rom: ${TARGET}
        @@echo ${COMPONENT}: rom module installed

install:
        ${MKDIR} ${INSTDIR}.Unicode
        ${CP} ${UNICODELIBDIR}.* ${INSTDIR}.Unicode.* ${CPFLAGS}
        @@echo ${COMPONENT}: installed

clean:
        ${WIPE} o ${WFLAGS}
        ${WIPE} oz ${WFLAGS}
        ${WIPE} od ${WFLAGS}
        ${RM} ${COMPONENT}
        ${RM} ${COMPONENTZ}
        ${RM} ${COMPONENTD}
	${RM} local_dirs
        ${RM} c.unictype
d34 1
a34 2
        ${RM} TextConv
        @@echo ${COMPONENT}: cleaned
d36 2
a37 35
export_hdrs: ${HDRS} dirs
	${CP} h.autojp   ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.charsets ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.combine  ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.encoding ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.iso10646 ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.iso3166  ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.languages ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.unictype ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.utf8     ${UNICODELIBDIR}.h.* ${CPFLAGS}
	${CP} h.utf16    ${UNICODELIBDIR}.h.* ${CPFLAGS}
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${LIBS} dirs
	${CP} ${TARGET}  ${UNICODELIBDIR}.o.* ${CPFLAGS}
	${CP} ${TARGETD} ${UNICODELIBDIR}.o.* ${CPFLAGS}
	${CP} ${TARGETZ} ${UNICODELIBDIR}.o.* ${CPFLAGS}
        @@echo ${COMPONENT}: export complete (libs)


local_dirs:
	${MKDIR} o
	${MKDIR} oz
	${MKDIR} od
	${TOUCH} local_dirs

dirs:
        ${MKDIR} ${LIBDIR}
        ${MKDIR} ${UNICODELIBDIR}
        ${MKDIR} ${UNICODELIBDIR}.h
        ${MKDIR} ${UNICODELIBDIR}.o

unictype.c: mkunictype data.UnicodeData
	${RUN}mkunictype < data.UnicodeData > c.unictype
	echo Made unictype.c
d40 1
a40 17
        ${MAKE} -f mkunictype/mk COMPONENT=mkunictype THROWBACK=${THROWBACK}

TextConv: textconv.o ${TARGET}
	${LD} -o $@@ textconv.o ${TARGET} ${CLIB}
        ${SQUEEZE} $@@

#
# Final link
#
${TARGET}: ${OBJS} unictype.c local_dirs
        ${LB} ${LBFLAGS} -o ${COMPONENT} ${OBJS}

${TARGETZ}: ${OBJSZ} unictype.c local_dirs
	${LB} ${LBFLAGS} -o ${COMPONENTZ} ${OBJSZ}

${TARGETD}: ${OBJSD} unictype.c local_dirs
	${LB} ${LBFLAGS} -o ${COMPONENTD} ${OBJSD}
@


1.20
log
@  Added install rule
Admin:
  This is only intended for use when building the disc image for the C/C++ CD.

Version 0.57. Tagged as 'Unicode-0_57'
@
text
@d43 1
a43 1
WIPE    = -wipe
@


1.19
log
@  Build fix
Detail:
  The build utility mkunictype, compiled at build time, is now built using the
  HostTools shared makefile, and so will execute on any RISC OS build host even
  if the default compiler options are to target an incompatible ARM
  architecture. Added call to stripdepnd to the MkClean obey file.
Admin:
  Tested using an APCS-R build on an Iyonix.

Version 0.56. Not tagged
@
text
@d182 5
@


1.18
log
@* Added support for ISO 6937:2001, and the variant with Euro used by DVB.
  (This isn't integrated with ISO 2022 processing though - it's standalone).
* Added a Dstroke -> Eth second-attempt conversion in various write routines,
  primarily for ISO 6937 -> Latin1 conversion (ISO 6937 unifies them).

Version 0.54. Tagged as 'Unicode-0_54'
@
text
@a37 1
CC_HOST = %cc
a192 1
        ${STRIP}
d228 1
a228 1
	mkunictype < data.UnicodeData > c.unictype
d232 1
a232 1
	${CC_HOST} mkunictype
@


1.17
log
@  Build changes
Detail:
  Builds on 32-bit machine even with 26-bit environment.
  Fixed c.encoding so that it builds with newer tools.
Admin:
  Works in Baseline 500 build.

Version 0.53. Tagged as 'Unicode-0_53'
@
text
@d89 1
d112 1
d136 1
@


1.16
log
@Merged some updated constants off Kevin's local copy.
Changed (C) message ready for release with C tools.
Module form renamed to "unicodelibm".

Version 0.51. Tagged as 'Unicode-0_51'
@
text
@d34 1
a34 1
MKDIR   = cdir
d38 1
d48 1
a48 1
CCFLAGS = -c -depend !Depend -fah -Ws ${INCLUDES} ${DFLAGS} ${THROWBACK}
d230 2
a231 2
mkunictype: mkunictype.o ${CLIB}
	${LD} -o $@@ mkunictype.o ${CLIB}
@


1.15
log
@  Copyright message changes + changes from branch + Unified
   branched/non-branched builds
Detail:
  Copyright messages changed from E-14 to Pace throughout, filename
   placed at top of file throughout, instead of in just some files.

  Merged branch's fixes into our code base, plus made it possible to
   get nice debug output in branched tree, and vfprintf() to stderr in
   RISC OS tree.  Exactly same source used in branched tree now (apart
   from OS specific files riscos.c and unix.c moving into layers
   directory structure).

Admin:
  Built for branched, both Unix and RISC OS.
  Built in RISC OS tree, and compiled into TextConv.


Version 0.45. Tagged as 'Unicode-0_45'
@
text
@d73 1
a73 1
COMPONENTZ = ucodelibz
@


1.14
log
@Added new header file iso3166.h with list of country codes
Modified encoding.c so that Chinese encodings use the correct
country code as a secondary tag to the language code so that
we can distinguish Chinese Simplified and Traditional.

Version 0.39. Tagged as 'Unicode-0_39'
@
text
@d45 1
d145 2
a146 1
	od.riscos
d189 2
@


1.13
log
@Changed encoding_table_remove_unused() so that it takes a
parameter giving the depth from which to start purging.
Fixed ISO2022 write code to free search tables.
Added unix.c for unix-targeted builds.
Updated cross-compile build.
Added unix-targeted build of library and textconv tool
in ccsolaris directory.

Version 0.36. Tagged as 'Unicode-0_36'
@
text
@d146 1
a146 1
HDRS = autojp.h charsets.h encoding.h iso10646.h languages.h unictype.h utf8.h combine.h
d195 1
@


1.12
log
@Updated ISO 2022 handling to write ISO 2022-KR and ISO 2022-CN. Fixed various
bugs.
x-Current encoding didn't work if International 1.50 wasn't loaded.
Adjusted various ISO 2022 escape sequence tables to change prioritisation.
ISO 2022 writer won't shift character set until required.

Version 0.35. Tagged as 'Unicode-0_35'
@
text
@d83 1
d105 1
d128 1
a229 4

links:
	./mklinks
	echo Made links
@


1.11
log
@Implemented SCSU and UTF-7.
Added encoding_set_flags().
Proper handling of byte order marks in UTF-16 and UCS-4.
Fixed UTF-16 surrogate writing.
Adjusted various MIME charset identifiers.
Incorporated latest Unicode Character Database (2.1.8).
Added "current system alphabet" encoding.
Created "TextConv" command line character set conversion utility.

Version 0.34. Tagged as 'Unicode-0_34'
@
text
@d44 1
d226 2
@


1.10
log
@Added utf16 into the makefiles.

Version 0.33. Not tagged
@
text
@d45 1
a45 1
CCFLAGS = -c -depend !Depend -fah -Ws ${INCLUDES} ${DFLAGS}
d88 1
d93 2
d109 1
d114 2
d131 1
d136 2
d180 1
d208 1
d216 2
a217 2
unictype.c: mkunictype data.UNIDATA2
	mkunictype < data.UNIDATA2 > c.unictype
d223 2
d239 3
a241 303
	${LB} ${LBFLAGS} -o.autojp:	c.autojp
o.autojp:	h.charsets
o.autojp:	h.autojp
o.autojp:	c.autojp
o.autojp:	h.charsets
o.autojp:	h.autojp
o.unictype:	c.unictype
o.unictype:	h.unictype
o.unictype:	h.iso10646
o.utf8:	c.utf8
o.utf8:	h.utf8
o.utf8:	h.iso10646
o.encoding:	c.encoding
o.encoding:	C:h.swis
o.encoding:	C:h.kernel
o.encoding:	h.encpriv
o.encoding:	h.encoding
o.encoding:	h.iso10646
o.encoding:	h.enc_ascii
o.encoding:	h.iso2022
o.encoding:	h.shiftjis
o.encoding:	h.johab
o.encoding:	h.bigfive
o.encoding:	h.eightbit
o.encoding:	h.enc_utf8
o.encoding:	h.enc_utf16
o.encoding:	h.enc_ucs4
o.encoding:	h.acorn
o.encoding:	h.charsets
o.encoding:	h.languages
o.encoding:	VersionNum
o.iso2022:	c.iso2022
o.iso2022:	C:h.swis
o.iso2022:	C:h.kernel
o.iso2022:	h.encpriv
o.iso2022:	h.encoding
o.iso2022:	h.iso10646
o.iso2022:	h.iso2022
o.eightbit:	c.eightbit
o.eightbit:	h.encpriv
o.eightbit:	h.encoding
o.eightbit:	h.iso10646
o.eightbit:	h.eightbit
o.shiftjis:	c.shiftjis
o.shiftjis:	h.encpriv
o.shiftjis:	h.encoding
o.shiftjis:	h.iso10646
o.shiftjis:	h.iso2022
o.shiftjis:	h.shiftjis
o.johab:	c.johab
o.johab:	h.encpriv
o.johab:	h.encoding
o.johab:	h.iso10646
o.johab:	h.iso2022
o.johab:	h.johab
o.bigfive:	c.bigfive
o.bigfive:	h.encpriv
o.bigfive:	h.encoding
o.bigfive:	h.iso10646
o.bigfive:	h.iso2022
o.bigfive:	h.bigfive
o.enc_utf8:	c.enc_utf8
o.enc_utf8:	h.encpriv
o.enc_utf8:	h.encoding
o.enc_utf8:	h.iso10646
o.enc_utf8:	h.utf8
o.enc_utf8:	h.iso10646
o.enc_utf8:	h.iso2022
o.enc_utf8:	h.enc_utf8
o.enc_ascii:	c.enc_ascii
o.enc_ascii:	h.encpriv
o.enc_ascii:	h.encoding
o.enc_ascii:	h.iso10646
o.enc_ascii:	h.enc_ascii
o.enc_utf16:	c.enc_utf16
o.enc_utf16:	h.encpriv
o.enc_utf16:	h.encoding
o.enc_utf16:	h.iso10646
o.enc_utf16:	h.iso2022
o.enc_utf16:	h.enc_utf16
o.enc_ucs4:	c.enc_ucs4
o.enc_ucs4:	h.encpriv
o.enc_ucs4:	h.encoding
o.enc_ucs4:	h.iso10646
o.enc_ucs4:	h.enc_ucs4
o.acorn:	c.acorn
o.acorn:	h.encpriv
o.acorn:	h.encoding
o.acorn:	h.iso10646
o.acorn:	h.eightbit
o.acorn:	h.acorn
o.combine:	c.combine
o.combine:	h.combine
o.combine:	h.iso10646
o.riscos:	c.riscos
o.riscos:	C:h.kernel
o.riscos:	C:h.swis
o.riscos:	h.encpriv
o.riscos:	h.encoding
o.riscos:	h.iso10646
od.autojp:	c.autojp
od.autojp:	h.charsets
od.autojp:	h.autojp
od.unictype:	c.unictype
od.unictype:	h.unictype
od.unictype:	h.iso10646
od.utf8:	c.utf8
od.utf8:	h.utf8
od.utf8:	h.iso10646
od.encoding:	c.encoding
od.encoding:	C:h.swis
od.encoding:	C:h.kernel
od.encoding:	h.encpriv
od.encoding:	h.encoding
od.encoding:	h.iso10646
od.encoding:	h.enc_ascii
od.encoding:	h.iso2022
od.encoding:	h.shiftjis
od.encoding:	h.johab
od.encoding:	h.bigfive
od.encoding:	h.eightbit
od.encoding:	h.enc_utf8
od.encoding:	h.enc_utf16
od.encoding:	h.enc_ucs4
od.encoding:	h.acorn
od.encoding:	h.charsets
od.encoding:	h.languages
od.encoding:	VersionNum
od.iso2022:	c.iso2022
od.iso2022:	C:h.swis
od.iso2022:	C:h.kernel
od.iso2022:	h.encpriv
od.iso2022:	h.encoding
od.iso2022:	h.iso10646
od.iso2022:	h.iso2022
od.eightbit:	c.eightbit
od.eightbit:	h.encpriv
od.eightbit:	h.encoding
od.eightbit:	h.iso10646
od.eightbit:	h.eightbit
od.shiftjis:	c.shiftjis
od.shiftjis:	h.encpriv
od.shiftjis:	h.encoding
od.shiftjis:	h.iso10646
od.shiftjis:	h.iso2022
od.shiftjis:	h.shiftjis
od.johab:	c.johab
od.johab:	h.encpriv
od.johab:	h.encoding
od.johab:	h.iso10646
od.johab:	h.iso2022
od.johab:	h.johab
od.bigfive:	c.bigfive
od.bigfive:	h.encpriv
od.bigfive:	h.encoding
od.bigfive:	h.iso10646
od.bigfive:	h.iso2022
od.bigfive:	h.bigfive
od.enc_utf8:	c.enc_utf8
od.enc_utf8:	h.encpriv
od.enc_utf8:	h.encoding
od.enc_utf8:	h.iso10646
od.enc_utf8:	h.utf8
od.enc_utf8:	h.iso10646
od.enc_utf8:	h.iso2022
od.enc_utf8:	h.enc_utf8
od.enc_ascii:	c.enc_ascii
od.enc_ascii:	h.encpriv
od.enc_ascii:	h.encoding
od.enc_ascii:	h.iso10646
od.enc_ascii:	h.enc_ascii
od.enc_utf16:	c.enc_utf16
od.enc_utf16:	h.encpriv
od.enc_utf16:	h.encoding
od.enc_utf16:	h.iso10646
od.enc_utf16:	h.iso2022
od.enc_utf16:	h.enc_utf16
od.enc_ucs4:	c.enc_ucs4
od.enc_ucs4:	h.encpriv
od.enc_ucs4:	h.encoding
od.enc_ucs4:	h.iso10646
od.enc_ucs4:	h.enc_ucs4
od.acorn:	c.acorn
od.acorn:	h.encpriv
od.acorn:	h.encoding
od.acorn:	h.iso10646
od.acorn:	h.eightbit
od.acorn:	h.acorn
od.combine:	c.combine
od.combine:	h.combine
od.combine:	h.iso10646
od.riscos:	c.riscos
od.riscos:	C:h.kernel
od.riscos:	C:h.swis
od.riscos:	h.encpriv
od.riscos:	h.encoding
od.riscos:	h.iso10646
oz.autojp:	c.autojp
oz.autojp:	h.charsets
oz.autojp:	h.autojp
oz.autojp:	c.autojp
oz.autojp:	h.charsets
oz.autojp:	h.autojp
oz.unictype:	c.unictype
oz.unictype:	h.unictype
oz.unictype:	h.iso10646
oz.utf8:	c.utf8
oz.utf8:	h.utf8
oz.utf8:	h.iso10646
oz.encoding:	c.encoding
oz.encoding:	C:h.swis
oz.encoding:	C:h.kernel
oz.encoding:	h.encpriv
oz.encoding:	h.encoding
oz.encoding:	h.iso10646
oz.encoding:	h.enc_ascii
oz.encoding:	h.iso2022
oz.encoding:	h.shiftjis
oz.encoding:	h.johab
oz.encoding:	h.bigfive
oz.encoding:	h.eightbit
oz.encoding:	h.enc_utf8
oz.encoding:	h.enc_utf16
oz.encoding:	h.enc_ucs4
oz.encoding:	h.acorn
oz.encoding:	h.charsets
oz.encoding:	h.languages
oz.encoding:	VersionNum
oz.iso2022:	c.iso2022
oz.iso2022:	C:h.swis
oz.iso2022:	C:h.kernel
oz.iso2022:	h.encpriv
oz.iso2022:	h.encoding
oz.iso2022:	h.iso10646
oz.iso2022:	h.iso2022
oz.eightbit:	c.eightbit
oz.eightbit:	h.encpriv
oz.eightbit:	h.encoding
oz.eightbit:	h.iso10646
oz.eightbit:	h.eightbit
oz.shiftjis:	c.shiftjis
oz.shiftjis:	h.encpriv
oz.shiftjis:	h.encoding
oz.shiftjis:	h.iso10646
oz.shiftjis:	h.iso2022
oz.shiftjis:	h.shiftjis
oz.johab:	c.johab
oz.johab:	h.encpriv
oz.johab:	h.encoding
oz.johab:	h.iso10646
oz.johab:	h.iso2022
oz.johab:	h.johab
oz.bigfive:	c.bigfive
oz.bigfive:	h.encpriv
oz.bigfive:	h.encoding
oz.bigfive:	h.iso10646
oz.bigfive:	h.iso2022
oz.bigfive:	h.bigfive
oz.enc_utf8:	c.enc_utf8
oz.enc_utf8:	h.encpriv
oz.enc_utf8:	h.encoding
oz.enc_utf8:	h.iso10646
oz.enc_utf8:	h.utf8
oz.enc_utf8:	h.iso10646
oz.enc_utf8:	h.iso2022
oz.enc_utf8:	h.enc_utf8
oz.enc_ascii:	c.enc_ascii
oz.enc_ascii:	h.encpriv
oz.enc_ascii:	h.encoding
oz.enc_ascii:	h.iso10646
oz.enc_ascii:	h.enc_ascii
oz.enc_utf16:	c.enc_utf16
oz.enc_utf16:	h.encpriv
oz.enc_utf16:	h.encoding
oz.enc_utf16:	h.iso10646
oz.enc_utf16:	h.iso2022
oz.enc_utf16:	h.enc_utf16
oz.enc_ucs4:	c.enc_ucs4
oz.enc_ucs4:	h.encpriv
oz.enc_ucs4:	h.encoding
oz.enc_ucs4:	h.iso10646
oz.enc_ucs4:	h.enc_ucs4
oz.acorn:	c.acorn
oz.acorn:	h.encpriv
oz.acorn:	h.encoding
oz.acorn:	h.iso10646
oz.acorn:	h.eightbit
oz.acorn:	h.acorn
oz.combine:	c.combine
oz.combine:	h.combine
oz.combine:	h.iso10646
oz.riscos:	c.riscos
oz.riscos:	C:h.kernel
oz.riscos:	C:h.swis
oz.riscos:	h.encpriv
oz.riscos:	h.encoding
oz.riscos:	h.iso10646
o.mkunictype:	c.mkunictype
o.mkunictype:	h.unictype
o.mkunictype:	h.iso10646
o.mkunictype:	c.mkunictype
o.mkunictype:	h.unictype
o.mkunictype:	h.iso10646
@


1.9
log
@Created new file riscos.c for RISC OS specific functions. Rest of
library should remain portable. Moved function to load a map file
into that new file. Added #defines for directory separator and
wild card characters and updated the various file names.

Version 0.33. Tagged as 'Unicode-0_33'
@
text
@d184 1
d226 303
a528 3
	${LB} ${LBFLAGS} -o ${COMPONENTD} ${OBJSD}

# Dynamic dependencies:
@


1.8
log
@Added Korean Johab encoding (untested).
Reinstated use of data->data relocations.

Version 0.32. Not tagged
@
text
@d93 2
a94 1
	combine.o
d111 2
a112 1
	oz.combine
d130 2
a131 1
	od.combine
@


1.7
log
@Updated dependencies in Makefile

Version 0.21. Not tagged
@
text
@d45 1
a45 1
CCFLAGS = -c -depend !Depend -fah ${INCLUDES} ${DFLAGS}
d86 1
d103 1
d121 1
@


1.6
log
@Added ISO 2022-JP-1. Faffed around with ISO 2022-JP-x table lists.

Version 0.19. Tagged as 'Unicode-0_19'
@
text
@d145 1
a145 1
all:	${LIBS} unictype.c
d212 1
a212 1
${TARGET}: ${OBJS} local_dirs
d215 1
a215 1
${TARGETZ}: ${OBJSZ} local_dirs
d218 1
a218 1
${TARGETD}: ${OBJSD} local_dirs
@


1.5
log
@Added combine functions.

Version 0.16. Tagged as 'Unicode-0_16'
@
text
@d159 3
a161 3
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} oz.* ${WFLAGS}
        ${WIPE} od.* ${WFLAGS}
@


1.4
log
@Corrected Big5 definition number in charsets.h.
Fixed Big5 encoding_write (checked for !cc rather than cc).
Removed unictype.c which is built from mkunictype.

Version 0.13. Tagged as 'Unicode-0_13'
@
text
@d91 2
a92 1
	acorn.o
d107 2
a108 1
	oz.acorn
d124 2
a125 1
	od.acorn
d127 1
a127 1
HDRS = autojp.h charsets.h encoding.h iso10646.h languages.h unictype.h utf8.h
d172 1
@


1.3
log
@Recreated acorn.c to hold new encoding cdAcornFuzzy. This writes an
Acorn Latin1 encoding using fuzzy mapping to get the greatest number
of displayable characters. Reads as Acorn.Latin1.

Version 0.07. Tagged as 'Unicode-0_07'
@
text
@d131 1
a131 1
.SUFFIXES: .oz .od
d140 1
a140 1
# build a the library:
d142 1
a142 1
all:	${LIBS}
a200 2
unictype.o od.unictype oz.unictype: unictype.c

a204 3
#od.unictype: unictype.c
#	${CC} ${CCFLAGS} -DROM=0 -DDEBUG=1         -o $@@ unictype.c

a217 73
o.mkunictype:	c.mkunictype
o.mkunictype:	h.unictype
o.mkunictype:	h.iso10646
o.mkunictype:	c.mkunictype
o.mkunictype:	h.unictype
o.mkunictype:	h.iso10646
oz.utf8:	c.utf8
oz.utf8:	h.utf8
oz.utf8:	h.iso10646
oz.encoding:	c.encoding
oz.encoding:	C:h.swis
oz.encoding:	C:h.kernel
oz.encoding:	h.encpriv
oz.encoding:	h.encoding
oz.encoding:	h.iso10646
oz.encoding:	h.enc_ascii
oz.encoding:	h.iso2022
oz.encoding:	h.shiftjis
oz.encoding:	h.bigfive
oz.encoding:	h.eightbit
oz.encoding:	h.enc_utf8
oz.encoding:	h.enc_utf16
oz.encoding:	h.enc_ucs4
oz.encoding:	h.charsets
oz.encoding:	VersionNum
oz.iso2022:	c.iso2022
oz.iso2022:	C:h.swis
oz.iso2022:	C:h.kernel
oz.iso2022:	h.encpriv
oz.iso2022:	h.encoding
oz.iso2022:	h.iso10646
oz.iso2022:	h.iso2022
oz.eightbit:	c.eightbit
oz.eightbit:	h.encpriv
oz.eightbit:	h.encoding
oz.eightbit:	h.iso10646
oz.eightbit:	h.eightbit
oz.shiftjis:	c.shiftjis
oz.shiftjis:	h.encpriv
oz.shiftjis:	h.encoding
oz.shiftjis:	h.iso10646
oz.shiftjis:	h.iso2022
oz.shiftjis:	h.shiftjis
oz.bigfive:	c.bigfive
oz.bigfive:	h.encpriv
oz.bigfive:	h.encoding
oz.bigfive:	h.iso10646
oz.bigfive:	h.iso2022
oz.bigfive:	h.bigfive
oz.enc_utf8:	c.enc_utf8
oz.enc_utf8:	h.encpriv
oz.enc_utf8:	h.encoding
oz.enc_utf8:	h.iso10646
oz.enc_utf8:	h.utf8
oz.enc_utf8:	h.iso10646
oz.enc_utf8:	h.iso2022
oz.enc_utf8:	h.enc_utf8
oz.enc_ascii:	c.enc_ascii
oz.enc_ascii:	h.encpriv
oz.enc_ascii:	h.encoding
oz.enc_ascii:	h.iso10646
oz.enc_ascii:	h.enc_ascii
oz.enc_utf16:	c.enc_utf16
oz.enc_utf16:	h.encpriv
oz.enc_utf16:	h.encoding
oz.enc_utf16:	h.iso10646
oz.enc_utf16:	h.iso2022
oz.enc_utf16:	h.enc_utf16
oz.enc_ucs4:	c.enc_ucs4
oz.enc_ucs4:	h.encpriv
oz.enc_ucs4:	h.encoding
oz.enc_ucs4:	h.iso10646
oz.enc_ucs4:	h.enc_ucs4
@


1.2
log
@Added new file 'languages.h' with some ISO639 language codes.
Added a default language field to each encoding (using above codes).
Added a max char size field to each encoding.
Tidied up some of the reencoders behaviour when output ptr NULL.
Fixed a load of charset numbers which were wrong.
New UTF8 function to skiop multiple characters in a string.
Fixed RISC OS build which was out of date.

Version 0.04. Tagged as 'Unicode-0_04'
@
text
@d90 2
a91 1
	enc_ucs4.o
d105 3
a107 1
	oz.enc_ucs4
d121 2
a122 1
	od.enc_ucs4
@


1.1
log
@Initial version checked in

Version 0.01. Not tagged
@
text
@d84 1
a84 4
	koi8r.o \
	microsoft.o \
	acorn.o \
	apple.o \
d98 1
a98 4
	oz.koi8r \
	oz.microsoft \
	oz.acorn \
	oz.apple \
d112 1
a112 4
	od.koi8r \
	od.microsoft \
	od.acorn \
	od.apple \
d120 1
a120 1
HDRS = autojp.h charsets.h encoding.h iso10646.h unictype.h utf8.h
d122 1
a122 1
LIBS = ${TARGET} ${TARGETD} 
d167 1
d175 1
a177 1
#	${CP} ${TARGETZ} ${UNICODELIBDIR}.o.* ${CPFLAGS}
d197 8
a204 1
unictype.o oz.unictype od.unictype: unictype.c
d219 73
@
