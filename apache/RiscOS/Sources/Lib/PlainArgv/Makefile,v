head	1.5;
access;
symbols
	PlainArgv-0_05:1.5
	PlainArgv-0_04:1.4
	PlainArgv-0_03:1.3
	RO_5_07:1.2
	dellis_autobuild_BaseSW:1.2
	sbrodie_sedwards_16Mar2000:1.2
	dcotton_Spin_Merge:1.1.1.4
	PlainArgv-0_02:1.2
	dcotton_autobuild_BaseSW:1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	Ursula_RiscPC:1.1.0.8
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	rthornb_UrsulaBuild_01May1998:1.1
	afrost_NC2_Generic:1.1.1.4
	afrost_Funai01-33:1.1.1.4
	Spinner_RCA116:1.1.1.4
	Spinner_B20_2:1.1.1.4
	Spinner_19_3:1.1.1.4
	Spinner_B18:1.1.1.4
	Spinner_B17:1.1.1.4
	Spinner_B15:1.1.1.4
	Spinner_B14:1.1.1.4
	Spinner_B13:1.1.1.4
	Spinner_B12:1.1.1.4
	Spinner_B10:1.1.1.4
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.1.0.4
	Ursula_bp:1.1
	Spinner_B7:1.1.1.4
	ARTtmp_merge:1.1.1.2
	Spin_3Apr97:1.1.1.2
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.2.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.12.13.10.45.16;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	vj4meFaOKWEVRR1y;

1.4
date	2012.10.09.10.54.54;	author srevill;	state Exp;
branches;
next	1.3;
commitid	V959Fk5cG8RAtHnw;

1.3
date	2008.04.25.01.15.28;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	99.10.19.16.03.47;	author dcotton;	state Exp;
branches;
next	1.1;

1.1
date	97.03.18.15.33.09;	author jsmith;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.15.33.09;	author jsmith;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.19.18.08.03;	author jsmith;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	97.04.07.16.32.27;	author jsmith;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.04.07.17.48.01;	author jsmith;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Makefile recreated from fragments
Note, the original makefile passed -DDesk__MODULE_CLIENT into the module variant, however inspection of Desk shows this just defines Desk__zm, neither of which are used in the library sources. To fit within the shared makefile scheme (which doesn't currently allow switches specific to library variants) this has been dropped.
Binary with and without the switch came out the same too.

Version 0.05. Tagged as 'PlainArgv-0_05'
@
text
@# Copyright 1997 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for PlainArgv
#

COMPONENT = PlainArgv
OBJS      = ToBuffer StrTok Get Find CopyPArgv CFilename
HDRS      = PlainArgv StrTok

include CLibrary

# Dynamic dependencies:
@


1.4
log
@Removed annoying errors during clean phases

Version 0.04. Tagged as 'PlainArgv-0_04'
@
text
@d15 1
a15 3
# Template makefile for library in RISC OS source tree.

# This is the only project-specific part of this makefile
a16 63
COMPONENT	= PlainArgv

# Copy is used in a number of place in the same way, so we put
#appropriate flags into a macro:
CopyFlags	= ~cfr~v


# -------------------------------------------------------
# Now all the different targets we can be asked to build:
# -------------------------------------------------------


all:
	Echo	Library $(COMPONENT): Please supply a target.


clean:
	x Wipe o.Lib* ~c~r~v
	Echo Library $(COMPONENT): 'clean' finished.


clean_all:	clean
	x Wipe		@@.o.Sources.!Module.Sources ~c~vr
	x Wipe		@@.o.Sources.!Normal.Sources ~c~vr
	Echo		Library $(COMPONENT): 'clean_all' finished.


export:	export_$(PHASE)

export_hdrs:
	CDir		<Lib$Dir>.$(COMPONENT)
	CDir		<Lib$Dir>.$(COMPONENT).h
	Copy		@@.h.$(COMPONENT)	<Lib$Dir>.$(COMPONENT).h.$(COMPONENT)	$(CopyFlags)
	Copy		@@.h.StrTok		<Lib$Dir>.$(COMPONENT).h.StrTok		$(CopyFlags)
	Copy		@@.VersionNum		<Lib$Dir>.$(COMPONENT).LibVersion	$(CopyFlags)
	IfThere		@@.$(COMPONENT)	Then Copy @@.$(COMPONENT) <Lib$Dir>.$(COMPONENT).$(COMPONENT) $(CopyFlags)
	Echo		Library $(COMPONENT): 'export_hdrs' finished.


export_libs:
	CDir		<Lib$Dir>.$(COMPONENT)
	CDir		<Lib$Dir>.$(COMPONENT).o
	Obey            @@.o.Sources.!Module.!Run
	Obey            @@.o.Sources.!Normal.!Run
	Copy            @@.o.Lib   <Lib$Dir>.$(COMPONENT).o.Lib   $(CopyFlags)
	Copy            @@.o.Lib_M <Lib$Dir>.$(COMPONENT).o.Lib_M $(CopyFlags)
	Echo		Library $(COMPONENT): 'export_libs' finished.


resources:
	Echo		Library $(COMPONENT): 'resources' finished.

rom:
	Echo		Library $(COMPONENT): 'rom' finished.

install_rom:
	Echo		Library $(COMPONENT): 'install_rom' finished.

rom_link:
	Echo		Library $(COMPONENT): 'rom_link' finished.

ram:
	Echo		Library $(COMPONENT): 'ram' finished.
d18 3
d22 1
@


1.3
log
@  Now suitable for release.
Detail:
  Removed dependence upon Every and Makatic tools, at least for the
  standard application and module builds. Makatic can still be used if you
  have it on your run path (and this will help if you want to create one
  of the debug builds).
Admin:
  Tested briefly in a ROM build.

Version 0.03. Tagged as 'PlainArgv-0_03'
@
text
@d36 1
a36 1
	Wipe o.Lib* ~c~r~v
d41 2
a42 2
	Wipe		@@.o.Sources.!Module.Sources ~c~vr
	Wipe		@@.o.Sources.!Normal.Sources ~c~vr
@


1.2
log
@Merged Spinner branch. Put under srccommit control.

Version 0.02. Tagged as 'PlainArgv-0_02'
@
text
@d41 2
a42 1
	Every.Every2	-c "@@.o.Sources.!*.Sources @@.o.Sources.!*.Makefile" wipe %0 ~c~vr
d50 4
a53 1
	Copy		@@.h		<Lib$Dir>.$(COMPONENT).h		$(CopyFlags)
d61 4
a64 2
	Every.Every2	-c "@@.o.Sources.!Module.!Run @@.o.Sources.!Normal.!Run" Obey %0
	Every.Every2	-c @@.o.lib* copy %0 <Lib$Dir>.$(COMPONENT).o.%1		$(CopyFlags)
@


1.1
log
@Initial revision
@
text
@d50 1
a50 1
	Copy		@@.$(COMPONENT)	<Lib$Dir>.$(COMPONENT).$(COMPONENT)	$(CopyFlags)
d57 1
a57 1
	Every.Every2	-c @@.o.Sources.!* Obey %0.!Run
@


1.1.1.1
log
@Initial import of PlainArgv library
@
text
@@


1.1.1.2
log
@Only builds module and normal versions
@
text
@d57 1
a57 1
	Every.Every2	-c "@@.o.Sources.!* -x ..!MemCheck ..!Mod_D ..!Debug" Obey %0.!Run
@


1.1.1.3
log
@Only builds module and normal version of library
@
text
@d50 1
a50 1
	IfThere		@@.$(COMPONENT)	Then Copy @@.$(COMPONENT) <Lib$Dir>.$(COMPONENT).$(COMPONENT) $(CopyFlags)
d57 1
a57 1
	Every.Every2	-c "@@.o.Sources.!Module.!Run @@.o.Sources.!Normal.!Run" Obey %0.!Run
@


1.1.1.4
log
@Only builds normal and module version of libraries
@
text
@d57 1
a57 1
	Every.Every2	-c "@@.o.Sources.!Module.!Run @@.o.Sources.!Normal.!Run" Obey %0
@
