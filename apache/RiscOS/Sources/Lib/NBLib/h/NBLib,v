head	1.16;
access;
symbols
	NBLib-0_28:1.16
	dellis_autobuild_BaseSW:1.16
	dcotton_autobuild_BaseSW:1.16
	nbingham_NBLib-0_27:1.16
	NBLib-0_27:1.16
	NBLib-0_26:1.15
	NBLib-0_25:1.14
	NBLib-0_24:1.12
	NBLib-0_23:1.12
	NBLib-0_22:1.12
	NBLib-0_21:1.11
	NBLib-0_20:1.10
	NBLib-0_19:1.10
	NBLib-0_18:1.10
	NBLib-0_17:1.10
	NBLib-0_16:1.9
	NBLib-0_15:1.8
	NBLib-0_14:1.7
	NBLib-0_13:1.6
	NBLib-0_12:1.5
	NBLib-0_11:1.5
	NBLib-0_10:1.5
	NBLib-0_09:1.5
	NBLib-0_08:1.4
	NBLib-0_07:1.3
	NBLib-0_06:1.2
	NBLib-0_05:1.2
	NBLib-0_04:1.2
	NBLib-0_03:1.2
	NBLib-0_02:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.16
date	99.03.22.11.35.21;	author nbingham;	state Exp;
branches;
next	1.15;

1.15
date	99.03.05.16.50.09;	author nbingham;	state Exp;
branches;
next	1.14;

1.14
date	99.03.03.15.00.40;	author nbingham;	state Exp;
branches;
next	1.13;

1.13
date	99.01.12.09.06.56;	author nbingham;	state Exp;
branches;
next	1.12;

1.12
date	98.11.24.21.54.27;	author nbingham;	state Exp;
branches;
next	1.11;

1.11
date	98.11.20.15.10.42;	author nbingham;	state Exp;
branches;
next	1.10;

1.10
date	98.11.06.17.34.25;	author nbingham;	state Exp;
branches;
next	1.9;

1.9
date	98.11.06.13.36.04;	author jberanek;	state Exp;
branches;
next	1.8;

1.8
date	98.11.06.13.30.05;	author jberanek;	state Exp;
branches;
next	1.7;

1.7
date	98.11.06.13.21.55;	author jberanek;	state Exp;
branches;
next	1.6;

1.6
date	98.11.06.12.05.29;	author nbingham;	state Exp;
branches;
next	1.5;

1.5
date	98.10.21.16.41.19;	author nbingham;	state Exp;
branches;
next	1.4;

1.4
date	98.10.20.14.26.07;	author nbingham;	state Exp;
branches;
next	1.3;

1.3
date	98.10.19.15.11.43;	author nbingham;	state Exp;
branches;
next	1.2;

1.2
date	98.09.28.13.02.15;	author nbingham;	state Exp;
branches;
next	1.1;

1.1
date	98.09.24.12.30.28;	author nbingham;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.24.12.30.28;	author nbingham;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Forgot to include stdio.h in NBLib.h.

Version 0.26. Not tagged
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/* File:    NBLib.h                                                     */
/* Purpose: Main header file for NBLib.                                 */
/*                                                                      */
/* Author:  Neil Bingham (mailto:NBingham@@acorn.com)                    */
/* History: 0.00  - Tue 14th October 1997                               */
/*                  Created.                                            */
/************************************************************************/


/* ================================= FUNCTION DECLARATIONS ====================================== */

#ifndef __NBLib_h
#define __NBLib_h


#ifdef __cplusplus
extern "C" {
#endif

/* Include Toolbox.h.  Required for the data types used in function declarations
 * below (NB_Window.c, NB_Gadgets.c & NB_Objects.c).
 */
#include <stdio.h>
#include "tboxlibs/Toolbox.h"

/* ----------------------------------------- NB_Dirs.C ------------------------------------------ */
extern _kernel_oserror *nb_directory_create(unsigned int, char *, char *);
extern _kernel_oserror *nb_directory_exists(unsigned int, char *, char *);
extern _kernel_oserror *nb_directory_open(unsigned int, char *, char *);
extern _kernel_oserror *nb_directory_lock(unsigned int, char *, char *);
extern _kernel_oserror *nb_directory_unlock(unsigned int, char *, char *);

/* ----------------------------------------- NB_Files.C ----------------------------------------- */

extern _kernel_oserror *nb_file_copy(unsigned int, char *, char *);
extern _kernel_oserror *nb_file_delete(unsigned int, char *, char *);
extern _kernel_oserror *nb_file_exists(unsigned int, char *, char*, int);
extern _kernel_oserror *nb_file_find_filetype(unsigned int, char *, int, char *, int);
extern _kernel_oserror *nb_file_get_datestamp(unsigned int, char *, char *, char *, int);
extern _kernel_oserror *nb_file_get_leafname(unsigned int, char *, char *, int);
extern int nb_file_get_lines(unsigned int, char *, char *);
extern int nb_file_get_size(unsigned int, char *, char *);
extern _kernel_oserror *nb_file_get_parent_dir(unsigned int, char *, char *, int);
extern _kernel_oserror *nb_file_get_filetype(unsigned int, char *, char *, int *);
extern _kernel_oserror *nb_file_set_filetype(unsigned int, char *, char *, int);
extern _kernel_oserror *nb_file_stamp(unsigned int , char *, char *);
extern _kernel_oserror *nb_file_lock(unsigned int , char *, char *);
extern _kernel_oserror *nb_file_unlock(unsigned int , char *, char *);
extern int nb_canonicalise_path(char **path, char *dir);

/* ----------------------------------------- NB_Flags.C ----------------------------------------- */

extern int nb_set_bits(char *);

#define nb_bit_set(flags, bit) \
  ((bit<32) ? \
     (flags & (1 << bit)) ? TRUE : FALSE \
  : FALSE)

/* ---------------------------------------- NB_Gadgets.C ---------------------------------------- */

extern int nb_writable_is_empty(unsigned int, ObjectId, ComponentId);
extern int nb_displayfield_is_empty(unsigned int, ObjectId, ComponentId);
extern int nb_writable_strlen(unsigned int, ObjectId, ComponentId);
extern int nb_displayfield_strlen(unsigned int, ObjectId, ComponentId);
extern int nb_optionbutton_selected(unsigned int, ObjectId, ComponentId);
extern int nb_radiobutton_selected(unsigned int, ObjectId, ComponentId);
extern int nb_stringset_is_empty(unsigned int, ObjectId, ComponentId);
extern int nb_stringset_strlen(unsigned int, ObjectId, ComponentId);
extern int nb_scrolllist_strlen(unsigned int, ObjectId, ComponentId, int);
extern int nb_scrolllist_get_num_selected(unsigned int, ObjectId, ComponentId);
extern _kernel_oserror *nb_scrolllist_force_riscos_behaviour(unsigned int, ToolboxEvent *, ObjectId,
                                                             ComponentId);
extern int nb_scrolllist_riscos_selection(int, ToolboxEvent *, IdBlock *, void *);
extern _kernel_oserror *nb_gadget_set_int_value(unsigned int, ObjectId, ComponentId, int);
extern _kernel_oserror *nb_actionbutton_select_click_close(unsigned int, unsigned int, ObjectId);
extern void nb_scrolllist_selection(unsigned int, ObjectId, ComponentId);
extern int nb_textarea_strlen(unsigned int, ObjectId, ComponentId);
extern _kernel_oserror *nb_stringset_get_selected_index(unsigned int, ObjectId, ComponentId, int *);

/* ----------------------------------------- NB_HTML.C ------------------------------------------ */

extern int nb_html_escape_memtomem(const char *const input, char *const output,
                                   const size_t output_size);
extern int nb_html_escape_memtofile(const char *const input, FILE *fp);
extern int nb_html_escape_filetofile(FILE *input, FILE *output);

/* ----------------------------------------- NB_Misc.C ------------------------------------------ */

/* OS */
void			 nb_beep(void);
int			 nb_ensure_application(unsigned int, char *);
int			 nb_ensure_module(unsigned int, char *);
void			 nb_get_date(unsigned int, int *, int *, int *, int *);
void			 nb_get_time(unsigned int, int *, int *, int *);
void			 nb_hourglass(unsigned int);
void			 nb_get_screenmode(unsigned int, int *, int *);
int			 nb_demo_expired(int, int, int);

/* ---------------------------------------- NB_MsgTran.C ---------------------------------------- */

extern _kernel_oserror *nb_messagetrans_open_file(unsigned int flags, char *filename,
                                                  MessagesFD *file_id, char **buffer);
extern _kernel_oserror *nb_messagetrans_close_file(unsigned int flags, MessagesFD file_id,
                                                   char *buffer);
extern _kernel_oserror *nb_messagetrans_file_info(unsigned int, char *, int *);
extern char *nb_messagetrans_lookup(MessagesFD, char *);
extern int nb_messagetrans_token_length(MessagesFD, char *);
extern int nb_messagetrans_lookup_params (MessagesFD *msgblock, char *tag, char *param_1,
                                          char *param_2, char *param_3, char *param_4, char *text,
                                          int buffer_size, int *nbytes);
extern void nb_messagetrans_wimp_error(MessagesFD, char *);
extern void nb_messagetrans_params_wimp_error(MessagesFD, char *, char *, char *, char *,char *);
extern int nb_messagetrans_wimp_decide_error(MessagesFD, char *);
extern char *nb_messagetrans_enumerate_no(unsigned int, char *);

/* ---------------------------------------- NB_Objects.C ---------------------------------------- */

/* Menus */
int			 nb_menu_item_strlen(unsigned int, ObjectId, ComponentId);
/* ProgInfos */
_kernel_oserror		*nb_proginfo_setup(unsigned int, ObjectId, char *, int);
int			 nb_object_is_open(unsigned int, ObjectId);


/* ---------------------------------------- NB_String.C ----------------------------------------- */
void			 nb_mid_string(unsigned int, char *, char *, int, int);
void			 nb_right_string(unsigned int, char *, char *, int);
extern int		 nb_case_insensitive_strcmp(const char *, const char *);
extern int		 nb_case_insensitive_strncmp(const char *, const char *, size_t);
_kernel_oserror		*nb_strcpy_malloc(char **, char *);
_kernel_oserror		*nb_strncpy_malloc(char **, char *, size_t);
_kernel_oserror		*nb_strcpy_malloc_buffer(char **, char *, size_t);
_kernel_oserror		*nb_strncpy_malloc_buffer(char **, char *, size_t, size_t);
extern int		 nb_string_empty(char *str);
_kernel_oserror		*nb_gstrans_string(char **processed, char *str, int buffer_size);


/* ---------------------------------------- NB_TaskWin.C ---------------------------------------- */

_kernel_oserror		*nb_taskwindow_visible_start(unsigned int, int, char *, char *);
_kernel_oserror		*nb_taskwindow_invisible_start(unsigned int, int, int, char *, int);
_kernel_oserror		*nb_taskwindow_invisible_terminate(unsigned int, int, int);
_kernel_oserror		*nb_taskwindow_invisible_pause(unsigned int, int, int);
_kernel_oserror		*nb_taskwindow_invisible_resume(unsigned int, int, int);
void			 nb_taskwindow_remove_garbage(unsigned int, char *, int, char *);
int			 nb_taskwindow_output_is_multiline(unsigned int, char *, int);
int			 nb_taskwindow_output_is_split(unsigned int, char *, int);
int			 nb_taskwindow_count_lines(unsigned int, char *);
void			 nb_taskwindow_return_line(unsigned int, char *, int, char *);


/* ---------------------------------------- NB_Version.C ---------------------------------------- */
const char		*nb_version(void);


/* ---------------------------------------- NB_Window.C ----------------------------------------- */
void			 nb_open_window(unsigned int, ObjectId, int, int, int, int);
_kernel_oserror		*nb_window_title_add_star(unsigned int, ObjectId);
_kernel_oserror		*nb_window_title_remove_star(unsigned int, ObjectId);
int			 nb_window_title_has_star(unsigned int, ObjectId);
_kernel_oserror		*nb_window_nest_subwindow(unsigned int,ObjectId,ObjectId,int,int,int,int);


#ifdef __cplusplus
}
#endif

/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ END +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
#endif


@


1.15
log
@Log:
!Mk        - increased Wimpslot.
!MkExport  -   "   "    "   "
NB_Files   - Fixed canonicalise code that was checked in broken in 0.25.
Added code to escape text to remove reserved HTML characters and replace
with escaped sequences.  This code was originally written by BAL for NCMail,
but is now used in more than one place hence it is incorporated here.

Version 0.26. Tagged as 'NBLib-0_26'
@
text
@d38 1
@


1.14
log
@Updates to File & MessageTrans code required for the Translator tool.
Makefile tweaked to provide more readable output, !MkClean has StripDepend
and command-line EraseCVS added.

Version 0.25. Tagged as 'NBLib-0_25'
@
text
@d95 7
@


1.13
log
@Summary
-------
  * Added more string handling functions.
  * Completed documentation of library.
Detail
------
  * Code now fully documented using AHodgkinson's source code doc tools.
    !MKDocs produces StrongHelp & HTML versions.

Version 0.24. Not tagged
@
text
@d63 1
d109 4
a112 1
extern _kernel_oserror *nb_messagetrans_close_file(unsigned int, MessagesFD);
d143 1
@


1.12
log
@Added string null checker code.

Version 0.22. Tagged as 'NBLib-0_22'
@
text
@d135 3
a139 6

/* ---------------------------------------- NB_SysInfo.C ---------------------------------------- */
void			 nb_processor_type(unsigned int, char*);
void			 nb_get_os_version(unsigned int, char*, int);
void			 nb_get_unique_id(unsigned int, char *, char *);
void			 nb_get_computer_type(unsigned int, char *, int);
@


1.11
log
@Fixed type in component version identification string.  Added #include for
Toolbox.h due to Toolbox types being used in the header.

Version 0.21. Tagged as 'NBLib-0_21'
@
text
@d135 1
@


1.10
log
@Fixed a mistake in NBLib.h which crept in during the last checkin.

Version 0.17. Tagged as 'NBLib-0_17'
@
text
@d35 4
@


1.9
log
@ * Ahem. Function declaration was still wrong.  Now _definitely_ fixed.


Version 0.16. Tagged as 'NBLib-0_16'
@
text
@d108 3
a110 2
extern char *nb_messagetrans_lookup_params(MessagesFD *, char *, char *, char *, char *, char *,
                                           char *, int, int *);
@


1.8
log
@ * Previous function declaration duplication managed to get one function
   declaration out of step with the local one.  Fixed this in "NBLib.h"


Version 0.15. Tagged as 'NBLib-0_15'
@
text
@d108 1
a108 1
extern char *nb_messagetrans_lookup_params(MessagesFD, char *, char *, char *, char *, char *,
@


1.7
log
@ * Fixed typo in !MkExport build obey file

 * Removed function declarations for exported functions out of the
   individual header files, so they are no longer duplicated in 2 header
   files.  The main build-time header file now includes the main exported
   header file "NBLib"

 * Replaced nb_bit_set function with a much more efficient macro.

 * Made nb_set_bits more efficient.


Version 0.14. Tagged as 'NBLib-0_14'
@
text
@d108 2
a109 1
extern char *nb_messagetrans_lookup_params(MessagesFD, char *, char *, char *, char *, char *);
@


1.6
log
@Fixed a couple of memory leaks and tidied up a few functions.  Split up some
of the code into more logical files.  Version reporting function added.
Moved to BAL's two-stage Makefile system.

Version 0.13. Tagged as 'NBLib-0_13'
@
text
@a61 1
extern int nb_bit_set(unsigned int, int);
d63 5
@


1.5
log
@Added C++ wrappers to main header file.

Version 0.09. Tagged as 'NBLib-0_09'
@
text
@d16 2
a17 3
/* File:    Export.h                                                    */
/* Purpose: Preprocessor directives for all functions to be exported in */
/*          the library.                                                */
d27 4
a95 8
/* String Processing */
void			 nb_mid_string(unsigned int, char *, char *, int, int);
void			 nb_right_string(unsigned int, char *, char *, int);
extern int		 nb_case_insensitive_strcmp(const char *, const char *);
extern int		 nb_case_insensitive_strncmp(const char *, const char *, size_t);
_kernel_oserror		*nb_strcpy_malloc(char **, char *);


d118 9
d146 5
d158 1
d164 1
@


1.4
log
@Added code to allow directories to be locked.

Version 0.08. Tagged as 'NBLib-0_08'
@
text
@d28 4
d148 4
@


1.3
log
@Added code to nb_misc.c.  Updated Docs.

Version 0.07. Tagged as 'NBLib-0_07'
@
text
@d33 2
@


1.2
log
@Added two new functions to NB_Files.c

Version 0.03. Tagged as 'NBLib-0_03'
@
text
@d92 3
@


1.1
log
@Initial revision
@
text
@d48 2
a49 1
extern _kernel_oserror *nb_file_set_lock_permissions(unsigned int , char *, char *);
@


1.1.1.1
log
@Initial import of NBLib.

@
text
@@
