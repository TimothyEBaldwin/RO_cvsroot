head	1.6;
access;
symbols
	ModMalloc-0_07:1.6
	ModMalloc-0_06:1.5
	ModMalloc-0_05:1.4
	ModMalloc-0_04:1.3
	RO_5_07:1.2
	ModMalloc-0_03:1.2
	dellis_autobuild_BaseSW:1.2
	sbrodie_sedwards_16Mar2000:1.2
	ModMalloc-0_02:1.2
	dcotton_autobuild_BaseSW:1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.2
	Ursula_RiscPC:1.2.0.4
	rthornb_UrsulaBuild-19Aug1998:1.2
	UrsulaBuild_FinalSoftload:1.2
	rthornb_UrsulaBuild-12Aug1998:1.2
	aglover_UrsulaBuild-05Aug1998:1.2
	rthornb_UrsulaBuild-29Jul1998:1.2
	rthornb_UrsulaBuild-22Jul1998:1.2
	rthornb_UrsulaBuild-15Jul1998:1.2
	rthornb_UrsulaBuild-07Jul1998:1.2
	rthornb_UrsulaBuild-17Jun1998:1.2
	rthornb_UrsulaBuild-03Jun1998:1.2
	rthornb_UrsulaBuild-27May1998:1.2
	rthornb_UrsulaBuild-21May1998:1.2
	rthornb_UrsulaBuild_01May1998:1.2
	afrost_NC2_Generic:1.1.1.5
	afrost_Funai01-33:1.1.1.5
	Spinner_RCA116:1.1.1.5
	Spinner_B20_2:1.1.1.5
	Spinner_19_3:1.1.1.5
	Spinner_B18:1.1.1.5
	Spinner_B17:1.1.1.5
	Spinner_B15:1.1.1.5
	Spinner_B14:1.1.1.5
	Spinner_B13:1.1.1.5
	Spinner_B12:1.1.1.5
	Spinner_B10:1.1.1.5
	Spin_merge:1.1.1.5
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.2.0.2
	Ursula_bp:1.2
	Spinner_B7:1.1.1.5
	ARTtmp_merge:1.1.1.2
	Spin_3Apr97:1.1.1.3
	RCA_bp:1.1
	RCA:1.1.0.2
	ARTtmp:1.1.1.2.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.12.13.10.36.06;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	Dy0rcHdPfe7MOR1y;

1.5
date	2014.10.18.13.29.19;	author srevill;	state Exp;
branches;
next	1.4;
commitid	1JwckGZmD1vOzGUx;

1.4
date	2012.01.14.17.51.05;	author srevill;	state Exp;
branches;
next	1.3;
commitid	xijE1OX3OFrsqaPv;

1.3
date	2008.04.25.00.40.06;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	97.05.21.10.06.54;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.03.18.17.15.19;	author jsmith;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.17.15.19;	author jsmith;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.03.19.18.07.46;	author jsmith;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	97.03.27.16.57.18;	author jsmith;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.04.07.17.13.52;	author jsmith;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.04.07.17.47.58;	author jsmith;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Makefile recreated from fragments

Version 0.07. Tagged as 'ModMalloc-0_07'
@
text
@# Copyright 1997 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for ModMalloc
#

COMPONENT = ModMalloc
OBJS      = modm
HDRS      = ModMalloc

include CLibrary

# Dynamic dependencies:
@


1.5
log
@Added an install phase to support CTools builds.

Version 0.06. Tagged as 'ModMalloc-0_06'
@
text
@d15 1
a15 3
# Template makefile for library in RISC OS source tree.

# This is the only project-specific part of this makefile
a16 67
COMPONENT	= ModMalloc
INSTDIR		?= <Install$Dir>

# Copy is used in a number of place in the same way, so we put
#appropriate flags into a macro:
CopyFlags	= ~cfr~v


# -------------------------------------------------------
# Now all the different targets we can be asked to build:
# -------------------------------------------------------


all:
	Echo	Library $(COMPONENT): Please supply a target.


clean:
	x Wipe o.Lib* ~c~r~v
	Echo Library $(COMPONENT): 'clean' finished.


clean_all:	clean
	x Wipe		@@.o.Sources.!Module.Sources ~c~vr
	x Wipe		@@.o.Sources.!Normal.Sources ~c~vr
	Echo		Library $(COMPONENT): 'clean_all' finished.


export:	export_$(PHASE)

export_hdrs:
	CDir		<Lib$Dir>.$(COMPONENT)
	CDir		<Lib$Dir>.$(COMPONENT).h
	Copy		@@.h.$(COMPONENT)	<Lib$Dir>.$(COMPONENT).h.$(COMPONENT)	$(CopyFlags)
	Copy		@@.VersionNum		<Lib$Dir>.$(COMPONENT).LibVersion	$(CopyFlags)
	IfThere		@@.$(COMPONENT)		Then Copy @@.$(COMPONENT) <Lib$Dir>.$(COMPONENT).$(COMPONENT) $(CopyFlags)
	Echo		Library $(COMPONENT): 'export_hdrs' finished.


export_libs:
	CDir		<Lib$Dir>.$(COMPONENT)
	CDir		<Lib$Dir>.$(COMPONENT).o
	Obey            @@.o.Sources.!Module.!Run
	Obey            @@.o.Sources.!Normal.!Run
	Copy            @@.o.Lib   <Lib$Dir>.$(COMPONENT).o.Lib   $(CopyFlags)
	Copy            @@.o.Lib_M <Lib$Dir>.$(COMPONENT).o.Lib_M $(CopyFlags)
	Echo		Library $(COMPONENT): 'export_libs' finished.

install:
	do mkdir -p $(INSTDIR)
	Copy		<Lib$Dir>.$(COMPONENT)	$(INSTDIR).$(COMPONENT)	$(CopyFlags)
	Echo		Library $(COMPONENT): 'install' finished.

resources:
	Echo		Library $(COMPONENT): 'resources' finished.

rom:
	Echo		Library $(COMPONENT): 'rom' finished.

install_rom:
	Echo		Library $(COMPONENT): 'install_rom' finished.

rom_link:
	Echo		Library $(COMPONENT): 'rom_link' finished.

ram:
	Echo		Library $(COMPONENT): 'ram' finished.
d18 3
d22 1
@


1.4
log
@Remove clean phase errors

Version 0.05. Tagged as 'ModMalloc-0_05'
@
text
@d20 1
d67 4
@


1.3
log
@  Now suitable for release.
Detail:
  Removed dependence upon Every and Makatic tools, at least for the
  standard application and module builds. Makatic can still be used if you
  have it on your run path (and this will help if you want to create one
  of the debug builds).
  All references to the MemCheck library (also part of WSS's commercial
  product Dr Smith's Toolkit) are now wrapped in #ifdefs, and so the library
  can now be built without it.
Admin:
  Tested briefly in a ROM build.

Version 0.04. Tagged as 'ModMalloc-0_04'
@
text
@d36 1
a36 1
	Wipe o.Lib* ~c~r~v
d41 2
a42 2
	Wipe		@@.o.Sources.!Module.Sources ~c~vr
	Wipe		@@.o.Sources.!Normal.Sources ~c~vr
@


1.2
log
@Spinner branch merged
@
text
@d41 2
a42 1
	Every.Every2	-c "@@.o.Sources.!*.Sources @@.o.Sources.!*.Makefile" wipe %0 ~c~vr
d50 4
a53 2
	Copy		@@.h		<Lib$Dir>.$(COMPONENT).h		$(CopyFlags)
	IfThere		@@.$(COMPONENT)	Then Copy @@.$(COMPONENT) <Lib$Dir>.$(COMPONENT).$(COMPONENT) $(CopyFlags)
d60 4
a63 2
	Every.Every2	-c "@@.o.Sources.!Module.!Run @@.o.Sources.!Normal.!Run" Obey %0
	Every.Every2	-c @@.o.lib* copy %0 <Lib$Dir>.$(COMPONENT).o.%1		$(CopyFlags)
@


1.1
log
@Initial revision
@
text
@d50 1
a50 1
	Copy		@@.$(COMPONENT)	<Lib$Dir>.$(COMPONENT).$(COMPONENT)	$(CopyFlags)
d57 1
a57 1
	Every.Every2	-c @@.o.Sources.!* Obey %0.!Run
@


1.1.1.1
log
@Initial import of ModMalloc library
@
text
@@


1.1.1.2
log
@Only builds module and normal versions
@
text
@d57 1
a57 1
	Every.Every2	-c "@@.o.Sources.!* -x ..!MemCheck ..!Mod_D ..!Debug" Obey %0.!Run
@


1.1.1.3
log
@Checks for freeing unrecognised blocks. Added Module MemCheck version
@
text
@d50 1
a50 1
	IfThere		@@.$(COMPONENT)	Then Copy @@.$(COMPONENT) <Lib$Dir>.$(COMPONENT).$(COMPONENT) $(CopyFlags)
@


1.1.1.4
log
@Only builds module and normal version
@
text
@d57 1
a57 1
	Every.Every2	-c "@@.o.Sources.!Module.!Run @@.o.Sources.!Normal.!Run" Obey %0.!Run
@


1.1.1.5
log
@Only builds normal and module version of libraries
@
text
@d57 1
a57 1
	Every.Every2	-c "@@.o.Sources.!Module.!Run @@.o.Sources.!Normal.!Run" Obey %0
@
