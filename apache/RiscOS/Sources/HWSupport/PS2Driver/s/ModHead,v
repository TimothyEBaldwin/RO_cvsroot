head	4.13;
access;
symbols
	PS2Driver-0_39:4.13
	PS2Driver-0_38:4.12
	PS2Driver-0_37:4.11
	PS2Driver-0_36:4.11
	PS2Driver-0_35:4.11
	PS2Driver-0_34:4.11
	PS2Driver-0_33:4.10
	PS2Driver-0_32:4.9
	PS2Driver-0_31:4.8
	PS2Driver-0_30:4.7
	PS2Driver-0_29:4.6
	PS2Driver-0_28:4.5
	Ursula_merge:4.3
	nturton_PS2Driver-0_27:4.4
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3
	Ursula_RiscPC:4.3.0.6
	PS2Driver-0_27:4.4
	PS2Driver-0_26:4.4
	nicke_PS2Driver_0_25:4.1.7.2
	rthornb_UrsulaBuild-19Aug1998:4.3
	UrsulaBuild_FinalSoftload:4.3
	rthornb_UrsulaBuild-12Aug1998:4.3
	bavison_PS2Driver-0_20:4.3
	aglover_UrsulaBuild-05Aug1998:4.3
	rthornb_UrsulaBuild-29Jul1998:4.3
	rthornb_UrsulaBuild-22Jul1998:4.3
	rthornb_UrsulaBuild-15Jul1998:4.3
	rthornb_UrsulaBuild-07Jul1998:4.3
	rthornb_UrsulaBuild-17Jun1998:4.3
	PS2Driver-0_25-1_1_2_2:4.1.7.2
	rthornb_UrsulaBuild-03Jun1998:4.3
	rthornb_UrsulaBuild-27May1998:4.3
	rthornb_UrsulaBuild-21May1998:4.3
	rthornb_UrsulaBuild_01May1998:4.3
	afrost_NC2_Generic:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Ursula:4.3.0.4
	Ursula_bp:4.3
	Spinner_B7:4.1.7.1
	Daytona_bp:4.3
	Daytona:4.3.0.2
	RO_3_71:4.1.3.2
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.13
date	2012.03.02.23.09.45;	author rsprowson;	state Exp;
branches;
next	4.12;
commitid	yTfY0p2OpEu6EmVv;

4.12
date	2004.07.11.19.26.16;	author srevill;	state Exp;
branches;
next	4.11;

4.11
date	2001.03.16.16.01.07;	author sbrodie;	state Exp;
branches;
next	4.10;

4.10
date	2001.03.01.14.10.13;	author sforrest;	state Exp;
branches;
next	4.9;

4.9
date	2000.10.06.10.14.00;	author bavison;	state Exp;
branches;
next	4.8;

4.8
date	2000.04.07.14.45.46;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	2000.02.18.14.06.58;	author kbracey;	state Exp;
branches;
next	4.6;

4.6
date	2000.02.14.12.01.50;	author kbracey;	state Exp;
branches;
next	4.5;

4.5
date	99.08.04.18.35.26;	author kbracey;	state Exp;
branches;
next	4.4;

4.4
date	98.09.04.07.46.56;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	97.05.02.11.52.55;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.09.55.26;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.37.09;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.37.09;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.38.54;	author nturton;	state Exp;
branches
	4.1.3.1.2.1;
next	4.1.3.2;

4.1.3.2
date	97.05.01.14.37.28;	author kbracey;	state Exp;
branches;
next	;

4.1.3.1.2.1
date	97.04.30.13.54.13;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.00.27;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.53.11;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	98.06.05.13.53.53;	author smiddle;	state Exp;
branches;
next	;


desc
@@


4.13
log
@Changed KEYV_thing to KeyV_thing to match Hdr:Keyboard.

Version 0.39. Tagged as 'PS2Driver-0_39'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.ModHead


        ASSERT  (.=Module_BaseAddr)

        DCD     0                               ; Start
        DCD     Init           - Module_BaseAddr
        DCD     Die            - Module_BaseAddr
        DCD     Service        - Module_BaseAddr
        DCD     Title          - Module_BaseAddr
        DCD     Helpstr        - Module_BaseAddr
        DCD     0                               ; Helptable
        DCD     0                               ; SWIbase
        DCD     0                               ; SWIhandler
        DCD     0                               ; SWInames
        DCD     0                               ; SWIdecode
        DCD     0                               ; Messages
  [ :LNOT: No32bitCode
        DCD     Module_Flags   - Module_BaseAddr
  ]

;---------------------------------------------------------------------------
Title   DCB     "PS2Driver",0
Helpstr DCB     "PS2Driver",9,"$Module_HelpVersion",0
                ALIGN

  [ :LNOT: No32bitCode
Module_Flags
        DCD     ModuleFlag_32bit
  ]

;---------------------------------------------------------------------------
;       Module initialisation point.
;
; May corrupt R0-R6,R12,R14, must preserve R7-R11,R13
;
Init
        Entry
;
; Check machine type
;
        MOV     r0, #2                          ;Check main hardware details
        SWI     XOS_ReadSysInfo
        EXIT    VS
                                                ;R0 bits 8..15 give I/O control chip type
        AND     r0, r0, #&0000FF00              ;  0=IOC, 1=IOMD
        TEQ     r0,     #&00000100              ;  must have IOMD
        BNE     %FT99
;
; Hardware OK
;
        LDR     r2, [r12]                       ; Have we already some workspace?
        CMP     r2, #0
        BNE     %FT01

        MOV     r0, #ModHandReason_Claim
        LDR     r3, =max_running_work
        SWI     XOS_Module                      ; Claim workspace.
        EXIT    VS

        STR     r2, [r12]                       ; Store workspace pointer.
01
        MOV     r12, r2

 [ TMLDebug
        InsertTMLInitialisation 0               ;my TML card uses podule slot 0
 ]
       ;DLINE   "PS2 driver module initialisation"

        MOV     r0, #9                          ; read controller presence and base
        MOV     r1, #4:SHL:8                    ; IOMD
        SWI     XOS_Memory
        MOVVS   r1, #IOMD_Base                  ; old kernels won't know this reason code
        STR     r1, MyIOMDBase                  ; won't be 0, we've already established there is an IOMD

 [ standalone
        ADR     r0, resourcefsfiles
        SWI     XResourceFS_RegisterFiles
 ]

        MOV     r0, #0                          ;Initialise workspace.
 [ international
        STR     r0, message_file_open
 ]

 [ 1 = 1
        SWI     XPortable_ReadFeatures          ;If this call works,
        MOVVC   r0, #3                          ; assume we're running on a Stork - don't ask
        BVC     %FT20                           ; ReadSysInf0(2), cos we communicate via Portable module

        IOMDBase r1
  [ {TRUE} ; ARM7500FE support

; Modify check so as to include ARM7500FE as a Morris device

	LDRB	r0, [r1, #IOMD_ID0]
	LDRB	lr, [r1, #IOMD_ID1]		; safe to corrupt this due to BL below
	ORR	r0, r0, lr, LSL #8
	LDR	lr, =IOMD_Original
	TEQ	r0, lr
	MOVEQ	r0, #1				; if original return 1
	MOVNE	r0, #2				; else return 2
  |
        LDRB    r0, [r1, #IOMD_ID0]
        CMP     r0, #&E7
        LDRB    r0, [r1, #IOMD_ID1]
        CMPEQ   r0, #&5B
        MOVEQ   r0, #2                          ;Morris based
        MOVNE   r0, #1                          ;else assume IOMD
  ]
20
 |
        MOV     r0, #1                          ;Hardwire Medusa
 ]
        STR     r0, PortCount

        BL      StartUp
        BLVS    ShutDown
        EXIT
;
;Wrong hardware for PS2Driver module
;
99
        EXIT

        LTORG

;---------------------------------------------------------------------------
;       Start up code.
;
StartUp
        Entry   "r0,r1,r2,channel"

        Debug   mod,"SM_StartUp"
       ;DLINE   "PS2Driver: StartUp"

        BL      ClaimVectors
        BLVC    KeyInit
        BLVC    MouseInit

        MOV     r0, #3
        ADR     channel, PS2ch3         ;R10 points to channel workspace
        BLVC    StreamInit

        MOV     r0, #2
        ADR     channel, PS2ch2         ;R10 points to channel workspace
        BLVC    StreamInit

        MOV     r0, #1
        ADR     channel, PS2ch1         ;R10 points to channel workspace
        BLVC    StreamInit

        BVS     %FT95

        LDR     r1, PortCount
        CMP     r1, #2
        BEQ     %FT10
        BLT     %FT20

        ADRVC   channel, PS2ch3         ;R10 points to channel workspace
        BLVC    StreamEnable
10
 [ SecondPort
        ADRVC   channel, PS2ch2         ;R10 points to channel workspace
        BLVC    StreamEnable
 ]
20
        ADRVC   channel, PS2ch1         ;R10 points to channel workspace
        BLVC    StreamEnable

        MOVVC   r0, #0                  ; Get current pointer type.
        SWIVC   XOS_Pointer
        MOVVC   r1, r0
        BLVC    PointerSelected         ; Enable if one of ours.
95
        EXIT

;---------------------------------------------------------------------------
;       Service handler.
;
        ASSERT  Service_Reset              < Service_ResourceFSStarting
        ASSERT  Service_ResourceFSStarting < Service_Portable
ServiceTable
        DCD     0
        DCD     ServiceEntry - Module_BaseAddr
        DCD     Service_Reset
 [ standalone
        DCD     Service_ResourceFSStarting
 ]
        DCD     Service_Portable
        DCD     0

        DCD     ServiceTable - Module_BaseAddr
Service
        MOV     r0, r0
        TEQ     r1, #Service_Reset
        TEQNE   r1, #Service_Portable
 [ standalone
        TEQNE   r1, #Service_ResourceFSStarting
 ]
        MOVNE   pc, lr

ServiceEntry
        LDR     r12, [r12]              ;Get workspace pointer

        TEQ     r1, #Service_Portable
        BEQ     ServicePortablePower

        TEQ     r1, #Service_Reset
        BEQ     ServiceReset

 [ standalone
        TEQ     r1, #Service_ResourceFSStarting
        MOVNE   pc, lr

        Entry   "r0-r3"
        ADR     r0, resourcefsfiles
        MOV     lr, pc
        MOV     pc, r2
        EXIT
 |
        MOV     pc, lr
 ]

ServicePortablePower
        TEQS    r2,#ServicePortable_PowerDown   ; Portable power down?
        TEQNES  r2,#ServicePortable_PowerUp     ; Or portable power up?
        MOVNE   pc, lr                          ; No then exit

        TEQ     r2, #ServicePortable_PowerUp    ; Portable power up?
        BNE     ServPortPwrDown
;Powering up
        Entry   "channel"
;
; Channel 1 connects directly to the external keyboard port - look for it powering up
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SendRESET                       ;Reset device and channel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SendRESET                       ;Reset device and channel

        EXIT


ServPortPwrDown
;Powering down
        Entry   "channel"
;
; Channel 1 connects directly to the external keyboard port
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SuspendChannel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SuspendChannel

        EXIT

ServiceReset
        Entry   "r0-r2"
        MOV     r0, #OsByte_RW_LastResetType
        MOV     r1, #0
        MOV     r2, #255
        SWI     XOS_Byte
        TEQ     r1, #0                          ;Was it a soft reset?
        EXIT    NE                              ;If not, we've already reset the keyboard
        PullEnv
        B       StartUp                         ;If so, reset the keyboard now


;---------------------------------------------------------------------------
;       Sit on KEYV for enable call and so that LEDs can be set.
;
KeyVec
       ;TEQ     r0, #2          ;KeyDown
       ;BEQ     keyv_checkhotkeys

        TEQ     r0, #3
        BEQ     keyv_setleds

        TEQ     r0, #KeyV_PseudoRXInt
        BEQ     keyv_pseudoRXint

        TEQ     r0, #KeyV_PseudoTXInt
        BEQ     keyv_pseudoTXint

 [ PortInfo
        TEQ     r0, #KeyV_PortInfo
        BEQ     keyv_portinfo
 ]
        TEQ     r0, #4
        MOVNE   pc, lr

keyv_init
        Entry   "r0,r1"
 [ debugtable
        DebugTab r0,lr,#&81
 ]
        IRQOff  r1, lr
        Push    "r1-r3,r9"              ; Kernel has forgotten all keys.
        ADR     r3, KeyFlags            ; We will loop through and remind it.
        MOV     r9, #KEYV
        MOV     r1, #0
keyv_init_loop
        TST     r1, #&1F
        LDREQ   r2, [r3], #4
        MOVNE   r2, r2, LSL #1
        TST     r2, #&80000000
        MOVNE   r0, #2
        SWINE   XOS_CallAVector
        ADD     r1, r1, #1
        CMP     r1, #&80
        BNE     keyv_init_loop
        Pull    "r1-r3,r9"

        LDRB    lr, KeyState            ; Safe to start sending keys.
        BIC     lr, lr, #state_RESET
        STRB    lr, KeyState

        SetPSR  r1                      ; Restore IRQs
        EXIT

;keyv_checkhotkeys
;       ;Entry
;      ;;DREG    r1, "KEYV key down &",,LongWord
;       ;EXIT
;
;        TEQ     r1, #&60                ;Check for 'Reset Stork external Keyboard' hotkey
;        MOVNE   pc, lr
;
;        Entry   "channel"
;        ADR     channel, PS2ch1
;        BL      SendRESET               ;An asynchronous call
;        EXIT


keyv_setleds
 [ debugtable
        Entry   "r1,r2,channel"
        DebugTab r2,lr,#&82
 |
        Entry   "r1,channel"
 ]
        MOV     lr, r1
        TST     lr, #4                  ; Swap bits 0 and 2.
        BICEQ   r1, r1, #1
        ORRNE   r1, r1, #1
        TST     lr, #1
        BICEQ   r1, r1, #4
        ORRNE   r1, r1, #4
        STRB    r1, LEDState

        ADR     channel, PS2ch1         ;
        BL      SetLEDs                 ;checks device type
        ADR     channel, PS2ch2
        BL      SetLEDs
        ADR     channel, PS2ch3
        BL      SetLEDs
        EXIT

 [ PortInfo
;---------------------------------------------------------------------------
;
keyv_portinfo
        Entry "r5, channel"

        CMP     r1, #1
        LDRGE   r5, PortCount
        CMPGE   r5, r1
        EXIT    LT

        CMP     r1, #2
        ADRLT   channel, PS2ch1
        ADREQ   channel, PS2ch2
        ADRGT   channel, PS2ch3

        LDRB    r2, DeviceType

        EXIT
 ]

;---------------------------------------------------------------------------
;       Killing the module.
;
Die
        Entry

        LDR     r12, [r12]
        CMP     r12, #0
        Pull    "pc",EQ         ; V clear

        BL      ShutDown

        EXIT

;---------------------------------------------------------------------------
;       Tidy up before dying.
;       out:  preserves all registers and flags.
;
ShutDown
        EntryS  "r0-r2,r9"

        Debug   mod,"SM_ShutDown"

        BL      ReleaseVectors                  ; Don't want to be enabled/get LEDs any more.
;
; Must disable (Medusa) Kbd
;              (Kryten) Mse & Kbd
;              (Stork)  Psd, Mse & Kbd
;
        LDR     r1, PortCount
        CMP     r1, #2
        BEQ     %FT10
        BLT     %FT20

        PsdDisable      ;corrupts R0,R1,R9
10
 [ SecondPort
        MseDisable r0,r1
 ]
20
        KbdDisable r0,r1


;>>>test for kbd active???
        MOV     r0, #0
        SWI     XOS_InstallKeyHandler
        SWI     XOS_InstallKeyHandler           ; Reinstall current key handler to clear keys down.
;>>>

 [ international
        LDR     r0, message_file_open           ; Close the message file if it's open.
        TEQ     r0, #0
        ADRNE   r0, message_file_block
        SWINE   XMessageTrans_CloseFile
 ]

 [ standalone
        ADR     r0, resourcefsfiles
        SWI     XResourceFS_DeregisterFiles
 ]

        EXITS                                   ; Ignore errors, preserve flags.

        END
@


4.12
log
@  Added an LTORG to ModHead so it builds.
Detail:
  Tested on DB220 Baseline build.

Version 0.38. Tagged as 'PS2Driver-0_38'
@
text
@d70 1
a70 1
        MOV     r0, #6
d284 1
a284 1
        MOV     r0, #253                        ;Read last reset type
d304 1
a304 1
        TEQ     r0, #KEYV_PseudoRXInt
d307 1
a307 1
        TEQ     r0, #KEYV_PseudoTXInt
d311 1
a311 1
        TEQ     r0, #KEYV_PortInfo
@


4.11
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.34. Tagged as 'PS2Driver-0_34'
@
text
@d140 2
@


4.10
log
@
  * Removed dependency on obsolete STB flag.

Detail:

  * STB versions of the module provided support for RCA and IDEA keyboards.
    Support for the RCA variant has been dormant since October 1998: the
    RCASupport flag has been set to FALSE ever since.  I've taken the
    opportunity to remove the code in this version.

    Likewise, support for IDEA keyboards has been similarly removed, but
    only because there is no record of them having been used at all in
    any product, and certainly not recently.  (If required, use CVS to
    merge the support back into later versions.)

    The result of the above activity is that both Desktop and Embedded
    versions are identical, no longer reliant on the STB flag and not
    requiring the new Embedded_UI flag.

Admin:

  * Built and tested on Lazarus 32-bit build.  Desktop variant of the code
    is binary identical to previous versions.

  * StripDepnd support moved from the Makefile to MkClean.

  * Removed build-specific directories in "rm", since these are created
    during assembly.

Version 0.33. Tagged as 'PS2Driver-0_33'
@
text
@d16 1
a16 1
        LEADR   Module_LoadAddr
d38 1
a38 1
Helpstr DCB     "PS2Driver",9,Module_MajorVersion," (",Module_Date,") ",Module_MinorVersion,0
d52 1
a52 1
        ENTRY
a55 7
        ; xxxxxx
        [ 1=0
        MOV     lr,#0
        MOV     r0,#&80
        STR     r0,[lr,#&FC]
        ]

d144 1
a144 1
        ENTRY   "r0,r1,r2,channel"
d228 1
a228 1
        ENTRY   "r0-r3"
d245 1
a245 1
        ENTRY   "channel"
d264 1
a264 1
        ENTRY   "channel"
d281 1
a281 1
        ENTRY   "r0-r2"
d316 1
a316 1
        ENTRY   "r0,r1"
d345 1
a345 1
;       ;ENTRY
d352 1
a352 1
;        ENTRY   "channel"
d360 1
a360 1
        ENTRY   "r1,r2,channel"
d363 1
a363 1
        ENTRY   "r1,channel"
d386 1
a386 1
        ENTRY "r5, channel"
d407 1
a407 1
        ENTRY
@


4.9
log
@  First step in hardware independence.
Detail:
  Reads the address of IOMD using OS_Memory 9,4 rather than assuming it's at
  &03200000. Defaults back to &03200000 on kernels that don't have the
  OS_Memory sub-reason code.
Admin:
  Tested on an Ursula kernel without the OS_Memory extension.

Version 0.32. Tagged as 'PS2Driver-0_32'
@
text
@a327 3
 [ RCASupport
        BL      ClearKbd                ; Following code doesn't cope with RCA extensions
 |
d343 1
a343 1
 ]
@


4.8
log
@Module header now declares 32-bit compatibility.
Some EXITS macros changed to cope with new Hdr:Proc which doesn't restore
interrupt bits by default.

Version 0.31. Tagged as 'PS2Driver-0_31'
@
text
@d91 6
d112 1
a112 1
        MOV     r1, #IOMD_Base
@


4.7
log
@PS2Driver now observes key transitions while waiting for KeyV 4, and sends
the list of keys down when KeyV 4 arrives. Another step towards getting
reliable key polling on reset.

Fixes FuncStart (which stopped working when the extra hardware reset was
removed), but IPConfig's double-Alt still isn't working. As far as I can see
it should be possible to make it totally reliable now, but it must be checking
it too early.

Version 0.30. Tagged as 'PS2Driver-0_30'
@
text
@d31 4
a34 2
        DCD     0
        DCD     0
d41 5
d317 1
a317 1
        ENTRY   "r0"
d321 1
a321 1
        IRQOff  lr, r0
d344 3
a346 1
        EXITS
@


4.6
log
@* Made 32-bit compatible.
* Now disables FIQs when manipulating IRQMSKB (could this be why FIQs have
  been a bit dodgy since RISC OS 3.5?)
* No longer resets devices on Service_Reset unless it was a soft reset - this
  should stop people having to hammer the Alt keys for IPConfig etc.

Version 0.29. Tagged as 'PS2Driver-0_29'
@
text
@d315 18
a332 2
 [ KillAutoRepeat
        BL      ClearKbd
d337 1
a337 1
        EXIT
@


4.5
log
@Service call table added.

Version 0.28. Tagged as 'PS2Driver-0_28'
@
text
@d49 7
d159 2
d181 1
a181 1

d207 1
a207 1
        MOVNES  pc, lr
d216 1
a216 1
        BEQ     StartUp
d220 1
a220 1
        MOVNES  pc, lr
d226 1
a226 1
        EXITS
d228 1
a228 1
        MOVS    pc, lr
d234 1
a234 1
        MOVNES  pc, lr                          ; No then exit
d253 1
a253 1
        EXITS
d272 12
a283 1
        EXITS
d307 1
a307 1
        MOVNES  pc, lr
d310 1
a311 1
        ENTRY   "r0"
a312 2
 |
        ENTRY
d314 1
a314 1
        IRQOff  lr
d321 1
a321 1
        EXITS
d329 1
a329 1
;        MOVNES  pc, lr
d334 1
a334 1
;        EXITS
d359 1
a359 1
        EXITS
d370 1
a370 1
        EXITS   LT
d379 1
a379 1
        EXITS
d390 1
a390 1
        Pull    "pc",EQ,^
d394 1
a394 1
        EXITS
d401 1
a401 1
        ENTRY   "r0-r2,r9"
@


4.4
log
@Merged Spinner branch.
Changed Makefile to use LocalRes:
@
text
@d178 13
d192 1
d200 1
@


4.3
log
@Merged from RO_3_71
@
text
@d36 1
a36 1
Helpstr DCB     "PS2Driver",9,"$VString ($Date)",0
@


4.2
log
@Module merged
@
text
@d106 1
a106 1
        CMP     r0, #&98
@


4.1
log
@Initial revision
@
text
@d89 1
a89 1
        MOVVC   r0, #3                          ; assume we're running on a Stork - don't ask 
d93 12
d111 1
d151 1
a151 1
 [ true
d167 1
a167 7
 |
;>>>for testing
        ADRVC   channel, PS2ch1         ;R10 points to channel workspace
        BLVC    StreamEnable
        ADRVC   channel, PS2ch3         ;R10 points to channel workspace
        BLVC    StreamEnable
 ]
d179 11
a189 1
        LDR     r12, [r12]
d207 44
d259 1
a259 1
        BEQ     keyv_setleds            
d299 1
a299 1
;        ADR     channel, PS2ch1 
d332 1
a332 1
        ENTRY "R3, channel"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@d89 1
a89 1
        MOVVC   r0, #3                          ; assume we're running on a Stork - don't ask
a92 12
  [ {TRUE} ; ARM7500FE support

; Modify check so as to include ARM7500FE as a Morris device

	LDRB	r0, [r1, #IOMD_ID0]
	LDRB	lr, [r1, #IOMD_ID1]		; safe to corrupt this due to BL below
	ORR	r0, r0, lr, LSL #8
	LDR	lr, =IOMD_Original
	TEQ	r0, lr
	MOVEQ	r0, #1				; if original return 1
	MOVNE	r0, #2				; else return 2
  |
a98 1
  ]
d138 1
a138 1

d154 7
a160 1

d172 1
a172 11
        TEQ     r1, #Service_Reset
        TEQNE   r1, #Service_Portable
 [ standalone
        TEQNE   r1, #Service_ResourceFSStarting
 ]
        MOVNES  pc, lr

        LDR     r12, [r12]              ;Get workspace pointer

        TEQ     r1, #Service_Portable
        BEQ     ServicePortablePower
a189 44
ServicePortablePower
        TEQS    r2,#ServicePortable_PowerDown   ; Portable power down?
        TEQNES  r2,#ServicePortable_PowerUp     ; Or portable power up?
        MOVNES  pc, lr                          ; No then exit

        TEQ     r2, #ServicePortable_PowerUp    ; Portable power up?
        BNE     ServPortPwrDown
;Powering up
        ENTRY   "channel"
;
; Channel 1 connects directly to the external keyboard port - look for it powering up
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SendRESET                       ;Reset device and channel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SendRESET                       ;Reset device and channel

        EXITS


ServPortPwrDown
;Powering down
        ENTRY   "channel"
;
; Channel 1 connects directly to the external keyboard port
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SuspendChannel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SuspendChannel

        EXITS


d198 1
a198 1
        BEQ     keyv_setleds
d238 1
a238 1
;        ADR     channel, PS2ch1
d271 1
a271 1
        ENTRY "r5, channel"
@


4.1.7.2
log
@Merged in the new Windows keys definitions that have been added to the Trunk version of
this module. This results in a clash as the righ Windows key has a proper definition but
the Funai NC build expects it to generate the same code as the handset POWER key. At some
point the module that relies on this code (presumably Standby) should be changed to pick up
the correct code. In the mean time there is a variable to control which mapping is used and
it set to use the correct mapping. Beware - if this module is used in a Funai build it will
need changing back.
Also converted the module to use srccommit (of course).

Version 0.25, 1.1.2.2. Tagged as 'PS2Driver-0_25-1_1_2_2'
@
text
@d36 1
a36 1
Helpstr DCB     "PS2Driver",9,Module_MajorVersion," (",Module_Date,") ",Module_MinorVersion,0
@


4.1.5.1
log
@Import from SrcFiler
@
text
@d89 1
a89 1
        MOVVC   r0, #3                          ; assume we're running on a Stork - don't ask
a92 12
  [ {TRUE} ; ARM7500FE support

; Modify check so as to include ARM7500FE as a Morris device

	LDRB	r0, [r1, #IOMD_ID0]
	LDRB	lr, [r1, #IOMD_ID1]		; safe to corrupt this due to BL below
	ORR	r0, r0, lr, LSL #8
	LDR	lr, =IOMD_Original
	TEQ	r0, lr
	MOVEQ	r0, #1				; if original return 1
	MOVNE	r0, #2				; else return 2
  |
a98 1
  ]
d138 1
a138 1

d154 7
a160 1

d172 1
a172 11
        TEQ     r1, #Service_Reset
        TEQNE   r1, #Service_Portable
 [ standalone
        TEQNE   r1, #Service_ResourceFSStarting
 ]
        MOVNES  pc, lr

        LDR     r12, [r12]              ;Get workspace pointer

        TEQ     r1, #Service_Portable
        BEQ     ServicePortablePower
a189 44
ServicePortablePower
        TEQS    r2,#ServicePortable_PowerDown   ; Portable power down?
        TEQNES  r2,#ServicePortable_PowerUp     ; Or portable power up?
        MOVNES  pc, lr                          ; No then exit

        TEQ     r2, #ServicePortable_PowerUp    ; Portable power up?
        BNE     ServPortPwrDown
;Powering up
        ENTRY   "channel"
;
; Channel 1 connects directly to the external keyboard port - look for it powering up
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SendRESET                       ;Reset device and channel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SendRESET                       ;Reset device and channel

        EXITS


ServPortPwrDown
;Powering down
        ENTRY   "channel"
;
; Channel 1 connects directly to the external keyboard port
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SuspendChannel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SuspendChannel

        EXITS


d198 1
a198 1
        BEQ     keyv_setleds
d238 1
a238 1
;        ADR     channel, PS2ch1
d271 1
a271 1
        ENTRY "r5, channel"
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@d138 1
a138 1

d154 7
a160 1

d172 1
a172 11
        TEQ     r1, #Service_Reset
        TEQNE   r1, #Service_Portable
 [ standalone
        TEQNE   r1, #Service_ResourceFSStarting
 ]
        MOVNES  pc, lr

        LDR     r12, [r12]              ;Get workspace pointer

        TEQ     r1, #Service_Portable
        BEQ     ServicePortablePower
a189 44
ServicePortablePower
        TEQS    r2,#ServicePortable_PowerDown   ; Portable power down?
        TEQNES  r2,#ServicePortable_PowerUp     ; Or portable power up?
        MOVNES  pc, lr                          ; No then exit

        TEQ     r2, #ServicePortable_PowerUp    ; Portable power up?
        BNE     ServPortPwrDown
;Powering up
        ENTRY   "channel"
;
; Channel 1 connects directly to the external keyboard port - look for it powering up
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SendRESET                       ;Reset device and channel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SendRESET                       ;Reset device and channel

        EXITS


ServPortPwrDown
;Powering down
        ENTRY   "channel"
;
; Channel 1 connects directly to the external keyboard port
;
        TST     r3, #PortableControl_ExtPowerEnable
        ADRNE   channel, PS2ch1
        BLNE    SuspendChannel
;
; Channel 2 is switched to either the internal trackerball or external mouse port
;
        TST     r3, #(PortableControl_IntTBallEnable :OR: PortableControl_ExtMouseEnable)
        ADRNE   channel, PS2ch2
        BLNE    SuspendChannel

        EXITS


d271 1
a271 1
        ENTRY "r5, channel"
@


4.1.3.2
log
@Version RO_3_71 taken
@
text
@d89 1
a89 1
        MOVVC   r0, #3                          ; assume we're running on a Stork - don't ask
d94 1
a94 1
        CMP     r0, #&E7
d96 3
a98 3
        CMPEQ   r0, #&D4
        MOVEQ   r0, #1                          ;IOMD (Risc PC)
        MOVNE   r0, #2                          ;else assume Morris
d246 1
a246 1
        BEQ     keyv_setleds
d286 1
a286 1
;        ADR     channel, PS2ch1
@


4.1.3.1.2.1
log
@Merge from 3.71 CD
@
text
@d89 1
a89 1
        MOVVC   r0, #3                          ; assume we're running on a Stork - don't ask
d94 1
a94 1
        CMP     r0, #&E7
d96 3
a98 3
        CMPEQ   r0, #&D4
        MOVEQ   r0, #1                          ;IOMD (Risc PC)
        MOVNE   r0, #2                          ;else assume Morris
d246 1
a246 1
        BEQ     keyv_setleds
d286 1
a286 1
;        ADR     channel, PS2ch1
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
