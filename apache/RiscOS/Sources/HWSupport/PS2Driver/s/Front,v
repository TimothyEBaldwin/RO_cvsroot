head	4.6;
access;
symbols
	PS2Driver-0_39:4.6
	PS2Driver-0_38:4.6
	PS2Driver-0_37:4.6
	PS2Driver-0_36:4.6
	PS2Driver-0_35:4.6
	PS2Driver-0_34:4.5
	PS2Driver-0_33:4.5
	PS2Driver-0_32:4.4
	PS2Driver-0_31:4.3
	PS2Driver-0_30:4.3
	PS2Driver-0_29:4.2
	PS2Driver-0_28:4.2
	Ursula_merge:4.1
	nturton_PS2Driver-0_27:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	PS2Driver-0_27:4.2
	PS2Driver-0_26:4.2
	nicke_PS2Driver_0_25:4.1.7.4
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	bavison_PS2Driver-0_20:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	PS2Driver-0_25-1_1_2_2:4.1.7.4
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.4
	Spinner_RCA116:4.1.7.4
	Spinner_B20_2:4.1.7.4
	Spinner_19_3:4.1.7.4
	Spinner_B18:4.1.7.4
	Spinner_B17:4.1.7.4
	Spinner_B15:4.1.7.4
	Spinner_B14:4.1.7.4
	Spinner_B13:4.1.7.4
	Spinner_B12:4.1.7.4
	Spinner_B10:4.1.7.3
	Ursula:4.1.0.6
	Ursula_bp:4.1
	Spinner_B7:4.1.7.3
	Daytona_bp:4.1
	Daytona:4.1.0.4
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.3
	RCA_bp:4.1
	ARTtmp:4.1.7.2.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.4
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2001.10.18.09.32.58;	author kbracey;	state Exp;
branches;
next	4.5;

4.5
date	2001.03.01.14.10.13;	author sforrest;	state Exp;
branches;
next	4.4;

4.4
date	2000.10.06.10.14.00;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2000.02.18.14.06.57;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	98.09.04.07.46.54;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.37.09;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.37.09;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.38.48;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.00.22;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.53.08;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.10.16.21.03;	author tdobson;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.03.21.09.45.52;	author tdobson;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	97.06.03.09.22.45;	author scormie;	state Exp;
branches;
next	;


desc
@@


4.6
log
@Added support for the two Korean IME control keys. See Doc.Korean for details
of why this simple task entailed dozens of lines of code.

Version 0.35. Tagged as 'PS2Driver-0_35'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.Front

;-----------------------------------------------------------------------------
;       Useful declarations.
;

; Driver state flags.
state_RESET             *       &01     ; In reset.
state_KEYUP             *       &02     ; This key is going up.
state_WANTACK           *       &04     ; Don't send any more until ACK from keyboard.
state_WANTBAT           *       &08     ; Don't send any more until BAT from keyboard.
state_SPECIAL           *       &10     ; In special code sequence.
state_BREAK             *       &20     ; In break code sequence.

; Bytes from keyboard.
keybd_ERROR             *       &00
keybd_BAT               *       &AA
keybd_SPECIAL           *       &E0
keybd_BREAK             *       &E1
keybd_KEYUP             *       &F0
keybd_HANJA             *       &F1
keybd_HANGUL            *       &F2
keybd_ACK               *       &FA
keybd_RESEND            *       &FE

; Keyboard commands.
command_SETLEDS         *       &ED
command_SETRATE         *       &F3
command_RESEND          *       &FE
command_RESET           *       &FF

command_SETCOUNT        *       &E8     ;AKA Set Resolution
command_ENABLE          *       &F4     ; Start transmission if in Incremental Stream mode
command_DISABLE         *       &F5     ; Stop transmission of mouse position reports
command_DEFAULT         *       &F6

resend_count            *       10      ; Maximum number of resends in sequence.

;-----------------------------------------------------------------------------
;       Workspace layout.
;

;PortName
; 1  KBDDAT & KBDCR  (may have keyboard OR mouse attached)
; 2  MSEDAT & MSECR  (may have mouse OR keyboard attached)
; 3  PSD             (pseudo stream through KEYV to Stork internal keyboard)
;
;DeviceType
; 0  Unknown
; 1  Mouse
; 2  Keyboard
;
channel                 RN      R10
                        ^       0,channel
moduleworkspace         #       4       ;pointer to modules workspace ie its R12 value

TxBuffer                #       16      ; Circular buffer for commands sent to keyboard.
TxBufferEnd             #       0
TxInsert                #       4       ; Pointer to position to insert into TxBuffer.
TxPtr                   #       4       ; Pointer to next byte in TxBuffer to send to keyboard.
PortName                #       1
KBState                 #       1       ; Port state.
ResendCount             #       1       ; Remaining resends allowed.
DeviceType              #       1       ;
                        #       3:AND:(-:INDEX:@@)

RXStateHandler          #       4       ; Address of current state handler.

Byte1                   #       1       ; First byte of serial mouse report.
Byte2                   #       1       ; Second byte of serial mouse report.
Byte3                   #       1       ; Third byte of serial mouse report.
Byte4                   #       1       ; Fourth byte of serial mouse report.
                        #       3:AND:(-:INDEX:@@)
channel_ws_size         *       :INDEX:@@


;machine type/channels available
; 1  medusa ie PS2 kbd only
; 2  kryten ie PS2 kbd & PS2 mouse
; 3  stork  ie PS2 kbd & PS2 mouse & Keyboard/battery micro
;
workspace               RN      R12
                        ^       0,workspace
wsorigin                #       0
 [ international
message_file_open       #       4
message_file_block      #       4*4
 ]

MyIOMDBase              #       4       ; base address of IOMD

PortCount               #       4
KeyState                #       1       ; Keyboard driver state.
LEDState                #       1       ; Current LED state.
                        #       3:AND:(-:INDEX:@@)

MouseData               #       0       ; Mouse data record.
DeltaX                  #       4       ; X movement since last query from Kernel.
DeltaY                  #       4       ; Y movement since last query from Kernel.
Buttons                 #       4       ; Button states.
LastButtons             #       1       ; Button states on last poll.
                        #       3:AND:(-:INDEX:@@)

KeyFlags                #       16      ; Key up/down flags.

 [ debugtable
DebugTable              #       508
DebugTableEnd           #       0
DebugPtr                #       4
 ]

PS2ch1                  #       channel_ws_size ;KBDDAT & KBDCR  (may have keyboard OR mouse attached)
PS2ch2                  #       channel_ws_size ;MSEDAT & MSECR  (may have mouse OR keyboard attached)
PS2ch3                  #       channel_ws_size

max_running_work        *       :INDEX:@@

        ! 0, "PS2Driver workspace is ":CC:(:STR:(:INDEX:@@)):CC:" bytes"


        END
@


4.5
log
@
  * Removed dependency on obsolete STB flag.

Detail:

  * STB versions of the module provided support for RCA and IDEA keyboards.
    Support for the RCA variant has been dormant since October 1998: the
    RCASupport flag has been set to FALSE ever since.  I've taken the
    opportunity to remove the code in this version.

    Likewise, support for IDEA keyboards has been similarly removed, but
    only because there is no record of them having been used at all in
    any product, and certainly not recently.  (If required, use CVS to
    merge the support back into later versions.)

    The result of the above activity is that both Desktop and Embedded
    versions are identical, no longer reliant on the STB flag and not
    requiring the new Embedded_UI flag.

Admin:

  * Built and tested on Lazarus 32-bit build.  Desktop variant of the code
    is binary identical to previous versions.

  * StripDepnd support moved from the Makefile to MkClean.

  * Removed build-specific directories in "rm", since these are created
    during assembly.

Version 0.33. Tagged as 'PS2Driver-0_33'
@
text
@d35 2
@


4.4
log
@  First step in hardware independence.
Detail:
  Reads the address of IOMD using OS_Memory 9,4 rather than assuming it's at
  &03200000. Defaults back to &03200000 on kernels that don't have the
  OS_Memory sub-reason code.
Admin:
  Tested on an Ursula kernel without the OS_Memory extension.

Version 0.32. Tagged as 'PS2Driver-0_32'
@
text
@a27 4
 [ RCASupport
state_RCA		*	&40	; In RCA (E2, nn) sequence.
state_FUNCDOWN		*	&80	; FUNC key is down
 ]
a33 3
 [ RCASupport
keybd_RCA		*	&E2
 ]
a48 13
 [ RCASupport
; Key up/down codes for mangling FUNC+digit into Fdigit
; Fortunately the codes for the digits 1 to 0 are consecutive, as are the codes for F1 to F10

keyupdown_1		*	&11
keyupdown_F1		*	&01
keyupdown_FUNC		*	&81

; KeyV code for POWER key

keyv_POWER              *       &80
 ]

a115 3
  [ RCASupport
KeyFlags                #       20      ; Key up/down flags. (extended for RCA from 16)
  |
a116 5
  ]

 [ RCASupport
FunkyDigits		#	12	; 10 bytes needed for FUNC'd digits - each byte = 0 for not FUNC'd, 1 for FUNC'd
 ]
@


4.3
log
@PS2Driver now observes key transitions while waiting for KeyV 4, and sends
the list of keys down when KeyV 4 arrives. Another step towards getting
reliable key polling on reset.

Fixes FuncStart (which stopped working when the extra hardware reset was
removed), but IPConfig's double-Alt still isn't working. As far as I can see
it should be possible to make it totally reliable now, but it must be checking
it too early.

Version 0.30. Tagged as 'PS2Driver-0_30'
@
text
@d122 2
@


4.2
log
@Merged Spinner branch.
Changed Makefile to use LocalRes:
@
text
@a133 1
 [ KillAutoRepeat
a138 1
 ]
@


4.1
log
@Initial revision
@
text
@d28 4
d38 3
d56 13
d135 3
d139 5
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@ 07-Mar-97	0.19	TMD	Added extra table to cope with new
				 RCA PS/2 codes.
@
text
@a27 1
state_RCA		*	&40	; In RCA (E2, nn) sequence.
a33 1
keybd_RCA		*	&E2
@


4.1.7.3
log
@Version 0.20 TMD - Added changes to make FUNC+digit into Fdigit.
@
text
@a27 1
 [ RCASupport
a28 2
state_FUNCDOWN		*	&80	; FUNC key is down
 ]
a34 1
 [ RCASupport
a35 1
 ]
a50 9
 [ RCASupport
; Key up/down codes for mangling FUNC+digit into Fdigit
; Fortunately the codes for the digits 1 to 0 are consecutive, as are the codes for F1 to F10

keyupdown_1		*	&11
keyupdown_F1		*	&01
keyupdown_FUNC		*	&81
 ]

a116 3
  [ RCASupport
KeyFlags                #       20      ; Key up/down flags. (extended for RCA from 16)
  |
a117 5
  ]
 ]

 [ RCASupport
FunkyDigits		#	12	; 10 bytes needed for FUNC'd digits - each byte = 0 for not FUNC'd, 1 for FUNC'd
@


4.1.7.4
log
@Added support for POWER key on RCA keyboard.
@
text
@a62 4

; KeyV code for POWER key

keyv_POWER              *       &80
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
