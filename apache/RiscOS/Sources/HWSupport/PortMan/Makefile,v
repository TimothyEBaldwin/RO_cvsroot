head	1.8;
access;
symbols
	PortMan-0_29:1.8
	PortMan-0_28:1.7
	PortMan-0_27:1.7
	PortMan-0_26:1.7
	PortMan-0_25:1.7
	PortMan-0_24:1.7
	PortMan-0_23:1.7
	PortMan-0_22:1.7
	PortMan-0_21:1.7
	RO_5_07:1.7
	PortMan-0_20:1.7
	PortMan-0_19:1.7
	PortMan-0_18:1.7
	PortMan-0_17:1.7
	PortMan-0_16:1.7
	PortMan-0_15:1.7
	PortMan-0_14:1.6
	PortMan-0_13:1.6
	dellis_autobuild_BaseSW:1.5
	dcotton_autobuild_BaseSW:1.6
	PortMan-0_12:1.5
	PortMan-0_11:1.5
	PortMan-0_10:1.5
	PortMan-0_09:1.5
	PortMan-0_08:1.5
	PortMan-0_07:1.5
	PortMan-0_06:1.5
	PortMan-0_05:1.5
	PortMan-0_04:1.3
	PortMan-0_03:1.2
	PortMan-0_02:1.2
	PortMan-0_01:1.1;
locks; strict;
comment	@# @;


1.8
date	2012.01.14.22.54.16;	author srevill;	state Exp;
branches;
next	1.7;
commitid	d7I9fKLgj0bt6cPv;

1.7
date	2001.11.09.17.36.03;	author dellis;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.11.19.00.56;	author nbingham;	state Exp;
branches;
next	1.5;

1.5
date	99.07.26.11.32.11;	author blaughto;	state Exp;
branches;
next	1.4;

1.4
date	99.07.23.13.01.53;	author blaughto;	state Exp;
branches;
next	1.3;

1.3
date	99.05.13.15.57.40;	author nturton;	state Exp;
branches;
next	1.2;

1.2
date	99.03.04.18.21.24;	author nturton;	state Exp;
branches;
next	1.1;

1.1
date	99.03.04.12.50.04;	author nturton;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.29. Tagged as 'PortMan-0_29'
@
text
@# Copyright 1999 Element 14 Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# PortMan OBJASM/C Makefile
#

#
# Paths
#
EXP_HDR = <export$dir>.^.Interface2
EXP_C_H = <Cexport$dir>.h
EXP_C_O = <Cexport$dir>.o

#
# Generic options:
#
MKDIR   = cdir
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
RM      = remove
WIPE    = x wipe
CD	= dir
CHMOD	= access

AFLAGS     = -depend !Depend ${THROWBACK} -Stamp -quit
CFLAGS     = -c -depend !Depend ${THROWBACK} -zM -ff ${INCLUDES} ${DFLAGS}
CMHGFLAGS  = -p ${DFLAGS} ${THROWBACK} ${INCLUDES}
CPFLAGS    = ~cfr~v
WFLAGS     = ~c~vr
CHMODFLAGS = RW/R

DFLAGS  = ${DEBUG}
#
# Libraries
#
CLIB       = CLIB:o.stubs
RLIB       = RISCOSLIB:o.risc_oslib
RSTUBS     = RISCOSLIB:o.rstubs
ROMSTUBS   = RISCOSLIB:o.romstubs
ROMCSTUBS  = RISCOSLIB:o.romcstubs
ABSSYM     = RISC_OSLib:o.AbsSym
REMOTEDB   = C:debug.o.remotezm
#
# Include files
#
INCLUDES = -IC:

# Program specific options:
#
COMPONENT = PortMan
TARGET    = aof.${COMPONENT}
SATARGET  = rm.${COMPONENT}SA
RMTARGET  = rm.${COMPONENT}
EXPORTS   = ${EXP_C_H}.${COMPONENT} ${EXP_HDR}.${COMPONENT}
RDIR      = ${RESDIR}.${COMPONENT}

OBJS      =	\
o.msgfile	\
o.tags

ROMOBJS	=	\
o.module	\
o.header

RAMOBJS	=	\
sao.module	\
sao.header	\
o<Machine>.resfiles

#
# Rule patterns
#
.SUFFIXES: .sao .o<Machine>

.c.o:;		${CC}	${CFLAGS} -o $@@ $<
.cmhg.o:;	${CMHG}	${CMHGFLAGS} -o $@@ $< h.$*
.s.o:;		${AS}	${AFLAGS} $< $@@
.s.o<Machine>:;	${AS}	${AFLAGS} $< $@@
.c.sao:;	${CC}	${CFLAGS} -DSTANDALONE -o $@@ $<
.cmhg.sao:;	${CMHG}	${CMHGFLAGS} -DSTANDALONE -o $@@ $< h.sa$*

# build a relocatable module:
#
all: ${SATARGET} dirs
        @@echo ${COMPONENT}: all complete

ram: ${RMTARGET} dirs
        @@echo ${COMPONENT}: ram complete
#
# RISC OS ROM build rules:
#
rom: ${TARGET} dirs
        @@echo ${COMPONENT}: rom complete

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

install: ${RMTARGET} dirs
        ${CP} ${RMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: ram module installed

install_rom: ${TARGET} dirs
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom module installed

clean:
        ${WIPE} aof          ${WFLAGS}
        ${WIPE} linked       ${WFLAGS}
        ${WIPE} o            ${WFLAGS}
        ${WIPE} o<Machine>   ${WFLAGS}
        ${WIPE} rm           ${WFLAGS}
        ${WIPE} sao          ${WFLAGS}
        ${RM} h.header
        ${RM} h.saheader
        ${RM} ${RMTARGET}
        ${RM} ${TARGET}
        @@echo ${COMPONENT}: cleaned

dirs:
	${MKDIR}	aof
	${MKDIR}	linked
	${MKDIR}	o
	${MKDIR}	o<Machine>
	${MKDIR}	rm
	${MKDIR}	sao


resources: LocalRes:Messages Resources.<Machine>.Tags
        ${MKDIR} ${RDIR}
        ${CP} Resources.<Machine>.Tags ${RDIR}.Tags ${CPFLAGS}
        ${CP} LocalRes:* ${RDIR}.* ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied

# dummy target
h.header: o.header	;@@
h.saheader: sao.header	;@@

#
# ROM target (re-linked at ROM Image build time)
#
${TARGET}: ${OBJS} ${ROMOBJS} ${ROMCSTUBS} 
        ${LD} -o $@@ -aof ${OBJS} ${ROMOBJS} ${ROMCSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${TARGET} ${ABSSYM}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete

#
# Relocatable module target
#
${SATARGET}: ${OBJS} ${RAMOBJS}
        ${LD} -rmf -o $@@ ${OBJS} ${RAMOBJS} ${CLIB}
        ${CHMOD} $@@ ${CHMODFLAGS}

${EXP_C_H}.${COMPONENT}:	h.${COMPONENT}
        ${CP} h.${COMPONENT} $@@ ${CPFLAGS}

${EXP_HDR}.${COMPONENT}:	hdr.${COMPONENT}
        ${CP} hdr.${COMPONENT} $@@ ${CPFLAGS}

${RMTARGET}: ${OBJS} ${ROMOBJS} ${CLIB}
        ${LD} -rmf -o $@@ ${OBJS} ${ROMOBJS} ${CLIB}
        ${CHMOD} $@@ ${CHMODFLAGS}

BBETYPE = local
bbe-local: bbe-generic
  BBE_Export_Dir Resources.<Machine>

# Extra dependencies:
o.module: h.header
sao.module: h.saheader
o<Machine>.resfiles: Resources.<Machine>.Tags
o<Machine>.resfiles: LocalRes:Messages

# Dynamic dependencies:
@


1.7
log
@  - Message lookups are now cached, so safe when IRQs threaded.
  - AddCallback in finalise corrected to RemoveCallback
  - RAM rule added to makefile for making ROM replacement

Detail:
  Customer I reported that the STB-3 was suffering from IRQ reentrancy problems.
Some of these were tracked down to PortManager calling MessageTrans_LookUp
(when IRQs were threaded), which can cause file operations after
Service_ResourceFSStarting has been issued, invalidating the MessageTrans FD.

  PortManager now caches the contents of its Tags file upon startup in a
linked list, which it searches instead of using MessageTrans.

  During testing, it was also found that crashes would often occur when
killing the module.  This was tracked down to an erroneous OS_AddCallback in
the finalisation handler.

Admin:
  Tested on STB-3.  Rentrancy problems during booting fixed.  The module
should be loaded _very_ early on in the boot sequence.  Preferrably a the
module should be launched from a utility which peeks the current softcopy of
the port bits, and programs the module with these as it's initial value for
the port.


Version 0.15. Tagged as 'PortMan-0_15'
@
text
@d35 1
a35 1
WIPE    = -wipe
@


1.6
log
@  BBE support added
Detail:
  Portman can't use bbe-generic - local mods made to makefile to ensure
  correct resources are exported.
Admin:
  Change only affects BBE.

Version 0.13. Tagged as 'PortMan-0_13'
@
text
@d66 1
d98 5
a102 3
all: ${RMTARGET} dirs
	@@echo ${COMPONENT}: all complete
	
d169 1
a169 1
${RMTARGET}: ${OBJS} ${RAMOBJS}
d171 1
a171 1
        ${CHMOD} rm.${COMPONENT} ${CHMODFLAGS}
d178 4
@


1.5
log
@Comment before Dynamic dependencies line at end was confusing AMU, causing
it do add the line again, which in turn confused it at a later stage...
@
text
@d176 4
@


1.4
log
@Summary
    Fixed Makefile and Resources and added support for STB22.

Detail
    Makefile was trying to get Messages file from Resources.<Locale>, but they
    were in Resources.<Machine> - added Resources.<Locale> and moved Messages
    in there.

    Changed to use LocalRes$Path for Messages.

    Added Resources.Peregrine and copied STB3 tags in there, to support STB22
    (as far as I know, it's the same, and what we've been using so far...).

    Added install phase to Makefile to support Expansion card builds.
Admin
    Built as part of ATM25 Expansion card build for Peregrine (STB22).

Version 0.05. Tagged as 'PortMan-0_05'
@
text
@a181 1
#
@


1.3
log
@Updated Functional Spec following review.  Fixed Messages file to be
in Locale specific directory.

Version 0.04. Tagged as 'PortMan-0_04'
@
text
@d109 4
d139 1
a139 1
resources:
d141 2
a142 2
        ${CP} resources.<Machine>.Tags ${RDIR}.Tags ${CPFLAGS}
        ${CP} resources.<Locale>.Messages ${RDIR}.Messages ${CPFLAGS}
d180 1
a180 1
o<Machine>.resfiles: Resources.<Machine>.Messages
@


1.2
log
@Added resources phase to Makefile (oops) and sends a service call round
when we're starting and dying.

Version 0.02. Tagged as 'PortMan-0_02'
@
text
@d137 2
a138 1
        ${CP} resources.<System>.Tags ${RDIR}.Tags ${CPFLAGS}
@


1.1
log
@The initial version of PortMan - the GPIO port manager.

Version 0.01. Tagged as 'PortMan-0_01'
@
text
@d68 1
d134 5
@
