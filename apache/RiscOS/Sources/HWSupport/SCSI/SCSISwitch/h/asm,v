head	1.1;
access;
symbols
	SCSISwitch-2_15:1.1
	SCSISwitch-2_14:1.1
	SCSISwitch-2_13:1.1
	SCSISwitch-2_12:1.1
	SCSISwitch-2_11:1.1
	SCSISwitch-2_10:1.1
	SCSISwitch-2_09:1.1
	SCSISwitch-2_08:1.1
	SCSISwitch-2_07:1.1
	SCSISwitch-2_06:1.1
	SCSISwitch-2_05:1.1
	SCSISwitch-2_04:1.1
	SCSISwitch-2_03:1.1
	SCSISwitch-2_02:1.1
	SCSISwitch-2_01:1.1
	SCSISwitch-2_00:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.05.23.13.10.24;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.1
log
@* New SCSIdriver replacement that acts as a dispatcher to multiple hardware
  drivers (eg SCSI cards, USB mass storage devices, ATAPI devices...).
* Not totally complete, but functioning sufficiently for SCSIFS.
* Requires a new C compiler (newer than one in CVS at time of check-in) due
  to a couple of compiler crashes - if it builds, you're compiler is new
  enough.

Version 2.00. Tagged as 'SCSISwitch-2_00'
@
text
@/* Copyright 2003 Tematic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
_kernel_oserror *asm_calldriver(void (*handler)(void),
                                void *handlerr12,
                                void *handlerr8,
                                int r11,
                                _kernel_swi_regs *r);

_kernel_oserror *asm_callrelease(void (*code)(void),
                                 void *handle,
                                 _kernel_swi_regs *r);

_kernel_oserror *asm_callcallback(void (*code)(void),
                                  void *handle,
                                  _kernel_swi_regs *r);

void asm_callbackhandler(void);
void asm_driver_callback(void);
@
