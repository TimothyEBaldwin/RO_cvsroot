head	1.9;
access;
symbols
	SCSISwitch-2_15:1.9
	SCSISwitch-2_14:1.9
	SCSISwitch-2_13:1.9
	SCSISwitch-2_12:1.9
	SCSISwitch-2_11:1.9
	SCSISwitch-2_10:1.8
	SCSISwitch-2_09:1.7
	SCSISwitch-2_08:1.6
	SCSISwitch-2_07:1.5
	SCSISwitch-2_06:1.3
	SCSISwitch-2_05:1.3
	SCSISwitch-2_04:1.3
	SCSISwitch-2_03:1.2
	SCSISwitch-2_02:1.2
	SCSISwitch-2_01:1.1
	SCSISwitch-2_00:1.1;
locks; strict;
comment	@# @;


1.9
date	2013.10.05.09.46.54;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	5eJAMgFdP7WOu58x;

1.8
date	2013.08.18.10.09.15;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	PV5CyKEROMN8aV1x;

1.7
date	2012.01.14.18.32.54;	author srevill;	state Exp;
branches;
next	1.6;
commitid	Y5psaLrSWw2OEaPv;

1.6
date	2011.12.12.17.55.41;	author srevill;	state Exp;
branches;
next	1.5;
commitid	cpsh5lnCYYONvVKv;

1.5
date	2011.11.27.18.08.56;	author jlee;	state Exp;
branches;
next	1.4;
commitid	9IrKdeCLiOCe40Jv;

1.4
date	2009.10.25.02.02.04;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.28.21.18.00;	author jballance;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.05.00.51.47;	author jballance;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.23.13.10.22;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Internationalised
Also lower cased the 'k' of kilobytes to match the kernel and SI.

Version 2.11. Tagged as 'SCSISwitch-2_11'
@
text
@# Copyright 2003 Tematic Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for SCSI driver
#

COMPONENT    = SCSIDriver
OBJS         = module scsi asm
CMHGDEPENDS  = module scsi
CMHGFILE     = header
HDRS         =
CFLAGS       = -We
CDFLAGS      = -DDEBUGLIB
LIBS         = ${CALLXLIB} ${ASMUTILS}
ROMCDEFINES  = -DROM
ifeq ("${CMDHELP}","None")
CMHGDEFINES += -DNO_INTERNATIONAL_HELP
endif

include CModule 

DBG_LIBS    += ${NET5LIBS}

# Dynamic dependencies:
@


1.8
log
@Report something other than 'unknown' for capacity in *DEVICES
Appears to be accidentally commented out since 2.05, both determinedevice() and scsi_determine_device() now follow the same logic. Previously no capacity SCSI op was made, hence -1 -1 translated to 'unknown'.
Makefile simplified based on more recent CModule fragment additions.
CMHG file lined up nicely!

Tested briefly on BBxM over USB, and on Acorn AKA31 podule.

Version 2.10. Tagged as 'SCSISwitch-2_10'
@
text
@d18 12
a29 10
COMPONENT   = SCSIDriver
OBJS        = errors module scsi asm
CMHGDEPENDS = module scsi
CMHGFILE    = header
HDRS        =
RES_OBJ     =
CFLAGS      = -We
CDFLAGS     = -DDEBUGLIB
LIBS        = ${CALLXLIB} ${ASMUTILS}
CUSTOMRES   = custom
d33 1
a33 1
DBG_LIBS   += ${NET5LIBS}
@


1.7
log
@Makefile fixes.

Version 2.09. Tagged as 'SCSISwitch-2_09'
@
text
@a16 8
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 15-Jul-99  SBF          Created
# 27-Jul-99  SBF          Added DebugLib support
# 24-Aug-99  SBF/KJB      Added support for standard and debug targets
d18 1
a18 9
DEBUG ?= FALSE

ifeq (${DEBUG},TRUE)
CFLAGS += -DDEBUGLIB
CMHGFLAGS += -DDEBUGLIB
LIBS = ${DEBUGLIBS} ${NET5LIBS}
endif

COMPONENT   = SCSIdriver
d20 1
d24 4
a28 11
CINCLUDES   =
CFLAGS      += -We -zM -ffa
CMHGDEPENDS = module scsi
LIBS        += ${CALLXLIB} ${ASMUTILS}

CMDHELP     = custom

include StdTools
include ModStdRule
include ModuleLibs
include DbgRules
d31 1
a31 2
resources-custom:
        ${NOP}
@


1.6
log
@Fixed the Makefile.

Attempted a non-existent export in the resources phase.

Version 2.08. Tagged as 'SCSISwitch-2_08'
@
text
@d45 1
a45 1
CUSTOMRES    = custom
d53 1
a53 1
resources:
@


1.5
log
@Add missing timeout functionality. Avoid issuing INQUIRY commands with 5 bytes of response data. Rewrite makefile and tidy code a bit.
Detail:
  Makefile - Rewritten to use makefile fragments
  !MkDebug,fd7 - Added script to build softloadable debug version
  c/svcprint - Removed obsolete file
  c/cmodule, c/scsi, h/module, h/scsiswitch - Fixed compiler warnings. Implemented missing timeout functionality for drivers which support background transfers. Use Portable_Idle within the foreground-as-background loop to avoid the CPU spinning in a loop so much. Avoid race conditions if a transfer completes at the same time as an escape/timeout event.
  c/scsi - SCSI_Initialise 2 (determine device) now issues a 36 byte inquiry instead of a 5 byte one. This avoids an issue where some dodgy SCSI devices don't respond properly (or at all) to 5-byte inquiries.
Admin:
  Tested in softload on Iyonix


Version 2.07. Tagged as 'SCSISwitch-2_07'
@
text
@d45 2
d53 3
@


1.4
log
@Add missing 'install' target to SCSISwitch makefile

Version 2.06. Not tagged
@
text
@d26 1
a26 6
#
# Paths
#
EXP_HDR = <export$dir>.^.Interface2
EXP_C_H = <Cexport$dir>.h
EXP_C_O = <Cexport$dir>.o
d28 16
a43 14
#
# Generic options:
#
MKDIR   = cdir
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
RM      = remove
WIPE    = -wipe
CD      = dir
TOUCH   = create
STRIP   = -stripdepnd
d45 2
a46 30
AFLAGS     = -depend !Depend ${THROWBACK} -Stamp -quit
CFLAGS     = -c -We -depend !Depend ${THROWBACK} -zM -ffa ${INCLUDES} ${DFLAGS}
CMHGFLAGS  = -p ${DFLAGS} ${THROWBACK} ${INCLUDES}
CPFLAGS    = ~cfr~v
WFLAGS     = ~c~vr

DFLAGS     = ${OPTIONS}
DEBUG      = -DDEBUGLIB

#
# Libraries
#
#CLIB       = CLIB:o.stubs
#RLIB       = RISCOSLIB:o.risc_oslib
#RSTUBS     = RISCOSLIB:o.rstubs
#ROMSTUBS   = RISCOSLIB:o.romstubs
#ROMCSTUBS  = RISCOSLIB:o.romcstubs
#ABSSYM     = RISC_OSLib:o.AbsSym
#REMOTEDB   = C:debug.o.remotezm
#DEBUGLIB   = C:DebugLib.o.DebugLibzm
#INETLIB    = TCPIPLibs:o.inetlibzm
#SOCKLIB    = TCPIPLibs:o.socklib5zm
#UNIXLIB    = TCPIPLibs:o.unixlibzm
MYDEBUGLIBS  =  ${DEBUGLIB} ${NET5LIBS} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
#
#                                                              ${DEBUGLIB} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB}  ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS} ${SOCKLIB} ${INETLIB} ${UNIXLIB}
# ${DEBUGLIB} ${SOCKLIB} ${INETLIB} ${UNIXLIB} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB}  ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}                                                     
# Include files
#
INCLUDES = -IC:
d48 2
a50 115
# Program specific options:
#
COMPONENT = SCSIdriver
TARGET    = aof.${COMPONENT}
RMTARGET  = rm.${COMPONENT}
DBGTARGET = rm.SCSIDebug
EXPORTS   =
DIRS      = o._dirs

OBJS      =  \
o.module     \
o.scsi       \
o.errors     \
o.asm        \
o.svcprint   \
o.header

OBJS_D    =  \
od.module    \
od.scsi      \
od.errors    \
od.svcprint  \
o.asm        \
o.header

#
# Rule patterns
#
.SUFFIXES:
.SUFFIXES: .o .od .h .s .cmhg .c
.c.o:;      ${CC}   ${CFLAGS} -o $@@ $<
.c.od:;     ${CC}   ${CFLAGS} ${THROWBACK} ${DEBUG} -o $@@ $<
.cmhg.h:;   ${CMHG} ${CMHGFLAGS} -d $@@ $<
.cmhg.o:;   ${CMHG} ${CMHGFLAGS} -o $@@ $<
.s.o:;      ${AS}   ${AFLAGS} $< $@@

# Build all variants
#
all:	ram debug rom

# Build a relocatable module:
#
ram:    ${RMTARGET}
        @@echo ${COMPONENT}: all complete

# Build a debug module:
debug:  ${DBGTARGET}     
        @@echo RCMMDebug: all complete

#
# RISC OS ROM build rules:
#
rom:    ${TARGET}
        @@echo ${COMPONENT}: rom complete

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

install_rom: ${TARGET}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom module installed

install: ${RMTARGET}
        ${CP} ${RMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: ram module installed

clean:
        ${WIPE} o        ${WFLAGS}
        ${WIPE} od       ${WFLAGS}
        ${WIPE} linked   ${WFLAGS}
        ${WIPE} rm       ${WFLAGS}
        ${WIPE} aof      ${WFLAGS}
        ${RM} h.header
        ${RM} ${TARGET}
        ${STRIP}
        @@echo ${COMPONENT}: cleaned

o.module od.module: h.header

${DIRS}:
        ${MKDIR} o
        ${MKDIR} od
        ${TOUCH} $@@

#
# ROM target (re-linked at ROM Image build time)
#
${TARGET}: ${OBJS} ${ROMCSTUBS} ${DIRS}
        ${MKDIR} aof
        ${LD} -o $@@ -aof ${OBJS} ${ROMCSTUBS}

#
# Final link for the ROM Image (using given base address)
#
rom_link:
        ${MKDIR} linked
        ${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${TARGET} ${ABSSYM}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete

#
# Relocatable module target
#
${RMTARGET}: ${OBJS} ${DIRS}
        ${MKDIR} rm
        ${LD} -rmf -o $@@ ${OBJS} ${CLIB}

${DBGTARGET}: ${OBJS_D} ${DIRS}
        ${MKDIR} rm
        ${LD} -rmf -o $@@ ${OBJS_D} ${CLIB} ${MYDEBUGLIBS}

${EXP_C_H}.${COMPONENT}:     h.${COMPONENT}
        ${CP} h.${COMPONENT} $@@ ${CPFLAGS}

#
@


1.3
log
@	makefile change to remove reference to cc558beta
Detail:
Admin:  Version number not updated .. should get updated
	when more changes inserted

Version 2.03. Not tagged
@
text
@d142 4
@


1.2
log
@	Modded to build in ROM. Added some debug.

Detail:
Admin:  for beta release. Tested at Castle. Castle added IP


Version 2.02. Tagged as 'SCSISwitch-2_02'
@
text
@d38 1
a38 1
CC      = cc558beta
@


1.1
log
@* New SCSIdriver replacement that acts as a dispatcher to multiple hardware
  drivers (eg SCSI cards, USB mass storage devices, ATAPI devices...).
* Not totally complete, but functioning sufficiently for SCSIFS.
* Requires a new C compiler (newer than one in CVS at time of check-in) due
  to a couple of compiler crashes - if it builds, you're compiler is new
  enough.

Version 2.00. Tagged as 'SCSISwitch-2_00'
@
text
@d38 1
a38 1
CC      = ncc
d60 12
a71 13
CLIB       = CLIB:o.stubs
RLIB       = RISCOSLIB:o.risc_oslib
RSTUBS     = RISCOSLIB:o.rstubs
ROMSTUBS   = RISCOSLIB:o.romstubs
ROMCSTUBS  = RISCOSLIB:o.romcstubs
ABSSYM     = RISC_OSLib:o.AbsSym
REMOTEDB   = C:debug.o.remotezm
DEBUGLIB   = C:DebugLib.o.DebugLibzm
INETLIB    = TCPIPLibs:o.inetlibzm
SOCKLIB    = TCPIPLibs:o.socklib5zm
UNIXLIB    = TCPIPLibs:o.unixlibzm
DEBUGLIBS  = ${DEBUGLIB} ${INETLIB} ${SOCKLIB} ${UNIXLIB}

d73 2
d78 1
d111 1
a111 1
.c.od:;     ${CC}   ${CFLAGS} ${DEBUG} -o $@@ $<
d185 1
a185 1
        ${LD} -rmf -o $@@ ${OBJS_D} ${CLIB} ${DEBUGLIBS}
@

