head	1.2;
access;
symbols
	SCSISwitch-2_10:1.1
	SCSISwitch-2_09:1.1
	SCSISwitch-2_08:1.1
	SCSISwitch-2_07:1.1
	SCSISwitch-2_06:1.1
	SCSISwitch-2_05:1.1
	SCSISwitch-2_04:1.1
	SCSISwitch-2_03:1.1
	SCSISwitch-2_02:1.1
	SCSISwitch-2_01:1.1
	SCSISwitch-2_00:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.10.05.09.46.59;	author rsprowson;	state dead;
branches;
next	1.1;
commitid	5eJAMgFdP7WOu58x;

1.1
date	2003.05.23.13.10.22;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Internationalised
Also lower cased the 'k' of kilobytes to match the kernel and SI.

Version 2.11. Tagged as 'SCSISwitch-2_11'
@
text
@/* Copyright 2003 Tematic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "kernel.h"

#include "errors.h"

#define ErrType(str) const struct { int errnum; char errmess[sizeof str]; }
#define ErrBlock(num, str) (ErrType(str)) { num, str }
#define ErrEntry(num, str) [num] = (_kernel_oserror *) &ErrBlock(SCSI_ErrorBase+num,str)

static _kernel_oserror * const errtable[256] =
{
    ErrEntry(SCSI_NoRoom,        "No room for SCSI driver workspace"),
    ErrEntry(SCSI_SWIunkn,       "Unknown SCSI SWI number"),
    ErrEntry(SCSI_RCunkn,        "Unknown reason code for SCSI SWI"),
    ErrEntry(SCSI_BadReset,      "SCSI bus failed to reset"),
    ErrEntry(SCSI_BadHostID,     "Invalid SCSI host ID"),
    ErrEntry(SCSI_BadDevID,      "Invalid SCSI device ID"),
    ErrEntry(SCSI_NoDevice,      "No hardware at this device ID"),
    ErrEntry(SCSI_Established,   "Device already established"),
    ErrEntry(SCSI_NotEstablished,"Device not established"),
    ErrEntry(SCSI_NotIdle       ,"Device not idle"),
    ErrEntry(SCSI_Timeout       ,"Timeout"),
    ErrEntry(SCSI_Timeout2      ,"Timeout"),
    ErrEntry(SCSI_QueueNotEmpty ,"Command queue not empty"),
    ErrEntry(SCSI_QueueFull     ,"Command queue full"),
    ErrEntry(SCSI_DevReserved   ,"SCSI driver reservation error"),
    ErrEntry(SCSI_InvalidParms  ,"Invalid parameters"),
    ErrEntry(SCSI_ParmError     ,"Parameter error" ),
    ErrEntry(SCSI_NotFromIRQ    ,"Not callable from IRQ routine"),
    ErrEntry(SCSI_AbortOp       ,"Operation aborted"),
    ErrEntry(SCSI_Died          ,"Unexpected disconnection"),
    ErrEntry(SCSI_WrongMEMC     ,"SCSI requires MEMC1a - see your dealer"),

    ErrEntry(SCSI_CheckCondition,"Target status - Check condition"),
    ErrEntry(SCSI_Busy          ,"Target status - Busy"),
    ErrEntry(SCSI_StatusUnkn    ,"Target status - Unknown"),

    ErrEntry(SCSI_CC_NoSense       , "Target error - No sense"),
    ErrEntry(SCSI_RecoveredError   , "Target error - Recovered error"),
    ErrEntry(SCSI_CC_NotReady      , "Target error - Not ready"),
    ErrEntry(SCSI_CC_MediumError   , "Target error - Medium error"),
    ErrEntry(SCSI_CC_HardwareError , "Target error - Hardware error"),
    ErrEntry(SCSI_CC_IllegalRequest, "Target error - Illegal request"),
    ErrEntry(SCSI_CC_UnitAttention , "Target error - Unit attention"),
    ErrEntry(SCSI_CC_DataProtect   , "Target error - Data protect"),
    ErrEntry(SCSI_CC_BlankCheck    , "Target error - Blank check"),
    ErrEntry(SCSI_CC_VendorUnique  , "Target error - Vendor unique"),
    ErrEntry(SCSI_CC_CopyAborted   , "Target error - Copy aborted"),
    ErrEntry(SCSI_CC_AbortedCommand, "Target error - Aborted command"),
    ErrEntry(SCSI_CC_Equal         , "Target error - Equal"),
    ErrEntry(SCSI_CC_VolumeOverflow, "Target error - Volume overflow"),
    ErrEntry(SCSI_CC_Miscompare    , "Target error - Miscompare"),
    ErrEntry(SCSI_CC_Reserved      , "Target error - Reserved sense key"),
    ErrEntry(SCSI_CC_UnKn          , "Target error - Unknown")
};

_kernel_oserror *scsi_error(unsigned err)
{
    if (err >= 256) return (_kernel_oserror *) err;

    if (errtable[err]) return errtable[err];

    return scsi_error(SCSI_InvalidParms);
}
@


1.1
log
@* New SCSIdriver replacement that acts as a dispatcher to multiple hardware
  drivers (eg SCSI cards, USB mass storage devices, ATAPI devices...).
* Not totally complete, but functioning sufficiently for SCSIFS.
* Requires a new C compiler (newer than one in CVS at time of check-in) due
  to a couple of compiler crashes - if it builds, you're compiler is new
  enough.

Version 2.00. Tagged as 'SCSISwitch-2_00'
@
text
@@

