head	1.1;
access;
symbols
	Sound0HAL-1_88:1.1
	Sound0HAL-1_87:1.1
	Sound0HAL-1_86:1.1
	Sound0HAL-1_85:1.1
	Sound0HAL-1_84:1.1
	Sound0HAL-1_83:1.1
	Sound0HAL-1_82:1.1
	Sound0HAL-1_81:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.12.01.20.48.01;	author jlee;	state Exp;
branches;
next	;
commitid	oU5pl7g7AqO7RhLy;


desc
@@


1.1
log
@Add device enumeration and selection APIs. Make audio HAL device API more flexible. Add a generic software mixer implementation that can be used for devices where no hardware mixer is available.
Detail:
  Makefile - Include new source files. Export a C version of hdr/Sound.
  Resources/* - Add new error text to messages file and update command help text
  Version - Update MaxDeviceVersion. Add MinDeviceVersion definition to get rid of a magic constant from the code. Add new switch for whether software mixer support is enabled.
  hdr/AudioDevice - Extend with audio device API 3 features. Buffer size granularity can now be non-power of 2 values, and CustomDMA can be used in a synchronous manner instead of an asynchronous manner (asynchronous defers buffer filling to an RTSupport routine, synchronous performs it directly from within the callback from the device). Also correct a comment relating to AudioRateTable_Frequency.
  hdr/Sound - Add new SWIs and reason codes. Protect a portion of the header from being processed by Hdr2H (Hdr2H can't handle it)
  s/Sound0 - Change default sample rate & buffer size settings to 22050Hz (none of the hardware currently supported by this version of the module supports 20833Hz). Add implementations of the new SWIs and features. Tidy up a couple of other bits.
  s/Sound0NEON - Refactor post-processing code to add support for the software mixer - code is now generated by macros rather than copy & paste. Fix indentation of some other code sections.
  s/DeviceList - New file to contain code related to managing the list of audio devices that SoundDMA now keeps.
  s/SoftMix - New file containing the software mixer device implementation. Implements a single mixer channel to control the overall gain of the sound system. Mixing/volume scaling is performed by the buffer post-processing sequences in Sound0ARM/Sound0NEON, with the optimisation of skipping the processing for a gain of +0dB. Note however that Sound0ARM has yet to be updated and so software mixing is currently only available for the NEON version of the module.
Admin:
  Tested in iMX6 ROM
  German resources are in need of translation


Version 1.81. Tagged as 'Sound0HAL-1_81'
@
text
@; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

DeviceList_Remove ROUT
        ; In:
        ;   r2 -> HAL device
        ;   r12 = SoundRMA
        Entry   "r0-r4"
        Debug   devlist,"DeviceList_Remove",r2
        ; See if this is in our list of devices
        BL      DeviceList_FindByDevice
        CMP     r4, #0
        DebugIf EQ,devlist,"Not found"
        EXIT    EQ
        ; Found it; now get rid of it
        LDR     r0, [r4, #DeviceList_Next]
        STR     r0, [r3, #DeviceList_Next] ; Unlink
      [ SupportSoftMix
        LDR     r0, [r4, #DeviceList_SoftMixDevice]
        CMP     r0, #0
        BLNE    SoftMixShutdown
      ]
        MOV     r0, #ModHandReason_Free
        MOV     r2, r4
        SWI     XOS_Module        
        Debug   devlist,"DeviceList_Remove done"
        EXIT

DeviceList_Add ROUT
        ; In:
        ;   r2 -> Audio HAL device with compatible API version
        ;   r12 = SoundRMA
        ; Out:
        ;   r0 = device list entry, or error
        Entry   "r0-r4"
        Debug   devlist,"DeviceList_Add",r2
        ; Add to our device list, and create a software mixer if necessary
        ; ID strings are generated from the ID & Location fields of the device struct, and are of the form 'SoundDMA#HAL_xxxx_yyyyyyyy'
        MOV     r0, #ModHandReason_Claim
        MOV     r3, #DeviceList_ID + (:LEN: "SoundDMA#HAL_xxxx_yyyyyyyy") + 1 
        SWI     XOS_Module
        FRAMSTR r0, VS
        EXIT    VS
        FRAMLDR r3,,r2
        STR     r3, [r2, #DeviceList_AudioDevice]
        ; Generate ID string
        ADD     r1, r2, #DeviceList_ID
        ADR     r0, DeviceIDProto
10
        LDRB    lr, [r0], #1
        CMP     lr, #0
        STRNEB  lr, [r1], #1
        BNE     %BT10
      [ UseLDRSH
        LDRH    r0, [r3, #HALDevice_ID]
      |
        LDRB    r0, [r3, #HALDevice_ID]
        LDRB    lr, [r3, #HALDevice_ID+1]
        ORR     r0, r0, lr, LSL #8
      ]
        Push    "r2"
        MOV     r2, #5
        SWI     XOS_ConvertHex4
        MOV     r2, #'_'
        STRB    r2, [r1], #1
        LDR     r0, [r3, #HALDevice_Location]
        MOV     r2, #9
        SWI     XOS_ConvertHex8
        Pull    "r2"
      [ SupportSoftMix
        ; Software mixer needed?
        LDR     r0, [r3, #HALDevice_AudioMixer]
        CMP     r0, #0
        MOVNE   r0, #0
        BLEQ    SoftMixInit
        STRVC   r0, [r2, #DeviceList_SoftMixDevice]
        BVC     %FT50
        Debug   devlist,"SoftMixDevice=",r0
        FRAMSTR r0
        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module
        SETV
        EXIT
50
      ]
        ; Link into our list
        LDR     r0, [r12, #DeviceList]
        STR     r0, [r2, #DeviceList_Next]
        STR     r2, [r12, #DeviceList]
        FRAMSTR r2,,r0
        Debug   devlist,"DeviceList_Add done"
        EXIT

DeviceIDProto
        DCB     "SoundDMA#HAL_", 0
        ALIGN

Initialise_DeviceList ROUT
        ; Do the initial scan for devices and initialise the device list
        Entry   "r0-r4,r8"
        Debug   devlist,"Initialise_DeviceList"
        MOV     r1, #0
        MOV     r8, #OSHW_DeviceEnumerate
10      LDR     r0, =MaxDeviceVersion:SHL:16 :OR: HALDeviceType_Audio :OR: HALDeviceAudio_AudC
        SWI     XOS_Hardware
        DebugIf VS,devlist,"Initialise_DeviceList err"
        EXIT    VS
        CMP     r1, #-1
        DebugIf EQ,devlist,"Initialise_DeviceList done"
        EXIT    EQ
        ; Check device meets minimum version requirement
        LDR     r0, [r2, #HALDevice_Version]
        CMP     r0, #MinDeviceVersion:SHL:16
        BLO     %BT10
        ; Check device not already on the list (can happen if we create a software mixer - will cause everything returned by OSHW_DeviceEnumerate to get shifted along one)
        ; Note that we could switch to EnumerateChrono, but then (because we insert at the front of our device list) the list will end up with the newest device at the front, which may cause issues with selecting the default device (generally, aim for the oldest device -> most likely to be motherboard audio, and so most likely to always be present)
        ; Changing DeviceList_Add to insert at the rear would fix that, but slow down device addition in general, whereas this check here will only slow us down when we first initialise the list.
        BL      DeviceList_FindByDevice
        CMP     r4, #0
        BLEQ    DeviceList_Add
        B       %BT10

Finalise_DeviceList ROUT
        ; Free all device list entries
        Entry   "r2"
        Debug   devlist,"Finalise_DeviceList"
10
        LDR     r2, [r12, #DeviceList]
        CMP     r2, #0
        DebugIf EQ,devlist,"Finalise_DeviceList done"
        EXIT    EQ
        LDR     r2, [r2, #DeviceList_AudioDevice]
        BL      DeviceList_Remove
        B       %BT10

DeviceList_FindByDevice ROUT
        ; In:
        ;  r2 = Audio device ptr
        ;  r12 = SoundRMA
        ; Out:
        ;  r3 = previous entry in list
        ;  r4 = device list entry, or 0 if not found
        Entry
        Debug   devlist, "FindByDevice", r2
        ADD     r3, r12, #DeviceList-DeviceList_Next
10
        LDR     r4, [r3, #DeviceList_Next]
        CMP     r4, #0
        DebugIf EQ,devlist,"Not found"
        EXIT    EQ
        LDR     lr, [r4, #DeviceList_AudioDevice]
        CMP     lr, r2
        MOVNE   r3, r4
        BNE     %BT10
        Debug   devlist,"Found",r3,r4
        EXIT

DeviceList_FindByID ROUT
        ; In:
        ;  r0 = space/control-terminated device ID string
        ;  r12 = SoundRMA
        ; Out:
        ;  r3 = device list entry, or 0 if not found
        Entry   "r0-r2"
        DebugS  devlist, "FindByID", r0
        ADD     r3, r12, #DeviceList-DeviceList_Next
10
        LDR     r3, [r3, #DeviceList_Next]
        CMP     r3, #0
        DebugIf EQ,devlist,"Not found"
        EXIT    EQ
        ADD     r1, r3, #DeviceList_ID
        FRAMLDR r0
20
        LDRB    r2, [r0], #1
        CMP     r2, #32
        MOVLS   r2, #0
        LDRB    lr, [r1], #1
        CMP     r2, lr
        BNE     %BT10
        CMP     r2, #0
        BNE     %BT20
        Debug   devlist,"Found",r3
        EXIT

        END
@
