head	1.2;
access;
symbols
	Sound0HAL-1_88:1.2
	Sound0HAL-1_87:1.2
	Sound0HAL-1_86:1.2
	Sound0HAL-1_85:1.2
	Sound0HAL-1_84:1.2
	Sound0HAL-1_83:1.2
	Sound0HAL-1_82:1.2
	Sound0HAL-1_81:1.2
	Sound0HAL-1_80:1.1
	Sound0HAL-1_79:1.1
	Sound0HAL-1_78:1.1
	Sound0HAL-1_77:1.1
	Sound0HAL-1_76:1.1
	Sound0HAL-1_75:1.1
	Sound0HAL-1_74:1.1
	Sound0HAL-1_73:1.1
	Sound0HAL-1_72:1.1
	Sound0HAL-1_71:1.1
	Sound0HAL-1_70:1.1
	Sound0HAL-1_69:1.1
	Sound0HAL-1_68:1.1
	Sound0HAL-1_67:1.1
	Sound0HAL-1_66:1.1
	Sound0HAL-1_65:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.12.01.20.47.47;	author jlee;	state Exp;
branches;
next	1.1;
commitid	oU5pl7g7AqO7RhLy;

1.1
date	2010.01.16.03.53.09;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Add device enumeration and selection APIs. Make audio HAL device API more flexible. Add a generic software mixer implementation that can be used for devices where no hardware mixer is available.
Detail:
  Makefile - Include new source files. Export a C version of hdr/Sound.
  Resources/* - Add new error text to messages file and update command help text
  Version - Update MaxDeviceVersion. Add MinDeviceVersion definition to get rid of a magic constant from the code. Add new switch for whether software mixer support is enabled.
  hdr/AudioDevice - Extend with audio device API 3 features. Buffer size granularity can now be non-power of 2 values, and CustomDMA can be used in a synchronous manner instead of an asynchronous manner (asynchronous defers buffer filling to an RTSupport routine, synchronous performs it directly from within the callback from the device). Also correct a comment relating to AudioRateTable_Frequency.
  hdr/Sound - Add new SWIs and reason codes. Protect a portion of the header from being processed by Hdr2H (Hdr2H can't handle it)
  s/Sound0 - Change default sample rate & buffer size settings to 22050Hz (none of the hardware currently supported by this version of the module supports 20833Hz). Add implementations of the new SWIs and features. Tidy up a couple of other bits.
  s/Sound0NEON - Refactor post-processing code to add support for the software mixer - code is now generated by macros rather than copy & paste. Fix indentation of some other code sections.
  s/DeviceList - New file to contain code related to managing the list of audio devices that SoundDMA now keeps.
  s/SoftMix - New file containing the software mixer device implementation. Implements a single mixer channel to control the overall gain of the sound system. Mixing/volume scaling is performed by the buffer post-processing sequences in Sound0ARM/Sound0NEON, with the optimisation of skipping the processing for a gain of +0dB. Note however that Sound0ARM has yet to be updated and so software mixing is currently only available for the NEON version of the module.
Admin:
  Tested in iMX6 ROM
  German resources are in need of translation


Version 1.81. Tagged as 'Sound0HAL-1_81'
@
text
@# Copyright 2010 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for Sound DMA Handler (Sound0)
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 07-Mar-01  SNB          Recreated
#

COMPONENT = SoundDMA
TARGET    = Sound0
HEADER1   = Sound
HEADER2   = AudioDevice
ASMCHEADER1 = Sound
EXPORTS   = ${C_EXP_HDR}.${ASMCHEADER1}
HELPSRC   = HelpSrc
TOKHELPSRC= ${TOKENSOURCE}
RESFSDIR  = ${RESDIR}.${COMPONENT}

include StdTools
include AAsmModule

# Dynamic dependencies:
@


1.1
log
@Add initial version of new SoundDMA module, 'Sound0HAL'
Detail:
  Based on the Sound0Trid source code, this version of SoundDMA makes use of a new version of the audio controller HAL device API. Briefly:
  * DMA is handled by the HALified DMAManager
  * The DMASync callback is used to trigger audio buffer filling
  * The set of available sample rates is dictated by the audio controller device
  * Basic support for resetting the audio when an error occurs (e.g. FIFO under/overflow causing stereo channels to be swapped)
  * Module is now ARMv6/7-safe, due to use of LDR(S)H instead of unaligned loads. This comes at the cost of losing RiscPC compatability. Can be disabled if needed via setting UseLDRSH to false.
  * To keep the code simple, it only accepts devices which use the new API version.
  * Sound0Enable now enables IRQs for most of its execution, to allow for supporting slow devices (e.g. IIC communications with the TPS65950). The PRMs describe Sound_Enable as having undefined reentrancy & IRQ state, so this should be OK with regards to code compatability.
  * The stereo reverse code still needs to be made ARMv6/v7-safe, as well as (preferably) being something that can be selectively enabled at runtime, depending on the audio controller in use
  * The oversampling code is disabled, much as it was in Sound0Trid.
  * The pipelining of sample rate changes that Sound0Trid performed is gone - partly to keep the code simple, and partly because it wouldn't work too well with the TPS65950 (due to the intermediate FIFO that the samples pass through, and the fact that the TPS audio codec must be turned off to change the sample rate)
Admin:
  Tested on rev C2 beagleboard.


Version 1.65. Tagged as 'Sound0HAL-1_65'
@
text
@d29 2
@

