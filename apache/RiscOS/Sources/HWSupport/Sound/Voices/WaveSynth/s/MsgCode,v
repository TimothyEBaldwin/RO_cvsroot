head	4.3;
access;
symbols
	WaveSynth-1_25:4.3
	WaveSynth-1_24:4.3
	WaveSynth-1_23:4.3
	WaveSynth-1_22:4.3
	WaveSynth-1_21:4.3
	WaveSynth-1_20:4.3
	RO_5_07:4.3
	WaveSynth-1_19:4.3
	WaveSynth-1_18:4.3
	WaveSynth-1_17:4.2
	WaveSynth-1_16:4.2
	WaveSynth-1_15:4.1
	Ursula_merge:4.1
	nturton_WaveSynth-1_13:4.1
	dcotton_wavesynth_MPTInitialBuild:4.1.7.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2001.03.16.16.15.32;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.12.02.11.38.45;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.38.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.38.10;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.46.11;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.05.51;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.57.14;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 1.18. Tagged as 'WaveSynth-1_18'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; OSS Message file handling code, created for Internationalisation.
; The workspace usage in WaveSynth is somewhat unconventional, which
; means that I can't easily use the workspace to open the Messages
; file so I open and close it on demand on the stack.


; Lookup a string in the message file, and return a direct pointer to it.
; If file handle (R11) is zero then return zero as looked up string.
; Entry: R0 -> Token
;        R11 -> message file block
; Exit:  R0 -> String or V set error return

lookup_zero_file_r11 Entry "r1-r7"
        MOV     r1, r0                          ; Token
        SUBS    r0, r11, #0                     ; File handle (clears V!)
        EXIT    EQ                              ; No file so return zero

        MOV     r2, #0                          ; Direct pointer please
        MOV     r4, #0                          ; No %0
        MOV     r5, #0                          ; No %1
        MOV     r6, #0                          ; No %2
        MOV     r7, #0                          ; No %3
        SWI     XMessageTrans_Lookup
        MOVVC   r0, r2                          ; Result if no error
        EXIT


; OSS Size of temporary block for when we do a lookup with subsitution.

temp_block_size         *       512


; OSS Print a GS Transed string from the Messages file, with four parameters.
; Temporarily claims a block of RMA for the buffer. The 16 bytes of stack
; is to pass down to the open/close message file functions for them to use
; for the stupid 16 byte MessageTrans block. This is held in R11.

; In:           r0 -> token
;               r1 -> %0
;               r11 -> 16 byte file block
; Out:          r0 undefined, all other registers preserved, flags undefined
; Error:        r0 -> error block, V set

gs_lookup_print_string_one_file_r11 Entry "r1-r7"
        TEQ     r11, #0
        BNE     %FT10
        SWI     XOS_Write0                      ; No file so print the token
        SWIVC   XOS_NewLine                     ; and an LF/CR pair.
        EXIT
10

; Move input parameters. "Fortunately", OS_Module Claim needs r0, r2 and r3
; which just "happen" to be the ones we don't need yet. (I spy careful design
; of the MessageTrans interface!)

        MOV     r4, r1                          ; -> %0
        MOV     r1, r0                          ; Message token

; Claim the temporary block

        MOV     r0, #ModHandReason_Claim
        MOV     r3, #temp_block_size
        SWI     XOS_Module
        BLVS    close_message_file_r11          ; Preserves R0 and V set
        EXIT    VS

; r2 -> block, r3 = size of block as required by MessageTrans

        MOV     r0, r11                         ; Message file handle in R11
        MOV     r5, #0                          ; -> No %1
        MOV     r6, #0                          ; -> No %2
        MOV     r7, #0                          ; -> No %3
        SWI     XMessageTrans_GSLookup
        MOVVS   r6, r0                          ; Squirrel error away
        BVS     free_block
        MOV     r6, #0                          ; Flag no error

; Now print the string from the block

        MOV     r0, r2                          ; Resulting string
        MOV     r1, r3                          ; String length
        SWI     XOS_WriteN
        MOVVS   r6, r0                          ; Squirrel error away

free_block ; r2 still points to the block!

        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module
        TEQ     r6, #0                          ; Was there an earlier error?
        EXIT    EQ
        MOV     r0, r6                          ; Restore it and set V
        SETV
        EXIT


message_filename
        DCB     "Resources:$.Resources.WaveSynth.Messages", 0
        ALIGN


; Open the message file, using the 16 byte block passed in R11.
; Preserves all registers, if error then R0->error block, V set.

open_message_file_r11 Entry "r0-r2"
        MOV     r0, r11                         ; Block passed for file
        ADR     r1, message_filename
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile          ; Open the file
        STRVS   r0, [sp]
        MOVVS   r11, #0                         ; Set handle to 0 on error
        EXIT


; Close the message file block passed in R11 (or ignore if 0).
; Preserves all registers, if error then R0->error block, V set.

close_message_file_r11 Entry "r0"
        SUBS    r0, r11, #0                     ; File handle (clears V!)
        EXIT    EQ                              ; No file so return.

        SWI     XMessageTrans_CloseFile         ; Close the file.
        STRVS   r0, [sp]
        EXIT

        END
@


4.2
log
@  32-bit compatible module.
Detail:
  Voice code was already OK, just module header tidying up.
Admin:
  Built.

Version 1.16. Tagged as 'WaveSynth-1_16'
@
text
@d28 1
a28 1
lookup_zero_file_r11 ENTRY "r1-r7"
d59 1
a59 1
gs_lookup_print_string_one_file_r11 ENTRY "r1-r7"
d119 1
a119 1
open_message_file_r11 ENTRY "r0-r2"
d132 1
a132 1
close_message_file_r11 ENTRY "r0"
@


4.1
log
@Initial revision
@
text
@d30 2
a31 2
        MOVS    r0, r11                         ; File handle
        EXITS   EQ                              ; No file so return zero
d105 3
a107 2
        MOVNE   r0, r6                          ; Restore it and set V
        SETV    NE
d133 2
a134 2
        MOVS    r0, r11                         ; Message file block.
        EXITS   EQ                              ; No file so return.
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
