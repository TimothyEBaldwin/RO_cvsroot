head	1.2;
access;
symbols
	NVRAM-0_68:1.2
	NVRAM-0_67:1.2
	NVRAM-0_66:1.2
	RO_5_07:1.2
	NVRAM-0_65:1.2
	NVRAM-0_64:1.2
	NVRAM-0_63:1.2
	NVRAM-0_62:1.2
	NVRAM-0_61:1.2
	NVRAM-0_60:1.2
	NVRAM-0_59:1.2
	NVRAM-0_58:1.2
	NVRAM-0_57:1.2
	NVRAM-0_56:1.2
	NVRAM-0_55:1.2
	NVRAM-0_54:1.2
	NVRAM-0_53:1.2
	NVRAM-0_52:1.2
	NVRAM-0_51:1.2
	NVRAM-0_50:1.2
	dellis_autobuild_BaseSW:1.2
	NVRAM-0_49:1.2
	NVRAM-0_48:1.2
	NVRAM-0_47:1.1
	NVRAM-0_45:1.1
	NVRAM-0_44:1.1
	NVRAM-0_43:1.1
	NVRAM-0_42:1.1
	sbrodie_sedwards_16Mar2000:1.1
	NVRAM-0_41:1.1
	NVRAM-0_40:1.1
	NVRAM-0_39:1.1
	NVRAM-0_38:1.1
	NVRAM-0_37:1.1
	NVRAM-0_36:1.1
	NVRAM-0_35:1.1
	NVRAM-0_33:1.1
	NVRAM-0_31:1.1
	NVRAM-0_30:1.1
	NVRAM-0_29:1.1
	NVRAM-0_28:1.1
	NVRAM-0_27:1.1
	NVRAM-0_26:1.1
	NVRAM-0_25:1.1
	NVRAM-0_24:1.1
	NVRAM-0_23:1.1
	dcotton_autobuild_BaseSW:1.2
	nturton_NVRAM-0_21:1.1
	NVRAM-0_22:1.1
	dcotton_nvram-MPTInitialBuild:1.1
	NVRAM-0_21:1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	Ursula_RiscPC:1.1.0.8
	NVRAM-0_20:1.1
	NVRAM-0_19:1.1
	NVRAM-0_18:1.1
	NVRAM-0_17:1.1
	NVRAM-0_16:1.1
	Spin_merge:1.1.1.1
	NVRAM-0_15:1.1
	NVRAM-2_02:1.1
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	jfarrell_NVRAM-0_13:1.1.1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	rthornb_UrsulaBuild_01May1998:1.1
	afrost_NC2_Generic:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.1.0.4
	Ursula_bp:1.1
	Spinner_B7:1.1.1.1
	ARTtmp_merge:1.1.1.1
	Spin_3Apr97:1.1.1.1
	ARTtmp:1.1.1.1.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.09.08.17.32.12;	author rcathera;	state Exp;
branches;
next	1.1;

1.1
date	97.03.18.18.10.15;	author scormie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.18.10.15;	author scormie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Added SWI NVRAM_Lookup which takes a pointer to a Tag in r0 on entry
  and returns startbyte within NVRAM (suitable for use with OS_NVMemory)
  in r0, startbit within byte in r1, length in r2 and flags in r3
  Added SWI NVRAM_Set and Get which take the same arguments as Read
  and Write but now return error pointers in r0 an error occurs
  instead of a -ve number.
  Added SWI NVRAM_SetBytes and GetBytes which work like Set/Get but also
  take an offset in r3 that is added to the address of the Tag to allow
  access to part of a Tag without needing to read or write the whole
  thing.

Detail:
  NVRAM_Read and Write used to pass on proper RISC OS errors if an external
  error was generated, but returned a -ve number in r0 if an internal error
  occured.
  NVRAM_Get and Set behave properly and use the error block 0x00819200
  this also means that Set preserves r0 (it used to return 0 for success)
  For compatibility Read and Write have not been removed but are deprecated,
  additionally the new error codes are the positive versions of the old
  error codes (hopefully this will ease converting code to use the new SWIs)
  The Messages file has been seperated from the Tags file and the module can
  return MsgTrans'ed error messages.

Admin:
  Tested all SWIs to a reasonable extent using a softloaded version.

Version 0.48. Tagged as 'NVRAM-0_48'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* > module.h
 *
 *      Header file for module.
 */

#define MODULE_NAME             "NVRAM"

/* Location of our Tags file. */
#define TAGFILE_NAME    "Resources:$.Resources.NVRAM.Tags"
#define MSGFILE_NAME    "Resources:$.Resources.NVRAM.Messages"

#define NOT_USED(v)             ((v)=(v))

#define FALSE                   0
#define TRUE                    (~(FALSE))

#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43

@


1.1
log
@Initial revision
@
text
@d22 4
a35 2
_kernel_oserror *module_finalise( int fatal, int podule, void *pw );
_kernel_oserror *module_initialise( char *cmd_tail, int podule_base, void *pw );
@


1.1.1.1
log
@Initial version.

@
text
@@
