head	1.5;
access;
symbols
	NVRAM-0_68:1.5
	NVRAM-0_67:1.5
	NVRAM-0_66:1.5
	RO_5_07:1.5
	NVRAM-0_65:1.5
	NVRAM-0_64:1.5
	NVRAM-0_63:1.5
	NVRAM-0_62:1.5
	NVRAM-0_61:1.5
	NVRAM-0_60:1.5
	NVRAM-0_59:1.5
	NVRAM-0_58:1.5
	NVRAM-0_57:1.5
	NVRAM-0_56:1.5
	NVRAM-0_55:1.5
	NVRAM-0_54:1.5
	NVRAM-0_53:1.5
	NVRAM-0_52:1.5
	NVRAM-0_51:1.5
	NVRAM-0_50:1.5
	dellis_autobuild_BaseSW:1.5
	NVRAM-0_49:1.5
	NVRAM-0_48:1.5
	NVRAM-0_47:1.5
	NVRAM-0_45:1.5
	NVRAM-0_44:1.4
	NVRAM-0_43:1.4
	NVRAM-0_42:1.4
	sbrodie_sedwards_16Mar2000:1.3
	NVRAM-0_41:1.3
	NVRAM-0_40:1.3
	NVRAM-0_39:1.3
	NVRAM-0_38:1.3
	NVRAM-0_37:1.3
	NVRAM-0_36:1.3
	NVRAM-0_35:1.3
	NVRAM-0_33:1.3
	NVRAM-0_31:1.3
	NVRAM-0_30:1.3
	NVRAM-0_29:1.3
	NVRAM-0_28:1.3
	NVRAM-0_27:1.3
	NVRAM-0_26:1.3
	NVRAM-0_25:1.3
	NVRAM-0_24:1.3
	NVRAM-0_23:1.3
	dcotton_autobuild_BaseSW:1.5
	nturton_NVRAM-0_21:1.3
	NVRAM-0_22:1.3
	dcotton_nvram-MPTInitialBuild:1.3
	NVRAM-0_21:1.3
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	Ursula_RiscPC:1.1.0.8
	NVRAM-0_20:1.3
	NVRAM-0_19:1.3
	NVRAM-0_18:1.3
	NVRAM-0_17:1.2
	NVRAM-0_16:1.2
	Spin_merge:1.1.1.2
	NVRAM-0_15:1.2
	NVRAM-2_02:1.1
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	jfarrell_NVRAM-0_13:1.1.1.2
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	rthornb_UrsulaBuild_01May1998:1.1
	afrost_NC2_Generic:1.1.1.2
	Spinner_B20_2:1.1.1.2
	Spinner_19_3:1.1.1.2
	Spinner_B18:1.1.1.2
	Spinner_B17:1.1.1.2
	Spinner_B15:1.1.1.2
	Spinner_B14:1.1.1.2
	Spinner_B13:1.1.1.2
	Spinner_B12:1.1.1.2
	Spinner_B10:1.1.1.2
	Daytona:1.1.0.6
	Daytona_bp:1.1
	Ursula:1.1.0.4
	Ursula_bp:1.1
	Spinner_B7:1.1.1.1
	ARTtmp_merge:1.1.1.1
	Spin_3Apr97:1.1.1.1
	ARTtmp:1.1.1.1.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2000.08.10.12.44.24;	author jfletche;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.17.13.45.47;	author arodger;	state Exp;
branches;
next	1.3;

1.3
date	98.09.24.12.01.44;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	98.09.10.18.04.00;	author jfarrell;	state Exp;
branches;
next	1.1;

1.1
date	97.03.18.18.10.11;	author scormie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.18.18.10.11;	author scormie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.05.08.09.43.57;	author scormie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@  Added support for default value indirected tags.
Detail:
  * Tags with a default value as a tagname in quotes will use the default
    value from that tag. This will allow certain tags to be programmed
    into the NVRAM at manufacture which are always restored, regardless of
    the configuration of the main tag. This is required
  * For reasons of ease, parts of the decoding process have been reworked;
    with the effect that pointers to register blocks aren't passed around
    now.
Admin:
  Tested locally; needs testing in a full build.
  This feature is needed for Bethany to support a default country, so that
  they will always start in a valid state.

Version 0.45. Tagged as 'NVRAM-0_45'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* trace.c
 *
 *      General purpose debugging code.
 */

/* From CLib */
#include <stdio.h>
#include <stdarg.h>
#include "swis.h"

#ifdef DEBUG

#ifdef DEBUGLIB

#include "<Lib$Dir>.DebugLib/DebugLib.h"

void trace_initialise(void)
{
  	debug_initialise("nvram", "NULL:", "");
  	debug_set_device(PRINTF_OUTPUT);
}

#endif

#include "trace.h"

int _trace_on = 0;

#ifdef DEBUG_TO_SCREEN
void
_tracef( char *fmt, ... )
{
        va_list ap;

        va_start(ap, fmt);

        vprintf(fmt, ap);

        /* _swix(OS_Byte, _IN(0), 19); */
        /* _swix(OS_Byte, _IN(0), 19); */
        /* _swix(OS_Byte, _IN(0), 19); */
        /* _swix(OS_Byte, _IN(0), 19); */

        va_end(ap);
}

#else

#ifdef DEBUGLIB

void
_tracef( char *fmt, ... )
{
	__va_list args;

	va_start( args, fmt );
	dvprintf(( "", fmt, args ));
	va_end( args );
}

#else
void
_tracef( char *fmt, ... )
{
	if ( _trace_on )
	{
		__va_list args;

		(void)_swix( 0x40100, 0 );
		va_start( args, fmt );
		vprintf( fmt, args );
		va_end( args );
		(void)_swix( 0x40101, 0 );
	}
}

#endif

#endif

#endif
@


1.4
log
@   Added DebugLib support and target and added a preceeding zero to a tag
Detail:
   Added DebugLib to the trace file.
   All of the tags for the DSL400 resource are 3 digits with the exception
   of one this has been fixed.
Admin:
   Oh! ran it a couple of times.  Prodded it with a stick, it seemed alright.

Version 0.42. Tagged as 'NVRAM-0_42'
@
text
@d34 1
a34 1
  	debug_set_device(PDEBUG_OUTPUT);
d53 4
a56 4
        _swix(OS_Byte, _IN(0), 19);
        _swix(OS_Byte, _IN(0), 19);
        _swix(OS_Byte, _IN(0), 19);
        _swix(OS_Byte, _IN(0), 19);
@


1.3
log
@Changed to use OS_NVMemory SWIs if available. Crops fields in Tags file to
available NVRAM.
Makefile changed to use Link 5.08.
nvcheck modified to cope with up to 16K of NVRAM.

Version 0.18. Tagged as 'NVRAM-0_18'
@
text
@d27 12
a43 1

d63 13
d90 2
@


1.2
log
@Fix previous erroneous attempt to merge from branch Spinner.
Manually edited VersionNum to restore sane version number.
DO NOT USE THE PREVIOUS TRUNK COMMIT OF THIS MODULE (NVRAM-2_02).

Version 0.15. Tagged as 'NVRAM-0_15'
@
text
@d31 21
d66 2
@


1.1
log
@Initial revision
@
text
@d29 2
d34 3
a36 1
    __va_list args;
d38 6
a43 5
    (void)_swix( 0x40100, 0 );
    va_start( args, fmt );
    vprintf( fmt, args );
    va_end( args );
    (void)_swix( 0x40101, 0 );
@


1.1.1.1
log
@Initial version.

@
text
@@


1.1.1.2
log
@Fixed various bugs, including not using isspace when using TinyStubs as
the shared C library doesn't seem to initialise its copy of __ctype.
@
text
@a28 2
int _trace_on = 0;

d32 1
a32 3
	if ( _trace_on )
	{
		__va_list args;
d34 5
a38 6
		(void)_swix( 0x40100, 0 );
		va_start( args, fmt );
		vprintf( fmt, args );
		va_end( args );
		(void)_swix( 0x40101, 0 );
	}
@
