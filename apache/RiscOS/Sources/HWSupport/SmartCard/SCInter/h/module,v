head	4.5;
access;
symbols
	SCInter-0_27:4.5
	dellis_autobuild_BaseSW:4.5
	SCInter-0_26:4.5
	sbrodie_sedwards_16Mar2000:4.5
	SCInter-0_25:4.5
	SCInter-0_24:4.5
	wturner_scinter2:4.1.7.6
	wturner_scinter1:4.1.7.5
	SCInter-0_23:4.4
	SCInter-0_22:4.4
	SCInter-0_21:4.3
	dcotton_autobuild_BaseSW:4.5
	dcotton_scinter_MPTInitialBuild:4.1.7.5
	SCInter-0_20:4.3
	SCInter-0_19:4.3
	SCInter-0_18:4.2
	SCInter-0_17-1_1_2_5:4.1.7.5
	SCInter-0_17-1_1_2_4:4.1.7.4
	SCInter-0_17-1_1_2_3:4.1.7.4
	SCInter-0_17-1_1_2_2:4.1.7.4
	afrost_Funai01-33:4.1.7.3
	afrost_NC2_Generic:4.1.7.3
	Spinner_RCA116:4.1.7.3
	Spinner_B20_2:4.1.7.3
	Spinner_19_3:4.1.7.3
	Spinner_B18:4.1.7.3
	Spinner_B17:4.1.7.3
	Spinner_B15:4.1.7.3
	Spinner_B14:4.1.7.3
	Spinner_B13:4.1.7.3
	Spinner_B12:4.1.7.3
	Spinner_B10:4.1.7.3
	Spinner_B7:4.1.7.2
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	ARTtmp:4.1.7.2.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.5
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.5
date	99.12.01.11.44.31;	author wturner;	state Exp;
branches;
next	4.4;

4.4
date	99.11.16.13.35.31;	author dcotton;	state Exp;
branches;
next	4.3;

4.3
date	98.12.16.16.20.25;	author apirozek;	state Exp;
branches;
next	4.2;

4.2
date	98.12.11.19.10.23;	author smiddle;	state Exp;
branches;
next	4.1;

4.1
date	96.11.21.12.07.02;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.21.12.07.02;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.55.11;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.01.29.13.51.08;	author rbuckley;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.05.09.15.55.58;	author rbuckley;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	98.11.24.12.13.33;	author apirozek;	state Exp;
branches;
next	4.1.7.5;

4.1.7.5
date	98.12.11.19.06.01;	author smiddle;	state Exp;
branches;
next	4.1.7.6;

4.1.7.6
date	99.11.22.13.37.47;	author wturner;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Added a SWI to control whether SCInterface listens to events from
the SCTransport module or not. This is part of the CTS work, and
in the absence of any locally stored specification, siis documented
in Docs.EventsSWI

Version 0.24. Tagged as 'SCInter-0_24'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

#ifndef __module_h
#define __module_h

#include "kernel.h"

/*
 * typedefs and structs
 */
typedef unsigned char BYTE;
#ifndef TRUE
  typedef int BOOL;
  #define TRUE   (1)
  #define FALSE  (0)
  #define BOOL_DEFINED
#endif

typedef struct                /* contains a cards ATR */
{
  BYTE  hist[15];
  int	len;                  /* size of the atr */
  int   significant;	      /* number of significant bytes in atr */
} t_card_atr;

typedef struct
{
  int       err;     /* SCInterface error number */
  int 	    sw;      /* match qualtity plus two byte response code */
} t_card_resp;

/*
 * function table containing functions to support smart card commands
 */
typedef struct {
  int (*card_initialise_table)(void);
  int (*card_select_root)(int card_handle);
  int (*card_select)(int card_handle, int file_id);
  int (*card_create)(int card_handle, int file_id, int dir, int file_size,
      int access_condition);
  int (*card_delete)(int card_handle, int file_id);
  int (*card_read)(int card_handle, int offset, int len);
  int (*card_write)(int card_handle, int offset, BYTE *data, int len);
  int (*card_verify_chv)(int card_handle, int access_condition, char *code,
      int code_len);
  int (*card_change_chv)(int card_handle, int access_condition,
      char *code, int code_len, char *new_code, int new_code_len);
  int (*card_enable_chv)(int card_handle, int access_condition, int enable,
      char *code, int code_len);
  int (*card_unblock_chv)(int card_handle, int access_condition,
      char *unblock_code, int unblock_code_len,
      char *new_code, int new_code_len);
  int (*card_get_response)(int card_handle, int len);
  int (*card_internal_auth)(int card_handle, int key, BYTE *challange,
      			    int challenge_len);
  int chunk_size;
  t_card_atr *card_atr;
  t_card_resp *card_responses;
  int card_num_responses;
} t_card_exports;

/*
 * event handling declarations
 */
#define MAX_EVENTS                  (10)     /* size of event queue */
#define EventV	                    (0x10)  /* vector number */
#define Event_Expansion		    (21)    /* event number */
#define Event_Expansion_SCInterface (0)	    /* sub-event numbers */
#define Event_Expansion_SCTransport (1)
#define Service_SCTransportStarting (0xbb)
#define Service_ShutdownComplete    (0x80)
#define Service_Standby		    (0xAD)

/*
 * structure to hold smart card events
 */
typedef struct {int handle; int event; } t_event;

/*
 * states used to within the state machine
 */
typedef enum {WaitingOpen,           /* 0 */
  	      WaitingATR,	     /* 1 */
	      WaitingRemoval,	     /* 2 */
	      Idle,		     /* 3 */
	      SelectingDir,	     /* 4 */
	      SelectingFile,	     /* 5 */
	      GettingResponse,	     /* 6 */
	      GettingAuthResponse,   /* 7 */
	      Creating,		     /* 8 */
	      Deleting,		     /* 9 */
	      ReadingFile,	     /* 10 */
	      WritingFile,	     /* 11 */
	      VerifyingCHV,	     /* 12 */
	      ChangingCHV,	     /* 13 */
	      EnablingCHV,	     /* 14 */
	      UnBlockingCHV,	     /* 15 */
	      WaitingInternalAuth,   /* 16 */
	      WaitingTrans,
	      WaitingStandby
} t_states;

/*
 * transitions used to drive the state machine
 */
typedef enum {Done,                  /* 0 */
	      Error,		     /* 1 */
	      Removed,		     /* 2 */
	      ReStart,		     /* 3 */
	      TransEnd,		     /* 4 */
	      CreateSWI,	     /* 5 */
	      DeleteSWI,	     /* 6 */
	      ReadSWI,		     /* 7 */
	      WriteSWI,		     /* 8 */
	      GetATRSWI,	     /* 9 */
	      ChangeCHVSWI,	     /* 10 */
	      EnableCHVSWI,	     /* 11 */
	      UnBlockCHVSWI,	     /* 12 */
	      FileInfoSWI,	     /* 13 */
	      InternalAuthSWI,	     /* 14 */
	      StatusSWI,	     /* 15 */
	      Shutdown,
	      Standby
} t_transitions;

/*
 * normal module junk
 */
#define ERR_RETURN(err,stmt)   {err = (stmt); if (err) return err;}
#define ERR_GOTO(err,stmt)     {err = (stmt); if (err) goto exit_gracefully;}
#define NOT_USED(v)            ((v)=(v))

#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43


#define ERROR_STRUCT(name,text) \
  struct {int errnum; char errmess[sizeof(text)+1];} name = {ERROR_##name,text}

#define ERROR_EXTERN(name) extern struct {int errnum; char errmess[1];} name

#define ERROR(e)  ((_kernel_oserror *)&(e))

extern t_states state;
extern t_transitions entry_trans;
extern t_card_exports *CardExports[];
extern t_card_exports *CurrExports;
extern int card_handle;
extern t_card_atr ATR;
extern int ChimpanzeeClassByte;
extern int current_card_type;

#ifdef DEBUGLIB
extern char *strNotifications[];
extern char *strState[];
extern char *strTransitions[];
#endif

extern int global_ignore_events;


extern int get_atr(void);
extern int open_card(void);
extern int handle_response(BYTE *card_data, int data_len, int *length, BYTE *resp);
extern void module_notify(int reason,int param);
extern void _copy_regs(_kernel_swi_regs *r_new, _kernel_swi_regs *r_old);

#endif
@


4.4
log
@	Changed the component to use srccommit.
Detail:
	This component would not build with the latest version of RemoteDB as
the names used have been changed. Have used this opportunity to alter the
component to use DebugLib. There have been no functionality changes.
	Default output mechanism is to zip disc.
	Altered the makefile to use Stripdepend.
Admin:
	Tested as a softload on a Funai 4 build and actually in a Funai 4
build.

Version 0.22. Tagged as 'SCInter-0_22'
@
text
@d183 3
@


4.3
log
@Added code to deal with card removal/chainging during power down
@
text
@a27 1
#include "debug/remote.h"
a29 6
#ifdef REMOTE_DEBUG
extern debug_session *db;
#else
extern void *db;
#endif

d34 6
a39 3
typedef int BOOL;
#define TRUE   (1)
#define FALSE  (0)
d177 1
a177 1
#ifdef debug
@


4.2
log
@Moved to trunk.

Version 0.18. Tagged as 'SCInter-0_18'
@
text
@d126 3
a128 1
	      WaitingStandby} t_states;
@


4.1
log
@Initial revision
@
text
@d16 7
a22 7
/* 	        Copyright 1996 Acorn Network Computers		        */
/*									*/
/*  This material is the confidential trade secret and proprietary	*/
/*  information of Acorn Network Computers. It may not be reproduced,   */
/*  used sold, or transferred to any third party without the prior      */
/*  written consent of Acorn Network Computers. All rights reserved.	*/
/* 									*/
d28 9
a85 2
  int *card_reserved_files;
  int card_num_reserved_files;
d97 2
d125 2
a126 1
	      WaitingTrans} t_states;
d145 4
a148 1
	      StatusSWI} t_transitions; /* 15 */
a161 7
/* for debugging purposes */
#ifdef _DEBUG
#define debugging		1
#else /* not _DEBUG */
#define debugging		0
#endif /* _DEBUG */
#define debug	if (!debugging); else
d170 20
a189 5
#define FILENAME_DEBUG "Cache:$.SCInterDbg"

void DebugFileInit(char*filename);

void DebugPrint (char *format,...);
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Changed copyright notice.
@
text
@d16 7
a22 7
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
@


4.1.7.3
log
@Major re-work of debugging code so support the remote debug library.
Removal of arh.h dependancy and any other bits of windows legacy code.
@
text
@a27 8
#include "debug/remote.h"

#ifdef REMOTE_DEBUG
extern debug_session *db;
#else
extern void *db;
#endif

d77 2
d149 7
d163 6
@


4.1.7.4
log
@Modified to work with Funai3 T=1 cards

Version 0.17, 1.1.2.2. Tagged as 'SCInter-0_17-1_1_2_2'
@
text
@a28 1
#include "kernel.h"
a161 21

extern t_states state;
extern t_transitions entry_trans;
extern t_card_exports *CardExports[];
extern t_card_exports *CurrExports;
extern int card_handle;
extern t_card_atr ATR;
extern int ChimpanzeeClassByte;
extern int current_card_type;

#ifdef debug
extern char *strNotifications[];
extern char *strState[];
extern char *strTransitions[];
#endif

extern int get_atr(void);
extern int open_card(void);
extern int handle_response(BYTE *card_data, int data_len, int *length, BYTE *resp);
extern void module_notify(int reason,int param);
extern void _copy_regs(_kernel_swi_regs *r_new, _kernel_swi_regs *r_old);
@


4.1.7.5
log
@ Started implementing support for monitoring going in and out of
> Standby mode. New state WaitingStandby and two new transitions
> Shutdown and Standby added to state machine. Plus added appropriate
> bits to the service call handler.
> Also tidied up a few error messages and included VersionNum file in
> cmhg header.

Version 0.17, 1.1.2.5. Tagged as 'SCInter-0_17-1_1_2_5'
@
text
@a96 2
#define Service_ShutdownComplete    (0x80)
#define Service_Standby		    (0xAD)
d123 1
a123 2
	      WaitingTrans,
	      WaitingStandby} t_states;
d142 1
a142 4
	      StatusSWI,	     /* 15 */
	      Shutdown,
	      Standby
} t_transitions;
@


4.1.7.6
log
@  (overview of change)
Detail:
  (list files and functions that have changed)
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)
@
text
@a184 3
extern int global_ignore_events;


@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
