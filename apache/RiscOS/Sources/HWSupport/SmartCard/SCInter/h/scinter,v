head	4.3;
access;
symbols
	SCInter-0_27:4.3
	dellis_autobuild_BaseSW:4.3
	SCInter-0_26:4.3
	sbrodie_sedwards_16Mar2000:4.3
	SCInter-0_25:4.3
	SCInter-0_24:4.3
	wturner_scinter2:4.1.7.5
	wturner_scinter1:4.1.7.5
	SCInter-0_23:4.2
	SCInter-0_22:4.2
	SCInter-0_21:4.2
	dcotton_autobuild_BaseSW:4.3
	dcotton_scinter_MPTInitialBuild:4.1.7.5
	SCInter-0_20:4.2
	SCInter-0_19:4.2
	SCInter-0_18:4.2
	SCInter-0_17-1_1_2_5:4.1.7.5
	SCInter-0_17-1_1_2_4:4.1.7.5
	SCInter-0_17-1_1_2_3:4.1.7.5
	SCInter-0_17-1_1_2_2:4.1.7.5
	afrost_Funai01-33:4.1.7.4
	afrost_NC2_Generic:4.1.7.4
	Spinner_RCA116:4.1.7.4
	Spinner_B20_2:4.1.7.4
	Spinner_19_3:4.1.7.4
	Spinner_B18:4.1.7.4
	Spinner_B17:4.1.7.4
	Spinner_B15:4.1.7.4
	Spinner_B14:4.1.7.4
	Spinner_B13:4.1.7.4
	Spinner_B12:4.1.7.4
	Spinner_B10:4.1.7.3
	Spinner_B7:4.1.7.2
	ARTtmp_merge:4.1.7.2
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	ARTtmp:4.1.7.2.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.5
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.3
date	99.12.01.11.44.31;	author wturner;	state Exp;
branches;
next	4.2;

4.2
date	98.12.11.19.10.26;	author smiddle;	state Exp;
branches;
next	4.1;

4.1
date	96.11.21.12.07.03;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.21.12.07.03;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.55.14;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.01.29.13.51.10;	author rbuckley;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.05.09.15.56.01;	author rbuckley;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	97.05.30.15.57.25;	author rbuckley;	state Exp;
branches;
next	4.1.7.5;

4.1.7.5
date	98.11.24.12.13.36;	author apirozek;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Added a SWI to control whether SCInterface listens to events from
the SCTransport module or not. This is part of the CTS work, and
in the absence of any locally stored specification, siis documented
in Docs.EventsSWI

Version 0.24. Tagged as 'SCInter-0_24'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/************************************************************************/
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
/************************************************************************/

#ifndef __scinterface_h
#define __scinterface_h

/* ------------------------------------------------------------------------
 * swi:           SCInterface_Create
 *
 * Description:   Create a file/directory on the smart card
 *
 * Input:         r0 -  flags word with bit meanings
 *			  bit 0 : 0 - denigrated
 *		     	  bit 1 : 0 - create file, 1 - create directory
 * 		  r1 -> file path string in the form '/x/y/z' where x,y,z are
 *		     	two byte hex numbers. For example /4e43/0001
 *                r2 -  size of file or directory to create
 *		  r3 -  code access conditions for various operations coded as
 *
 *		     	     	      for files	         for directories
 *		     	  nibble 0 - update            unused
 *			  	 1 - read/seek	       execute
 *				 2 - create            create/extend
 *				 3 - delete            delete
 *				 4 - invalidate	       invalidate
 *				 5 - rehabilitate      rehabilitate
 *
 *			where each nibble is either
 *		     	  0x0 : ALW,  0x1 : CHV1,  0x2 : CHV2
 *			  0xa : ADM1, 0xb : ADM2,  0xc : ADM3
 *			  0xd : ADM4, 0xe : ADM5,  0xf : NEV
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_Create    0x04d340

/* ------------------------------------------------------------------------
 * swi:           SCInterface_Delete
 *
 * Description:   Deletes a file/directory on the smart card.
 * 		  Not yet implemented.
 *
 * Input:         r0 -  flags word with bit meanings
 *			  bit 0 : 0 - denigrated
 * 		  r1 -> file path string in the form '/x/y/z' where x,y,z are
 *		     	two byte hex numbers.
 *		  r2 -> chv access code
 *		  r3 -  number of bytes in CHV access code
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_Delete    0x04d341


/* ------------------------------------------------------------------------
 * swi:           SCInterface_Read
 *
 * Description:   Reads data from a file on the smart card
 *
 * Input:         r0 -  flags word with bit meaning
 *			  bit 0 : 0 - denigrated
 * 		  r1 -> file path string in the form '/x/y/z' where x,y,z are
 *		     	two byte hex numbers.
 *                r2 -  byte offset into file to start read
 *                r3 -> data area to copy results
 *                r4 -  number of bytes to read
 *		  r5 -> chv access code
 *		  r6 -  number of bytes in CHV access code
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_Read      0x04d342

/* ------------------------------------------------------------------------
 * swi:           SCInterface_Write
 *
 * Description:   Write data to a file on the smart card
 *
 * Input:         r0 -  flags word with bit meaning
 *			  bit 0 : 0 - denigrated
 * 		  r1 -> file path string in the form '/x/y/z' where x,y,z are
 *		     	two byte hex numbers.
 *                r2 -  byte offset into file to start write
 *                r3 -> data area containg data to write
 *                r4 -  number of bytes to write
 *		  r5 -> chv access code
 *		  r6 -  number of bytes in CHV access code
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_Write     0x04d343

/* ------------------------------------------------------------------------
 * swi:           SCInterface_GetATR
 *
 * Description:   Returns the smart card ATR used to identify the card and type
 *
 * Input:         r0 -  flags word with bit meaning
 *
 * Returns:       r0 -  return code as documented below
 * 		  r1 -> struct {BYTE hist[15]; int hist_len}
 */
#define  SCInterface_GetATR     0x04d344

/* ------------------------------------------------------------------------
 * swi:           SCInterface_ChangeCHV
 *
 * Description:   Change the access code for a given access condition.
 *
 * Input:         r0 -  flags word with bit meaning
 *
 * 		  r1 -> directory path string in the form '/x/y/z' where x,y,z
 *		     	are two byte hex numbers.
 *		  r2 -  code access conditions
 *			  0x1 : CHV1
 *			  0x2 : CHV2
 *                r3 -> existing access code
 *		  r4 -  number of bytes in existing access code
 *		  r5 -> new access code
 *		  r6 -  number of bytes in new access code
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_ChangeCHV    0x04d345

/* ------------------------------------------------------------------------
 * swi:           SCInterface_EnableCHV
 *
 * Description:   Enable/disable CHV access code
 *
 * Input:         r0 -  flags word with bit meaning
 *			  bit 0 : 0 - denigrated
 * 		          bit 1 : 0 - disable access code test
 *			      	  1 - enable access code test
 * 		  r1 -> directory path string in the form '/x/y/z' where x,y,z
 *		     	are two byte hex numbers.
 *		  r2 -  code access conditions
 *			  0x1 : CHV1
 *			  0x2 : CHV2
 *	          r3 -> access code
 *		  r4 -  number of bytes in access code
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_EnableCHV    0x04d346

/* ------------------------------------------------------------------------
 * swi:           SCInterface_UnBlockCHV
 *
 * Description:   Will unblock the CHV access code fail attempt counter
 *
 * Input:         r0 -  flags word with bit meaning
 *			  bit 0 : 0 - denigrated
 * 		  r1 -> directory path string in the form '/x/y/z' where x,y,z
 *		     	are two byte hex numbers.
 *		  r2 -  code access conditions
 *		     	  0x1 : CHV1
 *			  0x2 : CHV2
 *                r3 -> unblock CHV access code
 *		  r4 -  number of bytes in unblock CHV access code
 *		  r5 -> new CHV access code
 *		  r6 -  number of bytes in new CHV access code
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_UnBlockCHV     0x04d347

/* ------------------------------------------------------------------------
 * swi:           SCInterface_FileInfo
 *
 * Description:   Will return a block of data relating to a file or directory.
 * 		  Block is formatted as documented in the Orga manual page 90
 *		  or the InCard manual page 26.
 *
 *                Items of interest to Ant maybe
 *		  	file size = data[2]<<8 | data[3]
 *
 * Input:         r0 -  flags word with bit meaning
 *			  bit 0 : 0 - denigrated
 *			  bit 1 : 0 - return raw data, 1 - return struct
 * 		  r1 -> directory path string in the form '/x/y/z' where x,y,z
 *		     	are two byte hex numbers.
 *
 *         if r0 bit 1 = 0
 *		  r2 -> data area to copy results
 *                r3 -  size of data area
 *         if r0 bit 1 = 1
 *	          r2 -> t_sc_stat structure
 *
 * Returns:       r0 -  return code as documented below
 */
typedef struct
{
  int file:1;		      /* true if file is selected */
  int chv1_enabled:1;	      /* true if chv1 is enabled */
  int unblock_chv1_enabled:1; /* true if unblock chv1 is enabled */
  int size;		      /* size of file or remaining space in dir */
  int chv1_attempts;          /* number of remaining attempts at CHV1 */
  int unblock_chv1_attempts;  /* number of remaining attempts at unblock code */
  int num_files;      	      /* number of files in selected dir, -1 for N/A */
  int num_dirs;		      /* number of dirs in selected file, -1 for N/A */
} t_sc_stat;

#define  SCInterface_FileInfo     0x04d348

/* ------------------------------------------------------------------------
 * swi:           SCInterface_InternalAuth
 *
 * Description:   Will encrypt a block of data using a specified key number
 * 		  typically this would be a challenge response type thing.
 *
 * Input:         r0 -  flags word with bit meaning
 *		  r2 -  logical key number
 *		  r3 -> challenge
 *		  r4 -  size of challenge
 *		  r5 -> data area to hold response
 *                r6 -  size of data area
 *
 * Returns:       r0 -  return code as documented below
 */
#define  SCInterface_InternalAuth     0x04d349

/* ------------------------------------------------------------------------
 * swi:           SCInterface_Status
 *
 * Description:   Will return the current status of the SCInterface module.
 *                To be used in polled mode operation. Performing this swi
 *                will clear the error condition flag.
 *
 * Input:
 *
 * Returns:       r0 -  status word with meaning given by
 */
typedef enum {StatusIdle, StatusNoCard,
              StatusBusy, StatusError} t_interface_status;
/*
 *                r1 -  error status if r0==StatusError
 */
#define  SCInterface_Status     0x04d34a

#define  SCInterface_Events     0x04d34b

/*
 * return codes to be found in r0 on exit from the above swis and in r3 on
 * receipt of a SCInterface event.
 */

/* reported from swis and events */
#define SC_SUCCESS        (0x0)   /* command successful */

/* reported from swis only */
#define SC_NOCARD	  (0x01)   /* smart card not inserted */
#define SC_FORMAT	  (0x02)   /* file path format error */
#define SC_NESTED	  (0x03)   /* too many nexted subdirectories */
#define SC_UNDERSTAND	  (0x04)   /* do not understand inserted card */
#define SC_BUSY		  (0x05)   /* still processing previous command */
#define SC_RESERVED	  (0x06)   /* smart card reserved filename specified */
#define SC_NOTIMPLEMENTED (0x07)   /* command not implemented on this card */

/* reported from events only */
#define SC_NOTFOUND       (0x10)   /* requested file not found */
#define SC_TRANSPORT	  (0x11)   /* error returned from SCTransport */
#define SC_SPACE	  (0x12)   /* not enough space to fit requested data */
#define SC_EXISTS	  (0x13)   /* file already exists */
#define SC_STORAGE	  (0x14)   /* storage problem */
#define SC_NOSELECT	  (0x15)   /* no file selected */
#define SC_NOTVALID	  (0x16)   /* outside valid area */
#define SC_INCONSIST	  (0x17)   /* file type is inconsistant with command */
#define SC_UNKNOWNRESP    (0x18)   /* unknown response code returned */
#define SC_P1P2INVALID    (0x19)   /* incorrect parameter values p1,p2 */
#define SC_P3INVALID	  (0x1a)   /* incorrect parameter value p3 */
#define SC_TECHPROBLEM	  (0x1b)   /* technical problem with no diagnostics */
#define SC_WRONGCLASS	  (0x1c)   /* wrong instruction class */

/* reported from events and relating to access conditions */
#define SC_NOACCESSCODE	  (0x20)   /* no access code defined */
#define SC_FAILACCESSCODE (0x21)   /* failed access code verification */
#define SC_NOACCESSCHANGE (0x22)   /* change CHV not possible */
#define SC_BLOCKEDACCESS  (0x23)   /* CHV failure counter has blocked */
#define SC_NEVERACCESS	  (0x24)   /* file has NVR access defined */

/* new codes for MiniJIS */
#define SC_CORRUPTED      (0x25)   /* part of returned data corrupted */
#define SC_LEFAILED       (0x26)   /* file record failed before Le bytes */
#define SC_NOINFO         (0x27)   /* no informtaion */
#define SC_NCHANGEEPROM   (0x28)   /* no change of eeprom condition */
#define SC_WRITEERROR     (0x29)   /* write error of eeprom */
#define SC_LENGTHWRONG    (0x2a)   /* length is wrong */
#define SC_CHANNOTSUPP    (0x2b)   /* theoretical channel is not supported */
#define SC_NOCOMPAT       (0x2c)   /* no compatibility beteen structure of file and command */
#define SC_SECUREMNS      (0x2d)   /* sucure messaging is not supported */
#define SC_CHECKDNE       (0x2e)   /* check data is not effective  */
#define SC_INCONLCTLV     (0x2f)   /* LC and TLV structure are not consistent */
#define SC_INVLCP1P2      (0x30)   /* Lc and P1-P2 invalid */
#define SC_INSINV         (0x31)   /* INS is not provided or not effective */

#define MAX_SUBDIRS       (4)

/*
 * riscos event numbers used for async notification
 */
#define Event_Expansion		    (21)      /* r0 on receipt of an event */
#define Event_Expansion_SCInterface (0)	      /* r1 on receipt of an event */

/*
 * event reason codes passed in r2 on receipt of a SCInterface event.
 */
#define Event_CardOK      (0) /* card inserted and understood */
#define Event_CardBad     (1) /* card inserted and not understood */
#define Event_CardRemoved (2) /* card has been removed */
#define Event_Complete    (3) /* previous command completed */

#endif
@


4.2
log
@Moved to trunk.

Version 0.18. Tagged as 'SCInter-0_18'
@
text
@d262 1
@


4.1
log
@Initial revision
@
text
@d16 7
a22 7
/* 	        Copyright 1996 Acorn Network Computers		        */
/*									*/
/*  This material is the confidential trade secret and proprietary	*/
/*  information of Acorn Network Computers. It may not be reproduced,   */
/*  used sold, or transferred to any third party without the prior      */
/*  written consent of Acorn Network Computers. All rights reserved.	*/
/* 									*/
d34 1
a34 1
 *			  bit 0 : 0 - validate filenames, 1 - ignore validation
d65 1
a65 1
 *			  bit 0 : 0 - validate filenames, 1 - ignore validation
d82 1
a82 1
 *			  bit 0 : 0 - validate filenames, 1 - ignore validation
d101 1
a101 1
 *			  bit 0 : 0 - validate filenames, 1 - ignore validation
d153 1
a153 1
 *			  bit 0 : 0 - validate filenames, 1 - ignore validation
d174 1
a174 1
 *			  bit 0 : 0 - validate filenames, 1 - ignore validation
d200 2
a201 1
 *			  bit 0 : 0 - validate filenames, 1 - ignore validation
d204 2
d208 2
d213 12
d293 1
d301 15
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Changed copyright notice.
@
text
@d16 7
a22 7
/*                  Copyright 1996 Acorn Computers Ltd                  */
/*                                                                      */
/*  This material is the confidential trade secret and proprietary      */
/*  information of Acorn Computers. It may not be reproduced, used      */
/*  sold, or transferred to any third party without the prior written   */
/*  consent of Acorn Computers. All rights reserved.                    */
/*                                                                      */
@


4.1.7.3
log
@Major re-work of debugging code so support the remote debug library.
Removal of arh.h dependancy and any other bits of windows legacy code.
@
text
@a275 1
#define SC_WRONGCLASS	  (0x1c)   /* wrong instruction class */
@


4.1.7.4
log
@Added a new bit of interface to SCInterface_FileInfo that interrprets data
depending on which type of card in inserted.
@
text
@d34 1
a34 1
 *			  bit 0 : 0 - denigrated
d65 1
a65 1
 *			  bit 0 : 0 - denigrated
d82 1
a82 1
 *			  bit 0 : 0 - denigrated
d101 1
a101 1
 *			  bit 0 : 0 - denigrated
d153 1
a153 1
 *			  bit 0 : 0 - denigrated
d174 1
a174 1
 *			  bit 0 : 0 - denigrated
d200 1
a200 2
 *			  bit 0 : 0 - denigrated
 *			  bit 1 : 0 - return raw data, 1 - return struct
a202 2
 *
 *         if r0 bit 1 = 0
a204 2
 *         if r0 bit 1 = 1
 *	          r2 -> t_sc_stat structure
a207 12
typedef struct
{
  int file:1;		      /* true if file is selected */
  int chv1_enabled:1;	      /* true if chv1 is enabled */
  int unblock_chv1_enabled:1; /* true if unblock chv1 is enabled */
  int size;		      /* size of file or remaining space in dir */
  int chv1_attempts;          /* number of remaining attempts at CHV1 */
  int unblock_chv1_attempts;  /* number of remaining attempts at unblock code */
  int num_files;      	      /* number of files in selected dir, -1 for N/A */
  int num_dirs;		      /* number of dirs in selected file, -1 for N/A */
} t_sc_stat;

@


4.1.7.5
log
@Modified to work with Funai3 T=1 cards

Version 0.17, 1.1.2.2. Tagged as 'SCInter-0_17-1_1_2_2'
@
text
@a301 15
/* new codes for MiniJIS */
#define SC_CORRUPTED      (0x25)   /* part of returned data corrupted */
#define SC_LEFAILED       (0x26)   /* file record failed before Le bytes */
#define SC_NOINFO         (0x27)   /* no informtaion */
#define SC_NCHANGEEPROM   (0x28)   /* no change of eeprom condition */
#define SC_WRITEERROR     (0x29)   /* write error of eeprom */
#define SC_LENGTHWRONG    (0x2a)   /* length is wrong */
#define SC_CHANNOTSUPP    (0x2b)   /* theoretical channel is not supported */
#define SC_NOCOMPAT       (0x2c)   /* no compatibility beteen structure of file and command */
#define SC_SECUREMNS      (0x2d)   /* sucure messaging is not supported */
#define SC_CHECKDNE       (0x2e)   /* check data is not effective  */
#define SC_INCONLCTLV     (0x2f)   /* LC and TLV structure are not consistent */
#define SC_INVLCP1P2      (0x30)   /* Lc and P1-P2 invalid */
#define SC_INSINV         (0x31)   /* INS is not provided or not effective */

@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
