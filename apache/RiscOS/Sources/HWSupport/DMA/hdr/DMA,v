head	4.3;
access;
symbols
	DMA-0_23:4.3
	DMA-0_22:4.3
	DMA-0_21:4.3
	DMA-0_20:4.3
	DMA-0_19:4.3
	DMA-0_18:4.3
	RO_5_07:4.3
	DMA-0_17:4.3
	DMA-0_16:4.2
	HAL_merge:4.1.10.1
	DMA-0_15-4_4_2_6:4.1.10.1
	DMA-0_15-4_4_2_5:4.1.10.1
	DMA-0_15-4_4_2_4:4.1.10.1
	DMA-0_15-4_4_2_3:4.1.10.1
	DMA-0_15-4_4_2_2:4.1.10.1
	DMA-0_15-4_4_2_1:4.1
	HAL_bp:4.1
	HAL:4.1.0.10
	DMA-0_15:4.1
	DMA-0_14:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	DMA-0_13:4.1
	dcotton_autobuild_BaseSW:4.1
	nturton_DMA-0_12:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	troddis_DMA-0_13:4.1
	nicke_DMA_0_11:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2003.01.30.16.10.48;	author bavison;	state Exp;
branches;
next	4.2;

4.2
date	2002.12.13.18.48.11;	author bavison;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.42;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1
	4.1.10.1;
next	;

4.1.1.1
date	96.11.05.09.35.42;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.22.21;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.50.16;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.45.09;	author nturton;	state Exp;
branches;
next	;

4.1.10.1
date	2002.10.03.17.35.12;	author bavison;	state Exp;
branches;
next	;


desc
@@


4.3
log
@  A few weeks' dedicated work, mainly to support UDMA hard discs.
Detail:
  Features:
  * Supports physical channels using a new type of HAL device (&303) where
    the hardware takes a pointer to a scatter list up front to effect the
    entire transfer, and which may report hardware errors at any time.
    For full details, see Doc.HAL_DMAAPI.
  * Page tables are no longer generated when using a bounce-buffer, since
    they aren't actually any use except in determining if unsafe pages
    intersect with the transfer. Instead, bounce-buffer transfers are halted
    whenever any page becomes unsafe, and no new bounce-buffer transfers can
    be started while any pages are unsafe.
  * For both bounce-buffer and list-type devices, the Activate entry is
    now called after the transfer is programmed (with SetCurrentTransfer
    or SetListTransfer), since this is likely to be more useful for these
    types of devices. Note that for interrupt-driven buffer devices, it
    is still assumed that the default state of the device is to be in an
    underrun interrupt state, so the transfer is not programmed until the
    first time the interrupt routine is entered.
  * Now ensures that scatter list start addresses and lengths are all
    multiples of the transfer unit size (this check is done during page
    table construction, so will be returned via the Completed callback,
    rather than directly from DMA_QueueTransfer like the total length check).
  * When there is no interrupt associated with a physical channel (both for
    buffer- or list-type devices), if the polling of the hardware within SWI
    DMA_ExamineTransfer detects that the transfer has completed, then
    the transfer is shut down in the same was as though an interrupt had
    happened (ie the Completed callback is called without an error).
  * Added SWI DMA_AllocateLogicalChannels to act as a centralised allocator
    for session-unique logical DMA channels. Primarily a service to
    third-party authors of "HAL" devices.
  Bugfixes:
  * Now handles Service_MessageFileClosed to allow safe MessageTrans lookups
    in the background.
  * If a controller device was removed before its constituent channel
    devices, removing the channel device would abort.
  * Interrupt trampoline construction was wrong, the address of the
    interrupt handler code wasn't relocated. Also, non-vectored interrupts
    weren't correctly handled.
  * Transfers suspended by Service_PagesUnsafe weren't blocking the logical
    channel, so you could queue another transfer on the same channel and it
    would start immediately (although transfers already queued before the
    service call wouldn't have been started).
  * Transfers which had completed within Service_PagesUnsafe handler weren't
    being delinked from the queue.
  * Service_PagesSafe wasn't handled properly, meaning that none of the
    transfers that were halted by Service_PagesUnsafe were restarted! This
    was due to the use of routines in common with DMA_SuspendTransfer and
    DMA_ResumeTransfer which started with the first HALised version - these
    suspend a logical channel, unlike the original IOMD code which
    effectively suspends a physical channel. Thus the code to search for
    transfers to restart needs to be quite different, since the physical
    channel may be idle, or occupied with another logical channel, and
    each physical channel may have multiple associated logical channels
    that were on unsafe transfers!
  * When you deregistered a logical channel (including during module death)
    the Completed callback was called for all queued transfers, incorrectly
    including those that had not yet had the matching Start callback called.
  * There was a stack imbalance in the buffer device interrupt handler
    because the retained part of the old code assumed Hdr:Proc stack
    management, which the new code doesn't use (it's entered with the return
    address on the stack).
Admin:
  Tested with UDMA test harnesses on Tungsten (ADFS not yet complete).

Version 0.17. Tagged as 'DMA-0_17'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    Exported constants for DMAManager

OldOpt  SETA    {OPT}
        OPT     OptNoList+OptNoP1List

; ***********************************
; ***    C h a n g e   L i s t    ***
; ***********************************

; Date       Name  Description
; ----       ----  -----------
; 12-Oct-94  AMcC  Created (needed for swis.h generation)
;

; SWIs

SWIClass        SETS    DMAManagerSWI_Name

        ^       DMAManagerSWI_Base

        AddSWI  RegisterChannel
        AddSWI  DeregisterChannel
        AddSWI  QueueTransfer
        AddSWI  TerminateTransfer
        AddSWI  SuspendTransfer
        AddSWI  ResumeTransfer
        AddSWI  ExamineTransfer
        AddSWI  AllocateLogicalChannels


; Logical DMA channels

; IOMD(2)-compatible on-board channels
DMALC_Podule0Line0      *       &000
DMALC_Podule0Line1      *       &001
DMALC_Podule1Line0      *       &010
DMALC_Podule1Line1      *       &011
DMALC_Podule2Line0      *       &020
DMALC_Podule2Line1      *       &021
DMALC_Podule3Line0      *       &030
DMALC_Podule3Line1      *       &031
DMALC_Podule4Line0      *       &040
DMALC_Podule4Line1      *       &041
DMALC_Podule5Line0      *       &050
DMALC_Podule5Line1      *       &051
DMALC_Podule6Line0      *       &060
DMALC_Podule6Line1      *       &061
DMALC_Podule7Line0      *       &070
DMALC_Podule7Line1      *       &071
DMALC_SCSI              *       &100
DMALC_Floppy            *       &101
DMALC_Parallel          *       &102
DMALC_Sound1            *       &103
DMALC_Sound0            *       &104
DMALC_Network           *       &105
DMALC_IDE0              *       &106
DMALC_IDE1              *       &107
DMALC_Sound2            *       &108
DMALC_Sound3            *       &109
DMALC_PCI0              *       &10A
DMALC_PCI1              *       &10B
; Other on-board channels
DMALC_Modem0            *       &200
DMALC_Modem1            *       &201
DMALC_Modem2            *       &202
DMALC_Modem3            *       &203
DMALC_Serial0           *       &210
DMALC_Serial1           *       &211
DMALC_Serial2           *       &212
DMALC_Serial3           *       &213
DMALC_Serial4           *       &214
DMALC_Serial5           *       &215
DMALC_Serial6           *       &216
DMALC_Serial7           *       &217
DMALC_USB0              *       &220
DMALC_USB1              *       &221
DMALC_IrDA0             *       &230
DMALC_IrDA1             *       &231
DMALC_GPIO0             *       &240
DMALC_GPIO1             *       &241
DMALC_MMC0              *       &250
DMALC_MMC1              *       &251
; Unsynchronised DMA
DMALC_Mem2Mem0          *       &F00
DMALC_Mem2Mem1          *       &F01
DMALC_MemSet0           *       &F10
DMALC_MemSet1           *       &F11
DMALC_IO0               *       &F20
DMALC_IO1               *       &F21
DMALC_IO2IO0            *       &F30
DMALC_IO2IO1            *       &F31


        OPT     OldOpt
        END
@


4.2
log
@Folded in HAL branch.

Version 0.16. Tagged as 'DMA-0_16'
@
text
@d42 1
d47 1
d76 1
d97 9
a105 2
DMALC_M2M0              *       &FF0
DMALC_M2M1              *       &FF1
@


4.1
log
@Initial revision
@
text
@d34 1
a34 1
                               
d44 53
a96 1
; Reason codes:
@


4.1.10.1
log
@  An intermediate version.
Detail:
  Finally, all IOMD dependencies have been expunged, and the module will
  build again. Any specific support for new features of other DMA controllers
  has yet to be added, though. New exported header added, for use by DMA
  device code.
Admin:
  Untested. However, should theoretically work if someone were to write the
  appropriate routines for the IOMD HAL.

Version 0.15, 4.4.2.2. Tagged as 'DMA-0_15-4_4_2_2'
@
text
@d34 1
a34 1

d44 1
a44 53
; Logical DMA channels

DMALC_Podule0Line0      *       &000
DMALC_Podule0Line1      *       &001
DMALC_Podule1Line0      *       &010
DMALC_Podule1Line1      *       &011
DMALC_Podule2Line0      *       &020
DMALC_Podule2Line1      *       &021
DMALC_Podule3Line0      *       &030
DMALC_Podule3Line1      *       &031
DMALC_Podule4Line0      *       &040
DMALC_Podule4Line1      *       &041
DMALC_Podule5Line0      *       &050
DMALC_Podule5Line1      *       &051
DMALC_Podule6Line0      *       &060
DMALC_Podule6Line1      *       &061
DMALC_Podule7Line0      *       &070
DMALC_Podule7Line1      *       &071
DMALC_SCSI              *       &100
DMALC_Floppy            *       &101
DMALC_Parallel          *       &102
DMALC_Sound1            *       &103
DMALC_Sound0            *       &104
DMALC_Network           *       &105
DMALC_IDE0              *       &106
DMALC_IDE1              *       &107
DMALC_Sound2            *       &108
DMALC_Sound3            *       &109
DMALC_PCI0              *       &10A
DMALC_PCI1              *       &10B
DMALC_Modem0            *       &200
DMALC_Modem1            *       &201
DMALC_Modem2            *       &202
DMALC_Modem3            *       &203
DMALC_Serial0           *       &210
DMALC_Serial1           *       &211
DMALC_Serial2           *       &212
DMALC_Serial3           *       &213
DMALC_Serial4           *       &214
DMALC_Serial5           *       &215
DMALC_Serial6           *       &216
DMALC_Serial7           *       &217
DMALC_USB0              *       &220
DMALC_USB1              *       &221
DMALC_IrDA0             *       &230
DMALC_IrDA1             *       &231
DMALC_GPIO0             *       &240
DMALC_GPIO1             *       &241
DMALC_MMC0              *       &250
DMALC_MMC1              *       &251
DMALC_M2M0              *       &FF0
DMALC_M2M1              *       &FF1

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
