head	4.8;
access;
symbols
	DMA-0_23:4.8
	DMA-0_22:4.8
	DMA-0_21:4.8
	DMA-0_20:4.8
	DMA-0_19:4.8
	DMA-0_18:4.8
	RO_5_07:4.6
	DMA-0_17:4.6
	DMA-0_16:4.5
	HAL_merge:4.4.2.6
	DMA-0_15-4_4_2_6:4.4.2.6
	DMA-0_15-4_4_2_5:4.4.2.5
	DMA-0_15-4_4_2_4:4.4.2.4
	DMA-0_15-4_4_2_3:4.4.2.3
	DMA-0_15-4_4_2_2:4.4.2.2
	DMA-0_15-4_4_2_1:4.4.2.1
	HAL_bp:4.4
	HAL:4.4.0.2
	DMA-0_15:4.4
	DMA-0_14:4.4
	dellis_autobuild_BaseSW:4.3
	sbrodie_sedwards_16Mar2000:4.3
	DMA-0_13:4.3
	dcotton_autobuild_BaseSW:4.4
	nturton_DMA-0_12:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	troddis_DMA-0_13:4.2.2.1
	nicke_DMA_0_11:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.8
date	2009.11.28.22.19.36;	author jlee;	state Exp;
branches;
next	4.7;

4.7
date	2009.06.11.21.07.00;	author bavison;	state Exp;
branches;
next	4.6;

4.6
date	2003.01.30.16.10.49;	author bavison;	state Exp;
branches;
next	4.5;

4.5
date	2002.12.13.18.48.12;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2001.03.16.15.54.35;	author sbrodie;	state Exp;
branches
	4.4.2.1;
next	4.3;

4.3
date	99.11.12.12.36.56;	author dcotton;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.16.24.38;	author nturton;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.35.43;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.4.2.1
date	2001.11.27.14.57.57;	author bavison;	state Exp;
branches;
next	4.4.2.2;

4.4.2.2
date	2002.10.03.17.35.13;	author bavison;	state Exp;
branches;
next	4.4.2.3;

4.4.2.3
date	2002.10.15.19.15.35;	author bavison;	state Exp;
branches;
next	4.4.2.4;

4.4.2.4
date	2002.10.25.14.58.18;	author bavison;	state Exp;
branches;
next	4.4.2.5;

4.4.2.5
date	2002.11.22.16.53.30;	author bavison;	state Exp;
branches;
next	4.4.2.6;

4.4.2.6
date	2002.12.13.17.25.01;	author bavison;	state Exp;
branches;
next	;

4.2.2.1
date	98.09.18.12.16.53;	author troddis;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.35.43;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.22.37;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.50.27;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.45.15;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.8
log
@DMAManager fixes & improvements
Detail:
  DMA.s, in DMAForceActivate: Support for the NoInitIRQ flag for interrupt-driven buffer-type channels (API 1+)
  DMA.s, 'testloop': Fix handling of interrupt-driven buffer-type channels so DMAManager doesn't immediately crash or malfunction
  DMA.s, 'overrun', 'earlyoverrun', 'nooverrun': Fix handling of interrupt-driven buffer-type channels so IRQ state is cleared before the next stage of the transfer is programmed (to avoid missing IRQs)
  DMA.s, 'finished': Fix handling of interrupt-driven buffer-type channels so R8 is loaded with the logical channel block ptr, as expected by subsequent function calls.
  Front.s: Make dmaq_Trampoline larger to allow it to contain the HAL device ptr
  GetAll.s: Add Hdr:HALEntries to GET list, as required by 'ClaimVectors' fix in ModHead.s
  ModHead.s: Update controller handling code to cope with API versions 0.1 (TestIRQ2) & 1 ('Deallocate' passed channel device ptr)
  ModHead.s: Fix 'ClaimVectors' to call HAL_IRQEnable to enable IRQs for the detected channels/controllers.
  ModHead.s: Fix IRQ handler trampolines so that they call HALDevice_TestIRQ on the channel instead of branching to a random address in memory
  SWI.s: Support for controller API 1 (pass channel device ptr to 'Deallocate' in R2)
  hdr/DMADevice: Extra flags & entries for new DMA controller & buffer API versions
Admin:
  Tested on rev C2 beagleboard with the incoming HAL DMA driver. API revisions are documented in more detail on the ROOL wiki.


Version 0.18. Tagged as 'DMA-0_18'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.GetAll

;---------------------------------------------------------------------------
; DMA manager module.
;---------------------------------------------------------------------------

        AREA    |DMA$$Code|, CODE, READONLY, PIC

Module_BaseAddr

;---------------------------------------------------------------------------
;       Get the headers.
;
        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ModHand
	GET	Hdr:Machine.<Machine>
	$GetIO
        GET     Hdr:Services
        GET     Hdr:MsgTrans
        GET     Hdr:ResourceFS
        GET     Hdr:DevNos
        GET     Hdr:Proc
        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors
        GET     Hdr:HostFS
        GET     Hdr:NdrDebug
        GET     Hdr:DDVMacros
      [ HAL
        GET     Hdr:Variables
        GET     Hdr:DMADevice
        GET     Hdr:PCI
        GET     Hdr:HALEntries
      ]

        GET     VersionASM

;---------------------------------------------------------------------------
;       Define global variables.
;
                GBLL    hostvdu

debug           SETL    false
hostvdu         SETL    true
mod             SETD    false
dma             SETD    false
unsf            SETD    false
safe            SETD    false
swi             SETD    false
int             SETD    false
tab             SETD    false
term            SETD    false
purge           SETD    false
tmp             SETD    false

debug_irqsafe   SETL    true

                GBLL    WriteBackCache
WriteBackCache  SETL    true            ; Needed for StrongARM, and unless we add
                                        ; some way to set pages as write-though
                                        ; cacheable, for ARM9 and XScale too.
                                        ; Not needed for ARM7.

  [ :LNOT: :DEF: standalone
                GBLL    standalone
standalone      SETL    false
  ]

                GBLL    international
international   SETL    true

                GBLA    ScatterListThresh
ScatterListThresh SETA  -&10000

;---------------------------------------------------------------------------
;       Get the sources.
;
                GBLS    GetResFiles
 [ standalone
GetResFiles     SETS    "GET    s.ResFiles"
 |
GetResFiles     SETS    ""
 ]


      [ HAL
        GET     CallHAL.s
      ]
        GET     Front.s
        GET     Macros.s
        GET     Errors.s
        GET     ModHead.s
        $GetResFiles
        GET     SWI.s
        GET     DMA.s
      [ HAL
        GET     Command.s
      ]
        GET     Tail.s

        END
@


4.7
log
@  GET file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both objasm and asasm.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 0.17. Not tagged
@
text
@d48 1
@


4.6
log
@  A few weeks' dedicated work, mainly to support UDMA hard discs.
Detail:
  Features:
  * Supports physical channels using a new type of HAL device (&303) where
    the hardware takes a pointer to a scatter list up front to effect the
    entire transfer, and which may report hardware errors at any time.
    For full details, see Doc.HAL_DMAAPI.
  * Page tables are no longer generated when using a bounce-buffer, since
    they aren't actually any use except in determining if unsafe pages
    intersect with the transfer. Instead, bounce-buffer transfers are halted
    whenever any page becomes unsafe, and no new bounce-buffer transfers can
    be started while any pages are unsafe.
  * For both bounce-buffer and list-type devices, the Activate entry is
    now called after the transfer is programmed (with SetCurrentTransfer
    or SetListTransfer), since this is likely to be more useful for these
    types of devices. Note that for interrupt-driven buffer devices, it
    is still assumed that the default state of the device is to be in an
    underrun interrupt state, so the transfer is not programmed until the
    first time the interrupt routine is entered.
  * Now ensures that scatter list start addresses and lengths are all
    multiples of the transfer unit size (this check is done during page
    table construction, so will be returned via the Completed callback,
    rather than directly from DMA_QueueTransfer like the total length check).
  * When there is no interrupt associated with a physical channel (both for
    buffer- or list-type devices), if the polling of the hardware within SWI
    DMA_ExamineTransfer detects that the transfer has completed, then
    the transfer is shut down in the same was as though an interrupt had
    happened (ie the Completed callback is called without an error).
  * Added SWI DMA_AllocateLogicalChannels to act as a centralised allocator
    for session-unique logical DMA channels. Primarily a service to
    third-party authors of "HAL" devices.
  Bugfixes:
  * Now handles Service_MessageFileClosed to allow safe MessageTrans lookups
    in the background.
  * If a controller device was removed before its constituent channel
    devices, removing the channel device would abort.
  * Interrupt trampoline construction was wrong, the address of the
    interrupt handler code wasn't relocated. Also, non-vectored interrupts
    weren't correctly handled.
  * Transfers suspended by Service_PagesUnsafe weren't blocking the logical
    channel, so you could queue another transfer on the same channel and it
    would start immediately (although transfers already queued before the
    service call wouldn't have been started).
  * Transfers which had completed within Service_PagesUnsafe handler weren't
    being delinked from the queue.
  * Service_PagesSafe wasn't handled properly, meaning that none of the
    transfers that were halted by Service_PagesUnsafe were restarted! This
    was due to the use of routines in common with DMA_SuspendTransfer and
    DMA_ResumeTransfer which started with the first HALised version - these
    suspend a logical channel, unlike the original IOMD code which
    effectively suspends a physical channel. Thus the code to search for
    transfers to restart needs to be quite different, since the physical
    channel may be idle, or occupied with another logical channel, and
    each physical channel may have multiple associated logical channels
    that were on unsafe transfers!
  * When you deregistered a logical channel (including during module death)
    the Completed callback was called for all queued transfers, incorrectly
    including those that had not yet had the matching Start callback called.
  * There was a stack imbalance in the buffer device interrupt handler
    because the retained part of the old code assumed Hdr:Proc stack
    management, which the new code doesn't use (it's entered with the return
    address on the stack).
Admin:
  Tested with UDMA test harnesses on Tungsten (ADFS not yet complete).

Version 0.17. Tagged as 'DMA-0_17'
@
text
@d101 1
a101 1
        GET     s.CallHAL
d103 4
a106 4
        GET     s.Front
        GET     s.Macros
        GET     s.Errors
        GET     s.ModHead
d108 2
a109 2
        GET     s.SWI
        GET     s.DMA
d111 1
a111 1
        GET     s.Command
d113 1
a113 1
        GET     s.Tail
@


4.5
log
@Folded in HAL branch.

Version 0.16. Tagged as 'DMA-0_16'
@
text
@d45 1
@


4.4
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.14. Tagged as 'DMA-0_14'
@
text
@d44 4
d57 1
a57 1
hostvdu         SETL    false
d69 7
a75 2
                GBLL    StrongARM
StrongARM       SETL    true
d85 2
a86 8
                GBLL    IOMD
IOMD            SETL    true            ; Assemble for real IOMD.

                GBLL    MemManager
MemManager      SETL    true            ; Assemble memory management stuff.

                        GBLL    DeregisterOnFinalise
DeregisterOnFinalise    SETL    true    ; Deregister and purge channels on finalise.
d99 3
d109 3
@


4.4.2.1
log
@  Commit of the HALised DMA Manager code, as it was when the IA division
  was closed.
Detail:
  This didn't get far beyond the design stage, but what there is is best kept
  safe in CVS in case it gets accidentally deleted again...
Admin:
  Don't even think about trying to build this version.

Version 0.15, 4.4.2.1. Tagged as 'DMA-0_15-4_4_2_1'
@
text
@d65 2
a66 5
                GBLL    WriteBackCache
WriteBackCache  SETL    true            ; Needed for StrongARM, and unless we add
                                        ; some way to set pages as write-though
                                        ; cacheable, for ARM9 and XScale too.
                                        ; Not needed for ARM7.
d76 9
a95 3
      [ HAL
        GET     s.CallHAL
      ]
@


4.4.2.2
log
@  An intermediate version.
Detail:
  Finally, all IOMD dependencies have been expunged, and the module will
  build again. Any specific support for new features of other DMA controllers
  has yet to be added, though. New exported header added, for use by DMA
  device code.
Admin:
  Untested. However, should theoretically work if someone were to write the
  appropriate routines for the IOMD HAL.

Version 0.15, 4.4.2.2. Tagged as 'DMA-0_15-4_4_2_2'
@
text
@a43 3
      [ HAL
        GET     Hdr:DMADevice
      ]
@


4.4.2.3
log
@  Just enough support for floppy DMA transfer to work on Tungsten.
Detail:
  * Supports DMA controllers with no interrupts (ie those that need a bounce
    buffer).
  * Restructured interface to HAL to separate the concepts of a DMA controller
    device and a DMA channel device.
  * Bugfixes to handling of single-buffered channels.
  * Updated Doc.HAL_DMAAPI.
Admin:
  Tested with Kevin's ADFS.

Version 0.15, 4.4.2.3. Tagged as 'DMA-0_15-4_4_2_3'
@
text
@a45 1
        GET     Hdr:PCI
@


4.4.2.4
log
@Scatter list entries in the top 64K of memory are treated as list loopback
indicators, for FileCore compatibility.
Unaligned reads using a bounce buffer should now work correctly.

Version 0.15, 4.4.2.4. Tagged as 'DMA-0_15-4_4_2_4'
@
text
@a82 3
                GBLA    ScatterListThresh
ScatterListThresh SETA  -&10000

@


4.4.2.5
log
@  One new feature, required by ADFS, and lots of silly bugfixes.
Detail:
  * Flag bit 3 passed to DMA_QueueTransfer indicates that the DMA Manager
    shouldn't update the scatter list itself, even when a circular transfer
    is not specifier
  * When using a bounce buffer, the source/destination isn't marked
    uncacheable any more
  * r2 was being corrupted by the call to the device Reset entry
  * Flags passed to device SetOptions entry were always 0, which meant that
    you could never write to any device
  * Test for whether to write to the bounce buffer was wrong in two ways
  * Updating the scatter list was wrong if the amount to update by was
    larger than the first entry (ie after a bounce buffer had been
    completed) - the whole difference was applied to the first entry
Admin:
  Tested in use with ADFS.

Version 0.15, 4.4.2.5. Tagged as 'DMA-0_15-4_4_2_5'
@
text
@d57 1
a57 1
hostvdu         SETL    true
a67 2

debug_irqsafe   SETL    true
@


4.4.2.6
log
@  Lots of improvements, working towards support for UDMA etc.
Detail:
  * No longer uses temporay HAL DMA entry points, all hardware access is
    accomplished using device entry points.
  * Supports multiple DMA controllers, including dynamic addition and
    removal of controllers (using OS_Hardware 4 and Service_Hardware).
  * Added *DMAChannels, which enumerates the currently registered DMA
    channels, listed according to physical location.
  * Logical channel blocks are dynamically allocated (as a requirement of
    the above changes) so logical channel handles are now pointers, no
    longer an array index. Just so you know.
  * Removed now-obsolete EnumerateLogical entry from controller device API.
  * Added pointer-to-controller-device item in publically visible part of
    channel device structure.
  * Moved memory-to-memory channel device entries to end of channel device
    structure (I'm considering removing them).
  * Added support for GPA debugging listing (requires BuildSys 3.86).
Admin:
  Tested on Tungsten (ie floppies still work).

Version 0.15, 4.4.2.6. Tagged as 'DMA-0_15-4_4_2_6'
@
text
@a108 3
      [ HAL
        GET     s.Command
      ]
@


4.3
log
@	Now builds with HdrSrc-0_52 or later, and placed under srccommit
control.

Detail:
	A change in Version 0.52 of HdrSrc meant that this component would
not build. This has now been fixed.
	Makefile now uses strdepend in the clean phase to remove all the
dynamic dependencies.
	Placed under srccommit control.

Admin:
	Built.

Version 0.13. Tagged as 'DMA-0_13'
@
text
@d21 2
d68 1
d71 1
@


4.2
log
@Version RO_3_70 taken
@
text
@d30 2
a31 1
        GET     Hdr:IO.IOMD
d43 1
a43 1
        GET     Version
@


4.2.2.1
log
@DMA changes for Phoebe (mostly remapping of channels).
@
text
@a73 2
                ASSERT IOMD

@


4.1
log
@Initial revision
@
text
@d62 3
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a61 3
                GBLL    StrongARM
StrongARM       SETL    true

@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
