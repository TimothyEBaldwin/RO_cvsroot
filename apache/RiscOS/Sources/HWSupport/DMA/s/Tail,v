head	4.5;
access;
symbols
	DMA-0_23:4.5
	DMA-0_22:4.5
	DMA-0_21:4.5
	DMA-0_20:4.5
	DMA-0_19:4.5
	DMA-0_18:4.5
	RO_5_07:4.5
	DMA-0_17:4.5
	DMA-0_16:4.4
	HAL_merge:4.3.2.1
	DMA-0_15-4_4_2_6:4.3.2.1
	DMA-0_15-4_4_2_5:4.3
	DMA-0_15-4_4_2_4:4.3
	DMA-0_15-4_4_2_3:4.3
	DMA-0_15-4_4_2_2:4.3
	DMA-0_15-4_4_2_1:4.3
	HAL_bp:4.3
	HAL:4.3.0.2
	DMA-0_15:4.3
	DMA-0_14:4.2
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	DMA-0_13:4.1
	dcotton_autobuild_BaseSW:4.3
	nturton_DMA-0_12:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	troddis_DMA-0_13:4.1
	nicke_DMA_0_11:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2003.01.30.16.10.49;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2002.12.13.18.48.12;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2001.04.11.18.49.22;	author bavison;	state Exp;
branches
	4.3.2.1;
next	4.2;

4.2
date	2001.03.16.15.54.35;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.44;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.3.2.1
date	2002.12.13.17.25.01;	author bavison;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.35.44;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.22.50;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.50.37;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.45.21;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@  A few weeks' dedicated work, mainly to support UDMA hard discs.
Detail:
  Features:
  * Supports physical channels using a new type of HAL device (&303) where
    the hardware takes a pointer to a scatter list up front to effect the
    entire transfer, and which may report hardware errors at any time.
    For full details, see Doc.HAL_DMAAPI.
  * Page tables are no longer generated when using a bounce-buffer, since
    they aren't actually any use except in determining if unsafe pages
    intersect with the transfer. Instead, bounce-buffer transfers are halted
    whenever any page becomes unsafe, and no new bounce-buffer transfers can
    be started while any pages are unsafe.
  * For both bounce-buffer and list-type devices, the Activate entry is
    now called after the transfer is programmed (with SetCurrentTransfer
    or SetListTransfer), since this is likely to be more useful for these
    types of devices. Note that for interrupt-driven buffer devices, it
    is still assumed that the default state of the device is to be in an
    underrun interrupt state, so the transfer is not programmed until the
    first time the interrupt routine is entered.
  * Now ensures that scatter list start addresses and lengths are all
    multiples of the transfer unit size (this check is done during page
    table construction, so will be returned via the Completed callback,
    rather than directly from DMA_QueueTransfer like the total length check).
  * When there is no interrupt associated with a physical channel (both for
    buffer- or list-type devices), if the polling of the hardware within SWI
    DMA_ExamineTransfer detects that the transfer has completed, then
    the transfer is shut down in the same was as though an interrupt had
    happened (ie the Completed callback is called without an error).
  * Added SWI DMA_AllocateLogicalChannels to act as a centralised allocator
    for session-unique logical DMA channels. Primarily a service to
    third-party authors of "HAL" devices.
  Bugfixes:
  * Now handles Service_MessageFileClosed to allow safe MessageTrans lookups
    in the background.
  * If a controller device was removed before its constituent channel
    devices, removing the channel device would abort.
  * Interrupt trampoline construction was wrong, the address of the
    interrupt handler code wasn't relocated. Also, non-vectored interrupts
    weren't correctly handled.
  * Transfers suspended by Service_PagesUnsafe weren't blocking the logical
    channel, so you could queue another transfer on the same channel and it
    would start immediately (although transfers already queued before the
    service call wouldn't have been started).
  * Transfers which had completed within Service_PagesUnsafe handler weren't
    being delinked from the queue.
  * Service_PagesSafe wasn't handled properly, meaning that none of the
    transfers that were halted by Service_PagesUnsafe were restarted! This
    was due to the use of routines in common with DMA_SuspendTransfer and
    DMA_ResumeTransfer which started with the first HALised version - these
    suspend a logical channel, unlike the original IOMD code which
    effectively suspends a physical channel. Thus the code to search for
    transfers to restart needs to be quite different, since the physical
    channel may be idle, or occupied with another logical channel, and
    each physical channel may have multiple associated logical channels
    that were on unsafe transfers!
  * When you deregistered a logical channel (including during module death)
    the Completed callback was called for all queued transfers, incorrectly
    including those that had not yet had the matching Start callback called.
  * There was a stack imbalance in the buffer device interrupt handler
    because the retained part of the old code assumed Hdr:Proc stack
    management, which the new code doesn't use (it's entered with the return
    address on the stack).
Admin:
  Tested with UDMA test harnesses on Tungsten (ADFS not yet complete).

Version 0.17. Tagged as 'DMA-0_17'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.Tail

 [ international

 [ HAL
ServiceMessageFileClosed ; needed so we can do lookups in the background
        Entry   "r1,r2"
        ADR     r1, message_file_block
        TEQ     r0, r1
        BLEQ    MsgTrans_OpenFile
        EXIT
 ]

;---------------------------------------------------------------------------
; MsgTrans_OpenFile
;       Out:    r1,r2 corrupted.
;
;       Open our messages file.
;
MsgTrans_OpenFile
        Entry   "r0"

        ADR     r0, message_file_block
        ADR     r1, message_filename
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile
        MOVVC   r0, #-1
        STRVC   r0, message_file_open
        STRVS   r0, [sp]

        EXIT

;---------------------------------------------------------------------------
; MsgTrans_ErrorLookup
;       In:     r0 -> token error block
;               r4-r7 -> optional parameters
;       Out:    r0 -> translated error block
;
;       Lookup an error in our messages file.
;
MsgTrans_ErrorLookup
        Entry   "r1,r2"

        LDR     r1, message_file_open
        CMP     r1, #0
        BLEQ    MsgTrans_OpenFile
        EXIT    VS
        ADR     r1, message_file_block
        MOV     r2, #0
        SWI     XMessageTrans_ErrorLookup

        EXIT

 [ HAL
;---------------------------------------------------------------------------
; MsgTrans_Lookup
;       In:     r1 -> token
;               r2 -> buffer, or 0 to lookup directly
;               r3 = size of buffer
;               r4-r7 -> optional parameters
;       Out:    r0 -> string
;
;       Lookup a string in our messages file.
;
MsgTrans_Lookup
        Entry   "r1-r3"

        LDR     r1, message_file_open
        CMP     r1, #0
        BLEQ    MsgTrans_OpenFile
        EXIT    VS
        ADR     r0, message_file_block
        LDMIA   sp, {r1,r2}
        SWI     XMessageTrans_Lookup

        MOVVC   r0, r2
        EXIT
 ]

message_filename
        DCB     "Resources:$.Resources.DMA.Messages",0
                ALIGN

 ]

;---------------------------------------------------------------------------
;       Neil's debugging routines
;
      [ debug
        InsertNDRDebugRoutines
      ]

        END
@


4.4
log
@Folded in HAL branch.

Version 0.16. Tagged as 'DMA-0_16'
@
text
@d19 9
d77 1
a77 1
;       Lookup an error in our messages file.
@


4.3
log
@  Main change is 32-bit compatibility.
Detail:
  Also
  * added Ursula service call table (not even the Phoebe version had one!)
  * fixed a bug: the Service_PagesUnsafe handler was returning with IRQs
    still disabled
Admin:
  Not tested.

Version 0.15. Tagged as 'DMA-0_15'
@
text
@a48 1
        CLRV
d50 1
a50 1
        TEQ     r1, #0
d58 26
@


4.3.2.1
log
@  Lots of improvements, working towards support for UDMA etc.
Detail:
  * No longer uses temporay HAL DMA entry points, all hardware access is
    accomplished using device entry points.
  * Supports multiple DMA controllers, including dynamic addition and
    removal of controllers (using OS_Hardware 4 and Service_Hardware).
  * Added *DMAChannels, which enumerates the currently registered DMA
    channels, listed according to physical location.
  * Logical channel blocks are dynamically allocated (as a requirement of
    the above changes) so logical channel handles are now pointers, no
    longer an array index. Just so you know.
  * Removed now-obsolete EnumerateLogical entry from controller device API.
  * Added pointer-to-controller-device item in publically visible part of
    channel device structure.
  * Moved memory-to-memory channel device entries to end of channel device
    structure (I'm considering removing them).
  * Added support for GPA debugging listing (requires BuildSys 3.86).
Admin:
  Tested on Tungsten (ie floppies still work).

Version 0.15, 4.4.2.6. Tagged as 'DMA-0_15-4_4_2_6'
@
text
@d49 1
d51 1
a51 1
        CMP     r1, #0
a58 26

 [ HAL
;---------------------------------------------------------------------------
; MsgTrans_Lookup
;       In:     r1 -> token
;               r2 -> buffer, or 0 to lookup directly
;               r3 = size of buffer
;               r4-r7 -> optional parameters
;       Out:    r0 -> string
;
;       Lookup an error in our messages file.
;
MsgTrans_Lookup
        Entry   "r1-r3"

        LDR     r1, message_file_open
        CMP     r1, #0
        BLEQ    MsgTrans_OpenFile
        EXIT    VS
        ADR     r0, message_file_block
        LDMIA   sp, {r1,r2}
        SWI     XMessageTrans_Lookup

        MOVVC   r0, r2
        EXIT
 ]
@


4.2
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.14. Tagged as 'DMA-0_14'
@
text
@d53 1
a53 1
        Pull    "r1,r2,pc",VS
@


4.1
log
@Initial revision
@
text
@d26 1
a26 1
        ENTRY   "r0"
d47 1
a47 1
        ENTRY   "r1,r2"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
