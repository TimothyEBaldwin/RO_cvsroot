head	4.6;
access;
symbols
	CDFSDriver-2_41:4.6
	CDFSDriver-2_40:4.5
	RO_5_07:4.5
	CDFSDriver-2_39:4.5
	CDFSDriver-2_38:4.4
	CDFSDriver-2_37:4.3
	CDFSDriver-2_36:4.2
	CDFSDriver-2_35:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_Ursula_merge:4.1
	dcotton_Spin_merge:4.1.7.1
	CDFSDriver-2_34:4.1
	dcotton_autobuild_BaseSW:4.2
	nturton_CDFSDriver-2_33:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_CDFSDriver-2_33:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2012.05.24.19.35.28;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	0F0Yb1BoyHs9N06w;

4.5
date	2002.11.22.21.24.59;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2002.11.22.15.10.19;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2002.11.06.14.32.39;	author bavison;	state Exp;
branches;
next	4.2;

4.2
date	2000.12.07.10.45.33;	author jberanek;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.15.56;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.45.29;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.42.45;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.6
log
@GET of some defines from exports.
SCSI errors from Hdr:SCSIErr.
Push/Pull instead of STASH/GRAB.
OS_Byte and OS_Module reason codes.
Help string capitalised to match the component name.

Version 2.41. Tagged as 'CDFSDriver-2_41'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; -> OnError















; This deals with certain types of errors, doing retries if necessary
















; By MEW of Eesox.  8th May 1993


message_file_name
        DCB     "Resources:$.Resources.CDFSDriver.CDFSDriver.Messages",0
        ALIGN

;-----------------------------------------------------------------------------------------------
error_handler_manyregs ROUT
;
; on entry:
;          r0  -> error block
;          r1, r2 may contain additional error information
;          r3, r4 must be passed back (unless retrying)
;          r12 -> workspace
;          r13 -> full descending stack with r0-r11 and r14 stacked
; on exit:
;          this routine will retry or exit back to the User
;-----------------------------------------------------------------------------------------------

        MOV     r11, #2                 ; Signal that r1-r4 have important values.
        B       error_common

;-----------------------------------------------------------------------------------------------
error_handler_lookup ROUT
;
; on entry:
;          r0  -> error block to be looked up
;          r12 -> workspace
;          r13 -> full descending stack with r0 and r14 stacked
; on exit:
;          this routine will retry or exit back to the User
;
; The message file is only used for errors so we can just open it and then close it again when
; we need to look up an error (ie. performance is not an issue).
;-----------------------------------------------------------------------------------------------

        MOV     r11, #1                 ; Signal that error is to be looked up.
        B       error_common

;-----------------------------------------------------------------------------------------------
error_handler ROUT
;
; on entry:
;          r0  -> error block
;          r12 -> workspace
;          r13 -> full descending stack with r0-r11 and r14 stacked
; on exit:
;          this routine will retry or exit back to the User
;-----------------------------------------------------------------------------------------------

        MOV     r11, #0                 ; Signal that error is not to be looked up.
error_common
        LDR     r5, [ r0 ]

;--------------------------------------
; Does the error signal a disc change ?
;--------------------------------------
        LDR     r6, =UnitAttention
        TEQ     r5, r6
        LDRNE   r6, =CheckCondition
        TEQNE   r5, r6
        BEQ     change_of_disc

;------------------------------------------
; Convert the error to a CDFSDriver error ?
;------------------------------------------
        ADR     r6, error_conversion_start
        MOV     r9, #(error_conversion_end - error_conversion_start) / 8
01
        LDMIA   r6!, { r7, r8 }
        TEQ     r7, r5
        SUBNES  r9, r9, #1
        BNE     %BT01

        TEQ     r7, r5                  ; If converting this error then point r0 and drop through to lookup.
        ADREQ   r0, error_conversion_start
        ADDEQ   r0, r0, r8

        TEQNE   r11, #1                 ; Not converting so check whether the error needs to be looked up.
        BNE     return_error

        Push    r0                      ; Save error we need to look up.
        ADR     r0, buffer              ; Use temp for MessageTrans file descriptor.
        ADR     r1, message_file_name
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile
        Pull    r1, VS                  ; If SWI returns error then flatten stack and report it.
        BVS     error_handler

        MOV     r1, r0                  ; r1->file desc, r2=0 from above
        Pull    r0                      ; Get back error block we need to look up.
        SWI     XMessageTrans_ErrorLookup

        MOV     r2, r0                  ; Save error just looked up (or generated by SWI).
        MOV     r0, r1                  ; r0->file desc.
        SWI     XMessageTrans_CloseFile
        MOV     r0, r2
        ; Drop into...

;-----------------------------
; Return the error to the user
;-----------------------------
return_error
 LDR      r5, [ r0 ]
 STR      r5, LastErrorNumber
 STR      r0, [ r13 ]
 TEQ      r11, #2          ; many-result-reg exit?
 SWIExitVS NE

 VSET
 ADD      r13, r13, #5 * 4 ; leave r0-r4 as they are
 Pull     "r5-r11, pc"


;-----------------------------
change_of_disc
;-----------------------------

 LDR      r10, [ r13, # 11 * 4 ]

; Check the number of retries currently performed
 MOV      r10, r10, LSR #30
 ADD      r10, r10, #1
 CMP      r10, #3
 BGE      return_error

 Pull     "r0-r11, r14"
 ADD      r11, r11, #1:SHL:30
 Push     "r0-r11, r14"

; set the disc changed flag
; MUST USE THE CALLERS R7 !!
; ADR      r7, control_block
 SWI      XCD_DiscHasChanged

; retry the previous SWI CD_
 Pull     "r0-r11, r14"
 VCLEAR   ; must ensure CPSR V is clear for compatibility with kernel
 B        SWIentry_after_wp


;-----------------------------
error_conversion_start

 DCD ErrorNumber_SCSI_Timeout
 DCD NoDrive    - error_conversion_start

 DCD CheckCondition      ; &20180
 DCD NoCaddy    - error_conversion_start

 DCD &201d0              ; &201d0
 DCD NoCaddy    - error_conversion_start

 DCD Busy                ; &20181
 DCD NoCaddy    - error_conversion_start

 DCD NotReady            ; &201C2
 DCD NoCaddy    - error_conversion_start

 DCD MediumError
 DCD FaultyDisc - error_conversion_start

error_conversion_end




;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------

 END
@


4.5
log
@  Minor bugfixes.
Detail:
  * Fixed some assumptions about flag preservation in CD_ SWIs
  * Standardised spelling of CD-ROM in messages files (not CD ROM)
  * Fixed pathname of messages file to include $
Admin:
  Tested on Tungsten.

Version 2.39. Tagged as 'CDFSDriver-2_39'
@
text
@d193 1
a193 1
 DCD TimeoutSelection    ; &2010A
@


4.4
log
@Added SWI CD_SCSIUserOp (see Doc/SCSIUserOp).

Version 2.38. Tagged as 'CDFSDriver-2_38'
@
text
@d52 1
a52 1
        DCB     "Resources:Resources.CDFSDriver.CDFSDriver.Messages",0
@


4.3
log
@  Changes for RISC OS 5.
Detail:
  * Merged in RISCOS Ltd change: module no longer fails to intialise if no
    CDROMs are configured. This, along with their equivalent change in
    CDFS, allows the number of CDROMs to be configured up from 0 from the
    command line
  * Moved resources here from CDFSResources - allows tokenisation
  * Uses objasm and shared makefiles
  * 32-bit compatible
Admin:
  Not tested.

Version 2.37. Tagged as 'CDFSDriver-2_37'
@
text
@d56 16
d101 1
a101 1
        LDR     r1, [ r0 ]
d106 4
a109 4
        LDR     r2, =UnitAttention
        TEQ     r1, r2
        LDRNE   r2, =CheckCondition
        TEQNE   r1, r2
d115 2
a116 2
        ADR     r2, error_conversion_start
        MOV     r5, #(error_conversion_end - error_conversion_start) / 8
d118 3
a120 3
        LDMIA   r2!, { r3, r4 }
        TEQ     r3, r1
        SUBNES  r5, r5, #1
d123 1
a123 1
        TEQ     r3, r1                  ; If converting this error then point r0 and drop through to lookup.
d125 1
a125 1
        ADDEQ   r0, r0, r4
d152 2
a153 2
 LDR      r1, [ r0 ]
 STR      r1, LastErrorNumber
d155 6
a160 1
 SWIExitVS
d167 1
a167 2
 STR      r0, buffer
 LDMFD    r13, { r0-r11, r14 }
d170 1
a170 1
 MOV      r10, r11, LSR #30
a172 1
 LDRGE    r0, buffer
@


4.2
log
@  Macro changes
Detail:
  Replaced GRABS and GRAB with Pull, and STASH with Push.
Admin:
  Built.


Version 2.36. Tagged as 'CDFSDriver-2_36'
@
text
@d139 1
a139 2
 Pull     "r0-r11, r14"
 ORRS     pc, r14, #Overflow_Flag
d167 1
@


4.1
log
@Initial revision
@
text
@d54 1
a54 1
         
d114 1
a114 1
        STASH   r0                      ; Save error we need to look up.
d119 1
a119 1
        GRAB    r1, VS                  ; If SWI returns error then flatten stack and report it.
d121 1
a121 1
        
d123 1
a123 1
        GRAB    r0                      ; Get back error block we need to look up.
d125 1
a125 1
        
d139 1
a139 1
 GRAB     "r0-r11, r14"
d157 1
a157 1
 GRAB     "r0-r11, r14"
d159 1
a159 1
 STASH    "r0-r11, r14"
d167 1
a167 1
 GRAB     "r0-r11, r14"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
