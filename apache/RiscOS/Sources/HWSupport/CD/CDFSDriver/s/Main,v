head	4.6;
access;
symbols
	CDFSDriver-2_41:4.6
	CDFSDriver-2_40:4.5
	RO_5_07:4.5
	CDFSDriver-2_39:4.5
	CDFSDriver-2_38:4.5
	CDFSDriver-2_37:4.4
	CDFSDriver-2_36:4.3
	CDFSDriver-2_35:4.2
	dellis_autobuild_BaseSW:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_Ursula_merge:4.1
	dcotton_Spin_merge:4.1.7.1
	CDFSDriver-2_34:4.2
	dcotton_autobuild_BaseSW:4.3
	nturton_CDFSDriver-2_33:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_CDFSDriver-2_33:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2012.05.24.19.35.28;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	0F0Yb1BoyHs9N06w;

4.5
date	2002.11.22.15.10.19;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2002.11.06.14.32.38;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2000.12.07.10.45.33;	author jberanek;	state Exp;
branches;
next	4.2;

4.2
date	99.11.05.07.52.14;	author dcotton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.15.49;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.45.25;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.42.43;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.6
log
@GET of some defines from exports.
SCSI errors from Hdr:SCSIErr.
Push/Pull instead of STASH/GRAB.
OS_Byte and OS_Module reason codes.
Help string capitalised to match the component name.

Version 2.41. Tagged as 'CDFSDriver-2_41'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; -> Case


        AREA    |CDFSDriver$$Code|, CODE, READONLY, PIC




;   This is the main part of the CDFSDriver module





; routines in here:
;                  SWIentry








;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------
;                       MODULE HEADER
;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------

startofheader
 DCD 0
 DCD initialisingcode - startofheader
 DCD finalisingcode   - startofheader
 DCD 0
 DCD title            - startofheader
 DCD help             - startofheader
 DCD 0
 DCD CDROMSWI_Base
 DCD SWIentry         - startofheader
 DCD tableofswinames  - startofheader
 DCD 0
 DCD 0
 DCD moduleflags      - startofheader

;
; Global hdrs:
;
 GET Hdr:ListOpts
 GET Hdr:Macros
 GET Hdr:System
 GET Hdr:CMOS
 GET Hdr:OsBytes
;
; Interface hdrs:
;
 GET Hdr:ModHand
 GET Hdr:SCSI
 GET Hdr:SCSIErr
 GET Hdr:CDROM      ; CDROM SWIs
 GET Hdr:MsgTrans
 GET Hdr:HostFS
;
; Local hdrs:
;
 GET hdr.Hashes     ; all hashes (incl. configuration flags)
 GET hdr.CDMacros   ; local macros

 GET VersionASM     ; date/version number

 GET Strings.s      ; contains errors and strings
 GET Tables.s       ; contains info for setting up blocks
 GET Module.s       ; Init/Final code
 GET Register.s     ; CD_Register code
 GET Unregister.s   ; CD_Unregister code
 GET Identify.s     ; CD_Unregister code
 GET CD_Routs.s     ; the internal SWI CD_ routines
 GET OnError.s      ; deal with errors
 GET ExtraBits.s    ; Extra routines
 GET ByteCopy.s     ; RCM's fast block copy routine
 GET variables.s    ; layout of workspace



switoobig DCD &1E6
            = "UnkCDOp", 0
 ALIGN

moduleflags DCD ModuleFlag_32bit

;-----------------------------------------------------------------------------------------------
;
SWIentry ROUT
;
; on entry:
;          r11 = SWI number % 64
;          r12 = private word pointer
;          r13 = supervisor stack
;          r14 = return register
; on exit:
;          r10 - r12 corrupted
;
;    This performs the CD_.. SWI
;-----------------------------------------------------------------------------------------------

;---------------------------
; Load the workspace pointer
;---------------------------
 LDR       r12, [ r12 ]


SWIentry_after_wp

 Push      "r0-r11, r14"

 BIC       r11, r11, #3:SHL:30

;---------------------------
; Turn irqs on
;---------------------------
 TEQ       PC, PC
 MVNNE     r10, #I_bit
 TSTNEP    r10, PC
 MRSEQ     r10, CPSR
 BICEQ     r10, r10, #I32_bit
 MSREQ     CPSR_c, r10

; Push  "r5, r11"
; STRIM " SWI Number = "
; Display r11
; STRIM  " Drive type = "
; LDR r5, [ r7, #12 ]
; Display r5
; SWI XOS_NewLine
; Pull  "r5, r11"

;---------------------------
; Check the SWI number
;---------------------------
 CMP       r11, #NUMBEROFSWIS
 addr      r0, switoobig, GE
 BGE       error_handler_lookup

;---------------------------------------------
; If the SWI is CD_Version then do this myself
;---------------------------------------------
 SUBS      r11, r11, #1
 BMI       cd_version

;----------------------------------------------------------
; CD_Register, CD_Unregister, CD_LastError or CD_ByteCopy ?
;----------------------------------------------------------
 TEQ       r11, #(XCD_Register - XCD_BaseNumber) - 1
 BEQ       cd_register

 TEQ       r11, #(XCD_Unregister - XCD_BaseNumber) - 1
 BEQ       cd_unregister

 TEQ       r11, #(XCD_ByteCopy   - XCD_BaseNumber) - 1
 BEQ       cd_bytecopy

 TEQ       r11, #(XCD_Identify   - XCD_BaseNumber) - 1
 BEQ       cd_identify

 TEQ       r11, #(XCD_ConvertToLBA   - XCD_BaseNumber) - 1
 BEQ       cd_converttolba

 TEQ       r11, #(XCD_ConvertToMSF   - XCD_BaseNumber) - 1
 BEQ       cd_converttomsf

 CMP       r11, #(XCD_ReadAudio  - XCD_BaseNumber) - 1
 SUBGE     r11, r11, # 5

 CMP       r11, #(XCD_LastError  - XCD_BaseNumber) - 1
 SUBGE     r11, r11, #1
 BEQ       cd_lasterror



;----------------------------------
; Which driver should handle this ?
;----------------------------------
; r8  =  drive type
; r9  -> soft loadable driver handler
;

 LDR       r14, [ r7, #drivetypeoffset ]

 MOV       r9, r14, LSR #2
 CMP       r9, #MAX_NUMBER_OF_DRIVERS
 BGT       driver_not_present_error


; Check that there is a driver
 ADR       r9, sld_list

 BIC       r8, r14, #3

 LDR       r9, [ r9, r8 ]

 TEQ       r9, #0
 BEQ       driver_not_present_error

; Check for special tag before handler
 LDR       r8, [ r9, #0 ]
 MOV       r10, #&50
 ORR       r10, r10, #&EE00
 ORR       r10, r10, r10, LSL #16
 TEQ       r10, r8
 BNE       driver_not_present_error


 ADR       r10, block_list
 BIC       r8, r14, #3
 LDR       r10, [ r10, r8 ]

; Make sure that there are this many sub-drivers
 Push      r10
 LDRB      r8, [ r10, #RCB_DRIVETYPES ]
 AND       r10, r14, #3


 CMP       r10, r8
 Pull      r10
 BGE       driver_not_present_error


; Make sure that the driver supports this CD_ SWI
 LDR       r8,  [ r10, #RCB_INFOWORD ]

; **** This is complete rubbish. Use flag bits instead  MEW ****
; AND       r10, r8, #255
; CMP       r11, r10
; addr      r0, swi_not_supported, GT
; BGT       error_handler_lookup
; ****                                                   ****

;----------------------------------------------------------
; Should I carry out the read data or seek command myself ?
;----------------------------------------------------------
 EOR       r8, r8, #USE_SCSI_READ + USE_SCSI_SEEK + USE_SCSI_INQUIRY + USE_SCSI_CAPACITY + USE_SCSI_READY + USE_SCSI_STOPOPEN + USE_SCSI_CHECK + USE_SCSI_STATUS
 EOR       r8, r8, #USE_SCSI_CONTROL + USE_SCSI_PREFETCH + USE_SCSI_RESET + USE_PROPRIETARY_RUD + USE_PROPRIETARY_SUD + USE_SCSI_OP

 TEQ       r11, #(XCD_ReadData   - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_READ
 BEQ       cd_readdata

 TEQ       r11, #(XCD_SeekTo     - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_SEEK
 BEQ       cd_seekto

 TEQ       r11, #(XCD_Inquiry    - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_INQUIRY
 BEQ       cd_inquiry

 TEQ       r11, #(XCD_DiscUsed   - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_CAPACITY
 BEQ       cd_discused

 TEQ       r11, #(XCD_DriveReady - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_READY
 BEQ       cd_driveready

 TEQ       r11, #(XCD_StopDisc   - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_STOPOPEN
 BEQ       cd_stopdisc

 TEQ       r11, #(XCD_OpenDrawer - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_STOPOPEN
 BEQ       cd_opendrawer

 TEQ       r11, #(XCD_DriveStatus - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_STATUS
 BEQ       cd_drivestatus

 TEQ       r11, #(XCD_Control     - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_CONTROL
 BEQ       cd_control

 TEQ       r11, #(XCD_Prefetch    - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_PREFETCH
 BEQ       cd_prefetch

 TEQ       r11, #(XCD_Reset       - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_RESET
 BEQ       cd_reset

 TEQ       r11, #(XCD_CheckDrive  - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_CHECK
 BEQ       cd_checkdrive

 TEQ       r11, #(XCD_SCSIUserOp  - XCD_BaseNumber) - 1
 TSTEQ     r8, #USE_SCSI_OP
 BEQ       cd_scsiuserop

; Make sure that CD_Get/SetAudioParms supported if its being called
 [ Module_Version >= 232
 TEQ       r11, # DRIVER__GetAudioParms
 TEQNE     r11, # DRIVER__SetAudioParms
 BNE       IDC_Go

 Push      "r0, r14"
 SWI       XCD_Supported
 TST       r0, # SUPPORT__AUDIO_PARMS
 Pull      "r0, r14"
 addr      r0, swi_not_supported, EQ
 BEQ       error_handler_lookup

IDC_Go
 ]

;-----------------------------------------------
; Sort out SeekUserData
;-----------------------------------------------

; Does the caller want to do their own SeekUserData ?
 TEQ       r11, # DRIVER__SeekUserData
 BNE       UPS_jump

 TST       r8, # USE_PROPRIETARY_SUD
 BEQ       UPS_jump                       ; [ yes ]

; Should this be a complex SeekUserData ?
 TST       r8, # USE_COMPLEX_SUD
 BEQ       cd_seekuserdata_plain          ; [ no ]

 B         cd_seekuserdata

UPS_jump

;-----------------------------------------------
; Sort out ReadUserData
;-----------------------------------------------

; Does the caller want to do their own ReadUserData ?
 TEQ       r11, # DRIVER__ReadUserData
 BNE       UPR_jump

 TST       r8, # USE_PROPRIETARY_RUD
 BEQ       UPR_jump                       ; [ yes ]

; Should this be a complex ReadUserData ?
 TST       r8, # USE_COMPLEX_RUD
 BEQ       cd_readuserdata_plain          ; [ no ]

 B         cd_readuserdata

UPR_jump
;-----------------------------------------------



; Make up a new control block for the driver with its drive type
; Must be after calling the CD routines so that they can call other CD SWIs - see cd_seekto
 Push      "r8, r9, r10, r14"
 LDMIA     r7, { r8, r9, r10, r14 }
 AND       r14, r14, #3
 ADR       r7, control_block
 STMIA     r7, { r8, r9, r10, r14 }
 Pull      "r8, r9, r10, r14"

;----------------------------------------------------------
; Get the soft-loadable modules private workspace pointer
;----------------------------------------------------------




; Push  "r0-r11,r14"
; STRIM " SWI Number = "
; Display r11
; STRIM  " Drive type = "
; LDR r5, [ r7, #12 ]
; Display r5
; SWI XOS_NewLine
; Pull  "r0-r11,r14"






 Push      r12

 ADR       r10, wsp_list
 BIC       r12, r14, #3
 LDR       r12, [ r10, r12 ]

;-------------------------------------------------
; Despatch the command to the soft-loadable driver
;-------------------------------------------------
; r0 - r6 =  parameters used in CD_ SWI
; r7      -> control block
; r8      =  large drive type
; r9      -> special tag and handler code
; r10
; r11     =  the CD_... SWI to perform - 1, ie/ no CD_Version
; r12     -> their workspace
; r13     -> stack
; r14     =  return address (to me)

 MOV       r8, r14

 TEQ       r11, #(XCD_SCSIUserOp  - XCD_BaseNumber) - 1 ; this one has different exit
 MOV       r14, pc
 ADDNE     r14, r14, #come_back_here-.-4
 ADDEQ     r14, r14, #come_back_here_manyregs-.-0
 ADD       pc, r9, #4

come_back_here ; only V flag is significant on return

;-------------------------------
; Remember the last error number
;-------------------------------
 Pull      r12

 BVS       error_handler

 STR       r0, [ r13 ]
 SWIExitVC

come_back_here_manyregs

 Pull      r12

 BVS       error_handler_manyregs

 STR       r3, [ r13, #3 * 4 ]
 STR       r4, [ r13, #4 * 4 ]
 SWIExitVC

;-----------------------------------------------------------------------------------------------

 END
@


4.5
log
@Added SWI CD_SCSIUserOp (see Doc/SCSIUserOp).

Version 2.38. Tagged as 'CDFSDriver-2_38'
@
text
@d53 1
a53 1
 DCD SWIBaseNumber
d66 2
d73 1
d83 1
a83 1
 GET VersionASM    ; date/version number
d85 11
a95 11
 GET S.Strings    ; contains errors and strings
 GET S.Tables     ; contains info for setting up blocks
 GET S.Module     ; Init/Final code
 GET S.Register   ; CD_Register code
 GET S.Unregister ; CD_Unregister code
 GET S.Identify   ; CD_Unregister code
 GET S.CD_Routs   ; the internal SWI CD_ routines
 GET S.OnError    ; deal with errors
 GET S.ExtraBits  ; Extra routines
 GET S.ByteCopy   ; RCM's fast block copy routine
 GET S.Variables  ; layout of workspace
a127 1
; BIC       r14, r14, #Overflow_Flag ; kernel always cleared r14 bit 28 for us, and still does for CPSR V bit
@


4.4
log
@  Changes for RISC OS 5.
Detail:
  * Merged in RISCOS Ltd change: module no longer fails to intialise if no
    CDROMs are configured. This, along with their equivalent change in
    CDFS, allows the number of CDROMs to be configured up from 0 from the
    command line
  * Moved resources here from CDFSResources - allows tokenisation
  * Uses objasm and shared makefiles
  * 32-bit compatible
Admin:
  Not tested.

Version 2.37. Tagged as 'CDFSDriver-2_37'
@
text
@d253 2
a254 2
 EOR       r8, r8, #USE_SCSI_READ + USE_SCSI_SEEK + USE_SCSI_INQUIRY + USE_SCSI_CAPACITY + USE_SCSI_READY + USE_SCSI_STOPOPEN + USE_SCSI_STATUS + USE_SCSI_CHECK
 EOR       r8, r8, #USE_SCSI_CONTROL + USE_SCSI_PREFETCH + USE_SCSI_RESET + USE_PROPRIETARY_RUD + USE_PROPRIETARY_SUD
d304 4
d416 1
d418 2
d432 10
@


4.3
log
@  Macro changes
Detail:
  Replaced GRABS and GRAB with Pull, and STASH with Push.
Admin:
  Built.


Version 2.36. Tagged as 'CDFSDriver-2_36'
@
text
@d18 1
a18 7
 LEADR &FFFFFA00
 NOFP





d58 1
a58 3
 DCD 1 ; infoword
 DCD 0
 DCD 0
d69 1
d99 3
d125 1
a125 1
 BIC       r14, r14, #Overflow_Flag
d133 6
a138 2
 MVN       r10, #I_bit
 TSTP      r10, pc
a409 3
 MOV       r10, pc
 AND       r10, r10, #255:ROL:26

d412 1
a412 2
 ADR       r14, come_back_here
 ORR       r14, r14, r10
d415 1
a415 2
come_back_here
 NOP
d425 1
a425 1
 Pull      "r0-r11, pc",, ^
@


4.2
log
@	Merged Spinner and Ursula branches. Placed unser srccommit control.

Detail:
	Merged Spinner branch (no changes) and Ursula branch (makefile
tidied). Placed the whole component under srccommit control.

Admin:
	Tested on a RiscPC.

Version 2.34. Tagged as 'CDFSDriver-2_34'
@
text
@d130 1
a130 1
 STASH     "r0-r11, r14"
d140 1
a140 1
; STASH "r5, r11"
d147 1
a147 1
; GRAB  "r5, r11"
d230 1
a230 1
 STASH     r10
d236 1
a236 1
 GRAB      r10
d310 1
a310 1
 STASH     "r0, r14"
d313 1
a313 1
 GRAB      "r0, r14"
d363 1
a363 1
 STASH     "r8, r9, r10, r14"
d368 1
a368 1
 GRAB      "r8, r9, r10, r14"
d377 1
a377 1
; STASH "r0-r11,r14"
d384 1
a384 1
; GRAB  "r0-r11,r14"
d391 1
a391 1
 STASH     r12
d425 1
a425 1
 GRAB      r12
d430 1
a430 1
 GRABS     "r0-r11, pc"
@


4.1
log
@Initial revision
@
text
@d64 2
a65 1
 DCD 1 ; infoword 
a66 1
 DCD 0                     
d87 1
a87 1
 GET Version    ; date/version number
d117 1
a117 1
;          
d172 1
a172 1
 BEQ       cd_bytecopy         
d197 1
a197 1
; 
d305 1
a305 1
 [ Version >= 232
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
