head	4.3;
access;
symbols
	CDFSDriver-2_41:4.3
	CDFSDriver-2_40:4.3
	RO_5_07:4.3
	CDFSDriver-2_39:4.3
	CDFSDriver-2_38:4.3
	CDFSDriver-2_37:4.3
	CDFSDriver-2_36:4.2
	CDFSDriver-2_35:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_Ursula_merge:4.1
	dcotton_Spin_merge:4.1.7.1
	CDFSDriver-2_34:4.1
	dcotton_autobuild_BaseSW:4.2
	nturton_CDFSDriver-2_33:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_CDFSDriver-2_33:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2002.11.06.14.32.38;	author bavison;	state Exp;
branches;
next	4.2;

4.2
date	2000.12.07.10.45.33;	author jberanek;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.15.45;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.45.22;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.42.40;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@  Changes for RISC OS 5.
Detail:
  * Merged in RISCOS Ltd change: module no longer fails to intialise if no
    CDROMs are configured. This, along with their equivalent change in
    CDFS, allows the number of CDROMs to be configured up from 0 from the
    command line
  * Moved resources here from CDFSResources - allows tokenisation
  * Uses objasm and shared makefiles
  * 32-bit compatible
Admin:
  Not tested.

Version 2.37. Tagged as 'CDFSDriver-2_37'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;----------------------------------------------------------------------------------------------
;                Convert addressing modes
;----------------------------------------------------------------------------------------------

; IF addressmode = LBAFormat THEN EXIT ( already done )

; IF addressmode = PBFormat THEN address = address - 2 seconds of data

; IF addressmode = MSFFormat THEN change address to minute,second,frame

;----------------------------------------------------------------------------------------------


;----------------------------------------------------------------------------------------------
ConvertToLBA ROUT
; on entry:
;          r0 = address mode
;          r1 = address
; on exit:
;          if oVerflow set then r0 -> error block
;          r1 = new address
;
; Errors can occur, eg/ invalid mode number
; When this is called, 'address' should contain the address on the disc
; in whatever format is being used.  'addressmode' should contain the number
; of the type of addressing being used.  Eg LBAFormat, MSFFormat, PBFormat
;
;----------------------------------------------------------------------------------------------

;--------------------------------------------------
; If already in LBA format then exit straight away
;--------------------------------------------------

 CMP       r0, #LBAFormat
 MOVEQ     pc, r14 ; V clear

 Push      "r0, r2 - r5, r14"

;--------------------------------------------------
; Check for allowable addressing mode
;--------------------------------------------------
 CMP       r0, #3
 addr      r0, InvalidFormat, CS
 BCS       Convert_Error

;--------------------------------------------------
; Branch to routines to convert from each mode to LBA
;--------------------------------------------------
; R0 = address mode
; R1 = address

 TEQ       r0, #1
 BEQ       ChangeFromMSFFormat

;--------------------------------------------------
;  Change from Physical Block TO Logical Block Address
;  Subtract 2 seconds worth of blocks to give LBA
;--------------------------------------------------

ChangeFromPBFormat

 SUBS      r1, r1, #( MaxNumberOfBlocks + 1 ) * 2

 addr      r0, PhysicalBlockError, LT
 BLT       Convert_Error

 VCLEAR
 Pull      "r0, r2 - r5, pc"


;----------------------------------------------------------------------------------------------
;    Change Minutes, Seconds, Frame TO LBA
ChangeFromMSFFormat    ; R1 = address, RETURNS R1 = address
;----------------------------------------------------------------------------------------------

; R1 = address

;-----------------------------------------
; R3 = frames
;-----------------------------------------
 MOV       r14, #255
 AND       r3, r1, r14

;-----------------------------------------
; R4 = seconds
;-----------------------------------------
 AND       r4, r14, r1, LSR #8

;-----------------------------------------
; R5 = minutes
;-----------------------------------------

 AND       r5, r14, r1, LSR #16

;-----------------------------------------
; Make sure that seconds are ( 0 - 59 )
;-----------------------------------------

 CMP       r4, #MaxNumberOfSeconds + 1
 addr      r0, BadSeconds, CS
 BCS       Convert_Error

;-----------------------------------------
; Make sure that frames are ( 0 - 74 )
;-----------------------------------------

 CMP       r3, #MaxNumberOfBlocks + 1
 addr      r0, BadBlocks, CS
 BCS       Convert_Error

;-----------------------------------------
; minutes = minutes * 60 + seconds
;-----------------------------------------

 MOV       r14, r5, LSL #6                     ; R14 = minutes * 64
 SUB       r5, r14, r5, LSL #2                 ; R5 = R14 - ( minutes * 4 )
 ADD       r5, r5, r4

;-----------------------------------------
; minutes = minutes * 75 + blocks
;-----------------------------------------
 MOV       r14, #MaxNumberOfBlocks + 1
 MLA       r5, r14, r5, r3

;-----------------------------------------
; minutes = minutes - 2 seconds
;-----------------------------------------
 SUB       r1, r5, #( MaxNumberOfBlocks + 1 ) * 2

;-----------------------------------------

 VCLEAR
 Pull       "r0, r2 - r5, pc"


;----------------------------------------------------------------------------------------------
ConvertToMSF ROUT
;                             Convert from LBA or PB to MSF format
; IF addressmode = MSFFormat THEN EXIT ( already done )
;
; IF addressmode = LBAFormat THEN ...
;
;
; on entry:
;          r0 = address mode
;          r1 = address
;
; on exit:
;          if oVerflow clear THEN r1 = new address ELSE r0->error block
;
; flags preserved
;----------------------------------------------------------------------------------------------

;-----------------------------------------
; If already in MSF format then exit straight away
;-----------------------------------------

 CMP        r0, #MSFFormat
 MOVEQ      pc, r14 ; V clear

 Push       "r0, r2 - r5, r14"


;-----------------------------------------
; Check for allowable addressing mode
;-----------------------------------------

 CMP        r0, #3
 addr       r0, InvalidFormat, CS
 BCS        Convert_Error

;-----------------------------------------
; Branch to routines to convert from each mode to MSF
;-----------------------------------------
; r0 = address mode
; r1 = address

 TEQ        r0, #0
 BEQ        ConvertLBAtoMSF

;-----------------------------------------
ConvertPBtoMSF
; R1 = address
;-----------------------------------------
; address = address - 150 ( error if < 0 )

 SUBS       r1, r1, #( MaxNumberOfBlocks + 1 ) * 2
 addr       r0, BadSeconds, LT
 BLT        Convert_Error

;-----------------------------------------
ConvertLBAtoMSF
; R1 = address
;-----------------------------------------
; R3 = Frames
; R4 = seconds
; R5 = minutes


;-----------------------------------------
; Frame = address MOD ( MaxNumberOfBlocks + 1 )
; R3 = R3 MOD ( MaxNumberOfBlocks + 1 )
;-----------------------------------------


;-----------------------------------------
; Seconds = ( address DIV 75 ) MOD 60
; R4
;-----------------------------------------

 MOV        r3, r1                                    ; r2 = address DIV 75
                                                      ;
 DivRem     r2, r3, #MaxNumberOfBlocks + 1, r14       ; r3 = address MOD 75

 DivRem     r4, r2, #MaxNumberOfSeconds + 1, r14      ; r4 = r2 DIV 60
                                                      ;
                                                      ; r2 = r2 MOD 60

; R4 = minutes
; R3 = frames
; R2 = seconds

;-----------------------------------------
; Push results together into one word
; Minutes << 16 + Seconds << 8 + Frames
;-----------------------------------------
 ORR        r3, r3, r2, LSL #8
 ORR        r1, r3, r4, LSL #16

 VCLEAR
 Pull       "r0, r2 - r5, pc"



Convert_Error
 VSET
 ADD     sp, sp, #4
 Pull    "r2 - r5, pc"


;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------

 END
@


4.2
log
@  Macro changes
Detail:
  Replaced GRABS and GRAB with Pull, and STASH with Push.
Admin:
  Built.


Version 2.36. Tagged as 'CDFSDriver-2_36'
@
text
@a43 1
 BIC       r14, r14, #Overflow_Flag
d48 2
a49 2
 TEQ       r0, #LBAFormat
 MOVEQS    pc, r14
a56 1
 Pull      "r0, r2 - r5, r14", CS
d58 1
a58 1
 ORRCSS    pc, r14, #Overflow_Flag
a77 1
 Pull      "r0, r2 - r5, r14", LT
d79 1
a79 1
 ORRLTS    pc, r14, #Overflow_Flag
d81 2
a82 2

 Pull      "r0, r2 - r5, pc",, ^
a113 1
 Pull      "r0, r2 - r5, r14", CS
d115 1
a115 1
 ORRCSS    pc, r14, #Overflow_Flag
a121 1
 Pull      "r0, r2 - r5, r14", CS
d123 1
a123 1
 ORRCSS    pc, r14, #Overflow_Flag
d146 2
a147 1
 Pull       "r0, r2 - r5, pc",, ^
a167 2
 BIC        r14, r14, #Overflow_Flag

d172 2
a173 2
 TEQ        r0, #MSFFormat
 MOVEQS     pc, r14
a182 1
 Pull       "r0, r2 - r5, r14", CS
d184 1
a184 1
 ORRCSS     pc, r14, #Overflow_Flag
a201 1
 Pull       "r0, r2 - r5, r14", LT
d203 1
a203 1
 ORRLTS     pc, r14, #Overflow_Flag
d244 9
a252 1
 Pull       "r0, r2 - r5, pc",, ^
@


4.1
log
@Initial revision
@
text
@d52 1
a52 1
 STASH     "r0, r2 - r5, r14"
d58 1
a58 1
 GRAB      "r0, r2 - r5, r14", CS
d76 1
a76 1
ChangeFromPBFormat 
d80 1
a80 1
 GRAB      "r0, r2 - r5, r14", LT
d85 1
a85 1
 GRABS     "r0, r2 - r5, pc"
d117 1
a117 1
 GRAB      "r0, r2 - r5, r14", CS
d126 1
a126 1
 GRAB      "r0, r2 - r5, r14", CS
d147 1
a147 1
 SUB       r1, r5, #( MaxNumberOfBlocks + 1 ) * 2 
d151 1
a151 1
 GRABS      "r0, r2 - r5, pc"
d181 1
a181 1
 STASH      "r0, r2 - r5, r14"
d189 1
a189 1
 GRAB       "r0, r2 - r5, r14", CS
d209 1
a209 1
 GRAB       "r0, r2 - r5, r14", LT
d252 1
a252 1
 GRABS      "r0, r2 - r5, pc"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
