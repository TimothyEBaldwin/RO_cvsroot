head	4.4;
access;
symbols
	CDFSDriver-2_41:4.4
	CDFSDriver-2_40:4.3
	RO_5_07:4.3
	CDFSDriver-2_39:4.3
	CDFSDriver-2_38:4.3
	CDFSDriver-2_37:4.3
	CDFSDriver-2_36:4.2
	CDFSDriver-2_35:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_Ursula_merge:4.1
	dcotton_Spin_merge:4.1.7.1
	CDFSDriver-2_34:4.1
	dcotton_autobuild_BaseSW:4.2
	nturton_CDFSDriver-2_33:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_CDFSDriver-2_33:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2012.05.24.19.35.28;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	0F0Yb1BoyHs9N06w;

4.3
date	2002.11.06.14.32.38;	author bavison;	state Exp;
branches;
next	4.2;

4.2
date	2000.12.07.10.45.33;	author jberanek;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.35.10;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.15.53;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.45.27;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.42.44;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@GET of some defines from exports.
SCSI errors from Hdr:SCSIErr.
Push/Pull instead of STASH/GRAB.
OS_Byte and OS_Module reason codes.
Help string capitalised to match the component name.

Version 2.41. Tagged as 'CDFSDriver-2_41'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; -> module















; This contains the following routines:

; initialisingcode
; finalisingcode















;-----------------------------------------------------------------------------------------------
initialisingcode ROUT
; on entry:
;          r10 -> enviroment string ( see page 631 )
;          r11 = I/O base or instantiation number
;          r12 -> currently preferred instantiation of module ( private word )
;          r13 -> supervisor stack
; on exit:
;
;
;        Set up variables with default values
;-----------------------------------------------------------------------------------------------

 Push       r14

;-----------------------------------------------------------------------------------------------
; Read and check configured number of drives.
;-----------------------------------------------------------------------------------------------

 [ CheckConfiguredDrives=ON

         MOV         r0, #OsByte_ReadCMOS
         MOV         r1, #CDROMFSCMOS        ; Cmos RAM location
         SWI         XOS_Byte                ; R2 = contents of location

         TST         r2, #BITSUSEDBYDRIVENUMBER
         BNE         %FT00

         SUB         r13, r13, #16              ; local buffer for MessageTrans file descriptor
         MOV         r0, r13                    ; open message file
         ADRL        r1, message_file_name
         MOV         r2, #0
         SWI         XMessageTrans_OpenFile

         ADRVCL      r0, NoConfiguredDrive      ; lookup error (or use error from OpenFile)
         MOVVC       r1, r13
         SWIVC       XMessageTrans_ErrorLookup

         MOV         r1, r0                     ; at this point we definitely have an error of some sort
         MOV         r0, r13
         SWI         XMessageTrans_CloseFile
         MOV         r0, r1                     ; ignore any error from CloseFile

         ADD         r13, r13, #16              ; free buffer and return error (don't start up)
         VSET
         Pull        pc
00

 ]

;----------------------------
; Check for re-initialisation
;----------------------------
 LDR        r1, [ r12 ]
 TEQ        r1, #0
 BLNE       FreeWorkspace


;----------------------------
; Claim space from RMA
;----------------------------

 MOV        r0, #ModHandReason_Claim
 LDR        r3, =SizeOfWorkSpace
 SWI        XOS_Module

 Pull       pc, VS


 STR        r2, [ r12 ]

 MOV        r12, r2

;----------------------------
; Clear workspace
;----------------------------

 MOV        r1, #0

clear_workspace
 STR        r1, [ r2 ], #4
 SUBS       r3, r3, #4
 BGT        clear_workspace


;----------------------------------------------------
; Claim the Unknown SWI vector - trap for CD_Register
;----------------------------------------------------
 MOV        r0, #&18      ; unknown swi vector
 ADR        r1, unknown_swi_handler
 MOV        r2, r12
 SWI        XOS_Claim

;-------------------------------------------------
; Look for soft-loadable drivers and rmreinit them
;-------------------------------------------------
; r1 =  loop count
; r3 -> module name
; r4 -> CDFSSoft

 MOV        r1, #0
 MOV        r2, #0

more_modules
 MOV        r0, #ModHandReason_GetNames
 SWI        XOS_Module        ; r1 incremented
 BVS        no_more

; compare the name of the module with the name 'CDFSSoft'
 ADR        r4, CDFSSoft
 MOV        r5, #?CDFSSoft
 LDR        r0, [ r3, #&10 ]
 ADD        r3, r3, r0
 MOV        r6, r3
01
 LDRB       r0,  [ r6 ], #1


 LDRB       r14, [ r4 ], #1
 TEQ        r0, r14
 MOVNE      r5, #1
 SUBS       r5, r5, #1
 BNE        %BT01


 TEQ        r0, r14
 BNE        more_modules

;--------------------
; Rmreinit the module
;--------------------
 MOV        r4, r1

 MOV        r0, #ModHandReason_ReInit
 MOV        r1, r3
 SWI        XOS_Module

 MOV        r1, r4

 B          more_modules


no_more

;-------------------------------------------------
; Release the Unknown SWI vector
;-------------------------------------------------
 MOV        r0, #&18      ; unknown swi vector
 ADR        r1, unknown_swi_handler
 MOV        r2, r12
 SWI        XOS_Release

;-------------------------------------------------
 VCLEAR
 Pull       pc


CDFSSoft = "CDFSSoft"
 ALIGN

;-----------------------------------------------------------------------------------------------
finalisingcode
FreeWorkspace  ROUT
;
; on entry:
;          r12 -> private word
;          r13 -> Full descending stack
; on exit:
;          r0-r2, r14 corrupted
;
;        Set up variables with default values
;-----------------------------------------------------------------------------------------------

 MOV        r6, r14


;-----------------------------------------------------------------------------
; Move through the list of soft-load modules and decrease the registered count ??
; I probably don't need to 'cause next time this is loaded the soft-loads are reinitted
;-----------------------------------------------------------------------------


;---------------------------------------------------------------------------
; Free workspace - don't report an error 'cause that really screws things up
;---------------------------------------------------------------------------
 MOV        r0, #ModHandReason_Free
 LDR        r2, [ r12 ]
 SWI        XOS_Module

 VCLEAR
 MOV        pc, r6


;-----------------------------------------------------------------------------------------------
unknown_swi_handler ROUT
;
; on entry:
;           r0 - r8 = SWI parameters
;           r11     = SWI number
; on exit:
;
;
; This traps the SWI CD_Register and CD_Unegister and passes it on
;-----------------------------------------------------------------------------------------------
; XCD_Register = &41260+(1<<17)

 Push       r14

;---------------------------------
; XCD_Register or XCD_Unregister ?
;---------------------------------

 SUB        r14, r11, #&00260      ; XCD_Register
 SUBS       r14, r14, #&41000
 CMPNE      r14, #1                ; XCD_Unregister
 ; since SWI &80000000 can't happen, this clears V, which is the only flag requirement for next claimant

 Pull       pc, NE

;---------------------------------
; XCD_Register ?
;---------------------------------
 TEQ        r14, #0

 Pull       r14

 Push       "r0-r11"                  ; claim the vector when the SWI handler returns

 ; It's probably not worth forcibly enabling interrupts for these
 BEQ        cd_register
 B          cd_unregister

;---------------------------------


;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------------

 LTORG

 END
@


4.3
log
@  Changes for RISC OS 5.
Detail:
  * Merged in RISCOS Ltd change: module no longer fails to intialise if no
    CDROMs are configured. This, along with their equivalent change in
    CDFS, allows the number of CDROMs to be configured up from 0 from the
    command line
  * Moved resources here from CDFSResources - allows tokenisation
  * Uses objasm and shared makefiles
  * 32-bit compatible
Admin:
  Not tested.

Version 2.37. Tagged as 'CDFSDriver-2_37'
@
text
@d71 2
a72 2
         MOV         r0, #161                ; Reason code              FOR GET
         MOV         r1, #HARDRAMLOCATION    ; Cmos RAM location
d112 1
a112 1
 MOV        r0, #6
d154 1
a154 1
 MOV        r0, #12
d183 1
a183 1
 MOV        r0, #3
d235 1
a235 1
 MOV        r0, #7
a275 2
; BIC        r14, r14, #Overflow_Flag ; was never necessary; bit 28 of r14 was always clear in 26-bit OS
                                      ; test above guarantees that CPSR V bit is clear in both worlds
@


4.2
log
@  Macro changes
Detail:
  Replaced GRABS and GRAB with Pull, and STASH with Push.
Admin:
  Built.


Version 2.36. Tagged as 'CDFSDriver-2_36'
@
text
@d94 2
a95 2
         Pull        r14
         ORRS        pc, r14, #Overflow_Flag
d116 1
a116 2
 Pull       r14, VS
 ORRVSS     pc, r14, #Overflow_Flag
d203 2
a204 2
 Pull       r14
 BICS       pc, r14, #Overflow_Flag
d239 2
a240 1
 BICS       pc, r6, #Overflow_Flag
d256 1
a256 1
 Push       r0
d262 4
a265 3
 SUB        r0, r11, #&00260       ; XCD_Register
 SUBS       r0, r0,  #&41000
 TEQNE      r0, #1                 ; XCD_Unregister
d267 1
a267 2
 Pull       r0, NE
 MOVNE      pc, r14
d272 1
a272 1
 TEQ        r0, #0
a273 1
 Pull       r0
d276 3
a278 2
 BIC        r14, r14, #Overflow_Flag
 Push       "r0-r11, r14"
d280 1
@


4.1
log
@Initial revision
@
text
@d58 1
a58 1
;          
d63 1
a63 1
 STASH      r14
d94 1
a94 1
         GRAB        r14
d116 1
a116 1
 GRAB       r14, VS
d204 1
a204 1
 GRAB       r14
d237 1
a237 1
 LDR        r2, [ r12 ]      
d250 1
a250 1
;           
d256 1
a256 1
 STASH      r0
d266 1
a266 1
 GRAB       r0, NE
d274 2
a275 2
 GRAB       r0
 GRAB       r14
d278 1
a278 1
 STASH      "r0-r11, r14"
d284 1
a284 1
 
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
