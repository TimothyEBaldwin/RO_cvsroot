head	4.3;
access;
symbols
	CDFSDriver-2_41:4.3
	CDFSDriver-2_40:4.2
	RO_5_07:4.2
	CDFSDriver-2_39:4.2
	CDFSDriver-2_38:4.2
	CDFSDriver-2_37:4.2
	CDFSDriver-2_36:4.1
	CDFSDriver-2_35:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_Ursula_merge:4.1
	dcotton_Spin_merge:4.1.7.1
	CDFSDriver-2_34:4.1
	dcotton_autobuild_BaseSW:4.1
	nturton_CDFSDriver-2_33:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_CDFSDriver-2_33:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2012.05.24.19.35.24;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	0F0Yb1BoyHs9N06w;

4.2
date	2002.11.06.14.32.38;	author bavison;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.08;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.35.08;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.15.34;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.45.11;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.42.34;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@GET of some defines from exports.
SCSI errors from Hdr:SCSIErr.
Push/Pull instead of STASH/GRAB.
OS_Byte and OS_Module reason codes.
Help string capitalised to match the component name.

Version 2.41. Tagged as 'CDFSDriver-2_41'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;; -> macros
;; =============================================
;; Macros should be kept in ALPHABETICAL order !
;; =============================================
;;
;;   CDFSDriverError
;;   CLV
;;   Debug
;;   Debug0
;;   DebugDisplay
;;   DebugWaitForAKey
;;

;************************************
; This allows nice errors from CDFS driver
;************************************
        MACRO
$label  CDFSDriverError $name, $message
$name DCD CDFSDriverErrorNumber
       = "$message"
       = 0
CDFSDriverErrorNumber SETA CDFSDriverErrorNumber + 1
 ALIGN
        MEND

; **********************************************************
; This will print a message if 'debug' = ON.
; **********************************************************
        MACRO
$label  Debug $string,$nl
$label  [ debug=ON
        Push r14
         [ hostvdu=ON
        SWI XHostFS_HostVdu
         ]
        SWI XOS_WriteS
        = "$string"
         [ "$nl"="NL"
        = 13,10
         ]
        = 0
        ALIGN
         [ hostvdu=ON
        SWI XHostFS_TubeVdu
         ]
        Pull r14
        ]
        MEND

; **********************************************************
; This will perform a XOS_Write0 if 'debug' = ON.
; **********************************************************
        MACRO
$label  Debug0 $string,$nl
$label  [ debug=ON
        Push r14
         [ hostvdu=ON
        SWI XHostFS_HostVdu
         ]
        SWI XOS_Write0
         [ "$nl"="NL"
        SWI XOS_NewLine
         ]
         [ hostvdu=ON
        SWI XHostFS_TubeVdu
         ]
        Pull r14
        ]
        MEND

; **********************************************************
; This will perform a Display if 'debug' = ON.
; **********************************************************
        MACRO
$label  DebugDisplay $string,$nl
$label  [ debug=ON
        Push r14
         [ hostvdu=ON
        SWI XHostFS_HostVdu
         ]
        Display $string,$nl
         [ hostvdu=ON
        SWI XHostFS_TubeVdu
         ]
        Pull r14
        ]
        MEND

; **********************************************************
; This will perform a wait-for-key if 'debug' = ON.
; **********************************************************
        MACRO
$label  DebugWaitForAKey
$label  [ debug=ON
        Push "r0-r2,r14"
        MOV R0, #OsByte_ScanKeyboardFrom16
01
        SWI XOS_Byte
        CMP R1, #&FF
        BEQ %BT01
        Pull "r0-r2,r14"
        ]
        MEND

        MACRO
$label  SWIExitVC $cond
$label [ "$cond"<>"AL" :LAND: "$cond"<>""
        DCI     &1A000002 :EOR: Cond_$cond ; branch over on opposite condition
      ]
        CMP     pc, pc
        Pull    "r0-r11, pc", EQ
        Pull    "r0-r11, pc",, ^
        MEND

        MACRO
$label  SWIExitVS $cond
$label [ "$cond"<>"AL" :LAND: "$cond"<>""
        DCI     &1A000004 :EOR: Cond_$cond ; branch over on opposite condition
      ]
        TEQ     PC, PC
        MSREQ   CPSR_f, #Z_bit :OR: V_bit
        Pull    "r0-r11, pc", EQ
        Pull    "r0-r11, r14"
        ORRS    pc, r14, #V_bit
        MEND

        MACRO
$label  VCLEAR $cond
$label  CMP$cond R0, #0
        MEND

        MACRO
$label  VSET $cond
$label [ "$cond"<>"AL" :LAND: "$cond"<>""
        DCI     &1A000001 :EOR: Cond_$cond ; branch over on opposite condition
      ]
        CMP     R0, #&80000000
        CMNVC   R0, #&80000000
        MEND

        END
@


4.2
log
@  Changes for RISC OS 5.
Detail:
  * Merged in RISCOS Ltd change: module no longer fails to intialise if no
    CDROMs are configured. This, along with their equivalent change in
    CDFS, allows the number of CDROMs to be configured up from 0 from the
    command line
  * Moved resources here from CDFSResources - allows tokenisation
  * Uses objasm and shared makefiles
  * 32-bit compatible
Admin:
  Not tested.

Version 2.37. Tagged as 'CDFSDriver-2_37'
@
text
@d46 1
a46 1
        STASH r14
d60 1
a60 1
        GRAB r14
d70 1
a70 1
        STASH r14
d81 1
a81 1
        GRAB r14
d91 1
a91 1
        STASH r14
d99 1
a99 1
        GRAB r14
d109 2
a110 2
        STASH "r0-r2,r14"
        MOV R0, #122
d115 1
a115 1
        GRAB "r0-r2,r14"
@


4.1
log
@Initial revision
@
text
@a39 11
; *******************************************
; *** Clear overflow flag - will set nzCv ***
; *******************************************
; Note: (AMcC 02-Feb-95)
; Not the same as CLRV Macro in Global Hdr CPU.Generic26
;
        MACRO
$label  CLV    $cond
$label  EORVSS pc, pc, # Overflow_Flag
        MEND

d119 36
a155 1
            @


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
