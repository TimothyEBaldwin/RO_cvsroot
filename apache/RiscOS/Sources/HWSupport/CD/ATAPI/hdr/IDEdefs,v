head	4.7;
access;
symbols
	ATAPI-1_44:4.7
	ATAPI-1_43:4.7
	ATAPI-1_42:4.6
	ATAPI-1_41:4.6
	ATAPI-1_34-1_11_2_1:4.5
	ATAPI-1_40:4.6
	ATAPI-1_39:4.6
	ATAPI-1_38:4.6
	ATAPI-1_37:4.6
	ATAPI-1_36:4.5
	preSATA:4.5.0.2
	ATAPI-1_35:4.5
	ATAPI-1_34:4.5
	ATAPI-1_33:4.5
	Batch1:4.5
	RO_5_07:4.5
	ATAPI-1_32:4.5
	ATAPI-1_31:4.5
	ATAPI-1_30:4.5
	ATAPI-1_29:4.5
	ATAPI-1_28:4.4
	ATAPI-1_27:4.3
	ATAPI-1_26:4.3
	dellis_autobuild_BaseSW:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	nicke_ATAPI_1_23:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.7
date	2017.04.22.16.04.59;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	8jGH8JMj8l4HXxOz;

4.6
date	2016.01.17.16.26.48;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	hbxM7lvGcd8STiRy;

4.5
date	2002.11.22.15.19.42;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2002.11.07.18.32.37;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2000.11.30.14.04.08;	author jberanek;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.16.15.26;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.34.54;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.34.54;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.12.56;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.43.32;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.41.20;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Go straight to READ(12) rather than using READ CD emulation on new ATAPI drives
In the central data transfer step (DriverCode.s around line 450) there are up to 3 goes at doing the transfer, attempting to work around some problems in <unspecified model> Sony drive and Panasonic CD-571B. Others may be affected similarly.
However, the very latest combined DVD/CD reader, eg. SATA attached SH-224DB/BEBE, have given up entirely with READ CD. In particular, they do not error it, nor are any bytes transferred to the buffer. This falls foul of CDFSSoftATAPI's 3 step approach, because the absence of an error is taken as success and the (junk RMA) block passed up to CDFS.
Unfortunately because the model of Sony reader is not mentioned in the sources nor CVS history we can't do a string match on the model name.
Instead, we now look at the reply to IDENTIFY and look for any declaring ATAPI-5 or later. ATAPI-5 was released in 2000, which definitely post dates the workaround by 4 or 5 years.
hdr/IDEdefs: declare offset for IDENTIFY to the version fields.
Module.s: hook out the version (being careful that pre ATAPI-4 don't have this field). Make a note in the DriveFlag if READ(12) is suspect vintage.
Variables.s: reintroduce the DriveFlag in the HAL case
DriverCode.s: free up a register to load DriveFlag into, look at the DriveFlag, skip straight to READ(12) on ATAPI-5 or later.

Tested on Titanium.
Fixes bogus "CDFS does not support that type of disc" with a simple ISO9660 formatted DVD, due to an untouched RMA block being parsed by CDFS.

Version 1.43. Tagged as 'ATAPI-1_43'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;******************************************************************************
;
; hdr.IDEdefs
;
; Author: Mark Watson (EESOX)
;
; Description
; ===========
; This file contains hash defines for the IDE interface.
; 06-Sept-94  MEW Eesox
;
; Change record
; =============
; 12-Mar-95  11:16  cpartington (Cambridge Systems Design)
; * Added ATAPI__READ_DATA_10, used in s.DriverCode.
;
; 12-Jun-95  11:29  cpartington (Cambridge Systems Design)
; * Added TIMEOUT__COMMAND_COMPLETE and added alternative values for other
;   timeouts dependent on test_long_timeouts.
;
; 16-Jun-95  15:06  cpartington (Cambridge Systems Design)
; * Added new timeout values for faster_startup.
; * Added TIMEOUT__RESET_RECOVERY.
;
; 06-Jul-95  10:57  cpartington (Cambridge Systems Design)
; * Added ATAPICONTROL_CheckForDrive, ATAPI_Signature and IDE__IDENTIFY.
;
;*end of change record*


 [ HAL
MAX_NUMBER_OF_ATAPI_DRIVES        *   4
 |
MAX_NUMBER_OF_ATAPI_DRIVES        *   2
 ]

 [ :LNOT: HAL
IRQ__INTERRUPT_CLEAR              * &03200014
IRQA__INTERRUPT_STATUS            * &03200010
IRQA__INTERRUPT_REQUEST           * &03200014
IRQA__INTERRUPT_MASK              * &03200018
IRQB__INTERRUPT_STATUS            * &03200020
IRQB__INTERRUPT_REQUEST           * &03200024
IRQB__INTERRUPT_MASK              * &03200028


IOC__IDE_INTERRUPT_BIT            * 1:SHL:3
IOMD__IDE_INTERRUPT_BIT           * 1:SHL:1

TASKFILE_BASE_ADDRESS             * &30107C0


; Task file registers when read from
TASKFILE__R_DATA                  * &0000    ; The lower 16 bits are used when reading
TASKFILE__R_ERROR                 * &0004
TASKFILE__R_INTERRUPT_REASON      * &0008
TASKFILE__R_RESERVED              * &000C
TASKFILE__R_BYTE_COUNT_LOW        * &0010
TASKFILE__R_BYTE_COUNT_HIGH       * &0014
TASKFILE__R_DRIVE_SELECT          * &0018
TASKFILE__R_STATUS                * &001C
TASKFILE__R_ALTERNATE_STATUS      * &0818
TASKFILE__R_DRIVE_ADDRESS         * &081C


; Task file registers when written to
TASKFILE__W_DATA                  * &0000    ; The upper 16 bits are used when writing
TASKFILE__W_FEATURES              * &0004
TASKFILE__W_INTERRUPT_REASON      * &0008
TASKFILE__W_RESERVED              * &000C
TASKFILE__W_BYTE_COUNT_LOW        * &0010
TASKFILE__W_BYTE_COUNT_HIGH       * &0014
TASKFILE__W_DRIVE_SELECT          * &0018
TASKFILE__W_COMMAND               * &001C
TASKFILE__W_DIGITAL_OUTPUT        * &0818
TASKFILE__W_UNUSED                * &081C
 ]


; ATAPI feature register
FEATUREBITS__DMA                  * 1:SHL:0
FEATUREBITS__PIO                  * 0

; ATAPI interrupt reason register
IRR__COMMAND                      * 1:SHL:0
IRR__DATA                         * 0
IRR__INPUT                        * 1:SHL:1
IRR__OUTPUT                       * 0


; ATAPI drive select register
DRIVESELECTBITS__DEVICE0          * 0
DRIVESELECTBITS__DEVICE1          * 1:SHL:4
DRIVESELECT__ALWAYS               * (1:SHL:7) + (1:SHL:5)  ; These bits must always be set

; IDE Device Control Register (command)
DCR__nIEN                         * (1:SHL:1)
DCR__SRST                         * (1:SHL:2)
DCR__ALWAYS                       * (1:SHL:3)

; ATAPI status register bits
STATUSFLAGS__CHECK                * 1:SHL:0
STATUSFLAGS__CORR                 * 1:SHL:2
STATUSFLAGS__DRQ                  * 1:SHL:3
STATUSFLAGS__DSC                  * 1:SHL:4
STATUSFLAGS__DRDY                 * 1:SHL:6
STATUSFLAGS__BSY                  * 1:SHL:7


; Error status register bits
ZERRORFLAGS__ILI                   * 1:SHL:0
ZERRORFLAGS__EOM                   * 1:SHL:1
ZERRORFLAGS__ABRT                  * 1:SHL:2
ZERRORFLAGS__MCR                   * 1:SHL:3
ZERRORFLAGS__SENSEKEY_SHIFT        * 4
ZERRORFLAGS__SENSEKEY_MASK         * 2_1111:SHL:ZERRORFLAGS__SENSEKEY_SHIFT

; *********************************************************************************************
; ** IDE command codes                                                                       **
; *********************************************************************************************
IDE__ATAPI_PACKET_COMMAND         * &A0
IDE__ATAPI_IDENTIFY_DEVICE        * &A1
IDE__ATAPI_SOFT_RESET             * &08
 [ full_drive_detection
IDE__IDENTIFY           *       &EC
 ]


 [ full_drive_detection
; Signature provided in cylinder registers
ATAPI_Signature *       &EB14
 ]


; ATAPI commands sent within the IDE packet command
ATAPI__INQUIRY                    * &12
ATAPI__START_STOP_EJECT_UNIT      * &1B
ATAPI__PREVENT_ALLOW              * &1E
ATAPI__READ_DATA_10               * &28
ATAPI__SEEK                       * &2B
ATAPI__READ_SUB_CHANNEL           * &42
ATAPI__READ_TOC                   * &43
ATAPI__READ_HEADER                * &44
ATAPI__PAUSE_RESUME               * &4B
ATAPI__MODE_SELECT                * &55
ATAPI__MODE_SENSE                 * &5A
ATAPI__PLAY_AUDIO_12              * &A5
ATAPI__READ_DATA_12               * &A8
ATAPI__PLAY_TRACK_RELATIVE_12     * &A9
ATAPI__READ_CD_MSF                * &B9
ATAPI__SET_CDROM_SPEED            * &BB
ATAPI__READ_CD                    * &BE

; Internal error messages

TARGETERROR__BASE                 *  0
DRIVERERROR__BASE                 * 16

TARGETERROR__NO_SENSE             *  (0 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__RECOVERED_ERROR      *  (1 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__NOT_READY            *  (2 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__MEDIUM_ERROR         *  (3 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__HARDWARE_ERROR       *  (4 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__ILLEGAL_REQUEST      *  (5 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__UNIT_ATTENTION       *  (6 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__DATA_PROTECT         *  (7 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__ABORTED_COMMAND      * (&B + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
TARGETERROR__MISCOMPARE           * (&E + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
 [ HAL
TARGETERROR__UNKNOWN              * (&10 + TARGETERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
 ]

DRIVERERROR__UNKNOWN_REASON       * (&2 + DRIVERERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
DRIVERERROR__INVALID_PARAMETER    * (&4 + DRIVERERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
DRIVERERROR__SELECTION_TIMEOUT    * (&A + DRIVERERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
DRIVERERROR__OTHER_TIMEOUT        * (&B + DRIVERERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
 [ HAL
DRIVERERROR__UK_SCSI_ERROR        * (&C + DRIVERERROR__BASE):SHL:ZERRORFLAGS__SENSEKEY_SHIFT
 ]


 [ long_command_timeout
TIMEOUT__COMMAND_COMPLETE       *       10*100
 ]
 [ test_long_timeouts
TIMEOUT__SELECTION_PHASE        *       16*100
TIMEOUT__OTHER                  *       16*100
 |
  [ faster_startup
TIMEOUT__SELECTION_PHASE        *       5       ; centiseconds
TIMEOUT__OTHER                  *       5       ; centiseconds to wait for DRQ for CDB
  |
TIMEOUT__SELECTION_PHASE        *       5*100
TIMEOUT__OTHER                  *       1*100
  ]
 ]

TIMEOUT__RESET_RECOVERY         *       10*100  ; centiseconds

LARGEST_DATA_CHUNK_PLUS_ONE       * 2800 ; The reason for this small size is Sony (again)
                                         ; - see ReadUserData

; *********************************************************************************************
; ** Reason codes to IDE_Control                                                             **
; *********************************************************************************************
ATAPICONTROL__SEND_COMMAND        *     0
ATAPICONTROL__SOFT_RESET          *     1
 [ full_drive_detection
ATAPICONTROL__CheckForDrive       *     2
 ]
 [ HAL ; could be implemented for non-HAL case, but would be a waste of time
ATAPICONTROL__RAW_OP              *     3
 ]

; *********************************************************************************************
; ** CDFS Driver errors                                                                      **
; *********************************************************************************************

                                ^ &00803400

CDFSDRIVERERROR__UNUSED                        #         1               ;  0
CDFSDRIVERERROR__BAD_ALIGNMENT                 #         1               ;  1
CDFSDRIVERERROR__DRIVE_NOT_SUPPORTED           #         1               ;  2
CDFSDRIVERERROR__BAD_MODE                      #         1               ;  3
CDFSDRIVERERROR__INVALID_PARAMETER             #         1               ;  4
CDFSDRIVERERROR__NOT_AUDIO_TRACK               #         1               ;  5
CDFSDRIVERERROR__NO_CADDY                      #         1               ;  6
CDFSDRIVERERROR__NO_DRIVE                      #         1               ;  7
CDFSDRIVERERROR__INVALID_FORMAT                #         1               ;  8
CDFSDRIVERERROR__BAD_MINUTES                   #         1               ;  9
CDFSDRIVERERROR__BAD_SECONDS                   #         1               ; 10
CDFSDRIVERERROR__BAD_BLOCKS                    #         1               ; 11
CDFSDRIVERERROR__PHYSICAL_BLOCK_ERROR          #         1               ; 12
CDFSDRIVERERROR__DRAWER_LOCKED                 #         1               ; 13
CDFSDRIVERERROR__WRONG_DATA_MODE               #         1               ; 14
CDFSDRIVERERROR__CHANNEL_NOT_SUPPORTED         #         1               ; 15
CDFSDRIVERERROR__BAD_DEVICE_ID                 #         1               ; 16
CDFSDRIVERERROR__BAD_CARD_NUMBER               #         1               ; 17
CDFSDRIVERERROR__BAD_LUN_NUMBER                #         1               ; 18
CDFSDRIVERERROR__NO_SUCH_TRACK                 #         1               ; 19
CDFSDRIVERERROR__FAULTY_DISC                   #         1               ; 20
CDFSDRIVERERROR__NO_SUCH_BLOCK                 #         1               ; 21
CDFSDRIVERERROR__DRIVE_DOES_NOT_SUPPORT_THAT   #         1               ; 22
CDFSDRIVERERROR__DRIVER_NOT_PRESENT            #         1               ; 23
CDFSDRIVERERROR__SWI_NOT_SUPPORTED             #         1               ; 24
CDFSDRIVERERROR__TOO_MANY_DRIVERS              #         1               ; 25
CDFSDRIVERERROR__NOT_REGISTERED                #         1               ; 26

; *********************************************************************************************
; ** Flags for ATAPI_Op                                                                      **
; *********************************************************************************************

nodata                     *      2_00:SHL:24
readdata                   *      2_01:SHL:24
writedata                  *      2_10:SHL:24

ATAPIOP__COMMAND_PACKET    *    0:SHL:26
 [ :LNOT: HAL
ATAPIOP__IDENTIFY_DEVICE   *    1:SHL:26
ATAPIOP__DONT_USE_R7       *    1:SHL:27
ATAPIOP__DONT_RETRY        *    1:SHL:28
 ]

; *********************************************************************************************
; ** ATAPI identify device structure                                                         **
; ** This is a series of 2 byte 'words' in high byte/low byte format                         **
; *********************************************************************************************

ATAPIID__GENERAL_CONFIGURATION  *    (2*  0)
ATAPIID__MODEL_NUMBER           *    (2* 27)
ATAPIID__MAJOR_VERSION          *    (2* 80)
ATAPIID__MINOR_VERSION          *    (2* 81)

ATAPIID__STRUCTURE_SIZE         *    (2*256)

; there are more, but I can't be bothered to type them in 'cause I don't need them

; *********************************************************************************************
; **                                                                                         **
; *********************************************************************************************
; *********************************************************************************************
; **                                                                                         **
; *********************************************************************************************
; *********************************************************************************************
; **                                                                                         **
; *********************************************************************************************
; *********************************************************************************************
; **                                                                                         **
; *********************************************************************************************

 END
@


4.6
log
@Delete pre-source control switches
Now we're using CVS, the switches from 1997 and earlier are just clutter.
Built same binary, not tested.

Version 1.37. Tagged as 'ATAPI-1_37'
@
text
@d162 1
a162 1
ATAPI__READ_DATA                  * &A8
d285 2
@


4.5
log
@  Shiny new version for Tungsten.
Detail:
  * Removed IOMD dependency - reimplemented to use ADFS_ATAPIOp and
    ADFS_IDEDeviceInfo
  * Supports 4 drives (previously 2)
  * Support for SCSIUserOp entry included
Admin:
  Requires ADFS 3.34 (or intermediate version after 3.33).

Version 1.29. Tagged as 'ATAPI-1_29'
@
text
@a211 1
 [ Module_Version >= 124
a212 1
 ]
@


4.4
log
@  First stage of changes for RISC OS 5.
Detail:
  * Moved resources here from CDFSResources - allows tokenisation
  * Uses objasm, shared makefiles and global headers
  * 32-bit compatible
Admin:
  Not tested. Still IOC/IOMD-centric.

Version 1.28. Tagged as 'ATAPI-1_28'
@
text
@d45 3
d49 1
d51 1
d91 1
d183 3
d191 3
d225 4
a228 1
ATAPICONTROL__CheckForDrive     *       2
d274 1
d278 1
@


4.3
log
@  Merged Ursula branch, moved to srccommit.
Detail:
  Merged Ursula branch, only change was removal of dynamic dependencies
   from Makefile.

  Moved to srccommit usage, changed some occurences of "Version" to
   "ModuleVersion", as defined in VersionASM. Removed obsolete "Version"
   file.
Admin:
  Added stripdepend call to clean rule
  Additionally added a "GET Hdr:Machine.<Machine>" into s.Main to
   make it assemble correctly.


Version 1.26. Tagged as 'ATAPI-1_26'
@
text
@a60 4
IOC                               * &3200000
Timer0CL                          *      &40
Timer0LR                          *      &4c

@


4.2
log
@Version RO_3_70 taken
@
text
@d204 1
a204 1
 [ Version >= 124
@


4.1
log
@Initial revision
@
text
@d31 11
d136 9
d188 19
a206 4

TIMEOUT__SELECTION_PHASE          * 5*100
TIMEOUT__OTHER                    * 1*100

d216 3
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a30 11
; 12-Jun-95  11:29  cpartington (Cambridge Systems Design)
; * Added TIMEOUT__COMMAND_COMPLETE and added alternative values for other
;   timeouts dependent on test_long_timeouts.
;
; 16-Jun-95  15:06  cpartington (Cambridge Systems Design)
; * Added new timeout values for faster_startup.
; * Added TIMEOUT__RESET_RECOVERY.
;
; 06-Jul-95  10:57  cpartington (Cambridge Systems Design)
; * Added ATAPICONTROL_CheckForDrive, ATAPI_Signature and IDE__IDENTIFY.
;
a124 9
 [ full_drive_detection
IDE__IDENTIFY           *       &EC
 ]


 [ full_drive_detection
; Signature provided in cylinder registers
ATAPI_Signature *       &EB14
 ]
d168 4
a171 19
 [ long_command_timeout
TIMEOUT__COMMAND_COMPLETE       *       10*100
 ]
 [ test_long_timeouts
TIMEOUT__SELECTION_PHASE        *       16*100
TIMEOUT__OTHER                  *       16*100
 |
  [ faster_startup
TIMEOUT__SELECTION_PHASE        *       5       ; centiseconds
TIMEOUT__OTHER                  *       5       ; centiseconds to wait for DRQ for CDB
  |
TIMEOUT__SELECTION_PHASE        *       5*100
TIMEOUT__OTHER                  *       1*100
  ]
 ]

 [ Version >= 124
TIMEOUT__RESET_RECOVERY         *       10*100  ; centiseconds
 ]
a180 3
 [ full_drive_detection
ATAPICONTROL__CheckForDrive     *       2
 ]
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
