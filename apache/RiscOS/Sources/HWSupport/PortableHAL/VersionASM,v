head	1.14;
access;
symbols
	PortableHAL-0_81:1.14
	PortableHAL-0_80:1.13
	PortableHAL-0_79:1.12
	PortableHAL-0_78:1.11
	PortableHAL-0_77:1.10
	PortableHAL-0_76:1.9
	PortableHAL-0_75:1.8
	PortableHAL-0_74:1.7
	PortableHAL-0_73:1.6
	PortableHAL-0_72:1.5
	PortableHAL-0_71:1.4
	PortableHAL-0_70:1.3
	PortableHAL-0_69:1.2
	PortableHAL-0_68:1.1;
locks; strict;
comment	@# @;


1.14
date	2017.01.20.22.31.55;	author jlee;	state Exp;
branches;
next	1.13;
commitid	qVhPdyuQ67yO3LCz;

1.13
date	2016.03.26.14.17.38;	author jlee;	state Exp;
branches;
next	1.12;
commitid	f3eGZEM9oRZ6Y90z;

1.12
date	2016.03.25.19.51.33;	author jlee;	state Exp;
branches;
next	1.11;
commitid	abx17HDVT2bEQ30z;

1.11
date	2016.03.03.22.22.27;	author jlee;	state Exp;
branches;
next	1.10;
commitid	xGtOwNC9YTzgofXy;

1.10
date	2015.12.12.08.26.31;	author rool;	state Exp;
branches;
next	1.9;
commitid	4EpA4m2URlBUoDMy;

1.9
date	2015.12.05.18.07.04;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	wqNSO27QOfz1QMLy;

1.8
date	2015.06.21.11.44.19;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	IKRtvMSE1E9x5iqy;

1.7
date	2013.04.14.20.01.59;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	FoZCpIX5L7iBuMLw;

1.6
date	2012.11.21.23.33.14;	author jlee;	state Exp;
branches;
next	1.5;
commitid	dKBlfy1bZaU2iitw;

1.5
date	2012.02.26.08.55.53;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	oKJakpT3ozi95EUv;

1.4
date	2012.01.27.19.55.29;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	mSeF1GtbgQJdHQQv;

1.3
date	2011.03.19.18.35.54;	author jlee;	state Exp;
branches;
next	1.2;
commitid	zF4gdyWX1f2Hlucv;

1.2
date	2010.03.21.22.20.13;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.30.00.07.39;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Disable WFI (Portable_Idle) on ARM11
Detail:
  On a Raspberry Pi 1B and 1B+, reading a constant stream of data from the serial port was found to eventually result in a CPU deadlock within the WFI code, consistent with that described in the ARM11 erratum 486865 notice
  Tweaking the already-implemented workaround for the erratum didn't bring any luck, so I'm going with the fallback approach of disabling WFI completely for ARM11.
  s/GetAll - Extend the Erratum_486865 switch to support three different modes
  s/Front - Replace magic number that gave the workaround code size
  s/StPortable - Check the CPU ID to make sure the Erratum_486865 switch only affects ARM11 CPUs. Add support for disabling WFI on ARM11, and tweak the workaround implementation so that it's now an exact match for that given by ARM.
Admin:
  Tested on Raspberry Pi 1 B
  With WFI enabled the test code used to crash after anywhere between a few minutes to ~20 hours, but with WFI disabled it's survived 48 hours


Version 0.81. Tagged as 'PortableHAL-0_81'
@
text
@;
; This file is automatically maintained by srccommit, do not edit manually.
; Last processed by srccommit version: 1.1.
;
                        GBLS    Module_MajorVersion
                        GBLA    Module_Version
                        GBLS    Module_MinorVersion
                        GBLS    Module_Date
                        GBLS    Module_FullVersion
                        GBLS    Module_ApplicationDate
                        GBLS    Module_HelpVersion
                        GBLS    Module_ComponentName
                        GBLS    Module_ComponentPath
Module_MajorVersion     SETS    "0.81"
Module_Version          SETA    81
Module_MinorVersion     SETS    ""
Module_Date             SETS    "20 Jan 2017"
Module_ApplicationDate  SETS    "20-Jan-17"
Module_ComponentName    SETS    "PortableHAL"
Module_ComponentPath    SETS    "castle/RiscOS/Sources/HWSupport/PortableHAL"
Module_FullVersion      SETS    "0.81"
Module_HelpVersion      SETS    "0.81 (20 Jan 2017)"
                        END
@


1.13
log
@Portect against HAL device calls corrupting R12
Detail:
  s/StPortable - Where module workspace needs to be used following a HAL device call, make sure we save and restore R12, as HAL devices are allowed to corrupt it
Admin:
  Tested on Pi 2B, 3B
  Fixes issue reported on forums with some Portable_Speed2 reason codes aborting:
  https://www.riscosopen.org/forum/forums/2/topics/3961#posts-51298


Version 0.80. Tagged as 'PortableHAL-0_80'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.80"
Module_Version          SETA    80
d17 2
a18 2
Module_Date             SETS    "26 Mar 2016"
Module_ApplicationDate  SETS    "26-Mar-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.80"
Module_HelpVersion      SETS    "0.80 (26 Mar 2016)"
@


1.12
log
@Make Portable_Idle perform a DSB before the WFI, and use the CP15 WFI op on ARMv6. Allow the CPU clock device to vanish and re-appear. Export a C version of the CPUClkDevice header.
Detail:
  s/Front, s/GetAll, s/StPortable - Improve Portable_Idle implementation so that it issues a DSB before the WFI, and uses the CP15 WFI (potentially with erratum 486865 workaround) for ARMv6. Adjust handling of CPU clock device in order to allow it to be registered and deregistered at runtime.
  Makefile, h/CPUClkDevice - Export a C version of the CPUClkDevice header
Admin:
  Tested on Raspberry Pi 1B/2B/3B


Version 0.79. Tagged as 'PortableHAL-0_79'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.79"
Module_Version          SETA    79
d17 2
a18 2
Module_Date             SETS    "25 Mar 2016"
Module_ApplicationDate  SETS    "25-Mar-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.79"
Module_HelpVersion      SETS    "0.79 (25 Mar 2016)"
@


1.11
log
@Fix speed inversion in Portable_Speed2 8/9
Detail:
  s/StPortable - CPUSpeed bit 0 is 0 for fast and 1 for slow, make sure we get it the right way round when re-applying the current speed setting after accepting new fast & slow speed values
Admin:
  Untested
  Issue spotted by Willi Theiss


Version 0.78. Tagged as 'PortableHAL-0_78'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.78"
Module_Version          SETA    78
d17 2
a18 2
Module_Date             SETS    "03 Mar 2016"
Module_ApplicationDate  SETS    "03-Mar-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.78"
Module_HelpVersion      SETS    "0.78 (03 Mar 2016)"
@


1.10
log
@Fix for incorrect register use
Detail:
  The CPUClkDevice struct pointer should be in a1, not a3.
Admin:
  Submission from Willi Theiss.

Version 0.77. Tagged as 'PortableHAL-0_77'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.77"
Module_Version          SETA    77
d17 2
a18 2
Module_Date             SETS    "12 Dec 2015"
Module_ApplicationDate  SETS    "12-Dec-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.77"
Module_HelpVersion      SETS    "0.77 (12 Dec 2015)"
@


1.9
log
@Add sensor reading SWI
New Portable_ReadSensor is a general front end to sensors that might be of concern to the Portable module.
Starter for 10 is temperature, and we support reading the CPU die temperature (from a new CPUClk entry point, since faster=botter they're physically related parameters) and the BMU charger. Each supports multiple units, so in future multicore temperatures can be reported.
New error message in the resources, plus enable tokenisation of the Messages file since it's used via a buffered MessageTrans_ErrorLookup call.

Tested briefly on a HAL with fake temperature sensor returning a hardwired kelvin value.

Version 0.76. Tagged as 'PortableHAL-0_76'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.76"
Module_Version          SETA    76
d17 2
a18 2
Module_Date             SETS    "05 Dec 2015"
Module_ApplicationDate  SETS    "05-Dec-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.76"
Module_HelpVersion      SETS    "0.76 (05 Dec 2015)"
@


1.8
log
@Minor cleanups
* A few redundant includes removed
* Use ObjAsm {TRUE} and {FALSE}
* Since there's no command table, don't declare the messages file in the module header
* Use WFI directly instead of DCI &E320F003
* Remove *FreezeTime command help from messages
Built, but not tested.

Version 0.75. Tagged as 'PortableHAL-0_75'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.75"
Module_Version          SETA    75
d17 2
a18 2
Module_Date             SETS    "21 Jun 2015"
Module_ApplicationDate  SETS    "21-Jun-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.75"
Module_HelpVersion      SETS    "0.75 (21 Jun 2015)"
@


1.7
log
@Extension to CPUClkDevice API
In API 0.1 a new call, GetOverride, is provided.
Changes from Willi Theiss.

Version 0.74. Tagged as 'PortableHAL-0_74'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.74"
Module_Version          SETA    74
d17 2
a18 2
Module_Date             SETS    "14 Apr 2013"
Module_ApplicationDate  SETS    "14-Apr-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.74"
Module_HelpVersion      SETS    "0.74 (14 Apr 2013)"
@


1.6
log
@Add initial implementation of the new HAL friendly BMU interface
Detail:
  hdr/BMUDevice - New header describing layout of BMU HAL devices
  Makefile - export hdr/BMUDevice, and a C version of hdr/Portable
  hdr/Portable - Lots of new definitions related to the BMU interface. VirtualRPC BMU vars renamed slightly to match the A4/HAL naming convention (PortableBMUV_) instead of the Stork naming convention (Portable_BMUVar_).
  s/Front, s/GetAll, s/StPortable - BMU interface implementation. Two new SWIs (Portable_EnumerateBMU & Portable_ReadBMUVariables) are provided, along with a semi backwards compatible Portable_ReadBMUVariable implementation. Code also updated to use OSHW_ constants instead of magic numbers.
  Resources/UK/Messages - New error message text added
Admin:
  Tested in ROM on BB-xM, Pandora, TouchBook


Version 0.73. Tagged as 'PortableHAL-0_73'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.73"
Module_Version          SETA    73
d17 2
a18 2
Module_Date             SETS    "21 Nov 2012"
Module_ApplicationDate  SETS    "21-Nov-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.73"
Module_HelpVersion      SETS    "0.73 (21 Nov 2012)"
@


1.5
log
@Excess inclusions trimmed.

Version 0.72. Tagged as 'PortableHAL-0_72'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.72"
Module_Version          SETA    72
d17 2
a18 2
Module_Date             SETS    "26 Feb 2012"
Module_ApplicationDate  SETS    "26-Feb-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.72"
Module_HelpVersion      SETS    "0.72 (26 Feb 2012)"
@


1.4
log
@Export Service_Portable subreasons myself.

Version 0.71. Tagged as 'PortableHAL-0_71'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.71"
Module_Version          SETA    71
d17 2
a18 2
Module_Date             SETS    "27 Jan 2012"
Module_ApplicationDate  SETS    "27-Jan-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.71"
Module_HelpVersion      SETS    "0.71 (27 Jan 2012)"
@


1.3
log
@Add code for controlling CPU speed via interacting with a CPUClk HAL device.
Detail:
  Makefile, hdr/CPUClkDevice - Add HALDevice_CPUClk descriptor to header exports
  hdr/Portable - Trim some obsolete definitions, tidy formatting, add Speed2 and (unimplemented) WakeTime SWI numbers, add BatteryTimeRemaining and MaxBatteryTime BMU variables (from VirtualRPC)
  s/Front, s/GetAll, s/StPortable - Added Portable_Speed and Portable_Speed2 implementations, for controlling CPU speed. Portable_Speed is fully compatible with the old A4 version; all new features are exposed via Portable_Speed2 instead. Also added some debug-only stats logging code to track how much time is spent in various states.
  Resources/UK/Messages - New error messages.
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook.
  Portable_Speed2 & HALDevice_CPUClk documentation will be on the wiki soon.


Version 0.70. Tagged as 'PortableHAL-0_70'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.70"
Module_Version          SETA    70
d17 2
a18 2
Module_Date             SETS    "19 Mar 2011"
Module_ApplicationDate  SETS    "19-Mar-11"
d21 2
a22 2
Module_FullVersion      SETS    "0.70"
Module_HelpVersion      SETS    "0.70 (19 Mar 2011)"
@


1.2
log
@Tweak Portable_Idle implementation in PortableHAL module
Detail:
  In an attempt to solve a problem that doesn't exist, my Portable_Idle implementation was taking measures to avoid executing the WFI instruction if the module might have been running on pre-ARMv3 hardware.
  However I've since discovered that this was unnecessary, since WFI degrades to a NOP MSR on pre-ARMv6K, and MSR itself is a NOP on pre-ARMv3.
Admin:
  Untested, but should be safe.


Version 0.69. Tagged as 'PortableHAL-0_69'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.69"
Module_Version          SETA    69
d17 2
a18 2
Module_Date             SETS    "21 Mar 2010"
Module_ApplicationDate  SETS    "21-Mar-10"
d21 2
a22 2
Module_FullVersion      SETS    "0.69"
Module_HelpVersion      SETS    "0.69 (21 Mar 2010)"
@


1.1
log
@Add initial version of PortableHAL, bare-bones 32bit-safe Portable module
Detail:
  Currently only supporte the Portable_Idle and Portable_Features SWIs.
  Portable_Idle is implemented using the WFI instruction found in ARMv6K+, but the module should compile and run on any architecture.
Admin:
  Tested on rev C2 beagleboard

Version 0.68. Tagged as 'PortableHAL-0_68'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.68"
Module_Version          SETA    68
d17 2
a18 2
Module_Date             SETS    "30 Jan 2010"
Module_ApplicationDate  SETS    "30-Jan-10"
d21 2
a22 2
Module_FullVersion      SETS    "0.68"
Module_HelpVersion      SETS    "0.68 (30 Jan 2010)"
@

