head	1.4;
access;
symbols
	Podule-1_65:1.3
	Podule-1_64:1.3
	Podule-1_63:1.3
	Podule-1_62:1.3
	Podule-1_61:1.3
	RO_5_07:1.3
	Podule-1_60:1.3
	Podule-1_59:1.3
	Podule-1_58:1.2
	dellis_autobuild_BaseSW:1.2
	Podule-1_57:1.2
	Podule-1_56:1.2
	Podule-1_55:1.2
	Podule-1_54:1.2
	Podule-1_53:1.2
	sbrodie_sedwards_16Mar2000:1.2
	Podule-1_52:1.2
	Podule-1_51:1.2
	Podule-1_50:1.2
	dcotton_autobuild_BaseSW:1.2
	Ursula_merge:1.1.2.2
	Podule-1_49:1.2
	nturton_Podule-1_48:1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.2.2
	Ursula_RiscPC:1.1.2.2.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.2.2
	UrsulaBuild_FinalSoftload:1.1.2.2
	rthornb_UrsulaBuild-12Aug1998:1.1.2.2
	aglover_UrsulaBuild-05Aug1998:1.1.2.2
	rthornb_UrsulaBuild-29Jul1998:1.1.2.2
	rthornb_UrsulaBuild-22Jul1998:1.1.2.2
	rthornb_UrsulaBuild-15Jul1998:1.1.2.2
	rthornb_UrsulaBuild-07Jul1998:1.1.2.2
	rthornb_UrsulaBuild-17Jun1998:1.1.2.2
	rthornb_UrsulaBuild-03Jun1998:1.1.2.2
	rthornb_UrsulaBuild-27May1998:1.1.2.2
	rthornb_UrsulaBuild-21May1998:1.1.2.2
	rthornb_UrsulaBuild_01May1998:1.1.2.2
	Ursula:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2012.05.07.21.42.16;	author rsprowson;	state dead;
branches;
next	1.3;
commitid	PsfVaoQkTwky2Q3w;

1.3
date	2002.10.26.11.57.10;	author rsprowson;	state Exp;
branches;
next	1.2;

1.2
date	98.09.03.15.59.25;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.06.02.14.50.27;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.06.02.14.50.28;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.06.02.14.57.03;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix corruption of memory location 0x032000C4
Podule manager was using a hardwired IOC era address of IOTCR to set the speed for the NIC rather than using the SSpaceStart location it read from the Kernel.
Makefile updated to generate C header from the assembler one (static copy deleted).
When NetworkCard support is assembled out the table of logical DMA channels is updated to reflect that.
Use symbol MaximumPodule from the machine definition rather than hardwired 8.
Tested on softloaded IOMD ROM, inspection of IOTCR looks like it's being modified correctly.

Version 1.66. Tagged as 'Podule-1_66'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Exported Podule constants
 *
 * ***********************************
 * ***    C h a n g e   L i s t    ***
 * ***********************************
 *
 * Date       Name  Description
 * ----       ----  -----------
 * 12-May-87  BC    Added DeviceType_Link to allow for adding ROMS
 * 19-Jun-87  BC    Removed speed/access stuff
 * 15-Sep-87  BC    Put in EXPORT of masking constants
 *
 * 20-Aug-87  BC    Left RawRead and RawWrite in permanently
 * 10-May-88  BC    Added SWI Podule_HardwareAddress
 * 11-Jan-91  TMD   Added SWI Podule_EnumerateChunksWithInfo
 * 15-Jan-91  TMD   Added SWI Podule_HardwareAddresses
 * 22-Mar-91  OSS   Added SWI Podule_ReturnNumber
 * 28-Apr-93  BC    Added two new SWIs for Medusa
 *
 * 23-Jul-87  BC    Added DeviceType_PartNumber
 * 15-Mar-90  BC    Added DeviceType_EthernetID, &F7
 * 15-Mar-90  BC    Added DeviceType_HardwareRev, &F8
 * 04-Mar-94  BC    Added DeviceType_ROMCRC
 *
 * 12-May-93  BC    Added reason codes for ReadInfo
 * 23-Jun-93  BC    Added more reason codes for ReadInfo
 * 23-Jun-93  BC    Changed partitioning of the combined address  *!*!*!*!*!*
 * 30-Jun-93  BC    Added DeviceVector reason code for ReadInfo
 * 05-Aug-93  BC    Added extra reason codes for ReadInfo
 * 12-Jan-94  BC    Updated the reason codes for ReadInfo
 * 20-Jan-94  BC    Added new reason codes (Ethernet) for ReadInfo
 * 21-Jan-94  BC    Added new reason code Podule_ReadInfo_MEMC
 *
 * 05-Jan-94  BC    Changed masks to be 32 bit not 26 bit
 * 18-Feb-94  BC    Changed symbol for SWI base
 * 29-Jun-94  AMcC  Replaced "Podule" with PoduleSWI_Name
 * 29-Jun-94  AMcC  Removed Country codes (Country_) (no longer used)
 * 29-Jun-94  AMcC  Moved Manufacturer codes (Manf_), Podule types (ProdType_)
 *                  and Simple types (SimpleType_) to HdrSrc.Register.PoduleReg
 * 03-May-95  JRH   Added direct support for STB2 MPEG1 chips conditioned on
 *                  STB. Will return values consistent with a podule fitted in
 *                  slot 0 when MPEG hardware is detected using link.
 * 16-Jan-96  JRH   Changed condition for fake podule from STB to system build
 *                  setting FakePodule0.
 *                  s.Module: Changed build options NetworkPodule and
 *                  ExtensionROMs to be equal to system build options
 *                  NetPodSupport and ExtROMSupport.
 * 02-Jun-97  KJB   Converted from assembler header file
 *                  Added constants for access speeds
 * 08-Aug-02  RPS   New access speed contants for Tungsten added
 */


/*
 * Bits for the reason code (R0) of SWI Podule_ReadInfo
 */

#define Podule_ReadInfo_Number           *       (1u<<0)
#define Podule_ReadInfo_SyncBase         *       (1u<<1)
#define Podule_ReadInfo_CMOSAddress      *       (1u<<2)
#define Podule_ReadInfo_CMOSSize         *       (1u<<3)
#define Podule_ReadInfo_ROMAddress       *       (1u<<4)
#define Podule_ReadInfo_ID               *       (1u<<5)
#define Podule_ReadInfo_Type             *       (1u<<6)
#define Podule_ReadInfo_CombinedAddress  *       (1u<<7)
#define Podule_ReadInfo_Description      *       (1u<<8)
#define Podule_ReadInfo_EASILogical      *       (1u<<9)
#define Podule_ReadInfo_EASISize         *       (1u<<10)
#define Podule_ReadInfo_DMAPrimary       *       (1u<<11)
#define Podule_ReadInfo_DMASecondary     *       (1u<<12)
#define Podule_ReadInfo_IntStatus        *       (1u<<13)
#define Podule_ReadInfo_IntRequest       *       (1u<<14)
#define Podule_ReadInfo_IntMask          *       (1u<<15)
#define Podule_ReadInfo_IntValue         *       (1u<<16)
#define Podule_ReadInfo_IntDeviceVector  *       (1u<<17)
#define Podule_ReadInfo_FIQasIntStatus   *       (1u<<18)
#define Podule_ReadInfo_FIQasIntRequest  *       (1u<<19)
#define Podule_ReadInfo_FIQasIntMask     *       (1u<<20)
#define Podule_ReadInfo_FIQasIntValue    *       (1u<<21)
#define Podule_ReadInfo_FIQasIntDeviceVector *   (1u<<22)
#define Podule_ReadInfo_FIQStatus        *       (1u<<23)
#define Podule_ReadInfo_FIQRequest       *       (1u<<24)
#define Podule_ReadInfo_FIQMask          *       (1u<<25)
#define Podule_ReadInfo_FIQValue         *       (1u<<26)
#define Podule_ReadInfo_EthernetAddressLow *     (1u<<27)
#define Podule_ReadInfo_EthernetAddressHigh *    (1u<<28)
#define Podule_ReadInfo_EthernetAddress  *       (3u<<27)     /* Two bits => 48 bits */
#define Podule_ReadInfo_MEMC             *       (1u<<29)
#define Podule_ReadInfo_30               *       (1u<<30)
#define Podule_ReadInfo_31               *       (1u<<31)

/*
 * The hardware address handed to loaders by the Podule manager consists of
 * two parts, the Synchronous base address, and the CMOS base address.
 * These two parts are combined into a single word as with the CMOS address
 * (the first of four bytes) in the bottom 10 bits.  The remainder is the
 * hardware address.
 *
 *  31                                    10 9               0
 *  +---------------------------------------+----------------+
 *  |  Hardware base address (Synchronous)  |  CMOS address  |
 *  +---------------------------------------+----------------+
 *
 * So this means that entry points expecting the hardware base address
 * should now mask the incoming register value;
 *
 *        LDR    Rmv, =2_00000000000000000000001111111111
 *        BIC    Rba, Rha, Rmv
 * OR
 *        LDR    Rmv, =2_11111111111111111111110000000000
 *        AND    Rba, Rha, Rmv
 *
 * To obtain the true base address, and they should also mask to obtain the
 * CMOS address for use in R1 in the SWI XOS_Byte for ReadCMOS or WriteCMOS;
 *
 *        LDR    Rmv, =2_11111111111111111111110000000000
 *        BIC    Rca, Rha, Rmv
 * OR
 *        LDR    Rmv, =2_00000000000000000000001111111111
 *        AND    Rca, Rha, Rmv
 *
 * These four constants are exported below.
 */

#define Podule_BaseAddressBICMask 0x000003FFu
#define Podule_BaseAddressANDMask 0xFFFFFC00u

#define Podule_CMOSAddressBICMask 0xFFFFFC00u
#define Podule_CMOSAddressANDMask 0x000003FFu

/*
 * Access speeds, as passed to Podule_SetSpeed
 */
#define Podule_Speed_TypeA 1
#define Podule_Speed_TypeB 2
#define Podule_Speed_TypeC 3
#define Podule_Speed_TypeD 4
#define Podule_Speed_TypeE 5
#define Podule_Speed_TypeF 6
#define Podule_Speed_TypeG 7
#define Podule_Speed_TypeH 8

/*
 * Operating system identity bytes for load chunks
 */

/* OS=0, RISC OS */
#define OSType_Loader           0x80  /* The loader for the rest of the image */
#define OSType_Module           0x81  /* A Relocatable Module */
#define OSType_BBCROM           0x82  /* Use to support the ROM Card */
#define OSType_Sprite           0x83
#define OSType_File             0x84  /* General get out mechanism */

/* OS=1, ARX */
#define ARXType_Loader          0x90

/* OS=2, RISCiX */
#define UnixType_Loader         0xA0

/* OS=3, Helios */
#define HeliosType_Loader       0xB0

/* OS=7, Device data */
#define DeviceType_Link         0xF0 /* Used to link directory sections together */
#define DeviceType_SerialNumber 0xF1
#define DeviceType_Date         0xF2
#define DeviceType_Modification 0xF3
#define DeviceType_Place        0xF4
#define DeviceType_Description  0xF5
#define DeviceType_PartNumber   0xF6
#define DeviceType_EthernetID   0xF7
#define DeviceType_HardwareRev  0xF8
#define DeviceType_ROMCRC       0xF9

#define DeviceType_Empty        0xFF /* Used to patch ROMS */
@


1.3
log
@Made use of "PoduleReadOnly" and "AddressRange" loader error messages,
added to messages file.
Network and ExtROM internal loaders now return full message strings
rather than the "Bad" token!
Presence of absence of ExtROMs/EASI/NIC/IOC and MEMC podule support is
deduced at runtime,and the logical addresses requested from the Kernel
by OS_Memory.EASI,ExtROMs and NIC remain assembly time options though
just to reduce the size of the module a bit.
An assortment of internal variables have been altered to have 0 or -1 as
their unused value rather than &80000000 as this may be a candidate for
genuine loader addresses in future.
First pass at removing IOMD specific assumptions in the module.

Version 1.59. Tagged as 'Podule-1_59'
@
text
@@


1.2
log
@Merged Spinner branch. Added Podule.h from Ursula.
@
text
@d65 1
d153 4
@


1.1
log
@file Podule was initially added on branch Ursula.
@
text
@d1 185
@


1.1.2.1
log
@Added C version of exported header file
@
text
@a0 177
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Exported Podule constants
 *
 * ***********************************
 * ***    C h a n g e   L i s t    ***
 * ***********************************
 *
 * Date       Name  Description
 * ----       ----  -----------
 * 12-May-87  BC    Added DeviceType_Link to allow for adding ROMS
 * 19-Jun-87  BC    Removed speed/access stuff
 * 15-Sep-87  BC    Put in EXPORT of masking constants
 *
 * 20-Aug-87  BC    Left RawRead and RawWrite in permanently
 * 10-May-88  BC    Added SWI Podule_HardwareAddress
 * 11-Jan-91  TMD   Added SWI Podule_EnumerateChunksWithInfo
 * 15-Jan-91  TMD   Added SWI Podule_HardwareAddresses
 * 22-Mar-91  OSS   Added SWI Podule_ReturnNumber
 * 28-Apr-93  BC    Added two new SWIs for Medusa
 *
 * 23-Jul-87  BC    Added DeviceType_PartNumber
 * 15-Mar-90  BC    Added DeviceType_EthernetID, &F7
 * 15-Mar-90  BC    Added DeviceType_HardwareRev, &F8
 * 04-Mar-94  BC    Added DeviceType_ROMCRC
 *
 * 12-May-93  BC    Added reason codes for ReadInfo
 * 23-Jun-93  BC    Added more reason codes for ReadInfo
 * 23-Jun-93  BC    Changed partitioning of the combined address  *!*!*!*!*!*
 * 30-Jun-93  BC    Added DeviceVector reason code for ReadInfo
 * 05-Aug-93  BC    Added extra reason codes for ReadInfo
 * 12-Jan-94  BC    Updated the reason codes for ReadInfo
 * 20-Jan-94  BC    Added new reason codes (Ethernet) for ReadInfo
 * 21-Jan-94  BC    Added new reason code Podule_ReadInfo_MEMC
 *
 * 05-Jan-94  BC    Changed masks to be 32 bit not 26 bit
 * 18-Feb-94  BC    Changed symbol for SWI base
 * 29-Jun-94  AMcC  Replaced "Podule" with PoduleSWI_Name
 * 29-Jun-94  AMcC  Removed Country codes (Country_) (no longer used)
 * 29-Jun-94  AMcC  Moved Manufacturer codes (Manf_), Podule types (ProdType_)
 *                  and Simple types (SimpleType_) to HdrSrc.Register.PoduleReg
 * 03-May-95  JRH   Added direct support for STB2 MPEG1 chips conditioned on
 *                  STB. Will return values consistent with a podule fitted in
 *                  slot 0 when MPEG hardware is detected using link.
 * 16-Jan-96  JRH   Changed condition for fake podule from STB to system build
 *                  setting FakePodule0.
 *                  s.Module: Changed build options NetworkPodule and
 *                  ExtensionROMs to be equal to system build options
 *                  NetPodSupport and ExtROMSupport.
 * 02-Jun-97  KJB   Converted from assembler header file
 *
 */


/*
 * Bits for the reason code (R0) of SWI Podule_ReadInfo
 */

#define Podule_ReadInfo_Number           *       (1u<<0)
#define Podule_ReadInfo_SyncBase         *       (1u<<1)
#define Podule_ReadInfo_CMOSAddress      *       (1u<<2)
#define Podule_ReadInfo_CMOSSize         *       (1u<<3)
#define Podule_ReadInfo_ROMAddress       *       (1u<<4)
#define Podule_ReadInfo_ID               *       (1u<<5)
#define Podule_ReadInfo_Type             *       (1u<<6)
#define Podule_ReadInfo_CombinedAddress  *       (1u<<7)
#define Podule_ReadInfo_Description      *       (1u<<8)
#define Podule_ReadInfo_EASILogical      *       (1u<<9)
#define Podule_ReadInfo_EASISize         *       (1u<<10)
#define Podule_ReadInfo_DMAPrimary       *       (1u<<11)
#define Podule_ReadInfo_DMASecondary     *       (1u<<12)
#define Podule_ReadInfo_IntStatus        *       (1u<<13)
#define Podule_ReadInfo_IntRequest       *       (1u<<14)
#define Podule_ReadInfo_IntMask          *       (1u<<15)
#define Podule_ReadInfo_IntValue         *       (1u<<16)
#define Podule_ReadInfo_IntDeviceVector  *       (1u<<17)
#define Podule_ReadInfo_FIQasIntStatus   *       (1u<<18)
#define Podule_ReadInfo_FIQasIntRequest  *       (1u<<19)
#define Podule_ReadInfo_FIQasIntMask     *       (1u<<20)
#define Podule_ReadInfo_FIQasIntValue    *       (1u<<21)
#define Podule_ReadInfo_FIQasIntDeviceVector *   (1u<<22)
#define Podule_ReadInfo_FIQStatus        *       (1u<<23)
#define Podule_ReadInfo_FIQRequest       *       (1u<<24)
#define Podule_ReadInfo_FIQMask          *       (1u<<25)
#define Podule_ReadInfo_FIQValue         *       (1u<<26)
#define Podule_ReadInfo_EthernetAddressLow *     (1u<<27)
#define Podule_ReadInfo_EthernetAddressHigh *    (1u<<28)
#define Podule_ReadInfo_EthernetAddress  *       (3u<<27)     /* Two bits => 48 bits */
#define Podule_ReadInfo_MEMC             *       (1u<<29)
#define Podule_ReadInfo_30               *       (1u<<30)
#define Podule_ReadInfo_31               *       (1u<<31)

/*
 * The hardware address handed to loaders by the Podule manager consists of
 * two parts, the Synchronous base address, and the CMOS base address.
 * These two parts are combined into a single word as with the CMOS address
 * (the first of four bytes) in the bottom 10 bits.  The remainder is the
 * hardware address.
 *
 *  31                                    10 9               0
 *  +---------------------------------------+----------------+
 *  |  Hardware base address (Synchronous)  |  CMOS address  |
 *  +---------------------------------------+----------------+
 *
 * So this means that entry points expecting the hardware base address
 * should now mask the incoming register value;
 *
 *        LDR    Rmv, =2_00000000000000000000001111111111
 *        BIC    Rba, Rha, Rmv
 * OR
 *        LDR    Rmv, =2_11111111111111111111110000000000
 *        AND    Rba, Rha, Rmv
 *
 * To obtain the true base address, and they should also mask to obtain the
 * CMOS address for use in R1 in the SWI XOS_Byte for ReadCMOS or WriteCMOS;
 *
 *        LDR    Rmv, =2_11111111111111111111110000000000
 *        BIC    Rca, Rha, Rmv
 * OR
 *        LDR    Rmv, =2_00000000000000000000001111111111
 *        AND    Rca, Rha, Rmv
 *
 * These four constants are exported below.
 */

#define Podule_BaseAddressBICMask 0x000003FFu
#define Podule_BaseAddressANDMask 0xFFFFFC00u

#define Podule_CMOSAddressBICMask 0xFFFFFC00u
#define Podule_CMOSAddressANDMask 0x000003FFu

/*
 * Operating system identity bytes for load chunks
 */

/* OS=0, RISC OS */
#define OSType_Loader           0x80  /* The loader for the rest of the image */
#define OSType_Module           0x81  /* A Relocatable Module */
#define OSType_BBCROM           0x82  /* Use to support the ROM Card */
#define OSType_Sprite           0x83
#define OSType_File             0x84  /* General get out mechanism */

/* OS=1, ARX */
#define ARXType_Loader          0x90

/* OS=2, RISCiX */
#define UnixType_Loader         0xA0

/* OS=3, Helios */
#define HeliosType_Loader       0xB0

/* OS=7, Device data */
#define DeviceType_Link         0xF0 /* Used to link directory sections together */
#define DeviceType_SerialNumber 0xF1
#define DeviceType_Date         0xF2
#define DeviceType_Modification 0xF3
#define DeviceType_Place        0xF4
#define DeviceType_Description  0xF5
#define DeviceType_PartNumber   0xF6
#define DeviceType_EthernetID   0xF7
#define DeviceType_HardwareRev  0xF8
#define DeviceType_ROMCRC       0xF9

#define DeviceType_Empty        0xFF /* Used to patch ROMS */
@


1.1.2.2
log
@Added constants for access speeds
@
text
@d64 1
a64 1
 *                  Added constants for access speeds
a143 8

/*
 * Access speeds, as passed to Podule_SetSpeed
 */
#define Podule_Speed_TypeA 1
#define Podule_Speed_TypeB 2
#define Podule_Speed_TypeC 3
#define Podule_Speed_TypeD 4
@
