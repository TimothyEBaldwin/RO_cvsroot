head	4.7;
access;
symbols
	Podule-1_72:4.7
	Podule-1_71:4.7
	Podule-1_70:4.7
	Podule-1_69:4.7
	Podule-1_68:4.7
	Podule-1_67:4.7
	Podule-1_66:4.7
	Podule-1_65:4.7
	Podule-1_64:4.6
	Podule-1_63:4.6
	Podule-1_62:4.6
	Podule-1_61:4.6
	RO_5_07:4.6
	Podule-1_60:4.6
	Podule-1_59:4.5
	Podule-1_58:4.4
	dellis_autobuild_BaseSW:4.4
	Podule-1_57:4.4
	Podule-1_56:4.4
	Podule-1_55:4.4
	Podule-1_54:4.4
	Podule-1_53:4.3
	sbrodie_sedwards_16Mar2000:4.3
	Podule-1_52:4.3
	Podule-1_51:4.3
	Podule-1_50:4.2
	dcotton_autobuild_BaseSW:4.4
	Ursula_merge:4.2
	Podule-1_49:4.2
	nturton_Podule-1_48:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	nicke_Podule_47:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.7
date	2012.03.17.17.47.13;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	iDYLNZ9CAtlyngXv;

4.6
date	2002.11.04.21.43.07;	author rsprowson;	state Exp;
branches;
next	4.5;

4.5
date	2002.10.26.11.57.11;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2000.04.28.12.33.44;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	2000.01.12.17.14.15;	author pskirrow;	state Exp;
branches;
next	4.2;

4.2
date	97.01.20.13.50.01;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.36.59;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.36.59;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.36.33;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.38.58;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.51.54;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Reinstate reporting on the network card podule.
In the *PODULES code the loop counter goes from 0...maxpod-1 but the check to change the text to say "Network card" was checking against maxpod.
Ammended a few comment typos and shelved some unused files.

Version 1.65. Tagged as 'Podule-1_65'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        TTL     The Podule manager.
        SUBT    Star commands => Podule.s.Commands


CommandTable
        = "Podules", 0
        ALIGN
        DCD     DoStarPodules - Origin
        InfoWord 0, 0, International_Help
        DCD     SyntaxOfStarPodules - Origin
        DCD     HelpForStarPodules - Origin

        = "PoduleLoad", 0
        ALIGN
        DCD     DoStarPoduleLoad - Origin
        InfoWord 3, 2, International_Help
        DCD     SyntaxOfStarPoduleLoad - Origin
        DCD     HelpForStarPoduleLoad - Origin

        = "PoduleSave", 0
        ALIGN
        DCD     DoStarPoduleSave - Origin
        InfoWord 4, 3, International_Help
        DCD     SyntaxOfStarPoduleSave - Origin
        DCD     HelpForStarPoduleSave - Origin
null_string
        DCB     0
        ALIGN

; 8 Bytes of stack for the return of the description pointer and
; the podule number as a string.
;
; This is a *Command handler, so r0-r6 can be trashed. r7-r11 have to
; be preserved. Register allocation during this routine is:

; r8    Exclusive podule number limit (ie. 9 for Podules, -N for ROMs)
; r7    Podule number progression (+1 for Podules, -1 for Extension ROMs)
; r6    Current podule number (r3 tends to hold this for a while too)
; r5    Pointer to the generated description string
; r4    MessageTrans file token address.
; r0-r3 Much used for many things.


DoStarPodules   Entry "r7-r8", 8                        ; Stack frame for text conversions etc.
        LDR     wp, [ r12 ]

; Get Messages file open up front. This way we know we will not get
; "File not found" type errors when making Podule Manager SWIs.
        BL      open_message_file
        SWIVC   XPodule_ReturnNumber                    ; out: r0 = number of podules, r1 = number of extension ROMs
        EXIT    VS

        MOVS    r8, r0                                  ; Number of podules in R8 (limit)
        BEQ     switch_to_extn_roms                     ; There are zero podules

; Set up for doing Podules

        MOV     r7, #1                                  ; Current number direction
        MOV     r6, #0                                  ; Current Podule number in R6

next_podule_loop
        TEQ     r7, #1
        ADRNE   r4, Token_ExtROM                        ; or ExtROM as appropriate
        ADREQ   r4, Token_PodStd                        ; Set MsgTrans token for PodStd
  [     NetworkPodule
        LDR     r0, Capabilities
        ASSERT  NumberOfNetworkPodule = MaximumPodule-1
        LDR     r1, [r0, #Capability_Features]
        TST     r1, #Capability_NIC
        BEQ     %FT10
        LDR     r1, [r0, #Capability_PodCount]
        SUB     r1, r1, #1                              ; Natural numbers
        TEQ     r6, r1
        ADREQ   r4, Token_PodNet                        ; NIC supported AND this is the highest podule number
10
  ]
        MOV     r0, #Podule_ReadInfo_Description
        MOV     r1, sp                                  ; Place to return address
        MOV     r2, #4                                  ; Size of return buffer
        MOV     r3, r6                                  ; Podule number
  [  DebugCommands
        DLINE   "Calling SWI XPodule_ReadInfo"
  ]
        LDR     r12, AddressOfMyPrivateWord             ; Keep this
        SWI     XPodule_ReadInfo
        LDR     wp, [ r12 ]                             ; In case the workspace moves
  [  DebugCommands
        DLINE   "SWI XPodule_ReadInfo returns ", cc
        BVS     %16
        DLINE   "OK"
        B       %17
16
        DLINE   "an error: ", cc
        ADD     r14, r0, #4
        DSTRING r14
17
  ]
        ADDVS   r5, r0, #4                              ; Error becomes podule message
        LDRVC   r5, [ sp, #0 ]                          ; Get the returned pointer
  [  DebugCommands
        DREG    r5, "Description pointer is &"
  ]
        TEQ     r5, #0
        ADREQ   r5, null_string                         ; MessageTrans requires an empty string

; Having got the message, we now need to convert the podule number
; into a string before we can call MessageTrans. The number may be
; multi digit if we are dealing with extension ROMs here.

got_podule_message
        TEQ     r7, #1
        MOVEQ   r0, r6                                  ; Use actual podule number
        MVNNE   r0, r6                                  ; Extn. ROM, ~Number (-2->1, -3->2)
        MOV     r1, sp                                  ; Buffer on stack
        MOV     r2, #7                                  ; Size of buffer
        SWI     XOS_ConvertCardinal4
  [  DebugCommands
        DSTRING r0, "Podule number converts to: "
  ]

; At last we are in a position to make the call to translate and print
; the string!

        MOVVC   r0, r4                                  ; Token
        MOVVC   r1, r5                                  ; %0 -> Message for this podule, or null string
        MOVVC   r2, sp                                  ; %1 -> Podule number on stack
        BLVC    gs_lookup_print_string_two
        EXIT    VS

; OK, now it's time to go on to the next podule

        ADD     r6, r6, r7                              ; Increment/decrement podule number
        TEQ     r6, r8                                  ; Limit is exclusive (ie. 4 for 0-3)
        BNE     next_podule_loop                        ; Not got to limit yet
        CMP     r7, #-1                                 ; Have we done Extension ROMs yet?
        EXIT    EQ                                      ; If yes, then we are all done!

; Drop through - time to switch from podules to Extension ROMs

switch_to_extn_roms
        SWI     XPodule_ReturnNumber
        TEQ     r1, #0                                  ; Are there any Extension ROMs?
        BEQ     check_if_nothing_printed

        MOV     r6, #-2                                 ; Extension ROMs start from -2
        SUB     r8,  r6, r1                             ; Limit is exclusive, so 1 -> -3
        MOV     r7, #-1                                 ; Direction is now negative
        B       next_podule_loop                        ; Go and do the first extension ROM!

; We only get here when there are no Extension ROMs. We check how many
; podules there were (still in R8), and if there were none then we
; have not yet printed anything. This is poor - users like to get some
; output so we had better say something!

check_if_nothing_printed
        TEQ     r8, #0
        EXIT    NE                                      ; There were some podules
        ADR     r0, Token_NoPodsOrROMs
        MOV     r1, #0
        MOV     r2, #0
        BL      gs_lookup_print_string_two
        EXIT

        LTORG

; Data blocks for the MessageTrans tokens used for *Podules

Token_ExtROM
        DCB     "ExtROM", 0

Token_NoPodsOrROMs
        DCB     "NoPods", 0

Token_PodStd
        DCB     "PodStd", 0

Token_PodNet
        DCB     "PodNet", 0
        ALIGN

DoStarPoduleLoad ROUT
        ;       Syntax: *PoduleLoad <podule number> <filename> [<offset>]
        MOV     r6, lr
        LDR     wp, [ r12 ]
        MOV     r5, r1                                  ; Number of arguments
        MOV     r1, r0                                  ; Command tail
        MOV     r0, #10                                 ; Base
        SWI     XOS_ReadUnsigned
        MOVVS   pc, r6
        MOV     r3, r2
        [ DebugCommands
        DREG    r3, "Podule # = &"
        ]
        SUBS    r5, r5, #2                              ; Was there an offset ??
        BEQ     %60                                     ; With correct offset in R5
        MOV     r4, r1                                  ; Hold onto the name pointer
45                                                      ; Skip to the file name
        LDRB    r0, [ r1, #1 ] !
        TEQ     r0, #" "
        BEQ     %45
55                                                      ; Skip to spaces
        LDRB    r0, [ r1, #1 ] !
        TEQ     r0, #" "
        BNE     %55
        MOV     r0, #16
        SWI     XOS_ReadUnsigned
        MOVVS   pc, r6
        MOV     r5, r2                                  ; Save the offset
        MOV     r1, r4
60
        MOV     r0, #open_read :OR: open_mustopen :OR: open_nodir
        SWI     XOS_Find
        MOVVS   pc, r6
        MOV     r4, r0
        [ DebugCommands
        DREG    r4, "File handle = &"
        ]
        DEC     sp, 16
        MOV     r2, sp
        SWI     XPodule_ReadHeader
        INC     sp, 16
        BVS     CloseExit
        Push    "r0-r2"                                 ; save around call to ConvertR3ToPoduleNode
        BL      ConvertR3ToPoduleNode                   ; r3 on output = offset to podule node
        ADDVS   sp, sp, #3*4                            ; if error then junk stacked r0-r2
        BVS     CloseExit                               ; and exit
        Pull    "r0-r2"
        MOV     r0, r5                                  ; Offset
        ADD     r3, wp, r3
        LDR     r5, [ r3, #PoduleNode_LoaderOffset ]    ; offset in workspace of loader
        CMP     r5, #-1                                 ; TMD 16-Oct-91: test for no loader before adding wp
        ADREQ   Error, ErrorBlock_NoLdr
        BLEQ    copy_error_zero                         ; Sets the V bit
        BVS     CloseExit
        ADD     r5, wp, r5
        INC     r5, 4                                   ; Use the WriteByte entry
        Push    "r7-r11"
        MOV     r7, r4
        MOV     r9, r0                                  ; Offset
        LDR     r11, [ r3, #PoduleNode_CombinedAddress ]
 ; R5  = Call address
 ; R6  = Return address
 ; R7  = Handle
 ; R9  = Write address
 ; R10 = Trashable
 ; R11 = Hardware
        [ DebugCommands
        DREG r5, "Call address  = &"
        DREG r7, "Handle        = &"
        DREG r9, "Write address = &"
        DREG r11, "Hardware      = &"
        ]
20
        MOV     r1, r7
        SWI     XOS_BGet
        BVS     PullCloseExit
        BCS     PoduleExit                              ; End of file
        MOV     r1, r9
        MOV     lr, pc
        MOV     pc, r5
        INC     r9
        BVC     %20
PullCloseExit
        MOV     r4, r7
        Pull    "r7-r11"
CloseExit
        MOV     r5, Error
        MOV     r1, r4                                  ; Handle
        MOV     r0, #0                                  ; Close
        SWI     XOS_Find
        MOVVC   Error, r5
        SETV
        MOV     pc, r6

PoduleExit
  [  DebugCommands
        DLINE "Closing"
  ]
        MOV     r4, r7
        Pull    "r7-r11"
        MOV     r1, r4                                  ; Handle
        MOV     r0, #0                                  ; Close
        SWI     XOS_Find
  [  DebugCommands
        DLINE "OK"
  ]
        MOV     pc, r6

DoStarPoduleSave
        ;       Syntax: *PoduleSave <podule number> <filename> <size> [<offset>]
        MOV     r6, lr
        LDR     wp, [ r12 ]
        MOV     r5, r1                                  ; Number of arguments
        MOV     r1, r0                                  ; Command tail
        MOV     r0, #10                                 ; Base
        SWI     XOS_ReadUnsigned
        MOVVS   pc, r6
        MOV     r3, r2                                  ; Podule number as read in
        [ DebugCommands
        BREG    r3, "Podule # = &"
        ]
        MOV     r4, r1                                  ; Hold onto the name pointer
40                                                      ; Skip to the file name
        LDRB    r0, [ r1, #1 ] !
        TEQ     r0, #" "
        BEQ     %40
50                                                      ; Skip to spaces
        LDRB    r0, [ r1, #1 ] !
        TEQ     r0, #" "
        BNE     %50
        MOV     r0, #16
        SWI     XOS_ReadUnsigned
        MOVVS   pc, r6
        SUBS    r0, r5, #3                              ; Check for offset argument
        MOV     r5, r2                                  ; Save the size away
        [ DebugCommands
        DREG    r5, "Size = &"
        ]
        BEQ     %75                                     ; No argument
        MOV     r0, #16
        SWI     XOS_ReadUnsigned
        MOVVS   pc, r6
        MOV     r0, r2
75
        MOV     r1, r4                                  ; File name pointer
        MOV     r4, r0                                  ; Offset
        MOV     r0, #open_write :OR: open_mustopen :OR: open_nodir
        SWI     XOS_Find
        MOVVS   pc, r6
        MOV     r1, r4                                  ; Offset
        MOV     r4, r0                                  ; Handle
        [ DebugCommands
        BREG    r4, "File handle = &"
        ]
        DEC     sp, 16
        MOV     r2, sp
        SWI     XPodule_ReadHeader
        INC     sp, 16
        BVS     CloseExit
        [ DebugCommands
        DLINE   "Header read from podule"
        ]
        Push    "r0-r2"                                 ; save around call to ConvertR3ToPoduleNode
        BL      ConvertR3ToPoduleNode                   ; r3 on output = offset to podule node
        ADDVS   sp, sp, #3*4                            ; if error then junk stacked r0-r2
        BVS     CloseExit                               ; and exit
        Pull    "r0-r2"
        [ DebugCommands
        DREG    r3, "Podule node offset = &"
        ]
        MOV     r0, r5                                  ; The size
        ADD     r3, wp, r3                              ; Convert to address of podule node
        LDR     r5, [ r3, #PoduleNode_LoaderOffset ]    ; offset in workspace of loader
        CMP     r5, #-1                                 ; TMD 16-Oct-91: test for no loader before adding wp
        ADREQ   Error, ErrorBlock_NoLdr
        BLEQ    copy_error_zero                         ; Always sets the V bit
        BVS     CloseExit
        ADD     r5, wp, r5
        [ DebugCommands
        DREG    r5, "Address of loader = &"
        ]
        Push    "r7-r11"
        MOV     r7, r4
        ADD     r8, r0, r1                              ; The end address
        MOV     r9, r1                                  ; Offset
        LDR     r11, [ r3, #PoduleNode_CombinedAddress ]
 ; R5  = Call address
 ; R6  = Return address
 ; R7  = Handle
 ; R8  = End address
 ; R9  = Read address
 ; R10 = Trashable
 ; R11 = Hardware
30
        TEQ     r8, r9
        BEQ     PoduleExit                              ; All done
        MOV     r1, r9
        MOV     lr, pc
        MOV     pc, r5
        INC     r9
        BVS     PullCloseExit
        MOV     r1, r7
        SWI     XOS_BPut
        BVC     %30                                     ; Get some more
        B       PullCloseExit

        END
@


4.6
log
@Prised out the last remaining IOMD assumptions,now follows a policy of
autodetection described in "Docs.Policy",which included eliminating some
static tables which were produced at runtime.
The static tables are now all in s.Tables.
The podule node list is generated at run time since so many of the node
entries needed correction depending on where "SSpaceStart" is.
Though not explicitly mentioned in the PRMs,where an IO area doesn't
exist for a given IOMD varient zero is returned by Podule_ReadInfo to
denote it does not exist
Support for Podule_SetSpeed helpers added,thus IOMD abstracting the way
you set EASI cycle speeds.

Version 1.60. Tagged as 'Podule-1_60'
@
text
@d87 1
d90 1
a91 1
10
a184 1
        ALIGN
a187 1
        ALIGN
a190 1
        ALIGN
@


4.5
log
@Made use of "PoduleReadOnly" and "AddressRange" loader error messages,
added to messages file.
Network and ExtROM internal loaders now return full message strings
rather than the "Bad" token!
Presence of absence of ExtROMs/EASI/NIC/IOC and MEMC podule support is
deduced at runtime,and the logical addresses requested from the Kernel
by OS_Memory.EASI,ExtROMs and NIC remain assembly time options though
just to reduce the size of the module a bit.
An assortment of internal variables have been altered to have 0 or -1 as
their unused value rather than &80000000 as this may be a candidate for
genuine loader addresses in future.
First pass at removing IOMD specific assumptions in the module.

Version 1.59. Tagged as 'Podule-1_59'
@
text
@a63 1

a78 1
  [ {TRUE}                                              ; get ReadInfo Description for extension ROMs just like podules
a79 5
  |
        ADRNE   r5, null_string
        BNE     got_podule_message
        ADR     r4, Token_PodStd                        ; Set MsgTrans token for PodStd
  ]
d81 8
a88 2
        TEQ     r6, #NumberOfPodules
        ADREQ   r4, Token_PodNet
d90 1
@


4.4
log
@* Converted to be 32-bit compatible.
* Suppresses non-32-bit expansion card loaders (a 32-bit compatible loader
  must have the magic word "32OK" after the 4 entry points).
* Lots of OS_SynchroniseCodeAreas calls added. This module was far from
  StrongARM-compatible - I'm amazed it worked at all; indeed it often failed
  when softloaded.

Needs a new Hdr:NewErrors with the "Loader is not 32-bit compatible" error.

Version 1.54. Tagged as 'Podule-1_54'
@
text
@d15 3
a17 1
 SUBT => &.Arthur.Podule.Commands
d80 1
a80 1
  [ {TRUE}						; get ReadInfo Description for extension ROMs just like podules
d87 1
a87 1
  [	NetworkPodule
d248 1
a248 1
        TEQ     r5, #NIL                                ; TMD 16-Oct-91: test for NIL before adding wp
d371 1
a371 1
        TEQ     r5, #NIL                                ; TMD 16-Oct-91: test for NIL BEFORE adding on wp
@


4.3
log
@  Added fake podule header for EtherI. Converted to ObjAsm.
Detail:
  The Customer F 5 Ethernet NC doesn't have a podule ROM fitted, so we
  provide a fake podule header in podule manager.
  This is used if FakePodule0 is set in the machine header file
  or if FakePodule is passed in from the Makefile (FakePodule overrides
  the FakePodule0).
  It should be set to ProdType_EtherI to fake an EtherI podule but
  other values are possible, eg for MPEG).
Admin:
  Tested OK in Customer F 5 NC.

Version 1.51. Tagged as 'Podule-1_51'
@
text
@d287 2
a288 1
        ORRS    pc, r6, #VFlag
@


4.2
log
@Module merged
@
text
@d17 1
d57 1
a57 1
DoStarPodules   ENTRY "r7-r8", 8                        ; Stack frame for text conversions etc.
@


4.1
log
@Initial revision
@
text
@d77 3
d83 2
a84 1
        [       NetworkPodule
d87 1
a87 1
        ]
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a76 3
  [ {TRUE}						; get ReadInfo Description for extension ROMs just like podules
        ADREQ   r4, Token_PodStd                        ; Set MsgTrans token for PodStd
  |
d80 1
a80 2
  ]
  [	NetworkPodule
d83 1
a83 1
  ]
@


4.1.5.1
log
@Import from SrcFiler
@
text
@a76 3
  [ {TRUE}						; get ReadInfo Description for extension ROMs just like podules
        ADREQ   r4, Token_PodStd                        ; Set MsgTrans token for PodStd
  |
d80 1
a80 2
  ]
  [	NetworkPodule
d83 1
a83 1
  ]
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
