head	1.6;
access;
symbols
	PCI-0_15:1.6
	PCI-0_14:1.6
	PCI-0_13:1.6
	PCI-0_12:1.6
	PCI-0_11:1.6
	PCI-0_10:1.6
	PCI-0_09:1.5
	PCI-0_08:1.4
	PCI-0_07:1.4
	RO_5_07:1.4
	PCI-0_06:1.4
	PCI-0_05:1.4
	PCI-0_04:1.4
	PCI-0_03:1.3
	PCI-0_02:1.2
	PCI-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2011.12.10.21.00.57;	author jlee;	state Exp;
branches;
next	1.5;
commitid	TMI5yVR1nEylBGKv;

1.5
date	2009.06.16.00.15.07;	author bavison;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.22.11.28.01;	author kbracey;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.22.21.53.55;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.14.20.29.25;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.13.21.30.44;	author kbracey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.11.13.21.30.44;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Use OS_Heap 7 for allocating IO memory
Detail:
  s/Commands, s/GetAll, s/Memory, s/Module - Now uses OS_Heap 7 for allocating aligned memory blocks instead of allocating overly large areas to perform manual alignment. Falls back to old method if OS_Heap 7 unavailable.
  Makefile - Removed garbage from end of "dynamic dependencies" line.
Admin:
  Tested in OMAP3 ROM & Tungsten ROM softload
  PCI shared memory DA now about 300k smaller on a typical Iyonix.


Version 0.10. Tagged as 'PCI-0_10'
@
text
@# Copyright 2002 Tematic Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for PCI
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 06-Jun-00  SNB          Recreated using makefile fragments

COMPONENT = PCI

#
# Program specific options:
#
HEADER1    = ${COMPONENT}
ASMCHEADER1= ${COMPONENT}
EXPORTS    = ${C_EXP_HDR}.${ASMCHEADER1}

TOKHELPSRC = ${TOKENSOURCE}
HELPSRC    = HelpTexts
ROM_SOURCE = GetAll.s

ASFLAGS    = ${OPTIONS}

include StdTools
include AAsmModule

#
# Generic rules:
#
clean::
        ${WIPE} rm ${WFLAGS}
        @@@@echo ${COMPONENT}: cleaned 

# Dynamic dependencies:
@


1.5
log
@  No longer uses unaligned loads on ARMv6 or later
Detail:
  s.Interface line 794: changed to use LDRH - I really can't imagine anyone
    inventing an ARMv3 device with a PCI bus.
  s.Interface line 834: don't rely on rotating loads if ARMv6 is a build
    target - use aligned LDR and explicit rotate instead.
  Added ENTRY directive to permit building of GPA debug listing.
  CPU version is no longer specified in the makefile - it's better to inherit
  it from the build environment now that we actually set it appropriately.
Admin:
  Builds but not tested.

Version 0.09. Tagged as 'PCI-0_09'
@
text
@d49 1
a49 1
# Dynamic dependencies:o.Tungsten.PCISA: s.GetAll
@


1.4
log
@*PCIdevices now more informative about bridges and capabilities.

Version 0.04. Tagged as 'PCI-0_04'
@
text
@d37 1
a37 1
ASFLAGS    = ${OPTIONS} -cpu 4
@


1.3
log
@Now reports the address ranges associated with bridges.
Fix to the Service_PCI calls made - both were going out with the
same reason code due to some copy and paste magic.

Version 0.03. Tagged as 'PCI-0_03'
@
text
@a49 40
o.Tungsten.PCISA: Hdr:ListOpts
o.Tungsten.PCISA: Hdr:Macros
o.Tungsten.PCISA: Hdr:System
o.Tungsten.PCISA: Hdr:SWIs
o.Tungsten.PCISA: Hdr:CPU.Generic26
o.Tungsten.PCISA: Hdr:Machine.<Machine>
o.Tungsten.PCISA: Hdr:Machine.Machine
o.Tungsten.PCISA: Hdr:CPU.Generic32
o.Tungsten.PCISA: Hdr:IO.GenericIO
o.Tungsten.PCISA: Hdr:RISCOS
o.Tungsten.PCISA: Hdr:Machine.<Machine>
o.Tungsten.PCISA: Hdr:Machine.Machine
o.Tungsten.PCISA: Hdr:IO.IOMD
o.Tungsten.PCISA: Hdr:MEMM.ARM600
o.Tungsten.PCISA: Hdr:CMOS
o.Tungsten.PCISA: Hdr:ModHand
o.Tungsten.PCISA: Hdr:Debug
o.Tungsten.PCISA: Hdr:PCI
o.Tungsten.PCISA: Hdr:FSNumbers
o.Tungsten.PCISA: Hdr:HighFSI
o.Tungsten.PCISA: Hdr:NewErrors
o.Tungsten.PCISA: Hdr:Services
o.Tungsten.PCISA: Hdr:Tokens
o.Tungsten.PCISA: Hdr:Proc
o.Tungsten.PCISA: Hdr:Symbols
o.Tungsten.PCISA: Hdr:HALEntries
o.Tungsten.PCISA: Hdr:ResourceFS
o.Tungsten.PCISA: Hdr:MsgTrans
o.Tungsten.PCISA: VersionASM
o.Tungsten.PCISA: s.Structures
o.Tungsten.PCISA: s.Module
o.Tungsten.PCISA: s.Interface
o.Tungsten.PCISA: s.Scan
o.Tungsten.PCISA: s.Commands
o.Tungsten.PCISA: s.Memory
o.Tungsten.PCISA: s.Errors
o.Tungsten.PCISA: HelpTexts
o.Tungsten.PCISA: s.MsgCode

# Dynamic dependencies:
@


1.2
log
@Removed unused HelpTokens
Removed unused oInterface
Implemented PCI_MemoryRead,PCI_MemoryWrite,PCI_EnumerateFunctions.
Resync'd docs with implementation,tidied them up,and expanded some of
the descriptions.
Swapped a couple of BHS for BHI so that PCI_FindByXXX can find the last
thing in the list now.
Added new service calls to lookup name and vendor strings.
Added vendor string reason to ReadInfo.
Now *PCIDEVICES and *PCIINFO report the vendor string and description if
available,else default to the class code.

Version 0.02. Tagged as 'PCI-0_02'
@
text
@d49 41
a89 1
# Dynamic dependencies:@


1.1
log
@Initial revision
@
text
@d49 1
a49 1
# Dynamic dependencies:
@


1.1.1.1
log
@Initial import
@
text
@@
