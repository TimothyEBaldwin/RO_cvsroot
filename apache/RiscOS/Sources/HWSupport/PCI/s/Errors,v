head	1.3;
access;
symbols
	PCI-0_15:1.3
	PCI-0_14:1.3
	PCI-0_13:1.3
	PCI-0_12:1.3
	PCI-0_11:1.2
	PCI-0_10:1.2
	PCI-0_09:1.2
	PCI-0_08:1.2
	PCI-0_07:1.2
	RO_5_07:1.2
	PCI-0_06:1.2
	PCI-0_05:1.2
	PCI-0_04:1.2
	PCI-0_03:1.2
	PCI-0_02:1.2
	PCI-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.11.27.23.38.11;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	TEeRjLBhRjyVESZx;

1.2
date	2002.11.14.20.29.27;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.13.21.30.44;	author kbracey;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.11.13.21.30.44;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix for nonsense error and implement a 'todo' action
An (unlikely) error during ScanBus would end up with an error block pointing to &00000004 as although the V bit was carefully preserved, R0 wasn't.
Add a RAM flag to remember if the module is operating in no-PCI-bus mode (for PCI_RAMAlloc and PCI_RAMFree) so that the bus access SWIs can return a meaningful error.

Resources/UK/Messages, Errors.s:
 New error message "NoPCIBus".
GetAll.s:
 Remove unnecessary header includes, and use {FALSE} and {TRUE}.
Module.s:
 Record result of OS_ReadSysInfo call to determine if there's a PCI bus or not.
 Do fail to initialise in the RAM loading case if ResourceFS register fails.
Scan.s:
 Preserve R0 if ScanBus returns an error.
 Add some comments.
Interface.s:
 Inspect flag and report error for those SWIs that are harmful when no bus exists, anything going via ValidateHandle doesn't need to since pci_handles will be 0 in that case.
 Relocate FindFreeHandle to Scan.s.

Tested briefly with and without the "got PCI" bit set, showing the appropriate error being returned.

Version 0.12. Tagged as 'PCI-0_12'
@
text
@; Copyright 2002 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    => PCI.s.Errors
        OPT     OptPage

        ^       ErrorBase_PCI
        AddError                NoSuchPCI, "PCI device doesn't exist"
        AddError                BadAccessSize, "Illegal access size"
        AddError                NoSuchAddr, "Address mapping doesn't exist"
        AddError                NoPCIBus, "No PCI bus declared"

        MakeErrorBlock          UnknownAreaHandler
        MakeInternatErrorBlock  BadAccessSize
        MakeInternatErrorBlock  NoSuchAddr
        MakeInternatErrorBlock  NoSuchPCI
        MakeInternatErrorBlock  NoPCIBus
        MakeInternatErrorBlock  BadRead
        MakeInternatErrorBlock  ECNoNet
        MakeInternatErrorBlock  NDallas
        MakeInternatErrorBlock  CDATBufferOverflow,,"BufOFlo"
        MakeErrorBlock          ModuleBadSWI

        END
@


1.2
log
@Removed unused HelpTokens
Removed unused oInterface
Implemented PCI_MemoryRead,PCI_MemoryWrite,PCI_EnumerateFunctions.
Resync'd docs with implementation,tidied them up,and expanded some of
the descriptions.
Swapped a couple of BHS for BHI so that PCI_FindByXXX can find the last
thing in the list now.
Added new service calls to lookup name and vendor strings.
Added vendor string reason to ReadInfo.
Now *PCIDEVICES and *PCIINFO report the vendor string and description if
available,else default to the class code.

Version 0.02. Tagged as 'PCI-0_02'
@
text
@d22 1
d28 6
a33 12
        MakeInternatErrorBlock          BadRead
        MakeInternatErrorBlock          ECNoNet
        MakeInternatErrorBlock          NDallas

        MakeErrorBlock                  ModuleBadSWI

ErrorCDATBufferOverflow
        DCD     ErrorNumber_CDATBufferOverflow
        DCB     "BufOFlo", 0
        ALIGN


@


1.1
log
@Initial revision
@
text
@a22 1
;        MakeErrorBlock          Channel
a26 8
;        MakeInternatErrorBlock          BadHandle
;        MakeInternatErrorBlock          BadPod
;        MakeInternatErrorBlock          NoPod
;        MakeInternatErrorBlock          NotExt
;        MakeInternatErrorBlock          NotAcrn
;        MakeInternatErrorBlock          NoLdr
;        MakeInternatErrorBlock          InLdr
;        MakeInternatErrorBlock          BadChnk
a27 5
;        MakeInternatErrorBlock          BdSpeed
;        MakeInternatErrorBlock          NotEASI
;        [       EASISpace
;        MakeInternatErrorBlock          SpeedNo
;        ]
a29 1
;        MakeInternatErrorBlock          Ldr26
@


1.1.1.1
log
@Initial import
@
text
@@
