head	4.4;
access;
symbols
	Mouse-0_11:4.4
	Mouse-0_10:4.3
	Mouse-0_09:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2012.07.01.16.17.55;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	Dwnm6iVtkZ3FtSaw;

4.3
date	2001.03.16.15.58.07;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	2000.04.25.13.29.48;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.36.22;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.36.22;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.29.39;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.54.19;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.48.57;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Mouse name made more descriptive
Standard->Quadrature, it was hardly standard even in 1994.

Version 0.11. Tagged as 'Mouse-0_11'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.Mouse

;---------------------------------------------------------------------------
; PointerRequest
;       In:     r0 = reason code 0
;               r1 = device type
;       Out:    r2 = signed 32-bit X movement
;               r3 = signed 32-bit Y movement
;
;       Handle PointerV request calls or pass on others.
;
PointerRequest
        TEQ     r0, #PointerReason_Request      ; If not requesting then
        BNE     PointerIdentify                 ;   try identify.
        TEQ     r1, #PointerDevice_QuadMouse    ; If not ours then
        MOVNE   pc, lr                          ;   pass on call.

        Push    "r10,r11"

        IOMDBase lr
        ADD     lr, lr, #IOMD_MOUSEX
        LDMIA   lr, {r2,r3}                     ; Get X,Y counters.

        LDR     lr, LastX                       ; Get last X counter value.
        STR     r2, LastX                       ; Remember current for next time.
        MOV     r2, r2, LSL #16                 ; Only interested in bottom 16 bits.
        SUB     r2, r2, lr, LSL #16             ; Subtract old from new.
        MOV     r2, r2, ASR #16                 ; Return signed X movement.

        LDR     lr, LastY                       ; Get last X counter value.
        STR     r3, LastY                       ; Remember current for next time.
        MOV     r3, r3, LSL #16                 ; Only interested in bottom 16 bits.
        SUB     r3, r3, lr, LSL #16             ; Subtract old from new.
        MOV     r3, r3, ASR #16                 ; Return signed X movement.

        ReadButtons r10                         ; Get button states into r10.
        LDRB    r11, LastButtons                ; Get last states.
        EORS    r11, r11, r10                   ; Get differences.
        Pull    "r10,r11,pc",EQ                 ; Claim call if none.

        STRB    r10, LastButtons
        Push    "r0,r1,r9"

        TST     r11, #4                          ; Check left (SELECT).
        BEQ     %FT10

        TST     r10, #4
        MOVEQ   r0, #1
        MOVNE   r0, #2
        MOV     r1, #&70
        MOV     r9, #KEYV
        SWI     XOS_CallAVector
10
        TST     r11, #2                          ; Check centre (MENU).
        BEQ     %FT20

        TST     r10, #2
        MOVEQ   r0, #1
        MOVNE   r0, #2
        MOV     r1, #&71
        MOV     r9, #KEYV
        SWI     XOS_CallAVector
20
        TST     r11, #1                          ; Check right (ADJUST).
        Pull    "r0,r1,r9-r11,pc",EQ

        TST     r10, #1
        MOVEQ   r0, #1
        MOVNE   r0, #2
        MOV     r1, #&72
        MOV     r9, #KEYV
        SWI     XOS_CallAVector
        Pull    "r0,r1,r9-r11,pc"                ; Claim call.

;---------------------------------------------------------------------------
; PointerIdentify
;       In:     r0 = reason code 1
;               r1 = pointer to device type record (or 0)
;       Out:    r1 = pointer to updated list
;
;       Identify our pointer device.
;
PointerIdentify
        TEQ     r0, #PointerReason_Selected     ; If selected then
        BEQ     PointerSelected                 ;   initialise.
        TEQ     r0, #PointerReason_Identify     ; If not identify then
        MOVNE   pc, lr                          ;   pass on call.

        Entry   "r0-r3"

        Debug   mod,"QM_PointerIdentify"

        ADR     r1, DeviceName
  [ international
        MOV     r2, #0
        BL      MsgTrans_Lookup                 ; r2->device name looked up
        EXIT    VS                              ; If lookup fails then don't add our record to list.

        BL      strlen                          ; r3=length of string pointed to by r2
        ADD     r3, r3, #MinPointerRecordSize   ; Includes byte for string terminator.
        MOV     r1, r2
  |
        MOV     r3, #DeviceNameEnd-DeviceName+MinPointerRecordSize
  ]
        MOV     r0, #ModHandReason_Claim        ; Claim space for a device type record.
        SWI     XOS_Module
        EXIT    VS

        LDR     r0, [sp, #4]                    ; Get back pointer to list we were passed.
        STR     r0, [r2, #PointerNext]          ; Tag it onto ours.
        MOV     r0, #0
        STR     r0, [r2, #PointerFlags]         ; No flags.
        MOV     r0, #PointerDevice_QuadMouse    ; Set device type.
        STRB    r0, [r2, #PointerType]

        ADD     r0, r2, #PointerName
        BL      strcpy                          ; Copy name into record (r1 to r0).
        STR     r2, [sp, #4]                    ; Pass on updated record pointer.

        EXIT

DeviceName
 [ international
        DCB     "DevName",0
 |
        DCB     "Quadrature mouse"
DeviceNameEnd
        DCB     0
 ]
        ALIGN

strlen
; In:   r2->control char terminated string
; Out:  r3=length of string
        Entry   "r2"
        MOV     r3, #0
01
        LDRB    lr, [r2], #1
        CMP     lr, #" "
        ADDCS   r3, r3, #1
        BCS     %BT01
        EXIT

strcpy
; In:   r0->null terminated destination string
;       r1->control char terminated source string
        Entry   "r0,r1"
01
        LDRB    lr, [r1], #1
        CMP     lr, #" "
        STRCSB  lr, [r0], #1
        BCS     %BT01
        MOV     lr, #0
        STRB    lr, [r0]
        EXIT

;---------------------------------------------------------------------------
; PointerSelected
;       In:     r1 = device type
;
;       Initialise mouse driver.
;
PointerSelected
        TEQ     r1, #PointerDevice_QuadMouse    ; If not ours then
        MOVNE   pc, lr                          ;   pass on call.

        Entry   "r0"

        Debug   mod,"QM_PointerSelected"

        IOMDBase lr
        MOV     r0, #0
        STR     r0, [lr, #IOMD_MOUSEX]          ; Set counters to 0.
        STR     r0, [lr, #IOMD_MOUSEY]

        STR     r0, LastX                       ; Set last values to 0.
        STR     r0, LastY
        STRB    r0, LastButtons

        EXIT

        END
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.10. Tagged as 'Mouse-0_10'
@
text
@d140 1
a140 1
        DCB     "Standard mouse"
@


4.2
log
@Changed to use srccommit.
Service call table added.
32-bit compatible.

Version 0.09. Tagged as 'Mouse-0_09'
@
text
@d103 1
a103 1
        ENTRY   "r0-r3"
d149 1
a149 1
        ENTRY   "r2"
d161 1
a161 1
        ENTRY   "r0,r1"
d181 1
a181 1
        ENTRY   "r0"
@


4.1
log
@Initial revision
@
text
@d30 1
a30 1
        MOVNES  pc, lr                          ;   pass on call.
d101 1
a101 1
        MOVNES  pc, lr                          ;   pass on call.
d111 1
a111 1
        EXITS   VS                              ; If lookup fails then don't add our record to list.
d121 1
a121 1
        EXITS   VS
d134 1
a134 1
        EXITS
d179 1
a179 1
        MOVNES  pc, lr                          ;   pass on call.
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
