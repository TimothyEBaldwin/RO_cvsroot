head	4.5;
access;
symbols
	Mouse-0_11:4.5
	Mouse-0_10:4.3
	Mouse-0_09:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2012.07.01.16.17.55;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	Dwnm6iVtkZ3FtSaw;

4.4
date	2001.06.21.15.03.11;	author mstephen;	state Exp;
branches;
next	4.3;

4.3
date	2001.03.16.15.58.06;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	2000.04.25.13.29.48;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.36.22;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.36.22;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.29.36;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.54.17;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.48.56;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Mouse name made more descriptive
Standard->Quadrature, it was hardly standard even in 1994.

Version 0.11. Tagged as 'Mouse-0_11'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.ModHead

        ASSERT  (.=Module_BaseAddr)

        DCD     0                               ; Start
        DCD     Init           - Module_BaseAddr
        DCD     Die            - Module_BaseAddr
        DCD     Service        - Module_BaseAddr
        DCD     Title          - Module_BaseAddr
        DCD     Helpstr        - Module_BaseAddr
        DCD     0                               ; Helptable
        DCD     0                               ; SWIbase
        DCD     0                               ; SWIhandler
        DCD     0                               ; SWInames
        DCD     0                               ; SWIdecode
        DCD     0                               ; Messages
        DCD     Flags          - Module_BaseAddr

;---------------------------------------------------------------------------
Title   DCB     "Mouse",0
Helpstr DCB     "Mouse",9,9,"$Module_HelpVersion",0
                ALIGN
Flags
 [ No32bitCode
        DCD     0
 |
        DCD     ModuleFlag_32bit
 ]

;---------------------------------------------------------------------------
;       Module initialisation point.
;
Init
        Entry
;
; Check machine type
;

        MOV     r0, #2                          ;Check main hardware details
        SWI     XOS_ReadSysInfo
        EXIT    VS
                                                ;R0 bits 8..15 give I/O control chip type
        AND     r0, r0, #&0000FF00              ;  0=IOC, 1=IOMD
        TEQ     r0,     #&00000100              ;  must have IOMD
        BNE     %FT99                           ;NE, wrong h/w

        ANDS    r2, r2, #&0000FF00              ;Look at IOMD variant field,
                                                ; we need one with quadrature mouse support
        BNE     %FT99                           ;NE, wrong h/w
;
; Hardware OK
;
        LDR     r2, [r12]                       ; Have we already got a workspace ?
        CMP     r2, #0
        BNE     %FT01

        MOV     r0, #ModHandReason_Claim
        LDR     r3, =max_running_work
        SWI     XOS_Module                      ; Claim workspace.
        EXIT    VS

        STR     r2, [r12]                       ; Store workspace pointer.
01
        MOV     r12, r2

        ;get IOMD logical address (variable for HAL kernels)
        MOV     r0, #9                          ; read controller presence and base
        MOV     r1, #4:SHL:8                    ; IOMD
        SWI     XOS_Memory
        MOVVS   r1, #IOMD_Base                  ; old kernels won't know this reason code
        STR     r1, IOMDlogical                 ; won't be 0, we've already established there is an IOMD

        ;get button latchy thing logical address (variable for HAL kernels)
        MOV     r0, #13                         ; find/map IO
        LDR     r1, =&03310000                  ; physical address
        MOV     r2, #4                          ; size
        SWI     XOS_Memory                      ; will return an error on non-HAL kernel (unknow reason code)
        MOVVS   r3, r1                          ; and then can assume logical address same as physical
        STR     r3, ButtonLatchyThing

 [ standalone
        ADR     r0, resourcefsfiles
        SWI     XResourceFS_RegisterFiles
 ]

        MOV     r0, #0                          ; Initialise workspace.
 [ international
        STR     r0, message_file_open
 ]

        BL      StartUp
        BLVS    ShutDown
        EXIT


; come here if inappropriate hardware for mouse module to operate

99
        ADR     r0, ErrorBlock_BadHard
        MOV     r1, #0                  ; only use global message file
        MOV     r2, #0                  ; use MessageTrans buffer
        MOV     r4, #0                  ; don't substitute anything
        MOV     r5, #0
        MOV     r6, #0
        MOV     r7, #0
        SWI     XMessageTrans_ErrorLookup
        EXIT

        MakeErrorBlock  BadHard


;---------------------------------------------------------------------------
;       Start up code.
;
StartUp
        Entry   "r1,r2"

        Debug   mod,"QM_StartUp"

        BL      ClaimVectors

        MOVVC   r0, #0                          ; Get current pointer type.
        SWIVC   XOS_Pointer
        MOVVC   r1, r0
        BLVC    PointerSelected                 ; Enable if it is one of ours.

        EXIT

;---------------------------------------------------------------------------
;       Claim vectors.
;
ClaimVectors
        Entry   "r0-r2"

        MOV     r0, #PointerV
        ADR     r1, PointerRequest
        MOV     r2, r12
        SWI     XOS_Claim

        EXIT

;---------------------------------------------------------------------------
;       Release vectors.
;
ReleaseVectors
        Entry   "r0-r2"

        MOV     r0, #PointerV
        ADR     r1, PointerRequest
        MOV     r2, r12
        SWI     XOS_Release

        EXIT

;---------------------------------------------------------------------------
;       Service handler.
;
        ASSERT  Service_Reset < Service_ResourceFSStarting
ServiceTable
        DCD     0
        DCD     ServiceEntry - Module_BaseAddr
        DCD     Service_Reset
        DCD     Service_ResourceFSStarting
        DCD     0

        DCD     ServiceTable - Module_BaseAddr
Service
        MOV     r0, r0
ServiceEntry
        LDR     r12, [r12]
        CMP     r12, #0
        MOVEQ   pc, lr                          ;Quit if dormant

        TEQ     r1, #Service_Reset
        BEQ     StartUp

 [ standalone
        TEQ     r1, #Service_ResourceFSStarting
        MOVNE   pc, lr

        Entry   "r0-r3"
        ADR     r0, resourcefsfiles
        MOV     lr, pc
        MOV     pc, r2
        EXIT
 |
        MOV     pc, lr
 ]

;---------------------------------------------------------------------------
;       Killing the module.
;
Die
        Entry

        LDR     r12, [r12]
        CMP     r12, #0
        Pull    "pc",EQ

        BL      ShutDown

        CLRV
        EXIT

;---------------------------------------------------------------------------
;       Tidy up before dying.
;       out:  preserves all registers and flags.
;
ShutDown
        EntryS  "r0-r2"

        Debug   mod,"QM_ShutDown"

        BL      ReleaseVectors                  ; Release vectors if claimed.

 [ international
        LDR     r0, message_file_open           ; Close the message file if it's open.
        TEQ     r0, #0
        ADRNE   r0, message_file_block
        SWINE   XMessageTrans_CloseFile
 ]

 [ standalone
        ADR     r0, resourcefsfiles
        SWI     XResourceFS_DeregisterFiles
 ]

        EXITS                                   ; Ignore errors, preserve flags.

        END
@


4.4
log
@Changes to allow for logical addresses of IOMD and
ButtonLatchyThing register to be run-time determined.
This is so that it still works on a HALised kernel with
IOMD HAL. On old kernel, the pre-determined fixed
logical addresses will still be used.

Tested on a HAL/32bit desktop (Risc PC) and softloaded
on RISC OS 3.71

Version 0.10. Not tagged
@
text
@a115 1
        MOV     r3, #0                  ; buffer size (irrelevant)
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.10. Tagged as 'Mouse-0_10'
@
text
@d80 15
@


4.2
log
@Changed to use srccommit.
Service call table added.
32-bit compatible.

Version 0.09. Tagged as 'Mouse-0_09'
@
text
@a15 1
        LEADR   Module_LoadAddr
d35 1
a35 1
Helpstr DCB     "Mouse",9,9,"$Module_MajorVersion ($Module_Date)",0
d48 1
a48 1
        ENTRY
d116 1
a116 1
        ENTRY   "r1,r2"
d133 1
a133 1
        ENTRY   "r0-r2"
d146 1
a146 1
        ENTRY   "r0-r2"
d181 1
a181 1
        ENTRY   "r0-r3"
d194 1
a194 1
        ENTRY
@


4.1
log
@Initial revision
@
text
@d31 2
a32 2
        DCD     0
        DCD     0
d36 1
a36 1
Helpstr DCB     "Mouse",9,9,"$VString ($Date)",0
d38 6
d154 1
a154 1
        EXITS
d159 9
d169 2
d173 1
a173 1
        MOVEQS  pc, lr                          ;Quit if dormant
d180 1
a180 1
        MOVNES  pc, lr
d186 1
a186 1
        EXITS
d188 1
a188 1
        MOVS    pc, lr
d199 1
a199 1
        Pull    "pc",EQ,^
d203 2
a204 1
        EXITS
d211 1
a211 1
        ENTRY   "r0-r2"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
