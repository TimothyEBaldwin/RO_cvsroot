head	4.1;
access;
symbols
	DeviceFS-0_73:4.1
	DeviceFS-0_72:4.1
	DeviceFS-0_71:4.1
	DeviceFS-0_70:4.1
	DeviceFS-0_69:4.1
	DeviceFS-0_68:4.1
	RO_5_07:4.1
	DeviceFS-0_67:4.1
	DeviceFS-0_66:4.1
	DeviceFS-0_65:4.1
	DeviceFS-0_64:4.1
	DeviceFS-0_63:4.1
	DeviceFS-0_62:4.1
	DeviceFS-0_61:4.1
	DeviceFS-0_60:4.1
	DeviceFS-0_59:4.1
	DeviceFS-0_58:4.1
	DeviceFS-0_57:4.1
	DeviceFS-0_56:4.1
	DeviceFS-0_55:4.1
	DeviceFS-0_54:4.1
	DeviceFS-0_53:4.1
	DeviceFS-0_52:4.1
	DeviceFS-0_51:4.1
	DeviceFS-0_50:4.1
	dellis_autobuild_BaseSW:4.1
	DeviceFS-0_49:4.1
	DeviceFS-0_48:4.1
	sbrodie_sedwards_16Mar2000:4.1
	DeviceFS-0_47:4.1
	dcotton_autobuild_BaseSW:4.1
	DeviceFS-0_46:4.1
	Ursula_merge:4.1
	DeviceFS-0_45:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	DeviceFS-0_44:4.1
	DeviceFS-0_43:4.1
	DeviceFS-0_42:4.1
	DeviceFS-0_41:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1
	Spinner:4.1.0.8
	Spin_merge:4.1
	Spin_merge_4Mar1998:4.1.7.1
	Spinner_4Mar1998:4.1.7
	DeviceFS_0_36:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Ursula:4.1.0.4
	Spin_merge_19May97:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula_bp:4.1
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.35.33;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.35.33;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.20.13;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.49.00;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.44.30;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@> Special

Title: DeviceFS special field handling
Authors: David De Vorchik, Tim Dobson
History:
        16-Apr-91 DDV Created.
        20-Apr-91 DDV Changed to cope with new improved special fields.
        20-Apr-91 DDV Added note about GSTrans escapes not yet implemented.
        29-May-91 TMD Corrected some typos.


INTRODUCTION
------------

Special fields within DeviceFS are commonly used to specify parameters to
the device, ie what buffers to be used, if the device should be flushing
when a stream is closed and so on.

The device can specifiy a validation string which is used to parse the
special field when the stream is being opened.  If this is present then
DeviceFS will parse the string and return a block of data relating to the
string's contents.  This data will remain intact until the stream is closed. 
If no validation string is specified then it is up to the device to take and
manage a copy, also to filter out any unwanted information (phew!).

The syntax for validation strings is very simple:

        <keyword>[,<keyword>]/<escape>[/<escape>] ...

Keywords are used to associate each command with an escape sequence, there
can be more than one keyword associated with a particular escape field, this
is provided for two reasons, the first is when a different word has the same
meaning, eg. Colour or Color.  And secondly when defining the various states
for a switch.

The escape sequence describes how the preceding data should be treated and
also what to do with the rest of the special field string (up to the next
separator).

The following characters are valid in escape sequences:

        \N      - number
        \S      - switch
        \G      - GSTrans               (NYI)

Within the special field string each parameter is seperated by a comma or a
character which is out of place, ie. a non-numeric in a numerical field. 
Each keyword within the special field string is separated by a semi-colon.

The buffer passed to the device contains the following:

        <word> per escape caracter
        <data> for GSTransed fields.

The words are reset to &DEADDEAD on entry to indicate that they are
currently of no use, as each command sequence is decoded then its contents
is placed into the return buffer.

Numbers are simply stored into the word, they are decoded using
OS_ReadUnsigned and stored away.  Switches, these store the state of the
keywords placed, ie:

        foo,poo/S 

This yields 0 if 'foo' is present within the string, 1 if 'poo' is present
within the string.  

The order of commands within the validation string and the special field
string do not match, the commands within the validation string control how
the values are returned back to the caller.
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
