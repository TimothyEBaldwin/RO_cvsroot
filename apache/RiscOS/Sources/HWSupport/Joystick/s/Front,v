head	4.6;
access;
symbols
	Joystick-0_28:4.6
	Joystick-0_27:4.5
	Joystick-0_26:4.4
	dellis_autobuild_BaseSW:4.3
	sbrodie_sedwards_16Mar2000:4.3
	Joystick-0_25:4.3
	dcotton_autobuild_BaseSW:4.4
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	troddis_Joystick-0_24:4.2.2.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2013.01.27.11.45.35;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	27nj5Y9dxHfJdQBw;

4.5
date	2012.03.18.09.20.13;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	80yLzy1e7jqxxlXv;

4.4
date	2001.03.16.15.56.51;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	99.12.13.10.59.33;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.16.30.21;	author nturton;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.36.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	98.09.21.09.51.26;	author troddis;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.36.10;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.27.20;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.39.43;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.48.04;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.6
log
@Switch out non functional digital joysticks
They were already switched out, since they're not wired up to anything, but using an obsolete switch.
Changed error blocks to use error base from Hdr:NewErrors.
Builds, but not tested.

Version 0.28. Tagged as 'Joystick-0_28'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > Sources.Front

;;-----------------------------------------------------------------------------
;; Joystick device driver.
;;
;; Change list
;; 0.01           SMC   Created
;; 0.02 12-Mar-92 SMC   No longer refuses to initialise if the message file can't
;;                        be opened (now only opened if required).
;;                      Read location twice when checking for hardware.
;; 0.03 08-Feb-93 SMC   Use Hdr: to get headers.
;; 0.04 14-Jan-94 SMC   Don't free workspace in finalisation (could break RMTidy).
;; 0.09 31-Mar-94 WT    Analogue support added, and digital support rewritten
;;                      for Kryten/Morris joystick interface board.
;; 0.10 12-May-94 WT    Analogue support altered to support optional returning
;;                      of the full 16-bit value for analogue joysticks.
;; 0.20  2-Feb-95 JRH   Changed addresses and bit patterns for Falcon
;;
;;-----------------------------------------------------------------------------

        AREA    |Joystick$$Code|, CODE, READONLY, PIC
Module_BaseAddr

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:IO.IOMDL
        GET     Hdr:ModHand
        GET     Hdr:MsgTrans
        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors
        GET     Hdr:NdrDebug
        GET     Hdr:OsBytes
        GET     Hdr:Services
        GET     Hdr:Podule
        GET     Hdr:PoduleReg
        GET     Hdr:Joystick
        GET     VersionASM

        GBLL    hostvdu
        GBLL    debugmod
        GBLL    debugtmp
        GBLL    debugwt
debug           SETL   {FALSE}                  
debugmod        SETL   {FALSE}                  ; Module debug
debugtmp        SETL   {FALSE}                  ; Temporary debug
debugwt         SETL   {FALSE}                  ; Misc debugging by WT
hostvdu         SETL   {FALSE}                  

        GBLL    CanHaveDigital
CanHaveDigital  SETL {FALSE}

; ---------------------------------------------------------------------------
; On Omega machines there is no digital joystick and hence no auto-detect support.
;
 [ CanHaveDigital
DigitalUpBit            *       1 :SHL: 0
DigitalDownBit          *       1 :SHL: 1
DigitalLeftBit          *       1 :SHL: 2
DigitalRightBit         *       1 :SHL: 3
DigitalFireBit          *       1 :SHL: 4
DetectAnaDigiBit        *       1 :SHL: 5       ; Bits in IOMD_CLINES register
DetectHardwareBit       *       1 :SHL: 6       ; Bits in IOMD_CLINES register

DigitalJoystickAddress  *       &88c00004       ; hardwired to podule 0 EASI space
        ! 1, "Don't poke hardwired podule addresses please"
AnalogueJoyFire         *       DigitalJoystickAddress
        ! 1, "OSByte128 handler doesn't respect analogue/digital selection"
 |
AnaloguePoduleSlot      *       8               ; Must be the NIC because that's where
                                                ; the ADC inputs are wired
                        ^       0
AnalogueJoyID           #       4               ; Simple podule ID reg
AnalogueJoyFire         #       4               ; Fire button latch reg
 ]

AnalogueIrqReg          *       IOMD_ATODICR 
AnalogueStatusReg       *       IOMD_ATODSR  
AnalogueControlReg      *       IOMD_ATODCC  
AnalogueChan1Count      *       IOMD_ATODCNT1
AnalogueChan2Count      *       IOMD_ATODCNT2
AnalogueChan3Count      *       IOMD_ATODCNT3
AnalogueChan4Count      *       IOMD_ATODCNT4

AnalogueJoyCnt          *       &0f
AnalogueJoyDchg         *       &f0
AnalogueJoy0Cnt         *       &03
AnalogueJoy1Cnt         *       &0C
AnalogueJoy0Dchg        *       &30
AnalogueJoy1Dchg        *       &C0
AnalogueChn1Cnt         *       &01
AnalogueChn2Cnt         *       &02
AnalogueChn3Cnt         *       &04
AnalogueChn4Cnt         *       &08
AnalogueChn1Dchg        *       &10
AnalogueChn2Dchg        *       &20
AnalogueChn3Dchg        *       &40
AnalogueChn4Dchg        *       &80

Joy0_Completed          *       3 :SHL: 0
Joy1_Completed          *       3 :SHL: 2
Chn1_Completed          *       1 :SHL: 4
Chn2_Completed          *       1 :SHL: 5
Chn3_Completed          *       1 :SHL: 6
Chn4_Completed          *       1 :SHL: 7
Any_Completed           *      15 :SHL: 4

AnalogueJoy0Fire        *       &0f :SHL: 0
AnalogueJoy1Fire        *       &0f :SHL: 8
AnalogueAdvalFireA      *       1 :SHL: 0
AnalogueAdvalFireB      *       1 :SHL: 8

UpCode                  *       &00040          ; 64 in byte 0
DownCode                *       &000C0          ; -64 in byte 0 (signed)
LeftCode                *       &0C000          ; -64 in byte 1 (signed)
RightCode               *       &04000          ; 64 in byte 1
FireCode                *       &10000          ; 1 in byte 2

MaxADCChannel           *       4               ;Highest logical ADC channel

; ---------------------------------------------------------------------------
;       Workspace layout

                        ^       0, wp
message_file_open       #       4
message_file_block      #       4*4
magic_chan_one          #       4
magic_chan_two          #       4
magic_chan_three        #       4
magic_chan_four         #       4
range_chan_one          #       4       ;Split XXXXYYYY where XXXX is max-min, YYYY is min
range_chan_two          #       4       ;
range_chan_three        #       4       ;
range_chan_four         #       4       ;
range_polarity          #       1       ;Stores the polarity of each axis
misc_flags              #       1
adc_numchanstosample    #       1
adc_lastconversion      #       1
iomd_address            #       4
simple_podule_address   #       4

defaultrange            *       &1000   ;These happen to suit Quickshot Warrior (cheap & nasty!)
defaultmin              *       &30     ;PC-compatible joysticks

NoJoystickFlag          *       1 :SHL: 0 ;These are misc flags!
FirstTimeFlag           *       1 :SHL: 1
CalibrateFlag           *       1 :SHL: 2
AnalogueFlag            *       1 :SHL: 3
RstChan1Flag            *       1 :SHL: 4
RstChan2Flag            *       1 :SHL: 5
RstChan3Flag            *       1 :SHL: 6
RstChan4Flag            *       1 :SHL: 7
RstFlags                *      15 :SHL: 4

polarity_chan_one       *       1 :SHL: 0
polarity_chan_two       *       1 :SHL: 1
polarity_chan_three     *       1 :SHL: 2
polarity_chan_four      *       1 :SHL: 3
default_polarities      *       &A      ;ie reverse Y-axes only (suits most PC joysticks)

max_running_work   *       :INDEX:@@

        ! 0, "Module workspace is &":CC:(:STR:(:INDEX:@@)):CC:" bytes"


        LNK     ModHead.s

@


4.5
log
@Overhauled to work in a 32 bit HALised world.
Though this module had been 32 bitted in 2001, a mistake in its header meant that the flags word was in the wrong place and hence rejected on a 32 bit system. This masked the fact that it was doing much peeking and poking of 0x0320xxxx addresses.
Reworked to use system API to find out where stuff is and peek and poke indirectly.
Added documentation on how the hardware should be wired up (while it's unlikely that hardware will be made, emulator authors can use this info to connect to PC joysticks).
hdr.Joystick:
  SWI flags defined for callers
Front.s:
  Change IO registers to be IOMD_Base relative
  Remove some unused definitions, include some include files
Modhead.s:
  Put the flags word at the right offset in the header
  Rewrite detection logic, now it's check for 7500/7500FE version
  of IOMD, then look for a podule with simple id of "Analogue joystick"
  in the NIC slot, then read its address
  Retabbed
SWI.s:
  Return the fire buttons in the right bits for joystick #1
  Retab and use OsByte header definition
Ticky.s:
  Access via addresses read in the setup step
Service.s:
  Retab and use OsByte header definition

Version 0.27. Tagged as 'Joystick-0_27'
@
text
@d59 8
a66 5
debug    SETL   {FALSE}                 
debugmod SETL   {FALSE}                 ; Module debug
debugtmp SETL   {FALSE}                 ; Temporary debug
debugwt  SETL   {FALSE}                 ; Misc debugging by WT
hostvdu  SETL   {FALSE}                 
d71 1
a71 4
 [ IOMD_C_JoystickDetectBits <> 0
DetectAnaDigiBit        *       1 :SHL: 5       ; Bits in IOMD_CLINES register
DetectHardwareBit       *       1 :SHL: 6       ; Bits in IOMD_CLINES register

d77 2
a84 2
AnalogueJoyID           *       0               ; Simple podule ID
AnalogueJoyFire         *       4               ; Fire button latch
d87 3
@


4.4
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.26. Tagged as 'Joystick-0_26'
@
text
@d42 1
d45 2
d48 5
a52 2
	GET	Hdr:Podule

d59 5
d65 1
a65 8
debug    SETL   false
debugmod SETL   false            ; Module debug
debugtmp SETL   false            ; Temporary debug
debugwt  SETL   false            ; Misc debugging by WT
hostvdu  SETL   false

; ----------------------------------------------------------------------------------------------------------------------

d69 2
d72 5
a76 5
DigitalJoystickAddress  *       &88c00004	; hardwired to podule 0 EASI space

AnaDigiDetect           *       &0320000c
DetectAnaDigiBit        *       1 :SHL: 5
DetectHardwareBit       *       1 :SHL: 6
d78 2
d81 1
a81 1

d83 4
a86 3

AnalogueJoyFire         *       &03220000

d89 7
a95 7
AnalogueIrqReg		*	&032000e0	; Provisional MORRIS address
AnalogueStatusReg       *       &032000e4       ;      "        "       "
AnalogueControlReg      *       &032000e8       ;      "        "       "
AnalogueChan1Count      *       &032000ec       ;      "        "       "
AnalogueChan2Count      *       &032000f0       ;      "        "       "
AnalogueChan3Count      *       &032000f4       ;      "        "       "
AnalogueChan4Count      *       &032000f8       ;      "        "       "
d97 2
a98 2
AnalogueJoyCnt		*	&0f
AnalogueJoyDchg		* 	&f0
a111 1

a119 10
 [ IOMD_C_JoystickDetectBits <> 0

DigitalUpBit            *       1 :SHL: 0
DigitalDownBit          *       1 :SHL: 1
DigitalLeftBit          *       1 :SHL: 2
DigitalRightBit         *       1 :SHL: 3
DigitalFireBit          *       1 :SHL: 4

 ]

d122 2
a123 2
AnalogueAdvalFireA	*	1 :SHL: 0
AnalogueAdvalFireB	*	1 :SHL: 8
a130 3
Top8Bits                *       &FF00           ;For sig bit test
Bottom8Bits             *       &00FF           ;

d133 1
a133 5
Service_UKByte          *       &07             ;Service call claimed to support ADVAL
Service_UKCommand	*	&04		;Unknown command service call


; ----------------------------------------------------------------------------------------------------------------------
d136 1
a136 2
workspace       RN      R12
                ^       0,workspace
d143 5
a147 5
range_chan_one		#	4	;Split XXXXYYYY where XXXX is max-min, YYYY is min
range_chan_two		#	4	;
range_chan_three	#	4       ;
range_chan_four		#	4       ;
range_polarity		#	1	;Stores the polarity of each axis
d151 2
d154 2
a155 4
defaultrange		*	&1000	;These happen to suit Quickshot Warrior (cheap & nasty!)
defaultmin		*	&30     ;PC-compatible joysticks

SixteenBitFlag          *       1	;This is a SWI entry flag, _NOT_ a misc flag
d157 1
a157 1
NoJoystickFlag          *       1 :SHL: 0 ;However, these _ARE_ the misc flags!
d159 1
a159 1
CalibrateFlag		*	1 :SHL: 2
d161 11
a171 11
RstChan1Flag		*	1 :SHL: 4
RstChan2Flag		*	1 :SHL: 5
RstChan3Flag		*	1 :SHL: 6
RstChan4Flag		*	1 :SHL: 7
RstFlags		*      15 :SHL: 4

polarity_chan_one	*	1 :SHL: 0
polarity_chan_two	*	1 :SHL: 1
polarity_chan_three	*	1 :SHL: 2
polarity_chan_four	*	1 :SHL: 3
default_polarities	*       &A	;ie reverse Y-axes only (suits most PC joysticks)
d177 2
a178 2
; ----------------------------------------------------------------------------------------------------------------------
        LNK     s.ModHead
@


4.3
log
@  32-bit compatibility.
  Fixes to SWI calls.
  Moved to srccommit verison number maintenance.
Detail:
  No longer calls non-X bit SWIs in SWI handler.
  Oddity in stack usage tidied up.
Admin:
  Tested Phoebe & 32 machine builds.

Version 0.25. Tagged as 'Joystick-0_25'
@
text
@d35 1
@


4.2
log
@Version Spin_merge taken
@
text
@d46 1
a46 1
        GET     Version
@


4.2.2.1
log
@Modifications for Phoebe HW.
@
text
@d45 1
a45 5
	GET     Hdr:HostDebug
	GET     Hdr:HostFS
	
	$GetCodec
	
a51 1
        GBLL    debugtgr
d53 5
a57 6
debug    SETL   false 
debugmod SETL   false             ; Module debug
debugtmp SETL   false             ; Temporary debug
debugwt  SETL   false             ; Misc debugging by WT
debugtgr SETL   false
hostvdu  SETL   false 
a74 9
 [ Codec_Type = "AD1816"
 
 [ AD1816_Podule
AnalogueJoy             *       &88400800
 |
piwporp 
 ]

 |
a77 1
 ]
a120 11
 [ Codec_Type = "AD1816"

AnalogueJoy0FireShift   *       4
AnalogueJoy0Fire        *       3 :SHL: AnalogueJoy0FireShift 
AnalogueJoy1FireShift   *       6
AnalogueJoy1Fire        *       3 :SHL: AnalogueJoy1FireShift
AnalogueAdvalFireA	*	1 :SHL: AnalogueJoy0FireShift 
AnalogueAdvalFireB	*	1 :SHL: AnalogueJoy1FireShift

 |

a125 1
 ]
a147 1
 [ {TRUE} ;Codec_Type <> "AD1816"
a151 1
 ]
a160 4
 [ Codec_Type = "AD1816"
defaultrange		*	&1700	;These happen to suit Quickshot Warrior (cheap & nasty!)
defaultmin		*	&50     ;PC-compatible joysticks
 |
d163 1
a163 1
 ]
@


4.1
log
@Initial revision
@
text
@d31 1
d40 1
d61 9
a69 1
DigitalJoystickAddress  *       &0302B800       ; NetCS
d71 7
a77 1
AnaDigiDetect           *       &0302B000       ; NetROM
a78 1
AnalogueJoyFire         *       DigitalJoystickAddress
d111 2
d119 4
a122 2
AnalogueJoy0Fire        *       3 :SHL: 0
AnalogueJoy1Fire        *       3 :SHL: 8
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a30 1
;; 0.20  2-Feb-95 JRH   Changed addresses and bit patterns for Falcon
a38 1
        GET     Hdr:Machine.<Machine>
d59 3
a61 9
; On Omega machines there is no digital joystick and hence no auto-detect support.
;
 [ IOMD_C_JoystickDetectBits <> 0

DigitalJoystickAddress  *       &88c00004	; hardwired to podule 0 EASI space

AnaDigiDetect           *       &0320000c
DetectAnaDigiBit        *       1 :SHL: 5
DetectHardwareBit       *       1 :SHL: 6
a63 7

 |

AnalogueJoyFire         *       &03220000

 ]

a95 2
 [ IOMD_C_JoystickDetectBits <> 0

d102 2
a103 4
 ]

AnalogueJoy0Fire        *       &0f :SHL: 0
AnalogueJoy1Fire        *       &0f :SHL: 8
@


4.1.5.1
log
@Import from SrcFiler
@
text
@a30 2
;; 0.20  2-Feb-95 JRH   Changed addresses and bit patterns for Falcon
;; 0.25	22-Aug-96 TMD	Added variant for Peregrine (STB2/2)
a38 1
        GET     Hdr:Machine.<Machine>
d59 3
a61 13
; On Omega machines there is no digital joystick and hence no auto-detect support.
;
 [ IOMD_C_JoystickDetectBits <> 0

  [ FakePodule0 = &121		; STB2/2
DigitalJoystickAddress	*	&88600004	; new offset in podule for MPEG 2 machine
  |
DigitalJoystickAddress  *       &88c00004	; hardwired to podule 0 EASI space
  ]

AnaDigiDetect           *       &0320000c
DetectAnaDigiBit        *       1 :SHL: 5
DetectHardwareBit       *       1 :SHL: 6
a63 7

 |

AnalogueJoyFire         *       &03220000

 ]

a95 2
 [ IOMD_C_JoystickDetectBits <> 0

d102 2
a103 4
 ]

AnalogueJoy0Fire        *       &0f :SHL: 0
AnalogueJoy1Fire        *       &0f :SHL: 8
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
