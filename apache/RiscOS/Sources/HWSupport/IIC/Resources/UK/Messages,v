head	4.2;
access;
symbols
	IIC-0_18-4_5_2_13:4.2.2.1
	IIC-0_18-4_5_2_12:4.2.2.1
	IIC-0_18-4_5_2_11:4.2
	IIC-0_18-4_5_2_10:4.2
	IIC-0_18-4_5_2_9:4.2
	IIC-0_18-4_5_2_8:4.2
	IIC-0_18-4_5_2_7:4.2
	IIC-0_18-4_5_2_6:4.2
	IIC-0_21:4.2
	RO_5_07:4.2
	IIC-0_20:4.2
	IIC-0_18-4_5_2_5:4.2
	IIC-0_18-4_5_2_4:4.2
	IIC-0_19:4.2
	IIC-0_18-4_5_2_3:4.2
	IIC-0_18-4_5_2_2:4.2
	IIC-0_18-4_5_2_1:4.2
	HAL:4.2.0.2
	dellis_autobuild_BaseSW:4.2
	IIC-0_18:4.2
	IIC-0_17:4.2
	sbrodie_sedwards_16Mar2000:4.1
	IIC-0_16:4.1
	dcotton_Ursula_merge:4.1
	IIC-0_15:4.1
	dcotton_autobuild_BaseSW:4.2
	nturton_IIC-0_14:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_IIC_0_14:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2000.08.01.14.25.31;	author bavison;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.35.58;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	2017.02.02.20.58.47;	author rsprowson;	state Exp;
branches;
next	;
commitid	ZhO9h92GaH7W7qEz;

4.1.1.1
date	96.11.05.09.35.58;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.25.35;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.52.18;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.46.57;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  Made interrupt safe, at least on STBs. Also 32-bit compatible, FWIW.

Detail:
  A new error, "IIC operation in progress", error number &20301 will be
  returned from SWI IIC_Control under the following circumstances:

  1) if the previous call to IIC_Control has not yet completed; or
  2) if an examination of the interrupt stack indicates that the kernel's
     IIC code is currently threaded. This aspect of operation requires
     detailed knowledge of the kernel; currently the following kernels are
     supported:
       4.52 (featured in STB-22)
       4.71 (featured in STB-3)
       5.31 (featured in STB-400)
     The knowledge required is the range of addresses covering the routines
     HexToBCD to ReadTime from Kernel.s.PMF.i2cutils. It is also assumed
     that kernels from 4.81 onwards feature an Ursula-style 32-bit
     compatible IRQ stack, rather than an ARM2/3 compatible stack with a
     combined return PC/PSR on the stack.

  32-bit compatibility makes heavy use of the No26bitCode switch, largely
  for consistency with the equivalent code in the kernel, with which it
  obviously shares a common heritage.

Admin:
  Currently tested only on an STB-22. Required for closed captioning support
  on all STBs.

  It is currently planned that future versions of RISC OS will farm out IIC
  operations to the HAL, so at that point the distinction between the two
  sets of IIC code will be removed. Ideally, the new IIC code would be
  fully re-entrant (ie would complete any foreground IIC operation, then
  do the background operation and then return to the background process).
  We can just about do without that functionality at present.

Version 0.17. Tagged as 'IIC-0_17'
@
text
@NoAck:No acknowledge from IIC device
InUse:IIC operation in progress
@


4.2.2.1
log
@Add command to list the IIC devices
New command *IICDevices probes each bus and reports what it finds.
When an ACK to an address read is received Service_IIC is set round to see if any resident device drivers have definitive knowledge about what's at the address (cf. Service_PCI), otherwise a guess will be made based on a small lookup table in the Messages.
hdr/IIC: Subreason for name lookup
IICMod.s: Loop over the buses, report what's there.
CmdHelp/Messages: New syntax, error messages, and table of IIC devices

Tested on IOMD, Titanium, and a Raspberry Pi 2.

Version 0.18, 4.5.2.12. Tagged as 'IIC-0_18-4_5_2_12'
@
text
@a2 12
BdBus:IIC bus not present
Headr:Bus Dev Description

#{DictTokens}
# Device names if nobody knows
D2?:TV IC
D6?:Monitor IC
D7?:LCD IC
DC?:Radio IC
DA?:Memory IC
DD0:Real time clock
D??:Unidentified IC
@


4.1
log
@Initial revision
@
text
@d2 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
