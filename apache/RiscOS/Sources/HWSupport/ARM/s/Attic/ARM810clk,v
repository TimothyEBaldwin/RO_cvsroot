head	4.2;
access;
symbols
	RO_5_07:4.2
	ARM-0_17:4.1
	ARM-0_16:4.1
	ARM-0_15:4.1
	Ursula_merge:4.1
	ARM-0_14:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.6
	nicke_ARM-0_13:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	Ursula:4.1.0.2
	Ursula_bp:4.1
	RO_3_71:1.1.2.1
	StrongARM:1.1.0.2;
locks; strict;
comment	@# @;


4.2
date	2001.03.26.10.20.52;	author mstephen;	state dead;
branches;
next	4.1;

4.1
date	97.05.12.21.22.02;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.05.12.21.19.57;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.05.12.21.19.57;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.2
log
@removed nefarious code for dubious specific control on StrongARM
and (ho ho) ARM810
still assumes that kernel OS_MMUControl will do the right thing to
control all caches when just the W and C bits are toggled
tested on Risc PC

Version 0.17. Not tagged
@
text
@; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

;ARM810 stuff

  [ ARM810support

;entry: r5 bits 31:30 set clock state
;         00 = do nothing
;         01 = clock is bus clock (no dynamic switching)
;         10 = clock is PLL
;         11 = clock is Refclk pin
;
ARM810clockcontrol ROUT
        Push    "lr"
        TST     r5,#&c0000000
        BEQ     %FT09
;first, turn off dynamic switching, before any adjustments
        MRC     CP15,0,lr,C15,C0,0
        BIC     lr,lr,#&1                  ;turn off dynamic bus switching (bit0)
        MCR     CP15,0,lr,C15,C0,0
        TST     r5,#&80000000
        BEQ     %FT09
;turn on fast clock of required type
        BIC     lr,lr,#&2                  ;select asynchronous mode (default) (bit1)
        TST     r5,#&40000000
        BIC     lr,lr,#&C                  ;zap current clock select bits
        ORRNE   lr,lr,#&4                  ;select REFCLK as the FCLK source (bits3:2)
        ORREQ   lr,lr,#&C                  ;select PLLClkOut as the FCLK source (bits3:2)
        BIC     lr,lr,#&10                 ;ensure L=0 when writing (PLL locked) (bit4)
        MCR     CP15,0,lr,C15,C0,0
        NOP
        NOP
        NOP
        NOP
        ORR lr,lr,#&1                      ;select dynamic clock switching (bit0)
        MCR CP15,0,lr,C15,C0,0
09
        Pull    "pc"
  ]

        END
@


4.1
log
@Version RO_3_71 merged
@
text
@@


1.1
log
@file ARM810clk was initially added on branch StrongARM.
@
text
@d1 54
@


1.1.2.1
log
@Imported from RISC OS 3.71 CD
@
text
@a0 54
; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

;ARM810 stuff

  [ ARM810support

;entry: r5 bits 31:30 set clock state
;         00 = do nothing
;         01 = clock is bus clock (no dynamic switching)
;         10 = clock is PLL
;         11 = clock is Refclk pin
;
ARM810clockcontrol ROUT
        Push    "lr"
        TST     r5,#&c0000000
        BEQ     %FT09
;first, turn off dynamic switching, before any adjustments
        MRC     CP15,0,lr,C15,C0,0
        BIC     lr,lr,#&1                  ;turn off dynamic bus switching (bit0)
        MCR     CP15,0,lr,C15,C0,0
        TST     r5,#&80000000
        BEQ     %FT09
;turn on fast clock of required type
        BIC     lr,lr,#&2                  ;select asynchronous mode (default) (bit1)
        TST     r5,#&40000000
        BIC     lr,lr,#&C                  ;zap current clock select bits
        ORRNE   lr,lr,#&4                  ;select REFCLK as the FCLK source (bits3:2)
        ORREQ   lr,lr,#&C                  ;select PLLClkOut as the FCLK source (bits3:2)
        BIC     lr,lr,#&10                 ;ensure L=0 when writing (PLL locked) (bit4)
        MCR     CP15,0,lr,C15,C0,0
        NOP
        NOP
        NOP
        NOP
        ORR lr,lr,#&1                      ;select dynamic clock switching (bit0)
        MCR CP15,0,lr,C15,C0,0
09
        Pull    "pc"
  ]

        END
@
