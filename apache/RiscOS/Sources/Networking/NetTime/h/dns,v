head	4.1;
access;
symbols
	NetTime-0_43:4.1
	NetTime-0_42:4.1
	NetTime-0_41:4.1
	NetTime-0_40:4.1
	NetTime-0_39:4.1
	NetTime-0_38:4.1
	NetTime-0_37:4.1
	NetTime-0_36:4.1
	NetTime-0_35:4.1
	NetTime-0_34:4.1
	NetTime-0_33:4.1
	NetTime-0_32:4.1
	NetTime-0_31:4.1
	NetTime-0_30:4.1
	NetTime-0_29:4.1
	dellis_autobuild_BaseSW:4.1
	NetTime-0_28:4.1
	NetTime-0_26:4.1
	NetTime-0_25:4.1
	NetTime-0_24:4.1
	NetTime-0_23:4.1
	sbrodie_sedwards_16Mar2000:4.1
	NetTime-0_22:4.1
	NetTime-0_21:4.1
	NetTime-0_20:4.1
	dcotton_autobuild_BaseSW:4.1
	NetTime-0_16:4.1
	NetTime-0_15:4.1
	NetTime-0_14:4.1
	NetTime-0_13:4.1
	NetTime-0_12:4.1
	NetTime-0_11:4.1
	NetTime-0_10:4.1
	NetTime-0_09:4.1;
locks; strict;
comment	@# @;


4.1
date	98.12.01.12.03.19;	author jfarrell;	state Exp;
branches;
next	;


desc
@DNS interface header from Acorn FTP fetcher
@


4.1
log
@Make DNS lookup non-blocking:
  New state (DNSWait) and internal transition (DoDNS) added.
  Machine now support internal transitions, and DoDNS is injected by
  transitions that previously called tryconnect() to start lookup.
  State DNSWait polls resolver every second while it returns EINPROGRESS.
  Resolver interface (dns.c) taken from Acorn FTP fetcher.

Version 0.09. Tagged as 'NetTime-0_09'
@
text
@/* Copyright 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Generic (h.dns)
 *
 * StB - 07/10/97 - Started
 *
 * © Acorn Computers Ltd. 1996-1997
 *
 */

/* Lookup the IP address of a remote host.  The return value is errno.
 * The "ip" parameter will be updated with IP address of the remote host
 * This is only valid if the return value was zero.
 *
 * EINPROGRESS (36 decimal) will be returned if the lookup is still ongoing.
 * ENOENT (2 decimal) will be returned if the lookup failed with a RISC OS
 * error.
 */
extern int dns_find_ip_address(const char *hostname, struct in_addr *ip);
@
