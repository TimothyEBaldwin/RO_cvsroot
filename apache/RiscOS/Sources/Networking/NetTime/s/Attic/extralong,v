head	4.3;
access;
symbols
	NetTime-0_36:4.2
	NetTime-0_35:4.2
	NetTime-0_34:4.2
	NetTime-0_33:4.2
	NetTime-0_32:4.2
	NetTime-0_31:4.2
	NetTime-0_30:4.2
	NetTime-0_29:4.2
	dellis_autobuild_BaseSW:4.2
	NetTime-0_28:4.2
	NetTime-0_26:4.2
	NetTime-0_25:4.2
	NetTime-0_24:4.2
	NetTime-0_23:4.2
	sbrodie_sedwards_16Mar2000:4.1
	NetTime-0_22:4.2
	NetTime-0_21:4.1
	dcotton_autobuild_BaseSW:4.2
	NetTime-0_20:4.1;
locks; strict;
comment	@# @;


4.3
date	2012.02.04.22.08.46;	author rsprowson;	state dead;
branches;
next	4.2;
commitid	W0erdTttgEwVaTRv;

4.2
date	2000.03.16.16.50.20;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	2000.03.07.10.44.57;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Add SWI NetTime_States.
Makefile changed to use "CModule" fragment.
Soak up some compiler warnings.
Extralong functions removed.
Use central header files in preference to local defines.
A failure to register resources no longer leaves EventV and WordV claimed.

Version 0.37. Tagged as 'NetTime-0_37'
@
text
@; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:ExtraLong
        GET     Hdr:Machine.<Machine>
        GET     Hdr:APCS.<APCS>

        AREA    |Asm$$Code|, CODE, READONLY

        EXPORT  extralong_add[LEAF]
        EXPORT  extralong_uadd[LEAF]
extralong_add
extralong_uadd
        LDR     ip, [sp, #0]
        ADDS    a2, a2, a4
        ADC     a3, a3, ip
        STMIA   a1, {a2, a3}
        Return  ,LinkNotStacked

        EXPORT  extralong_subtract[LEAF]
        EXPORT  extralong_usubtract[LEAF]
extralong_subtract
extralong_usubtract
        LDR     ip, [sp, #0]
        SUBS    a2, a2, a4
        SBC     a3, a3, ip
        STMIA   a1, {a2, a3}
        Return  ,LinkNotStacked

        EXPORT  extralong_multiply[LEAF]
        EXPORT  extralong_umultiply[LEAF]
extralong_multiply
extralong_umultiply
        FunctionEntry "v1"
        LDR     v1, [sp, #8]
        mextralong_multiply ip,lr, a2,a3, a4,v1
        STMIA   a1, {ip, lr}
        Return  "v1"

        EXPORT  extralong_divide[LEAF]
extralong_divide
        FunctionEntry "v1-v4"
        LDR     v1, [sp, #20]
        mextralong_divide ip,lr, a2,a3, a4,v1, v2,v3,v4
        STMIA   a1, {ip, lr}
        Return  "v1-v4"

        EXPORT  extralong_div2[LEAF]
extralong_div2
        MOVS    a3, a3, ASR #1
        MOV     a2, a2, RRX
        STMIA   a1, {a2, a3}
        Return  ,LinkNotStacked

        EXPORT  extralong_neg[LEAF]
extralong_neg
        RSBS    a2, a2, #0
        RSC     a3, a3, #0
        STMIA   a1, {a2, a3}
        Return  ,LinkNotStacked

        END
@


4.2
log
@Precision of internal arithmetic and clock reading improved. Now possible
to maintain time to within a couple of milliseconds (given frequent enough
polling).

Version 0.22. Tagged as 'NetTime-0_22'
@
text
@@


4.1
log
@  Added support for NTP, gradual time adjustment, configurable DST,
  and DHCP timezone.

Detail:
  If Inet$NTPServer is set, NetTime will use NTP (unicast SNTP, as per RFC2030).
  Otherwise it will use the UDP time protocol (it used to use TCP).

  NetTime will use the RTCAdjust algorithms to adjust the centisecond clock
  rate by +/-10% to get in step with the time server. By polling every 30
  minutes on a LAN, time will not deviate by more than 0.1 seconds once
  synchronised. It interoperates with RTCAdjust and the hardware RTC to ensure
  correct operation on a machine with RTC.

  NetTime has returned to polling every 30 minutes. This may defeat PPP
  timeouts - a suggested fix is to change PPP to only have TCP traffic keep the
  link up, or to have a separate user inactivity timeout (like Lazarus).

  The system variable NetTime$DST controls DST behaviour. Set to "European"
  (the default) to use European rules. Set it to something like
  "03-May-2000.01:00:00; 14-Sep-2000.01:00:00" to specify this year's start
  and end dates (in UTC). Set to "No" to make it leave DST alone.

  If a DHCP reply arrives while NetTime is loaded, it will check for the time
  offset option - if present, the timezone will be configured.

  New command *NetTime_Status gives information about the clock adjustments.

  NetTime attempts to start operation immediately on a non-dialup machine -
  removes the need for a *NetTime_Kick after softloading. *NetTime_Kick will
  still be required after, say, setting Inet$NTPServer manually.

Admin:
  Tested on desktop systems and STBs. NTP operation on an NC will require a
  way of finding out an NTP server - possibly redefining TIME_SERVER smartcard
  tag to be NTP? Anycast operation may also be worth adding.

Version 0.20. Tagged as 'NetTime-0_20'
@
text
@d23 20
d44 1
d46 1
d60 14
@

