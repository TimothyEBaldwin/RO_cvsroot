head	1.14;
access;
symbols
	URI-0_27:1.14
	URI-0_26:1.14
	URI-0_25:1.14
	URI-0_24:1.13
	URI-0_23:1.12
	URI-0_22:1.11
	URI-0_21:1.10
	URI-0_20:1.9
	URI-0_19:1.9
	URI-0_18:1.8
	URI-0_17:1.7
	URI-0_16:1.7
	URI-0_15:1.7
	URI-0_14:1.5
	sbrodie_URI-0_12-interim-2:1.4
	sbrodie_URI-0_12-interim:1.3
	sbrodie_Expresso_final_190298:1.2
	sbrodie_URI_0_12:1.2
	sbrodie_URI_0_11:1.1;
locks; strict;
comment	@# @;


1.14
date	2013.09.02.20.33.37;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	yRQOE2rU7y5s8U3x;

1.13
date	2013.09.01.17.46.09;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	nwdFl6Gx7PnZeL3x;

1.12
date	2012.10.08.13.37.11;	author srevill;	state Exp;
branches;
next	1.11;
commitid	TKv27HDWNyQfpAnw;

1.11
date	2012.01.14.22.57.29;	author srevill;	state Exp;
branches;
next	1.10;
commitid	BILMUPQ4Wvnz7cPv;

1.10
date	2008.06.14.17.29.52;	author srevill;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.11.19.33.18;	author srevill;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.05.17.17.30;	author srevill;	state Exp;
branches;
next	1.7;

1.7
date	2000.05.04.17.00.42;	author srevill;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.04.16.52.10;	author srevill;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.14.15.42.33;	author ahodgkin;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.14.10.40.25;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.14.10.38.37;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.02.12.13.12.38;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.16.12.48;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Internationalised

Version 0.25. Tagged as 'URI-0_25'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for AcornURI
#

COMPONENT    = URI
OBJS         = globals module ralloc task URIswis \
               cstart robase
CINCLUDES    = -Itbox:,C:
HDRS         = URI
ASMHDRS      = URI
CMHGAUTOHDR  = URI
CMHGDEPENDS  = module globals task
LIBS         = ${WIMPLIB}
LIBEXT       = o
ROMCDEFINES  = -DROM
ifeq ("${CMDHELP}","None")
CMHGDEFINES += -DNO_INTERNATIONAL_HELP
endif

include CModule

# Sidestep name clash in WimpLib and RISC_OSLib
ABSSYM       = ${C_ABSSYM}

# This module outputs a library file too
export_libs:: veneers.o
        ${AR} ${ARFLAGS} <CExport$dir>.${LIBEXT}.URI veneers.o
        @@${ECHO} ${COMPONENT}: library export complete
 
# Dynamic dependencies:
@


1.13
log
@Makefile recreated from fragment
Usual drill: cast away some warnings, shuffle header files a bit, remove redundant files, rename CMHG file to auto generated one.
Tested briefly, still seemed to work.

Version 0.24. Tagged as 'URI-0_24'
@
text
@a26 2
RES_OBJ      =
CUSTOMRES    = custom
d28 4
@


1.12
log
@Got fed up with build warnings and throwback windows.

Fixed a couple of warnings in c.module.

Stopped it from building with throwback when not started from the
!Mk file (i.e. when built using !Builder/srcbuild).

Version 0.23. Tagged as 'URI-0_23'
@
text
@a15 1
# =====================
d18 23
a40 202
# ------------------------------------------------------------------------------
# Change list
#

# Date		Name	Description
# ====		====	===========
# 1997-06-23	BAL	Created
# 2000-04-14	ADH	Merged in URILib export stuff, modified style to aid
#			folding text editors.

# ------------------------------------------------------------------------------
# Paths
#

EXP_HDR	=	<export$dir>
EXP_C_H	=	<CExport$dir>.h
EXP_C_O	=	<CExport$dir>.o

# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= do mkdir -p
AS		= objasm
CC		= cc
CMHG		= cmhg
CP		= copy
LD		= link
LIBFILE		= libfile
RM		= remove
MODSQZ		= modsqz
WIPE		= x wipe
XWIPE		= x wipe

ASMFLAGS	= -depend !Depend -Stamp -quit
CFLAGS		= -c -depend !Depend ${THROWBACK} -zM ${INCLUDES} ${DFLAGS}
CMHGFLAGS	= -depend !Depend -p ${THROWBACK} ${INCLUDES}
CPFLAGS		= ~cfr~v
WFLAGS		= ~c~v

# ------------------------------------------------------------------------------
# Libraries
#

CLIB =		CLIB:o.stubs
RLIB =		RISCOSLIB:o.risc_oslib
RSTUBS =	RISCOSLIB:o.rstubs
ROMSTUBS =	RISCOSLIB:o.romstubs
ROMCSTUBS =	RISCOSLIB:o.romcstubs
ABSSYM  =	RISC_OSLib:o.c_AbsSym
LIBS =		C:tboxlibs.o.eventlibm C:tboxlibs.o.wimplib

# ------------------------------------------------------------------------------
# Include files
#
INCLUDES =	-Itbox:,TCPIPLibs:,C:

# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	=	URI
RAMTARGET	=	rm.URI
ROMTARGET	=	aof.URI
LIBTARGET	=	l.URI
EXPORTS		=	{EXP_DIR}.URI
DIRS		=	o._dirs_

# ------------------------------------------------------------------------------
# Export Paths for Messages module
#

#RESDIR = 	<resource$dir>.Resources2.URI

# ------------------------------------------------------------------------------
# Object lists
#

OBJS =		\
 o.cstart	\
 o.globals	\
 o.ModHdr	\
 o.module	\
 o.ralloc	\
 o.robase	\
 o.task		\
 o.URIswis

LIBOBJS =	\
 o.veneers

HDRS =	h.ModHdr

# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES:	.o .s .c .h
.c.o:;		${CC} ${CFLAGS} -o $@@ $<
.s.o:;		${AS} ${ASMFLAGS} -o $@@ $<
.cmhg.o:;	${CMHG} ${CMHGFLAGS} $< -o $@@ -d h.$*
.cmhg.h:;	${CMHG} ${CMHGFLAGS} $< -d $@@ -o o.$*

# ------------------------------------------------------------------------------
# Main rules:
#

${DIRS}:
	@@echo
	${MKDIR} aof
	${MKDIR} l
	${MKDIR} linked
	${MKDIR} o
	${MKDIR} rm
	create ${DIRS}
	@@echo

clean:
	${RM} ${HDRS}
	${RM} syms
	${XWIPE} aof	${WFLAGS}
	${XWIPE} l	${WFLAGS}
	${XWIPE} linked	${WFLAGS}
	${XWIPE} o	${WFLAGS}
	${XWIPE} rm	${WFLAGS}
	@@echo
	@@echo ${COMPONENT}: cleaned

ram: ${RAMTARGET}
	@@echo
	@@echo ${COMPONENT}: all complete

rom: ${ROMTARGET}
	@@echo
	@@echo ${COMPONENT}: rom module built

export: export_${PHASE}

export_hdrs: h.${COMPONENT}
	${MKDIR} ${EXP_C_H}
	${CP} h.${COMPONENT} ${EXP_C_H}.${COMPONENT} ${CPFLAGS}
	@@echo
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${LIBTARGET}
	${MKDIR} ${EXP_C_O}
	${CP} ${LIBTARGET} ${EXP_C_O}.${COMPONENT} ${CPFLAGS}

install: ${RAMTARGET}
	${MKDIR} ${INSTDIR}
	${CP} ${RAMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
	@@echo
	@@echo ${COMPONENT}: ram module installed

install_rom: ${ROMTARGET}
	${CP} ${ROMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
	@@echo
	@@echo ${COMPONENT}: rom module installed

resources:
	@@echo
	@@echo ${COMPONENT}: nothing done

#resources:
#        ${MKDIR} ${RESDIR}.^.^.URI
#        ${MKDIR} ${RESDIR}
#        ${CP} ${LDIR}.Messages ${RESDIR}.Messages ${CPFLAGS}
#        @@echo ${COMPONENT}: resource files copied

# ------------------------------------------------------------------------------
# Targets
#

${RAMTARGET}: ${OBJS} ${HDRS} ${CLIB} ${DIRS}
	@@echo
	${MKDIR} rm
	${LD} -rmf -symbols syms -o $@@ ${OBJS} ${LIBS} ${CLIB}
	${MODSQZ} $@@
	Access $@@ WR/R

${ROMTARGET}: ${OBJS} ${HDRS} ${ROMCSTUBS} ${DIRS}
	@@echo
	${MKDIR} aof
	${LD} -o $@@ -aof ${OBJS} ${LIBS} ${ROMCSTUBS}
	Access $@@ WR/R

${LIBTARGET}: ${LIBOBJS} ${DIRS}
	@@echo
	${LIBFILE} -c -o ${LIBTARGET} ${LIBOBJS}
	Access $@@ WR/R

# ------------------------------------------------------------------------------
# Final link for the ROM Image (using given base address)
#

rom_link: ${DIRS} ${ROM_MODULE}
	@@echo
	${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${ROMTARGET} ${ABSSYM}
	${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
	@@echo ${COMPONENT}: rom_link complete

# ------------------------------------------------------------------------------
@


1.11
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.22. Tagged as 'URI-0_22'
@
text
@d54 2
a55 2
CFLAGS		= -c -depend !Depend -throwback -zM ${INCLUDES} ${DFLAGS}
CMHGFLAGS	= -depend !Depend -p -throwback ${INCLUDES}
@


1.10
log
@Just some makefile tweaks. No code changes.

Version 0.21. Tagged as 'URI-0_21'
@
text
@d50 1
a50 1
WIPE		= -wipe
@


1.9
log
@  Fixed makefile install phase.
  Changed makefile to clean more quietly.
Admin:
  Tested in STB Baseline build.

Version 0.19. Tagged as 'URI-0_19'
@
text
@d158 1
d164 1
@


1.8
log
@  Added install ram phase.
Detail:
  You could not install a ram version of this module. Fixed.
Admin:
  Required for Baseline builds.

Version 0.18. Tagged as 'URI-0_18'
@
text
@d41 1
a41 1
MKDIR		= cdir
d51 1
d139 5
a143 5
	${WIPE} aof	${WFLAGS}
	${WIPE} l	${WFLAGS}
	${WIPE} linked	${WFLAGS}
	${WIPE} o	${WFLAGS}
	${WIPE} rm	${WFLAGS}
d166 1
@


1.7
log
@  Removed references to the 'map' because it is now redundant.
Admin:
  Tested on RiscPC build.

Summary:
  (overview of change)
Detail:
  (list files and functions that have changed)
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)
@
text
@d164 5
@


1.6
log
@  Changed link flags from -bin to -rmf and removed call to truncate.
Detail:
  The STB ROM is low on free space, so I've removed the ~5K of
  junk which 'truncate' addes to the aof binary. Change is only in
  the Makefile and only affects ROM builds.
Admin:
  Tested (built on RiscPC)

Version 0.15. Tagged as 'URI-0_15'
@
text
@a129 1
	${MKDIR} map
a140 1
	${WIPE} map	${WFLAGS}
d207 1
a207 1
	${LD} -o linked.${COMPONENT} -map -rmf -base ${ADDRESS} ${ROMTARGET} ${ABSSYM} > map.${COMPONENT}
@


1.5
log
@  Brought URI module up to date.
Detail:
  Sorted Makefile to have a dirs rule and export a URI SWI veneer (this
  was previously referred to as 'URILib'). Module gets version details
  from the VersionNum file now. Improved *command '*help' output. Got rid
  of redundant Service_Memory handler. Rewrote CMHG file. Added Docs
  and Utils directory, the latter holding Ben Laughton's transmit and
  receive tests - these used !Make-style Makefiles, which have been
  slightly updated to run in a more standard fashion but are still not at
  all pretty. They work though.
Admin:
  RAM and ROM builds (the latter just via. !MkROM directly) tested.
  Export tested. Both test programs built and tested.

Version 0.14. Tagged as 'URI-0_14'
@
text
@d209 1
a209 2
	${LD} -o linked.${COMPONENT} -map -bin -base ${ADDRESS} ${ROMTARGET} ${ABSSYM} > map.${COMPONENT}
	truncate map.${COMPONENT} linked.${COMPONENT}
@


1.4
log
@  Intermediate attempt to support ANT's URL protocol.
Admin:
  Not compiled, not tested, don't use.
@
text
@d15 2
a16 1
# Makefile for URI
d18 5
a22 3
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
d24 1
a24 1
# ----		----	-----------
d26 2
a27 1
#
d29 1
a29 1
#
d32 1
d34 2
d37 2
a39 17
# Generic options:
#
MKDIR =		cdir
AS =		objasm
CC =		cc
CMHG =		cmhg
CP =		copy
LD =		link
RM =		remove
MODSQZ =	modsqz
WIPE =		-wipe

ASMFLAGS =	-depend !Depend -Stamp -quit
CFLAGS =	-c -depend !Depend -throwback -zM ${INCLUDES} ${DFLAGS}
CMHGFLAGS =	-depend !Depend -p -throwback ${INCLUDES}
CPFLAGS =	~cfr~v
WFLAGS =	~c~v
d41 18
a58 1
#
d61 1
d70 1
a70 1
#
d75 2
a77 6
# Program specific options:
#
COMPONENT =	URI
RAMTARGET =	rm.URI
ROMTARGET =	aof.URI
EXPORTS =	${EXP_DIR}.URI
d79 8
a86 1
#
d89 1
d92 3
d96 8
a103 9
OBJS =\
 o.cstart \
 o.globals \
 o.ModHdr \
 o.module \
 o.ralloc \
 o.robase \
 o.task \
 o.debug \
d106 3
d111 1
a111 1
#
d114 1
d121 1
a121 1
#
d124 24
d149 2
a150 1
        @@echo ${COMPONENT}: all complete
d153 4
a156 1
        @@echo ${COMPONENT}: rom module built
d158 7
a164 2
export:
        @@echo ${COMPONENT}: export complete
d167 7
a173 2
        ${CP} ${ROMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom module installed
d181 3
a183 9
clean:
	${WIPE} o.* ${WFLAGS}
	${WIPE} aof ${WFLAGS}
	${WIPE} rm ${WFLAGS}
	${WIPE} linked ${WFLAGS}
	${WIPE} map ${WFLAGS}
	${WIPE} ${HDRS} ${WFLAGS}
	${RM} ${RAMTARGET}
	@@echo ${COMPONENT}: cleaned
d185 4
a188 6
#
# Target
#
${RAMTARGET}: ${OBJS} ${HDRS} ${CLIB}
  	${MKDIR} rm
	${LD} -rmf -o $@@ ${OBJS} ${LIBS} ${CLIB}
d190 1
d192 3
a194 5
#
# ROM Target (re-linked at ROM Image build time)
#
${ROMTARGET}: ${OBJS} ${HDRS} ${ROMCSTUBS}
        ${MKDIR} aof
d196 6
d203 1
a203 1
#
a205 7
rom_link:
        ${MKDIR} linked
        ${MKDIR} map
        ${LD} -o linked.${COMPONENT} -map -bin -base ${ADDRESS} ${ROMTARGET} ${ABSSYM} > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete
d207 8
a215 81
o.cstart: s.cstart
o.globals:	c.globals
o.globals:	h.URIdefs
o.globals:	h.ModHdr
o.globals:	C:h.kernel
o.globals:	h.globals
o.globals:	h.URI
o.globals:	C:h.kernel
o.globals:	h.ModHdr
o.ModHdr:	cmhg.ModHdr
o.ModHdr:	h.URIdefs
o.ModHdr:	tbox:h.wimp
o.ModHdr:	OS:h.os
o.ModHdr:	OS:h.types
o.module:	c.module
o.module:	C:h.kernel
o.module:	tbox:h.wimp
o.module:	tbox:h.wimplib
o.module:	C:h.swis
o.module:	OS:h.os
o.module:	OS:h.types
o.module:	h.ralloc
o.module:	h.globals
o.module:	h.URI
o.module:	C:h.kernel
o.module:	h.ModHdr
o.module:	h.URIdefs
o.module:	h.ModHdr
o.module:	h.URIdefs
o.module:	h.task
o.module:	h.URIswis
o.ralloc:	c.ralloc
o.ralloc:	C:h.kernel
o.ralloc:	C:h.swis
o.ralloc:	h.ralloc
o.ralloc:	h.globals
o.ralloc:	h.URI
o.ralloc:	C:h.kernel
o.ralloc:	h.ModHdr
o.ralloc:	h.URIdefs
o.robase: s.robase
o.task:	c.task
o.task:	C:h.kernel
o.task:	tbox:h.wimp
o.task:	tbox:h.wimplib
o.task:	C:h.swis
o.task:	h.URI
o.task:	C:h.kernel
o.task:	h.task
o.task:	h.globals
o.task:	h.ModHdr
o.task:	h.URIdefs
o.task:	h.URIswis
o.task:	h.ralloc
o.task:	h.module
o.debug:	c.debug
o.debug:	h.URIdefs
o.debug:	h.ModHdr
o.debug:	C:h.kernel
o.debug:	h.globals
o.debug:	h.URI
o.debug:	C:h.kernel
o.debug:	h.ModHdr
o.URIswis:	c.URIswis
o.URIswis:	C:h.kernel
o.URIswis:	C:h.swis
o.URIswis:	OS:h.os
o.URIswis:	OS:h.types
o.URIswis:	h.ralloc
o.URIswis:	h.globals
o.URIswis:	h.URI
o.URIswis:	C:h.kernel
o.URIswis:	h.ModHdr
o.URIswis:	h.URIdefs
o.URIswis:	h.URIswis
o.URIswis:	h.module
o.ModHdr:	cmhg.ModHdr
o.ModHdr:	h.URIdefs
o.ModHdr:	tbox:h.wimp
o.ModHdr:	OS:h.os
o.ModHdr:	OS:h.types
@


1.3
log
@  URI 0.12 and a half.
Detail:
  This never got checked in before - it appears to have the "directed
    broadcast" fix in it to ensure that the task that launched the URI
    gets the first chance to handle it.
@
text
@d160 81
@


1.2
log
@Build process changes to support better 'clean' target and object file
generation.
@
text
@d87 1
@


1.1
log
@Imported from various ad hoc source control methods
@
text
@d124 2
a125 1
	${WIPE} rm.* ${WFLAGS}
d128 1
d133 1
a133 1
# Target 
d136 1
d144 1
@
