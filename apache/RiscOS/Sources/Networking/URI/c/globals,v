head	1.4;
access;
symbols
	URI-0_27:1.4
	URI-0_26:1.4
	URI-0_25:1.4
	URI-0_24:1.3
	URI-0_23:1.2
	URI-0_22:1.2
	URI-0_21:1.2
	URI-0_20:1.2
	URI-0_19:1.2
	URI-0_18:1.2
	URI-0_17:1.2
	URI-0_16:1.2
	URI-0_15:1.2
	URI-0_14:1.2
	sbrodie_URI-0_12-interim-2:1.2
	sbrodie_URI-0_12-interim:1.2
	sbrodie_Expresso_final_190298:1.1
	sbrodie_URI_0_12:1.1
	sbrodie_URI_0_11:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.09.02.20.33.41;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	yRQOE2rU7y5s8U3x;

1.3
date	2013.09.01.17.46.11;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	nwdFl6Gx7PnZeL3x;

1.2
date	2000.04.14.10.38.39;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.16.12.54;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Internationalised

Version 0.25. Tagged as 'URI-0_25'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File		: globals.c
 * Purpose	: URI handler module global declarations
 * Author	: C.Elkins
 * History	: Started 11/2/97
 */

#include "URIHdr.h"
#include "module.h"
#include "globals.h"

const char		ModuleName[] = Module_Title;
void*			ModuleR12;
URI_handle_t		URI_handle_chain;
volatile int		URI_taskhandle;
volatile int		URI_taskstack;
volatile int		callback_flag;
volatile int		poll_word;
@


1.3
log
@Makefile recreated from fragment
Usual drill: cast away some warnings, shuffle header files a bit, remove redundant files, rename CMHG file to auto generated one.
Tested briefly, still seemed to work.

Version 0.24. Tagged as 'URI-0_24'
@
text
@d21 1
a22 1
#include "URIHdr.h"
a31 15


const _kernel_oserror	error_block[] =
{
  { URI_ErrorChunk+0,	"Bad parameters in URI handler call" },
  { URI_ErrorChunk+1,	"Unable to allocate memory for URI entry" },
  { URI_ErrorChunk+2,	"Bad URI passed to URI handler call" },
  { URI_ErrorChunk+3,	"Bad URI handle passed to URI handler" },
  { URI_ErrorChunk+4,	"Unable to read URI from file" },
  { URI_ErrorChunk+5,	"Use *Desktop to start AcornURI" },
  { URI_ErrorChunk+6,	"AcornURI frontend is currently active" },
  { URI_ErrorChunk+7,	"" },
  { URI_ErrorChunk+8,	"" },
  { URI_ErrorChunk+9,	"" }
};
@


1.2
log
@  URI 0.12 and a half.
Detail:
  This never got checked in before - it appears to have the "directed
    broadcast" fix in it to ensure that the task that launched the URI
    gets the first chance to handle it.
@
text
@d21 2
a22 2
#include "URIdefs.h"
#include "ModHdr.h"
@


1.1
log
@Imported from various ad hoc source control methods
@
text
@d42 1
a42 1
  { URI_ErrorChunk+6,	"" },
@

