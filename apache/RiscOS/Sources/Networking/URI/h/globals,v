head	1.5;
access;
symbols
	URI-0_27:1.5
	URI-0_26:1.5
	URI-0_25:1.5
	URI-0_24:1.4
	URI-0_23:1.3
	URI-0_22:1.3
	URI-0_21:1.3
	URI-0_20:1.3
	URI-0_19:1.3
	URI-0_18:1.3
	URI-0_17:1.3
	URI-0_16:1.3
	URI-0_15:1.3
	URI-0_14:1.3
	sbrodie_URI-0_12-interim-2:1.3
	sbrodie_URI-0_12-interim:1.2
	sbrodie_Expresso_final_190298:1.2
	sbrodie_URI_0_12:1.2
	sbrodie_URI_0_11:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.09.02.20.33.45;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	yRQOE2rU7y5s8U3x;

1.4
date	2013.09.01.17.46.15;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	nwdFl6Gx7PnZeL3x;

1.3
date	2000.04.14.10.40.29;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.02.12.13.13.51;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.16.13.05;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Internationalised

Version 0.25. Tagged as 'URI-0_25'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File		: globals.h
 * Purpose	: define various global objects for the URI handler module
 * Author	: C.Elkins
 * History	: Started 9/2/97
 * 		: 28-Apr-97: BAL: Put action codes in parentheses to ensure
 * 				  intended order of evaluation is what actually
 * 				  happens.
 */

#ifndef _globals_h
#define _globals_h

#ifndef _uri_h
#include "URI.h"
#endif

/*
 * Useful constants & macros
 */

#define UNUSED(x)		(x)=(x)

#ifndef TRUE
#define TRUE			1
#define FALSE			0
#endif

#define MinWimpVersion		310

#define MagicWord		('l' << 24 | 'r' << 16 | 'a' << 8 | 'C')

#define	ServiceA7_Started	0
#define ServiceA7_Dying		1
#define	ServiceA7_Check		2
#define	ServiceA7_Process	3


#define Action_Inform		(1 << 0)
#define Action_Check		(1 << 1)
#define	Action_ActiveOnly	(1 << 2)
#define Action_ServiceA7	(1 << 8)
#define	Action_WimpBroad	(1 << 9)
#define	Action_LoadDone		(1 << 10)
#define Action_WimpUnicast      (1 << 11)
#define Action_URLProto         (1 << 12)
#define	Action_Delete		(1 << 16)
#define Action_Claimed		(1 << 17)


#define ERR(x)			msg_error(x)
#define err_badparams		0
#define err_nomemory		1
#define err_badURI		2
#define err_badhandle		3
#define err_badfile		4
#define err_usedesktop		5
#define err_feactive		6

#ifdef DEBUG
  #if defined DEBUG_TML
    #include "svcprint.h"
    #define M_debug(a) Printf a
  #elif defined PDebug_DEBUG
    #include "PDebug.Send.h"
    #define M_debug(a) PDebug_Printf a
  #elif defined DEBUG_SNB
    extern void SNB_Printf(char*, ...);
    #define M_debug(a) SNB_Printf a
  #else
    #define M_debug(a)
  #endif
#else
  #define M_debug(a)
#endif


/*
 * Types used by URI handler
 */

typedef struct		URI_block
{
  int			guardword;
  int			action;
  struct URI_block*	previous;
  struct URI_block*	next;
  int			taskhandle;
  int                   sourcetask;
  int			length;
  char			string;
} URI_t;


/*
 * Globally visible function definitions
 */


extern void			Printf(char*, ...);

extern void*			Resources(void);
extern int			Image_RO_Base;
extern void* 			ModuleR12;
extern const char		ModuleName[];
extern URI_handle_t		URI_handle_chain;
extern volatile int		URI_taskhandle;
extern volatile int		URI_taskstack;
extern volatile int		callback_flag;
extern volatile int		poll_word;

#endif
@


1.4
log
@Makefile recreated from fragment
Usual drill: cast away some warnings, shuffle header files a bit, remove redundant files, rename CMHG file to auto generated one.
Tested briefly, still seemed to work.

Version 0.24. Tagged as 'URI-0_24'
@
text
@d64 1
a64 2
#define ERR(x)			(_kernel_oserror*)&error_block[x];

d70 2
a71 1

a113 2
extern const _kernel_oserror	error_block[];

d115 1
d119 1
a124 2
extern URI_handle_t		URI_handle_chain;

@


1.3
log
@  Intermediate attempt to support ANT's URL protocol.
Admin:
  Not compiled, not tested, don't use.
@
text
@a30 8
#ifndef __cmhg_module_h
#include "ModHdr.h"
#endif

#ifndef _uridefs_h_
#include "URIdefs.h"
#endif

d114 1
@


1.2
log
@Const-ness of veneers modified on the basis of the CMHG version number to
avoid build problems.

URI handler now attempts to launch tasks properly to satisfy requests if
the appropriate alias$open_uri_* variable is set
@
text
@d66 2
d88 3
d110 1
@


1.1
log
@Imported from various ad hoc source control methods
@
text
@d65 1
@
