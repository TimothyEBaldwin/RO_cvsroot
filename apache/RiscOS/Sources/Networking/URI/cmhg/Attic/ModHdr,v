head	1.4;
access;
symbols
	URI-0_23:1.3
	URI-0_22:1.3
	URI-0_21:1.3
	URI-0_20:1.3
	URI-0_19:1.3
	URI-0_18:1.3
	URI-0_17:1.3
	URI-0_16:1.3
	URI-0_15:1.3
	URI-0_14:1.3
	sbrodie_URI-0_12-interim-2:1.2
	sbrodie_URI-0_12-interim:1.2
	sbrodie_Expresso_final_190298:1.1
	sbrodie_URI_0_12:1.1
	sbrodie_URI_0_11:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.09.01.17.46.13;	author rsprowson;	state dead;
branches;
next	1.3;
commitid	nwdFl6Gx7PnZeL3x;

1.3
date	2000.04.14.15.42.40;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.14.10.38.40;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.16.12.58;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Makefile recreated from fragment
Usual drill: cast away some warnings, shuffle header files a bit, remove redundant files, rename CMHG file to auto generated one.
Tested briefly, still seemed to work.

Version 0.24. Tagged as 'URI-0_24'
@
text
@; Copyright 1998 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; -*-Text-*-
;
; $Version: networking $
;
; $Source: /home/rool/cvsroot/castle/RiscOS/Sources/Networking/URI/cmhg/ModHdr,v $
;
; The module AcornURI supplies a standard interface to broadcasting
; URIs around RISC OS.
;
#include "Global/Services.h"
#include "VersionNum"

; Title string
title-string: AcornURI

; Version information
help-string: AcornURI Module_MajorVersion_CMHG Module_MinorVersion_CMHG

date-string: Module_Date_CMHG

; Initialisation, finalisation

initialisation-code: module_initialise
finalisation-code: module_finalise

library-enter-code: _blib_entermodule
module-is-runnable:

; SWI base, handler and table
swi-chunk-base-number: &4E380
swi-handler-code: module_swi

swi-decoding-table: URI,
                    Version, Dispatch, RequestURI, InvalidateURI

; Service calls
service-call-handler: module_service Service_StartWimp,
                                     Service_Reset,
                                     Service_StartedWimp,
                                     Service_WimpCloseDown

; Callback handler
generic-veneers: callback_entry/callback_handler

; Command table
command-keyword-table: module_command
                       Desktop_AcornURI(min-args: 0, max-args: 0, add-syntax:,
                            help-text:      "The AcornURI module broadcasts URIs around the system.\n",
                            invalid-syntax: "Syntax: *Desktop_AcornURI\n"),
                       URIinfo(min-args: 0, max-args: 0, add-syntax:,
                            help-text:      "*URIinfo produces status information from the Acorn URI handler.\n",
                            invalid-syntax: "Syntax: *URIinfo\n"),
                       URIdispatch(min-args: 1, max-args: 1, add-syntax:,
                            help-text:      "URIdispatch tries to launch a URI.\n",
                            invalid-syntax: "Syntax: *URIdispatch <uri>\n")
@


1.3
log
@  Brought URI module up to date.
Detail:
  Sorted Makefile to have a dirs rule and export a URI SWI veneer (this
  was previously referred to as 'URILib'). Module gets version details
  from the VersionNum file now. Improved *command '*help' output. Got rid
  of redundant Service_Memory handler. Rewrote CMHG file. Added Docs
  and Utils directory, the latter holding Ben Laughton's transmit and
  receive tests - these used !Make-style Makefiles, which have been
  slightly updated to run in a more standard fashion but are still not at
  all pretty. They work though.
Admin:
  RAM and ROM builds (the latter just via. !MkROM directly) tested.
  Export tested. Both test programs built and tested.

Version 0.14. Tagged as 'URI-0_14'
@
text
@d19 1
a19 1
; $Source: /home/renaissa/cvsroot/RiscOS/Sources/Networking/cmhg/ModHdr,v $
@


1.2
log
@  URI 0.12 and a half.
Detail:
  This never got checked in before - it appears to have the "directed
    broadcast" fix in it to ensure that the task that launched the URI
    gets the first chance to handle it.
@
text
@d15 11
a25 2
#include "URIdefs.h"
#include "wimp.h"
d27 5
a31 1
#include "OS:os.h"
d33 3
a35 2
library-enter-code: _blib_entermodule
module-is-runnable:
a37 1

d40 2
a41 5
service-call-handler: module_service	Service_StartWimp,
					Service_Reset,
					Service_StartedWimp,
					Service_WimpCloseDown
					;Service_Memory
d43 3
d47 2
a48 3
title-string: AcornURI

help-string: Acorn_URI URI_Module_Version
d50 5
a54 1
swi-chunk-base-number: URI_SWIChunkBase
d56 2
a57 3
swi-handler-code: module_swi

swi-decoding-table: URI, Version, Dispatch, RequestURI, InvalidateURI
d59 1
d61 9
a69 13
	Desktop_AcornURI(	add-syntax:,
			help-text: ModuleStartCommand" starts the Acorn URI handler.\n",
			invalid-syntax: "Syntax: *"ModuleStartCommand"\n"),
	URIinfo(	add-syntax:,
			help-text: ModuleInfoCommand" produces status information from the Acorn URI handler.\n",
			invalid-syntax: "Syntax: *"ModuleInfoCommand"\n"),
	URIdispatch(min-args: 1,
			max-args: 1,
			add-syntax:,
			help-text: ModuleDispatchCommand" tries to launch a URI.\n",
			invalid-syntax: "Syntax: *"ModuleDispatchCommand" <uri>\n")

generic-veneers: callback_entry/callback_handler
@


1.1
log
@Imported from various ad hoc source control methods
@
text
@d29 2
a30 1
					Service_StartedWimp
@

