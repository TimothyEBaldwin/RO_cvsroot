head	1.3;
access;
symbols
	Econet-5_80:1.3
	Econet-5_79:1.3
	Econet-5_78:1.3
	Econet-5_77:1.2
	Econet-5_76:1.2
	Econet-5_76-pre2:1.2
	Econet-5_76-pre1:1.2;
locks; strict;
comment	@# @;


1.3
date	2016.04.20.20.14.24;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	oI18z70M7b1w8p3z;

1.2
date	2015.07.24.21.41.34;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	7ud03AmizzxWjAuy;

1.1
date	2014.11.09.09.23.12;	author rsprowson;	state Exp;
branches;
next	;
commitid	EmFSFLVXhiAJuuXx;


desc
@@


1.3
log
@Give line labels more sensible names
Binary identical, not tagged.
@
text
@; Copyright 2014 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:CMOS
        GET     Hdr:OsBytes
        GET     Hdr:FSNumbers
        GET     Hdr:NewErrors
                
        TTL     SetStation

        AREA    |SetStation$$Code|, CODE, READONLY, PIC

Legacy_IOCControlSoftCopy * &106        ; Zero page peek

; SetStation
Utility_Code
        SUB     SP,SP,#&30              ; Workaround bug in Arthur 1.20
        LDRB    R0,[R1]
        TEQ     R0,#0                   ; Any args?
        BEQ     %FT20
        MOV     R0,#&0A
        SWI     XOS_ReadUnsigned
        MOVVS   PC,R14
10
        LDRB    R0,[R1],#1
        CMP     R0,#&20                 ; Trim trailing spaces
        BEQ     %BT10
        BCC     %FT30
20
        ADR     R0,ErrorBlock_Syntax
        ORRS    PC,R14,#V_bit
30
        MOVS    R6,R2                   ; Can't be station 0
        BEQ     %FT40
        CMP     R6,#&FF                 ; Can't be station 255
        BCC     %FT50
40
        ADR     R0,ErrorBlock_BadStation
        ORRS    PC,R14,#V_bit
50
        MOV     R7,R14
        MOV     R0,#OsByte_ReadCMOS
        MOV     R1,#NetStnCMOS
        SWI     XOS_Byte
        MOVVS   PC,R7

        TEQ     R2,R6                   ; Station number is already that value anyway
        BICEQS  PC,R7,#V_bit

        MOV     R9,R2
        MOV     R0,#OsByte_ReadCMOS
        MOV     R1,#CheckSumCMOS
        SWI     XOS_Byte
        MOVVS   PC,R7

        MOV     R10,R2
        SUB     R10,R10,R9
        ADD     R10,R10,R2              ; Fix up the checksum

        MOV     R5,#&40                 ; Physical address of NetStnCMOS
        MOV     R4,R6
        BL      LowLevelWrite

        MOV     R5,#&3F                 ; Physical address of CheckSumCMOS
        MOV     R6,R10
        BL      LowLevelWrite

        MOV     R0,#OsByte_ReadCMOS
        MOV     R1,#NetStnCMOS
        SWI     XOS_Byte
        MOVVS   PC,R7
        TEQ     R4,R2                   ; Read back OK?
        BICEQS  PC,R7,#V_bit
        ADR     R0,ErrorBlock_SetStationFails
        ORRS    PC,R7,#V_bit

        DCB     "SetStation", 9, "2.00/0008 (25 Jan 1988) assembled at 16:32:24.", 0
        ALIGN

; Error blocks
ErrorBlock_Syntax
        DCD     ErrorNumber_Syntax
        DCB     "Syntax: *SetStation <new station number>", 0
        ALIGN
ErrorBlock_SetStationFails
        DCD     ErrorNumber_SetStationFails
        DCB     "Fails to update configuration memory", 0
        ALIGN
ErrorBlock_BadStation
        DCD     ErrorNumber_BadStation
        DCB     "Bad station number", 0
        ALIGN

; Bit bashed IIC
LowLevelWrite
        MOV     R8,R14
        SWI     XOS_EnterOS

        BL      LowLevelStart

        MOV     R0,#&A0
        BL      Clock8Bits
        BL      LowLevelAck
        MOV     R0,R5
        BL      Clock8Bits
        BL      LowLevelAck
        MOV     R0,R6
        BL      Clock8Bits
        BL      LowLevelAck

        BL      LowLevelStop

        TEQP    PC,#0
        MOVNV   R0,R0
        MOV     PC,R8

SetClockAndData
        Push    "R0-R2,R14"
        MOV     R0,#OsByte_Wait
        SWI     XOS_Byte                ; Slow down
        LDMIA   SP,{R0,R1}
        ADD     R0,R0,R1,LSL #1
        MOV     R2,#0
        LDRB    R1,[R2,#Legacy_IOCControlSoftCopy]
        BIC     R1,R1,#3
        ORR     R0,R1,R0
        ORR     R0,R0,#&C0
        STRB    R0,[R2,#Legacy_IOCControlSoftCopy]
        MOV     R2,#IOC
        STRB    R0,[R2,#IOCControl]     ; Update IIC lines
        Pull    "R0-R2,PC"

ClockOneBit
        Push    "R1,R14"
        MOV     R1,#0
        BL      SetClockAndData
        MOV     R1,#1
        BL      SetClockAndData
        MOV     R1,#0
        BL      SetClockAndData
        Pull    "R1,PC"

LowLevelStart
        Push    "R0,R1,R14"
        MOV     R0,#1
        MOV     R1,#1
        BL      SetClockAndData
        MOV     R0,#0
        MOV     R1,#1
        BL      SetClockAndData
        MOV     R0,#0
        MOV     R1,#0
        BL      SetClockAndData
        Pull    "R0,R1,PC"

LowLevelAck
        Push    "R0,R1,R14"
        MOV     R0,#1
        MOV     R1,#1
        BL      SetClockAndData
        MOV     R0,#1
        MOV     R1,#0
        BL      SetClockAndData
        Pull    "R0,R1,PC"

LowLevelStop
        Push    "R0,R1,R14"
        MOV     R0,#0
        MOV     R1,#1
        BL      SetClockAndData
        MOV     R0,#1
        MOV     R1,#1
        BL      SetClockAndData
        Pull    "R0,R1,PC"

Clock8Bits ROUT
        Push    "R0-R2,R14"
        MOV     R2,R0
        MOV     R1,#&80
10
        TST     R2,R1
        MOVEQ   R0,#0
        MOVNE   R0,#1
        BL      ClockOneBit
        MOVS    R1,R1,LSR #1
        BNE     %BT10                   ; Sent 8 bits?
        Pull    "R0-R2,PC"

        END
@


1.2
log
@Makefile recreated from fragments
Moved NewOS/OldOS switches into Econet.s.
Updated line labels in SetStn utility to have non-autogenerated names.
Note: as a result of simplifying the Makefile, it is no longer possible to build an EconetMsgs module.

Binary identical, not tested. Tagged as Econet-5_76-pre1.
@
text
@d32 1
a32 1
        SUB     SP,SP,#&30
d46 1
a46 1
        ORRS    PC,R14,#&10000000
d54 1
a54 1
        ORRS    PC,R14,#&10000000
d63 1
a63 1
        BICEQS  PC,R7,#&10000000
d88 1
a88 1
        BICEQS  PC,R7,#&10000000
d90 1
a90 1
        ORRS    PC,R7,#&10000000
d117 1
a117 1
        BL      subroutine_2
d120 1
a120 1
        BL      subroutine_2
d123 1
a123 1
        BL      subroutine_2
d132 1
a132 1
subroutine_5
d148 1
a148 1
subroutine_0
d151 1
a151 1
        BL      subroutine_5
d153 1
a153 1
        BL      subroutine_5
d155 1
a155 1
        BL      subroutine_5
d162 1
a162 1
        BL      subroutine_5
d165 1
a165 1
        BL      subroutine_5
d168 1
a168 1
        BL      subroutine_5
d175 1
a175 1
        BL      subroutine_5
d178 1
a178 1
        BL      subroutine_5
d185 1
a185 1
        BL      subroutine_5
d188 1
a188 1
        BL      subroutine_5
d191 1
a191 1
subroutine_2 ROUT
d199 1
a199 1
        BL      subroutine_0
@


1.1
log
@Import of SetStation sources
Recreated with the help of !SID, this is the utility previously supplied with AUN to set a machine's station number. Note, it pokes IOC and has various other 26 bit delights in it.
Produces almost the same binary, with the exception of LDRB rn,[rd] which AAsm used to create LDRB rn,[rd],#0 for,
Not tagged.
@
text
@d113 3
a115 1
        BL      subroutine_1
d118 1
a118 1
        BL      subroutine_3
d121 1
a121 1
        BL      subroutine_3
d124 4
a127 2
        BL      subroutine_3
        BL      subroutine_6
d158 1
a158 1
subroutine_1
d171 1
a171 1
subroutine_3
d181 1
a181 1
subroutine_6
@

