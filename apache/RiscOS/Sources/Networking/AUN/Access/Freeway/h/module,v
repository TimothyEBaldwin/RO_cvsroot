head	4.8;
access;
symbols
	Freeway-0_41:4.8
	Freeway-0_40:4.8
	Freeway-0_39:4.8
	Freeway-0_38:4.7
	Freeway-0_37:4.6
	Freeway-0_36:4.5
	Freeway-0_35:4.5
	RO_5_07:4.5
	Freeway-0_34:4.5
	Freeway-0_33:4.5
	Freeway-0_32:4.5
	Freeway-0_31:4.5
	Freeway-0_30:4.5
	Freeway-0_29:4.5
	mstphens_UrsulaRiscPCBuild_20Nov98:4.4
	Ursula_RiscPC:4.4.0.4
	rthornb_UrsulaBuild-19Aug1998:4.4
	UrsulaBuild_FinalSoftload:4.4
	rthornb_UrsulaBuild-12Aug1998:4.4
	aglover_UrsulaBuild-05Aug1998:4.4
	rthornb_UrsulaBuild-29Jul1998:4.4
	rthornb_UrsulaBuild-22Jul1998:4.4
	rthornb_UrsulaBuild-15Jul1998:4.4
	rthornb_UrsulaBuild-07Jul1998:4.4
	rthornb_UrsulaBuild-17Jun1998:4.4
	Ursula_bp:4.4
	Ursula:4.4.0.2
	celkins_Freeway-0_28:4.4
	rthornb_UrsulaBuild-03Jun1998:4.3
	rthornb_UrsulaBuild-27May1998:4.3
	rthornb_UrsulaBuild-21May1998:4.3
	Ursula_13May1998_bp:4.3
	Ursula_13May1998:4.3.0.2
	rthornb_UrsulaBuild_01May1998:4.3
	Daytona:4.3.0.4
	Daytona_bp:4.3
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.2
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.8
date	2015.06.17.21.14.16;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	66uUt1H17KKXmPpy;

4.7
date	2013.08.26.10.29.02;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	5t2rCCsxEEOV0X2x;

4.6
date	2013.04.06.06.46.00;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	6L1dX29ZCuxtlGKw;

4.5
date	99.08.16.15.11.50;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	98.06.16.15.57.27;	author celkins;	state Exp;
branches;
next	4.3;

4.3
date	97.05.13.18.57.30;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.05.13.11.38.38;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.26.41;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.26.41;	author nturton;	state Exp;
branches;
next	4.1.1.2;

4.1.1.2
date	96.11.05.16.16.43;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.58.49;	author nturton;	state Exp;
branches;
next	4.1.3.2;

4.1.3.2
date	96.11.08.17.19.59;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.8
log
@Have Freeway look after its own messages
Remove faulty logic for Service_MessageFileClosed, MessageTrans reopens the file, so no need to do it again locally.
Usual register/deregister/reregister code for ResourceFS.
Replace clumsy casts of (_kernel_oserror *)0 with NULLs.

Version 0.39. Tagged as 'Freeway-0_39'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 *
 * module.h (Freeway)
 *
 * Copyright (C) Acorn Computers Ltd. 1991
 */

#include "kernel.h"

#include "Global/RISCOS.h"
#include "Global/Services.h"
#include "Global/Upcall.h"

#ifdef DEBUG
#  define DEBUGLIB
#endif
#include "DebugLib/DebugLib.h"

#define REFRESH_INTERVAL  3000
#define REMOVE_TOUT       200
#define ADD_TOUT          200
#define DOMAIN_DISC       1
#define DOMAIN_PRINTER    2
#define DOMAIN_HOST       5

struct fwtype
{
    struct fwtype    *fw_next;
    int		      fw_number;
    char	      fw_name[16];	/* CE - 25/11/96 ; added (description) */
    int		      fw_refcount;
    int		      fw_validate;
    int		      fw_dovalidate;
    int		      fw_authreqtout;
    int		      fw_doauthreq;
    int		      fw_removetout;
    int		      fw_doremove;
    int		      fw_addtout;
    int		      fw_doadd;
    struct object_q  *fw_remobj;      /* remote unauthenticated objects */
#if 0
    struct object_q  *fw_locobj;      /* local unauthenticated objects */
#endif
    struct authreq_q *fw_authreq;     /* list of locally registered auth values */
};

struct fw
{
    int		     fw_rssock;
    int		     fw_rssock1;
    int		     fw_ifcnt;
    char	     fw_ifunit[16][16];
    u_long	     fw_ifaddrs[16];
    u_long	     fw_ifbcast[16];
    struct address_q *fw_netadrs;
    struct fwtype    *fw_types;
};

struct serial_if
{
  int		serial_if_request;	/* 1=> bring up interface */
  int		serial_if_action;	/* reason code for interface state change */
  char		serial_if_name[16];	/* name of interface to use */
};

struct rs_msg
{
    char	       rs_msgid;
#define REQUEST	       1
#define ADD	       2
#define REMOVE	       3
#define REFRESH	       4
    short	       rs_type;
    short	       rs_format;
    short	       rs_nblocks;
    /* variable length body follows */
};

#define RETRY_INTERVAL	  500
#define MAX_RETRIES	    3

struct object_q
{
    struct object_q   *r_next;
    short	       r_inuse;
    struct in_addr     r_ip;		     /* owner's IP address */
    short	       r_validate;	     /* type refresh interval countdown */
    int		       r_dovalidate;
    int		       r_retries;
    int		       r_format;	     /* 0=unauthenticated, 1=authenticated */
    char	      *r_title;		     /* object name */
    char	      *r_desc;		     /* descriptor field */
    int		       r_desclen;	     /* length of descriptor field */
    int		       r_authval;	     /* authenticator value */
    int		       r_local;		     /* object is local */
};

struct authreq_q
{
    struct authreq_q  *a_next;
    short	      a_refcount;
    int		      a_authval;
};

struct address_q
{
    struct address_q *q_next;
    struct in_addr    q_bcast;
};

#define SocketIO	   1 /* Subreason to internet event */

#define FWPORT		   0x8002
#define FWPORT1		   0x8003

#define FW_ADDED    0
#define FW_REMOVED  1
#define FW_CHANGED  2
#define FW_DELETED  3

struct eblk
{
    int   err_nbr;
    char *err_token;
};

#define Err_FWType     1
#define Err_FWOExt     2
#define Err_FWONex     3
#define Err_FWDBuf     4
#define Err_FWNBuf     5
#define Err_FWNMem     6
#define Err_FWOUnk     7
#define Err_FWNNet     8
#define Err_FWLStr     9
#define Err_FWNLoc     10
#define Err_FWNAut     11
#define Err_FWNoInet   12
#define Err_FWStatus   13
#define Err_FWInvalSWI 14
#define Err_FWSerNoInt 15
#define Err_FWSerParam 16

/*
 * function declarations
 */
extern const char *fw_lookup(const char *token);
extern _kernel_oserror *fw_error(int error);
extern _kernel_oserror *RegisterType(_kernel_swi_regs *r);
extern _kernel_oserror *WriteObject(_kernel_swi_regs *r);
extern _kernel_oserror *ReadObject(_kernel_swi_regs *r);
extern _kernel_oserror *EnumerateObjects(_kernel_swi_regs *r);

extern struct fwtype *gettype(int type);

extern int type_id(char *str);
extern void *Resources(void); /* From ResGen */

extern void setcallback(void);
extern void fw_upcall(int upc, int type, struct object_q *rq);
extern void do_protocol(struct fwtype *f, u_long dest, struct object_q *rq,
			int msgid, int format, int rauthval, int skipauth);
extern void process_message(u_long src, struct rs_msg *rsm, int len,
			    int format);
extern void check_objects(struct fwtype *f);
extern void do_objects_on_callback(void);

extern u_long local_adr;
extern int doobjects;
extern struct fw fw;
extern struct serial_if serial_if;

			     /* .oOo. */

extern void do_objects_on_callback(void);
extern void check_objects(struct fwtype *f);
extern void do_protocol(struct fwtype *f, u_long dest, struct object_q *rq,
			int msgid, int format, int rauthval, int skipauth);
extern void process_message(u_long src, struct rs_msg *rsm,
			    int len, int format);

/* EOF module.h */
@


4.7
log
@Internationalised non error strings
Freeway looked up its error messages via MessageTrans but for some reason used baked in english everywhere else.
* New function fw_lookup() looks up a token
* Removed Err_FWCAASyn since it had the wrong error number, and (using the Wimp as precedence) can just return configure_BAD_OPTION instead
* Lined up remote nets in *FwShow with remote objects
* Help and Syntax taken from messages file (requires RISC OS 3.60+)
* Other strings now looked up too

Tested with 1 printer, 1 disc, 1 host, 2 remote nets, and brief check of help.
Requires AUNMsgs-0_23.

Version 0.38. Tagged as 'Freeway-0_38'
@
text
@a134 2
#define MSG_FILE "Resources:$.Resources.Freeway.Messages"

d171 1
@


4.6
log
@Makefile recreated from fragments
Usual drill
* Rename CMHG file to be the auto generated one
* Cast away some warnings
* Swap a few header files around, use defs from central headers where available
Also, add hdr/Freeway which in turn will be exported and end up in <swis.h>.

Participated in a ROM build, but not functionally tested.

Version 0.37. Tagged as 'Freeway-0_37'
@
text
@d34 5
a38 8
#define REMOVE_TOUT	  200
#define ADD_TOUT	  200
#define DOMAIN_DISK	    1
#define DOMAIN_DISC_N	    "Discs"
#define DOMAIN_PRINTER	    2
#define DOMAIN_PRINTER_N    "Printers"
#define DOMAIN_HOST	    5
#define DOMAIN_HOST_N	    "Hosts"
d139 1
a139 1
    int	  err_nbr;
a158 1
#define Err_FWCAASyn   17
d163 1
@


4.5
log
@  Much tidying up, and support for new CMOS bit to prevent Freeway setting
    default addresses on interfaces.
Detail:
  Removed obsolete source files and headers.
  CMHG file pulls in details from global header files and VersionNum.
  CMHG uses proper veneers for functions and generates the header file
    for module.c to relieve it from having to mis-declare the veneer
    functions.
  Debugging is now entirely DebugLib based.
  Fixed short buffer which would cause the machine to die with aborts
    if an error message was just a bit too long for it.
Admin:
  Requires HdrSrc-0_28 or later.
  Tested in Ursula ROM build.

Version 0.29. Tagged as 'Freeway-0_29'
@
text
@d128 1
a128 4
#define Internet_Event	     Event_Internet
#define SocketIO	      1
#define Event_Enable	     14
#define Event_Disable	     13
a139 4
#ifndef Econet_EnumerateMap
#define Econet_EnumerateMap	 0x4001e
#endif

a192 4
extern int ensure_irqs_off(void);
extern int ensure_irqs_on(void);
extern void restore_irqs(int s);

@


4.4
log
@Unfortunately, this logs changes that were made some time ago.

Added facility for clients to register a descriptive string for a type.
(Printers are still special cased, since I've not modified the client code).
Added support for use of a single point to point interface.

Removed local copies of standard library functions, and linked against
library instead.
@
text
@d15 1
a15 43
/* -*-C-*-
 *
 * $Header: /ax/networking:Starling/Freeway/module.h:networking  1.12  $
 * $Source: /ax/networking:Starling/Freeway/module.h: $
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * 96/11/28 - CE rev 0.28
 * Increased size of interface table in 'fw' struct to 16 (5 seemed small, and 16
 * should be big enough ;-)) : added support for *a* serial interface (eg PPP) :
 * added 'names' of known types of object, and slot in struct fwtype to hold
 * a name for a type at registration time.
 *
 * $Log:	module.h,v $
 * Revision 1.12  95/03/19  18:07:49  kwelton
 * Removed a couple of redundant definitions, and added function prototype
 * for ensure_irqs_off().
 *
 * Revision 1.11  95/03/19  17:18:21  kwelton
 * fw_service() is a void function, not _kernel_oserror *.
 *
 * Revision 1.10  95/03/10  17:13:41  kwelton
 * Removed unwanted guff which should be obtained from "sys/dcistructs.h";
 * added another error
 *
 * Revision 1.9  95/03/07  20:55:42  kwelton
 * Added new internationalised error Err_FWNoInet.
 *
 * Revision 1.8  95/03/05  16:05:35  kwelton
 * Tidied up scope and declarations of both functions and
 * variables; the module now compiles cleanly with -ffah.
 *
 * Revision 1.7  95/03/01  09:09:21  pwain
 * Added Domain Printers definition
 *
 * Revision 1.6  95/02/16  15:39:26  pwain
 * Added SWI "Freeway_Status". With the reson code 0 in R0 this will
 * return 1 if Freeway is running and accepting SWIs or 0 if it is
 * dormant in R1.
 *
 * Revision 1.5  95/02/02  08:59:51  pwain
 * Changed pickup point for DCI structures from module.h
 * to "sys/dcistructs.h".
d17 1
a17 16
 * Revision 1.4  95/02/01  15:24:23  pwain
 * Added in more debug Printf()s.
 * Changed the way the internet module is 1st checked for to use a searc
 * on its name. (OS Module 18 call)
 *
 * Revision 1.3  95/01/26  09:42:30  pwain
 * Added in support for loading from system ROM (unordered startup)
 * Debugging of startup using TML cards (CFLAGS = -DDEBUG)
 * General code tidy up to change DCI2-isms to DCI4
 * Tidy of module header (correct declaration of exit routines)
 *
 * Revision 1.2  95/01/18  14:07:43  pwain
 * *** empty log message ***
 *
 * Revision 1.1  95/01/03  18:57:33  kwelton
 * Initial revision
d19 1
d22 11
d128 1
a128 4
#define EventV		     16
#define TickerV		     28
#define Event_Econet_OSProc  16
#define Internet_Event	     19
a135 5
#define Service_FreewayStarting	   0x95
#define Service_FreewayTerminating 0x96

#define UpCall_Freeway 12

a140 2
#define Service_FindNetworkDriver   0x84

d169 1
a169 13

/*
 * Used to pick up on new device drivers starting.
 */
#ifdef OldCode
#define DCIDeviceStatus 0x9d
#define DCIProtocol 0x9f
#define DCIEnumDrivers 0x9b
#endif

#include "kernel.h"
#include "netinet/in.h"
#include "inetlib.h"
a173 5
extern _kernel_oserror *fw_init(char *cmd_tail, int pbase, void *pw);
extern _kernel_oserror *fw_cli_handler(char *arg_string, int arg_count,
				       int cmd_no, void *pw);
extern _kernel_oserror *fw_swi_handler(int swinum, _kernel_swi_regs *r,
				       void *pw);
a181 2
/* extern struct in_addr inet_makeaddr(int net, int host); */

a182 16
extern int callb_handler(void);
extern int tick_handler(void);
extern int readdevice_handler(void);
extern int fw_event_handler(int *r);

/*
 * Use standard versions of these from the relevant header
 *
 * extern char *inet_ntoa(struct in_addr in);
 *
 * extern u_long ntohl(u_long x);
 * extern u_long htonl(u_long x);
 * extern u_short ntohs(u_short x);
 * extern u_short htons(u_short x);
 *
 */
a184 1
extern void fw_service(int service_number, _kernel_swi_regs *r, void *pw);
a197 4
#ifdef DEBUG
extern void Printf(char *format, ...);
#endif

a198 2
extern int fw_event_entry(char *pw);
extern int tick_entry(char *pw);
a209 5

extern _kernel_oserror *RegisterType(_kernel_swi_regs *r);
extern _kernel_oserror *ReadObject(_kernel_swi_regs *r);
extern _kernel_oserror *WriteObject(_kernel_swi_regs *r);
extern _kernel_oserror *EnumerateObjects(_kernel_swi_regs *r);
@


4.3
log
@Made to build correctly on trunk
@
text
@d17 2
a18 2
 * $Header: /projects2/renaissa/cvsroot/RiscOS/Sources/Networking/AUN/Access/Freeway/h/module,v 4.2 1997/05/13 11:38:38 kbracey Exp $
 * $Source: /projects2/renaissa/cvsroot/RiscOS/Sources/Networking/AUN/Access/Freeway/h/module,v $
d22 7
a28 1
 * :RCS Log discontinued:
d82 1
d84 1
d86 1
d92 1
d114 3
a116 2
    u_long	     fw_ifaddrs[5];
    u_long	     fw_ifbcast[5];
d118 8
a125 1
    struct fwtype   *fw_types;
d222 2
d236 1
d254 1
a254 1
extern struct in_addr inet_makeaddr(int net, int host);
d262 11
a272 1
extern char *inet_ntoa(struct in_addr in);
d287 1
@


4.2
log
@Version RO_3_71 taken
@
text
@d17 1
a17 1
 * $Header: /projects2/renaissa/cvsroot/RiscOS/Sources/Networking/AUN/Access/Freeway/h/module,v 4.1.3.2 1996/11/08 17:19:59 nturton Exp $
d26 1
a26 1
 * 
d29 1
a29 1
 * 
d33 1
a33 1
 * 
d36 1
a36 1
 * 
d40 1
a40 1
 * 
d43 1
a43 1
 * 
d48 1
a48 1
 * 
d52 1
a52 1
 * 
d57 1
a57 1
 * 
d63 1
a63 1
 * 
d66 1
a66 1
 * 
d69 1
a69 1
 * 
a241 5

extern u_long ntohl(u_long x);
extern u_long htonl(u_long x);
extern u_short ntohs(u_short x);
extern u_short htons(u_short x);
@


4.1
log
@Initial revision
@
text
@d17 2
a18 2
 * $Header: /ax/networking:Starling/Freeway/module.h:networking  1.12  $
 * $Source: /ax/networking:Starling/Freeway/module.h: $
d22 1
a22 1
 * $Log:	module.h,v $
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.3.2
log
@RCS Log keyword removed
@
text
@d22 1
a22 1
 * :RCS Log discontinued:
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@


4.1.1.2
log
@Log keyword removed
@
text
@d22 1
a22 1
 * :RCS Log discontinued:
@
