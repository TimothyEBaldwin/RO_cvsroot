head	4.2;
access;
symbols
	Net-6_26:4.2
	Net-6_25:4.2
	Net-6_24:4.2
	Net-6_23:4.2
	Net-6_22:4.2
	Net-6_21:4.2
	RO_5_07:4.2
	Net-6_20:4.2
	Net-6_19:4.2
	Net-6_18:4.2
	Ursula_merge:4.2
	Ursula_13May1998_merge:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.6
	Ursula_13May1998_bp:4.2
	Ursula_13May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	Daytona:4.2.0.4
	Daytona_bp:4.2
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	97.05.13.11.25.52;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.28.28;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.28.28;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.22.31.36;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Version RO_3_71 taken
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* af.h
 *
 * Author: Keith Ruttle (Acorn)
 *
 * Description
 * ===========
 * Header file for af.c routines
 *
 * Environment
 * ===========
 * Acorn RISC OS 3.11 or later.
 *
 * Compiler
 * ========
 * Acorn Archimedes C release 5.06 or later.
 *
 * Change record
 * =============
 *
 * JPD  Jem Davies (Cambridge Systems Design)
 *
 * 13-Oct-95  15:34  JPD  Version 1.00
 * First version with change record.
 *
 *
 **End of change record*
 */

/******************************************************************************/

#ifdef OldCode
struct afswitch {
        int     (*af_hash)();
        int     (*af_netmatch)();
        int     (*af_output)();
        int     (*af_portmatch)();
        int     (*af_portcheck)();
        int     (*af_checkhost)();
        int     (*af_rtflags)();
        int     (*af_sendroute)();
        int     (*af_canon)();
        char    *(*af_format)();
};

struct afhash {
        u_int   afh_hosthash;
        u_int   afh_nethash;
};

extern struct  afswitch afswitch[];
extern int     af_max;

#else

struct afswitch
{
   int  (*af_hash)();
   int  (*af_netmatch)();
   int  (*af_output)();
   int  (*af_portmatch)();
   int  (*af_portcheck)();
   int  (*af_checkhost)();
   int  (*af_rtflags)();
   int  (*af_sendroute)();
   int  (*af_canon)();
   char *(*af_format)();
};

struct afhash
{
   u_int afh_hosthash;
   u_int afh_nethash;
};

extern struct afswitch afswitch[];
extern int    af_max;

extern void inet_hash(register struct sockaddr_in *sin, struct afhash *hp);
extern int inet_netmatch(struct sockaddr_in *sin1, struct sockaddr_in *sin2);
extern void inet_output(int s, int flags, struct sockaddr_in *sin, int size);

#endif

/******************************************************************************/

/* af.h */
@


4.1
log
@Initial revision
@
text
@d15 27
d43 3
d47 1
a47 1
        int     (*af_hash)(); 
d49 2
a50 2
        int     (*af_output)();  
        int     (*af_portmatch)(); 
d52 5
a56 5
        int     (*af_checkhost)(); 
        int     (*af_rtflags)(); 
        int     (*af_sendroute)(); 
        int     (*af_canon)(); 
        char    *(*af_format)(); 
d60 1
a60 1
        u_int   afh_hosthash; 
d64 1
a64 1
extern struct  afswitch afswitch[]; 
d66 35
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a0 41
/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* af.h
 *
 * Author: Keith Ruttle (Acorn)
 *
 * Description
 * ===========
 * Header file for af.c routines
 *
 * Environment
 * ===========
 * Acorn RISC OS 3.11 or later.
 *
 * Compiler
 * ========
 * Acorn Archimedes C release 5.06 or later.
 *
 * Change record
 * =============
 *
 * JPD  Jem Davies (Cambridge Systems Design)
 *
 * 13-Oct-95  15:34  JPD  Version 1.00
 * First version with change record.
 *
 *
 **End of change record*
 */
a15 3
/******************************************************************************/

#ifdef OldCode
d17 1
a17 1
        int     (*af_hash)();
d19 2
a20 2
        int     (*af_output)();
        int     (*af_portmatch)();
d22 5
a26 5
        int     (*af_checkhost)();
        int     (*af_rtflags)();
        int     (*af_sendroute)();
        int     (*af_canon)();
        char    *(*af_format)();
d30 1
a30 1
        u_int   afh_hosthash;
d34 1
a34 1
extern struct  afswitch afswitch[];
a35 35

#else

struct afswitch
{
   int  (*af_hash)();
   int  (*af_netmatch)();
   int  (*af_output)();
   int  (*af_portmatch)();
   int  (*af_portcheck)();
   int  (*af_checkhost)();
   int  (*af_rtflags)();
   int  (*af_sendroute)();
   int  (*af_canon)();
   char *(*af_format)();
};

struct afhash
{
   u_int afh_hosthash;
   u_int afh_nethash;
};

extern struct afswitch afswitch[];
extern int    af_max;

extern void inet_hash(register struct sockaddr_in *sin, struct afhash *hp);
extern int inet_netmatch(struct sockaddr_in *sin1, struct sockaddr_in *sin2);
extern void inet_output(int s, int flags, struct sockaddr_in *sin, int size);

#endif

/******************************************************************************/

/* af.h */
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
