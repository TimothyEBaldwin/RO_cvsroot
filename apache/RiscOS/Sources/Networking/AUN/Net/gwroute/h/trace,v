head	4.2;
access;
symbols
	Net-6_26:4.2
	Net-6_25:4.2
	Net-6_24:4.2
	Net-6_23:4.2
	Net-6_22:4.2
	Net-6_21:4.2
	RO_5_07:4.2
	Net-6_20:4.2
	Net-6_19:4.2
	Net-6_18:4.2
	Ursula_merge:4.2
	Ursula_13May1998_merge:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.6
	Ursula_13May1998_bp:4.2
	Ursula_13May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	Daytona:4.2.0.4
	Daytona_bp:4.2
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	97.05.13.11.25.57;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.28.28;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.28.28;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.22.31.41;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Version RO_3_71 taken
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* trace.h
 *
 * Author: Keith Ruttle (Acorn)
 *
 * Description
 * ===========
 * Header file for routines to trace actions of NetG module
 *
 * Environment
 * ===========
 * Acorn RISC OS 3.11 or later.
 *
 * Compiler
 * ========
 * Acorn Archimedes C release 5.06 or later.
 *
 * Change record
 * =============
 *
 * JPD  Jem Davies (Cambridge Systems Design)
 *
 * 05-Oct-95  17:28  JPD  Version 1.00
 * First version with change record.
 *
 *
 **End of change record*
 */

/******************************************************************************/

extern void traceon(char *file);

/******************************************************************************/

extern void traceoff(void);

/******************************************************************************/

extern void dumppacket(char *dir, struct sockaddr_in *who, char *cp,
                                      register int size,struct timeval * stamp);

/******************************************************************************/

extern char *sprintdest(u_long saddr);

/******************************************************************************/

#ifdef OldCode
/*
 * Packet tracing
 */
extern int     traceactions;           /* on/off */

#define TRACE_ACTION(action, route) { \
          if (traceactions) \
                traceaction(action, route); \
        }
#define TRACE_NEWMETRIC(route, newmetric) { \
          if (traceactions) \
                tracenewmetric(route, newmetric); \
        }
#define TRACE_INPUT(ifp, src, pack, size) { \
          if (traceactions) \
                dumppacket("from", src, pack, size, &now); \
        }
#define TRACE_OUTPUT(ifp, dst, size) { \
          if (traceactions) \
                dumppacket("to", dst, packet, size, &now); \
        }
#else
/*
 * Packet tracing
 */

#if 0
#define TRACE_ACTION(action, route) \
{ \
   if (traceactions) \
      traceaction(action, route); \
}
#else
#define TRACE_ACTION(action, route)
#endif

#if 0
#define TRACE_NEWMETRIC(route, newmetric) \
{ \
   if (traceactions) \
      tracenewmetric(route, newmetric); \
}
#else
#define TRACE_NEWMETRIC(route, newmetric)
#endif

#define TRACE_INPUT(ifp, src, pack, size) \
{ \
   if (traceactions) \
      dumppacket("from", src, pack, size, &now); \
}

#define TRACE_OUTPUT(ifp, dst, size) \
{ \
   if (traceactions) \
      dumppacket("to", dst, packet, size, &now); \
}

#endif

/******************************************************************************/

/* EOF trace.h */
@


4.1
log
@Initial revision
@
text
@d15 48
d64 1
a64 1
 * Packet tracing 
d84 42
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a0 62
/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* trace.h
 *
 * Author: Keith Ruttle (Acorn)
 *
 * Description
 * ===========
 * Header file for routines to trace actions of NetG module
 *
 * Environment
 * ===========
 * Acorn RISC OS 3.11 or later.
 *
 * Compiler
 * ========
 * Acorn Archimedes C release 5.06 or later.
 *
 * Change record
 * =============
 *
 * JPD  Jem Davies (Cambridge Systems Design)
 *
 * 05-Oct-95  17:28  JPD  Version 1.00
 * First version with change record.
 *
 *
 **End of change record*
 */

/******************************************************************************/

extern void traceon(char *file);

/******************************************************************************/

extern void traceoff(void);

/******************************************************************************/

extern void dumppacket(char *dir, struct sockaddr_in *who, char *cp,
                                      register int size,struct timeval * stamp);

/******************************************************************************/

extern char *sprintdest(u_long saddr);

/******************************************************************************/

#ifdef OldCode
d16 1
a16 1
 * Packet tracing
a35 42
#else
/*
 * Packet tracing
 */

#if 0
#define TRACE_ACTION(action, route) \
{ \
   if (traceactions) \
      traceaction(action, route); \
}
#else
#define TRACE_ACTION(action, route)
#endif

#if 0
#define TRACE_NEWMETRIC(route, newmetric) \
{ \
   if (traceactions) \
      tracenewmetric(route, newmetric); \
}
#else
#define TRACE_NEWMETRIC(route, newmetric)
#endif

#define TRACE_INPUT(ifp, src, pack, size) \
{ \
   if (traceactions) \
      dumppacket("from", src, pack, size, &now); \
}

#define TRACE_OUTPUT(ifp, dst, size) \
{ \
   if (traceactions) \
      dumppacket("to", dst, packet, size, &now); \
}

#endif

/******************************************************************************/

/* EOF trace.h */
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
