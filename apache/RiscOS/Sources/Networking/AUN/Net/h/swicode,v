head	4.2;
access;
symbols
	Net-6_26:4.2
	Net-6_25:4.2
	Net-6_24:4.1.1.1
	Net-6_23:4.1.1.1
	Net-6_22:4.1.1.1
	Net-6_21:4.1.1.1
	RO_5_07:4.1.1.1
	Net-6_20:4.1.1.1
	Net-6_19:4.1.1.1
	Net-6_18:4.1.1.1
	Ursula_merge:4.1.1.1
	Ursula_13May1998_merge:4.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.1.1
	Ursula_RiscPC:4.1.1.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1.1.1
	UrsulaBuild_FinalSoftload:4.1.1.1
	rthornb_UrsulaBuild-12Aug1998:4.1.1.1
	aglover_UrsulaBuild-05Aug1998:4.1.1.1
	rthornb_UrsulaBuild-29Jul1998:4.1.1.1
	rthornb_UrsulaBuild-22Jul1998:4.1.1.1
	rthornb_UrsulaBuild-15Jul1998:4.1.1.1
	rthornb_UrsulaBuild-07Jul1998:4.1.1.1
	rthornb_UrsulaBuild-17Jun1998:4.1.1.1
	rthornb_UrsulaBuild-03Jun1998:4.1.1.1
	rthornb_UrsulaBuild-27May1998:4.1.1.1
	rthornb_UrsulaBuild-21May1998:4.1.1.1
	Ursula_bp:4.1.1.1
	Ursula:4.1.1.1.0.6
	Ursula_13May1998_bp:4.1.1.1
	Ursula_13May1998:4.1.1.1.0.2
	rthornb_UrsulaBuild_01May1998:4.1.1.1
	Daytona:4.1.1.1.0.4
	Daytona_bp:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2015.05.29.19.29.05;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	2VVHsW5ULMhIonny;

4.1
date	96.11.05.09.28.30;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.28.30;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.22.31.54;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Have Net look after its own messages
Net was trying to share some messages with the Econet module, though on balance this wasn't particularly useful as it then needed to duplicate message handling code to keep 2 files open. Because those messages were held in AUNMsgs they didn't get tokenised in ROM, overall ending up taking more space.

Register in ResourcesFS at run time for RAM targets, add tokenisation directives for ROM targets, removed redundant !Configure related strings.
Changed the messages fd to be int's to ensure word alignment.
Removed inappropriate Service_MessageFileClosed handler, MessageTrans reopens the files (since the fd is in the RMA) so no need to reopen them a second time. This service call is intended to recache direct pointers to tokens, but none are ever taken.
Save time by just making textbuf a zero length string rather than memset()ing the whole buffer.
Resolved a couple more compiler warnings (but NetG still doesn't compile).
Fix bug where a failure to enable the internet event would decrement the internet event count for any other modules interested in that event.
Use CMHG finalisation rather than atexit().
Error "AUN not configured" now uses a non zero trappable error number.
Error number for BadSWI corrected from 0x111 to 0x110.

Requires HdrSrc-2_51 for the error number.

Version 6.25. Tagged as 'Net-6_25'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* swicode.h
 *
 * Author: Jem Davies (Cambridge Systems Design)
 *
 * Description
 * ===========
 * Header file for code handling SWIs issued to the Net module
 *
 * Environment
 * ===========
 * Acorn RISC OS 3.11 or later.
 *
 * Compiler
 * ========
 * Acorn Archimedes C release 5.02 or later.
 *
 * Change record
 * =============
 *
 * JPD  Jem Davies (Cambridge Systems Design)
 *
 *
 * 21-Dec-94  15:15  JPD  Version 1.00
 * Created.
 *
 * 11-Jan-95  16:25  JPD  Version 1.01
 * Continued changes towards using -fah compilation option.
 *
 * 24-Jan-95  16:53  JPD  Version 1.02
 * Added NetworkParameters().
 *
 **End of change record*
 */

/******************************************************************************/

extern _kernel_oserror *init_msgs(const char *filename, int *fd);

/*
 * Open MessageTrans message file
 *
 * Parameters:
 *    filename : pointer to the filename
 *    fd       : pointer to where to return the MessageTrans file descriptor
 *
 * Returns:
 *     0 : => success
 *    !0 : => error (pointer to standard RISC OS error block)
 */

/******************************************************************************/

extern void release_msgs(int *fd);

/*
 * Close MessageTrans message file
 *
 * Parameters:
 *    fd       : pointer to the MessageTrans file descriptor
 *
 * Returns:
 *    None
 */

/******************************************************************************/

extern _kernel_oserror *call_econet(int swinum, _kernel_swi_regs *r);

/* Issue a SWI call to the real Econet module (X-form of the SWI)
 *
 * Parameters:
 *    swinum : the SWI number
 *    r      : pointer to the registers block
 *
 * Returns:
 *    the value of R0
 */

/******************************************************************************/

extern _kernel_oserror *init_econet(void);

/* When the Net module is initialised, it replaces the Econet module as the
 * module that handles the "Econet" SWI chunk, i.e. Econet SWIs are now
 * handed to us. In order to hand SWIs on to the real Econet module we must
 * find the real Econet module and take note of its entries, so that we can
 * call it directly.
 *
 * Parameters:
 *    None
 *
 * Returns:
 *     0 : => success
 *    !0 : => error (pointer to standard RISC OS error block)
 */

/******************************************************************************/

extern _kernel_oserror *CreateReceive(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ExamineReceive(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ReadReceive(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *AbandonReceive(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *WaitForReception(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *EnumerateReceive(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *StartTransmit(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *PollTransmit(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *AbandonTransmit(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *DoTransmit(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ReadLocalStationAndNet(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ConvertStatusToString(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ConvertStatusToError(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *AbandonAndReadReceive(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ReadProtection(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *SetProtection(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ReadStationNumber(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *PrintBanner(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ReleasePort(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *AllocatePort(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *DeAllocatePort(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ClaimPort(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *StartImmediate(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *DoImmediate(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ReadTransportType(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *Version(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *NetworkState(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *PacketSize(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *ReadTransportName(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *InetRxDirect(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *EnumerateMap(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *EnumerateTransmit(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *HardwareAddresses(_kernel_swi_regs *r);

/******************************************************************************/

extern _kernel_oserror *NetworkParameters(_kernel_swi_regs *r);

/******************************************************************************/

extern void check_rxcbs(void);

/******************************************************************************/

extern void check_txcbs(void);

/******************************************************************************/

extern void retry_tx(struct txcb *tx);

/******************************************************************************/

/* EOF swicode.h */
@


4.1
log
@Initial revision
@
text
@d51 1
a51 1
extern _kernel_oserror *init_msgs(char *filename, char *fd);
d67 1
a67 1
extern void release_msgs(char *fd);
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
