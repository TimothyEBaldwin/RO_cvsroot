head	4.2;
access;
symbols
	Net-6_26:4.2
	Net-6_25:4.2
	Net-6_24:4.1.3.1
	Net-6_23:4.1.3.1
	Net-6_22:4.1.3.1
	Net-6_21:4.1.3.1
	RO_5_07:4.1.3.1
	Net-6_20:4.1.3.1
	Net-6_19:4.1.3.1
	Net-6_18:4.1.3.1
	Ursula_merge:4.1.3.1
	Ursula_13May1998_merge:4.1.3.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.3.1
	Ursula_RiscPC:4.1.3.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1.3.1
	UrsulaBuild_FinalSoftload:4.1.3.1
	rthornb_UrsulaBuild-12Aug1998:4.1.3.1
	aglover_UrsulaBuild-05Aug1998:4.1.3.1
	rthornb_UrsulaBuild-29Jul1998:4.1.3.1
	rthornb_UrsulaBuild-22Jul1998:4.1.3.1
	rthornb_UrsulaBuild-15Jul1998:4.1.3.1
	rthornb_UrsulaBuild-07Jul1998:4.1.3.1
	rthornb_UrsulaBuild-17Jun1998:4.1.3.1
	rthornb_UrsulaBuild-03Jun1998:4.1.3.1
	rthornb_UrsulaBuild-27May1998:4.1.3.1
	rthornb_UrsulaBuild-21May1998:4.1.3.1
	Ursula_bp:4.1.3.1
	Ursula:4.1.3.1.0.6
	Ursula_13May1998_bp:4.1.3.1
	Ursula_13May1998:4.1.3.1.0.2
	rthornb_UrsulaBuild_01May1998:4.1.3.1
	Daytona:4.1.3.1.0.4
	Daytona_bp:4.1.3.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	StrongARM:4.1.3;
locks; strict;
comment	@# @;


4.2
date	2015.05.29.19.29.05;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	2VVHsW5ULMhIonny;

4.1
date	96.11.05.22.31.47;	author nturton;	state Exp;
branches
	4.1.3.1;
next	;

4.1.3.1
date	96.11.05.22.31.47;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Have Net look after its own messages
Net was trying to share some messages with the Econet module, though on balance this wasn't particularly useful as it then needed to duplicate message handling code to keep 2 files open. Because those messages were held in AUNMsgs they didn't get tokenised in ROM, overall ending up taking more space.

Register in ResourcesFS at run time for RAM targets, add tokenisation directives for ROM targets, removed redundant !Configure related strings.
Changed the messages fd to be int's to ensure word alignment.
Removed inappropriate Service_MessageFileClosed handler, MessageTrans reopens the files (since the fd is in the RMA) so no need to reopen them a second time. This service call is intended to recache direct pointers to tokens, but none are ever taken.
Save time by just making textbuf a zero length string rather than memset()ing the whole buffer.
Resolved a couple more compiler warnings (but NetG still doesn't compile).
Fix bug where a failure to enable the internet event would decrement the internet event count for any other modules interested in that event.
Use CMHG finalisation rather than atexit().
Error "AUN not configured" now uses a non zero trappable error number.
Error number for BadSWI corrected from 0x111 to 0x110.

Requires HdrSrc-2_51 for the error number.

Version 6.25. Tagged as 'Net-6_25'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* mnscommon.h
 *
 * Author: Jem Davies (Cambridge Systems Design)
 *
 * Description
 * ===========
 * Header file for routines defined in mnscommon.c file
 *
 * Environment
 * ===========
 * Acorn RISC OS 3.11 or later.
 *
 * Compiler
 * ========
 * Acorn Archimedes C release 5.06 or later.
 *
 * Change record
 * =============
 *
 * JPD  Jem Davies (Cambridge Systems Design)
 *
 *
 * 14-Mar-95  13:21  JPD  Version 1.00
 * Created.
 *
 * 21-Mar-95  11:53  JPD  Version 1.01
 * Added mns_sc_handler() and reset_is_soft().
 *
 *
 **End of change record*
 */

/******************************************************************************/

extern void mns_ping(int argc, char **argv);

/*
 * *NetProbe code: similar function to *Ping, actually does a machine-type peek
 *
 * Parameters:
 *    argc : }
 *    argv : } command line parms
 *
 * Returns:
 *    None
 */

/******************************************************************************/

extern void notify_users(void);

/*
 * Issue Service call ReAllocatePorts so that users of "Econet" will know
 * that "Econet" has effectively been reinitialised.
 *
 * Parameters:
 *    None
 *
 * Returns:
 *    None
 */

/******************************************************************************/

extern int do_getsock(int port, int inputsocket, int direct);

/*
 * Open socket for use by Net module
 *
 * Parameters:
 *    port        : port number on which to open socket
 *    inputsocket : !0 => socket is for input
 *    direct      : !0 => get Internet module to call us directly on Rx by
 *                  issuing the EconetRxDirect SWI to us rather than by
 *                  generating an Internet event
 *
 * Returns:
 *    the socket number opened, or -1 if error
 */

/******************************************************************************/

extern _kernel_oserror *mns_error(int error);

/******************************************************************************/

extern _kernel_oserror *mns_error_parm(int error, void *parmp);

/******************************************************************************/

extern char *mns_str(int strnbr);

/******************************************************************************/

extern void generate_event(int rx, int handle, int status, int port);

/******************************************************************************/

extern void setcallback(void);

/******************************************************************************/

extern void removecallback(void);

/* Remove any added transient callback
 *
 * Parameters:
 *    None
 *
 * Returns:
 *    None
 */

/******************************************************************************/

extern void generate_event_on_callback(struct txcb *tx);

/******************************************************************************/

extern void retransmit_on_callback(struct txcb *tx);

/******************************************************************************/

extern void netmapchanged_on_callback(void);

/******************************************************************************/

extern int addcallback(void (*)(void));

/******************************************************************************/

extern void callb_entry(void);

/******************************************************************************/

extern _kernel_oserror *calleverytick(void (*fun)(void));

/*
 * Install a function on Ticker vector
 *
 * Parameters:
 *    fun : pointer to the function to be installed
 *
 * Returns:
 *     0 : => success
 *    !0 : => error (pointer to standard RISC OS error block)
 */

/******************************************************************************/

extern void removetickerevent(void (*fun)(void));

/*
 * Remove a previously installed ticker handler
 *
 * Parameters:
 *    fun : pointer to ticker handler previously installed
 *
 * Returns:
 *    None
 */

/******************************************************************************/

extern void *Resources(void); /* From ResGen */

/******************************************************************************/

extern int reset_is_soft(void);

/******************************************************************************/

/* EOF mnscommon.h */
@


4.1
log
@Initial revision
@
text
@a96 32
extern _kernel_oserror *mns_cli_handler(char *arg_string, int arg_count,
                                                          int cmd_no, void *pw);

/* cmhg module *-command handler
 *
 * Parameters:
 *    arg_string : string of arguments
 *    arg_count  : number of arguments
 *    cmd_no     : offset into list of commands
 *    pw         : "R12" value
 *
 * Returns:
 *    None
 */

/******************************************************************************/

extern void mns_sc_handler(int sn, _kernel_swi_regs *r);

/*
 * cmhg module service call handler
 *
 * Parameters:
 *    sn : service call number
 *    r  : pointer to registers block
 *
 * Returns:
 *    None
 */

/******************************************************************************/

d142 1
a142 1
extern int callback(int (* func)());
d146 1
a146 11
extern int callb_handler(const _kernel_swi_regs *rr);

/*
 * Transient Callback handler
 *
 * Parameters:
 *    rr : pointer to regs structure
 *
 * Returns:
 *    Non-0 to indicate call "not processed"
 */
d150 1
a150 1
extern _kernel_oserror *calleverytick(int (*fun)());
d165 1
a165 1
extern void removetickerevent(int (*fun)());
d179 4
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@
