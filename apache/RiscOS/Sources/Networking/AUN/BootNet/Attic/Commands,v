head	4.5;
access;
symbols
	RO_5_07:4.4
	BootNet-0_95:4.4
	BootNet-0_94:4.3
	BootNet-0_93:4.3
	BootNet-0_92:4.3
	BootNet-0_91:4.3
	BootNet-0_90:4.2
	Ursula_13May1998_merge:4.2
	Ursula_merge:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.10
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.8
	Ursula_13May1998_bp:4.2
	Ursula_13May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.6
	Daytona_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2012.02.26.09.00.56;	author rsprowson;	state dead;
branches;
next	4.4;
commitid	14GxNpJZbZUS6EUv;

4.4
date	2004.07.02.14.53.14;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2000.07.07.13.46.12;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.17.05.47;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.27.19;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.27.19;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.22.14.35;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.22.14.52.07;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.55.52;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Made the non internationalised help work.
Had got out of sync with the internationalised one.
Changed 2x STM/LDM to Push/Pull, trimmed some dead code, moved 'Commands' source into the 's' directory.

Version 0.96. Tagged as 'BootNet-0_96'
@
text
@	SUBT	==> &.Bauble.BootNet.Commands

ModuleTitle
  ;	DCB	"BootNet", 0				; Now shared with the command table
  ;	ALIGN

UtilsCommands

	; Configuration and Status commands

	DCB	"BootNet", 0
	ALIGN
	DCD	ConfigureBootNet - Origin
;
; 950318 KWelton
;
; if minimum OS Version supported is less than 3.50, then
; we cannot us the international help support in the kernel
; 'cause it is not there.
;
  [	KernelInternationalisation
	InfoWord 1, 1, Status_Keyword_Flag :OR: International_Help
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	HelpForConfigureBootNet - Origin
  |
	InfoWord 1, 1, Status_Keyword_Flag :OR: Help_Is_Code_Flag
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	DoConfigureBootNetHelp - Origin
  ]

	DCD	0					; Terminate table

ConfigureBootNet ROUT
	Push	"r0-r4, lr"
	LDR	wp, [ r12 ]
	CMP	r0, #1
	BHI     DoConfigureBootNet			; Configure
	BEQ	StatusOfBootNet				; Print status
PrintSyntaxOfConfigureBootNet
  [ International_Help <> 0
	ADRL	r1, SyntaxOnlyOfConfigureBootNet
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
	B	PrintNewLineAndExit
  |
	ADRL	r0, SyntaxOnlyOfConfigureBootNet
	B	PrintMessageAndExit
  ]

StatusOfBootNet						; Print the status
	ADR	r0, Status_Common
	SWI	XOS_Write0
	BLVC	ReadConfiguration
	BVS	ExitConfigure
	ADREQ	r0, Status_BootNetOff
	ADRNE	r0, Status_BootNetOn
PrintMessageAndExit
	SWI	XOS_Write0
PrintNewLineAndExit
	SWIVC	XOS_NewLine
	B	ExitConfigure

  [ :LNOT: KernelInternationalisation
DoConfigureBootNetHelp
	STMFD	sp!, {lr}
	ADR	r0, HelpForConfigureBootNet
    [	International_Help <> 0
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
    |
	SWI	XOS_Write0
    ]
	SWI	XOS_NewLine
	MOV	r0, #0
        CLRV
	LDMFD	sp!, {pc}
  ]

DoConfigureBootNet
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"o"
	TEQNE	r1, #"O"
	BNE	SyntaxError
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	TestForN
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	SyntaxError
20
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%20					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	BICVC	r2, r2, #1				; Reset the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
	B	ExitConfigure

TestForN
	TEQ	r1, #"n"
	TEQNE	r1, #"N"
	BNE	SyntaxError
40
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%40					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ORRVC	r2, r2, #1				; Set the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
ExitConfigure
	STRVS	r0, [ sp ]
	Pull	"r0-r4, pc"

SyntaxError
 [ International_Help <> 0
	ADRL	r0, SyntaxOfConfigureBootNetError
	BL	MessageTransErrorLookupOnce
	B	ExitConfigure
 |
	DEC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	MOV	r0, sp
	MOV	r1, #ErrorNumber_Syntax
	STR	r1, [ r0 ], #4
	ADR	r14, SyntaxOfConfigureBootNet
ErrorCopyLoop
	LDRB	r1, [ r14 ], #1
	STRB	r1, [ r0 ], #1
	TEQ	r1, #0
	BNE	ErrorCopyLoop
	MOV	r0, sp
	SWI	XMessageTrans_CopyError
	INC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	B	ExitConfigure
 ]

ReadConfiguration
	;	Returns the bit in R0 and Z is the result
	;	of TEQing with zero
	;	Bit 0 => Acorn Universal Network ROMBoot (0=>disabled, 1=>enabled)
	;	All other registers preserved
	Push	"r1, r2, lr"
	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ANDVCS	r0, r2, #1
	Pull	"r1, r2, pc"

	LTORG

	END
@


4.4
log
@The fix for *Configure BootNet on high address space machines committed
on 17 Jan 2003 somehow didn't get committed properly - the VersionNum and
VersionASM files were updated, but the source file in question didn't!

Version 0.95. Tagged as 'BootNet-0_95'
@
text
@@


4.3
log
@32-bit compatible.

Tagged as BootNet-0_91.
@
text
@d37 1
a37 1
	BGT	DoConfigureBootNet			; Configure
@


4.2
log
@Version Spin_merge taken
@
text
@d79 2
a80 1
	LDMFD	sp!, {pc}^
@


4.1
log
@Initial revision
@
text
@d1 1
a1 1
        SUBT    ==> &.Bauble.BootNet.Commands
d4 2
a5 2
  ;     DCB     "BootNet", 0                            ; Now shared with the command table
  ;     ALIGN
d9 1
a9 1
        ; Configuration and Status commands
d11 19
a29 6
        DCB     "BootNet", 0
        ALIGN
        DCD     ConfigureBootNet - Origin
        InfoWord 1, 1, Status_Keyword_Flag :OR: International_Help
        DCD     SyntaxOfConfigureBootNet - Origin
        DCD     HelpForConfigureBootNet - Origin
d31 1
a31 1
        DCD     0                                       ; Terminate table
d34 5
a38 5
        Push    "r0-r4, lr"
        LDR     wp, [ r12 ]
        CMP     r0, #1
        BGT     DoConfigureBootNet                      ; Configure
        BEQ     StatusOfBootNet                         ; Print status
d41 6
a46 6
        ADRL    r1, SyntaxOnlyOfConfigureBootNet
        BL      MessageTransLookupOnce
        MOV     r0, r2
        MOV     r1, r3
        SWI     XOS_WriteN
        B       PrintNewLineAndExit
d48 2
a49 2
        ADRL    r0, SyntaxOnlyOfConfigureBootNet
        B       PrintMessageAndExit
d52 7
a58 7
StatusOfBootNet                                         ; Print the status
        ADR     r0, Status_Common
        SWI     XOS_Write0
        BLVC    ReadConfiguration
        BVS     ExitConfigure
        ADREQ   r0, Status_BootNetOff
        ADRNE   r0, Status_BootNetOn
d60 1
a60 1
        SWI     XOS_Write0
d62 19
a80 2
        SWIVC   XOS_NewLine
        B       ExitConfigure
d83 12
a94 12
        LDRB    r1, [ r0 ], #1
        TEQ     r1, #"o"
        TEQNE   r1, #"O"
        BNE     SyntaxError
        LDRB    r1, [ r0 ], #1
        TEQ     r1, #"f"
        TEQNE   r1, #"F"
        BNE     TestForN
        LDRB    r1, [ r0 ], #1
        TEQ     r1, #"f"
        TEQNE   r1, #"F"
        BNE     SyntaxError
d96 12
a107 12
        LDRB    r1, [ r0 ], #1
        CMP     r1, #" "
        BEQ     %20                                     ; Skip trailing spaces
        BGT     SyntaxError

        MOV     r0, #ReadCMOS
        MOV     r1, #SystemSpeedCMOS
        SWI     XOS_Byte
        BICVC   r2, r2, #1                              ; Reset the relevant bit
        MOVVC   r0, #WriteCMOS
        SWIVC   XOS_Byte
        B       ExitConfigure
d110 3
a112 3
        TEQ     r1, #"n"
        TEQNE   r1, #"N"
        BNE     SyntaxError
d114 11
a124 11
        LDRB    r1, [ r0 ], #1
        CMP     r1, #" "
        BEQ     %40                                     ; Skip trailing spaces
        BGT     SyntaxError

        MOV     r0, #ReadCMOS
        MOV     r1, #SystemSpeedCMOS
        SWI     XOS_Byte
        ORRVC   r2, r2, #1                              ; Set the relevant bit
        MOVVC   r0, #WriteCMOS
        SWIVC   XOS_Byte
d126 2
a127 2
        STRVS   r0, [ sp ]
        Pull    "r0-r4, pc"
d131 3
a133 3
        ADRL    r0, SyntaxOfConfigureBootNetError
        BL      MessageTransErrorLookupOnce
        B       ExitConfigure
d135 5
a139 5
        DEC     sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
        MOV     r0, sp
        MOV     r1, #ErrorNumber_Syntax
        STR     r1, [ r0 ], #4
        ADR     r14, SyntaxOfConfigureBootNet
d141 8
a148 8
        LDRB    r1, [ r14 ], #1
        STRB    r1, [ r0 ], #1
        TEQ     r1, #0
        BNE     ErrorCopyLoop
        MOV     r0, sp
        SWI     XMessageTrans_CopyError
        INC     sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
        B       ExitConfigure
d152 10
a161 10
        ;       Returns the bit in R0 and Z is the result
        ;       of TEQing with zero
        ;       Bit 0 => Acorn Universal Network ROMBoot (0=>disabled, 1=>enabled)
        ;       All other registers preserved
        Push    "r1, r2, lr"
        MOV     r0, #ReadCMOS
        MOV     r1, #SystemSpeedCMOS
        SWI     XOS_Byte
        ANDVCS  r0, r2, #1
        Pull    "r1, r2, pc"
d163 1
a163 1
        LTORG
d165 1
a165 1
        END
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@d1 1
a1 1
	SUBT	==> &.Bauble.BootNet.Commands
d4 2
a5 2
  ;	DCB	"BootNet", 0				; Now shared with the command table
  ;	ALIGN
d9 1
a9 1
	; Configuration and Status commands
d11 6
a16 19
	DCB	"BootNet", 0
	ALIGN
	DCD	ConfigureBootNet - Origin
;
; 950318 KWelton
;
; if minimum OS Version supported is less than 3.50, then
; we cannot us the international help support in the kernel
; 'cause it is not there.
;
  [	KernelInternationalisation
	InfoWord 1, 1, Status_Keyword_Flag :OR: International_Help
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	HelpForConfigureBootNet - Origin
  |
	InfoWord 1, 1, Status_Keyword_Flag :OR: Help_Is_Code_Flag
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	DoConfigureBootNetHelp - Origin
  ]
d18 1
a18 1
	DCD	0					; Terminate table
d21 5
a25 5
	Push	"r0-r4, lr"
	LDR	wp, [ r12 ]
	CMP	r0, #1
	BGT	DoConfigureBootNet			; Configure
	BEQ	StatusOfBootNet				; Print status
d28 6
a33 6
	ADRL	r1, SyntaxOnlyOfConfigureBootNet
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
	B	PrintNewLineAndExit
d35 2
a36 2
	ADRL	r0, SyntaxOnlyOfConfigureBootNet
	B	PrintMessageAndExit
d39 7
a45 7
StatusOfBootNet						; Print the status
	ADR	r0, Status_Common
	SWI	XOS_Write0
	BLVC	ReadConfiguration
	BVS	ExitConfigure
	ADREQ	r0, Status_BootNetOff
	ADRNE	r0, Status_BootNetOn
d47 1
a47 1
	SWI	XOS_Write0
d49 2
a50 19
	SWIVC	XOS_NewLine
	B	ExitConfigure

  [ :LNOT: KernelInternationalisation
DoConfigureBootNetHelp
	STMFD	sp!, {lr}
	ADR	r0, HelpForConfigureBootNet
    [	International_Help <> 0
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
    |
	SWI	XOS_Write0
    ]
	SWI	XOS_NewLine
	MOV	r0, #0
	LDMFD	sp!, {pc}^
  ]
d53 12
a64 12
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"o"
	TEQNE	r1, #"O"
	BNE	SyntaxError
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	TestForN
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	SyntaxError
d66 12
a77 12
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%20					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	BICVC	r2, r2, #1				; Reset the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
	B	ExitConfigure
d80 3
a82 3
	TEQ	r1, #"n"
	TEQNE	r1, #"N"
	BNE	SyntaxError
d84 11
a94 11
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%40					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ORRVC	r2, r2, #1				; Set the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
d96 2
a97 2
	STRVS	r0, [ sp ]
	Pull	"r0-r4, pc"
d101 3
a103 3
	ADRL	r0, SyntaxOfConfigureBootNetError
	BL	MessageTransErrorLookupOnce
	B	ExitConfigure
d105 5
a109 5
	DEC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	MOV	r0, sp
	MOV	r1, #ErrorNumber_Syntax
	STR	r1, [ r0 ], #4
	ADR	r14, SyntaxOfConfigureBootNet
d111 8
a118 8
	LDRB	r1, [ r14 ], #1
	STRB	r1, [ r0 ], #1
	TEQ	r1, #0
	BNE	ErrorCopyLoop
	MOV	r0, sp
	SWI	XMessageTrans_CopyError
	INC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	B	ExitConfigure
d122 10
a131 10
	;	Returns the bit in R0 and Z is the result
	;	of TEQing with zero
	;	Bit 0 => Acorn Universal Network ROMBoot (0=>disabled, 1=>enabled)
	;	All other registers preserved
	Push	"r1, r2, lr"
	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ANDVCS	r0, r2, #1
	Pull	"r1, r2, pc"
d133 1
a133 1
	LTORG
d135 1
a135 1
	END
@


4.1.5.1
log
@Import from SrcFiler
@
text
@d1 1
a1 1
	SUBT	==> &.Bauble.BootNet.Commands
d4 2
a5 2
  ;	DCB	"BootNet", 0				; Now shared with the command table
  ;	ALIGN
d9 1
a9 1
	; Configuration and Status commands
d11 6
a16 19
	DCB	"BootNet", 0
	ALIGN
	DCD	ConfigureBootNet - Origin
;
; 950318 KWelton
;
; if minimum OS Version supported is less than 3.50, then
; we cannot us the international help support in the kernel
; 'cause it is not there.
;
  [	KernelInternationalisation
	InfoWord 1, 1, Status_Keyword_Flag :OR: International_Help
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	HelpForConfigureBootNet - Origin
  |
	InfoWord 1, 1, Status_Keyword_Flag :OR: Help_Is_Code_Flag
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	DoConfigureBootNetHelp - Origin
  ]
d18 1
a18 1
	DCD	0					; Terminate table
d21 5
a25 5
	Push	"r0-r4, lr"
	LDR	wp, [ r12 ]
	CMP	r0, #1
	BGT	DoConfigureBootNet			; Configure
	BEQ	StatusOfBootNet				; Print status
d28 6
a33 6
	ADRL	r1, SyntaxOnlyOfConfigureBootNet
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
	B	PrintNewLineAndExit
d35 2
a36 2
	ADRL	r0, SyntaxOnlyOfConfigureBootNet
	B	PrintMessageAndExit
d39 7
a45 7
StatusOfBootNet						; Print the status
	ADR	r0, Status_Common
	SWI	XOS_Write0
	BLVC	ReadConfiguration
	BVS	ExitConfigure
	ADREQ	r0, Status_BootNetOff
	ADRNE	r0, Status_BootNetOn
d47 1
a47 1
	SWI	XOS_Write0
d49 2
a50 19
	SWIVC	XOS_NewLine
	B	ExitConfigure

  [ :LNOT: KernelInternationalisation
DoConfigureBootNetHelp
	STMFD	sp!, {lr}
	ADR	r0, HelpForConfigureBootNet
    [	International_Help <> 0
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
    |
	SWI	XOS_Write0
    ]
	SWI	XOS_NewLine
	MOV	r0, #0
	LDMFD	sp!, {pc}^
  ]
d53 12
a64 12
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"o"
	TEQNE	r1, #"O"
	BNE	SyntaxError
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	TestForN
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	SyntaxError
d66 12
a77 12
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%20					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	BICVC	r2, r2, #1				; Reset the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
	B	ExitConfigure
d80 3
a82 3
	TEQ	r1, #"n"
	TEQNE	r1, #"N"
	BNE	SyntaxError
d84 11
a94 11
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%40					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ORRVC	r2, r2, #1				; Set the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
d96 2
a97 2
	STRVS	r0, [ sp ]
	Pull	"r0-r4, pc"
d101 3
a103 3
	ADRL	r0, SyntaxOfConfigureBootNetError
	BL	MessageTransErrorLookupOnce
	B	ExitConfigure
d105 5
a109 5
	DEC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	MOV	r0, sp
	MOV	r1, #ErrorNumber_Syntax
	STR	r1, [ r0 ], #4
	ADR	r14, SyntaxOfConfigureBootNet
d111 8
a118 8
	LDRB	r1, [ r14 ], #1
	STRB	r1, [ r0 ], #1
	TEQ	r1, #0
	BNE	ErrorCopyLoop
	MOV	r0, sp
	SWI	XMessageTrans_CopyError
	INC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	B	ExitConfigure
d122 10
a131 10
	;	Returns the bit in R0 and Z is the result
	;	of TEQing with zero
	;	Bit 0 => Acorn Universal Network ROMBoot (0=>disabled, 1=>enabled)
	;	All other registers preserved
	Push	"r1, r2, lr"
	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ANDVCS	r0, r2, #1
	Pull	"r1, r2, pc"
d133 1
a133 1
	LTORG
d135 1
a135 1
	END
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@d1 1
a1 1
	SUBT	==> &.Bauble.BootNet.Commands
d4 2
a5 2
  ;	DCB	"BootNet", 0				; Now shared with the command table
  ;	ALIGN
d9 1
a9 1
	; Configuration and Status commands
d11 6
a16 19
	DCB	"BootNet", 0
	ALIGN
	DCD	ConfigureBootNet - Origin
;
; 950318 KWelton
;
; if minimum OS Version supported is less than 3.50, then
; we cannot us the international help support in the kernel
; 'cause it is not there.
;
  [	KernelInternationalisation
	InfoWord 1, 1, Status_Keyword_Flag :OR: International_Help
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	HelpForConfigureBootNet - Origin
  |
	InfoWord 1, 1, Status_Keyword_Flag :OR: Help_Is_Code_Flag
	DCD	SyntaxOfConfigureBootNet - Origin
	DCD	DoConfigureBootNetHelp - Origin
  ]
d18 1
a18 1
	DCD	0					; Terminate table
d21 5
a25 5
	Push	"r0-r4, lr"
	LDR	wp, [ r12 ]
	CMP	r0, #1
	BGT	DoConfigureBootNet			; Configure
	BEQ	StatusOfBootNet				; Print status
d28 6
a33 6
	ADRL	r1, SyntaxOnlyOfConfigureBootNet
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
	B	PrintNewLineAndExit
d35 2
a36 2
	ADRL	r0, SyntaxOnlyOfConfigureBootNet
	B	PrintMessageAndExit
d39 7
a45 7
StatusOfBootNet						; Print the status
	ADR	r0, Status_Common
	SWI	XOS_Write0
	BLVC	ReadConfiguration
	BVS	ExitConfigure
	ADREQ	r0, Status_BootNetOff
	ADRNE	r0, Status_BootNetOn
d47 1
a47 1
	SWI	XOS_Write0
d49 2
a50 19
	SWIVC	XOS_NewLine
	B	ExitConfigure

  [ :LNOT: KernelInternationalisation
DoConfigureBootNetHelp
	STMFD	sp!, {lr}
	ADR	r0, HelpForConfigureBootNet
    [	International_Help <> 0
	BL	MessageTransLookupOnce
	MOV	r0, r2
	MOV	r1, r3
	SWI	XOS_WriteN
    |
	SWI	XOS_Write0
    ]
	SWI	XOS_NewLine
	MOV	r0, #0
	LDMFD	sp!, {pc}^
  ]
d53 12
a64 12
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"o"
	TEQNE	r1, #"O"
	BNE	SyntaxError
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	TestForN
	LDRB	r1, [ r0 ], #1
	TEQ	r1, #"f"
	TEQNE	r1, #"F"
	BNE	SyntaxError
d66 12
a77 12
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%20					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	BICVC	r2, r2, #1				; Reset the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
	B	ExitConfigure
d80 3
a82 3
	TEQ	r1, #"n"
	TEQNE	r1, #"N"
	BNE	SyntaxError
d84 11
a94 11
	LDRB	r1, [ r0 ], #1
	CMP	r1, #" "
	BEQ	%40					; Skip trailing spaces
	BGT	SyntaxError

	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ORRVC	r2, r2, #1				; Set the relevant bit
	MOVVC	r0, #WriteCMOS
	SWIVC	XOS_Byte
d96 2
a97 2
	STRVS	r0, [ sp ]
	Pull	"r0-r4, pc"
d101 3
a103 3
	ADRL	r0, SyntaxOfConfigureBootNetError
	BL	MessageTransErrorLookupOnce
	B	ExitConfigure
d105 5
a109 5
	DEC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	MOV	r0, sp
	MOV	r1, #ErrorNumber_Syntax
	STR	r1, [ r0 ], #4
	ADR	r14, SyntaxOfConfigureBootNet
d111 8
a118 8
	LDRB	r1, [ r14 ], #1
	STRB	r1, [ r0 ], #1
	TEQ	r1, #0
	BNE	ErrorCopyLoop
	MOV	r0, sp
	SWI	XMessageTrans_CopyError
	INC	sp, (EndOfSyntaxOfConfigureBootNet - SyntaxOfConfigureBootNet + 8) :AND: &FFFFFFFC
	B	ExitConfigure
d122 10
a131 10
	;	Returns the bit in R0 and Z is the result
	;	of TEQing with zero
	;	Bit 0 => Acorn Universal Network ROMBoot (0=>disabled, 1=>enabled)
	;	All other registers preserved
	Push	"r1, r2, lr"
	MOV	r0, #ReadCMOS
	MOV	r1, #SystemSpeedCMOS
	SWI	XOS_Byte
	ANDVCS	r0, r2, #1
	Pull	"r1, r2, pc"
d133 1
a133 1
	LTORG
d135 1
a135 1
	END
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
