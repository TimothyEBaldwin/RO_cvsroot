head	1.6;
access;
symbols
	Gopher-0_17:1.6
	Gopher-0_16:1.5
	Gopher-0_15:1.5
	Gopher-0_14:1.5
	Gopher-0_13:1.4
	Gopher-0_12:1.4
	Gopher-0_11:1.4
	sbrodie_Expresso_final_190298:1.2
	sbrodie_Gopher_0_09:1.1;
locks; strict;
comment	@# @;


1.6
date	2012.02.04.10.41.05;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	oRnf9mkBO6z5nPRv;

1.5
date	2000.05.05.11.09.51;	author sbrodie;	state Exp;
branches;
next	1.4;

1.4
date	98.07.08.14.37.09;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	98.02.24.11.08.12;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.02.18.10.33.00;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.02.11.11.56.39;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Makefile refactored for FetchMake.
Dummy resources run worked, compiles, but not functionally tested.
Requires Common-0_07.

Version 0.17. Tagged as 'Gopher-0_17'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for Gopher
#

OBJS        = commands connect processdir readdata\
              ses_ctrl start status stop utils module
CMHGDEPENDS = module processdir
CUSTOMRES   = custom
IMGFILES    = LocalRes:Dir LocalRes:File
RES_OBJ     =
SA_OBJS     = ${OBJS} msgs
DBG_OBJS    = ${OBJS} msgs

include C:Fetchers.FetchMake

#
# Bonus files beyond message translations
#
resources: resources_common LocalRes:Messages ${IMGFILES}
        ${CP} LocalRes:Dir       ${RESFSDIR}.Dir      ${CPFLAGS}
        ${CP} LocalRes:File      ${RESFSDIR}.File     ${CPFLAGS}
        @@echo ${COMPONENT}: resources copied to Messages module

#
# Package up more than just the message translations
#
od.msgs: o.msgs
        ${CP} o.msgs od.msgs ${CPFLAGS}
o.msgs: ${MERGEDMSGS} ${DIRS} ${IMGFILES}
        ${RESGEN} messages_file $@@ LocalRes:Messages ${RES_PATH}.Messages \
                                   LocalRes:Dir      ${RES_PATH}.Dir \
                                   LocalRes:File     ${RES_PATH}.File

# Dynamic dependencies:
@


1.5
log
@  32-bit compatible.
  Uses shared fetcher code
Detail:
  Common DNS code, URL client code abstracted out to Common library.
Admin:
  Requires BuildSys 1.94 or later.
  Requires Common 0.01 or later (RiscOS/Sources/Networking/Fetchers/Common)

Version 0.14. Tagged as 'Gopher-0_14'
@
text
@d15 1
a15 9
# Makefile for a URL fetcher module
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name   Description
# ----       ----   -----------
# 10-Feb-98  SNB    Created
# 06-Oct-98  SNB    Updated to use LocalRes and link 5.08
d18 8
a25 2
COMMON_OBJ = o.commands o.connect o.processdir\
 o.readdata o.ses_ctrl o.start o.status o.stop o.utils o.GopherHdr
d27 1
a27 1
ROM_OBJS = o.moduleROM ${COMMON_OBJ}
d29 7
a35 4
RAM_OBJS = o.module ${COMMON_OBJ} o.msgs

DBG_OBJS = o.msgs od.module od.commands od.connect od.processdir\
 od.readdata od.ses_ctrl od.start od.status od.stop od.utils o.GopherHdr
d38 1
a38 1
# Get main rules
d40 6
a45 22
include C:Fetchers.FetchMake

clean: fetcher-clean
        @@echo ${COMPONENT}: cleaned


IMGFILES=LocalRes:Dir LocalRes:File

resources: LocalRes:Messages ${IMGFILES}
        ${MKDIR} ${RESDIR}
        TokenCheck LocalRes:Messages
        ${CP} LocalRes:Messages  ${RESDIR}.Messages ${CPFLAGS}
        ${CP} LocalRes:Dir       ${RESDIR}.Dir      ${CPFLAGS}
        ${CP} LocalRes:File      ${RESDIR}.File     ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied to Messages module

o.msgs: LocalRes:Messages ${IMGFILES}
        TokenCheck LocalRes:Messages
        resgen messages_file $@@ LocalRes:Messages ${RESFSDIR}.Messages \
          LocalRes:Dir        ${RESFSDIR}.Dir \
          LocalRes:File       ${RESFSDIR}.File

a46 1
#---------------------------------------------------------------------------
@


1.4
log
@URL parsing code had not been updated in the past, for some reason.  This
code is now up-to-date and no longer stiffs the machine when you fail to
put a trailing / on a gopher URL!
Module version number now maintained by srccommit.

Version 0.11. Tagged as 'Gopher-0_11'
@
text
@d15 1
a15 1
# Makefile for Gopher
d23 1
d26 2
a27 6
#
# Component specific options:
#
COMPONENT  = Gopher
ROM_MODULE = aof.${COMPONENT}
RAM_MODULE = rm.${COMPONENT}
d29 1
d31 1
a31 1
RESFSDIR   = Resources.URL.${COMPONENT}
d33 2
a34 4
#
# Export Paths for Messages module
#
RESDIR = <resource$dir>.Resources2.URL
d37 1
a37 1
# Generic options:
d39 1
a39 18
MKDIR   = cdir
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
TLD	= tlink
RM      = remove
WIPE    = -wipe
AS	= objasm

CPFLAGS = ~cfr~v
WFLAGS  = ~c~v

AFLAGS   = -depend !Depend -NoCache 
CFLAGS   = -c -depend !Depend ${INCLUDES} -throwback -zM -Wp -ffah -zps1 ${DFLAGS}
DFLAGS   = -D${SYSTEM} -DCOMPAT_INET4 -UTML -UTRACE
ROMFLAGS = -DROM
INCLUDES = -ITCPIPLibs:,C:
d41 2
a42 66
#
# Libraries
#
ANSILIB   = CLib:o.ansilib
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.abssym
TCPIPLIBS = TCPIPLibs:o.inetlibzm TCPIPLIBS:o.socklibzm

OBJS =\
 o.asmbits\
 o.commands\
 o.connect\
 o.dns\
 o.generic\
 o.module\
 o.processdir\
 o.readdata\
 o.ses_ctrl\
 o.start\
 o.status\
 o.stop\
 o.URLclient\
 o.utils\
 o.GopherHdr

RAM_OBJS =\
 o.asmbits\
 o.commands\
 o.connect\
 o.dns\
 o.generic\
 o.moduleRAM\
 o.processdir\
 o.readdata\
 o.ses_ctrl\
 o.start\
 o.status\
 o.stop\
 o.URLclient\
 o.utils\
 o.GopherHdr

MSGSF=o.msgs

#
# Rule patterns
#
.c.o:;    ${CC} ${CFLAGS} ${ROMFLAGS} -o $@@ $<
.cmhg.o:; ${CMHG} -p -o $@@ $< -d $*.h
.s.o:;	  ${AS} ${AFLAGS} -o $@@ $<


cmhg.GopherHdr: VersionNum
	  @@|

GopherHdr.h: GopherHdr.o
	  @@|
	  
#
# Main rules:
#
#
all: ${RAM_MODULE}
        @@echo ${COMPONENT}: Module built (RAM)
a43 2
rom: ${ROM_MODULE}
        @@echo ${COMPONENT}: Module built (ROM)
d45 1
a45 3
install_rom: ${ROM_MODULE}
        ${CP} ${ROM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: Module installed (ROM)
d47 1
a47 1
resources: Resources.${LOCALE}.Messages
d49 4
a52 2
        ${MKDIR} ${RESDIR}.${COMPONENT}
        ${CP} Resources.${LOCALE}.* ${RESDIR}.${COMPONENT}.* ${CPFLAGS}
d55 5
a59 33
clean:
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} aof ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
        ${WIPE} h.${COMPONENT}Hdr ${WFLAGS}
        ${WIPE} linked ${WFLAGS}
        ${WIPE} map ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

${ROM_MODULE}: ${OBJS} ${ROMCSTUBS}
        ${MKDIR} aof
        ${LD} -o $@@ -aof ${OBJS} ${TCPIPLIBS} ${ROMCSTUBS}

# final link for ROM Image (using given base address)
rom_link:
        ${MKDIR} linked
        ${MKDIR} map
        ${LD} -o linked.${COMPONENT} -bin -base ${ADDRESS} ${ROM_MODULE} ${ABSSYM} \
              -map > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete

${MSGSF}: Resources.${LOCALE}.Messages Resources.${LOCALE}.File Resources.${LOCALE}.Dir 
	MkRes messages_file ${MSGSF} Resources.${LOCALE} ${RESFSDIR}

${RAM_MODULE}: ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS} ${CLIB}
	${mkdir} rm
        ${LD} -o $@@ -module ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS} ${CLIB}
        Access $@@ RW/R

o.moduleRAM: module.c
	$(CC) ${CFLAGS} -o $@@ module.c
@


1.3
log
@Correction to makefile so that resources are exported correctly during a
ROM build.
@
text
@d15 1
a15 1
# Makefile for Finger
d85 1
d102 1
d112 1
a112 1
.cmhg.o:; ${CMHG} -o $@@ $< -d $*.h
d115 3
@


1.2
log
@Version number increase for all modules for final Expresso release.
@
text
@d38 1
a38 1
RESDIR = <resource$dir>.Resources2.${COMPONENT}
d133 2
a134 2
        ${MKDIR} ${RESDIR}.URL
        ${CP} Resources.${LOCALE}.* ${RESDIR}.URL.* ${CPFLAGS}
@


1.1
log
@Build process improvements :
* Standardised make process in common with other protocol modules.
* Resources put into standard structure for internationalisation
* Standard !MkClean, !MkRom, !MkRam to build different versions
@
text
@d163 1
a163 1
${RAM_MODULE}: ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS}
d165 1
a165 1
        ${TLD} -o $@@ -module ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS}
@
