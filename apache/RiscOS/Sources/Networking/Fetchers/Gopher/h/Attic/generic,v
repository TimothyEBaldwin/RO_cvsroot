head	1.2;
access;
symbols
	Gopher-0_13:1.1.1.1
	Gopher-0_12:1.1.1.1
	Gopher-0_11:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_Gopher_0_09:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.05.05.11.09.57;	author sbrodie;	state dead;
branches;
next	1.1;

1.1
date	98.01.29.18.32.27;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.27;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  32-bit compatible.
  Uses shared fetcher code
Detail:
  Common DNS code, URL client code abstracted out to Common library.
Admin:
  Requires BuildSys 1.94 or later.
  Requires Common 0.01 or later (RiscOS/Sources/Networking/Fetchers/Common)

Version 0.14. Tagged as 'Gopher-0_14'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Generic (h.generic)
 *
 * © Acorn Computers Ltd. 1996-1997
 *
 */

/* Duplicate a string.  Passing NULL returns NULL.  Failure to allocate
 * space for duplicate returns NULL.
 */
extern char *Strdup(const char */*s1*/);
extern char *Strndup(const char *s1, size_t size);
extern char *Strdup_spare(const char *, const size_t);

/* Case-insensitive versions of strcmp and strncmp - exit conditions
 * identical to the normal case-sensitive versions
 */
extern int Strcmp_ci(const char *first, const char *second);
extern int Strncmp_ci(const char *first, const char *second, size_t limit);


/* Closes a socket - this routine MUST be used instead of socketclose()
 * if you want to make sure that persistent connections work.
 */
extern int close_socket(int */*psd*/);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
