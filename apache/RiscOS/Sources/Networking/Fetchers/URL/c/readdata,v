head	1.3;
access;
symbols
	URL-0_58:1.3
	URL-0_57:1.3
	URL-0_56:1.3
	URL-0_55:1.3
	URL-0_54:1.3
	URL-0_53:1.3
	URL-0_52:1.3
	URL-0_51:1.3
	URL-0_50:1.3
	dellis_autobuild_BaseSW:1.3
	URL-0_49:1.3
	URL-0_48:1.3
	URL-0_47:1.3
	URL-0_46:1.3
	sbrodie_sedwards_16Mar2000:1.3
	dcotton_autobuild_BaseSW:1.3
	URL-0_45:1.3
	URL-0_44:1.3
	URL-0_43:1.3
	URL-0_42:1.3
	URL-0_41:1.3
	URL-0_40:1.2
	URL-0_39:1.1.1.1
	sbrodie_URL_0_38:1.1.1.1
	sbrodie_URL_0_37:1.1.1.1
	sbrodie_URL_0_36:1.1.1.1
	sbrodie_URL_0_35:1.1.1.1
	sbrodie_URL_0_33:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_URL_0_31:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	98.10.06.12.48.05;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.09.16.10.38.15;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.18.32.35;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.35;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  Minor fault in URL resolver fixed (test cases added to test plan)
  Updated to use LocalRes
  Memory allocation for URL resolver increased to accomodate extra
  requirements for resolver fix.
Detail:
  Relative URLs using a // to replace everything but the scheme specifier
  didn't work.  They now do, plus a test in OddURLs checks that this is
  working.
  Memory pool size calculation altered to account for misaligned segments
  of URL to solve observed pool exhaustions on approximately 50% of
  resolves.  This was not fatal, as the memory allocator fell back to
  getting more chunks of RMA, but this can cause a severe performance
  penalty.
Admin:
  Built from clean; verified RAM build; verified resources exported OK.

Version 0.41. Tagged as 'URL-0_41'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-C-*-
 *
 * Copyright (C) Acorn Computers Ltd. 1996, 1997, 1998
 *
 * Handler for SWI URL_ReadData
 */

#include <stdio.h>
#include <string.h>
#include "swis.h"
#include "url.h"
#include "protocol.h"
#include "externs.h"
#include "utils.h"

/*************************************************************/
/* _kernel_oserror *readdata(_kernel_swi_regs *r)            */
/*************************************************************/
/* The call to get the actual data from a site. The values   */
/* in the registers are:	     	       	       	     */
/*                       r0 = flags word		     */
/*			 r1 = poll word			     */
/* 			 r2 = buffer			     */
/*			 r3 = sizeof(buffer)		     */
/* 			      				     */
/* On exit:						     */
/*                       r0 = protocol status 		     */
/*			 r1 = pollword of client	     */
/*			 r2 = modified buffer		     */
/*			 r3 = unchanged			     */
/*			 r4 = bytes read		     */
/*			 r5 = bytes left (-1 if unknown)     */
/*			      	    	     		     */
/* Lookup the correct client module and pass on the above    */
/* two way exchange.  	     	    	     	    	     */
/*************************************************************/
_kernel_oserror *readdata (_kernel_swi_regs *r)
{
	Client *list = find_client((unsigned int)r->r[1]);

	/* Return an error if we aren't registered */
  	if (list == NULL) {
  	        return make_error(url_ERROR_CLIENT_ID_NOT_FOUND, 0);
        }

  	if ((list->client).protocol == 0) {
		_kernel_oserror *e = make_error(url_ERROR_NOT_IN_PROGRESS, 0);
	  	sprintf(strchr(e->errmess, '\0'), " (%08x)", r->r[1]);
	  	return e;
  	}

  	/* get data from host */
	return directswi_call(list->client.protocol+2, r, r);
}
@


1.2
log
@  No longer uses TinyStubs (due to __ctype)
  Extra ResourceFS files added for shared fetcher use.
Detail:
  TinyStubs usage for ROM builds removed due to library static data
    reference problems.
  Added code for direct SWI calling to protocol modules.  This code
    is switched out on the DIRECTSWI macro which is set in Makefile.
  RCS log tags removed from source files.
  New tests added to OddURLs test file.
Admin:
  Built from clean; tested in RAM build.

Version 0.40. Tagged as 'URL-0_40'
@
text
@d17 1
a17 1
 * $Version: networking $
d19 1
a19 11
 * $Source: /projects2/renaissa/cvsroot/RiscOS/Sources/Networking/Fetchers/URL/c/readdata,v $
 *
 * $Log: readdata,v $
 * Revision 1.1.1.1  1998/01/29 18:32:35  sbrodie
 * Import from SrcFiler of Browser fetchers
 *
 * Revision 1.1  95/09/08  09:35:13  pwain
 * Initial revision
 *
 *
 * read data handler
@


1.1
log
@Initial revision
@
text
@d19 5
a23 1
 * $Source: /ax/networking:Phileas/URL/readdata.c: $
a24 1
 * $Log:	readdata.c,v $
d77 1
a77 1
 	return _kernel_swi(list->client.protocol+2,r,r);
@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
