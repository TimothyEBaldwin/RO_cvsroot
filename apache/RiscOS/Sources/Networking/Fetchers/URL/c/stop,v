head	1.1;
branch	1.1.1;
access;
symbols
	URL-0_58:1.1.1.1
	URL-0_57:1.1.1.1
	URL-0_56:1.1.1.1
	URL-0_55:1.1.1.1
	URL-0_54:1.1.1.1
	URL-0_53:1.1.1.1
	URL-0_52:1.1.1.1
	URL-0_51:1.1.1.1
	URL-0_50:1.1.1.1
	dellis_autobuild_BaseSW:1.1.1.1
	URL-0_49:1.1.1.1
	URL-0_48:1.1.1.1
	URL-0_47:1.1.1.1
	URL-0_46:1.1.1.1
	sbrodie_sedwards_16Mar2000:1.1.1.1
	dcotton_autobuild_BaseSW:1.1.1.1
	URL-0_45:1.1.1.1
	URL-0_44:1.1.1.1
	URL-0_43:1.1.1.1
	URL-0_42:1.1.1.1
	URL-0_41:1.1.1.1
	URL-0_40:1.1.1.1
	URL-0_39:1.1.1.1
	sbrodie_URL_0_38:1.1.1.1
	sbrodie_URL_0_37:1.1.1.1
	sbrodie_URL_0_36:1.1.1.1
	sbrodie_URL_0_35:1.1.1.1
	sbrodie_URL_0_33:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_URL_0_31:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.01.29.18.32.35;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.35;	author sbrodie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-C-*-
 *
 * $Version: networking $
 *
 * $Source: /ax/networking:Phileas/URL/stop.c: $
 *
 * $Log:	stop.c,v $
 * Revision 1.1  95/09/08  09:35:23  pwain
 * Initial revision
 *
 *
 * Stop current request for the session
 */

#include <stdio.h>
#include <string.h>
#include "swis.h"
#include "url.h"
#include "externs.h"
#include "protocol.h"
#include "utils.h"

_kernel_oserror *stop(_kernel_swi_regs *r)
{
	Client *list = find_client(r->r[1]);

	/* Return an error if we arent registered */
	if (list == NULL) {
		return make_error(url_ERROR_CLIENT_ID_NOT_FOUND, 0);
	}

	if (list->client.protocol == 0) {
		_kernel_oserror *e = make_error(url_ERROR_NOT_IN_PROGRESS, 0);
	  	sprintf(strchr(e->errmess, '\0'), " (%08x)", r->r[1]);
	  	return e;
	}

	/* call the swi */
	(void) _kernel_swi(list->client.protocol + 3, r,r);

	/* clear the protocol swi base */
	list->client.protocol=0;
	return NULL;
}


@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
