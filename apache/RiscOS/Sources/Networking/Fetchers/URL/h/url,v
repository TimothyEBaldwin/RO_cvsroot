head	1.1;
branch	1.1.1;
access;
symbols
	URL-0_58:1.1.1.1
	URL-0_57:1.1.1.1
	URL-0_56:1.1.1.1
	URL-0_55:1.1.1.1
	URL-0_54:1.1.1.1
	URL-0_53:1.1.1.1
	URL-0_52:1.1.1.1
	URL-0_51:1.1.1.1
	URL-0_50:1.1.1.1
	dellis_autobuild_BaseSW:1.1.1.1
	URL-0_49:1.1.1.1
	URL-0_48:1.1.1.1
	URL-0_47:1.1.1.1
	URL-0_46:1.1.1.1
	sbrodie_sedwards_16Mar2000:1.1.1.1
	dcotton_autobuild_BaseSW:1.1.1.1
	URL-0_45:1.1.1.1
	URL-0_44:1.1.1.1
	URL-0_43:1.1.1.1
	URL-0_42:1.1.1.1
	URL-0_41:1.1.1.1
	URL-0_40:1.1.1.1
	URL-0_39:1.1.1.1
	sbrodie_URL_0_38:1.1.1.1
	sbrodie_URL_0_37:1.1.1.1
	sbrodie_URL_0_36:1.1.1.1
	sbrodie_URL_0_35:1.1.1.1
	sbrodie_URL_0_33:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_URL_0_31:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.01.29.18.32.36;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.36;	author sbrodie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-C-*-
 *
 * $Version: networking $
 *
 * $Source: /ax/networking:Phileas/URL/url.h: $
 *
 * $Log:	url.h,v $
 * Revision 1.1  95/09/08  09:35:28  pwain
 * Initial revision
 *
 *
 * This defines the data block for the URL module
 */

#ifndef __URL__
#define __URL__

#include "debug.h"

typedef struct proxy_data {
	char *proxy;		 /* proxy server to use */
	char *url_base;   /* URL_base for this proxy */
	struct proxy_data *next;
} Proxy, *ProxyRef;

typedef struct ctrl_block {
	unsigned int  poll_word; /* Poll word / Session ID */
	int had_connection;	 /* initially false, becoming true */
	    			 /* after 1st request */
	Proxy *proxy;		 /* proxy server to use */
	Proxy *no_proxy;	 /* no_proxy requests! */
	unsigned int  protocol;  /* protocol SWI base currently used */
} Control, *ControlRef;

typedef struct client_block {
	Control client;		 /* Clients control block */
	struct client_block *next;
} Client, *ClientRef;

extern Proxy *global_proxy_list; 	/* list of global proxy servers */
extern Proxy *no_proxy_list; 	        /* list of URLs to NOT proxy */
extern Client *client_list;		/* list of clients */

/*
 * Useful functions
 */
extern Client *find_client(unsigned int id);

extern void *module_realloc(void *, size_t);

#endif /* __URL__ */

@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
