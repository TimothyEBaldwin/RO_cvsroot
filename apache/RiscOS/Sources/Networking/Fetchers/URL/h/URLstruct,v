head	1.1;
branch	1.1.1;
access;
symbols
	URL-0_58:1.1.1.1
	URL-0_57:1.1.1.1
	URL-0_56:1.1.1.1
	URL-0_55:1.1.1.1
	URL-0_54:1.1.1.1
	URL-0_53:1.1.1.1
	URL-0_52:1.1.1.1
	URL-0_51:1.1.1.1
	URL-0_50:1.1.1.1
	dellis_autobuild_BaseSW:1.1.1.1
	URL-0_49:1.1.1.1
	URL-0_48:1.1.1.1
	URL-0_47:1.1.1.1
	URL-0_46:1.1.1.1
	sbrodie_sedwards_16Mar2000:1.1.1.1
	dcotton_autobuild_BaseSW:1.1.1.1
	URL-0_45:1.1.1.1
	URL-0_44:1.1.1.1
	URL-0_43:1.1.1.1
	URL-0_42:1.1.1.1
	URL-0_41:1.1.1.1
	URL-0_40:1.1.1.1
	URL-0_39:1.1.1.1
	sbrodie_URL_0_38:1.1.1.1
	sbrodie_URL_0_37:1.1.1.1
	sbrodie_URL_0_36:1.1.1.1
	sbrodie_URL_0_35:1.1.1.1
	sbrodie_URL_0_33:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_URL_0_31:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.01.29.18.32.36;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.36;	author sbrodie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * URL module (URLstruct.h)
 *
 * © Acorn Computers Ltd. 1997
 *
 */

struct URL_ptrs {
	char	*full;
	char	*scheme;
	char	*host;
	char	*port;
	char	*user;
	char	*password;
	char	*account;
	char	*path;
	char	*query;
	char	*fragment;
	char	*minimal;
};

struct URL_lengths {
	size_t	full;
	size_t	scheme;
	size_t	host;
	size_t	port;
	size_t	user;
	size_t	password;
	size_t	account;
	size_t	path;
	size_t	query;
	size_t	fragment;
	size_t	minimal;
};

typedef union URL {
        struct URL_lengths	lengths;
	size_t			len[sizeof(struct URL_ptrs)/sizeof(size_t)];
        struct URL_ptrs		data;
	char *			field[sizeof(struct URL_ptrs)/sizeof(size_t)];
} URL;

enum {
        urlfield_FULL,
        urlfield_SCHEME,
        urlfield_HOST,
        urlfield_PORT,
        urlfield_USER,
        urlfield_PASSWORD,
        urlfield_ACCOUNT,
        urlfield_PATH,
        urlfield_QUERY,
        urlfield_FRAGMENT,
        urlfield_MINIMAL
};

enum {
        url_parseurl_buffer_lengths,
        url_parseurl_return_data,
        url_parseurl_compose_from_components,
        url_parseurl_quick_resolve
};

#define URL_fields	((sizeof(URL)/sizeof(size_t)))
@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
