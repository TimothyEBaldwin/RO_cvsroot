head	1.8;
access;
symbols
	Generic-0_11:1.8
	Generic-0_10:1.7
	Generic-0_09:1.7
	Generic-0_08:1.7
	Generic-0_07:1.7
	Generic-0_06:1.6
	sbrodie_Expresso_final_190298:1.4
	sbrodie_GenericFetcher_0_04:1.1;
locks; strict;
comment	@# @;


1.8
date	2012.02.04.10.39.47;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	OYnlX93MUiaDmPRv;

1.7
date	2000.05.05.11.13.49;	author sbrodie;	state Exp;
branches;
next	1.6;

1.6
date	98.09.16.12.47.50;	author sbrodie;	state Exp;
branches;
next	1.5;

1.5
date	98.02.24.11.08.10;	author sbrodie;	state Exp;
branches;
next	1.4;

1.4
date	98.02.18.10.32.51;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	98.02.12.10.00.25;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.02.11.11.59.27;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.02.05.19.59.57;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Makefile refactored for FetchMake.
Dummy resources run worked, compiles, but not functionally tested.
Requires Common-0_07.

Version 0.11. Tagged as 'Generic-0_11'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for a URL fetcher module
#

OBJS        = commands connect headers protocol readdata \
              ses_ctrl start status stop utils writedata module
CMHGDEPENDS = module

include C:Fetchers.FetchMake

# Dynamic dependencies:
@


1.7
log
@  32-bit compatible.
  Uses shared fetcher code
Detail:
  Common DNS code, URL client code abstracted out to Common library.
Admin:
  Requires BuildSys 1.94 or later.
  Requires Common 0.01 or later (RiscOS/Sources/Networking/Fetchers/Common)

Version 0.07. Tagged as 'Generic-0_07'
@
text
@a16 9
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name   Description
# ----       ----   -----------
# 10-Feb-98  SNB    Created
# 06-Oct-98  SNB    Updated to use LocalRes and link 5.08
#
RAMMESSAGES = o.msgs
d18 3
a20 2
COMMON_OBJ = o.commands o.connect o.headers o.protocol\
 o.readdata o.ses_ctrl o.start o.status o.stop o.utils o.writedata o.GenericHdr
a21 10
ROM_OBJS = o.moduleROM ${COMMON_OBJ}

RAM_OBJS = o.module ${COMMON_OBJ} ${RAMMESSAGES}

DBG_OBJS = ${RAMMESSAGES} od.module od.commands od.connect od.headers od.protocol\
 od.readdata od.ses_ctrl od.start od.status od.stop od.utils od.writedata o.GenericHdr

#
# Get main rules
#
a23 8
clean: fetcher-clean
        ${MKDIR} od
        @@echo ${COMPONENT}: cleaned

resources: resources-messages
        @@echo ${COMPONENT}: resource files copied to Messages module

#---------------------------------------------------------------------------
@


1.6
log
@Removed TinyStubs stuff; moved module to srccommit format

Version 0.06. Tagged as 'Generic-0_06'
@
text
@d15 1
a15 1
# Makefile for Generic
d23 1
d25 1
d27 2
a28 6
#
# Component specific options:
#
COMPONENT  = Generic
ROM_MODULE = aof.${COMPONENT}
RAM_MODULE = rm.${COMPONENT}
d30 1
d32 1
a32 1
RESFSDIR   = Resources.URL.${COMPONENT}
d34 2
a35 4
#
# Export Paths for Messages module
#
RESDIR = <resource$dir>.Resources2.URL
d38 1
a38 1
# Generic options:
d40 1
a40 16
MKDIR   = cdir
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
TLD	= tlink
RM      = remove
WIPE    = -wipe

CPFLAGS = ~cfr~v
WFLAGS  = ~c~v

CFLAGS   = -c -depend !Depend ${INCLUDES} -wp -zM -ffah -zps1 ${DFLAGS}
DFLAGS   = -D${SYSTEM} -DCOMPAT_INET4 -UTML -UTRACE
ROMFLAGS = -DROM
INCLUDES = -ITCPIPLibs:,C:
d42 3
a44 53
#
# Libraries
#
ANSILIB   = CLib:o.ansilib
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.abssym
TCPIPLIBS = TCPIPLibs:o.inetlibzm TCPIPLibs:o.socklibzm

OBJS =\
 o.commands\
 o.connect\
 o.dns\
 o.generic\
 o.headers\
 o.module\
 o.protocol\
 o.readdata\
 o.ses_ctrl\
 o.start\
 o.status\
 o.stop\
 o.URLclient\
 o.utils\
 o.writedata\
 o.GenericHdr

RAM_OBJS =\
 o.commands\
 o.connect\
 o.dns\
 o.generic\
 o.headers\
 o.moduleRAM\
 o.protocol\
 o.readdata\
 o.ses_ctrl\
 o.start\
 o.status\
 o.stop\
 o.URLclient\
 o.utils\
 o.writedata\
 o.GenericHdr

MSGSF=o.msgs

#
# Rule patterns
#
.c.o:;    ${CC} ${CFLAGS} ${ROMFLAGS} -o $@@ $<
.cmhg.o:; ${CMHG} -p -o $@@ $< -d $*.h
d46 1
a46 20
GenericHdr.h: GenericHdr.o
	   @@|
#
# Main rules:
#
#
all: ${RAM_MODULE}
        @@echo ${COMPONENT}: Module built (RAM)

rom: ${ROM_MODULE}
        @@echo ${COMPONENT}: Module built (ROM)

install_rom: ${ROM_MODULE}
        ${CP} ${ROM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: Module installed (ROM)

resources: Resources.${LOCALE}.Messages
        ${MKDIR} ${RESDIR}
        ${MKDIR} ${RESDIR}.${COMPONENT}
        ${CP} Resources.${LOCALE}.* ${RESDIR}.${COMPONENT}.* ${CPFLAGS}
a47 35

clean:
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} aof ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
        ${WIPE} h.${COMPONENT}Hdr ${WFLAGS}
        ${WIPE} linked ${WFLAGS}
        ${WIPE} map ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

${ROM_MODULE}: ${OBJS} ${INETLIB} ${ROMCSTUBS}
        ${MKDIR} aof
        ${LD} -o $@@ -aof ${OBJS} ${INETLIB} ${ROMCSTUBS}

# final link for ROM Image (using given base address)
rom_link:
        ${MKDIR} linked
        ${MKDIR} map
        ${LD} -o linked.${COMPONENT} -bin -base ${ADDRESS} ${ROM_MODULE} ${ABSSYM} \
              -map > map.${COMPONENT}
        truncate map.${COMPONENT} linked.${COMPONENT}
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete

${MSGSF}: @@.Resources.${LOCALE}.Messages
	resgen messages_file ${MSGSF} Resources.${LOCALE}.Messages ${RESFSDIR}.Messages

${RAM_MODULE}: ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS} ${CLIB}
	${mkdir} rm
        ${LD} -o $@@ -module ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS} ${CLIB}
        Access $@@ RW/R

o.moduleRAM: module.c
	$(CC) ${CFLAGS} -o $@@ module.c

@


1.5
log
@Correction to makefile so that resources are exported correctly during a
ROM build.
@
text
@d112 1
a112 1
.cmhg.o:; ${CMHG} -o $@@ $< -d $*.h
@


1.4
log
@Version number increase for all modules for final Expresso release.
@
text
@d38 1
a38 1
RESDIR = <resource$dir>.Resources2.${COMPONENT}
d132 2
a133 2
        ${MKDIR} ${RESDIR}.URL
        ${CP} Resources.${LOCALE}.* ${RESDIR}.URL.* ${CPFLAGS}
@


1.3
log
@Makefile dependency between generated .h file and cmhg file added to
ensure rebuilds function as expected.
@
text
@d162 1
a162 1
${RAM_MODULE}: ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS}
d164 1
a164 1
        ${TLD} -o $@@ -module ${RAM_OBJS} ${MSGSF} ${TCPIPLIBS}
@


1.2
log
@Build process improvements :
* Standardised make process in common with other protocol modules.
* Resources put into standard structure for internationalisation
@
text
@d114 2
@


1.1
log
@* Build structure standardised to allow ROM and RAM builds
* Instructions for customisation updated to reflect creating new fetcher
  modules from this CVS generic template module.
@
text
@d22 1
a22 1
# 05-Feb-98  SNB    Created
d33 1
a33 1
RESFSDIR   = Resources.GenericFetcher
d56 1
a56 1
DFLAGS   = -D${SYSTEM}
d66 1
a66 1
#ROMCSTUBS = RISCOSLIB:o.romcstubs
d68 1
a68 1
INETLIB   = TCPIPLibs:o.inetlibzm TCPIPLibs:o.socklibzm
d86 1
a86 1
 o.GenericMod
d104 1
a104 1
 o.GenericMod
d112 1
d130 2
a131 1
        ${CP} Resources.${LOCALE}.* ${RESDIR}.* ${CPFLAGS}
d138 1
a138 1
        ${WIPE} h.GenericMod ${WFLAGS}
d160 1
a160 1
${RAM_MODULE}: ${RAM_OBJS} ${MSGSF} ${INETLIB}
d162 1
a162 1
        ${TLD} -o $@@ -module ${RAM_OBJS} ${MSGSF} ${INETLIB}
d165 1
a165 6
GenericMod.o GenericMod.h: cmhg.GenericMod
	   ${CMHG} -o GenericMod.o $? -d GenericMod.h

o.module: GenericMod.h

o.moduleRAM: module.c GenericMod.h
@
