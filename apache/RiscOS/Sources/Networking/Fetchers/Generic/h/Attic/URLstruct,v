head	1.2;
access;
symbols
	Generic-0_06:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_GenericFetcher_0_04:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.05.05.11.13.53;	author sbrodie;	state dead;
branches;
next	1.1;

1.1
date	98.01.29.18.32.24;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.24;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  32-bit compatible.
  Uses shared fetcher code
Detail:
  Common DNS code, URL client code abstracted out to Common library.
Admin:
  Requires BuildSys 1.94 or later.
  Requires Common 0.01 or later (RiscOS/Sources/Networking/Fetchers/Common)

Version 0.07. Tagged as 'Generic-0_07'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * URL module (URLstruct.h)
 *
 * © Acorn Computers Ltd. 1997
 *
 */

struct URL_ptrs {
	char	*full;
	char	*scheme;
	char	*host;
	char	*port;
	char	*user;
	char	*password;
	char	*account;
	char	*path;
	char	*query;
	char	*fragment;
	char	*minimal;
};

struct URL_lengths {
	size_t	full;
	size_t	scheme;
	size_t	host;
	size_t	port;
	size_t	user;
	size_t	password;
	size_t	account;
	size_t	path;
	size_t	query;
	size_t	fragment;
	size_t	minimal;
};

typedef union URL {
        struct URL_lengths	lengths;
	size_t			len[sizeof(struct URL_ptrs)/sizeof(size_t)];
        struct URL_ptrs		data;
	char *			field[sizeof(struct URL_ptrs)/sizeof(size_t)];
} URL;

enum {
        urlfield_FULL,
        urlfield_SCHEME,
        urlfield_HOST,
        urlfield_PORT,
        urlfield_USER,
        urlfield_PASSWORD,
        urlfield_ACCOUNT,
        urlfield_PATH,
        urlfield_QUERY,
        urlfield_FRAGMENT,
        urlfield_MINIMAL
};

enum {
        url_parseurl_buffer_lengths,
        url_parseurl_return_data,
        url_parseurl_compose_from_components
};

#define URL_fields	((sizeof(URL)/sizeof(size_t)))
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
