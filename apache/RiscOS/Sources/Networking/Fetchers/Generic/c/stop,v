head	1.2;
access;
symbols
	Generic-0_11:1.2
	Generic-0_10:1.2
	Generic-0_09:1.2
	Generic-0_08:1.2
	Generic-0_07:1.1.1.1
	Generic-0_06:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_GenericFetcher_0_04:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.07.20.15.05.34;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.18.32.23;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.23;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Modified to use DebugLib
Detail:
  Since these modifications were made before customising the code as the
    LDAP module, there seems little point doing that all again, so this
    is the latest DebugLib-enabled version of the generic fetcher.
Admin:
  Module builds and runs (albeit not doing anything much)

Version 0.08. Tagged as 'Generic-0_08'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Generic (c.stop)
 *
 * © Acorn Computers Ltd. 1997
 */
#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"
#include <string.h>
#include "sys/errno.h"
#include "module.h"
#include "protocol.h"

_kernel_oserror *generic_stop(_kernel_swi_regs *r)
{
        Session *ses;

        r->r[0] = 0;
        ses = find_session(r->r[1]);

        dprintf(("stop_1", "Stop SWI for session %p\n", ses));

        /* kill_session validates session pointer anyway */
        kill_session(ses);

        return NULL;
}
@


1.1
log
@Initial revision
@
text
@d31 1
a31 1
  	Session *ses;
d33 2
a34 2
	r->r[0] = 0;
	ses = find_session(r->r[1]);
d36 1
a36 3
  	#ifdef TRACE
  	protocol_debug("Stop SWI for session %p\n", ses);
  	#endif
d38 4
a41 4
	/* kill_session validates session pointer anyway */
	kill_session(ses);
  	
  	return NULL;
@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
