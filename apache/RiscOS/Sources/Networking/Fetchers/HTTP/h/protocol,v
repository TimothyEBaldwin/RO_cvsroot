head	1.5;
access;
symbols
	HTTP-1_00:1.5
	HTTP-0_99:1.5
	HTTP-0_98:1.5
	HTTP-0_97:1.5
	HTTP-0_96:1.5
	HTTP-0_95:1.5
	HTTP-0_94:1.4
	HTTP-0_93:1.4
	HTTP-0_92:1.4
	HTTP-0_91:1.4
	HTTP-0_90:1.3
	HTTP-0_89:1.3
	HTTP-0_88:1.3
	dcotton_autobuild_BaseSW:1.3
	HTTP-0_87:1.3
	HTTP-0_86:1.3
	HTTP-0_85:1.3
	HTTP-0_84:1.2
	HTTP-0_83:1.2
	sbrodie_HTTP_0_82:1.2
	sbrodie_HTTP_0_81:1.2
	sbrodie_HTTP_0_80:1.2
	sbrodie_HTTP_0_79:1.2
	sbrodie_HTTP_0_78:1.2
	sbrodie_HTTP_0_77:1.2
	sbrodie_HTTP_0_76:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	sbrodie_HTTP_0_73:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2018.05.12.09.23.21;	author rool;	state Exp;
branches;
next	1.4;
commitid	eK50JBULf75EmZBA;

1.4
date	2007.09.13.18.24.44;	author srevill;	state Exp;
branches;
next	1.3;

1.3
date	99.02.15.15.58.39;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.03.19.17.37.18;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.18.32.32;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.32;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Build fix
Detail:
  Use updated AcornSSL.h header location and contents.
Admin:
  Requires Export-0_10.

Version 0.95. Tagged as 'HTTP-0_95'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Generic (h.protocol)
 *
 * StB - 08/10/97 - These definitions help code legibility tons
 *
 */

/* This is actually a bit-field used as the return flags value in R0 for
 * various protocol module SWIs.  Some common combinations have been
 * included in the list here too
 */

typedef enum {
	status_NOT_YET_CONNECTED = 0,
        status_CONNECTED_TO_SERVER = 1,
        status_SENT_REQUEST = 2,
        status_SENT_DATA = 4,
        status_WAIT_INITIAL_RESPONSE = 7,
        status_HAVE_INITIAL_RESPONSE = 8,
	status_WAIT_FOR_BODY = 15,
        status_TRANSFER_IN_PROGRESS = 16,
        status_READING_REPLY = 31,
        status_ALL_DATA_RECEIVED = 32,
        status_ABORTED = 64
} network_protocol_status_flags;

/*************************************************************/
/* These are the values that are found in the done field.    */
/*************************************************************/
typedef enum {
	HTTP_NEWSESSION         =  0,
	HTTP_NOHOST             =  1,
	HTTP_DNS		=  2,
	HTTP_CONNECTING		=  3,
	HTTP_SENDING_REQUEST	=  4,
	HTTP_SENT_REQUEST	=  5,
	HTTP_RECEIVING		=  6,
	HTTP_RECEIVING_BODY	=  7,
	HTTP_RECEIVED		=  8,
	HTTP_DONE		=  9,

	/* Timed out.  However, this value is critical, because various parts
	 * of the code rely on "OK" status codes being less than this value
	 * and "Not OK" status codes being >= this value
	 */
	HTTP_CONNECT_TIMED_OUT	= 10,

	HTTP_ERROR_READ		= 11, 	/* Error reading data */
	HTTP_ERROR_HOSTNAME	= 12,	/* Unable to lookup hostname */
	HTTP_ERROR		= 13, 	/* General purpose error */
	HTTP_ERROR_NOLINK	= 14, 	/* PPP link is not yet up */
	HTTP_ERROR_BADSESSION	= 15, 	/* Generic 'session not known' */
	HTTP_ERROR_NOCONNECTION	= 16, 	/* Used here for 'connection refused' */
	HTTP_ERROR_BAD_METHOD	= 17,	/* Bad method specified in R2 */
	HTTP_ERROR_NO_PARSE	= 18,	/* Unable to parse URL */
	HTTP_ERROR_NO_PROXY	= 19,	/* Unable to contact the proxy */
	HTTP_ERROR_NO_SECURITY	= 20,	/* Unable to locate security support */

	/* The following errors cannot be stored in ses->done because by
	 * their very nature, they indicate a failure to create a session
	 */

	HTTP_ERROR_INIT_ERR	= 21	/* Failed to initiate fetch */
} http_fsm_states;


typedef enum {
        chunkstate_reading_headers,
        chunkstate_wait_chunk_size,
        chunkstate_reading_chunk_data,
        chunkstate_wait_chunk_ending_crlf,
        chunkstate_reading_footers
} http_chunking_fsm_states;


/* Method is NOT a bitfield */
typedef enum {
        method_HTTP_GET 	= 1,
        method_HTTP_HEAD 	= 2,
        method_HTTP_OPTIONS     = 3,
        method_HTTP_POST	= 4,
        method_HTTP_TRACE       = 5,
        method_HTTP_PUT		= 8,
        method_HTTP_DELETE      = 12
} http_method_in_r2_codes;

/*************************************************************/
/* A debugging thing; goes to file if the file can be opened */
/*************************************************************/
#pragma -v1
extern void protocol_debug(const char */*format*/, ...);
extern void protocol_fast_debug(const char */*format*/, ...);
#pragma -v0
extern void protocol_dump(const char *ptr, int size);

extern char *protocol_states(int state);
extern char *protocol_network_states(int status);

@


1.4
log
@  Minor tidy-up.
Detail:
  Made cvs version of sources match Batch One release.
Admin:
  No code change.

Version 0.91. Tagged as 'HTTP-0_91'
@
text
@d105 1
@


1.3
log
@  Commit of old modified sources from last September.
Detail:
  Added knowledge of OPTIONS and TRACE to the option decoder.
  Now knows about new SWI names of AcornSSL module.
Admin:
  Tested briefly.
  Requires AcornSSL-0_08 header export to have occurred.

Version 0.85. Tagged as 'HTTP-0_85'
@
text
@a101 2
/*                                                           */
/*                                                           */
@


1.2
log
@* https: support infrastructure has been added.  The API calls to the
  Internet module are now vectored through a look up table so that the
  calls for an https request are sent via the AcornSSL module.   The HTTP
  module will only register https: protocol capability with the URL
  module if the AcornSSL module is present, thus allowing transparent
  addition of SSL support without requiring an update for the HTTP
  module.

* There is no encryption code in the HTTP module at all.  It is all
  confined to the AcornSSL module.
@
text
@d93 1
d95 3
a97 1
        method_HTTP_PUT		= 8
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
 
d54 1
a54 1
	
d60 1
a60 1
	
d70 1
d76 1
a76 1
	HTTP_ERROR_INIT_ERR	= 20	/* Failed to initiate fetch */
@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
