head	1.5;
access;
symbols
	File-0_49:1.5
	File-0_48:1.5
	File-0_47:1.4
	File-0_46:1.4
	File-0_45:1.4
	File-0_44:1.4
	File-0_43:1.4
	File-0_42:1.4
	File-0_41:1.4
	File-0_40:1.4
	File-0_39:1.4
	sbrodie_Expresso_final_190298:1.3
	sbrodie_File_0_37:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2013.05.26.16.32.32;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	4eCp56xpOXK1Z9Rw;

1.4
date	98.09.16.13.01.15;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	98.02.11.19.38.51;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.02.11.12.01.17;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.01.29.18.32.17;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.01.29.18.32.17;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove excess inclusion of <errno.h> or sys/errno.h
Weren't actually being used, therefore no net code change.
Built, but not tested.

Version 0.48. Tagged as 'File-0_48'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Example of a fetcher module for use with Acorn URL system
 *
 * © Acorn Computers Ltd. 1995-1998
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"
#include <string.h>
#include "module.h"
#include "FileHdr.h"
#include "utils.h"

/* TinySupport SWIs.  This does not work if any library static data
 * is used within the module.  This means errno (__errno) and __ctype
 * (as used by any macro call to is.... functions)  If you re-enable
 * this SWI call, this module will fail to work at all.
 */
#define NO_TINYSTUBS

#ifdef ROM
#ifndef NO_TINYSTUBS
static _kernel_oserror *__ROM;
#define TinySupport_Share	(0x82c43)
#define TinySupport_Die		(0x82c41)
#endif
#endif

#if CMHG_VERSION < 516
#define CMHG_CONST
#else
#define CMHG_CONST const
#endif

#define NO_SUCH_SWI	(0x1E6)

#define URL_PROTOCOL_REGISTER 0x83e20
#define URL_PROTOCOL_DEREGISTER 0x83e21

#ifndef ROM
extern int messages_file(void);
#endif

static int registered;

static _kernel_oserror *try_to_register(void)
{
        _kernel_oserror *e;

	if (registered) return NULL;
	e = _swix(URL_PROTOCOL_REGISTER, _INR(0,4), 0, FileURL_00, "file:",
		Module_VersionNumber, Module_Help " © Acorn 1997-8 (Built: " Module_Date ")");
	if (e == NULL) {
	        registered = 1;
	}
        return e;
}

static _kernel_oserror *try_to_deregister(void)
{
        if (!registered) {
                return NULL;
        }
        else {
                registered = 0;
		return _swix(URL_PROTOCOL_DEREGISTER, _INR(0,1), 0, FileURL_00);
        }
}

static _kernel_oserror *register_with_url(void)
{
        _kernel_oserror *e;

	e = try_to_register();
	if (e == NULL) return e;
	if (e->errnum != NO_SUCH_SWI) return e;
	e = _swix(OS_Module, _INR(0,1), 1 /* Load */, "System:Modules.Network.URL.URL");
	return try_to_register();
}


/*************************************************************/
/* _kernel_oserror *module_init(char *cmd_fail, int podu...  */
/*************************************************************/
/* Start up and register ourselves with the URL module       */
/*************************************************************/
_kernel_oserror *module_init(CMHG_CONST char *cmd_tail, int podule_base, void *pw)
{
  	_kernel_oserror *e;

  	(void) cmd_tail;
  	(void) podule_base;
  	(void) pw;

      	#ifdef ROM
      	#ifndef NO_TINYSTUBS
    	__ROM = _swix(TinySupport_Share, _IN(0), pw);
    	#endif
	#endif

	registered = 0;

       	#ifndef ROM
        e = _swix(ResourceFS_RegisterFiles, _IN(0), messages_file());
  	if (e) {
    		return e;
    	}
	#endif

        if (getenv(Module_Title "$Path")) {
                e = messages_file_open(Module_Title ":Messages");
        }
        else {
        	e = messages_file_open("Resources:$.Resources.URL." "File" ".Messages");
        }

        if (e) {
                #ifndef ROM
                (void) _swix(ResourceFS_DeregisterFiles, _IN(0), messages_file());
                #endif
    		return e;
        }

  	e = register_with_url();
  	if (e) {
    		(void) messages_file_close();
                #ifndef ROM
    		(void) _swix(ResourceFS_DeregisterFiles, _IN(0), messages_file());
                #endif
    		return e;
        }

  	return NULL;
}
/*************************************************************/
/* _kernel_oserror *module_kill(int fatal, int podule, ...   */
/*************************************************************/
/* When we are killed off, deregister ourselves from the URL */
/* module                                                    */
/*************************************************************/
_kernel_oserror *module_kill(int fatal, int podule, void *pw)
{
  	(void) fatal;
  	(void) podule;
	(void) pw;

  	(void) messages_file_close();
        #ifndef ROM
        (void) _swix(ResourceFS_DeregisterFiles, _IN(0), messages_file());
        #endif
  	(void) try_to_deregister();

        #ifdef ROM
        #ifndef NO_TINYSTUBS
    	if(!__ROM) _swix(TinySupport_Die, 0);
    	#endif
	#endif

  	return NULL;
}



void service_handler(int service_number, _kernel_swi_regs *r, void *pw)
{
        (void) pw;
        (void) service_number;

	switch (r->r[0]) {
	        case 0:
	        	(void) try_to_register();
	        	break;
	        case 1:
	        	(void) try_to_deregister();
	        	break;
	        default:
	        	break;
	}
}


/*************************************************************/
/* _kernel_oserror *swi_handler(int swi_no, _kernel_swi_...  */
/*************************************************************/
/* Upon a SWI call into this module decide what to do and    */
/* how to do it and all that. Just an excuse for a case      */
/* statement                                                 */
/*************************************************************/
_kernel_oserror *swi_handler(int swi_offset, _kernel_swi_regs *r, void *pw)
{
  	(void) pw;

  	switch (swi_offset) {
    		case FileURL_GetData - FileURL_00:
      			return(file_start(r));

    		case FileURL_Status - FileURL_00:
      			return(file_status(r));

    		case FileURL_ReadData - FileURL_00:
      			return(file_readdata(r));

    		case FileURL_Stop - FileURL_00:
      			return(file_stop(r));

    		default:
      			return(error_BAD_SWI);
        }
}
@


1.4
log
@ROM builds no longer use TinyStubs

Version 0.39. Tagged as 'File-0_39'
@
text
@a26 1
#include <errno.h>
@


1.3
log
@Const-ness of veneers modified on the basis of the CMHG version number to
avoid build problems.
@
text
@d32 7
d40 1
d42 3
d113 4
a116 2
	#ifdef ROM
    	__ROM = _swix(0xa2c43, _IN(0), pw);
d172 3
a174 1
    	if(!__ROM) _swix(0xa2c41, 0);
@


1.2
log
@Build process improvements :
* Standardised make process in common with other protocol modules.
* Resources put into standard structure for internationalisation
* Standard !MkClean, !MkRom, !MkRam to build different versions
@
text
@d36 6
d94 1
a94 1
_kernel_oserror *module_init(const char *cmd_tail, int podule_base, void *pw)
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 * © Acorn Computers Ltd. 1995-1997
d22 7
a28 7
#include "stdio.h"        /* file handling */
#include "stdlib.h"       /* for malloc/calloc */
#include "kernel.h"       /* registers */
#include "swis.h"         /* swis */
#include "string.h"       /* string handling */
#include "errno.h"        /* Include errno variable */
#include "module.h"       /* Module name etc */
d32 4
a37 1

d41 1
a41 1

d43 1
a43 1

d50 1
a50 1
        
d53 1
a53 1
		Module_VersionNumber, Module_Help " © Acorn 1997 (Built: " Module_Date ")");
d74 2
a75 2
        
	e = try_to_register(); 
d96 3
a98 1
  	registered = 0;
d100 4
a103 1
  	e = _swix(ResourceFS_RegisterFiles, _IN(0), messages_file());
d107 1
d109 11
a119 3
  	e = messages_file_open("Resources:$.Resources.FileFetcher.Messages");
  	if (e) {
    		_swix(ResourceFS_DeregisterFiles, _IN(0), messages_file());
d125 4
a128 2
    		messages_file_close();
    		_swix(ResourceFS_DeregisterFiles, _IN(0), messages_file());
d146 4
a149 2
  	messages_file_close();
  	(void) _swix(ResourceFS_DeregisterFiles, _IN(0), messages_file());
d152 4
d188 1
a188 1
  (void) pw;
d190 3
a192 4
  switch (swi_offset)
  {
    case FileURL_GetData - FileURL_00:
      return(file_start(r));
d194 2
a195 2
    case FileURL_Status - FileURL_00:
      return(file_status(r));
d197 2
a198 2
    case FileURL_ReadData - FileURL_00:
      return(file_readdata(r));
d200 2
a201 2
    case FileURL_Stop - FileURL_00:
      return(file_stop(r));
d203 3
a205 3
    default:
      return(error_BAD_SWI);
  }
@


1.1.1.1
log
@Import from SrcFiler of Browser fetchers
@
text
@@
