head	1.2;
access;
symbols
	CheckURL-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.03.17.17.19.26;	author ahodgkin;	state dead;
branches;
next	1.1;

1.1
date	2000.03.16.15.04.55;	author ahodgkin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.03.16.15.04.55;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Test harness added, with a few minor bug fixes arising from the test
results. URL_Fetcher handling improved.

Version 0.02. Tagged as 'CheckURL-0_02'
@
text
@/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    ParseURL.h                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Minimal URL parsing stuff.                        */
/*                                                            */
/* Author : A.D.Hodgkinson. Based on URL_Fetcher source by    */
/*          S.N.Brodie.                                       */
/*                                                            */
/* History: 08-Mar-2000 (ADH): Imported to Check URL.         */
/**************************************************************/

#ifndef CheckURL_ParseURL__

  #define CheckURL_ParseURL__

  enum
  {
    parseurlflags_FIELDCOUNT_IN_R5 = 1,
    parseurlflags_APPLY_HEX_ENCODE = 2
  };

  struct URL_ptrs
  {
    char * full;
    char * scheme;
    char * host;
    char * port;
    char * user;
    char * password;
    char * account;
    char * path;
    char * query;
    char * fragment;
    char * minimal;
  };

  struct URL_lengths
  {
   size_t full;
   size_t scheme;
   size_t host;
   size_t port;
   size_t user;
   size_t password;
   size_t account;
   size_t path;
   size_t query;
   size_t fragment;
   size_t minimal;
  };

  typedef union URL
  {
    struct URL_lengths   lengths;
    struct URL_ptrs      data;
    size_t               len   [sizeof(struct URL_ptrs) / sizeof(size_t)];
    char               * field [sizeof(struct URL_ptrs) / sizeof(size_t)];

  } URL;

  enum
  {
    urlfield_FULL,
    urlfield_SCHEME,
    urlfield_HOST,
    urlfield_PORT,
    urlfield_USER,
    urlfield_PASSWORD,
    urlfield_ACCOUNT,
    urlfield_PATH,
    urlfield_QUERY,
    urlfield_FRAGMENT,
    urlfield_MINIMAL
  };

  enum
  {
    url_parseurl_buffer_lengths,
    url_parseurl_return_data,
    url_parseurl_compose_from_components,
    url_parseurl_quick_resolve
  };

  #define URL_Fields    ((sizeof(URL)/sizeof(size_t)))
  #define URL_ParseURL  (0x83E07)
  #define URL_NoSuchSWI (0x1E6)

  /* Function prototypes */

  char * parseurl_canonicalise (int flags, const char * url);

#endif /* CheckURL_ParseURL__ */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@  First complete version of Check URL.
Detail:
  Check URL allows applications to match URLs against URL fragments to
  perform domain, port and/or path specific activities. This could be
  used in a browser to block advert loading, in Video Control to select
  a protocol module, or in JavaScript to enable or disable the Pace VOD
  extensions, for example. See 2501,846 for details.
Admin:
  This has only been lightly tested, but I believe it's functionally
  complete according to issue 1 of the specification.
@
text
@@
