head	1.2;
access;
symbols
	CheckURL-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2000.03.17.17.19.25;	author ahodgkin;	state dead;
branches;
next	1.1;

1.1
date	2000.03.16.15.04.54;	author ahodgkin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.03.16.15.04.54;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Test harness added, with a few minor bug fixes arising from the test
results. URL_Fetcher handling improved.

Version 0.02. Tagged as 'CheckURL-0_02'
@
text
@/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**************************************************************/
/* File:    ParseURL.c                                        */
/*          (C) 2000 Pace Micro Technology PLC                */
/*          All rights reserved                               */
/*                                                            */
/* Purpose: Minimal URL parsing stuff.                        */
/*                                                            */
/* Author : A.D.Hodgkinson. Based on URL_Fetcher source by    */
/*          S.N.Brodie.                                       */
/*                                                            */
/* History: 08-Mar-2000 (ADH): Imported to Check URL.         */
/**************************************************************/

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include <swis.h>

#ifdef TRACE2
  #define TRACE
#endif
#ifdef TRACE
  #define DEBUGLIB
#endif
#include <debuglib/debuglib.h>

#include "Generic.h"

#include "ParseURL.h"

/**************************************************************/
/* parseurl_canonicalise()                                    */
/*                                                            */
/* Ensure an absolute URL is fully canonicalised and return   */
/* that URL as a new malloc'd string.                         */
/*                                                            */
/* Parameters: Flags for URL_ParseURL reason code 3;          */
/*                                                            */
/*             Pointer to the URL.                            */
/*                                                            */
/* Returns:    Canonical form of the URL in a malloced block. */
/*                                                            */
/* Assumes:    If there is an error from the SWI the function */
/*             attempts to return a copy of the URL given to  */
/*             it.                                            */
/**************************************************************/

char * parseurl_canonicalise(int flags, const char * url)
{
  _kernel_oserror * e;
  char            * ptr;
  int               blen;

  if (!url) url = "";

  /* Spec says buffer should be length (base) + length (rel) + 4. */
  /* Here we have no relative URL, just the base, and account for */
  /* a terminator (hence "+ 5").                                  */

  blen = strlen(url) + 5;
  ptr  = malloc(blen);

  if (!ptr) return NULL;

  e =  _swix(URL_ParseURL,

             _INR(0,5),
             flags,
             url_parseurl_quick_resolve,
             url,
             NULL,
             ptr,
             blen - 1);

  ptr[blen - 1] = '\0';

  if (e)
  {
    dprintf(("", "parseurl_canonicalise: Error '%s'\n", e->errmess));

    free(ptr);
    return Strdup(url);
  }
  else
  {
    dprintf(("", "parseurl_canonicalise: Canonical URL is '%s'\n", ptr));

    return ptr;
  }
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@  First complete version of Check URL.
Detail:
  Check URL allows applications to match URLs against URL fragments to
  perform domain, port and/or path specific activities. This could be
  used in a browser to block advert loading, in Video Control to select
  a protocol module, or in JavaScript to enable or disable the Pace VOD
  extensions, for example. See 2501,846 for details.
Admin:
  This has only been lightly tested, but I believe it's functionally
  complete according to issue 1 of the specification.
@
text
@@
