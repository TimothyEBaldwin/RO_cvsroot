head	1.3;
access;
symbols
	Access-0_17:1.3
	Access-0_16:1.2
	Access-0_15:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.21.08.32.06;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	2jRxmxbHPdFoweSz;

1.2
date	99.11.29.20.01.01;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	99.11.29.18.45.58;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.29.18.45.58;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@OmniAccess brought up to date
* Makefile recreated from fragments
* 32 bit compatible (see support.s)
* Rewrote several pointless assembler routines in C
* Get defines from Interface/OmniClient.h, rather than local copies
* Internationalised
* Removed unused string header file
Tested sharing and unsharing some drives between a Risc PC (26 bit) and Titanium (32 bit, high vectors).

Version 0.17. Tagged as 'Access-0_17'
@
text
@; Copyright 1999 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; support.s for OmniClient Access(+) Protocol

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:ResourceFS
        GET     Hdr:ModHand

        AREA    |support$$code|, CODE, READONLY

        EXPORT  |suicide|

        EXPORT  flag_set_
        EXPORT  flag_clr_
        EXPORT  flag_setclr_

        EXPORT  bounce_cb

; Register a transient callback

|suicide|
        Push    "lr"
        MOV     r1, r0                  ; save module_title address (called as r12)
        ADR     r0, suicide_cb
        SWI     XOS_AddCallBack
        Pull    "pc"

|suicide_cb|
        Push    "r0-r1, lr"
        MOV     r0, #ModHandReason_Delete
        MOV     r1, r12
        SWI     XOS_Module
        Pull    "r0-r1, pc"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; r0 bits, r1 ptr

flag_set_
        PHPSEI  ip, r3
        LDR     r3, [r1]
        ORR     r0, r3, r0
        STR     r0, [r1]
        B       flag_done

; r0 bits, r1 ptr

flag_clr_
        PHPSEI  ip, r3
        LDR     r3, [r1]
        BIC     r0, r3, r0
        STR     r0, [r1]
        B       flag_done

; r0 set, r1 clr, r2 ptr

flag_setclr_
        PHPSEI  ip, r3
        LDR     r3, [r2]
        ORR     r0, r0, r3
        BIC     r0, r0, r1
        STR     r0, [r2]
flag_done
        MOV     r0, r3
        PLP     ip
        MOV     pc, lr

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

        IMPORT  callback_veneer
bounce_cb
        Push    "r0-r12, lr"
        BL      callback_veneer
        Pull    "r0-r12, pc"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

        END
@


1.2
log
@  * Further rationalisations to fit into our build system.
Detail:
  * Altered to use auto-generated or centralised declarations, constants etc.
    whereever possible.
  * Altered to use some library routines instead of local equivalents.
  * Debug build uses DebugLib.
  * Modified to use SrcCommit.
Admin:
  * Removed entire contents of hdr directory; macros now obtained from HdrSrc.
  * Contains assembler code that has 32 bit ARM 'issues' (TEQPs).
  * Requires AsmUtils 0.02 or later.
  * Both builds compiled.

Version 0.15. Tagged as 'Access-0_15'
@
text
@d17 5
a21 7
	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System
	GET 	Hdr:ResourceFS


        AREA         |C$$code|, CODE, READONLY
d23 1
a25 7
        EXPORT  |resources_register|
        EXPORT  |resources_deregister|
        EXPORT  |resources_starting|
        EXPORT        omni_error
        EXPORT        omni_error1

        EXPORT  bounce_cb
a29 3
        EXPORT  mycli_
        EXPORT  cause_server_enum
        EXPORT  cause_mounts_enum
d31 1
a31 1
XOmni_MessageLookup        *        (1 :SHL: 17) + 3 + &4a200
d36 5
a40 5
	STMFD	sp!, {r14}
	MOV	r1, r0			; save module_title address (called as r12)
	ADR 	r0, suicide_cb
	SWI	XOS_AddCallBack
        LDMFD	sp!, {pc}
d43 5
a47 51
	STMFD	sp!, {r0-r1, r14}
        MOV	r0, #4			; kill named module
	MOV	r1, r12
	SWI	XOS_Module
        LDMFD	sp!, {r0-r1, r14}
	MOV	pc, r14

omni_error
omni_error1
        STMFD        sp!, {lr}
        SWI        XOmni_MessageLookup
        LDMFD        sp!, {pc}^

; Register & Deregister routines for our ResourceFS block

|resources_register|
        STMFD       sp!, {r14}
        ADR         r0, Resource_Base
        SWI         XResourceFS_RegisterFiles
        ADRVC       r0, cli_block
        SWIVC       XOS_CLI
        MOVVC       r0, #0
        LDMFD       sp!, {pc}

cli_block
        DCB         "IconSprites Resources:$.thirdparty.omniclient.omniaccess.sprites", 0
        ALIGN

|resources_deregister|
        STMFD        sp!, {r14}
        ADR        r0, Resource_Base
        SWI        XResourceFS_DeregisterFiles
        MOVVC        r0, #0
        LDMFD        sp!, {pc}

; Service_ResourceFSStarting handler (not yet working)

|resources_starting|
        STMFD        sp!, {r14}
        MOV        r2, r0
        MOV        r3, r1
        ADR        r0, Resource_Base
        MOV        r14, pc
        MOV        pc, r2
        LDMFD        sp!, {pc}^

; Data block
Resource_Base
        ResourceFile "Resources.Sprites", "ThirdParty.OmniClient.OmniAccess.Sprites"
        DCD        0

d54 1
a54 3
        MOV     r2, pc
        ORR     r2, r2, # I_bit
        TEQP    r2, # 0
d58 3
a60 2
        MOV     r0, r3
        MOVS    pc, lr
d63 1
a63 3
        MOV     r2, pc
        ORR     r2, r2, # I_bit
        TEQP    r2, # 0
d67 1
a67 2
        MOV     r0, r3
        MOVS    pc, lr
d72 1
a72 3
        MOV     r3, pc
        ORR     r3, r3, # I_bit
        TEQP    r3, #0
d77 1
d79 2
a80 25
        MOVS    pc, lr




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


XOmni_EnumerateMounts   * (1 :SHL: 17) + &4a200

cause_server_enum
        STMFD   sp!, {lr}
        MOV     r1, # 0
        SWI     XOmni_EnumerateMounts
        MOVVC   r0, # 0
        LDMFD   sp!, {pc}^


cause_mounts_enum
        STMFD   sp!, {lr}
        MOV     r1, # 1
        SWI     XOmni_EnumerateMounts
        MOVVC   r0, # 0
        LDMFD   sp!, {pc}^

d86 1
a86 1
        STMFD   sp!, {r0-r12, lr}
d88 1
a88 8
        LDMFD   sp!, {r0-r12, pc}           ; NO HAT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

mycli_  STMFD   sp!, {lr}
        SWI     XOS_CLI
        MOVVC   r0, #0
        LDMFD   sp!, {pc}^
a91 6






@


1.1
log
@Initial revision
@
text
@d17 4
a20 3
        GET         hdr.SwiNames
        GET         hdr.RegNames
        GET         hdr.ResourceFS
a29 3
        EXPORT        disable_irqs
        EXPORT        restore_irqs
        EXPORT        enable_irqs
a43 2
I_Bit   *       1 :SHL: 27

a106 37
;
; disable_irqs:
;
; Disables interrupts up to the level of the ethernet driver (for RISC OS,
; this is just disable IRQs). Once IRQs are disabled, we cannot/must not
; be reentered.
;
; Returns a value indicating the state of interrupts prior to calling here.
;

disable_irqs        AND        r0, lr, # I_bit
                ORRS        pc, lr, # I_bit

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; restore_irqs:
;
; Restore interrupts to the state they were in prior to a call to
; ensure_irqs_off, using the value returned by ensure_irqs_off.
;

restore_irqs        BIC        lr, lr, # I_bit
                ORRS        pc, lr, r0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; enable_irqs:
;
; Ensure that interrupts are enabled. Returns a value that, when passed
; to restore_irqs, will restore the state prior to enabling interrupts.
;

enable_irqs        AND        r0, lr, # I_bit
                BICS        pc, lr, # I_bit


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
d134 1
a134 1
        ORR     r3, r3, # I_Bit
@


1.1.1.1
log
@  Initial import of OmniClient Access protocol into CVS.

Detail:
  Only build structure currently changed - sources unaltered.

Admin:
  Compiled.  Not tested.
@
text
@@
