head	1.3;
access;
symbols
	Access-0_17:1.3
	Access-0_16:1.2
	Access-0_15:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2017.05.21.08.32.00;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	2jRxmxbHPdFoweSz;

1.2
date	99.11.29.20.00.58;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	99.11.29.18.45.58;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.29.18.45.58;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@OmniAccess brought up to date
* Makefile recreated from fragments
* 32 bit compatible (see support.s)
* Rewrote several pointless assembler routines in C
* Get defines from Interface/OmniClient.h, rather than local copies
* Internationalised
* Removed unused string header file
Tested sharing and unsharing some drives between a Risc PC (26 bit) and Titanium (32 bit, high vectors).

Version 0.17. Tagged as 'Access-0_17'
@
text
@/* Copyright 1999 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-C-*-
 *
 * omni.h   General OmniClient interface
 *
 * (C) ANT Limited 1994. All rights reserved.
 *
 * Borris, December 1994.
 */

#ifndef included_omni_h
#define included_omni_h

#include "swipad.h"

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    int                 type;
    args_PAD2;
} args_OmniEnumerateMounts;

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    unsigned int        client_flags;
    char *              sprite_name;
    char *              client_name;
    char *              client_description;
    unsigned int        site_word;
    char *              fs_name;
    args_PAD7;
} args_OmniRegisterClient;

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    args_PAD1;
} args_OmniDeregisterClient;

/*****************************************************************************/

typedef struct
{
    int                 message_id;
    char *              parm;
    args_PAD2;
} args_OmniMessageLookup;

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    char *              client_leafname;
    char *              acorn_filename;
    char *              flags;
} args_OmniConvertClientToAcorn;

/*****************************************************************************/

typedef struct
{
    int                 client_id;
    char *              acorn_leafname;
    char *              client_filename;
    char *              flags;
    int                 type;
} args_OmniConvertAcornToClient;

/*****************************************************************************/

typedef struct
{
    unsigned int        src_format:4,
                        dst_format:4,
                                  :0;
    char *              src_block;
    char *              dst_block;
} args_OmniConvertTime;

/*****************************************************************************/

typedef struct
{
    int                 centiseconds;
    int                 seconds;
    int                 minutes;
    int                 hours;
    int                 day_in_month;
    int                 month_in_year;
    int                 year;
} generic_time;

/*****************************************************************************/

typedef struct
{
    int                 action;
    int                 scall;
    args_PAD2;
} args_OmniServiceCall;

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    char *              server;         /* fullname */
    struct server *     mount_id;       /* return ID or NULL */
} u;
    char *              user_id;        /* optional */
    char *              password;       /* optional */
    char *              mount_name;
    char *              mount_path;     /* optional */
    char *              authentator;    /* optional */
    args_PAD7;
} args_OmniOpMount;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    struct server *     mount_id;
    args_PAD2;
} args_OmniOpDismount;

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    struct server *     mount_id;
    unsigned int        user_free;
} u;
    unsigned int        user_used;
    unsigned int        total_size;
    args_PAD4;
} args_OmniOpFreeSpace;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    char *              buffer;
    uint                size;
    struct server *     server_id;
    args_PAD4;
} args_OmniOpEnumerateServers;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    char *              buffer;
    uint                size;
    struct server *     mount_id;       /* 0 to start */
    struct server *     server_id;      /* maybe 0 - in which case */
    char *              server_name;    /* this will be fullname string */
    args_PAD6;
} args_OmniOpEnumerateMounts;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    char *              buffer;
    uint                size;
    struct server *     mount_id;
    args_PAD4;
} args_OmniOpEnumerateActiveMounts;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    struct server *     mount_id;
    args_PAD2;
} args_OmniOpOpenRoot;

/*****************************************************************************/

typedef struct
{
    int                 reason;
    struct server *     mount_id;
    args_PAD2;
} args_OmniOpOpenUserRoot;

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    struct server *     mount_id;
    uint                flags;
} u;
    char *              mount_path;
    args_PAD3;
} args_OmniOpGetInactiveMountInfo;

/*****************************************************************************/

typedef struct
{
    int                 reason;
union
{
    struct server *     mount_id;
    char *              server;
} u;
    char *              user_id;
    char *              mount_name;
    char *              mount_path;
    char *              authenticator;
    struct server *     server_id;
    args_PAD7;
} args_OmniOpGetActiveMountInfo;

/*****************************************************************************/

#endif /* included_omni_h */

/* eof omni.h */
@


1.2
log
@  * Further rationalisations to fit into our build system.
Detail:
  * Altered to use auto-generated or centralised declarations, constants etc.
    whereever possible.
  * Altered to use some library routines instead of local equivalents.
  * Debug build uses DebugLib.
  * Modified to use SrcCommit.
Admin:
  * Removed entire contents of hdr directory; macros now obtained from HdrSrc.
  * Contains assembler code that has 32 bit ARM 'issues' (TEQPs).
  * Requires AsmUtils 0.02 or later.
  * Both builds compiled.

Version 0.15. Tagged as 'Access-0_15'
@
text
@a30 22
#define SWI_OMNI        0x004a200
#define ERR_OMNI        0x080d100

#define Omni_EnumerateMounts		(SWI_OMNI + 0)
#define Omni_RegisterClient		(SWI_OMNI + 1)
#define Omni_DeregisterClient		(SWI_OMNI + 2)
#define Omni_MessageLookup	       	(SWI_OMNI + 3)
#define Omni_ConvertClientToAcorn	(SWI_OMNI + 4)
#define Omni_ConvertAcornToClient	(SWI_OMNI + 5)
#define Omni_ConvertTime		(SWI_OMNI + 6)
#define Omni_Printers			(SWI_OMNI + 7)
#define Omni_CreateJob			(SWI_OMNI + 8)
#define Omni_SendJob			(SWI_OMNI + 9)
#define Omni_EndJob			(SWI_OMNI + 10)
#define Omni_AbortJob			(SWI_OMNI + 11)
#define Omni_JobStatus			(SWI_OMNI + 12)
#define Omni_ClearJob			(SWI_OMNI + 13)
#define Omni_PrinterInfo		(SWI_OMNI + 14)
#define Omni_EnumerateJobs		(SWI_OMNI + 15)

/*****************************************************************************/

a39 12
#define OMNI_SUPPORT_FILING     0x0001u     /* Network filing system module */
#define OMNI_REQUIRE_USERID     0x0002u     /* Filing needs a userid */
#define OMNI_REQUIRE_PASSWORD   0x0004u     /* Filing needs a password */
#define OMNI_REQUIRE_MOUNTPATH  0x0008u     /* Filing needs a mount path */
#define OMNI_REQUIRE_AUTHENT    0x0010u     /* Filing needs authentication string */
#define OMNI_NOTREQUIRE_MOUNT	0x0020u	    /* Filing does NOT require a mount name */
#define OMNI_PSEUDO_SERVER	0x0040u     /* A special authenticator */

#define OMNI_SUPPORT_PRINTING   0x0100u     /* Network printing module */
#define OMNI_PRINT_PASSWORD     0x0200u     /* Printing needs a password */
#define OMNI_PRINT_MEASURED     0x0400u     /* Need length in advance */

a124 21
#define OmniOp_Mount                                        0x0
#define OmniOp_Dismount                                     0x1
#define OmniOp_FreeSpace                                    0x2
#define OmniOp_EnumerateServers                             0x3
#define OmniOp_EnumerateMounts                              0x4
#define OmniOp_EnumerateActiveMounts                        0x5
#define OmniOp_OpenRoot                                     0x6
#define OmniOp_OpenUserRoot                                 0x7
#define OmniOp_GetInactiveMountInfo                         0x8
#define OmniOp_GetActiveMountInfo                           0x9
#define OmniOp_CreatePrintJob                               0xa
#define OmniOp_SendPrintJob                                 0xb
#define OmniOp_EndPrintJob                                  0xc
#define OmniOp_AbortPrintJob                                0xd
#define OmniOp_GetPrintJobInfo                              0xe
#define OmniOp_ClearPrintJobs                               0xf
#define OmniOp_EnumeratePrinters                            0x10
#define OmniOp_Reset                           		    0x11

/*****************************************************************************/

@


1.1
log
@Initial revision
@
text
@a32 1
#define Service_OmniAction    0xa0
@


1.1.1.1
log
@  Initial import of OmniClient Access protocol into CVS.

Detail:
  Only build structure currently changed - sources unaltered.

Admin:
  Compiled.  Not tested.
@
text
@@
