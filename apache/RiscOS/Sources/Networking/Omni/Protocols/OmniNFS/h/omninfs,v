head	1.6;
access;
symbols
	OmniNFS-0_72:1.6
	OmniNFS-0_71:1.6
	OmniNFS-0_70-2:1.5
	OmniNFS-0_70-1:1.4
	OmniNFS-0_70-0:1.3
	OmniNFS-0_69:1.3
	OmniNFS-0_68:1.3
	OmniNFS-0_67:1.2
	OmniNFS-0_66:1.2
	OmniNFS-0_65:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2018.01.29.21.52.32;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	jxnHhDaBaRHUOOoA;

1.5
date	2018.01.29.21.49.30;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	JbejJtfNqqtCNOoA;

1.4
date	2018.01.29.21.47.06;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	NGm1yEfHuvIIMOoA;

1.3
date	2015.08.25.09.27.18;	author jballance;	state Exp;
branches;
next	1.2;
commitid	AoLGsy5s8PXUeDyy;

1.2
date	99.11.29.18.32.30;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	99.11.29.14.05.58;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.29.14.05.58;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Internationalised
Tested on a mount from FreeBSD 11.1-RELEASE-p4.

Version 0.71. Tagged as 'OmniNFS-0_71'
@
text
@/* Copyright 1999 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-c-*- */

/*
 * These routines get used by the cmhg generated header.
 */
#ifndef __OMNINFS_H
#define __OMNINFS_H

#define TICKER_RATE		6000		/* Every 60 seconds */
#define	SERVER_TIMEOUT_ILL	12000		/* After 2 mins remove from the display */
#define SERVER_TIMEOUT_DEAD	60000		/* After 10 mins forget about it */

enum { CLAIM_EVENT, DONT_CLAIM_EVENT };

/* Enum for error reporting */
typedef enum
{
    err_NOT_SUPPORTED = client_ERRBASE,
    err_BAD_MAGIC,
    err_NO_MEMORY,
    err_CANT_SET_SOCKET,
    err_BAD_IOCTL,
    err_CANT_SEND,
    err_CANT_RECV,
    err_CANT_PRINT,
    err_JOB_NOT_FINISHED,
    err_CANT_READHOST,

    err_UNKNOWN
} err_number_type;

extern const char *intl_lookup(const char *, const char *);
extern _kernel_oserror *intl_error(err_number_type);
extern int server_list_insert(unsigned long addr);
extern int server_list_purge(void);
extern void *Resources(void); /* From ResGen */

extern void *private_word;
extern int rpc_socket;

typedef struct onfs_active_server {
    unsigned int magic;
    struct onfs_active_server *next;
    char *server_name;		/* Full name of server */
    int short_name_len;		/* How much of the long name to use as a short name */
    unsigned long addr;
    unsigned int last_seen;
    int good_address;           /* True if the name was from the DNS */
    int server_ill;
} onfs_active_server;

#define ONFS_SERVER_MAGIC	0x74D0274D

typedef struct onfs_active_mount {
    unsigned int magic;
    struct onfs_active_mount *next;
    onfs_active_server *server_id;
    char *mount_name;
} onfs_active_mount;

#define ONFS_MOUNT_MAGIC	0x381CC027

typedef struct onfs_print_job {
    unsigned int magic;
    struct onfs_print_job *next;
    int handle;
    int status;
    int bytes;
} onfs_print_job;

#define ONFS_PRINT_MAGIC	0x658FBF78

#define Resolver_GetHost		0x046001

#endif /* __OMNINFS_H */
@


1.5
log
@Cleanup pass
Callback.s copied from NetFiler (expands tabs, use Hdr:ModHand names)
Quit peeking kernel workspace, just use OS_ReadMonotonicTime since no uses of MONOTIME are in places where calling a SWI is prohibited.
Don't abuse InetDBase$Path, use InetDBase:
Use constants from Global/OsBytes.h and Interface/HighFSI.h
Use NFS SWI numbers from Interface/NFS.h (requires NFS-3_23 or later)
Get Omni constants from Interface/OmniClient.h
Tagged as OmniNFS-0_70-2.
@
text
@d29 19
@


1.4
log
@Resource simplification
RISC OS 5 themed sprites added
Assembler to manage resources refactored into C
Tagged as OmniNFS-0_70-1.
@
text
@a35 3
#define MONOTIME	(*(unsigned int *)MetroGnome)


a67 4
#define OSModule_Enter                  2
#define OSModule_Claim                  6
#define OSModule_Free                   7

@


1.3
log
@  Removed zpp access error
Detail:
  The macro MONOTIME accessed the 'MetroGmone' location by hard coding
  its address (0x01c) in the zero page. Now calls OS_ReadSysInfo 77 to
  find the address instead of hard coding it.
Admin:
 tested in iMx6

Version 0.68. Tagged as 'OmniNFS-0_68'
@
text
@d31 1
@


1.2
log
@  * Further rationalisations to fit into our build system.
  * Now builds.
Detail:
  * Altered to use auto-generated or centralised declarations, constants etc.
    whereever possible.
  * Altered to use some library routines instead of local equivalents.
  * Debug build uses DebugLib; different CMHG header for debug builds now
    generated using conditional compilation in preference to a completely
    separate CMHG file.
  * serverlist.c no longer built in pcc mode.
  * Internet event handler enables interrupts on entry and disables them again
    on exit.
  * Modified to use SrcCommit.
Admin:
  * Removed all files in hdr directory; assembler sources now use macros from
    HdrSrc.
  * Removed cmhg.OmniNFSDbg
  * Removed base.h and Base.s.
  * Removed builddate.h.
  * Requires AsmUtils.
  * Both builds compiled.

Version 0.65. Tagged as 'OmniNFS-0_65'
@
text
@d35 2
a36 1
#define MONOTIME	(*(unsigned int *)0x10C)
@


1.1
log
@Initial revision
@
text
@d27 1
a27 16
#define Event_Internet		19

typedef enum RETURNMETHOD { VIASTACK, VIAR14 } RETURNMETHOD;

extern _kernel_oserror *onfs_swi         (int, _kernel_swi_regs *, void *);
extern _kernel_oserror *onfs_command     (char *, int, int, void *);
extern            void  onfs_service     (int, _kernel_swi_regs *, void *);
extern _kernel_oserror *onfs_initialise  (char *, int, void *);
extern            void  onfs_finalise    (void);
extern    RETURNMETHOD  inet_handler     (_kernel_swi_regs *, void * );
extern    RETURNMETHOD  timer_handler    (_kernel_swi_regs *, void * );
extern    RETURNMETHOD  callback_handler (_kernel_swi_regs *, void * );

extern int inet_entry(int);
extern int timer_entry(int);
extern int callback_entry(int);
a67 7

#define Service_FSRedeclare             0x40
#define Service_StartFiler              0x4B
#define Service_StartedFiler            0x4C
#define Service_Reset                   0x27
#define Service_FilerDying              0x4F
#define Service_Memory       		0x11
@


1.1.1.1
log
@  Initial import of OmniNFS.
Detail:
  ANT sources unmodified; just converted to conform to our build structure.
  Some modifications should be made, in particular: 
    serverlist.c is currently compiled in pcc mode - should convert to ANSI
    module entry point declarations should be altered so that it actually
      builds with our version of CMHG.
Admin:
  Completely untested as it won't build properly yet.
@
text
@@
