head	1.7;
access;
symbols
	OmniNFS-0_72:1.7
	OmniNFS-0_71:1.7
	OmniNFS-0_70-2:1.6
	OmniNFS-0_70-1:1.6
	OmniNFS-0_70-0:1.5
	OmniNFS-0_69:1.4
	OmniNFS-0_68:1.4
	OmniNFS-0_67:1.4
	OmniNFS-0_66:1.3
	OmniNFS-0_65:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2018.01.29.21.52.25;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	jxnHhDaBaRHUOOoA;

1.6
date	2018.01.29.21.46.59;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	NGm1yEfHuvIIMOoA;

1.5
date	2018.01.29.21.44.13;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	qDB3uqw9ftg6MOoA;

1.4
date	2012.01.14.22.57.23;	author srevill;	state Exp;
branches;
next	1.3;
commitid	GbCNMs8vl3gx7cPv;

1.3
date	2009.07.16.19.15.36;	author rsprowson;	state Exp;
branches;
next	1.2;

1.2
date	99.11.29.18.32.25;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	99.11.29.14.05.51;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.29.14.05.51;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Internationalised
Tested on a mount from FreeBSD 11.1-RELEASE-p4.

Version 0.71. Tagged as 'OmniNFS-0_71'
@
text
@# Copyright 1999 Pace Micro Technology plc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for OmniNFS
#

COMPONENT    = OmniNFS
OBJS         = CallBack omninfs serverlist
HDRS         =
CMHGDEPENDS  = omninfs
CMHGDFLAGS   = -DDEBUG
CDFLAGS      = -DDEBUG
CFLAGS       = -DNDEBUG -DINET -DCOMPAT_INET4
CINCLUDES    = -ITCPIPLibs:
ROMCDEFINES  = -DROM
LIBS         = ${NET4LIBS} ${ASMUTILS}
RES_PATH     = ThirdParty.OmniClient
INSTRES_FILES = Sprites
INSTRES_VERSION = Messages

include CModule

CFLAGS      += -Wp

# Dynamic dependencies:
@


1.6
log
@Resource simplification
RISC OS 5 themed sprites added
Assembler to manage resources refactored into C
Tagged as OmniNFS-0_70-1.
@
text
@d19 1
a19 1
OBJS         = CallBack constants makeerror omninfs serverlist
@


1.5
log
@Makefile recreated from fragments
Placeholder UK/Messages added (will be used later)
Strip dependencies on clean
Tagged as OmniNFS-0_70-0.
@
text
@d19 1
a19 1
OBJS         = CallBack constants makeerror omninfs Resources serverlist
@


1.4
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.67. Tagged as 'OmniNFS-0_67'
@
text
@d15 1
a15 3
# File:    Makefile
# Purpose: Makefile for OmniNFS
# Author:  Ben Laughton
a16 100
# History:
#
# 1999-11-29: BAL
# Created.




# ------------------------------------------------------------------------------
# Paths
#

# Export path for Messages module
RESDIR		= <resource$dir>.Resources2.$(COMPONENT)



# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
CP		= copy
RM		= remove
WIPE		= x wipe
STRIPDEPND	= stripdepnd



# ------------------------------------------------------------------------------
# Flags
#

CPFLAGS		= ~cfr~v
WFLAGS		= ~c~vr




# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= OmniNFS
NORMAL_TARGET	= OmniNFS
MEMCHECK_TARGET	= OmniNFSmc
HIERPROF_TARGET	= OmniNFShp
DEBUG_TARGET	= OmniNFSd

NORMAL_HDR =	h.OmniNFSHdr
DEBUG_HDR =	h.OmniNFSDbg

A_DEBUG_ON	= "-pd \"DEBUG SETL {TRUE}\""
A_DEBUG_OFF	= "-pd \"DEBUG SETL {FALSE}\""

# C debugging and DebugLib do not map 1<->1 since DebugLib is used for other
# stuff as well.
C_DEBUG_ON	= -DDEBUG -DNDEBUG
C_DEBUG_OFF	= -DNDEBUG




# ------------------------------------------------------------------------------
# Build rules
#

# Local

all:
	@@amu -f MainMake $(MFLAGS) TARGET=$(NORMAL_TARGET) EXTRA_A_FLAGS=$(A_DEBUG_OFF) EXTRA_C_FLAGS=$(C_DEBUG_OFF) HDR=$(NORMAL_HDR) EXT=o
	@@echo $(COMPONENT): build complete

debug:
	@@amu -f MainMake $(MFLAGS) TARGET=$(DEBUG_TARGET) EXTRA_A_FLAGS=$(A_DEBUG_ON) EXTRA_C_FLAGS="$(C_DEBUG_ON) -DDEBUGLIB" HDR=$(DEBUG_HDR) EXT=od
	@@echo $(COMPONENT): debug build complete

memcheck:
	@@amu -f MainMake $(MFLAGS) TARGET=$(MEMCHECK_TARGET) EXTRA_A_FLAGS=$(A_DEBUG_OFF) EXTRA_C_FLAGS="$(C_DEBUG_OFF) -DDEBUGLIB" HDR=$(NORMAL_HDR) EXT=oMC
	@@echo $(COMPONENT): memcheck build complete

preprocess:
	@@amu -f MainMake $(MFLAGS)  EXTRA_A_FLAGS=$(A_DEBUG_OFF) EXTRA_C_FLAGS=$(C_DEBUG_OFF) HDR=$(NORMAL_HDR) EXT=i
	@@echo $(COMPONENT): preprocessing complete


# RISC OS ROM build rules

rom:
	@@amu -f MainMake $(MFLAGS) EXTRAFLAGS=-DROM TARGET=$(NORMAL_TARGET) HDR=$(NORMAL_HDR) EXT=o
	@@echo $(COMPONENT): build complete

export:
	@@amu -f MainMake $(MFLAGS)  EXT=AvoidAMUBug

install:
	@@amu -f MainMake $(MFLAGS) TARGET=$(NORMAL_TARGET) HDR=$(NORMAL_HDR) EXT=o

install_rom:
	@@amu -f MainMake $(MFLAGS) TARGET=$(ROM_TARGET) HDR=$(NORMAL_HDR) EXT=o
d18 13
a30 2
rom_link:
	@@amu -f MainMake $(MFLAGS) TARGET=$(ROM_TARGET) HDR=$(NORMAL_HDR) EXT=o
d32 1
a32 2
resources: LocalRes:Messages
	@@echo $(COMPONENT): resource files copied to Messages module
d34 1
a34 14
clean:
	@@$(WIPE) o      $(WFLAGS)
	@@$(WIPE) oMC    $(WFLAGS)
	@@$(WIPE) oHP    $(WFLAGS)
	@@$(WIPE) od     $(WFLAGS)
	@@$(WIPE) i      $(WFLAGS)
	@@$(WIPE) linked $(WFLAGS)
	@@$(WIPE) map    $(WFLAGS)
	@@$(WIPE) rm     $(WFLAGS)
	@@$(WIPE) aof    $(WFLAGS)
	@@$(RM) $(NORMAL_HDR)
	@@$(RM) $(DEBUG_HDR)
	@@$(STRIPDEPND) MainMake
	@@echo $(COMPONENT): cleaned
@


1.3
log
@Reduce number of compiler warnings.
Removed 2 dead variables; renamed a variable called "new" not to be a C++ keyword, removed assumptions that malloc() returns 0 for fail (now NULL).
The makefile "clean" target no longer trys to compile anything either.

Version 0.66. Tagged as 'OmniNFS-0_66'
@
text
@d43 1
a43 1
WIPE		= -wipe
@


1.2
log
@  * Further rationalisations to fit into our build system.
  * Now builds.
Detail:
  * Altered to use auto-generated or centralised declarations, constants etc.
    whereever possible.
  * Altered to use some library routines instead of local equivalents.
  * Debug build uses DebugLib; different CMHG header for debug builds now
    generated using conditional compilation in preference to a completely
    separate CMHG file.
  * serverlist.c no longer built in pcc mode.
  * Internet event handler enables interrupts on entry and disables them again
    on exit.
  * Modified to use SrcCommit.
Admin:
  * Removed all files in hdr directory; assembler sources now use macros from
    HdrSrc.
  * Removed cmhg.OmniNFSDbg
  * Removed base.h and Base.s.
  * Removed builddate.h.
  * Requires AsmUtils.
  * Both builds compiled.

Version 0.65. Tagged as 'OmniNFS-0_65'
@
text
@d127 5
a131 5
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy HDR=$(NORMAL_HDR) EXT=o
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy HDR=$(NORMAL_HDR) EXT=oMC
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy HDR=$(NORMAL_HDR) EXT=oHP
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy HDR=$(NORMAL_HDR) EXT=od
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy HDR=$(NORMAL_HDR) EXT=i
@


1.1
log
@Initial revision
@
text
@d68 2
a69 1
HDR = h.OmniNFSHdr
d89 1
a89 1
	@@amu -f MainMake $(MFLAGS) TARGET=$(NORMAL_TARGET) EXTRA_A_FLAGS=$(A_DEBUG_OFF) EXTRA_C_FLAGS=$(C_DEBUG_OFF) EXT=o
d92 2
a93 1
debug:	debug_$(TYPE)
a95 6
debug_:
	@@amu -f MainMake $(MFLAGS) TARGET=$(DEBUG_TARGET) EXTRA_A_FLAGS=$(A_DEBUG_ON) EXTRA_C_FLAGS="$(C_DEBUG_ON) -DDEBUGLIB" EXT=od

debug_NEC:
	@@amu -f MainMake $(MFLAGS) TARGET=$(DEBUG_TARGET) EXTRA_A_FLAGS=$(A_DEBUG_ON) EXTRA_C_FLAGS="$(C_DEBUG_ON) -DDEBUGLIB -DDHCP" EXTRAOBJS="od.dhcpboot" EXT=od

d97 1
a97 1
	@@amu -f MainMake $(MFLAGS) TARGET=$(MEMCHECK_TARGET) EXTRA_A_FLAGS=$(A_DEBUG_OFF) EXTRA_C_FLAGS="$(C_DEBUG_OFF) -DDEBUGLIB -DMemCheck_MEMCHECK" EXT=oMC
d101 1
a101 1
	@@amu -f MainMake $(MFLAGS)  EXTRA_A_FLAGS=$(A_DEBUG_OFF) EXTRA_C_FLAGS=$(C_DEBUG_OFF) EXT=i
d108 1
a108 1
	@@amu -f MainMake $(MFLAGS) EXTRAFLAGS=-DROM TARGET=$(NORMAL_TARGET) EXT=o
d115 1
a115 1
	@@amu -f MainMake $(MFLAGS) TARGET=$(NORMAL_TARGET) EXT=o
d118 1
a118 1
	@@amu -f MainMake $(MFLAGS) TARGET=$(ROM_TARGET) EXT=o
d121 1
a121 1
	@@amu -f MainMake $(MFLAGS) TARGET=$(ROM_TARGET) EXT=o
a123 3
	$(MKDIR) $(RESDIR)
	TokenCheck LocalRes:Messages
	$(CP) LocalRes:Messages $(RESDIR).Messages $(CPFLAGS)
d127 5
a131 5
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy EXT=o
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy EXT=oMC
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy EXT=oHP
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy EXT=od
	@@amu -f MainMake $(MFLAGS)  TARGET=Dummy EXT=i
d136 2
a137 1
	@@$(RM) $(HDR)
@


1.1.1.1
log
@  Initial import of OmniNFS.
Detail:
  ANT sources unmodified; just converted to conform to our build structure.
  Some modifications should be made, in particular: 
    serverlist.c is currently compiled in pcc mode - should convert to ANSI
    module entry point declarations should be altered so that it actually
      builds with our version of CMHG.
Admin:
  Completely untested as it won't build properly yet.
@
text
@@
