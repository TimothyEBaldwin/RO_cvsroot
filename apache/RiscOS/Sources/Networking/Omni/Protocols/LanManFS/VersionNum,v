head	1.66;
access;
symbols
	LanManFS-2_62:1.66
	LanManFS-2_61:1.65
	LanManFS-2_60:1.64
	LanManFS-2_59:1.63
	LanManFS-2_58:1.62
	LanManFS-2_57:1.61
	LanManFS-2_56:1.60
	LanManFS-2_55:1.59
	LanManFS-2_54:1.58
	LanManFS-2_53:1.57
	LanManFS-2_52:1.56
	LanManFS-2_51:1.55
	LanManFS-2_50:1.54
	LanManFS-2_49:1.53
	LanManFS-2_48:1.52
	LanManFS-2_47:1.51
	LanManFS-2_46:1.50
	LanManFS-2_45:1.49
	LanManFS-2_44:1.48
	LanManFS-2_43:1.47
	LanManFS-2_42:1.46
	LanManFS-2_41:1.45
	LanManFS-2_40:1.44
	LanManFS-2_39:1.43
	LanManFS-2_38:1.42
	LanManFS-2_37:1.41
	LanManFS-2_36:1.40
	LanManFS-2_35:1.39
	LanManFS-2_34:1.38
	LanManFS-2_33:1.37
	LanManFS-2_32:1.36
	LanManFS-2_31:1.35
	RO_5_07:1.34
	LanManFS-2_30:1.34
	LanManFS-2_29:1.33
	LanManFS-2_28:1.32
	LanManFS-2_27:1.29
	LanManFS-2_26:1.28
	LanManFS-2_25:1.27
	LanManFS-2_24:1.26
	LanManFS-2_23:1.25
	LanManFS-2_22:1.24
	LanManFS-2_21:1.23
	LanManFS-2_20:1.22
	LanManFS-2_19:1.21
	LanManFS-2_18:1.20
	LanManFS-2_17:1.19
	LanManFS-2_16:1.18
	LanManFS-2_15:1.17
	LanManFS-2_14:1.16
	LanManFS-2_13:1.15
	LanManFS-2_12:1.14
	LanManFS-2_11:1.13
	LanManFS-2_10:1.12
	LanManFS-2_09:1.11
	LanManFS-2_08:1.10
	LanManFS-2_07:1.9
	LanManFS-2_06:1.8
	LanManFS-2_05:1.7
	LanManFS-2_04:1.6
	LanManFS-2_03:1.5
	LanManFS-2_02:1.4
	LanManFS-2_01:1.3
	LanManFS-2_00:1.2
	LanManFS-1_87-1_1_1_1_2_13:1.1.1.1.2.13
	LanManFS-1_87-1_1_1_1_2_12:1.1.1.1.2.12
	LanManFS-1_87-1_1_1_1_2_11:1.1.1.1.2.11
	LanManFS-1_87-1_1_1_1_2_10:1.1.1.1.2.10
	LanManFS-1_87-1_1_1_1_2_9:1.1.1.1.2.9
	LanManFS-1_87-1_1_1_1_2_8:1.1.1.1.2.8
	LanManFS-1_87-1_1_1_1_2_7:1.1.1.1.2.7
	LanManFS-1_87-1_1_1_1_2_6:1.1.1.1.2.6
	LanManFS-1_87-1_1_1_1_2_5:1.1.1.1.2.5
	LanManFS-1_87-1_1_1_1_2_4:1.1.1.1.2.4
	LanManFS-1_87-1_1_1_1_2_3:1.1.1.1.2.3
	LanManFS-1_87-1_1_1_1_2_2:1.1.1.1.2.2
	LanManFS-1_87-1_1_1_1_2_1:1.1.1.1.2.1
	sbrodie_LanManFS_dev:1.1.1.1.0.2
	sbrodie_LanManFS_dev_bp:1.1.1.1
	LanManFS-1_87:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.66
date	2018.08.04.09.23.34;	author rool;	state Exp;
branches;
next	1.65;
commitid	eZmYQ5vaFQjlFMMA;

1.65
date	2018.01.03.22.06.30;	author rsprowson;	state Exp;
branches;
next	1.64;
commitid	2mvsrxqgkH3zJtlA;

1.64
date	2017.01.23.21.45.37;	author jballance;	state Exp;
branches;
next	1.63;
commitid	RH8H0PLaJmMWH8Dz;

1.63
date	2017.01.21.11.05.25;	author rsprowson;	state Exp;
branches;
next	1.62;
commitid	wTlByCHIpddjePCz;

1.62
date	2016.10.23.14.31.28;	author rsprowson;	state Exp;
branches;
next	1.61;
commitid	tIsBRIH0cb7mghrz;

1.61
date	2016.08.18.17.55.44;	author rsprowson;	state Exp;
branches;
next	1.60;
commitid	FuPEeIHqczGXvOiz;

1.60
date	2016.05.14.12.55.11;	author rool;	state Exp;
branches;
next	1.59;
commitid	MC8JaBywHOhbWr6z;

1.59
date	2016.04.14.20.11.20;	author jlee;	state Exp;
branches;
next	1.58;
commitid	7HMIjBU2kKlAjD2z;

1.58
date	2016.04.03.07.55.54;	author rsprowson;	state Exp;
branches;
next	1.57;
commitid	ETcR60kdLmCcB91z;

1.57
date	2016.03.17.08.37.10;	author rsprowson;	state Exp;
branches;
next	1.56;
commitid	UFtCQdgsAJ2fnYYy;

1.56
date	2015.08.09.10.42.46;	author rool;	state Exp;
branches;
next	1.55;
commitid	TYF5qIOL7WOKaAwy;

1.55
date	2015.08.02.08.42.23;	author rsprowson;	state Exp;
branches;
next	1.54;
commitid	KOA496GR0DCpJFvy;

1.54
date	2015.07.12.09.20.30;	author rool;	state Exp;
branches;
next	1.53;
commitid	XUshYt2oKrUkCYsy;

1.53
date	2015.07.05.07.57.44;	author rsprowson;	state Exp;
branches;
next	1.52;
commitid	5VZfrDqvkhYTn4sy;

1.52
date	2015.03.14.20.05.52;	author rsprowson;	state Exp;
branches;
next	1.51;
commitid	TUM9qenXTWjT2Cdy;

1.51
date	2014.08.06.20.57.14;	author rsprowson;	state Exp;
branches;
next	1.50;
commitid	ZDoXXBFnai2XolLx;

1.50
date	2014.07.14.20.46.54;	author rsprowson;	state Exp;
branches;
next	1.49;
commitid	Kon1Pj6s0Ihf5oIx;

1.49
date	2014.05.31.13.49.43;	author rsprowson;	state Exp;
branches;
next	1.48;
commitid	tnhZS9XNlOrObHCx;

1.48
date	2014.01.19.16.21.13;	author rsprowson;	state Exp;
branches;
next	1.47;
commitid	0F8wGrpzbdHQgKlx;

1.47
date	2013.11.22.18.44.34;	author rsprowson;	state Exp;
branches;
next	1.46;
commitid	DXYB6F4orjnCViex;

1.46
date	2013.10.04.21.00.06;	author rsprowson;	state Exp;
branches;
next	1.45;
commitid	eiQDL9obBhdLf18x;

1.45
date	2013.10.03.07.46.11;	author rsprowson;	state Exp;
branches;
next	1.44;
commitid	BeiPxSOMs39oTO7x;

1.44
date	2013.10.03.07.27.04;	author rsprowson;	state Exp;
branches;
next	1.43;
commitid	iTaBDwF1woaPMO7x;

1.43
date	2013.09.30.19.47.02;	author rsprowson;	state Exp;
branches;
next	1.42;
commitid	MoU9V9JbMV2FYu7x;

1.42
date	2012.11.11.20.43.12;	author rsprowson;	state Exp;
branches;
next	1.41;
commitid	3D5DE5lr2isCFZrw;

1.41
date	2012.09.21.19.33.20;	author rsprowson;	state Exp;
branches;
next	1.40;
commitid	ZjhU3ErxFvpjVqlw;

1.40
date	2012.04.14.20.57.28;	author rsprowson;	state Exp;
branches;
next	1.39;
commitid	W1UWVt811sQ2xS0w;

1.39
date	2011.10.15.07.30.07;	author rsprowson;	state Exp;
branches;
next	1.38;
commitid	HPAQrxWHCl3LUpDv;

1.38
date	2009.08.01.08.10.24;	author rsprowson;	state Exp;
branches;
next	1.37;

1.37
date	2009.07.19.22.24.51;	author rsprowson;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.15.16.00.08;	author bavison;	state Exp;
branches;
next	1.35;
commitid	GhZBwZ2GN8lg58Kt;

1.35
date	2009.04.15.15.51.34;	author bavison;	state Exp;
branches;
next	1.34;
commitid	nfMCLS8WEvrk28Kt;

1.34
date	2004.02.16.15.47.04;	author kbracey;	state Exp;
branches;
next	1.33;

1.33
date	2004.01.09.11.28.00;	author bavison;	state Exp;
branches;
next	1.32;

1.32
date	2004.01.07.14.54.46;	author bavison;	state Exp;
branches;
next	1.31;

1.31
date	2004.01.07.14.10.26;	author bavison;	state Exp;
branches;
next	1.30;

1.30
date	2004.01.07.13.38.44;	author bavison;	state Exp;
branches;
next	1.29;

1.29
date	2003.12.19.17.18.37;	author bavison;	state Exp;
branches;
next	1.28;

1.28
date	2003.03.11.20.49.00;	author kbracey;	state Exp;
branches;
next	1.27;

1.27
date	2003.01.16.18.14.16;	author rsprowson;	state Exp;
branches;
next	1.26;

1.26
date	2002.12.16.10.22.02;	author rsprowson;	state Exp;
branches;
next	1.25;

1.25
date	2002.12.14.13.51.16;	author rsprowson;	state Exp;
branches;
next	1.24;

1.24
date	2001.06.08.15.17.16;	author srevill;	state Exp;
branches;
next	1.23;

1.23
date	2001.06.01.09.11.34;	author sbrodie;	state Exp;
branches;
next	1.22;

1.22
date	2001.04.02.10.47.34;	author sbrodie;	state Exp;
branches;
next	1.21;

1.21
date	2001.03.13.10.28.56;	author sbrodie;	state Exp;
branches;
next	1.20;

1.20
date	2001.01.15.12.49.48;	author sbrodie;	state Exp;
branches;
next	1.19;

1.19
date	2001.01.09.17.09.30;	author sbrodie;	state Exp;
branches;
next	1.18;

1.18
date	2000.12.14.18.29.53;	author nbingham;	state Exp;
branches;
next	1.17;

1.17
date	2000.08.25.17.03.34;	author sbrodie;	state Exp;
branches;
next	1.16;

1.16
date	2000.08.11.15.55.01;	author sbrodie;	state Exp;
branches;
next	1.15;

1.15
date	2000.08.08.15.50.16;	author sbrodie;	state Exp;
branches;
next	1.14;

1.14
date	2000.08.08.09.12.18;	author sbrodie;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.04.11.39.17;	author sbrodie;	state Exp;
branches;
next	1.12;

1.12
date	2000.01.21.11.31.39;	author sbrodie;	state Exp;
branches;
next	1.11;

1.11
date	99.11.29.13.25.39;	author sbrodie;	state Exp;
branches;
next	1.10;

1.10
date	99.11.09.14.12.07;	author nbingham;	state Exp;
branches;
next	1.9;

1.9
date	99.04.29.14.27.33;	author sbrodie;	state Exp;
branches;
next	1.8;

1.8
date	99.04.19.15.27.07;	author sbrodie;	state Exp;
branches;
next	1.7;

1.7
date	99.03.16.14.49.47;	author sbrodie;	state Exp;
branches;
next	1.6;

1.6
date	99.03.09.15.07.36;	author sbrodie;	state Exp;
branches;
next	1.5;

1.5
date	99.03.01.16.58.15;	author sbrodie;	state Exp;
branches;
next	1.4;

1.4
date	99.02.18.16.45.50;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	99.02.18.09.41.01;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.12.51.50;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.12.03.13.54.44;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.03.13.54.44;	author sbrodie;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	98.12.04.11.37.30;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.2;

1.1.1.1.2.2
date	98.12.11.17.26.24;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.3;

1.1.1.1.2.3
date	98.12.14.14.57.30;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.4;

1.1.1.1.2.4
date	99.01.08.14.04.17;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.5;

1.1.1.1.2.5
date	99.01.11.15.35.21;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.6;

1.1.1.1.2.6
date	99.01.15.15.58.34;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.7;

1.1.1.1.2.7
date	99.01.19.14.24.42;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.8;

1.1.1.1.2.8
date	99.01.22.16.02.39;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.9;

1.1.1.1.2.9
date	99.02.03.12.51.30;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.10;

1.1.1.1.2.10
date	99.02.05.15.57.12;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.11;

1.1.1.1.2.11
date	99.02.10.14.55.46;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.12;

1.1.1.1.2.12
date	99.02.12.17.18.15;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.13;

1.1.1.1.2.13
date	99.02.16.12.34.02;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.66
log
@Fix for double name translation, header ordering
Detail:
  Xlate.c: Directory names containing characters requiring translation (eg. "AcornC/C++", "A B/C") would be translated twice, leading to a 'Directory not found' error when trying to open a file within. Submission from Colin Granville.
  TCPIP.h: Order the headers so that 'netdb.h' comes after its dependents. Submission for TCP/IP bounty.
Admin:
  Test case test/Contentious run, passed OK.

Version 2.62. Tagged as 'LanManFS-2_62'
@
text
@/* (2.62)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        2.62
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                04 Aug 2018

#define Module_MajorVersion             "2.62"
#define Module_Version                  262
#define Module_MinorVersion             ""
#define Module_Date                     "04 Aug 2018"

#define Module_ApplicationDate          "04-Aug-18"

#define Module_ComponentName            "LanManFS"
#define Module_ComponentPath            "castle/RiscOS/Sources/Networking/Omni/Protocols/LanManFS"

#define Module_FullVersion              "2.62"
#define Module_HelpVersion              "2.62 (04 Aug 2018)"
#define Module_LibraryVersionInfo       "2:62"
@


1.65
log
@Name resolution, wildcarded FSEntry_File 5 & 9, and buffer overrun fixes
Make SMB_RxWords a bit bigger per static anaylsis
  https://www.riscosopen.org/forum/forums/4/topics/9503
when LONGNAMES is undefined, since NT LM 0.12 dialect is allowed at the same time as short names.

A change to name translation in LanManFS-2_60 broke all forms of nested contentious name resolution, ie. where a leafname containing a contentious character was itself in a directory containing one.
The cited problem names ('1 2/3' and '1 /s') can both be resolved at one level only, no 2nd pass is required. The resolution function walks along the elements of the path one at a time to reach the leaf (ie. no element is processed twice). A test case has been created to allow some regression testing when making future changes in this area.

When building tboxlibint
  Copy h.* <Lib$Dir>.tboxlibint.h.*
when the directory is empty FileSwitch checks the destination ending in ...\h\* which the short names translation would error with ENOWILDCARD, but the long names translation attempts to resolve it by finding the trailing '\' and appending a '*' (ie. not doing anything), this returns no results and is passed back unfaulted. The special check in fsentry_file() for ENOWILDCARD for the two ReadCatalogueInformation thus doesn't trigger, and an attempt to FileGetAttribs() is made on the still wildcarded path. This is rejected by the server when in SMB_GetAttribsX2() does a TRANSACT2_QUERYPATHINFORMATION, which expects a non wildcarded object (on Windows servers at least), propagating an error back up to the user.
This stopped a ROM build from completing the exports phase via LanManFS on a Windows share.

Const-ify a few things.

Changed files
  Xlate.c: Revert change from revision 1.21, return ENOWILDCARD when appropriate.
  SMC.c: Increase MAX_WCT buffer size to 17.
  UK/CmdHelp: Add some missing chevrons round the command syntax for required parameters.
  test/Contentious: Test case for nested contentious character resolution code.

Version 2.61. Tagged as 'LanManFS-2_61'
@
text
@d1 1
a1 1
/* (2.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.61
d9 1
a9 1
#define Module_Date_CMHG                03 Jan 2018
d11 2
a12 2
#define Module_MajorVersion             "2.61"
#define Module_Version                  261
d14 1
a14 1
#define Module_Date                     "03 Jan 2018"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jan-18"
d21 3
a23 3
#define Module_FullVersion              "2.61"
#define Module_HelpVersion              "2.61 (03 Jan 2018)"
#define Module_LibraryVersionInfo       "2:61"
@


1.64
log
@Resolved issue where RISC OS name '1 2/3' gets wrongly translated.
Detail:
The translate routine that converts contentious characters in a RiscOS
file name to equivalent DOS ones was being invoked a second time. Normally
this wouldn't be critical, but a / in riscos was converted to the . in DOS,
correctly , then converted back again. This error mode with more than one
contentious character in (particularly) a directory name had recently
come to light.
Admin:
Tested by building a RiscOS rom image on a pc based LanManFS mount without
errors.

Version 2.60. Tagged as 'LanManFS-2_60'
@
text
@d1 1
a1 1
/* (2.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.60
d9 1
a9 1
#define Module_Date_CMHG                23 Jan 2017
d11 2
a12 2
#define Module_MajorVersion             "2.60"
#define Module_Version                  260
d14 1
a14 1
#define Module_Date                     "23 Jan 2017"
d16 1
a16 1
#define Module_ApplicationDate          "23-Jan-17"
d21 3
a23 3
#define Module_FullVersion              "2.60"
#define Module_HelpVersion              "2.60 (23 Jan 2017)"
#define Module_LibraryVersionInfo       "2:60"
@


1.63
log
@Fix for truncating writes to servers that declare MaxBufferSize >= 64k
smb.c, lines 2726 onwards: when chopping up the next buffer, make sure the size sent still fits in the SMB_COM_WRITE count field (16 bits). For completeness, make sure the estimate of bytes remaining is similarly saturated too.
smb.c, lines 2711-2713: cifs-v1-spec-02 section 5.27 says the server always expects to receive up to 65535 bytes, so this test should not be subject to the negotiated MaxBufferSize, and is expected to often exceed it. Currently we use 32k, if this is ever increased we really ought to take into account MaxRawSize that the server tells us.

Tested with a handful of files of power-of-2 sizes and odd sizes. Inspection in Wireshark looks OK. Variation of a diagnosis by Will Ling https://www.riscosopen.org/forum/forums/4/topics/8966

Version 2.59. Tagged as 'LanManFS-2_59'
@
text
@d1 1
a1 1
/* (2.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.59
d9 1
a9 1
#define Module_Date_CMHG                21 Jan 2017
d11 2
a12 2
#define Module_MajorVersion             "2.59"
#define Module_Version                  259
d14 1
a14 1
#define Module_Date                     "21 Jan 2017"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jan-17"
d21 3
a23 3
#define Module_FullVersion              "2.59"
#define Module_HelpVersion              "2.59 (21 Jan 2017)"
#define Module_LibraryVersionInfo       "2:59"
@


1.62
log
@Correction to configure syntax help
The args to LMTransport are mandatory, so should be in <> brackets rather than [].

Version 2.58. Tagged as 'LanManFS-2_58'
@
text
@d1 1
a1 1
/* (2.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.58
d9 1
a9 1
#define Module_Date_CMHG                23 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "2.58"
#define Module_Version                  258
d14 1
a14 1
#define Module_Date                     "23 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "23-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "2.58"
#define Module_HelpVersion              "2.58 (23 Oct 2016)"
#define Module_LibraryVersionInfo       "2:58"
@


1.61
log
@Fix out-by-1 error reporting monitor name
For *OPT1,2 the FS is supposed to report the leafname. LanManFS uses strrchr() to find the dot but hadn't incremented past it when returning the pointer.

Version 2.57. Tagged as 'LanManFS-2_57'
@
text
@d1 1
a1 1
/* (2.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.57
d9 1
a9 1
#define Module_Date_CMHG                18 Aug 2016
d11 2
a12 2
#define Module_MajorVersion             "2.57"
#define Module_Version                  257
d14 1
a14 1
#define Module_Date                     "18 Aug 2016"
d16 1
a16 1
#define Module_ApplicationDate          "18-Aug-16"
d21 3
a23 3
#define Module_FullVersion              "2.57"
#define Module_HelpVersion              "2.57 (18 Aug 2016)"
#define Module_LibraryVersionInfo       "2:57"
@


1.60
log
@[419] LanManFS does not see all visible files
Detail:
  When the number of files read from the server didn't fit in the OS_GBPB buffer, continuation of the enumeration would fail.
  Resume key *and* filename used when resuming a directory enumeration to the same directory.
Admin:
  Submission from Colin Granville.

Version 2.56. Tagged as 'LanManFS-2_56'
@
text
@d1 1
a1 1
/* (2.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.56
d9 1
a9 1
#define Module_Date_CMHG                14 May 2016
d11 2
a12 2
#define Module_MajorVersion             "2.56"
#define Module_Version                  256
d14 1
a14 1
#define Module_Date                     "14 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "14-May-16"
d21 3
a23 3
#define Module_FullVersion              "2.56"
#define Module_HelpVersion              "2.56 (14 May 2016)"
#define Module_LibraryVersionInfo       "2:56"
@


1.59
log
@Don't pass silly error numbers to MsgTrans
Detail:
  c/LanMan - Don't pass silly error numbers to MessageTrans_ErrorLookup - the kernel will now fault them.
Admin:
  Tested on Raspberry Pi 3
  Fixes "bad error pointer" message when e.g. failing to log on to a share:
  https://www.riscosopen.org/forum/forums/4/topics/5264


Version 2.55. Tagged as 'LanManFS-2_55'
@
text
@d1 1
a1 1
/* (2.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.55
d9 1
a9 1
#define Module_Date_CMHG                14 Apr 2016
d11 2
a12 2
#define Module_MajorVersion             "2.55"
#define Module_Version                  255
d14 1
a14 1
#define Module_Date                     "14 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-16"
d21 3
a23 3
#define Module_FullVersion              "2.55"
#define Module_HelpVersion              "2.55 (14 Apr 2016)"
#define Module_LibraryVersionInfo       "2:55"
@


1.58
log
@Fix for buffer overrun
The PRM entry for Free reason 1 is very vague, it requires the length of the drive name including a terminator, not strlen() of the drive name. Free uses this directly to allocate RMA to copy into (though for drive names that aren't a multiple of 8 we're saved by OS_Module rounding up claims).
Also use Free SWI values from headers rather than defining them again locally.

Version 2.54. Tagged as 'LanManFS-2_54'
@
text
@d1 1
a1 1
/* (2.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.54
d9 1
a9 1
#define Module_Date_CMHG                03 Apr 2016
d11 2
a12 2
#define Module_MajorVersion             "2.54"
#define Module_Version                  254
d14 1
a14 1
#define Module_Date                     "03 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "03-Apr-16"
d21 3
a23 3
#define Module_FullVersion              "2.54"
#define Module_HelpVersion              "2.54 (03 Apr 2016)"
#define Module_LibraryVersionInfo       "2:54"
@


1.57
log
@Fix for garbled translation
One too many %s's in the code, one too few in the messages file. This resulted in diagnostics messages (eg. at the bottom of *ListFS) to show a %s that hadn't got substituted.

Version 2.53. Tagged as 'LanManFS-2_53'
@
text
@d1 1
a1 1
/* (2.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.53
d9 1
a9 1
#define Module_Date_CMHG                17 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "2.53"
#define Module_Version                  253
d14 1
a14 1
#define Module_Date                     "17 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "17-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "2.53"
#define Module_HelpVersion              "2.53 (17 Mar 2016)"
#define Module_LibraryVersionInfo       "2:53"
@


1.56
log
@Add support for NTLM authenticated logins
SMB.c:
Line 875 don't free chain pB that early it is (and was being) used later on.
Fixes to correct which SMB_RxWords the Sesskey and bloblen are retrieved from, for each of the dialects supported.
Call the new auth code when the protocol flags require it.
Don't uppercase passwords all the time, the server may require case sensitivity.
md5c.c/md4c.c:
Verbatim copies of the RSA reference implementations of MD4 and MD5 from the respective RFC's.
Auth.c:
Implementation of the hash/mash/reply that Microsoft requires. Define AUTHTEST of this file to build a simple application that verifies the algorithms.

Tested against a Win7 install, inspecting in Wireshark that the passwords are no longer sent in the clear.
Implements ticket #332.
Submission from Colin Granville.

Version 2.52. Tagged as 'LanManFS-2_52'
@
text
@d1 1
a1 1
/* (2.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.52
d9 1
a9 1
#define Module_Date_CMHG                09 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "2.52"
#define Module_Version                  252
d14 1
a14 1
#define Module_Date                     "09 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "09-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "2.52"
#define Module_HelpVersion              "2.52 (09 Aug 2015)"
#define Module_LibraryVersionInfo       "2:52"
@


1.55
log
@Build fix
RES_PATH needs the component name too.

Version 2.51. Tagged as 'LanManFS-2_51'
@
text
@d1 1
a1 1
/* (2.51)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.51
d9 1
a9 1
#define Module_Date_CMHG                02 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "2.51"
#define Module_Version                  251
d14 1
a14 1
#define Module_Date                     "02 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "02-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "2.51"
#define Module_HelpVersion              "2.51 (02 Aug 2015)"
#define Module_LibraryVersionInfo       "2:51"
@


1.54
log
@Be more efficient with buffers
Take note of, and use, the MaxBufferSize that the server tells us during negotiation rather than a fixed value.
If the server doesn't say, use 1k as the default as before.
Submission from Colin Granville.

Version 2.50. Tagged as 'LanManFS-2_50'
@
text
@d1 1
a1 1
/* (2.50)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.50
d9 1
a9 1
#define Module_Date_CMHG                12 Jul 2015
d11 2
a12 2
#define Module_MajorVersion             "2.50"
#define Module_Version                  250
d14 1
a14 1
#define Module_Date                     "12 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "12-Jul-15"
d21 3
a23 3
#define Module_FullVersion              "2.50"
#define Module_HelpVersion              "2.50 (12 Jul 2015)"
#define Module_LibraryVersionInfo       "2:50"
@


1.53
log
@Fix for null pointer assignment
Can't zero the t2flags having just set hServer to NULL.

Version 2.49. Tagged as 'LanManFS-2_49'
@
text
@d1 1
a1 1
/* (2.49)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.49
d9 1
a9 1
#define Module_Date_CMHG                05 Jul 2015
d11 2
a12 2
#define Module_MajorVersion             "2.49"
#define Module_Version                  249
d14 1
a14 1
#define Module_Date                     "05 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jul-15"
d21 3
a23 3
#define Module_FullVersion              "2.49"
#define Module_HelpVersion              "2.49 (05 Jul 2015)"
#define Module_LibraryVersionInfo       "2:49"
@


1.52
log
@Add a quick exit for the timeout=0 case
Careful analysis of packet captures by Colin Granville reveals that LanManFS waits for at least 1cs when no timeout was requested, so add a quick exit for that case. Timeouts of >= 1cs still delay for at least the requested time, and up to 0.999cs longer as before.
This reduces the turn around time which is most beneficial for interfaces faster than 10baseT.

Version 2.48. Tagged as 'LanManFS-2_48'
@
text
@d1 1
a1 1
/* (2.48)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.48
d9 1
a9 1
#define Module_Date_CMHG                14 Mar 2015
d11 2
a12 2
#define Module_MajorVersion             "2.48"
#define Module_Version                  248
d14 1
a14 1
#define Module_Date                     "14 Mar 2015"
d16 1
a16 1
#define Module_ApplicationDate          "14-Mar-15"
d21 3
a23 3
#define Module_FullVersion              "2.48"
#define Module_HelpVersion              "2.48 (14 Mar 2015)"
#define Module_LibraryVersionInfo       "2:48"
@


1.51
log
@Get version number from messages file
Also, rationalise the two Omni_RegisterClient calls to both use _swix since they're virtually the same function repeated twice.

Version 2.47. Tagged as 'LanManFS-2_47'
@
text
@d1 1
a1 1
/* (2.47)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.47
d9 1
a9 1
#define Module_Date_CMHG                06 Aug 2014
d11 2
a12 2
#define Module_MajorVersion             "2.47"
#define Module_Version                  247
d14 1
a14 1
#define Module_Date                     "06 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-14"
d21 3
a23 3
#define Module_FullVersion              "2.47"
#define Module_HelpVersion              "2.47 (06 Aug 2014)"
#define Module_LibraryVersionInfo       "2:47"
@


1.50
log
@Sync up the error messages
Due to an inability to count to 10 accurately, all the error tokens were wrong, leading to some inappropriate error messages.
Fixes problem "Message token E13 not found" when the SMB server gives a DOS error back.

Version 2.46. Tagged as 'LanManFS-2_46'
@
text
@d1 1
a1 1
/* (2.46)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.46
d9 1
a9 1
#define Module_Date_CMHG                14 Jul 2014
d11 2
a12 2
#define Module_MajorVersion             "2.46"
#define Module_Version                  246
d14 1
a14 1
#define Module_Date                     "14 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jul-14"
d21 3
a23 3
#define Module_FullVersion              "2.46"
#define Module_HelpVersion              "2.46 (14 Jul 2014)"
#define Module_LibraryVersionInfo       "2:46"
@


1.49
log
@Ammendments to short name translation table
The table was ambiguously translating () to () and also [] to (). Now, we error names containing ,[] in the same manner as DOSFS.
The substitutions for ^% have also been changed to match DOSFS so copying from one to the other doesn't give two representations if viewed on a PC.
Marked both tables as const to save 512B of RMA.
This change is slightly academic since most of the time the long filename resolution is in use.

Tested against WinXP SP3 with a build with long filename support turned off.

Version 2.45. Tagged as 'LanManFS-2_45'
@
text
@d1 1
a1 1
/* (2.45)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.45
d9 1
a9 1
#define Module_Date_CMHG                31 May 2014
d11 2
a12 2
#define Module_MajorVersion             "2.45"
#define Module_Version                  245
d14 1
a14 1
#define Module_Date                     "31 May 2014"
d16 1
a16 1
#define Module_ApplicationDate          "31-May-14"
d21 3
a23 3
#define Module_FullVersion              "2.45"
#define Module_HelpVersion              "2.45 (31 May 2014)"
#define Module_LibraryVersionInfo       "2:45"
@


1.48
log
@Make name cache flush unconditional
CoreFn.c:
The size returned by OS_File 5 might not match the size shown in the Filer viewer (or via *EX) because the last cached version was being returned. This would manifest itself as an error from !Edit if the file on the server had grown since last queried, when loading the file the amount of memory reserved was for the smaller (stale cache copy size).
The name cache is now always flushed on exit from the FileSwitch functions, this doesn't alter performance because the size was already being queried across the network, it was just that the result was overridden by the cached copy.
LanMan.c:
Be more robust and only capture the default driver name when it starts up.
This could be a problem if LanManFS starts after the ethernet driver, and the value of Inet$EtherType is unset. When the driver dies LanManFS would have taken that name as the default - leading to "Bad parameter" when trying to connect to a share.

Tested on IOMD with WinXP SP3.

Version 2.44. Tagged as 'LanManFS-2_44'
@
text
@d1 1
a1 1
/* (2.44)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.44
d9 1
a9 1
#define Module_Date_CMHG                19 Jan 2014
d11 2
a12 2
#define Module_MajorVersion             "2.44"
#define Module_Version                  244
d14 1
a14 1
#define Module_Date                     "19 Jan 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-14"
d21 3
a23 3
#define Module_FullVersion              "2.44"
#define Module_HelpVersion              "2.44 (19 Jan 2014)"
#define Module_LibraryVersionInfo       "2:44"
@


1.47
log
@Insert default sprites into Wimp pool prior to registering with OmniClient

Version 2.43. Tagged as 'LanManFS-2_43'
@
text
@d1 1
a1 1
/* (2.43)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.43
d9 1
a9 1
#define Module_Date_CMHG                22 Nov 2013
d11 2
a12 2
#define Module_MajorVersion             "2.43"
#define Module_Version                  243
d14 1
a14 1
#define Module_Date                     "22 Nov 2013"
d16 1
a16 1
#define Module_ApplicationDate          "22-Nov-13"
d21 3
a23 3
#define Module_FullVersion              "2.43"
#define Module_HelpVersion              "2.43 (22 Nov 2013)"
#define Module_LibraryVersionInfo       "2:43"
@


1.46
log
@Fix for converting "OK" into "Internal error"
Whose bright idea was it to use 0 for both? Fixes problem reported
  http://www.riscosopen.org/forum/forums/4/topics/2122

Version 2.42. Tagged as 'LanManFS-2_42'
@
text
@d1 1
a1 1
/* (2.42)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.42
d9 1
a9 1
#define Module_Date_CMHG                04 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "2.42"
#define Module_Version                  242
d14 1
a14 1
#define Module_Date                     "04 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "04-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "2.42"
#define Module_HelpVersion              "2.42 (04 Oct 2013)"
#define Module_LibraryVersionInfo       "2:42"
@


1.45
log
@Removed verbose mode
With LanManFS in ROM it's not actually possible to enable verbose mode, since it relies on command arguments being passed to it on initialisation. Since RMREINIT doesn't allow that you can't ever pass '-v'. Even the RAM loaded case isn't that useful, since the verbose text is output via printf() which doesn't appear in the desktop (with OmniClient).
Swap the few uses of verbose mode to route via DebugLib instead, controlled via the 'DEBUG' predefine.
Also
  Makefile ammended so debug version has a rule to make the resources area.
Built, but not tested.

Version 2.41. Tagged as 'LanManFS-2_41'
@
text
@d1 1
a1 1
/* (2.41)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.41
d9 1
a9 1
#define Module_Date_CMHG                03 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "2.41"
#define Module_Version                  241
d14 1
a14 1
#define Module_Date                     "03 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "03-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "2.41"
#define Module_HelpVersion              "2.41 (03 Oct 2013)"
#define Module_LibraryVersionInfo       "2:41"
@


1.44
log
@Internationalised
Unused LMFiler put in the attic.
As LanMan has historically put its resources into ThirdPart/OmniClient this component has no ROM resources phase - it still registers the resources at run time.

Version 2.40. Tagged as 'LanManFS-2_40'
@
text
@d1 1
a1 1
/* (2.40)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.40
d11 2
a12 2
#define Module_MajorVersion             "2.40"
#define Module_Version                  240
d21 3
a23 3
#define Module_FullVersion              "2.40"
#define Module_HelpVersion              "2.40 (03 Oct 2013)"
#define Module_LibraryVersionInfo       "2:40"
@


1.43
log
@Makefile recreated from fragments
Fixed up a couple of trivial warnings with the stricter checking.
Removed OmniS_FastMultiply64 and rewrote the function in C, this allows the compiler to spot and use UMULL on architectures supporting that instruction.
Tested in a RAM build against a WinXP SP3 server with a drive > 4GB.

Version 2.39. Tagged as 'LanManFS-2_39'
@
text
@d1 1
a1 1
/* (2.39)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.39
d9 1
a9 1
#define Module_Date_CMHG                30 Sep 2013
d11 2
a12 2
#define Module_MajorVersion             "2.39"
#define Module_Version                  239
d14 1
a14 1
#define Module_Date                     "30 Sep 2013"
d16 1
a16 1
#define Module_ApplicationDate          "30-Sep-13"
d21 3
a23 3
#define Module_FullVersion              "2.39"
#define Module_HelpVersion              "2.39 (30 Sep 2013)"
#define Module_LibraryVersionInfo       "2:39"
@


1.42
log
@Fix and speed up EXT#handle=number doing nothing when number is beyond 2GB
Internally LanManFS was representing file offsets and data lengths as signed numbers, while in general this doesn't matter (they are passed through opaquely as just numbers and not manipulated) in a couple of places they were being used as while () loop exit conditions.
Function WriteZeroes (used when extending a file via OS_Args) therefore never performed the call to SMB_Write when beyond 2G because the loop condition was never met.
Additionally, it was literally transferring buffers of zeros across the network which is unnecessary as the server is documented as doing a zero fill itself, this represents at least a x40 speed up (on a slow 1MB/s drive write speed at the server end) or more.
Changed offset & lengths from int to uint.
Added the earlier CIFS spec (the later copy is missing section 5 for some reason) to docs.

Version 2.38. Tagged as 'LanManFS-2_38'
@
text
@d1 1
a1 1
/* (2.38)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.38
d9 1
a9 1
#define Module_Date_CMHG                11 Nov 2012
d11 2
a12 2
#define Module_MajorVersion             "2.38"
#define Module_Version                  238
d14 1
a14 1
#define Module_Date                     "11 Nov 2012"
d16 1
a16 1
#define Module_ApplicationDate          "11-Nov-12"
d21 3
a23 3
#define Module_FullVersion              "2.38"
#define Module_HelpVersion              "2.38 (11 Nov 2012)"
#define Module_LibraryVersionInfo       "2:38"
@


1.41
log
@Fix reporting of unstamped file info
When a file ended in ',xxx' (unfinished DEADDEAD) or ',lxa' (load/execution addresses) LanManFS was correctly identifying these internally but at the last moment OR'd the result unconditionally with 0xFFF00000 when calculating the date stamp/access attributes.
Now, an unstamped file will propagate the load & exec addresses properly.
Tested with WinXP SP3 and a variety of hand constructed examples, plus copying a large file with the filer showed the incomplete file icon until done.

Version 2.37. Tagged as 'LanManFS-2_37'
@
text
@d1 1
a1 1
/* (2.37)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.37
d9 1
a9 1
#define Module_Date_CMHG                21 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "2.37"
#define Module_Version                  237
d14 1
a14 1
#define Module_Date                     "21 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "2.37"
#define Module_HelpVersion              "2.37 (21 Sep 2012)"
#define Module_LibraryVersionInfo       "2:37"
@


1.40
log
@Replace 2 (!) local definitions with MimeMap header

Version 2.36. Tagged as 'LanManFS-2_36'
@
text
@d1 1
a1 1
/* (2.36)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.36
d9 1
a9 1
#define Module_Date_CMHG                14 Apr 2012
d11 2
a12 2
#define Module_MajorVersion             "2.36"
#define Module_Version                  236
d14 1
a14 1
#define Module_Date                     "14 Apr 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-12"
d21 3
a23 3
#define Module_FullVersion              "2.36"
#define Module_HelpVersion              "2.36 (14 Apr 2012)"
#define Module_LibraryVersionInfo       "2:36"
@


1.39
log
@Fix for *INFO dates not matching *EX dates
These two displays take different code paths, and *INFO goes via a check to workaround a bug in Win98 servers. Unfortunately, the check no longer works because Microsoft don't return the '.' and '..' entries in SMB Trans2 FIND_FIRST, and the logic previously always set the "need to frig the dates" flag. Now, the flag is only set if something comes back and after doing a test swap the results are also correct.
Turned on the 'auto close Trans2 FIND_FIRST' flag in the request block to save having to do a second transaction to close it.
Swapped the LDMFD/STMFD for Push and Pull in the assembler.
Tested against WinXP SP3, dates are no longer bonkers.

Version 2.35. Tagged as 'LanManFS-2_35'
@
text
@d1 1
a1 1
/* (2.35)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.35
d9 1
a9 1
#define Module_Date_CMHG                15 Oct 2011
d11 2
a12 2
#define Module_MajorVersion             "2.35"
#define Module_Version                  235
d14 1
a14 1
#define Module_Date                     "15 Oct 2011"
d16 1
a16 1
#define Module_ApplicationDate          "15-Oct-11"
d21 3
a23 3
#define Module_FullVersion              "2.35"
#define Module_HelpVersion              "2.35 (15 Oct 2011)"
#define Module_LibraryVersionInfo       "2:35"
@


1.38
log
@Fix for renames where only the case has changed.
Detail:
 Added an extra check after the Xlate path resolution code so that
 the case of the path given to resolve is honoured. This now means that
 the strcmp() done in SMB_Rename fails and the rename is actually sent to
 the server. Before "*rename test Test" would have the path resolved and
 since 'test' already existed both names would be the same, in this example
 something like "*rename A:\test A:\test" would result.
Admin:
 Made the non LONGNAMES version compile again (not tested).
 Removed local definitions of FSControl reason codes, uses Interface header
 now.
 Made the case of #includes match CVS to allow future compilation on a case
 sensitive system.
 Deleted unused "Version" header.

Version 2.34. Tagged as 'LanManFS-2_34'
@
text
@d1 1
a1 1
/* (2.34)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.34
d9 1
a9 1
#define Module_Date_CMHG                01 Aug 2009
d11 2
a12 2
#define Module_MajorVersion             "2.34"
#define Module_Version                  234
d14 1
a14 1
#define Module_Date                     "01 Aug 2009"
d16 1
a16 1
#define Module_ApplicationDate          "01-Aug-09"
d21 3
a23 3
#define Module_FullVersion              "2.34"
#define Module_HelpVersion              "2.34 (01 Aug 2009)"
#define Module_LibraryVersionInfo       "2:34"
@


1.37
log
@Workaround for NTFS returning resume keys of zero.
Detail:
  When the underlying FS is NTFS, eg. WinXP Pro, the requested
  resume keys for a directory search are always zero - this is passed
  back via OSGBPB and on the next call it triggers a new search. So
  we get stuck in an infinite loop.
  Now checks for a resume key stuck at zero, and makes a fake one static
  to the search context then sets the continuation bit in the SMB_FIND_NEXT
  call because the server returning the duff key remembers the position.
  Dir_CallbackFn could return with "taken" undefined. Move a few lines
  higher.
  Missing "#else" added to CHECK_ARMBOOT_EXISTS so if this is disabled
  no further attempt is made to find !ArmBoot.
  Couple of typos corrected.
  Spelling of "disk" changed to "disc" in an error message.
Admin:
  Tested with XP Pro SP3 with NTFS, directories which previously hung
  the filer now open correctly. Checked with XP Home SP3 with FAT32 to
  verify behaviour unchanged from 2.32.
  Note, with large directories the initial path translation triggers a
  dir search too which takes ages compared with the actual number of
  entries returned. This could be cached to make counting far faster.

Version 2.33. Tagged as 'LanManFS-2_33'
@
text
@d1 1
a1 1
/* (2.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.33
d9 1
a9 1
#define Module_Date_CMHG                19 Jul 2009
d11 2
a12 2
#define Module_MajorVersion             "2.33"
#define Module_Version                  233
d14 1
a14 1
#define Module_Date                     "19 Jul 2009"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jul-09"
d21 3
a23 3
#define Module_FullVersion              "2.33"
#define Module_HelpVersion              "2.33 (19 Jul 2009)"
#define Module_LibraryVersionInfo       "2:33"
@


1.36
log
@  Multiple fixes.
Detail:
  Too many to list here: see doc/RPSChanges.
Admin:
  Received from Rob Sprowson approx 2009-02-08. Builds, but not tested by ROOL.

Version 2.32. Tagged as 'LanManFS-2_32'
@
text
@d1 1
a1 1
/* (2.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.32
d9 1
a9 1
#define Module_Date_CMHG                15 Apr 2009
d11 2
a12 2
#define Module_MajorVersion             "2.32"
#define Module_Version                  232
d14 1
a14 1
#define Module_Date                     "15 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "15-Apr-09"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Networking/Omni/Protocols/LanManFS"
d21 3
a23 3
#define Module_FullVersion              "2.32"
#define Module_HelpVersion              "2.32 (15 Apr 2009)"
#define Module_LibraryVersionInfo       "2:32"
@


1.35
log
@  Compatibility change for Microsoft security fix MS09-001.
Detail:
  Security fix MS09-001 (detailed in Microsoft Knowledge base article KB958687)
  fixes some vulnerabilities in the SMB protocol which LanManFS uses. This
  highlighted an error in SMB_WriteRaw which reported zero data bytes but then
  supplied an offset to the non existant bytes: this is now faulted by Windows.
  As there are no data bytes, the offset should also be zero.
Admin:
  Fix received from Rob Sprowson 2009-01-19.

Version 2.31. Tagged as 'LanManFS-2_31'
@
text
@d1 1
a1 1
/* (2.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.31
d11 2
a12 2
#define Module_MajorVersion             "2.31"
#define Module_Version                  231
d21 3
a23 3
#define Module_FullVersion              "2.31"
#define Module_HelpVersion              "2.31 (15 Apr 2009)"
#define Module_LibraryVersionInfo       "2:31"
@


1.34
log
@Fixed uninitialised variable bug that revealed itself with cc 5.55.

Version 2.30. Tagged as 'LanManFS-2_30'
@
text
@d1 1
a1 1
/* (2.30)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.30
d9 1
a9 1
#define Module_Date_CMHG                16 Feb 2004
d11 2
a12 2
#define Module_MajorVersion             "2.30"
#define Module_Version                  230
d14 1
a14 1
#define Module_Date                     "16 Feb 2004"
d16 1
a16 1
#define Module_ApplicationDate          "16-Feb-04"
d21 3
a23 3
#define Module_FullVersion              "2.30"
#define Module_HelpVersion              "2.30 (16 Feb 2004)"
#define Module_LibraryVersionInfo       "2:30"
@


1.33
log
@  Changes from John.
Detail:
  > Default filetype now text
  >
  > Default type given to any file that has neither a dos extent, nor a
  > ',xxx' riscos extent at the server
  >
  > Ensure that files given the default type never have a ',xxx' riscos
  > extent appended.
  >
  > Add environment variable 'LMDefaultType' which checked for a default
  > type on module initialisation .. thus setting this to (e.g.) dos, then
  > rmreinitting LanManFS will change the default type to (e.g.) dos.
Admin:
  Not tested here yet.

Version 2.29. Tagged as 'LanManFS-2_29'
@
text
@d1 1
a1 1
/* (2.29)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.29
d9 1
a9 1
#define Module_Date_CMHG                09 Jan 2004
d11 2
a12 2
#define Module_MajorVersion             "2.29"
#define Module_Version                  229
d14 1
a14 1
#define Module_Date                     "09 Jan 2004"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jan-04"
d21 3
a23 3
#define Module_FullVersion              "2.29"
#define Module_HelpVersion              "2.29 (09 Jan 2004)"
#define Module_LibraryVersionInfo       "2:29"
@


1.32
log
@Must have been distracted earlier. Finished changing to today's date, and
retagged again.
@
text
@d1 1
a1 1
/* (2.28)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.28
d9 1
a9 1
#define Module_Date_CMHG                07 Jan 2004
d11 2
a12 2
#define Module_MajorVersion             "2.28"
#define Module_Version                  228
d14 1
a14 1
#define Module_Date                     "07 Jan 2004"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jan-04"
d21 3
a23 3
#define Module_FullVersion              "2.28"
#define Module_HelpVersion              "2.28 (07 Jan 2004)"
#define Module_LibraryVersionInfo       "2:28"
@


1.31
log
@Changed to today's date. Retagged.
@
text
@d9 1
a9 1
#define Module_Date_CMHG                06 Jan 2004
d14 1
a14 1
#define Module_Date                     "06 Jan 2004"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jan-04"
@


1.30
log
@Update from John:
> Further mods to make sure that directory naming/renaming cannot attach
> the ,xxx filetyping.

Version 2.28. Tagged as 'LanManFS-2_28'
@
text
@d22 1
a22 1
#define Module_HelpVersion              "2.28 (06 Jan 2004)"
@


1.29
log
@Update from jwb - no longer appends ,xxx to filenames on server if the
filetype can already be determined from the file extension.

Version 2.27. Tagged as 'LanManFS-2_27'
@
text
@d1 1
a1 1
/* (2.27)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.27
d9 1
a9 1
#define Module_Date_CMHG                19 Dec 2003
d11 2
a12 2
#define Module_MajorVersion             "2.27"
#define Module_Version                  227
d14 1
a14 1
#define Module_Date                     "19 Dec 2003"
d16 1
a16 1
#define Module_ApplicationDate          "19-Dec-03"
d21 3
a23 3
#define Module_FullVersion              "2.27"
#define Module_HelpVersion              "2.27 (19 Dec 2003)"
#define Module_LibraryVersionInfo       "2:27"
@


1.28
log
@Tightened up checking of when sockets get opened and closed in an
attempt to work out why Freeway gets upset when LanManFS is
configured in IP mode.
Changed app date that OmniClient shows to be dd-mmm-yy
Added ability to include slimmer ROMSPRITES and deleted the resources
phase from the makefile: the sprites were being included once in
ResourceFS and again embedded in the module.
If the FS is unset it says so in *status rather than a blank line.

Version 2.26. Tagged as 'LanManFS-2_26'
@
text
@d1 1
a1 1
/* (2.26)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.26
d9 1
a9 1
#define Module_Date_CMHG                11 Mar 2003
d11 2
a12 2
#define Module_MajorVersion             "2.26"
#define Module_Version                  226
d14 1
a14 1
#define Module_Date                     "11 Mar 2003"
d16 1
a16 1
#define Module_ApplicationDate          "11-Mar-03"
d21 3
a23 3
#define Module_FullVersion              "2.26"
#define Module_HelpVersion              "2.26 (11 Mar 2003)"
#define Module_LibraryVersionInfo       "2:26"
@


1.27
log
@Directory rename fixed - the mask being passed by the rename routine didn't
have the ATTR_DIR bit set.Discovered this after reading lots of the spec
which is also now included here in /doc.
Copying files out of LanManFS filer "forgot" their filetype even though
they appeared right in the filer,fixed.
A stray debugging printf removed,along with one compiler warning.
New sprites (yuck) to match !Omni.
Reordered the shutdown in two places,first Omni_Shutdown bins the mounts
lists which SMB_Shutdown uses.Second in NetBEUI mode the announcement that
a protocol has terminated goes *after* the shutdown - otherwise you sit
around for about 20s wondering where the link has gone.

Version 2.25. Tagged as 'LanManFS-2_25'
@
text
@d1 1
a1 1
/* (2.25)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.25
d9 1
a9 1
#define Module_Date_CMHG                16 Jan 2003
d11 2
a12 2
#define Module_MajorVersion             "2.25"
#define Module_Version                  225
d14 1
a14 1
#define Module_Date                     "16 Jan 2003"
d16 1
a16 1
#define Module_ApplicationDate          "16-Jan-03"
d21 3
a23 3
#define Module_FullVersion              "2.25"
#define Module_HelpVersion              "2.25 (16 Jan 2003)"
#define Module_LibraryVersionInfo       "2:25"
@


1.26
log
@Removed some dubious filetyping logic.
On saving a file if the type was text no filetype information was
saved and instead it relied on the default for unknown filetypes being
text.
The default unknown filetype is now &FE4,plus the above logic would
have conflicted with the MimeMap code if for example a file of type
text was saved but which had an extension which was in the mimemap of
type something other than text.

Version 2.24. Tagged as 'LanManFS-2_24'
@
text
@d1 1
a1 1
/* (2.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.24
d9 1
a9 1
#define Module_Date_CMHG                16 Dec 2002
d11 2
a12 2
#define Module_MajorVersion             "2.24"
#define Module_Version                  224
d14 1
a14 1
#define Module_Date                     "16 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "16-Dec-02"
d21 3
a23 3
#define Module_FullVersion              "2.24"
#define Module_HelpVersion              "2.24 (16 Dec 2002)"
#define Module_LibraryVersionInfo       "2:24"
@


1.25
log
@LanmanFS help syntax corrected and tidied
Change lmls command to ListFS in line with NFS
Supress LF when ListFS is issued but there are no servers present.
Cast a few things to shut some compiler warnings up.
Addition of MimeMap lookups where the file has no ",ttt" style type
appended.Previously any such files were all reported as text files so
viewing a machine would typically show whole directories full of
identical filetypes.

Version 2.23. Tagged as 'LanManFS-2_23'
@
text
@d1 1
a1 1
/* (2.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.23
d9 1
a9 1
#define Module_Date_CMHG                14 Dec 2002
d11 2
a12 2
#define Module_MajorVersion             "2.23"
#define Module_Version                  223
d14 1
a14 1
#define Module_Date                     "14 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "14-Dec-02"
d21 3
a23 3
#define Module_FullVersion              "2.23"
#define Module_HelpVersion              "2.23 (14 Dec 2002)"
#define Module_LibraryVersionInfo       "2:23"
@


1.24
log
@  Utterly insignificant CallEvery change.
Detail:
  Now happens every 4500 cs rather than every 4501. Big deal.
Admin:
  Untested - will work.
  I'm bored.

Version 2.22. Tagged as 'LanManFS-2_22'
@
text
@d1 1
a1 1
/* (2.22)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.22
d9 1
a9 1
#define Module_Date_CMHG                08 Jun 2001
d11 2
a12 2
#define Module_MajorVersion             "2.22"
#define Module_Version                  222
d14 1
a14 1
#define Module_Date                     "08 Jun 2001"
d16 1
a16 2
#define Module_ApplicationDate2         "08-Jun-01"
#define Module_ApplicationDate4         "08-Jun-2001"
d21 3
a23 2
#define Module_FullVersion              "2.22"
#define Module_HelpVersion              "2.22 (08 Jun 2001)"
@


1.23
log
@  Makefile fix - a : instead of an = was causing amu to reject the Makefile.
Admin:
  Tested.


Version 2.21. Tagged as 'LanManFS-2_21'
@
text
@d1 1
a1 1
/* (2.21)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.21
d8 1
a8 1
#define Module_Date_CMHG                01 Jun 2001
d10 2
a11 2
#define Module_MajorVersion             "2.21"
#define Module_Version                  221
d13 1
a13 1
#define Module_Date                     "01 Jun 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "01-Jun-01"
#define Module_ApplicationDate4         "01-Jun-2001"
d21 2
a22 2
#define Module_FullVersion              "2.21"
#define Module_HelpVersion              "2.21 (01 Jun 2001)"
@


1.22
log
@  Added explicit dependencies on the automatically generated header.
Detail:
  Due to re-ordering of object files, the CMHG header wasn't being
    generated by the time it was first required for inclusion.  Static
    dependencies have been added to fix this.  This is going to affect
    a lot of components which rely on amu's odd order to processing
    object files (back to front compared to other makes).
Admin:
  Fixes Bugzilla bug #4064
  Tested manually.

Version 2.20. Tagged as 'LanManFS-2_20'
@
text
@d1 1
a1 1
/* (2.20)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.20
d8 1
a8 1
#define Module_Date_CMHG                02 Apr 2001
d10 2
a11 2
#define Module_MajorVersion             "2.20"
#define Module_Version                  220
d13 1
a13 1
#define Module_Date                     "02 Apr 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "02-Apr-01"
#define Module_ApplicationDate4         "02-Apr-2001"
d21 2
a22 2
#define Module_FullVersion              "2.20"
#define Module_HelpVersion              "2.20 (02 Apr 2001)"
@


1.21
log
@  Moved Sprites file into sensible place.
  Removed BBE specific rules due to above change obsoleting it.
Admin:
  Built.
  Requires Library 0.70 or later (RiscOS/Library; Library-0_70)

Version 2.19. Tagged as 'LanManFS-2_19'
@
text
@d1 1
a1 1
/* (2.19)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.19
d8 1
a8 1
#define Module_Date_CMHG                13 Mar 2001
d10 2
a11 2
#define Module_MajorVersion             "2.19"
#define Module_Version                  219
d13 1
a13 1
#define Module_Date                     "13 Mar 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "13-Mar-01"
#define Module_ApplicationDate4         "13-Mar-2001"
d21 2
a22 2
#define Module_FullVersion              "2.19"
#define Module_HelpVersion              "2.19 (13 Mar 2001)"
@


1.20
log
@  Experimental change to handle Internet modules in flash.
Detail:
  This module was ignoring the possibility of the Internet module being
    re-initialised underneath it - something which can happen if there
    is an Internet module in flash as well as main ROM.  This is an
    experimental fix for this problem.
Admin:
  Not tested.

Version 2.18. Tagged as 'LanManFS-2_18'
@
text
@d1 1
a1 1
/* (2.18)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.18
d8 1
a8 1
#define Module_Date_CMHG                15 Jan 2001
d10 2
a11 2
#define Module_MajorVersion             "2.18"
#define Module_Version                  218
d13 1
a13 1
#define Module_Date                     "15 Jan 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "15-Jan-01"
#define Module_ApplicationDate4         "15-Jan-2001"
d21 2
a22 2
#define Module_FullVersion              "2.18"
#define Module_HelpVersion              "2.18 (15 Jan 2001)"
@


1.19
log
@  Fixed bug in parsing of the protocol negotiation.
Detail:
  The wrong bit was being checked to see if we were using the extended
    security model (CAP_EXTENDED_SECURITY).  Thus the wrong format was
    being used in SMBsesssetup, which meant that we couldn't connect
    to Windows 2000.
  Much better debugging added to the name resolution code - this helped
    diagnose the faulty photocopier problem and is left in case anything
    like that happens again!
Admin:
  Tested - I can now connect to Win 2000 shares.

Version 2.17. Tagged as 'LanManFS-2_17'
@
text
@d1 1
a1 1
/* (2.17)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.17
d8 1
a8 1
#define Module_Date_CMHG                09 Jan 2001
d10 2
a11 2
#define Module_MajorVersion             "2.17"
#define Module_Version                  217
d13 1
a13 1
#define Module_Date                     "09 Jan 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "09-Jan-01"
#define Module_ApplicationDate4         "09-Jan-2001"
d21 2
a22 2
#define Module_FullVersion              "2.17"
#define Module_HelpVersion              "2.17 (09 Jan 2001)"
@


1.18
log
@  BBE support.
Detail:
  Private bbe rule to deal with Ant putting files in the wrong place :-(
  Resource files should be in Resources/... and not in the component root.
Admin:
  Tested on Fun8JP Source & BBE builds.

Version 2.16. Tagged as 'LanManFS-2_16'
@
text
@d1 1
a1 1
/* (2.16)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.16
d8 1
a8 1
#define Module_Date_CMHG                14 Dec 2000
d10 2
a11 2
#define Module_MajorVersion             "2.16"
#define Module_Version                  216
d13 1
a13 1
#define Module_Date                     "14 Dec 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "14-Dec-00"
#define Module_ApplicationDate4         "14-Dec-2000"
d21 2
a22 2
#define Module_FullVersion              "2.16"
#define Module_HelpVersion              "2.16 (14 Dec 2000)"
@


1.17
log
@  Fixed some incorrect symbol names.
Detail:
  Some symbol names were wrong which only showed up in ROM builds.
Admin:
  Tested in Ursula ROM build, and tested RAM build.

Version 2.15. Tagged as 'LanManFS-2_15'
@
text
@d1 1
a1 1
/* (2.15)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.15
d8 1
a8 1
#define Module_Date_CMHG                25 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "2.15"
#define Module_Version                  215
d13 1
a13 1
#define Module_Date                     "25 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "25-Aug-00"
#define Module_ApplicationDate4         "25-Aug-2000"
d18 5
a22 1
#define Module_FullVersion              "2.15"
@


1.16
log
@  New build option to exclude NetBEUI support.
Detail:
  Pass OPTIONS=-DNO_NETBEUI from the Components file if you do not need
    NetBEUI support, and LanManFS will be 12K smaller.
  In NetBEUI mode, LanManFS sends Service_DCIProtocolStatus as required.
  In IP mode, LanManFS notices Service_DCIProtocolStatus from the Internet
    module when it dies and marks all its sockets as needing reconnection.
  Booting behaviour changed to look for !ArmBoot again and not attempt
    the boot if it is missing.  Removed lots of grotty backdoor hacks
    that used to be used to determine this.
Admin:
  Not tested at all.  This will need very thorough testing before it can
    be considered for release.

Version 2.14. Tagged as 'LanManFS-2_14'
@
text
@d1 1
a1 1
/* (2.14)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.14
d8 1
a8 1
#define Module_Date_CMHG                11 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "2.14"
#define Module_Version                  214
d13 1
a13 1
#define Module_Date                     "11 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "11-Aug-00"
#define Module_ApplicationDate4         "11-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "2.14"
@


1.15
log
@  Calls LLC_Shutdown if NetBIOS's _NB_Startup is going to fail.
Detail:
  NB_Startup was failing to stop the LLC timers if the function
    was going to fail after hooking onto TickerV.  This meant that
    if LanManFS never found an appropriate driver for NetBIOS use,
    then killing the module resulted in repeated aborts when the
    TickerV handler has invoked.
Admin:
  Untested.
  Fixes Bugzilla bug #26

Version 2.13. Tagged as 'LanManFS-2_13'
@
text
@d1 1
a1 1
/* (2.13)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.13
d8 1
a8 1
#define Module_Date_CMHG                08 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "2.13"
#define Module_Version                  213
d13 1
a13 1
#define Module_Date                     "08 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "08-Aug-00"
#define Module_ApplicationDate4         "08-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "2.13"
@


1.14
log
@  Fixed machine stiff if connection left idle too long.
Detail:
  SVC stack overflow occurred due to the recursive method used to
    discard the idle-out prevention responses.  This no longer
    happens.
  Fixed a bit of debugging which caused data aborts!
  Optimised a select() call to pass s + 1 as the first parameter to
    save Internet time in processing the fd_set.
Admin:
  Tested on desktop build, with the idle timers set to send idle outs
    every second (so we don't have to wait 100 hours for the problem
    to occur).  No longer get problems with the machine stiffing.


Version 2.12. Tagged as 'LanManFS-2_12'
@
text
@d1 1
a1 1
/* (2.12)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.12
d10 2
a11 2
#define Module_MajorVersion             "2.12"
#define Module_Version                  212
d18 1
a18 1
#define Module_FullVersion              "2.12"
@


1.13
log
@  Fixed use of uninitialised pointer.
  Now doesn't require that the !ArmBoot object is a directory
Detail:
  The code in Omni.c was carefully checking that !ARMBOOT existed
    before attempting to run the boot file.  Unfortunately, it was
    using a method which bypassed the filename resolution (that does
    the ,xxx filetype name mapping), so it did not find the new Obey
    file in the 400 series baseline.  The check has been removed.
  The code in SMB.c was being caught out on an uninitialised variable
    usage when the attribute cache already held details of the object
    being sought.  The variable would have been initialised on a non-
    cached lookup, but the special case of booting a machine via LanManFS
    manages to get a cached lookup without having run through the routine
    before, resulting in a strcpy() with a destination of 0.
Admin:
  Tested on Risc PC.
  Fixes fault 1511 (STB-400 Generic)

Version 2.11. Tagged as 'LanManFS-2_11'
@
text
@d1 1
a1 1
/* (2.11)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.11
d8 1
a8 1
#define Module_Date_CMHG                04 Apr 2000
d10 2
a11 2
#define Module_MajorVersion             "2.11"
#define Module_Version                  211
d13 1
a13 1
#define Module_Date                     "04 Apr 2000"
d15 4
a18 1
#define Module_FullVersion              "2.11"
@


1.12
log
@  More tolerance has been added of files found on the remote server
    which have unexpected extensions.
Detail:
  LanManFS does not like it if you create (independently, using a PC or
    otherwise) files with names like "myfile,fff" which you intend to
    be displayed as files with type &FFF (ie. Text) on a RISC OS machine.
    If you tried to access the file for reading it, such as loading it
    into an editor, that worked due to the name matching resolution.
    However, any attempt to update the file caused LanManFS to attempt
    to write the file without the extension and not notice that a file
    with a ,fff extension already existed (Text files are special cased
    in the current implementation of name translation - see LanManFS
    Functional Specification for details and rationale).  Attempts to
    save typically succeed (giving you two files: myfile and myfile,fff)
    but generate "Operation not permitted" or such like.  This stemmed
    from the attempt being made by LanManFS to rename a file to the same
    name.  SMB_Rename now traps that and tells its caller that the rename
    succeeded.  The Xlate.c code now indicates correctly that the filename
    extension has been altered when a ,fff extension has to be chopped off.
Admin:
  Tested briefly on desktop build against art-work's SAMBA server.
  Bug reported by TopCat engineers.

Version 2.10. Tagged as 'LanManFS-2_10'
@
text
@d1 1
a1 1
/* (2.10)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.10
d8 1
a8 1
#define Module_Date_CMHG                21 Jan 2000
d10 2
a11 2
#define Module_MajorVersion             "2.10"
#define Module_Version                  210
d13 1
a13 1
#define Module_Date                     "21 Jan 2000"
d15 1
a15 1
#define Module_FullVersion              "2.10"
@


1.11
log
@  32-bit compatibility added.
  Removed obsolete header files.
  Removed obsolete assembler.
  Fixed flag preservation in remaining assembler.
Detail:
  See above.
Admin:
  Built RAM build.

Version 2.09. Tagged as 'LanManFS-2_09'
@
text
@d1 1
a1 1
/* (2.09)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.09
d8 1
a8 1
#define Module_Date_CMHG                29 Nov 1999
d10 2
a11 2
#define Module_MajorVersion             "2.09"
#define Module_Version                  209
d13 1
a13 1
#define Module_Date                     "29 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "2.09"
@


1.10
log
@  Updated makefile rules.
Detail:
  Added Install phase to Makefile.
  Added !MkInstall.
Admin:
  Tested on FastNC Ethernet card build.

Version 2.08. Tagged as 'LanManFS-2_08'
@
text
@d1 1
a1 1
/* (2.08)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	2.08
#define Module_MinorVersion_CMHG	
#define Module_Date_CMHG      		09 Nov 1999
d10 4
a13 4
#define Module_MajorVersion     	"2.08"
#define Module_Version                  208
#define Module_MinorVersion		""
#define Module_Date      		"09 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "2.08"
@


1.9
log
@  Now uses DebugLib.
  Fixed search handle haemorrhaging.
Detail:
  The directory lookup routines cached directory search handles to avoid
    hammering the server with repeated requests to open directories.
    Unfortunately, it was possible for these to be forgotten without
    being freed up leading to resource loss at the server end.  Eventually,
    the server gives up servicing you and reports errors.  This will only
    occur once a significant number of accesses have been performed (the
    number depends entirely on server configuration).  This leak is now
    fixed.
Admin:
  Tested against Cerium - debug reports that no handles are being leaked.

Version 2.07. Tagged as 'LanManFS-2_07'
@
text
@d1 1
a1 1
/* (2.07)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.07
d8 1
a8 1
#define Module_Date_CMHG      		29 Apr 1999
d10 2
a11 2
#define Module_MajorVersion     	"2.07"
#define Module_Version                  207
d13 1
a13 1
#define Module_Date      		"29 Apr 1999"
d15 1
a15 1
#define Module_FullVersion              "2.07"
@


1.8
log
@  Socket leak fixed.
  Name mapping table modified to prefer mapping hard space to space.
Detail:
  Fixes hard space->space mismapping.
  Doesn't leak sockets during startup if driver isn't ready.
Admin:
  Check-in of previously uncommitted bug fixes to get final version number


Version 2.06. Tagged as 'LanManFS-2_06'
@
text
@d1 1
a1 1
/* (2.06)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.06
d8 1
a8 1
#define Module_Date_CMHG      		19 Apr 1999
d10 2
a11 2
#define Module_MajorVersion     	"2.06"
#define Module_Version                  206
d13 1
a13 1
#define Module_Date      		"19 Apr 1999"
d15 1
a15 1
#define Module_FullVersion              "2.06"
@


1.7
log
@  No longer assumes that it should attach itself to eh0 if it cannot
    find a driver.
Detail:
  The module used to have specific knowledge of the driver to which it
    was supposed to bind if it was unable to find any active drivers at
    the time that LanManFS was initialised.  This meant that if the
    LanManFS module was placed in ROM (eg. in STB3) and the drivers
    hadn't initialised by the time that LanManFS was initialised, it
    would sit and wait for EtherH to arrive - which doesn't happen
    for ATM solutions, and doesn't happen for Ethernet in STB3 because
    we no longer use EtherH!
Admin:
  Tested in STB22 expansion cards, and in STB3 ROM builds for both
    Ethernet and ATM solutions.

Version 2.05. Tagged as 'LanManFS-2_05'
@
text
@d1 1
a1 1
/* (2.05)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.05
d8 1
a8 1
#define Module_Date_CMHG      		16 Mar 1999
d10 2
a11 2
#define Module_MajorVersion     	"2.05"
#define Module_Version                  205
d13 1
a13 1
#define Module_Date      		"16 Mar 1999"
d15 1
@


1.6
log
@  Changed idle-out strategy.
  Introduced new error message for re-entrancy prevention trap to use.
Detail:
  When 'pinging' an SMB server, LanManFS does not wait for any response
    but the response reading routine knows to just throw away any old
    SMBchkpth responses that it gets and try reading again.
  Re-entrancy trap now has its own error "LanManFS in use" &1663E, which
    means you no longer see "!Armboot files nested too deeply" which is
    confusing.  The only way you can provoke this message is if you use
    Alt-Break whilst the NetBIOS/IP code is executing.  The error plays
    the same part as "FileCore in use" does for FileCore.
Admin:
  Verified module still works and the anti idle-out features still work.

Version 2.04. Tagged as 'LanManFS-2_04'
@
text
@d1 1
a1 1
/* (2.04)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.04
d8 1
a8 1
#define Module_Date_CMHG      		09 Mar 1999
d10 2
a11 2
#define Module_MajorVersion     	"2.04"
#define Module_Version                  204
d13 1
a13 1
#define Module_Date      		"09 Mar 1999"
@


1.5
log
@  New *LMLS command.
  Fix for ./.. files in short filename shares.
  Long multiply now provided in assembler.
Detail:
  *LMLS is a new filesystem-specific command which performs the same
    task as "smbclient -L" does under UNIX - ie. listing all the shares
    available on the specified host.
  When enumerating the shares on a remote server, LanManFS now remembers
    all the printers, IPC, device and disc shares (for *LMLS to output).
  The 32x32->64 multiply routine is now provided in assembler instead of
    the previous huge amount of obscure C taken from NSPRLib.  This is
    more understandable (and almost certainly far smaller and quicker
    and doesn't need a hack to stop the compiler mis-optimising it!)
  Old short filename shares still had problems with the . and .. file
    filtering.  Programmer fault there - should've let the compiler do
    the optimisations :-)
  Server info string fixed to byte-reverse the port numbers when printing
    the string into the info buffer.  Now claims to be talking to port 139
    as it should.
Admin:
  Tested in general desktop use for several days, plus experimental versions
    tested in other boot ROMs.

Version 2.03. Tagged as 'LanManFS-2_03'
@
text
@d1 1
a1 1
/* (2.03)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.03
d8 1
a8 1
#define Module_Date_CMHG      		01 Mar 1999
d10 2
a11 2
#define Module_MajorVersion     	"2.03"
#define Module_Version                  203
d13 1
a13 1
#define Module_Date      		"01 Mar 1999"
@


1.4
log
@  Protocol negotiated features need to be per-server, not per-share.
Detail:
  Long filename flag tarnsferred to be a server property rather than
    a share property, otherwise subsequent shares to the same server
    do not get long filenames (because the subsequent shares don't
    have to go through the connection negotiation phase)
Admin:
  Tested on by mounting lots of drives through desktop Omni frontend.

Version 2.02. Tagged as 'LanManFS-2_02'
@
text
@d1 1
a1 1
/* (2.02)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.02
d8 1
a8 1
#define Module_Date_CMHG      		18 Feb 1999
d10 2
a11 2
#define Module_MajorVersion     	"2.02"
#define Module_Version                  202
d13 1
a13 1
#define Module_Date      		"18 Feb 1999"
@


1.3
log
@  Bad check for . and .. fixed.
Detail:
  Any filename starting with . was being hidden.
Admin:
  Tested.  Confirmed . and .. are not there but files such as .rhosts
    are visible.

Version 2.01. Tagged as 'LanManFS-2_01'
@
text
@d1 1
a1 1
/* (2.01)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.01
d10 2
a11 2
#define Module_MajorVersion     	"2.01"
#define Module_Version                  201
@


1.2
log
@  Support for long filename.
  Support for spaces in machine names.
  Merge of sbrodie_LanManFS_dev branch to trunk.
Detail:
  LanManFS 2.00 supports the "NT LM 0.12" protocol, enabling it to
    use long filenames on mounted shares.
Admin:
  Supporting documentation:
    1215,256/FS: LanManFS Software Functional Specification.
  Same as LanManFS-1_87_1_1_1_1_2_13.

Version 2.00. Tagged as 'LanManFS-2_00'
@
text
@d1 1
a1 1
/* (2.00)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	2.00
d8 1
a8 1
#define Module_Date_CMHG      		16 Feb 1999
d10 2
a11 2
#define Module_MajorVersion     	"2.00"
#define Module_Version                  200
d13 1
a13 1
#define Module_Date      		"16 Feb 1999"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* (1.87)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	1.87
d8 1
a8 1
#define Module_Date_CMHG      		26 Aug 1998
d10 2
a11 2
#define Module_MajorVersion     	"1.87"
#define Module_Version                  187
d13 1
a13 1
#define Module_Date      		"26 Aug 1998"
@


1.1.1.1
log
@
LanManFS moved into Omni subdirectory.  Previous version in
RiscOS/Sources/Networking/LanManFS is now locked out.

The rest of Omni will be imported at a later date.

Version 1.87, tagged as LanManFS-1_87

@
text
@@


1.1.1.1.2.1
log
@  Implemented h/w multicast filtering.
  Uses our DCI4 header file.
Detail:
  Now uses DCI4 MulticastRequest SWIs to selectively receive NetBEUI specific
    multicast IEEE frames.
  LLC_AttachDriver now takes an additional multicast MAC address parameter
    which is automatically claimed when the frames are claimed.
  Uses sys/dcistructs.h instead of its private ancient DCI4.h.  Some of the
    constants are different (old header shifted some numbers into correct
    positions for various calls - notably FRMLVL_* definitions).  Code modified
    to use the proper macros to construct these constants.
Admin:
  Build and tested briefly.  EHInfo reports MAR for IEEE frames has been set
    as expected, and *LanMan:LMLogon seems to work.

Version 1.87, 1.1.1.1.2.1. Tagged as 'LanManFS-1_87-1_1_1_1_2_1'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.1
#define Module_Date_CMHG      		04 Dec 1998
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.1"
#define Module_Date      		"04 Dec 1998"
@


1.1.1.1.2.2
log
@  First cut at long filenames in LanManFS.  *Cat and *Ex work.
  Pretty much nothing else does.
Detail:
  Now uses long filenames if available, and switches to the advanced
    SMB protocol and Transact2 commands to do work with long filenames.
Admin:
  Work in progress.  End of week's work checkin point only.  Do not use.

Version 1.87, 1.1.1.1.2.2. Tagged as 'LanManFS-1_87-1_1_1_1_2_2'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.2
#define Module_Date_CMHG      		11 Dec 1998
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.2"
#define Module_Date      		"11 Dec 1998"
@


1.1.1.1.2.3
log
@  Another intermediate checkin now that *FileInfo works.  I believe this
    means that nearly all the core functionality is in place for long
    filename support.
Detail:
  According to Microsoft's documentation, several of the file lookup type
    transactions return the file information in a common format buffer.
    However, what the docs fail to mention, is that in *some* of those
    commands, the time & date fields are reversed.  FindFirst2/FindNext2
    return "date, time, ...".  QPathInformation returns "time, date, ..."
    Grrr.
  There remains a problem with occasional "server error" results from
    some requests.  The reason for these is unknown ... the documentation is
    unhelpful, describing this as "non-specific error code".  Simply repeating
    the command often results in success, sometimes it has to be repeated a
    few times.
  Also fixed filename mapping which caused any 'x' characters at the remote
    server end to be mapped to 'c' at the RISC OS end(!)  This didn't affect
    it before because servers wouldn't return the old module any filenames
    which contained lower case letters (LanManFS used to make the characters
    lower-case itself if the appropriate name style mode was set).
Admin:
  Tested - still seems to work.  Filename completion from LineEditor works
    nicely.  I can open and close files, and read data from them (*Dump
    used to test this).  *Cat, *Ex and *FileInfo all work.  *Dir works.
  Filename character translations to and from RISC OS format need to be
    verified.  The translation table DOS->RISC OS has been ripped out of
    the NFS module so should be pretty accurate.  The reverse mapping has
    not.

Version 1.87, 1.1.1.1.2.3. Tagged as 'LanManFS-1_87-1_1_1_1_2_3'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.3
#define Module_Date_CMHG      		14 Dec 1998
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.3"
#define Module_Date      		"14 Dec 1998"
@


1.1.1.1.2.4
log
@  A few more battles have been won.  War finally starting to go my way.
Detail:
  LanManFS now uses ,xxx type notation on long filename shares.
  Character mappings improved (necessary because Windows allows so
    many extra daft characters to appear in filenames) and one-to-many
    mappings for awkward charcacters in the RISC OS->DOS world have
    been added.
  Directory searching improved so that the wildcard matching can be
    done properly.  Only Microsoft could provide you an API call to
    discover information about a filename specified with wildcards and
    NOT tell you which filename it matched. :-/
  Things remaining unimplemented so far:
    Setting filetypes.
    Creating files with specific types
    Renaming.
  All those outstanding things relate to the work done by Attr_SetInfo
    which should be the final major piece of hacking required.
Admin:
  Tested by connecting to a long filename share from both a RISC OS
    machine and a Windows NT machine.  All behaviour of the RISC OS
    machine has been verified against what the NT machine is seeing
    happening.  No surprises.  One-to-many character mappings are
    being matched correctly.
  Also tested using the Filer at the RISC OS end to navigate, run,
    and edit things on the remote share.

Version 1.87, 1.1.1.1.2.4. Tagged as 'LanManFS-1_87-1_1_1_1_2_4'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.4
#define Module_Date_CMHG      		08 Jan 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.4"
#define Module_Date      		"08 Jan 1999"
@


1.1.1.1.2.5
log
@  First version which should contain everything required for full
    long filename support of SMB shares.
Detail:
  Renaming works; setting filetypes results in a rename occurring;
  setting load/exec/attributes works - causing a rename where
  appropriate; creation of files to overwrite existing objects of
  different types causes old file to be deleted first.
Admin:
  Tested briefly and everything seems happy both at the command-line
    and from the RISC OS Filer.  More thorough development testing can
    now commence properly.

Version 1.87, 1.1.1.1.2.5. Tagged as 'LanManFS-1_87-1_1_1_1_2_5'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.5
#define Module_Date_CMHG      		11 Jan 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.5"
#define Module_Date      		"11 Jan 1999"
@


1.1.1.1.2.6
log
@  Fixed logon behaviour against NT4 servers.
  Added automatic bug detection code.
Detail:
  NT4 servers use differently formatted buffer to response to the logon
    requests and this was confusing the code which only knew about the
    oldest format of this buffer.  The code now knows about all three
    different possible response formats and processes them all properly.
  Windows 95/98 servers contain a bug which cause them to reverse the
    order of the date and time fields in QPathInformation transactions.
    My earlier workaround for this was to always reverse the time/date
    pairs - which causes it to fail when talking to Windows NT servers.
    On the first QPathInformation request on a given share, the request
    is first done on the root directory, and then the (non-broken) dir
    search transaction is executed and the results compared to determine
    whether the server is broken or not.  This means that it should
    interwork with NT, 95, 98 and also with Samba (which has a build
    option for emulating this bug or not!)
  Transact2 processing code is now aware of the multiple response packet
    options and can cope with the server sending secondary responses.
  Directory search entry per call limiter re-introduced to prevent these
    from secondary responses occurring anyway as they are still a pain to
    process efficiently.
Admin:
  Tested against Windows 98 and Windows NT 4.

Version 1.87, 1.1.1.1.2.6. Tagged as 'LanManFS-1_87-1_1_1_1_2_6'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.6
#define Module_Date_CMHG      		15 Jan 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.6"
#define Module_Date      		"15 Jan 1999"
@


1.1.1.1.2.7
log
@  Check-in of all files comprising this development build of LanManFS
  Spaces in NetBIOS names are now allowed.
Detail:
  Now supports NetBIOS hostnames which contain spaces.  Use hardspaces
    in the Omni frontend or at the command-line (unless you can get
    away with a normal space without confusing the CLI parser)
Admin:
  Tested by attempting to connect to machines with spaces in their
    names.  Got the expected response from the target machine, so
    this aspect is working.
  It appears that several files did not get checked in due to datestamp
    problems when LanManFS's location in CVS was changed.  This is now
    fixed.

Version 1.87, 1.1.1.1.2.7. Tagged as 'LanManFS-1_87-1_1_1_1_2_7'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.7
#define Module_Date_CMHG      		19 Jan 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.7"
#define Module_Date      		"19 Jan 1999"
@


1.1.1.1.2.8
log
@  Now works against Windows NT 4.0 servers.
Detail:
  NT 4.0 Lan Manager appears not to like single character wildcards being
    used in some circumstances.  So I've thrown away all the code which
    handles this and replaced it with code which simply performs a complete
    directory search and doing the matching myself.  This also reduces the
    number of SMB transactions required to do a name translation to 1
    instead of 5 (except in the case of a directory containing an awful
    lot of entries)
  Contentious character handling fixed.  Previously if a doubly-mapped
    character was used, it would match any character instead of just
    itself and its partner.  eg. q+a would match qua instead of just
    q+a and q&a.
Admin:
  Checked desktop usage against STYX (NT 4 test machine) and against a
    Windows 98 server to confirm that support for that hasn't been affected
    by these changes.

Version 1.87, 1.1.1.1.2.8. Tagged as 'LanManFS-1_87-1_1_1_1_2_8'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.8
#define Module_Date_CMHG      		22 Jan 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.8"
#define Module_Date      		"22 Jan 1999"
@


1.1.1.1.2.9
log
@  Fixed most dodgy pathname problems.
  All *LM... commands are now filing system commands.
  *Connect and *Disconnect renamed to *LMConnect and *LMDisconnect.
Detail:
  When translating RISC OS to DOS filenames, a loop could develop if
    any path component contained a dodgy character.  This is now fixed
    with the exception of problems when both < and > characters appear
    in pathnames since that confuses FileSwitch.  New mappings will be
    need to be agreed for these characters (and remappings for $ and %
    which overload < and > respectively)
  All *LM... commands are now filing system commands, which means that
    you need to prefix them with LanMan: unless LanManFS is the current
    filesystem (following spec review).
  *Connect and *Disconnect renamed to *LMConnect and *LMDisconnect
    (following spec review).
  Trace builds allow "*LanMan:LMNameMode 4" to enable display of system
    and hidden files on the remote filesystem.
Admin:
  Tested briefly against Windows 98 and Windows NT 4 SP3.
  If a directory name contains a dodgy character, repeated searches will
    be made on the remote filesystem.  This is inefficient and a name
    cache would alleviate this.  There is no name cacheing in the current
    version.

Version 1.87, 1.1.1.1.2.9. Tagged as 'LanManFS-1_87-1_1_1_1_2_9'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.9
#define Module_Date_CMHG      		03 Feb 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.9"
#define Module_Date      		"03 Feb 1999"
@


1.1.1.1.2.10
log
@  End of week checkin.  No bug fixes.  Some performance improvements.
Detail:
  Added a basic name cacheing facility.  For safety this is flushed
    every time the module returns to FileSwitch.  This does at least
    help reduce the name of directory searches required during a
    name translation.  NameCache.c comes with a test program built-in
    for stressing the cache manager.
Admin:
  Free space display doesn't work yet.
  Anti-idleout measures not implemented yet.

Version 1.87, 1.1.1.1.2.10. Tagged as 'LanManFS-1_87-1_1_1_1_2_10'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.10
#define Module_Date_CMHG      		05 Feb 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.10"
#define Module_Date      		"05 Feb 1999"
@


1.1.1.1.2.11
log
@  Boot behaviour fixes.
  More debug added.
Detail:
  Trapped Service_InternetStatus reason code 0 as a tipoff to try
    to continue a pending boot operation.  Internet module is not
    sending the expected reason code 2 to indicate that the interface
    has come up when it is also having its address changed.
  Holding down SHIFT when a new connection is made prevents execution
    of !ArmBoot on the newly connected share.
  Several more debug statements added to track progress through the
    booting.
  IPConfig's internal logging system imported.  *LanMan:Free shows
    the contents of the log.
  Free space information still seems to be broken against Windows 95/98.
    Works against NT4SP4 though.
  *Free filesystem-specific command added.
Admin:
  This version managed to boot an STB22 from our NT4 server which
    was supplying it with baseline 303.
  *LanMan:Free is not yet implemented and in debug builds, shows
     the debug log instead.
  Anti-idleout work still pending.

Version 1.87, 1.1.1.1.2.11. Tagged as 'LanManFS-1_87-1_1_1_1_2_11'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.11
#define Module_Date_CMHG      		10 Feb 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.11"
#define Module_Date      		"10 Feb 1999"
@


1.1.1.1.2.12
log
@  Free space now 64-bit aware plus *-command implemented.
  Anti-idleout measures implemented.
  Boot behaviour sanitised.
Detail:
  Free space code now knows about 64-bit versions of the various
    calls that can be made to it (OS_FSControl and Free module's i/f)
  *Free implemented.
  CallEvery set up to periodically ping each share to stop buggy
    Microsoft servers going to sleep on it.
  The filesystem does not get deregistered from FileSwitch whenever
    any interface on the machine changes(!)   More subtle changes
    are still required to finalise things in this area though.
Admin:
  Requires TCPIPLibs 5.06 or later
    (CVS: RiscOS/Sources/Libs/TCPIPLibs  tag: TCPIPLibs-5_06)
  Tested by booting an STB22 against an NT4SP4 machine.

Version 1.87, 1.1.1.1.2.12. Tagged as 'LanManFS-1_87-1_1_1_1_2_12'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.12
#define Module_Date_CMHG      		12 Feb 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.12"
#define Module_Date      		"12 Feb 1999"
@


1.1.1.1.2.13
log
@  Added multiple boot server capability.
  Decreased timeout on anti-idle trap.
  Removed obsolete header file.
Detail:
  Multiple boot server capability added,  Uses Inet$ServerName2 (and ..3
    etc.) until a connection to a share is made.  Use boot mount path
    in BOOTP/DHCP responses to set this variable.
  Using the standard 40 second timeout is silly on the anti-idle trap.
    Now uses a 4 second timeout and ignores errors.  Any later replies
    will be discarded automatically when the next transaction is made.
  DCI4.h is obsolete - TCPIPLibs:sys/dcistructs.h has been used for
    ages instead.
Admin:
  Tested in STB22.  Boots from backup boot server when given a silly
    name for the primary.

Version 1.87, 1.1.1.1.2.13. Tagged as 'LanManFS-1_87-1_1_1_1_2_13'
@
text
@d7 2
a8 2
#define Module_MinorVersion_CMHG	1.1.1.1.2.13
#define Module_Date_CMHG      		16 Feb 1999
d12 2
a13 2
#define Module_MinorVersion		"1.1.1.1.2.13"
#define Module_Date      		"16 Feb 1999"
@
