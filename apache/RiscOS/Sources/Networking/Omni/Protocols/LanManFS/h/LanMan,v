head	1.7;
access;
symbols
	LanManFS-2_62:1.7
	LanManFS-2_61:1.7
	LanManFS-2_60:1.7
	LanManFS-2_59:1.7
	LanManFS-2_58:1.7
	LanManFS-2_57:1.7
	LanManFS-2_56:1.7
	LanManFS-2_55:1.7
	LanManFS-2_54:1.7
	LanManFS-2_53:1.7
	LanManFS-2_52:1.7
	LanManFS-2_51:1.7
	LanManFS-2_50:1.7
	LanManFS-2_49:1.7
	LanManFS-2_48:1.7
	LanManFS-2_47:1.7
	LanManFS-2_46:1.7
	LanManFS-2_45:1.7
	LanManFS-2_44:1.7
	LanManFS-2_43:1.7
	LanManFS-2_42:1.7
	LanManFS-2_41:1.7
	LanManFS-2_40:1.7
	LanManFS-2_39:1.6
	LanManFS-2_38:1.6
	LanManFS-2_37:1.6
	LanManFS-2_36:1.6
	LanManFS-2_35:1.6
	LanManFS-2_34:1.5
	LanManFS-2_33:1.4
	LanManFS-2_32:1.4
	LanManFS-2_31:1.3
	RO_5_07:1.3
	LanManFS-2_30:1.3
	LanManFS-2_29:1.3
	LanManFS-2_28:1.2
	LanManFS-2_27:1.2
	LanManFS-2_26:1.2
	LanManFS-2_25:1.2
	LanManFS-2_24:1.2
	LanManFS-2_23:1.2
	LanManFS-2_22:1.2
	LanManFS-2_21:1.2
	LanManFS-2_20:1.2
	LanManFS-2_19:1.2
	LanManFS-2_18:1.2
	LanManFS-2_17:1.2
	LanManFS-2_16:1.2
	LanManFS-2_15:1.2
	LanManFS-2_14:1.2
	LanManFS-2_13:1.2
	LanManFS-2_12:1.2
	LanManFS-2_11:1.2
	LanManFS-2_10:1.2
	LanManFS-2_09:1.2
	LanManFS-2_08:1.2
	LanManFS-2_07:1.2
	LanManFS-2_06:1.2
	LanManFS-2_05:1.2
	LanManFS-2_04:1.2
	LanManFS-2_03:1.2
	LanManFS-2_02:1.2
	LanManFS-2_01:1.2
	LanManFS-2_00:1.2
	LanManFS-1_87-1_1_1_1_2_13:1.1.1.1.2.2
	LanManFS-1_87-1_1_1_1_2_12:1.1.1.1.2.2
	LanManFS-1_87-1_1_1_1_2_11:1.1.1.1.2.2
	LanManFS-1_87-1_1_1_1_2_10:1.1.1.1.2.2
	LanManFS-1_87-1_1_1_1_2_9:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_8:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_7:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_6:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_5:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_4:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_3:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_2:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_1:1.1.1.1
	sbrodie_LanManFS_dev:1.1.1.1.0.2
	sbrodie_LanManFS_dev_bp:1.1.1.1
	LanManFS-1_87:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2013.10.03.07.27.13;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	iTaBDwF1woaPMO7x;

1.6
date	2011.12.14.11.02.53;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	CGImv1wEytvZ99Lv;

1.5
date	2009.08.01.08.10.28;	author rsprowson;	state Exp;
branches;
next	1.4;

1.4
date	2009.04.15.16.00.08;	author bavison;	state Exp;
branches;
next	1.3;
commitid	GhZBwZ2GN8lg58Kt;

1.3
date	2004.01.09.11.28.02;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	99.02.16.12.52.25;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.12.03.13.54.47;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.03.13.54.47;	author sbrodie;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	99.01.19.14.24.49;	author sbrodie;	state Exp;
branches;
next	1.1.1.1.2.2;

1.1.1.1.2.2
date	99.02.05.15.57.23;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Internationalised
Unused LMFiler put in the attic.
As LanMan has historically put its resources into ThirdPart/OmniClient this component has no ROM resources phase - it still registers the resources at run time.

Version 2.40. Tagged as 'LanManFS-2_40'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
*   LANMAN.H - Definitions for main LanMan client module
*
*   Versions
*
*   07-03-94 INH Original, from FSinC
*
*
*/

/* Constants ------------- */

#define FilingSystemName                "LanMan"
#define Our_FS_Number                   102
#define Our_Error_Base                  ((0x10000) | (Our_FS_Number << 8))
#define MAX_DRIVES                      8 /* Maximum number of connections */
#define NAME_LIMIT                      16 /* Longest userID/password */
#define DOS_NAME_LEN                    256 /* Path plus leaf limit */

#define INFO_SPECIALFIELD               0x80000000
#define INFO_INTERACTIVE                0x40000000
#define INFO_NULLFILENAMES              0x20000000
#define INFO_OPENNONEXISTENT            0x10000000
#define INFO_ARGS_FLUSH                 0x08000000
#define INFO_FILE_TIME                  0x04000000
#define INFO_FUNC_TEMPFS                0x02000000

#define INFO_SUPPORTS_IMAGE             0x00800000
#define INFO_NO_EXPAND_PATH             0x00400000
#define INFO_NO_STORE_PATHS             0x00200000
#define INFO_AVOID_FILE255              0x00100000
#define INFO_AVOID_FILE0                0x00080000
#define INFO_USE_FUNC9                  0x00040000
#define INFO_EXTRA_INFO                 0x00020000

#define INFO2_SUPPORTS_IOCTL            0x00000008


#define Information_Word                (Our_FS_Number|INFO_FILE_TIME|INFO_EXTRA_INFO)
#define Information2_Word               (INFO2_SUPPORTS_IOCTL)

#define NBNSIPCMOS0			0x50
#define NBNSIPCMOS1			0xe4
#define NBNSIPCMOS2			0xe5
#define NBNSIPCMOS3			0xe6



/* Misc bits ------------- */

extern const int *Image_RO_Base;


/* C.LanMan exports ------------- */
/*
        These routines get used by the cmhg generated header.
*/

extern int LM_pw;

extern void LM_Boot(void);
extern int RdCMOS(int);
extern const char *MsgLookup(const char *);
extern err_t MsgSetOSError(_kernel_oserror *);
extern _kernel_oserror *MsgError(int);

/* S.Interface exports --------------- */

extern void veneer_fsentry_open( void );
extern void veneer_fsentry_getbytes( void );
extern void veneer_fsentry_putbytes( void );
extern void veneer_fsentry_args( void );
extern void veneer_fsentry_close( void );
extern void veneer_fsentry_file( void );
extern void veneer_fsentry_func( void );
extern void veneer_fsentry_gbpb( void );

extern void Free_ServiceRoutine(void);
@


1.6
log
@CollectCallbacks -> usermode_donothing() the preferred AsmUtils name.
Retagged.
@
text
@d29 1
a54 2
#define Service_FSRedeclare             0x40
#define Service_ResourceFSStarting      0x000060
d77 3
a92 3

extern char Default_FileTName[6];
extern int Default_FileType;
@


1.5
log
@Fix for renames where only the case has changed.
Detail:
 Added an extra check after the Xlate path resolution code so that
 the case of the path given to resolve is honoured. This now means that
 the strcmp() done in SMB_Rename fails and the rename is actually sent to
 the server. Before "*rename test Test" would have the path resolved and
 since 'test' already existed both names would be the same, in this example
 something like "*rename A:\test A:\test" would result.
Admin:
 Made the non LONGNAMES version compile again (not tested).
 Removed local definitions of FSControl reason codes, uses Interface header
 now.
 Made the case of #includes match CVS to allow future compilation on a case
 sensitive system.
 Deleted unused "Version" header.

Version 2.34. Tagged as 'LanManFS-2_34'
@
text
@a91 2
extern void CollectCallbacks(void);

@


1.4
log
@  Multiple fixes.
Detail:
  Too many to list here: see doc/RPSChanges.
Admin:
  Received from Rob Sprowson approx 2009-02-08. Builds, but not tested by ROOL.

Version 2.32. Tagged as 'LanManFS-2_32'
@
text
@d29 3
a31 5

#define FSControl_AddFilingSystem       12
#define FSControl_SelectFilingSystem    14
#define FSControl_RemoveFilingSystem    16
#define Information_Block_Size          12
a55 2
#define ASpace                          ' '

@


1.3
log
@  Changes from John.
Detail:
  > Default filetype now text
  >
  > Default type given to any file that has neither a dos extent, nor a
  > ',xxx' riscos extent at the server
  >
  > Ensure that files given the default type never have a ',xxx' riscos
  > extent appended.
  >
  > Add environment variable 'LMDefaultType' which checked for a default
  > type on module initialisation .. thus setting this to (e.g.) dos, then
  > rmreinitting LanManFS will change the default type to (e.g.) dos.
Admin:
  Not tested here yet.

Version 2.29. Tagged as 'LanManFS-2_29'
@
text
@a29 7
/* Default map filetype when file on server has no type info */
#define Default_File_Type_Number  FileType_Text

/* Env Variable to contain replacement default type */
#define DefaultTypeEnvVar         "LMDefaultType"


@


1.2
log
@  Support for long filename.
  Support for spaces in machine names.
  Merge of sbrodie_LanManFS_dev branch to trunk.
Detail:
  LanManFS 2.00 supports the "NT LM 0.12" protocol, enabling it to
    use long filenames on mounted shares.
Admin:
  Supporting documentation:
    1215,256/FS: LanManFS Software Functional Specification.
  Same as LanManFS-1_87_1_1_1_1_2_13.

Version 2.00. Tagged as 'LanManFS-2_00'
@
text
@d30 6
d105 2
a106 1

@


1.1
log
@Initial revision
@
text
@a28 6
#define LanMan_SWI_base                 0x49240
#define SWI_LanMan_OmniOp   (LanMan_SWI_base + 0)
#define SWI_LanMan_FreeOp   (LanMan_SWI_base + 1)
#define SWI_LanMan_NameOp   (LanMan_SWI_base + 2)
#define SWI_LanMan_Transact (LanMan_SWI_base + 3)
#define SWI_LanMan_LogonOp  (LanMan_SWI_base + 4)
d34 1
a34 1
#define Information_Block_Size          11
d52 1
d54 3
a56 1
#define Information_Word                (Our_FS_Number|INFO_FILE_TIME)
a77 6

extern _kernel_oserror *LM_Command( char *, int, int, void * );
extern _kernel_oserror *LM_Swi( int, _kernel_swi_regs *, void * );
extern void LM_Service( int, _kernel_swi_regs *, void * );
extern _kernel_oserror *LM_Initialise( char *, int, void * );
extern _kernel_oserror *LM_Finalise( int fatal, int podule, void *pw );
@


1.1.1.1
log
@
LanManFS moved into Omni subdirectory.  Previous version in
RiscOS/Sources/Networking/LanManFS is now locked out.

The rest of Omni will be imported at a later date.

Version 1.87, tagged as LanManFS-1_87

@
text
@@


1.1.1.1.2.1
log
@  Check-in of all files comprising this development build of LanManFS
  Spaces in NetBIOS names are now allowed.
Detail:
  Now supports NetBIOS hostnames which contain spaces.  Use hardspaces
    in the Omni frontend or at the command-line (unless you can get
    away with a normal space without confusing the CLI parser)
Admin:
  Tested by attempting to connect to machines with spaces in their
    names.  Got the expected response from the target machine, so
    this aspect is working.
  It appears that several files did not get checked in due to datestamp
    problems when LanManFS's location in CVS was changed.  This is now
    fixed.

Version 1.87, 1.1.1.1.2.7. Tagged as 'LanManFS-1_87-1_1_1_1_2_7'
@
text
@d29 6
d81 6
@


1.1.1.1.2.2
log
@  End of week checkin.  No bug fixes.  Some performance improvements.
Detail:
  Added a basic name cacheing facility.  For safety this is flushed
    every time the module returns to FileSwitch.  This does at least
    help reduce the name of directory searches required during a
    name translation.  NameCache.c comes with a test program built-in
    for stressing the cache manager.
Admin:
  Free space display doesn't work yet.
  Anti-idleout measures not implemented yet.

Version 1.87, 1.1.1.1.2.10. Tagged as 'LanManFS-1_87-1_1_1_1_2_10'
@
text
@d34 1
a34 1
#define Information_Block_Size          12
a51 1
#define INFO2_SUPPORTS_IOCTL            0x00000008
d53 1
a53 3

#define Information_Word                (Our_FS_Number|INFO_FILE_TIME|INFO_EXTRA_INFO)
#define Information2_Word               (INFO2_SUPPORTS_IOCTL)
@
