head	1.2;
access;
symbols
	LanManFS-2_62:1.2
	LanManFS-2_61:1.2
	LanManFS-2_60:1.2
	LanManFS-2_59:1.2
	LanManFS-2_58:1.2
	LanManFS-2_57:1.2
	LanManFS-2_56:1.2
	LanManFS-2_55:1.2
	LanManFS-2_54:1.2
	LanManFS-2_53:1.2
	LanManFS-2_52:1.2
	LanManFS-2_51:1.2
	LanManFS-2_50:1.2
	LanManFS-2_49:1.2
	LanManFS-2_48:1.2
	LanManFS-2_47:1.2
	LanManFS-2_46:1.2
	LanManFS-2_45:1.2
	LanManFS-2_44:1.2
	LanManFS-2_43:1.2
	LanManFS-2_42:1.2
	LanManFS-2_41:1.2
	LanManFS-2_40:1.2
	LanManFS-2_39:1.2
	LanManFS-2_38:1.2
	LanManFS-2_37:1.2
	LanManFS-2_36:1.2
	LanManFS-2_35:1.2
	LanManFS-2_34:1.2
	LanManFS-2_33:1.2
	LanManFS-2_32:1.2
	LanManFS-2_31:1.2
	RO_5_07:1.2
	LanManFS-2_30:1.2
	LanManFS-2_29:1.2
	LanManFS-2_28:1.2
	LanManFS-2_27:1.2
	LanManFS-2_26:1.2
	LanManFS-2_25:1.2
	LanManFS-2_24:1.2
	LanManFS-2_23:1.2
	LanManFS-2_22:1.2
	LanManFS-2_21:1.2
	LanManFS-2_20:1.2
	LanManFS-2_19:1.2
	LanManFS-2_18:1.2
	LanManFS-2_17:1.2
	LanManFS-2_16:1.2
	LanManFS-2_15:1.2
	LanManFS-2_14:1.2
	LanManFS-2_13:1.2
	LanManFS-2_12:1.2
	LanManFS-2_11:1.2
	LanManFS-2_10:1.2
	LanManFS-2_09:1.2
	LanManFS-2_08:1.2
	LanManFS-2_07:1.2
	LanManFS-2_06:1.2
	LanManFS-2_05:1.2
	LanManFS-2_04:1.2
	LanManFS-2_03:1.2
	LanManFS-2_02:1.2
	LanManFS-2_01:1.2
	LanManFS-2_00:1.2
	LanManFS-1_87-1_1_1_1_2_13:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_12:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_11:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_10:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_9:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_8:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_7:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_6:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_5:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_4:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_3:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_2:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_1:1.1.1.1
	sbrodie_LanManFS_dev:1.1.1.1.0.2
	sbrodie_LanManFS_dev_bp:1.1.1.1
	LanManFS-1_87:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.02.16.12.52.26;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.12.03.13.54.47;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.03.13.54.47;	author sbrodie;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	99.01.19.14.24.51;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Support for long filename.
  Support for spaces in machine names.
  Merge of sbrodie_LanManFS_dev branch to trunk.
Detail:
  LanManFS 2.00 supports the "NT LM 0.12" protocol, enabling it to
    use long filenames on mounted shares.
Admin:
  Supporting documentation:
    1215,256/FS: LanManFS Software Functional Specification.
  Same as LanManFS-1_87_1_1_1_1_2_13.

Version 2.00. Tagged as 'LanManFS-2_00'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
*  Lan Manager client
*
*  NBNS.H -- Private Definitions for NetBIOS-over-IP
*
*  Versions
*  29-01-96 INH Original
*
*/

/* RFC-1002 definitions ---------------------------- */

#define NBNS_PORT 137         /* UDP */

/* Flags to CreateNBNSheader */
#define HAS_QUERY	(1<<16)
#define HAS_ANSWER	(1<<17)
#define HAS_AUTHORITY	(1<<18)
#define HAS_ADDITIONAL	(1<<19)

/* Opcode field definitions */

#define OPC_OPCODE_MASK (15<<11)  /* Opcode bits */
#define OPC_STATUS_MASK  15

#define OPC_REQUEST	0
#define OPC_REPLY	(1<<15)

#define OPC_FIND	(0<<11)
#define OPC_REGISTER	(5<<11)
#define OPC_RELEASE	(6<<11)
#define OPC_WACK	(7<<11)
#define OPC_REFRESH	(8<<11)


#define OPC_AUTHORITY	(1<<10)
#define OPC_TRUNCATED	(1<<9)
#define OPC_REC_DESIRED	(1<<8)
#define OPC_REC_AVAIL	(1<<7)
#define OPC_BROADCAST	(1<<4)

/* Status values */
#define ST_OK		0
#define ST_FMT_ERR	1
#define ST_SRV_ERR	2
#define ST_NAM_ERR	3
#define ST_IMP_ERR	4
#define ST_RFS_ERR	5
#define ST_ACT_ERR	6
#define ST_CFT_ERR	7

/* Commonly used combinations */

#define NAME_REG_REQUEST	(OPC_REQUEST|OPC_REGISTER|OPC_REC_DESIRED  \
                                  |OPC_BROADCAST|HAS_QUERY|HAS_ADDITIONAL)

#define NAME_OVERWRITE_REQUEST	(OPC_REQUEST|OPC_REGISTER|OPC_BROADCAST    \
				  |HAS_QUERY|HAS_ADDITIONAL)

#define NAME_REG_REPLY		(OPC_REPLY  |OPC_REGISTER|OPC_AUTHORITY    \
                                  |OPC_REC_DESIRED|OPC_REC_AVAIL|HAS_ANSWER)

#define NAME_END_CHALLENGE	(OPC_REPLY  |OPC_REGISTER|OPC_AUTHORITY    \
				  |OPC_REC_DESIRED|HAS_ANSWER)

#define NAME_REFRESH_REQUEST	(OPC_REQUEST|OPC_REFRESH|OPC_BROADCAST     \
                                  |HAS_QUERY|HAS_ADDITIONAL)

#define NAME_RLSE_REQUEST	(OPC_REQUEST|OPC_RELEASE|OPC_BROADCAST     \
				  |HAS_QUERY|HAS_ADDITIONAL)

#define NAME_RLSE_REPLY		(OPC_REPLY  |OPC_RELEASE|OPC_AUTHORITY     \
				  |HAS_ANSWER)

#define NAME_FIND_REQUEST	(OPC_REQUEST|OPC_FIND|OPC_REC_DESIRED      \
                                  |HAS_QUERY)
#define NAME_STATUS_REQUEST	(OPC_REQUEST|OPC_FIND|HAS_QUERY)

#define NAME_FIND_REPLY		(OPC_REPLY  |OPC_FIND|OPC_AUTHORITY      \
				  |OPC_REC_DESIRED|HAS_ANSWER)

#define NAME_FIND_REDIRECT	(OPC_REPLY  |OPC_FIND|OPC_REC_DESIRED    \
				  |HAS_AUTHORITY|HAS_ADDITIONAL)

#define NAME_WAIT		(OPC_REPLY |OPC_WACK|OPC_AUTHORITY|HAS_ANSWER)

/* Misc flags ---- */

#define INET_IPADDR_TAG		0x00010001
#define INET_NAMESRV_TAG	0x00020001
#define INET_NULL_TAG		0x000A0001
#define INET_NAME_TAG		0x00200001
#define INET_STATUS_TAG		0x00210001


#define NBFLG_UNIQUE	0
#define NBFLG_GROUP	0x8000
#define NBFLG_BNODE	0
#define NBFLG_PNODE	0x2000
#define NBFLG_MNODE	0x4000

/* Extra flags for status queries */
#define NBFLG_RELEASE	0x1000
#define NBFLG_CONFLICT	0x800
#define NBFLG_ACTIVE	0x400
#define NBFLG_PERMANENT	0x200


/* Session services ------------ */

#define NBIP_SESSION_PORT 139 /* TCP */

#define NBIP_SESS_DATA      0x00
#define NBIP_SESS_REQUEST   0x81
#define NBIP_SESS_OK        0x82
#define NBIP_SESS_REJECT    0x83
#define NBIP_SESS_RETARGET  0x84
#define NBIP_SESS_KEEPALIVE 0x85

@


1.1
log
@Initial revision
@
text
@a133 3
extern int EventFn_handler ( _kernel_swi_regs *R, int pw );
extern int CallbackFn_handler (void);
extern int NBIP_CallbackFn_handler(void);
@


1.1.1.1
log
@
LanManFS moved into Omni subdirectory.  Previous version in
RiscOS/Sources/Networking/LanManFS is now locked out.

The rest of Omni will be imported at a later date.

Version 1.87, tagged as LanManFS-1_87

@
text
@@


1.1.1.1.2.1
log
@  Check-in of all files comprising this development build of LanManFS
  Spaces in NetBIOS names are now allowed.
Detail:
  Now supports NetBIOS hostnames which contain spaces.  Use hardspaces
    in the Omni frontend or at the command-line (unless you can get
    away with a normal space without confusing the CLI parser)
Admin:
  Tested by attempting to connect to machines with spaces in their
    names.  Got the expected response from the target machine, so
    this aspect is working.
  It appears that several files did not get checked in due to datestamp
    problems when LanManFS's location in CVS was changed.  This is now
    fixed.

Version 1.87, 1.1.1.1.2.7. Tagged as 'LanManFS-1_87-1_1_1_1_2_7'
@
text
@d134 3
@
