head	1.2;
access;
symbols
	LanManFS-2_62:1.2
	LanManFS-2_61:1.2
	LanManFS-2_60:1.2
	LanManFS-2_59:1.2
	LanManFS-2_58:1.2
	LanManFS-2_57:1.2
	LanManFS-2_56:1.2
	LanManFS-2_55:1.2
	LanManFS-2_54:1.2
	LanManFS-2_53:1.2
	LanManFS-2_52:1.2
	LanManFS-2_51:1.2
	LanManFS-2_50:1.2
	LanManFS-2_49:1.2
	LanManFS-2_48:1.2
	LanManFS-2_47:1.2
	LanManFS-2_46:1.2
	LanManFS-2_45:1.2
	LanManFS-2_44:1.2
	LanManFS-2_43:1.2
	LanManFS-2_42:1.2
	LanManFS-2_41:1.2
	LanManFS-2_40:1.2
	LanManFS-2_39:1.2
	LanManFS-2_38:1.2
	LanManFS-2_37:1.2
	LanManFS-2_36:1.2
	LanManFS-2_35:1.2
	LanManFS-2_34:1.2
	LanManFS-2_33:1.2
	LanManFS-2_32:1.2
	LanManFS-2_31:1.2
	RO_5_07:1.2
	LanManFS-2_30:1.2
	LanManFS-2_29:1.2
	LanManFS-2_28:1.2
	LanManFS-2_27:1.2
	LanManFS-2_26:1.2
	LanManFS-2_25:1.2
	LanManFS-2_24:1.2
	LanManFS-2_23:1.2
	LanManFS-2_22:1.2
	LanManFS-2_21:1.2
	LanManFS-2_20:1.2
	LanManFS-2_19:1.2
	LanManFS-2_18:1.2
	LanManFS-2_17:1.2
	LanManFS-2_16:1.2
	LanManFS-2_15:1.2
	LanManFS-2_14:1.2
	LanManFS-2_13:1.2
	LanManFS-2_12:1.2
	LanManFS-2_11:1.2
	LanManFS-2_10:1.2
	LanManFS-2_09:1.2
	LanManFS-2_08:1.2
	LanManFS-2_07:1.2
	LanManFS-2_06:1.2
	LanManFS-2_05:1.2
	LanManFS-2_04:1.2
	LanManFS-2_03:1.2
	LanManFS-2_02:1.2
	LanManFS-2_01:1.2
	LanManFS-2_00:1.2
	LanManFS-1_87-1_1_1_1_2_13:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_12:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_11:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_10:1.1.1.1.2.1
	LanManFS-1_87-1_1_1_1_2_9:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_8:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_7:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_6:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_5:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_4:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_3:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_2:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_1:1.1.1.1
	sbrodie_LanManFS_dev:1.1.1.1.0.2
	sbrodie_LanManFS_dev_bp:1.1.1.1
	LanManFS-1_87:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.02.16.12.52.30;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.12.03.13.54.47;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.03.13.54.47;	author sbrodie;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	99.02.05.15.57.25;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Support for long filename.
  Support for spaces in machine names.
  Merge of sbrodie_LanManFS_dev branch to trunk.
Detail:
  LanManFS 2.00 supports the "NT LM 0.12" protocol, enabling it to
    use long filenames on mounted shares.
Admin:
  Supporting documentation:
    1215,256/FS: LanManFS Software Functional Specification.
  Same as LanManFS-1_87_1_1_1_1_2_13.

Version 2.00. Tagged as 'LanManFS-2_00'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
*  PARAMS.H -- Reasons codes for Fileswitch interface.
*
*  09-03-94 INH  Derived from FSinC
*
*/

typedef enum
{
        FSEntry_Open_Reason_OpenRead = 0,
        FSEntry_Open_Reason_CreateUpdate = 1,
        FSEntry_Open_Reason_Update = 2
}
        FSEntry_Open_Reason;

#define OPEN_Writable           0x80000000
#define OPEN_Readable           0x40000000
#define OPEN_ObjectIsDir        0x20000000
#define OPEN_Unbuffered         0x10000000
#define OPEN_Interactive        0x08000000


typedef enum
{
        FSEntry_Args_Reason_ReadSequentialFilePointer = 0,
        FSEntry_Args_Reason_WriteSequentialFilePointer = 1,
        FSEntry_Args_Reason_ReadFileExtent = 2,
        FSEntry_Args_Reason_WriteFileExtent = 3,
        FSEntry_Args_Reason_ReadSizeAllocatedToFile = 4,
        FSEntry_Args_Reason_EOFCheck = 5,
        FSEntry_Args_Reason_FlushFileBuffer = 6,
        FSEntry_Args_Reason_EnsureFileSize = 7,
        FSEntry_Args_Reason_WriteZerosToFile = 8,
        FSEntry_Args_Reason_ReadFileDateStamp = 9,
        FSEntry_Args_Reason_IOCtl = 11
}
        FSEntry_Args_Reason;


typedef enum
{
        FSEntry_File_Reason_LoadFile = 0xff,
        FSEntry_File_Reason_SaveFile = 0,
        FSEntry_File_Reason_WriteCatalogueInformation = 1,
        FSEntry_File_Reason_WriteLoadAddress = 2,
        FSEntry_File_Reason_WriteExecutionAddress = 3,
        FSEntry_File_Reason_WriteAttributes = 4,
        FSEntry_File_Reason_ReadCatalogueInformation = 5,
        FSEntry_File_Reason_DeleteObject = 6,
        FSEntry_File_Reason_CreateFile = 7,
        FSEntry_File_Reason_CreateDirectory = 8,
        FSEntry_File_Reason_ReadCatalogueInformationNoLength = 9
}
        FSEntry_File_Reason;

typedef enum
{
        FSEntry_Func_Reason_SetCurrentDirectory = 0,
        FSEntry_Func_Reason_SetLibraryDirectory = 1,
        FSEntry_Func_Reason_CatalogueDirectory = 2,
        FSEntry_Func_Reason_ExamineCurrentDirectory = 3,
        FSEntry_Func_Reason_CatalogueLibraryDirectory = 4,
        FSEntry_Func_Reason_ExamineLibraryDirectory = 5,
        FSEntry_Func_Reason_ExamineObjects = 6,
        FSEntry_Func_Reason_SetFilingSystemOptions = 7,
        FSEntry_Func_Reason_RenameObject = 8,
        FSEntry_Func_Reason_AccessObjects = 9,
        FSEntry_Func_Reason_BootFilingSystem = 10,
        FSEntry_Func_Reason_ReadNameAndBootOptionOfDisc = 11,
        FSEntry_Func_Reason_ReadCurrentDirectoryNameAndPrivilegeByte = 12,
        FSEntry_Func_Reason_ReadLibraryDirectoryNameAndPrivilegeByte = 13,
        FSEntry_Func_Reason_ReadDirectoryEntries = 14,
        FSEntry_Func_Reason_ReadDirectoriesAndInformation = 15,
        FSEntry_Func_Reason_ShutDown = 16,
        FSEntry_Func_Reason_PrintStartUpBanner = 17,
        FSEntry_Func_Reason_SetDirectoryContexts = 18,
        FSEntry_Func_Reason_ReadDirectoryEntriesAndInformation = 19,
        FSEntry_Func_Reason_OutputFullInformationOnObjects = 20,
        FSEntry_Func_Reason_ResolveWildcard = 24,
        FSEntry_Func_Reason_ReadFreeSpace = 30,
        FSEntry_Func_Reason_ReadFreeSpace64 = 35
}
        FSEntry_Func_Reason;


typedef enum
{
        FSEntry_GBPB_Reason_PutMultipleBytesHere = 1,
        FSEntry_GBPB_Reason_PutMultipleBytes = 2,
        FSEntry_GBPB_Reason_GetMultipleBytesHere = 3,
        FSEntry_GBPB_Reason_GetMultipleBytes = 4
}
        FSEntry_GBPB_Reason;


@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
*                                  
d22 1
a22 1
typedef enum 
d48 2
a49 1
        FSEntry_Args_Reason_ReadFileDateStamp = 9
d92 4
a95 1
        FSEntry_Func_Reason_OutputFullInformationOnObjects = 20
d108 1
a108 1
 
@


1.1.1.1
log
@
LanManFS moved into Omni subdirectory.  Previous version in
RiscOS/Sources/Networking/LanManFS is now locked out.

The rest of Omni will be imported at a later date.

Version 1.87, tagged as LanManFS-1_87

@
text
@@


1.1.1.1.2.1
log
@  End of week checkin.  No bug fixes.  Some performance improvements.
Detail:
  Added a basic name cacheing facility.  For safety this is flushed
    every time the module returns to FileSwitch.  This does at least
    help reduce the name of directory searches required during a
    name translation.  NameCache.c comes with a test program built-in
    for stressing the cache manager.
Admin:
  Free space display doesn't work yet.
  Anti-idleout measures not implemented yet.

Version 1.87, 1.1.1.1.2.10. Tagged as 'LanManFS-1_87-1_1_1_1_2_10'
@
text
@d19 1
a19 1
*
d22 1
a22 1
typedef enum
d48 1
a48 2
        FSEntry_Args_Reason_ReadFileDateStamp = 9,
        FSEntry_Args_Reason_IOCtl = 11
d91 1
a91 4
        FSEntry_Func_Reason_OutputFullInformationOnObjects = 20,
        FSEntry_Func_Reason_ResolveWildcard = 24,
        FSEntry_Func_Reason_ReadFreeSpace = 30,
        FSEntry_Func_Reason_ReadFreeSpace64 = 35
d104 1
a104 1

@
