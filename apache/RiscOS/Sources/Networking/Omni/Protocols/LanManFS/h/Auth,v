head	1.1;
access;
symbols
	LanManFS-2_62:1.1
	LanManFS-2_61:1.1
	LanManFS-2_60:1.1
	LanManFS-2_59:1.1
	LanManFS-2_58:1.1
	LanManFS-2_57:1.1
	LanManFS-2_56:1.1
	LanManFS-2_55:1.1
	LanManFS-2_54:1.1
	LanManFS-2_53:1.1
	LanManFS-2_52:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.08.09.10.42.55;	author rool;	state Exp;
branches;
next	;
commitid	TYF5qIOL7WOKaAwy;


desc
@@


1.1
log
@Add support for NTLM authenticated logins
SMB.c:
Line 875 don't free chain pB that early it is (and was being) used later on.
Fixes to correct which SMB_RxWords the Sesskey and bloblen are retrieved from, for each of the dialects supported.
Call the new auth code when the protocol flags require it.
Don't uppercase passwords all the time, the server may require case sensitivity.
md5c.c/md4c.c:
Verbatim copies of the RSA reference implementations of MD4 and MD5 from the respective RFC's.
Auth.c:
Implementation of the hash/mash/reply that Microsoft requires. Define AUTHTEST of this file to build a simple application that verifies the algorithms.

Tested against a Win7 install, inspecting in Wireshark that the passwords are no longer sent in the clear.
Implements ticket #332.
Submission from Colin Granville.

Version 2.52. Tagged as 'LanManFS-2_52'
@
text
@/*
 * Copyright (c) 2015, Colin Granville
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef AUTH_H
#define AUTH_H

void Auth_LMOWFv2( const char *password, size_t pass_size,
                   const char *username, size_t user_size,
                   const char *userdomain, size_t dom_size,
                   unsigned char digestout[16] );

void Auth_LMv2ChallengeResponse(unsigned char lmowfv2digest[16],
                                unsigned char serverchallenge[8],
                                unsigned char responseout[24]);

#define Auth_NTOWFv2 Auth_LMOWFv2

/* responseoutsize = 0 if response out is not big enough - should never happen */
void Auth_NTv2ChallengeResponse( unsigned char   ntowfv2digest[16],
                                 unsigned char   serverchallenge[8],
                                 const char     *servername,                  /* ASCII */
                                 const char     *domain,                      /* ASCII */
                                 unsigned char   responseout[128],
                                 unsigned short *responseoutsize );

#endif
@
