head	1.3;
access;
symbols
	LanManFS-2_62:1.3
	LanManFS-2_61:1.3
	LanManFS-2_60:1.3
	LanManFS-2_59:1.3
	LanManFS-2_58:1.3
	LanManFS-2_57:1.3
	LanManFS-2_56:1.3
	LanManFS-2_55:1.3
	LanManFS-2_54:1.3
	LanManFS-2_53:1.3
	LanManFS-2_52:1.3
	LanManFS-2_51:1.3
	LanManFS-2_50:1.3
	LanManFS-2_49:1.3
	LanManFS-2_48:1.3
	LanManFS-2_47:1.3
	LanManFS-2_46:1.3
	LanManFS-2_45:1.3
	LanManFS-2_44:1.3
	LanManFS-2_43:1.3
	LanManFS-2_42:1.3
	LanManFS-2_41:1.3
	LanManFS-2_40:1.2
	LanManFS-2_39:1.2
	LanManFS-2_38:1.2
	LanManFS-2_37:1.2
	LanManFS-2_36:1.2
	LanManFS-2_35:1.2
	LanManFS-2_34:1.2
	LanManFS-2_33:1.1.1.1
	LanManFS-2_32:1.1.1.1
	LanManFS-2_31:1.1.1.1
	RO_5_07:1.1.1.1
	LanManFS-2_30:1.1.1.1
	LanManFS-2_29:1.1.1.1
	LanManFS-2_28:1.1.1.1
	LanManFS-2_27:1.1.1.1
	LanManFS-2_26:1.1.1.1
	LanManFS-2_25:1.1.1.1
	LanManFS-2_24:1.1.1.1
	LanManFS-2_23:1.1.1.1
	LanManFS-2_22:1.1.1.1
	LanManFS-2_21:1.1.1.1
	LanManFS-2_20:1.1.1.1
	LanManFS-2_19:1.1.1.1
	LanManFS-2_18:1.1.1.1
	LanManFS-2_17:1.1.1.1
	LanManFS-2_16:1.1.1.1
	LanManFS-2_15:1.1.1.1
	LanManFS-2_14:1.1.1.1
	LanManFS-2_13:1.1.1.1
	LanManFS-2_12:1.1.1.1
	LanManFS-2_11:1.1.1.1
	LanManFS-2_10:1.1.1.1
	LanManFS-2_09:1.1.1.1
	LanManFS-2_08:1.1.1.1
	LanManFS-2_07:1.1.1.1
	LanManFS-2_06:1.1.1.1
	LanManFS-2_05:1.1.1.1
	LanManFS-2_04:1.1.1.1
	LanManFS-2_03:1.1.1.1
	LanManFS-2_02:1.1.1.1
	LanManFS-2_01:1.1.1.1
	LanManFS-2_00:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_13:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_12:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_11:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_10:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_9:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_8:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_7:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_6:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_5:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_4:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_3:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_2:1.1.1.1
	LanManFS-1_87-1_1_1_1_2_1:1.1.1.1
	sbrodie_LanManFS_dev:1.1.1.1.0.2
	sbrodie_LanManFS_dev_bp:1.1.1.1
	LanManFS-1_87:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.10.03.19.20.08;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	nWGzdAD9s5kFIS7x;

1.2
date	2009.08.01.08.10.27;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	98.12.03.13.54.46;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.12.03.13.54.46;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Wrap stats report in DEBUG switch
Missed in earlier internationalisation but spotted in the binary - the stats report function is only called from a debug command, but the linker wasn't spotting that and removing the table of stats names.
Translate the descriptive text in debug_err in RPC.c.
Retagged as LanManFS-2_41.
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
*  Lan Manager client
*
*  Stats.C -- Statistics gathering
*
*  Versions
*  21-08-95 INH Original
*
*/

/* Standard includes */

#include <stdio.h>

/* Our includes */

#include "stdtypes.h"
#include "Stats.h"

int Stat_StatTable [STA_MAXSTATS];
int Stat_ClassMask;

struct stat_info
{
  int stat_no;
  int sclass;
  char *name;
};

#ifdef DEBUG
static struct stat_info statinfo[] =
{
  STA_SERIOUS_BARF, SCLASS_GENERAL,  "Internal errors",
  STA_NETTX_PKTS,   SCLASS_NETBEUI,  "Total Tx packets",
  STA_NETRX_EVTS,   SCLASS_NETBEUI,  "Total Rx events",
  STA_NETRX_PKTS,   SCLASS_NETBEUI,  "Total Rx packets",
  STA_NETRX_OWNTX,  SCLASS_NETBEUI,  "Rx: Own transmission",

  STA_LLCRX_PKTS,   SCLASS_NETBEUI,  "LLC: Rx pkts total",
  STA_LLCRX_NOCONN, SCLASS_NETBEUI,  "LLC: Ignored rx packets",
  STA_LLCRX_TOOSHORT,SCLASS_NETBEUI, "LLC: Rx Too short",
  STA_LLCRX_UIDATA, SCLASS_NETBEUI,  "LLC: Rx Datagram",
  STA_LLCRX_UFORMAT,SCLASS_NETBEUI,  "LLC: Rx U-format",

  STA_LLCRX_SFORMAT,SCLASS_NETBEUI,  "LLC: Rx S-format",
  STA_LLCRX_IFORMAT,SCLASS_NETBEUI,  "LLC: Rx I-format",
  STA_LLCRX_DATA,   SCLASS_NETBEUI,  "LLC: Rx Data pkts accepted",
  STA_LLCRX_REJDATA,SCLASS_NETBEUI,  "LLC: Rx Data pkts rejected",
  STA_LLC_TXPACKETS,SCLASS_NETBEUI,  "LLC: Tx Data pkts sent",

  STA_LLCRX_PKTACKS,SCLASS_NETBEUI,  "LLC: Tx Data pkts acked",
  STA_LLCRX_REJECTS,SCLASS_NETBEUI,  "LLC: Tx Data pkts rejected",
  STA_LLCRX_RESENDS,SCLASS_NETBEUI,  "LLC: Tx Data pkts re-sent",
  STA_LLC_OPENREQ,  SCLASS_NETBEUI,  "LLC: Open Conn requests",
  STA_LLCRX_CONN,   SCLASS_NETBEUI,  "LLC: Connections made",

  STA_LLC_CLOSEREQ, SCLASS_NETBEUI,  "LLC: Close Conn requests",
  STA_LLCRX_DISCON, SCLASS_NETBEUI,  "LLC: Connections ended",
  STA_LLCRX_FRMR,   SCLASS_NETBEUI,  "LLC: Abort with FRMR error",
  STA_LLCRX_DISC,   SCLASS_NETBEUI,  "LLC: Abort with DISC req",
  STA_LLC_T1FAIL,   SCLASS_NETBEUI,  "LLC: Abort with T1 timeout",

  STA_LLCRX_UNKNOWNU, SCLASS_NETBEUI,"LLC: Unknown U-format pkt",
  STA_LLC_T1EXPIRE, SCLASS_NETBEUI,  "LLC: T1 timeouts",

  STA_IP_EVENTS,    SCLASS_IP,       "IP:  Internet events",
  STA_IP_RXDGRAM,   SCLASS_IP,       "IP:  Receive datagrams",


  -1, 0, NULL
};

/* -------------- */

void Stat_Show ( void )
{
  int i;
  for ( i=0; statinfo[i].stat_no >= 0; i++ )
  {
    if ( statinfo[i].sclass & Stat_ClassMask )
      printf("%-30s: %d\n", statinfo[i].name,
             Stat_StatTable[statinfo[i].stat_no] );
  }
  printf("\n");
}
#endif

/* ------------- */

bool Stat_Init ( void )
{
  int i;

  Stat_ClassMask = SCLASS_GENERAL;
  for (i=0; i<STA_MAXSTATS; i++)
    Stat_StatTable[i] = 0;

  return true;
}
@


1.2
log
@Fix for renames where only the case has changed.
Detail:
 Added an extra check after the Xlate path resolution code so that
 the case of the path given to resolve is honoured. This now means that
 the strcmp() done in SMB_Rename fails and the rename is actually sent to
 the server. Before "*rename test Test" would have the path resolved and
 since 'test' already existed both names would be the same, in this example
 something like "*rename A:\test A:\test" would result.
Admin:
 Made the non LONGNAMES version compile again (not tested).
 Removed local definitions of FSControl reason codes, uses Interface header
 now.
 Made the case of #includes match CVS to allow future compilation on a case
 sensitive system.
 Deleted unused "Version" header.

Version 2.34. Tagged as 'LanManFS-2_34'
@
text
@d44 1
d100 1
a113 2


@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
#include "stats.h"
@


1.1.1.1
log
@
LanManFS moved into Omni subdirectory.  Previous version in
RiscOS/Sources/Networking/LanManFS is now locked out.

The rest of Omni will be imported at a later date.

Version 1.87, tagged as LanManFS-1_87

@
text
@@
