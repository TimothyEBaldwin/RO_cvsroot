head	1.3;
access;
symbols
	NetFiler-1_16:1.2
	NetFiler-1_15:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.09.11.09.43.08;	author rsprowson;	state dead;
branches;
next	1.2;
commitid	gUipW5QlWRk71Rlz;

1.2
date	99.12.07.20.36.32;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	99.12.07.19.04.36;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.12.07.19.04.36;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Makefile recreated from fragments
Untangle headers in the C source files.
Expand tabs in Resources.s, 32 bit a ^, and use Push/Pull macros.
Builds, but not tested.

Version 1.17. Tagged as 'NetFiler-1_17'
@
text
@# File:    Makefile
# Purpose: Makefile for NetFiler
# Author:  Ben Laughton
#
# History:
#
# 1999-12-07: BAL
# Created.




# ------------------------------------------------------------------------------
# Paths
#

EXP_HDR		= <export$dir>.^.Interface2
EXP_C_H		= <Cexport$dir>.h
EXP_C_O		= <Cexport$dir>.o

LIBDIR		= <Lib$Dir>

RESFSDIR	= Resources.OmniClient




# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
AS		= objasm
CC		= $(MemCheckCC) cc
C++		= c++
CMHG		= cmhg
CP		= copy
LD		= $(MemCheckLD) link
RM		= remove
WIPE		= -wipe
CD		= dir
CHMOD		= access
TOUCH		= create
DATA2AOF	= datatoaof
MODSQZ		= modsqz




# ------------------------------------------------------------------------------
# Flags
#

AFLAGS		= -depend !Depend $(THROWBACK) $(EXTRA_A_FLAGS) -stamp -quit
CCFLAGS		= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -c -Wp -zM -zps1 -ffah
C++FLAGS	= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -c -Wp -zM -zps1 -ffa +a1
CMHGFLAGS	= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -p
DATA2AOFFLAGS	= -L _length -S -P -DP
LDFLAGS		= 
CPFLAGS		= ~cfr~v
WFLAGS		= ~c~vr
CHMODFLAGS	= RW/r

DFLAGS		= $(EXTRA_C_FLAGS)

INCLUDES	= -IC:




# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= NetFiler
RAMTARGET	= rm.$(TARGET)
ROMTARGET	= aof.$(TARGET)
EXPORTS		= $(EXP_C_H).$(COMPONENT)

ROMOBJS =\
 $(EXT).Callback\
 $(EXT).Filer\
 $(EXT).Lists\
 $(EXT).MakeError\
 $(EXT).Net\
 $(EXT).NetFiler\
 $(EXT).Print\
 $(EXT).Resources\
 $(EXT).StrCaseCmp

RAMOBJS =\
 $(ROMOBJS)\




# ------------------------------------------------------------------------------
# Libraries
#

CLIB		= CLIB:o.stubs
RLIB		= RISCOSLIB:o.risc_oslib
RSTUBS		= RISCOSLIB:o.rstubs
ROMSTUBS	= RISCOSLIB:o.romstubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.c_AbsSym




# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES:	.o .od .oHP .oMC .i .s .c++ .c .cmhg
.c.i:;		$(CC)	$(CCFLAGS)	-C -E $< >> $@@
.c.o:;		$(CC)	$(CCFLAGS)	-o $@@ $<
.c.od:;		$(CC)	$(CCFLAGS)	-fn -o $@@ $<
.c.oMC:;	$(CC)	$(CCFLAGS)	-o $@@ $<
.c.oHP:;	$(CC)	$(CCFLAGS)	-fn -o $@@ $<
.cmhg.i:;	@@echo $@@
.cmhg.o:;	$(CMHG)	$(CMHGFLAGS)	$< -o $@@
.cmhg.od:;	$(CMHG)	$(CMHGFLAGS)	$< -o $@@
.cmhg.oMC:;	$(CMHG)	$(CMHGFLAGS)	$< -o $@@
.cmhg.oHP:;	$(CMHG)	$(CMHGFLAGS)	$< -o $@@
.s.i:;		@@echo $@@
.s.o:;		$(AS)	$(AFLAGS)	$< $@@
.s.od:;		$(AS)	$(AFLAGS)	$< $@@
.s.oMC:;	$(AS)	$(AFLAGS)	$< $@@
.s.oHP:;	$(AS)	$(AFLAGS)	$< $@@




# ------------------------------------------------------------------------------
# Local build rules
#

all: $(RAMTARGET) 

debug: $(RAMTARGET)

memcheck: $(RAMTARGET)

preprocess: $(ROMTARGET) 

$(RAMTARGET): $(RAMOBJS) $(HDR) $(LIBS) $(CLIB) $(EXT).local_dirs
	$(MKDIR) rm
	$(LD) -rmf $(LDFLAGS) -o $@@ $(RAMOBJS) $(LIBS) $(CLIB)
	$(MODSQZ) $@@

$(HDR): cmhg.NetFiler
	$(CMHG)	$(CMHGFLAGS)	cmhg.NetFiler -d $(HDR)

$(EXT).local_dirs:
	$(MKDIR) $(EXT)
	$(TOUCH) $@@




# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

rom: $(ROMTARGET)
	@@echo $(COMPONENT): rom complete

export: $(EXPORTS)
	@@echo $(COMPONENT): export complete

install: $(RAMTARGET)
	$(CP) $(RAMTARGET) $(INSTDIR).$(COMPONENT) $(CPFLAGS)
	@@echo $(COMPONENT): $(RAMTARGET) installed

install_rom: $(ROMTARGET)
	$(CP) $(ROMTARGET) $(INSTDIR).$(COMPONENT) $(CPFLAGS)
	@@echo $(COMPONENT): rom module installed

clean:
	@@$(WIPE) $(EXT)	$(WFLAGS)
	@@echo $(EXT) directory cleaned


# ROM target (re-linked at ROM Image build time)

$(ROMTARGET): $(ROMOBJS) $(LIBS) $(ROMCSTUBS) $(EXT).local_dirs
	$(MKDIR) aof
	$(LD) -aof $(LDFLAGS) -o $@@ $(ROMOBJS) $(LIBS) $(ROMCSTUBS)


# Final link for the ROM Image (using given base address)

rom_link:
	$(MKDIR) linked
	$(LD) $(LDFLAGS) -o linked.$(COMPONENT) -map -rmf -base $(ADDRESS) $(ROMTARGET) $(ABSSYM) > map.$(COMPONENT)
	$(CP) linked.$(COMPONENT) $(LINKDIR).$(COMPONENT) $(CPFLAGS)
	@@echo $(COMPONENT): rom_link complete

# Odds and ends

$(EXP_C_H).$(COMPONENT):	h.$(COMPONENT)
        $(CP) h.$(COMPONENT) $@@ $(CPFLAGS)




# ------------------------------------------------------------------------------
# Dynamic dependencies:
@


1.2
log
@Summary
  * Further rationalisations to fit into our build system.
Detail
  * Altered to use auto-generated or centralised declarations, constants etc.
    wherever possible.
  * Altered to use some library routines instead of local equivalents.
  * Debug build uses DebugLib.
  * Modified to use SrcCommit.
  * Got rid of warnings.
Admin
  * Removed entire contents of hdr directory; macros now obtained from HdrSrc.
  * Debug.h, ModuleWrap.h and Base.s removed.
  * Requires AsmUtils.
  * Both builds compiled.

Version 1.15. Tagged as 'NetFiler-1_15'
@
text
@@


1.1
log
@Initial revision
@
text
@d25 3
d51 1
a51 1
# Flags - see FlagReadMe
d55 2
a56 2
CCFLAGS		= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -c -Wsp -zM -zps1 -ffah
C++FLAGS	= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -c -Wsp -zM -zps1 -ffa +a1
d64 1
a64 1
DFLAGS		= $(EXTRA_C_FLAGS) -DINET -DCOMPAT_INET4
a71 22
# Libraries
#

CLIB		= CLIB:o.stubs
RLIB		= RISCOSLIB:o.risc_oslib
RSTUBS		= RISCOSLIB:o.rstubs
ROMSTUBS	= RISCOSLIB:o.romstubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.c_AbsSym

INETLIB		= TCPIPLibs:o.inetlibzm
SOCKLIB		= TCPIPLibs:o.socklibzm
UNIXLIB		= TCPIPLibs:o.unixlib
DEBUGLIB	= $(LIBDIR).DebugLib.o.DebugLibzm
ASMUTILS	= $(LIBDIR).AsmUtils.o.AsmUtilszm
DESKLIB		= $(LIBDIR).Desk.o.Desk_M

LIBS = $(DESKLIB)



# ------------------------------------------------------------------------------
a80 1
 $(EXT).Base\
d98 14
d147 1
a147 1
$(RAMTARGET): $(RAMOBJS) $(HDR) $(LIBS) $(EXT).local_dirs
@


1.1.1.1
log
@Summary
  * Initial import of NetFiler.

Details
  * Revamped build structure.
  * Modified sources to use Desk instead of ANT's proprietary version of
    DeskLib; only uses linked list handling, SWI veneer and time code, so
    don't expect this shouldn't cause any significant problem.

Admin
  * Compiled.
  * Untested.
@
text
@@
