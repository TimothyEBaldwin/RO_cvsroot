head	1.1;
access;
symbols
	Omni-2_30:1.1
	Omni-2_29:1.1
	Omni-2_28:1.1
	Omni-2_27:1.1
	Omni-2_26:1.1
	Omni-2_25:1.1
	Omni-2_24:1.1
	Omni-2_23:1.1
	Omni-2_22:1.1
	Omni-2_21:1.1
	Omni-2_20:1.1
	Omni-2_19:1.1
	Omni-2_18:1.1
	Omni-2_17:1.1
	Omni-2_16:1.1
	Omni-2_15:1.1
	Omni-2_14:1.1
	Omni-2_13:1.1
	Omni-2_12:1.1
	Omni-2_11:1.1
	Omni-2_10:1.1
	Omni-2_09:1.1
	Omni-2_08:1.1;
locks; strict;
comment	@# @;


1.1
date	2000.08.16.18.28.04;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  * Fixed Bugzilla ID 21, where typing *RMKill OmniClient from the command
    line would cause the error "free failed, (heap overwritten)" if task part
    of the OmniClient module task was running at the time, rendering
    OmniClient unusable and unloadable until the next reboot.
  * Fixed Bugzilla ID 19, where killing a protocol module when OmniClient was
    already loaded would cause an "Invalid Wimp Operation In This Context"
    error.

  * Miscellaneous bug fixes and tidy-ups.
Detail:
  * The "free failed, (heap overwritten)" error is due to a bug in the
    SharedCLibrary, triggered by OmniClient calling getenv in the C library
    from its task.  The bug results from the implementation of getenv calling
    malloc - see Bugzilla ID 28 for further details.  This has been worked
    around by copying the C Library's getenv routine into OmniClient,
    renaming it to omni_getenv, and making all calls to getenv call
    omni_getenv instead; if the malloc happens from within the task rather
    than from within the C library, then things are fine.
  * The "Invalid Wimp Operation In This Context" error is caused by OmniClient
    calling Wimp_CreateMenu with R0=-1 from within the SWI handler that deals
    with protocol module deregistration.  The reasoning for this is that if,
    for example, you have the Mounts menu open, it becomes invalid at this point
    as all of the dying protocol module's mounts become unavailable.  However,
    it is not legal to call Wimp_CreateMenu at this point as you are not in
    your Wimp task context!

    The call to Wimp_CreateMenu has simply been removed.  This doesn't appear
    to cause a problem if you have a menu open with mounts belonging to the
    dying protocol module - attemping to perform an operation on one causes a
    sensible error to be reported.  A possible future enhancement would be to
    use OmniClient's pollword mechanism to cause the task to close any open
    menus on the module's behalf.

    The reason it never occurred before is that it used to call the X-bit-set
    form of the SWI and didn't check the error returned.  When I modified
    OmniClient to use Desk instead of DeskLib, I changed most SWI calls from
    the task part to be non-X-bit-set calls, and used Desk's psuedo-exception
    system to catch and report all errors at the top level of the
    application.

  * Uses AsmUtils to obtain Image$$RO$$Base.

  * Potential write through null pointer fixed in string duplication routines
    cpystr and cpyrma - they weren't checking the result of their allocation
    calls.

  * Replaced the somewhat confusing all_done variable, which could take (magic)
    values between 0 and 2 inclusive to cause different sorts of quit, with
    an enumerated type called RunState.

  * Issuing of Service_OmniClient (dying) in module finalisation made
    unconditional (was previously conditional on the value of all_done), as it's
    most definitely always dying if the finalisation routine is called.  I
    think this was a hangover from when the module finalisation code was
    implemented as an atexit handler.

  * Exit code in the task does not issue Service_OmniClient (dying) if the
    entire filing system is being killed off - this will happen in module
    finalisation, which will be called as a result of the task calling
    OS_ExitAndDie.  This can only happen in "expert" builds.

  * Fixed allocation of too much memory in ItemParse routine!  It dynamically
    creates an array of pointers to structures, but was allocating enough space
    for an array of structures.

  * Fixed potential memory leak in PrintListServers routine - was calling
    realloc and assigning the result directly to the original pointer, instead
    of assigning it to a temporary and only updating the original poiiner if
    the realloc succeeds.

  * Fixed potential null pointer dereference in SortMessages routine - had a
    check for a null pointer parameter at the start, but managed to dereference
    the pointer before the check as part of a variable initialisation.

  * Added all documents from ANT's Docs directory into ours.

Admin:
  Tested on a Risc PC.
  Fixes Bugzilla bugs 19 & 21.

Version 2.08. Tagged as 'Omni-2_08'
@
text
@Errors returned from OmniClientç
================================

#define ERR_BASE 		0x080d100

	ERR_BASE + 0		Protocol is already registered
	ERR_BASE + 1		Bad protocol identifier value
	ERR_BASE + 2		No free memory for protocol registration
	ERR_BASE + 3		Protocol not registered
	ERR_BASE + 4		Bad reason code
	ERR_BASE + 5		Need protocol/server/printer names
	ERR_BASE + 6		Protocol not registered for printing
	ERR_BASE + 7		No free memory for print job
        ERR_BASE + 8		Bad print job identifier
        ERR_BASE + 9		Bad mounts file
	ERR_BASE + 10		Cannot create print job
	ERR_BASE + 11		Bad print job handle
	ERR_BASE + 12		Function not yet implemented
	ERR_BASE + 13		Bad time conversion format
 	ERR_BASE + 31		Unknown OmniClient error

	ERR_BASE + 32		* OmniNFS error block of 32 errors *
	ERR_BASE + 32		Operation not supported by OmniNFS
	ERR_BASE + 33		Bad OmniNFS mount, server or print job identifier
	ERR_BASE + 34		No memory for OmniNFS buffer
	ERR_BASE + 35		OmniNFS can't set up socket for server location. Is the
				network software loaded?
	ERR_BASE + 36		OmniNFS IOCTL failed setting up server location
	ERR_BASE + 37		OmniNFS can't broadcast data
	ERR_BASE + 38		OmniNFS packet receive error
 	ERR_BASE + 39		OmniNFS can't open printer device
 	ERR_BASE + 40		Print job can't be cleared while still active
 	ERR_BASE + 63		Unknown OmniNFS error
	
	ERR_BASE + 64		* NetFiler error block of 32 errors *
	ERR_BASE + 64		Operation not supported by NetFiler
	ERR_BASE + 65		NetFiler cannot access the AUN/Econet network. Is the
				network software loaded?
	ERR_BASE + 66		Bad NetFiler mount identifier
	ERR_BASE + 67		Bad NetFiler print job identifier
	ERR_BASE + 68		No memory for NetFiler buffer"
	ERR_BASE + 69		OmniClient is not currently active
	ERR_BASE + 95		Unknown NetFiler error
	
	ERR_BASE + 96		* AppleTalk error block of 32 errors *
	
	ERR_BASE + 128		* NetGain error block of 16 errors *

	ERR_BASE + 144		* PrinterIP error block of 16 errors  *

	ERR_BASE + 160		* Virtual memory mngr error block of 32 errors *
	
	ERR_BASE + 192		* errors returned by SWI Omni_MessageLookup *
	ERR_BASE + 193		No connection to server
	ERR_BASE + 194		Connection to '%s' server broken
	ERR_BASE + 195		Connection already exists
	ERR_BASE + 196		Cannot find named server '%s'
 	ERR_BASE + 197		Server out of file handles
	ERR_BASE + 198		Function '%s' not implemented
	ERR_BASE + 199		Timeout error
	ERR_BASE + 200		General server error: %s
	ERR_BASE + 201		Bad parameters
	ERR_BASE + 202		Memory error - out of buffers
	ERR_BASE + 203		Out of RISC OS handles
	ERR_BASE + 204		File '%s' not found
	ERR_BASE + 205		Directory '%s' not found
	ERR_BASE + 206		Insufficient access
	ERR_BASE + 207		File already exists
	ERR_BASE + 208		Incorrect password
 	ERR_BASE + 209		Illegal name
 	ERR_BASE + 223		Error not known

	ERR_BASE + 224		* PrinterLPR error block of 16 errors  *

	ERR_BASE + 240		* Unallocated *


Nick Smith, nas@@ant.co.uk, 01/11/94
@
