head	1.5;
access;
symbols
	Omni-2_30:1.5
	Omni-2_29:1.5
	Omni-2_28:1.5
	Omni-2_27:1.4
	Omni-2_26:1.3
	Omni-2_25:1.3
	Omni-2_24:1.3
	Omni-2_23:1.3
	Omni-2_22:1.2
	Omni-2_21:1.2
	Omni-2_20:1.2
	Omni-2_19:1.2
	Omni-2_18:1.2
	Omni-2_17:1.2
	Omni-2_16:1.2
	Omni-2_15:1.2
	Omni-2_14:1.2
	Omni-2_13:1.2
	Omni-2_12:1.2
	Omni-2_11:1.1
	Omni-2_10:1.1
	Omni-2_09:1.1;
locks; strict;
comment	@# @;


1.5
date	2018.03.15.20.51.56;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	7j2CJaj8MVpr2BuA;

1.4
date	2018.01.29.21.39.36;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	HTYsKv7JAeouKOoA;

1.3
date	2016.09.11.09.53.40;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	JGhMYY8fzJLI4Rlz;

1.2
date	2003.03.18.14.32.03;	author srevill;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.17.09.37.44;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Recreate some lost utils
Trying to enable OmniAccess by just turning on the flag in Startup would lead to failure because the Dormant and KillTask utilities were missing. Manually running the modules worked though.
Dormat/KillTask:Recreate them.
Makefile/StartShare:Install them under Utils/Access rather than in the RMStore since they're not modules.
Startup:Sort out the ensures; don't bother supporting DCI2 any more, since we ensure UtilityModule 3.50 because of some MRS/MSR, also avoids funny business with AUNMsgs.

Version 2.28. Tagged as 'Omni-2_28'
@
text
@| > Omni:Startup
|
| Append this file with commands to load protocol modules.
|
| Program configuration (see User Guide for details).
UnSet Omni$Error
Set Omni$Options        a s1 d1
Set Omni$User           user
|
| Protocol module selection - set to 0 to stop a protocol module loading.
SetEval Omni$LanMan     1
SetEval Omni$Net        0
SetEval Omni$Share      0
SetEval Omni$NFS        0
SetEval Omni$Apple      0
|
| NFS protocol stack (at least DCI-4 Internet)
If Omni$NFS     then RMEnsure Internet  4.03 Set Omni$Error NFS requires a DCI4 Internet stack
If Omni$NFS     then RMEnsure Internet  4.03 SetEval Omni$NFS 0
If Omni$NFS     then If "<NFS$TruncateLength>" = "" Then Set NFS$TruncateLength 30
If Omni$NFS     then Set NFSFiler$Running Yes
If Omni$NFS     then RMEnsure NFS       2.30 RMLoad <Omni$Dir>.RMStore.NFS
If Omni$NFS     then RMEnsure OmniNFS   0.64 RMLoad <Omni$Dir>.RMStore.OmniNFS
|
| LanManager protocol stack (DCI-4 Internet for TCP/IP, or Mbuf Manager for NetBEUI)
If Omni$LanMan  then RMEnsure Internet  4.03 Set Omni$Error LanManager requires a DCI4 Internet stack
If Omni$LanMan  then RMEnsure Internet  4.03 SetEval Omni$LanMan 0
If Omni$LanMan  then RMEnsure MbufManager 0.13 Set Omni$Error LanManager requires a DCI4 MbufManager
If Omni$LanMan  then RMEnsure MbufManager 0.13 SetEval Omni$LanMan 0
|If Omni$LanMan  then Set LanMan$NameServer 127.0.0.1
If Omni$LanMan  then RMEnsure LanManFS  1.80 Run <Omni$Dir>.RMStore.LanManFS
|
| AUN/Econet protocol stack (may be true Econet, or Net-over-IP)
If Omni$Net     then RMEnsure NetFS     0.00 RMEnsure Net 0.00 Set Omni$Error NetFS requires Econet hardware or AUN
If Omni$Net     then RMEnsure NetFS     0.00 RMEnsure Net 0.00 SetEval Omni$Net 0
If Omni$Net     then RMEnsure NetFiler  1.14 RMLoad <Omni$Dir>.RMStore.NetFiler
|
| Access/Access+ protocol stack (at least DCI-4 Internet)
If Omni$Share   then RMEnsure Internet  4.03 Set Omni$Error Access requires a DCI4 Internet stack
If Omni$Share   then RMEnsure Internet  4.03 SetEval Omni$Share 0
If Omni$Share   then Run Omni:StartShare
|
| AppleTalk protocol stack (at least Mbuf Manager)
If Omni$Apple   then RMEnsure MbufManager 0.13 Set Omni$Error Access requires a DCI4 MbufManager
If Omni$Apple   then RMEnsure MbufManager 0.13 SetEval Omni$Apple 0
If Omni$Apple   then RMEnsure UtilityModule 3.70 RMEnsure CallASWI 0.01 RMLoad System:Modules.CallASWI
If Omni$Apple   then RMEnsure AppleTalk 0.33 RMLoad <Omni$Dir>.RMStore.AppleTalk
|
| Append new protocol module commands here:

|
| UnSet our temporary variables
UnSet Omni$LanMan
UnSet Omni$Net
UnSet Omni$Share
UnSet Omni$NFS
UnSet Omni$Apple
@


1.4
log
@Add OmniNFS resources
Install the hi-res sprites for OmniNFS, and tidy up the Startup script to require DCI4 minimum (since it's built with COMPAT_INET4.
Trim out an unused error string.

Version 2.27. Tagged as 'Omni-2_27'
@
text
@d5 1
a5 1
| Program configuration (see manual for details).
d33 1
a33 1
| AUN/Econet protocol stack (may be true Econet, or Internet/InternetA-based)
d38 3
a40 3
| Access/Access+ protocol stack (at least DCI-2 InternetA)
If Omni$Share   then RMEnsure Internet  0.00 RMEnsure InternetA 0.00 Set Omni$Error Access requires AUN or an Internet stack
If Omni$Share   then RMEnsure Internet  0.00 RMEnsure InternetA 0.00 SetEval Omni$Share 0
@


1.3
log
@Install NetFiler icons to !Omni
Also, in the various script files, stop abusing <Omni$Path> variable, use it as Omni: like it was intended.

Version 2.23. Tagged as 'Omni-2_23'
@
text
@d17 3
a19 3
| NFS protocol stack (at least DCI-2 Internet)
If Omni$NFS     then RMEnsure Internet  0.00 Set Omni$Error NFS requires an Internet stack
If Omni$NFS     then RMEnsure Internet  0.00 SetEval Omni$NFS 0
d26 1
a26 1
If Omni$LanMan  then RMEnsure Internet  4.03 Set Omni$Error LanManager TCP/IP requires a DCI4 Internet stack
a52 1
UnSet Omni$NFS
d56 1
@


1.2
log
@Adds BASIC version of houron and houroff so it'll run on machines with
old HourGlass modules (no *HON *HOFF).
Enlarged tiddy little buttons in connection dialogue.
Reorganised iconbar menu so it makes sense,and changed help.
Increased RMEnsure to require Utility module 3.5 due to use of MSR/MRS.

Version 2.12. Tagged as 'Omni-2_12'
@
text
@d1 1
a1 1
| > <Omni$Path>Startup
d41 1
a41 1
If Omni$Share   then Run <Omni$Path>StartShare
@


1.1
log
@  * Fixed Omni$Running system variable bug introduced in previous revision.
  * Fixed bug where Quit->All in expert mode would only quit the filer and
    not the whole filing system.
  * Fixed bug where just quitting the filer and attempting to re-run OmniClient
    would produce the error "Some protocols in the mounts file are not
    available, and have been ignored".
  * Added resources and fleshed-out install phase.
Detail:
  * An internal error would be generated every time the Omni$Running system
    variable was read.  This was my fault, due to a change I made when removing
    the s.Base file in the previous revision .  The code variable block used
    to reference a location defined in s.Base, in which to store the generated
    string in.  I changed this to store it in the code variable block directly,
    but forgot to change an LDR to an ADR at the same time.

  * The application cleanup code was calling InitVars to reset global variables
    to their initial state, thus trashing the global_run_state variable which
    indicated that the entire filing system should be killed.  This was
    overly paranoid, as InitVars is always called on initialisation, which is
    perfectly adequete.  c.corefini removed as a result, as all it did was
    call InitVars.

  * The failure to restart cleanly on every 2nd attempt was caused by a
    horrible interaction between OmniClient's finalisation code, it's !Run
    file, callbacks and service calls.  It's too complicated to explain here,
    so if you're interested then ask me.  It's been hackily fixed for now by
    placing a call to Inet:Utils.TriggerCBs in Omni's !Run file, between the
    place where it kills the OmniClient module and reloads it (if it detects
    that the module is still running, but the task is not).  A cleaner solution
    should be implemented by making OmniClient able to restart its task in an
    intelligent manner, without requiring the module to be killed.

  * Previously, only Messages, Templates and Templates3D resource files were
    present, and nothing was done with them.  Added the remaining resources
    and fleshed-out the install phase to contruct the full application
    distribution instead of just copying the OmniClient module.
Admin:
  Tested on a Risc PC.

Version 2.09. Tagged as 'Omni-2_09'
@
text
@d7 2
a8 2
Set Omni$Options 	a s1 d1
Set Omni$User 		user
d11 5
a15 5
SetEval Omni$LanMan	1
SetEval	Omni$Net	1
SetEval	Omni$Share	1
SetEval	Omni$NFS	1
SetEval	Omni$Apple	0
d18 6
a23 6
If Omni$NFS 	then RMEnsure Internet 	0.00 Set Omni$Error NFS requires an Internet stack
If Omni$NFS 	then RMEnsure Internet 	0.00 SetEval Omni$NFS 0
If Omni$NFS 	then If "<NFS$TruncateLength>" = "" Then Set NFS$TruncateLength 30
If Omni$NFS 	then Set NFSFiler$Running Yes
If Omni$NFS 	then RMEnsure NFS  	2.30 RMLoad <Omni$Dir>.RMStore.NFS
If Omni$NFS 	then RMEnsure OmniNFS  	0.64 RMLoad <Omni$Dir>.RMStore.OmniNFS
d26 4
a29 4
If Omni$LanMan 	then RMEnsure Internet 	4.03 Set Omni$Error LanManager TCP/IP requires a DCI4 Internet stack
If Omni$LanMan 	then RMEnsure Internet 	4.03 SetEval Omni$LanMan 0
If Omni$LanMan 	then RMEnsure MbufManager 0.13 Set Omni$Error LanManager requires a DCI4 MbufManager
If Omni$LanMan 	then RMEnsure MbufManager 0.13 SetEval Omni$LanMan 0
d31 1
a31 1
If Omni$LanMan 	then RMEnsure LanManFS 	1.80 Run <Omni$Dir>.RMStore.LanManFS
d34 3
a36 3
If Omni$Net	then RMEnsure NetFS 	0.00 RMEnsure Net 0.00 Set Omni$Error NetFS requires Econet hardware or AUN
If Omni$Net	then RMEnsure NetFS 	0.00 RMEnsure Net 0.00 SetEval Omni$Net 0
If Omni$Net 	then RMEnsure NetFiler 	1.14 RMLoad <Omni$Dir>.RMStore.NetFiler
d39 3
a41 3
If Omni$Share	then RMEnsure Internet 	0.00 RMEnsure InternetA 0.00 Set Omni$Error Access requires AUN or an Internet stack
If Omni$Share	then RMEnsure Internet 	0.00 RMEnsure InternetA 0.00 SetEval Omni$Share 0
If Omni$Share	then Run <Omni$Path>StartShare
d44 4
a47 4
If Omni$Apple 	then RMEnsure MbufManager 0.13 Set Omni$Error Access requires a DCI4 MbufManager
If Omni$Apple 	then RMEnsure MbufManager 0.13 SetEval Omni$Apple 0
If Omni$Apple 	then RMEnsure UtilityModule 3.70 RMEnsure CallASWI 0.01 RMLoad System:Modules.CallASWI
If Omni$Apple	then RMEnsure AppleTalk	0.33 RMLoad <Omni$Dir>.RMStore.AppleTalk
@

