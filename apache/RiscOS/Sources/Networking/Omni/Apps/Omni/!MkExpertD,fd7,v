head	1.1;
access;
symbols
	Omni-2_30:1.1
	Omni-2_29:1.1
	Omni-2_28:1.1
	Omni-2_27:1.1
	Omni-2_26:1.1
	Omni-2_25:1.1
	Omni-2_24:1.1
	Omni-2_23:1.1
	Omni-2_22:1.1
	Omni-2_21:1.1
	Omni-2_20:1.1
	Omni-2_19:1.1
	Omni-2_18:1.1
	Omni-2_17:1.1
	Omni-2_16:1.1
	Omni-2_15:1.1
	Omni-2_14:1.1
	Omni-2_13:1.1
	Omni-2_12:1.1
	Omni-2_11:1.1
	Omni-2_10:1.1
	Omni-2_09:1.1;
locks; strict;
comment	@# @;


1.1
date	2000.08.17.09.37.44;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  * Fixed Omni$Running system variable bug introduced in previous revision.
  * Fixed bug where Quit->All in expert mode would only quit the filer and
    not the whole filing system.
  * Fixed bug where just quitting the filer and attempting to re-run OmniClient
    would produce the error "Some protocols in the mounts file are not
    available, and have been ignored".
  * Added resources and fleshed-out install phase.
Detail:
  * An internal error would be generated every time the Omni$Running system
    variable was read.  This was my fault, due to a change I made when removing
    the s.Base file in the previous revision .  The code variable block used
    to reference a location defined in s.Base, in which to store the generated
    string in.  I changed this to store it in the code variable block directly,
    but forgot to change an LDR to an ADR at the same time.

  * The application cleanup code was calling InitVars to reset global variables
    to their initial state, thus trashing the global_run_state variable which
    indicated that the entire filing system should be killed.  This was
    overly paranoid, as InitVars is always called on initialisation, which is
    perfectly adequete.  c.corefini removed as a result, as all it did was
    call InitVars.

  * The failure to restart cleanly on every 2nd attempt was caused by a
    horrible interaction between OmniClient's finalisation code, it's !Run
    file, callbacks and service calls.  It's too complicated to explain here,
    so if you're interested then ask me.  It's been hackily fixed for now by
    placing a call to Inet:Utils.TriggerCBs in Omni's !Run file, between the
    place where it kills the OmniClient module and reloads it (if it detects
    that the module is still running, but the task is not).  A cleaner solution
    should be implemented by making OmniClient able to restart its task in an
    intelligent manner, without requiring the module to be killed.

  * Previously, only Messages, Templates and Templates3D resource files were
    present, and nothing was done with them.  Added the remaining resources
    and fleshed-out the install phase to contruct the full application
    distribution instead of just copying the OmniClient module.
Admin:
  Tested on a Risc PC.

Version 2.09. Tagged as 'Omni-2_09'
@
text
@| Copyright 2000 Pace Micro Technology plc
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
Dir <Obey$Dir>
WimpSlot 2048k
amu_machine debug EXPERT="-DEXPERT" THROWBACK=-throwback
@
