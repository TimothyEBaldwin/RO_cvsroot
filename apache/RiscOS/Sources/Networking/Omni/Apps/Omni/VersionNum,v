head	1.27;
access;
symbols
	Omni-2_30:1.27
	Omni-2_29:1.26
	Omni-2_28:1.25
	Omni-2_27:1.24
	Omni-2_26:1.23
	Omni-2_25:1.22
	Omni-2_24:1.21
	Omni-2_23:1.20
	Omni-2_22:1.19
	Omni-2_21:1.18
	Omni-2_20:1.17
	Omni-2_19:1.16
	Omni-2_18:1.15
	Omni-2_17:1.14
	Omni-2_16:1.13
	Omni-2_15:1.12
	Omni-2_14:1.11
	Omni-2_13:1.10
	Omni-2_12:1.9
	Omni-2_11:1.8
	Omni-2_10:1.7
	Omni-2_09:1.6
	Omni-2_08:1.5
	Omni-2_07:1.4
	Omni-2_06:1.3
	Omni-2_05:1.2;
locks; strict;
comment	@# @;


1.27
date	2018.09.20.21.05.35;	author rsprowson;	state Exp;
branches;
next	1.26;
commitid	ljMsoSQjcEAv2TSA;

1.26
date	2018.08.27.09.33.07;	author rsprowson;	state Exp;
branches;
next	1.25;
commitid	hi2AP29BjgzMYJPA;

1.25
date	2018.03.15.20.51.48;	author rsprowson;	state Exp;
branches;
next	1.24;
commitid	7j2CJaj8MVpr2BuA;

1.24
date	2018.01.29.21.39.30;	author rsprowson;	state Exp;
branches;
next	1.23;
commitid	HTYsKv7JAeouKOoA;

1.23
date	2017.05.21.08.36.00;	author rsprowson;	state Exp;
branches;
next	1.22;
commitid	4xmHSuHvaw6UxeSz;

1.22
date	2016.09.28.22.06.02;	author rsprowson;	state Exp;
branches;
next	1.21;
commitid	gnOuoDeZKJR7A6oz;

1.21
date	2016.09.24.10.58.35;	author rsprowson;	state Exp;
branches;
next	1.20;
commitid	vqcfLpgQE8f71xnz;

1.20
date	2016.09.11.09.53.34;	author rsprowson;	state Exp;
branches;
next	1.19;
commitid	JGhMYY8fzJLI4Rlz;

1.19
date	2016.09.10.18.32.06;	author rsprowson;	state Exp;
branches;
next	1.18;
commitid	o6STXeGW5koBYLlz;

1.18
date	2015.02.01.10.25.42;	author rsprowson;	state Exp;
branches;
next	1.17;
commitid	TBqB5VZAzQbz9i8y;

1.17
date	2014.08.06.20.53.48;	author rsprowson;	state Exp;
branches;
next	1.16;
commitid	BqXL5wzJunJLnlLx;

1.16
date	2013.11.22.17.56.49;	author rsprowson;	state Exp;
branches;
next	1.15;
commitid	9mAsVrxUXmieFiex;

1.15
date	2013.03.14.20.18.37;	author rsprowson;	state Exp;
branches;
next	1.14;
commitid	6rnS12BNmFl5ANHw;

1.14
date	2012.08.29.20.07.46;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	FFRNeJSOf4FXQtiw;

1.13
date	2011.12.14.13.50.57;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	Zvyz3NZzpUnQ5aLv;

1.12
date	2009.10.01.17.15.50;	author srevill;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.23.14.04.48;	author rool;	state Exp;
branches;
next	1.10;

1.10
date	2004.09.02.22.46.08;	author jballance;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.18.14.32.01;	author srevill;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.24.19.14.15;	author rsprowson;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.05.10.39.25;	author blaughto;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.17.09.37.44;	author blaughto;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.16.18.28.03;	author blaughto;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.12.17.06.27;	author blaughto;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.23.17.44.09;	author blaughto;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.19.24.13;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.07.19.11.34;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Various fixes
Events.c: refactor ActiveMounts() to not return a pointer to a local buffer array; avoid potential NULL pointer issue on 'ir'.
FileType.c: avoid undefined sprintf() when destination appears as one of the args
List.c: defer dereferencing 'wr' until checked for NULL
Print.c: don't leak 'tmp' on error
Parse.c: defer dereferencing 'wr' until checked for NULL, tweak dprintf() to avoid potential NULL pointer read in debug output
Found by cppcheck static analysis.

Version 2.30. Tagged as 'Omni-2_30'
@
text
@/* (2.30)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        2.30
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                20 Sep 2018

#define Module_MajorVersion             "2.30"
#define Module_Version                  230
#define Module_MinorVersion             ""
#define Module_Date                     "20 Sep 2018"

#define Module_ApplicationDate          "20-Sep-18"

#define Module_ComponentName            "Omni"
#define Module_ComponentPath            "castle/RiscOS/Sources/Networking/Omni/Apps/Omni"

#define Module_FullVersion              "2.30"
#define Module_HelpVersion              "2.30 (20 Sep 2018)"
#define Module_LibraryVersionInfo       "2:30"
@


1.26
log
@Build fix
Missing header added for netdb (see TCPIPLibs-5_66).

Version 2.29. Tagged as 'Omni-2_29'
@
text
@d1 1
a1 1
/* (2.29)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.29
d9 1
a9 1
#define Module_Date_CMHG                27 Aug 2018
d11 2
a12 2
#define Module_MajorVersion             "2.29"
#define Module_Version                  229
d14 1
a14 1
#define Module_Date                     "27 Aug 2018"
d16 1
a16 1
#define Module_ApplicationDate          "27-Aug-18"
d21 3
a23 3
#define Module_FullVersion              "2.29"
#define Module_HelpVersion              "2.29 (27 Aug 2018)"
#define Module_LibraryVersionInfo       "2:29"
@


1.25
log
@Recreate some lost utils
Trying to enable OmniAccess by just turning on the flag in Startup would lead to failure because the Dormant and KillTask utilities were missing. Manually running the modules worked though.
Dormat/KillTask:Recreate them.
Makefile/StartShare:Install them under Utils/Access rather than in the RMStore since they're not modules.
Startup:Sort out the ensures; don't bother supporting DCI2 any more, since we ensure UtilityModule 3.50 because of some MRS/MSR, also avoids funny business with AUNMsgs.

Version 2.28. Tagged as 'Omni-2_28'
@
text
@d1 1
a1 1
/* (2.28)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.28
d9 1
a9 1
#define Module_Date_CMHG                15 Mar 2018
d11 2
a12 2
#define Module_MajorVersion             "2.28"
#define Module_Version                  228
d14 1
a14 1
#define Module_Date                     "15 Mar 2018"
d16 1
a16 1
#define Module_ApplicationDate          "15-Mar-18"
d21 3
a23 3
#define Module_FullVersion              "2.28"
#define Module_HelpVersion              "2.28 (15 Mar 2018)"
#define Module_LibraryVersionInfo       "2:28"
@


1.24
log
@Add OmniNFS resources
Install the hi-res sprites for OmniNFS, and tidy up the Startup script to require DCI4 minimum (since it's built with COMPAT_INET4.
Trim out an unused error string.

Version 2.27. Tagged as 'Omni-2_27'
@
text
@d1 1
a1 1
/* (2.27)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.27
d9 1
a9 1
#define Module_Date_CMHG                29 Jan 2018
d11 2
a12 2
#define Module_MajorVersion             "2.27"
#define Module_Version                  227
d14 1
a14 1
#define Module_Date                     "29 Jan 2018"
d16 1
a16 1
#define Module_ApplicationDate          "29-Jan-18"
d21 3
a23 3
#define Module_FullVersion              "2.27"
#define Module_HelpVersion              "2.27 (29 Jan 2018)"
#define Module_LibraryVersionInfo       "2:27"
@


1.23
log
@Add sprites for OmniAccess
Deeper colour themes-based sprites for disc based OmniAccess.

Version 2.26. Tagged as 'Omni-2_26'
@
text
@d1 1
a1 1
/* (2.26)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.26
d9 1
a9 1
#define Module_Date_CMHG                21 May 2017
d11 2
a12 2
#define Module_MajorVersion             "2.26"
#define Module_Version                  226
d14 1
a14 1
#define Module_Date                     "21 May 2017"
d16 1
a16 1
#define Module_ApplicationDate          "21-May-17"
d21 3
a23 3
#define Module_FullVersion              "2.26"
#define Module_HelpVersion              "2.26 (21 May 2017)"
#define Module_LibraryVersionInfo       "2:26"
@


1.22
log
@Bump up the username limit
The user name field had a miserly 32 character limit, while the password field is 64. Align them both (internally they're stored in malloc'd strings so there's no inherent application limit).

Version 2.25. Tagged as 'Omni-2_25'
@
text
@d1 1
a1 1
/* (2.25)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.25
d9 1
a9 1
#define Module_Date_CMHG                28 Sep 2016
d11 2
a12 2
#define Module_MajorVersion             "2.25"
#define Module_Version                  225
d14 1
a14 1
#define Module_Date                     "28 Sep 2016"
d16 1
a16 1
#define Module_ApplicationDate          "28-Sep-16"
d21 3
a23 3
#define Module_FullVersion              "2.25"
#define Module_HelpVersion              "2.25 (28 Sep 2016)"
#define Module_LibraryVersionInfo       "2:25"
@


1.21
log
@Add support for drag-to-iconbar for all of Omni's clients
The bones of support for this were already present, but disabled by the 'EXPERT' switch.
Since the other filers have supported the operation since Ursula, enable & refactor the code to use the same protocol the other filers use.
Allow a non root destinate to be used if the variable 'FSTitle + Filer$DefaultDir' is set.
Remove dead UserDrag code.
Tested with LanManFS and (Omni) NetFiler.

Version 2.24. Tagged as 'Omni-2_24'
@
text
@d1 1
a1 1
/* (2.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.24
d9 1
a9 1
#define Module_Date_CMHG                24 Sep 2016
d11 2
a12 2
#define Module_MajorVersion             "2.24"
#define Module_Version                  224
d14 1
a14 1
#define Module_Date                     "24 Sep 2016"
d16 1
a16 1
#define Module_ApplicationDate          "24-Sep-16"
d21 3
a23 3
#define Module_FullVersion              "2.24"
#define Module_HelpVersion              "2.24 (24 Sep 2016)"
#define Module_LibraryVersionInfo       "2:24"
@


1.20
log
@Install NetFiler icons to !Omni
Also, in the various script files, stop abusing <Omni$Path> variable, use it as Omni: like it was intended.

Version 2.23. Tagged as 'Omni-2_23'
@
text
@d1 1
a1 1
/* (2.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.23
d9 1
a9 1
#define Module_Date_CMHG                11 Sep 2016
d11 2
a12 2
#define Module_MajorVersion             "2.23"
#define Module_Version                  223
d14 1
a14 1
#define Module_Date                     "11 Sep 2016"
d16 1
a16 1
#define Module_ApplicationDate          "11-Sep-16"
d21 3
a23 3
#define Module_FullVersion              "2.23"
#define Module_HelpVersion              "2.23 (11 Sep 2016)"
#define Module_LibraryVersionInfo       "2:23"
@


1.19
log
@Export some Omni constants
Create an export Interface/OmniClient.h with the SWI numbers and subreason codes in.
Use these in Client.c in place of local copy.
Minor typos in Docs/SWI_Spec corrected.

Version 2.22. Tagged as 'Omni-2_22'
@
text
@d1 1
a1 1
/* (2.22)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.22
d9 1
a9 1
#define Module_Date_CMHG                10 Sep 2016
d11 2
a12 2
#define Module_MajorVersion             "2.22"
#define Module_Version                  222
d14 1
a14 1
#define Module_Date                     "10 Sep 2016"
d16 1
a16 1
#define Module_ApplicationDate          "10-Sep-16"
d21 3
a23 3
#define Module_FullVersion              "2.22"
#define Module_HelpVersion              "2.22 (10 Sep 2016)"
#define Module_LibraryVersionInfo       "2:22"
@


1.18
log
@Fix for menu opening position
Was trying to open its file server menu at x-72,y+16 not realising that the 'Desk' library already did the correct x-64,y+0 offset for you, leading to double adjustment fun.

Version 2.21. Tagged as 'Omni-2_21'
@
text
@d1 1
a1 1
/* (2.21)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.21
d9 1
a9 1
#define Module_Date_CMHG                01 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "2.21"
#define Module_Version                  221
d14 1
a14 1
#define Module_Date                     "01 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "01-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "2.21"
#define Module_HelpVersion              "2.21 (01 Feb 2015)"
#define Module_LibraryVersionInfo       "2:21"
@


1.17
log
@Get version number from messages file

Version 2.20. Tagged as 'Omni-2_20'
@
text
@d1 1
a1 1
/* (2.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.20
d9 1
a9 1
#define Module_Date_CMHG                06 Aug 2014
d11 2
a12 2
#define Module_MajorVersion             "2.20"
#define Module_Version                  220
d14 1
a14 1
#define Module_Date                     "06 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-14"
d21 3
a23 3
#define Module_FullVersion              "2.20"
#define Module_HelpVersion              "2.20 (06 Aug 2014)"
#define Module_LibraryVersionInfo       "2:20"
@


1.16
log
@Allow OmniClient clients to provide theme specific sprites
OmniClient will now check its disc based sprites to see if there are any higher res or theme specific ones available (if there aren't then it is still assumed that the client has *ICONSPRITES'd his own as before).
No longer looks for "_22" suffix manually, the Wimp will do that for us.
Added file type sprites extracted from earlier CVS history.
New application sprites for Morris4 and Ursula imported, thanks to Chris Wraight for these.

Version 2.19. Tagged as 'Omni-2_19'
@
text
@d1 1
a1 1
/* (2.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.19
d9 1
a9 1
#define Module_Date_CMHG                22 Nov 2013
d11 2
a12 2
#define Module_MajorVersion             "2.19"
#define Module_Version                  219
d14 1
a14 1
#define Module_Date                     "22 Nov 2013"
d16 1
a16 1
#define Module_ApplicationDate          "22-Nov-13"
d21 3
a23 3
#define Module_FullVersion              "2.19"
#define Module_HelpVersion              "2.19 (22 Nov 2013)"
#define Module_LibraryVersionInfo       "2:19"
@


1.15
log
@Write out choices to <Choices$Write> rather than inside the application directory
UK/Messages: English for "update" was trapped in the C code rather than in the messages
Filer.c/CoreInit.c: name the application as OmniClient
FileType.c: Try Choices first then Omni:
Mount.c: Write to <Choices$Write>, for reading try Choices first then Omni:
Defs.h: Change app_FILES to "Omni:" so path names using this define are proper

Version 2.18. Tagged as 'Omni-2_18'
@
text
@d1 1
a1 1
/* (2.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.18
d9 1
a9 1
#define Module_Date_CMHG                14 Mar 2013
d11 2
a12 2
#define Module_MajorVersion             "2.18"
#define Module_Version                  218
d14 1
a14 1
#define Module_Date                     "14 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "14-Mar-13"
d21 3
a23 3
#define Module_FullVersion              "2.18"
#define Module_HelpVersion              "2.18 (14 Mar 2013)"
#define Module_LibraryVersionInfo       "2:18"
@


1.14
log
@Import of missing Sprites11 file
Lost in time and space.

Version 2.17. Tagged as 'Omni-2_17'
@
text
@d1 1
a1 1
/* (2.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.17
d9 1
a9 1
#define Module_Date_CMHG                29 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "2.17"
#define Module_Version                  217
d14 1
a14 1
#define Module_Date                     "29 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "29-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "2.17"
#define Module_HelpVersion              "2.17 (29 Aug 2012)"
#define Module_LibraryVersionInfo       "2:17"
@


1.13
log
@Resolve some warnings.
Was actually looking for a different problem, turned out to be nothing to do with OmniClient.

Version 2.16. Tagged as 'Omni-2_16'
@
text
@d1 1
a1 1
/* (2.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.16
d9 1
a9 1
#define Module_Date_CMHG                14 Dec 2011
d11 2
a12 2
#define Module_MajorVersion             "2.16"
#define Module_Version                  216
d14 1
a14 1
#define Module_Date                     "14 Dec 2011"
d16 1
a16 1
#define Module_ApplicationDate          "14-Dec-11"
d21 3
a23 3
#define Module_FullVersion              "2.16"
#define Module_HelpVersion              "2.16 (14 Dec 2011)"
#define Module_LibraryVersionInfo       "2:16"
@


1.12
log
@Fixed export phase and clean phase.

Detail:
  * Clean phase no longer generates (ignored) errors and actual errors.
  * Export phase no longer falls over
  * Removed some cruft relating to MemCheck
  * Added a stripdepnd to the !MkClean script - over-engineering
Admin:
  Tested briefly for Disc build.
Note:
  The export phase error from Make was completely misleading as it was
  quoting a completely wrong line number! I have no idea how it arrived
  at the line number it did for the "mal-formed suffix rule". The line it
  quoted happened to be in the middle of a bunch of suffix rules but these
  were totally unrelated - even if you commented the whole block out, it'd
  report that line as being the problem!! Doh.

Version 2.15. Tagged as 'Omni-2_15'
@
text
@d1 1
a1 1
/* (2.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.15
d9 1
a9 1
#define Module_Date_CMHG                01 Oct 2009
d11 2
a12 2
#define Module_MajorVersion             "2.15"
#define Module_Version                  215
d14 1
a14 1
#define Module_Date                     "01 Oct 2009"
d16 1
a16 1
#define Module_ApplicationDate          "01-Oct-09"
d21 3
a23 3
#define Module_FullVersion              "2.15"
#define Module_HelpVersion              "2.15 (01 Oct 2009)"
#define Module_LibraryVersionInfo       "2:15"
@


1.11
log
@  Removed MemCheck dependencies. Minor fix in !Run file.
Detail:
  As summary for MemCheck. !Run file use of "<Omni$Path>Start" changed
  to "Run Omni:Start", to properly support multiple paths set inside
  "Omni$Path" (in case anyone does that).
Admin:
  Tested with Tungsten env file on a Batch 5 tree using !Mk* Obey files.


Version 2.14. Tagged as 'Omni-2_14'
@
text
@d1 1
a1 1
/* (2.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.14
d9 1
a9 1
#define Module_Date_CMHG                23 Apr 2009
d11 2
a12 2
#define Module_MajorVersion             "2.14"
#define Module_Version                  214
d14 1
a14 1
#define Module_Date                     "23 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "23-Apr-09"
d21 3
a23 3
#define Module_FullVersion              "2.14"
#define Module_HelpVersion              "2.14 (23 Apr 2009)"
#define Module_LibraryVersionInfo       "2:14"
@


1.10
log
@  2 bug fixes to avoid AODT failures

Detail:
  c.FileType c. 298 .. initialise strings to null
  c.Event c.line 1943 .. dont use mw if it has been freed

Admin:
  tested at castle
  castle added ip


Version 2.13. Tagged as 'Omni-2_13'
@
text
@d1 1
a1 1
/* (2.13)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.13
d9 1
a9 1
#define Module_Date_CMHG                02 Sep 2004
d11 2
a12 2
#define Module_MajorVersion             "2.13"
#define Module_Version                  213
d14 1
a14 1
#define Module_Date                     "02 Sep 2004"
d16 1
a16 1
#define Module_ApplicationDate          "02-Sep-04"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Networking/Omni/Apps/Omni"
d21 3
a23 3
#define Module_FullVersion              "2.13"
#define Module_HelpVersion              "2.13 (02 Sep 2004)"
#define Module_LibraryVersionInfo       "2:13"
@


1.9
log
@Adds BASIC version of houron and houroff so it'll run on machines with
old HourGlass modules (no *HON *HOFF).
Enlarged tiddy little buttons in connection dialogue.
Reorganised iconbar menu so it makes sense,and changed help.
Increased RMEnsure to require Utility module 3.5 due to use of MSR/MRS.

Version 2.12. Tagged as 'Omni-2_12'
@
text
@d1 1
a1 1
/* (2.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.12
d9 1
a9 1
#define Module_Date_CMHG                18 Mar 2003
d11 2
a12 2
#define Module_MajorVersion             "2.12"
#define Module_Version                  212
d14 1
a14 1
#define Module_Date                     "18 Mar 2003"
d16 1
a16 1
#define Module_ApplicationDate          "18-Mar-03"
d21 3
a23 3
#define Module_FullVersion              "2.12"
#define Module_HelpVersion              "2.12 (18 Mar 2003)"
#define Module_LibraryVersionInfo       "2:12"
@


1.8
log
@Put util binaries in the attic
Deleted a few ^ in the veneers to gain 32 bit compatibility
Info template resized to match Edit
Ant and Acorn contact addresses removed from !Help
The makefile for this is seriously broken,for example MkClean appears
to compile it!

Version 2.11. Tagged as 'Omni-2_11'
@
text
@d1 1
a1 1
/* (2.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.11
d9 1
a9 1
#define Module_Date_CMHG                24 Nov 2002
d11 2
a12 2
#define Module_MajorVersion             "2.11"
#define Module_Version                  211
d14 1
a14 1
#define Module_Date                     "24 Nov 2002"
d16 1
a16 1
#define Module_ApplicationDate          "24-Nov-02"
d21 3
a23 3
#define Module_FullVersion              "2.11"
#define Module_HelpVersion              "2.11 (24 Nov 2002)"
#define Module_LibraryVersionInfo       "2:11"
@


1.7
log
@  32 bit compatible.
Detail:
  Copied flag fiddling code is fsentry_common (_Veneers.s) from LanManFS.
Admin:
  Built and ran 26bit and 32bit versions, both seem to work.

Version 2.10. Tagged as 'Omni-2_10'
@
text
@d1 1
a1 1
/* (2.10)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        2.10
d9 1
a9 1
#define Module_Date_CMHG                05 Dec 2000
d11 2
a12 2
#define Module_MajorVersion             "2.10"
#define Module_Version                  210
d14 1
a14 1
#define Module_Date                     "05 Dec 2000"
d16 1
a16 2
#define Module_ApplicationDate2         "05-Dec-00"
#define Module_ApplicationDate4         "05-Dec-2000"
d21 3
a23 2
#define Module_FullVersion              "2.10"
#define Module_HelpVersion              "2.10 (05 Dec 2000)"
@


1.6
log
@  * Fixed Omni$Running system variable bug introduced in previous revision.
  * Fixed bug where Quit->All in expert mode would only quit the filer and
    not the whole filing system.
  * Fixed bug where just quitting the filer and attempting to re-run OmniClient
    would produce the error "Some protocols in the mounts file are not
    available, and have been ignored".
  * Added resources and fleshed-out install phase.
Detail:
  * An internal error would be generated every time the Omni$Running system
    variable was read.  This was my fault, due to a change I made when removing
    the s.Base file in the previous revision .  The code variable block used
    to reference a location defined in s.Base, in which to store the generated
    string in.  I changed this to store it in the code variable block directly,
    but forgot to change an LDR to an ADR at the same time.

  * The application cleanup code was calling InitVars to reset global variables
    to their initial state, thus trashing the global_run_state variable which
    indicated that the entire filing system should be killed.  This was
    overly paranoid, as InitVars is always called on initialisation, which is
    perfectly adequete.  c.corefini removed as a result, as all it did was
    call InitVars.

  * The failure to restart cleanly on every 2nd attempt was caused by a
    horrible interaction between OmniClient's finalisation code, it's !Run
    file, callbacks and service calls.  It's too complicated to explain here,
    so if you're interested then ask me.  It's been hackily fixed for now by
    placing a call to Inet:Utils.TriggerCBs in Omni's !Run file, between the
    place where it kills the OmniClient module and reloads it (if it detects
    that the module is still running, but the task is not).  A cleaner solution
    should be implemented by making OmniClient able to restart its task in an
    intelligent manner, without requiring the module to be killed.

  * Previously, only Messages, Templates and Templates3D resource files were
    present, and nothing was done with them.  Added the remaining resources
    and fleshed-out the install phase to contruct the full application
    distribution instead of just copying the OmniClient module.
Admin:
  Tested on a Risc PC.

Version 2.09. Tagged as 'Omni-2_09'
@
text
@d1 1
a1 1
/* (2.09)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.09
d8 1
a8 1
#define Module_Date_CMHG                17 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "2.09"
#define Module_Version                  209
d13 1
a13 1
#define Module_Date                     "17 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "17-Aug-00"
#define Module_ApplicationDate4         "17-Aug-2000"
d18 5
a22 1
#define Module_FullVersion              "2.09"
@


1.5
log
@  * Fixed Bugzilla ID 21, where typing *RMKill OmniClient from the command
    line would cause the error "free failed, (heap overwritten)" if task part
    of the OmniClient module task was running at the time, rendering
    OmniClient unusable and unloadable until the next reboot.
  * Fixed Bugzilla ID 19, where killing a protocol module when OmniClient was
    already loaded would cause an "Invalid Wimp Operation In This Context"
    error.

  * Miscellaneous bug fixes and tidy-ups.
Detail:
  * The "free failed, (heap overwritten)" error is due to a bug in the
    SharedCLibrary, triggered by OmniClient calling getenv in the C library
    from its task.  The bug results from the implementation of getenv calling
    malloc - see Bugzilla ID 28 for further details.  This has been worked
    around by copying the C Library's getenv routine into OmniClient,
    renaming it to omni_getenv, and making all calls to getenv call
    omni_getenv instead; if the malloc happens from within the task rather
    than from within the C library, then things are fine.
  * The "Invalid Wimp Operation In This Context" error is caused by OmniClient
    calling Wimp_CreateMenu with R0=-1 from within the SWI handler that deals
    with protocol module deregistration.  The reasoning for this is that if,
    for example, you have the Mounts menu open, it becomes invalid at this point
    as all of the dying protocol module's mounts become unavailable.  However,
    it is not legal to call Wimp_CreateMenu at this point as you are not in
    your Wimp task context!

    The call to Wimp_CreateMenu has simply been removed.  This doesn't appear
    to cause a problem if you have a menu open with mounts belonging to the
    dying protocol module - attemping to perform an operation on one causes a
    sensible error to be reported.  A possible future enhancement would be to
    use OmniClient's pollword mechanism to cause the task to close any open
    menus on the module's behalf.

    The reason it never occurred before is that it used to call the X-bit-set
    form of the SWI and didn't check the error returned.  When I modified
    OmniClient to use Desk instead of DeskLib, I changed most SWI calls from
    the task part to be non-X-bit-set calls, and used Desk's psuedo-exception
    system to catch and report all errors at the top level of the
    application.

  * Uses AsmUtils to obtain Image$$RO$$Base.

  * Potential write through null pointer fixed in string duplication routines
    cpystr and cpyrma - they weren't checking the result of their allocation
    calls.

  * Replaced the somewhat confusing all_done variable, which could take (magic)
    values between 0 and 2 inclusive to cause different sorts of quit, with
    an enumerated type called RunState.

  * Issuing of Service_OmniClient (dying) in module finalisation made
    unconditional (was previously conditional on the value of all_done), as it's
    most definitely always dying if the finalisation routine is called.  I
    think this was a hangover from when the module finalisation code was
    implemented as an atexit handler.

  * Exit code in the task does not issue Service_OmniClient (dying) if the
    entire filing system is being killed off - this will happen in module
    finalisation, which will be called as a result of the task calling
    OS_ExitAndDie.  This can only happen in "expert" builds.

  * Fixed allocation of too much memory in ItemParse routine!  It dynamically
    creates an array of pointers to structures, but was allocating enough space
    for an array of structures.

  * Fixed potential memory leak in PrintListServers routine - was calling
    realloc and assigning the result directly to the original pointer, instead
    of assigning it to a temporary and only updating the original poiiner if
    the realloc succeeds.

  * Fixed potential null pointer dereference in SortMessages routine - had a
    check for a null pointer parameter at the start, but managed to dereference
    the pointer before the check as part of a variable initialisation.

  * Added all documents from ANT's Docs directory into ours.

Admin:
  Tested on a Risc PC.
  Fixes Bugzilla bugs 19 & 21.

Version 2.08. Tagged as 'Omni-2_08'
@
text
@d1 1
a1 1
/* (2.08)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.08
d8 1
a8 1
#define Module_Date_CMHG                16 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "2.08"
#define Module_Version                  208
d13 1
a13 1
#define Module_Date                     "16 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "16-Aug-00"
#define Module_ApplicationDate4         "16-Aug-2000"
d18 1
a18 1
#define Module_FullVersion              "2.08"
@


1.4
log
@  Fixed a bug where submenus would sometimes not open.
Detail:
  More fallout from the modifications to use Desk's standard event handling
  mechanisms rather that ANT's customised one.

  Releasing Wimp message event claims in Desk releases all handlers
  registered for that message, not just one.  The Omni code was
  (re)registering the event handlers for all new mounts, so if you had more
  than one mount active and did a dismount, the message event handler would
  be deregistered for all the other active mounts as well.  This means you'd
  no longer revceive MenuWarn messages, so submenus wouldn't be opened.

  All mount event handlers with the exception of the ButtonClick handler are
  now only registered once, irrespective of the number of active mounts, and
  only deregistered once there are no active mounts.  Non-message event
  handlers do not suffer the problem described above, so the ButtonClick
  handler is safe.  The reason it is still registered for each mount is that
  the handler actually uses the user-supplied data for context, whereas none
  of the other handlers did; they obtain it from global variables instead -
  lovely.
Admin:
  Compiled and tested on a Risc PC.

Version 2.07. Tagged as 'Omni-2_07'
@
text
@d1 1
a1 1
/* (2.07)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.07
d8 1
a8 1
#define Module_Date_CMHG                12 Apr 2000
d10 2
a11 2
#define Module_MajorVersion             "2.07"
#define Module_Version                  207
d13 1
a13 1
#define Module_Date                     "12 Apr 2000"
d15 4
a18 1
#define Module_FullVersion              "2.07"
@


1.3
log
@  * Fixed bug which I introduced in previous version, where errors that
    occurred when trying to connect to a mount would cause two errors to be
    reported.
Detail:
  * When I went through blindly changing all _kernel_swi or Desk_SWI calls
    to _swix, I failed to notice that one or two of the calls rely on the
    output parameters being filled in even if an error occurs - _swix does not
    do this.  I've now created a set of type safe C veneers for all calls to
    client modules, which use _swix or _kernel_swi as necessary.  This has the
    additional benefit of making the code more readable and getting rid of
    quite a few uses of magic numbers.
Admin:
  * Compiled and tested on a Risc PC.

Version 2.06. Tagged as 'Omni-2_06'
@
text
@d1 1
a1 1
/* (2.06)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.06
d8 1
a8 1
#define Module_Date_CMHG                23 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "2.06"
#define Module_Version                  206
d13 1
a13 1
#define Module_Date                     "23 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "2.06"
@


1.2
log
@  Several major bugfixes and further tidying to make Omni fit into our
  build environment better.
Detail:
  * Bug fix: ClientList function (Client.c) creates a textual menu desription
    for a list of clients (Info and Mounts submenus).  The description was
    generated on the stack and a pointer to it was returned.  The buffer is now
    static.
  * Bug fix: select or adjust clicks on the Omni icon just after it's loaded
    would kill the task part of Omni.  FilerCreate function (List.c) always
    calls FilerDelete, which would always attempt to close any existing filer
    window.  However, on the first call, no window exists so it passes the Wimp
    a 0 window handle.  This only appeared to happen on RISC OS 4, but I suspect
    this is to do with RISC OS 4's stricter protection of zero page.  Current
    fix is for FilerDelete to check if window handle is 0 before closing it;
    this is not very elegant - would be nicer to only call FilerDelete when the
    window was actually closed.
  * Bug fix: writable icon handling overhauled completely.  Many of the buffers
    which Omni would read the contents of writable icons into were too short
    to hold the maximum amount of text allowed in the icon.  New Icon_GetText
    call added (ExtLib.c) to allow Omni to work directly on indirected icon
    buffers wherever possible, thus removing the whole issue.
  * Stripped commented-out code from several places.
  * Changed use of Desk_bool to bool in most places.  This is a bit grim, but
    the way Desk_bool is implemented means you need to cast it in many places,
    which is even more grim.
  * Removed a few error assignements(!) because
    a) they weren't even being checked
    b) Desk's psuedo-exception system should now catch them
  * Got rid of home-grown strcasecmp calls and used Desk's instead.
  * Removed many local constants definitions and get them from system header
    files instead.
  * Removed Hdrs.h which would include *every* header file in *every* C file
    in the interests of compilation times.  C files now only include what they
    need.
  * Reimplemented the fully recursive Menu_Dispose along the lines of the
    non-recursive Desk_Menu_Dispose, which had changed since ANT's DeskLib
    split-off.
  * Altered quite a bit of code to prevent compiler warnings (mainly
    "use of '=' in condition context" and "variable declared but not used").
  * Uses 'proper' module finalisation instead of atexit in the interests of
    consistency and symmetry.
  * Added MemCheck support.
  * Reimplemented rma_alloc and rma_free in C (side effect of MemCheck support).
  * Altered assembler to use system header files instead of local ones.
  * Omni previously used a seeming random mixture of _kernel_swi and Desk_SWI
    SWI veneers.  All have now been changed to use _swix/_swi as appropriate.
  * Converted to use srccommit.
Admin:
  Files removed:
   c.Error
   c.StrCaseCmp
   h.Debug
   h.Hdrs
   h.ModuleWrap
   h.OmniClient
   h.StrCaseCmp
   hdr.Macros
   hdr.RegDefs
   hdr.SwiNos

  Files added:
   Docs.DeskLibDiffs
   Docs.EventHandling
   h.Omni

  * Compiled.
  * All windows, menus checked to make sure they at least display.
  * Played around with a new NFS and LanMan mounts.
  * Basically, there shouldn't be any showstoppers, but the change from a very
    old DeskLib to Desk is a large one.  I'd be surprised if there aren't a
    few problems and this should definitely be thrashed a bit by people
    willing to do so before anyone has any confidence in it.



Version 2.05. Tagged as 'Omni-2_05'
@
text
@d1 1
a1 1
/* (2.05)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.05
d8 1
a8 1
#define Module_Date_CMHG                07 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "2.05"
#define Module_Version                  205
d13 1
a13 1
#define Module_Date                     "07 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "2.05"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (2.04)
d6 1
a6 1
#define Module_MajorVersion_CMHG        2.04
d10 2
a11 2
#define Module_MajorVersion             "2.04"
#define Module_Version                  204
d15 1
a15 1
#define Module_FullVersion              "2.04"
@

