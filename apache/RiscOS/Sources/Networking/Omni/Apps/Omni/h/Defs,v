head	1.4;
access;
symbols
	Omni-2_30:1.4
	Omni-2_29:1.4
	Omni-2_28:1.4
	Omni-2_27:1.4
	Omni-2_26:1.4
	Omni-2_25:1.4
	Omni-2_24:1.4
	Omni-2_23:1.4
	Omni-2_22:1.4
	Omni-2_21:1.4
	Omni-2_20:1.4
	Omni-2_19:1.4
	Omni-2_18:1.4
	Omni-2_17:1.3
	Omni-2_16:1.3
	Omni-2_15:1.3
	Omni-2_14:1.3
	Omni-2_13:1.3
	Omni-2_12:1.3
	Omni-2_11:1.2
	Omni-2_10:1.2
	Omni-2_09:1.2
	Omni-2_08:1.2
	Omni-2_07:1.2
	Omni-2_06:1.2
	Omni-2_05:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.03.14.20.18.48;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	6rnS12BNmFl5ANHw;

1.3
date	2003.03.18.14.32.04;	author srevill;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.07.19.24.19;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.02.19.41.34;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.03.02.19.41.34;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Write out choices to <Choices$Write> rather than inside the application directory
UK/Messages: English for "update" was trapped in the C code rather than in the messages
Filer.c/CoreInit.c: name the application as OmniClient
FileType.c: Try Choices first then Omni:
Mount.c: Write to <Choices$Write>, for reading try Choices first then Omni:
Defs.h: Change app_FILES to "Omni:" so path names using this define are proper

Version 2.18. Tagged as 'Omni-2_18'
@
text
@/* Copyright 2000 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef Omni_Defs_h
#define Omni_Defs_h

/*
 * Defs.h
 * Main header file for !Omni application - part of the OmniClient project
 */


/* Timebombed for prerelease versions */
#undef  app_TIMED
#undef  app_DELETE

#define app_IMAGE 	"<Omni$Dir>.RMStore.*"
#define app_DIR 	"Omni"
#define app_FILES 	"Omni:"
#define app_NAME 	"OmniClient"


/* Defines for the positions at which items appear on our menus.
 * Note that menu items always start at number 0, so item number 2 is
 * actually the THIRD item in the menu.
 */

/* Icon menu items */
enum imenu
{
  imenu_INFO = 0,
  imenu_SHOWALL,
  imenu_MOUNTS,
  imenu_QUIT,
  imenu_MOUNTINFO,
  imenu_DISMOUNT,
  imenu_OPENROOT,
  imenu_FREE
};

/* Icon info submenu items */
enum imenu_info
{
  iimenu_INFO = 0,
  iimenu_XXX
};

/* Icon mounts submenu items */
enum imenu_mounts
{
  immenu_SAVE = 0,
  immenu_OTHER
};

enum imenu_dismount
{
  idmenu_MOUNT = 0,
  idmenu_ALL
};

enum imenu_quit
{
  iqmenu_FILER = 0,
  iqmenu_ALL
};

/* Main menu items */
enum mmenu
{
  mmenu_DISPLAY = 0,
  mmenu_CONNECT
};

/* Main display menu items */
enum mmenu_display
{
  mdmenu_LARGE = 0,
  mdmenu_SMALL,
  mdmenu_FULL,
  mdmenu_NAME,
  mdmenu_TYPE
};


/* Info fields */
#define info_copy		3
#define info_version		4
#define info_license		9

/* Client Info fields */
#define client_name		0
#define client_author           1
#define client_version          2

/* Mount fields */
#define mount_mount             1
#define mount_server		3
#define mount_path              5
#define mount_user              7
#define mount_password          9
#define mount_auth              11
#define mount_tmount            0
#define mount_tserver		2
#define mount_tpath             4
#define mount_tuser             6
#define mount_tpassword         8
#define mount_tauth             10
#define mount_DELETE            12
#define mount_CANCEL            13
#define mount_CONNECT           14
#define mount_open		15

/* Domain fields */
#define domain_user             3
#define domain_tuser            2
#define domain_password         5
#define domain_tpassword        4
#define domain_domain		1
#define domain_tdomain		0
#define domain_CANCEL           6
#define domain_CONNECT          7
#define domain_DELETE           8

/* Mount Info fields */
#define minfo_server		0
#define minfo_user              1
#define minfo_mount             2
#define minfo_path              3
#define minfo_auth              4
#define minfo_tuser		5
#define minfo_tpath             8
#define minfo_tauth             9

/* Message fields */
#define message_logo		0

/* close fields */
#define close_CLOSE		2
#define close_CANCEL		0
#define close_text		1

#endif
@


1.3
log
@Adds BASIC version of houron and houroff so it'll run on machines with
old HourGlass modules (no *HON *HOFF).
Enlarged tiddy little buttons in connection dialogue.
Reorganised iconbar menu so it makes sense,and changed help.
Increased RMEnsure to require Utility module 3.5 due to use of MSR/MRS.

Version 2.12. Tagged as 'Omni-2_12'
@
text
@d30 2
a31 1
#define app_FILES 	"<Omni$Path>"
@


1.2
log
@  Several major bugfixes and further tidying to make Omni fit into our
  build environment better.
Detail:
  * Bug fix: ClientList function (Client.c) creates a textual menu desription
    for a list of clients (Info and Mounts submenus).  The description was
    generated on the stack and a pointer to it was returned.  The buffer is now
    static.
  * Bug fix: select or adjust clicks on the Omni icon just after it's loaded
    would kill the task part of Omni.  FilerCreate function (List.c) always
    calls FilerDelete, which would always attempt to close any existing filer
    window.  However, on the first call, no window exists so it passes the Wimp
    a 0 window handle.  This only appeared to happen on RISC OS 4, but I suspect
    this is to do with RISC OS 4's stricter protection of zero page.  Current
    fix is for FilerDelete to check if window handle is 0 before closing it;
    this is not very elegant - would be nicer to only call FilerDelete when the
    window was actually closed.
  * Bug fix: writable icon handling overhauled completely.  Many of the buffers
    which Omni would read the contents of writable icons into were too short
    to hold the maximum amount of text allowed in the icon.  New Icon_GetText
    call added (ExtLib.c) to allow Omni to work directly on indirected icon
    buffers wherever possible, thus removing the whole issue.
  * Stripped commented-out code from several places.
  * Changed use of Desk_bool to bool in most places.  This is a bit grim, but
    the way Desk_bool is implemented means you need to cast it in many places,
    which is even more grim.
  * Removed a few error assignements(!) because
    a) they weren't even being checked
    b) Desk's psuedo-exception system should now catch them
  * Got rid of home-grown strcasecmp calls and used Desk's instead.
  * Removed many local constants definitions and get them from system header
    files instead.
  * Removed Hdrs.h which would include *every* header file in *every* C file
    in the interests of compilation times.  C files now only include what they
    need.
  * Reimplemented the fully recursive Menu_Dispose along the lines of the
    non-recursive Desk_Menu_Dispose, which had changed since ANT's DeskLib
    split-off.
  * Altered quite a bit of code to prevent compiler warnings (mainly
    "use of '=' in condition context" and "variable declared but not used").
  * Uses 'proper' module finalisation instead of atexit in the interests of
    consistency and symmetry.
  * Added MemCheck support.
  * Reimplemented rma_alloc and rma_free in C (side effect of MemCheck support).
  * Altered assembler to use system header files instead of local ones.
  * Omni previously used a seeming random mixture of _kernel_swi and Desk_SWI
    SWI veneers.  All have now been changed to use _swix/_swi as appropriate.
  * Converted to use srccommit.
Admin:
  Files removed:
   c.Error
   c.StrCaseCmp
   h.Debug
   h.Hdrs
   h.ModuleWrap
   h.OmniClient
   h.StrCaseCmp
   hdr.Macros
   hdr.RegDefs
   hdr.SwiNos

  Files added:
   Docs.DeskLibDiffs
   Docs.EventHandling
   h.Omni

  * Compiled.
  * All windows, menus checked to make sure they at least display.
  * Played around with a new NFS and LanMan mounts.
  * Basically, there shouldn't be any showstoppers, but the change from a very
    old DeskLib to Desk is a large one.  I'd be surprised if there aren't a
    few problems and this should definitely be thrashed a bit by people
    willing to do so before anyone has any confidence in it.



Version 2.05. Tagged as 'Omni-2_05'
@
text
@d44 1
d46 1
d48 1
a48 3
  imenu_DISMOUNT,
  imenu_FREE,
  imenu_QUIT
@


1.1
log
@Initial revision
@
text
@d15 3
d151 2
@


1.1.1.1
log
@  Initial import of Omni into CVS.

Detail:
  This is an import of the sources obtained from ANT some time ago, with
  sufficient changes to allow it to build in our standard environment.  In
  particular, this involved converting Omni to use Desk instead of DeskLib.
  ANT's DeskLib was not 'off-the-shelf' - it was based on DeskLib 2.04 (very
  old), with their own modifications.
  
  This means that there are quite severe bugs in the Omni code, which will
  show up if you attempt to use this version, which were previously masked by
  some of ANT's DeskLib alterations.  (Hopefully) most of these have already
  been identified, fixed and will be checked-in soon.  I felt that a
  minimal version that would simply build would be worthwhile, so that as
  many changes as possible end up under CVS' control.

Admin:
  Compiled.
  Untested.
@
text
@@
