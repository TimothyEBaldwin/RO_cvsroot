head	4.2;
access;
symbols
	Menu-0_40:4.2
	Menu-0_39:4.2
	Menu-0_38:4.2
	Menu-0_37:4.1
	RO_5_07:4.1
	Menu-0_36:4.1
	nturton_Menu-0_35:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Ursula_RiscPC:4.1.0.10
	Menu-0_35:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	Ursula:4.1.0.8
	Ursula_bp:4.1
	Menu-0_34:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	sbrodie_Menu_0_33:4.1
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Menu_0_31:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Menu_0_30:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2015.08.18.21.37.56;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	ZzWfk8CWMRcyvNxy;

4.1
date	96.11.05.09.22.39;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.22.39;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.43.12;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.14.47;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.38.50;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).

Version 0.38. Tagged as 'Menu-0_38'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   show.c
 * Purpose: show a Menu Object
 * Author:  TGR
 * History: 4-Nov-93: TGR: created
 *
 */


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#include "const.h"
#include "macros.h"
#include "string32.h"
#include "messages.h"
#include "objects/toolbox.h"
#include "objects/menu.h"
#include "debug.h"
#include "mem.h"

#include "object.h"
#include "auxiliary.h"
#include "task.h"

#include "show.h"

_kernel_oserror *show_menu_coords (_kernel_swi_regs *user_regs,DisplayInfo *menu_coords);

extern _kernel_oserror *show_menu (_kernel_swi_regs *r, TaskDescriptor *t)
{

    /*
     * request to show an object
     * R0 = 3
     * R1 = Object ID
     * R2 = internal handle returned when Object was created
     * R3 = wimp task handle of caller (use to identify task descriptor)
     * R4 -> user regs R0-R9
     *      R0 =  flags
     *      R1 =  Object ID
     *      R2 =  type of show
     *      R3 -> buffer giving Object-specific data for showing this
     *            Object
     *      R4 =  Parent Object ID
     *      R5 =  Parent Component ID
     */

    /*
     * Function to "display" an Object on the screen.  If R2 == -1, then
     * display in 64 OS units left of pointer. If R2 == -2, then display
     * 96 OS units from bottom of icon bar.
     * If Object has bit set to say warn before show, then we should just
     * send Toolbox Event, and wait for the next call to Wimp_Poll after
     * the event is delivered before the Object is actually shown
     * (ie catch it in the prefilter).
     *
     */

   _kernel_swi_regs   regs,
                     *user_regs     = (_kernel_swi_regs *) r->r[4];
   _kernel_oserror   *e;
   MenuInternal      *menu_int      = (MenuInternal *) r->r[2];
   ObjectID           object_id     = menu_int->hdr.object_id;
   ToolboxEvent       toolbox_event;
   Menu_AboutToBeShown_Event
                     *menu_atbs;
   DisplayInfo        menu_coords;
   BOOL               is_submenu    = user_regs->r[0] & 2;
   int                count;

   DEBUG debug_output ("s","Menu: entering show, task = 0x%x, menu_int=0x%x, object_id=0x%x\n",(int)t,menu_int,object_id);
   DEBUG if (object_id != (ObjectID) user_regs->r[1] || user_regs->r[1] != r->r[1]) debug_output ("s","Menu: sanity check reveals object ids unequal\n");

   if ((e = show_menu_coords (user_regs,&menu_coords)) != NULL)
       return e;

   global_menu.x          = menu_coords.x;
   global_menu.y          = menu_coords.y;
   global_menu.current    = menu_int;
   global_menu.t          = t;

   if (!is_submenu) {
      global_menu.top = global_menu.current;
   }
   global_menu.flags &= ~GLOBAL_MENU_INFO_FLAGS_SHOW_NEXT;

   r->r[0] = (int) global_menu.current->hdr.wimp_menu;

   count = (menu_int->hdr.flags&MENU_INT_FLAGS_GENERATE_SHOW_EVENT)
           ? ((menu_int->hdr.show_event)
             ? 2
             : 1)
           : 0;

   if (!count) {
      global_menu.flags |= GLOBAL_MENU_INFO_FLAGS_IS_SHOWING;
      return (is_submenu) ? menu_show_submenu_actual () : menu_show_actual ();
   }
   while (count--) {
      if (count) {
         DEBUG debug_output ("s","Menu: sending 0x%x as show_event\n",menu_int->hdr.show_event);
         toolbox_event.hdr.event_code = menu_int->hdr.show_event;
      } else {
         DEBUG debug_output ("s","Menu: sending ordinary show_event\n",menu_int->hdr.show_event);
         toolbox_event.hdr.event_code = Menu_AboutToBeShown;
      }
      /* Show warning flag */

      regs.r[0]                    =  0;                     /* flags*/
      regs.r[1]                    =  r->r[1];               /* Object id */
      regs.r[2]                    =  -1;                    /* Component id */
      regs.r[3]                    =  (int) &toolbox_event;

      toolbox_event.hdr.size       =  sizeof(Menu_AboutToBeShown_Event);
      toolbox_event.hdr.flags      =  /*user_regs->r[0]*/0;

      menu_atbs            = (Menu_AboutToBeShown_Event *) &toolbox_event;
      menu_atbs->show_type = user_regs->r[2];
      menu_atbs->x         = global_menu.x;
      menu_atbs->y         = global_menu.y;

      if ((e = _kernel_swi (Toolbox_RaiseToolboxEvent, &regs, &regs)) != NULL)
         return e;
   }
   return NULL;
}

_kernel_oserror *show_menu_coords (_kernel_swi_regs *user_regs,DisplayInfo *menu_coords) {

   _kernel_oserror  *e;
   _kernel_swi_regs  regs;
   DisplayInfo      *coords      = (DisplayInfo *) user_regs->r[3];
   wimp_PointerInfo  ptr_info;

   switch (user_regs->r[2]) {

      case 1:
      case 2:
         menu_coords->x = coords->x;
         menu_coords->y = coords->y;
         break;
      default:
         regs.r[1] = (int) &ptr_info;

         if ((e = _kernel_swi (Wimp_GetPointerInfo, &regs, &regs)) != NULL) return e;

         menu_coords->x = ptr_info.x - 64;
         menu_coords->y = ptr_info.y;
         break;
   }
   DEBUG debug_output ("s","Menu: show coordinates are (%d,%d)\n",menu_coords->x,menu_coords->y);
   return NULL;
}
@


4.1
log
@Initial revision
@
text
@d33 2
a34 3
#include "objects.toolbox.h"
#include "objects.menu.h"
#include "services.h"
a37 1
#include "Menu.h"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
