head	1.12;
access;
symbols
	Gadgets-0_44:1.12
	Gadgets-0_43:1.12
	Gadgets-0_42:1.12
	Gadgets-0_41:1.12
	Gadgets-0_40:1.12
	Gadgets-0_39:1.12
	Gadgets-0_38:1.11
	Gadgets-0_37:1.10
	Gadgets-0_36:1.9
	Gadgets-0_35:1.8
	Gadgets-0_34:1.8
	Gadgets-0_33:1.8
	Gadgets-0_32:1.7
	Gadgets-0_31:1.7
	Gadgets-0_30:1.6
	Gadgets-0_29:1.5
	Gadgets-0_28:1.5
	RO_5_07:1.4
	Gadgets-0_27:1.4
	Gadgets-0_26:1.4
	Gadgets-0_25:1.4
	Gadgets-0_24:1.3
	Gadgets-0_23:1.3
	Gadgets-0_22:1.3
	Gadgets-0_21:1.3
	Gadgets-0_20:1.3
	Gadgets-0_19:1.3
	Gadgets-0_18:1.3
	Gadgets-0_17:1.3
	Gadgets-0_16:1.3
	Gadgets-0_15:1.3
	sforrest_daytona_appflash-0_31:1.1.1.5.2.3
	Gadgets-0_14:1.2
	mjrobert_Java_26_08_98:1.1.1.8
	blaughto_daytona_appflash-0_30:1.1.1.5.2.3
	blaughto_daytona_appflash-0_29:1.1.1.5.2.3
	blaughto_daytona_appflash-0_28:1.1.1.5.2.3
	Gadgets-0_11:1.2
	sbrodie_TextGadgets_merged_19Jun98:1.2
	sbrodie_Daytona_merge_19Jun98:1.1.1.5.2.3
	sbrodie_Spin_merge_18Jun98:1.1.1.7
	jberanek_gadgets-0_08:1.1.1.5.2.3
	Gadgets-0_10-1_1_2_2:1.1.1.7
	blaughto_daytona_appflash-0_27:1.1.1.5.2.3
	blaughto_daytona_appflash-0_26:1.1.1.5.2.3
	blaughto_daytona_appflash-0_25:1.1.1.5.2.3
	blaughto_daytona_appflash-0_24:1.1.1.5.2.3
	blaughto_daytona_appflash-0_23:1.1.1.5.2.3
	blaughto_daytona_appflash-0_21:1.1.1.5.2.3
	blaughto_daytona_appflash-0_20:1.1.1.5.2.3
	blaughto_daytona_appflash-0_19:1.1.1.5.2.3
	jberanek_gadgets-0_07:1.1.1.5.2.3
	blaughto_daytona_appflash-0_18:1.1.1.5.2.2
	mrison_gadgets-0_06:1.1.1.5.2.2
	pwombwel_0_09:1.1.1.6
	mrison_gadgets-0_05:1.1.1.5.2.1
	Daytona:1.1.1.5.0.2
	Daytona_bp:1.1.1.5
	Spinner_RCA116:1.1.1.4
	Spinner_B20_2:1.1.1.4
	Spinner_19_3:1.1.1.4
	Spinner_B18:1.1.1.4
	Spinner_B17:1.1.1.4
	Spinner_B15:1.1.1.4
	Spinner_B14:1.1.1.4
	Spinner_B13:1.1.1.4
	Spinner_B12:1.1.1.4
	Spinner_B10:1.1.1.1
	Initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2015.10.12.21.17.35;	author rsprowson;	state Exp;
branches;
next	1.11;
commitid	KKgpfp0vznFZCREy;

1.11
date	2015.08.18.21.31.19;	author rsprowson;	state Exp;
branches;
next	1.10;
commitid	IVVb0XmsGA7ktNxy;

1.10
date	2013.08.30.21.32.31;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	Ah6FHegdauBDyw3x;

1.9
date	2013.08.30.19.34.35;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	cFJZhP2Bmu3bUv3x;

1.8
date	2012.01.14.12.56.46;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	82i1vxnSrlbuN8Pv;

1.7
date	2010.02.28.10.40.25;	author rsprowson;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.14.17.32.58;	author srevill;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.09.17.56.26;	author bavison;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.16.17.37.55;	author blaughto;	state Exp;
branches;
next	1.3;

1.3
date	99.03.26.12.25.08;	author ahodgkin;	state Exp;
branches;
next	1.2;

1.2
date	98.06.19.13.04.16;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	97.05.13.16.25.52;	author rlougher;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.13.16.25.52;	author rlougher;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.05.21.12.08.08;	author rlougher;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	97.05.21.13.14.29;	author rlougher;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.05.27.16.10.51;	author nturton;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.10.13.10.56.10;	author rbuckley;	state Exp;
branches
	1.1.1.5.2.1;
next	1.1.1.6;

1.1.1.6
date	98.01.08.14.55.46;	author rlougher;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	98.06.18.15.32.26;	author sbrodie;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	98.08.21.11.56.40;	author mjrobert;	state Exp;
branches;
next	;

1.1.1.5.2.1
date	97.12.16.17.19.42;	author blaughto;	state Exp;
branches;
next	1.1.1.5.2.2;

1.1.1.5.2.2
date	98.01.28.18.15.15;	author mrison;	state Exp;
branches;
next	1.1.1.5.2.3;

1.1.1.5.2.3
date	98.03.16.16.21.23;	author jberanek;	state Exp;
branches;
next	;


desc
@@


1.12
log
@ScrollList gadget redraw fixes
When _set_colour() is called, remember to redraw the gadget if the colours changed.
When _set_font() is called, remember to redraw the gadget and try to preserve the scroll bar positions.
Save a couple of SWIs if we know the scroll bars must jump in 2 other places.
Remove ScrollLisS, its (never called) function did nothing but return.
Removed duplicate redraw_box, same as redraw_all_box and marked as const.

Reported by Fred Graute, reference
  https://www.riscosopen.org/forum/forums/4/topics/3628
the memory leak aspects of the report have been transferred to ticket #414 for later consideration.
Tested with !ExifEdit and some special versions from Fred with the redraw workarounds removed.

Version 0.39. Tagged as 'Gadgets-0_39'
@
text
@# Copyright 1997 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for TextGadgets module
#

COMPONENT     = Gadgets
TARGET       ?= TextGadget
OBJS          = glib glib3 main MemMan riscos_uti Scrollbar\
                ScrollList Sizes TextArea TextMan Font riscos_gra\
                TAsel_ven Utils
CMHGDEPENDS   = main
ROMCDEFINES   = -DROM
CINCLUDES     = -IC:tboxlibint,tbox:,C:
LIBS          = ${TBOXINTLIB} ${WIMPLIB}

include CModule

# Dynamic dependencies:
@


1.11
log
@Makefile recreated from fragments
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.

Version 0.38. Tagged as 'Gadgets-0_38'
@
text
@d22 1
a22 1
                ScrollLisS TAsel_ven Utils
@


1.10
log
@Internationalised
Supporting code borrowed from 'Iconbar' toolbox module.
Tested in a ROM build and RAM build, triggering one error message and checking the dynamic area in task manager.

Version 0.37. Tagged as 'Gadgets-0_37'
@
text
@d15 1
a15 1
# Makefile for a Toolbox Object module
a16 17
# $Id: Makefile,v 1.8 2012/01/14 12:56:46 rsprowson Exp $
#
# Component specific options:
#
RAMMESSAGES = o.msgs

COMMON_OBJ = o.ModHdr o.glib o.glib3 o.MemMan o.riscos_uti o.Scrollbar \
 o.ScrollList o.Sizes o.TextArea o.TextMan \
 o.Font o.riscos_gra o.ScrollLisS o.TAsel_ven o.Utils ${WIMPLIB}

ROM_OBJS = o.mainROM ${COMMON_OBJ}

RAM_OBJS = o.main ${RAMMESSAGES} ${COMMON_OBJ}

DBG_OBJS = od.main ${RAMMESSAGES} od.ModHdr od.glib od.glib3 od.MemMan od.riscos_uti od.Scrollbar \
 od.ScrollList od.Sizes od.TextArea od.TextMan \
 od.Font od.riscos_gra od.ScrollLisS od.TAsel_ven od.Utils ${WIMPLIB}
d18 9
a26 10
#
# Get main rules
#
include C:tboxlibint.TboxMake

#
# Module specific rules:
#
resources: resources-messages
        @@echo ${COMPONENT}: resource files copied to Messages module
d28 1
a28 2
clean: toolbox-clean
        @@echo ${COMPONENT}: cleaned
a29 1
#---------------------------------------------------------------------------
@


1.9
log
@Change to link against tboxlibint
For some reason this toolbox module was unique in linking against the public toolboxlib rather than the internal one, this meant having to carefully tippy toe around not mixing header files (as they contain similar but differently named definitions).
A massive search and replace job.
Tested briefly using ResEd/ResTest and a textarea and scrolllist in a ROM build.
Requires Common-0_21.

Version 0.36. Tagged as 'Gadgets-0_36'
@
text
@d21 1
a21 1
RAMBOTH =
d25 1
a25 1
 o.Font o.riscos_gra o.ScrollLisS o.TAsel_ven o.Text o.Utils ${WIMPLIB}
d29 1
a29 1
RAM_OBJS = o.main ${RAMBOTH} ${COMMON_OBJ}
d31 1
a31 1
DBG_OBJS = od.main ${RAMBOTH} od.ModHdr od.glib od.glib3 od.MemMan od.riscos_uti od.Scrollbar \
d33 1
a33 1
 od.Font od.riscos_gra od.ScrollLisS od.TAsel_ven od.Text od.Utils ${WIMPLIB}
d43 2
a44 2
resources:
        @@echo ${COMPONENT}: not internationalised, so no files copied to Messages module
@


1.8
log
@Changed to use shared TboxMake makefile.
Removed local duplication of string32 and rmensure, since the common library has these in.
Rename TextGadget.c to main.c to fall into line with the "o.mainROM" rule.
Compiles, but not tested.

Version 0.33. Tagged as 'Gadgets-0_33'
@
text
@d17 1
a17 1
# $Id: Makefile,v 4.10 2000/05/04 12:56:14 sbrodie Exp $
d25 1
a25 1
 o.Font o.riscos_gra o.ScrollLisS o.TAsel_ven o.Text o.Utils
d33 1
a33 5
 od.Font od.riscos_gra od.ScrollLisS od.TAsel_ven od.Text od.Utils

EXTRARAMLIBS = c:tboxlibs.o.wimplib c:tboxlibs.o.toolboxlib

EXTRAROMLIBS = c:tboxlibs.o.wimplib c:tboxlibs.o.toolboxlib
@


1.7
log
@Function returns no longer use stack structures.
Previously, a number of errors were contructed as automatic variables then returned to the caller - potentially accessing stale stack area. All error blocks are now held in ROM and cast from there.
Error numbers are now not &00000000 or &20202020, using the allocated base - requires 'Common-0_15'.
Trimmed some unused debugging code out, saves about 3k.
Renamed C++ clashing variables to stop the compiler moaning.
Implemented feature request to accept the empty string "" as no font handle in _SetFont calls.
At some point, this module needs internationalising.

Version 0.31. Tagged as 'Gadgets-0_31'
@
text
@d15 1
a15 1
# Makefile for TextGadget
d17 1
a17 8
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name   Description
# ----       ----   -----------
# 12/05/97  RLougher  Created
# 04/06/98  SBrodie   Added RAM build into same Makefile

d21 20
a40 181
COMPONENT  = TextGadget
ROM_MODULE = aof.${COMPONENT}
RAM_MODULE = rm.${COMPONENT}

#
# Export Paths for Messages module
#
RESDIR = <resource$dir>.Resources2.${COMPONENT}

EXP_HDR = <export$dir>.^.Interface2
EXP_C_H = <Cexport$dir>.h
EXP_C_O = <Cexport$dir>.o

#
# Generic options
#

MKDIR   = do mkdir -p
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
RM      = remove
WIPE    = x wipe
CD      = dir
CHMOD   = access

#FEATURES   = -zM -zps1 -g ${DFLAGS}
FEATURES   = -zM -zps1 -ffah ${DFLAGS}
AFLAGS     = ${THROWBACK} -depend !Depend
CFLAGS     = ${THROWBACK} -depend !Depend -c ${FEATURES} ${INCLUDES}
CMHGFLAGS  = ${THROWBACK} -depend !Depend -p ${DFLAGS}
CPFLAGS    = ~cfr~v
WFLAGS     = ~c~vr
CHMODFLAGS = RW/R

DFLAGS  = -D${SYSTEM}_BUILD #-DUSE_TINY ${DEBUG}

INCLUDES = -IC:tboxlibint,tbox:,C:


# ------------------------------------------------------------------------------
# Libraries
#
ANSILIB   = CLib:o.ansilib
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
ROMCSTUBS = RISCOSLIB:o.romcstubs
TBOXLIB   = c:tboxlibs.o.toolboxlib
WIMPLIB   = c:tboxlibs.o.wimplib
RSTUBS     = RISCOSLIB:o.rstubs
ROMSTUBS   = RISCOSLIB:o.romstubs
REMOTEDB   = <Lib$Dir>.debug.o.remotezm

# Which is correct? sbrodie 19/06/1998.  Daytona uses AbsSym, Spinner/Trunk uses c_abssym

ABSSYM    = RISC_OSLib:o.c_abssym
# ABSSYM     = RISC_OSLib:o.AbsSym


OBJS =\
	o.Modhdr \
	o.TextGadget \
	o.TextArea \
	o.ScrollList \
	o.Scrollbar \
	o.riscos_uti \
	o.riscos_gra \
	o.Font \
	o.TextMan \
	o.MemMan \
	o.Text \
	o.ScrollLisS \
	o.Utils \
	o.TAsel_ven \
	o.glib \
	o.glib3 \
	o.rmensure \
	o.Sizes \
	o.string32

RAM_OBJS =\
	o.Modhdr \
	o.TextGadget \
	o.TextArea \
	o.ScrollList \
	o.Scrollbar \
	o.riscos_uti \
	o.riscos_gra \
	o.Font \
	o.TextMan \
	o.MemMan \
	o.Text \
	o.ScrollLisS \
	o.Utils \
	o.TAsel_ven \
	o.glib \
	o.glib3 \
	o.rmensure \
	o.Sizes \
	o.string32


# ------------------------------------------------------------------------------
HDR = h.ModHdr

# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES:	.o .h .s .c .cmhg

.c.o:;		@@echo
		@@echo Compiling $< ( ${FEATURES})
		@@${CC} ${CFLAGS} -o $@@ $<

.cmhg.o:;	@@echo
		@@echo Generating module C veneers ( -p ${DFLAGS})
		@@${CMHG} ${CMHGFLAGS} $< -o $@@

.cmhg.h:;	@@echo
		@@echo Generating module C veneers' header file ( -p ${DFLAGS})
		@@${CMHG} ${CMHGFLAGS} $< -d $@@

.s.o:;		@@echo
		@@echo Assembling $<
		@@${AS} ${AFLAGS} -o $@@ $<


all: ${RAM_MODULE}
	@@echo
	@@echo ${COMPONENT}: Module built (RAM) in ${RAM_MODULE}

rom: ${ROM_MODULE}
	@@echo ${COMPONENT}: Module built (ROM)

install: ${RAM_MODULE}
	${MKDIR} ${INSTDIR}
	${CP} ${RAM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}

install_rom: ${ROM_MODULE}
	${CP} ${ROM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
	@@echo ${COMPONENT}: Module installed (ROM)

export: ${EXPORTS}
	@@echo
	@@echo ${COMPONENT}: No exports

clean:
	@@echo
	${WIPE} o.* ${WFLAGS}
	${WIPE} aof ${WFLAGS}
	${WIPE} rm ${WFLAGS}
	${WIPE} linked ${WFLAGS}
	${WIPE} map ${WFLAGS}
	${RM} ${HDR}
	@@echo ${COMPONENT}: cleaned

${ROM_MODULE}: ${OBJS} ${TBOXLIB} ${WIMPLIB} ${ROMCSTUBS} ${HDR}
	${MKDIR} aof
	${LD} -o $@@ -aof ${OBJS} ${TBOXLIB} ${WIMPLIB} ${ROMCSTUBS}

${RAM_MODULE}: ${RAM_OBJS} ${TBOXLIB} ${WIMPLIB} ${CLIB} ${HDR}
	${mkdir} rm
	${LD} -o $@@ -module ${RAM_OBJS} ${TBOXLIB} ${WIMPLIB} ${CLIB}
	${CHMOD} rm.${COMPONENT} ${CHMODFLAGS}


# Final link for the ROM Image (using given base address)
rom_link:
	${MKDIR} linked
	${MKDIR} map
	${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${ROM_MODULE} ${ABSSYM} \
              -map > map.${COMPONENT}
	${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
	@@echo ${COMPONENT}: rom_link complete


# ------------------------------------------------------------------------------
# Relocatable module target
d42 1
d44 5
a48 2
${EXP_C_H}.${COMPONENT}:	h.${COMPONENT}
	${CP} h.${COMPONENT} $@@ ${CPFLAGS}
d50 2
d53 1
a53 1
# ------------------------------------------------------------------------------
@


1.6
log
@Just some makefile tweaks. No code changes.

Version 0.30. Tagged as 'Gadgets-0_30'
@
text
@d53 2
a54 2
CD	= dir
CHMOD	= access
d67 1
a67 1
INCLUDES = -IC:tboxlibint,C:tboxlibs,C:
@


1.5
log
@  Linking change.
Detail:
  Was still doing link -bin in rom_link phase. Changed to use link -rmf
  for consistency with all other C components, and with the BBE auto-
  generated makefile. Also has the benefit of saving approx 1K of ROM space.
Admin:
  Not expected to cause any problems.

Version 0.28. Tagged as 'Gadgets-0_28'
@
text
@d45 1
a45 1
MKDIR   = cdir
d52 1
a52 1
WIPE    = -wipe
d161 1
a161 1
	
d163 5
a167 1
        @@echo ${COMPONENT}: Module built (ROM)
d170 2
a171 2
        ${CP} ${ROM_MODULE} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: Module installed (ROM)
d175 1
a175 1
        @@echo ${COMPONENT}: No exports
d179 5
a183 5
        ${WIPE} o.* ${WFLAGS}
        ${WIPE} aof ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
        ${WIPE} linked ${WFLAGS}
        ${WIPE} map ${WFLAGS}
d185 1
a185 1
        @@echo ${COMPONENT}: cleaned
d188 2
a189 2
        ${MKDIR} aof
        ${LD} -o $@@ -aof ${OBJS} ${TBOXLIB} ${WIMPLIB} ${ROMCSTUBS}
d193 2
a194 2
        ${LD} -o $@@ -module ${RAM_OBJS} ${TBOXLIB} ${WIMPLIB} ${CLIB}
        ${CHMOD} rm.${COMPONENT} ${CHMODFLAGS}
d199 3
a201 3
        ${MKDIR} linked
        ${MKDIR} map
        ${LD} -o linked.${COMPONENT} -rmf -base ${ADDRESS} ${ROM_MODULE} ${ABSSYM} \
d203 2
a204 2
        ${CP} linked.${COMPONENT} ${LINKDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom_link complete
d212 1
a212 1
        ${CP} h.${COMPONENT} $@@ ${CPFLAGS}
@


1.4
log
@  Removed unused files that were preventing build.
Detail:
  debug.s was still in the build and included a header which had been removed
  in a previous version.  The code in debug.s in not used anywhere, so I've
  just removed it (and the corresponding debug.h, which was empty anyway).
Admin:
  Compiled.

Version 0.25. Tagged as 'Gadgets-0_25'
@
text
@d197 1
a197 1
        ${LD} -o linked.${COMPONENT} -bin -base ${ADDRESS} ${ROM_MODULE} ${ABSSYM} \
@


1.3
log
@Various fixes and extensions to ScrollList, plus a related fix in TextArea
and ScrollBar.

Title background colour of gadgets was either undefined or set to 0; should
be 2. Corrected. Would be apparent with 2D tools or any transparent tool
sprite set.

SELECT clicks on deselected entries in a ScrollList now deselect any other
selected items before selecting the new one.

Embedded window of TextArea and ScrollList now put in the right place. At
create time, the sizes of the current tool sprite set is also checked; this
used to be hard coded. If the tool sizes and/or Desktop scaling changes at
run-time this won't be noticed yet, as no mechanism to pass Wimp messages
to *external* gadgets exists in the Toolbox currently. Still, at least it
gets it right the next time a new instance of the gadget is created.

Flag bit ScrollList_SelectionChangingMethod_SendEvent to any of
scrolllist_select_item, scrolllist_deselect_item or scrolllist_delete_items
prompts them to send ScrollList_Selection to the client on completion. This
can help simplify client UI code for UIs which depend on what is selected
(e.g. a "Select all" button greys out if all items are selected by a
keyboard shortcut - this can now all work on just the one event handler).

Flag bit ScrollList_SelectionChangingMethod_OnAll to either of
scrolllist_select_item or scrolllist_deselect_item tells the methods to
act like a "Select all" or "Clear selection" call. This is a common client
operation and it's a lot easier for the ScrollList gadget to do it than
have the client iterate over all items.

Supports new method ScrollList_CountItems (scrolllist_count_items veneer
present in tboxlibs 0.04 or later). Returns number of entries in gadget.
Avoids clumsy situation of both the gadget and the clienty keeping track
of how many entries are present.

Note that docs.ScrollList mis-documented some flags settings. Now fixed.

Version 0.15. Not tagged
@
text
@a97 1
	o.debug \
a118 1
	o.debug \
@


1.2
log
@Forgot to check in merged Makefile on previous checkin.
@
text
@d108 1
d130 1
@


1.1
log
@Initial revision
@
text
@d22 2
a23 2
# 12/5/97  RLougher  Created
#
d30 10
d42 1
a42 1
# Generic options:
d44 1
d46 1
d53 2
a54 1
ASM	= objasm
d56 8
a63 2
CPFLAGS = ~cfr~v
WFLAGS  = ~c~v
d65 1
a65 2
CFLAGS   = -c -depend !Depend ${INCLUDES} -zM -ffah -zps1
INCLUDES = -Itbox:,C:
d67 4
a70 1
#
d77 11
a87 4
ABSSYM    = RISC_OSLib:o.abssym
TBOXLIB   = tbox:o.toolboxlib
WIMPLIB   = tbox:o.wimplib
GLIB      = tbox:o.glib
d104 32
a135 2
	o.TAsel_ven
#
a137 3
.c.o:;    ${CC} ${CFLAGS} -o $@@ $<
.cmhg.o:; ${CMHG} -O $@@ $<
.s.o:;    $(ASM) $< $@@
d139 23
a161 4
#
# Main rules:
#
#
d169 4
d174 1
d177 1
d180 1
d183 1
a183 1
${ROM_MODULE}: ${OBJS} ${TBOXLIB} $(WIMPLIB) $(GLIB) # ${ROMCSTUBS}
d185 6
a190 1
        ${LD} -o $@@ -aof ${OBJS} ${TBOXLIB} $(WIMPLIB) $(GLIB) ${ROMCSTUBS}
d192 2
a193 1
# final link for ROM Image (using given base address)
a198 1
        truncate map.${COMPONENT} linked.${COMPONENT}
d202 10
a211 1
#---------------------------------------------------------------------------
a212 129
o.TextGadget:	c.TextGadget
o.TextGadget:	C:h.string
o.TextGadget:	C:h.kernel
o.TextGadget:	C:h.swis
o.TextGadget:	tbox:h.toolbox
o.TextGadget:	tbox:h.wimp
o.TextGadget:	tbox:h.window
o.TextGadget:	tbox:h.gadgets
o.TextGadget:	tbox:h.wimplib
o.TextGadget:	h.TextGadgets
o.TextGadget:	h.myswis
o.TextGadget:	tbox:h.glib
o.TextGadget:	C:h.kernel
o.TextGadget:	tbox:h.rmensure
o.TextGadget:	h.TextArea
o.TextGadget:	h.TextAreaP
o.TextGadget:	h.modmem
o.TextGadget:	h.TextArea
o.TextGadget:	h.TextMan
o.TextGadget:	h.MemMan
o.TextGadget:	C:h.kernel
o.TextGadget:	h.ScrollList
o.TextGadget:	h.ScrollLisP
o.TextGadget:	h.modmem
o.TextGadget:	h.ScrollList
o.TextGadget:	h.Scrollbar
o.TextGadget:	h.ScrollbarP
o.TextGadget:	h.modmem
o.TextGadget:	h.Scrollbar
o.TextGadget:	h.riscos_utils
o.TextGadget:	tbox:h.toolbox
o.TextGadget:	h.modmem
o.TextArea:	c.TextArea
o.TextArea:	C:h.kernel
o.TextArea:	C:h.swis
o.TextArea:	tbox:h.toolbox
o.TextArea:	tbox:h.wimp
o.TextArea:	tbox:h.window
o.TextArea:	tbox:h.gadgets
o.TextArea:	tbox:h.wimplib
o.TextArea:	tbox:h.glib
o.TextArea:	C:h.kernel
o.TextArea:	tbox:h.string32
o.TextArea:	h.riscos_utils
o.TextArea:	tbox:h.toolbox
o.TextArea:	h.TextGadgets
o.TextArea:	h.TextArea
o.TextArea:	h.TextAreaP
o.TextArea:	h.modmem
o.TextArea:	h.TextArea
o.TextArea:	h.TextMan
o.TextArea:	h.MemMan
o.TextArea:	C:h.kernel
o.TextArea:	h.Font
o.TextArea:	h.Text
o.TextArea:	h.Scrollbar
o.TextArea:	h.ScrollbarP
o.TextArea:	h.modmem
o.TextArea:	h.Scrollbar
o.TextArea:	h.myswis
o.TextArea:	h.utils
o.ScrollList:	c.ScrollList
o.ScrollList:	C:h.kernel
o.ScrollList:	C:h.swis
o.ScrollList:	tbox:h.toolbox
o.ScrollList:	tbox:h.wimp
o.ScrollList:	tbox:h.window
o.ScrollList:	tbox:h.gadgets
o.ScrollList:	tbox:h.wimplib
o.ScrollList:	tbox:h.glib
o.ScrollList:	C:h.kernel
o.ScrollList:	tbox:h.string32
o.ScrollList:	h.riscos_utils
o.ScrollList:	tbox:h.toolbox
o.ScrollList:	h.Font
o.ScrollList:	h.TextGadgets
o.ScrollList:	h.ScrollList
o.ScrollList:	h.ScrollLisP
o.ScrollList:	h.modmem
o.ScrollList:	h.ScrollList
o.ScrollList:	h.ScrollLisS
o.ScrollList:	h.modmem
o.ScrollList:	h.ScrollList
o.ScrollList:	h.debug
o.ScrollList:	h.myswis
o.ScrollList:	h.utils
o.Scrollbar:	c.Scrollbar
o.Scrollbar:	C:h.kernel
o.Scrollbar:	C:h.swis
o.Scrollbar:	tbox:h.toolbox
o.Scrollbar:	tbox:h.wimp
o.Scrollbar:	tbox:h.window
o.Scrollbar:	tbox:h.gadgets
o.Scrollbar:	tbox:h.wimplib
o.Scrollbar:	tbox:h.glib
o.Scrollbar:	C:h.kernel
o.Scrollbar:	tbox:h.string32
o.Scrollbar:	h.riscos_utils
o.Scrollbar:	tbox:h.toolbox
o.Scrollbar:	h.TextGadgets
o.Scrollbar:	h.Scrollbar
o.Scrollbar:	h.ScrollbarP
o.Scrollbar:	h.modmem
o.Scrollbar:	h.Scrollbar
o.Scrollbar:	h.debug
o.Scrollbar:	h.myswis
o.Scrollbar:	h.Utils
o.riscos_uti:	c.riscos_uti
o.riscos_uti:	C:h.kernel
o.riscos_uti:	C:h.swis
o.riscos_uti:	tbox:h.wimp
o.riscos_uti:	tbox:h.wimplib
o.riscos_uti:	tbox:h.toolbox
o.riscos_uti:	tbox:h.window
o.riscos_uti:	tbox:h.gadgets
o.riscos_uti:	h.riscos_utils
o.riscos_uti:	tbox:h.toolbox
o.TextMan:	c.TextMan
o.TextMan:	C:h.kernel
o.TextMan:	C:h.swis
o.TextMan:	h.TextMan
o.TextMan:	h.MemMan
o.TextMan:	C:h.kernel
o.MemMan:	c.MemMan
o.MemMan:	C:h.swis
o.MemMan:	C:h.kernel
o.MemMan:	C:h.kernel
o.MemMan:	h.MemMan
o.MemMan:	C:h.kernel
@


1.1.1.1
log
@The Java directory contains the sources for the Java support modules
(TextGadget, etc.) and the makefiles to complete the Java ROM build
under RiscOS.

@
text
@@


1.1.1.2
log
@Changes to include glib sources
@
text
@d59 1
d76 1
a76 5
	o.TAsel_ven \
	o.glib \
	o.glib3 \
	o.rmensure \
	o.string32
d81 1
a81 1
.cmhg.o:; ${CMHG} -o $@@ $<
d102 1
a102 1
${ROM_MODULE}: ${OBJS} ${TBOXLIB} $(WIMPLIB) # ${ROMCSTUBS}
d104 1
a104 1
        ${LD} -o $@@ -aof -via objs ${TBOXLIB} $(WIMPLIB) ${ROMCSTUBS}
d129 1
a129 1
o.TextGadget:	h.glib
d131 1
a131 1
o.TextGadget:	h.rmensure
d158 1
a158 1
o.TextArea:	h.glib
d160 1
a160 1
o.TextArea:	h.string32
d187 1
a187 1
o.ScrollList:	h.glib
d189 1
a189 1
o.ScrollList:	h.string32
d212 1
a212 1
o.Scrollbar:	h.glib
d214 1
a214 1
o.Scrollbar:	h.string32
d225 22
@


1.1.1.3
log
@*** empty log message ***
@
text
@d105 1
a105 1
${ROM_MODULE}: ${OBJS} ${TBOXLIB} $(WIMPLIB) ${ROMCSTUBS}
@


1.1.1.4
log
@Use c_abssym to avoid conflict with wimplib
@
text
@d56 1
a56 1
ABSSYM    = RISC_OSLib:o.c_abssym
a227 54
o.riscos_uti:	c.riscos_uti
o.riscos_uti:	C:h.kernel
o.riscos_uti:	C:h.swis
o.riscos_uti:	tbox:h.wimp
o.riscos_uti:	tbox:h.wimplib
o.riscos_uti:	tbox:h.toolbox
o.riscos_uti:	tbox:h.window
o.riscos_uti:	tbox:h.gadgets
o.riscos_uti:	h.riscos_utils
o.riscos_uti:	tbox:h.toolbox
o.TextMan:	c.TextMan
o.TextMan:	C:h.kernel
o.TextMan:	C:h.swis
o.TextMan:	h.TextMan
o.TextMan:	h.MemMan
o.TextMan:	C:h.kernel
o.MemMan:	c.MemMan
o.MemMan:	C:h.swis
o.MemMan:	C:h.kernel
o.MemMan:	C:h.kernel
o.MemMan:	h.MemMan
o.MemMan:	C:h.kernel
o.glib:	c.glib
o.glib:	C:h.kernel
o.glib:	C:h.swis
o.glib:	h.glib
o.glib:	C:h.kernel
o.glib:	tbox:h.wimp
o.glib:	tbox:h.toolbox
o.glib:	tbox:h.window
o.glib:	tbox:h.gadgets
o.glib:	h.glibP
o.glib:	tbox:h.toolbox
o.glib:	tbox:h.window
o.glib:	tbox:h.wimplib
o.glib3:	c.glib3
o.glib3:	C:h.kernel
o.glib3:	C:h.swis
o.glib3:	h.glib
o.glib3:	C:h.kernel
o.glib3:	tbox:h.wimp
o.glib3:	tbox:h.toolbox
o.glib3:	tbox:h.window
o.glib3:	tbox:h.gadgets
o.glib3:	h.glibP
o.glib3:	tbox:h.toolbox
o.glib3:	tbox:h.window
o.glib3:	tbox:h.wimplib
o.rmensure:	c.rmensure
o.rmensure:	C:h.kernel
o.rmensure:	C:h.swis
o.rmensure:	h.rmensure
o.string32:	c.string32
o.string32:	h.string32
@


1.1.1.5
log
@Changed final target name to JavaXXXX and made build with new toolbox
library paths.
@
text
@d28 1
a28 1
COMPONENT  = JavaGadget
d46 2
a47 2
CFLAGS   = -c -depend !Depend ${INCLUDES} -zM -ffa -zps1
INCLUDES = -I<Lib$Dir>.tboxlibs.,C:
d57 2
a58 2
TBOXLIB   = <Lib$Dir>.tboxlibs.o.toolboxlib
WIMPLIB   = <Lib$Dir>.tboxlibs.o.wimplib
d107 1
a107 1
        ${LD} -o $@@ -aof ${OBJS} ${TBOXLIB} $(WIMPLIB) ${ROMCSTUBS}
d125 5
a129 5
o.TextGadget:	<Lib$Dir>.tboxlibs.h.toolbox
o.TextGadget:	<Lib$Dir>.tboxlibs.h.wimp
o.TextGadget:	<Lib$Dir>.tboxlibs.h.window
o.TextGadget:	<Lib$Dir>.tboxlibs.h.gadgets
o.TextGadget:	<Lib$Dir>.tboxlibs.h.wimplib
d151 1
a151 1
o.TextGadget:	<Lib$Dir>.tboxlibs.h.toolbox
d156 5
a160 5
o.TextArea:	<Lib$Dir>.tboxlibs.h.toolbox
o.TextArea:	<Lib$Dir>.tboxlibs.h.wimp
o.TextArea:	<Lib$Dir>.tboxlibs.h.window
o.TextArea:	<Lib$Dir>.tboxlibs.h.gadgets
o.TextArea:	<Lib$Dir>.tboxlibs.h.wimplib
d165 1
a165 1
o.TextArea:	<Lib$Dir>.tboxlibs.h.toolbox
d185 5
a189 5
o.ScrollList:	<Lib$Dir>.tboxlibs.h.toolbox
o.ScrollList:	<Lib$Dir>.tboxlibs.h.wimp
o.ScrollList:	<Lib$Dir>.tboxlibs.h.window
o.ScrollList:	<Lib$Dir>.tboxlibs.h.gadgets
o.ScrollList:	<Lib$Dir>.tboxlibs.h.wimplib
d194 1
a194 1
o.ScrollList:	<Lib$Dir>.tboxlibs.h.toolbox
d210 5
a214 5
o.Scrollbar:	<Lib$Dir>.tboxlibs.h.toolbox
o.Scrollbar:	<Lib$Dir>.tboxlibs.h.wimp
o.Scrollbar:	<Lib$Dir>.tboxlibs.h.window
o.Scrollbar:	<Lib$Dir>.tboxlibs.h.gadgets
o.Scrollbar:	<Lib$Dir>.tboxlibs.h.wimplib
d219 1
a219 1
o.Scrollbar:	<Lib$Dir>.tboxlibs.h.toolbox
d231 5
a235 5
o.riscos_uti:	<Lib$Dir>.tboxlibs.h.wimp
o.riscos_uti:	<Lib$Dir>.tboxlibs.h.wimplib
o.riscos_uti:	<Lib$Dir>.tboxlibs.h.toolbox
o.riscos_uti:	<Lib$Dir>.tboxlibs.h.window
o.riscos_uti:	<Lib$Dir>.tboxlibs.h.gadgets
d237 1
a237 1
o.riscos_uti:	<Lib$Dir>.tboxlibs.h.toolbox
d255 4
a258 4
o.glib:	<Lib$Dir>.tboxlibs.h.wimp
o.glib:	<Lib$Dir>.tboxlibs.h.toolbox
o.glib:	<Lib$Dir>.tboxlibs.h.window
o.glib:	<Lib$Dir>.tboxlibs.h.gadgets
d260 3
a262 3
o.glib:	<Lib$Dir>.tboxlibs.h.toolbox
o.glib:	<Lib$Dir>.tboxlibs.h.window
o.glib:	<Lib$Dir>.tboxlibs.h.wimplib
d268 4
a271 4
o.glib3:	<Lib$Dir>.tboxlibs.h.wimp
o.glib3:	<Lib$Dir>.tboxlibs.h.toolbox
o.glib3:	<Lib$Dir>.tboxlibs.h.window
o.glib3:	<Lib$Dir>.tboxlibs.h.gadgets
d273 3
a275 3
o.glib3:	<Lib$Dir>.tboxlibs.h.toolbox
o.glib3:	<Lib$Dir>.tboxlibs.h.window
o.glib3:	<Lib$Dir>.tboxlibs.h.wimplib
@


1.1.1.6
log
@So it builds...
@
text
@d46 2
a47 2
CFLAGS   = -c ${INCLUDES} -zM -ffah -zps1
INCLUDES = -Itbox:,C:
d57 2
a58 2
TBOXLIB   = tbox:o.toolboxlib
WIMPLIB   = tbox:o.wimplib
d121 161
@


1.1.1.7
log
@* Event generation for ScrollList fixed - you no longer get spurious events
  for a phantom extra item on the list.
* Flag added to ScrollList_Selection event to indicate adjust click.
* Fixed un-initialised base_line variable causing text of ScrollList
  items to disappear when the desktop font was the System font.

Version 0.10, 1.1.2.2. Tagged as 'Gadgets-0_10-1_1_2_2'
@
text
@d22 1
a22 2
# 12/05/97  RLougher  Created
# 04/06/98  SBrodie   Added RAM build into same Makefile
d28 1
a28 1
COMPONENT  = TextGadget
a29 6
RAM_MODULE = rm.${COMPONENT}

#
# Export Paths for Messages module
#
RESDIR = <resource$dir>.Resources2.${COMPONENT}
d46 2
a47 2
CFLAGS   = -c -depend !Depend ${INCLUDES} -zM -ffah -zps1 ${DFLAGS}
INCLUDES = -IC:tboxlibint,C:tboxlibs,C:
d57 2
a58 2
TBOXLIB   = c:tboxlibs.o.toolboxlib
WIMPLIB   = c:tboxlibs.o.wimplib
a79 22

RAM_OBJS =\
	o.Modhdr \
	o.TextGadget \
	o.TextArea \
	o.ScrollList \
	o.Scrollbar \
	o.riscos_uti \
	o.riscos_gra \
	o.Font \
	o.debug \
	o.TextMan \
	o.MemMan \
	o.Text \
	o.ScrollLisS \
	o.Utils \
	o.TAsel_ven \
	o.glib \
	o.glib3 \
	o.rmensure \
	o.string32

d84 1
a84 1
.cmhg.o:; ${CMHG} -p -o $@@ $<
a90 3
all: ${RAM_MODULE}
        @@echo ${COMPONENT}: Module built (RAM)

a107 6

${RAM_MODULE}: ${RAM_OBJS} ${TBOXLIB} ${WIMPLIB} ${CLIB}
	${mkdir} rm
        ${LD} -o $@@ -module ${RAM_OBJS} ${TBOXLIB} ${WIMPLIB} ${CLIB}
        Access $@@ RW/R

@


1.1.1.8
log
@Modified Make file for build
@
text
@d20 5
a24 5
# Date       Name   	Description
# ----       ----   	-----------
# 12/05/97  RLougher  	Created
# 04/06/98  SBrodie   	Added RAM build into same Makefile
# 11/08/98  MRobertshaw Updated file for Customer Build
d54 1
a54 2
#INCLUDES = -IC:tboxlibint,C:tboxlibs,C:
INCLUDES = -Itbox:,C:
d64 2
a65 2
TBOXLIB   = tbox:o.toolboxlib
WIMPLIB   = tbox:o.wimplib
@


1.1.1.5.2.1
log
@Made a single, unified Makefile.  myswis.h renamed to ModHdr.h so that it can be
automatically generated by CMHG.  Changed DAYTONA_BUILD flag to Daytona_BUILD so
that it can be automatically defined in the Makefile using the build
environment's System variable (called ${SYSTEM} in Makefiles).
@
text
@d15 8
a22 1
# Makefile for TextGadgets
a23 6
# *****************************************
# ***       C h a n g e   L i s t       ***
# *****************************************
# Date       	Name         	Description
# ----       	----         	-----------
# 1997-12-16	BAL		Created
a24 2
# ------------------------------------------------------------------------------
# Paths
d26 4
a30 7
EXP_HDR = <export$dir>.^.Interface2
EXP_C_H = <Cexport$dir>.h
EXP_C_O = <Cexport$dir>.o


# ------------------------------------------------------------------------------
# Generic options
d32 2
a33 1

a34 1
AS      = objasm
d41 1
a41 2
CD	= dir
CHMOD	= access
d43 2
a44 6
AFLAGS     = -depend !Depend ${THROWBACK} -Stamp -quit
CFLAGS     = -c -depend !Depend ${THROWBACK} -zM -ff ${INCLUDES} ${DFLAGS}
CMHGFLAGS  = -p ${DFLAGS} ${THROWBACK} ${INCLUDES}
CPFLAGS    = ~cfr~v
WFLAGS     = ~c~vr
CHMODFLAGS = RW/R
d46 2
a47 1
DFLAGS  = -D${SYSTEM}_BUILD #-DUSE_TINY ${DEBUG}
d49 1
a49 2

# ------------------------------------------------------------------------------
d52 28
a79 16

CLIB       = CLIB:o.stubs
RLIB       = RISCOSLIB:o.risc_oslib
RSTUBS     = RISCOSLIB:o.rstubs
ROMSTUBS   = RISCOSLIB:o.romstubs
ROMCSTUBS  = RISCOSLIB:o.romcstubs
ABSSYM     = RISC_OSLib:o.AbsSym
REMOTEDB   = <Lib$Dir>.debug.o.remotezm

LIBS =\
 <Lib$Dir>.tboxlibs.o.toolboxlib\
 <Lib$Dir>.tboxlibs.o.wimplib\


# ------------------------------------------------------------------------------
# Include files
d81 1
a81 6

INCLUDES = -Itbox:,C:,<Lib$Dir>.


# ------------------------------------------------------------------------------
# Program specific options:
d83 3
a86 32
COMPONENT = TextGadget
ROMTARGET = aof.${COMPONENT}
RAMTARGET = rm.${COMPONENT}
#EXPORTS   = ${EXP_C_H}.${COMPONENT}

OBJS      =	\
 o.Modhdr \
 o.TextGadget \
 o.TextArea \
 o.ScrollList \
 o.Scrollbar \
 o.riscos_uti \
 o.riscos_gra \
 o.Font \
 o.debug \
 o.TextMan \
 o.MemMan \
 o.Text \
 o.ScrollLisS \
 o.Utils \
 o.TAsel_ven \
 o.glib \
 o.glib3 \
 o.rmensure \
 o.string32 \


HDR = h.ModHdr


# ------------------------------------------------------------------------------
# Rule patterns
d88 1
a88 10

.SUFFIXES:	.o .h .s .c .cmhg
.c.o:;		${CC}   ${CFLAGS} -o $@@ $<
.cmhg.o:;	${CMHG} ${CMHGFLAGS} -o $@@ $<
.cmhg.h:;	${CMHG} ${CMHGFLAGS} -d $@@ $<
.s.o:;		${AS}   ${AFLAGS} $< $@@


# ------------------------------------------------------------------------------
# build a relocatable module:
a89 7

all: ${RAMTARGET}
	@@echo ${COMPONENT}: all complete
	

# ------------------------------------------------------------------------------
# RISC OS ROM build rules:
d91 2
d94 3
a96 9
rom: ${ROMTARGET}
        @@echo ${COMPONENT}: rom complete

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

install_rom: ${ROMTARGET}
        ${CP} ${ROMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: rom module installed
d99 4
a102 6
        ${WIPE} o.*      ${WFLAGS}
        ${WIPE} linked.* ${WFLAGS}
        ${WIPE} map.*    ${WFLAGS}
	${RM} ${HDR}
        ${RM} ${RAMTARGET}
        ${RM} ${ROMTARGET}
a103 8
        

# ------------------------------------------------------------------------------
# ROM target (re-linked at ROM Image build time)
#

${ROMTARGET}: ${OBJS} ${HDR} ${LIBS} ${ROMCSTUBS} 
        ${LD} -o $@@ -aof ${OBJS} ${LIBS} ${ROMCSTUBS}
d105 3
d109 1
a109 4
# ------------------------------------------------------------------------------
# Final link for the ROM Image (using given base address)
#

d111 5
a115 1
        ${LD} -o linked.${COMPONENT} -map -rmf -base ${ADDRESS} ${ROMTARGET} ${ABSSYM} > map.${COMPONENT}
d119 1
a119 14

# ------------------------------------------------------------------------------
# Relocatable module target
#

${RAMTARGET}: ${OBJS} ${HDR} ${LIBS}
        ${LD} -rmf -o $@@ ${OBJS} ${LIBS} ${CLIB}
        ${CHMOD} rm.${COMPONENT} ${CHMODFLAGS}

${EXP_C_H}.${COMPONENT}:	h.${COMPONENT}
        ${CP} h.${COMPONENT} $@@ ${CPFLAGS}


# ------------------------------------------------------------------------------
d125 5
a129 5
o.TextGadget:	tbox:h.toolbox
o.TextGadget:	tbox:h.wimp
o.TextGadget:	tbox:h.window
o.TextGadget:	tbox:h.gadgets
o.TextGadget:	tbox:h.wimplib
d131 1
a131 1
o.TextGadget:	h.ModHdr
d151 1
a151 1
o.TextGadget:	tbox:h.toolbox
d156 5
a160 5
o.TextArea:	tbox:h.toolbox
o.TextArea:	tbox:h.wimp
o.TextArea:	tbox:h.window
o.TextArea:	tbox:h.gadgets
o.TextArea:	tbox:h.wimplib
d165 1
a165 1
o.TextArea:	tbox:h.toolbox
d180 1
a180 1
o.TextArea:	h.ModHdr
d185 5
a189 5
o.ScrollList:	tbox:h.toolbox
o.ScrollList:	tbox:h.wimp
o.ScrollList:	tbox:h.window
o.ScrollList:	tbox:h.gadgets
o.ScrollList:	tbox:h.wimplib
d194 1
a194 1
o.ScrollList:	tbox:h.toolbox
d205 1
a205 1
o.ScrollList:	h.ModHdr
d210 5
a214 5
o.Scrollbar:	tbox:h.toolbox
o.Scrollbar:	tbox:h.wimp
o.Scrollbar:	tbox:h.window
o.Scrollbar:	tbox:h.gadgets
o.Scrollbar:	tbox:h.wimplib
d219 1
a219 1
o.Scrollbar:	tbox:h.toolbox
d226 1
a226 1
o.Scrollbar:	h.ModHdr
d231 5
a235 5
o.riscos_uti:	tbox:h.wimp
o.riscos_uti:	tbox:h.wimplib
o.riscos_uti:	tbox:h.toolbox
o.riscos_uti:	tbox:h.window
o.riscos_uti:	tbox:h.gadgets
d237 1
a237 7
o.riscos_uti:	tbox:h.toolbox
o.riscos_gra: s.riscos_gra
o.riscos_gra: hdr.SWINames
o.Font: s.Font
o.Font: hdr.SWINames
o.debug: s.debug
o.debug: hdr.SWINames
a249 8
o.Text: s.Text
o.Text: hdr.SWINames
o.ScrollLisS: s.ScrollLisS
o.ScrollLisS: hdr.SWINames
o.Utils: s.Utils
o.Utils: hdr.SWINames
o.Utils: hdr.CVars
o.TAsel_ven: s.TAsel_ven
d255 4
a258 4
o.glib:	tbox:h.wimp
o.glib:	tbox:h.toolbox
o.glib:	tbox:h.window
o.glib:	tbox:h.gadgets
d260 3
a262 3
o.glib:	tbox:h.toolbox
o.glib:	tbox:h.window
o.glib:	tbox:h.wimplib
d268 4
a271 4
o.glib3:	tbox:h.wimp
o.glib3:	tbox:h.toolbox
o.glib3:	tbox:h.window
o.glib3:	tbox:h.gadgets
d273 3
a275 3
o.glib3:	tbox:h.toolbox
o.glib3:	tbox:h.window
o.glib3:	tbox:h.wimplib
@


1.1.1.5.2.2
log
@Manually merge in v0.06 bugfixes from Spinner branch, add CLR
functionality and tilde support, reinstate region select, and explicitly
disallow Ctrl-I (tab support is not functional in TextGadget anyway).
@
text
@d48 3
a50 4
FEATURES   = -zM -zps1 -ffah ${DFLAGS}
AFLAGS     = ${THROWBACK} -depend !Depend
CFLAGS     = ${THROWBACK} -depend !Depend -c ${FEATURES} ${INCLUDES}
CMHGFLAGS  = ${THROWBACK} -depend !Depend -p ${DFLAGS}
d121 4
a124 16

.c.o:;		@@echo
		@@echo Compiling $< ( ${FEATURES})
		@@${CC} ${CFLAGS} -o $@@ $<

.cmhg.o:;	@@echo
		@@echo Generating module C veneers ( -p ${DFLAGS})
		@@${CMHG} ${CMHGFLAGS} $< -o $@@

.cmhg.h:;	@@echo
		@@echo Generating module C veneers' header file ( -p ${DFLAGS})
		@@${CMHG} ${CMHGFLAGS} $< -d $@@

.s.o:;		@@echo
		@@echo Assembling $<
		@@${AS} ${AFLAGS} -o $@@ $<
d132 1
a132 2
	@@echo
	@@echo ${COMPONENT}: Module built (RAM) in ${RAMTARGET}
d140 1
a140 2
	@@echo
        @@echo ${COMPONENT}: Module built (ROM) in ${ROMTARGET}
d143 1
a143 2
	@@echo
        @@echo ${COMPONENT}: No exports
a149 1
	@@echo
d156 1
a156 2
        @@echo
        @@echo ${COMPONENT}: Cleaned
d164 1
a164 3
	@@echo
	@@echo Linking $@@ ( ${OBJS} )
        @@${LD} -o $@@ -aof ${OBJS} ${LIBS} ${ROMCSTUBS}
d181 2
a182 5
${RAMTARGET}: ${OBJS} ${HDR} ${LIBS} ${CLIB}
	@@echo
	@@echo Linking $@@ ( ${OBJS} )
        @@${LD} -rmf -o $@@ ${OBJS} ${LIBS} ${CLIB}
        @@echo
d191 175
@


1.1.1.5.2.3
log
@  Added another FEATURES line to allow for a version with function names
embedded
@
text
@a47 1
#FEATURES   = -zM -zps1 -g ${DFLAGS}
@
