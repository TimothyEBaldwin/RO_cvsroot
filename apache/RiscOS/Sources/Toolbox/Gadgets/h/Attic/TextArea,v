head	1.4;
access;
symbols
	Gadgets-0_35:1.3
	Gadgets-0_34:1.3
	Gadgets-0_33:1.3
	Gadgets-0_32:1.3
	Gadgets-0_31:1.3
	Gadgets-0_30:1.3
	Gadgets-0_29:1.3
	Gadgets-0_28:1.3
	RO_5_07:1.3
	Gadgets-0_27:1.3
	Gadgets-0_26:1.3
	Gadgets-0_25:1.3
	Gadgets-0_24:1.3
	Gadgets-0_23:1.3
	Gadgets-0_22:1.3
	Gadgets-0_21:1.3
	Gadgets-0_20:1.3
	Gadgets-0_19:1.2
	Gadgets-0_18:1.2
	Gadgets-0_17:1.2
	Gadgets-0_16:1.2
	Gadgets-0_15:1.2
	sforrest_daytona_appflash-0_31:1.1.1.2
	Gadgets-0_14:1.2
	mjrobert_Java_26_08_98:1.1.1.2
	blaughto_daytona_appflash-0_30:1.1.1.2
	blaughto_daytona_appflash-0_29:1.1.1.2
	blaughto_daytona_appflash-0_28:1.1.1.2
	Gadgets-0_11:1.1.1.2
	sbrodie_TextGadgets_merged_19Jun98:1.1.1.2
	sbrodie_Daytona_merge_19Jun98:1.1.1.2
	sbrodie_Spin_merge_18Jun98:1.1.1.2
	jberanek_gadgets-0_08:1.1.1.2
	Gadgets-0_10-1_1_2_2:1.1.1.2
	blaughto_daytona_appflash-0_27:1.1.1.2
	blaughto_daytona_appflash-0_26:1.1.1.2
	blaughto_daytona_appflash-0_25:1.1.1.2
	blaughto_daytona_appflash-0_24:1.1.1.2
	blaughto_daytona_appflash-0_23:1.1.1.2
	blaughto_daytona_appflash-0_21:1.1.1.2
	blaughto_daytona_appflash-0_20:1.1.1.2
	blaughto_daytona_appflash-0_19:1.1.1.2
	jberanek_gadgets-0_07:1.1.1.2
	blaughto_daytona_appflash-0_18:1.1.1.2
	mrison_gadgets-0_06:1.1.1.2
	pwombwel_0_09:1.1.1.2
	mrison_gadgets-0_05:1.1.1.2
	Daytona:1.1.1.2.0.2
	Daytona_bp:1.1.1.2
	Spinner_RCA116:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.08.30.19.34.40;	author rsprowson;	state dead;
branches;
next	1.3;
commitid	cFJZhP2Bmu3bUv3x;

1.3
date	99.06.17.11.47.11;	author jberanek;	state Exp;
branches;
next	1.2;

1.2
date	98.06.22.15.22.20;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	97.05.13.16.25.56;	author rlougher;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.13.16.25.56;	author rlougher;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.08.21.16.39.11;	author rlougher;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Change to link against tboxlibint
For some reason this toolbox module was unique in linking against the public toolboxlib rather than the internal one, this meant having to carefully tippy toe around not mixing header files (as they contain similar but differently named definitions).
A massive search and replace job.
Tested briefly using ResEd/ResTest and a textarea and scrolllist in a ROM build.
Requires Common-0_21.

Version 0.36. Tagged as 'Gadgets-0_36'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the toolbox library for writing desktop applications in C. It may be     *
 * used freely in the creation of programs for Archimedes or Risc PC. It    *
 * should be used with Acorn's C Compiler Release 5 or later.               *
 *                                                                          *
 *                                                                          *
 * Copyright © Acorn Computers Ltd, 1994                                    *
 *                                                                          *
 ***************************************************************************/



/*
 * Name        : textarea.h
 * Description : C veneers to the Methods provided by the textarea gadget
 */



#ifndef __textarea_h
#define __textarea_h


#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif


/****************************************************************************
 * TextArea Templates                                                       *
 ****************************************************************************/

/*-- flags --*/

#define TextArea_Scrollbar_Vertical	0x00000001
#define TextArea_Scrollbar_Horizontal	0x00000002
#define TextArea_WordWrap		0x00000004

#define TextAreaValidFlags	        0xC0000007

/*-- templates --*/

typedef struct
{
    GadgetHeader	hdr;
    int			type;
    int			event;
    char		*text;
    unsigned int	foreground;
    unsigned int	background;
} TextArea;


/*-- TextArea methods --*/

#define TextArea_Base		0x4018
#define TextArea_Type		(sizeof(TextArea)) << 16 | TextArea_Base
#define TextArea_SWIBase	0x140180

#define TextArea_GetState	     (TextArea_Base + 0)
#define TextArea_SetState	     (TextArea_Base + 1)
#define TextArea_SetText	     (TextArea_Base + 2)
#define TextArea_GetText	     (TextArea_Base + 3)
#define TextArea_InsertText	     (TextArea_Base + 4)
#define TextArea_ReplaceText	     (TextArea_Base + 5)
#define TextArea_GetSelection	     (TextArea_Base + 6)
#define TextArea_SetSelection	     (TextArea_Base + 7)
#define TextArea_SetFont	     (TextArea_Base + 8)
#define TextArea_SetColour	     (TextArea_Base + 9)
#define TextArea_GetColour	     (TextArea_Base + 10)
#define TextArea_SetCursorPosition   (TextArea_Base + 11)
#define TextArea_GetCursorPosition   (TextArea_Base + 12)


/*-- TextArea events --*/

/*-- TextArea SWI method constants --*/

#define TextArea_DesktopColours	(1<<0)



/****************************************************************************
 * The following functions provide veneers to the methods that are          *
 * associated with this particular class.  Please read the C Release 5      *
 * user guide for more detailed information on their functionality.         *
 ****************************************************************************/


#ifdef __cplusplus
  extern "C" {
#endif


/*
 * Name        : textarea_replace_text
 * Description : Replaces a block of text with new text in a specified textarea
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               unsigned int index_start
 *               unsigned int index_end
 *               const char *text
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_replace_text ( unsigned int flags,
                                                ObjectId window,
                                                ComponentId textarea,
                                                unsigned int index_start,
                                                unsigned int index_end,
                                                const char *text
                                              );


/*
 * Name        : textarea_insert_text
 * Description : Inserts text at a specified offset into the specified textarea
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               unsigned int index
 *               const char *text
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_insert_text ( unsigned int flags,
                                               ObjectId window,
                                               ComponentId textarea,
                                               unsigned int index,
                                               const char *text
                                             );


/*
 * Name        : textarea_set_state
 * Description : Sets the state of the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               unsigned int state
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_set_state ( unsigned int flags,
                                             ObjectId window,
                                             ComponentId textarea,
                                             unsigned int state
                                           );


/*
 * Name        : textarea_get_state
 * Description : Gets the state of the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 * Out         : unsigned int *state
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_get_state ( unsigned int flags,
                                             ObjectId window,
                                             ComponentId textarea,
                                             unsigned int *state
                                           );


/*
 * Name        : textarea_get_selection_text
 * Description : Gets the selected text of the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               char *buffer
 *               int size
 * Out         : unsigned int *nbytes
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_get_selection_text ( unsigned int flags,
                                                      ObjectId window,
                                                      ComponentId textarea,
                                                      char *buffer,
                                                      int size,
                                                      unsigned int *nbytes
                                                    );


/*
 * Name        : textarea_set_selection
 * Description : Sets the selection for the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               unsigned int index_start
 *               unsigned int index_end
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_set_selection ( unsigned int flags,
                                                 ObjectId window,
                                                 ComponentId textarea,
                                                 unsigned int index_start,
                                                 unsigned int index_end
                                               );


/*
 * Name        : textarea_get_selection_points
 * Description : Gets the selection points for the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 * Out         : unsigned int *index_start
 *               unsigned int *index_end
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_get_selection_points ( unsigned int flags,
                                                        ObjectId window,
                                                        ComponentId textarea,
                                                        unsigned int *index_start,
                                                        unsigned int *index_end
                                                      );


/*
 * Name        : textarea_set_colour
 * Description : Sets the colours for the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               unsigned int foreground
 *               unsigned int background
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_set_colour ( unsigned int flags,
                                              ObjectId window,
                                              ComponentId textarea,
                                              unsigned int foreground,
                                              unsigned int background
                                            );


/*
 * Name        : textarea_get_colour
 * Description : Gets the colours currently being used for the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 * Out         : unsigned int *foreground
 *               unsigned int *background
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_get_colour ( unsigned int flags,
                                              ObjectId window,
                                              ComponentId textarea,
                                              unsigned int *foreground,
                                              unsigned int *background
                                            );


/*
 * Name        : textarea_get_text
 * Description : Gets the text that is current displayed in the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId writable
 *               char *buffer
 *               int buff_size
 * Out         : int *nbytes
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_get_text ( unsigned int flags,
                                            ObjectId window,
                                            ComponentId writable,
                                            char *buffer,
                                            int buff_size,
                                            int *nbytes
                                          );


/*
 * Name        : textarea_set_text
 * Description : Sets the text string to be shown in the specified textarea
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId writable
 *               const char *text
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_set_text ( unsigned int flags,
                                            ObjectId window,
                                            ComponentId writable,
                                            const char *text
                                          );


/*
 * Name        : textarea_set_font
 * Description : Set the font for the specified textarea.
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               const char *font_name
 *               unsigned int width
 *               unsigned int height
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_set_font ( unsigned int flags,
                                            ObjectId window,
                                            ComponentId textarea,
                                            const char *font_name,
                                            unsigned int width,
                                            unsigned int height
                                          );


/*
 * Name        : textarea_set_cursor_position
 * Description : Sets the cursor position in a textarea
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               int index
 *               int *old_index
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_set_cursor_position ( unsigned int flags,
                                                       ObjectId window,
                                                       ComponentId textarea,
                                                       unsigned int index,
                                                       unsigned int *old_index
                                                     );


/*
 * Name        : textarea_get_cursor_position
 * Description : Gets the cursor position in a textarea
 * In          : unsigned int flags
 *               ObjectId window
 *               ComponentId textarea
 *               unsigned int *index
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *textarea_get_cursor_position ( unsigned int flags,
                                                       ObjectId window,
                                                       ComponentId textarea,
                                                       unsigned int *index
                                                     );


#ifdef __cplusplus
  }
#endif




#endif
@


1.3
log
@ * Added 2 new TextArea calls, as they were defined in docs.TextArea.
   TextArea_SetCursorPosition and TextArea_GetCursorPosition.

 * Removed a lot of unneeded comments that wrapped around changes I made
   a while ago.

 * !MkRam now enables throwback.


Version 0.20. Tagged as 'Gadgets-0_20'
@
text
@@


1.2
log
@* These changes make no difference to the build of the TextGadget module.

Re-arranged header files to be suitable for sharing with Toolboxlib and
for export to RiscOS/Export/Lib/tboxlibs/h.  The ordering and style of
these files now matches other toolboxlib header files.

Private TextArea macro definitions moved from TextArea.h to TextAreaP.h

Most function declarations are now auto-generated by MethodGen so they
come with documentation for free, except for TextArea_GetSelection*
which need to be done manually.  This new set of declarations is
identical to the hand-written ones which existed previously.
@
text
@d83 13
a95 11
#define TextArea_GetState	(TextArea_Base + 0)
#define TextArea_SetState	(TextArea_Base + 1)
#define TextArea_SetText	(TextArea_Base + 2)
#define TextArea_GetText	(TextArea_Base + 3)
#define TextArea_InsertText	(TextArea_Base + 4)
#define TextArea_ReplaceText	(TextArea_Base + 5)
#define TextArea_GetSelection	(TextArea_Base + 6)
#define TextArea_SetSelection	(TextArea_Base + 7)
#define TextArea_SetFont	(TextArea_Base + 8)
#define TextArea_SetColour	(TextArea_Base + 9)
#define TextArea_GetColour	(TextArea_Base + 10)
d353 38
@


1.1
log
@Initial revision
@
text
@d15 16
a30 3
/* TextArea.h
 *
 * Implements a text area toolbox gadget
a32 2
#ifndef __TEXTAREA_H
#define __TEXTAREA_H
d34 31
a64 1
/* template definition */
a75 4
#define TextAreaValidFlags	0xC0000003

#define TextArea_Scrollbar_Vertical	(1<<0)
#define TextArea_Scrollbar_Horizontal	(1<<1)
d77 1
a77 1
/* text area methods */
d80 1
d82 1
a93 1
//#define TextArea_RedrawAll	(TextArea_Base + 15)
a94 1
#define TextArea_Type		(sizeof(TextArea)) << 16 | TextArea_Base
d96 3
a98 5
// OS unit indent around edge of gadget for text
#define TextArea_DefaultIndent	5
#define TextArea_DefaultFont	"Corpus.Medium"
#define TextArea_DefaultHeight	(12 * 16)
#define TextArea_DefaultWidth	(12 * 16)
a101 1
/* text area events */
a102 1
// Dunno yet.
d104 254
a357 49
extern _kernel_oserror *textarea_get_state(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *state);

extern _kernel_oserror *textarea_set_state(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int state);

extern _kernel_oserror *textarea_set_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			const char *text);

extern _kernel_oserror *textarea_get_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			char *buffer, int buff_size, int *nbytes);

extern _kernel_oserror *textarea_insert_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int index, const char *text);

extern _kernel_oserror *textarea_replace_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int index_start, unsigned int index_end,
			const char *text);

extern _kernel_oserror *textarea_get_selection_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			char *buffer, int size, unsigned int *nbytes);

extern _kernel_oserror *textarea_get_selection_points(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *index_start, unsigned int *index_end);

extern _kernel_oserror *textarea_set_selection(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int index_start, unsigned int index_end);

extern _kernel_oserror *textarea_set_font(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			const char *font, unsigned int width,
			unsigned int height);

extern _kernel_oserror *textarea_set_colour(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int foreground, unsigned int background);

extern _kernel_oserror *textarea_get_colour(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *foreground, unsigned int *background);
a358 2
extern _kernel_oserror *textgadgets_redraw_all(unsigned int flags,
			ObjectId object_id);
@


1.1.1.1
log
@The Java directory contains the sources for the Java support modules
(TextGadget, etc.) and the makefiles to complete the Java ROM build
under RiscOS.

@
text
@@


1.1.1.2
log
@Added flags for word-wrapping
@
text
@d35 1
a35 1
#define TextAreaValidFlags	0xC0000007
a38 1
#define TextArea_WordWrap		(1<<2)
@
