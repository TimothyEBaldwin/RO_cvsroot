head	1.3;
access;
symbols
	RO_5_07:1.3
	mjrobert_Java_26_08_98:1.1.2.1
	Gadgets-0_11:1.2
	sbrodie_TextGadgets_merged_19Jun98:1.2
	sbrodie_Spin_merge_18Jun98:1.1.2.1
	Gadgets-0_10-1_1_2_2:1.1.2.1
	pwombwel_0_09:1.1.2.1
	mrison_gadgets-0_05:1.1.2.1
	Daytona:1.1.2.1.0.2
	Daytona_bp:1.1.2.1
	Spinner_RCA116:1.1.2.1
	Spinner_B20_2:1.1.2.1
	Spinner_19_3:1.1.2.1
	Spinner_B18:1.1.2.1
	Spinner_B17:1.1.2.1
	Spinner_B15:1.1.2.1
	Spinner_B14:1.1.2.1
	Spinner_B13:1.1.2.1
	Spinner_B12:1.1.2.1
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	98.06.19.14.32.12;	author sbrodie;	state dead;
branches;
next	1.2;

1.2
date	98.06.18.18.01.31;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	97.05.21.12.11.22;	author rlougher;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.05.21.12.11.23;	author rlougher;	state Exp;
branches
	1.1.2.1.2.1;
next	;

1.1.2.1.2.1
date	98.01.28.18.15.29;	author mrison;	state dead;
branches;
next	;


desc
@@


1.3
log
@Removed out-of-date long name duplicates.
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * utils.h
 *
 * The utils.c file defines various functions that might otherwise
 * have been found in a library like RISC OS Lib, ie. small functions
 * based on SWI calls to RISC OS.
 *
 */
#ifndef UTILS_H
#define UTILS_H

#define FAILED 0
#define SUCCESS 1

#include "toolbox.h"

/*
 * This structure is used to carry information about a sprite around
 */

typedef struct
{
    char name[12];
    int width;
    int height;
    int depth;
    unsigned int mode;
} ROSpriteInfo;

extern MessagesFD	messages;

int decompress(char **file, int *size);

int file_size(char *name) ;

_kernel_oserror * file_load(char *name, char *add) ;

void CLG(void);

char *object_name(ObjectId id);

int is_object(ObjectId id,char *name);

void warn_about_memory(void);

ObjectId named_object(char *name);

char *lookup_token(const char *t);

_kernel_oserror *sprite_area_create(void);

_kernel_oserror *sprite_area_delete(void);

_kernel_oserror *sprite_create(unsigned int width, unsigned int height,
		unsigned int depth, char **name);

_kernel_oserror *sprite_delete(char *name);

_kernel_oserror *os_switch_to_sprite (ROSpriteInfo *sprinfo, int *old);

_kernel_oserror * os_switch_to_screen (int *old);

_kernel_oserror *os_set_gcol (unsigned int p1);

_kernel_oserror *os_switch_surface (ROSpriteInfo *sprinfo);

#define PLOT_MOVE		4
#define PLOT_DRAW		5
#define PLOT_BACK		7
#define PLOT_DRAW_RELATIVE	1
#define PLOT_LINE		0
#define PLOT_TRIANGLE_FILL	80
#define PLOT_RECTANGLE_FILL	96
#define PLOT_ARC		160
#define PLOT_SEGMENT		168
#define PLOT_BLOCK_COPY		190
#define PLOT_ELLIPSE		192
#define PLOT_ELLIPSE_FILL	200
_kernel_oserror *os_plot(unsigned short command, int x, int y);
_kernel_oserror * os_sprite_plot_to_screen (ROSpriteInfo *sprinfo, char *tt, long x, long y);

// Following functions are defined in riscos_graphics.s
BBox get_graphics_window(void);
void set_graphics_window(BBox box);
/* set_graphics_window_in_window ------------------------------------------
 * Sets a graphics window inside existing graphics window
 * Returns: 0 if new window is 0*0 pixels, else 1
 */
int set_graphics_window_in_window(BBox inside, BBox outside);

_kernel_oserror *colourtrans_set_gcol(unsigned int colour,
			unsigned int flags, unsigned int action);
_kernel_oserror *colourtrans_set_font_colours(unsigned int font_handle,
			unsigned int background, unsigned int foreground,
			unsigned int max_offset);

#endif
@


1.2
log
@Merged Spinner branch back to trunk.
@
text
@@


1.1
log
@file riscos_utils was initially added on branch Spinner.
@
text
@d1 111
@


1.1.2.1
log
@Filename was truncated to 10 chars
@
text
@a0 111
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * utils.h
 *
 * The utils.c file defines various functions that might otherwise
 * have been found in a library like RISC OS Lib, ie. small functions
 * based on SWI calls to RISC OS.
 *
 */
#ifndef UTILS_H
#define UTILS_H

#define FAILED 0
#define SUCCESS 1

#include "toolbox.h"

/*
 * This structure is used to carry information about a sprite around
 */

typedef struct
{
    char name[12];
    int width;
    int height;
    int depth;
    unsigned int mode;
} ROSpriteInfo;

extern MessagesFD	messages;

int decompress(char **file, int *size);

int file_size(char *name) ;

_kernel_oserror * file_load(char *name, char *add) ;

void CLG(void);

char *object_name(ObjectId id);

int is_object(ObjectId id,char *name);

void warn_about_memory(void);

ObjectId named_object(char *name);

char *lookup_token(const char *t);

_kernel_oserror *sprite_area_create(void);

_kernel_oserror *sprite_area_delete(void);

_kernel_oserror *sprite_create(unsigned int width, unsigned int height,
		unsigned int depth, char **name);

_kernel_oserror *sprite_delete(char *name);

_kernel_oserror *os_switch_to_sprite (ROSpriteInfo *sprinfo, int *old);

_kernel_oserror * os_switch_to_screen (int *old);

_kernel_oserror *os_set_gcol (unsigned int p1);

_kernel_oserror *os_switch_surface (ROSpriteInfo *sprinfo);

#define PLOT_MOVE		4
#define PLOT_DRAW		5
#define PLOT_BACK		7
#define PLOT_DRAW_RELATIVE	1
#define PLOT_LINE		0
#define PLOT_TRIANGLE_FILL	80
#define PLOT_RECTANGLE_FILL	96
#define PLOT_ARC		160
#define PLOT_SEGMENT		168
#define PLOT_BLOCK_COPY		190
#define PLOT_ELLIPSE		192
#define PLOT_ELLIPSE_FILL	200
_kernel_oserror *os_plot(unsigned short command, int x, int y);
_kernel_oserror * os_sprite_plot_to_screen (ROSpriteInfo *sprinfo, char *tt, long x, long y);

// Following functions are defined in riscos_graphics.s
BBox get_graphics_window(void);
void set_graphics_window(BBox box);
/* set_graphics_window_in_window ------------------------------------------
 * Sets a graphics window inside existing graphics window
 * Returns: 0 if new window is 0*0 pixels, else 1
 */
int set_graphics_window_in_window(BBox inside, BBox outside);

_kernel_oserror *colourtrans_set_gcol(unsigned int colour,
			unsigned int flags, unsigned int action);
_kernel_oserror *colourtrans_set_font_colours(unsigned int font_handle,
			unsigned int background, unsigned int foreground,
			unsigned int max_offset);

#endif
@


1.1.2.1.2.1
log
@Manually merge in v0.06 bugfixes from Spinner branch, add CLR
functionality and tilde support, reinstate region select, and explicitly
disallow Ctrl-I (tab support is not functional in TextGadget anyway).
@
text
@@
