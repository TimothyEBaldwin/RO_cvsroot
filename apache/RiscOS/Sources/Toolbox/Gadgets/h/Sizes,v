head	1.2;
access;
symbols
	Gadgets-0_44:1.2
	Gadgets-0_43:1.2
	Gadgets-0_42:1.2
	Gadgets-0_41:1.2
	Gadgets-0_40:1.2
	Gadgets-0_39:1.1
	Gadgets-0_38:1.1
	Gadgets-0_37:1.1
	Gadgets-0_36:1.1
	Gadgets-0_35:1.1
	Gadgets-0_34:1.1
	Gadgets-0_33:1.1
	Gadgets-0_32:1.1
	Gadgets-0_31:1.1
	Gadgets-0_30:1.1
	Gadgets-0_29:1.1
	Gadgets-0_28:1.1
	RO_5_07:1.1
	Gadgets-0_27:1.1
	Gadgets-0_26:1.1
	Gadgets-0_25:1.1
	Gadgets-0_24:1.1
	Gadgets-0_23:1.1
	Gadgets-0_22:1.1
	Gadgets-0_21:1.1
	Gadgets-0_20:1.1
	Gadgets-0_19:1.1
	Gadgets-0_18:1.1
	Gadgets-0_17:1.1
	Gadgets-0_16:1.1
	Gadgets-0_15:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.11.28.19.08.35;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	Hv9ItC5GsjO1pTKy;

1.1
date	99.03.26.12.25.19;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Plot a more credible rendition of TextArea and ScrollList
Both the TextArea gadget and ScrollList were outputting an unhelpful white rectangle and mysterious black rectangle when asked to plot the gadget prototype (eg. in the gadget palette in ResEd). The black rectangle turned out to represent a scroll bar, though it was the wrong width.
Changed to plot a 2D scrollbar (ala RISC OS 2) then overlay a virtual icon with the name of the gadget type.
main.c:
Relocate helper functions into glib.
Return 'Bad SWI' for unknown subreasons.
glib.c/glib3.c:
Remove various unused functions.
Added new function to plot a grey scrollbar from nested rectangles.
TextArea.c:
Add a vertical, or horixontal, or both, scrollbar plus the label "TextArea".
ScrollList.c:
Add a vertical scrollbar plus the label "ScrollList".

Requires Common-0_25 for the colour defines. Tested in !ResEd in various eigenfactor modes.

Version 0.40. Tagged as 'Gadgets-0_40'
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Sizes.h
 */

#define SIZES_TOOL_DEFAULT    42 /* OSU, inc border */
#define SIZES_SCROLL_WELL_LR  7  /* OSU */
#define SIZES_SCROLL_WELL_TB  1  /* Pixel */
#define SIZES_SCROLL_BAR      23 /* OSU   */

unsigned int sizes_x_scale    (void);
unsigned int sizes_y_scale    (void);

void         sizes_tool_sizes (unsigned int * title, unsigned int * vscroll, unsigned int * hscroll);
@


1.1
log
@Various fixes and extensions to ScrollList, plus a related fix in TextArea
and ScrollBar.

Title background colour of gadgets was either undefined or set to 0; should
be 2. Corrected. Would be apparent with 2D tools or any transparent tool
sprite set.

SELECT clicks on deselected entries in a ScrollList now deselect any other
selected items before selecting the new one.

Embedded window of TextArea and ScrollList now put in the right place. At
create time, the sizes of the current tool sprite set is also checked; this
used to be hard coded. If the tool sizes and/or Desktop scaling changes at
run-time this won't be noticed yet, as no mechanism to pass Wimp messages
to *external* gadgets exists in the Toolbox currently. Still, at least it
gets it right the next time a new instance of the gadget is created.

Flag bit ScrollList_SelectionChangingMethod_SendEvent to any of
scrolllist_select_item, scrolllist_deselect_item or scrolllist_delete_items
prompts them to send ScrollList_Selection to the client on completion. This
can help simplify client UI code for UIs which depend on what is selected
(e.g. a "Select all" button greys out if all items are selected by a
keyboard shortcut - this can now all work on just the one event handler).

Flag bit ScrollList_SelectionChangingMethod_OnAll to either of
scrolllist_select_item or scrolllist_deselect_item tells the methods to
act like a "Select all" or "Clear selection" call. This is a common client
operation and it's a lot easier for the ScrollList gadget to do it than
have the client iterate over all items.

Supports new method ScrollList_CountItems (scrolllist_count_items veneer
present in tboxlibs 0.04 or later). Returns number of entries in gadget.
Avoids clumsy situation of both the gadget and the clienty keeping track
of how many entries are present.

Note that docs.ScrollList mis-documented some flags settings. Now fixed.

Version 0.15. Not tagged
@
text
@d18 4
a21 1
#define SIZES_TOOL_DEFAULT 44
@

