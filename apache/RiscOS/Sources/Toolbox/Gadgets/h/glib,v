head	1.4;
access;
symbols
	Gadgets-0_44:1.4
	Gadgets-0_43:1.4
	Gadgets-0_42:1.4
	Gadgets-0_41:1.4
	Gadgets-0_40:1.4
	Gadgets-0_39:1.3
	Gadgets-0_38:1.3
	Gadgets-0_37:1.3
	Gadgets-0_36:1.3
	Gadgets-0_35:1.2
	Gadgets-0_34:1.2
	Gadgets-0_33:1.2
	Gadgets-0_32:1.2
	Gadgets-0_31:1.2
	Gadgets-0_30:1.2
	Gadgets-0_29:1.2
	Gadgets-0_28:1.2
	RO_5_07:1.2
	Gadgets-0_27:1.2
	Gadgets-0_26:1.2
	Gadgets-0_25:1.2
	Gadgets-0_24:1.2
	Gadgets-0_23:1.2
	Gadgets-0_22:1.2
	Gadgets-0_21:1.2
	Gadgets-0_20:1.2
	Gadgets-0_19:1.2
	Gadgets-0_18:1.2
	Gadgets-0_17:1.2
	Gadgets-0_16:1.2
	Gadgets-0_15:1.2
	sforrest_daytona_appflash-0_31:1.1.2.1
	Gadgets-0_14:1.2
	mjrobert_Java_26_08_98:1.1.2.1
	blaughto_daytona_appflash-0_30:1.1.2.1
	blaughto_daytona_appflash-0_29:1.1.2.1
	blaughto_daytona_appflash-0_28:1.1.2.1
	Gadgets-0_11:1.2
	sbrodie_TextGadgets_merged_19Jun98:1.2
	sbrodie_Daytona_merge_19Jun98:1.1.2.1
	sbrodie_Spin_merge_18Jun98:1.1.2.1
	jberanek_gadgets-0_08:1.1.2.1
	Gadgets-0_10-1_1_2_2:1.1.2.1
	blaughto_daytona_appflash-0_27:1.1.2.1
	blaughto_daytona_appflash-0_26:1.1.2.1
	blaughto_daytona_appflash-0_25:1.1.2.1
	blaughto_daytona_appflash-0_24:1.1.2.1
	blaughto_daytona_appflash-0_23:1.1.2.1
	blaughto_daytona_appflash-0_21:1.1.2.1
	blaughto_daytona_appflash-0_20:1.1.2.1
	blaughto_daytona_appflash-0_19:1.1.2.1
	jberanek_gadgets-0_07:1.1.2.1
	blaughto_daytona_appflash-0_18:1.1.2.1
	mrison_gadgets-0_06:1.1.2.1
	pwombwel_0_09:1.1.2.1
	mrison_gadgets-0_05:1.1.2.1
	Daytona:1.1.2.1.0.2
	Daytona_bp:1.1.2.1
	Spinner_RCA116:1.1.2.1
	Spinner_B20_2:1.1.2.1
	Spinner_19_3:1.1.2.1
	Spinner_B18:1.1.2.1
	Spinner_B17:1.1.2.1
	Spinner_B15:1.1.2.1
	Spinner_B14:1.1.2.1
	Spinner_B13:1.1.2.1
	Spinner_B12:1.1.2.1
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2015.11.28.19.08.35;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	Hv9ItC5GsjO1pTKy;

1.3
date	2013.08.30.19.34.40;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	cFJZhP2Bmu3bUv3x;

1.2
date	98.06.18.18.01.29;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	97.05.21.10.34.36;	author rlougher;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.05.21.10.34.37;	author rlougher;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Plot a more credible rendition of TextArea and ScrollList
Both the TextArea gadget and ScrollList were outputting an unhelpful white rectangle and mysterious black rectangle when asked to plot the gadget prototype (eg. in the gadget palette in ResEd). The black rectangle turned out to represent a scroll bar, though it was the wrong width.
Changed to plot a 2D scrollbar (ala RISC OS 2) then overlay a virtual icon with the name of the gadget type.
main.c:
Relocate helper functions into glib.
Return 'Bad SWI' for unknown subreasons.
glib.c/glib3.c:
Remove various unused functions.
Added new function to plot a grey scrollbar from nested rectangles.
TextArea.c:
Add a vertical, or horixontal, or both, scrollbar plus the label "TextArea".
ScrollList.c:
Add a vertical scrollbar plus the label "ScrollList".

Requires Common-0_25 for the colour defines. Tested in !ResEd in various eigenfactor modes.

Version 0.40. Tagged as 'Gadgets-0_40'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   glib.h
 * Purpose: glib module of GTest module
 * Author:  NK
 *
 */


#ifndef __glib_h
#define __glib_h

#include "kernel.h"

/* filter types */

typedef enum {GLib_ToolboxEvents = 0, GLib_WimpEvents = 1, GLib_WimpMessages =2} FilterTypes;

/* operations on extended gadgets */

#define GADGET_ADD      1
#define GADGET_REMOVE   2
#define GADGET_FADE     3
#define GADGET_METHOD   4
#define GADGET_MCLICK   6
#define GADGET_PLOT     9
#define GADGET_SETFOCUS 10
#define GADGET_MOVE     11
#define GADGET_POSTADD  12

/* handler types */

#define NO_HANDLER      0
#define DEFAULT_HANDLER 1
#define PRIVATE_HANDLER 2

typedef struct {
   int add:2,
   remove:2,
   postadd:2,
   method:2,
   reserved:2,
   mclick:2,
   reserved2:4,
   plot:2,
   setfocus:2,
   move:2,
   fade:2;
} FT;

typedef union {
   int mask;
   FT  bits;
} FeatureMask;

typedef struct {
  int type;
  int validflags;
  FeatureMask features;
} GadgetExtensionRecord;

/* support functions */

extern _kernel_oserror *register_gadget_types(unsigned int flags, GadgetExtensionRecord *rec,int SWIno);

extern _kernel_oserror *deregister_gadget_type(unsigned int flags, int type,int SWIno);

extern _kernel_oserror *register_gadget_type(unsigned int flags, int type,unsigned int valid, unsigned int mask,int SWIno);

void *mem_allocate(int amount);

void mem_free(void *tag);

void graphics_window(wimp_Bbox *area);

_kernel_oserror *add_task_interest(FilterTypes type, int *list, int SWI);

_kernel_oserror *remove_task_interest(FilterTypes type,int *list);

extern void work_to_screen(wimp_Bbox *box, wimp_GetWindowState *state);
extern void screen_to_work(wimp_Bbox *box, wimp_GetWindowState *state);

extern void plot_2d_scrollbar(const wimp_Bbox *, int, BOOL);

#endif
@


1.3
log
@Change to link against tboxlibint
For some reason this toolbox module was unique in linking against the public toolboxlib rather than the internal one, this meant having to carefully tippy toe around not mixing header files (as they contain similar but differently named definitions).
A massive search and replace job.
Tested briefly using ResEd/ResTest and a textarea and scrolllist in a ROM build.
Requires Common-0_21.

Version 0.36. Tagged as 'Gadgets-0_36'
@
text
@a85 6
int glib_create_icon(wimp_IconCreate *i);

int glib_create_gadget(ObjectID,Gadget *i,int f);

void glib_move_gadget(int type, ObjectID obj,ComponentID id,wimp_Bbox *box);

a87 2
wimp_Bbox *intersection(wimp_Bbox *a, wimp_Bbox *b);

d92 4
a95 1
_kernel_oserror *glib_plot_gadget(int flags,Gadget *g);
@


1.2
log
@Merged Spinner branch back to trunk.
@
text
@a26 19
#ifndef __wimp_h
#include "wimp.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif

/* Gadget extension service calls provided by the window module */

#define Service_WindowModuleStarting    (Window_SWIChunkBase + 1)
#define Service_WindowModuleDying       (Window_SWIChunkBase + 2)
#define Service_GadgetRegistered        (Window_SWIChunkBase + 3)
#define Service_GadgetDeregistered      (Window_SWIChunkBase + 4)

d86 1
a86 1
int glib_create_icon(WimpCreateIconBlock *i);
d88 1
a88 1
int glib_create_gadget(ObjectId,Gadget *i,int f);
d90 1
a90 1
void glib_move_gadget(int type, ObjectId obj,ComponentId id,BBox *box);
d92 1
a92 1
void graphics_window(BBox *area);
d94 1
a94 1
BBox *intersection(BBox *a, BBox *b);
@


1.1
log
@file glib was initially added on branch Spinner.
@
text
@d1 121
@


1.1.2.1
log
@*** empty log message ***
@
text
@a0 121
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   glib.h
 * Purpose: glib module of GTest module
 * Author:  NK
 *
 */


#ifndef __glib_h
#define __glib_h

#include "kernel.h"

#ifndef __wimp_h
#include "wimp.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif

/* Gadget extension service calls provided by the window module */

#define Service_WindowModuleStarting    (Window_SWIChunkBase + 1)
#define Service_WindowModuleDying       (Window_SWIChunkBase + 2)
#define Service_GadgetRegistered        (Window_SWIChunkBase + 3)
#define Service_GadgetDeregistered      (Window_SWIChunkBase + 4)

/* filter types */

typedef enum {GLib_ToolboxEvents = 0, GLib_WimpEvents = 1, GLib_WimpMessages =2} FilterTypes;

/* operations on extended gadgets */

#define GADGET_ADD      1
#define GADGET_REMOVE   2
#define GADGET_FADE     3
#define GADGET_METHOD   4
#define GADGET_MCLICK   6
#define GADGET_PLOT     9
#define GADGET_SETFOCUS 10
#define GADGET_MOVE     11
#define GADGET_POSTADD  12

/* handler types */

#define NO_HANDLER      0
#define DEFAULT_HANDLER 1
#define PRIVATE_HANDLER 2

typedef struct {
   int add:2,
   remove:2,
   postadd:2,
   method:2,
   reserved:2,
   mclick:2,
   reserved2:4,
   plot:2,
   setfocus:2,
   move:2,
   fade:2;
} FT;

typedef union {
   int mask;
   FT  bits;
} FeatureMask;

typedef struct {
  int type;
  int validflags;
  FeatureMask features;
} GadgetExtensionRecord;

/* support functions */

extern _kernel_oserror *register_gadget_types(unsigned int flags, GadgetExtensionRecord *rec,int SWIno);

extern _kernel_oserror *deregister_gadget_type(unsigned int flags, int type,int SWIno);

extern _kernel_oserror *register_gadget_type(unsigned int flags, int type,unsigned int valid, unsigned int mask,int SWIno);

void *mem_allocate(int amount);

void mem_free(void *tag);

int glib_create_icon(WimpCreateIconBlock *i);

int glib_create_gadget(ObjectId,Gadget *i,int f);

void glib_move_gadget(int type, ObjectId obj,ComponentId id,BBox *box);

void graphics_window(BBox *area);

BBox *intersection(BBox *a, BBox *b);

_kernel_oserror *add_task_interest(FilterTypes type, int *list, int SWI);

_kernel_oserror *remove_task_interest(FilterTypes type,int *list);

_kernel_oserror *glib_plot_gadget(int flags,Gadget *g);

#endif
@
