head	1.3;
access;
symbols
	Gadgets-0_44:1.3
	Gadgets-0_43:1.3
	Gadgets-0_42:1.3
	Gadgets-0_41:1.3
	Gadgets-0_40:1.3
	Gadgets-0_39:1.3
	Gadgets-0_38:1.3
	Gadgets-0_37:1.3
	Gadgets-0_36:1.3
	Gadgets-0_35:1.2
	Gadgets-0_34:1.2
	Gadgets-0_33:1.2
	Gadgets-0_32:1.2
	Gadgets-0_31:1.2
	Gadgets-0_30:1.1.1.1
	Gadgets-0_29:1.1.1.1
	Gadgets-0_28:1.1.1.1
	RO_5_07:1.1.1.1
	Gadgets-0_27:1.1.1.1
	Gadgets-0_26:1.1.1.1
	Gadgets-0_25:1.1.1.1
	Gadgets-0_24:1.1.1.1
	Gadgets-0_23:1.1.1.1
	Gadgets-0_22:1.1.1.1
	Gadgets-0_21:1.1.1.1
	Gadgets-0_20:1.1.1.1
	Gadgets-0_19:1.1.1.1
	Gadgets-0_18:1.1.1.1
	Gadgets-0_17:1.1.1.1
	Gadgets-0_16:1.1.1.1
	Gadgets-0_15:1.1.1.1
	sforrest_daytona_appflash-0_31:1.1.1.1
	Gadgets-0_14:1.1.1.1
	mjrobert_Java_26_08_98:1.1.1.1
	blaughto_daytona_appflash-0_30:1.1.1.1
	blaughto_daytona_appflash-0_29:1.1.1.1
	blaughto_daytona_appflash-0_28:1.1.1.1
	Gadgets-0_11:1.1.1.1
	sbrodie_TextGadgets_merged_19Jun98:1.1.1.1
	sbrodie_Daytona_merge_19Jun98:1.1.1.1
	sbrodie_Spin_merge_18Jun98:1.1.1.1
	jberanek_gadgets-0_08:1.1.1.1
	Gadgets-0_10-1_1_2_2:1.1.1.1
	blaughto_daytona_appflash-0_27:1.1.1.1
	blaughto_daytona_appflash-0_26:1.1.1.1
	blaughto_daytona_appflash-0_25:1.1.1.1
	blaughto_daytona_appflash-0_24:1.1.1.1
	blaughto_daytona_appflash-0_23:1.1.1.1
	blaughto_daytona_appflash-0_21:1.1.1.1
	blaughto_daytona_appflash-0_20:1.1.1.1
	blaughto_daytona_appflash-0_19:1.1.1.1
	jberanek_gadgets-0_07:1.1.1.1
	blaughto_daytona_appflash-0_18:1.1.1.1
	mrison_gadgets-0_06:1.1.1.1
	pwombwel_0_09:1.1.1.1
	mrison_gadgets-0_05:1.1.1.1
	Daytona:1.1.1.1.0.2
	Daytona_bp:1.1.1.1
	Spinner_RCA116:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.08.30.19.34.40;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	cFJZhP2Bmu3bUv3x;

1.2
date	2010.02.28.10.40.31;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	97.05.13.16.25.55;	author rlougher;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.13.16.25.55;	author rlougher;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Change to link against tboxlibint
For some reason this toolbox module was unique in linking against the public toolboxlib rather than the internal one, this meant having to carefully tippy toe around not mixing header files (as they contain similar but differently named definitions).
A massive search and replace job.
Tested briefly using ResEd/ResTest and a textarea and scrolllist in a ROM build.
Requires Common-0_21.

Version 0.36. Tagged as 'Gadgets-0_36'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * riscos_uti.h
 *
 * The utils.c file defines various functions that might otherwise
 * have been found in a library like RISC OS Lib, ie. small functions
 * based on SWI calls to RISC OS.
 *
 */
#ifndef RISCOS_UTI_H
#define RISCOS_UTI_H

#define FAILED 0
#define SUCCESS 1

/*
 * This structure is used to carry information about a sprite around
 */

typedef struct
{
    char name[12];
    int width;
    int height;
    int depth;
    unsigned int mode;
} ROSpriteInfo;

extern MessagesFD	messages;

int decompress(char **file, int *size);

int file_size(char *name) ;

_kernel_oserror * file_load(char *name, char *add) ;

void CLG(void);

char *object_name(ObjectID id);

int is_object(ObjectID id,char *name);

void warn_about_memory(void);

ObjectID named_object(char *name);

char *lookup_token(const char *t);

_kernel_oserror *sprite_area_create(void);

_kernel_oserror *sprite_area_delete(void);

_kernel_oserror *sprite_create(unsigned int width, unsigned int height,
		unsigned int depth, char **name);

_kernel_oserror *sprite_delete(char *name);

_kernel_oserror *os_switch_to_sprite (ROSpriteInfo *sprinfo, int *old);

_kernel_oserror * os_switch_to_screen (int *old);

_kernel_oserror *os_set_gcol (unsigned int p1);

_kernel_oserror *os_switch_surface (ROSpriteInfo *sprinfo);

#define PLOT_MOVE		4
#define PLOT_DRAW		5
#define PLOT_BACK		7
#define PLOT_DRAW_RELATIVE	1
#define PLOT_LINE		0
#define PLOT_TRIANGLE_FILL	80
#define PLOT_RECTANGLE_FILL	96
#define PLOT_ARC		160
#define PLOT_SEGMENT		168
#define PLOT_BLOCK_COPY		190
#define PLOT_ELLIPSE		192
#define PLOT_ELLIPSE_FILL	200
_kernel_oserror *os_plot(unsigned short command, int x, int y);
_kernel_oserror * os_sprite_plot_to_screen (ROSpriteInfo *sprinfo, char *tt, long x, long y);

// Following functions are defined in riscos_graphics.s
wimp_Bbox get_graphics_window(void);
void set_graphics_window(wimp_Bbox box);
/* set_graphics_window_in_window ------------------------------------------
 * Sets a graphics window inside existing graphics window
 * Returns: 0 if new window is 0*0 pixels, else 1
 */
int set_graphics_window_in_window(wimp_Bbox inside, wimp_Bbox outside);

_kernel_oserror *colourtrans_set_gcol(unsigned int colour,
			unsigned int flags, unsigned int action);
_kernel_oserror *colourtrans_set_font_colours(unsigned int font_handle,
			unsigned int background, unsigned int foreground,
			unsigned int max_offset);

#endif
@


1.2
log
@Function returns no longer use stack structures.
Previously, a number of errors were contructed as automatic variables then returned to the caller - potentially accessing stale stack area. All error blocks are now held in ROM and cast from there.
Error numbers are now not &00000000 or &20202020, using the allocated base - requires 'Common-0_15'.
Trimmed some unused debugging code out, saves about 3k.
Renamed C++ clashing variables to stop the compiler moaning.
Implemented feature request to accept the empty string "" as no font handle in _SetFont calls.
At some point, this module needs internationalising.

Version 0.31. Tagged as 'Gadgets-0_31'
@
text
@d16 1
a16 1
 * utils.h
d23 2
a24 2
#ifndef UTILS_H
#define UTILS_H
a28 4
#ifndef __toolbox_h
#include "toolbox.h"
#endif

d52 1
a52 1
char *object_name(ObjectId id);
d54 1
a54 1
int is_object(ObjectId id,char *name);
d58 1
a58 1
ObjectId named_object(char *name);
d95 2
a96 2
BBox get_graphics_window(void);
void set_graphics_window(BBox box);
d101 1
a101 1
int set_graphics_window_in_window(BBox inside, BBox outside);
@


1.1
log
@Initial revision
@
text
@d29 1
d31 1
@


1.1.1.1
log
@The Java directory contains the sources for the Java support modules
(TextGadget, etc.) and the makefiles to complete the Java ROM build
under RiscOS.

@
text
@@
