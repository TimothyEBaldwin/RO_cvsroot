head	1.5;
access;
symbols
	Gadgets-0_44:1.5
	Gadgets-0_43:1.5
	Gadgets-0_42:1.5
	Gadgets-0_41:1.5
	Gadgets-0_40:1.5
	Gadgets-0_39:1.4
	Gadgets-0_38:1.4
	Gadgets-0_37:1.4
	Gadgets-0_36:1.4
	Gadgets-0_35:1.3
	Gadgets-0_34:1.3
	Gadgets-0_33:1.3
	Gadgets-0_32:1.3
	Gadgets-0_31:1.3
	Gadgets-0_30:1.3
	Gadgets-0_29:1.3
	Gadgets-0_28:1.3
	RO_5_07:1.3
	Gadgets-0_27:1.3
	Gadgets-0_26:1.3
	Gadgets-0_25:1.3
	Gadgets-0_24:1.3
	Gadgets-0_23:1.3
	Gadgets-0_22:1.3
	Gadgets-0_21:1.3
	Gadgets-0_20:1.3
	Gadgets-0_19:1.3
	Gadgets-0_18:1.3
	Gadgets-0_17:1.3
	Gadgets-0_16:1.3
	Gadgets-0_15:1.3
	sforrest_daytona_appflash-0_31:1.1.2.1.2.1
	Gadgets-0_14:1.3
	mjrobert_Java_26_08_98:1.1.2.1
	blaughto_daytona_appflash-0_30:1.1.2.1.2.1
	blaughto_daytona_appflash-0_29:1.1.2.1.2.1
	blaughto_daytona_appflash-0_28:1.1.2.1.2.1
	Gadgets-0_11:1.3
	sbrodie_TextGadgets_merged_19Jun98:1.3
	sbrodie_Daytona_merge_19Jun98:1.1.2.1.2.1
	sbrodie_Spin_merge_18Jun98:1.1.2.1
	jberanek_gadgets-0_08:1.1.2.1.2.1
	Gadgets-0_10-1_1_2_2:1.1.2.1
	blaughto_daytona_appflash-0_27:1.1.2.1.2.1
	blaughto_daytona_appflash-0_26:1.1.2.1.2.1
	blaughto_daytona_appflash-0_25:1.1.2.1.2.1
	blaughto_daytona_appflash-0_24:1.1.2.1.2.1
	blaughto_daytona_appflash-0_23:1.1.2.1.2.1
	blaughto_daytona_appflash-0_21:1.1.2.1.2.1
	blaughto_daytona_appflash-0_20:1.1.2.1.2.1
	blaughto_daytona_appflash-0_19:1.1.2.1.2.1
	jberanek_gadgets-0_07:1.1.2.1.2.1
	blaughto_daytona_appflash-0_18:1.1.2.1.2.1
	mrison_gadgets-0_06:1.1.2.1.2.1
	pwombwel_0_09:1.1.2.1
	mrison_gadgets-0_05:1.1.2.1
	Daytona:1.1.2.1.0.2
	Daytona_bp:1.1.2.1
	Spinner_RCA116:1.1.2.1
	Spinner_B20_2:1.1.2.1
	Spinner_19_3:1.1.2.1
	Spinner_B18:1.1.2.1
	Spinner_B17:1.1.2.1
	Spinner_B15:1.1.2.1
	Spinner_B14:1.1.2.1
	Spinner_B13:1.1.2.1
	Spinner_B12:1.1.2.1
	Spinner:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2015.11.28.19.08.33;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	Hv9ItC5GsjO1pTKy;

1.4
date	2013.08.30.19.34.37;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	cFJZhP2Bmu3bUv3x;

1.3
date	98.06.19.12.47.53;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	98.06.18.18.01.26;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	97.05.21.10.15.52;	author rlougher;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.05.21.10.15.52;	author rlougher;	state Exp;
branches
	1.1.2.1.2.1;
next	;

1.1.2.1.2.1
date	98.01.28.18.15.23;	author mrison;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Plot a more credible rendition of TextArea and ScrollList
Both the TextArea gadget and ScrollList were outputting an unhelpful white rectangle and mysterious black rectangle when asked to plot the gadget prototype (eg. in the gadget palette in ResEd). The black rectangle turned out to represent a scroll bar, though it was the wrong width.
Changed to plot a 2D scrollbar (ala RISC OS 2) then overlay a virtual icon with the name of the gadget type.
main.c:
Relocate helper functions into glib.
Return 'Bad SWI' for unknown subreasons.
glib.c/glib3.c:
Remove various unused functions.
Added new function to plot a grey scrollbar from nested rectangles.
TextArea.c:
Add a vertical, or horixontal, or both, scrollbar plus the label "TextArea".
ScrollList.c:
Add a vertical scrollbar plus the label "ScrollList".

Requires Common-0_25 for the colour defines. Tested in !ResEd in various eigenfactor modes.

Version 0.40. Tagged as 'Gadgets-0_40'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"

#include "macros.h"
#include "twimp.h"
#include "objects/toolbox.h"
#include "objects/window.h"

#include "glib.h"

typedef struct _tasks {
  struct _tasks *next;
  int th;
  int refc;
  int SWI;
} TaskRec;

static TaskRec *all_tasks[8]=NULL;

static TaskRec *find_current_task(int *th,int type)
{
   TaskRec *list = all_tasks[type];
   WimpSysInfo inf;

   wimp_read_sys_info(5,&inf);
   if (th) *th = inf.r0;

   while (list) {
     if (list->th == inf.r0) return list;
     list=list->next;

   }
   return list;
}

static int FILTERS[] = {Toolbox_RegisterPostFilter_ToolboxEvent,
    	      Toolbox_RegisterPostFilter_WimpEvent,
    	      Toolbox_RegisterPostFilter_WimpMessage};

_kernel_oserror *add_task_interest(FilterTypes type, int *list, int SWI)
{
   int th;
   _kernel_swi_regs regs;
   _kernel_oserror *e;
   TaskRec *rec=find_current_task(&th,type);

   if (!rec) {
     rec = calloc(1,sizeof(TaskRec));
     if (!rec) return NULL;
     rec->th = th;
     rec->SWI = SWI;
     rec->next = all_tasks[type];
     all_tasks[type] = rec;
     regs.r[0] = 0;
     regs.r[1] = SWI;
     regs.r[2] = (int) rec;
     regs.r[3] = FILTERS[type];
     regs.r[4] = (int) list;
     e = _kernel_swi (Toolbox_RegisterPostFilter, &regs, &regs);
     if (e) return e;
   }

   rec->refc++;
   return NULL;
}

_kernel_oserror *remove_task_interest(FilterTypes type,int *inter)
{
   _kernel_swi_regs regs;
   _kernel_oserror *e;
   TaskRec *list = all_tasks[type],*rec=find_current_task(0,type);

   if (rec) {
     rec->refc--;
     if (!rec->refc) {
       regs.r[0] = Toolbox_RegisterPostFilter_Remove;
       regs.r[1] = rec->SWI;
       regs.r[2] = (int) rec;
       regs.r[3] = FILTERS[type];
       regs.r[4] = (int) inter;
       e = _kernel_swi (Toolbox_RegisterPostFilter, &regs, &regs);
       /* remove from list and free up */

       if (list == rec) all_tasks[type] = rec->next;
       else {
          while(list) {
             if (list->next == rec) {
                list->next = rec->next;
                break;
             }
             list = list->next;
          }
       }
       free(rec);
       return e;
     }

   }
   return NULL;
}

@


1.4
log
@Change to link against tboxlibint
For some reason this toolbox module was unique in linking against the public toolboxlib rather than the internal one, this meant having to carefully tippy toe around not mixing header files (as they contain similar but differently named definitions).
A massive search and replace job.
Tested briefly using ResEd/ResTest and a textarea and scrolllist in a ROM build.
Requires Common-0_21.

Version 0.36. Tagged as 'Gadgets-0_36'
@
text
@d21 1
@


1.3
log
@* Merged in fixes from Daytona branch (tag sbrodie_Daytona_merge_19Jun98)

* Fixed 'long' #include directives.
* Removed duplicate function prototypes from TextGadget.h (use ModHdr.h
  for correct prototypes).
* Capability to build with pre- and post-5.16 versions of CMHG.
@
text
@d15 1
a19 2
#include "glib.h"
#include "glibP.h"
d21 3
a23 3
#include "toolbox.h"
#include "window.h"
#include "wimplib.h"
d25 1
@


1.2
log
@Merged Spinner branch back to trunk.
@
text
@d52 1
a52 1
int FILTERS[] = {Toolbox_RegisterPostFilter_ToolboxEvent,
@


1.1
log
@file glib3 was initially added on branch Spinner.
@
text
@d1 117
@


1.1.2.1
log
@*** empty log message ***
@
text
@a0 117
/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"
#include "glib.h"
#include "glibP.h"

#include "toolbox.h"
#include "window.h"
#include "wimplib.h"


typedef struct _tasks {
  struct _tasks *next;
  int th;
  int refc;
  int SWI;
} TaskRec;

static TaskRec *all_tasks[8]=NULL;

static TaskRec *find_current_task(int *th,int type)
{
   TaskRec *list = all_tasks[type];
   WimpSysInfo inf;

   wimp_read_sys_info(5,&inf);
   if (th) *th = inf.r0;

   while (list) {
     if (list->th == inf.r0) return list;
     list=list->next;

   }
   return list;
}

int FILTERS[] = {Toolbox_RegisterPostFilter_ToolboxEvent,
    	      Toolbox_RegisterPostFilter_WimpEvent,
    	      Toolbox_RegisterPostFilter_WimpMessage};

_kernel_oserror *add_task_interest(FilterTypes type, int *list, int SWI)
{
   int th;
   _kernel_swi_regs regs;
   _kernel_oserror *e;
   TaskRec *rec=find_current_task(&th,type);

   if (!rec) {
     rec = calloc(1,sizeof(TaskRec));
     if (!rec) return NULL;
     rec->th = th;
     rec->SWI = SWI;
     rec->next = all_tasks[type];
     all_tasks[type] = rec;
     regs.r[0] = 0;
     regs.r[1] = SWI;
     regs.r[2] = (int) rec;
     regs.r[3] = FILTERS[type];
     regs.r[4] = (int) list;
     e = _kernel_swi (Toolbox_RegisterPostFilter, &regs, &regs);
     if (e) return e;
   }

   rec->refc++;
   return NULL;
}

_kernel_oserror *remove_task_interest(FilterTypes type,int *inter)
{
   _kernel_swi_regs regs;
   _kernel_oserror *e;
   TaskRec *list = all_tasks[type],*rec=find_current_task(0,type);

   if (rec) {
     rec->refc--;
     if (!rec->refc) {
       regs.r[0] = Toolbox_RegisterPostFilter_Remove;
       regs.r[1] = rec->SWI;
       regs.r[2] = (int) rec;
       regs.r[3] = FILTERS[type];
       regs.r[4] = (int) inter;
       e = _kernel_swi (Toolbox_RegisterPostFilter, &regs, &regs);
       /* remove from list and free up */

       if (list == rec) all_tasks[type] = rec->next;
       else {
          while(list) {
             if (list->next == rec) {
                list->next = rec->next;
                break;
             }
             list = list->next;
          }
       }
       free(rec);
       return e;
     }

   }
   return NULL;
}

@


1.1.2.1.2.1
log
@Manually merge in v0.06 bugfixes from Spinner branch, add CLR
functionality and tilde support, reinstate region select, and explicitly
disallow Ctrl-I (tab support is not functional in TextGadget anyway).
@
text
@d52 1
a52 1
static int FILTERS[] = {Toolbox_RegisterPostFilter_ToolboxEvent,
@
