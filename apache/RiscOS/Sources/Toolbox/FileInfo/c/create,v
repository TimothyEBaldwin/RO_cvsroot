head	4.2;
access;
symbols
	FileInfo-0_21:4.2
	FileInfo-0_20:4.2
	FileInfo-0_19:4.1
	RO_5_07:4.1
	FileInfo-0_18:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Ursula_RiscPC:4.1.0.8
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	Ursula:4.1.0.6
	Ursula_bp:4.1
	FileInfo-0_17:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_FileInfo_0_15:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Daytona:4.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2015.08.18.21.23.42;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	kq6ZSETQ4NUGqNxy;

4.1
date	96.11.05.09.22.07;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.22.07;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.40.34;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.11.54;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.36.11;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).

Version 0.20. Tagged as 'FileInfo-0_20'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   create.c
 * Purpose: create a FileInfo Object
 * Author:  TGR
 * History: 7-Feb-94: TGR: created
 *
 */


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#include "const.h"
#include "macros.h"
#include "debug.h"
#include "mem.h"
#include "messages.h"
#include "objsupport.h"

#include "objects/toolbox.h"
#include "objects/fileinfo.h"
#include "objects/window.h"


#include "auxiliary.h"
#include "object.h"
#include "task.h"

#include "create.h"

#define BufferSize   256

extern _kernel_oserror *create_object (_kernel_swi_regs *r, TaskDescriptor *t)
{

  /*
   * request to create an object
   * R0 = 0
   * R1 = Object ID
   * R2 = 0  (will be internal handle for other SWIs
   * R3 = wimp task handle of caller (use to identify task descriptor)
   * R4 -> user regs R0-R9
   *      R0 = flags
   *           bit 0 set => create from memory
   *      R1 -> description block
   */

   /*
    * The Toolbox has already checked that this is not just a create
    * call for a shared Object which already exists.
    * We create a new Object, and add it to the list of Objects for this
    * task.
    * We need to remember the ObjectID passed to us by the Toolbox, so
    * that we can identify this Object if we are given an ID from the
    * client's "id block".
    * Note that if any template names are held in the Object, then we
    * create an Object from that template, and store its ID.
    * Note also that the Toolbox has changed the client's R1 to point
    * at an in-core template, if it wasn't already!
    */

   _kernel_oserror      *e;
   _kernel_swi_regs      regs,
                        *user_regs       = (_kernel_swi_regs *) r->r[4];
   ObjectTemplateHeader *obj_temp_hdr      = (ObjectTemplateHeader *) user_regs->r[1];
   FileInfoTemplate     *template          = (FileInfoTemplate *) obj_temp_hdr->body;
   FileInfoInternal     *internal;
   char                 *title,
                        *new_template,
                        *name,
                         buffer1[BufferSize];

   if ((internal = mem_alloc (sizeof(FileInfoInternal))) == NULL)
      return make_error (FileInfo_AllocFailed, 0);

   internal->show_info = NULL;
   internal->object_id = r->r[1];

   if (template->window) {
      regs.r[0] = 0;
      regs.r[1] = (int) template->window;

      if ((e = _kernel_swi (Toolbox_CreateObject, &regs, &regs)) != NULL)
         goto clearup1;

      internal->sub_object_id = regs.r[0];
   } else {
      name = "_FileInfo";
      if ((new_template = copy_template(name)) == NULL) {
         e = make_error (FileInfo_AllocFailed, 0);
         goto clearup1;
      }
      if (template->title) {
         DEBUG debug_output ("f","FileInfo: setting title to '%s'\n",template->title);

         zap_window (new_template, window.title.indirect_text.buffer, template->title);
         zap_window (new_template, window.title.indirect_text.buff_len, template->max_title);
      } else {
         title = (char *) *read_window (new_template, window.title.indirect_text.buffer);
         zap_window (new_template, window.title.indirect_text.buff_len, MAX(template->max_title,strlen (title)+1));
      }
/*
      internal->utc = * (os_UTC *) &template->date;
*/
      regs.r[0] = -1;
      regs.r[1] = (int) &template->date;
      regs.r[2] = (int) buffer1;
      regs.r[3] = BufferSize;

      if ((e = _kernel_swi (Territory_ConvertStandardDateAndTime, &regs, &regs)) != NULL)
         goto clearup2;

      DEBUG debug_output ("f","FileInfo: setting date to '%s'\n",buffer1);

      zap_gadget (new_template, DisplayField, FileInfo_DisplayField_Date, text, buffer1);

/*
      sprintf (buffer2, "%0d", template->filesize);

      DEBUG debug_output ("f","FileInfo: setting filesize to '%s'\n", buffer2);

      zap_gadget (new_template, DisplayField, FileInfo_DisplayField_FileSize, text, buffer2);
*/
      DEBUG debug_output ("f","FileInfo: setting filename to '%s'\n",template->filename);

      zap_gadget (new_template, DisplayField, FileInfo_DisplayField_FileName, text,
                  template->filename?template->filename:global_untitled);

      DEBUG debug_output ("f","FileInfo: setting modified? to '%s'\n",(template->modified) ? global_yes:global_no);

      zap_gadget (new_template, DisplayField, FileInfo_DisplayField_Modified, text, ((template->modified) ? global_yes:global_no));

      if ((e = create_from_template (new_template, &(internal->sub_object_id))) != NULL) {
         goto clearup1;
      }
      if ((e = aux_set_file_type (internal, template->filetype)) != NULL)
         goto clearup1;
      if ((e = aux_set_file_size (internal, template->filesize)) != NULL)
         goto clearup1;
   }
   internal->utc           = template->date;
   internal->flags
      = ((template->flags & FileInfo_GenerateShowEvent) ? FileInfoInternal_GenerateShowEvent : 0)
      | ((template->flags & FileInfo_GenerateHideEvent) ? FileInfoInternal_GenerateHideEvent : 0);

   if (t->object_list) { /* If there are already fileinfos attached to the task ... */

      internal->forward                        = t->object_list;
      internal->backward                       = t->object_list->backward;
      t->object_list->backward->forward        = internal;
      t->object_list->backward                 = internal;

   } else {              /* ... if not ... */

      regs.r[0] = 0;
      regs.r[1] = FileInfo_PostFilter;
      regs.r[2] = (int) t;
      regs.r[3] = Toolbox_RegisterPostFilter_WimpEvent;
      regs.r[4] = (int) events_of_interest;

      if ((e = _kernel_swi (Toolbox_RegisterPostFilter, &regs, &regs)) != NULL)
         return e;

      regs.r[0] = 0;
      regs.r[1] = FileInfo_PostFilter;
      regs.r[2] = (int) t;
      regs.r[3] = Toolbox_RegisterPostFilter_ToolboxEvent;
      regs.r[4] = (int) toolbox_events_of_interest;

      if ((e = _kernel_swi (Toolbox_RegisterPostFilter, &regs, &regs)) != NULL)
         return e;

      regs.r[0] = 0;
      regs.r[1] = FileInfo_PreFilter;
      regs.r[2] = (int) t;

      if ((e = _kernel_swi (Toolbox_RegisterPreFilter, &regs, &regs)) != NULL) {
         goto clearup1;
      }

      DEBUG debug_output ("f","FileInfo: PreFilter should have registered ok\n");

      t->object_list     = internal;
      internal->forward  = internal;
      internal->backward = internal;
   }

   r->r[0] = (int) internal;

   return NULL;

   clearup2:
      mem_freek (new_template);
   clearup1:
      mem_freek (internal);
      return e;
}
@


4.1
log
@Initial revision
@
text
@a30 1
#include "services.h"
d36 3
a38 3
#include "objects.toolbox.h"
#include "objects.fileinfo.h"
#include "objects.window.h"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
