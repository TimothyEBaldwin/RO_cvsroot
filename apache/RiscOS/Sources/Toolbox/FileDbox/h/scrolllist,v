head	1.1;
branch	1.1.1;
access;
symbols
	FileDbox-1_03:1.1.1.1
	FileDbox-1_02:1.1.1.1
	FileDbox-1_01:1.1.1.1
	FileDbox-1_00:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	sbrodie_Toolbox_Ursula_231198:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-12Aug1998:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.02.16.18.53.56;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.02.16.18.53.56;	author sbrodie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* ScrollList.h
 *
 * Implements a scrolling list toolbox gadget
 */

#ifndef __SCROLLLIST_H
#define __SCROLLLIST_H

/* template definition */

typedef struct
{
    GadgetHeader	hdr;
    int			event;
    unsigned int	foreground;
    unsigned int	background;
} ScrollList;

#define ScrollListValidFlags	0xC0000001

#define ScrollList_SingleSelections	0x00000000
#define ScrollList_MultipleSelections	0x00000001

/* scrolling list methods */

#define ScrollList_Base		0x401A
#define ScrollList_SWIBase	0x140182
#define ScrollList_GetState	(ScrollList_Base + 0)
#define ScrollList_SetState	(ScrollList_Base + 1)
#define ScrollList_AddItem	(ScrollList_Base + 2)
#define ScrollList_DeleteItems	(ScrollList_Base + 3)
#define ScrollList_SelectItem	(ScrollList_Base + 4)
#define ScrollList_DeselectItem	(ScrollList_Base + 5)
#define ScrollList_GetSelected	(ScrollList_Base + 6)
#define ScrollList_MakeVisible	(ScrollList_Base + 7)
#define ScrollList_SetColour	(ScrollList_Base + 8)
#define ScrollList_GetColour	(ScrollList_Base + 9)
#define ScrollList_SetFont	(ScrollList_Base + 10)
#define ScrollList_GetItemText	(ScrollList_Base + 11)

#define ScrollList_Type		(sizeof(ScrollList)) << 16 | ScrollList_Base

#define ScrollList_DesktopColours		(1<<0)

/* Scroll list events */
#define ScrollList_Selection	(0x140180 + 1)

#define ScrollList_Selection_Flags_Set		(1<<0)
#define ScrollList_Selection_Flags_DoubleClick	(1<<1)
typedef struct
{
    ToolboxEventHeader	hdr;
    unsigned int	flags;
    int			item;
} ScrollListSelectionEvent;

// None yet

extern _kernel_oserror *scrolllist_get_state(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *state);

extern _kernel_oserror *scrolllist_set_state(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int state);

extern _kernel_oserror *scrolllist_add_item(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			const char *text, const void *sprite_area,
			const char *sprite_name, int index);

extern _kernel_oserror *scrolllist_delete_items(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			int start_index, int end_index);

extern _kernel_oserror *scrolllist_select_item(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			int index);

extern _kernel_oserror *scrolllist_deselect_item(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			int index);

extern _kernel_oserror *scrolllist_get_selected(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			int offset, int *new_offset);

extern _kernel_oserror *scrolllist_make_visible(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			int index);

extern _kernel_oserror *scrolllist_set_colour(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int foreground, unsigned int background);

extern _kernel_oserror *scrolllist_get_colour(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			unsigned int *foreground, unsigned int *background);

extern _kernel_oserror *scrolllist_set_font(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			const char *font, unsigned int width,
			unsigned int height);

extern _kernel_oserror *scrolllist_get_item_text(unsigned int flags,
			ObjectId object_id, ComponentId component_id,
			char *text, int buffer_size, int index, int *nbytes);

#endif

@


1.1.1.1
log
@Import of FileDbox to CVS (no previous source control)
@
text
@@
