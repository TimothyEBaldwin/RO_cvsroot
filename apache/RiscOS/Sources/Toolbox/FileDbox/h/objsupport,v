head	1.2;
access;
symbols
	FileDbox-1_03:1.2
	FileDbox-1_02:1.2
	FileDbox-1_01:1.2
	FileDbox-1_00:1.2
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	sbrodie_Toolbox_Ursula_231198:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-12Aug1998:1.1.1.1
	sbrodie_Expresso_final_190298:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.02.16.16.54.38;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.02.16.18.53.56;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.02.16.18.53.56;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Renamed (meaningless) formal parameter "template" in function declaration.
Stops C compiler moaning about the use of symbols reserved for C++.

No other changes.  No version number increment.
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File:     objsupport.h
 * Purpose:  Standard Dialogue support library.
 * Author:   Neil Kelleher
 * History:  5-Jul-1994 : NK: created
 */

#include "stddef.h"
#include "toolbox.h"
#include "window.h"

typedef ObjectId ObjectID;
typedef ComponentId ComponentID;

/* copies named template to a buffer, returns NULL if can't find or no memory */

char *copy_template(char *name);

/* creates object from buffer then frees it */

_kernel_oserror *create_from_template(char *template_id, ObjectID *handle);

/* zaps gadget attributes, NOTE: use macro form below */

_kernel_oserror *__zap_gadget(char *tm,ComponentID id,int off,int val);
int *__read_gadget(char *tm,ComponentID id,int off);

/* zaps window template, NOTE: use macro form below */

_kernel_oserror *__zap_window(char *tm,int off,int val);
int *__read_window(char *tm,int off);

/* deletes a gadget from a template */

_kernel_oserror *delete_gadget(char *tm,ComponentID id);

/* zap_gadget(char *template,typedef GadgetType, ComponentID component, structure member, value */

#define zap_gadget(a,b,c,d,e) __zap_gadget(a,c,sizeof(GadgetHeader) + offsetof(b,d),(int) (e))

#define zap_gadget_header(a,c,d,e) __zap_gadget(a,c, offsetof(GadgetHeader,d),(int) (e))

/* zap_window(char *template,WindowTemplate structure member,value) */

#define zap_window(a,d,e) __zap_window(a,offsetof(WindowTemplate,d),(int) (e))

#define read_gadget(a,b,c,d) __read_gadget(a,c,sizeof(GadgetHeader) + offsetof(b,d))

#define read_gadget_header(a,c,d) __read_gadget(a,c, offsetof(GadgetHeader,d))

#define read_window(a,d) __read_window(a,offsetof(WindowTemplate,d))
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
_kernel_oserror *create_from_template(char *template, ObjectID *handle);
@


1.1.1.1
log
@Import of FileDbox to CVS (no previous source control)
@
text
@@
