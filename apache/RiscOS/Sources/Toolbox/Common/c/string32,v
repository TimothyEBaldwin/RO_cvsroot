head	4.2;
access;
symbols
	Common-0_26-1:4.2
	Common-0_26:4.2
	Common-0_25:4.2
	Common-0_24:4.2
	Common-0_23:4.1
	Common-0_22:4.1
	Common-0_21:4.1
	Common-0_20:4.1
	Common-0_19:4.1
	Common-0_18:4.1
	Common-0_17:4.1
	Common-0_16:4.1
	Common-0_15:4.1
	Common-0_14:4.1
	RO_5_07:4.1
	Common-0_13:4.1
	Common-0_12:4.1
	dellis_autobuild_BaseSW:4.1
	Common-0_11:4.1
	Common-0_10:4.1
	Common-0_09:4.1
	Common-0_08:4.1
	sbrodie_sedwards_16Mar2000:4.1
	Common-0_07:4.1
	Common-0_06:4.1
	Common-0_05:4.1
	dcotton_autobuild_BaseSW:4.1
	Common-0_04:4.1
	Common-0_03:4.1
	Common-0_02:4.1
	Common-0_01:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Ursula_RiscPC:4.1.0.10
	nicke_TBox_Common_20-9-98:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	sbrodie_commonlib_110698:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Toolbox_Common_120298:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2015.08.18.20.58.34;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	1IkG9MPiJd73iNxy;

4.1
date	96.11.05.09.21.51;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.21.51;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.39.15;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.09.36;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.34.58;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Minor header file adjustments
Everything TboxMake did can now be done with the makefiles in BuildSys.
Header file services.h was just a proxy for Global/Services.h.
style.h:
  Corrections to constants from the Style Guide. These two values are unused, so mainly academic.
messages.c/objmodule.c/string32.c:
  Unused services.h removed.

Version 0.24. Tagged as 'Common-0_24'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File:     string32.c
 * Purpose:  strings terminated by char < 32
 * Author:   Timothy Roddis
 * History:  24-Jan-94: IDJ: created from original TGR sources
 */

#include "string32.h"


/* Strings passed to the toolbox might be terminated with any control character ... */

#define NULL 0

void string_copy (char *dst_txt, char *src_txt) 
{
   /*
    * copy a ctrl-terminated string to a buffer big enough to
    * hold the result (no length checking).
    */

   if (!src_txt) src_txt = "";

   while ((*(dst_txt++)=*(src_txt++))>=32);
   *(--dst_txt) = '\0';
}



char *string_copy_chk (char *dst_txt, char *src_txt, int max_len) 
{
   int i;

   /*
    * copy a ctrl-terminated string to a buffer checking it is big enough to
    * hold the result.  Return NULL and nul-terminate, if dst buffer not
    * big enough.
    */

   if (dst_txt == NULL || max_len == 0)
       return NULL;
   if (!src_txt) src_txt = "";

   for (i=1;(*dst_txt++=*src_txt++)>=32;i++)
      if (i>=max_len) {
         *(--dst_txt) = '\0';
         return NULL;
      }
   *(--dst_txt) = '\0';

   return dst_txt;
}


int string_length (char *txt) 
{
   int i=0;

   /*
    * return length of ctrl-terminated string
    */
   
   if (!txt) return 0;
   while (*txt++>=32) i++;
   return i;
}


void string_to_buffer (char *dst_txt, char *src_txt, int *max_len)
{
    /*
     * general purpose routine to fill in a user-supplied buffer (and report
     * number of bytes written), or just report size of buffer needed.
     * If buffer is supplied (dst_txt != 0), then *max_len gives size of supplied
     * buffer; if this is not large enough, don't return an error, but return
     * size of buffer required!
     */

    int src_len = string_length (src_txt) + 1;

    if (dst_txt == NULL)
        *max_len = src_len;
    else   /* user-supplied buffer */
    {
        if (*max_len >= src_len)
            string_copy (dst_txt, src_txt);
        else
            string_copy_chk (dst_txt, src_txt, *max_len);

        *max_len = string_length (dst_txt) + 1;
    }
}

@


4.1
log
@Initial revision
@
text
@d89 1
a89 1
     * size of bufer required!
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
