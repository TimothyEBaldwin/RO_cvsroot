head	4.3;
access;
symbols
	Common-0_26-1:4.3
	Common-0_26:4.3
	Common-0_25:4.3
	Common-0_24:4.3
	Common-0_23:4.3
	Common-0_22:4.3
	Common-0_21:4.3
	Common-0_20:4.3
	Common-0_19:4.3
	Common-0_18:4.3
	Common-0_17:4.3
	Common-0_16:4.3
	Common-0_15:4.3
	Common-0_14:4.3
	RO_5_07:4.3
	Common-0_13:4.3
	Common-0_12:4.3
	dellis_autobuild_BaseSW:4.3
	Common-0_11:4.3
	Common-0_10:4.3
	Common-0_09:4.3
	Common-0_08:4.3
	sbrodie_sedwards_16Mar2000:4.3
	Common-0_07:4.3
	Common-0_06:4.3
	Common-0_05:4.3
	dcotton_autobuild_BaseSW:4.3
	Common-0_04:4.3
	Common-0_03:4.3
	Common-0_02:4.3
	Common-0_01:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	sbrodie_Toolbox_Ursula_231198:4.2
	Ursula_RiscPC:4.2.0.4
	nicke_TBox_Common_20-9-98:4.2
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	sbrodie_commonlib_110698:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.2
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.2
	sbrodie_Toolbox_Common_120298:4.2
	sbrodie_Expresso_BETA6_19980204:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	99.02.16.16.57.44;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	98.02.04.19.47.24;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.21.51;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.21.51;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.39.13;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.09.32;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.34.57;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@  Changes to shut the compiler up.
Detail:
  Renamed (meaningless) formal parameter "template" in function declarations.
  Renamed other variables in the C sources too.
  Stops C compiler moaning about the use of symbols reserved for C++.
Admin:
  Required by Toolbox-1_47 and later.

Version 0.02. Tagged as 'Common-0_02'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdio.h>

#include "slist.h"
#include "mem.h"

void *slist_add_new(void **_head,int size,char *tag)
{

   SList *newl,**head = (SList **)_head;

   (void) tag;
   newl = mem_allocate(size,tag);
   if (newl) {
      newl->next = *head;
      *head = newl;
   }
   return newl;
}

void slist_delete_member(void **_head,void *member)
{

   SList *prev=NULL,*list = (SList *) (*_head),*tst = (SList *)member;

   while(list) {
       if (list == tst) {
          if (prev) prev->next = list->next;
          else *_head = (void *) (list->next);
          mem_free(list,"Freeing list member");
          return;

       }

       prev =list;
       list = list->next;
   }
}

void *slist_find_member(void **_head,int field, int value)
{

   SList *list = (SList *) (*_head);

   while(list) {
       if (list->members[field] == value) break;

       list = list->next;
   }
   return list;
}

void *slist_find_matched_member(void **_head,int (*func)(void *list,int value), int value)
{

   SList *list = (SList *) (*_head);

   while(list) {
       if (func(list, value)) break;

       list = list->next;
   }
   return list;
}

void slist_delete_and_call(void **_head,void (*func)(void * d))
{

   SList *next,*list = (SList *) (*_head);

   while(list) {
      func(list);
      next = list->next;
      mem_free(list,"Freeing list member");
      list = next;
   }
   *_head = NULL;
}
@


4.2
log
@Build process improvements:
  !MkRam,fd7 added to enable RAM builds of all Toolbox modules
  MakeFile tidied up and support for RAM build added
Module now uses Toolbox memory allocation instead of calling OS_Module.
@
text
@d21 1
a21 1
{       
d23 1
a23 1
   SList *new,**head = (SList **)_head;
d26 4
a29 4
   new = mem_allocate(size,tag);
   if (new) {
      new->next = *head;
      *head = new;
d31 1
a31 1
   return new;
d38 1
a38 1
       
d50 1
a50 1
   }                     
d52 1
a52 1
                 
d57 1
a57 1
       
d70 1
a70 1
       
d83 3
a85 3
       
   while(list) { 
      func(list);                         
d89 2
a90 2
   }    
   *_head = NULL;                 
@


4.1
log
@Initial revision
@
text
@d25 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
