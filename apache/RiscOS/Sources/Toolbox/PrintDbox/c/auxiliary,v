head	4.4;
access;
symbols
	PrintDbox-0_18:4.4
	PrintDbox-0_17:4.3
	RO_5_07:4.2
	PrintDbox-0_16:4.2
	PrintDbox-0_15:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	sbrodie_Toolbox_Ursula_231198:4.2
	Ursula_RiscPC:4.2.0.6
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.4
	Ursula_12May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	sbrodie_Expresso_final_190298:4.2
	sbrodie_PrintDbox_0_13:4.2
	sbrodie_Expresso_BETA6_19980204:4.2
	sbrodie_PrintDbox_0_12:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Daytona:4.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2015.08.18.21.40.30;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	kCo49ZEfFy5swNxy;

4.3
date	2015.07.17.18.00.46;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	rMmVUZTJpRWPkFty;

4.2
date	97.09.05.14.00.34;	author pwombwel;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.22.43;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.22.43;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.43.33;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.15.08;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.39.11;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).

Version 0.18. Tagged as 'PrintDbox-0_18'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   auxiliary.c
 * Purpose: support functions for the PrintDbox object class
 * Author:  TGR
 * History: 27-May-94: TGR: created
 *           6-Feb-95: IDJ: bug-fix AQU-01148 (use SWI rather than value of printer$)
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#include "const.h"
#include "macros.h"

#include "debug.h"
#include "mem.h"
#include "string32.h"
#include "messages.h"
#include "twimp.h"
#include "style.h"
#include "objects/toolbox.h"
#include "objects/window.h"
#include "objects/printdbox.h"

#include "auxiliary.h"
#include "object.h"
#include "task.h"

/*
ObjectID              global_menu;
*/
PrintDboxInternal    *global_next;
int                   global_window_count = 0;
ObjectID              global_setup_next   = 0;
ObjectID              global_setup_parent_id;
char                 *global_none         = NULL;
char                 *global_unknown      = NULL;

EventInterest   messages_of_interest[] = {
                 {wimp_MSET_PRINTER    , -1},
                 {-1                   , -1}
                };

EventInterest   events_of_interest[] = {
                 {wimp_ETOOLBOX_EVENT ,  0},
/*
                 {wimp_ECLOSE         ,  0},
*/
                 {-1                  , -1}
                };

EventInterest   toolbox_events_of_interest[] = {
                 {PrintDbox_AboutToBeShown,      PrintDbox_ObjectClass},
                 {PrintDbox_SetUpAboutToBeShown, PrintDbox_ObjectClass},
                 {Window_HasBeenHidden    ,      Window_ObjectClass},
                 {WritableField_ValueChanged,    Window_ObjectClass},
                 {ActionButton_Selected   ,      Window_ObjectClass},
                 {RadioButton_StateChanged,      Window_ObjectClass},
                 {-1                      ,                      -1}
                };

/*
extern _kernel_oserror *dialogue_completed (ObjectID object_id) {

   _kernel_oserror    *e;
   _kernel_swi_regs    regs;
   ToolboxEvent        toolbox_event;

   regs.r[0] = 0;
   regs.r[1] = (int) object_id;
   regs.r[2] = -1;
   regs.r[3] = (int) &toolbox_event;

   toolbox_event.hdr.size       = sizeof (PrintDbox_DialogueCompleted_Event);
   toolbox_event.hdr.event_code = PrintDbox_DialogueCompleted;
   toolbox_event.hdr.flags      = 0;

   if ((e = _kernel_swi (Toolbox_RaiseToolboxEvent, &regs, &regs)) != NULL)
      return e;

   return NULL;
}
*/

extern PrintDboxInternal *find_internal (TaskDescriptor *t, ObjectID sub_object_id) {

   PrintDboxInternal *i = t->object_list,
                     *j;

   DEBUG debug_output ("a","PrintDbox: find internal, searching for sub_object_id = 0x%x\n",sub_object_id);

   if (!i) return NULL;

   /* Search through the objectect list until we find the one with the required underlying objectect ID */

   do {
      j = i->forward;
      DEBUG debug_output ("a","PrintDbox: internal = 0x%x, sub_object_id = 0x%x\n",i,i->sub_object_id);
      if (i->sub_object_id == sub_object_id) return i;
   } while ((i=j) != t->object_list);

   return NULL;
}

_kernel_oserror *show_actual (void) {

   _kernel_oserror    *e;
   _kernel_swi_regs    regs;
   void               *show_info;
   int                 show_type;

   DEBUG debug_output ("e","PrintDbox: attempting to actually show the dbox\n");

   regs.r[0] = 0;
   regs.r[1] = global_next->sub_object_id;

   if ((e = _kernel_swi (Toolbox_GetParent, &regs, &regs)) != NULL) {
      return e;
   }
   show_info = global_next->show_info;

   if (show_info)
   {
       if (global_next->flags & PrintDboxInternal_FullInfoShow)
           show_type = 1;
       else
           show_type = 2;
   }
   else if (global_next->flags & PrintDboxInternal_CentreShow)
       show_type = 3;
   else if (global_next->flags & PrintDboxInternal_AtPointerShow)
       show_type = 4;
   else
       show_type = 0;

   regs.r[4] =       regs.r[0]; /* parent id */
   regs.r[5] =       regs.r[1]; /* parent component */
   regs.r[0] =        (global_next->flags & PrintDboxInternal_MenuSemantics)    ? 1 :
                     ((global_next->flags & PrintDboxInternal_SubMenuSemantics) ? 2 : 0);
   regs.r[1] = (int) global_next->sub_object_id;
   regs.r[2] =       show_type;
   regs.r[3] = (int) show_info;

   DEBUG {
      debug_output ("a","PrintDbox: showing, semantics %d",show_type);
      if (show_type == 2) {
         debug_output ("a"," at (%d,%d)\n",*((int *) show_info), *((int *) show_info + 1));
      } else {
         debug_output ("a","\n");
      }
   }
   global_next->flags         |= PrintDboxInternal_IsShowing;

   e = _kernel_swi (Toolbox_ShowObject, &regs, &regs);

   if (e && (e->errnum == Window_NoGadgetsLeft)) {
      /* The default focus is either deleted or faded */
      regs.r[0] = 0;
      regs.r[1] = (int) global_next->sub_object_id;
      regs.r[2] = Window_GetWimpHandle;
      if (!_kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) {
         regs.r[1] = -1;
         regs.r[2] = 0;
         regs.r[3] = 0;
         regs.r[4] = 1<<25;
         regs.r[5] = 0;
         _kernel_swi(Wimp_SetCaretPosition,&regs,&regs);

      }
      e = NULL; /* DO NOT return error */
   }
   if (show_info) {
      mem_freek (show_info);
      global_next->show_info = NULL;
   }
   global_next = NULL;

   return e;
}

_kernel_oserror *show_setup_actual (void) {

   _kernel_swi_regs    regs;

   regs.r[0] = 0;
   regs.r[1] = global_setup_next;
   regs.r[2] = 0;
   regs.r[3] = 0;
   regs.r[4] = global_setup_parent_id;
   regs.r[5] = PrintDbox_ActionButton_SetUp;

   global_setup_next = 0;

   return _kernel_swi (Toolbox_ShowObject, &regs, &regs);
}

_kernel_oserror *update_title (PrintDboxInternal *internal) {

   _kernel_oserror     *e;
   _kernel_swi_regs     regs;
   char                *printer_name = NULL;

   /* IDJ: 6-Feb-95: bug-fix AQU-01148: use PDriver SWI not value of printer$ */
   if (!_kernel_swi(PDriver_Info, &regs, &regs))
       printer_name = (char *)regs.r[4];

   regs.r[0]    = 0;
   regs.r[1]    = internal->sub_object_id;
   regs.r[2]    = Gadget_GetFlags;
   regs.r[3]    = PrintDbox_ActionButton_Print;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[0]    = 0;
   regs.r[2]    = Gadget_SetFlags;

   if (printer_name == NULL) {

      printer_name = global_unknown;

      DEBUG debug_output ("a","PrintDbox: Printer$ unset, using '%s'\n",printer_name);

      regs.r[4] = regs.r[0] |  Gadget_Faded;
   } else {
      regs.r[4] = regs.r[0] & ~Gadget_Faded;
   }
   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;
   DEBUG debug_output ("s","PrintDbox: printer name = '%s'\n",printer_name);

   regs.r[0] = 0;
   regs.r[1] = (int) internal->sub_object_id;
   regs.r[2] = Window_SetTitle;
   regs.r[3] = (int) printer_name;

   return _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs);
}

_kernel_oserror *grey_fromto (ObjectID sub_object_id) {

   _kernel_oserror *e;
   _kernel_swi_regs regs;

   regs.r[0] = 0;
   regs.r[1] = sub_object_id;
   regs.r[2] = Gadget_SetFlags;
   regs.r[3] = PrintDbox_WritableField_From;
   regs.r[4] = Gadget_Faded;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[3] = PrintDbox_WritableField_To;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[3] = PrintDbox_Label_To;

   return _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs);
}

_kernel_oserror *ungrey_fromto (ObjectID sub_object_id) {

   _kernel_oserror *e;
   _kernel_swi_regs regs;

   regs.r[0] = 0;
   regs.r[1] = sub_object_id;
   regs.r[2] = Gadget_GetFlags;
   regs.r[3] = PrintDbox_WritableField_From;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[4] = regs.r[0] & ~Gadget_Faded;
   regs.r[0] = 0;
   regs.r[2] = Gadget_SetFlags;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[2] = Gadget_GetFlags;
   regs.r[3] = PrintDbox_WritableField_To;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[4] = regs.r[0] & ~Gadget_Faded;
   regs.r[0] = 0;
   regs.r[2] = Gadget_SetFlags;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[2] = Gadget_GetFlags;
   regs.r[3] = PrintDbox_Label_To;

   if ((e = _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs)) != NULL)
      return e;

   regs.r[4] = regs.r[0] & ~Gadget_Faded;
   regs.r[0] = 0;
   regs.r[2] = Gadget_SetFlags;

   return _kernel_swi (Toolbox_ObjectMiscOp, &regs, &regs);
}
@


4.3
log
@Fix for NULL pointer dereference
auxilary.c: found by pattern matching
Not tested.

Version 0.17. Tagged as 'PrintDbox-0_17'
@
text
@a31 1
#include "services.h"
d38 3
a40 3
#include "objects.toolbox.h"
#include "objects.window.h"
#include "objects.PrintDbox.h"
a41 1
#include "main.h"
@


4.2
log
@added show centre and show at pointer support
@
text
@d175 1
a175 1
   if (e->errnum == Window_NoGadgetsLeft) {
@


4.1
log
@Initial revision
@
text
@d140 14
a153 1
   show_type = (show_info) ? ((global_next->flags & PrintDboxInternal_FullInfoShow) ? 1 : 2) : 0;
d174 1
a174 1
           
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
