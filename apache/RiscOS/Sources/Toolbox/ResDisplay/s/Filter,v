head	1.1;
branch	1.1.1;
access;
symbols
	sbrodie_ResDisplay_15052000:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	sbrodie_Toolbox_Ursula_231198:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.2
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	rthornb_UrsulaBuild-12Aug1998:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	98.05.21.11.33.59;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.05.21.11.33.59;	author sbrodie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@; Copyright 1998 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;;----------------------------------------------------------------
;; post_icon_filter_handler
;;
;; This is called by the FilterManager when the Wimp is on entry to
;; int_get_rectangle, after it has drawn the icons for the previous
;; rectangle.
;;
;; Entry:
;;
;;
;;      R2    - Task handle of calling task.
;;      R6-R9 - screen coordinates of rectangle (x0,y0,x1,y1)
;;      R10   - window handle
;;      R12   - our private word
;;
;; Exit:
;;      All registers preserved.
;;
	AREA	|C$$Code|, CODE, READONLY

	GET	hdr:ListOpts
	GET	hdr:Macros

	EXPORT	post_icon_filter_handler
	IMPORT	post_icon_handler
;; extern void post_icon_handler(_kernel_swi_regs *r, void *pw);
post_icon_filter_handler
	STMDB	r13!, {r0-r12, r14}
	MOV	r10, r13, lsr #20
	MOV	r10, r10, lsl #20	; Restore stack limit
	LDMIA	r10, {r4, r5}		; Read data from stack
	MOV	r1, r12			; Copy private word
	LDR	r12, [r12, #0]		; Get contents
	LDMIB	r12, {r11,r12}		; Read data relocation offsets
	STMIA	r10, {r11,r12}		; Store them
	ADD	r10, r10, #540		; Set up correct stack limit
	MOV	r11, #0			; Zero frame pointer
	MOV	r0, r13			; Set up register pointer
	BL	post_icon_handler	; Call C function
	SUB	r10, r10, #540		; Find base of stack
	STMIA	r10, {r4, r5}		; Restore old values
	LDMIA	r13!, {r0-r12,r14}	; Reload registers
	MOVS	pc, lr			; Return from filter

	END
@


1.1.1.1
log
@Initial import of ResDisplay toolbox object to CVS.
@
text
@@
