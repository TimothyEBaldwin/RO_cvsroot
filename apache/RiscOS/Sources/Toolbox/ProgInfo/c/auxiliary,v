head	4.4;
access;
symbols
	ProgInfo-0_19:4.4
	RO_5_07:4.3
	ProgInfo-0_18:4.3
	ProgInfo-0_17:4.3
	ProgInfo-0_16:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3
	sbrodie_Toolbox_Ursula_231198:4.3
	Ursula_RiscPC:4.3.0.4
	rthornb_UrsulaBuild-19Aug1998:4.3
	UrsulaBuild_FinalSoftload:4.3
	rthornb_UrsulaBuild-12Aug1998:4.3
	aglover_UrsulaBuild-05Aug1998:4.3
	rthornb_UrsulaBuild-29Jul1998:4.3
	rthornb_UrsulaBuild-22Jul1998:4.3
	rthornb_UrsulaBuild-15Jul1998:4.3
	Ursula:4.3.0.2
	Ursula_bp:4.3
	ProgInfo-0_15:4.3
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.2
	sbrodie_ProgInfo_0_13:4.2
	sbrodie_Expresso_BETA6_19980204:4.2
	sbrodie_ProgInfo_0_11:4.2
	sbrodie_ProgInfo_0_10:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2015.08.18.21.42.27;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	ilJSsPvsuHf7xNxy;

4.3
date	98.07.14.17.24.55;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.12.12.10.03.47;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.22.49;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.22.49;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.44.04;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.15.54;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.39.42;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).

Version 0.19. Tagged as 'ProgInfo-0_19'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   auxiliary.c
 * Purpose: support functions for the ProgInfo object class
 * Author:  TGR
 * History: 14-Feb-94: TGR: created
 *
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"

#include "const.h"
#include "macros.h"

#include "debug.h"
#include "mem.h"
#include "string32.h"
#include "messages.h"
#include "twimp.h"
#include "style.h"
#include "objects/toolbox.h"
#include "objects/proginfo.h"

#include "auxiliary.h"
#include "object.h"
#include "task.h"

ProgInfoInternal  *global_next;

EventInterest   events_of_interest[] = {
                 {wimp_ETOOLBOX_EVENT ,  0},
                 {-1                  , -1}
                };

EventInterest   toolbox_events_of_interest[] = {
                 {ProgInfo_AboutToBeShown, ProgInfo_ObjectClass},
                 {Window_HasBeenHidden   , Window_ObjectClass  },
                 {ActionButton_Selected  , Window_ObjectClass  },
                 {-1                     ,                   -1}
                };

extern ProgInfoInternal *find_internal (TaskDescriptor *t, ObjectID sub_object_id) {

   ProgInfoInternal *i = t->object_list,
                    *j;

   DEBUG debug_output ("a","ProgInfo: find internal, searching for sub_object_id = 0x%x\n",sub_object_id);

   if (!i) return NULL;

   do {
      j = i->forward;
      DEBUG debug_output ("a","ProgInfo: internal = 0x%x, sub_object_id = 0x%x\n",i,i->sub_object_id);
      if (i->sub_object_id == sub_object_id) return i;
   } while ((i=j) != t->object_list);

   return NULL;
}

/*
_kernel_oserror *find_underlying_window (IDBlock *id_block, ObjectID *sub_object_id) {

   _kernel_oserror    *e;
   _kernel_swi_regs    regs;

   regs.r[0] = 0;
   regs.r[1] = (int) id_block->self_id;

   if ((e = _kernel_swi (Toolbox_GetInternalHandle, &regs, &regs)) != NULL)
      return e;

   *sub_object_id = ((ProgInfoInternal *) regs.r[0])->sub_object_id;

   return NULL;
}
*/

_kernel_oserror *show_actual (void) {

   _kernel_oserror    *e;
   _kernel_swi_regs    regs;
   void               *show_info;
   int                 show_type;

   DEBUG debug_output ("e","ProgInfo: attempting to actually show the dbox\n");

   regs.r[0] = 0;
   regs.r[1] = global_next->sub_object_id;

   if ((e = _kernel_swi (Toolbox_GetParent, &regs, &regs)) != NULL) {
      return e;
   }
   show_info = global_next->show_info;
   show_type = global_next->show_type;

   regs.r[4] =       regs.r[0]; /* parent id */
   regs.r[5] =       regs.r[1]; /* parent component */
   regs.r[0] =        (global_next->flags & ProgInfoInternal_MenuSemantics)    ? 1 :
                     ((global_next->flags & ProgInfoInternal_SubMenuSemantics) ? 2 : 0);
   regs.r[1] = (int) global_next->sub_object_id;
   regs.r[2] =       show_type;
   regs.r[3] = (int) show_info;

   DEBUG {
      debug_output ("a","ProgInfo: showing, semantics %d",show_type);
      if (show_type == 2) {
         debug_output ("a"," at (%d,%d)\n",*((int *) show_info), *((int *) show_info + 1));
      } else {
         debug_output ("a","\n");
      }
   }
   global_next->flags         |= ProgInfoInternal_IsShowing;

   if ((e = _kernel_swi (Toolbox_ShowObject, &regs, &regs)) != NULL)
      return e;

   if (show_info) {
      mem_freek (show_info);
      global_next->show_info = NULL;
   }
   global_next                 = NULL;

   return NULL;
}

@


4.3
log
@* Now supports show-at-pointer and show-centred showtypes.
* Version number now maintained by srccommit.

Version 0.15. Tagged as 'ProgInfo-0_15'
@
text
@a31 1
#include "services.h"
d38 2
a39 2
#include "objects.toolbox.h"
#include "objects.proginfo.h"
a40 1
#include "main.h"
@


4.2
log
@New resize source file added for automatic ProgInfo resizing, plus updated
resource files to contain Web site button templates.
@
text
@d113 1
a113 1
   show_type = (show_info) ? ((global_next->flags & ProgInfoInternal_FullInfoShow) ? 1 : 2) : 0;
@


4.1
log
@Initial revision
@
text
@d57 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
