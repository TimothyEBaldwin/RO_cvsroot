head	4.2;
access;
symbols
	Toolbox-1_58:4.2
	Toolbox-1_57:4.2
	Toolbox-1_56:4.2
	Toolbox-1_55:4.2
	Toolbox-1_54:4.2
	Toolbox-1_53:4.2
	RO_5_07:4.2
	Toolbox-1_52:4.2
	Toolbox-1_51:4.2
	Toolbox-1_50:4.2
	Toolbox-1_49:4.2
	Toolbox-1_48:4.2
	Toolbox-1_47:4.2
	Toolbox-1_46:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Ursula_RiscPC:4.1.0.12
	Toolbox-1_45:4.1
	Toolbox-1_44:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Toolbox-1_43:4.1
	sbrodie_Toolbox_dev:4.1.0.10
	sbrodie_Toolbox_dev_bp:4.1
	Toolbox-1_42:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Toolbox_1_40:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Toolbox_1_38:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	99.02.16.17.19.50;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.11;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.11;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.45.52;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.17.51;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.41.31;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  Changes to co-exist with Common-0_02 (renaming class to class_id
  ObjectID cross-validation added.
Detail:
  Changes to co-exist with Common-0_02 (renaming class to class_id
    to stop the compiler moaning about the use of C++ reserved words)
  A fault has been uncovered which meant that object IDs pointing to
    the same block of memory could be generated by creating an object
    immediately after deleting another object.  The ID->pointer mapping
    did not care to notice that multiple IDs were in existence which
    pointed at the same memory (albeit one of the IDs having been
    "deleted" - the Message_ToolboxObjectDeleted for it is still yet
    to be delivered to the application when the new object is created.
    thus making the old deleted ID apparently valid again).  This
    could cause confusion if apps tried to use objects which had been
    deleted but which Toolbox was still saying were OK because they
    mapped to a current object block.  Toolbox now caches the ObjectID
    it generates for a block when it is created and will insist on it
    matching in order to pass the ID->pointer validation.  The standard
    Invalid Object ID error is thrown if the ID does not match.
Admin:
  Requires Common-0-02 or later (RiscOS/Sources/Toolbox/Common)

Version 1.47. Tagged as 'Toolbox-1_47'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File:    filters.h
 * Purpose: handling Wimp filters installed by clients of the Toolbox
 * Author:  Ian Johnson
 * History: 13-Sep-93: IDJ:   created
 *
 */

#ifndef __filters_h
#define __filters_h

#ifndef __Toolbox_h
#include "objects.toolbox.h"
#endif

#include "kernel.h"


typedef struct filters_postfilter
{
        struct filters_postfilter   *next;
        int                          type;
        int                          code;
        int                          swi_to_call;
        void                        *R2;
        ObjectClass                  class_id;
} filters_PostFilter;

typedef struct filters_prefilter
{
        struct filters_prefilter    *next;
        struct filters_prefilter    *prev;
        void                        *R2;
        int                          swi_to_call;
} filters_PreFilter;



extern void filters_remove_list (void);

/*********************************** object module SWIs ********************************/

extern _kernel_oserror *filters_register_postfilter (_kernel_swi_regs *r);

    /*
     *   Entry:
     *         R0  =  flags
     *                 bit 0 set means no longer interested in being called
     *                       by post-filter.
     *         R1  =  SWI number to be called by filter
     *                (0 => no longer interested in being called by filter
     *                 for these events, messages or Toolbox Events).
     *         R2  =  one-word value to be passed to the postfilter SWI in
     *                R2
     *         R3  =  filter type
     *                   1 => Wimp Events
     *                   2 => Wimp Messages
     *                   3 => Toolbox Events
     *         R4  =  -> list of pairs of Object Class identifier and either
     *                   Wimp event codes, Wimp message numbers, or Toolbox
     *                   Event codes depending on the value of R3.
     *
     *    Exit:
     *         R1-R9 preserved
     *
     */


extern _kernel_oserror *filters_register_prefilter (_kernel_swi_regs *r);

    /*
     *   Entry:
     *         R0  =  flags
     *                 bit 0 set means no longer interested in being called
     *                       by pre-filter.
     *         R1  =  SWI number to be called by filter
     *         R2  =  one-word value to be passed to the SWI (in R2)
     *
     *   Exit:
     *         R1-R9 preserved
     *
     */


/*********************************** filter veneers *******************************************/

extern void prefilter_veneer (void);
extern int  postfilter_veneer (void);

#endif
@


4.1
log
@Initial revision
@
text
@d21 1
a21 1
              
d39 1
a39 1
        ObjectClass                  class;
d61 1
a61 1
     *                 bit 0 set means no longer interested in being called 
d87 1
a87 1
     *                 bit 0 set means no longer interested in being called 
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
