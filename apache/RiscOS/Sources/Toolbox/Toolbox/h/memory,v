head	4.2;
access;
symbols
	Toolbox-1_58:4.2
	Toolbox-1_57:4.2
	Toolbox-1_56:4.2
	Toolbox-1_55:4.2
	Toolbox-1_54:4.2
	Toolbox-1_53:4.2
	RO_5_07:4.2
	Toolbox-1_52:4.2
	Toolbox-1_51:4.2
	Toolbox-1_50:4.2
	Toolbox-1_49:4.2
	Toolbox-1_48:4.2
	Toolbox-1_47:4.2
	Toolbox-1_46:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	sbrodie_Toolbox_Ursula_231198:4.2
	Ursula_RiscPC:4.2.0.6
	Toolbox-1_45:4.2
	Toolbox-1_44:4.2
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.2
	Toolbox-1_43:4.2
	sbrodie_Toolbox_dev:4.2.0.4
	sbrodie_Toolbox_dev_bp:4.2
	Toolbox-1_42:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	sbrodie_Expresso_final_190298:4.2
	sbrodie_Toolbox_1_40:4.2
	sbrodie_Expresso_BETA6_19980204:4.1;
locks; strict;
comment	@# @;


4.2
date	98.02.11.18.16.53;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	98.02.04.19.49.31;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Toolbox 1.40

SWI dispatcher fixed to dispatch Toolbox_Memory calls - this prevented
version 1.39 from providing the advertised memory services to the other
object modules.

Object ID validation is now performed by the Toolbox module itself
instead of the slow OS_ValidateAddress SWI call.  This is possible for
both the normal RMA usage and dynamic area usage since the Toolbox
knows the dynamic area address range (it reads the RMA details for RISC
OS 3.1 machines with OS_ReadDynamicArea on every access but that can't
be helped).
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File:    memory.h
 * Purpose: Memory allocation for client modules
 * Author:  Kevin Bracey
 * History: 22-Nov-96: KJB:   created
 *
 */

#ifndef __memory_h
#define __memory_h

extern _kernel_oserror *memory_initialise(void);
extern _kernel_oserror *memory_finalise(void);

extern _kernel_oserror *toolbox_memory_swi(_kernel_swi_regs *r);

extern void *mem_base_address(void);
extern void memory_renumber_da(int old_da, int new_da);

extern int memory_validate_address(object_t *);

#endif
@


4.1
log
@Build process improvements:
  !MkRam,fd7 added to enable RAM builds of all Toolbox modules
  MakeFile tidied up and support for RAM build added
Module now uses Toolbox memory allocation instead of calling OS_Module.
@
text
@d32 3
@
