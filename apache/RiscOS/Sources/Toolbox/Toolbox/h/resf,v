head	4.1;
access;
symbols
	Toolbox-1_58:4.1
	Toolbox-1_57:4.1
	Toolbox-1_56:4.1
	Toolbox-1_55:4.1
	Toolbox-1_54:4.1
	Toolbox-1_53:4.1
	RO_5_07:4.1
	Toolbox-1_52:4.1
	Toolbox-1_51:4.1
	Toolbox-1_50:4.1
	Toolbox-1_49:4.1
	Toolbox-1_48:4.1
	Toolbox-1_47:4.1
	Toolbox-1_46:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Ursula_RiscPC:4.1.0.12
	Toolbox-1_45:4.1
	Toolbox-1_44:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Toolbox-1_43:4.1
	sbrodie_Toolbox_dev:4.1.0.10
	sbrodie_Toolbox_dev_bp:4.1
	Toolbox-1_42:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Toolbox_1_40:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Toolbox_1_38:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.23.12;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.12;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.45.56;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.17.58;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.41.35;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* File:    resf.h
 * Purpose: Resource file processing
 * Author:  Ian Johnson
 * History: 20-July-93: IDJ:   created
 *
 */
              
#ifndef __resf_h
#define __resf_h

#ifndef __Toolbox_h
#include "objects.toolbox.h"
#endif

#include "kernel.h"


typedef struct resf_resourcefile
{
        struct resf_resourcefile *next;
        ResourceFileHeader       *hdr;
        int                       module_swi;
} resf_ResourceFile;

typedef struct resf_template
{
        struct resf_template *next;
        ObjectTemplateHeader *hdr;
        int                   module_swi;
} resf_Template;



/* --- loading a Resource File --- */

extern _kernel_oserror *resf_load_resource_file (_kernel_swi_regs *r);

/*
 *   Entry:
 *         R0  =  flags
 *         R1  -> resource filename

 *   Exit:
 *        R0 = Pointer to Sprite area used.
 *
 */

/* --- finding a named template --- */

extern ObjectTemplateHeader *resf_find_template (char *name);

/*
 * Returns a pointer to the template header for a given named template
 *
 */

extern _kernel_oserror *resf_template_lookup (_kernel_swi_regs *r);
    /*
     * Function to lookup a given template and return a pointer to its
     * object header (to the client) - just uses the function resf_find_template.
     *
     */


/* --- removing resources and templates lists from a task --- */

extern void resf_remove_list (void);


/* --- loading module resources --- */

extern void resf_module_resources(void);

/*
 * Indicates that the next call to resf_load_resource_file should
 * not load into a task's resource list, but into a "private" list
 * for modules.
 */

extern void resf_module_swi(int swi_no);

/*
 * Sets swi no of object module currently loading its res file
 */

extern void resf_remove_module_resources (int module_swi);
   
/* 
 * Removes templates and res files for this object module
 */

#endif
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
