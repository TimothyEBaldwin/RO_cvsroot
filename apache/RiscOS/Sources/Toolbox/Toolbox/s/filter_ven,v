head	4.2;
access;
symbols
	Toolbox-1_58:4.2
	Toolbox-1_57:4.2
	Toolbox-1_56:4.2
	Toolbox-1_55:4.2
	Toolbox-1_54:4.2
	Toolbox-1_53:4.2
	RO_5_07:4.2
	Toolbox-1_52:4.2
	Toolbox-1_51:4.2
	Toolbox-1_50:4.2
	Toolbox-1_49:4.2
	Toolbox-1_48:4.1
	Toolbox-1_47:4.1
	Toolbox-1_46:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Ursula_RiscPC:4.1.0.12
	Toolbox-1_45:4.1
	Toolbox-1_44:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Toolbox-1_43:4.1
	sbrodie_Toolbox_dev:4.1.0.10
	sbrodie_Toolbox_dev_bp:4.1
	Toolbox-1_42:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Toolbox_1_40:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Toolbox_1_38:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2000.05.04.12.56.58;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.13;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.13;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.46.02;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.18.05;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.41.41;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  Changed to use common Makefile system.
  Debug build facility added.
Detail:
  Uses core facilities from Common instead of having private copies.
  Makefile vastly simplified to simply define a few macros, then include
    the common Toolbox Makefile which is exported by Common.
Admin:
  Requires Common 0.09 or later (RiscOS/Sources/Toolbox/Common; Common-0_09)
  Requires BuildSys 1.92 or later (RiscOS/BuildSys; BuildSys-1_92)
  Requires Library 0.41 or later (RiscOS/Library; Library-0_41)

Version 1.49. Tagged as 'Toolbox-1_49'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Title:   s.filter_ven
; Purpose: post and prefilter veneers
; Author:  IDJ
; History: 16-Sep-93: IDJ: Created
;

        IMPORT  |filters_postfilter|
        IMPORT  |filters_prefilter|

        EXPORT  |postfilter_veneer|
        EXPORT  |prefilter_veneer|

        AREA    |Filters$$Code|, CODE, READONLY, PIC

postfilter_veneer

        ; Entry
        ; R0   = reason code
        ; R1  -> event block
        ; R2   = task handle
        ; R12  = "task descriptor"
        ; task paged in

        ; NOTE the returned R0 from filters_postfilter is passed back to the client
        ;

        STMFD   sp!,    {r1-r9, sl, fp, ip, lr}         ; stack everything in sight (except R0!)

        MOV     sl,     sp, LSR #20
        MOV     sl,     sl, LSL #20                     ; SP_LWM (base of SVC stack)

        LDMIA   sl,     {r4, r5}                        ; save old relocation modifiers

        MOV     r2,     r12                             ; task descriptor passed to filters_postfilter
                                                        ; in R2

        LDR     r12,    [r12, #8]                       ; this is the module's "real" private word
                                                        ; which C code needs to get at the
                                                        ; module's static data

        LDR     r12,    [r12]
        LDMIB   r12,    {fp, r12}                       ; new relocation modifiers
        STMIA   sl,     {fp, r12}

        ADD     sl,     sl, #540                        ; C stack limit stuff

        BL      filters_postfilter                      ; filters_postfilter (int event_code,
                                                        ;                     wimp_pollstr *p,
                                                        ;                     TaskDescriptor *t)
                                                        ; note returned R0 is passed back to
                                                        ; Wimp to indicate whether to pass event
                                                        ; to client

        SUB     sl,     sl, #540

        STMIA   sl,     {r4, r5}                        ; restore old relocation modifiers

        LDMFD sp!,      {r1-r9, sl, fp, ip, pc}         ; return from filter

prefilter_veneer

        ; Entry
        ; R0   = event mask
        ; R1  -> event block
        ; R2   = task handle
        ; R12  = "task descriptor"

        STMFD   sp!,    {r1-r9, sl, fp, ip, lr}         ; stack everything in sight (except R0!)

        MOV     sl,     sp, LSR #20
        MOV     sl,     sl, LSL #20                     ; SP_LWM (base of SVC stack)

        LDMIA   sl,     {r4, r5}                        ; save old relocation modifiers

        MOV     r2,     r12                             ; task descriptor passed to filters_postfilter
                                                        ; in R2

        LDR     r12,    [r12, #8]                       ; this is the module's "real" private word
                                                        ; which C code needs to get at the
                                                        ; module's static data

        LDR     r12,    [r12]
        LDMIB   r12,    {fp, r12}                       ; new relocation modifiers
        STMIA   sl,     {fp, r12}

        ADD     sl,     sl, #540                        ; C stack limit stuff

        BL      filters_prefilter                       ; filters_prefilter (int mask,
                                                        ;                    wimp_pollstr *p,
                                                        ;                    TaskDescriptor *t)
                                                        ; note that filters_prefilter returns us
                                                        ; the new mask to be used in R0

        SUB     sl,     sl, #540

        STMIA   sl,     {r4, r5}                        ; restore old relocation modifiers

        LDMFD   sp!,    {r1-r9, sl, fp, ip, pc}         ; return from filter



        END

@


4.1
log
@Initial revision
@
text
@a20 25
r0      RN      0
r1      RN      1
r2      RN      2
r3      RN      3

r4      RN      4
r5      RN      5
r6      RN      6
r7      RN      7
r8      RN      8
r9      RN      9

r10     RN     10
r11     RN     11
r12     RN     12
r13     RN     13

sl      RN     10
fp      RN     11
ip      RN     12
sp      RN     13
lr      RN     14
pc      RN     15


d27 1
a27 1
        AREA    |C$$Code|, CODE, READONLY
d39 1
a39 1
        ; 
d44 1
a44 1
        MOV     sl,     sl, ASL #20                     ; SP_LWM (base of SVC stack)
d72 1
a72 1
        LDMFD sp!,      {r1-r9, sl, fp, ip, pc}^        ; return from filter
d85 1
a85 1
        MOV     sl,     sl, ASL #20                     ; SP_LWM (base of SVC stack)
d112 1
a112 1
        LDMFD   sp!,    {r1-r9, sl, fp, ip, pc}^        ; return from filter
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
