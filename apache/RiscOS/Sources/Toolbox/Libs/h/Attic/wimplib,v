head	1.3;
access;
symbols
	RO_5_07:1.3
	Libs-0_16:1.1
	Libs-0_15:1.1
	dellis_autobuild_BaseSW:1.1
	Libs-0_14:1.1
	Libs-0_13:1.1
	Libs-0_12:1.1
	Libs-0_11:1.1
	sbrodie_sedwards_16Mar2000:1.1
	Libs-0_10:1.1
	Libs-0_09:1.1
	dcotton_autobuild_BaseSW:1.1
	Libs-0_08:1.1
	Libs-0_07:1.1
	Libs-0_06:1.1
	Libs-0_05:1.1
	Libs-0_04:1.1
	Libs-0_03:1.1
	Libs-0_02:1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	sbrodie_Toolbox_Ursula_231198:1.1
	Ursula_RiscPC:1.1.0.10
	Libs-0_01:1.1
	nicke_TBoxLibs_20-9-98:1.1
	nicke_TBoxLibs_21_8_98:1.1.1.1
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	afrost_NC2_Generic:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	Ursula_bp:1.1
	Ursula:1.1.0.8
	Ursula_12May1998:1.1.0.6
	rthornb_UrsulaBuild_01May1998:1.1
	Daytona:1.1.0.4
	Daytona_bp:1.1
	sbrodie_Expresso_final_190298:1.1
	sbrodie_Toolbox_Libs_120298:1.1
	sbrodie_Expresso_BETA6_19980204:1.1
	Spinner_RCA116:1.1.1.1
	Spinner_B20_2:1.1.1.1
	Spinner_19_3:1.1.1.1
	Spinner_B18:1.1.1.1
	Spinner_B17:1.1.1.1
	Spin_merge_8Jul97:1.1.1.1
	Ursula_bp_8Jul97:1.1
	Spinner_B15:1.1.1.1
	Spinner_B14:1.1.1.1
	Spinner_B13:1.1.1.1
	Spinner_B12:1.1.1.1
	Spinner_B10:1.1.1.1
	Spin_merge:1.1.1.1
	Spinner_B7:1.1.1.1
	Spin_3Apr97:1.1.1.1
	RCA_bp:1.1
	RCA:1.1.0.2
	initial:1.1.1.1
	Spinner:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2003.02.26.18.28.40;	author bavison;	state dead;
branches;
next	1.2;

1.2
date	2002.05.24.09.39.30;	author jberanek;	state Exp;
branches;
next	1.1;

1.1
date	97.03.21.11.54.34;	author scormie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.03.21.11.54.34;	author scormie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Added a couple of missing option button flag symbols.
Removed several obsolete files.

Version 0.17. Not tagged
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * wimplib.h
 * veneers onto the wimp SWIs
 */
                             
#ifndef __wimplib_h
#define __wimplib_h

#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __wimp_h
#include "wimp.h"
#endif

#ifdef __cplusplus
extern "C"
{
#endif


_kernel_oserror *wimp_initialise        (int version, 
                                        char *name, 
                                        int *messages, 
                                        int *cversion, 
                                        int *task);

_kernel_oserror *wimp_create_window     (WimpWindow *defn, int *handle);

_kernel_oserror *wimp_create_icon       (int priority,
                                        WimpCreateIconBlock *defn,
                                        int *handle);

_kernel_oserror *wimp_delete_window     (WimpDeleteWindowBlock *block);

_kernel_oserror *wimp_delete_icon       (WimpDeleteIconBlock *block);

_kernel_oserror *wimp_open_window       (WimpOpenWindowBlock *show);

_kernel_oserror *wimp_close_window      (int *window_handle);
                            
_kernel_oserror *wimp_poll              (int mask,
                                        WimpPollBlock *block,
                                        int *pollword,
                                        int *event_code);
                        
_kernel_oserror *wimp_redraw_window     (WimpRedrawWindowBlock *block, int *more);

_kernel_oserror *wimp_update_window     (WimpRedrawWindowBlock *block, int *more);

_kernel_oserror *wimp_get_rectangle     (WimpRedrawWindowBlock *block, int *more);

_kernel_oserror *wimp_get_window_state  (WimpGetWindowStateBlock *state);

_kernel_oserror *wimp_get_window_info   (WimpGetWindowInfoBlock *block);

_kernel_oserror *wimp_set_icon_state    (WimpSetIconStateBlock *block);

_kernel_oserror *wimp_get_icon_state    (WimpGetIconStateBlock *block);

_kernel_oserror *wimp_get_pointer_info  (WimpGetPointerInfoBlock *block);

#define CancelDrag 0

_kernel_oserror *wimp_drag_box          (WimpDragBox *block);

_kernel_oserror *wimp_force_redraw      (int window_handle,
                                        int xmin,
                                        int ymin,
                                        int xmax,
                                        int ymax);

_kernel_oserror *wimp_set_caret_position (int window_handle,
                                        int icon_handle,
                                        int xoffset,
                                        int yoffset,
                                        int height,
                                        int index);

_kernel_oserror *wimp_get_caret_position (WimpGetCaretPositionBlock *block);

#define CloseMenu ((void *) -1)
_kernel_oserror *wimp_create_menu       (void * handle,
                                        int x,int y);

_kernel_oserror *wimp_decode_menu       (WimpMenu *data,
                                        int *selections,
                                        char *buffer);

_kernel_oserror *wimp_which_icon        (int window_handle,
                                        int *icons,
                                        unsigned int mask,
                                        unsigned int match);

_kernel_oserror *wimp_set_extent        (int window_handle, BBox *area);

_kernel_oserror *wimp_set_pointer_shape (int shape,
                                        void *data,
                                        int width,
                                        int height,
                                        int activex,
                                        int activey);

_kernel_oserror *wimp_open_template     (char *name);

_kernel_oserror *wimp_close_template    (void);

_kernel_oserror *wimp_load_template     (_kernel_swi_regs *regs);

_kernel_oserror *wimp_process_key       (int keycode);

_kernel_oserror *wimp_close_down        (int th);

_kernel_oserror *wimp_start_task        (char *cl, int *handle);

int             wimp_report_error       (_kernel_oserror *er,
                                        int flags,
                                        char *name, ...);

/* 
 * On 3.50 onwards we can have additional parameters:
 *                                      char *sprite
 *                                      void *area
 *                                      char *buttons
 */

_kernel_oserror *wimp_get_window_outline (WimpGetWindowOutlineBlock *block);

_kernel_oserror *wimp_pollidle          (int mask,
                                        WimpPollBlock *block,
                                        int time,
                                        int *pollword,
                                        int *event_code);
                                                
_kernel_oserror *wimp_plot_icon         (WimpPlotIconBlock *block);

_kernel_oserror *wimp_set_mode          (int mode);

typedef struct {
   unsigned int colours[16];
   unsigned int border;
   unsigned int pointer1;
   unsigned int pointer2;
   unsigned int pointer3;
} Palette;

_kernel_oserror *wimp_set_palette       (Palette *palette);

_kernel_oserror *wimp_read_palette      (Palette *palette);

#define Wimp_BackgroundColour (128)
_kernel_oserror *wimp_set_colour        (int colour);

_kernel_oserror *wimp_send_message      (int code,
                                        void *block,
                                        int handle,
                                        int icon,
                                        int *th);

_kernel_oserror *wimp_create_submenu    (void * handle,
                                        int x,int y);

typedef struct {
   int r2;         /* ignored on entry */
   int r3;
   int r4;
   int r5;
   int r6;
   int r7;
}SpriteParams;

_kernel_oserror *wimp_sprite_op         (int code,
                                        char *name,
                                        SpriteParams *p);

_kernel_oserror *wimp_base_of_sprites   (void **rom,
                                        void **ram);

_kernel_oserror *wimp_block_copy        (int handle,
                                        int sxmin,
                                        int symin,
                                        int sxmax,
                                        int symax,      
                                        int dxmin,
                                        int dymin);

_kernel_oserror *wimp_slot_size         (int current,
                                        int next,
                                        int *current_out,
                                        int *next_out,
                                        int *free);

/* readpixtrans and claimfreememory not supported */

_kernel_oserror *wimp_command_window    (int type);

_kernel_oserror *wimp_text_colour       (int colour);

_kernel_oserror *wimp_transfer_block    (int sh,
                                        void *sbuf,
                                        int dh,
                                        void *dbuf,
                                        int size);
                                                   
typedef struct {
   int r0;
   int r1;
} WimpSysInfo;
          
_kernel_oserror *wimp_read_sys_info     (int reason,
                                        WimpSysInfo *results);

_kernel_oserror *wimp_set_font_colours  (int fore,
                                        int back);

_kernel_oserror *wimp_get_menu_state    (int report,
                                        int *state,
                                        int window,
                                        int icon);

/* no filter manager interface */
                                     
/* do not use these in toolbox applications */
_kernel_oserror *wimp_add_messages      (int *list);

_kernel_oserror *wimp_remove_messages   (int *list);

_kernel_oserror *wimp_set_colour_mapping (int which_palette,
                                        int *bpp1,
                                        int *bpp2,
                                        int *bpp4);
                                    
_kernel_oserror *wimp_text_op           (_kernel_swi_regs *regs);

/* no extend or set watchdog state */

_kernel_oserror *wimp_resize_icon       (int window,
                                        int icon,
                                        int xmin,
                                        int ymin,       
                                        int xmax,
                                        int ymax);
   

#ifdef __cplusplus
}
#endif

           
#endif
@


1.2
log
@  Fixed function declaration in wimplib.h
Detail:

* cc 5.45 fell over a function declaration in wimplib.h (wimp_slot_size)
 where the same parameter name was used more than once. This fix removes
 the name conflicts.

Admin:
  Built DebugLib toolbox test harness with cc 5.45 to test this.


Version 0.17. Tagged as 'Libs-0_17'
@
text
@@


1.1
log
@Initial revision
@
text
@d204 2
a205 2
                                        int *current,
                                        int *next,
@


1.1.1.1
log
@Initial version (so that toolbox apps can build).

@
text
@@
