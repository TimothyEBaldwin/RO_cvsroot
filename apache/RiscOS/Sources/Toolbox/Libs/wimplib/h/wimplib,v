head	4.5;
access;
symbols
	Libs-0_27-1:4.5
	Libs-0_27:4.5
	Libs-0_26:4.5
	Libs-0_25:4.4
	Libs-0_24:4.4
	Libs-0_23:4.4
	Libs-0_22:4.4
	Libs-0_21:4.4
	Libs-0_20:4.4
	Libs-0_19:4.4
	Libs-0_18:4.4
	RO_5_07:4.4
	Libs-0_17:4.4
	Libs-0_16:4.3
	Libs-0_15:4.3
	dellis_autobuild_BaseSW:4.3
	Libs-0_14:4.3
	Libs-0_13:4.3
	Libs-0_12:4.3
	Libs-0_11:4.3
	sbrodie_sedwards_16Mar2000:4.3
	Libs-0_10:4.3
	Libs-0_09:4.3
	dcotton_autobuild_BaseSW:4.3
	Libs-0_08:4.3
	Libs-0_07:4.3
	Libs-0_06:4.3
	Libs-0_05:4.3
	Libs-0_04:4.3
	Libs-0_03:4.3
	Libs-0_02:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3
	sbrodie_Toolbox_Ursula_231198:4.3
	Ursula_RiscPC:4.3.0.4
	Libs-0_01:4.3
	nicke_TBoxLibs_20-9-98:4.3
	nicke_TBoxLibs_21_8_98:4.1.7.2
	rthornb_UrsulaBuild-19Aug1998:4.3
	UrsulaBuild_FinalSoftload:4.3
	rthornb_UrsulaBuild-12Aug1998:4.3
	aglover_UrsulaBuild-05Aug1998:4.3
	rthornb_UrsulaBuild-29Jul1998:4.3
	rthornb_UrsulaBuild-22Jul1998:4.3
	rthornb_UrsulaBuild-15Jul1998:4.3
	rthornb_UrsulaBuild-07Jul1998:4.3
	rthornb_UrsulaBuild-17Jun1998:4.3
	afrost_NC2_Generic:4.3
	rthornb_UrsulaBuild-03Jun1998:4.3
	rthornb_UrsulaBuild-27May1998:4.3
	rthornb_UrsulaBuild-21May1998:4.3
	Ursula_bp:4.3
	Ursula:4.3.0.2
	Ursula_12May1998:4.2.0.4
	rthornb_UrsulaBuild_01May1998:4.2
	Daytona:4.2.0.2
	Daytona_bp:4.2
	sbrodie_Expresso_final_190298:4.3
	sbrodie_Toolbox_Libs_120298:4.3
	sbrodie_Expresso_BETA6_19980204:4.3
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spin_merge_8Jul97:4.1.7.2
	Ursula_bp_8Jul97:4.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2018.03.02.23.03.07;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	srsMGZfQpwnibWsA;

4.4
date	2002.05.24.09.39.31;	author jberanek;	state Exp;
branches;
next	4.3;

4.3
date	97.11.25.13.30.16;	author pwombwel;	state Exp;
branches;
next	4.2;

4.2
date	97.05.13.09.05.55;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.39;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.39;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.47.59;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.08.21;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.43.36;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.19.19.42.10;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Finalisation fix, docs & header improvment
The error check on eventlib finalisation was reversed in sense, so no error returned before resetting the id_block and mask values.
Clarify eventlib's use of malloc() in its docs for reduced head scratching.
Add missing const qualifier to wimp_report_error() prototype.

Add some stripdepnd's so cleaning also restores the makefiles.

Version 0.26. Tagged as 'Libs-0_26'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * wimplib.h
 * veneers onto the wimp SWIs
 */

#ifndef __wimplib_h
#define __wimplib_h

#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __wimp_h
#include "wimp.h"
#endif

#ifdef __cplusplus
extern "C"
{
#endif


_kernel_oserror *wimp_initialise        (int version,
                                        char *name,
                                        int *messages,
                                        int *cversion,
                                        int *task);

_kernel_oserror *wimp_create_window     (WimpWindow *defn, int *handle);

_kernel_oserror *wimp_create_icon       (int priority,
                                        WimpCreateIconBlock *defn,
                                        int *handle);

_kernel_oserror *wimp_delete_window     (WimpDeleteWindowBlock *block);

_kernel_oserror *wimp_delete_icon       (WimpDeleteIconBlock *block);

_kernel_oserror *wimp_open_window       (WimpOpenWindowBlock *show);

_kernel_oserror *wimp_open_window2      (WimpOpenWindowBlock *show,
                                        int parent_handle,
                                        unsigned int flags);

_kernel_oserror *wimp_close_window      (int *window_handle);

_kernel_oserror *wimp_poll              (int mask,
                                        WimpPollBlock *block,
                                        int *pollword,
                                        int *event_code);

_kernel_oserror *wimp_redraw_window     (WimpRedrawWindowBlock *block, int *more);

_kernel_oserror *wimp_update_window     (WimpRedrawWindowBlock *block, int *more);

_kernel_oserror *wimp_get_rectangle     (WimpRedrawWindowBlock *block, int *more);

_kernel_oserror *wimp_get_window_state  (WimpGetWindowStateBlock *state);

_kernel_oserror *wimp_get_window_state2 (WimpGetWindowStateBlock *state,
                                         int *parent_handle,
                                         unsigned int *flags);

_kernel_oserror *wimp_get_window_info   (WimpGetWindowInfoBlock *block);

_kernel_oserror *wimp_get_window_info_no_icon_data (WimpGetWindowInfoBlock *block);

_kernel_oserror *wimp_set_icon_state    (WimpSetIconStateBlock *block);

_kernel_oserror *wimp_get_icon_state    (WimpGetIconStateBlock *block);

_kernel_oserror *wimp_get_pointer_info  (WimpGetPointerInfoBlock *block);

#define CancelDrag 0

_kernel_oserror *wimp_drag_box          (WimpDragBox *block);

_kernel_oserror *wimp_force_redraw      (int window_handle,
                                        int xmin,
                                        int ymin,
                                        int xmax,
                                        int ymax);

_kernel_oserror *wimp_force_title_redraw (int window_handle);

_kernel_oserror *wimp_set_caret_position (int window_handle,
                                        int icon_handle,
                                        int xoffset,
                                        int yoffset,
                                        int height,
                                        int index);

_kernel_oserror *wimp_get_caret_position (WimpGetCaretPositionBlock *block);

#define CloseMenu ((void *) -1)
_kernel_oserror *wimp_create_menu       (void * handle,
                                        int x,int y);

_kernel_oserror *wimp_decode_menu       (WimpMenu *data,
                                        int *selections,
                                        char *buffer);

_kernel_oserror *wimp_which_icon        (int window_handle,
                                        int *icons,
                                        unsigned int mask,
                                        unsigned int match);

_kernel_oserror *wimp_set_extent        (int window_handle, BBox *area);

_kernel_oserror *wimp_set_pointer_shape (int shape,
                                        void *data,
                                        int width,
                                        int height,
                                        int activex,
                                        int activey);

_kernel_oserror *wimp_open_template     (char *name);

_kernel_oserror *wimp_close_template    (void);

_kernel_oserror *wimp_load_template     (_kernel_swi_regs *regs);

_kernel_oserror *wimp_process_key       (int keycode);

_kernel_oserror *wimp_close_down        (int th);

_kernel_oserror *wimp_start_task        (char *cl, int *handle);

int             wimp_report_error       (_kernel_oserror *er,
                                        int flags,
                                        const char *name, ...);

/*
 * On 3.50 onwards we can have additional parameters:
 *                                      char *sprite
 *                                      void *area
 *                                      char *buttons
 */

_kernel_oserror *wimp_get_window_outline (WimpGetWindowOutlineBlock *block);

_kernel_oserror *wimp_pollidle          (int mask,
                                        WimpPollBlock *block,
                                        int time,
                                        int *pollword,
                                        int *event_code);

_kernel_oserror *wimp_plot_icon         (WimpPlotIconBlock *block);

_kernel_oserror *wimp_set_mode          (int mode);

typedef struct {
   unsigned int colours[16];
   unsigned int border;
   unsigned int pointer1;
   unsigned int pointer2;
   unsigned int pointer3;
} Palette;

_kernel_oserror *wimp_set_palette       (Palette *palette);

_kernel_oserror *wimp_read_palette      (Palette *palette);

#define Wimp_BackgroundColour (128)
_kernel_oserror *wimp_set_colour        (int colour);

_kernel_oserror *wimp_send_message      (int code,
                                        void *block,
                                        int handle,
                                        int icon,
                                        int *th);

_kernel_oserror *wimp_create_submenu    (void * handle,
                                        int x,int y);

typedef struct {
   int r2;         /* ignored on entry */
   int r3;
   int r4;
   int r5;
   int r6;
   int r7;
}SpriteParams;

_kernel_oserror *wimp_sprite_op         (int code,
                                        char *name,
                                        SpriteParams *p);

_kernel_oserror *wimp_base_of_sprites   (void **rom,
                                        void **ram);

_kernel_oserror *wimp_block_copy        (int handle,
                                        int sxmin,
                                        int symin,
                                        int sxmax,
                                        int symax,
                                        int dxmin,
                                        int dymin);

_kernel_oserror *wimp_slot_size         (int current,
                                        int next,
                                        int *current_out,
                                        int *next_out,
                                        int *free);

/* readpixtrans and claimfreememory not supported */

_kernel_oserror *wimp_command_window    (int type);

_kernel_oserror *wimp_text_colour       (int colour);

_kernel_oserror *wimp_transfer_block    (int sh,
                                        void *sbuf,
                                        int dh,
                                        void *dbuf,
                                        int size);

typedef struct {
   int r0;
   int r1;
} WimpSysInfo;

_kernel_oserror *wimp_read_sys_info     (int reason,
                                        WimpSysInfo *results);

_kernel_oserror *wimp_set_font_colours  (int fore,
                                        int back);

_kernel_oserror *wimp_get_menu_state    (int report,
                                        int *state,
                                        int window,
                                        int icon);

/* no filter manager interface */

/* do not use the following two functions in toolbox applications */
_kernel_oserror *wimp_add_messages      (int *list);

_kernel_oserror *wimp_remove_messages   (int *list);

_kernel_oserror *wimp_set_colour_mapping (int which_palette,
                                        int *bpp1,
                                        int *bpp2,
                                        int *bpp4);

_kernel_oserror *wimp_text_op           (_kernel_swi_regs *regs);

/* no extend or set watchdog state */

_kernel_oserror *wimp_resize_icon       (int window,
                                        int icon,
                                        int xmin,
                                        int ymin,
                                        int xmax,
                                        int ymax);


#ifdef __cplusplus
}
#endif


#endif
@


4.4
log
@  Fixed function declaration in wimplib.h
Detail:

* cc 5.45 fell over a function declaration in wimplib.h (wimp_slot_size)
 where the same parameter name was used more than once. This fix removes
 the name conflicts.

Admin:
  Built DebugLib toolbox test harness with cc 5.45 to test this.


Version 0.17. Tagged as 'Libs-0_17'
@
text
@d145 1
a145 1
                                        char *name, ...);
@


4.3
log
@Added wimp_get_window_info_no_icon_data. Incremented version number to 0.04
@
text
@d216 2
a217 2
                                        int *current,
                                        int *next,
@


4.2
log
@Object files removed
@
text
@d80 2
d250 1
a250 1
/* do not use these in toolbox applications */
@


4.1
log
@Initial revision
@
text
@d19 1
a19 1
                             
d37 4
a40 4
_kernel_oserror *wimp_initialise        (int version, 
                                        char *name, 
                                        int *messages, 
                                        int *cversion, 
d55 4
d60 1
a60 1
                            
d65 1
a65 1
                        
d74 4
d96 2
d145 1
a145 1
/* 
d159 1
a159 1
                                                
d208 1
a208 1
                                        int symax,      
d229 1
a229 1
                                                   
d234 1
a234 1
          
d247 1
a247 1
                                     
d257 1
a257 1
                                    
d265 1
a265 1
                                        int ymin,       
d268 1
a268 1
   
d274 1
a274 1
           
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Added veneers for nested wimp calls (extended Wimp_OpenWindow, extended
Wimp_GetWindowState, and title redrawing variant of Wimp_ForceRedraw)
@
text
@d19 1
a19 1

d37 4
a40 4
_kernel_oserror *wimp_initialise        (int version,
                                        char *name,
                                        int *messages,
                                        int *cversion,
a54 4
_kernel_oserror *wimp_open_window2      (WimpOpenWindowBlock *show,
                                        int parent_handle,
                                        unsigned int flags);

d56 1
a56 1

d61 1
a61 1

a69 4
_kernel_oserror *wimp_get_window_state2 (WimpGetWindowStateBlock *state,
                                         int *parent_handle,
                                         unsigned int *flags);

a87 2
_kernel_oserror *wimp_force_title_redraw (int window_handle);

d135 1
a135 1
/*
d149 1
a149 1

d198 1
a198 1
                                        int symax,
d219 1
a219 1

d224 1
a224 1

d237 1
a237 1

d247 1
a247 1

d255 1
a255 1
                                        int ymin,
d258 1
a258 1

d264 1
a264 1

@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
