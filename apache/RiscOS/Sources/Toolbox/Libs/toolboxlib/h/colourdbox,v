head	1.1;
access;
symbols
	Libs-0_27-1:1.1
	Libs-0_27:1.1
	Libs-0_26:1.1
	Libs-0_25:1.1
	Libs-0_24:1.1
	Libs-0_23:1.1
	Libs-0_22:1.1
	Libs-0_21:1.1
	Libs-0_20:1.1
	Libs-0_19:1.1
	Libs-0_18:1.1
	RO_5_07:1.1
	Libs-0_17:1.1
	Libs-0_16:1.1
	Libs-0_15:1.1
	dellis_autobuild_BaseSW:1.1
	Libs-0_14:1.1
	Libs-0_13:1.1
	Libs-0_12:1.1
	Libs-0_11:1.1
	sbrodie_sedwards_16Mar2000:1.1
	Libs-0_10:1.1
	Libs-0_09:1.1
	dcotton_autobuild_BaseSW:1.1
	Libs-0_08:1.1
	Libs-0_07:1.1
	Libs-0_06:1.1
	Libs-0_05:1.1
	Libs-0_04:1.1
	Libs-0_03:1.1
	Libs-0_02:1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1
	sbrodie_Toolbox_Ursula_231198:1.1
	Ursula_RiscPC:1.1.0.8
	Libs-0_01:1.1
	nicke_TBoxLibs_20-9-98:1.1
	rthornb_UrsulaBuild-19Aug1998:1.1
	UrsulaBuild_FinalSoftload:1.1
	rthornb_UrsulaBuild-12Aug1998:1.1
	aglover_UrsulaBuild-05Aug1998:1.1
	rthornb_UrsulaBuild-29Jul1998:1.1
	rthornb_UrsulaBuild-22Jul1998:1.1
	rthornb_UrsulaBuild-15Jul1998:1.1
	rthornb_UrsulaBuild-07Jul1998:1.1
	rthornb_UrsulaBuild-17Jun1998:1.1
	afrost_NC2_Generic:1.1
	rthornb_UrsulaBuild-03Jun1998:1.1
	rthornb_UrsulaBuild-27May1998:1.1
	rthornb_UrsulaBuild-21May1998:1.1
	Ursula_bp:1.1
	Ursula:1.1.0.6
	Ursula_12May1998:1.1.0.4
	rthornb_UrsulaBuild_01May1998:1.1
	Daytona:1.1.0.2
	Daytona_bp:1.1
	sbrodie_Expresso_final_190298:1.1
	sbrodie_Toolbox_Libs_120298:1.1
	sbrodie_Expresso_BETA6_19980204:1.1;
locks; strict;
comment	@# @;


1.1
date	97.09.19.13.05.35;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Transferred from Aquarius SrcFiler mount.  Changed build structure to fit Renaissance.  Updated header files where appropriate (for nested Wimp etc.).
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the toolbox library for writing desktop applications in C. It may be     *
 * used freely in the creation of programs for Archimedes or Risc PC. It    *
 * should be used with Acorn's C Compiler Release 5 or later.               *
 *                                                                          *
 *                                                                          *
 * Copyright © Acorn Computers Ltd, 1994                                    *
 *                                                                          *
 ***************************************************************************/



/*
 * Name        : colourdbox.h
 * Description : C veneers to the Methods provided by the colourdbox class
 */



#ifndef __colourdbox_h
#define __colourdbox_h


#ifndef __kernel_h
#include "kernel.h"
#endif

#ifndef __toolbox_h
#include "toolbox.h"
#endif

#ifndef __window_h
#include "window.h"
#endif


/****************************************************************************
 * ColourDbox Templates                                                     *
 ****************************************************************************/
 
/*-- flags --*/

#define ColourDbox_GenerateShowEvent        0x00000001
#define ColourDbox_GenerateHideEvent        0x00000002
#define ColourDbox_IncludeNoneButton        0x00000004
#define ColourDbox_SelectNoneButton         0x00000008


/*-- templates --*/

typedef struct
{
  unsigned int  flags;
  char          *title;
  int           max_title;
  unsigned int  colour;
} ColourDboxTemplate;


/****************************************************************************
 * ColourDbox SWI calls                                                     *
 ****************************************************************************/


#define ColourDbox_SWIChunkBase    0x829c0
#define ColourDbox_ObjectClass     ColourDbox_SWIChunkBase
#define ColourDbox_ClassSWI        (ColourDbox_SWIChunkBase + 0)
#define ColourDbox_PostFilter      (ColourDbox_SWIChunkBase + 1)
#define ColourDbox_PreFilter       (ColourDbox_SWIChunkBase + 2)

/****************************************************************************
 * ColourDbox SWI and event flags                                           *
 ****************************************************************************/

#define ColourDbox_ColourNoneSelected           0x00000001

/****************************************************************************
 * ColourDbox Methods                                                       *
 ****************************************************************************/


#define ColourDbox_GetWimpHandle           0
#define ColourDbox_GetDialogueHandle       1
#define ColourDbox_SetColour               2
#define ColourDbox_GetColour               3
#define ColourDbox_SetColourModel          4
#define ColourDbox_GetColourModel          5
#define ColourDbox_SetNoneAvailable        6
#define ColourDbox_GetNoneAvailable        7


/****************************************************************************
 * ColourDbox Toolbox Events                                                *
 ****************************************************************************/

#define ColourDbox_AboutToBeShown     ColourDbox_SWIChunkBase
#define ColourDbox_DialogueCompleted  (ColourDbox_SWIChunkBase + 1)
#define ColourDbox_ColourSelected     (ColourDbox_SWIChunkBase + 2)

typedef struct
{
  ToolboxEventHeader  hdr;
  int                 show_type;
  union
  {
    TopLeft               pos;
    WindowShowObjectBlock full;
  } info;
} ColourDboxAboutToBeShownEvent;


typedef struct
{
  ToolboxEventHeader hdr;
} ColourDboxDialogueCompletedEvent;


typedef struct
{
  ToolboxEventHeader hdr;
  unsigned int       colour_block[(212/4)];
} ColourDboxColourSelectedEvent;


typedef struct
{
  ToolboxEventHeader hdr;
  unsigned int       colour_block[(212/4)];
} ColourDboxColourChangedEvent;






/****************************************************************************
 * The following functions provide veneers to the methods that are          *
 * associated with this particular class.  Please read the User Interface   *
 * Toolbox manual for more detailed information on their functionality.     *
 ****************************************************************************/


#ifdef __cplusplus
  extern "C" {
#endif


/*
 * Name        : colourdbox_get_none_available
 * Description : Gets whether the "none" option is available for the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 * Out         : int *out_flags
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_get_none_available ( unsigned int flags,
                                                        ObjectId colourdbox,
                                                        int *out_flags
                                                      );


/*
 * Name        : colourdbox_set_none_available
 * Description : Set whether a "none" option appears in the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 *               int none
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_set_none_available ( unsigned int flags,
                                                        ObjectId colourdbox,
                                                        int none
                                                      );


/*
 * Name        : colourdbox_get_colour_model
 * Description : Gets the current colour model for the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 *               int *buffer
 *               int buff_size
 * Out         : int *nbytes
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_get_colour_model ( unsigned int flags,
                                                      ObjectId colourdbox,
                                                      int *buffer,
                                                      int buff_size,
                                                      int *nbytes
                                                    );


/*
 * Name        : colourdbox_set_colour_model
 * Description : Set the colour model for the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 *               int *colour_model_block
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_set_colour_model ( unsigned int flags,
                                                      ObjectId colourdbox,
                                                      int *colour_model_block
                                                    );

/*
 * Name        : colourdbox_get_colour
 * Description : Gets the colour that is currently being shown in the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 *               int *buffer
 *               int buff_size
 * Out         : int *outflags
 *               int *nbytes
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_get_colour ( unsigned int flags,
                                                ObjectId colourdbox,
                                                int *buffer,
                                                int buff_size,
                                                int *outflags,
                                                int *nbytes
                                              );


/*
 * Name        : colourdbox_set_colour
 * Description : Set the colour to be displayed in the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 *               int *colour_block
 * Out         : None
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_set_colour ( unsigned int flags,
                                                ObjectId colourdbox,
                                                int *colour_block
                                              );


/*
 * Name        : colourdbox_get_dialogue_handle
 * Description : Gets the underlying dialogue handle for the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 * Out         : int *dialogue_handle
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_get_dialogue_handle ( unsigned int flags,
                                                         ObjectId colourdbox,
                                                         int *dialogue_handle
                                                       );


/*
 * Name        : colourdbox_get_wimp_handle
 * Description : Gets the underlying window handle for the specified ColourDbox 
 * In          : unsigned int flags
 *               ObjectId colourdbox
 * Out         : int *wimp_handle
 * Returns     : pointer to error block
 */

extern _kernel_oserror *colourdbox_get_wimp_handle ( unsigned int flags,
                                                     ObjectId colourdbox,
                                                     int *wimp_handle
                                                   );


#ifdef __cplusplus
  }
#endif


#endif
@
