head	4.8;
access;
symbols
	ToolAction-0_38:4.8
	ToolAction-0_37:4.8
	ToolAction-0_36:4.7
	ToolAction-0_35:4.7
	ToolAction-0_34:4.6
	ToolAction-0_33:4.6
	ToolAction-0_32:4.5
	ToolAction-0_31:4.5
	ToolAction-0_30:4.5
	RO_5_07:4.5
	ToolAction-0_29:4.5
	ToolAction-0_28:4.5
	ToolAction-0_27:4.5
	ToolAction-0_26:4.4
	ToolAction-0_25:4.4
	ToolAction-0_24:4.4
	dellis_autobuild_BaseSW:4.4
	ToolAction-0_23:4.4
	sbrodie_sedwards_16Mar2000:4.4
	ToolAction-0_22:4.4
	ToolAction-0_21:4.3
	dcotton_autobuild_BaseSW:4.4
	ToolAction-0_20:4.3
	ToolAction-0_19:4.3
	ToolAction-0_18:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3
	sbrodie_Toolbox_Ursula_231198:4.3
	Ursula_RiscPC:4.3.0.4
	ToolAction-0_17:4.3
	rthornb_UrsulaBuild-19Aug1998:4.3
	UrsulaBuild_FinalSoftload:4.3
	rthornb_UrsulaBuild-12Aug1998:4.3
	Ursula:4.3.0.2
	Ursula_bp:4.3
	ToolAction-0_16:4.3
	aglover_UrsulaBuild-05Aug1998:4.3
	rthornb_UrsulaBuild-29Jul1998:4.3
	rthornb_UrsulaBuild-22Jul1998:4.3
	rthornb_UrsulaBuild-15Jul1998:4.3
	rthornb_UrsulaBuild-07Jul1998:4.3
	rthornb_UrsulaBuild-17Jun1998:4.3
	rthornb_UrsulaBuild-03Jun1998:4.3
	rthornb_UrsulaBuild-27May1998:4.3
	rthornb_UrsulaBuild-21May1998:4.3
	Ursula_12May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	afrost_NC2_Generic:4.1.7.2
	sbrodie_Expresso_final_190298:4.3
	sbrodie_ToolAction_0_15:4.3
	sbrodie_Expresso_BETA6_19980204:4.2
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Daytona:4.2
	Spin_merge_8Jul97:4.1.7.2
	Ursula_bp_8Jul97:4.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.2
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	smiddle_0_14:4.1.7.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.8
date	2015.08.18.21.51.38;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	Kq5l3EVHqmxfANxy;

4.7
date	2014.07.19.15.24.50;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	WRvAVD0ee7PL80Jx;

4.6
date	2013.08.28.19.11.14;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	D0b5pUdo6Pa8Qf3x;

4.5
date	2002.07.16.13.06.52;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	99.11.17.13.26.29;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	98.02.11.19.01.32;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.05.13.09.11.53;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.21.13.44.18;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.21.13.44.18;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.22.27.49;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.06.17.24.30;	author smiddle;	state Exp;
branches;
next	;


desc
@@


4.8
log
@Makefile recreated from fragments
Use module header constants generated from CMHG rather than hand made one.

Version 0.37. Tagged as 'ToolAction-0_37'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   main.c
 * Purpose: main file of toolaction module
 * Author:  SJM
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

#include "swis.h"

#include "os.h"
#include "resourcefs.h"

#include "ToolActionHdr.h"
#include "messages.h"
#include "objmodule.h"
#include "utils.h"

#include "toolact.h"

#ifndef ROM
extern int Resources(void); /* From resgen */
#endif

#undef  Service_WindowModuleStarting
#define Service_WindowModuleStarting            0x82881
#undef  Service_WindowModuleDying
#define Service_WindowModuleDying               0x82882

/* ++++++++++++++++++++++++++++++++ finalisation code +++++++++++++++++++++++++++++++ */

_kernel_oserror *toolaction_final (int fatal, int podule, void *pw)
{
    _kernel_oserror *e;

    e = messages_file_close();
#ifndef ROM
    if (!e) e = objmodule_deregister_resources(Resources());
#endif

    toolaction_de_register(ToolAction_ToolAction);

    return e;

    NOT_USED(fatal);
    NOT_USED(podule);
    NOT_USED(pw);
}

/* ++++++++++++++++++++++++++++++++ initialisation code +++++++++++++++++++++++++++++++ */

_kernel_oserror *toolaction_init(const char *cmd_tail, int podule_base, void *pw)
{
    os_error *e = NULL;

#ifndef ROM
    e = (os_error *)objmodule_register_resources(Resources());
#endif
    if (!e)
    {
        e = (os_error *)messages_file_open("Resources:$.Resources.ToolAction.Messages");
        if (!e)
        {
            e = toolaction_register(ToolAction_ToolAction);
            if (e) messages_file_close();
        }
#ifndef ROM
        if (e) objmodule_deregister_resources(Resources());
#endif
    }

    return (_kernel_oserror *)e;

    NOT_USED(cmd_tail);
    NOT_USED(podule_base);
    NOT_USED(pw);
}

/* +++++++++++++++++++++++++++++++++ service handler code ++++++++++++++++++++++++++++++ */

void toolaction_services(int service_number, _kernel_swi_regs *r, void *pw)
{
    switch (service_number)
    {
        case Service_WindowModuleStarting:
            toolaction_register(ToolAction_ToolAction);
            break;

#ifndef ROM
        case Service_ResourceFSStarting:
            (*(void (*)(int, void *, void *, void *))r->r[2])(Resources(), 0, 0, (void *)r->r[3]);
            break;
#endif
    }
    NOT_USED(r);
    NOT_USED(pw);
}

/* ++++++++++++++++++++++++++++++++++++++ SWI code +++++++++++++++++++++++++++++++++++++ */

_kernel_oserror *toolaction_SWI_handler(int swi_no, _kernel_swi_regs *r, void *pw)
{
    _kernel_oserror *e;

    switch (swi_no)
    {
        case ToolAction_ToolAction - ToolAction_00:
            e = (_kernel_oserror *)toolaction_swi_handler((os_register_block *)r);
            break;

        default:
            return error_BAD_SWI;
    }

    NOT_USED(pw);
    return e;
}

/* eof main.c */

@


4.7
log
@Makefile recreated to use TboxMake
Some component reorganisation to make it fit the pattern of the other Toolbox modules.
string32.c - use the (identical) copy in Toolbox/Common/string32.
resource.c - swap to corresponding functions in Toolbox/Common/objmodule.
msgs.c - swap to corresponding functions in Toolbox/Common/messages.

Additional changes
main.c:
 Always assume CMHG 5.16 or later is in use.
 Don't bother calling TinySupport_Share and TinySupport_Die, they just inc/decrement a counter.
toolaction.c:
 Use common debug functionality, refactor single (not very exciting) debug call.
utils.c:
 Excess header includes removed.

In fact, this module only uses header from OSLib, it doesn't link with it (instead using a handful of _swix macros in "tbem.h"). These could in future be changed to just use the tboxlibint functions with a (lot of) careful checking.

Version 0.35. Tagged as 'ToolAction-0_35'
@
text
@d31 1
a31 1
#include "modhdr.h"
d39 1
a39 1
extern int messages_file(void); /* From resgen */
d55 1
a55 1
    if (!e) e = objmodule_deregister_resources(messages_file());
d74 1
a74 1
    e = (os_error *)objmodule_register_resources(messages_file());
d85 1
a85 1
        if (e) objmodule_deregister_resources(messages_file());
d108 1
a108 1
            (*(void (*)(int, void *, void *, void *))r->r[2])(messages_file(), 0, 0, (void *)r->r[3]);
@


4.6
log
@Single use assembler function converted to C
RAM module built, but not tested (Service_ResourceFSStarting isn't used in the ROM case).

Version 0.33. Tagged as 'ToolAction-0_33'
@
text
@d32 2
a33 2
#include "msgs.h"
#include "resources.h"
d38 2
a39 13
#if CMHG_VERSION < 516
#define CMHGCONST
#else
#define CMHGCONST const
#endif

#if ROM
#define TinySupport_Init        0x82c40
#define TinySupport_Die         0x82c41
#define TinySupport_Init2       0x82c42
#define TinySupport_Share       0x82c43

static bool tinysupport_used = FALSE;
d51 1
a51 1
    os_error *e;
d53 3
a55 3
    e = msgs_close();
#if !ROM
    if (!e) e = de_register_resources();
d60 1
a60 10
#if ROM
    if (!e && tinysupport_used)
        _swix(TinySupport_Die, 0);
#endif

#ifndef NDEBUG
    _swix(0xCF001, _IN(0), debugw);
#endif

    return (_kernel_oserror *)e;
d69 1
a69 1
_kernel_oserror *toolaction_init(CMHGCONST char *cmd_tail, int podule_base, void *pw)
d73 2
a74 6
#ifndef NDEBUG
    _swix(0xCF000, _INR(0,3)|_OUT(0), "toolaction", 100, 1000, 1, &debugw);
#endif

#if !ROM
    e = register_resources();
d78 1
a78 1
        e = msgs_init("Resources:$.Resources.ToolAction.Messages");
d82 1
a82 1
            if (e) msgs_close();
d84 2
a85 2
#if !ROM
        if (e) de_register_resources();
a88 4
#if ROM
    if (!e) tinysupport_used = _swix(TinySupport_Share, _IN(0), pw) == NULL;
#endif

d106 1
a106 1
#if !ROM
d108 1
a108 1
            (*(void (*)(void *, void *, void *, void *))r->r[2])(toolaction_resources(), 0, 0, (void *)r->r[3]);
d120 1
a120 1
    _kernel_oserror *e = NULL;
d129 1
a129 2
            e = error_BAD_SWI;
            break;
a135 2
/* ++++++++++++++++++++++++++++++++++++++ star commands ++++++++++++++++++++++++++++++++++++*/

@


4.5
log
@  Explicitly include stdbool.h because this component uses bool
Admin:
  Might help it build.

Version 0.27. Tagged as 'ToolAction-0_27'
@
text
@d131 1
a131 1
    	    toolaction_register(ToolAction_ToolAction);
d135 3
a137 3
    	case Service_ResourceFSStarting:
    	    re_register_resources(toolaction_resources(), r->r[3], r->r[2]);
    	    break;
@


4.4
log
@  Unnecessary assembler rewritten in C.
  ROM build stub functions removed.
  32-bit build capability added.
Detail:
  A lot of simple calls were being made in assembler for no reason.
    These are now done in C except for the veneer to call ResourceFS
    directly.  This veneer's exit code auto-detects which APCS to use.
  ResourceFS management functions are no longer in the image as they
    are no longer called.  They used to be stub functions that returned
    no error.
  Message file is linked in using a resgen-generated AOF file instead of
    being BIN'ed in the assembler.
  ROM builds contain no reference to ResourceFS at all, and do not trap
    the ResourceFS service call.
Admin:
  RAM build testing on desktop machine.
  Full 32-bit compatibility requires a 32bit capable defmod otherwise the
    OSLib-style library file it exports uses the wrong APCS.

Version 0.22. Tagged as 'ToolAction-0_22'
@
text
@d24 1
@


4.3
log
@ToolAction 0.15

Added CMHG version detection to automatically switch const qualifiers
on/off on appropriate veneers.
@
text
@d64 1
d66 1
d96 1
d98 1
d107 1
d109 1
d133 1
d135 1
a135 1
    	    re_register_resources(r->r[2], r->r[3]);
d137 1
d139 1
@


4.2
log
@Spinner branch merged
@
text
@d37 6
d86 1
a86 1
_kernel_oserror *toolaction_init(char *cmd_tail, int podule_base, void *pw)
d151 1
@


4.1
log
@Initial revision
@
text
@d16 1
a16 1
 * Purpose: main module of filewatch module
a30 1
#include "main.h"
a36 2
#define VERSION_NUMBER	13   	/* keep up to data with modhdr */

d53 1
a53 1
os_error *toolaction_final (int fatal, int podule, void *pw)
d71 1
a71 1
    return e;
d80 1
a80 1
os_error *toolaction_init(char *cmd_tail, int podule_base, void *pw)
d104 1
a104 1
    return e;
d113 1
a113 1
void toolaction_services(int service_number, os_register_block *r, void *pw)
d122 1
a122 1
    	    re_register_resources(r->registers[2], r->registers[3]);
d130 1
a130 1
os_error *toolaction_SWI_handler(int swi_no, os_register_block *r, void *pw)
d132 1
a132 1
    os_error *e = NULL;
d137 1
a137 1
            e = toolaction_swi_handler(r);
d141 1
a141 1
            e = make_err(error_NO_SUCH_SWI, "BadSWI", swi_no);
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Release 0.14 - Adds Set/GetPressed method. Assumes new CMHG.
@
text
@d16 1
a16 1
 * Purpose: main file of toolaction module
d31 1
d38 2
d56 1
a56 1
_kernel_oserror *toolaction_final (int fatal, int podule, void *pw)
d74 1
a74 1
    return (_kernel_oserror *)e;
d83 1
a83 1
_kernel_oserror *toolaction_init(char *cmd_tail, int podule_base, void *pw)
d107 1
a107 1
    return (_kernel_oserror *)e;
d116 1
a116 1
void toolaction_services(int service_number, _kernel_swi_regs *r, void *pw)
d125 1
a125 1
    	    re_register_resources(r->r[2], r->r[3]);
d133 1
a133 1
_kernel_oserror *toolaction_SWI_handler(int swi_no, _kernel_swi_regs *r, void *pw)
d135 1
a135 1
    _kernel_oserror *e = NULL;
d140 1
a140 1
            e = (_kernel_oserror *)toolaction_swi_handler((os_register_block *)r);
d144 1
a144 1
            e = error_BAD_SWI;
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
