head	4.7;
access;
symbols
	ColourDbox-0_22:4.7
	ColourDbox-0_21:4.7
	ColourDbox-0_20:4.7
	RO_5_07:4.6
	ColourDbox-0_19:4.6
	mstphens_UrsulaRiscPCBuild_20Nov98:4.5
	sbrodie_Toolbox_Ursula_231198:4.5
	Ursula_RiscPC:4.5.0.4
	rthornb_UrsulaBuild-19Aug1998:4.5
	UrsulaBuild_FinalSoftload:4.5
	rthornb_UrsulaBuild-12Aug1998:4.5
	Ursula:4.5.0.2
	Ursula_bp:4.5
	aglover_UrsulaBuild-05Aug1998:4.4
	rthornb_UrsulaBuild-29Jul1998:4.4
	ColourDbox-0_18:4.5
	rthornb_UrsulaBuild-22Jul1998:4.4
	rthornb_UrsulaBuild-15Jul1998:4.4
	rthornb_UrsulaBuild-07Jul1998:4.4
	rthornb_UrsulaBuild-17Jun1998:4.4
	rthornb_UrsulaBuild-03Jun1998:4.4
	rthornb_UrsulaBuild-27May1998:4.4
	rthornb_UrsulaBuild-21May1998:4.4
	Ursula_12May1998:4.3.0.2
	rthornb_UrsulaBuild_01May1998:4.3
	sbrodie_Expresso_final_190298:4.4
	sbrodie_ColourDbox_0_16:4.4
	sbrodie_Expresso_BETA6_19980204:4.4
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Daytona:4.3
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.2
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.7
date	2015.08.18.21.10.52;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	3QChTTUzrDxgmNxy;

4.6
date	2000.05.04.12.47.23;	author sbrodie;	state Exp;
branches;
next	4.5;

4.5
date	98.07.30.09.22.39;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	98.02.04.19.47.06;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	97.07.08.10.12.27;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.01.22.15.23.44;	author nturton;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.21.40;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	97.05.19.15.52.26;	author kbracey;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.21.40;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.38.11;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.10.27;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.34.01;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).

Version 0.20. Tagged as 'ColourDbox-0_20'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   main.c
 * Purpose: main module of a ColourDbox Object module
 * Author:  TGR
 * History: 17-Mar-94: TGR: created
 *          18-May-95: IDJ: bug-fix AQU-01270 - rmensure 310support
 *
 */


#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"
#include "Global/Services.h"

#include "const.h"
#include "macros.h"
#include "debug.h"
#include "rmensure.h"
#include "mem.h"
#include "messages.h"
#include "objmodule.h"

#include "objects/toolbox.h"
#include "objects/colourdbox.h"

#include "object.h"
#include "auxiliary.h"
#include "create.h"
#include "delete.h"
#include "show.h"
#include "hide.h"
#include "getstate.h"
#include "miscop.h"
#include "events.h"
#include "task.h"

#include "ColourDboxHdr.h"

#define MAX_CLASS_SWI_METHODS 7
static _kernel_oserror *(*class_swi_methods [MAX_CLASS_SWI_METHODS])(_kernel_swi_regs *r, TaskDescriptor *t) =
      {
         create_object,
         delete_object,
         NULL, /*copy_object,*/
         show_object,
         hide_object,
         getstate_object,
         miscop_object
      };



/* +++++++++++++++++++++++++++++++++ finalisation code +++++++++++++++++++++++++++++++++ */

#ifndef ROM
extern int Resources(void);
#endif

extern _kernel_oserror *ColourDbox_finalise (int fatal, int podule, void *pw)
{
    IGNORE(fatal);
    IGNORE(podule);
    IGNORE(pw);

    /*
     * refuse to finalise if tasks active
     */

    if (task_any_active())
        return make_error (ColourDbox_TasksActive, 0);

   /*
    * close our messages file
    */

   messages_file_close();


#ifndef ROM
    /*
     * ... and deregister from ResourceFS
     */

    objmodule_deregister_resources(Resources());
#endif

   /* deregister object module */
    objmodule_deregister(0, ColourDbox_ObjectClass);

   /*
    * free up memory we may have left allocated
    */

   mem_free_all ();

   return NULL;
}


/* ++++++++++++++++++++++++++++++++ initialisation code +++++++++++++++++++++++++++++++ */


extern _kernel_oserror *ColourDbox_init(const char *cmd_tail, int podule_base, void *pw)
{
   _kernel_oserror *e;
   int wimpversion;

   IGNORE(cmd_tail);
   IGNORE(podule_base);
   IGNORE(pw);

   DEBUG debug_set_var_name("ColourDbox$Debug");

   DEBUG debug_output ("M","ColD: code initialise\n");

   if (((e = rmensure ("Toolbox",      "Toolbox.Toolbox",     "1.29")) != NULL)
    || ((e = rmensure ("ColourPicker", "Picker",              "0.30")) != NULL)
    /*|| ((e = rmensure ("310Support",   "310Support.ThreeTen", "0.02")) != NULL)*/)
      return e;

   /* IDJ: 18-5-95: bug-fix AQU-01270: check wimp version before loading 310support */
   if ((e = _swix(Wimp_ReadSysInfo, _IN(0)|_OUT(0), 7, &wimpversion)) != NULL)
     return e;

   if (wimpversion < 350)
   {
       if ((e = rmensure ("310Support", "310Support.ThreeTen", "0.02")) != NULL)
           return e;
   }

   /*
    * register our messages file with ResourceFS & MessageTrans
    */

#ifndef ROM
   if ((e = objmodule_register_resources(Resources())) != NULL)
     return e;
#endif

   objmodule_ensure_path("ColourDbox$Path", "Resources:$.Resources.ColourDbox.");

   if ((e = messages_file_open ("ColourDbox:Messages")) != NULL)
      return e;

   /*  register here with the Toolbox as an Object Module */
   e = objmodule_register_with_toolbox(0, ColourDbox_ObjectClass, ColourDbox_ClassSWI, 0);
   if (e) {
#ifndef ROM
     objmodule_deregister_resources(Resources());
#endif
     return e;
   }

   auxiliary_find_size(getenv ("ColourPicker$Path") ?
      "ColourPicker:Templates" :
      "Resources:$.Resources.Picker.Templates");

   return NULL;
}



/* +++++++++++++++++++++++++++++++++ service handler code ++++++++++7++++++++++++++++++++ */


extern void ColourDbox_services(int service_number, _kernel_swi_regs *r, void *pw)
{
   IGNORE(pw);

   DEBUG debug_output ("M","ColD: svc 0x%x\n",service_number);

   switch (service_number)
   {

        case Service_ToolboxTaskDied:
            /*
             * task dying - r0 holds task handle
             */

            task_remove (r->r[0]);

            break;

      case Service_ToolboxTaskBorn:
         /* Toolbox task has just started R0  == wimp task handle */

         /*
          * create a new "task descriptor"
          */

         task_add (r->r[0]);

         break;

        case Service_ToolboxStarting:
            /*
             * register with the Toolbox as an Object Module
             */

            objmodule_register_with_toolbox(0, ColourDbox_ObjectClass, ColourDbox_ClassSWI, 0);
            break;

      default:
         break;
   }
}

/* ++++++++++++++++++++++++++++++++++++++ SWI code +++++++++++++++++++++++++++++++++++++ */


extern _kernel_oserror *ColourDbox_SWI_handler(int swi_no, _kernel_swi_regs *r, void *pw)
{
   _kernel_oserror *e;
   TaskDescriptor  *t;

   DEBUG debug_output ("M","ColD: SWI 0x%x\n",ColourDbox_SWIChunkBase+swi_no);

   IGNORE(pw);

   switch (swi_no)
   {
      case ColourDbox_ClassSWI - ColourDbox_00:
         if (r->r[0] < 0 || r->r[0] >= MAX_CLASS_SWI_METHODS)
         {
               return make_error_hex(ColourDbox_NoSuchMethod,1,r->r[0]);
         }
         else
         {
            t = task_find (r->r[3]);

            if (t == NULL)
            {
               return make_error_hex(ColourDbox_NoSuchTask,1,r->r[3]);
            }
            DEBUG debug_output ("M","ColD: class SWI method %d\n",r->r[0]);
            e = (*class_swi_methods[r->r[0]])(r, t);
         }
         break;

      case ColourDbox_PostFilter - ColourDbox_00:
         e = events_postfilter (r);
         break;

      case ColourDbox_PreFilter - ColourDbox_00:
         e = events_prefilter (r);
         break;

      default:
         e = error_BAD_SWI;
         break;
   }

   return e;
}

#if debugging
/* ++++++++++++++++++++++++++++++++++++++ star commands ++++++++++++++++++++++++++++++++++++*/

extern _kernel_oserror *ColourDbox_commands(const char *arg_string, int argc, int cmd_no, void *pw)
{
    IGNORE(argc);
    IGNORE(pw);
    IGNORE(arg_string);

    switch (cmd_no)
    {
        case CMD_ColourDbox_Memory:
            mem_print_list();
            break;

        default:
            break;
    }

    return NULL;
}
#endif
@


4.6
log
@  Changed to use common Makefile system.
  Debug build facility added.
Detail:
  Uses core facilities from Common instead of having private copies.
  Makefile vastly simplified to simply define a few macros, then include
    the common Toolbox Makefile which is exported by Common.
Admin:
  Requires Common 0.09 or later (RiscOS/Sources/Toolbox/Common; Common-0_09)
  Requires BuildSys 1.92 or later (RiscOS/BuildSys; BuildSys-1_92)
  Requires Library 0.41 or later (RiscOS/Library; Library-0_41)

Version 0.19. Tagged as 'ColourDbox-0_19'
@
text
@d28 1
a31 1
#include "services.h"
d38 2
a39 2
#include "objects.toolbox.h"
#include "objects.colourdbox.h"
a49 1

d52 1
a52 1
#include "main.h"
d70 2
a71 4
#ifdef ROM
static _kernel_oserror *__ROM;
#else
extern int messages_file(void);
d99 1
a99 1
    objmodule_deregister_resources(messages_file());
a110 4
#ifdef ROM
    if(!__ROM) _swix(0x82c41, 0);
#endif

d118 1
a118 1
extern _kernel_oserror *ColourDbox_init(char *cmd_tail, int podule_base, void *pw)
a126 4
#ifdef ROM
    __ROM = _swix(0x82c43, _IN(0), pw);
#endif

d151 1
a151 1
   if ((e = objmodule_register_resources(messages_file())) != NULL)
d164 1
a164 1
     objmodule_deregister_resources(messages_file());
d228 1
a228 1
   _kernel_oserror *e = NULL;
d233 1
a233 1
   (void) pw;
d237 1
a237 1
      case ColourDbox_ClassSWI - ColourDbox_SWIChunkBase:
d255 1
a255 1
      case ColourDbox_PostFilter - ColourDbox_SWIChunkBase:
d259 1
a259 1
      case ColourDbox_PreFilter - ColourDbox_SWIChunkBase:
d264 1
d274 1
a274 1
extern _kernel_oserror *ColourDbox_commands(char *arg_string, int argc, int cmd_no, void *pw)
d282 1
a282 1
        case 0:
@


4.5
log
@* Added show-centred capability.  Default show position was already doing
  a shot-at-pointer.
* Module version now maintained by srccommit.

Version 0.18. Tagged as 'ColourDbox-0_18'
@
text
@d36 1
d73 2
a78 5
   _kernel_swi_regs regs;
#ifndef ROM
   extern int messages_file(void);
#endif

d102 1
a102 2
    regs.r[0] = messages_file();
    _kernel_swi (ResourceFS_DeregisterFiles, &regs, &regs);
d106 1
a106 5

   regs.r[0] = 0;
   regs.r[1] = ColourDbox_ObjectClass;

   _kernel_swi(Toolbox_DeRegisterObjectModule, &regs, &regs);
d115 1
a115 1
    if(!__ROM) _swix(0xa2c41, 0);
a126 2
   char         *messages_filename;
   _kernel_swi_regs regs;
d128 1
a128 3
#ifndef ROM
   extern int messages_file(void);
#endif
d135 1
a135 1
    __ROM = _swix(0xa2c43, _IN(0), pw);
d148 2
a149 3
   regs.r[0] = 7;  /* get Wimp version * 100 */
   if ((e = _kernel_swi(Wimp_ReadSysInfo, &regs, &regs)) != NULL)
      return e;
d151 1
a151 1
   if (regs.r[0] < 350)
d162 2
a163 3
   regs.r[0] = messages_file();
   if ((e = _kernel_swi (ResourceFS_RegisterFiles, &regs, &regs)) != NULL)
      return e;
d166 1
a166 4
   if (getenv ("ColourDbox$Path") == NULL)
      messages_filename = "Resources:$.Resources.ColourDbox.Messages";
   else
      messages_filename = "ColourDbox:Messages";
d168 1
a168 1
   if ((e = messages_file_open (messages_filename)) != NULL)
d172 5
a176 7

   regs.r[0] = 0;
   regs.r[1] = ColourDbox_ObjectClass;
   regs.r[2] = ColourDbox_ClassSWI;
   regs.r[3] = 0;

   if ((e = _kernel_swi(Toolbox_RegisterObjectModule, &regs, &regs)) != NULL)
d178 1
d182 1
a182 1
      "Resources:Resources.Picker.Templates");
d189 1
a189 1
/* +++++++++++++++++++++++++++++++++ service handler code ++++++++++++++++++++++++++++++ */
a193 2
    _kernel_swi_regs regs;

d226 1
a226 6
            regs.r[0] = 0;
            regs.r[1] = ColourDbox_ObjectClass;
            regs.r[2] = ColourDbox_ClassSWI;
            regs.r[3] = 0;
            _kernel_swi (Toolbox_RegisterObjectModule, &regs, &regs);

d244 1
a244 1
   IGNORE(pw);
d246 1
a246 1
   switch (swi_no + ColourDbox_SWIChunkBase)
d248 1
a248 1
      case ColourDbox_ClassSWI:
d266 1
a266 1
      case ColourDbox_PostFilter:
d270 1
a270 1
      case ColourDbox_PreFilter:
@


4.4
log
@Build process improvements:
  !MkRam,fd7 added to enable RAM builds of all Toolbox modules
  MakeFile tidied up and support for RAM build added
Module now uses Toolbox memory allocation instead of calling OS_Module.
@
text
@d197 4
@


4.3
log
@Ursula branch merged
@
text
@a43 1
#include "copy.h"
@


4.2
log
@Version Spin_merge taken
@
text
@d181 1
a181 1
      messages_filename = "Resources:Resources.ColourDbox.Messages";
@


4.2.2.1
log
@Added tokenisation directives to Messages files.
Made modules open "Resources:$...." not "Resources:....".
@
text
@d181 1
a181 1
      messages_filename = "Resources:$.Resources.ColourDbox.Messages";
@


4.1
log
@Initial revision
@
text
@d19 1
d156 1
a156 1
    || ((e = rmensure ("310Support",   "310Support.ThreeTen", "0.02")) != NULL))
d158 11
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@a18 1
 *          18-May-95: IDJ: bug-fix AQU-01270 - rmensure 310support
d155 1
a155 1
    /*|| ((e = rmensure ("310Support",   "310Support.ThreeTen", "0.02")) != NULL)*/)
a156 11

   /* IDJ: 18-5-95: bug-fix AQU-01270: check wimp version before loading 310support */
   regs.r[0] = 7;  /* get Wimp version * 100 */
   if ((e = _kernel_swi(Wimp_ReadSysInfo, &regs, &regs)) != NULL)
      return e;

   if (regs.r[0] < 350)
   {
       if ((e = rmensure ("310Support", "310Support.ThreeTen", "0.02")) != NULL)
           return e;
   }
@


4.1.5.1
log
@Import from SrcFiler
@
text
@a18 1
 *          18-May-95: IDJ: bug-fix AQU-01270 - rmensure 310support
d155 1
a155 1
    /*|| ((e = rmensure ("310Support",   "310Support.ThreeTen", "0.02")) != NULL)*/)
a156 11

   /* IDJ: 18-5-95: bug-fix AQU-01270: check wimp version before loading 310support */
   regs.r[0] = 7;  /* get Wimp version * 100 */
   if ((e = _kernel_swi(Wimp_ReadSysInfo, &regs, &regs)) != NULL)
      return e;

   if (regs.r[0] < 350)
   {
       if ((e = rmensure ("310Support", "310Support.ThreeTen", "0.02")) != NULL)
           return e;
   }
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a18 1
 *          18-May-95: IDJ: bug-fix AQU-01270 - rmensure 310support
d155 1
a155 1
    /*|| ((e = rmensure ("310Support",   "310Support.ThreeTen", "0.02")) != NULL)*/)
a156 11

   /* IDJ: 18-5-95: bug-fix AQU-01270: check wimp version before loading 310support */
   regs.r[0] = 7;  /* get Wimp version * 100 */
   if ((e = _kernel_swi(Wimp_ReadSysInfo, &regs, &regs)) != NULL)
      return e;

   if (regs.r[0] < 350)
   {
       if ((e = rmensure ("310Support", "310Support.ThreeTen", "0.02")) != NULL)
           return e;
   }
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
