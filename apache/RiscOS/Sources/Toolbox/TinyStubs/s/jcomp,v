head	4.6;
access;
symbols
	TinyStubs-0_15:4.6
	TinyStubs-0_14:4.5
	TinyStubs-0_13:4.5
	RO_5_07:4.4
	TinyStubs-0_12:4.4
	dellis_autobuild_BaseSW:4.3
	TinyStubs-0_11:4.3
	TinyStubs-0_10:4.2
	sbrodie_sedwards_16Mar2000:4.2
	dcotton_autobuild_BaseSW:4.4
	TinyStubs-0_09:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	sbrodie_Toolbox_Ursula_231198:4.2
	Ursula_RiscPC:4.2.0.10
	TinyStubs-0_08:4.2
	TinyStubs-0_07:4.2
	nicke_TinyStubs-0_05:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.8
	Ursula_12May1998:4.2.0.6
	rthornb_UrsulaBuild_01May1998:4.2
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.2.0.2
	Daytona_bp:4.2
	sbrodie_Expresso_final_190298:4.2
	sbrodie_Expresso_BETA6_19980204:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.2
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.2.0.4
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2011.12.13.09.08.53;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	qXJ8RWSDzXv0z0Lv;

4.5
date	2009.06.26.01.58.53;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2000.10.04.11.25.15;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	2000.06.01.15.06.25;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.01.21.17.44.27;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.38;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.38;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.47.55;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.20.12;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.43.31;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.6
log
@Resolve double inclusion warning in the makefile.
Internationalise the "Unable to dynamically link" message from the assembler code.
Move error numbers into their allocated range, was previously using its SWI chunk instead!
Removed the Generic_SWI_handler veneer to TS_SWI_handler, it's not been needed for over 13 years according to CVS.
Reorder a push to avoid deprecated instruction warning.
Lined up code to column 17.
Commented the service call a bit.
Used only the specific range needed in OS_SynchroniseCodeAreas for speed.

Version 0.15. Tagged as 'TinyStubs-0_15'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ModHand
        GET     Hdr:APCS.<APCS>

        AREA    |JumpCompute|, CODE, READONLY

 [ :LNOT: :DEF: IncludeCLib
                GBLL    IncludeCLib
IncludeCLib     SETL    {FALSE}
 ]

        EXPORT  |jumptable|
        IMPORT  |unabletolink|
        
        MACRO
        Branch  $func
        IMPORT  $func
        B       $func
        MEND

              
; from _kernel_swi - doesn't copy errors
|prv_kernel_swi|
        MOV     ip, sp
        STR     pc, [sp, #-4]!          ; for backtraces
        STMFD   sp!, {a3, v1-v6, sl, fp, ip, r14}
        SUB     fp, ip, #4              ; adjust frame
        BIC     r10, a1, #&80000000
        TST     a1, #&80000000          ; non-X bit requested?
        ORREQ   r10, r10, #Auto_Error_SWI_bit
        LDMIA   r1, {r0-r9}
        SWI     XOS_CallASWI
        LDR     ip, [sp]                ; recover entry a3
        STMIA   ip, {r0-r9}
        MOVVCS  a1, #0                  ; ensure a flag (V or Z) is set for TEQ
        TEQ     pc, pc
        LDMNEDB fp, {v1-v6, sl, fp, sp, pc}^ ; 26-bit exit
        LDMDB   fp, {v1-v6, sl, fp, sp, pc}  ; 32-bit exit


prv_calloc
        FunctionEntry
        MOV     r3,r0
prv_calloc2
        MOV     r0,#ModHandReason_Claim
        SWI     XOS_Module
        MOVVS   r0,#0
        Return  ,,VS                    ; void *
; calloc so need to clear memory
        MOV     r0,r2
        MOV     r1,#0
        TST     r3,#3
        BNE     bytes_clear
05
        STR     r1,[r2],#4
        SUBS    r3,r3,#4
        STRNE   r1,[r2],#4
        SUBNES  r3,r3,#4                ; bit of speed up
        BNE     %BT05
        Return

bytes_clear
10
        CMP     r3,#3
        STRGT   r1,[r2],#4
        SUBGT   r3,r3,#4
        BGT     %BT10
; r3 >= 1 as r3 was an incomplete number of words
15
        STRB    r1,[r2],#1
        SUBS    r3,r3,#1
        BNE     %BT15
        Return

prv_realloc
        FunctionEntry
        MOVS    r2,r0
        MOV     r3,r1
        BEQ     prv_calloc2

        MOV     r0,#ModHandReason_ExtendBlock ; or shrink
        SWI     XOS_Module
        MOVVS   r0,#0                   ; void *
        MOVVC   r0,r2
        Return

prv_free
        MOV     r3,lr
        MOV     r2,r0
        MOV     r0,#ModHandReason_Free
        SWI     XOS_Module
        Return  ,LinkNotStacked,,r3     ; void

        [ IncludeCLib
KernelBranches
        Branch  _kernel_init
        Branch  _kernel_exit
        Branch  _kernel_setreturncode
        Branch  _kernel_exittraphandler
        Branch  _kernel_unwind
        Branch  _kernel_procname
        Branch  _kernel_language
        Branch  _kernel_command_string
        Branch  _kernel_hostos
        Branch  _kernel_swi
        Branch  _kernel_osbyte
        Branch  _kernel_osrdch
        Branch  _kernel_oswrch
        Branch  _kernel_osbget
        Branch  _kernel_osbput
        Branch  _kernel_osgbpb
        Branch  _kernel_osword
        Branch  _kernel_osfind
        Branch  _kernel_osfile
        Branch  _kernel_osargs
        Branch  _kernel_oscli
        Branch  _kernel_last_oserror
        Branch  _kernel_system
        Branch  _kernel_getenv
        Branch  _kernel_setenv
        Branch  _kernel_register_allocs
        Branch  _kernel_alloc
        Branch  _kernel_stkovf_split_0frame
        Branch  _kernel_stkovf_split
        Branch  _kernel_stkovf_copyargs
        Branch  _kernel_stkovf_copy0args
        Branch  _kernel_udiv
        Branch  _kernel_urem
        Branch  _kernel_udiv10
        Branch  _kernel_sdiv
        Branch  _kernel_srem
        Branch  _kernel_sdiv10
        Branch  _kernel_fpavailable
        Branch  _kernel_moduleinit
        Branch  _kernel_irqs_on
        Branch  _kernel_irqs_off
        Branch  _kernel_irqs_disabled
        Branch  _kernel_entermodule
        Branch  _kernel_escape_seen
        Branch  _kernel_current_stack_chunk
        Branch  _kernel_swi_c
        Branch  _kernel_register_slotextend
        Branch  _kernel_raise_error

CLibBranches
        Branch  TrapHandler
        Branch  UncaughtTrapHandler
        Branch  EventHandler
        Branch  UnhandledEventHandler
        Branch  _kernel_stkovf_split_0frame
        Branch  _kernel_stkovf_split
        Branch  _kernel_udiv
        Branch  _kernel_urem
        Branch  _kernel_sdiv
        Branch  |x$divtest|
        Branch  _kernel_srem
        Branch  |x$multiply|
        Branch  _rd1chk
        Branch  _rd2chk
        Branch  _rd4chk
        Branch  _wr1chk
        Branch  _wr2chk
        Branch  _wr4chk
        Branch  _main
        Branch  _exit
        Branch  _clib_initialise
        Branch  _backtrace
        Branch  _count
        Branch  _count
        Branch  _stfp
        Branch  _ldfp
        Branch  _printf
        Branch  _fprintf
        Branch  _sprintf
        Branch  clock
        Branch  difftime
        Branch  mktime
        Branch  time
        Branch  asctime
        Branch  ctime
        Branch  gmtime
        Branch  localtime
        Branch  strftime
        Branch  memcpy
        Branch  memmove
        Branch  strcpy
        Branch  strncpy
        Branch  strcat
        Branch  strncat
        Branch  memcmp
        Branch  strcmp
        Branch  strncmp
        Branch  memchr
        Branch  strchr
        Branch  strcspn
        Branch  strpbrk
        Branch  strrchr
        Branch  strspn
        Branch  strstr
        Branch  strtok
        Branch  memset
        Branch  strerror
        Branch  strlen
        Branch  atof
        Branch  atoi
        Branch  atol
        Branch  strtod
        Branch  strtol
        Branch  strtoul
        Branch  rand
        Branch  srand
        Branch  calloc
        Branch  free
        Branch  malloc
        Branch  realloc
        Branch  abort
        Branch  atexit
        Branch  exit
        Branch  getenv
        Branch  system
        Branch  bsearch
        Branch  qsort
        Branch  abs
        Branch  div
        Branch  labs
        Branch  ldiv
        Branch  remove
        Branch  rename
        Branch  tmpfile
        Branch  __old_tmpnam
        Branch  fclose
        Branch  fflush
        Branch  fopen
        Branch  freopen
        Branch  setbuf
        Branch  setvbuf
        Branch  printf
        Branch  fprintf
        Branch  sprintf
        Branch  scanf
        Branch  fscanf
        Branch  sscanf
        Branch  vprintf
        Branch  vfprintf
        Branch  vsprintf
        Branch  _vfprintf
        Branch  fgetc
        Branch  fgets
        Branch  fputc
        Branch  fputs
        Branch  __filbuf
        Branch  getc
        Branch  getchar
        Branch  gets
        Branch  __flsbuf
        Branch  putc
        Branch  putchar
        Branch  puts
        Branch  ungetc
        Branch  fread
        Branch  fwrite
        Branch  fgetpos
        Branch  fseek
        Branch  fsetpos
        Branch  ftell
        Branch  rewind
        Branch  clearerr
        Branch  feof
        Branch  ferror
        Branch  perror
        Branch  __ignore_signal_handler
        Branch  __default_signal_handler
        Branch  __error_signal_marker
        Branch  signal
        Branch  raise
        Branch  setjmp
        Branch  longjmp
        Branch  acos
        Branch  asin
        Branch  atan
        Branch  atan
        Branch  cos
        Branch  sin
        Branch  tan
        Branch  cosh
        Branch  sinh
        Branch  tanh
        Branch  exp
        Branch  frexp
        Branch  ldexp
        Branch  log
        Branch  log
        Branch  modf
        Branch  pow
        Branch  sqrt
        Branch  ceil
        Branch  fabs
        Branch  floor
        Branch  fmod
        Branch  setlocale
        Branch  isalnum
        Branch  isalpha
        Branch  iscntrl
        Branch  isdigit
        Branch  isgraph
        Branch  islower
        Branch  isprint
        Branch  ispunct
        Branch  isspace
        Branch  isupper
        Branch  isxdigit
        Branch  tolower
        Branch  toupper
        Branch  __assert
        Branch  _memcpy
        Branch  _memset
        Branch  localeconv
        Branch  mblen
        Branch  mbtowc
        Branch  wctomb
        Branch  mbstowcs
        Branch  wcstombs
        Branch  strxfrm
        Branch  strcoll

        Branch  _clib_finalisemodule
        Branch  _clib_version
        Branch  _lib_shutdown
        Branch  tmpnam

        Branch  _swi
        Branch  _swix

        ]

internal
        Branch  rmensure
        Branch  string_length
        Branch  string_copy
        Branch  string_to_buffer
        Branch  string_copy_chk
        Branch  copy_template
        Branch  __zap_gadget
        Branch  __read_gadget
        Branch  __zap_window
        Branch  create_from_template
        Branch  delete_gadget
        Branch  __read_window
        DCD     0
        Branch  mem_allocate
        Branch  mem_free
        Branch  mem_free_all
        B       prv_calloc
        B       prv_realloc
        B       prv_free
        B       prv_kernel_swi

jumptable
        FunctionEntry
01
        LDR     lr,[r0],#4
        CMP     lr,#-2
        [ IncludeCLib
        ADREQL  r1,KernelBranches
        |
        LDREQ   r1,where_kernel
        ]
        BEQ     %FT05

        CMP     lr,#-4
        [ IncludeCLib
        ADREQ   r1,CLibBranches
        |
        LDREQ   r1,where_clib
        ]
        BEQ     %FT05

        CMP     lr,#-3
        ADREQ   r1,internal
        BEQ     %FT05

        CMP     lr,#-1                  ; end of table
        MOVEQ   r0,#0
        Return  ,,EQ

        Push    "r0"
        MOV     r0,lr
        LDR     r1,=&82C41              ; anyone else recognise this table?
        SWI     XOS_ServiceCall
        TEQ     r1,#0
        MOVEQ   r1,r0                   ; someone took the bait
        Pull    "r0"
        BEQ     %FT05
        BL      unabletolink            ; get a nice error
        Return
05
; r1 -> where to find them
        BL      setupjump
        B       %BT01

setupjump
; r1 -> full jump table
; r0 -> jump table to fill in
        FunctionEntry "r0"
10
        LDR     r2,[r0]
        TEQ     r2,#0
        BMI     %FT20                   ; end of table
        LDR     r3,[r1,r2, LSL #2]
        ADD     r3,r3,r1, LSR #2
        ADD     r3,r3,r2
        SUB     r3,r3,r0, LSR #2
        BIC     r3,r3,#&ff000000
        ORR     r3,r3,#&ea000000        ; B xxx
        STR     r3,[r0],#4
        B       %BT10
20
        LDR     r1,[sp]                 ; entry r0 is lowest address to synchronise
        MOV     r2,r0                   ; includes end address due to postincrement
        MOV     r0,#1                   ; range
        SWI     XOS_SynchroniseCodeAreas
        Return  "r0"

        [ :LNOT: IncludeCLib
        IMPORT  |_kernel_init|
        IMPORT  |TrapHandler|

where_kernel
        &       |_kernel_init|
where_clib
        &       |TrapHandler|
        ]

        END
@


4.5
log
@  Can now be built as a soft-loadable module again
Detail:
  Once upon a time this module could be built for RAM, and it was
  distributed in !System. But it looks like it was a manual build process,
  not controlled from a Makefile (and the Makefile didn't even have a
  standalone or install rule). Fixed by rewriting Makefile to use shared
  makefiles and conditionalising a build switch in s.jcomp. The assembler
  also needed some tweaking to make it interface properly with the APCS-32
  stubs rather than the APCS-R ones (which means there's never been a 32-bit
  softloadable version before).
Admin:
  Requires updated Makefiles in BuildSys, to be committed shortly.
  Tested in a C Tools CD build.

Version 0.13. Tagged as 'TinyStubs-0_13'
@
text
@d23 1
a23 1
        AREA |JumpCompute|, CODE, READONLY
d30 3
a32 3
        EXPORT |jumptable|
        EXPORT Generic_SWI_handler

d39 1
a39 1

d43 3
a45 2
        STMFD   sp!, {a3, v1-v6, sl, fp, ip, r14, pc}
        SUB     fp, ip, #4
d51 2
a52 2
        LDMFD   sp!, {ip}
        STMIA   ip, {r0 - r9}
d114 48
a161 48
        Branch   _kernel_init
        Branch   _kernel_exit
        Branch   _kernel_setreturncode
        Branch   _kernel_exittraphandler
        Branch   _kernel_unwind
        Branch   _kernel_procname
        Branch   _kernel_language
        Branch   _kernel_command_string
        Branch   _kernel_hostos
        Branch   _kernel_swi
        Branch   _kernel_osbyte
        Branch   _kernel_osrdch
        Branch   _kernel_oswrch
        Branch   _kernel_osbget
        Branch   _kernel_osbput
        Branch   _kernel_osgbpb
        Branch   _kernel_osword
        Branch   _kernel_osfind
        Branch   _kernel_osfile
        Branch   _kernel_osargs
        Branch   _kernel_oscli
        Branch   _kernel_last_oserror
        Branch   _kernel_system
        Branch   _kernel_getenv
        Branch   _kernel_setenv
        Branch   _kernel_register_allocs
        Branch   _kernel_alloc
        Branch   _kernel_stkovf_split_0frame
        Branch   _kernel_stkovf_split
        Branch   _kernel_stkovf_copyargs
        Branch   _kernel_stkovf_copy0args
        Branch   _kernel_udiv
        Branch   _kernel_urem
        Branch   _kernel_udiv10
        Branch   _kernel_sdiv
        Branch   _kernel_srem
        Branch   _kernel_sdiv10
        Branch   _kernel_fpavailable
        Branch   _kernel_moduleinit
        Branch   _kernel_irqs_on
        Branch   _kernel_irqs_off
        Branch   _kernel_irqs_disabled
        Branch   _kernel_entermodule
        Branch   _kernel_escape_seen
        Branch   _kernel_current_stack_chunk
        Branch   _kernel_swi_c
        Branch   _kernel_register_slotextend
        Branch   _kernel_raise_error
d164 184
a347 184
        Branch   TrapHandler
        Branch   UncaughtTrapHandler
        Branch   EventHandler
        Branch   UnhandledEventHandler
        Branch   _kernel_stkovf_split_0frame
        Branch   _kernel_stkovf_split
        Branch   _kernel_udiv
        Branch   _kernel_urem
        Branch   _kernel_sdiv
        Branch   |x$divtest|
        Branch   _kernel_srem
        Branch   |x$multiply|
        Branch   _rd1chk
        Branch   _rd2chk
        Branch   _rd4chk
        Branch   _wr1chk
        Branch   _wr2chk
        Branch   _wr4chk
        Branch   _main
        Branch   _exit
        Branch   _clib_initialise
        Branch   _backtrace
        Branch   _count
        Branch   _count
        Branch   _stfp
        Branch   _ldfp
        Branch   _printf
        Branch   _fprintf
        Branch   _sprintf
        Branch   clock
        Branch   difftime
        Branch   mktime
        Branch   time
        Branch   asctime
        Branch   ctime
        Branch   gmtime
        Branch   localtime
        Branch   strftime
        Branch   memcpy
        Branch   memmove
        Branch   strcpy
        Branch   strncpy
        Branch   strcat
        Branch   strncat
        Branch   memcmp
        Branch   strcmp
        Branch   strncmp
        Branch   memchr
        Branch   strchr
        Branch   strcspn
        Branch   strpbrk
        Branch   strrchr
        Branch   strspn
        Branch   strstr
        Branch   strtok
        Branch   memset
        Branch   strerror
        Branch   strlen
        Branch   atof
        Branch   atoi
        Branch   atol
        Branch   strtod
        Branch   strtol
        Branch   strtoul
        Branch   rand
        Branch   srand
        Branch   calloc
        Branch   free
        Branch   malloc
        Branch   realloc
        Branch   abort
        Branch   atexit
        Branch   exit
        Branch   getenv
        Branch   system
        Branch   bsearch
        Branch   qsort
        Branch   abs
        Branch   div
        Branch   labs
        Branch   ldiv
        Branch   remove
        Branch   rename
        Branch   tmpfile
        Branch   __old_tmpnam
        Branch   fclose
        Branch   fflush
        Branch   fopen
        Branch   freopen
        Branch   setbuf
        Branch   setvbuf
        Branch   printf
        Branch   fprintf
        Branch   sprintf
        Branch   scanf
        Branch   fscanf
        Branch   sscanf
        Branch   vprintf
        Branch   vfprintf
        Branch   vsprintf
        Branch   _vfprintf
        Branch   fgetc
        Branch   fgets
        Branch   fputc
        Branch   fputs
        Branch   __filbuf
        Branch   getc
        Branch   getchar
        Branch   gets
        Branch   __flsbuf
        Branch   putc
        Branch   putchar
        Branch   puts
        Branch   ungetc
        Branch   fread
        Branch   fwrite
        Branch   fgetpos
        Branch   fseek
        Branch   fsetpos
        Branch   ftell
        Branch   rewind
        Branch   clearerr
        Branch   feof
        Branch   ferror
        Branch   perror
        Branch   __ignore_signal_handler
        Branch   __default_signal_handler
        Branch   __error_signal_marker
        Branch   signal
        Branch   raise
        Branch   setjmp
        Branch   longjmp
        Branch   acos
        Branch   asin
        Branch   atan
        Branch   atan
        Branch   cos
        Branch   sin
        Branch   tan
        Branch   cosh
        Branch   sinh
        Branch   tanh
        Branch   exp
        Branch   frexp
        Branch   ldexp
        Branch   log
        Branch   log
        Branch   modf
        Branch   pow
        Branch   sqrt
        Branch   ceil
        Branch   fabs
        Branch   floor
        Branch   fmod
        Branch   setlocale
        Branch   isalnum
        Branch   isalpha
        Branch   iscntrl
        Branch   isdigit
        Branch   isgraph
        Branch   islower
        Branch   isprint
        Branch   ispunct
        Branch   isspace
        Branch   isupper
        Branch   isxdigit
        Branch   tolower
        Branch   toupper
        Branch   __assert
        Branch   _memcpy
        Branch   _memset
        Branch   localeconv
        Branch   mblen
        Branch   mbtowc
        Branch   wctomb
        Branch   mbstowcs
        Branch   wcstombs
        Branch   strxfrm
        Branch   strcoll

        Branch   _clib_finalisemodule
        Branch   _clib_version
        Branch   _lib_shutdown
        Branch   tmpnam
d349 2
a350 2
        Branch   _swi
        Branch   _swix
d400 1
a400 1
        CMP     lr,#-1
d404 1
a404 1
        STMFD   sp!,{r0}
d406 1
a406 1
        LDR     r1,=&82c41
d409 5
a413 5
        ADRNE   r0,error
        STRNE   r0,[sp]
        MOVEQ   r1,r0
        LDMFD   sp!,{r0}
        Return  ,,NE
a418 5
error
        DCD     &82c40
        DCB     "Unable to dynamically link library section",0
        ALIGN

d422 2
a423 1
loop
d426 1
a426 1
        BMI     SA_synch_then_exit
d432 1
a432 1
        ORR     r3,r3,#&ea000000                ; B xxx
d434 7
a440 7
        B       loop

SA_synch_then_exit
    FunctionEntry "r0"
    MOV    r0,#0                    ;means full synchronise
    SWI    XOS_SynchroniseCodeAreas ;do the necessary
    Return "r0"
d443 2
a444 2
        IMPORT |_kernel_init|
        IMPORT |TrapHandler|
d447 1
a447 1
        &      |_kernel_init|
d449 1
a449 1
        &      |TrapHandler|
a451 7
        IMPORT  |TS_SWI_handler|
Generic_SWI_handler
        FunctionEntry "v1"
        MOV     a4,sp
        BL      TS_SWI_handler
        Return  "v1"

@


4.4
log
@  Uses _lib_shutdown instead of _CLib_Finalise.
Detail:
  The former is exported by the C library build, the latter is not.
Admin:
  Tested in Laz1UK build.
  Requires RiscOS/Sources/Libs/RISC_OSLib Library 5.17 or later
  Requires RiscOS/Library 0.55 or later

Version 0.12. Tagged as 'TinyStubs-0_12'
@
text
@d25 1
d27 2
a28 1
IncludeCLib     SETL    {TRUE}
d383 1
a383 2
        ADREQ   r1,where
        LDREQ   r1,[r1]
d391 1
a391 3
        ADREQ   r1,where
        LDREQ   r1,[r1]
        ADDEQ   r1,r1,#48*4
d447 1
d449 1
a449 1
where
d451 2
@


4.3
log
@  32-bit compatible code
Detail:
  The jump table computation and patching code is now 32-bit safe if built
    for a 32-bit machine.  Not tested.  Code still relies on the module
    it's patching being able to branch far enough to reach the newly
    patched destinations.
Admin:
  Built.


Version 0.11. Tagged as 'TinyStubs-0_11'
@
text
@d343 1
a343 1
        Branch   _CLib_Finalise
@


4.2
log
@Version RO_3_70 taken
@
text
@d16 7
a36 4
X * &20000

XOS_SynchroniseCodeAreas * &2006e
XOS_CallASWI             * &2006f
a39 1
  [ {TRUE} ;StrongARM
d45 1
a45 1
        ORREQ   r10, r10, #X
d50 4
a53 27
        MOVVC   a1, #0
        LDMDB   fp, {v1-v6, sl, fp, sp, pc}^
  |
        ; Set up a proper frame here, so if an error happens (and not X)
        ; a sensible traceback can be given.
        MOV     ip, sp
        STMFD   sp!, {a3, v1-v6, fp, ip, r14, pc}
        SUB     fp, ip, #4
        ; be kind to fault handler if there is an error.
        ADR     a4, AfterSWI-4
        SUB     a4, a4, sp
        MOV     a4, a4, LSR #2
        BIC     a4, a4, #&ff000000
        ADD     a4, a4, #&ea000000      ; B always
        TST     a1, #&80000000          ; non-X bit requested?
        ORR     a1, a1, #&EF000000      ; SWI + Always
        ORREQ   a1, a1, #X
        STMFD   sp!, {a1, a4}
        LDMIA   a2, {r0 - r9}
        MOV     pc, sp
AfterSWI
        ADD     sp, sp, #8
        LDMFD   sp!, {ip}
        STMIA   ip, {r0 - r9}
        MOVVC   a1, #0
        LDMDB   fp, {v1-v6, fp, sp, pc}^
  ]
a54 1
XOS_Module * &2001e
d57 1
a57 1
        STMFD   sp!,{lr}
d60 1
a60 1
        MOV     r0,#6                   ; Claim
d63 1
a63 1
        LDMVSFD sp!,{pc}^               ; void *
d75 1
a75 1
        LDMFD   sp!,{pc}^
d88 2
a89 2
        LDMFD   sp!,{pc}^
        
d91 1
a91 1
        STMFD   sp!,{lr}
d96 1
a96 1
        MOV     r0,#13
d100 1
a100 1
        LDMFD   sp!,{pc}^
d105 1
a105 1
        MOV     r0,#7                   ; Free
d107 1
a107 1
        MOVS    pc,r3                   ; void
d134 1
a134 1
        Branch   _kernel_getenv 
d136 2
a137 2
        Branch   _kernel_register_allocs 
        Branch   _kernel_alloc  
d143 4
a146 4
        Branch   _kernel_urem 
        Branch   _kernel_udiv10 
        Branch   _kernel_sdiv 
        Branch   _kernel_srem   
d149 2
a150 2
        Branch   _kernel_moduleinit 
        Branch   _kernel_irqs_on  
d152 2
a153 2
        Branch   _kernel_irqs_disabled 
        Branch   _kernel_entermodule 
d155 2
a156 2
        Branch   _kernel_current_stack_chunk 
        Branch   _kernel_swi_c 
d167 3
a169 3
        Branch   _kernel_udiv 
        Branch   _kernel_urem 
        Branch   _kernel_sdiv 
d171 10
a180 10
        Branch   _kernel_srem 
        Branch   |x$multiply| 
        Branch   _rd1chk      
        Branch   _rd2chk      
        Branch   _rd4chk      
        Branch   _wr1chk      
        Branch   _wr2chk      
        Branch   _wr4chk      
        Branch   _main 
        Branch   _exit        
d183 7
a189 7
        Branch   _count       
        Branch   _count      
        Branch   _stfp        
        Branch   _ldfp        
        Branch   _printf  
        Branch   _fprintf 
        Branch   _sprintf 
d252 9
a260 9
        Branch   printf   
        Branch   fprintf  
        Branch   sprintf  
        Branch   scanf    
        Branch   fscanf   
        Branch   sscanf   
        Branch   vprintf  
        Branch   vfprintf 
        Branch   vsprintf 
d262 24
a285 24
        Branch   fgetc    
        Branch   fgets    
        Branch   fputc    
        Branch   fputs    
        Branch   __filbuf 
        Branch   getc     
        Branch   getchar  
        Branch   gets     
        Branch   __flsbuf 
        Branch   putc     
        Branch   putchar  
        Branch   puts     
        Branch   ungetc   
        Branch   fread    
        Branch   fwrite   
        Branch   fgetpos  
        Branch   fseek    
        Branch   fsetpos  
        Branch   ftell    
        Branch   rewind   
        Branch   clearerr 
        Branch   feof     
        Branch   ferror   
        Branch   perror   
d289 2
a290 2
        Branch   signal 
        Branch   raise 
d293 3
a295 3
        Branch   acos 
        Branch   asin 
        Branch   atan 
d297 3
a299 3
        Branch   cos  
        Branch   sin  
        Branch   tan  
d306 1
a306 1
        Branch   log  
d309 2
a310 2
        Branch   pow  
        Branch   sqrt 
d315 15
a329 15
        Branch   setlocale 
        Branch   isalnum 
        Branch   isalpha 
        Branch   iscntrl 
        Branch   isdigit 
        Branch   isgraph 
        Branch   islower 
        Branch   isprint 
        Branch   ispunct 
        Branch   isspace 
        Branch   isupper 
        Branch   isxdigit 
        Branch   tolower 
        Branch   toupper 
        Branch   __assert 
d332 1
a332 1
        Branch   localeconv 
d373 2
a374 2
jumptable     
        STMFD   sp!,{lr} 
d402 1
a402 1
        LDMEQFD sp!,{pc}^
d407 1
a407 1
        SWI     &20030
d413 1
a413 1
        LDMNEFD sp!,{pc}^
d416 1
a416 1
        BL      setupjump   
a429 1
  [ {TRUE} ;StrongARM
a430 3
  |
        MOVMIS  pc,lr
  ]
d434 1
a434 1
        SUB     r3,r3,r0, LSR #2        
a439 1
  [ {TRUE}  ;StrongARM
d441 1
a441 1
    STMDB  sp!,{r0,lr}
d444 2
a445 4
    LDMIA  sp!,{r0,lr}   
    MOVS   pc,lr
  ]
         
d452 1
a452 1
                           
d455 1
a455 1
        STMFD   sp!,{v1,lr}
d458 1
a458 1
        LDMFD   sp!,{v1,pc}^
@


4.1
log
@Initial revision
@
text
@d32 3
d37 14
d74 1
a74 1

d452 3
d456 1
d465 9
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@a31 3
XOS_SynchroniseCodeAreas * &2006e
XOS_CallASWI             * &2006f

a33 14
  [ {TRUE} ;StrongARM
        MOV     ip, sp
        STMFD   sp!, {a3, v1-v6, sl, fp, ip, r14, pc}
        SUB     fp, ip, #4
        BIC     r10, a1, #&80000000
        TST     a1, #&80000000          ; non-X bit requested?
        ORREQ   r10, r10, #X
        LDMIA   r1, {r0-r9}
        SWI     XOS_CallASWI
        LDMFD   sp!, {ip}
        STMIA   ip, {r0 - r9}
        MOVVC   a1, #0
        LDMDB   fp, {v1-v6, sl, fp, sp, pc}^
  |
d57 1
a57 1
  ]
a434 3
  [ {TRUE} ;StrongARM
        BMI     SA_synch_then_exit
  |
a435 1
  ]
a443 9

  [ {TRUE}  ;StrongARM
SA_synch_then_exit
    STMDB  sp!,{r0,lr}
    MOV    r0,#0                    ;means full synchronise
    SWI    XOS_SynchroniseCodeAreas ;do the necessary
    LDMIA  sp!,{r0,lr}   
    MOVS   pc,lr
  ]
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
