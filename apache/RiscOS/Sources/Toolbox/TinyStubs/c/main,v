head	4.5;
access;
symbols
	TinyStubs-0_15:4.5
	TinyStubs-0_14:4.4
	TinyStubs-0_13:4.4
	RO_5_07:4.4
	TinyStubs-0_12:4.4
	dellis_autobuild_BaseSW:4.4
	TinyStubs-0_11:4.4
	TinyStubs-0_10:4.4
	sbrodie_sedwards_16Mar2000:4.4
	dcotton_autobuild_BaseSW:4.4
	TinyStubs-0_09:4.4
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	sbrodie_Toolbox_Ursula_231198:4.4
	Ursula_RiscPC:4.2.0.8
	TinyStubs-0_08:4.4
	TinyStubs-0_07:4.3
	nicke_TinyStubs-0_05:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.6
	Ursula_12May1998:4.2.0.4
	rthornb_UrsulaBuild_01May1998:4.2
	afrost_NC2_Generic:4.1.7.1
	Daytona:4.2.0.2
	Daytona_bp:4.2
	sbrodie_Expresso_final_190298:4.2
	sbrodie_Expresso_BETA6_19980204:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2011.12.13.09.08.48;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	qXJ8RWSDzXv0z0Lv;

4.4
date	98.09.22.09.07.48;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.09.16.16.07.10;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.07.08.10.13.51;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.35;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.35;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.47.52;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.05.19.15.53.39;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.20.08;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.43.27;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Resolve double inclusion warning in the makefile.
Internationalise the "Unable to dynamically link" message from the assembler code.
Move error numbers into their allocated range, was previously using its SWI chunk instead!
Removed the Generic_SWI_handler veneer to TS_SWI_handler, it's not been needed for over 13 years according to CVS.
Reorder a push to avoid deprecated instruction warning.
Lined up code to column 17.
Commented the service call a bit.
Used only the specific range needed in OS_SynchroniseCodeAreas for speed.

Version 0.15. Tagged as 'TinyStubs-0_15'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   main.c
 * Purpose: main module of a Generic Object module
 * Author:  IDJ
 * History: 7-Oct-93: IDJ: created
 *
 */


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <errno.h>
#include "kernel.h"
#include "swis.h"
#include "messages.h"
#include "ModHdr.h"

#define IGNORE(a) ((void)(a))

#define TinyStubs_ErrorBase         (Program_Error | 0x0080B800)

#define TinyStubs_DataInconsistent  (TinyStubs_ErrorBase+0x00)
#define TinyStubs_StillInUse        (TinyStubs_ErrorBase+0x01)
#define TinyStubs_CantLinkSection   (TinyStubs_ErrorBase+0x02)

static int usage = 0;

/* ++++++++++++++++++++++++++++++++++ Assembler helpers ++++++++++++++++++++++++++++++++ */

extern _kernel_oserror *jumptable(int add);

extern _kernel_oserror *unabletolink(void)
{
    return make_error (TinyStubs_CantLinkSection, 0);  /* Merely so our errors are all defined in C */
}

/* ++++++++++++++++++++++++++++++++++++++ SWI code +++++++++++++++++++++++++++++++++++++ */

extern _kernel_oserror *TS_SWI_handler(int swi_no, _kernel_swi_regs *r, void *pw)
{
    _kernel_oserror *e = NULL;
    int *mem;
    int *pwp = *(int **)pw;
    int lib = pwp[1];

    switch (swi_no )
    {
        case TinySupport_Init2 - TinySupport_00:
                memcpy(*(char **) r->r[1] ,  __ctype,256);
                /*FALLTHROUGH*/
        case TinySupport_Init - TinySupport_00:

            e = _swix(OS_Module,_IN(0) | _IN(3) | _OUT(2),6,12,&mem);
            if (!e) {
                e = jumptable(r->r[0]);
                if (e) {
                   free(mem);
                   return e;
                }
                mem[0] =12;
                mem[1] =lib;
                mem[2] =0;
                * (int *) r->r[0] = -1;                 /* stop reiniting module causing jump table recalc */
                r->r[0] = (int) mem;
                usage++;
            }
            break;
        case TinySupport_Die - TinySupport_00:
            if (usage > 0) --usage;
            break;
        case TinySupport_Share - TinySupport_00:
#if 1
            /* Do this if you want ROM modules to work */
            ++usage;
            return NULL;
#else
            /* Do this if you don't want ROM modules to work and want them to fail
             * in mysterious and unpredictable ways
             */
            int offset,i;
            unsigned char* CTYPE;

            mem = * (int **) r->r[0];
            if (mem[1] == lib) return NULL;

            /* check integrity of area we will share */

            /* if their ctype is where we think it is, then
               their static data must look how we think it should look */

            /* offset is distance from END of static data to __ctype */

            offset = pwp[0] - ((int) __ctype - (int) pwp);

            CTYPE = ((unsigned char *) mem) + mem[0] - offset;

            for (i=0;i<256;i++) {
               if (__ctype[i] != CTYPE[i]) return make_error (TinyStubs_DataInconsistent, 0);
            }

            usage++;
            mem[1] = lib;
            mem[0] -= (0x31c+0xb48);
            _swix(OS_Module,_IN(0) | _IN(2) | _IN(3) ,13,mem,-(0x31c+0xb48));
            *libst = lib;
            break;
#endif

        default:
            break;
    }

    return e;
}

/* ++++++++++++++++++++++++++++++++ initialisation code ++++++++++++++++++++++++++++++++ */

extern _kernel_oserror *TS_init(const char *cmd_tail, int podule_base, void *pw)
{
    _kernel_oserror *e;
    char            *messages_filename;
#ifndef ROM
    _kernel_swi_regs regs;
    extern int       messages_file(void);
#endif

    IGNORE(cmd_tail);
    IGNORE(podule_base);
    IGNORE(pw);

#ifndef ROM
    /*
     * register our resources with ResourceFS
     */

    regs.r[0] = messages_file();
    if ((e = _kernel_swi (ResourceFS_RegisterFiles, &regs, &regs)) != NULL)
        return e;
#endif

    /*
     * register our messages file with MessageTrans (assumes messages module loaded)
     */

    if (getenv ("TinyStubs$Path") == NULL)
        messages_filename = "Resources:$.Resources.TinyStubs.Messages";
    else
        messages_filename = "TinyStubs:Messages";

    if ((e = messages_file_open(messages_filename)) != NULL)
        return e;

    return NULL;
}

/* +++++++++++++++++++++++++++++++++ finalisation code +++++++++++++++++++++++++++++++++ */

extern _kernel_oserror *TS_final (int fatal, int podule, void *pw)
{
#ifndef ROM
    _kernel_swi_regs regs;
    extern int       messages_file(void);
#endif

    IGNORE(fatal);
    IGNORE(podule);
    IGNORE(pw);

    /*
     * if tasks are active or modules registered, refuse to die
     */

    if (usage)
    {
        return make_error (TinyStubs_StillInUse, 0);
    }

    /*
     * close the Tiny Stubs messages file
     */

    messages_file_close();


#ifndef ROM
    /*
     * ... and deregister from ResourceFS
     */

    regs.r[0] = messages_file();
    _kernel_swi (ResourceFS_DeregisterFiles, &regs, &regs);
#endif

    return NULL;
}
@


4.4
log
@Fixed #includes.

Version 0.08. Tagged as 'TinyStubs-0_08'
@
text
@d35 5
a39 3
/* This is completely illegal - SWI chunks != Error blocks */
#define TinyStubs_DataInconsistent  ((0x82c40 | 0x1b000000) + 0x0)
#define TinyStubs_StillInUse        ((0x82c40 | 0x1b000000) + 0x1)
d43 1
a43 1
/* ++++++++++++++++++++++++++++++++++++++ SWI code +++++++++++++++++++++++++++++++++++++ */
d47 8
a54 1
extern _kernel_oserror *TS_SWI_handler(int swi_no, _kernel_swi_regs *r, void *pw, int * libst)
a59 2
    int offset,i;
    unsigned char* CTYPE;
d95 2
d144 1
@


4.3
log
@  Arranged for ROM modules using TinyStubs to work (by not doing anything)
Detail:
  Moved to srccommit.
  Replaced static header file with one generated correctly by CMHG.
  Replaced some magic numbers with SWI name symbols from header file.
  TinySupport_Share now does nothing except increment the usage count.
  This is necessary to stop clients from failing in mysterious and
  unpredictable ways when they access __ctype or __errno (or any other
  static library data to which they have a direct pointer not returned by
  the library itself).
Admin:
  Built from clean.

Version 0.07. Tagged as 'TinyStubs-0_07'
@
text
@a30 1
#include "main.h"
@


4.2
log
@Ursula branch merged
@
text
@d25 3
a27 2
#include "string.h"

a29 3
#include "errno.h"
#include "ctype.h"

d31 2
d34 1
a34 3
#define IGNORE(a) a=a

#include "main.h"
d36 1
d57 1
a57 1
        case 2:
d59 2
a60 1
        case 0:
d77 2
a78 2
        case 1:
            usage --;
d80 10
a89 1
        case 3:
d114 1
d125 1
a125 1
extern _kernel_oserror *TS_init(char *cmd_tail, int podule_base, void *pw)
a127 1
    _kernel_swi_regs regs;
d130 1
@


4.1
log
@Initial revision
@
text
@d49 4
a52 4
    _kernel_oserror *e = NULL;                                       
    int *mem;       
    int *pwp = *(int **)pw;     
    int lib = pwp[1]; 
d63 1
a63 1
            if (!e) {     
d76 1
a76 1
            break;      
d86 1
a86 1
            /* if their ctype is where we think it is, then 
d88 1
a88 1
                                                          
d128 1
a128 1
    /* 
d142 1
a142 1
        messages_filename = "Resources:Resources.TinyStubs.Messages";
d191 1
a191 1
}    
@


4.1.4.1
log
@Added tokenisation directives to Messages files.
Made modules open "Resources:$...." not "Resources:....".
@
text
@d49 4
a52 4
    _kernel_oserror *e = NULL;
    int *mem;
    int *pwp = *(int **)pw;
    int lib = pwp[1];
d63 1
a63 1
            if (!e) {
d76 1
a76 1
            break;
d86 1
a86 1
            /* if their ctype is where we think it is, then
d88 1
a88 1

d128 1
a128 1
    /*
d142 1
a142 1
        messages_filename = "Resources:$.Resources.TinyStubs.Messages";
d191 1
a191 1
}
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
