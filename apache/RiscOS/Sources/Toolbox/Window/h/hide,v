head	4.3;
access;
symbols
	Window-1_79:4.3
	Window-1_78:4.3
	Window-1_77:4.3
	Window-1_76:4.3
	Window-1_75:4.3
	Window-1_74:4.3
	Window-1_73:4.3
	Window-1_72:4.3
	Window-1_71:4.3
	RO_5_07:4.3
	Window-1_70:4.3
	Window-1_69:4.3
	Window-1_68:4.3
	Window-1_67:4.3
	Window-1_66:4.3
	Window-1_65:4.3
	Window-1_64:4.3
	Window-1_63:4.3
	Window-1_62:4.3
	Window-1_61:4.3
	Window-1_60:4.3
	Window-1_59:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3
	sbrodie_Toolbox_Ursula_231198:4.3
	Window-1_58:4.3
	Ursula_RiscPC:4.3.0.4
	Window-1_57:4.3
	rthornb_UrsulaBuild-19Aug1998:4.3
	UrsulaBuild_FinalSoftload:4.3
	rthornb_UrsulaBuild-12Aug1998:4.3
	Ursula:4.3.0.2
	Ursula_bp:4.3
	aglover_UrsulaBuild-05Aug1998:4.3
	Window-1_56:4.3
	rthornb_UrsulaBuild-29Jul1998:4.3
	Window-1_55:4.3
	rthornb_UrsulaBuild-22Jul1998:4.3
	rthornb_UrsulaBuild-15Jul1998:4.3
	rthornb_UrsulaBuild-07Jul1998:4.3
	Window-1_54:4.3
	rthornb_UrsulaBuild-17Jun1998:4.3
	Window-1_53:4.3
	Window-1_52:4.3
	Window-1_51:4.3
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	sbrodie_Window_1_49:4.2
	afrost_NC2_Generic:4.1.7.1
	sbrodie_Window_1_48:4.2
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Window_1_46:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Window_1_44:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Ursula_bp_13Jun97:4.1
	Spin_merge_13Jun97:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	98.06.11.11.53.37;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	98.04.21.15.31.36;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.26;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.26;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.47.09;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.19.23;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.42.49;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Event ordering for transient submenu objects fixed (SNB-U002).
Module now uses srccommit to maintain its version number

Version 1.51. Tagged as 'Window-1_51'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   hide.h
 * Purpose: hide a Generic Object
 * Author:  IDJ
 * History: 7-Oct-93: IDJ: created
 *
 */


#ifndef __hide_h
#define __hide_h

#include "kernel.h"

#ifndef __task_h
#include "task.h"
#endif

void hide_raise_hidden(int);
_kernel_oserror * _hide_raise_hidden(WindowInternal *w);
void raise_if_become_hidden(void);

extern _kernel_oserror *hide_object (_kernel_swi_regs *r, TaskDescriptor *t);

extern _kernel_oserror *hide_submenu_autohide (_kernel_swi_regs *r);

#endif

@


4.2
log
@Window 1.48

WindowHasBeenHidden events are now generated consistently for
transiently shown windows. Instead of relying upon a single static
variable indicating which, if any, window is showing transiently, a
shown/hidden counter is kept and pending HasBeenHidden events are
flushed when message_MENUS_CLOSED arrives.  This solves the problems
observed with several Toolbox applications which variously did not
appear to get a HasBeenHidden event for a closed transient or got
duplicate messages (which confused applications wishing to show a
shared window object transiently, wait for it to close, and then open
it again (eg. a dbox asking the user to make a choice).
@
text
@d38 1
@


4.1
log
@Initial revision
@
text
@d32 1
a32 1
void hide_raise_hidden(void);
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
