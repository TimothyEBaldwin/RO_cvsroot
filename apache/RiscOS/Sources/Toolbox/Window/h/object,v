head	4.4;
access;
symbols
	Window-1_79:4.4
	Window-1_78:4.4
	Window-1_77:4.4
	Window-1_76:4.4
	Window-1_75:4.4
	Window-1_74:4.4
	Window-1_73:4.4
	Window-1_72:4.4
	Window-1_71:4.4
	RO_5_07:4.4
	Window-1_70:4.4
	Window-1_69:4.4
	Window-1_68:4.4
	Window-1_67:4.4
	Window-1_66:4.4
	Window-1_65:4.4
	Window-1_64:4.4
	Window-1_63:4.4
	Window-1_62:4.4
	Window-1_61:4.4
	Window-1_60:4.4
	Window-1_59:4.4
	mstphens_UrsulaRiscPCBuild_20Nov98:4.4
	sbrodie_Toolbox_Ursula_231198:4.4
	Window-1_58:4.4
	Ursula_RiscPC:4.4.0.4
	Window-1_57:4.4
	rthornb_UrsulaBuild-19Aug1998:4.4
	UrsulaBuild_FinalSoftload:4.4
	rthornb_UrsulaBuild-12Aug1998:4.4
	Ursula:4.4.0.2
	Ursula_bp:4.4
	aglover_UrsulaBuild-05Aug1998:4.4
	Window-1_56:4.4
	rthornb_UrsulaBuild-29Jul1998:4.4
	Window-1_55:4.4
	rthornb_UrsulaBuild-22Jul1998:4.4
	rthornb_UrsulaBuild-15Jul1998:4.4
	rthornb_UrsulaBuild-07Jul1998:4.4
	Window-1_54:4.4
	rthornb_UrsulaBuild-17Jun1998:4.4
	Window-1_53:4.4
	Window-1_52:4.4
	Window-1_51:4.4
	rthornb_UrsulaBuild-03Jun1998:4.4
	rthornb_UrsulaBuild-27May1998:4.4
	rthornb_UrsulaBuild-21May1998:4.4
	Ursula_12May1998:4.2.0.4
	rthornb_UrsulaBuild_01May1998:4.2
	sbrodie_Window_1_49:4.4
	afrost_NC2_Generic:4.1.7.2
	sbrodie_Window_1_48:4.4
	Daytona:4.2.0.2
	Daytona_bp:4.2
	sbrodie_Expresso_final_190298:4.3
	sbrodie_Window_1_46:4.3
	sbrodie_Expresso_BETA6_19980204:4.3
	sbrodie_Window_1_44:4.3
	Spinner_RCA116:4.1.7.2
	Spinner_B20_2:4.1.7.2
	Spinner_19_3:4.1.7.2
	Spinner_B18:4.1.7.2
	Spinner_B17:4.1.7.2
	Spin_merge_8Jul97:4.1.7.2
	Ursula_bp_8Jul97:4.2
	Spinner_B15:4.1.7.2
	Spinner_B14:4.1.7.2
	Spinner_B13:4.1.7.2
	Ursula_bp_13Jun97:4.2
	Spin_merge_13Jun97:4.1.7.2
	Spinner_B12:4.1.7.2
	Spinner_B10:4.1.7.2
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.2
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.2
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	98.04.21.15.31.36;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	98.01.15.13.19.30;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.05.13.09.12.36;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.27;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.27;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.47.12;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.19.26;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.42.51;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.03.19.18.57.41;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Window 1.48

WindowHasBeenHidden events are now generated consistently for
transiently shown windows. Instead of relying upon a single static
variable indicating which, if any, window is showing transiently, a
shown/hidden counter is kept and pending HasBeenHidden events are
flushed when message_MENUS_CLOSED arrives.  This solves the problems
observed with several Toolbox applications which variously did not
appear to get a HasBeenHidden event for a closed transient or got
duplicate messages (which confused applications wishing to show a
shared window object transiently, wait for it to close, and then open
it again (eg. a dbox asking the user to make a choice).
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   object.h
 * Purpose: object list handling for the Generic module
 * Author:  IDJ
 * History: 11-Oct-93: IDJ: created
 *          15-Jan-98: SNB: Added new internal state flag
 */


#ifndef __object_h
#define __object_h


#ifndef __wimp_h
#include "twimp.h"
#endif

#ifndef __window_h
#include "window.h"
#endif



/*
 * a WindowInternal is the Window module's internal rep'n of a Window, created from
 * a Window template
 */

/*
 * The structure that we give the rest of the window module to keep in
 * its gadget list
 */

typedef struct gadgetinternal {
    struct gadgetinternal  *next;
    struct gadgetinternal  *prev;
    GadgetHeader            gadget_hdr;
    void                   *data;
} GadgetInternal;

typedef struct
{
        int      flags;
        int      wimp_key_code;
        int      key_event;
        ObjectID key_show;

} KeyBoardShortcutInternal;

typedef struct paneinternal {
    struct paneinternal    *next;
    ObjectID                pane;
    int wimp;
    int type;
       #define pane_INTERNAL   1
       #define pane_EXTERNAL   0
       #define pane_TOPLEFT    2
       #define pane_BOTRIGHT   0
       #define pane_CLIPBOUNCE 16
       #define pane_SCROLL     32
       #define pane_FURNITURE  64
       #define pane_EXTENDX    128
       #define pane_EXTENDY    256
    int width,height;
    int xoff,yoff;
} PaneInternal;

typedef struct windowinternal
{
        struct windowinternal    *next;
        struct windowinternal    *prev;

/* same as a window template here*/
        int                       flags;                        /* from template */
        char                     *help_message;                 /* interactive help message */
        int                       max_help;                     /* size of buffer for help message */
        char                     *pointer_shape;                /* change pointer to this shape on enter window */
        int                       max_pointer_shape;            /* size of buffer for sprite name for pointer */
        int                       pointer_x_hot;
        int                       pointer_y_hot;                /* pointer hot spots */
        ObjectID                  menu;                         /* menu to display when MENU pressed */
        int                       num_keyboard_shortcuts;
        KeyBoardShortcutInternal *keyboard_shortcuts;           /* mappings of keystrokes to events */
        int                       num_gadgets;
        GadgetInternal           *gadgets;                      /* gadgets in this window, eg action buttons */
        ComponentID               default_focus;                /* gadget to put focus into on show */
        int                       show_event;
        int                       hide_event;
        ObjectID                  ibl,itl,ebl,etl;
        wimp_Window               window;                       /* as expected by Wimp_CreateWindow */

/* extra window module specific data here */
        int                       state;                        /* For storing how object was shown + see below */
	int                       show_balance;                 /* For counting HasBeenHidden messages */
        int                       wimp_window_handle;           /* handle of "real" window */
        struct windowinternal    *parent;
        PaneInternal             *panes;
        unsigned char             ft,fr,fl,fb;                  /* window furniture height */
        ObjectID                  id;                           /* id passed to us by Toolbox */
        GadgetInternal          **icon_mappings;                /* array of pointers to gadgets
                                                                   corresponding to icons.
                                                                   icon_mappings[i] holds id of
                                                                   gadget for icon number i.
                                                                 */
        int                       num_icon_mappings;


        /* all indirected string data for the window (not gadgets) comes here, laid out as:
                help_message,  (size determined by max_help)
                pointer_shape  (name of sprite to be used for pointer shape)
                title_string   (pointed at by window.title.indirect_text.buffer)
                valid_string   (pointed at by window.title.indirect_text.valid_string)
         */

} WindowInternal;


/* SNB: This flag bit also stored in WindowInternal.state along with Toolbox_ShowObject_As(Sub)Menu flags
 * and is used to flag that the window should not be hidden or deleted since the task concerned is
 * in the process of closing down and the Wimp is going to hide & delete the underlying objects
 * anyway.  Doing this avoids the Wimp crashing badly when a window is showing transiently and the
 * task quits.  This fixes PAN-01317.
 */
enum {
        /* In case the showing flags are extended, leave bits 2-6 free in state */
        WindowInternalFlags_PreventHideDelete = 0x80
};

#endif
@


4.3
log
@PAN-01317 fixed: Wimp dying when Window deletes transiently shown objects
@
text
@d107 1
d133 2
a134 2
 * in the process of closing down and the Wimp is going to hide & delete the underlying objects 
 * anyway.  Doing this avoids the Wimp crashing badly when a window is showing transiently and the 
@


4.2
log
@Spinner branch merged
@
text
@d19 1
a19 1
 *
d106 1
a106 1
        int                       state;
d129 11
@


4.1
log
@Initial revision
@
text
@d37 1
a37 1
/* 
d52 1
a52 1
} GadgetInternal;                
d67 10
a76 1
    int type;                     
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Add "Extendable X and Extendable Y" toolbars.
Improve pane-handling algorithms.
Fix alignment of labels in labelled boxes.
Align numberrange's slider more neatly and put adjusters in right place
Stringsets tidied up
Some useful checking added to string_set_toolbox_event
Showing as subwindow fixed up a lot.
@
text
@d37 1
a37 1
/*
d52 1
a52 1
} GadgetInternal;
d67 1
a67 10
    int type;
       #define pane_INTERNAL   1
       #define pane_EXTERNAL   0
       #define pane_TOPLEFT    2
       #define pane_BOTRIGHT   0
       #define pane_CLIPBOUNCE 16
       #define pane_SCROLL     32
       #define pane_FURNITURE  64
       #define pane_EXTENDX    128
       #define pane_EXTENDY    256
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
