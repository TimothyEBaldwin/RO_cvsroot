head	4.4;
access;
symbols
	Window-1_79:4.4
	Window-1_78:4.4
	Window-1_77:4.4
	Window-1_76:4.4
	Window-1_75:4.4
	Window-1_74:4.4
	Window-1_73:4.4
	Window-1_72:4.4
	Window-1_71:4.4
	RO_5_07:4.4
	Window-1_70:4.4
	Window-1_69:4.4
	Window-1_68:4.4
	Window-1_67:4.3
	Window-1_66:4.3
	Window-1_65:4.3
	Window-1_64:4.3
	Window-1_63:4.3
	Window-1_62:4.3
	Window-1_61:4.3
	Window-1_60:4.3
	Window-1_59:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3
	sbrodie_Toolbox_Ursula_231198:4.3
	Window-1_58:4.3
	Ursula_RiscPC:4.3.0.8
	Window-1_57:4.3
	rthornb_UrsulaBuild-19Aug1998:4.3
	UrsulaBuild_FinalSoftload:4.3
	rthornb_UrsulaBuild-12Aug1998:4.3
	Ursula:4.3.0.6
	Ursula_bp:4.3
	aglover_UrsulaBuild-05Aug1998:4.3
	Window-1_56:4.3
	rthornb_UrsulaBuild-29Jul1998:4.3
	Window-1_55:4.3
	rthornb_UrsulaBuild-22Jul1998:4.3
	rthornb_UrsulaBuild-15Jul1998:4.3
	rthornb_UrsulaBuild-07Jul1998:4.3
	Window-1_54:4.3
	rthornb_UrsulaBuild-17Jun1998:4.3
	Window-1_53:4.3
	Window-1_52:4.3
	Window-1_51:4.3
	rthornb_UrsulaBuild-03Jun1998:4.3
	rthornb_UrsulaBuild-27May1998:4.3
	rthornb_UrsulaBuild-21May1998:4.3
	Ursula_12May1998:4.3.0.4
	rthornb_UrsulaBuild_01May1998:4.3
	sbrodie_Window_1_49:4.3
	afrost_NC2_Generic:4.1.7.4
	sbrodie_Window_1_48:4.3
	Daytona:4.3.0.2
	Daytona_bp:4.3
	sbrodie_Expresso_final_190298:4.3
	sbrodie_Window_1_46:4.3
	sbrodie_Expresso_BETA6_19980204:4.3
	sbrodie_Window_1_44:4.3
	Spinner_RCA116:4.1.7.4
	Spinner_B20_2:4.1.7.4
	Spinner_19_3:4.1.7.4
	Spinner_B18:4.1.7.4
	Spinner_B17:4.1.7.4
	Spin_merge_8Jul97:4.1.7.4
	Ursula_bp_8Jul97:4.2
	Spinner_B15:4.1.7.4
	Spinner_B14:4.1.7.4
	Spinner_B13:4.1.7.4
	Ursula_bp_13Jun97:4.2
	Spin_merge_13Jun97:4.1.7.4
	Spinner_B12:4.1.7.4
	Spinner_B10:4.1.7.4
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.4
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.4
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.4
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.4
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2002.05.24.15.06.49;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	97.07.11.11.54.43;	author jsmith;	state Exp;
branches;
next	4.2;

4.2
date	97.05.13.09.12.35;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.26;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.26;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.47.06;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.19.21;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.42.45;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.01.29.15.12.58;	author nturton;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.02.04.17.22.53;	author pwombwel;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	97.03.19.18.57.40;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.4
log
@  Now compatible with new C compiler.
Detail:
  Implicit ints removed, empty initialisers fixed.
  An attempt has been made to fix the slider overflow problem by using 64-bit
    maths to calculate the value.
Admin:
  If built with cc 5.45 or later, this component requires the new C library
    with the long long support functions in it.
  Slider not tested at all, but the module builds.
  If the slider code works, this fixes bugzilla bug #7721


Version 1.68. Tagged as 'Window-1_68'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * gadgets.h
 *
 * Useful definitions for gadget source files
 *
 * Author: Chris Marshall
 */

/*
 * Change history
 *
 * 08/02/94: CSM: Created
 * 09/03/94: CSM: Made redraw_gadget visible to rest of gadgets
 * 07/04/94: NK : Added ICONLIST macro
 * 27/09/96: EPW: Added gadget_window_appeared() (see comment by declaration)
 */

#ifndef  __gadgets_h
#define __gadgets_h

#include "objects.toolbox.h"   /* For ToolboxEvent */
#include "objects.window.h"    /* For Gadget */
#include "twimp.h"
#include "utils.h"

#ifndef __object_h
#include "object.h"
#endif

#ifndef __task_h
#include "task.h"
#endif

/*
 * Which register number is the base for returning results from methods?
 */
#define METHOD_RETURN_REGISTER 0

/* highest known number of gadgets */
#define MAX_GADGET_CODE 13

extern _kernel_oserror *gadgets__redraw_gadget (int window_handle, GadgetHeader *ghdr) ;
    /*
     * Function to force a redraw on a widget. Originally internal for gadgets.c only,
     * publicised for gadget use too.
     */

extern _kernel_oserror *CreateSubGadget(ObjectID window, Gadget *gadget, ComponentID *id,int mask);
extern _kernel_oserror *CreateIcon (wimp_IconCreate i,int *handle);
extern int WIMP_WINDOW;
extern void gadget_add_filter(void (*filter)(),int *refc);
extern void gadget_delete_filter(void (*filter)(),int *refc);
extern _kernel_oserror *DeleteIcons(GadgetInternal *id,ObjectID win);
extern _kernel_oserror *gadgets_plotgadget(_kernel_swi_regs *r);
extern void gadgets_set_drag_function(_kernel_oserror *(*df)(wimp_PollBlock *poll_block));
extern _kernel_oserror *gadgets_raise_event(ObjectID window,ComponentID id,void *e);
extern void gadgets_refind_fonts(TaskDescriptor *t);
extern void set_icon_state(int w,int i, unsigned int cl,unsigned int set);
extern _kernel_oserror *gadgets_get_pointer_info(_kernel_swi_regs *r);
extern _kernel_oserror *gadget_method(ObjectID obj,int method,ComponentID comp,int value,int *r5);
extern _kernel_oserror *gadgets_set_font(WindowInternal *w,int i, char * font, int xs, int ys,int flags);
extern _kernel_oserror *gadgets_move_gadget(WindowInternal *win,GadgetInternal *id, wimp_Bbox *box);
extern int SWI_WimpCreateIcon;
extern int gadgets_help_message (WindowInternal *w, wimp_PollBlock *poll_block, IDBlock *id_block);
extern void gadgets_wimp_to_toolbox(int *blk,_kernel_swi_regs *r);
extern _kernel_oserror * CreateObjectFromMemory (void *mem, ObjectID *obj);
extern _kernel_oserror * CreateObjectFromTemplate (char *name, ObjectID *obj);
extern _kernel_oserror *gadgets_set_fade(ComponentID id,unsigned int do_fade);
extern _kernel_oserror * gadgets_register_external (_kernel_swi_regs *r);
_kernel_oserror *gadgets_support_external(_kernel_swi_regs *regs);
_kernel_oserror *gadgets_deregister_external(_kernel_swi_regs *regs);
_kernel_oserror* gadgets_enumerate( _kernel_swi_regs* r);
_kernel_oserror *gadgets__get_icon_list2 ( _kernel_swi_regs* r);

extern _kernel_oserror *gadgets_add (Gadget *gt, WindowInternal *w, ComponentID *gadget_id);
    /*
     * Function to add a new gadget to a Toolbox Window.
     * This just creates a new element in the list of gadgets, fills in the
     * generic header information from the gadget "template", and then
     * calls the appropriate "gadget creator" function for a gadget of this
     * type, to create the block which is attached to "data", and to extend
     * the icon list for this Window.
     */


extern _kernel_oserror *gadgets_remove (ComponentID gadget_id, WindowInternal *w,int recurse);
    /*
     * Function to remove a gadget from a Toolbox Window
     * This removes the element from the list of gadgets, and calls the
     * "gadget remover" for this gadget to get rid of the block pointed
     * at by "data".  It also "forgets" the mappings from the gadget's
     * icon numbers to the gadget.
     */

extern void gadgets_remove_all (WindowInternal *w,int recurse);
    /*
     * Function to remove all gadgets from a window. If recurse is zero, then
     * remove all attached objects, eg. show objects of action buttons.
     */

extern _kernel_oserror *gadgets_method (_kernel_swi_regs *r, WindowInternal *w);
    /*
     * Function to dispatch a method which is for a given gadget type.
     * The WindowInternal structure has been found, from the SWI's input
     * register R2 (Window's ObjectID). "r" is the Toolbox's register set.
     */


extern _kernel_oserror *gadgets_toolbox_event (WindowInternal *w, ToolboxEvent *event, IDBlock *idb);
    /*
     * Function to dispatch a toolbox event delivered on a window,gadget pair
     * Passed to "everyone".
     */


extern _kernel_oserror *gadgets_mouse_click (WindowInternal *w, wimp_PollBlock *poll_block, int *claimed, IDBlock *id_block);
    /*
     * Function to deal with a mouse click in a Toolbox Window
     * First find the gadget corresponding to this icon
     * number, and dispatch.
     */


extern _kernel_oserror *gadgets_key_pressed (WindowInternal *w, wimp_PollBlock *poll_block, int *claimed, IDBlock *id_block);
    /*
     * Function to deal with a key press in a Toolbox Window
     * Calls all functions to see if anyone is interested.
     */


extern _kernel_oserror *gadgets_user_drag (wimp_PollBlock *poll_block);
    /*
     * Function to deal with end of user drag operation
     */


extern int gadgets_user_message (WindowInternal *w, wimp_PollBlock *poll_block, IDBlock *id_block);
    /*
     * Function to deal with the arrival of a "user message" (wimp_ESEND/ESEND_WANT_ACK).
     * Pass to ALL functions, 'til claimed.  If claimed, return non-zero.
     */

extern _kernel_oserror *gadgets_set_focus (GadgetInternal *gadget, int window_handle, int direction) ;

/* Macro for setting up icon list initially, including termination */

#define ICONLIST(num) static struct {int array [(num-1)]; int end; } _IconList={{0},-1};
#define IconList _IconList.array

#define SetCoords(a) \
    a.icon.bbox.xmin                       = gadget_template->hdr.xmin ;\
    a.icon.bbox.ymin                       = gadget_template->hdr.ymin ;\
    a.icon.bbox.xmax                       = gadget_template->hdr.xmax ;\
    a.icon.bbox.ymax                       = gadget_template->hdr.ymax ;\

#define BadMethod(a) make_error_hex (Window_NoSuchMiscOpMethod, 1, a)

/*
 * Function to inform gadgets that the object id has just appeared
 * This is used for gadgets which are implemented as sub-windows, such
 * as the scrollbar gadget
 */
extern _kernel_oserror *gadget_window_appeared(WindowInternal *w);

#endif
@


4.3
log
@Added SWI Window_EnumerateGadgets (0x82880+10)
Added SWI Window_GadgetGetIconList (0x82880+11)
Fixed bug in toolbox's implementation of Gadget_GetIconList - didn't
fill in the last icon number in the user buffer.
@
text
@d161 1
a161 1
#define ICONLIST(num) static struct {int array [(num-1)]; int end; } _IconList={{},-1};
@


4.2
log
@Spinner branch merged
@
text
@d86 2
@


4.1
log
@Initial revision
@
text
@d29 1
d109 1
a109 1
     * Function to remove all gadgets from a window. If recurse is zero, then 
d170 7
a177 1

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Imported from SrcFiler
@
text
@a28 1
 * 25/11/96: EPW: Added gadget_window_appeared()
d108 1
a108 1
     * Function to remove all gadgets from a window. If recurse is zero, then
a170 4
// Function to inform gadgets that the object id has just appeared
// This is used for gadgets which are implemented as sub-windows, such
// as the scrollbar gadget
extern _kernel_oserror *gadget_window_appeared(WindowInternal *w);
@


4.1.7.3
log
@Added support for nested windows and showtypes 2 and 3 - centred and at pointer
@
text
@d29 1
a29 1
 * 27/09/96: EPW: Added gadget_window_appeared() (see comment by declaration)
@


4.1.7.4
log
@Add "Extendable X and Extendable Y" toolbars.
Improve pane-handling algorithms.
Fix alignment of labels in labelled boxes.
Align numberrange's slider more neatly and put adjusters in right place
Stringsets tidied up
Some useful checking added to string_set_toolbox_event
Showing as subwindow fixed up a lot.
@
text
@d170 5
a174 5
/*
 * Function to inform gadgets that the object id has just appeared
 * This is used for gadgets which are implemented as sub-windows, such
 * as the scrollbar gadget
 */
a175 2

#endif
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
