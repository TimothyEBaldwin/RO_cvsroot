head	4.11;
access;
symbols
	Window-1_79:4.11
	Window-1_78:4.11
	Window-1_77:4.11
	Window-1_76:4.11
	Window-1_75:4.10
	Window-1_74:4.10
	Window-1_73:4.10
	Window-1_72:4.10
	Window-1_71:4.10
	RO_5_07:4.10
	Window-1_70:4.10
	Window-1_69:4.10
	Window-1_68:4.10
	Window-1_67:4.10
	Window-1_66:4.10
	Window-1_65:4.10
	Window-1_64:4.10
	Window-1_63:4.10
	Window-1_62:4.9
	Window-1_61:4.8
	Window-1_60:4.8
	Window-1_59:4.8
	mstphens_UrsulaRiscPCBuild_20Nov98:4.7
	sbrodie_Toolbox_Ursula_231198:4.7
	Window-1_58:4.7
	Ursula_RiscPC:4.7.0.4
	Window-1_57:4.7
	rthornb_UrsulaBuild-19Aug1998:4.7
	UrsulaBuild_FinalSoftload:4.7
	rthornb_UrsulaBuild-12Aug1998:4.7
	Ursula:4.7.0.2
	Ursula_bp:4.7
	aglover_UrsulaBuild-05Aug1998:4.7
	Window-1_56:4.7
	rthornb_UrsulaBuild-29Jul1998:4.7
	Window-1_55:4.7
	rthornb_UrsulaBuild-22Jul1998:4.7
	rthornb_UrsulaBuild-15Jul1998:4.7
	rthornb_UrsulaBuild-07Jul1998:4.7
	Window-1_54:4.7
	rthornb_UrsulaBuild-17Jun1998:4.7
	Window-1_53:4.7
	Window-1_52:4.7
	Window-1_51:4.7
	rthornb_UrsulaBuild-03Jun1998:4.6
	rthornb_UrsulaBuild-27May1998:4.6
	rthornb_UrsulaBuild-21May1998:4.6
	Ursula_12May1998:4.5.0.4
	rthornb_UrsulaBuild_01May1998:4.5
	sbrodie_Window_1_49:4.6
	afrost_NC2_Generic:4.1.7.4
	sbrodie_Window_1_48:4.6
	Daytona:4.5.0.2
	Daytona_bp:4.5
	sbrodie_Expresso_final_190298:4.6
	sbrodie_Window_1_46:4.6
	sbrodie_Expresso_BETA6_19980204:4.6
	sbrodie_Window_1_44:4.6
	Spinner_RCA116:4.1.7.4
	Spinner_B20_2:4.1.7.4
	Spinner_19_3:4.1.7.4
	Spinner_B18:4.1.7.4
	Spinner_B17:4.1.7.4
	Spin_merge_8Jul97:4.1.7.4
	Ursula_bp_8Jul97:4.2
	Spinner_B15:4.1.7.4
	Spinner_B14:4.1.7.4
	Spinner_B13:4.1.7.4
	Ursula_bp_13Jun97:4.2
	Spin_merge_13Jun97:4.1.7.4
	Spinner_B12:4.1.7.4
	Spinner_B10:4.1.7.4
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.4
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.4
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.4
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.4
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.11
date	2015.08.18.22.05.00;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	oMg9J5QqfRoPENxy;

4.10
date	2000.05.04.12.57.25;	author sbrodie;	state Exp;
branches;
next	4.9;

4.9
date	99.11.16.17.03.06;	author sbrodie;	state Exp;
branches;
next	4.8;

4.8
date	98.11.24.14.31.51;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	98.06.11.11.53.32;	author sbrodie;	state Exp;
branches;
next	4.6;

4.6
date	98.01.15.13.19.21;	author sbrodie;	state Exp;
branches;
next	4.5;

4.5
date	97.10.13.12.08.20;	author rbuckley;	state Exp;
branches;
next	4.4;

4.4
date	97.07.11.11.54.41;	author jsmith;	state Exp;
branches;
next	4.3;

4.3
date	97.07.08.10.14.05;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.05.13.09.12.14;	author kbracey;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.23.17;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	97.05.19.15.53.59;	author kbracey;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.23.17;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.46.19;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.18.22;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.42.01;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	97.02.04.17.22.46;	author pwombwel;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.03.17.17.08.51;	author pwombwel;	state Exp;
branches;
next	4.1.7.4;

4.1.7.4
date	97.03.19.18.57.29;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.11
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).
Dependencies cleaned from tests.

Version 1.76. Tagged as 'Window-1_76'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   main.c
 * Purpose: main module of the Window Object module
 * Author:  IDJ
 * History: 14-Jan-94: IDJ: created
 *
 */


#include <stdio.h>
#include <stdlib.h>
#include "kernel.h"
#include "swis.h"
#include "Global/Services.h"

#include "const.h"
#include "macros.h"
#include "debug.h"
#include "mem.h"
#include "string32.h"
#include "messages.h"
#include "rmensure.h"
#include "objmodule.h"

#include "objects/toolbox.h"
#include "objects/window.h"

#include "object.h"
#include "create.h"
#include "delete.h"
#include "show.h"
#include "hide.h"
#include "getstate.h"
#include "miscop.h"
#include "events.h"
#include "gadgets.h"
#include "veneers.h"

#include "globals.h"
#include "task.h"

#include "WindowHdr.h"

int WIMP_VERSION_NUMBER=0;
int DRAG_SOLID=0;
int ReFindFonts = 0;
char DecimalPoint;

ScreenDisplay Display = {0,0,0,0};

#define MAX_CLASS_SWI_METHODS 7
static _kernel_oserror *(*class_swi_methods [MAX_CLASS_SWI_METHODS])(_kernel_swi_regs *r, TaskDescriptor *t) =
       {
            create_object,
            delete_object,
            NULL,               /* reserved */
            show_object,
            hide_object,
            getstate_object,
            miscop_object
       };


/* +++++++++++++++++++++++++++++++++++ utility code +++++++++++++++++++++++++++++++++++ */

int read_mode_variable(int mode, int var)
{
  if (_swix(OS_ReadModeVariable, _INR(0,1)|_OUT(2), mode, var, &mode)) return 0;
  return mode;
}

int wimp_version(void)
{
  int wimpversion;
  if (_swix(Wimp_ReadSysInfo, _IN(0)|_OUT(0), 7, &wimpversion)) return 200;
  return wimpversion;
}

char whats_a_decimal_point(void)
{
  char *ptr;
  if (_swix(Territory_ReadSymbols, _INR(0,1)|_OUT(0), -1, 0, &ptr)) return '.';
  return *ptr;
}


#ifndef ROM
extern int Resources(void);
#endif

/* +++++++++++++++++++++++++++++++++ finalisation code +++++++++++++++++++++++++++++++++ */

extern _kernel_oserror *Window_final (int fatal, int podule, void *pw)
{
    _kernel_oserror *e;

    IGNORE(fatal);
    IGNORE(podule);
    IGNORE(pw);

    /*
     * if tasks are active or modules registered, refuse to die
     */

    if (task_any_active())
    {
        e = make_error (Window_TasksActive, 0);
        DEBUG debug_output ("finalise", "W:failed to finalise %s\n", e->errmess);
        return e;
    }


    /*
     * clean up before module exit
     */

    /*
     * close the Toolbox messages file
     */

    messages_file_close();

#ifndef ROM

    /*
     * ... and deregister from ResourceFS
     */

    objmodule_deregister_resources(Resources());
#endif

    /*
     * ... and deregister from Toolbox
     */

    objmodule_deregister(0, Window_ObjectClass);

    /*
     * free up all memory that we may have left allocated!
     */

    mem_free_all ();

    _swix(OS_ServiceCall, _IN(1), Service_WindowModuleDying);

    return NULL;
}


/* ++++++++++++++++++++++++++++++++ initialisation code +++++++++++++++++++++++++++++++ */

static void SetDisplay(void)
{

    Display.XEig = read_mode_variable(-1,4);
    Display.YEig = read_mode_variable(-1,5);

    Display.XPix = read_mode_variable(-1,11);
    Display.YPix = read_mode_variable(-1,12);
}

extern _kernel_oserror *Window_init(const char *cmd_tail, int podule_base, void *pw)
{
    _kernel_oserror *e;
    extern void window_starting(void);


    IGNORE(cmd_tail);
    IGNORE(podule_base);
    IGNORE(pw);

    if ((e=rmensure("Toolbox","Toolbox.Toolbox","1.10")) !=NULL) return e;

        /* draggables look better with draganobj */

    rmensure("DragAnObject","DragAnObj","0.01");

    /*
     * Set up our debugging variable
     */

    DEBUG debug_set_var_name ("Window$Debug") ;

#ifndef ROM

    /*
     * register our resources with ResourceFS
     */

    if ((e = objmodule_register_resources(Resources())) != NULL)
      return e;
#endif

    /*
     * register our messages file with MessageTrans
     */

    DEBUG debug_output ("init", "Registering messages file\n");

    objmodule_ensure_path("Window$Path", "Resources:$.Resources.Window.");

    if ((e = messages_file_open ("Window:Messages")) != NULL)
        return e;

    /*
     * register with the Toolbox as an Object Module
     */

    DEBUG debug_output ("init", "Registering with Toolbox\n");

    objmodule_register_with_toolbox(0, Window_ObjectClass, Window_ClassSWI, 0);

    /*
     * Set up our debugging variable
     */

    DEBUG debug_set_var_name ("Window$Debug") ;

    WIMP_VERSION_NUMBER=wimp_version();
    if (WIMP_VERSION_NUMBER < 350) rmensure("310Support","310Support.ThreeTen","0.01");

    SetDisplay();

    /* get CMOS dragging bit */

    if ((_swix (OS_Byte, _INR(0,1)|_OUT(2), 161, 0x1c, &DRAG_SOLID)) == NULL)
          DRAG_SOLID &= 2;

    DecimalPoint = whats_a_decimal_point();

    /* tell the world */

    _swix(OS_AddCallBack, _INR(0,1), window_starting, 0);

    return NULL;
}



/* +++++++++++++++++++++++++++++++++ service handler code ++++++++++++++++++++++++++++++ */


extern void Window_services(int service_number, _kernel_swi_regs *r, void *pw)
{
    IGNORE(pw);

    switch (service_number)
    {

        case Service_ToolboxTaskDied:
            /*
             * task dying - r0 holds task handle
             */

	    DEBUG debug_output("force", "Service_ToolboxTaskDied (%08x)\n", r->r[0]);
            show_shutdown(r->r[0]);
            task_remove (r->r[0]);

            break;


        case Service_ToolboxTaskBorn:
            /* Toolbox task has just started R0  == wimp task handle */

            /*
             * create a new "task descriptor"
             */

            task_add (r->r[0]);

            break;

        case 0x46 /* Service_ModeChange */:
          {
            ReFindFonts = 1;
            SetDisplay();

            break;
          }

	case 0x80 /* Service_ShutdownComplete */:
	    DEBUG debug_output("force", "Service_ShutdownComplete\n");
	    show_shutdown(0);
	    break;

        case Service_ToolboxStarting:
            objmodule_register_with_toolbox(0, Window_ObjectClass, Window_ClassSWI, 0);
            break;

        case Service_StartWimp:
            WIMP_VERSION_NUMBER=wimp_version();
            break;

        default:
            break;
    }
}

/* ++++++++++++++++++++++++++++++++++++++ SWI code +++++++++++++++++++++++++++++++++++++ */

/* #pragma -s0 */

typedef struct _windowFilters {
   struct _windowFilters *next;
   unsigned int mask;
   int pre,before,after;
} WindowFilters;

static WindowFilters *window_filters=0;

#define WindowAfter  0
#define WindowBefore 2

#define WindowPreFilter   0
#define WindowPostFilter  1

static _kernel_oserror *register_filter(_kernel_swi_regs *r)
{
   WindowFilters *new = mem_allocate(sizeof(WindowFilters),"Window filter being added");

   if (!new) return out_of_memory();

   if (r->r[0]) {
      mem_free(new,"error so freeing");
      return bad_flags(Window_RegisterFilter,r->r[0]);
   }

   new->mask     = r->r[1];
   new->pre      = r->r[2];
   new->before   = r->r[3];
   new->after    = r->r[4];

   new->next = window_filters;
   window_filters = new;

   return NULL;
}

static _kernel_oserror *deregister_filter(_kernel_swi_regs *r)
{
   WindowFilters *filters=window_filters,*prev = NULL;

   if (r->r[0]) {
      return bad_flags(Window_RegisterFilter,r->r[0]);
   }

   while (filters) {
      if (filters->mask == r->r[1] && filters->pre == r->r[2] &&
                filters->before == r->r[3] && filters->after == r->r[4]) {
          WindowFilters *next = filters->next;
          mem_free(filters,"deregistering filter");
          if (prev) prev->next = next;
          else window_filters = next;
          return NULL;
      }
      prev = filters;
      filters = filters->next;
   }

   return NULL;
}

static _kernel_oserror *dispatch_filter(int SWIno,int type,_kernel_swi_regs *r,int *claim)
{
   _kernel_oserror *er;
   int r0;

   er = _swix(SWIno, _INR(0,1)|_OUT(0), type, r, &r0);

   if (!er && r0 == -1) *claim =1;
   return er;
}

static _kernel_oserror *checkprefilters(_kernel_swi_regs *r,int *claim)
{
   WindowFilters *filters = window_filters;
   _kernel_oserror *er=NULL;

   while(filters) {
      int temp = 0;
      if (filters -> pre) er = dispatch_filter(filters -> pre,WindowPreFilter,r,&temp);
      if (temp) {*claim = 1;}
      filters = filters ->next;
   }

   return er;
}

static _kernel_oserror *checkpostfilters(_kernel_swi_regs *r,int *claim, int type)
{
   WindowFilters *filters = window_filters;
   _kernel_oserror *er=NULL;
   int ev = r->r[0];
   int mask;

   if (ev == 0x200) mask = 0x40000000;
   else mask = 1<<ev;

   while(filters) {
      int temp = 0;
      if (type == WindowBefore) {
        if (filters -> before && (filters->mask & mask))
          er = dispatch_filter(filters -> before ,WindowPostFilter | WindowBefore,r,&temp);
      }
      else {
        if (filters -> after && (filters->mask & mask))
          er = dispatch_filter(filters -> after, WindowPostFilter | WindowAfter,r,&temp);
      }
      if (temp) *claim = 1;
      filters = filters ->next;
   }

   return er;
}

extern _kernel_oserror *Window_SWI_handler(int swi_no, _kernel_swi_regs *r, void *pw)
{
    _kernel_oserror *e = NULL;
    TaskDescriptor  *t;
    int temp;
#if debugging
    int temp2;
#endif
    IGNORE(pw);

#if debugging
    _swix(OS_ReadMonotonicTime , _OUT(0), &temp);
#endif

    switch (swi_no)
    {
        case Window_ClassSWI - Window_00:
            if (r->r[0] < 0 || r->r[0] >= MAX_CLASS_SWI_METHODS)
            {
                return make_error_hex (Window_NoSuchMethod, 1, r->r[0]);
            }
            else
            {
                t = task_find (r->r[3]);

                if (t == NULL)
                {
                    return make_error_hex (Window_NoSuchTask, 1, r->r[3]);
                }

                e = (*class_swi_methods[r->r[0]])(r, t);
            }
            break;

        case Window_PostFilter - Window_00:
            if (window_filters) {
              temp = 0;
              e = checkpostfilters(r,&temp,WindowBefore);
              if(e || temp !=0) return e;
            }
            e = events_postfilter (r);

            if (window_filters) {
              e = checkpostfilters(r,&temp,WindowAfter);
            }
            break;

        case Window_PreFilter - Window_00:
            if (window_filters) {
              temp = 0;
              e = checkprefilters(r,&temp);
              if(e || temp !=0) return e;
            }
            e = events_prefilter (r);
            break;

        case Window_GetPointerInfo - Window_00:
            e = gadgets_get_pointer_info(r);
            break;
        case Window_RegisterExternal - Window_00:
            e = gadgets_register_external(r);
            break;

        case Window_DeregisterExternal - Window_00:
            e = gadgets_deregister_external(r);
            break;

        case Window_SupportExternal - Window_00:
            e = gadgets_support_external(r);
            break;

        case Window_EnumerateGadgets - Window_00:
            e = gadgets_enumerate(r);
            break;

        case Window_GadgetGetIconList - Window_00:
            e = gadgets__get_icon_list2(r);
            break;

        case Window_RegisterFilter - Window_00:
            e = register_filter(r);
            break;
        case Window_DeregisterFilter - Window_00:
            e = deregister_filter(r);
            break;

        case Window_InternalOp - Window_00:
            r->r[0] = (int) &window_filters;
            break;

        case Window_ExtractGadgetInfo - Window_00:
            e = create_extractgadget (r);
            break;

        case Window_PlotGadget - Window_00:
            e = gadgets_plotgadget (r);
            break;

        case Window_PreSubMenuShow - Window_00:
            e = hide_submenu_autohide (r);
            break;

        case Window_WimpToToolbox - Window_00:
            {
            _kernel_swi_regs regs;
            regs.r[3] = r->r[1];
            regs.r[4] = r->r[2];
            regs.r[2] =0;
            gadgets_wimp_to_toolbox((int *) &regs,&regs);

                /* return NULL if not a toolbox window */

            if (regs.r[2] & (1<<8)) regs.r[3] =0;

            r->r[0] = regs.r[3];
            r->r[1] = regs.r[4];

            break;
            }
        default:
            e = error_BAD_SWI;
            break;
    }

#if debugging
    _swix(OS_ReadMonotonicTime , _OUT(0), &temp2);
    debug_output("time","Leaving SWI %d, time in SWI was %d\n",swi_no,temp2-temp);
#endif

    return e;
}

/* #pragma -s1 */

/* ++++++++++++++++++++++++++++++++++++++ star commands ++++++++++++++++++++++++++++++++++++*/

#if debugging

extern _kernel_oserror *Window_commands(const char *arg_string, int argc, int cmd_no, void *pw)
{
    int th;
    IGNORE(argc);
    IGNORE(pw);


    switch (cmd_no)
    {
        case CMD_Window_Memory:
            mem_print_list();
            break;

        case CMD_Window_Tasks:
            task_print_list();
            break;

        case CMD_Window_RemoveTask:
            if (sscanf(arg_string,"%x",&th)) task_remove(th);
            break;

        default:
            break;
    }

    return NULL;
}

#endif
@


4.10
log
@  Changed to use common Makefile system.
  Debug build facility added.
Detail:
  Uses core facilities from Common instead of having private copies.
  Makefile vastly simplified to simply define a few macros, then include
    the common Toolbox Makefile which is exported by Common.
Admin:
  Requires Common 0.09 or later (RiscOS/Sources/Toolbox/Common; Common-0_09)
  Requires BuildSys 1.92 or later (RiscOS/BuildSys; BuildSys-1_92)
  Requires Library 0.41 or later (RiscOS/Library; Library-0_41)

Version 1.63. Tagged as 'Window-1_63'
@
text
@d27 1
a30 1
#include "services.h"
d38 2
a39 2
#include "objects.toolbox.h"
#include "objects.window.h"
d52 1
d55 1
a55 1
#include "main.h"
d101 1
a101 1
extern int messages_file(void);
d142 1
a142 1
    objmodule_deregister_resources(messages_file());
d175 1
a175 1
extern _kernel_oserror *Window_init(char *cmd_tail, int podule_base, void *pw)
d203 1
a203 1
    if ((e = objmodule_register_resources(messages_file())) != NULL)
d233 1
a233 1
    if (WIMP_VERSION_NUMBER < 350) rmensure("310Support","310Support.threeten","0.01");
d445 1
a445 1
        case Window_ClassSWI - Window_SWIChunkBase:
d463 1
a463 1
        case Window_PostFilter - Window_SWIChunkBase:
d476 1
a476 1
        case Window_PreFilter - Window_SWIChunkBase:
d485 1
a485 1
        case Window_GetPointerInfo - Window_SWIChunkBase:
d488 1
a488 1
        case Window_RegisterExternal - Window_SWIChunkBase:
d492 1
a492 1
        case Window_DeregisterExternal - Window_SWIChunkBase:
d496 1
a496 1
        case Window_SupportExternal - Window_SWIChunkBase:
d500 1
a500 1
        case Window_EnumerateGadgets - Window_SWIChunkBase:
d504 1
a504 1
        case Window_GadgetGetIconList - Window_SWIChunkBase:
d508 1
a508 1
        case Window_RegisterFilter - Window_SWIChunkBase:
d511 1
a511 1
        case Window_DeregisterFilter - Window_SWIChunkBase:
d515 1
a515 1
        case Window_InternalOp - Window_SWIChunkBase:
d519 1
a519 1
        case Window_ExtractGadgetInfo - Window_SWIChunkBase:
d523 1
a523 1
        case Window_PlotGadget - Window_SWIChunkBase:
d527 1
a527 1
        case Window_PreSubMenuShow - Window_SWIChunkBase:
d531 1
a531 1
        case Window_WimpToToolbox - Window_SWIChunkBase:
d549 1
d567 1
a567 1
extern _kernel_oserror *Window_commands(char *arg_string, int argc, int cmd_no, void *pw)
d576 1
a576 1
        case 0:
d580 1
a580 1
        case 1:
d584 1
a584 1
        case 2:
@


4.9
log
@Removed TinyStubs lunacy
@
text
@d36 1
d76 26
a107 3
#ifndef ROM
    extern int       messages_file(void);
#endif
d141 1
a141 1
    resourcefs_deregister_files(messages_file());
d148 1
a148 1
    deregister_with_toolbox();
a175 1
    char            *messages_filename;
a176 3
#ifndef ROM
    extern int messages_file(void);
#endif
d202 2
a203 2
    if ((e = resourcefs_register_files(messages_file())) != NULL)
        return e;
d212 1
a212 4
    if (getenv ("Window$Path") == NULL)
        messages_filename = "Resources:$.Resources.Window.Messages";
    else
        messages_filename = "Window:Messages";
d214 1
a214 1
        if ((e = messages_file_open (messages_filename)) != NULL)
d223 1
a223 1
    register_with_toolbox();
d299 1
a299 1
            register_with_toolbox();
@


4.8
log
@Removed X bit from SWI numbers
@
text
@a77 4
#ifdef ROM
static _kernel_oserror *__ROM;
#endif

a133 4
#ifdef ROM
    if(!__ROM) _swix(0x82c41, 0);
#endif

a162 4

#ifdef ROM
    __ROM = _swix(0x82c43, _IN(0), pw);
#endif
@


4.7
log
@Event ordering for transient submenu objects fixed (SNB-U002).
Module now uses srccommit to maintain its version number

Version 1.51. Tagged as 'Window-1_51'
@
text
@d139 1
a139 1
    if(!__ROM) _swix(0xa2c41, 0);
d173 1
a173 1
    __ROM = _swix(0xa2c43, _IN(0), pw);
@


4.6
log
@PAN-01317 fixed: Wimp dying when Window deletes transiently shown objects
@
text
@d428 1
a428 1
#if debugging    
d509 1
a509 1
        case Window_ClassSWI+32 - Window_SWIChunkBase:
d519 4
@


4.5
log
@Build process improvements :
* Standardised make process in common will all other modules in build.
* Internal and external toolbox libraries and headers exported to
  <Lib$Dir>.tboxlibint and <Lib$Dir>.tboxlibs respectivly.
* Resources now localised.
* Local !MkClean and !MkRom now use amu_machine.
@
text
@d262 2
d287 5
@


4.4
log
@Added SWI Window_EnumerateGadgets (0x82880+10)
Added SWI Window_GadgetGetIconList (0x82880+11)
Fixed bug in toolbox's implementation of Gadget_GetIconList - didn't
fill in the last icon number in the user buffer.
@
text
@d420 4
a423 2
    int temp,temp2;

@


4.3
log
@Ursula branch merged
@
text
@d485 8
@


4.2
log
@Spinner branch merged
@
text
@d205 1
a205 1
        messages_filename = "Resources:Resources.Window.Messages";
@


4.2.2.1
log
@Added tokenisation directives to Messages files.
Made modules open "Resources:$...." not "Resources:....".
@
text
@d205 1
a205 1
        messages_filename = "Resources:$.Resources.Window.Messages";
@


4.1
log
@Initial revision
@
text
@a87 1
    _kernel_swi_regs regs;
d136 3
a138 4
    regs.r[1] = Service_WindowModuleDying;
    _kernel_swi(OS_ServiceCall,&regs,&regs);
               
#ifdef ROM 
a160 1
    _kernel_swi_regs regs;
d163 1
a163 1
    extern int messages_file(void);         
d177 1
a177 1
                                   
d233 2
a234 4
    regs.r[0] = 161; /* read CMOS */
    regs.r[1] = 0x1c; /* fileswitch byte */
    if ((_kernel_swi (OS_Byte, &regs, &regs)) == NULL)
          DRAG_SOLID = (regs.r[2] & 2);
d240 1
a240 3
    regs.r[0] = (int) window_starting;
    regs.r[1] = 0;
    _kernel_swi(OS_AddCallBack,&regs,&regs);
d258 2
a259 2
            /* 
             * task dying - r0 holds task handle 
d261 1
a261 1
        
d281 1
a281 1
            SetDisplay();    
d290 4
d302 1
a302 1
                      
d312 1
a312 1
#define WindowBefore 2                         
d315 1
a315 1
#define WindowPostFilter  1 
d348 1
a348 1
      if (filters->mask == r->r[1] && filters->pre == r->r[2] && 
d365 2
a366 2
   _kernel_swi_regs regs;
   _kernel_oserror *er =NULL;
d368 1
a368 3
   regs.r[0] = type;
   regs.r[1] = (int) r;
   er = _kernel_swi(SWIno,&regs,&regs);
d370 1
a370 1
   if (!er && regs.r[0] == -1) *claim =1;
d375 1
a375 1
{       
d385 1
a385 1
      
d390 1
a390 1
{       
d397 2
a398 2
   else mask = 1<<ev;    
   
d402 1
a402 1
        if (filters -> before && (filters->mask & mask)) 
d406 1
a406 1
        if (filters -> after && (filters->mask & mask)) 
d411 1
a411 1
   }         
d428 1
a428 1
    switch (swi_no + Window_SWIChunkBase)
d430 1
a430 1
        case Window_ClassSWI:
d448 2
a449 2
        case Window_PostFilter:
            if (window_filters) {                        
d455 2
a456 2
                 
            if (window_filters) {                        
d461 2
a462 2
        case Window_PreFilter:
            if (window_filters) {                        
d470 1
a470 1
        case Window_GetPointerInfo:
d473 1
a473 1
        case Window_RegisterExternal:
d477 1
a477 1
        case Window_DeregisterExternal:
d481 1
a481 1
        case Window_SupportExternal:
d484 2
a485 2
        
        case Window_RegisterFilter:
d488 1
a488 1
        case Window_DeregisterFilter:
d492 1
a492 1
        case Window_ClassSWI+32:
d496 1
a496 1
        case Window_ExtractGadgetInfo:
d500 1
a500 1
        case Window_PlotGadget:
d504 1
a504 1
        case Window_WimpToToolbox:
d531 1
a531 1
}          
d536 1
a536 1
                                               
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Added support for nested windows and showtypes 2 and 3 - centred and at pointer
@
text
@d139 2
a140 2

#ifdef ROM
d166 1
a166 1
    extern int messages_file(void);
d180 1
a180 1

d265 2
a266 2
            /*
             * task dying - r0 holds task handle
d268 1
a268 1

d288 1
a288 1
            SetDisplay();
d305 1
a305 1

d315 1
a315 1
#define WindowBefore 2
d318 1
a318 1
#define WindowPostFilter  1
d351 1
a351 1
      if (filters->mask == r->r[1] && filters->pre == r->r[2] &&
d380 1
a380 1
{
d390 1
a390 1

d395 1
a395 1
{
d402 2
a403 2
   else mask = 1<<ev;

d407 1
a407 1
        if (filters -> before && (filters->mask & mask))
d411 1
a411 1
        if (filters -> after && (filters->mask & mask))
d416 1
a416 1
   }
d454 1
a454 1
            if (window_filters) {
d460 2
a461 2

            if (window_filters) {
d467 1
a467 1
            if (window_filters) {
d489 1
a489 1

d536 1
a536 1
}
d541 1
a541 1

@


4.1.7.3
log
@Added SetFont methods for Radio & Option buttons
Added Service_StartWimp (0x49) to cope with softloading a
window manager *after* this module.
@
text
@a295 4
        
        case Service_StartWimp:
            WIMP_VERSION_NUMBER=wimp_version();
            break;
@


4.1.7.4
log
@Add "Extendable X and Extendable Y" toolbars.
Improve pane-handling algorithms.
Fix alignment of labels in labelled boxes.
Align numberrange's slider more neatly and put adjusters in right place
Stringsets tidied up
Some useful checking added to string_set_toolbox_event
Showing as subwindow fixed up a lot.
@
text
@d88 1
d137 2
a138 1
    _swix(OS_ServiceCall, _IN(1), Service_WindowModuleDying);
d163 1
d236 4
a239 2
    if ((_swix (OS_Byte, _INR(0,1)|_OUT(2), 161, 0x1c, &DRAG_SOLID)) == NULL)
          DRAG_SOLID &= 2;
d245 3
a247 1
    _swix(OS_AddCallBack, _INR(0,1), window_starting, 0);
d296 1
a296 1

d372 2
a373 2
   _kernel_oserror *er;
   int r0;
d375 3
a377 1
   er = _swix(SWIno, _INR(0,1)|_OUT(0), type, r, &r0);
d379 1
a379 1
   if (!er && r0 == -1) *claim =1;
d437 1
a437 1
    switch (swi_no)
d439 1
a439 1
        case Window_ClassSWI - Window_SWIChunkBase:
d457 1
a457 1
        case Window_PostFilter - Window_SWIChunkBase:
d470 1
a470 1
        case Window_PreFilter - Window_SWIChunkBase:
d479 1
a479 1
        case Window_GetPointerInfo - Window_SWIChunkBase:
d482 1
a482 1
        case Window_RegisterExternal - Window_SWIChunkBase:
d486 1
a486 1
        case Window_DeregisterExternal - Window_SWIChunkBase:
d490 1
a490 1
        case Window_SupportExternal - Window_SWIChunkBase:
d494 1
a494 1
        case Window_RegisterFilter - Window_SWIChunkBase:
d497 1
a497 1
        case Window_DeregisterFilter - Window_SWIChunkBase:
d501 1
a501 1
        case Window_ClassSWI+32 - Window_SWIChunkBase:
d505 1
a505 1
        case Window_ExtractGadgetInfo - Window_SWIChunkBase:
d509 1
a509 1
        case Window_PlotGadget - Window_SWIChunkBase:
d513 1
a513 1
        case Window_WimpToToolbox - Window_SWIChunkBase:
@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
