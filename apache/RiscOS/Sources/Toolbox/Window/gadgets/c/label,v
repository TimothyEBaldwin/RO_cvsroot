head	4.2;
access;
symbols
	Window-1_79:4.2
	Window-1_78:4.2
	Window-1_77:4.2
	Window-1_76:4.2
	Window-1_75:4.1
	Window-1_74:4.1
	Window-1_73:4.1
	Window-1_72:4.1
	Window-1_71:4.1
	RO_5_07:4.1
	Window-1_70:4.1
	Window-1_69:4.1
	Window-1_68:4.1
	Window-1_67:4.1
	Window-1_66:4.1
	Window-1_65:4.1
	Window-1_64:4.1
	Window-1_63:4.1
	Window-1_62:4.1
	Window-1_61:4.1
	Window-1_60:4.1
	Window-1_59:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Window-1_58:4.1
	Ursula_RiscPC:4.1.0.10
	Window-1_57:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	Ursula:4.1.0.8
	Ursula_bp:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	Window-1_56:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	Window-1_55:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	Window-1_54:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	Window-1_53:4.1
	Window-1_52:4.1
	Window-1_51:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	sbrodie_Window_1_49:4.1
	afrost_NC2_Generic:4.1.7.1
	sbrodie_Window_1_48:4.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Window_1_46:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Window_1_44:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Ursula_bp_13Jun97:4.1
	Spin_merge_13Jun97:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2015.08.18.22.05.07;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	oMg9J5QqfRoPENxy;

4.1
date	96.11.05.09.23.20;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.20;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.46.34;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.18.42;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.42.16;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).
Dependencies cleaned from tests.

Version 1.76. Tagged as 'Window-1_76'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   label.c
 * Purpose: label gadgets
 * Author:  Chris Marshall
 * History: 22-Feb-94: IDJ: created
 *          23-Feb-94: CSM: Wrote label_add. Might work, dunno yet
 *          02-Mar-94: CSM: Fixed label add to supply window handle to Wimp_CreateIcon. Duh
 *          07-Mar-94: CSM: Added code to interpret flags settings
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "swis.h"
#include "kernel.h"

#include "const.h"
#include "macros.h"
#include "debug.h"
#include "mem.h"
#include "string32.h"
#include "messages.h"

#include "style.h"
#include "objects/toolbox.h"
#include "objects/window.h"

#include "../globals.h"
#include "../gadgets.h"
#include "../object.h"

#include "label.h"

ICONLIST(2)
extern int WIMP_WINDOW;

typedef struct _label
{
  int   icon_handle;
  Label the_label;  /* Fill this in from gadget_template */
} label;

_kernel_oserror *label_add      (GadgetInternal *gadget, ObjectID window, int **icon_list, Gadget *gadget_template, int window_handle)
{
    wimp_IconCreate  i;
    _kernel_oserror *e;
    label           *l;
    int temp;
      
    window =window;

    /*
     * Allocate our own data to hang off the GadgetInternal structure.
     * We take a copy of the label's template (ie its textual label string).
     */

    temp= string_length (gadget_template->data.label.label)+1;

    l = mem_allocate (sizeof (label) + temp, "label_add, label type") ;
    if (l == NULL)
        return out_of_memory ();

    gadget->data = (void *) l ;

    l->the_label.label = (char *) l + sizeof(label);

    string_copy (l->the_label.label, gadget_template->data.label.label);

    /*
     * Set up a real wimp icon block, with text buffer pointing at our copy
     * of the template.
     */

    i.window_handle                        = window_handle;
    i.icon.data.indirect_text.buffer       = l->the_label.label ;
    i.icon.data.indirect_text.buff_len     = strlen (l->the_label.label) + 1 ;
    i.icon.data.indirect_text.valid_string = NULL ;
    i.icon.flags                           = style_TEXT_LABEL_ICONFLAGS;

    switch (gadget_template->hdr.flags & Label_Justification)
    {
      case Label_LeftJustify:
        break ;

      case Label_RightJustify:
        i.icon.flags |= wimp_ICONFLAGS_RJUSTIFY ;
        break ;

      case Label_Centred:
        i.icon.flags |= wimp_ICONFLAGS_HCENTRE ;
        break ;
    }

    if ((gadget_template->hdr.flags & Label_NoBox) == 0)
      i.icon.flags |= wimp_ICONFLAGS_HAS_BORDER ;

    SetCoords(i)

    /*
     * Create the underlying wimp icon (and store its handle).
     */

    if ((e = CreateIcon(i, &(l->icon_handle))) != NULL)
        goto error;


    /*
     * Return icon list to caller.
     */

    *icon_list = IconList;

    IconList[0] = l->icon_handle;

    return NULL;


error:

    if (l != NULL)
        mem_free (l, "freeing label");

    return e;
}

@


4.1
log
@Initial revision
@
text
@a31 1
#include "services.h"
d38 2
a39 2
#include "objects.toolbox.h"
#include "objects.window.h"
d41 3
a43 3
#include "^.globals.h"
#include "^.gadgets.h"
#include "^.object.h"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
