head	4.2;
access;
symbols
	Window-1_79:4.2
	Window-1_78:4.2
	Window-1_77:4.2
	Window-1_76:4.2
	Window-1_75:4.1
	Window-1_74:4.1
	Window-1_73:4.1
	Window-1_72:4.1
	Window-1_71:4.1
	RO_5_07:4.1
	Window-1_70:4.1
	Window-1_69:4.1
	Window-1_68:4.1
	Window-1_67:4.1
	Window-1_66:4.1
	Window-1_65:4.1
	Window-1_64:4.1
	Window-1_63:4.1
	Window-1_62:4.1
	Window-1_61:4.1
	Window-1_60:4.1
	Window-1_59:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Window-1_58:4.1
	Ursula_RiscPC:4.1.0.10
	Window-1_57:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	Ursula:4.1.0.8
	Ursula_bp:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	Window-1_56:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	Window-1_55:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	Window-1_54:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	Window-1_53:4.1
	Window-1_52:4.1
	Window-1_51:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	sbrodie_Window_1_49:4.1
	afrost_NC2_Generic:4.1.7.1
	sbrodie_Window_1_48:4.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Window_1_46:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Window_1_44:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Ursula_bp_13Jun97:4.1
	Spin_merge_13Jun97:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	2015.08.18.22.05.08;	author rsprowson;	state Exp;
branches;
next	4.1;
commitid	oMg9J5QqfRoPENxy;

4.1
date	96.11.05.09.23.21;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.21;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.46.41;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.18.50;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.42.22;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).
Dependencies cleaned from tests.

Version 1.76. Tagged as 'Window-1_76'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   simple.c
 * Purpose: simple gadgets
 * Author:
 * History: NK : 08-Apr-94
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "swis.h"
#include "kernel.h"

#include "const.h"
#include "macros.h"
#include "debug.h"
#include "mem.h"
#include "string32.h"
#include "messages.h"

#include "style.h"
#include "objects/toolbox.h"
#include "objects/window.h"

#include "../globals.h"
#include "../gadgets.h"
#include "../object.h"
#include "../veneers.h"

#include "simple.h"

extern int WIMP_WINDOW;

typedef struct _simple_internal
{
  int   icon_handle ;
  int   icon_handle2 ;
  int   icon_handle3 ;
} simple_internal ;


_kernel_oserror *simple_remove   (GadgetInternal *gadget, ObjectID window,int recurse)
{
    _kernel_oserror  *e=NULL;
    simple_internal *ab = (simple_internal *) gadget->data;
 
    IGNORE(window);
    IGNORE(recurse);

    /*
     * Remove the icon from the window
     */

    e = DeleteIcons(gadget,window);

    /*
     * ... and free up the memory we have used
     */

    mem_free (ab, "removing simple gadget data");

    return e;
}

extern int WIMP_VERSION_NUMBER;                                       

static _kernel_oserror *if310(GadgetInternal *gadget,simple_internal *ab,int do_fade)
{
     _kernel_swi_regs regs;
     regs.r[0] = (int) &(gadget->gadget_hdr);
     regs.r[1] = (int) ab;
     regs.r[2] = WIMP_WINDOW;
     regs.r[3] = do_fade;
     return (_kernel_swi(0x82d00,&regs,&regs));

}

_kernel_oserror *simple_set_fade (GadgetInternal *gadget, ObjectID window, int do_fade)
{
  wimp_SetIconState set ;
  simple_internal *ab = (simple_internal *) gadget->data ;
  window=window;                              /* Not Used */

  DEBUG debug_output ("fade", "simple_set_fade: fade flag is %d\n\r", do_fade) ;
 
  if (WIMP_VERSION_NUMBER < 350) return if310(gadget,ab,do_fade);

  set.window_handle = WIMP_WINDOW;
  set.icon_handle   = ab->icon_handle ;
  set.clear_word    = wimp_ICONFLAGS_FADED ;
  set.EOR_word      = do_fade ? wimp_ICONFLAGS_FADED : 0 ;

  return wimp_set_icon_state( &set);
}


_kernel_oserror *simple_set_fade2 (GadgetInternal *gadget, ObjectID window, int do_fade)
{
  _kernel_oserror   *e;
  wimp_SetIconState  set ;
  simple_internal      *l = (simple_internal *) gadget->data ;

  window=window;                              /* Not Used */

  DEBUG debug_output ("fade", "simple_set_fade2: fade flag is %d\n\r", do_fade) ;

  if (WIMP_VERSION_NUMBER < 350) return if310(gadget,l,do_fade);

  set.window_handle = WIMP_WINDOW;
  set.icon_handle   = l->icon_handle ;
  set.clear_word    = wimp_ICONFLAGS_FADED ;
  set.EOR_word      = do_fade ? wimp_ICONFLAGS_FADED : 0 ;

  if ((e = wimp_set_icon_state( &set)) != NULL)  return (e);
                                            
        /* note _Base, not _Type */

  if (gadget->gadget_hdr.type == Slider_Base) {
        set.icon_handle = l->icon_handle3;
        if ((e = wimp_set_icon_state( &set)) != NULL)  return (e);
  }

  set.icon_handle   = l->icon_handle2 ;
                                      
  return wimp_set_icon_state( &set);
}
@


4.1
log
@Initial revision
@
text
@a29 1
#include "services.h"
d36 2
a37 2
#include "objects.toolbox.h"
#include "objects.window.h"
d39 4
a42 4
#include "^.globals.h"
#include "^.gadgets.h"
#include "^.object.h"
#include "^.veneers.h"
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
