head	4.3;
access;
symbols
	Window-1_79:4.3
	Window-1_78:4.3
	Window-1_77:4.3
	Window-1_76:4.3
	Window-1_75:4.2
	Window-1_74:4.2
	Window-1_73:4.2
	Window-1_72:4.2
	Window-1_71:4.2
	RO_5_07:4.2
	Window-1_70:4.2
	Window-1_69:4.2
	Window-1_68:4.1
	Window-1_67:4.1
	Window-1_66:4.1
	Window-1_65:4.1
	Window-1_64:4.1
	Window-1_63:4.1
	Window-1_62:4.1
	Window-1_61:4.1
	Window-1_60:4.1
	Window-1_59:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Window-1_58:4.1
	Ursula_RiscPC:4.1.0.10
	Window-1_57:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	Ursula:4.1.0.8
	Ursula_bp:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	Window-1_56:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	Window-1_55:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	Window-1_54:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	Window-1_53:4.1
	Window-1_52:4.1
	Window-1_51:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	sbrodie_Window_1_49:4.1
	afrost_NC2_Generic:4.1.7.1
	sbrodie_Window_1_48:4.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Window_1_46:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Window_1_44:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Ursula_bp_13Jun97:4.1
	Spin_merge_13Jun97:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2015.08.18.22.05.07;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	oMg9J5QqfRoPENxy;

4.2
date	2002.12.12.20.28.26;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.23.19;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.19;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.46.30;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.18.35;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.42.11;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Makefile recreated from fragments
Include paths changed to Unix style.
Debug and non debug CMHG definitions replaced by one which is selected by passing predefines to CMHG.
Removed dummy services.h.
Don't bother calling TinyStubs SWI since in ROM it does nothing, and the RAM versions haven't used it since ~1997.
Use module header constants generated from CMHG rather than hand made one.
Reject out of range SWIs (fixes ticket #305).
Dependencies cleaned from tests.

Version 1.76. Tagged as 'Window-1_76'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   adjuster.c
 * Purpose: adjuster gadgets
 * Author:
 * History: 22-Feb-94: IDJ: created
 *          05-Apr-94: NK : really created
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "swis.h"
#include "kernel.h"

#include "const.h"
#include "macros.h"
#include "debug.h"
#include "mem.h"
#include "string32.h"
#include "messages.h"

#include "style.h"
#include "objects/toolbox.h"
#include "objects/window.h"

#include "../globals.h"
#include "../gadgets.h"
#include "../object.h"

#include "adjuster.h"

ICONLIST(2)

extern int WIMP_WINDOW;

        /* mapping from gadget flags to sprite */

static char Adjusters[4][20] = { style_ADJUSTER_ARROW_LEFT_VALIDSTR,
                         style_ADJUSTER_ARROW_RIGHT_VALIDSTR,
                         style_ADJUSTER_ARROW_DOWN_VALIDSTR,
                         style_ADJUSTER_ARROW_UP_VALIDSTR};

typedef struct _adjuster_internal
{
  int   icon_handle ;
} adjuster_internal ;

_kernel_oserror *adjuster_add (GadgetInternal *gadget, ObjectID window,
                                    int **icon_list, Gadget *gadget_template,
                                    int window_handle)
{
    wimp_IconCreate  i;
    _kernel_oserror *e;
    adjuster_internal *adj;

    window=window;                      /* Not Used */

    /*
     * Allocate our own data to hang off the GadgetInternal structure.
     * We take a copy of the button's template (ie its textual string).
     */

    adj = mem_allocate (sizeof (adjuster_internal), "adjuster_add, adjuster_internal type") ;
    if (adj == NULL)
        return out_of_memory();

    gadget->data = (void *) adj ;

    /*
     * Set up a real wimp icon block, with text buffer pointing at our copy
     * of the template.
     */

    i.window_handle                        = window_handle ;
    i.icon.data.indirect_text.buffer       = "";
    i.icon.data.indirect_text.buff_len     = 1;
    i.icon.data.indirect_text.valid_string = Adjusters[((gadget->gadget_hdr.flags) &3)];
    i.icon.flags                           = style_ADJUSTER_ARROW_ICONFLAGS ;


    /*
     * Trust that we're given sensible values!
     */

    SetCoords(i)

    /*
     * Create the underlying wimp icon (and store its handle).
     */

    if ((e = CreateIcon(i, &(adj->icon_handle))) != NULL)
        goto error;


    /*
     * Return icon list to caller.
     */

    *icon_list = IconList;

    IconList[0] = adj->icon_handle;

    return NULL;


error:

    if (adj != NULL)
        mem_free (adj, "freeing adjuster");

    return e;
}

/* No Methods */

_kernel_oserror *adjuster_mouse_click (GadgetInternal *gadget,
                                            ObjectID window,
                                            wimp_PollBlock *poll_block,
                                            int *claimed)
{
  adjuster_internal *adj        = (adjuster_internal *) gadget->data ;
  _kernel_oserror *e ;
  AdjusterClickedEvent            event ;


  DEBUG debug_output ("adjuster", "Click on adjuster (buttons %d)\n\r",
     poll_block->mouse_click.buttons) ;


  if (((poll_block->mouse_click.buttons == wimp_SELECT_BUTTON)  ||
       (poll_block->mouse_click.buttons == wimp_ADJUST_BUTTON)) &&
       (poll_block->mouse_click.icon_handle == adj->icon_handle))
  {
    event.hdr.size       = sizeof event;
    event.hdr.event_code = Adjuster_Clicked;
    event.hdr.flags      = 0;
    if (poll_block->mouse_click.buttons == wimp_ADJUST_BUTTON)
      event.direction      = 1-(gadget->gadget_hdr.flags & 0x00000001);
    else
      event.direction      = (gadget->gadget_hdr.flags & 0x00000001);

   if ((e = gadgets_raise_event (window, gadget->gadget_hdr.component_id, &event)) != NULL)
           return (e);

    *claimed = TRUE ;
  }
  else
  {
    *claimed = FALSE ;
  }

  return NULL ;
}

/* No Key Presses */
@


4.2
log
@Fixes to sizes of event blocks.
Now the Toolbox module only memcpy's what ou asked for it helps if
you ask for the right amount!
This manifested itself in lots of missing event_raise messages when
for example adjusters were pressed leading to false bug reports of
other apps which included adjuster icons.

Version 1.69. Tagged as 'Window-1_69'
@
text
@a30 1
#include "services.h"
d37 2
a38 2
#include "objects.toolbox.h"
#include "objects.window.h"
d40 3
a42 3
#include "^.globals.h"
#include "^.gadgets.h"
#include "^.object.h"
@


4.1
log
@Initial revision
@
text
@d50 1
a50 1
                                                         
d94 1
a94 1
    
d149 1
a149 1
    event.hdr.size       = sizeof (ToolboxEventHeader) + 4 ;
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
