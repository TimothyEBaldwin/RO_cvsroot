head	4.1;
access;
symbols
	Window-1_79:4.1
	Window-1_78:4.1
	Window-1_77:4.1
	Window-1_76:4.1
	Window-1_75:4.1
	Window-1_74:4.1
	Window-1_73:4.1
	Window-1_72:4.1
	Window-1_71:4.1
	RO_5_07:4.1
	Window-1_70:4.1
	Window-1_69:4.1
	Window-1_68:4.1
	Window-1_67:4.1
	Window-1_66:4.1
	Window-1_65:4.1
	Window-1_64:4.1
	Window-1_63:4.1
	Window-1_62:4.1
	Window-1_61:4.1
	Window-1_60:4.1
	Window-1_59:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	sbrodie_Toolbox_Ursula_231198:4.1
	Window-1_58:4.1
	Ursula_RiscPC:4.1.0.10
	Window-1_57:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	Ursula:4.1.0.8
	Ursula_bp:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	Window-1_56:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	Window-1_55:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	Window-1_54:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	Window-1_53:4.1
	Window-1_52:4.1
	Window-1_51:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_12May1998:4.1.0.6
	rthornb_UrsulaBuild_01May1998:4.1
	sbrodie_Window_1_49:4.1
	afrost_NC2_Generic:4.1.7.1
	sbrodie_Window_1_48:4.1
	Daytona:4.1.0.4
	Daytona_bp:4.1
	sbrodie_Expresso_final_190298:4.1
	sbrodie_Window_1_46:4.1
	sbrodie_Expresso_BETA6_19980204:4.1
	sbrodie_Window_1_44:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spin_merge_8Jul97:4.1.7.1
	Ursula_bp_8Jul97:4.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Ursula_bp_13Jun97:4.1
	Spin_merge_13Jun97:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_13May97:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	pwombwel_Rel_1_36:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.23.31;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.23.31;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.47.39;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.13.19.54;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.43.14;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Opens a template file, reads the first window definition and
 * dumps prototype gadget headers to a file based on icon definitions
 * found.
 */


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "kernel.h"
#include "swis.h"



#include "<Toolbox$Common>.const.h"
#include "<Toolbox$Common>.macros.h"
#include "<Toolbox$Common>.services.h"
#include "<Toolbox$Common>.debug.h"
#include "<Toolbox$Common>.mem.h"
#include "<Toolbox$Common>.wimp.h"

/*
 * Fixed size buffers, yeah we love 'em!
 */

int window_definition[4096] ; /* That's 16k, sports fans! */
int tmpbuf[4096] ;
int indirect_workspace[1024] ;

int main (int argc, char **argv)
{
  FILE *out ;
  int loop ;
  _kernel_swi_regs regs ;
  _kernel_oserror *e ;
  int window_handle ;

  wimp_Window *window = (wimp_Window *) window_definition ;
  wimp_Icon   *icon ;

  if (argc != 3)
  {
    fprintf (stderr, "Usage: %s infile outfile\n", argv[0]) ;
    exit (EXIT_FAILURE) ;
  }

  regs.r[1] = (int) argv[1] ;
  if ((e = _kernel_swi (Wimp_OpenTemplate, &regs, &regs)) != NULL)
    _kernel_raise_error (e) ;

  regs.r[1] = (int) window_definition ;
  regs.r[2] = (int) indirect_workspace ;
  regs.r[3] = ((int) indirect_workspace) + 1024 ;
  regs.r[4] = -1 ;
  regs.r[5] = (int) "*\0\0\0\0\0\0\0\0\0\0\0" ; /* Bodge! */
  regs.r[6] = 0 ;
  if ((e = _kernel_swi (Wimp_LoadTemplate, &regs, &regs)) != NULL)
    _kernel_raise_error (e) ;

  if (regs.r[6] == 0)
  {
    fprintf (stderr, "No templates found in file\n") ;
    exit (EXIT_FAILURE) ;
  }

  if ((e = _kernel_swi (Wimp_CloseTemplate, &regs, &regs)) != NULL)
    _kernel_raise_error (e) ;

  regs.r[1] = (int) window_definition ;
  if ((e = _kernel_swi (Wimp_CreateWindow, &regs, &regs)) != NULL)
    _kernel_raise_error (e) ;
  window_handle = regs.r[0] ;

  tmpbuf[0] = window_handle ;
  regs.r[1] = (int) tmpbuf ;
  if ((e = _kernel_swi (Wimp_GetWindowInfo, &regs, &regs)) != NULL)
    _kernel_raise_error (e) ;

  /*
   * The (int) cast is important, prevents pointer arithmetic
   */
  icon = (wimp_Icon *) ((int) tmpbuf + sizeof (wimp_Window) + 4) ;

  out = fopen (argv[2], "w") ;
  if (out == NULL)
  {
    fprintf (stderr, "%s: Cannot open output file %s\n", argv[0], argv[2]) ;
    exit (EXIT_FAILURE) ;
  }

  for (loop = 0; loop < window->nicons; loop++)
  {
    fprintf (out, "  {\n    f,\n    t,\n    sizeof (GadgetHeader) + sizeof (x),\n    %d, %d, %d, %d,\n    %d,\n    \"Thing\",\n    sizeof \"Thing\" + 1\n  }\n", (icon+loop)->bbox.xmin, (icon+loop)->bbox.ymin,
       (icon+loop)->bbox.xmax, (icon+loop)->bbox.ymax, loop ) ;
  }

  fclose (out) ;

  exit (EXIT_SUCCESS) ;
}
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
