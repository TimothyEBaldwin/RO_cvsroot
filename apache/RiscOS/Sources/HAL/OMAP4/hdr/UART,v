head	1.4;
access;
symbols
	OMAP4-0_60:1.4
	OMAP4-0_59-1_52_2_3:1.4
	OMAP4-0_59:1.4
	OMAP4-0_58:1.4
	OMAP4-0_57:1.4
	OMAP4-0_56:1.4
	OMAP4-0_55:1.4
	OMAP4-0_54-1_52_2_2:1.4
	OMAP4-0_54:1.4
	OMAP4-0_53:1.4
	OMAP4-0_52-1_52_2_1:1.4
	SMP:1.4.0.2
	SMP_bp:1.4
	OMAP4-0_52:1.4
	OMAP4-0_51:1.4
	OMAP4-0_50:1.4
	OMAP4-0_49:1.4
	OMAP4-0_48:1.4
	OMAP4-0_47:1.4
	OMAP4-0_46:1.4
	OMAP4-0_45:1.4
	OMAP4-0_44:1.4
	OMAP4-0_43:1.4
	OMAP4-0_42:1.4
	OMAP4-0_41:1.4
	OMAP4-0_40:1.4
	OMAP4-0_39:1.4
	OMAP4-0_38:1.4
	OMAP4-0_37:1.4
	OMAP4-0_36:1.4
	OMAP4-0_35:1.4
	OMAP4-0_34:1.4
	OMAP4-0_33:1.4
	OMAP4-0_32:1.4
	OMAP4-0_31:1.4
	OMAP4-0_30:1.4
	OMAP4-0_29:1.4
	OMAP4-0_28:1.4
	OMAP4-0_27:1.4
	OMAP4-0_26:1.4
	OMAP4-0_25:1.4
	OMAP4-0_24:1.4
	OMAP4-0_23:1.4
	OMAP4-0_22:1.4
	OMAP4-0_21:1.3
	OMAP4-0_20:1.3
	OMAP4-0_19:1.3
	OMAP4-0_18:1.3
	OMAP4-0_17:1.3
	OMAP4-0_16:1.3
	OMAP4-0_15:1.3
	OMAP4-0_14:1.3
	OMAP4-0_13:1.3
	OMAP4-0_12:1.3
	OMAP4-0_11:1.3
	OMAP4-0_10:1.3
	OMAP4-0_09:1.3
	OMAP4-0_08:1.3
	OMAP4-0_07:1.3
	OMAP4-0_06:1.2
	OMAP4-0_05:1.2
	OMAP4-0_04:1.1.1.1
	OMAP4-0_03:1.1.1.1
	OMAP4-0_02:1.1.1.1
	OMAP4-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.10.30.00.41.28;	author bavison;	state Exp;
branches;
next	1.3;
commitid	Qv6dpkuXjCtQFfbx;

1.3
date	2012.03.25.11.42.54;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	4FjnaYBzkPTA6gYv;

1.2
date	2012.02.11.17.48.06;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	W3PfhFs2h9uBvLSv;

1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	M3eV6gzJuoHHMezv;

1.1.1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches;
next	;
commitid	M3eV6gzJuoHHMezv;


desc
@@


1.4
log
@  Replaced header file for licensing reasons
Detail:
  omap4_reg.h taken from FreeBSD projects/armv6/sys/arm/ti/omap4, trimmed to
  only include interrupt definitions, then updated so that symbol names and
  comments match Table 17.2 of the OMAP4460 TRM (SWPU235F) more closely - now
  the symbol names only differ in the prefix, and the absence of "IRQ"
  mid-string.  This was then translated very literally into objasm syntax to
  create hdr.omap4_reg, and used in place of hdr.irqs44xx.
Admin:
  Builds OK

Version 0.22. Tagged as 'OMAP4-0_22'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; UART1-4

        [       :LNOT: :DEF: __HAL_UART_HDR__
        GBLL    __HAL_UART_HDR__

        GET     hdr.omap4_reg

UART_THR                *       &000    ; Transmit Holding Register
UART_RHR                *       &000    ; Receiver Holding Register
UART_DLL                *       &000    ; Divisor Latch Low byte
UART_IER                *       &004    ; Interrupt Enable Register
UART_DLH                *       &004    ; Divisor Latch High byte
UART_IIR                *       &008    ; Interrupt Identification Register
UART_FCR                *       &008    ; FIFO Control Register
UART_EFR                *       &008    ; Enhanced Feature Register
UART_LCR                *       &00C    ; Line Control Register
UART_MCR                *       &010    ; Modem Control Register
UART_XON1_ADDR1         *       &010
UART_LSR                *       &014    ; Line Status Register
UART_XON2_ADDR2         *       &014
UART_TCR                *       &018    ; Transmission Control Register
UART_XOFF1              *       &018
UART_MSR                *       &018    ; Modem Status Register
UART_SPR                *       &01C    ; ScratchPad Register
UART_TLR                *       &01C    ; Trigger Level Register
UART_XOFF2              *       &01C
UART_MDR1               *       &020    ; Mode Definition Register 1
UART_MDR2               *       &024    ; Mode Definition Register 2
UART_SFLSR              *       &028    ; Status FIFO Line Status Register
UART_TXFLL              *       &028    ; Transmit Frame Length register Low
UART_RESUME             *       &02C
UART_TXFLH              *       &02C    ; Transmit Frame Length register High
UART_SFREGL             *       &030    ; Status FIFO Register Low
UART_RXFLL              *       &030    ; Received Frame Length register Low
UART_SFREGH             *       &034    ; Status FIFO Register High
UART_RXFLH              *       &034    ; Received Frame Length register High
UART_BLR                *       &038
UART_UASR               *       &038    ; UART Autobauding Status Register
UART_ACREG              *       &03C    ; Auxiliary Control Register
UART_SCR                *       &040    ; Supplementary Control Register
UART_SSR                *       &044    ; Supplementary Status Register
UART_EBLR               *       &048
UART_MVR                *       &050    ; Module Version Register
UART_SYSC               *       &054    ; System Configuration Register
UART_SYSS               *       &058    ; System Status Register
UART_WER                *       &05C    ; Wake-up Enable Register
UART_CFPS               *       &060    ; Carrier Frequency Prescaler
UART_RXFIFO_LVL         *       &064
UART_TXFIFO_LVL         *       &068
UART_IER2               *       &06C
UART_ISR2               *       &070
UART_FREQ_SEL           *       &074
UART_MDR3               *       &080    ; Mode Definition Register 3
UART_TX_DMA_THRESHOLD   *       &084

; bits in UART_IER
UART_IER_RHR_IT                 *       (1 << 0)
UART_IER_THR_IT                 *       (1 << 1)
UART_IER_LINE_STS_IT            *       (1 << 2)
UART_IER_MODEM_STS_IT           *       (1 << 3)
UART_IER_SLEEP_MODE             *       (1 << 4)
UART_IER_XOFF_IT                *       (1 << 5)
UART_IER_RTS_IT                 *       (1 << 6)
UART_IER_CTS_IT                 *       (1 << 7)

; bits in UART_IIR
UART_IIR_IT_PENDING             *       (1 << 0)
UART_IIR_IT_TYPE                *       (31 << 1)
UART_IIR_IT_TYPE_MODEM          *       ( 0 << 1)
UART_IIR_IT_TYPE_THR            *       ( 1 << 1)
UART_IIR_IT_TYPE_RHR            *       ( 2 << 1)
UART_IIR_IT_TYPE_RLSE           *       ( 3 << 1)       ; Receiver Line Status Error
UART_IIR_IT_TYPE_RXTO           *       ( 6 << 1)       ; RX Time-Out
UART_IIR_IT_TYPE_XOFF           *       ( 8 << 1)
UART_IIR_IT_TYPE_CTS_RTS_DSR    *       (16 << 1)
UART_IIR_FCR_MIRROR             *       (3 << 6)

; bits in UART_FCR
UART_FCR_FIFO_EN                *       (1 << 0)
UART_FCR_RX_FIFO_CLEAR          *       (1 << 1)
UART_FCR_TX_FIFO_CLEAR          *       (1 << 2)
UART_FCR_DMA_MODE               *       (1 << 3)
UART_FCR_TX_FIFO_TRIG           *       (3 << 4)
UART_FCR_TX_FIFO_TRIG_8         *       (0 << 4)
UART_FCR_TX_FIFO_TRIG_16        *       (1 << 4)
UART_FCR_TX_FIFO_TRIG_32        *       (2 << 4)
UART_FCR_TX_FIFO_TRIG_56        *       (3 << 4)
UART_FCR_RX_FIFO_TRIG           *       (3 << 6)
UART_FCR_RX_FIFO_TRIG_8         *       (0 << 6)
UART_FCR_RX_FIFO_TRIG_16        *       (1 << 6)
UART_FCR_RX_FIFO_TRIG_56        *       (2 << 6)
UART_FCR_RX_FIFO_TRIG_60        *       (3 << 6)

; bits in UART_LCR
UART_LCR_CHAR_LENGTH            *       (3 << 0)
UART_LCR_CHAR_LENGTH_5          *       (0 << 0)
UART_LCR_CHAR_LENGTH_6          *       (1 << 0)
UART_LCR_CHAR_LENGTH_7          *       (2 << 0)
UART_LCR_CHAR_LENGTH_8          *       (3 << 0)
UART_LCR_NB_STOP                *       (1 << 2)
UART_LCR_PARITY_EN              *       (1 << 3)
UART_LCR_PARITY_TYPE1           *       (1 << 4)
UART_LCR_PARITY_TYPE2           *       (1 << 5)
UART_LCR_BREAK_EN               *       (1 << 6)
UART_LCR_DIV_EN                 *       (1 << 7)

; bits in UART_LSR
UART_LSR_RX_FIFO_E              *       (1 << 0)
UART_LSR_RX_OE                  *       (1 << 1)
UART_LSR_RX_PE                  *       (1 << 2)
UART_LSR_RX_FE                  *       (1 << 3)
UART_LSR_RX_BI                  *       (1 << 4)
UART_LSR_TX_FIFO_E              *       (1 << 5)
UART_LSR_TX_SR_E                *       (1 << 6)
UART_LSR_RX_FIFO_STS            *       (1 << 7)

; bits in UART_MCR
UART_MCR_DTR                    *       (1 << 0)
UART_MCR_RTS                    *       (1 << 1)
UART_MCR_RI_STS_CH              *       (1 << 2) ; only used in loopback mode
UART_MCR_CD_STS_CH              *       (1 << 3) ; only used in loopback mode
UART_MCR_LOOPBACK_EN            *       (1 << 4)
UART_MCR_XON_EN                 *       (1 << 5)
UART_MCR_TCR_TLR                *       (1 << 6)

; bits in UART_MSR
UART_MSR_CTS_STS                *       (1 << 0)
UART_MSR_DSR_STS                *       (1 << 1)
UART_MSR_RI_STS                 *       (1 << 2)
UART_MSR_DCD_STS                *       (1 << 3)
UART_MSR_NCTS_STS               *       (1 << 4)
UART_MSR_NDSR_STS               *       (1 << 5)
UART_MSR_NRI_STS                *       (1 << 6)
UART_MSR_NCD_STS                *       (1 << 7)

; bits in UART_MDR1
UART_MDR1_MODE_SELECT           *       (7 << 0)
UART_MDR1_MODE_SELECT_UART_16X  *       (0 << 0)
UART_MDR1_MODE_SELECT_SIR       *       (1 << 0)
UART_MDR1_MODE_SELECT_UART_AB   *       (2 << 0)
UART_MDR1_MODE_SELECT_UART_13X  *       (3 << 0)
UART_MDR1_MODE_SELECT_MIR       *       (4 << 0)
UART_MDR1_MODE_SELECT_FIR       *       (5 << 0)
UART_MDR1_MODE_SELECT_CIR       *       (6 << 0)
UART_MDR1_MODE_SELECT_DISABLE   *       (7 << 0)
UART_MDR1_IR_SLEEP              *       (1 << 3)
UART_MDR1_SET_TXIR              *       (1 << 4)
UART_MDR1_SCT                   *       (1 << 5)
UART_MDR1_SIP_MODE              *       (1 << 6)
UART_MDR1_FRAME_END_MODE        *       (1 << 7)

; bits in UART_SYSC (system configuration register)
UART_SYSC_AUTOIDLE              *       (1 << 0)
UART_SYSC_SOFTRESET             *       (1 << 1)
UART_SYSC_ENWAKEUP              *       (1 << 2)
UART_SYSC_IDLEMODE_FORCE        *       (0 << 3) ; Force idle mode
UART_SYSC_IDLEMODE_NONE         *       (1 << 3) ; No idle mode
UART_SYSC_IDLEMODE_SMART        *       (2 << 3) ; Smart idle
UART_SYSC_IDLEMODE_SMARTWUP     *       (3 << 3) ; Smart idle Wakeup

; bits in UART_SYSS (system status register)
UART_SYSS_RDONE                 *       (1 << 0) ; Reset done bit


UARTCLK         *       48000000 ; CORE_48M_FCLK

UART1_IRQ       *       OMAP44XX_IRQ_UART1
UART2_IRQ       *       OMAP44XX_IRQ_UART2
UART3_IRQ       *       OMAP44XX_IRQ_UART3
UART4_IRQ       *       OMAP44XX_IRQ_UART4


        ] ; __HAL_UART_HDR__

        END
@


1.3
log
@Bulk expand of tabs.
Helps to make tracking changes between OMAP3 and OMAP4 less eye watering, but otherwise functionally the same as 0.06.

Version 0.07. Tagged as 'OMAP4-0_07'
@
text
@d20 1
a20 1
        GET     hdr.irqs44xx
@


1.2
log
@Update to OMAP4 HAL.
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.Audio
    added further definitions for TWL6040 audio chip
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.SDMA
    added further register descriptions according OMAP4 TRM
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.UART
    added further register descriptions according OMAP4 TRM
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.omap4430
    added definitions for OMAP4460 (Panda ES)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.board
    adjusted max pixel-clock rate
    order of UART entries changed
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Boot
    don't reset debug UART
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Top
    modifications according to OMAP3 version
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.debug
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.UART
    changes according to hdr.UART changes; HAL_UARTModemControl
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.RAM
    use definitions from hdr.SDMA
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.SDMA
    use definitions from hdr.SDMA
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Video
    added code to VideoDevice_Activate (enable DSS power)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.omap4430
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.SDMA
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Audio
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.SDMA
    changes for working sound support

Submissions from Willi Theiss. Compiles, but not tested here.

Version 0.05. Tagged as 'OMAP4-0_05'
@
text
@d17 2
a18 2
	[	:LNOT: :DEF: __HAL_UART_HDR__
	GBLL	__HAL_UART_HDR__
d20 1
a20 1
	GET	hdr.irqs44xx
d22 47
a68 47
UART_THR		*	&000	; Transmit Holding Register
UART_RHR		*	&000	; Receiver Holding Register
UART_DLL		*	&000	; Divisor Latch Low byte
UART_IER		*	&004	; Interrupt Enable Register
UART_DLH		*	&004	; Divisor Latch High byte
UART_IIR		*	&008	; Interrupt Identification Register
UART_FCR		*	&008	; FIFO Control Register
UART_EFR		*	&008	; Enhanced Feature Register
UART_LCR		*	&00C	; Line Control Register
UART_MCR		*	&010	; Modem Control Register
UART_XON1_ADDR1		*	&010
UART_LSR		*	&014	; Line Status Register
UART_XON2_ADDR2		*	&014
UART_TCR		*	&018	; Transmission Control Register
UART_XOFF1		*	&018
UART_MSR		*	&018	; Modem Status Register
UART_SPR		*	&01C	; ScratchPad Register
UART_TLR		*	&01C	; Trigger Level Register
UART_XOFF2		*	&01C
UART_MDR1		*	&020	; Mode Definition Register 1
UART_MDR2		*	&024	; Mode Definition Register 2
UART_SFLSR		*	&028	; Status FIFO Line Status Register
UART_TXFLL		*	&028	; Transmit Frame Length register Low
UART_RESUME		*	&02C
UART_TXFLH		*	&02C	; Transmit Frame Length register High
UART_SFREGL		*	&030	; Status FIFO Register Low
UART_RXFLL		*	&030	; Received Frame Length register Low
UART_SFREGH		*	&034	; Status FIFO Register High
UART_RXFLH		*	&034	; Received Frame Length register High
UART_BLR		*	&038
UART_UASR		*	&038	; UART Autobauding Status Register
UART_ACREG		*	&03C	; Auxiliary Control Register
UART_SCR		*	&040	; Supplementary Control Register
UART_SSR		*	&044	; Supplementary Status Register
UART_EBLR		*	&048
UART_MVR		*	&050	; Module Version Register
UART_SYSC		*	&054	; System Configuration Register
UART_SYSS		*	&058	; System Status Register
UART_WER		*	&05C	; Wake-up Enable Register
UART_CFPS		*	&060	; Carrier Frequency Prescaler
UART_RXFIFO_LVL		*	&064
UART_TXFIFO_LVL		*	&068
UART_IER2		*	&06C
UART_ISR2		*	&070
UART_FREQ_SEL		*	&074
UART_MDR3		*	&080	; Mode Definition Register 3
UART_TX_DMA_THRESHOLD	*	&084
d71 8
a78 8
UART_IER_RHR_IT			*	(1 << 0)
UART_IER_THR_IT			*	(1 << 1)
UART_IER_LINE_STS_IT		*	(1 << 2)
UART_IER_MODEM_STS_IT		*	(1 << 3)
UART_IER_SLEEP_MODE		*	(1 << 4)
UART_IER_XOFF_IT		*	(1 << 5)
UART_IER_RTS_IT			*	(1 << 6)
UART_IER_CTS_IT			*	(1 << 7)
d81 10
a90 10
UART_IIR_IT_PENDING		*	(1 << 0)
UART_IIR_IT_TYPE		*	(31 << 1)
UART_IIR_IT_TYPE_MODEM		*	( 0 << 1)
UART_IIR_IT_TYPE_THR		*	( 1 << 1)
UART_IIR_IT_TYPE_RHR		*	( 2 << 1)
UART_IIR_IT_TYPE_RLSE		*	( 3 << 1)	; Receiver Line Status Error
UART_IIR_IT_TYPE_RXTO		*	( 6 << 1)	; RX Time-Out
UART_IIR_IT_TYPE_XOFF		*	( 8 << 1)
UART_IIR_IT_TYPE_CTS_RTS_DSR	*	(16 << 1)
UART_IIR_FCR_MIRROR		*	(3 << 6)
d93 14
a106 14
UART_FCR_FIFO_EN		*	(1 << 0)
UART_FCR_RX_FIFO_CLEAR		*	(1 << 1)
UART_FCR_TX_FIFO_CLEAR		*	(1 << 2)
UART_FCR_DMA_MODE		*	(1 << 3)
UART_FCR_TX_FIFO_TRIG		*	(3 << 4)
UART_FCR_TX_FIFO_TRIG_8		*	(0 << 4)
UART_FCR_TX_FIFO_TRIG_16	*	(1 << 4)
UART_FCR_TX_FIFO_TRIG_32	*	(2 << 4)
UART_FCR_TX_FIFO_TRIG_56	*	(3 << 4)
UART_FCR_RX_FIFO_TRIG		*	(3 << 6)
UART_FCR_RX_FIFO_TRIG_8		*	(0 << 6)
UART_FCR_RX_FIFO_TRIG_16	*	(1 << 6)
UART_FCR_RX_FIFO_TRIG_56	*	(2 << 6)
UART_FCR_RX_FIFO_TRIG_60	*	(3 << 6)
d109 11
a119 11
UART_LCR_CHAR_LENGTH		*	(3 << 0)
UART_LCR_CHAR_LENGTH_5		*	(0 << 0)
UART_LCR_CHAR_LENGTH_6		*	(1 << 0)
UART_LCR_CHAR_LENGTH_7		*	(2 << 0)
UART_LCR_CHAR_LENGTH_8		*	(3 << 0)
UART_LCR_NB_STOP		*	(1 << 2)
UART_LCR_PARITY_EN		*	(1 << 3)
UART_LCR_PARITY_TYPE1		*	(1 << 4)
UART_LCR_PARITY_TYPE2		*	(1 << 5)
UART_LCR_BREAK_EN		*	(1 << 6)
UART_LCR_DIV_EN			*	(1 << 7)
d122 8
a129 8
UART_LSR_RX_FIFO_E		*	(1 << 0)
UART_LSR_RX_OE			*	(1 << 1)
UART_LSR_RX_PE			*	(1 << 2)
UART_LSR_RX_FE			*	(1 << 3)
UART_LSR_RX_BI			*	(1 << 4)
UART_LSR_TX_FIFO_E		*	(1 << 5)
UART_LSR_TX_SR_E		*	(1 << 6)
UART_LSR_RX_FIFO_STS		*	(1 << 7)
d132 7
a138 7
UART_MCR_DTR			*	(1 << 0)
UART_MCR_RTS			*	(1 << 1)
UART_MCR_RI_STS_CH		*	(1 << 2) ; only used in loopback mode
UART_MCR_CD_STS_CH		*	(1 << 3) ; only used in loopback mode
UART_MCR_LOOPBACK_EN		*	(1 << 4)
UART_MCR_XON_EN			*	(1 << 5)
UART_MCR_TCR_TLR		*	(1 << 6)
d141 8
a148 8
UART_MSR_CTS_STS		*	(1 << 0)
UART_MSR_DSR_STS		*	(1 << 1)
UART_MSR_RI_STS			*	(1 << 2)
UART_MSR_DCD_STS		*	(1 << 3)
UART_MSR_NCTS_STS		*	(1 << 4)
UART_MSR_NDSR_STS		*	(1 << 5)
UART_MSR_NRI_STS		*	(1 << 6)
UART_MSR_NCD_STS		*	(1 << 7)
d151 14
a164 14
UART_MDR1_MODE_SELECT		*	(7 << 0)
UART_MDR1_MODE_SELECT_UART_16X	*	(0 << 0)
UART_MDR1_MODE_SELECT_SIR	*	(1 << 0)
UART_MDR1_MODE_SELECT_UART_AB	*	(2 << 0)
UART_MDR1_MODE_SELECT_UART_13X	*	(3 << 0)
UART_MDR1_MODE_SELECT_MIR	*	(4 << 0)
UART_MDR1_MODE_SELECT_FIR	*	(5 << 0)
UART_MDR1_MODE_SELECT_CIR	*	(6 << 0)
UART_MDR1_MODE_SELECT_DISABLE	*	(7 << 0)
UART_MDR1_IR_SLEEP		*	(1 << 3)
UART_MDR1_SET_TXIR		*	(1 << 4)
UART_MDR1_SCT			*	(1 << 5)
UART_MDR1_SIP_MODE		*	(1 << 6)
UART_MDR1_FRAME_END_MODE	*	(1 << 7)
d167 7
a173 7
UART_SYSC_AUTOIDLE		*	(1 << 0)
UART_SYSC_SOFTRESET		*	(1 << 1)
UART_SYSC_ENWAKEUP		*	(1 << 2)
UART_SYSC_IDLEMODE_FORCE	*	(0 << 3) ; Force idle mode
UART_SYSC_IDLEMODE_NONE		*	(1 << 3) ; No idle mode
UART_SYSC_IDLEMODE_SMART	*	(2 << 3) ; Smart idle
UART_SYSC_IDLEMODE_SMARTWUP	*	(3 << 3) ; Smart idle Wakeup
d176 1
a176 1
UART_SYSS_RDONE			*	(1 << 0) ; Reset done bit
d179 1
a179 1
UARTCLK		*	48000000 ; CORE_48M_FCLK
d181 4
a184 4
UART1_IRQ	*	OMAP44XX_IRQ_UART1
UART2_IRQ	*	OMAP44XX_IRQ_UART2
UART3_IRQ	*	OMAP44XX_IRQ_UART3
UART4_IRQ	*	OMAP44XX_IRQ_UART4
d187 1
a187 1
	] ; __HAL_UART_HDR__
d189 1
a189 1
	END
@


1.1
log
@Initial revision
@
text
@d22 10
a31 10
UART_THR		*	&000
UART_RBR		*	&000
UART_DLL		*	&000
UART_IER		*	&004
UART_DLM		*	&004
UART_IIR		*	&008
UART_FCR		*	&008
UART_EFR		*	&008
UART_LCR		*	&00C
UART_MCR		*	&010
d33 1
a33 1
UART_LSR		*	&014
d35 1
a35 1
UART_TCR		*	&018
d37 3
a39 3
UART_MSR		*	&018
UART_SPR		*	&01C
UART_TLR		*	&01C
d41 4
a44 4
UART_MDR1		*	&020
UART_MDR2		*	&024
UART_SFLSR		*	&028
UART_TXFLL		*	&028
d46 5
a50 5
UART_TXFLH		*	&02C
UART_SFREGL		*	&030
UART_RXFLL		*	&030
UART_SFREGH		*	&034
UART_RXFLH		*	&034
d52 4
a55 4
UART_UASR		*	&038
UART_ACREG		*	&03C
UART_SCR		*	&040
UART_SSR		*	&044
d57 5
a61 5
UART_MVR		*	&050
UART_SYSC		*	&054
UART_SYSS		*	&058
UART_WER		*	&05C
UART_CFPS		*	&060
d67 1
a67 1
UART_MDR3		*	&080
d70 95
a164 58
; IER
UART_IER_ERBI		*	2_00000001
UART_IER_ETBEI		*	2_00000010
UART_IER_ELSI		*	2_00000100
UART_IER_EDSSI		*	2_00001000

; FCR
UART_FCR_FIFOEN		*	2_00000001
UART_FCR_FIFORSTRX	*	2_00000010
UART_FCR_FIFORSTTX	*	2_00000100
UART_FCR_DMA		*	2_00001000
UART_FCR_FIFO64		*	2_00100000
UART_FCR_FIFOTHR	*	2_11000000
UART_FCR_FIFOTHR_8	*	2_00000000
UART_FCR_FIFOTHR_16	*	2_01000000
UART_FCR_FIFOTHR_56	*	2_10000000
UART_FCR_FIFOTHR_60	*	2_11000000

; LCR
UART_LCR_WLS		*	2_00000011
UART_LCR_WLS_5		*	2_00000000
UART_LCR_WLS_6		*	2_00000001
UART_LCR_WLS_7		*	2_00000010
UART_LCR_WLS_8		*	2_00000011
UART_LCR_STP		*	2_00000100
UART_LCR_PEN		*	2_00001000
UART_LCR_EPS		*	2_00010000
UART_LCR_SPA		*	2_00100000
UART_LCR_BCR		*	2_01000000
UART_LCR_DLAB		*	2_10000000

; LSR
UART_LSR_DR		*	2_00000001
UART_LSR_OE		*	2_00000010
UART_LSR_PE		*	2_00000100
UART_LSR_FE		*	2_00001000
UART_LSR_BI		*	2_00010000
UART_LSR_THRE		*	2_00100000
UART_LSR_TEMPT		*	2_01000000

; MCR
UART_MCR_DTR		*	2_00000001
UART_MCR_RTS		*	2_00000010
UART_MCR_RI_STS_CH	*	2_00000100 ; only used in loopback mode
UART_MCR_CD_STS_CH	*	2_00001000 ; only used in loopback mode
UART_MCR_LOOPBACK_EN	*	2_00010000
UART_MCR_XON_EN		*	2_00100000
UART_MCR_TCR_TLR	*	2_01000000

; MSR
UART_MSR_DCTS		*	2_00000001
UART_MSR_DDSR		*	2_00000010
UART_MSR_TERI		*	2_00000100
UART_MSR_DDCD		*	2_00001000
UART_MSR_CTS		*	2_00010000
UART_MSR_DSR		*	2_00100000
UART_MSR_RI		*	2_01000000
UART_MSR_DCD		*	2_10000000
d166 1
a166 1
; UART_SYSC (system configuration register)
d175 1
a175 1
; UART_SYSS (system status register)
@


1.1.1.1
log
@  Initial import of OMAP4 HAL
Detail:
  Target platform is the Pandaboard, based on the TI OMAP4 SoC.
  Port is not yet complete, in particular, audio is not yet working.
Admin:
  Submission from Willi Theiß
@
text
@@
