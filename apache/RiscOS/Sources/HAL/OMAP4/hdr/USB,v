head	1.4;
access;
symbols
	OMAP4-0_60:1.4
	OMAP4-0_59-1_52_2_3:1.4
	OMAP4-0_59:1.4
	OMAP4-0_58:1.4
	OMAP4-0_57:1.4
	OMAP4-0_56:1.4
	OMAP4-0_55:1.4
	OMAP4-0_54-1_52_2_2:1.4
	OMAP4-0_54:1.4
	OMAP4-0_53:1.4
	OMAP4-0_52-1_52_2_1:1.4
	SMP:1.4.0.2
	SMP_bp:1.4
	OMAP4-0_52:1.4
	OMAP4-0_51:1.4
	OMAP4-0_50:1.4
	OMAP4-0_49:1.4
	OMAP4-0_48:1.4
	OMAP4-0_47:1.4
	OMAP4-0_46:1.4
	OMAP4-0_45:1.4
	OMAP4-0_44:1.4
	OMAP4-0_43:1.4
	OMAP4-0_42:1.4
	OMAP4-0_41:1.4
	OMAP4-0_40:1.4
	OMAP4-0_39:1.4
	OMAP4-0_38:1.4
	OMAP4-0_37:1.4
	OMAP4-0_36:1.3
	OMAP4-0_35:1.3
	OMAP4-0_34:1.3
	OMAP4-0_33:1.3
	OMAP4-0_32:1.3
	OMAP4-0_31:1.3
	OMAP4-0_30:1.3
	OMAP4-0_29:1.3
	OMAP4-0_28:1.3
	OMAP4-0_27:1.3
	OMAP4-0_26:1.3
	OMAP4-0_25:1.3
	OMAP4-0_24:1.3
	OMAP4-0_23:1.3
	OMAP4-0_22:1.3
	OMAP4-0_21:1.3
	OMAP4-0_20:1.3
	OMAP4-0_19:1.3
	OMAP4-0_18:1.3
	OMAP4-0_17:1.3
	OMAP4-0_16:1.3
	OMAP4-0_15:1.3
	OMAP4-0_14:1.3
	OMAP4-0_13:1.2
	OMAP4-0_12:1.2
	OMAP4-0_11:1.2
	OMAP4-0_10:1.2
	OMAP4-0_09:1.2
	OMAP4-0_08:1.2
	OMAP4-0_07:1.2
	OMAP4-0_06:1.1.1.1
	OMAP4-0_05:1.1.1.1
	OMAP4-0_04:1.1.1.1
	OMAP4-0_03:1.1.1.1
	OMAP4-0_02:1.1.1.1
	OMAP4-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.10.25.17.47.11;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	eUvY0kdCylOiMBVx;

1.3
date	2013.04.07.08.13.09;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	pJ3reWwimQfmNOKw;

1.2
date	2012.03.25.11.42.54;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	4FjnaYBzkPTA6gYv;

1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	M3eV6gzJuoHHMezv;

1.1.1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches;
next	;
commitid	M3eV6gzJuoHHMezv;


desc
@@


1.4
log
@Don't bother providing even dummy implementations of USB port and overcurrent functions
As the flag bit in HAL_USBControllerInfo isn't set, no need to provide them.
Use symbols from Hdr:HALEntries when building the USB info.
No need for AASMFLAGS in the makefile.
Built, but not tested.

Version 0.37. Tagged as 'OMAP4-0_37'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_USB_HDR__
        GBLL    __HAL_USB_HDR__

; USBTLL registers - relative to L4_USBTLL

USBTLL_REVISION                 *       &0000
USBTLL_HWINFO                   *       &0004
USBTLL_SYSCONFIG                *       &0010
USBTLL_SYSSTATUS                *       &0014
USBTLL_IRQSTATUS                *       &0018
USBTLL_IRQENABLE                *       &001C
TLL_SHARED_CONF                 *       &0030
TLL_CHANNEL_CONF_0              *       &0040
TLL_CHANNEL_CONF_1              *       &0044
USBTLL_SAR_CNTX_0               *       &0400
USBTLL_SAR_CNTX_1               *       &0404
USBTLL_SAR_CNTX_2               *       &0408
USBTLL_SAR_CNTX_3               *       &040C
USBTLL_SAR_CNTX_4               *       &0410
USBTLL_SAR_CNTX_5               *       &0414
USBTLL_SAR_CNTX_6               *       &0418

; ULPI register groups - relative to L4_USBTLL
ULPI_BASE                       *       &0800
ULPI_SIZE                       *       &0100
ULPI_NUM                        *       2

ULPI_VENDOR_ID_LO               *       &0000 ; All registers are byte sized!
ULPI_VENDOR_ID_HI               *       &0001
ULPI_PRODUCT_ID_LO              *       &0002
ULPI_PRODUCT_ID_HI              *       &0003
ULPI_FUNCTION_CTRL              *       &0004
ULPI_FUNCTION_CTRL_SET          *       &0005
ULPI_FUNCTION_CTRL_CLR          *       &0006
ULPI_INTERFACE_CTRL             *       &0007
ULPI_INTERFACE_CTRL_SET         *       &0008
ULPI_INTERFACE_CTRL_CLR         *       &0009
ULPI_OTG_CTRL                   *       &000A
ULPI_OTG_CTRL_SET               *       &000B
ULPI_OTG_CTRL_CLR               *       &000C
ULPI_USB_INT_EN_RISE            *       &000D
ULPI_USB_INT_EN_RISE_SET        *       &000E
ULPI_USB_INT_EN_RISE_CLR        *       &000F
ULPI_USB_INT_EN_FALL            *       &0010
ULPI_USB_INT_EN_FALL_SET        *       &0011
ULPI_USB_INT_EN_FALL_CLR        *       &0012
ULPI_USB_INT_STATUS             *       &0013
ULPI_USB_INT_LATCH              *       &0014
ULPI_DEBUG                      *       &0015
ULPI_SCRATCH_REGISTER           *       &0016
ULPI_SCRATCH_REGISTER_SE        *       &0017
ULPI_SCRATCH_REGISTER_CL        *       &0018
ULPI_EXTENDED_SET_ACCESS        *       &002F
ULPI_UTMI_VCONTROL_EN           *       &0030
ULPI_UTMI_VCONTROL_EN_SET       *       &0031
ULPI_UTMI_VCONTROL_EN_CLR       *       &0032
ULPI_UTMI_VCONTROL_STATUS       *       &0033
ULPI_UTMI_VCONTROL_LATCH        *       &0034
ULPI_UTMI_VSTATUS               *       &0035
ULPI_UTMI_VSTATUS_SET           *       &0036
ULPI_UTMI_VSTATUS_CLR           *       &0037
ULPI_USB_INT_LATCH_NOCLR        *       &0038
ULPI_VENDOR_INT_EN              *       &003B
ULPI_VENDOR_INT_EN_SET          *       &003C
ULPI_VENDOR_INT_EN_CLR          *       &003D
ULPI_VENDOR_INT_STATUS          *       &003E
ULPI_VENDOR_INT_LATCH           *       &003F

; USB host registers - relative to L4_USB_Host
UHH_REVISION                    *       &0000
UHH_HWINFO                      *       &0004
UHH_SYSCONFIG                   *       &0010
UHH_SYSSTATUS                   *       &0014
UHH_HOSTCONFIG                  *       &0040
UHH_DEBUG_CSR                   *       &0044
UHH_SAR_CNTX_i                  *       &0100   ; i = 0 - 383
OHCI_BASE                       *       &0800
EHCI_BASE                       *       &0C00

; OHCI registers - relative to OHCI_BASE
OHCI_HCREVISION                 *       &0000
OHCI_HCCONTROL                  *       &0004
OHCI_HCCOMANDSTATUS             *       &0008
OHCI_HCINTERRUPTSTATUS          *       &000C
OHCI_HCINTERRUPTENABLE          *       &0010
OHCI_HCINTERRUPTDISABLE         *       &0014
OHCI_HCHCCA                     *       &0018
OHCI_HCPERIODCURRENTED          *       &001C
OHCI_HCCONTROLHEADED            *       &0020
OHCI_HCCONTROLCURRENTED         *       &0024
OHCI_HCBULKHEADED               *       &0028
OHCI_HCBULKCURRENTED            *       &002C
OHCI_HCDONEHEAD                 *       &0030
OHCI_HCFMINTERVAL               *       &0034
OHCI_HCFMREMAINING              *       &0038
OHCI_HCFMNUMBER                 *       &003C
OHCI_HCPERIODICSTART            *       &0040
OHCI_HCLSTHRESHOLD              *       &0044
OHCI_HCRHDESCRIPTORA            *       &0048
OHCI_HCRHDESCRIPTORB            *       &004C
OHCI_HCRHSTATUS                 *       &0050
OHCI_HCRHPORTSTATUS_1           *       &0054
OHCI_HCRHPORTSTATUS_2           *       &0058
;OHCI_HCRHPORTSTATUS_3          *       &005C ; reserved on OMAP44xx

; EHCI registers - relative to EHCI_BASE
EHCI_HCCAPBASE                  *       &0000
EHCI_HCSPARAMS                  *       &0004
EHCI_HCCPARAMS                  *       &0008
EHCI_USBCMD                     *       &0010
EHCI_USBSTS                     *       &0014
EHCI_USBINTR                    *       &0018
EHCI_FRINDEX                    *       &001C
EHCI_CTRLDSSEGMENT              *       &0020
EHCI_PERIODICLISTBASE           *       &0024
EHCI_ASYNCLISTADDR              *       &0028
EHCI_CONFIGFLAG                 *       &0050
EHCI_PORTSC_0                   *       &0054
EHCI_PORTSC_1                   *       &0058
EHCI_PORTSC_2                   *       &005C
EHCI_INSNREG00                  *       &0090
EHCI_INSNREG01                  *       &0094
EHCI_INSNREG02                  *       &0098
EHCI_INSNREG03                  *       &009C
EHCI_INSNREG04                  *       &00A0
EHCI_INSNREG05_UTMI             *       &00A4 ; mode dependend bit fields (UTMI mode)
EHCI_INSNREG05_ULPI             *       &00A4 ; mode dependend bit fields (ULPI mode)
EHCI_INSNREG06                  *       &00A8
EHCI_INSNREG07                  *       &00AC
EHCI_INSNREG08                  *       &00B0

; OTG registers - relative to L4_USB_OTG
OTG_BASE                        *       &0400
; OTG registers - relative to OTG_BASE
OTG_REVISION                    *       &0000
OTG_SYSCONFIG                   *       &0004
OTG_SYSSTATUS                   *       &0008
OTG_INTERFSEL                   *       &000C
OTG_SIMENABLE                   *       &0010
OTG_FORCESTDBY                  *       &0014
OTG_BIGENDIAN                   *       &0018

; OCP2SCP registers - relative to L4_USBPHY
OCP2SCP_REVISION                *       &0000
OCP2SCP_SYSCONFIG               *       &0010
OCP2SCP_SYSSTATUS               *       &0014
OCP2SCP_TIMING                  *       &0018

; USBPHY registers - relative to L4_USBPHY
USBPHY_BASE                     *       &0080
; USBPHY registers - relative to USBPHY_BASE
USBPHY_TERMINATION_CONTROL      *       &0000
USBPHY_RX_CALIB                 *       &0004
USBPHY_DLLHS_2                  *       &0008
USBPHY_RX_TEST_2                *       &000C
USBPHY_TX_TEST_CHRG_DET         *       &0010
USBPHY_CHRG_DET                 *       &0014
USBPHY_PWR_CNTL                 *       &0018
USBPHY_UTMI_INTERFACE_CNTL_1    *       &001C
USBPHY_UTMI_INTERFACE_CNTL_2    *       &0020
USBPHY_BIST                     *       &0024
USBPHY_BIST_CRC                 *       &0028
USBPHY_CDR_BIST2                *       &002C
USBPHY_GPIO                     *       &0030
USBPHY_DLLHS                    *       &0034
USBPHY_USB2PHYCM_TRIM           *       &0038
USBPHY_USB2PHYCM_CONFIG         *       &003C
USBPHY_USBOTG                   *       &0040
USBPHY_AD_INTERFACE_REG1        *       &0044
USBPHY_AD_INTERFACE_REG2        *       &0048
USBPHY_AD_INTERFACE_REG3        *       &004C
USBPHY_ANA_CONFIG1              *       &0050
USBPHY_ANA_CONFIG2              *       &0054


        ] ; __HAL_USB_HDR__

        END
@


1.3
log
@Changes for OMAP4 HAL
hdr/GPIO: aligned columns
hdr/USB: added more USB related register definitions (OTG and USBPHY)
hdr/Video: global variable for preventing multiple inclusion renamed to its original
hdr/irqs44xx: interrupt numbers and naming according to latest OMAP44xx TRMs
hdr/omap4430: address correction for L4_USBPHY
s/Audio:
    changed recovering from error conditions
    disabled kludge for supporting non native samplerates (44.1 + 48k)
s/PRCM:
    removed unused function PRCM_GetFreqSel and related table
s/SDIO
    aligned columns
s/USB
    name change for OTG interrupt source

Part of a number of changes from Willi Theiss.
Build, but not tested.

Version 0.14. Tagged as 'OMAP4-0_14'
@
text
@a18 13
; usbinfo struct
                                ^       0
USBINFO_TYPE                    #       4 ; 0=OHCI, 1=EHCI, 2=MUSBMHDRC
USBINFO_FLAGS                   #       4 ; See below
USBINFO_HW                      #       4 ; EHCI/OHCI base addr
USBINFO_DEVNO                   #       4 ; IRQ number
USBINFO_SIZEOF                  #       0 ; Size of struct

USBINFO_FLAG_HAL_USBPortPower   *       1 ; Use HAL_USBPortPower
USBINFO_FLAG_HAL_USBPortStatus  *       2 ; Use HAL_USBPortStatus
USBINFO_FLAG_HAL_USBPortIRQ     *       4 ; Use HAL_USBPortIRQ
USBINFO_FLAG_32bit_Regs         *       8 ; Must use 32bit access for all registers

@


1.2
log
@Bulk expand of tabs.
Helps to make tracking changes between OMAP3 and OMAP4 less eye watering, but otherwise functionally the same as 0.06.

Version 0.07. Tagged as 'OMAP4-0_07'
@
text
@d160 43
@


1.1
log
@Initial revision
@
text
@d16 2
a17 2
	[	:LNOT: :DEF: __HAL_USB_HDR__
	GBLL	__HAL_USB_HDR__
d20 11
a30 11
				^	0
USBINFO_TYPE			#	4 ; 0=OHCI, 1=EHCI, 2=MUSBMHDRC
USBINFO_FLAGS			#	4 ; See below
USBINFO_HW			#	4 ; EHCI/OHCI base addr
USBINFO_DEVNO			#	4 ; IRQ number
USBINFO_SIZEOF			#	0 ; Size of struct

USBINFO_FLAG_HAL_USBPortPower	*	1 ; Use HAL_USBPortPower
USBINFO_FLAG_HAL_USBPortStatus	*	2 ; Use HAL_USBPortStatus
USBINFO_FLAG_HAL_USBPortIRQ	*	4 ; Use HAL_USBPortIRQ
USBINFO_FLAG_32bit_Regs		*	8 ; Must use 32bit access for all registers
d34 16
a49 16
USBTLL_REVISION			*	&0000
USBTLL_HWINFO			*	&0004
USBTLL_SYSCONFIG		*	&0010
USBTLL_SYSSTATUS		*	&0014
USBTLL_IRQSTATUS		*	&0018
USBTLL_IRQENABLE		*	&001C
TLL_SHARED_CONF			*	&0030
TLL_CHANNEL_CONF_0		*	&0040
TLL_CHANNEL_CONF_1		*	&0044
USBTLL_SAR_CNTX_0		*	&0400
USBTLL_SAR_CNTX_1		*	&0404
USBTLL_SAR_CNTX_2		*	&0408
USBTLL_SAR_CNTX_3		*	&040C
USBTLL_SAR_CNTX_4		*	&0410
USBTLL_SAR_CNTX_5		*	&0414
USBTLL_SAR_CNTX_6		*	&0418
d52 44
a95 44
ULPI_BASE			*	&0800
ULPI_SIZE			*	&0100
ULPI_NUM			*	2

ULPI_VENDOR_ID_LO		*	&0000 ; All registers are byte sized!
ULPI_VENDOR_ID_HI		*	&0001
ULPI_PRODUCT_ID_LO		*	&0002
ULPI_PRODUCT_ID_HI		*	&0003
ULPI_FUNCTION_CTRL		*	&0004
ULPI_FUNCTION_CTRL_SET		*	&0005
ULPI_FUNCTION_CTRL_CLR		*	&0006
ULPI_INTERFACE_CTRL		*	&0007
ULPI_INTERFACE_CTRL_SET 	*	&0008
ULPI_INTERFACE_CTRL_CLR 	*	&0009
ULPI_OTG_CTRL			*	&000A
ULPI_OTG_CTRL_SET		*	&000B
ULPI_OTG_CTRL_CLR		*	&000C
ULPI_USB_INT_EN_RISE		*	&000D
ULPI_USB_INT_EN_RISE_SET	*	&000E
ULPI_USB_INT_EN_RISE_CLR	*	&000F
ULPI_USB_INT_EN_FALL		*	&0010
ULPI_USB_INT_EN_FALL_SET	*	&0011
ULPI_USB_INT_EN_FALL_CLR	*	&0012
ULPI_USB_INT_STATUS		*	&0013
ULPI_USB_INT_LATCH		*	&0014
ULPI_DEBUG			*	&0015
ULPI_SCRATCH_REGISTER		*	&0016
ULPI_SCRATCH_REGISTER_SE	*	&0017
ULPI_SCRATCH_REGISTER_CL	*	&0018
ULPI_EXTENDED_SET_ACCESS	*	&002F
ULPI_UTMI_VCONTROL_EN		*	&0030
ULPI_UTMI_VCONTROL_EN_SET	*	&0031
ULPI_UTMI_VCONTROL_EN_CLR	*	&0032
ULPI_UTMI_VCONTROL_STATUS	*	&0033
ULPI_UTMI_VCONTROL_LATCH	*	&0034
ULPI_UTMI_VSTATUS		*	&0035
ULPI_UTMI_VSTATUS_SET		*	&0036
ULPI_UTMI_VSTATUS_CLR		*	&0037
ULPI_USB_INT_LATCH_NOCLR	*	&0038
ULPI_VENDOR_INT_EN		*	&003B
ULPI_VENDOR_INT_EN_SET		*	&003C
ULPI_VENDOR_INT_EN_CLR		*	&003D
ULPI_VENDOR_INT_STATUS		*	&003E
ULPI_VENDOR_INT_LATCH		*	&003F
d98 9
a106 9
UHH_REVISION			*	&0000
UHH_HWINFO			*	&0004
UHH_SYSCONFIG			*	&0010
UHH_SYSSTATUS			*	&0014
UHH_HOSTCONFIG			*	&0040
UHH_DEBUG_CSR			*	&0044
UHH_SAR_CNTX_i			*	&0100	; i = 0 - 383
OHCI_BASE			*	&0800
EHCI_BASE			*	&0C00
d109 24
a132 24
OHCI_HCREVISION			*	&0000
OHCI_HCCONTROL			*	&0004
OHCI_HCCOMANDSTATUS		*	&0008
OHCI_HCINTERRUPTSTATUS		*	&000C
OHCI_HCINTERRUPTENABLE		*	&0010
OHCI_HCINTERRUPTDISABLE 	*	&0014
OHCI_HCHCCA			*	&0018
OHCI_HCPERIODCURRENTED		*	&001C
OHCI_HCCONTROLHEADED		*	&0020
OHCI_HCCONTROLCURRENTED 	*	&0024
OHCI_HCBULKHEADED		*	&0028
OHCI_HCBULKCURRENTED		*	&002C
OHCI_HCDONEHEAD			*	&0030
OHCI_HCFMINTERVAL		*	&0034
OHCI_HCFMREMAINING		*	&0038
OHCI_HCFMNUMBER			*	&003C
OHCI_HCPERIODICSTART		*	&0040
OHCI_HCLSTHRESHOLD		*	&0044
OHCI_HCRHDESCRIPTORA		*	&0048
OHCI_HCRHDESCRIPTORB		*	&004C
OHCI_HCRHSTATUS			*	&0050
OHCI_HCRHPORTSTATUS_1		*	&0054
OHCI_HCRHPORTSTATUS_2		*	&0058
;OHCI_HCRHPORTSTATUS_3		*	&005C ; reserved on OMAP44xx
d135 24
a158 24
EHCI_HCCAPBASE			*	&0000
EHCI_HCSPARAMS			*	&0004
EHCI_HCCPARAMS			*	&0008
EHCI_USBCMD			*	&0010
EHCI_USBSTS			*	&0014
EHCI_USBINTR			*	&0018
EHCI_FRINDEX			*	&001C
EHCI_CTRLDSSEGMENT		*	&0020
EHCI_PERIODICLISTBASE		*	&0024
EHCI_ASYNCLISTADDR		*	&0028
EHCI_CONFIGFLAG			*	&0050
EHCI_PORTSC_0			*	&0054
EHCI_PORTSC_1			*	&0058
EHCI_PORTSC_2			*	&005C
EHCI_INSNREG00			*	&0090
EHCI_INSNREG01			*	&0094
EHCI_INSNREG02			*	&0098
EHCI_INSNREG03			*	&009C
EHCI_INSNREG04			*	&00A0
EHCI_INSNREG05_UTMI		*	&00A4 ; mode dependend bit fields (UTMI mode)
EHCI_INSNREG05_ULPI		*	&00A4 ; mode dependend bit fields (ULPI mode)
EHCI_INSNREG06			*	&00A8
EHCI_INSNREG07			*	&00AC
EHCI_INSNREG08			*	&00B0
d161 1
a161 1
	] ; __HAL_USB_HDR__
d163 1
a163 1
	END
@


1.1.1.1
log
@  Initial import of OMAP4 HAL
Detail:
  Target platform is the Pandaboard, based on the TI OMAP4 SoC.
  Port is not yet complete, in particular, audio is not yet working.
Admin:
  Submission from Willi Theiß
@
text
@@
