head	1.4;
access;
symbols
	OMAP4-0_60:1.4
	OMAP4-0_59-1_52_2_3:1.4
	OMAP4-0_59:1.4
	OMAP4-0_58:1.4
	OMAP4-0_57:1.4
	OMAP4-0_56:1.4
	OMAP4-0_55:1.4
	OMAP4-0_54-1_52_2_2:1.4
	OMAP4-0_54:1.4
	OMAP4-0_53:1.4
	OMAP4-0_52-1_52_2_1:1.4
	SMP:1.4.0.2
	SMP_bp:1.4
	OMAP4-0_52:1.4
	OMAP4-0_51:1.4
	OMAP4-0_50:1.4
	OMAP4-0_49:1.4
	OMAP4-0_48:1.4
	OMAP4-0_47:1.4
	OMAP4-0_46:1.4
	OMAP4-0_45:1.4
	OMAP4-0_44:1.4
	OMAP4-0_43:1.4
	OMAP4-0_42:1.4
	OMAP4-0_41:1.4
	OMAP4-0_40:1.4
	OMAP4-0_39:1.4
	OMAP4-0_38:1.4
	OMAP4-0_37:1.4
	OMAP4-0_36:1.4
	OMAP4-0_35:1.4
	OMAP4-0_34:1.4
	OMAP4-0_33:1.4
	OMAP4-0_32:1.4
	OMAP4-0_31:1.4
	OMAP4-0_30:1.4
	OMAP4-0_29:1.4
	OMAP4-0_28:1.4
	OMAP4-0_27:1.4
	OMAP4-0_26:1.4
	OMAP4-0_25:1.4
	OMAP4-0_24:1.4
	OMAP4-0_23:1.4
	OMAP4-0_22:1.4
	OMAP4-0_21:1.3
	OMAP4-0_20:1.3
	OMAP4-0_19:1.3
	OMAP4-0_18:1.3
	OMAP4-0_17:1.3
	OMAP4-0_16:1.3
	OMAP4-0_15:1.3
	OMAP4-0_14:1.3
	OMAP4-0_13:1.3
	OMAP4-0_12:1.3
	OMAP4-0_11:1.3
	OMAP4-0_10:1.3
	OMAP4-0_09:1.3
	OMAP4-0_08:1.3
	OMAP4-0_07:1.3
	OMAP4-0_06:1.2
	OMAP4-0_05:1.2
	OMAP4-0_04:1.1.1.1
	OMAP4-0_03:1.1.1.1
	OMAP4-0_02:1.1.1.1
	OMAP4-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.10.30.00.41.28;	author bavison;	state Exp;
branches;
next	1.3;
commitid	Qv6dpkuXjCtQFfbx;

1.3
date	2012.03.25.11.42.53;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	4FjnaYBzkPTA6gYv;

1.2
date	2012.02.11.17.48.06;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	W3PfhFs2h9uBvLSv;

1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	M3eV6gzJuoHHMezv;

1.1.1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches;
next	;
commitid	M3eV6gzJuoHHMezv;


desc
@@


1.4
log
@  Replaced header file for licensing reasons
Detail:
  omap4_reg.h taken from FreeBSD projects/armv6/sys/arm/ti/omap4, trimmed to
  only include interrupt definitions, then updated so that symbol names and
  comments match Table 17.2 of the OMAP4460 TRM (SWPU235F) more closely - now
  the symbol names only differ in the prefix, and the absence of "IRQ"
  mid-string.  This was then translated very literally into objasm syntax to
  create hdr.omap4_reg, and used in place of hdr.irqs44xx.
Admin:
  Builds OK

Version 0.22. Tagged as 'OMAP4-0_22'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_SDMA_HDR__
        GBLL    __HAL_SDMA_HDR__

        GET     hdr.omap4_reg

        GET     hdr:DMADevice

; SDMA registers - relative to L4_sDMA

DMA4_REVISION           * &000
DMA4_IRQSTATUS_L0       * &008
DMA4_IRQSTATUS_L1       * &00C
DMA4_IRQSTATUS_L2       * &010
DMA4_IRQSTATUS_L3       * &014
DMA4_IRQENABLE_L0       * &018
DMA4_IRQENABLE_L1       * &01C
DMA4_IRQENABLE_L2       * &020
DMA4_IRQENABLE_L3       * &024
DMA4_SYSSTATUS          * &028
DMA4_OCP_SYSCONFIG      * &02C
DMA4_CAPS_0             * &064
DMA4_CAPS_2             * &06C
DMA4_CAPS_3             * &070
DMA4_CAPS_4             * &074
DMA4_GCR                * &078
DMA4_i                  * &080 ; Base of per-channel registers

; Per-channel registers:
DMA4_CCRi               * &00 ; Channel Control Register
DMA4_CLNK_CTRLi         * &04 ; Channel Link Control Register
DMA4_CICRi              * &08 ; Channel Interrupt Control Register
DMA4_CSRi               * &0C ; Channel Status Register
DMA4_CSDPi              * &10 ; Channel Source Destination Parameters
DMA4_CENi               * &14 ; Channel Element Number
DMA4_CFNi               * &18 ; Channel Frame Number
DMA4_CSSAi              * &1C ; Channel Source Start Address
DMA4_CDSAi              * &20 ; Channel Destination Start Address
DMA4_CSEIi              * &24 ; Channel Source Element Index
DMA4_CSFIi              * &28 ; Channel Source Frame Index
DMA4_CDEIi              * &2C ; Channel Destination Element Index
DMA4_CDFIi              * &30 ; Channel Destination Frame Index
DMA4_CSACi              * &34 ; Channel Source Address Counter
DMA4_CDACi              * &38 ; Channel Destination Address Counter
DMA4_CCENi              * &3C ; Channel Current Element Number
DMA4_CCFNi              * &40 ; Channel Current Frame Number
DMA4_COLORi             * &44 ; Channel Color Key
DMA4_CDPi               * &50 ; Channel Descriptor Parameter
DMA4_CNDPi              * &54 ; Channel Next Descriptor Pointer
DMA4_CCDNi              * &58 ; Channel Current Descriptor Number

DMA4_CHANNEL_SIZE       * &060 ; Size/stride of per-channel register blocks

; bits in DMA4_SYSSTATUS
DMA4_SYSSTATUS_RESETDONE                *       (1 << 0)

; bits in DMA4_OCP_SYSCONFIG
DMA4_OCP_SYSCONFIG_AUTOIDLE             *       (1 << 0)
DMA4_OCP_SYSCONFIG_SIDLEMODE            *       (3 << 3)
DMA4_OCP_SYSCONFIG_SIDLEMODE_FORCE      *       (0 << 3)
DMA4_OCP_SYSCONFIG_SIDLEMODE_NONE       *       (1 << 3)
DMA4_OCP_SYSCONFIG_SIDLEMODE_SMART      *       (2 << 3)
DMA4_OCP_SYSCONFIG_EMUFREE              *       (1 << 5)
DMA4_OCP_SYSCONFIG_CLOCKACTIVITY        *       (3 << 8)
DMA4_OCP_SYSCONFIG_MIDLEMODE            *       (3 << 12)
DMA4_OCP_SYSCONFIG_MIDLEMODE_FORCE      *       (0 << 12)
DMA4_OCP_SYSCONFIG_MIDLEMODE_NONE       *       (1 << 12)
DMA4_OCP_SYSCONFIG_MIDLEMODE_SMART      *       (2 << 12)

; bits in DMA4_GCR
DMA4_GCR_MAX_CHANNEL_FIFO_DEPTH         *       (255 << 0)
DMA4_GCR_HI_THREAD_RESERVED             *       (  3 << 12)
DMA4_GCR_HI_LO_FIFO_BUDGET              *       (  3 << 14)
DMA4_GCR_ARBITRAION_RATE                *       (255 << 16)
DMA4_GCR_ARBITRAION_RATE_SHIFT          *       16
DMA4_GCR_CHANNEL_ID_GATE                *       (1 << 24)

; bits in Channel Control Register DMA4_CCRi
DMA4_CCR_SYNCHRO_CONTROL                *       (31 << 0)
DMA4_CCR_FS                             *       (1 << 5)
DMA4_CCR_READ_PRIORITY                  *       (1 << 6)
DMA4_CCR_ENABLE                         *       (1 << 7)
DMA4_CCR_SUSPEND_SENSITIVE              *       (1 << 8)
DMA4_CCR_RD_ACTIVE                      *       (1 << 9)
DMA4_CCR_WR_ACTIVE                      *       (1 << 10)
DMA4_CCR_SRC_AMODE                      *       (3 << 12)
DMA4_CCR_SRC_AMODE_CONST                *       (0 << 12) ; Constant Address Mode
DMA4_CCR_SRC_AMODE_POST_INC             *       (1 << 12) ; Post-Increment Address Mode
DMA4_CCR_SRC_AMODE_SINGLE_INDEX         *       (2 << 12) ; Single Index Address Mode
DMA4_CCR_SRC_AMODE_DOUBLE_INDEX         *       (3 << 12) ; Double Index Address Mode
DMA4_CCR_DST_AMODE                      *       (3 << 14)
DMA4_CCR_DST_AMODE_CONST                *       (0 << 14) ; Constant Address Mode
DMA4_CCR_DST_AMODE_POST_INC             *       (1 << 14) ; Post-Increment Address Mode
DMA4_CCR_DST_AMODE_SINGLE_INDEX         *       (2 << 14) ; Single Index Address Mode
DMA4_CCR_DST_AMODE_DOUBLE_INDEX         *       (3 << 14) ; Double Index Address Mode
DMA4_CCR_CONST_FILL_ENABLE              *       (1 << 16)
DMA4_CCR_TRANSPARENT_COPY_ENABLE        *       (1 << 17)
DMA4_CCR_BS                             *       (1 << 18)
DMA4_CCR_SYNCHRO_CONTROL_UPPER          *       (3 << 19)
DMA4_CCR_SYNCHRO_CONTROL_UPPER_SHIFT    *       19
DMA4_CCR_SUPERVISOR                     *       (1 << 22)
DMA4_CCR_PREFETCH                       *       (1 << 23)
DMA4_CCR_SEL_SRC_DST_SYNC               *       (1 << 24)
DMA4_CCR_BUFFERING_DISABLE              *       (1 << 25)
DMA4_CCR_WRITE_PRIORITY                 *       (1 << 26)

; bits in Channel Link Control Register DMA4_CLNK_CTRLi
DMA4_CLNK_CTRL_NEXTLCH_ID               *       (31 << 0)
DMA4_CLNK_CTRLENABLE_LNK                *       (1 << 15)

; bits in Channel Interrupt Control Register DMA4_CICRi
DMA4_CICR_DROP_IE                       *       (1 << 1)
DMA4_CICR_HALF_IE                       *       (1 << 2)
DMA4_CICR_FRAME_IE                      *       (1 << 3)
DMA4_CICR_LAST_IE                       *       (1 << 4)
DMA4_CICR_BLOCK_IE                      *       (1 << 5)
DMA4_CICR_PKT_IE                        *       (1 << 7)
DMA4_CICR_TRANS_ERR_IE                  *       (1 << 8)
DMA4_CICR_SUPERVISOR_ERR_IE             *       (1 << 10)
DMA4_CICR_MISALIGNED_ERR_IE             *       (1 << 11)
DMA4_CICR_DRAIN_IE                      *       (1 << 12)
DMA4_CICR_SUPER_BLOCK_IE                *       (1 << 14)

; bits in Channel Status Register DMA4_CSRi
DMA4_CSR_DROP                           *       (1 << 1)
DMA4_CSR_HALF                           *       (1 << 2)
DMA4_CSR_FRAME                          *       (1 << 3)
DMA4_CSR_LAST                           *       (1 << 4)
DMA4_CSR_BLOCK                          *       (1 << 5)
DMA4_CSR_SYNC                           *       (1 << 6)
DMA4_CSR_PKT                            *       (1 << 7)
DMA4_CSR_TRANS_ERR                      *       (1 << 8)
DMA4_CSR_SUPERVISOR_ERR                 *       (1 << 10)
DMA4_CSR_MISALIGNED_ADRS_ERR            *       (1 << 11)
DMA4_CSR_DRAIN_END                      *       (1 << 12)
DMA4_CSR_SUPER_BLOCK                    *       (1 << 14)

; bits in Channel Source Destination Parameters DMA4_CSDPi
DMA4_CSDP_DATA_TYPE                     *       (3 << 0)
DMA4_CSDP_DATA_TYPE_8BIT                *       (0 << 0)
DMA4_CSDP_DATA_TYPE_16BIT               *       (1 << 0)
DMA4_CSDP_DATA_TYPE_32BIT               *       (2 << 0)
DMA4_CSDP_SRC_PACKED                    *       (1 << 6)
DMA4_CSDP_SRC_BURST_EN                  *       (3 << 7)
DMA4_CSDP_SRC_BURST_EN_1B               *       (0 << 7)
DMA4_CSDP_SRC_BURST_EN_16B              *       (1 << 7)
DMA4_CSDP_SRC_BURST_EN_32B              *       (2 << 7)
DMA4_CSDP_SRC_BURST_EN_64B              *       (3 << 7)
DMA4_CSDP_DST_PACKED                    *       (1 << 13)
DMA4_CSDP_DST_BURST_EN                  *       (3 << 14)
DMA4_CSDP_DST_BURST_EN_1B               *       (0 << 14)
DMA4_CSDP_DST_BURST_EN_16B              *       (1 << 14)
DMA4_CSDP_DST_BURST_EN_32B              *       (2 << 14)
DMA4_CSDP_DST_BURST_EN_64B              *       (3 << 14)
DMA4_CSDP_WRITE_MODE                    *       (3 << 16)
DMA4_CSDP_WRITE_MODE_WRNP               *       (0 << 16) ; Write None Posted
DMA4_CSDP_WRITE_MODE_WRP                *       (1 << 16) ; Write Posted
DMA4_CSDP_WRITE_MODE_LAST_WRNP          *       (2 << 16) ; Last transfer is Write None Posted
DMA4_CSDP_DST_ENDIAN_LOCK               *       (1 << 18)
DMA4_CSDP_DST_ENDIAN                    *       (1 << 19)
DMA4_CSDP_SRC_ENDIAN_LOCK               *       (1 << 20)
DMA4_CSDP_SRC_ENDIAN                    *       (1 << 21)

; bits in Channel Element Number DMA4_CENi
DMA4_CEN_CHANNEL_ELMNT_NBR              *       &FFFFFF

; bits in Channel Frame Number DMA4_CFNi
DMA4_CFN_CHANNEL_FRAME_NBR              *       &FFFF

; bits in Channel Source Element Index DMA4_CSEIi
DMA4_CSEI_CHANNEL_SRC_ELMNT_INDEX       *       &FFFF

; bits in Channel Source Frame Index DMA4_CSFIi
DMA4_CSFI_CH_SRC_FRM_INDEX              *       &FFFFFFFF
DMA4_CSFI_16BIT_PKT_ELNT_NBR            *       &FFFF

; bits in Channel Destination Element Index DMA4_CDEIi
DMA4_CDEI_CHANNEL_DST_ELMNT_INDEX       *       &FFFF

; bits in Channel Destination Frame Index DMA4_CDFIi
DMA4_CDFI_CH_DST_FRM_INDEX              *       &FFFFFFFF
DMA4_CDFI_16BIT_PKT_ELNT_NBR            *       &FFFF

; bits in Channel Current Element Number DMA4_CCENi
DMA4_CCEN_CURRENT_ELMNT_NBR             *       &FFFFFF

; bits in Channel Current Frame Number DMA4_CCFNi
DMA4_CCFN_CURRENT_FRAME_NBR             *       &FFFF


; IRQ numbers
; Note that various bits of code assume that the IRQs are used for the following purposes:
SDMA_IRQ_0              * OMAP44XX_IRQ_SDMA_0 ; Used for DMA HAL devices/DMAManager
SDMA_IRQ_1              * OMAP44XX_IRQ_SDMA_1 ; Used for graphics HAL device
SDMA_IRQ_2              * OMAP44XX_IRQ_SDMA_2
SDMA_IRQ_3              * OMAP44XX_IRQ_SDMA_3

; SDMA controller request mapping
SDMA_REQ0               *   0 ; reserved
SDMA_SYS_DMA_REQ0       *   1 ; external DMA request 0 (system expansion)
SDMA_SYS_DMA_REQ1       *   2 ; external DMA request 1 (system expansion)
SDMA_GPMC_DMA           *   3 ; GPMC data transmit request from prefetch engine
SDMA_REQ4               *   4 ; reserved
SDMA_DSS_DISPC_DMA      *   5 ; frame update request
SDMA_SYS_DMA_REQ2       *   6 ; external DMA request 2 (system expansion)
SDMA_MCASP1_AXEVT       *   7 ; McASP1 transmit request
SDMA_ISS_DMA0           *   8 ; Imaging subsystem request 0
SDMA_ISS_DMA1           *   9 ; Imaging subsystem request 1
SDMA_REQ10              *  10 ; reserved
SDMA_ISS_DMA2           *  11 ; Imaging subsystem request 2
SDMA_ISS_DMA3           *  12 ; Imaging subsystem request 3
SDMA_DSS_RFBI_DMA       *  13 ; Display subsystem RFBI request
SDMA_SPI3_DMA_TX0       *  14 ; McSPI3 transmit request channel 0
SDMA_SPI3_DMA_RX0       *  15 ; McSPI3 receive request channel 0
SDMA_MCBSP2_DMA_TX      *  16 ; McBSP2 transmit request
SDMA_MCBSP2_DMA_RX      *  17 ; McBSP2 receive request
SDMA_MCBSP3_DMA_TX      *  18 ; McBSP3 transmit request
SDMA_MCBSP3_DMA_RX      *  19 ; McBSP3 receive request
SDMA_C2C_SSCM_GPO0      *  20 ; C2C GPO line 0
SDMA_C2C_SSCM_GPO1      *  21 ; C2C GPO line 1
SDMA_SPI3_DMA_TX1       *  22 ; McSPI3 transmit request channel 1
SDMA_SPI3_DMA_RX1       *  23 ; McSPI3 receive request channel 1
SDMA_I2C3_DMA_TX        *  24 ; I2C3 transmit request
SDMA_I2C3_DMA_RX        *  25 ; I2C3 receive request
SDMA_I2C1_DMA_TX        *  26 ; I2C1 transmit request
SDMA_I2C1_DMA_RX        *  27 ; I2C1 receive request
SDMA_I2C2_DMA_TX        *  28 ; I2C2 transmit request
SDMA_I2C2_DMA_RX        *  29 ; I2C2 receive request
SDMA_MCBSP4_DMA_TX      *  30 ; McBSP4 transmit request
SDMA_MCBSP4_DMA_RX      *  31 ; McBSP4 receive request
SDMA_MCBSP1_DMA_TX      *  32 ; McBSP1 transmit request
SDMA_MCBSP1_DMA_RX      *  33 ; McBSP1 receive request
SDMA_SPI1_DMA_TX0       *  34 ; McSPI1 transmit request channel 0
SDMA_SPI1_DMA_RX0       *  35 ; McSPI1 receive request channel 0
SDMA_SPI1_DMA_TX1       *  36 ; McSPI1 transmit request channel 1
SDMA_SPI1_DMA_RX1       *  37 ; McSPI1 receive request channel 1
SDMA_SPI1_DMA_TX2       *  38 ; McSPI1 transmit request channel 2
SDMA_SPI1_DMA_RX2       *  39 ; McSPI1 receive request channel 2
SDMA_SPI1_DMA_TX3       *  40 ; McSPI1 transmit request channel 3
SDMA_SPI1_DMA_RX3       *  41 ; McSPI1 receive request channel 3
SDMA_SPI2_DMA_TX0       *  42 ; McSPI2 transmit request channel 0
SDMA_SPI2_DMA_RX0       *  43 ; McSPI2 receive request channel 0
SDMA_SPI2_DMA_TX1       *  44 ; McSPI2 transmit request channel 1
SDMA_SPI2_DMA_RX1       *  45 ; McSPI2 receive request channel 1
SDMA_MMC2_DMA_TX        *  46 ; MMC2 transmit request
SDMA_MMC2_DMA_RX        *  47 ; MMC2 receive request
SDMA_UART1_DMA_TX       *  48 ; UART1 transmit request
SDMA_UART1_DMA_RX       *  49 ; UART1 receive request
SDMA_UART2_DMA_TX       *  50 ; UART2 transmit request
SDMA_UART2_DMA_RX       *  51 ; UART2 receive request
SDMA_UART3_DMA_TX       *  52 ; UART3 transmit request
SDMA_UART3_DMA_RX       *  53 ; UART3 receive request
SDMA_UART4_DMA_TX       *  54 ; UART4 transmit request
SDMA_UART4_DMA_RX       *  55 ; UART4 receive request
SDMA_MMC4_DMA_TX        *  56 ; MMC4 transmit request
SDMA_MMC4_DMA_RX        *  57 ; MMC4 receive request
SDMA_MMC5_DMA_TX        *  58 ; MMC5 transmit request
SDMA_MMC5_DMA_RX        *  59 ; MMC5 receive request
SDMA_MMC1_DMA_TX        *  60 ; MMC1 transmit request
SDMA_MMC1_DMA_RX        *  61 ; MMC1 receive request
SDMA_REQ62              *  62 ; reserved
SDMA_SYS_DMA_REQ3       *  63 ; external DMA request 3 (system expansion)
SDMA_MCPDM_DMA_UP       *  64 ; McPDM uplink request
SDMA_MCPDM_DMA_DOWN     *  65 ; McPDM downlink request
SDMA_DMIC_DMA           *  66 ; DMIC DMA request
SDMA_C2C_SSCM_GPO2      *  67 ; C2C GPO line 2
SDMA_C2C_SSCM_GPO3      *  68 ; C2C GPO line 3
SDMA_SPI4_DMA_TX0       *  69 ; McSPI4 transmit request channel 0
SDMA_SPI4_DMA_RX0       *  70 ; McSPI4 receive request channel 0
SDMA_DSS_DSI1_DMA0      *  71 ; Display subsystem DSI1 request 0
SDMA_DSS_DSI1_DMA1      *  72 ; Display subsystem DSI1 request 1
SDMA_DSS_DSI1_DMA2      *  73 ; Display subsystem DSI1 request 2
SDMA_DSS_DSI1_DMA3      *  74 ; Display subsystem DSI1 request 3
SDMA_DSS_HDMI_DMA       *  75 ; Display subsystem HDMI audio request
SDMA_MMC3_DMA_TX        *  76 ; MMC3 transmit request
SDMA_MMC3_DMA_RX        *  77 ; MMC3 receive request
SDMA_REQ78              *  78 ; reserved
SDMA_REQ79              *  79 ; reserved
SDMA_DSS_DSI2_DMA0      *  80 ; Display subsystem DSI2 request 0
SDMA_DSS_DSI2_DMA1      *  81 ; Display subsystem DSI2 request 1
SDMA_DSS_DSI2_DMA2      *  82 ; Display subsystem DSI2 request 2
SDMA_DSS_DSI2_DMA3      *  83 ; Display subsystem DSI2 request 3
SDMA_SLIMBUS1_DMA_TX0   *  84 ; SLIMBUS1 transmit request channel 0
SDMA_SLIMBUS1_DMA_TX1   *  85 ; SLIMBUS1 transmit request channel 1
SDMA_SLIMBUS1_DMA_TX2   *  86 ; SLIMBUS1 transmit request channel 2
SDMA_SLIMBUS1_DMA_TX3   *  87 ; SLIMBUS1 transmit request channel 3
SDMA_SLIMBUS1_DMA_RX0   *  88 ; SLIMBUS1 receive request channel 0
SDMA_SLIMBUS1_DMA_RX1   *  89 ; SLIMBUS1 receive request channel 1
SDMA_SLIMBUS1_DMA_RX2   *  90 ; SLIMBUS1 receive request channel 2
SDMA_SLIMBUS1_DMA_RX3   *  91 ; SLIMBUS1 receive request channel 3
SDMA_SLIMBUS2_DMA_TX0   *  92 ; SLIMBUS2 transmit request channel 0
SDMA_SLIMBUS2_DMA_TX1   *  93 ; SLIMBUS2 transmit request channel 1
SDMA_SLIMBUS2_DMA_TX2   *  94 ; SLIMBUS2 transmit request channel 2
SDMA_SLIMBUS2_DMA_TX3   *  95 ; SLIMBUS2 transmit request channel 3
SDMA_SLIMBUS2_DMA_RX0   *  96 ; SLIMBUS2 receive request channel 0
SDMA_SLIMBUS2_DMA_RX1   *  97 ; SLIMBUS2 receive request channel 1
SDMA_SLIMBUS2_DMA_RX2   *  98 ; SLIMBUS2 receive request channel 2
SDMA_SLIMBUS2_DMA_RX3   *  99 ; SLIMBUS2 receive request channel 3
SDMA_ABE_DMA0           * 100 ; Audio back-end request FIFO 0
SDMA_ABE_DMA1           * 101 ; Audio back-end request FIFO 1
SDMA_ABE_DMA2           * 102 ; Audio back-end request FIFO 2
SDMA_ABE_DMA3           * 103 ; Audio back-end request FIFO 3
SDMA_ABE_DMA4           * 104 ; Audio back-end request FIFO 4
SDMA_ABE_DMA5           * 105 ; Audio back-end request FIFO 5
SDMA_ABE_DMA6           * 106 ; Audio back-end request FIFO 6
SDMA_ABE_DMA7           * 107 ; Audio back-end request FIFO 7
; REQs 108 - 122 are reserved
SDMA_I2C4_DMA_TX        * 123 ; I2C4 transmit request
SDMA_I2C4_DMA_RX        * 124 ; I2C4 receive request



; Static workspace for s.SDMA
SDMA_NumDevices         * 31 ; There are 32 DMA channels, but only 31 are exposed to DMAManager

; DMA controller
                        ^ 0, a1
; Public bits
SDMACDevice             # HALDevice_DMAC_Size_0_1
; Private bits          
SDMACRegs               # 4 ; L4_sDMA_Log
SDMACWorkspace          # 4 ; HAL workspace pointer
SDMACAllocated          # 4 ; Mask of allocated devices
SDMACPhysList           # 4 * SDMA_NumDevices ; Pointer to each DMA channel devices
SDMAC_DeviceSize        * :INDEX: @@
                        
; DMA channel           
                        ^ 0, a1
; Public bits           
SDMADevice              # HALDevice_DMA_Size
; Private bits          
SDMARegs                # 4 ; Pointer to controller registers
SDMAChanRegs            # 4 ; Pointer to channel registers
SDMAWorkspace           # 4 ; HAL workspace pointer
SDMAIRQMask             # 4 ; IRQ mask for this channel
SDMAPacketSizePtr       # 4 ; Pointer to location where packet size is stored
SDMADesc                # 28 ; Buffer for description string
SDMA_DeviceSize         * :INDEX: @@
                        
SDMA_WorkspaceSize      * (SDMAC_DeviceSize + SDMA_DeviceSize*SDMA_NumDevices)

        ] ; __HAL_SDMA_HDR__

        END
@


1.3
log
@Bulk expand of tabs.
Helps to make tracking changes between OMAP3 and OMAP4 less eye watering, but otherwise functionally the same as 0.06.

Version 0.07. Tagged as 'OMAP4-0_07'
@
text
@d19 1
a19 1
        GET     hdr.irqs44xx
@


1.2
log
@Update to OMAP4 HAL.
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.Audio
    added further definitions for TWL6040 audio chip
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.SDMA
    added further register descriptions according OMAP4 TRM
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.UART
    added further register descriptions according OMAP4 TRM
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.omap4430
    added definitions for OMAP4460 (Panda ES)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.board
    adjusted max pixel-clock rate
    order of UART entries changed
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Boot
    don't reset debug UART
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Top
    modifications according to OMAP3 version
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.debug
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.UART
    changes according to hdr.UART changes; HAL_UARTModemControl
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.RAM
    use definitions from hdr.SDMA
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.SDMA
    use definitions from hdr.SDMA
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Video
    added code to VideoDevice_Activate (enable DSS power)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.omap4430
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.SDMA
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Audio
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.SDMA
    changes for working sound support

Submissions from Willi Theiss. Compiles, but not tested here.

Version 0.05. Tagged as 'OMAP4-0_05'
@
text
@d16 2
a17 2
	[	:LNOT: :DEF: __HAL_SDMA_HDR__
	GBLL	__HAL_SDMA_HDR__
d19 1
a19 1
	GET	hdr.irqs44xx
d21 1
a21 1
	GET	hdr:DMADevice
d25 17
a41 17
DMA4_REVISION		*	&000
DMA4_IRQSTATUS_L0	*	&008
DMA4_IRQSTATUS_L1	*	&00C
DMA4_IRQSTATUS_L2	*	&010
DMA4_IRQSTATUS_L3	*	&014
DMA4_IRQENABLE_L0	*	&018
DMA4_IRQENABLE_L1	*	&01C
DMA4_IRQENABLE_L2	*	&020
DMA4_IRQENABLE_L3	*	&024
DMA4_SYSSTATUS		*	&028
DMA4_OCP_SYSCONFIG	*	&02C
DMA4_CAPS_0		*	&064
DMA4_CAPS_2		*	&06C
DMA4_CAPS_3		*	&070
DMA4_CAPS_4		*	&074
DMA4_GCR		*	&078
DMA4_i			*	&080 ; Base of per-channel registers
d44 21
a64 21
DMA4_CCRi		*	&00 ; Channel Control Register
DMA4_CLNK_CTRLi		*	&04 ; Channel Link Control Register
DMA4_CICRi		*	&08 ; Channel Interrupt Control Register
DMA4_CSRi		*	&0C ; Channel Status Register
DMA4_CSDPi		*	&10 ; Channel Source Destination Parameters
DMA4_CENi		*	&14 ; Channel Element Number
DMA4_CFNi		*	&18 ; Channel Frame Number
DMA4_CSSAi		*	&1C ; Channel Source Start Address
DMA4_CDSAi		*	&20 ; Channel Destination Start Address
DMA4_CSEIi		*	&24 ; Channel Source Element Index
DMA4_CSFIi		*	&28 ; Channel Source Frame Index
DMA4_CDEIi		*	&2C ; Channel Destination Element Index
DMA4_CDFIi		*	&30 ; Channel Destination Frame Index
DMA4_CSACi		*	&34 ; Channel Source Address Counter
DMA4_CDACi		*	&38 ; Channel Destination Address Counter
DMA4_CCENi		*	&3C ; Channel Current Element Number
DMA4_CCFNi		*	&40 ; Channel Current Frame Number
DMA4_COLORi		*	&44 ; Channel Color Key
DMA4_CDPi		*	&50 ; Channel Descriptor Parameter
DMA4_CNDPi		*	&54 ; Channel Next Descriptor Pointer
DMA4_CCDNi		*	&58 ; Channel Current Descriptor Number
d66 1
a66 1
DMA4_CHANNEL_SIZE	*	&060 ; Size/stride of per-channel register blocks
d69 1
a69 1
DMA4_SYSSTATUS_RESETDONE		*	(1 << 0)
d72 11
a82 11
DMA4_OCP_SYSCONFIG_AUTOIDLE		*	(1 << 0)
DMA4_OCP_SYSCONFIG_SIDLEMODE		*	(3 << 3)
DMA4_OCP_SYSCONFIG_SIDLEMODE_FORCE	*	(0 << 3)
DMA4_OCP_SYSCONFIG_SIDLEMODE_NONE	*	(1 << 3)
DMA4_OCP_SYSCONFIG_SIDLEMODE_SMART	*	(2 << 3)
DMA4_OCP_SYSCONFIG_EMUFREE		*	(1 << 5)
DMA4_OCP_SYSCONFIG_CLOCKACTIVITY	*	(3 << 8)
DMA4_OCP_SYSCONFIG_MIDLEMODE		*	(3 << 12)
DMA4_OCP_SYSCONFIG_MIDLEMODE_FORCE	*	(0 << 12)
DMA4_OCP_SYSCONFIG_MIDLEMODE_NONE	*	(1 << 12)
DMA4_OCP_SYSCONFIG_MIDLEMODE_SMART	*	(2 << 12)
d85 6
a90 6
DMA4_GCR_MAX_CHANNEL_FIFO_DEPTH		*	(255 << 0)
DMA4_GCR_HI_THREAD_RESERVED		*	(  3 << 12)
DMA4_GCR_HI_LO_FIFO_BUDGET		*	(  3 << 14)
DMA4_GCR_ARBITRAION_RATE		*	(255 << 16)
DMA4_GCR_ARBITRAION_RATE_SHIFT		*	16
DMA4_GCR_CHANNEL_ID_GATE		*	(1 << 24)
d93 27
a119 27
DMA4_CCR_SYNCHRO_CONTROL		*	(31 << 0)
DMA4_CCR_FS				*	(1 << 5)
DMA4_CCR_READ_PRIORITY			*	(1 << 6)
DMA4_CCR_ENABLE				*	(1 << 7)
DMA4_CCR_SUSPEND_SENSITIVE		*	(1 << 8)
DMA4_CCR_RD_ACTIVE			*	(1 << 9)
DMA4_CCR_WR_ACTIVE			*	(1 << 10)
DMA4_CCR_SRC_AMODE			*	(3 << 12)
DMA4_CCR_SRC_AMODE_CONST		*	(0 << 12) ; Constant Address Mode
DMA4_CCR_SRC_AMODE_POST_INC		*	(1 << 12) ; Post-Increment Address Mode
DMA4_CCR_SRC_AMODE_SINGLE_INDEX		*	(2 << 12) ; Single Index Address Mode
DMA4_CCR_SRC_AMODE_DOUBLE_INDEX		*	(3 << 12) ; Double Index Address Mode
DMA4_CCR_DST_AMODE			*	(3 << 14)
DMA4_CCR_DST_AMODE_CONST		*	(0 << 14) ; Constant Address Mode
DMA4_CCR_DST_AMODE_POST_INC		*	(1 << 14) ; Post-Increment Address Mode
DMA4_CCR_DST_AMODE_SINGLE_INDEX		*	(2 << 14) ; Single Index Address Mode
DMA4_CCR_DST_AMODE_DOUBLE_INDEX		*	(3 << 14) ; Double Index Address Mode
DMA4_CCR_CONST_FILL_ENABLE		*	(1 << 16)
DMA4_CCR_TRANSPARENT_COPY_ENABLE	*	(1 << 17)
DMA4_CCR_BS				*	(1 << 18)
DMA4_CCR_SYNCHRO_CONTROL_UPPER		*	(3 << 19)
DMA4_CCR_SYNCHRO_CONTROL_UPPER_SHIFT	*	19
DMA4_CCR_SUPERVISOR			*	(1 << 22)
DMA4_CCR_PREFETCH			*	(1 << 23)
DMA4_CCR_SEL_SRC_DST_SYNC		*	(1 << 24)
DMA4_CCR_BUFFERING_DISABLE		*	(1 << 25)
DMA4_CCR_WRITE_PRIORITY			*	(1 << 26)
d122 2
a123 2
DMA4_CLNK_CTRL_NEXTLCH_ID		*	(31 << 0)
DMA4_CLNK_CTRLENABLE_LNK		*	(1 << 15)
d126 11
a136 11
DMA4_CICR_DROP_IE			*	(1 << 1)
DMA4_CICR_HALF_IE			*	(1 << 2)
DMA4_CICR_FRAME_IE			*	(1 << 3)
DMA4_CICR_LAST_IE			*	(1 << 4)
DMA4_CICR_BLOCK_IE			*	(1 << 5)
DMA4_CICR_PKT_IE			*	(1 << 7)
DMA4_CICR_TRANS_ERR_IE			*	(1 << 8)
DMA4_CICR_SUPERVISOR_ERR_IE		*	(1 << 10)
DMA4_CICR_MISALIGNED_ERR_IE		*	(1 << 11)
DMA4_CICR_DRAIN_IE			*	(1 << 12)
DMA4_CICR_SUPER_BLOCK_IE		*	(1 << 14)
d139 12
a150 12
DMA4_CSR_DROP				*	(1 << 1)
DMA4_CSR_HALF				*	(1 << 2)
DMA4_CSR_FRAME				*	(1 << 3)
DMA4_CSR_LAST				*	(1 << 4)
DMA4_CSR_BLOCK				*	(1 << 5)
DMA4_CSR_SYNC				*	(1 << 6)
DMA4_CSR_PKT				*	(1 << 7)
DMA4_CSR_TRANS_ERR			*	(1 << 8)
DMA4_CSR_SUPERVISOR_ERR			*	(1 << 10)
DMA4_CSR_MISALIGNED_ADRS_ERR		*	(1 << 11)
DMA4_CSR_DRAIN_END			*	(1 << 12)
DMA4_CSR_SUPER_BLOCK			*	(1 << 14)
d153 24
a176 24
DMA4_CSDP_DATA_TYPE			*	(3 << 0)
DMA4_CSDP_DATA_TYPE_8BIT		*	(0 << 0)
DMA4_CSDP_DATA_TYPE_16BIT		*	(1 << 0)
DMA4_CSDP_DATA_TYPE_32BIT		*	(2 << 0)
DMA4_CSDP_SRC_PACKED			*	(1 << 6)
DMA4_CSDP_SRC_BURST_EN			*	(3 << 7)
DMA4_CSDP_SRC_BURST_EN_1B		*	(0 << 7)
DMA4_CSDP_SRC_BURST_EN_16B		*	(1 << 7)
DMA4_CSDP_SRC_BURST_EN_32B		*	(2 << 7)
DMA4_CSDP_SRC_BURST_EN_64B		*	(3 << 7)
DMA4_CSDP_DST_PACKED			*	(1 << 13)
DMA4_CSDP_DST_BURST_EN			*	(3 << 14)
DMA4_CSDP_DST_BURST_EN_1B		*	(0 << 14)
DMA4_CSDP_DST_BURST_EN_16B		*	(1 << 14)
DMA4_CSDP_DST_BURST_EN_32B		*	(2 << 14)
DMA4_CSDP_DST_BURST_EN_64B		*	(3 << 14)
DMA4_CSDP_WRITE_MODE			*	(3 << 16)
DMA4_CSDP_WRITE_MODE_WRNP		*	(0 << 16) ; Write None Posted
DMA4_CSDP_WRITE_MODE_WRP		*	(1 << 16) ; Write Posted
DMA4_CSDP_WRITE_MODE_LAST_WRNP		*	(2 << 16) ; Last transfer is Write None Posted
DMA4_CSDP_DST_ENDIAN_LOCK		*	(1 << 18)
DMA4_CSDP_DST_ENDIAN			*	(1 << 19)
DMA4_CSDP_SRC_ENDIAN_LOCK		*	(1 << 20)
DMA4_CSDP_SRC_ENDIAN			*	(1 << 21)
d179 1
a179 1
DMA4_CEN_CHANNEL_ELMNT_NBR		*	&FFFFFF
d182 1
a182 1
DMA4_CFN_CHANNEL_FRAME_NBR		*	&FFFF
d185 1
a185 1
DMA4_CSEI_CHANNEL_SRC_ELMNT_INDEX	*	&FFFF
d188 2
a189 2
DMA4_CSFI_CH_SRC_FRM_INDEX		*	&FFFFFFFF
DMA4_CSFI_16BIT_PKT_ELNT_NBR		*	&FFFF
d192 1
a192 1
DMA4_CDEI_CHANNEL_DST_ELMNT_INDEX	*	&FFFF
d195 2
a196 2
DMA4_CDFI_CH_DST_FRM_INDEX		*	&FFFFFFFF
DMA4_CDFI_16BIT_PKT_ELNT_NBR		*	&FFFF
d199 1
a199 1
DMA4_CCEN_CURRENT_ELMNT_NBR		*	&FFFFFF
d202 1
a202 1
DMA4_CCFN_CURRENT_FRAME_NBR		*	&FFFF
d207 4
a210 4
SDMA_IRQ_0		*	OMAP44XX_IRQ_SDMA_0 ; Used for DMA HAL devices/DMAManager
SDMA_IRQ_1		*	OMAP44XX_IRQ_SDMA_1 ; Used for graphics HAL device
SDMA_IRQ_2		*	OMAP44XX_IRQ_SDMA_2
SDMA_IRQ_3		*	OMAP44XX_IRQ_SDMA_3
d213 108
a320 108
SDMA_REQ0		*	  0 ; reserved
SDMA_SYS_DMA_REQ0	*	  1 ; external DMA request 0 (system expansion)
SDMA_SYS_DMA_REQ1	*	  2 ; external DMA request 1 (system expansion)
SDMA_GPMC_DMA		*	  3 ; GPMC data transmit request from prefetch engine
SDMA_REQ4		*	  4 ; reserved
SDMA_DSS_DISPC_DMA	*	  5 ; frame update request
SDMA_SYS_DMA_REQ2	*	  6 ; external DMA request 2 (system expansion)
SDMA_MCASP1_AXEVT	*	  7 ; McASP1 transmit request
SDMA_ISS_DMA0		*	  8 ; Imaging subsystem request 0
SDMA_ISS_DMA1		*	  9 ; Imaging subsystem request 1
SDMA_REQ10		*	 10 ; reserved
SDMA_ISS_DMA2		*	 11 ; Imaging subsystem request 2
SDMA_ISS_DMA3		*	 12 ; Imaging subsystem request 3
SDMA_DSS_RFBI_DMA	*	 13 ; Display subsystem RFBI request
SDMA_SPI3_DMA_TX0	*	 14 ; McSPI3 transmit request channel 0
SDMA_SPI3_DMA_RX0	*	 15 ; McSPI3 receive request channel 0
SDMA_MCBSP2_DMA_TX	*	 16 ; McBSP2 transmit request
SDMA_MCBSP2_DMA_RX	*	 17 ; McBSP2 receive request
SDMA_MCBSP3_DMA_TX	*	 18 ; McBSP3 transmit request
SDMA_MCBSP3_DMA_RX	*	 19 ; McBSP3 receive request
SDMA_C2C_SSCM_GPO0	*	 20 ; C2C GPO line 0
SDMA_C2C_SSCM_GPO1	*	 21 ; C2C GPO line 1
SDMA_SPI3_DMA_TX1	*	 22 ; McSPI3 transmit request channel 1
SDMA_SPI3_DMA_RX1	*	 23 ; McSPI3 receive request channel 1
SDMA_I2C3_DMA_TX	*	 24 ; I2C3 transmit request
SDMA_I2C3_DMA_RX	*	 25 ; I2C3 receive request
SDMA_I2C1_DMA_TX	*	 26 ; I2C1 transmit request
SDMA_I2C1_DMA_RX	*	 27 ; I2C1 receive request
SDMA_I2C2_DMA_TX	*	 28 ; I2C2 transmit request
SDMA_I2C2_DMA_RX	*	 29 ; I2C2 receive request
SDMA_MCBSP4_DMA_TX	*	 30 ; McBSP4 transmit request
SDMA_MCBSP4_DMA_RX	*	 31 ; McBSP4 receive request
SDMA_MCBSP1_DMA_TX	*	 32 ; McBSP1 transmit request
SDMA_MCBSP1_DMA_RX	*	 33 ; McBSP1 receive request
SDMA_SPI1_DMA_TX0	*	 34 ; McSPI1 transmit request channel 0
SDMA_SPI1_DMA_RX0	*	 35 ; McSPI1 receive request channel 0
SDMA_SPI1_DMA_TX1	*	 36 ; McSPI1 transmit request channel 1
SDMA_SPI1_DMA_RX1	*	 37 ; McSPI1 receive request channel 1
SDMA_SPI1_DMA_TX2	*	 38 ; McSPI1 transmit request channel 2
SDMA_SPI1_DMA_RX2	*	 39 ; McSPI1 receive request channel 2
SDMA_SPI1_DMA_TX3	*	 40 ; McSPI1 transmit request channel 3
SDMA_SPI1_DMA_RX3	*	 41 ; McSPI1 receive request channel 3
SDMA_SPI2_DMA_TX0	*	 42 ; McSPI2 transmit request channel 0
SDMA_SPI2_DMA_RX0	*	 43 ; McSPI2 receive request channel 0
SDMA_SPI2_DMA_TX1	*	 44 ; McSPI2 transmit request channel 1
SDMA_SPI2_DMA_RX1	*	 45 ; McSPI2 receive request channel 1
SDMA_MMC2_DMA_TX	*	 46 ; MMC2 transmit request
SDMA_MMC2_DMA_RX	*	 47 ; MMC2 receive request
SDMA_UART1_DMA_TX	*	 48 ; UART1 transmit request
SDMA_UART1_DMA_RX	*	 49 ; UART1 receive request
SDMA_UART2_DMA_TX	*	 50 ; UART2 transmit request
SDMA_UART2_DMA_RX	*	 51 ; UART2 receive request
SDMA_UART3_DMA_TX	*	 52 ; UART3 transmit request
SDMA_UART3_DMA_RX	*	 53 ; UART3 receive request
SDMA_UART4_DMA_TX	*	 54 ; UART4 transmit request
SDMA_UART4_DMA_RX	*	 55 ; UART4 receive request
SDMA_MMC4_DMA_TX	*	 56 ; MMC4 transmit request
SDMA_MMC4_DMA_RX	*	 57 ; MMC4 receive request
SDMA_MMC5_DMA_TX	*	 58 ; MMC5 transmit request
SDMA_MMC5_DMA_RX	*	 59 ; MMC5 receive request
SDMA_MMC1_DMA_TX	*	 60 ; MMC1 transmit request
SDMA_MMC1_DMA_RX	*	 61 ; MMC1 receive request
SDMA_REQ62		*	 62 ; reserved
SDMA_SYS_DMA_REQ3	*	 63 ; external DMA request 3 (system expansion)
SDMA_MCPDM_DMA_UP	*	 64 ; McPDM uplink request
SDMA_MCPDM_DMA_DOWN	*	 65 ; McPDM downlink request
SDMA_DMIC_DMA		*	 66 ; DMIC DMA request
SDMA_C2C_SSCM_GPO2	*	 67 ; C2C GPO line 2
SDMA_C2C_SSCM_GPO3	*	 68 ; C2C GPO line 3
SDMA_SPI4_DMA_TX0	*	 69 ; McSPI4 transmit request channel 0
SDMA_SPI4_DMA_RX0	*	 70 ; McSPI4 receive request channel 0
SDMA_DSS_DSI1_DMA0	*	 71 ; Display subsystem DSI1 request 0
SDMA_DSS_DSI1_DMA1	*	 72 ; Display subsystem DSI1 request 1
SDMA_DSS_DSI1_DMA2	*	 73 ; Display subsystem DSI1 request 2
SDMA_DSS_DSI1_DMA3	*	 74 ; Display subsystem DSI1 request 3
SDMA_DSS_HDMI_DMA	*	 75 ; Display subsystem HDMI audio request
SDMA_MMC3_DMA_TX	*	 76 ; MMC3 transmit request
SDMA_MMC3_DMA_RX	*	 77 ; MMC3 receive request
SDMA_REQ78		*	 78 ; reserved
SDMA_REQ79		*	 79 ; reserved
SDMA_DSS_DSI2_DMA0	*	 80 ; Display subsystem DSI2 request 0
SDMA_DSS_DSI2_DMA1	*	 81 ; Display subsystem DSI2 request 1
SDMA_DSS_DSI2_DMA2	*	 82 ; Display subsystem DSI2 request 2
SDMA_DSS_DSI2_DMA3	*	 83 ; Display subsystem DSI2 request 3
SDMA_SLIMBUS1_DMA_TX0	*	 84 ; SLIMBUS1 transmit request channel 0
SDMA_SLIMBUS1_DMA_TX1	*	 85 ; SLIMBUS1 transmit request channel 1
SDMA_SLIMBUS1_DMA_TX2	*	 86 ; SLIMBUS1 transmit request channel 2
SDMA_SLIMBUS1_DMA_TX3	*	 87 ; SLIMBUS1 transmit request channel 3
SDMA_SLIMBUS1_DMA_RX0	*	 88 ; SLIMBUS1 receive request channel 0
SDMA_SLIMBUS1_DMA_RX1	*	 89 ; SLIMBUS1 receive request channel 1
SDMA_SLIMBUS1_DMA_RX2	*	 90 ; SLIMBUS1 receive request channel 2
SDMA_SLIMBUS1_DMA_RX3	*	 91 ; SLIMBUS1 receive request channel 3
SDMA_SLIMBUS2_DMA_TX0	*	 92 ; SLIMBUS2 transmit request channel 0
SDMA_SLIMBUS2_DMA_TX1	*	 93 ; SLIMBUS2 transmit request channel 1
SDMA_SLIMBUS2_DMA_TX2	*	 94 ; SLIMBUS2 transmit request channel 2
SDMA_SLIMBUS2_DMA_TX3	*	 95 ; SLIMBUS2 transmit request channel 3
SDMA_SLIMBUS2_DMA_RX0	*	 96 ; SLIMBUS2 receive request channel 0
SDMA_SLIMBUS2_DMA_RX1	*	 97 ; SLIMBUS2 receive request channel 1
SDMA_SLIMBUS2_DMA_RX2	*	 98 ; SLIMBUS2 receive request channel 2
SDMA_SLIMBUS2_DMA_RX3	*	 99 ; SLIMBUS2 receive request channel 3
SDMA_ABE_DMA0		*	100 ; Audio back-end request FIFO 0
SDMA_ABE_DMA1		*	101 ; Audio back-end request FIFO 1
SDMA_ABE_DMA2		*	102 ; Audio back-end request FIFO 2
SDMA_ABE_DMA3		*	103 ; Audio back-end request FIFO 3
SDMA_ABE_DMA4		*	104 ; Audio back-end request FIFO 4
SDMA_ABE_DMA5		*	105 ; Audio back-end request FIFO 5
SDMA_ABE_DMA6		*	106 ; Audio back-end request FIFO 6
SDMA_ABE_DMA7		*	107 ; Audio back-end request FIFO 7
d322 2
a323 2
SDMA_I2C4_DMA_TX	*	123 ; I2C4 transmit request
SDMA_I2C4_DMA_RX	*	124 ; I2C4 receive request
d328 1
a328 2
; There are 32 DMA channels, but only 31 are exposed to DMAManager
SDMA_NumDevices		*	31
d331 1
a331 12
			^	0, a1
; Public bits
SDMACDevice		#	HALDevice_DMAC_Size_0_1
; Private bits
SDMACRegs		#	4 ; L4_sDMA_Log
SDMACWorkspace		#	4 ; HAL workspace pointer
SDMACAllocated		#	4 ; Mask of allocated devices
SDMACPhysList		#	4 * SDMA_NumDevices ; Pointer to each DMA channel devices
SDMAC_DeviceSize	*	:INDEX: @@

; DMA channel
			^	0, a1
d333 22
a354 12
SDMADevice		#	HALDevice_DMA_Size
; Private bits
SDMARegs		#	4 ; Pointer to controller registers
SDMAChanRegs		#	4 ; Pointer to channel registers
SDMAWorkspace		#	4 ; HAL workspace pointer
SDMAIRQMask		#	4 ; IRQ mask for this channel
SDMAPacketSizePtr	#	4 ; Pointer to location where packet size is stored
SDMADesc		#	28 ; Buffer for description string
SDMA_DeviceSize		*	:INDEX: @@

SDMA_WorkspaceSize	*	(SDMAC_DeviceSize + SDMA_DeviceSize * SDMA_NumDevices)

d356 1
a356 1
	] ; __HAL_SDMA_HDR__
d358 1
a358 1
	END
@


1.1
log
@Initial revision
@
text
@d44 21
a64 21
DMA4_CCRi		*	&00
DMA4_CLNK_CTRLi		*	&04
DMA4_CICRi		*	&08
DMA4_CSRi		*	&0C
DMA4_CSDPi		*	&10
DMA4_CENi		*	&14
DMA4_CFNi		*	&18
DMA4_CSSAi		*	&1C
DMA4_CDSAi		*	&20
DMA4_CSEIi		*	&24
DMA4_CSFIi		*	&28
DMA4_CDEIi		*	&2C
DMA4_CDFIi		*	&30
DMA4_CSACi		*	&34
DMA4_CDACi		*	&38
DMA4_CCENi		*	&3C
DMA4_CCFNi		*	&40
DMA4_COLORi		*	&44
DMA4_CDPi		*	&50
DMA4_CNDPi		*	&54
DMA4_CCDNi		*	&58
d68 137
@


1.1.1.1
log
@  Initial import of OMAP4 HAL
Detail:
  Target platform is the Pandaboard, based on the TI OMAP4 SoC.
  Port is not yet complete, in particular, audio is not yet working.
Admin:
  Submission from Willi Theiß
@
text
@@
