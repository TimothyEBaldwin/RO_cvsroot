head	1.4;
access;
symbols
	OMAP4-0_60:1.4
	OMAP4-0_59-1_52_2_3:1.4
	OMAP4-0_59:1.4
	OMAP4-0_58:1.4
	OMAP4-0_57:1.4
	OMAP4-0_56:1.4
	OMAP4-0_55:1.4
	OMAP4-0_54-1_52_2_2:1.4
	OMAP4-0_54:1.4
	OMAP4-0_53:1.4
	OMAP4-0_52-1_52_2_1:1.4
	SMP:1.4.0.2
	SMP_bp:1.4
	OMAP4-0_52:1.4
	OMAP4-0_51:1.4
	OMAP4-0_50:1.4
	OMAP4-0_49:1.4
	OMAP4-0_48:1.4
	OMAP4-0_47:1.4
	OMAP4-0_46:1.3
	OMAP4-0_45:1.3
	OMAP4-0_44:1.3
	OMAP4-0_43:1.3
	OMAP4-0_42:1.3
	OMAP4-0_41:1.3
	OMAP4-0_40:1.3
	OMAP4-0_39:1.3
	OMAP4-0_38:1.3
	OMAP4-0_37:1.3
	OMAP4-0_36:1.3
	OMAP4-0_35:1.3
	OMAP4-0_34:1.3
	OMAP4-0_33:1.3
	OMAP4-0_32:1.3
	OMAP4-0_31:1.3
	OMAP4-0_30:1.3
	OMAP4-0_29:1.3
	OMAP4-0_28:1.3
	OMAP4-0_27:1.3
	OMAP4-0_26:1.3
	OMAP4-0_25:1.3
	OMAP4-0_24:1.3
	OMAP4-0_23:1.3
	OMAP4-0_22:1.3
	OMAP4-0_21:1.3
	OMAP4-0_20:1.3
	OMAP4-0_19:1.3
	OMAP4-0_18:1.3
	OMAP4-0_17:1.3
	OMAP4-0_16:1.3
	OMAP4-0_15:1.3
	OMAP4-0_14:1.3
	OMAP4-0_13:1.2
	OMAP4-0_12:1.2
	OMAP4-0_11:1.2
	OMAP4-0_10:1.2
	OMAP4-0_09:1.2
	OMAP4-0_08:1.2
	OMAP4-0_07:1.2
	OMAP4-0_06:1.1.1.1
	OMAP4-0_05:1.1.1.1
	OMAP4-0_04:1.1.1.1
	OMAP4-0_03:1.1.1.1
	OMAP4-0_02:1.1.1.1
	OMAP4-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.09.01.21.22.46;	author rool;	state Exp;
branches;
next	1.3;
commitid	wG3IDGBgTDRpYAzy;

1.3
date	2013.04.07.08.13.12;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	pJ3reWwimQfmNOKw;

1.2
date	2012.03.25.11.42.58;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	4FjnaYBzkPTA6gYv;

1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	M3eV6gzJuoHHMezv;

1.1.1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches;
next	;
commitid	M3eV6gzJuoHHMezv;


desc
@@


1.4
log
@Minor OMAP4 tidying
omap4430.hdr/Debug,s:
  Define a dummy symbol so when debug is enabled there aren't conflicting IMPORT and EXPORTs.
PRCM.s:
  Fill in missing frequency.
Boot.s:
  Update comment to match HAL function names.
NVMemory.s:
  Add offset to account for FATLoadedCMOS not being at offset 0.
Top.s:
  Remove unused Post header. Replace DCI with instruction now objasm supports it.
Submission from Willi Theiss.

Version 0.47. Tagged as 'OMAP4-0_47'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        GET     Hdr:Proc

        GET     Hdr:OSEntries

        GET     hdr.omap4430
        GET     hdr.PRCM
        GET     hdr.StaticWS
        GET     hdr.Timers

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        IMPORT  Timer_Init

        EXPORT  PRCM_SetClocks

PRCM_SetClocks
        Push    "v1-v3,lr"
        ; We calculate the system clock speed by measuring it against the 32KHz counter
        ; Use HAL's 1st timer, just so we don't have to worry about turning it off later
        ; (since it's used as HAL timer 0)
        BL      Timer_Init              ; Just (re)initialise all of them for simplicity
        LDR     a3, Timers_Log
        MOV     a1, #0
        STR     a1, [a3, #GPT_TLDR]     ; Start at 0
        MOV     a1, #GPT_TCLR_ST
        STR     a1, [a3, #GPT_TCLR]     ; Start timer
        LDR     a4, L4_32KTIMER_Log
        LDR     a1, [a4, #REG_32KSYNCNT_CR]
        ; Wait 20 ticks. But unlike u-boot, we'll properly take into account the chance of
        ; the timer overflowing
10
        LDR     a2, [a4, #REG_32KSYNCNT_CR]
        SUB     a2, a2, a1
        CMP     a2, #20
        BLT     %BT10
        ; Now begin
        LDR     a1, [a4, #REG_32KSYNCNT_CR]
        LDR     v1, [a3, #GPT_TCRR]
10
        LDR     a2, [a4, #REG_32KSYNCNT_CR]
        LDR     v2, [a3, #GPT_TCRR]
        SUB     a2, a2, a1
        CMP     a2, #20
        BLT     %BT10
        SUB     a1, v2, v1
        ; Now search the lookup table for the right entry
        ADR     a2, SysClkTable
10
        LDMIA   a2!,{a3,a4,v1,v2,v3}
        CMP     a1, a3
        BLE     %BT10
        STR     a4, sys_clk
        STR     v3, Timer_DelayMul
        Pull    "v1-v3,pc"

SysClkTable
        ;       Counter Clock speed     SYS_CLKSEL      Divider DelayMul
        DCD     19000,  38400000,       7,              2,      384
        DCD     15200,  26000000,       5,              2,      260
        DCD     11000,  19200000,       4,              1,      192
        DCD     9000,   16800000,       3,              1,      168
        DCD     7000,   12000000,       1,              1,      120
        DCD     -1,     00000000,       0,              1,      0

        END
@


1.3
log
@Changes for OMAP4 HAL
hdr/GPIO: aligned columns
hdr/USB: added more USB related register definitions (OTG and USBPHY)
hdr/Video: global variable for preventing multiple inclusion renamed to its original
hdr/irqs44xx: interrupt numbers and naming according to latest OMAP44xx TRMs
hdr/omap4430: address correction for L4_USBPHY
s/Audio:
    changed recovering from error conditions
    disabled kludge for supporting non native samplerates (44.1 + 48k)
s/PRCM:
    removed unused function PRCM_GetFreqSel and related table
s/SDIO
    aligned columns
s/USB
    name change for OTG interrupt source

Part of a number of changes from Willi Theiss.
Build, but not tested.

Version 0.14. Tagged as 'OMAP4-0_14'
@
text
@d80 4
a83 4
        DCD     9000,   19200000,       4,              1,      192
        DCD     7600,   13000000,       1,              1,      130
        DCD     -1,     12000000,       0,              1,      120
        ; Where is 16.8MHz?
@


1.2
log
@Bulk expand of tabs.
Helps to make tracking changes between OMAP3 and OMAP4 less eye watering, but otherwise functionally the same as 0.06.

Version 0.07. Tagged as 'OMAP4-0_07'
@
text
@a34 1
        EXPORT  PRCM_GetFreqSel
d37 5
a41 7
        Push    "v1-v4,lr"
        ; First we calculate the system clock speed by measuring it against the 32KHz counter
        ; Then we make sure all system clocks are set to max
        ; This is basically the same algorithm as u-boot uses
        LDR     v4, L4_PowerMan_Log
        ; Use timer 2, just so we don't have to worry about turning it off later (since it's used as HAL timer 0)
        BL      Timer_Init ; Just (re)initialise all of them for simplicity
d74 1
a74 16
        Pull    "v1-v4,pc"

PRCM_GetFreqSel
        ; Return PLL FREQSEL value for a given clock frequency
        ; In: a1=Fint
        ; Out: a1=FREQSEL, 0 for error
        ; Corrupts a2-a4,ip
        ADR     ip, FreqSelTable
10
        LDMIA   ip!, {a2-a4}
        CMP     a1, a2
        CMPHS   a3, a1
        BLO     %BT10
        MOV     a1, a4
        MOV     pc, lr

a84 14
FreqSelTable
        ;   Min rate  Max rate   FREQSEL value
        DCD 750000,   1000000,   &3
        DCD 1000000,  1250000,   &4
        DCD 1250000,  1500000,   &5
        DCD 1500000,  1750000,   &6
        DCD 1750000,  2100000,   &7
        DCD 7500000,  10000000,  &B
        DCD 10000000, 12500000,  &C
        DCD 12500000, 15000000,  &D
        DCD 15000000, 17500000,  &E
        DCD 17500000, 21000000,  &F
        DCD 0,        &FFFFFFFF, 0 ; List terminator is catch-all for error case

@


1.1
log
@Initial revision
@
text
@d16 6
a21 6
	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System
	GET	Hdr:Machine.<Machine>
	GET	Hdr:ImageSize.<ImageSize>
	GET	Hdr:Proc
d23 1
a23 1
	GET	Hdr:OSEntries
d25 4
a28 4
	GET	hdr.omap4430
	GET	hdr.PRCM
	GET	hdr.StaticWS
	GET	hdr.Timers
d30 1
a30 1
	AREA	|Asm$$Code|, CODE, READONLY, PIC
d32 1
a32 1
	IMPORT	Timer_Init
d34 2
a35 2
	EXPORT	PRCM_SetClocks
	EXPORT	PRCM_GetFreqSel
d38 16
a53 17
	Push	"v1-v4,lr"
	; First we calculate the system clock speed by measuring it against the 32KHz counter
	; Then we make sure all system clocks are set to max
	; This is basically the same algorithm as u-boot uses
	LDR	v4, L4_PowerMan_Log
	; Use timer 2, just so we don't have to worry about turning it off later
	; (since it's used as HAL timer 0)
	BL	Timer_Init	; Just (re)initialise all of them for simplicity
	LDR	a3, Timers_Log
	MOV	a1, #0
	STR	a1, [a3, #GPT_TLDR]	; Start at 0
	MOV	a1, #GPT_TCLR_ST
	STR	a1, [a3, #GPT_TCLR]	; Start timer
	LDR	a4, L4_32KTIMER_Log
	LDR	a1, [a4, #REG_32KSYNCNT_CR]
	; Wait 20 ticks. But unlike u-boot, we'll properly take into account the chance of
	; the timer overflowing
d55 7
a61 7
	LDR	a2, [a4, #REG_32KSYNCNT_CR]
	SUB	a2, a2, a1
	CMP	a2, #20
	BLT	%BT10
	; Now begin
	LDR	a1, [a4, #REG_32KSYNCNT_CR]
	LDR	v1, [a3, #GPT_TCRR]
d63 8
a70 8
	LDR	a2, [a4, #REG_32KSYNCNT_CR]
	LDR	v2, [a3, #GPT_TCRR]
	SUB	a2, a2, a1
	CMP	a2, #20
	BLT	%BT10
	SUB	a1, v2, v1
	; Now search the lookup table for the right entry
	ADR	a2, SysClkTable
d72 6
a77 6
	LDMIA	a2!,{a3,a4,v1,v2,v3}
	CMP	a1, a3
	BLE	%BT10
	STR	a4, sys_clk
	STR	v3, Timer_DelayMul
	Pull	"v1-v4,pc"
d80 5
a84 5
	; Return PLL FREQSEL value for a given clock frequency
	; In: a1=Fint
	; Out: a1=FREQSEL, 0 for error
	; Corrupts a2-a4,ip
	ADR	ip, FreqSelTable
d86 6
a91 6
	LDMIA	ip!, {a2-a4}
	CMP	a1, a2
	CMPHS	a3, a1
	BLO	%BT10
	MOV	a1, a4
	MOV	pc, lr
d95 7
a101 7
	;	Counter	Clock speed	SYS_CLKSEL	Divider	DelayMul
	DCD	19000,	38400000,	7,		2,	384
	DCD	15200,	26000000,	5,		2,	260
	DCD	9000,	19200000,	4,		1,	192
	DCD	7600,	13000000,	1,		1,	130
	DCD	-1,	12000000,	0,		1,	120
	; Where is 16.8MHz?
d104 12
a115 12
	;	Min rate	Max rate	FREQSEL value
	DCD	750000,		1000000,	&3
	DCD	1000000,	1250000,	&4
	DCD	1250000,	1500000,	&5
	DCD	1500000,	1750000,	&6
	DCD	1750000,	2100000,	&7
	DCD	7500000,	10000000,	&B
	DCD	10000000,	12500000,	&C
	DCD	12500000,	15000000,	&D
	DCD	15000000,	17500000,	&E
	DCD	17500000,	21000000,	&F
	DCD	0,		&FFFFFFFF,	0 ; List terminator is catch-all for error case
d117 1
a117 1
	END
@


1.1.1.1
log
@  Initial import of OMAP4 HAL
Detail:
  Target platform is the Pandaboard, based on the TI OMAP4 SoC.
  Port is not yet complete, in particular, audio is not yet working.
Admin:
  Submission from Willi Theiß
@
text
@@
