head	1.2;
access;
symbols
	OMAP4-0_60:1.2
	OMAP4-0_59-1_52_2_3:1.2
	OMAP4-0_59:1.2
	OMAP4-0_58:1.2
	OMAP4-0_57:1.2
	OMAP4-0_56:1.2
	OMAP4-0_55:1.2
	OMAP4-0_54-1_52_2_2:1.2
	OMAP4-0_54:1.2
	OMAP4-0_53:1.2
	OMAP4-0_52-1_52_2_1:1.2
	SMP:1.2.0.2
	SMP_bp:1.2
	OMAP4-0_52:1.2
	OMAP4-0_51:1.2
	OMAP4-0_50:1.2
	OMAP4-0_49:1.2
	OMAP4-0_48:1.2
	OMAP4-0_47:1.2
	OMAP4-0_46:1.2
	OMAP4-0_45:1.2
	OMAP4-0_44:1.2
	OMAP4-0_43:1.2
	OMAP4-0_42:1.2
	OMAP4-0_41:1.2
	OMAP4-0_40:1.2
	OMAP4-0_39:1.2
	OMAP4-0_38:1.2
	OMAP4-0_37:1.2
	OMAP4-0_36:1.2
	OMAP4-0_35:1.2
	OMAP4-0_34:1.2
	OMAP4-0_33:1.2
	OMAP4-0_32:1.2
	OMAP4-0_31:1.2
	OMAP4-0_30:1.2
	OMAP4-0_29:1.2
	OMAP4-0_28:1.2
	OMAP4-0_27:1.2
	OMAP4-0_26:1.2
	OMAP4-0_25:1.2
	OMAP4-0_24:1.2
	OMAP4-0_23:1.2
	OMAP4-0_22:1.2
	OMAP4-0_21:1.2
	OMAP4-0_20:1.2
	OMAP4-0_19:1.2
	OMAP4-0_18:1.2
	OMAP4-0_17:1.2
	OMAP4-0_16:1.2
	OMAP4-0_15:1.2
	OMAP4-0_14:1.2
	OMAP4-0_13:1.2
	OMAP4-0_12:1.2
	OMAP4-0_11:1.2
	OMAP4-0_10:1.2
	OMAP4-0_09:1.2
	OMAP4-0_08:1.2
	OMAP4-0_07:1.2
	OMAP4-0_06:1.1.1.1
	OMAP4-0_05:1.1.1.1
	OMAP4-0_04:1.1.1.1
	OMAP4-0_03:1.1.1.1
	OMAP4-0_02:1.1.1.1
	OMAP4-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.03.25.11.42.57;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	4FjnaYBzkPTA6gYv;

1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	M3eV6gzJuoHHMezv;

1.1.1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches;
next	;
commitid	M3eV6gzJuoHHMezv;


desc
@@


1.2
log
@Bulk expand of tabs.
Helps to make tracking changes between OMAP3 and OMAP4 less eye watering, but otherwise functionally the same as 0.06.

Version 0.07. Tagged as 'OMAP4-0_07'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        $GetIO

        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.omap4430
        GET     hdr.StaticWS
        GET     hdr.Timers
        GET     hdr.GPMC

        AREA    |Asm$$Code|, CODE, READONLY, PIC


        EXPORT  GPMC_Init
        EXPORT  GPMC_Enable

GPMC_Init
        ; Do the usual - poke the reset bit
        ; Might also want to enable/configure clocks?
        LDR     a1, GPMC_Regs_Log
        MOV     a2, #2
        STR     a2, [a1, #GPMC_SYSCONFIG]
10
        LDR     a2, [a1, #GPMC_SYSTATUS]
        TST     a2, #1
        BEQ     %BT10
        MOV     a2, #&11 ; smart-idle, autoidle
        STR     a2, [a1, #GPMC_SYSCONFIG]
        MOV     pc, lr

GPMC_Enable
        ; a1 = CS number
        ; a2 = pointer to values to use for the 7 configuration registers. CS_VALID must be set
        ; Returns:
        ; a2 = CS physical base addr
        ; a3 = CS size
        ; (registers chosen for ease of OS_MapInIO call)
        LDR     a3, GPMC_Regs_Log
        MOV     a4, #GPMC_CS_SIZE
        MLA     a3, a4, a1, a3
        LDMIA   a2!, {a1, a4, ip}
        ADD     a3, a3, #GPMC_CS_BASE
        STMIA   a3!, {a1, a4, ip}
        LDMIA   a2, {a1, a2, a4, ip}
        STMIA   a3, {a1, a2, a4, ip}
        MOV     a3, #&10
        MOV     a2, ip, LSL #24 ; Shift base address to correct location
        SUB     a3, a3, ip, LSR #8 ; Get CS size in 16MB units
        BIC     a2, a2, #&C0000000 ; Mask off unwanted bits (CS_VALID)
        MOV     a3, a3, LSL #24
        MOV     pc, lr

        END
@


1.1
log
@Initial revision
@
text
@d16 6
a21 6
	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System
	GET	Hdr:Machine.<Machine>
	GET	Hdr:ImageSize.<ImageSize>
	$GetIO
d23 2
a24 2
	GET	Hdr:OSEntries
	GET	Hdr:HALEntries
d26 4
a29 4
	GET	hdr.omap4430
	GET	hdr.StaticWS
	GET	hdr.Timers
	GET	hdr.GPMC
d31 1
a31 1
	AREA	|Asm$$Code|, CODE, READONLY, PIC
d34 2
a35 2
	EXPORT	GPMC_Init
	EXPORT	GPMC_Enable
d38 5
a42 5
	; Do the usual - poke the reset bit
	; Might also want to enable/configure clocks?
	LDR	a1, GPMC_Regs_Log
	MOV	a2, #2
	STR	a2, [a1, #GPMC_SYSCONFIG]
d44 6
a49 6
	LDR	a2, [a1, #GPMC_SYSTATUS]
	TST	a2, #1
	BEQ	%BT10
	MOV	a2, #&11 ; smart-idle, autoidle
	STR	a2, [a1, #GPMC_SYSCONFIG]
	MOV	pc, lr
d52 20
a71 20
	; a1 = CS number
	; a2 = pointer to values to use for the 7 configuration registers. CS_VALID must be set
	; Returns:
	; a2 = CS physical base addr
	; a3 = CS size
	; (registers chosen for ease of OS_MapInIO call)
	LDR	a3, GPMC_Regs_Log
	MOV	a4, #GPMC_CS_SIZE
	MLA	a3, a4, a1, a3
	LDMIA	a2!, {a1, a4, ip}
	ADD	a3, a3, #GPMC_CS_BASE
	STMIA	a3!, {a1, a4, ip}
	LDMIA	a2, {a1, a2, a4, ip}
	STMIA	a3, {a1, a2, a4, ip}
	MOV	a3, #&10
	MOV	a2, ip, LSL #24 ; Shift base address to correct location
	SUB	a3, a3, ip, LSR #8 ; Get CS size in 16MB units
	BIC	a2, a2, #&C0000000 ; Mask off unwanted bits (CS_VALID)
	MOV	a3, a3, LSL #24
	MOV	pc, lr
d73 1
a73 1
	END
@


1.1.1.1
log
@  Initial import of OMAP4 HAL
Detail:
  Target platform is the Pandaboard, based on the TI OMAP4 SoC.
  Port is not yet complete, in particular, audio is not yet working.
Admin:
  Submission from Willi Thei√ü
@
text
@@
