head	1.7;
access;
symbols
	OMAP4-0_60:1.7
	OMAP4-0_59-1_52_2_3:1.7
	OMAP4-0_59:1.7
	OMAP4-0_58:1.7
	OMAP4-0_57:1.7
	OMAP4-0_56:1.7
	OMAP4-0_55:1.7
	OMAP4-0_54-1_52_2_2:1.7
	OMAP4-0_54:1.7
	OMAP4-0_53:1.7
	OMAP4-0_52-1_52_2_1:1.7
	SMP:1.7.0.2
	SMP_bp:1.7
	OMAP4-0_52:1.7
	OMAP4-0_51:1.7
	OMAP4-0_50:1.7
	OMAP4-0_49:1.7
	OMAP4-0_48:1.7
	OMAP4-0_47:1.7
	OMAP4-0_46:1.7
	OMAP4-0_45:1.7
	OMAP4-0_44:1.7
	OMAP4-0_43:1.7
	OMAP4-0_42:1.7
	OMAP4-0_41:1.7
	OMAP4-0_40:1.7
	OMAP4-0_39:1.7
	OMAP4-0_38:1.7
	OMAP4-0_37:1.7
	OMAP4-0_36:1.7
	OMAP4-0_35:1.7
	OMAP4-0_34:1.7
	OMAP4-0_33:1.7
	OMAP4-0_32:1.7
	OMAP4-0_31:1.7
	OMAP4-0_30:1.7
	OMAP4-0_29:1.7
	OMAP4-0_28:1.7
	OMAP4-0_27:1.7
	OMAP4-0_26:1.7
	OMAP4-0_25:1.7
	OMAP4-0_24:1.7
	OMAP4-0_23:1.7
	OMAP4-0_22:1.7
	OMAP4-0_21:1.7
	OMAP4-0_20:1.7
	OMAP4-0_19:1.7
	OMAP4-0_18:1.6
	OMAP4-0_17:1.6
	OMAP4-0_16:1.6
	OMAP4-0_15:1.6
	OMAP4-0_14:1.6
	OMAP4-0_13:1.6
	OMAP4-0_12:1.6
	OMAP4-0_11:1.6
	OMAP4-0_10:1.6
	OMAP4-0_09:1.5
	OMAP4-0_08:1.5
	OMAP4-0_07:1.5
	OMAP4-0_06:1.4
	OMAP4-0_05:1.3
	OMAP4-0_04:1.2
	OMAP4-0_03:1.2
	OMAP4-0_02:1.2
	OMAP4-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2013.09.01.17.37.22;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	GLy09A6uBpnXbL3x;

1.6
date	2012.07.03.23.09.05;	author bavison;	state Exp;
branches;
next	1.5;
commitid	0Wfi25ZdrHiIGabw;

1.5
date	2012.03.25.11.42.59;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	4FjnaYBzkPTA6gYv;

1.4
date	2012.03.25.10.28.47;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	wcxutstPODhaHfYv;

1.3
date	2012.02.11.17.48.09;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	W3PfhFs2h9uBvLSv;

1.2
date	2011.10.19.14.04.03;	author bavison;	state Exp;
branches;
next	1.1;
commitid	wCOk0IJpLoeUXXDv;

1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	M3eV6gzJuoHHMezv;

1.1.1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches;
next	;
commitid	M3eV6gzJuoHHMezv;


desc
@@


1.7
log
@Add support for all 4 I2C interfaces
hdr.board
    support all 4 I2C interfaces
    added BoardFlags variable
    remove unused BoardConfig_APLL_CTL variable
hdr.StaticWS
    support all 4 I2C interfaces on OMAP4
board.s
    removed unused parameter apll_ctl
    added support for all 4 I2C and UART interfaces
    added BoardFlags variable
Boot.s
    support all 4 I2C interfaces
    some code tweaks (tidy up)
    removed unused Touchbook code
I2C.s
    support all 4 I2C interfaces
    some code cleanup and comment correction
Submission from Willi Theiss.

Version 0.19. Tagged as 'OMAP4-0_19'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        ; Array writer macros
        MACRO
        DCDArray $string, $len, $pre, $post
        LCLS    string2
 [ $len > 0
   [ "$string" = ""
        %       $len*4
   |
string2 SETS    " DCD      $pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
        $string2
string2 SETS    " DCDArray " :CC: ("$string" :RIGHT: ((:LEN: "$string")-1)) :CC: "," :CC: :STR: ($len-1) :CC: ",$pre,$post"
        $string2
   ]
 |
        ASSERT "$string" = ""
 ]
        MEND

        MACRO
        DCBArray $string, $len, $pre, $post
        LCLS    string2
 [ $len > 0
   [ "$string" = ""
        %       $len
   |
string2 SETS    " DCB      $pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
        $string2
string2 SETS    " DCBArray " :CC: ("$string" :RIGHT: ((:LEN: "$string")-1)) :CC: "," :CC: :STR: ($len-1) :CC: ",$pre,$post"
        $string2
   ]
 |
        ASSERT "$string" = ""
 ]
        MEND

        ; Big ugly macro for defining a board config
        ; Note - $mixers is the set of enabled mixers (not including the system)
        MACRO
        BOARDCFG $name, $debuguart, $haluarts, $defaultuart, $hali2cs, $numi2c, $videoi2c, $videogpio, $usbgpio, $machid, $mixers, $vbcflags, $vbclcdnum, $vbclcdptr, $haldevices
01
        DCD     $debuguart
        DCDArray "$haluarts", 4, L4_UART
        DCBArray "$haluarts", 4, UART, _IRQ
        DCB     $defaultuart-1
        DCB     2_10100 ; BoardFlags: no podules,no PCI cards,multi CPU,no soft off,and soft ROM
        %       2
        ASSERT  (:LEN: "$hali2cs") >= $numi2c
        ASSERT  ((:LEN: "$hali2cs") >= $videoi2c) :LOR: ($videoi2c = 255)
        DCDArray "$hali2cs", 4, L4_I2C
        DCBArray "$hali2cs", 4, I2C, _IRQ
        DCB     $numi2c
        DCB     $videoi2c
        DCB     $videogpio
        DCB     $usbgpio
        ASSERT  MixerChannels = 8
        ASSERT  $mixers <= 255
        DCB     255-($mixers :OR: (1<<MixerChannel_System)) ; convert to mask of disabled channels
        DCB     $vbcflags
        DCB     $vbclcdnum
        DCB     :LEN: "$haluarts"
        DCD     $vbclcdptr
        IMPORT  Board_InitDevices_$haldevices
        DCD     Board_InitDevices_$haldevices
        ASSERT  (:LEN: "$name") < 20
        DCB     "$name"
        %       20 - (:LEN: "$name")
        DCD     $machid
        ASSERT  (. - %BT01) = BoardConfig_Size
        MEND

        ; Macro for defining LCDConfig structs
        MACRO
$label  LCDCONFIG $dsi_bpp, $dsi_lanes, $acbias_freq, $lcdtype, $flags, $timings, $maxpixrate
$label  DCB     $dsi_bpp
        DCB     $dsi_lanes
        DCB     $acbias_freq
        DCB     LCDConfig_LCDType_$lcdtype
        DCD     $flags
        IMPORT  Video_Power_$label
        DCD     Video_Power_$label
        DCD     $timings
        DCD     $maxpixrate
        ASSERT  (. - $label) = LCDConfig_Size
        MEND

        ; Macro for defining LCDTimings structs
        MACRO
$label  LCDTIMING $pixelrate, $hsw, $hfp, $hbp, $width, $vsw, $vfp, $vbp, $height, $syncpol
$label  DCD     $pixelrate*1000
        DCW     $hsw
        DCW     $hfp
        DCW     $hbp
        DCW     $width
        DCW     $vsw
        DCW     $vfp
        DCW     $vbp
        DCW     $height
        DCD     $syncpol
        ASSERT  (. - $label) = LCDTimings_Size
        MEND

        ; Make the mixer constants a bit nicer
M_HSO   *       (1 << MixerChannel_HeadsetOut)
M_AI    *       (1 << MixerChannel_AuxInput)
M_HF    *       (1 << MixerChannel_HandsFree)

        ; And VBC flags
VBC_SV  *       VideoBoardConfig_Flags_SVideo
VBC_C   *       VideoBoardConfig_Flags_Composite

        ; And now the table of board configs

BoardConfigTable
        ;               Name            DebugUART       UARTs   DefaultUART     I2Cs    NumI2C  VideoI2C        VideoGPIO       USBGPIO MachID                  MixerChans      VBC_Flags       VBC_LCDNum      VBC_LCDPtr      InitDevices
        BOARDCFG        "PandaBoard",   L4_UART3,       "1234", 3,              "1234", 4,      2,              0,              1,      MachID_PandaBoard,      M_HSO+M_AI,     VBC_C,          1,              VBC_DVI,        Panda
        BOARDCFG        "SDP4430",      L4_UART3,       "1234", 3,              "1234", 4,      2,              170,            24,     MachID_OMAP4430SDP,     M_HSO+M_AI,     0,              1,              VBC_DVI,        None
BoardConfigTable_End

        ;               DSI_BPP DSI_LANES       ACBias_freq     LCDType Flags   LCDTimings      Max_PixelRate
VBC_DVI LCDCONFIG       24,     3,              &28,            TFT,    0,      0,              170000

        END
@


1.6
log
@  Added SD support for Pandaboard
Detail:
  SDHCI HAL device created. Also, Entry HAL_UARTDefault added (supports
  OS_SerialOp) and HALDoesVideo switch, previously disabled, is now removed.
Admin:
  Requires SDIODriver 0.04.
  Changes received from Willi Theiss.

Version 0.10. Tagged as 'OMAP4-0_10'
@
text
@d24 1
a24 1
string2 SETS    " DCD   $pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
d41 1
a41 1
string2 SETS    " DCB   $pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
d54 1
a54 1
        BOARDCFG $name, $debuguart, $haluarts, $defaultuart, $hali2cs, $numi2c, $videoi2c, $apll_ctl, $videogpio, $usbgpio, $machid, $mixers, $vbcflags, $vbclcdnum, $vbclcdptr, $haldevices
d60 2
a61 1
        %       3
d64 2
a65 2
        DCDArray "$hali2cs", 3, L4_I2C
        DCBArray "$hali2cs", 3, I2C, _IRQ
a67 1
        DCB     $apll_ctl
d129 3
a131 3
        ;               Name            DebugUART       UARTs   DefaultUART     I2Cs    NumI2C  VideoI2C        APLL_CTL        VideoGPIO       USBGPIO MachID                  MixerChans      VBC_Flags       VBC_LCDNum      VBC_LCDPtr      InitDevices
        BOARDCFG        "PandaBoard",   L4_UART3,       "123",  3,              "123",  3,      2,              &16,            0,              1,      MachID_PandaBoard,      M_HSO+M_AI,     VBC_C,          1,              VBC_DVI,        Panda
        BOARDCFG        "SDP4430",      L4_UART3,       "123",  3,              "123",  3,      2,              &16,            170,            24,     MachID_OMAP4430SDP,     M_HSO+M_AI,     0,              1,              VBC_DVI,        None
@


1.5
log
@Bulk expand of tabs.
Helps to make tracking changes between OMAP3 and OMAP4 less eye watering, but otherwise functionally the same as 0.06.

Version 0.07. Tagged as 'OMAP4-0_07'
@
text
@d54 1
a54 1
        BOARDCFG $name, $debuguart, $haluarts, $hali2cs, $numi2c, $videoi2c, $apll_ctl, $videogpio, $usbgpio, $machid, $mixers, $vbcflags, $vbclcdnum, $vbclcdptr, $haldevices
d59 2
d129 3
a131 3
        ;               Name            DebugUART       UARTs   I2Cs    NumI2C  VideoI2C        APLL_CTL        VideoGPIO       USBGPIO MachID                  MixerChans      VBC_Flags       VBC_LCDNum      VBC_LCDPtr      InitDevices
        BOARDCFG        "PandaBoard",   L4_UART3,       "123",  "123",  3,      2,              &16,            0,              1,      MachID_PandaBoard,      M_HSO+M_AI,     VBC_C,          1,              VBC_DVI,        None
        BOARDCFG        "SDP4430",      L4_UART3,       "123",  "123",  3,      2,              &16,            170,            24,     MachID_OMAP4430SDP,     M_HSO+M_AI,     0,              1,              VBC_DVI,        None
@


1.4
log
@Updates to OMAP4 port.
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.Audio
    changes for better sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.omap4430
    added DebugTiming macros
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.StaticWS
    added variable NVMemoryFound
    removed variables for NVRAM over SD card support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Audio
    changes for better sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.board
    adjusted max pixel-clock rate
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Boot
    added debug timing
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.KdbScan
    added debug timing
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.NVMemory
    EEPROM support over JTAG port (EMU0/EMU1)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.RAM
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Top
    use DMA for copying ROM at top of RAM
    added debug timing
    support for compressed images (as in OMAP3)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Video
    added debug timing OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.c.CLib
    reverted to version without SD card NVRAM support

Changes from Willi Theiss.
Assembles without errors, but not tested here.

Version 0.06. Tagged as 'OMAP4-0_06'
@
text
@d16 4
a19 4
	; Array writer macros
	MACRO
	DCDArray $string, $len, $pre, $post
	LCLS	string2
d22 1
a22 1
	%	$len*4
d24 4
a27 4
string2	SETS	" DCD	$pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
	$string2
string2	SETS	" DCDArray " :CC: ("$string" :RIGHT: ((:LEN: "$string")-1)) :CC: "," :CC: :STR: ($len-1) :CC: ",$pre,$post"
	$string2
d30 1
a30 1
	ASSERT "$string" = ""
d32 1
a32 1
	MEND
d34 3
a36 3
	MACRO
	DCBArray $string, $len, $pre, $post
	LCLS	string2
d39 1
a39 1
	%	$len
d41 4
a44 4
string2	SETS	" DCB	$pre" :CC: ("$string" :LEFT: 1) :CC: "$post"
	$string2
string2 SETS	" DCBArray " :CC: ("$string" :RIGHT: ((:LEN: "$string")-1)) :CC: "," :CC: :STR: ($len-1) :CC: ",$pre,$post"
	$string2
d47 1
a47 1
	ASSERT "$string" = ""
d49 1
a49 1
	MEND
d51 4
a54 4
	; Big ugly macro for defining a board config
	; Note - $mixers is the set of enabled mixers (not including the system)
	MACRO
	BOARDCFG $name, $debuguart, $haluarts, $hali2cs, $numi2c, $videoi2c, $apll_ctl, $videogpio, $usbgpio, $machid, $mixers, $vbcflags, $vbclcdnum, $vbclcdptr, $haldevices
d56 67
a122 67
	DCD	$debuguart
	DCDArray "$haluarts", 4, L4_UART
	DCBArray "$haluarts", 4, UART, _IRQ
	ASSERT	(:LEN: "$hali2cs") >= $numi2c
	ASSERT	((:LEN: "$hali2cs") >= $videoi2c) :LOR: ($videoi2c = 255)
	DCDArray "$hali2cs", 3, L4_I2C
	DCBArray "$hali2cs", 3, I2C, _IRQ
	DCB	$numi2c
	DCB	$videoi2c
	DCB	$apll_ctl
	DCB	$videogpio
	DCB	$usbgpio
	ASSERT	MixerChannels = 8
	ASSERT	$mixers <= 255
	DCB	255-($mixers :OR: (1<<MixerChannel_System)) ; convert to mask of disabled channels
	DCB	$vbcflags
	DCB	$vbclcdnum
	DCB	:LEN: "$haluarts"
	DCD	$vbclcdptr
	IMPORT	Board_InitDevices_$haldevices
	DCD	Board_InitDevices_$haldevices
	ASSERT	(:LEN: "$name") < 20
	DCB	"$name"
	%	20 - (:LEN: "$name")
	DCD	$machid
	ASSERT	(. - %BT01) = BoardConfig_Size
	MEND

	; Macro for defining LCDConfig structs
	MACRO
$label	LCDCONFIG $dsi_bpp, $dsi_lanes, $acbias_freq, $lcdtype, $flags, $timings, $maxpixrate
$label	DCB	$dsi_bpp
	DCB	$dsi_lanes
	DCB	$acbias_freq
	DCB	LCDConfig_LCDType_$lcdtype
	DCD	$flags
	IMPORT	Video_Power_$label
	DCD	Video_Power_$label
	DCD	$timings
	DCD	$maxpixrate
	ASSERT	(. - $label) = LCDConfig_Size
	MEND

	; Macro for defining LCDTimings structs
	MACRO
$label	LCDTIMING $pixelrate, $hsw, $hfp, $hbp, $width, $vsw, $vfp, $vbp, $height, $syncpol
$label	DCD	$pixelrate*1000
	DCW	$hsw
	DCW	$hfp
	DCW	$hbp
	DCW	$width
	DCW	$vsw
	DCW	$vfp
	DCW	$vbp
	DCW	$height
	DCD	$syncpol
	ASSERT	(. - $label) = LCDTimings_Size
	MEND

	; Make the mixer constants a bit nicer
M_HSO	*	(1 << MixerChannel_HeadsetOut)
M_AI	*	(1 << MixerChannel_AuxInput)
M_HF	*	(1 << MixerChannel_HandsFree)

	; And VBC flags
VBC_SV	*	VideoBoardConfig_Flags_SVideo
VBC_C	*	VideoBoardConfig_Flags_Composite
d124 1
a124 1
	; And now the table of board configs
d127 3
a129 3
	;		Name		DebugUART	UARTs	I2Cs	NumI2C	VideoI2C	APLL_CTL	VideoGPIO	USBGPIO	MachID			MixerChans	VBC_Flags	VBC_LCDNum	VBC_LCDPtr	InitDevices
	BOARDCFG	"PandaBoard",	L4_UART3,	"123",	"123",	3,	2,		&16,		0,		1,	MachID_PandaBoard,	M_HSO+M_AI,	VBC_C,		1,		VBC_DVI,	None
	BOARDCFG	"SDP4430",	L4_UART3,	"123",	"123",	3,	2,		&16,		170,		24,	MachID_OMAP4430SDP,	M_HSO+M_AI,	0,		1,		VBC_DVI,	None
d132 2
a133 2
	;		DSI_BPP DSI_LANES	ACBias_freq	LCDType	Flags	LCDTimings	Max_PixelRate
VBC_DVI	LCDCONFIG	24,	3,		&28,		TFT,	0,	0,		170000
d135 1
a135 1
	END
@


1.3
log
@Update to OMAP4 HAL.
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.Audio
    added further definitions for TWL6040 audio chip
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.SDMA
    added further register descriptions according OMAP4 TRM
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.UART
    added further register descriptions according OMAP4 TRM
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.omap4430
    added definitions for OMAP4460 (Panda ES)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.board
    adjusted max pixel-clock rate
    order of UART entries changed
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Boot
    don't reset debug UART
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Top
    modifications according to OMAP3 version
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.debug
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.UART
    changes according to hdr.UART changes; HAL_UARTModemControl
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.RAM
    use definitions from hdr.SDMA
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.SDMA
    use definitions from hdr.SDMA
    changes for working sound support
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Video
    added code to VideoDevice_Activate (enable DSS power)
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.omap4430
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.hdr.SDMA
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.Audio
OMAP4Dev.castle.RiscOS.Sources.HAL.OMAP4.s.SDMA
    changes for working sound support

Submissions from Willi Theiss. Compiles, but not tested here.

Version 0.05. Tagged as 'OMAP4-0_05'
@
text
@d133 1
a133 1
VBC_DVI	LCDCONFIG	24,	3,		&28,		TFT,	0,	0,		170100
@


1.2
log
@  Minor additions to OMAP4 HAL
Detail:
  s.board: adjusted max pixel-clock rate
  s.Top: changed to match rev 1.15 of HAL.OMAP3.s.Top
Admin:
  Updates from Willi Theiss

Version 0.02. Tagged as 'OMAP4-0_02'
@
text
@d22 1
a22 1
	% $len*4
d39 1
a39 1
	% $len
a117 1
M_PD	*	(1 << MixerChannel_Predriver)
d128 2
a129 2
	BOARDCFG	"PandaBoard",	L4_UART3,	"312",	"123",	3,	2,		&16,		0,		1,	MachID_PandaBoard,	M_HSO+M_AI,	VBC_C,		1,		VBC_DVI,	None
	BOARDCFG	"SDP4430",	L4_UART3,	"312",	"123",	3,	2,		&16,		170,		24,	MachID_OMAP4430SDP,	M_HSO+M_AI,	0,		1,		VBC_DVI,	None
@


1.1
log
@Initial revision
@
text
@d134 1
a134 1
VBC_DVI	LCDCONFIG	24,	3,		&28,		TFT,	0,	0,		103000
@


1.1.1.1
log
@  Initial import of OMAP4 HAL
Detail:
  Target platform is the Pandaboard, based on the TI OMAP4 SoC.
  Port is not yet complete, in particular, audio is not yet working.
Admin:
  Submission from Willi Theiß
@
text
@@
