head	1.3;
access;
symbols
	OMAP4-0_60:1.3
	OMAP4-0_59-1_52_2_3:1.3
	OMAP4-0_59:1.3
	OMAP4-0_58:1.3
	OMAP4-0_57:1.3
	OMAP4-0_56:1.3
	OMAP4-0_55:1.3
	OMAP4-0_54-1_52_2_2:1.3
	OMAP4-0_54:1.3
	OMAP4-0_53:1.3
	OMAP4-0_52-1_52_2_1:1.3
	SMP:1.3.0.2
	SMP_bp:1.3
	OMAP4-0_52:1.3
	OMAP4-0_51:1.3
	OMAP4-0_50:1.3
	OMAP4-0_49:1.3
	OMAP4-0_48:1.3
	OMAP4-0_47:1.3
	OMAP4-0_46:1.3
	OMAP4-0_45:1.3
	OMAP4-0_44:1.3
	OMAP4-0_43:1.3
	OMAP4-0_42:1.3
	OMAP4-0_41:1.3
	OMAP4-0_40:1.3
	OMAP4-0_39:1.3
	OMAP4-0_38:1.3
	OMAP4-0_37:1.3
	OMAP4-0_36:1.3
	OMAP4-0_35:1.3
	OMAP4-0_34:1.3
	OMAP4-0_33:1.3
	OMAP4-0_32:1.3
	OMAP4-0_31:1.3
	OMAP4-0_30:1.3
	OMAP4-0_29:1.3
	OMAP4-0_28:1.3
	OMAP4-0_27:1.3
	OMAP4-0_26:1.3
	OMAP4-0_25:1.3
	OMAP4-0_24:1.3
	OMAP4-0_23:1.3
	OMAP4-0_22:1.3
	OMAP4-0_21:1.3
	OMAP4-0_20:1.2
	OMAP4-0_19:1.2
	OMAP4-0_18:1.2
	OMAP4-0_17:1.2
	OMAP4-0_16:1.2
	OMAP4-0_15:1.2
	OMAP4-0_14:1.2
	OMAP4-0_13:1.2
	OMAP4-0_12:1.2
	OMAP4-0_11:1.2
	OMAP4-0_10:1.2
	OMAP4-0_09:1.2
	OMAP4-0_08:1.2
	OMAP4-0_07:1.2
	OMAP4-0_06:1.1.1.1
	OMAP4-0_05:1.1.1.1
	OMAP4-0_04:1.1.1.1
	OMAP4-0_03:1.1.1.1
	OMAP4-0_02:1.1.1.1
	OMAP4-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.09.28.07.09.36;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	Iq3Q8pQtPDENQa7x;

1.2
date	2012.03.25.11.42.58;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	4FjnaYBzkPTA6gYv;

1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	M3eV6gzJuoHHMezv;

1.1.1.1
date	2011.09.12.19.01.15;	author bavison;	state Exp;
branches;
next	;
commitid	M3eV6gzJuoHHMezv;


desc
@@


1.3
log
@Modification to RISCOS_IICOpV
Now assumes an IICStatus return, per Kernel-5_35-4_79_2_196.
Built, but not tested.

Version 0.21. Tagged as 'OMAP4-0_21'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        $GetIO

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  TPSRead
        EXPORT  TPSWrite

; A couple of utility functions for reading/writing registers from the TWL4030/TPS65950 IC
; (although the protocol is probably generic enough to work with many other IIC devices)

; For the majority of uses, v1 simply needs to be initialised as follows:
; LDR  v1, OSentries+4*OS_IICOpV
; i.e. the IIC transfer will be performed on IIC bus 0, via RISCOS_IICOpV,
; returning an IICStatus.
; When using OS_IICOpV, v2 can be left uninitialised.

TPSRead
        ; a1 = IIC address(*2)
        ; a2 = buffer
        ; a3 = count
        ; a4 = start register
        ; v1 = IIC func
        ; v2 = IIC param
        ; out:
        ; a1 = return code
        ; ip corrupted
        ; buffer updated
        ORR     a1, a1, #1 ; read
        Push    "a1-a4,lr" ; Push regs and second iic_transfer block
        EOR     a1, a1, #1+(1:SHL:29) ; write with retry
        ADD     a2, sp, #12
        MOV     a3, #1
        Push    "a1-a3" ; push first iic_transfer block
        MOV     a1, sp
        MOV     a2, #2
        MOV     a3, v2
        BLX     v1
        ADD     sp, sp, #16
        Pull    "a2-a4,pc"

TPSWrite
        ; a1 = IIC address(*2)
        ; a2 = buffer
        ; a3 = count
        ; a4 = start register
        ; v1 = IIC func
        ; v2 = IIC param
        ; out:
        ; a1 = return code
        ; ip corrupted
        ORR     a1, a1, #1:SHL:31 ; Write (no start bit)
        Push    "a1-a4,lr" ; Push regs and second iic_transfer block
        EOR     a1, a1, #(1:SHL:29)+(1:SHL:31) ; Write (retries)
        ADD     a2, sp, #12
        MOV     a3, #1
        Push    "a1-a3" ; push first iic_transfer block
        MOV     a1, sp
        MOV     a2, #2
        MOV     a3, v2
        BLX     v1
        ADD     sp, sp, #16
        Pull    "a2-a4,pc"

        END
@


1.2
log
@Bulk expand of tabs.
Helps to make tracking changes between OMAP3 and OMAP4 less eye watering, but otherwise functionally the same as 0.06.

Version 0.07. Tagged as 'OMAP4-0_07'
@
text
@d33 2
a34 2
; i.e. the IIC transfer will be performed on IIC bus 0, via RISCOS_IICOpV. This means that 0
; will be returned on success, or an OS error block pointer on failure!
@


1.1
log
@Initial revision
@
text
@a14 6
	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:System
	GET	Hdr:Machine.<Machine>
	GET	Hdr:ImageSize.<ImageSize>
	$GetIO
d16 6
a21 1
	AREA	|Asm$$Code|, CODE, READONLY, PIC
d23 4
a26 2
	EXPORT	TPSRead
	EXPORT	TPSWrite
d38 22
a59 22
	; a1 = IIC address(*2)
	; a2 = buffer
	; a3 = count
	; a4 = start register
	; v1 = IIC func
	; v2 = IIC param
	; out:
	; a1 = return code
	; ip corrupted
	; buffer updated
	ORR	a1, a1, #1 ; read
	Push	"a1-a4,lr" ; Push regs and second iic_transfer block
	EOR	a1, a1, #1+(1:SHL:29) ; write with retry
	ADD	a2, sp, #12
	MOV	a3, #1
	Push	"a1-a3" ; push first iic_transfer block
	MOV	a1, sp
	MOV	a2, #2
	MOV	a3, v2
	BLX	v1
	ADD	sp, sp, #16
	Pull	"a2-a4,pc"
d62 21
a82 21
	; a1 = IIC address(*2)
	; a2 = buffer
	; a3 = count
	; a4 = start register
	; v1 = IIC func
	; v2 = IIC param
	; out:
	; a1 = return code
	; ip corrupted
	ORR	a1, a1, #1:SHL:31 ; Write (no start bit)
	Push	"a1-a4,lr" ; Push regs and second iic_transfer block
	EOR	a1, a1, #(1:SHL:29)+(1:SHL:31) ; Write (retries)
	ADD	a2, sp, #12
	MOV	a3, #1
	Push	"a1-a3" ; push first iic_transfer block
	MOV	a1, sp
	MOV	a2, #2
	MOV	a3, v2
	BLX	v1
	ADD	sp, sp, #16
	Pull	"a2-a4,pc"
d84 1
a84 1
	END
@


1.1.1.1
log
@  Initial import of OMAP4 HAL
Detail:
  Target platform is the Pandaboard, based on the TI OMAP4 SoC.
  Port is not yet complete, in particular, audio is not yet working.
Admin:
  Submission from Willi Thei√ü
@
text
@@
