head	1.3;
access;
symbols
	OMAP3-1_18:1.3
	OMAP3-1_17:1.3
	OMAP3-1_16:1.3
	OMAP3-1_15:1.3
	OMAP3-1_14:1.2
	SMP:1.2.0.2
	SMP_bp:1.2
	OMAP3-1_13:1.2
	OMAP3-1_12:1.2
	OMAP3-1_11:1.2
	OMAP3-1_10:1.2
	OMAP3-1_09:1.2
	OMAP3-1_08:1.2
	OMAP3-1_07:1.2
	OMAP3-1_06:1.2
	OMAP3-1_05:1.2
	OMAP3-1_04:1.2
	OMAP3-1_03:1.2
	OMAP3-1_02:1.2
	OMAP3-1_01:1.2
	OMAP3-1_00:1.2
	OMAP3-0_99:1.2
	OMAP3-0_98:1.2
	OMAP3-0_97:1.2
	OMAP3-0_96:1.2
	OMAP3-0_95:1.2
	OMAP3-0_94:1.2
	OMAP3-0_93:1.2
	OMAP3-0_92:1.2
	OMAP3-0_91:1.2
	OMAP3-0_90:1.2
	OMAP3-0_89:1.2
	OMAP3-0_88:1.2
	OMAP3-0_87:1.2
	OMAP3-0_86:1.2
	OMAP3-0_85:1.2
	OMAP3-0_84:1.2
	OMAP3-0_83:1.2
	OMAP3-0_82:1.2
	OMAP3-0_81:1.2
	OMAP3-0_80:1.1
	OMAP3-0_79:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.09.09.10.45.44;	author rool;	state Exp;
branches;
next	1.2;
commitid	7FzPWEY96oS9Hv6A;

1.2
date	2012.09.30.16.36.43;	author jlee;	state Exp;
branches;
next	1.1;
commitid	mVbXtrwyVtNKEzmw;

1.1
date	2012.09.21.15.17.06;	author jlee;	state Exp;
branches;
next	;
commitid	x7ZCrdwZgdjnvplw;


desc
@@


1.3
log
@Participate in keyboard scan dependencies
Detail:
  Replace keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Delete unused workspace.
  Don't link against HAL USB library.
Admin:
  Submission for USB bounty.

Version 1.15. Tagged as 'OMAP3-1_15'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Keyboard matrix handling

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>

        GET     Hdr:Proc
        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.omap3530
        GET     hdr.StaticWS
        GET     hdr.UART
        GET     hdr.GPIO
        GET     hdr.PRCM

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  PandoraKB_Init
        IMPORT  TPSRead
        IMPORT  TPSWrite

KEYPAD_IIC * &4A*2

; IIC registers, just the interesting ones
KEYP_CTRL_REG   * &D2
KEY_DEB_REG     * &D3
LK_PTV_REG      * &D5
TIME_OUT_REG1   * &D6
TIME_OUT_REG2   * &D7
FULL_CODE       * &DB ; 8 registers
KEYP_EDR        * &E8
KEYP_SIH_CTRL   * &E9

; Register bits
KEYP_CTRL_REG_SOFT_NRST       * &01
KEYP_CTRL_REG_SOFTMODEN       * &02
KEYP_CTRL_REG_LK_EN           * &04
KEYP_CTRL_REG_TOE_EN          * &08
KEYP_CTRL_REG_TOLE_EN         * &10
KEYP_CTRL_REG_RP_EN           * &20
KEYP_CTRL_REG_KBD_ON          * &40

KEYP_EDR_ITKPFALLING          * &01
KEYP_EDR_ITKPRISING           * &02
KEYP_EDR_ITLKFALLING          * &04
KEYP_EDR_ITLKRISING           * &08
KEYP_EDR_ITTOFALLING          * &10
KEYP_EDR_ITTORISING           * &20
KEYP_EDR_ITMISFALLING         * &40
KEYP_EDR_ITMISRISING          * &80

KEYP_SIH_CTRL_EXCLEN          * &01
KEYP_SIH_CTRL_PENDDIS         * &02
KEYP_SIH_CTRL_COR             * &04

Pandora_GPIO_Ctrl * 104
Pandora_GPIO_Copy * 111 ; B button on gamepad; default mapping is for A/B/X/Y to be home/end/page down/page up

PandoraKB_Init
        Entry   "v1,v2"
        ; Set required GPIOs as input
        GPIO_PrepareC a1,a2,Pandora_GPIO_Ctrl
        GPIO_SetAsInput a1,a2,a3
        GPIO_PrepareC a1,a2,Pandora_GPIO_Copy
        GPIO_SetAsInput a1,a2,a3
        ; Set up keyboard matrix controller
        ADR     a2, init_data
        MOV     a3, #1
        LDR     v1, OSentries + 4*OS_IICOpV
10
        LDRB    a4, [a2], #1
        CMP     a4, #0
        BEQ     %FT20
        MOV     a1, #KEYPAD_IIC
        BL      TPSWrite
        ADD     a2, a2, #1
        B       %BT10
20
        PullEnv
        ; Register the Pandora keyboard HAL device
        ADR     a2, PandoraKBTemplate
        MOV     a1, #0
        LDR     pc, OSentries + 4*OS_AddDevice ; Tail call

init_data
        DCB     KEYP_CTRL_REG
        DCB     KEYP_CTRL_REG_SOFT_NRST + KEYP_CTRL_REG_SOFTMODEN + KEYP_CTRL_REG_TOE_EN + KEYP_CTRL_REG_KBD_ON
        DCB     KEYP_EDR
        DCB     KEYP_EDR_ITKPFALLING + KEYP_EDR_ITKPRISING + KEYP_EDR_ITTORISING
        DCB     LK_PTV_REG
        DCB     4<<5
        DCB     KEY_DEB_REG
        DCB     20
        DCB     TIME_OUT_REG1
        DCB     100
        DCB     TIME_OUT_REG2
        DCB     0
        DCB     KEYP_SIH_CTRL
        DCB     KEYP_SIH_CTRL_PENDDIS + KEYP_SIH_CTRL_COR
        ; Terminator
        DCB     0
        ALIGN

PandoraKBTemplate
        DCW     HALDeviceType_HID + HALDeviceHID_Keyboard
        DCW     HALDeviceID_Keyboard_Pandora
        DCD     HALDeviceBus_Ser + HALDeviceSerBus_IIC ; Keyboard + nubs on IIC, gamepad on OMAP GPIO
        DCD     0               ; API version
        DCD     PandoraKBDesc   ; Description
        DCD     0               ; Address (none)
        %       12              ; Reserved
        DCD     PandoraKBActivate
        DCD     PandoraKBDeactivate
        DCD     PandoraKBReset
        DCD     PandoraKBSleep
        DCD     -1              ; Device (none)
        DCD     0               ; TestIRQ
        DCD     0               ; ClearIRQ
        %       4
        ASSERT  (.-PandoraKBTemplate) = HALDeviceSize

PandoraKBDesc
        =       "Pandora keyboard", 0
        ALIGN

        ; These don't do much
PandoraKBActivate
        MOV     a1, #1
PandoraKBDeactivate
PandoraKBReset
        MOV     pc, lr

PandoraKBSleep
        MOV     a1, #0
        MOV     pc, lr

        END
@


1.2
log
@Implement Pandora keyboard scan & audio support
Detail:
  s/PAudio, Makefile - Added Pandora audio driver. The Pandora uses a different audio setup to all the other OMAP boards, so to keep things simple the implementation is kept in its own file seperate from the main one.
  s/KbdMatrix, hdr/StaticWS - Implemented Pandora boot-time keyboard scan. This uses the keyboard matrix & GPIO keys instead of the USB libraries.
  s/Boot - Moved call to Audio_Init into the per-board HAL_InitDevices code so that Pandora can call PandoraAudio_Init instead.
  s/SDIO - For MMC1, avoid touching VSIM if the bus width is only 4 bits (i.e. on Pandora). On Pandora VSIM is used for the audio DAC instead.
Admin:
  Tested on Pandora


Version 0.81. Tagged as 'OMAP3-0_81'
@
text
@a34 4
        EXPORT  Pandora_KbdScanSetup
        EXPORT  Pandora_KbdScan
        EXPORT  Pandora_KbdScanFinish
        EXPORT  Pandora_KbdScanInterrupt
d76 1
a76 2
; Pandora keyboard scan code
Pandora_KbdScanSetup ROUT
d90 1
a90 1
        EXIT    EQ
d95 7
a118 17

; Keys needed for keyboard scanning
        MACRO
        MatrixKey $row,$col,$key
        DCB     $row
        DCB     1<<$col
        DCB     KbdFlag_$key
        MEND

PandoraKeys
;        MatrixKey ,,Ctrl - Not on keyboard, GPIO 104
        MatrixKey 7,3,Shift
        MatrixKey 4,2,R
        MatrixKey 3,2,T
        MatrixKey 2,0,Delete
;        MatrixKey ,,Copy - No copy/end key, but default gamepad mapping is for B (GPIO 111) to act as end
        DCB     255
a120 60
Pandora_KbdScan ROUT
        Entry   "v1-v2",8
        ; Update scan results
        LDR     v2, KbdMatrixScan
        ORR     v2, v2, #KbdFlag_Present
        GPIO_PrepareC a1,a2,Pandora_GPIO_Ctrl
        GPIO_GetInput a1,a1,a2
        TEQ     a1, #0 ; Most gamepad controls are active low
        ORREQ   v2, v2, #KbdFlag_Ctrl
        GPIO_PrepareC a1,a2,Pandora_GPIO_Copy
        GPIO_GetInput a1,a1,a2
        TEQ     a1, #0 ; Most gamepad controls are active low
        ORREQ   v2, v2, #KbdFlag_Copy
        ; Check keyboard matrix
        MOV     a1, #KEYPAD_IIC
        MOV     a2, sp
        MOV     a3, #8
        MOV     a4, #FULL_CODE
        LDR     v1, OSentries + 4*OS_IICOpV
        BL      TPSRead
        CMP     a1, #0
        BNE     %FT20
        ADR     a1, PandoraKeys
10
        LDRB    a2, [a1], #1
        CMP     a2, #255
        BEQ     %FT20
        LDRB    a3, [a1], #1
        LDRB    a4, [a1], #1
        LDRB    a2, [sp, a2]
        TST     a2, a3
        ORRNE   v2, v2, a4
        B       %BT10    
20
        ; We know the keyboard is present, so only do a 1 second scan instead of a full 5 second one (or however long RISC OS decides to run it for)
        ; We'll use the 32K timer as our time source since it's easy to get hold of
        LDR     a1, L4_32KTIMER_Log
        LDR     a1, [a1, #REG_32KSYNCNT_CR]
        LDR     a2, KbdMatrixTime
        ; Timing starts from the first call to KbdScan
        CMP     a2, #0
        ADDEQ   a2, a1, #32768
        STREQ   a2, KbdMatrixTime
        SUBS    a1, a1, a2
        ORRGE   v2, v2, #KbdFlag_Done
        STR     v2, KbdMatrixScan
        MOV     a1, v2
        EXIT

        ; Nothing to do for these two
Pandora_KbdScanInterrupt
Pandora_KbdScanFinish
        MOV     pc, lr

PandoraKB_Init
        ; Register the Pandora keyboard HAL device
        ADR     a2, PandoraKBTemplate
        MOV     a1, #0
        LDR     pc, OSentries + 4*OS_AddDevice ; Tail call

@


1.1
log
@Tidy up board-specific code. Improve Pandora support.
Detail:
  hdr/board, s/board, s/Boot - Tidied up board-specific code a bit by adding more board-specific function pointers to the BoardConfig struct instead of relying on manual board detection in code.
  s/board - Disable Pandora VideoGPIO as turning the LCD on & off seems to result in graphical corruption, most likely due to settings which were set by the SPI interface being lost.
  s/KbdMatrix, Makefile - New file for handling the Pandora's keyboard matrix (and anything else that may require keyboard matrix code in the HAL). Contains stub code for the boot-time keyboard scan, and code to register a keyboard HAL device for detection by the PandoraKey module.
  s/Boot - Add soft-off support for Pandora. Add Pandora-specific initialisation code to enable some extra power supplies (touchscreen, nubs, audio DAC, EHCI PHY)
  s/KbdScan - Use Pandora-specific keyboard scan code instead of USB code when running on Pandora
  s/SDIO - Correct sense of MMC activity LEDs on Pandora. Now only lit during periods of activity, to match behaviour of the Pandora Linux distro.
  s/Video - Add some switched out hack code to allow easier debugging of aborts that occur during ROM initialisation
Admin:
  Tested on Pandora, rev C2 BB, rev A2 BB-xM, rev C1 TouchBook


Version 0.79. Tagged as 'OMAP3-0_79'
@
text
@d30 2
d40 2
d43 143
a185 5
; TODO - Pandora keyboard scan code
; For now just skip the scan
Pandora_KbdScan
        MOV     a1, #KbdFlag_Done
Pandora_KbdScanSetup
@

