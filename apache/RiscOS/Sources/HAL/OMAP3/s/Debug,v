head	1.8;
access;
symbols
	OMAP3-1_18:1.8
	OMAP3-1_17:1.8
	OMAP3-1_16:1.8
	OMAP3-1_15:1.8
	OMAP3-1_14:1.8
	SMP:1.8.0.2
	SMP_bp:1.8
	OMAP3-1_13:1.8
	OMAP3-1_12:1.8
	OMAP3-1_11:1.8
	OMAP3-1_10:1.8
	OMAP3-1_09:1.8
	OMAP3-1_08:1.8
	OMAP3-1_07:1.8
	OMAP3-1_06:1.8
	OMAP3-1_05:1.7
	OMAP3-1_04:1.7
	OMAP3-1_03:1.7
	OMAP3-1_02:1.7
	OMAP3-1_01:1.7
	OMAP3-1_00:1.7
	OMAP3-0_99:1.7
	OMAP3-0_98:1.7
	OMAP3-0_97:1.7
	OMAP3-0_96:1.7
	OMAP3-0_95:1.7
	OMAP3-0_94:1.7
	OMAP3-0_93:1.7
	OMAP3-0_92:1.7
	OMAP3-0_91:1.7
	OMAP3-0_90:1.7
	OMAP3-0_89:1.7
	OMAP3-0_88:1.7
	OMAP3-0_87:1.7
	OMAP3-0_86:1.7
	OMAP3-0_85:1.7
	OMAP3-0_84:1.7
	OMAP3-0_83:1.7
	OMAP3-0_82:1.7
	OMAP3-0_81:1.7
	OMAP3-0_80:1.7
	OMAP3-0_79:1.7
	OMAP3-0_78:1.7
	OMAP3-0_77:1.7
	OMAP3-0_76:1.7
	OMAP3-0_75:1.7
	OMAP3-0_74:1.7
	OMAP3-0_73:1.7
	OMAP3-0_72:1.7
	OMAP3-0_71:1.7
	OMAP3-0_70:1.7
	OMAP3-0_69:1.7
	OMAP3-0_68:1.7
	OMAP3-0_67:1.7
	OMAP3-0_66:1.7
	OMAP3-0_65:1.7
	OMAP3-0_64:1.7
	OMAP3-0_63:1.7
	OMAP3-0_62:1.7
	OMAP3-0_61:1.7
	OMAP3-0_60:1.7
	OMAP3-0_59:1.7
	OMAP3-0_58:1.7
	OMAP3-0_57:1.7
	OMAP3-0_56:1.7
	OMAP3-0_55:1.7
	OMAP3-0_54:1.7
	OMAP3-0_53:1.7
	OMAP3-0_52:1.7
	OMAP3-0_51:1.7
	OMAP3-0_50:1.7
	OMAP3-0_49:1.7
	OMAP3-0_48:1.7
	OMAP3-0_47:1.7
	OMAP3-0_46:1.7
	OMAP3-0_45:1.7
	OMAP3-0_44:1.7
	OMAP3-0_43:1.7
	OMAP3-0_42:1.7
	OMAP3-0_41:1.7
	OMAP3-0_40:1.7
	OMAP3-0_39:1.7
	OMAP3-0_38:1.7
	OMAP3-0_37:1.7
	OMAP3-0_36:1.7
	OMAP3-0_35:1.7
	OMAP3-0_34:1.7
	OMAP3-0_33:1.7
	OMAP3-0_32:1.7
	OMAP3-0_31:1.7
	OMAP3-0_30:1.7
	OMAP3-0_29:1.7
	OMAP3-0_28:1.7
	OMAP3-0_27:1.7
	OMAP3-0_26:1.7
	OMAP3-0_25:1.7
	OMAP3-0_24:1.7
	OMAP3-0_23:1.7
	OMAP3-0_22:1.6
	OMAP3-0_21:1.6
	OMAP3-0_20:1.6
	OMAP3-0_19:1.6
	OMAP3-0_18:1.5
	OMAP3-0_17:1.5
	OMAP3-0_16:1.5
	OMAP3-0_15:1.5
	OMAP3-0_14:1.5
	OMAP3-0_13:1.5
	OMAP3-0_12:1.5
	OMAP3-0_11:1.4
	OMAP3-0_10:1.4
	OMAP3-0_09:1.4
	OMAP3-0_08:1.4
	OMAP3-0_07:1.3
	OMAP3-0_06:1.3
	OMAP3-0_05:1.2
	OMAP3-0_04:1.2
	OMAP3-0_03:1.1
	OMAP3-0_02:1.1
	OMAP3-0_01:1.1;
locks; strict;
comment	@# @;


1.8
date	2015.09.01.21.30.05;	author rool;	state Exp;
branches;
next	1.7;
commitid	Kqpp5Rt55dDW0Bzy;

1.7
date	2010.02.28.19.47.14;	author jlee;	state Exp;
branches;
next	1.6;

1.6
date	2010.01.24.02.49.32;	author jlee;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.17.00.16.33;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.09.19.04.58;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.22.22.03.40;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.08.22.25.11;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.01.13.58.05;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Reflect changes from OMAP4 HAL
omap3530.hdr/Debug,s:
  Define a dummy symbol so when debug is enabled there aren't conflicting IMPORT and EXPORTs.
Boot.s:
  Update comment to match HAL function names.

Version 1.06. Tagged as 'OMAP3-1_06'
@
text
@; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        GET     Hdr:Proc

        GET     Hdr:OSEntries

        ; prevent incompatible debug definitions from central header file
        GBLL    DebugExported
        GET     hdr.omap3530
        GET     hdr.UART
        GET     hdr.StaticWS

        EXPORT  HAL_DebugTX
        EXPORT  HAL_DebugRX
 [ Debug
        EXPORT  DebugHALPrint
        EXPORT  DebugHALPrintReg
        EXPORT  DebugMemDump
        EXPORT  DebugHALPrintByte
        EXPORT  DebugCallstack
 ]

        AREA    |Asm$$Code|, CODE, READONLY, PIC

 [ Debug

; No initialisation; assumes we've booted from x-loader and thus the serial
; port is already set up

; In all cases, sb must be HAL workspace ptr/board config ptr

; in: a1 = character to TX
HAL_DebugTX
        LDR     a2, [sb, #BoardConfig_DebugUART]
HAL_DebugTX_Loop
        LDRB    a3, [a2, #UART_LSR]
        TST     a3, #THRE
        BEQ     HAL_DebugTX_Loop
        STRB    a1, [a2, #UART_THR]
        MOV     pc, lr

; out: a1 = character, or -1 if none available
HAL_DebugRX     ROUT
        LDR     a2, [sb, #BoardConfig_DebugUART]
        LDRB    a1, [a2, #UART_LSR]
        TST     a1, #DR
        MOVEQ   a1, #-1
        LDRNEB  a1, [a2, #UART_RBR]
        MOV     pc, lr

DebugHALPrint
        Push    "a1-a4,v1"
        MOV     v1, lr
10      LDRB    a1, [v1], #1
        TEQ     a1, #0
        BEQ     %FT20
        BL      HAL_DebugTX
        B       %BT10
20      ADD     v1, v1, #3
        BIC     lr, v1, #3
        Pull    "a1-a4,v1"
        MOV     pc, lr

DebugHALPrintReg ; Output number on top of stack to the serial port
        Push    "a1-a4,v1"
        LDR     a1, [sp,#5*4]
        LDR     a2, [sb, #BoardConfig_DebugUART]
        ADR     a3, hextab
        MOV     a4, #8
10
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT10
        LDRB    v1, [a3, a1, LSR #28]
        STRB    v1, [a2, #UART_THR]
        MOV     a1, a1, LSL #4
        SUBS    a4, a4, #1
        BNE     %BT10
20
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT20
        MOV     v1, #13
        STRB    v1, [a2, #UART_THR]
30
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT30
        MOV     v1, #10
        STRB    v1, [a2, #UART_THR]

        Pull    "a1-a4,v1"
        ADD     sp, sp, #4        
        MOV     pc, lr

hextab  DCB "0123456789abcdef"

DebugMemDump ; r0 = start, r1 = size
        Push    "a1-a4,v1-v3,lr"
        MOV     v2, a1
        MOV     v3, a2
        LDR     a2, [sb, #BoardConfig_DebugUART]
        ADR     a3, hextab
100
        ; Print addr
        MOV     a1, v2
        MOV     a4, #8
10
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT10
        LDRB    v1, [a3, a1, LSR #28]
        STRB    v1, [a2, #UART_THR]
        MOV     a1, a1, LSL #4
        SUBS    a4, a4, #1
        BNE     %BT10
20
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT20
        MOV     v1, #32
        STRB    v1, [a2, #UART_THR]

        ; Print value
        LDR     a1, [v2]
        MOV     a4, #8
10
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT10
        LDRB    v1, [a3, a1, LSR #28]
        STRB    v1, [a2, #UART_THR]
        MOV     a1, a1, LSL #4
        SUBS    a4, a4, #1
        BNE     %BT10
20
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT20
        MOV     v1, #13
        STRB    v1, [a2, #UART_THR]
30
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT30
        MOV     v1, #10
        STRB    v1, [a2, #UART_THR]

        ADD     v2, v2, #4 ; Counter dodgy exception vector
        SUBS    v3, v3, #4
        BGT     %BT100
        Pull    "a1-a4,v1-v3,pc"

DebugHALPrintByte ; Output a byte on top of stack to the serial port
        Push    "a1-a4,v1"
        LDR     a1, [sp,#5*4]
        LDR     a2, [sb, #BoardConfig_DebugUART]
        ADR     a3, hextab
        MOV     a4, #2
10
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT10
        LDRB    v1, [a3, a1, LSR #4]
        STRB    v1, [a2, #UART_THR]
10
        LDRB    v1, [a2, #UART_LSR]
        TST     v1, #THRE
        BEQ     %BT10
        AND     a1, a1, #&F
        LDRB    v1, [a3, a1]
        STRB    v1, [a2, #UART_THR]
        Pull    "a1-a4,v1"
        ADD     sp, sp, #4        
        MOV     pc, lr

DebugCallstack ; Dump the stack until we crash
        Push    "r14"
        ADD     r14,r13,#4 ; Push original SP onto stack
        Push    "r0-r12,r14"
        MRS     a1, CPSR
        Push    "a1"
        ORR     a1, a1, #F32_bit+I32_bit ; No interruptions!
        MSR     CPSR_c, a1
        ADR     lr, DebugHALPrintReg
        B       DebugHALPrintReg

 | ; Debug

HAL_DebugRX
        MOV     a1, #-1
        ; fall through
HAL_DebugTX
        MOV     pc, lr

 ] ; Debug

;        EXPORT  |_dprintf|
;|_dprintf|
;        B       printf

        END
@


1.7
log
@Update OMAP3 HAL to support new OMAPVideo module, plus other minor changes
Detail:
  hdr/StaticWS, hdr/Video, hdr/board, hdr/omap3530, s/Boot, s/Video, s/board - Add new HALDoesVideo switch to control whether the HAL provides the video driver or whether a HAL device is used to expose the video hardware to the OMAPVideo module. Switch defaults to the 'off' state, i.e. OMAPVideo provides the video driver. Also updated the board config struct to contain more detailed information about the video capabilities of each board.
  s/Audio - fix the FIFO underflow/overflow IRQ handler to disable the IRQ after the underflow/overflow has been detection. This prevents the OS from (potentially) getting stuck in a loop servicing the interrupt and never reaching the state where it can shut down & re-initialise the audio to fix the error properly.
  s/Debug - add DebugCallstack function that disables IRQs/FIQs and dumps the stack contents over the serial port
Admin:
  Tested on rev C2 beagleboard.


Version 0.23. Tagged as 'OMAP3-0_23'
@
text
@d25 2
@


1.6
log
@Update OMAP HAL to support different board configs, plus use new YearLOIsGood flag to ensure correct RTC handling, plus other misc tidying
Detail:
  The OMAP HAL now has multiple entry points, one per board config. See Top.s/board.s for more info.
  audio.s - Moved APLL_CTL value to board config
  board.s - New file to list all the settings for the different board configs
  boot.s - Change HAL_Init to deal with the new board config stuff
  debug.s - Debug UART now specified in board config
  GPIO.s - A few utility functions for handling OMAP/TPS GPIO pins
  I2C.s - Update to use new board config struct
  RAM.s - Disable the beagleboard-specific RAM init code. Instead we'll just rely on u-boot to initialise all our RAM for us.
  RTC.s - Get rid of the magic numbers, and use the YearLOIsGood flag to indicate to RISC OS that YearLO is 2-digit BCD
  Top.s - Got rid of old debug code and rewrote initial flow to handle detecting & storing the board config
  UART.s - Update to use board config struct, support multiple UARTs
  USB.s - Get EHCI PHY power GPIO from board config
  Video.s - Get DVI framer power GPIO and max pixel rate from board config. Add 'PassiveVideo' option, to build a driver that doesn't alter the video output settings - should hopefully result in a usable display on Touch Book, etc.
  board.hdr - Definition of board config table struct
  GPIO.hdr - Add lots of macros for handling OMAP GPIO pins, new constants for OMAP/TPS GPIO
  I2C.hdr - Added I2C transfer block struct, HAL I2C API transfer states (both moved here from other source files)
  omap3530.hdr - Move/remove some unwanted constants, disable DebugChar for now
  StaticWS.hdr - Move I2C transfer block struct to I2C.hdr, add board config struct to HAL workspace, get rid of unused 64K AllocArea
  Timers.hdr - Tidy up constants a bit
  UART.hdr - Add UARTCLK (moved from StaticWS.hdr), UART IRQ #'s
  Makefile - add GPIO.s
Admin:
  Tested on rev C2 beagleboard. Board configs for other board types may be inaccurate in a couple of places.


Version 0.19. Tagged as 'OMAP3-0_19'
@
text
@d36 1
d193 11
@


1.5
log
@Add I2C support to OMAP3 HAL. Fix FIQ handling. Improve debugging code.
Detail:
  Makefile, s/Boot, s/I2C, hdr/I2C, hdr/StaticWS - Adds I2C support to the OMAP3 HAL, via both HAL_IIC* and HAL_Video_IICOp.
  s/Interrupts - Fix bug causing incorrect clearing of FIQs
  s/Debug, s/Boot, hdr/omap3530 - Improve debugging code, and add simple FIQ debugger that outputs the PC to the serial port when the beagleboard USER button is pressed
  s/Stubs - Remove old stub functions
Admin:
  Tested on rev C2 beagleboard


Version 0.12. Tagged as 'OMAP3-0_12'
@
text
@a41 3
DebugUART       *       L4_UART3
DebugUART_Log   *       L4_UART3_Log

d45 2
d49 1
a49 4
        CMP     sb, #0 ; Use hardware address if sb is 0 (pre-MMU debug output)
        LDRNE   a2, DebugUART_Log
        CMPNE   a2, #0 ; Also use hardware address if logical ptr is null (to catch the debug message between RISCOS_Start and HAL_Init in the test kernel; but this will obviously fail on real kernels since the MMU would be enabled at that point)
        LDREQ   a2, =DebugUART
d59 1
a59 4
        CMP     sb, #0
        LDRNE   a2, DebugUART_Log
        CMPNE   a2, #0
        LDREQ   a2, =DebugUART
d82 1
a82 4
        CMP     sb, #0
        LDRNE   a2, DebugUART_Log
        CMPNE   a2, #0
        LDREQ   a2, =DebugUART
d117 1
a117 4
        CMP     sb, #0
        LDRNE   a2, DebugUART_Log
        CMPNE   a2, #0
        LDREQ   a2, =DebugUART
d172 1
a172 4
        CMP     sb, #0
        LDRNE   a2, DebugUART_Log
        CMPNE   a2, #0
        LDREQ   a2, =DebugUART
@


1.4
log
@OMAP3 HAL USB (EHCI) support, interrupt handling fixes
Detail:
  Makefile - added USB to objects list
  s/Boot, s/USB, hdr/StaticWS, hdr/USB - USB EHCI code
  s/Debug, s/Stubs, s/Timers, s/Top, s/UART, s/Video - Debugging tweaks and header dependency fixes
  s/Interrupts, hdr/omap3530 - Interrupt fixes & debugging code
  hdr/PRCM - typo fix
Admin:
  Tested on rev C2 beagleboard


Version 0.08. Tagged as 'OMAP3-0_08'
@
text
@d35 1
d182 26
@


1.3
log
@OMAP3 HAL video support, safer RAM initialisation
Detail:
  Makefile - Enable compilation of s.video
  hdr/StaticWS - New workspace entries for video support
  hdr/Video - Typo fix, VENC registers
  s/Boot - Change initialisation order for video support
  s/Debug - Added DebugMemDump routine
  s/RAM - Added code to verify RAM config, to avoid crash if a board looks like a revision C but doesn't have the extra RAM
  s/Stubs - Disable stub video functions
  s/Video - Working video code, beginnings of TV-out code
Admin:
  Tested on rev C2 beagleboard. Video code may only function correctly if kernel is loaded via u-boot.


Version 0.06. Tagged as 'OMAP3-0_06'
@
text
@d80 1
a80 5
20      MOV     a1, #13
        BL      HAL_DebugTX
        MOV     a1, #10
        BL      HAL_DebugTX
        ADD     v1, v1, #3
@


1.2
log
@OMAP3 HAL Beagleboard Rev C support, further video work.
Detail:
  s/Boot - Fixes for rev C beagleboard. Added GPIO code.
  s/Debug - DebugHALPrint, DebugHALPrintReg routines
  s/PRCM - PRCM_GetFreqSel added
  s/RAM - Fixes for rev C beagleboard. Sped up RAM clear by using more regs.
  s/Top - Fixes for rev C beagleboard
  s/Video - Video code potentially complete, but full of bugs and so still disabled.
  hdr/GPIO - Added GPIO registers
  hdr/omap3530 - Fixes for rev C beagleboard, GPIO, debug macros, QEMU support for new video code
  hdr/SDRC - Typo fix
  hdr/StaticWS - GPIO, pixel rate entries added
  hdr/Video - DSI PLL registers added
Admin:
  Tested on rev C beagleboard.


Version 0.04. Tagged as 'OMAP3-0_04'
@
text
@d31 1
d34 2
d126 59
@


1.1
log
@Basic OMAP3 HAL
Detail:
  Performs startup procedure suitable for any location in ROM or RAM. UART, timer, counter, interrupt & debug functionality implemented. Video support incomplete and nonfunctional.
Admin:
  Tested with HALTester & RISC OS kernel under qemu-omap3


Version 0.01. Tagged as 'OMAP3-0_01'
@
text
@d31 2
d69 54
@

