head	1.65;
access;
symbols
	OMAP3-1_18:1.65
	OMAP3-1_17:1.64
	OMAP3-1_16:1.64
	OMAP3-1_15:1.63
	OMAP3-1_14:1.62
	SMP:1.62.0.2
	SMP_bp:1.62
	OMAP3-1_13:1.62
	OMAP3-1_12:1.61
	OMAP3-1_11:1.61
	OMAP3-1_10:1.61
	OMAP3-1_09:1.61
	OMAP3-1_08:1.60
	OMAP3-1_07:1.59
	OMAP3-1_06:1.59
	OMAP3-1_05:1.58
	OMAP3-1_04:1.58
	OMAP3-1_03:1.57
	OMAP3-1_02:1.57
	OMAP3-1_01:1.56
	OMAP3-1_00:1.55
	OMAP3-0_99:1.54
	OMAP3-0_98:1.54
	OMAP3-0_97:1.53
	OMAP3-0_96:1.53
	OMAP3-0_95:1.53
	OMAP3-0_94:1.52
	OMAP3-0_93:1.52
	OMAP3-0_92:1.52
	OMAP3-0_91:1.51
	OMAP3-0_90:1.51
	OMAP3-0_89:1.50
	OMAP3-0_88:1.50
	OMAP3-0_87:1.49
	OMAP3-0_86:1.48
	OMAP3-0_85:1.48
	OMAP3-0_84:1.47
	OMAP3-0_83:1.46
	OMAP3-0_82:1.45
	OMAP3-0_81:1.44
	OMAP3-0_80:1.43
	OMAP3-0_79:1.42
	OMAP3-0_78:1.41
	OMAP3-0_77:1.41
	OMAP3-0_76:1.41
	OMAP3-0_75:1.41
	OMAP3-0_74:1.41
	OMAP3-0_73:1.41
	OMAP3-0_72:1.41
	OMAP3-0_71:1.40
	OMAP3-0_70:1.40
	OMAP3-0_69:1.40
	OMAP3-0_68:1.39
	OMAP3-0_67:1.38
	OMAP3-0_66:1.38
	OMAP3-0_65:1.37
	OMAP3-0_64:1.37
	OMAP3-0_63:1.36
	OMAP3-0_62:1.35
	OMAP3-0_61:1.35
	OMAP3-0_60:1.34
	OMAP3-0_59:1.34
	OMAP3-0_58:1.33
	OMAP3-0_57:1.33
	OMAP3-0_56:1.32
	OMAP3-0_55:1.31
	OMAP3-0_54:1.31
	OMAP3-0_53:1.30
	OMAP3-0_52:1.30
	OMAP3-0_51:1.29
	OMAP3-0_50:1.28
	OMAP3-0_49:1.28
	OMAP3-0_48:1.28
	OMAP3-0_47:1.27
	OMAP3-0_46:1.27
	OMAP3-0_45:1.27
	OMAP3-0_44:1.27
	OMAP3-0_43:1.26
	OMAP3-0_42:1.25
	OMAP3-0_41:1.25
	OMAP3-0_40:1.24
	OMAP3-0_39:1.23
	OMAP3-0_38:1.23
	OMAP3-0_37:1.22
	OMAP3-0_36:1.22
	OMAP3-0_35:1.22
	OMAP3-0_34:1.22
	OMAP3-0_33:1.21
	OMAP3-0_32:1.20
	OMAP3-0_31:1.19
	OMAP3-0_30:1.18
	OMAP3-0_29:1.18
	OMAP3-0_28:1.18
	OMAP3-0_27:1.17
	OMAP3-0_26:1.16
	OMAP3-0_25:1.16
	OMAP3-0_24:1.15
	OMAP3-0_23:1.14
	OMAP3-0_22:1.13
	OMAP3-0_21:1.13
	OMAP3-0_20:1.13
	OMAP3-0_19:1.13
	OMAP3-0_18:1.12
	OMAP3-0_17:1.11
	OMAP3-0_16:1.11
	OMAP3-0_15:1.10
	OMAP3-0_14:1.10
	OMAP3-0_13:1.9
	OMAP3-0_12:1.8
	OMAP3-0_11:1.7
	OMAP3-0_10:1.6
	OMAP3-0_09:1.6
	OMAP3-0_08:1.6
	OMAP3-0_07:1.5
	OMAP3-0_06:1.5
	OMAP3-0_05:1.4
	OMAP3-0_04:1.4
	OMAP3-0_03:1.3
	OMAP3-0_02:1.2
	OMAP3-0_01:1.1;
locks; strict;
comment	@# @;


1.65
date	2018.04.01.21.23.03;	author rsprowson;	state Exp;
branches;
next	1.64;
commitid	0gqrh5c5mI0fFMwA;

1.64
date	2018.03.30.07.55.39;	author rsprowson;	state Exp;
branches;
next	1.63;
commitid	KtoigwpzbOUegswA;

1.63
date	2017.09.09.10.45.44;	author rool;	state Exp;
branches;
next	1.62;
commitid	7FzPWEY96oS9Hv6A;

1.62
date	2016.08.20.22.02.41;	author jlee;	state Exp;
branches;
next	1.61;
commitid	myHej5M8RwhFO5jz;

1.61
date	2016.05.06.21.36.30;	author jlee;	state Exp;
branches;
next	1.60;
commitid	JTxsHfHHRMZW4t5z;

1.60
date	2016.01.08.23.01.47;	author jlee;	state Exp;
branches;
next	1.59;
commitid	Infb2G92SOfknbQy;

1.59
date	2015.09.01.21.30.05;	author rool;	state Exp;
branches;
next	1.58;
commitid	Kqpp5Rt55dDW0Bzy;

1.58
date	2015.04.08.07.37.48;	author rsprowson;	state Exp;
branches;
next	1.57;
commitid	KMkj6KKX1Lup6Lgy;

1.57
date	2015.02.26.21.33.48;	author jlee;	state Exp;
branches;
next	1.56;
commitid	NqqjtS7eXTNV2zby;

1.56
date	2014.12.21.10.23.18;	author rsprowson;	state Exp;
branches;
next	1.55;
commitid	lGOBeRwcPK3ruT2y;

1.55
date	2014.12.06.09.14.26;	author rsprowson;	state Exp;
branches;
next	1.54;
commitid	8lAlHPbA4aOoAX0y;

1.54
date	2014.10.25.17.35.39;	author rsprowson;	state Exp;
branches;
next	1.53;
commitid	f6nsEIQ8JetkIBVx;

1.53
date	2014.03.08.16.59.12;	author rsprowson;	state Exp;
branches;
next	1.52;
commitid	CdtiAiQ8vMQbWUrx;

1.52
date	2013.12.15.22.41.28;	author jlee;	state Exp;
branches;
next	1.51;
commitid	IxRihA5IJEl1vhhx;

1.51
date	2013.11.01.18.52.57;	author rsprowson;	state Exp;
branches;
next	1.50;
commitid	exT1lzL3WDXiEBbx;

1.50
date	2013.08.17.13.13.54;	author rsprowson;	state Exp;
branches;
next	1.49;
commitid	sIqq7KO5sExsdO1x;

1.49
date	2013.08.15.13.39.58;	author rsprowson;	state Exp;
branches;
next	1.48;
commitid	lNtJbslyvHNmqy1x;

1.48
date	2013.01.22.23.24.13;	author jlee;	state Exp;
branches;
next	1.47;
commitid	Almuk1cqEHQnfgBw;

1.47
date	2013.01.13.20.35.10;	author jlee;	state Exp;
branches;
next	1.46;
commitid	ZhVfsWvYtPXiB5Aw;

1.46
date	2012.11.21.23.36.58;	author jlee;	state Exp;
branches;
next	1.45;
commitid	FEuG5wzxvhvijitw;

1.45
date	2012.10.07.23.06.18;	author jlee;	state Exp;
branches;
next	1.44;
commitid	7PiwdqwfsfurAvnw;

1.44
date	2012.09.30.16.36.43;	author jlee;	state Exp;
branches;
next	1.43;
commitid	mVbXtrwyVtNKEzmw;

1.43
date	2012.09.23.23.09.06;	author jlee;	state Exp;
branches;
next	1.42;
commitid	AFn1mbdgXAGk3Ilw;

1.42
date	2012.09.21.15.17.06;	author jlee;	state Exp;
branches;
next	1.41;
commitid	x7ZCrdwZgdjnvplw;

1.41
date	2012.07.09.07.23.30;	author rsprowson;	state Exp;
branches;
next	1.40;
commitid	7gpK5cMp8ToogRbw;

1.40
date	2012.07.04.17.57.59;	author rsprowson;	state Exp;
branches;
next	1.39;
commitid	XMhv0CBs1aW0Wgbw;

1.39
date	2012.07.02.17.50.23;	author bavison;	state Exp;
branches;
next	1.38;
commitid	Ukt7tNPf83vnX0bw;

1.38
date	2012.06.07.23.15.20;	author bavison;	state Exp;
branches;
next	1.37;
commitid	AkxjZwpvyQFFyP7w;

1.37
date	2012.06.04.23.45.11;	author jlee;	state Exp;
branches;
next	1.36;
commitid	m70jrk0mZm9UOr7w;

1.36
date	2012.04.22.23.22.01;	author jlee;	state Exp;
branches;
next	1.35;
commitid	ijXjK5A9BHWF4V1w;

1.35
date	2012.03.25.11.49.07;	author rsprowson;	state Exp;
branches;
next	1.34;
commitid	c99VvmwezV2J8gYv;

1.34
date	2012.02.25.16.28.11;	author jlee;	state Exp;
branches;
next	1.33;
commitid	8PdHKiULlWJhCyUv;

1.33
date	2012.01.15.08.37.20;	author rsprowson;	state Exp;
branches;
next	1.32;
commitid	x0ab4JAMToptkfPv;

1.32
date	2012.01.07.21.22.24;	author rsprowson;	state Exp;
branches;
next	1.31;
commitid	ZJYg3muaiybPOhOv;

1.31
date	2011.12.11.20.05.49;	author jlee;	state Exp;
branches;
next	1.30;
commitid	qwIOyJsuN21ngOKv;

1.30
date	2011.12.04.19.14.50;	author jlee;	state Exp;
branches;
next	1.29;
commitid	ITJDzEpHbl3ScUJv;

1.29
date	2011.11.29.22.46.15;	author jlee;	state Exp;
branches;
next	1.28;
commitid	bYJYUuZQ3ItlxhJv;

1.28
date	2011.07.31.18.56.20;	author jlee;	state Exp;
branches;
next	1.27;
commitid	trdyxuPEj4eC9Itv;

1.27
date	2011.05.23.22.37.00;	author jlee;	state Exp;
branches;
next	1.26;
commitid	bnISDC4C6dEOARkv;

1.26
date	2011.05.22.19.36.05;	author jlee;	state Exp;
branches;
next	1.25;
commitid	VEzaKWvEB8QKCIkv;

1.25
date	2011.03.19.18.43.39;	author jlee;	state Exp;
branches;
next	1.24;
commitid	luFqb0o1sKujoucv;

1.24
date	2011.02.20.01.26.10;	author jlee;	state Exp;
branches;
next	1.23;

1.23
date	2011.01.23.22.48.21;	author jlee;	state Exp;
branches;
next	1.22;

1.22
date	2010.10.31.20.03.30;	author jlee;	state Exp;
branches;
next	1.21;

1.21
date	2010.10.26.23.27.13;	author jlee;	state Exp;
branches;
next	1.20;

1.20
date	2010.09.14.20.58.50;	author jlee;	state Exp;
branches;
next	1.19;

1.19
date	2010.08.14.21.35.29;	author jlee;	state Exp;
branches;
next	1.18;

1.18
date	2010.06.23.22.30.33;	author jlee;	state Exp;
branches;
next	1.17;

1.17
date	2010.04.03.20.23.29;	author jlee;	state Exp;
branches;
next	1.16;

1.16
date	2010.03.20.01.40.19;	author jlee;	state Exp;
branches;
next	1.15;

1.15
date	2010.03.20.01.07.07;	author jlee;	state Exp;
branches;
next	1.14;

1.14
date	2010.02.28.19.47.14;	author jlee;	state Exp;
branches;
next	1.13;

1.13
date	2010.01.24.02.49.31;	author jlee;	state Exp;
branches;
next	1.12;

1.12
date	2010.01.16.04.09.48;	author jlee;	state Exp;
branches;
next	1.11;

1.11
date	2009.11.28.22.30.57;	author jlee;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.27.22.34.23;	author jlee;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.23.01.03.01;	author jlee;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.17.00.16.32;	author jlee;	state Exp;
branches;
next	1.7;

1.7
date	2009.07.02.19.37.05;	author jlee;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.09.19.04.58;	author jlee;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.22.22.03.40;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2009.04.08.22.25.10;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.06.23.35.42;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.21.18.51.47;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.01.13.58.05;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.65
log
@Add GPIO device implementation
Update to API 1.0, and corresponding set of register wide accessor functions.
The tables of permitted pins come from staring at the schematics for any connectors, minus those that are "owned" by the OS.
In the absence of any Touchbook schematics, no GPIO device will be registered for this (given the physical size of the Touchbook it's unlikely there are any usefully accessible headers anyway).

Tested on a BB-xM, toggling the two user LEDs and scanning the 'USER' push button.

Version 1.18. Tagged as 'OMAP3-1_18'
@
text
@; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:HALSize.<HALSize>

        GET     Hdr:MEMM.VMSAv6

        GET     Hdr:Proc
        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.omap3530
        GET     hdr.StaticWS
        GET     hdr.SDRC
        GET     hdr.Interrupts
        GET     hdr.Timers
        GET     hdr.GPIO
        GET     hdr.UART
        GET     hdr.PRCM
        GET     hdr.GPMC

; This version assumes a RISC OS image starting OSROM_HALSize bytes after us.

; FIQ-based debugger - prints out the PC when the beagleboard/touchbook USER button is pressed
; The code installs itself when HAL_InitDevices is called with R0=123. e.g. SYS "OS_Hardware",123,,,,,,,,0,100
                GBLL FIQDebug
FIQDebug        SETL {FALSE}

                GBLL MoreDebug
MoreDebug       SETL Debug :LAND: {FALSE}                

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  rom_checkedout_ok

        IMPORT  HAL_Base
        IMPORT  SDMA_Had_POR
        IMPORT  RTC_Init
        IMPORT  TPSRead
        IMPORT  TPSWrite
        IMPORT  IIC_DoOp_Poll
        IMPORT  CPUClk_PreInit
        IMPORT  CPUClk_Init
        IMPORT  CPUClk_PreReset
        IMPORT  PBias1Write

; v8 is used as pointer to RISC OS entry table throughout pre-MMU stage.
        MACRO
        CallOSM $entry, $reg
        LDR     ip, [v8, #$entry*4]
        MOV     lr, pc
        ADD     pc, v8, ip
        MEND

rom_checkedout_ok
        ; On entry, v8 -> OS entry table, sb -> board config
        ; Register the attached RAM
        LDR     v1, =SDRC_Regs
        MOV     a1, #0
        MOV     sp, #0
        ; Check CS0
        LDR     a3, [v1, #SDRC_MCFG_0]
        LDR     a2, =&3FF00<<13
        ANDS    a3, a2, a3, LSL #13 ; Get CS0 RAM size
        BEQ     no_cs0
        LDR     a2, =CS0_SDRAM
        ADD     a3, a3, a2
        LDR     a4, =&FFFFFFFF
        ADD     sp, a2, #4096 ; HAL spec says that (for software reset compliance only?) stack should be 4K into first block
        STR     a1, [sp, #-4]!
        MOV     a1, #0
        CallOSM OS_AddRAM
no_cs0
        ; Check CS1
        LDR     a3, [v1, #SDRC_MCFG_1]
        LDR     a2, =&3FF00<<13
        ANDS    a3, a2, a3, LSL #13
        BEQ     no_cs1
        LDR     a2, =CS0_SDRAM
        LDR     a4, [v1, #SDRC_CS_CFG]
        AND     v2, a4, #7 ; Offset in 128MB units
        ADD     a2, a2, v2, LSL #20+7
        AND     v2, a4, #&300 ; Offset in 32MB units
        ADD     a2, a2, v2, LSL #20+5-8
        ADD     a3, a3, a2
        LDR     a4, =&FFFFFFFF
        CMP     sp, #0
        ADDEQ   sp, a2, #4096 ; If no CS0 set up stack in CS1
        STR     a1, [sp, #-4]!
        MOV     a1, #0
        CallOSM OS_AddRAM
no_cs1
        DebugChar v1,v2,71
        MOV     v1, a1
        BL      SDMA_Had_POR
        CMP     a1, #0
        MOVNE   a1, #OSStartFlag_RAMCleared :OR: OSStartFlag_POR
        MOVEQ   a1, #OSStartFlag_RAMCleared
        ADRL    a2, HAL_Base + OSROM_HALSize       ; a2 -> RISC OS image
        ADR     a3, HALdescriptor
        MOV     a4, v1
        CallOSM OS_Start


HALdescriptor   DATA
        DCD     HALFlag_NCNBWorkspace
        DCD     HAL_Base - HALdescriptor
        DCD     OSROM_HALSize
        DCD     HAL_EntryTable - HALdescriptor
        DCD     HAL_Entries
        DCD     HAL_WsSize


        MACRO
        HALEntry $name
        ASSERT  (. - HAL_EntryTable) / 4 = EntryNo_$name
        DCD     $name - HAL_EntryTable
        MEND

        MACRO
        NullEntry
        DCD     HAL_Null - HAL_EntryTable
        MEND

        IMPORT   Video_Init
        IMPORT   Interrupt_Init
        IMPORT   Timer_Init
        IMPORT   PRCM_SetClocks
        IMPORT   USB_Init
        IMPORT   I2C_Init
        IMPORT   SDMA_Init
        IMPORT   VideoDevice_Init
        IMPORT   Audio_Init
        IMPORT   PandoraAudio_Init
        IMPORT   GPMC_Init
        IMPORT   NIC_Init
        IMPORT   NIC_GPMC_Config_IGEP
        IMPORT   NIC_GPMC_Config_DevKit
        IMPORT   NIC_SMSC
        IMPORT   NIC_DM9000
        IMPORT   GPIO_Init
        IMPORT   GPIOx_SetAsOutput
        IMPORT   GPIO_InitDevices
        IMPORT   SDIO_InitDevices
        IMPORT   NVMemory_Init
        IMPORT   NVMemory_InitDevice
        IMPORT   TPS_Init
        IMPORT   PandoraKB_Init
        IMPORT   Enable_main_battery_charging
        IMPORT   BMU_InitDevice
        IMPORT   BMUParams_TPS65950_TouchBook
        IMPORT   BMUParams_BQ27200_TouchBook
        IMPORT   BMUParams_BQ27500_Pandora
        IMPORT   Video_SetPandoraGamma
        IMPORT   BoardConfigNames

        EXPORT   Board_Init_BeagleBoard
        EXPORT   Board_Init_DevKit8000
        EXPORT   Board_Init_IGEPv2
        EXPORT   Board_Init_Pandora
        EXPORT   Board_Init_TouchBook
        EXPORT   Board_Init_OMAP35xEVM
 
        EXPORT   Board_InitDevices_BeagleBoard
        EXPORT   Board_InitDevices_DevKit8000
        EXPORT   Board_InitDevices_IGEPv2
        EXPORT   Board_InitDevices_Pandora
        EXPORT   Board_InitDevices_TouchBook
        EXPORT   Board_InitDevices_OMAP35xEVM

        EXPORT   Board_PowerOff_BeagleBoard
        EXPORT   Board_PowerOff_DevKit8000
        EXPORT   Board_PowerOff_IGEPv2
        EXPORT   Board_PowerOff_Pandora
        EXPORT   Board_PowerOff_TouchBook
        EXPORT   Board_PowerOff_OMAP35xEVM

        IMPORT   HAL_IRQEnable
        IMPORT   HAL_IRQDisable
        IMPORT   HAL_IRQClear
        IMPORT   HAL_IRQSource
        IMPORT   HAL_IRQStatus
        IMPORT   HAL_FIQEnable
        IMPORT   HAL_FIQDisable
        IMPORT   HAL_FIQDisableAll
        IMPORT   HAL_FIQClear
        IMPORT   HAL_FIQSource
        IMPORT   HAL_FIQStatus
        IMPORT   HAL_IRQMax

        IMPORT   HAL_Timers
        IMPORT   HAL_TimerDevice
        IMPORT   HAL_TimerGranularity
        IMPORT   HAL_TimerMaxPeriod
        IMPORT   HAL_TimerSetPeriod
        IMPORT   HAL_TimerPeriod
        IMPORT   HAL_TimerReadCountdown
        IMPORT   HAL_TimerIRQClear

        IMPORT   HAL_CounterRate
        IMPORT   HAL_CounterPeriod
        IMPORT   HAL_CounterRead
        IMPORT   HAL_CounterDelay

        IMPORT   HAL_IICBuses
        IMPORT   HAL_IICType
        IMPORT   HAL_IICDevice
        IMPORT   HAL_IICTransfer
        IMPORT   HAL_IICMonitorTransfer

        IMPORT   HAL_NVMemoryType
        IMPORT   HAL_NVMemorySize
        IMPORT   HAL_NVMemoryPageSize
        IMPORT   HAL_NVMemoryProtectedSize
        IMPORT   HAL_NVMemoryProtection
        IMPORT   HAL_NVMemoryRead
        IMPORT   HAL_NVMemoryWrite

        IMPORT   HAL_VideoIICOp ; Implemented in s.I2C

        IMPORT   HAL_UARTPorts
        IMPORT   HAL_UARTStartUp
        IMPORT   HAL_UARTShutdown
        IMPORT   HAL_UARTFeatures
        IMPORT   HAL_UARTReceiveByte
        IMPORT   HAL_UARTTransmitByte
        IMPORT   HAL_UARTLineStatus
        IMPORT   HAL_UARTInterruptEnable
        IMPORT   HAL_UARTRate
        IMPORT   HAL_UARTFormat
        IMPORT   HAL_UARTFIFOSize
        IMPORT   HAL_UARTFIFOClear
        IMPORT   HAL_UARTFIFOEnable
        IMPORT   HAL_UARTFIFOThreshold
        IMPORT   HAL_UARTInterruptID
        IMPORT   HAL_UARTBreak
        IMPORT   HAL_UARTModemControl
        IMPORT   HAL_UARTModemStatus
        IMPORT   HAL_UARTDevice
        IMPORT   HAL_UARTDefault

        IMPORT   HAL_DebugRX
        IMPORT   HAL_DebugTX

        IMPORT   HAL_KbdScanDependencies

        IMPORT   HAL_USBControllerInfo

HAL_EntryTable  DATA
        HALEntry HAL_Init

        HALEntry HAL_IRQEnable
        HALEntry HAL_IRQDisable
        HALEntry HAL_IRQClear
        HALEntry HAL_IRQSource
        HALEntry HAL_IRQStatus
        HALEntry HAL_FIQEnable
        HALEntry HAL_FIQDisable
        HALEntry HAL_FIQDisableAll
        HALEntry HAL_FIQClear
        HALEntry HAL_FIQSource
        HALEntry HAL_FIQStatus

        HALEntry HAL_Timers
        HALEntry HAL_TimerDevice
        HALEntry HAL_TimerGranularity
        HALEntry HAL_TimerMaxPeriod
        HALEntry HAL_TimerSetPeriod
        HALEntry HAL_TimerPeriod
        HALEntry HAL_TimerReadCountdown

        HALEntry HAL_CounterRate
        HALEntry HAL_CounterPeriod
        HALEntry HAL_CounterRead
        HALEntry HAL_CounterDelay

        HALEntry HAL_NVMemoryType
        HALEntry HAL_NVMemorySize
        HALEntry HAL_NVMemoryPageSize
        HALEntry HAL_NVMemoryProtectedSize
        HALEntry HAL_NVMemoryProtection
        NullEntry ; HAL_NVMemoryIICAddress
        HALEntry HAL_NVMemoryRead 
        HALEntry HAL_NVMemoryWrite

        HALEntry HAL_IICBuses
        HALEntry HAL_IICType
        NullEntry ; HAL_IICSetLines   
        NullEntry ; HAL_IICReadLines  
        HALEntry HAL_IICDevice
        HALEntry HAL_IICTransfer
        HALEntry HAL_IICMonitorTransfer

        NullEntry ; HALEntry HAL_VideoFlybackDevice
        NullEntry ; HALEntry HAL_VideoSetMode
        NullEntry ; HALEntry HAL_VideoWritePaletteEntry
        NullEntry ; HALEntry HAL_VideoWritePaletteEntries
        NullEntry ; HALEntry HAL_VideoReadPaletteEntry
        NullEntry ; HALEntry HAL_VideoSetInterlace
        NullEntry ; HALEntry HAL_VideoSetBlank
        NullEntry ; HALEntry HAL_VideoSetPowerSave
        NullEntry ; HALEntry HAL_VideoUpdatePointer
        NullEntry ; HALEntry HAL_VideoSetDAG
        NullEntry ; HALEntry HAL_VideoVetMode
        NullEntry ; HALEntry HAL_VideoPixelFormats
        NullEntry ; HALEntry HAL_VideoFeatures
        NullEntry ; HALEntry HAL_VideoBufferAlignment
        NullEntry ; HALEntry HAL_VideoOutputFormat

        NullEntry ; HALEntry HAL_MatrixColumns
        NullEntry ; HALEntry HAL_MatrixScan

        NullEntry ; HALEntry HAL_TouchscreenType
        NullEntry ; HALEntry HAL_TouchscreenRead
        NullEntry ; HALEntry HAL_TouchscreenMode
        NullEntry ; HALEntry HAL_TouchscreenMeasure

        HALEntry HAL_MachineID

        HALEntry HAL_ControllerAddress
        HALEntry HAL_HardwareInfo
        HALEntry HAL_SuperIOInfo
        HALEntry HAL_PlatformInfo
        NullEntry ; HALEntry HAL_CleanerSpace

        HALEntry HAL_UARTPorts
        HALEntry HAL_UARTStartUp
        HALEntry HAL_UARTShutdown
        HALEntry HAL_UARTFeatures
        HALEntry HAL_UARTReceiveByte
        HALEntry HAL_UARTTransmitByte
        HALEntry HAL_UARTLineStatus
        HALEntry HAL_UARTInterruptEnable
        HALEntry HAL_UARTRate
        HALEntry HAL_UARTFormat
        HALEntry HAL_UARTFIFOSize
        HALEntry HAL_UARTFIFOClear
        HALEntry HAL_UARTFIFOEnable
        HALEntry HAL_UARTFIFOThreshold
        HALEntry HAL_UARTInterruptID
        HALEntry HAL_UARTBreak
        HALEntry HAL_UARTModemControl
        HALEntry HAL_UARTModemStatus
        HALEntry HAL_UARTDevice
        HALEntry HAL_UARTDefault

        HALEntry HAL_DebugRX
        HALEntry HAL_DebugTX

        NullEntry ; HAL_PCIFeatures
        NullEntry ; HAL_PCIReadConfigByte
        NullEntry ; HAL_PCIReadConfigHalfword
        NullEntry ; HAL_PCIReadConfigWord
        NullEntry ; HAL_PCIWriteConfigByte
        NullEntry ; HAL_PCIWriteConfigHalfword
        NullEntry ; HAL_PCIWriteConfigWord
        NullEntry ; HAL_PCISpecialCycle
        NullEntry ; HAL_PCISlotTable
        NullEntry ; HAL_PCIAddresses

        HALEntry HAL_PlatformName
        NullEntry
        NullEntry

        HALEntry HAL_InitDevices

        HALEntry HAL_KbdScanDependencies
        NullEntry
        NullEntry
        NullEntry

        HALEntry HAL_PhysInfo

        HALEntry HAL_Reset

        HALEntry HAL_IRQMax

        HALEntry HAL_USBControllerInfo
        NullEntry ; HAL_USBPortPower
        NullEntry ; HAL_USBPortIRQStatus
        NullEntry ; HAL_USBPortIRQClear
        NullEntry ; HAL_USBPortDevice

        HALEntry HAL_TimerIRQClear
        NullEntry ; HAL_TimerIRQStatus

        HALEntry HAL_ExtMachineID

        NullEntry ; HAL_VideoFramestoreAddress
        NullEntry ; HAL_VideoRender
        NullEntry ; HAL_VideoStartupMode
        NullEntry ; HAL_VideoPixelFormatList
        HALEntry HAL_VideoIICOp

HAL_Entries     * (.-HAL_EntryTable)/4


;--------------------------------------------------------------------------------------


HAL_Init
        Entry   "v1-v3"

        STR     a2, NCNBWorkspace
        STR     a2, NCNBAllocNext
        
        BL      SetUpOSEntries

        ; Cortex-A8 implementation defined L2 cache enable.
        ; At this point (after a reset) C=1 L2EN=0 so we only need to
        ; set L2EN according to section 8.3 of the r2p1 TRM, leaving
        ; the L2 Cache Auxiliary Control Register at its default value
        MRC     p15, 0, a1, c1, c0, 1
        ORR     a1, a1, #2      ; ACTLR.L2EN
        MCR     p15, 0, a1, c1, c0, 1        

        ; Map in the main IO ranges (L3, L4) and then store the offsets to the components we're interested in
        MOV     a1, #0
        LDR     a2, =L3_Control
        MOV     a3, #L3_Size
        CallOS  OS_MapInIO
        STR     a1, L3_Log
        
        MOV     a1, #0
        LDR     a2, =L4_Core
        MOV     a3, #L4_Core_Size
        CallOS  OS_MapInIO
        STR     a1, L4_Core_Log

        ; Clockman
        ADD     a3, a1, #L4_ClockMan-L4_Core
        STR     a3, L4_ClockMan_Log

        ; Display
        ADD     a3, a1, #L4_Display-L4_Core
        STR     a3, L4_Display_Log

        ; USB
        ADD     a3, a1, #L4_USBTLL-L4_Core
        STR     a3, L4_USBTLL_Log
        ADD     a3, a1, #L4_USB_Host-L4_Core
        STR     a3, L4_USB_Host_Log
        ADD     a3, a1, #L4_USB_OTG-L4_Core
        STR     a3, L4_USB_OTG_Log

        ; DMA
        ADD     a3, a1, #L4_sDMA-L4_Core
        STR     a3, L4_sDMA_Log

        MOV     a1, #0
        LDR     a2, =L4_Wakeup
        MOV     a3, #L4_Wakeup_Size
        CallOS  OS_MapInIO
        STR     a1, L4_Wakeup_Log
        
        ; L4_PowerMan, L4_32KTIMER, L4_GPIO1
        ADD     a3, a1, #L4_PowerMan-L4_Wakeup
        STR     a3, L4_PowerMan_Log
        ADD     a3, a1, #L4_32KTIMER-L4_Wakeup
        STR     a3, L4_32KTIMER_Log
        ADD     a3, a1, #L4_GPIO1-L4_Wakeup
        STR     a3, L4_GPIO1_Log

        MOV     a1, #0
        LDR     a2, =L4_Per
        MOV     a3, #L4_Per_Size
        CallOS  OS_MapInIO
        STR     a1, L4_Per_Log

        ; Timers
        ADD     a2, a1, #TIMER_BASE-L4_Per
        STR     a2, Timers_Log

        ; GPIO2-6
        ADD     a2, a1, #L4_GPIO2-L4_Per
        STR     a2, L4_GPIO2_Log
        ADD     a2, a1, #L4_GPIO3-L4_Per
        STR     a2, L4_GPIO3_Log
        ADD     a2, a1, #L4_GPIO4-L4_Per
        STR     a2, L4_GPIO4_Log
        ADD     a2, a1, #L4_GPIO5-L4_Per
        STR     a2, L4_GPIO5_Log
        ADD     a2, a1, #L4_GPIO6-L4_Per
        STR     a2, L4_GPIO6_Log

        ; Interrupt controller
        MOV     a1, #0
        LDR     a2, =MPU_INTC
        MOV     a3, #MPU_INTC_SIZE
        CallOS  OS_MapInIO
        STR     a1, MPU_INTC_Log

        ; GPMC
        MOV     a1, #0
        LDR     a2, =GPMC_Regs
        MOV     a3, #4096 ; only a small register file
        CallOS  OS_MapInIO
        STR     a1, GPMC_Regs_Log

        ; Recover board config from SRAM
        MOV     a1, #0
        LDR     a2, =IntSRAM_Base
        MOV     a3, #IntSRAM_Size
        CallOS  OS_MapInIO
        STR     a1, IntSRAM_Log
        MOV     a2, #BoardConfig_Size
10      SUBS    a2, a2, #4
        LDR     a3, [a1, a2]
        STR     a3, [sb, a2]
        BGT     %BT10
        ; Now do phys -> log conversion on all the addresses contained within
        ; RISC OS doesn't currently provide a phys->log conversion function, so we do it manually based around the regions that were mapped in above
        ASSERT  BoardConfig_DebugUART = 0
        ASSERT  BoardConfig_DebugUART+4 = BoardConfig_HALUART
        MOV     a1, #BoardConfig_HALUART+?BoardConfig_HALUART-4
10      BL      phys2log
        SUBS    a1, a1, #4
        BGE     %BT10
        MOV     a1, #BoardConfig_HALI2C
        BL      phys2log
        STR     a2, I2C1Block+I2C_HW
        MOV     a1, #BoardConfig_HALI2C+4
        BL      phys2log
        STR     a2, I2C2Block+I2C_HW
        MOV     a1, #BoardConfig_HALI2C+8
        BL      phys2log
        STR     a2, I2C3Block+I2C_HW

 [ Debug
        DebugTX "HAL_Init"
        DebugTime a1, "@@ "
 ]

        BL      PRCM_SetClocks ; Calls Timer_init & starts GPTIMER2

        BL      I2C_Init ; Uses GPTIMER2

        BL      TPS_Init ; Program reset script(s), must be before CPUClk_PreInit

        BL      GPIO_Init ; Make sure all GPIO IRQs are disabled before we potentially start enabling them

        ; Board-specific initialisation
        MOV     lr, pc
        LDR     pc, [sb, #BoardConfig_Init]
        ; DevKit & IGEP don't need any special initialisation
Board_Init_DevKit8000
Board_Init_IGEPv2

        BL      CPUClk_PreInit ; Go fast!

 [ MoreDebug
        DebugTX "Video_Init"
 ] 
        BL      Video_Init ; Uses GPTIMER2

 [ MoreDebug
        DebugTX "USB_Init"
 ] 
        BL      USB_Init ; Uses GPTIMER2

 [ MoreDebug
        DebugTX "NVMemory_Init"
 ] 
        BL      NVMemory_Init

 [ MoreDebug
        DebugTX "Timer_Init"
 ]
        BL      Timer_Init ; Re-inits timers

 [ MoreDebug
        DebugTX "Interrupt_Init"
 ]
        BL      Interrupt_Init

 [ MoreDebug
        DebugTX "GPMC_Init"
 ]
        BL      GPMC_Init

        LDRB    v1, [sb, #BoardConfig_NumUART]
10      SUBS    v1, v1, #1
 [ Debug
        BLT     %FT20
        ; Don't reset the debug UART
        LDR     a3, [sb, #BoardConfig_DebugUART]
        ADD     a2, sb, v1, LSL #2
        LDR     a2, [a2, #BoardConfig_HALUART]
        CMP     a3, a2
        BEQ     %BT10
        MOV     a1, v1
        ADR     lr, %BT10
        B       HAL_UARTStartUp
 |
        MOVGE   a1, v1
        ADRGE   lr, %BT10
        BGE     HAL_UARTStartUp
 ]
20
        ; Mark HAL as initialised
        STR     pc, HALInitialised ; Any nonzero value will do

        DebugTime a1, "HAL initialised @@ "

        EXIT

Board_Init_BeagleBoard ROUT
        Entry
        ; Read/report beagleboard revision GPIOs (GPIOs 171-173)
        ; First we need to set up the right pin mux settings, as old
        ; x-loader/u-boot versions might not do them all for us
        LDR     a1, L4_Core_Log
        ADD     a1, a1, #&2100
        ADD     a1, a1, #&00C8 ; CONTROL_PADCONF_MCBSPI1_CLK
        LDR     a2, =&011C011C ; GPIO171 & 172 input with pull-up enabled
        STR     a2, [a1], #4 ; configure, and point to CONTROL_PADCONF_MCBSPI1_SOMI
        LDR     a2, [a1]
        MOV     a2, a2, LSR #16
        MOV     a2, a2, LSL #16
        ORR     a2, a2, #&11C ; GPIO173 as above
        STR     a2, [a1]
        ; Now configure the GPIO controller
        LDR     v1, L4_GPIO_Table+4*(171>>5)
        MOV     v2, #7 :SHL: (171 :AND: 31)
        GPIO_SetAsInput v1, v2, a1
        ; Wait a bit for input to settle?
        MOV     a1, #512
        BL      HAL_CounterDelay
        GPIO_GetInput v1, v1, v2
        MOV     v1, v1, LSR #(171 :AND: 31)
 [ Debug
        DebugReg v1, "BB revision GPIOs="
 ]
        ; Classic beagle needs TPS LED A turning off for EHCI
        ; Beagle xM A/B needs TPS GPIO 1 off and TPS LED A on for DVI & EHCI
        ; Beagle xM C+ needs TPS GPIO 1 off and TPS LED A off for DVI & EHCI
        ; check OMAP type to work out if it's an -xM
        LDR     a2, L4_Wakeup_Log
        ADD     a2, a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &FF00
        LDR     a2, [a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &00FF]
        LDR     a1, =HAWKEYE_AMDM37x
        MOV     a2, a2, LSL #4
        CMP     a1, a2, LSR #16
        MOV     a2, #0
        BNE     %FT10 ; Classic beagle
        ; XM
        MOV     a1, #GPIO_PIN_MAX+1
        BL      GPIOx_SetAsOutput
        ; XM rev A3 also uses TPS GPIO2, and can use it for turning DVI on/off (unlike the TPS GPIO1 that had to be off all the time?)
        ; Previously this was allegedly used for providing power to the camera interface, and defaulted to on in Linux
        MOV     a1, #GPIO_PIN_MAX+2
        STRB    a1, [sb, #BoardConfig_VideoGPIO]
        MOV     a2, #1
        BL      GPIOx_SetAsOutput
        ; Check whether this is a rev A/B xM. If it isn't we'll assume it's
        ; rev C+, like the new x-loader/u-boot/linux versions do
        CMP     v1, #BeagleBoard_xMA
        CMPNE   v1, #BeagleBoard_xMB
        MOVEQ   a2, #1 ; xM A/B
        MOVNE   a2, #0 ; xM C+
        ; .. fall through to non-XM bit
10
        MOV     a1, #GPIO_PIN_MAX+TPS_GPIO_PIN_MAX
        BL      GPIOx_SetAsOutput
        EXIT
        
Board_Init_OMAP35xEVM ROUT
        Entry
        ; EVM needs GPIO 22 on & GPIO 61 off for EHCI
        ; It looks like u-boot sets things up assuming an ETK module is in use.
        ; But we want to use USB, so we need to tweak a few pin mux settings.
        LDR     a1, L4_Core_Log
        ADD     a1, a1, #&2000
        LDR     a2, [a1, #&5E8] ; GPIO 20, GPIO 21
        MOV     a2, a2, LSL #16
        MOV     a2, a2, LSR #16
        ORR     a2, a2, #&011C0000 ; GPIO 21 input/bidirectional with pull-up enabled
        STR     a2, [a1, #&5E8]
        LDR     a2, [a1, #&5EC]
        MOV     a2, a2, LSR #16
        MOV     a2, a2, LSL #16
        ORR     a2, a2, #&011C ; Ditto for GPIO 22
        STR     a2, [a1, #&5EC]
        LDR     a2, [a1, #&0C8]
        MOV     a2, a2, LSR #16
        MOV     a2, a2, LSL #16
        ORR     a2, a2, #&011C ; Ditto for GPIO 61
        STR     a2, [a1, #&0C8]
        ; Now set the GPIOs
        MOV     a1, #22
        MOV     a2, #1
        BL      GPIOx_SetAsOutput ; Enables VBUS
        MOV     a1, #61
        MOV     a2, #0
        BL      GPIOx_SetAsOutput ; Enables the port
        ; We also need to make sure VAUX2 is enabled in order to supply power
        ; to the phy
        SUB     sp, sp, #4
        MOV     a2, sp
        MOV     a3, #1
        ADRL    v1, IIC_DoOp_Poll
        ; Configure for 2.8V
        MOV     a1, #&4b*2
        MOV     ip, #9
        MOV     a4, #&79 ; VAUX2_DEDICATED
        STRB    ip, [a2]
        BL      TPSWrite
        ; Ensure enabled, by associating it with all processor groups
        MOV     a1, #&4b*2
        MOV     ip, #&e0
        MOV     a4, #&76 ; VAUX2_DEV_GRP
        STRB    ip, [a2]
        BL      TPSWrite
        ADD     sp, sp, #4
        EXIT

Board_Init_TouchBook ROUT
        Entry
        ; TouchBook battery charging
        LDR     a1, =&3ff ; Max charging current (1704mA)
        BL      Enable_main_battery_charging
        ; Touchbook needs TPS LED A turning off for EHCI
        MOV     a1, #GPIO_PIN_MAX+TPS_GPIO_PIN_MAX
        MOV     a2, #0
        BL      GPIOx_SetAsOutput
        EXIT

Board_Init_Pandora ROUT
        Entry
        ; Increase battery charging current
        LDR     a1, =&35c ; 1158mA
        BL      Enable_main_battery_charging
        ; Disable PBIAS1 while we update the power supplies
        MOV     a1, #0
        BL      PBias1Write
        ; Enable some extra power supplies
        MOV     a3, #1
        ADRL    v1, IIC_DoOp_Poll
        ADR     a2, pandora_init_data
10
        LDRB    a4, [a2], #1
        CMP     a4, #0
        BEQ     %FT50
        MOV     a1, #&4b*2
        BL      TPSWrite
        ADD     a2, a2, #1
        B       %BT10
50
        ; Wait for VSIM to stabilise
        MOV     a1, #35000 ; as per s.SDIO BUS_POWER_RAMP
        BL      HAL_CounterDelay
        ; Re-enable PBIAS1
        ; Despite 2.8V being closer to 3.0V than 1.8V, the hardware seems to think it's 1.8V, so program it for that
        MOV     a1, #1 :SHL: 9 ; Just PWRDNZ1 that needs setting
        BL      PBias1Write
        EXIT

pandora_init_data
        ; VAUX4 set to 2.85V (touchscreen, nubs)
        DCB     &81 ; VAUX4_DEDICATED
        DCB     &0a ; 2.85V
        DCB     &7E ; VAUX4_DEV_GRP
        DCB     &20 ; associate with P1
        ; VSIM set to 2.8V (audio DAC)
        DCB     &95 ; VSIM_DEDICATED
        DCB     &04 ; 2.8V
        DCB     &92 ; VSIM_DEV_GRP
        DCB     &20 ; associate with P1
        ; VAUX2 set to 1.8V (EHCI PHY power)
        DCB     &79 ; VAUX2_DEDICATED
        DCB     &05 ; 1.8V
        DCB     &76 ; VAUX2_DEV_GRP
        DCB     &20 ; associate with P1
        ; End
        DCB       0
        ALIGN

; Dodgy phys->log conversion using the mapped in IO ranges
; In/out: a1 = offset into sb of address to get/put
; Out: a2 = log addr
; Corrupts a3
phys2log
        LDR     a3, [sb, a1]
        CMP     a3, #0 ; Null pointers are valid; ignore them
        MOVEQ   a2, #0
        MOVEQ   pc, lr
        SUB     a2, a3, #L3_Control
        CMP     a2, #L3_Size
        LDRLO   a3, L3_Log
        BLO     %FT10
        SUB     a2, a3, #L4_Per
        CMP     a2, #L4_Per_Size
        LDRLO   a3, L4_Per_Log
        BLO     %FT10
        SUB     a2, a3, #L4_Core
        CMP     a2, #L4_Core_Size
        LDRLO   a3, L4_Core_Log
        SUBHI   a2, a2, #L4_Wakeup-L4_Core
        LDRHI   a3, L4_Wakeup_Log
10
        ADD     a2, a2, a3
        STR     a2, [sb, a1]
        MOV     pc, lr

; Initialise and relocate the entry table.
SetUpOSEntries  ROUT
        STR     a1, OSheader
        LDR     a2, [a1, #OSHdr_NumEntries]
        CMP     a2, #HighestOSEntry+1
        MOVHI   a2, #HighestOSEntry+1

        ADR     a3, OSentries
        LDR     a4, [a1, #OSHdr_Entries]
        ADD     a4, a4, a1

05      SUBS    a2, a2, #1
        LDR     ip, [a4, a2, LSL #2]
        ADD     ip, ip, a4
        STR     ip, [a3, a2, LSL #2]
        BNE     %BT05
        ; Fall through

HAL_Null
        MOV     pc, lr

HAL_InitDevices
 [ DebugTiming
        CMP     a1, #124
        BNE     %FT10
        Push    "lr"
        DebugTime a1, "@@ "
        Pull    "pc"
10
 ]
 [ FIQDebug
        CMP     a1, #123
        BNE     %FT10
        LDR     a1, =&E51FF004
        ADR     a2, FIQRoutine
        MOV     a4, #&1C
        STMIA   a4,{a1-a2,sb}
        ; Sync cache
        MOV     a1, #0
        MCR     p15, 0, a1, c7, c11, 1 ; Clean DCache by VA to PoU
        DSB     SY ; wait for clean to complete
        MCR     p15, 0, a1, c7, c5, 1 ; invalidate ICache entry (to PoC)
        MCR     p15, 0, a1, c7, c5, 6 ; invalidate entire BTC
        DSB     SY ; wait for cache invalidation to complete
        ISB     SY ; wait for BTC invalidation to complete?
        ; Now reconfigure the USER button (GPIO 4/7) to fire an FIQ
        LDR     a2, L4_Wakeup_Log
        ADD     a2, a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &FF00
        LDR     a2, [a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &00FF]
        LDR     a1, =HAWKEYE_AMDM37x
        MOV     a2, a2, LSL #4
        CMP     a1, a2, LSR #16
        MOVEQ   a3, #1:SHL:4 ; It's an AM/DM37x, so assume BBxM
        MOVNE   a3, #1:SHL:7 ; Else assume user button on GPIO 7        
        LDR     a1, L4_GPIO1_Log
        LDR     a2, [a1, #GPIO_OE]
        ORR     a2, a2, a3 ; Configure as input
        STR     a2, [a1, #GPIO_OE]
        MOV     a2, #0
        STR     a2, [a1, #GPIO_LEVELDETECT0]
        STR     a2, [a1, #GPIO_LEVELDETECT1]
        STR     a2, [a1, #GPIO_FALLINGDETECT]
        STR     a3, [a1, #GPIO_RISINGDETECT] ; Enable IRQ on rising edge
        STR     a3, [a1, #GPIO_IRQENABLE1] ; Set MPU as interrupt target
        MOV     a1, #29 ; GPIO1 IRQ
        B       HAL_FIQEnable ; tail-optimised, repeating the HAL device init would be a bad thing!
10
 ]
        Entry   "v1-v3"
        DebugTime a1, "HAL_InitDevices @@ "
        ; Common HAL devices
        BL      CPUClk_Init
        BL      NVMemory_InitDevice
        BL      RTC_Init
        BL      SDMA_Init
        BL      VideoDevice_Init
        ; Board-specific HAL devices
        LDR     pc, [sb, #BoardConfig_InitDevices]
        ; EVM doesn't have any extra devices
Board_InitDevices_OMAP35xEVM
        BL      Audio_Init
        EXIT

Board_InitDevices_TouchBook
        BL      Audio_Init
        ; BMU devices
        ADRL    a1, BMUWS1
        ADRL    a2, BMUParams_TPS65950_TouchBook
        BL      BMU_InitDevice
        ADRL    a1, BMUWS2
        ADRL    a2, BMUParams_BQ27200_TouchBook
        BL      BMU_InitDevice
        MOV     a1, #BoardType_OMAP3_TouchBook
        MOV     a2, #BoardRevision_TouchBook_Unknown ; no boards variants for TouchBook (yet?)
        BL      SDIO_InitDevices
        EXIT

Board_InitDevices_Pandora
        BL      PandoraAudio_Init
        MOV     a1, #BoardType_OMAP3_Pandora
        MOV     a2, #BoardRevision_Pandora_Unknown ; no boards variants for Pandora (yet?)
        BL      SDIO_InitDevices
        ; Register the keyboard device
        BL      PandoraKB_Init
        ; BMU device
        ADRL    a1, BMUWS1
        ADRL    a2, BMUParams_BQ27500_Pandora
        BL      BMU_InitDevice
        ; LCD gamma (done here for simplicity)
        BL      Video_SetPandoraGamma
        EXIT

Board_InitDevices_IGEPv2
        BL      Audio_Init
        ; SMSC NIC on GPMC CS 5, GPIO IRQ 176
        MOV     a1, #5
        ADRL    a2, NIC_GPMC_Config_IGEP
        MOV     a3, #176
        ADRL    a4, NIC_SMSC
        MOV     v1, #256 ; 256 bytes is all we need... although OS_MapInIO will only map in a minimum of 1MB!
        BL      NIC_Init
        ; Determine board revision for GPIO device
        ; First set up pin mux settings
        LDR     a1, L4_Core_Log
        ADD     a1, a1, #&2500
        ADD     a1, a1, #&00F8 ; CONTROL_PADCONF_ETK_D14
        LDR     a2, [a1]
        MOV     a2, a2, LSR #16
        MOV     a2, a2, LSL #16
        ORR     a2, a2, #&0104 ; GPIO28: Input, pull-down (disabled), M4
        STR     a2, [a1]
        ; Now probe GPIO
        GPIO_PrepareC v1,v2,28
        GPIO_SetAsInput v1,v2,v3
        ; Wait a bit for input to settle?
        MOV     a1, #512
        BL      HAL_CounterDelay
        GPIO_GetInput v3,v1,v2
        CMP     v3, #0
        MOVNE   a2, #BoardRevision_IGEPv2_BC
        MOVEQ   a2, #BoardRevision_IGEPv2_C
        MOV     a1, #BoardType_OMAP3_IGEPv2
        ; Now init the device
        Push    "a1-a2"
        BL      GPIO_InitDevices
        ; SD needs the same parameters to configure the devices correctly
        Pull    "a1-a2"
        BL      SDIO_InitDevices
        EXIT

Board_InitDevices_DevKit8000
        BL      Audio_Init
        ; DM9000 on GPMC 6, GPIO IRQ 25
        MOV     a1, #6
        ADRL    a2, NIC_GPMC_Config_DevKit
        MOV     a3, #25
        ADRL    a4, NIC_DM9000
        MOV     v1, #2048 ; The DM9000 doesn't have a proper address bus. Instead, the DevKit connects GPMC address pin 10 to the DM9000's CMD pin, which is used to select between the INDEX and DATA registers. So we'll map in 2K of memory (which happens to be the max the GPMC supports in non-muxed address/data mode)
        BL      NIC_Init
        ; Init GPIO HAL device
        MOV     a1, #BoardType_OMAP3_DevKit8000
        MOV     a2, #BoardRevision_DevKit8000_Unknown
        Push    "a1-a2"
        BL      GPIO_InitDevices
        ; SD needs the same parameters to configure the device correctly
        Pull    "a1-a2"
        BL      SDIO_InitDevices
        EXIT

Board_InitDevices_BeagleBoard
        BL      Audio_Init
        ; Determine board revision for GPIO device
        ; HAL_Init will have set everything up already, so we can just read the pins
        LDR     v1, L4_GPIO_Table+4*(171>>5)
        MOV     v2, #7 :SHL: (171 :AND: 31)
        GPIO_GetInput v1, v1, v2
        MOV     v1, v1, LSR #(171 :AND: 31)
        ADR     a3, BBGPIORevTable
10
        LDMIA   a3!,{a1-a2}
        CMP     a1, #-1
        EXIT    EQ
        CMP     a1, v1
        BNE     %BT10
        MOV     a1, #BoardType_OMAP3_BeagleBoard
        Push    "a1-a2"
        BL      GPIO_InitDevices
        ; SD needs the same parameters to configure the device correctly
        Pull    "a1-a2"
        BL      SDIO_InitDevices
        DebugTime a1, "Done @@ "
        EXIT

BBGPIORevTable
        DCD     BeagleBoard_AB, BoardRevision_BeagleBoard_AB
        DCD     BeagleBoard_C123, BoardRevision_BeagleBoard_C123
        DCD     BeagleBoard_C4, BoardRevision_BeagleBoard_C4
        DCD     BeagleBoard_xMA, BoardRevision_BeagleBoard_xMA
        DCD     BeagleBoard_xMB, BoardRevision_BeagleBoard_xMB
        DCD     BeagleBoard_xMC, BoardRevision_BeagleBoard_xMC
        DCD     -1        

HAL_ControllerAddress
        MOV     a1, #0
        MOV     pc, lr

HAL_HardwareInfo
        LDR     ip, =&FFFFFF00
        STR     ip, [a1]
        MOV     ip, #0
        STR     ip, [a2]
        STR     ip, [a3]
        MOV     pc, lr

HAL_PlatformInfo
        ; Is soft-off supported?
        LDR     ip, [sb, #BoardConfig_PowerOff]
        ADR     a1, Board_PowerOff_None
        CMP     a1, ip
        MOVEQ   ip, #2_10000                    ; no podules,no PCI cards,no multi CPU,no soft off,and soft ROM
        MOVNE   ip, #2_11000
        STR     ip, [a2]
        MOV     ip, #2_11111                    ; mask of valid bits
        STR     ip, [a3]
        MOV     pc, lr

HAL_SuperIOInfo
        MOV     ip, #0
        STR     ip, [a1]
        STR     ip, [a2]
        MOV     pc, lr

HAL_MachineID
        MOV     a1, #0
        MOV     a2, #0
        MOV     pc, lr

HAL_ExtMachineID
        MOVS    ip, a1
        MOV     a1, #16
        MOVEQ   pc, lr
        LDR     a2, L4_Wakeup_Log
        ADD     a2, a2, #(L4_DIE_ID-L4_Wakeup) :AND: &FF00
        ADD     a2, a2, #(L4_DIE_ID-L4_Wakeup) :AND: &00FF
        LDMIA   a2!, {a3-a4}
        STMIA   ip!, {a3-a4}
        LDMIA   a2, {a3-a4}
        STMIA   ip, {a3-a4}
        MOV     pc, lr

; Shifts to determine number of bytes/words to allocate in table.
NibbleShift     *       12 ; 1<<12 = 4K ARM page size
ByteShift       *       NibbleShift + 1
WordShift       *       ByteShift + 2

; Bit patterns for different types of memory.
NotPresent      *       &00000000
DRAM_Pattern    *       &11111111
VRAM_Pattern    *       &22222222
ROM_Pattern     *       &33333333
IO_Pattern      *       &44444444
NotAvailable    *       &88888888

        IMPORT  memset

HAL_PhysInfo
        TEQ     a1, #PhysInfo_GetTableSize
        MOVEQ   a1, #1:SHL:(32-ByteShift)
        STREQ   a1, [a2]
        MVNEQ   a1, #0             ; Supported
        MOVEQ   pc, lr

        TEQ     a1, #PhysInfo_HardROM
        MOVEQ   a1, #0             ; No hard ROM, since the NAND flash isn't supported yet
        MOVEQ   a2, #0
        STMEQIA a3, {a1-a2}
        MVNEQ   a1, #0             ; Supported
        MOVEQ   pc, lr

        TEQ     a1, #PhysInfo_WriteTable
        MOVNE   a1, #0
        MOVNE   pc, lr

        ; Do the PhysInfo_WriteTable table output 
        Push    "v1-v2,lr"
        MOV     a1, #&80000000     ; Up to 1GB physical RAM from &80000000
        LDR     lr, =&C0000000-1
        STMIA   a3, {a1,lr}
        MOV     v1, a2

        ADR     v2, HAL_PhysTable
10      LDMIA   v2, {a1, a2, lr}
        SUB     a3, lr, a1
        ADD     a1, v1, a1, LSR #ByteShift
        MOV     a3, a3, LSR #ByteShift
        BL      memset
        LDR     a1, [v2, #8]!
        TEQ     a1, #0
        BNE     %BT10

        MVN     a1, #0             ; Supported
        Pull    "v1,v2,pc"

; HAL_PhysInfo uses memset to fill the table, so all regions
; must be byte-aligned (ie double-page-aligned addresses).
HAL_PhysTable
        DCD     &00000000, NotPresent  :OR: NotAvailable ; GPMC
        DCD     &40000000, IO_Pattern  :OR: NotAvailable ; All I/O registers
        DCD     &80000000, NotPresent  :OR: NotAvailable ; SDRC-SMS/SDRAM
        DCD     &C0000000, NotPresent  :OR: NotAvailable ; Nothing
        DCD     0

HAL_Reset       ROUT
        Push    "a1"
        ; Place EHCI PHY in reset
        ; This may help unreliable USB on the Pandora following a reset?
        LDRB    a1, [sb, #BoardConfig_USBGPIO]
        MOV     a2, #0
        CMP     a1, #255
        BLNE    GPIOx_SetAsOutput
        ; Reset clock speed to default
        BL      CPUClk_PreReset
        Pull    "a1"
        ; Reset or power off?
        CMP     a1, #0
        LDREQ   pc, [sb, #BoardConfig_PowerOff]
Board_PowerOff_None ; Marker used by HAL_PlatformInfo, must be with other unimplemented entries
Board_PowerOff_BeagleBoard
Board_PowerOff_DevKit8000
Board_PowerOff_IGEPv2
Board_PowerOff_OMAP35xEVM       
        ; Reset, or power off not supported
        ; For a reset, we just poke PRM_RSTCTRL.RST_DPLL3
        LDR     a3, L4_PowerMan_Log
        ADD     a3, a3, #Global_Reg_PRM
        MOV     a2, #4
        STR     a2, [a3, #PRM_RSTCTRL]
        DebugTX "HAL_Reset failed!"
        B       . ; Just in case

Board_PowerOff_TouchBook
        ; TouchBook can power off by setting GPIO168 to 0
        MOV     a1, #168
        MOV     a2, #0
        BL      GPIOx_SetAsOutput
        ; It seems like there's a short delay before the system shuts down; if we try doing a soft reset during that time then we'll hang with the power still on
        ; So just loop here, with a warning message for if something's gone wrong
        DebugTX "TouchBook power off failed!"
        B       .

Board_PowerOff_Pandora
        ; Pandora can power off by setting the SW_EVENTS_DEVOFF bit of the TWL P1_SW_EVENTS register
        MOV     a1, #&4b*2
        SUB     sp, sp, #4
        MOV     a2, sp
        MOV     a3, #1
        MOV     a4, #&46 ; P1_SW_EVENTS
        LDR     v1, OSentries+4*OS_IICOpV
        BL      TPSRead
        CMP     a1, #0
        BNE     Board_PowerOff_None ; Just give up and reset if things go wrong
        LDRB    a1, [a2]
        ORR     a1, a1, #1
        STRB    a1, [a2]
        MOV     a1, #&4b*2
        BL      TPSWrite
        CMP     a1, #0
        BNE     Board_PowerOff_None
        B       .

HAL_PlatformName
        LDR     a2, L4_Wakeup_Log
        ADD     a2, a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &FF00
        LDR     a2, [a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &00FF]
        LDR     a1, =HAWKEYE_AMDM37x
        MOV     a2, a2, LSL #4
        CMP     a1, a2, LSR #16
        LDRNEB  a2, [sb, #BoardConfig_NameOMAP3]
        LDREQB  a2, [sb, #BoardConfig_NameDM37x]
        ADRL    a1, BoardConfigNames
        ADD     a1, a1, a2
        MOV     pc, lr

        LTORG

        EXPORT  vtophys
vtophys
        CallOS  OS_LogToPhys, tailcall

        EXPORT  mapinio
mapinio
        CallOS  OS_MapInIO, tailcall

 [ FIQDebug
FIQRoutine
        ; Dump PC value to the serial port
        MOV     r8, #&24
        LDR     sb, [r8]
        LDR     r8, [sb, #BoardConfig_DebugUART]
        ADR     r9, hextab
        MOV     r10, #8
        MOV     r11, lr ; Preserve return address
10
        LDRB    r12, [r8, #UART_LSR]
        TST     r12, #THRE
        BEQ     %BT10
        LDRB    r12, [r9, r11, LSR #28]
        STRB    r12, [r8, #UART_THR]
        MOV     r11, r11, LSL #4
        SUBS    r10, r10, #1
        BNE     %BT10
10
        LDRB    r12, [r8, #UART_LSR]
        TST     r12, #THRE
        BEQ     %BT10
        MOV     r12, #13
        STRB    r12, [r8, #UART_THR]  
10
        LDRB    r12, [r8, #UART_LSR]
        TST     r12, #THRE
        BEQ     %BT10
        MOV     r12, #10
        STRB    r12, [r8, #UART_THR]
        ; Clear interrupt
        MOV     r8, #&24
        LDR     sb, [r8]
        LDR     r8, L4_GPIO1_Log
        LDR     r10, [r8, #GPIO_IRQSTATUS1]
        STR     r10, [r8, #GPIO_IRQSTATUS1]
        LDR     r8, MPU_INTC_Log
        MOV     r10, #2
        STR     r10, [r8, #INTCPS_CONTROL]
        ; Data synchronisation barrier to make sure INTC gets the message
        DSB     SY
   [ {FALSE} ; Code to call DebugCallstack on any button press
        ; Switch back to original mode
        MRS     r8, CPSR
        MRS     r9, SPSR
        BIC     r8, r8, #&1F
        AND     r9, r9, #&1F
        ORR     r8, r8, r9
        MSR     CPSR_c, r8
        ; Dump the callstack & other regs
        Push    "sb" ; preserve original sb so it can be dumped
        MOV     sb, #&24
        LDR     sb, [sb]
        B       DebugCallstack
   ]
        ; Now return
        SUBS    pc, lr, #4

hextab  DCB "0123456789abcdef"
 ]
        END
@


1.64
log
@Make type and revision private
Adopt the board type and revision enum privately in board.hdr (mass search & replace exercise).
Don't re-export it via a stub GPIO device; it's private.

Version 1.16. Tagged as 'OMAP3-1_16'
@
text
@d159 1
a159 1
        IMPORT   GPIO_InitDevice
d965 1
a965 1
        BL      GPIO_InitDevice
d984 1
a984 1
        BL      GPIO_InitDevice
d1007 1
a1007 1
        BL      GPIO_InitDevice
@


1.63
log
@Participate in keyboard scan dependencies
Detail:
  Replace keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Delete unused workspace.
  Don't link against HAL USB library.
Admin:
  Submission for USB bounty.

Version 1.15. Tagged as 'OMAP3-1_15'
@
text
@d913 2
a914 2
        MOV     a1, #GPIOType_OMAP3_TouchBook
        MOV     a2, #GPIORevision_TouchBook_Unknown ; no boards variants for TouchBook (yet?)
d920 2
a921 2
        MOV     a1, #GPIOType_OMAP3_Pandora
        MOV     a2, #GPIORevision_Pandora_Unknown ; no boards variants for Pandora (yet?)
d960 3
a962 3
        MOVNE   a2, #GPIORevision_IGEPv2_BC
        MOVEQ   a2, #GPIORevision_IGEPv2_C
        MOV     a1, #GPIOType_OMAP3_IGEPv2
d981 2
a982 2
        MOV     a1, #GPIOType_OMAP3_DevKit8000
        MOV     a2, #GPIORevision_DevKit8000_Unknown
d1005 1
a1005 1
        MOV     a1, #GPIOType_OMAP3_BeagleBoard
d1015 6
a1020 6
        DCD     BeagleBoard_AB, GPIORevision_BeagleBoard_AB
        DCD     BeagleBoard_C123, GPIORevision_BeagleBoard_C123
        DCD     BeagleBoard_C4, GPIORevision_BeagleBoard_C4
        DCD     BeagleBoard_xMA, GPIORevision_BeagleBoard_xMA
        DCD     BeagleBoard_xMB, GPIORevision_BeagleBoard_xMB
        DCD     BeagleBoard_xMC, GPIORevision_BeagleBoard_xMC
@


1.62
log
@Improve handling of PBIAS settings
Detail:
  hdr/omap3530, s/SDIO - Change writes to L4_PBiasLite to go via a function so that we can avoid altering the PBIAS1 settings when we're using a 4 bit SD interface. Also make sure the GPIO_IO_PWRDNZ bit that's present on DM37x chips reflects the value of PBIASLITEPWRDNZ1.
  s/Boot - When adjusting VSIM during enabling of the battery charger, make sure to set the PBIAS1 controls to high impedence to protect the GPIOs.
Admin:
  Tested on (OMAP3) Pandora, BeagleBoard-xM
  May fix issue reported with 1GHz (i.e. DM37x) Pandora where 2nd SD slot activity LED (which uses one of the GPIOs that are routed through PBIAS1) doesn't work


Version 1.13. Tagged as 'OMAP3-1_13'
@
text
@d261 1
a261 4
        IMPORT   HAL_KbdScanSetup
        IMPORT   HAL_KbdScan
        IMPORT   HAL_KbdScanFinish
        IMPORT   HAL_KbdScanInterrupt
d361 1
a361 2

        HALEntry HAL_Reset
d383 4
a386 4
        HALEntry HAL_KbdScanSetup
        HALEntry HAL_KbdScan
        HALEntry HAL_KbdScanFinish
        HALEntry HAL_KbdScanInterrupt
d390 1
a390 1
        HALEntry HAL_USBControllerInfo
d394 1
a394 2
        NullEntry ; HAL_VideoRender

d398 1
a398 2

        HALEntry HAL_VideoIICOp
d406 4
a409 2

        HALEntry HAL_UARTDefault
@


1.61
log
@Implement HAL_TimerIRQClear
Detail:
  s/Boot, s/Interrupts, s/Timers - Move timer IRQ clear code out of HAL_IRQClear and into HAL_TimerIRQClear. Streamlines HAL_IRQClear and allows timers to be used by FIQ handlers.
Admin:
  Tested on BB-xM


Version 1.09. Tagged as 'OMAP3-1_09'
@
text
@d61 1
d753 3
d763 1
a763 1
        EXIT    EQ
d768 10
@


1.60
log
@Fix build error. Add HAL_PlatformName implementation.
Detail:
  s/Boot, Makefile, s/Stubs - Remove references to deleted HAL ATA calls. Delete s/Subs it's now redundant.
  hdr/board, s/board, s/Top - Refactor how board names are stored so that we can differentiate between OMAP3 and DM37x versions of boards (at least the BeagleBoard and the Pandora come in OMAP3 and DM37x variants)
  s/Boot - Add HAL_PlatformName implementation, using the new board name system
Admin:
  Tested on BB-xM


Version 1.08. Tagged as 'OMAP3-1_08'
@
text
@d213 1
d405 1
a405 1
        NullEntry ; HAL_TimerIRQClear
@


1.59
log
@Reflect changes from OMAP4 HAL
omap3530.hdr/Debug,s:
  Define a dummy symbol so when debug is enabled there aren't conflicting IMPORT and EXPORTs.
Boot.s:
  Update comment to match HAL function names.

Version 1.06. Tagged as 'OMAP3-1_06'
@
text
@d170 1
a258 2
        IMPORT   HAL_ATAControllerInfo

d379 3
a381 3
        HALEntry HAL_ATAControllerInfo
        NullEntry ; HAL_ATASetModes
        NullEntry ; HAL_ATACableID
d1180 13
@


1.58
log
@Turn off debug
Anyone using the serial port for other peripheral uses might get confused if some HAL debug comes out on it.
Move the IMPORTs into a header so we don't end up with lots of unresolved symbols with Debug {FALSE}.
Rename a couple of symbols in PAudio missed in OMAP3-1_03.
Built, but not tested.


Version 1.04. Tagged as 'OMAP3-1_04'
@
text
@d400 2
a401 2
        NullEntry ; HAL_USBPortStatus
        NullEntry ; HAL_USBPortDevice
@


1.57
log
@Add support for the TouchBook's SD slot
Detail:
  s/Boot, s/SDIO - Add support for the TouchBook's SD slot. Although the Linux sources suggest it should be the same configuration as a BeagleBoard, it doesn't look like the card detect or write protect lines are functional on my unit, so we avoid using them.
Admin:
  Tested on rev C1 TouchBook


Version 1.02. Tagged as 'OMAP3-1_02'
@
text
@a52 3
        IMPORT  DebugHALPrint
        IMPORT  DebugHALPrintReg
        IMPORT  DebugHALPrintByte
a54 1
        IMPORT  DebugCallstack
@


1.56
log
@Enable L2 cache in HAL_Init
Since this HAL targets the A8, it's a nice simple L2EN bit set.
Also, correct the range of SDRAM hinted to the kernel - the DRAM controller only has enough lines to control 1GB not 2 as previously claimed.

Version 1.01. Tagged as 'OMAP3-1_01'
@
text
@d907 3
d915 1
a915 1
        MOV     a2, #0 ; no boards variants for Pandora (yet?)
@


1.55
log
@Minor HAL API corrections
HAL_HardwareInfo - as word 0 specified that no IOMD or VIDC was present, don't waste time reporting anything in word 2.
Not tagged.
@
text
@d429 2
d432 7
a438 1
        BL      SetUpOSEntries
d1097 2
a1098 2
        MOV     a1, #&70000000     ; Physical RAM from &70000000 and up?
        LDR     lr, =&FFFFE000-1
d1120 2
a1121 2
        DCD     &70000000, NotPresent  :OR: NotAvailable ; SDRC-SMS/SDRAM
        DCD     &FFFFE000, NotPresent  :OR: NotAvailable ; SDRC-SMS/SDRAM
@


1.54
log
@Don't bother providing even dummy implementations of USB port and overcurrent functions
As the flag bit in HAL_USBControllerInfo isn't set, no need to provide them.
Use symbols from Hdr:HALEntries when building the USB info.
No need for AASMFLAGS in the makefile.
Built, but not tested.

Version 0.98. Tagged as 'OMAP3-0_98'
@
text
@a1014 1
        LDR     ip, =&00FFFF00
@


1.53
log
@Use DSB/ISB directly
Reflects similar change in OMAP4-0_28.
Built, but not tested.

Version 0.95. Tagged as 'OMAP3-0_95'
@
text
@a269 3
        IMPORT   HAL_USBPortPower
        IMPORT   HAL_USBPortStatus
        IMPORT   HAL_USBPortIRQ
d401 1
a401 1
        NullEntry ;HALEntry HAL_VideoRender
d403 3
a405 3
        HALEntry HAL_USBPortPower
        HALEntry HAL_USBPortStatus
        HALEntry HAL_USBPortIRQ
@


1.52
log
@Remove obsolete stub HAL video API implementation
Detail:
  hdr/Video, s/Top - Remove local VIDC list type 3 definition, use Hdr:VIDCList instead
  s/Boot, s/Video - Removed obsolete HAL video API implementation. A stub implementation is no longer required for systems that have a GraphicsV driver in a module, and can even cause problems if the OS decides to use the HAL implementation instead of the module one.
Admin:
  Tested in OMAP3 ROM on BB-xM
  Requires Kernel-5_35-4_79_2_203


Version 0.92. Tagged as 'OMAP3-0_92'
@
text
@a33 1
        GET     hdr.Copro15ops
d850 1
a850 1
        myDSB ; wait for clean to complete
d853 2
a854 2
        myDSB ; wait for cache invalidation to complete
        myISB ; wait for BTC invalidation to complete?
d1228 1
a1228 1
        myDSB
@


1.51
log
@Refactor IIC calls to use RISCOS_IICOpV
- Comments and symbolic names for RTC register bits copied over from OMAP4 sources.
- Delete dead function ReadTimeForNVRAM.
- Use RTCFormatFlags_BCD_NeedsYearHelp flag for year 2070 compatibility.
- Moved CallOS macro into a header.
Tested on a Beagleboard xM, clock still worked over a power cycle.

Version 0.90. Tagged as 'OMAP3-0_90'
@
text
@a236 15
        IMPORT   HAL_VideoFlybackDevice
        IMPORT   HAL_VideoSetMode
        IMPORT   HAL_VideoWritePaletteEntry
        IMPORT   HAL_VideoWritePaletteEntries
        IMPORT   HAL_VideoReadPaletteEntry
        IMPORT   HAL_VideoSetInterlace
        IMPORT   HAL_VideoSetBlank
        IMPORT   HAL_VideoSetPowerSave
        IMPORT   HAL_VideoUpdatePointer
        IMPORT   HAL_VideoSetDAG
        IMPORT   HAL_VideoVetMode
        IMPORT   HAL_VideoPixelFormats
        IMPORT   HAL_VideoFeatures
        IMPORT   HAL_VideoBufferAlignment
        IMPORT   HAL_VideoOutputFormat
d320 15
a334 15
        HALEntry HAL_VideoFlybackDevice
        HALEntry HAL_VideoSetMode
        HALEntry HAL_VideoWritePaletteEntry
        HALEntry HAL_VideoWritePaletteEntries
        HALEntry HAL_VideoReadPaletteEntry
        HALEntry HAL_VideoSetInterlace
        HALEntry HAL_VideoSetBlank
        HALEntry HAL_VideoSetPowerSave
        HALEntry HAL_VideoUpdatePointer
        HALEntry HAL_VideoSetDAG
        HALEntry HAL_VideoVetMode
        HALEntry HAL_VideoPixelFormats
        HALEntry HAL_VideoFeatures
        HALEntry HAL_VideoBufferAlignment
        HALEntry HAL_VideoOutputFormat
@


1.50
log
@Probe earlier, declare device later
Revision 0.87 moved the NVMemory probe too late for the kernel, which fell back to using its default table.
Fixes problem of apparently lost configuration
  http://www.riscosopen.org/forum/forums/4/topics/2063
Video_Init capitalised like the other initialisation functions.

Version 0.88. Tagged as 'OMAP3-0_88'
@
text
@a74 13
        MACRO
        CallOS  $entry, $tailcall
        ASSERT  $entry <= HighestOSEntry
 [ "$tailcall"=""
        MOV     lr, pc
 |
   [ "$tailcall"<>"tailcall"
        ! 0, "Unrecognised parameter to CallOS"
   ]
 ]
        LDR     pc, OSentries + 4*$entry
        MEND

@


1.49
log
@Create placeholder NVMemory HAL device when EEPROM detected
The HAL device created is merely a dummy one, but presents any EEPROM detected for completeness of stuff the HAL knows about.

Version 0.87. Tagged as 'OMAP3-0_87'
@
text
@d158 1
a158 1
        IMPORT   Video_init
d179 1
d599 1
a599 1
        DebugTX "Video_init"
d601 1
a601 1
        BL      Video_init ; Uses GPTIMER2
d609 5
d911 1
a911 1
        BL      NVMemory_Init
@


1.48
log
@Implement HAL_IRQMax
Detail:
  s/Boot, s/Interrupts - Added HAL_IRQMax implementation, to ensure correct functionality with latest Kernel
Admin:
  Tested on BB-xM
  Requires Kernel-5_35-4_79_2_182


Version 0.85. Tagged as 'OMAP3-0_85'
@
text
@a607 5
        DebugTX "NVMemory_Init"
 ]
        BL      NVMemory_Init ; Uses GPTIMER2

 [ MoreDebug
d905 1
@


1.47
log
@Program the gamma table in the Pandora's LCD
Detail:
  s/Video - Added code to program the gamma table in the Pandora's LCD, as the power-on settings aren't very good
  s/Boot - Initialise the LCD at the right time
  hdr/SPI - SPI register definitions, for programming the gamma table and (eventually) a full SPI driver
Admin:
  Tested on Pandora


Version 0.84. Tagged as 'OMAP3-0_84'
@
text
@d220 1
d430 1
a430 1
        NullEntry ;HALEntry HAL_MonitorLeadID
@


1.46
log
@Add BMU support for Pandora & TouchBook
Detail:
  s/BMU, Makefile - BMU HAL device implementations for the Pandora & TouchBook
  hdr/StaticWS - Reserve workspace for the BMU devices
  s/Boot - Add the BMU devices to HAL device initialisation. Move Enable_main_battery_charging into s/BMU.
Admin:
  Tested in ROM on BB-xM, Pandora, TouchBook


Version 0.83. Tagged as 'OMAP3-0_83'
@
text
@d186 1
d941 2
@


1.45
log
@Switch to default clock speed before reset/power off. Place EHCI PHY in reset too.
Detail:
  hdr/CPUClk, hdr/SR37x, s/Boot, s/CPUClk, s/SR37x - Modifed CPU clock drivers to allow the core speed & voltage to be reset to the power on defaults prior to reset/poweroff. This fixes an issue seen on Pandora where Linux will often fail to boot after RISC OS has been run, presumably due to VDD1 being too low for the initial clock speed Linux switches to.
  s/Boot - Place EHCI PHY in reset prior to reset/power off. May help with a reported issue of USB host being unreliable after RISC OS has been run (although reset/poweroff should reset the GPIO anyway)
Admin:
  Tested on Pandora & BB-xM


Version 0.82. Tagged as 'OMAP3-0_82'
@
text
@d181 5
a771 125
Enable_main_battery_charging ROUT
        Entry   "a1", 4
 [ Debug
        DebugTX "Enabling battery charging"
 ]
        MOV     a2, sp
        MOV     a3, #1
        ADRL    v1, IIC_DoOp_Poll
        ; Make sure MADC clocks are enabled
        MOV     a1, #&49*2
        MOV     a4, #&91 ; GPBR1
        BL      TPSRead
        CMP     a1, #0
        BNE     %FT9 ; Fail, just skip it
        LDRB    ip, [a2]
        ORR     ip, ip, #&90 ; DEFAULT_MADC_CLK_EN, MADC_HFCLK_EN
        STRB    ip, [a2]
        MOV     a1, #&49*2
        BL      TPSWrite
        CMP     a1, #0
        BNE     %FT9
        ; Disable the automatic battery charging so we can tweak the settings
        MOV     a1, #&4b*2
        MOV     a4, #&3d ; BOOT_BCI
        BL      TPSRead
        CMP     a1, #0
        BNE     %FT9
        LDRB    v3, [a2]
        BIC     v3, v3, #&7 ; BCIAUTOAC, BCIAUTOUSB, CVENAC
        STRB    v3, [a2]
        MOV     a1, #&4b*2
        BL      TPSWrite
        CMP     a1, #0
        BNE     %FT9
        ; Now stop the current charging session, if any
        MOV     a1, #&4a*2
        MOV     a4, #&75 ; BCIMDKEY
        MOV     ip, #&2A ; EKEY6
        STRB    ip, [a2]
        BL      TPSWrite
        CMP     a1, #0
        BNE     %FT9
        ; Wait until it's really stopped
        MOV     v2, #1000
7
        MOV     a1, #&4a*2
        MOV     a4, #&76 ; BCIMSTATEC
        BL      TPSRead
        CMP     a1, #0
        BNE     %FT9
        LDREQB  ip, [a2]
        TSTEQ   ip, #&30 ; Accept any non-charging, non-overvoltage state
        BEQ     %FT8
        SUBS    v2, v2, #1
        BGT     %BT7
 [ Debug
        DebugTX "Timeout waiting for charging to stop"
 ]
        B       %FT9 ; Timeout
8
        ; Now set CGAIN to double the charging current
        MOV     a1, #&4a*2
        MOV     a4, #&97 ; BCICTL1
        BL      TPSRead
        CMP     a1, #0
        BNE     %FT9
        LDRB    ip, [a2]
        ORR     ip, ip, #&20 ; CGAIN
        STRB    ip, [a2]
        MOV     a1, #&4a*2
        BL      TPSWrite
        CMP     a1, #0
        BNE     %FT9
        ; Unlock BCIIREF1
        MOV     a1, #&4a*2
        MOV     a4, #&85 ; BCIMFKEY
        MOV     ip, #&E7 ; MFKEY13
        STRB    ip, [a2]
        BL      TPSWrite
        CMP     a1, #0
        BNE     %FT9
        ; Set desired charging current (a1 on entry)
        MOV     a1, #&4a*2
        ADD     a2, sp, #4
        MOV     a3, #2
        MOV     a4, #&9B ; BCIIREF1
        BL      TPSWrite
        CMP     a1, #0
        BNE     %FT9
        MOV     a2, sp
        MOV     a3, #1
        ; Wait for any current BCI conversion to finish
7
        MOV     a1, #&4a*2
        MOV     a4, #&12 ; CTRL_SW1
        BL      TPSRead
        CMP     a1, #0
        BNE     %FT9
        LDRB    ip, [a2]
        TST     ip, #&18 ; Check both BCI and USB, since we also set the USB average bit
        BEQ     %BT7
        ; Enable BCI_USBAVERAGE to increase accuracy of BCI measurements
        MOV     a1, #&4a*2
        MOV     a4, #&0e
        MOV     ip, #&3f
        STRB    ip, [a2]
        BL      TPSWrite
        CMP     a1, #0
        BNE     %FT9
        ; Enable automatic charging again
        ORR     v3, v3, #&5 ; BCIAUTOAC, CVENAC
        STRB    v3, [a2]
        MOV     a1, #&4b*2
        MOV     a4, #&3d ; BOOT_BCI
        BL      TPSWrite
9
 [ Debug
        CMP     a1, #0
        BEQ     %FT10
        DebugRegByte a4, "Failed on register "
        DebugRegByte a1, ", err="
 ] 
10
        EXIT

d913 1
a913 1
        ; EVM & touchbook don't have any extra devices
d915 3
d920 7
d936 4
@


1.44
log
@Implement Pandora keyboard scan & audio support
Detail:
  s/PAudio, Makefile - Added Pandora audio driver. The Pandora uses a different audio setup to all the other OMAP boards, so to keep things simple the implementation is kept in its own file seperate from the main one.
  s/KbdMatrix, hdr/StaticWS - Implemented Pandora boot-time keyboard scan. This uses the keyboard matrix & GPIO keys instead of the USB libraries.
  s/Boot - Moved call to Audio_Init into the per-board HAL_InitDevices code so that Pandora can call PandoraAudio_Init instead.
  s/SDIO - For MMC1, avoid touching VSIM if the bus width is only 4 bits (i.e. on Pandora). On Pandora VSIM is used for the audio DAC instead.
Admin:
  Tested on Pandora


Version 0.81. Tagged as 'OMAP3-0_81'
@
text
@d65 1
d1250 10
@


1.43
log
@Configure Pandora battery charging
Detail:
  s/Boot - Under Linux the Pandora uses a similar battery charging setup to the TouchBook. Reuse our TouchBook battery charging setup code to set things up appropriately for the Pandora.
Admin:
  Tested on Pandora


Version 0.80. Tagged as 'OMAP3-0_80'
@
text
@d166 1
a1029 1
        BL      Audio_Init
d1035 1
d1039 1
d1048 1
d1086 1
d1105 1
@


1.42
log
@Tidy up board-specific code. Improve Pandora support.
Detail:
  hdr/board, s/board, s/Boot - Tidied up board-specific code a bit by adding more board-specific function pointers to the BoardConfig struct instead of relying on manual board detection in code.
  s/board - Disable Pandora VideoGPIO as turning the LCD on & off seems to result in graphical corruption, most likely due to settings which were set by the SPI interface being lost.
  s/KbdMatrix, Makefile - New file for handling the Pandora's keyboard matrix (and anything else that may require keyboard matrix code in the HAL). Contains stub code for the boot-time keyboard scan, and code to register a keyboard HAL device for detection by the PandoraKey module.
  s/Boot - Add soft-off support for Pandora. Add Pandora-specific initialisation code to enable some extra power supplies (touchscreen, nubs, audio DAC, EHCI PHY)
  s/KbdScan - Use Pandora-specific keyboard scan code instead of USB code when running on Pandora
  s/SDIO - Correct sense of MMC activity LEDs on Pandora. Now only lit during periods of activity, to match behaviour of the Pandora Linux distro.
  s/Video - Add some switched out hack code to allow easier debugging of aborts that occur during ROM initialisation
Admin:
  Tested on Pandora, rev C2 BB, rev A2 BB-xM, rev C1 TouchBook


Version 0.79. Tagged as 'OMAP3-0_79'
@
text
@d756 3
d763 4
a766 1
        ; TouchBook battery charging
d768 1
a768 1
        DebugTX "Enabling TB battery charging"
a769 1
        SUB     sp, sp, #4
d815 2
a816 2
        LDREQB    ip, [a2]
        TSTEQ     ip, #&30 ; Accept any non-charging, non-overvoltage state
d846 1
a846 1
        ; Increase charging current to max
d848 2
a850 2
        MOV     ip, #&FF
        STRB    ip, [a2]
d854 2
a880 1
        ADD     sp, sp, #4
d892 3
@


1.41
log
@Adopt revised HAL_PhysInfo API
Also spotted that USAT can be conditional in the I2C code.

Version 0.72. Tagged as 'OMAP3-0_72'
@
text
@d178 1
d180 10
a189 1
        EXPORT   Board_InitDevices_None
d191 9
a199 3
        EXPORT   Board_InitDevices_IGEP
        EXPORT   Board_InitDevices_DevKit
        EXPORT   Board_InitDevices_BeagleBoard
d579 67
a645 4
        LDR     a1, [sb, #BoardConfig_MachID]
        LDR     a2, =MachID_BeagleBoard
        CMP     a1, a2
        BNE     %FT10
d671 1
a671 4
10

        ; Do extra board-specific GPIO init
        ; Touchbook & classic beagle need TPS LED A turning off for EHCI
d674 32
a706 6
        ; For the moment, just work out what board it is based around the
        ; Linux machine ID & OMAP type
        LDR     a1, [sb, #BoardConfig_MachID]
        LDR     a2, =MachID_OMAP35xEVM
        BNE     %FT05
        ; EVM
d752 6
a757 14
        B       %FT20
05
        LDR     a2, =MachID_BeagleBoard
        CMP     a1, a2
        LDRNE   a2, =MachID_TouchBook
        CMPNE   a1, a2
        BNE     %FT20
        ; It's a BB/TouchBook; check OMAP type to work out if it's an -xM
        LDR     a2, L4_Wakeup_Log
        ADD     a2, a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &FF00
        LDR     a2, [a2, #(L4_CONTROL_IDCODE-L4_Wakeup) :AND: &00FF]
        LDR     a1, =HAWKEYE_AMDM37x
        MOV     a2, a2, LSL #4
        CMP     a1, a2, LSR #16
a758 19
        BNE     %FT10
        ; XM
        MOV     a1, #GPIO_PIN_MAX+1
        BL      GPIOx_SetAsOutput
        ; XM rev A3 also uses TPS GPIO2, and can use it for turning DVI on/off (unlike the TPS GPIO1 that had to be off all the time?)
        ; Previously this was allegedly used for providing power to the camera interface, and defaulted to on in Linux
        MOV     a1, #GPIO_PIN_MAX+2
        STRB    a1, [sb, #BoardConfig_VideoGPIO]
        MOV     a2, #1
        BL      GPIOx_SetAsOutput
        ; Check whether this is a rev A/B xM. If it isn't we'll assume it's
        ; rev C+, like the new x-loader/u-boot/linux versions do
        CMP     v1, #BeagleBoard_xMA
        CMPNE   v1, #BeagleBoard_xMB
        MOVEQ   a2, #1 ; xM A/B
        MOVNE   a2, #0 ; xM C+
        ; .. fall through to non-XM bit
10
        MOV     a1, #GPIO_PIN_MAX+TPS_GPIO_PIN_MAX
a759 2
20

a760 4
        LDR     a1, [sb, #BoardConfig_MachID]
        LDR     a2, =MachID_TouchBook
        CMP     a1, a2
        BNE     %FT10
d882 1
d884 33
a916 57
        BL      CPUClk_PreInit ; Go fast!

 [ MoreDebug
        DebugTX "Video_init"
 ] 
        BL      Video_init ; Uses GPTIMER2

 [ MoreDebug
        DebugTX "USB_Init"
 ] 
        BL      USB_Init ; Uses GPTIMER2

 [ MoreDebug
        DebugTX "NVMemory_Init"
 ]
        BL      NVMemory_Init ; Uses GPTIMER2

 [ MoreDebug
        DebugTX "Timer_Init"
 ]
        BL      Timer_Init ; Re-inits timers

 [ MoreDebug
        DebugTX "Interrupt_Init"
 ]
        BL      Interrupt_Init

 [ MoreDebug
        DebugTX "GPMC_Init"
 ]
        BL      GPMC_Init

        LDRB    v1, [sb, #BoardConfig_NumUART]
10      SUBS    v1, v1, #1
 [ Debug
        BLT     %FT20
        ; Don't reset the debug UART
        LDR     a3, [sb, #BoardConfig_DebugUART]
        ADD     a2, sb, v1, LSL #2
        LDR     a2, [a2, #BoardConfig_HALUART]
        CMP     a3, a2
        BEQ     %BT10
        MOV     a1, v1
        ADR     lr, %BT10
        B       HAL_UARTStartUp
 |
        MOVGE   a1, v1
        ADRGE   lr, %BT10
        BGE     HAL_UARTStartUp
 ]
20
        ; Mark HAL as initialised
        STR     pc, HALInitialised ; Any nonzero value will do

        DebugTime a1, "HAL initialised @@ "

        EXIT
d1023 3
a1025 1
Board_InitDevices_None
d1032 2
d1036 1
a1036 1
Board_InitDevices_IGEP
d1073 1
a1073 1
Board_InitDevices_DevKit
d1137 6
a1142 6
        ; TouchBook can do soft-off, others can't (yet)
        LDR     ip, [sb, #BoardConfig_MachID]
        LDR     a1, =MachID_TouchBook
        CMP     ip, a1
        MOVNE   ip, #2_10000                    ; no podules,no PCI cards,no multi CPU,no soft off,and soft ROM
        MOVEQ   ip, #2_11000
d1234 19
a1252 1
HAL_Reset
a1253 6
        ; TODO - Sort out the other machine types
        LDR     a3, [sb, #BoardConfig_MachID]
        LDR     a2, =MachID_TouchBook
        CMP     a3, a2
        CMPEQ   a1, #0
        BNE     %FT10
d1261 20
a1280 9
10
        ; At the moment we only support resets, not power off
        ; For a reset, we just poke PRM_RSTCTRL.RST_DPLL3
        LDR     a3, L4_PowerMan_Log
        ADD     a3, a3, #Global_Reg_PRM
        MOV     a2, #4
        STR     a2, [a3, #PRM_RSTCTRL]
        DebugTX "HAL_Reset failed!"
        B       . ; Just in case
@


1.40
log
@Refactor HAL_VideoIICOp to be ATPCS
No longer specified to return _kernel_oserror * implements GraphicsV 14.
Make use of IICStatus defines instead of local copies.
Rename HAL_Video_ to HAL_Video.
Tested on Beagleboard xM, reading EDID from Hyundai monitor.

Version 0.69. Tagged as 'OMAP3-0_69'
@
text
@d1138 1
a1138 1
        TEQ     a1, #0
d1140 9
d1151 11
a1161 2
        Push    "a2,v1,v2,lr"
        MOV     v1, a1
d1171 2
a1172 4
        MOV     a1, #&70000000 ; Physical RAM from &70000000 and up?
        LDR     lr, =&FFFFE000-1
        Pull    "a2"
        STR     lr, [a2]
@


1.39
log
@  Added support for the SD slots and WiFi SDIO chip on the Pandora console
Detail:
  Information gathered from the "Pandora Hacker Guide" is a little sketchy
  so try with caution. Uniquely, the Pandora uses all 3 SD controllers on the
  OMAP3.
Admin:
  Checked that still functions on a beagleboard, but untested on Pandora!

Version 0.68. Tagged as 'OMAP3-0_68'
@
text
@d225 15
a239 15
        IMPORT   HAL_Video_SetMode
        IMPORT   HAL_Video_WritePaletteEntry
        IMPORT   HAL_Video_WritePaletteEntries
        IMPORT   HAL_Video_ReadPaletteEntry
        IMPORT   HAL_Video_SetInterlace
        IMPORT   HAL_Video_SetBlank
        IMPORT   HAL_Video_SetPowerSave
        IMPORT   HAL_Video_UpdatePointer
        IMPORT   HAL_Video_SetDAG
        IMPORT   HAL_Video_VetMode
        IMPORT   HAL_Video_PixelFormats
        IMPORT   HAL_Video_Features
        IMPORT   HAL_Video_BufferAlignment
        IMPORT   HAL_Video_OutputFormat
        IMPORT   HAL_Video_IICOp ; Implemented in s.I2C
d323 14
a336 14
        HALEntry HAL_Video_SetMode
        HALEntry HAL_Video_WritePaletteEntry
        HALEntry HAL_Video_WritePaletteEntries
        HALEntry HAL_Video_ReadPaletteEntry
        HALEntry HAL_Video_SetInterlace
        HALEntry HAL_Video_SetBlank
        HALEntry HAL_Video_SetPowerSave
        HALEntry HAL_Video_UpdatePointer
        HALEntry HAL_Video_SetDAG
        HALEntry HAL_Video_VetMode
        HALEntry HAL_Video_PixelFormats
        HALEntry HAL_Video_Features
        HALEntry HAL_Video_BufferAlignment
        HALEntry HAL_Video_OutputFormat
d407 1
a407 1
        NullEntry ;HALEntry HAL_Video_Render
d413 1
a413 1
        HALEntry HAL_Video_IICOp
d420 1
a420 1
        NullEntry ; HAL_Video_FramestoreAddress
@


1.38
log
@  Added HAL devices for main board SDHCI controllers
Detail:
  * For Beagleboard and Beagleboard-xM, supports MMC1, and is tested
  * For DevKit8000, supports MMC1 (but untested)
  * For IGEPv2, supports MMC1 and MMC2 (but untested)
  * No support for controllers on other boards at the present time
Admin:
  Requires headers exported from SDIODriver

Version 0.66. Tagged as 'OMAP3-0_66'
@
text
@d180 1
d980 6
@


1.37
log
@Add HAL_UARTDefault implementation. Delete old HAL video code. Add some SmartReflex tweaks.
Detail:
  hdr/board, s/board, s/Boot, s/UART - Added HAL_UARTDefault implementation, to allow OS_SerialOp to be used
  hdr/StaticWS, hdr/omap3530, s/Boot, s/Interrupts, s/Video - Removed old HAL video code. The OMAPVideo module is a much better video driver.
  s/SR37x - Add some SmartReflex tweaks which we can try if we run into any stability issues with the current code.
Admin:
  Tested on rev A2 BB-xM


Version 0.64. Tagged as 'OMAP3-0_64'
@
text
@d175 1
d1009 1
d1011 3
d1027 1
d1029 3
d1049 1
d1051 3
@


1.36
log
@Fix unreliable warm reset on some BB-xM boards. SmartReflex tweaks.
Detail:
  s/TPS - Added code to correctly configure the TPS/TWL to deal with warm resets. Required to make sure VDD1/VDD2 are set back to default when a reset occurs, thereby fixing the hang on reset that some people have been experiencing
  s/Boot - Add code to call TPS_Init
  s/SR37x - Improve debug code. Change initial OPP1G voltage from 1.35V to 1.38V, as recommended by datasheet
  s/KbdScan - Add a bit more debug output
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Fixes issue reported on forums with resets not working following addition of SmartReflex driver:
  http://www.riscosopen.org/forum/forums/4/topics/993


Version 0.63. Tagged as 'OMAP3-0_63'
@
text
@a163 1
 [ :LNOT: HALDoesVideo
a164 1
 ]
d258 1
d418 4
a970 1
 [ :LNOT: HALDoesVideo
a971 1
 ]
@


1.35
log
@Line some things up.
To help OMAP4 tracking changes a number of the changes were purely cosmetic lining up differences, this change is where OMAP3 wasn't on a conventional column layout.

Version 0.61. Tagged as 'OMAP3-0_61'
@
text
@d178 1
d554 2
@


1.34
log
@Add compressed ROM support. Add boot timing code. Other misc tweaks.
Detail:
  hdr/omap3530, s/Boot, s/KbdScan, s/Top, s/Video - Added code for profiling/timing the startup sequence, using the 32K system timer
  s/Boot - Ensure VAUX2 is enabled during EVM startup
  s/Boot, s/CPUClk - Go to full CPU speed during HAL_Init instead of HAL_InitDevices.
  s/KbdScan - Print out heap usage stats when debugging is enabled
  s/NVMemory - Skip probing for CMOS carrier board if JTAG is active
  s/RAM, s/Top - Use DMA to relocate the ROM image instead of simple memcpy code. Relocate compressed ROMs to a location suitable for decompression.
Admin:
  Tested with compressed & uncompressed OMAP3/OMAP3Live images


Version 0.59. Tagged as 'OMAP3-0_59'
@
text
@d15 1
@


1.33
log
@Add support for POR detection.
Harder than it should have been because someone wired the reset button up to the cold reset pin.
Now gets the OSStartFlags right so that delete-power-on et al are respected by the kernel.

Version 0.57. Tagged as 'OMAP3-0_57'
@
text
@d62 1
d545 1
d622 19
d805 2
d820 1
a820 1
        BL      NVMemory_Init
d859 2
d912 8
d959 1
d1036 1
@


1.32
log
@Prep for SDFS and support for hardware CMOS adapter board.
To avoid conflicting use of the SDIO controller by higher level filing system (and the need for a HAL to somehow ask for a disc to be reinserted) this HAL onwards supports hardware CMOS attached via the JTAG connector.
On power up the presence and size of EEPROM is detected (sizes from 256 to 2048 bytes are understood corresponding to 24AA02 to 24AA16 family of parts).
If no EEPROM is found the HAL falls back to permitting a CMOS file to be loaded off the SD card, but crucially this is done by uboot before FileCore starts.
If no EEPROM is found, or the CMOS file looks suspicious, some fake CMOS is made and the kernel defaults used.
The "ProbeEESize" switch enables size probing, otherwise 256 bytes is assumed.
The "TryLoadedCMOS" switch enables use of a CMOS file from the SD card, if that's off and nothing is found the HAL declares that there is no CMOS at all!
The respective boot script needs the line
  fatload mmc 0:1 0x4020F000 cmos
adding to it, though the filename 'cmos' is arbitrary and only used as a suggestion.

Version 0.56. Tagged as 'OMAP3-0_56'
@
text
@d56 1
a56 1
;        IMPORT  generate_POR_flags
d124 5
a128 2
        MOV     a4, a1
        MOV     a1, #OSStartFlag_RAMCleared
d131 1
@


1.31
log
@NVMem fixes
Detail:
  c/NVMem - Fixed NVMem_C_write() to skip creating a CMOS file if the directory is full
  c/fat - Fixed FindDirectoryEntry() to ensure short_name[] is always terminated properly
  s/NVMemory - Only update the CMOS file if bytes have changed
  s/Boot - Fixed beagleboard revision detection GPIOs not being configured correctly
Admin:
  Tested on rev A2 BB-xM


Version 0.54. Tagged as 'OMAP3-0_54'
@
text
@d171 1
a171 1
        IMPORT   NVMem_Init
d791 1
a791 1
        DebugTX "NVMem_Init"
d793 1
a793 1
        BL      NVMem_Init ; Uses GPTIMER2
@


1.30
log
@Add preliminary OMAP3 EVM support. Fix HAL_UARTModemControl
Detail:
  hdr/board, s/Boot, s/Top, s/board - Added preliminary support for OMAP3 EVM boards. Only generation 2 boards are supported at the moment.
  s/UART - Fixed HAL_UARTModemControl to pay attention to the 'mask' parameter
Admin:
  Tested on rev A2 BB-xM. EVM support might not be fully working.


Version 0.52. Tagged as 'OMAP3-0_52'
@
text
@d559 1
a559 1
        STR     a2, [a1, #4] ; configure, and point to CONTROL_PADCONF_MCBSPI1_SOMI
@


1.29
log
@Fix OMAP3 HAL UART code
Detail:
  hdr/UART - Added a couple more register addresses, removed incorrect FIFO64 flag
  hdr/omap3530 - Corrected UART 2 address
  s/Boot - Ensure we perform phys2log address conversion for all UART addresses, not just the first 3. Also avoid resetting the debug UART.
  s/UART - Fix HAL UART calls to obey the programming rules laid out in the TRM
  s/board - Change the order in which the UARTs are exposed to RISC OS so that they match the hardware order. HAL UART 0 is now OMAP UART1, etc.
Admin:
  Tested on rev A2 BB-xM


Version 0.51. Tagged as 'OMAP3-0_51'
@
text
@d45 3
d583 1
d587 31
d779 4
a782 1
 
d785 3
d790 3
d795 3
d800 3
d805 3
@


1.28
log
@Add new support for the new GPIO HAL device
Detail:
  hdr/board - Add information about determining the IGEP board revision
  hdr/StaticWS - Add workspace for storing the GPIO HAL device
  s/board - Update BeagleBoard entry to have a custom HAL device init func
  s/Boot - Fix HAL_Init to not configure GPIOs 171-173 if not running on a beagleboard. Update HAL_InitDevices to preserve the right registers and initialise the GPIO devices where appropriate.
  s/GPIO - Added GPIO_InitDevice function to do the actual initialisation
Admin:
  Tested on rev A2 BB-xM


Version 0.48. Tagged as 'OMAP3-0_48'
@
text
@d521 1
a521 1
        MOV     a1, #BoardConfig_HALUART+4*2
d759 12
d774 2
a775 1

@


1.27
log
@Add code to detect exact BeagleBoard revision, and to deal with new EHCI power controls on xM rev C
Detail:
  hdr/board - Definitions for GPIO values used to detect beagleboard revision
  s/Boot - Added code to detect BB revision via GPIO lines, in order to determine the correct setting for the TPS pin which controls the EHCI power
Admin:
  Tested on BB rev C2, BB-xM rev A2.
  BB xM rev C should work now!


Version 0.44. Tagged as 'OMAP3-0_44'
@
text
@d167 1
d173 1
d545 4
a562 4
        LDR     a1, [sb, #BoardConfig_MachID]
        LDR     a2, =MachID_BeagleBoard
        CMP     a1, a2
        BNE     %FT10
d855 1
a855 1
        Entry
d877 23
d910 4
d916 27
@


1.26
log
@Update OMAP3 HAL to support keyboard scan on boot, plus other changes
Detail:
  Makefile, s/KdbScan, hdr/StaticWS - Code to handle keyboard scanning, via the new HAL build of the USB drivers.
  s/Stubs - Removed old stub keyboard scan routines
  s/CPUClk - ADR -> ADRL to cope with new workspace layout
  s/Boot, s/Top, hdr/Post - Modified to use new HALSize variable for determining the HAL size. Trimmed dead code/definitions.
  s/Boot - FIQDebug code now copes with the different USER button GPIO used on the BB-xM
  s/board - Increased max pixel rate from 86.5MHz to 100MHz. This allows a wider range of screen modes to be used, although it is beyond the spec of the video controller, and not all boards will be able to reach 100MHz. This should match the value used in the initial ARMini units.
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Needs latest USB drivers, Kernel source, BuildSys & Env (not all of which have been checked in yet)


Version 0.43. Tagged as 'OMAP3-0_43'
@
text
@d543 31
d576 2
a577 1
        ; Beagle xM needs TPS GPIO 1 off and TPS LED A on for DVI & EHCI
d604 6
a609 1
        MOV     a2, #1
@


1.25
log
@Add CPUClk HAL device implementation
Detail:
  Makefile, s/CPUClk, hdr/CPUClk, s/Boot, hdr/StaticWS - Provide an implementation of the new HALDevice_CPUClk HAL device. Allows OMAP35x and DM37x CPU's to be set to any of the standard OPPs as listed in the datasheets. Doesn't yet support 1GHz on DM37x.
  hdr/NIC, hdr/PRCM, hdr/omap3530, s/TPS - Misc additions/tweaks/fixes.
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Requires latest PortableHAL & Kernel


Version 0.41. Tagged as 'OMAP3-0_41'
@
text
@d19 1
a19 1
        GET     Hdr:ImageSize.<ImageSize>
d21 1
a21 1
        GET     Hdr:MEMM.ARM600
d38 1
a38 1
; This version assumes a RISC OS image starting 64K after us.
d123 1
a123 1
        ADRL    a2, HAL_Base + 64*1024          ; a2 -> RISC OS image
d131 1
a131 1
        DCD     64*1024
d793 9
a801 1
        ; Now reconfigure the USER button (GPIO 7) to fire an FIQ
d804 1
a804 1
        ORR     a2, a2, #1:SHL:7 ; Configure as input
d810 2
a811 3
        MOV     a2, #1:SHL:7
        STR     a2, [a1, #GPIO_RISINGDETECT] ; Enable IRQ on rising edge
        STR     a2, [a1, #GPIO_IRQENABLE1] ; Set MPU as interrupt target
@


1.24
log
@Add support for new HAL_ExtMachineID call
Detail:
  s/Boot - Added support for the new HAL_ExtMachineID call, and changed HAL_MachineID to return 0's
Admin:
  Tested on rev A2 BB-xM


Version 0.40. Tagged as 'OMAP3-0_40'
@
text
@d59 1
d672 18
d811 1
@


1.23
log
@Add Dave Higton's SD/MMC & CMOS code
Detail:
  c/NVMem, c/fat, h/NVMem, h/common, h/fat - C code for reading a 'CMOS' file off the SD card on boot, for use as a CMOS RAM image
  c/CLib - Added extra functions needed by the SD/MMC driver
  s/NVMemory - Implementation of the HAL NVRAM API, for reading/writing the loaded CMOS file. The read/write functions handle RISC OS's CMOS address mangling, so that CMOS files saved by *SaveCMOS can be used as-is.
  hdr/StaticWS - Updated with workspace needed by the new code
  s/Boot - Initialise the CMOS cache on boot
  s/Stubs - Removed the stub NVRAM function
  Makefile - Added the new files
Admin:
  Tested on rev A2 BB-xM.


Version 0.38. Tagged as 'OMAP3-0_38'
@
text
@d401 5
d855 15
a869 4
        LDR     a3, L4_Wakeup_Log
        ADD     a3, a3, #(L4_DIE_ID-L4_Wakeup) :AND: &FF00
        ADD     a3, a3, #(L4_DIE_ID-L4_Wakeup) :AND: &00FF
        LDMIA   a3, {a1-a2} ; Return the lower 8 bytes of the ID. According to the HAL spec there should also be a CRC, as calculated in kernel.s.PMF.osinit
@


1.22
log
@Miscellaneous OMAP3 HAL updates
Detail:
  s/Boot - HAL_Reset now sets the PRM_RSTCTRL.RST_DPLL3 bit instead of the PRM_RSTCTRL_GS bit. This matches what Linux does, and seems to fix resets on the TouchBook.
  s/board - Changed TouchBook audio to use the hands-free output instead of the predriver. This fixes speaker output (although it's currently listed as "line out" by the sound setup configure plugin)
  hdr/board, s/board, s/Video - Update the LCDConfig struct to contain an entry for controlling LCD power/brightness. Hook up basic power controls for current machine types.
Admin:
  Tested on rev C2 beagleboard & C1 touchbook.
  Video changes mean that OMAPVideo 0.08 or newer is required.


Version 0.34. Tagged as 'OMAP3-0_34'
@
text
@d166 1
d204 6
d292 4
a295 4
        NullEntry ; HAL_NVMemorySize
        NullEntry ; HAL_NVMemoryPageSize
        NullEntry ; HAL_NVMemoryProtectedSize
        NullEntry ; HAL_NVMemoryProtection
d297 2
a298 2
        NullEntry ; HAL_NVMemoryRead 
        NullEntry ; HAL_NVMemoryWrite
d686 2
@


1.21
log
@Miscellaneous OMAP3 HAL improvements
Detail:
  hdr/board, s/board, s/Boot - Linux machine IDs are now defined via constants in hdr/board instead of magic numbers on a per-use basis
  s/Boot - Added video fix for BB-xM rev A3.
  s/Boot - Added code to enable tablet battery charging on TouchBook.
  s/Boot - Added support for power-off on TouchBook
  s/GPIO - Fixed bug in GPIOx_SetAsOutput that would prevent LEDs from being disabled properly
  s/I2C - Updated code to ignore BF interrupts. Added debugging code to help track down unexpected errors, and to check that IIC_DoOp_Poll is being called with interrupts disabled.
  s/SDMA - Call HAL_IRQClear when resetting the DMA controller device. This fixes the "previous IRQ not cleared" loop that would occur during RISC OS's pre-reset sequence
Admin:
  Tested on rev C2 beagleboard, C1 touchbook, A3 BBxM.
  Resets should now work reliably on all machines, except TouchBook, which still seems to hang. But on the bright side, the TouchBook is currently the only machine to support soft-off.


Version 0.33. Tagged as 'OMAP3-0_33'
@
text
@d910 1
a910 1
        ; For a reset, we just poke PRM_RSTCTRL.RST_GS
d913 1
a913 1
        MOV     a2, #2
@


1.20
log
@BeagleBoard-xM, TouchBook fixes
Detail:
  s/board, hdr/board, hdr/omap3530, hdr/UART - Add support for 4th UART available on AM/DM37x (i.e. BeagleBoard-xM)
  hdr/omap3530 - Add details of CONTROL_IDCODE register & known hawkeye/revision numbers for OMAP type/revision detection
  s/Boot, s/GPIO, hdr/GPIO, s/I2C, hdr/StaticWS - Allow TPS LED drivers to be used as (output-only) GPIOs. Add new polled I/O I2C function, and appropriate logic to make GPIO code use it instead of RISCOS_IICOpV if RISC OS hasn't finished initialising yet. Add code to initialise some extra BB/TB GPIOs on boot.
  s/Timers, hdr/Timers - Stop RISC OS from using GPTIMER9, because it's used to drive the screen backlight on the TouchBook
  s/Video - Use appropriate porch/sync limits on non-OMAP35x
  s/PRCM - Don't mess with the system clock divider when calculating system clock speed (AM/DM37x fix)
Admin:
  Tested on rev C2 beagleboard, rev A2 BB-xM (indirectly), rev C1 TouchBook


Version 0.32. Tagged as 'OMAP3-0_32'
@
text
@d40 1
a40 1
; FIQ-based debugger - prints out the PC when the beagleboard USER button is pressed
d52 1
d56 3
d401 1
a401 1
        Entry   "v1"
d532 1
a532 1
        ; Beagle xM needs TPS GPIO 1 and TPS LED A on for DVI & EHCI
d536 1
a536 1
        LDR     a2, =1546 ; BeagleBoard
d538 1
a538 1
        LDRNE   a2, =2393 ; TouchBook
d553 6
d566 109
d823 6
a828 1
        MOV     ip, #2_10000                    ; no podules,no PCI cards,no multi CPU,no soft off (for now!),and soft ROM
d894 15
d911 2
a912 2
        LDR     a1, L4_PowerMan_Log
        ADD     a1, a1, #Global_Reg_PRM
d914 3
a916 1
        STR     a2, [a1, #PRM_RSTCTRL]
@


1.19
log
@Add extra debugging code to OMAP3 HAL
Detail:
  s/Boot - The FIQDebug code can now be used to trigger the DebugCallstack code when the user button is pressed
Admin:
  Tested on rev C2 beagleboard


Version 0.31. Tagged as 'OMAP3-0_31'
@
text
@d161 1
d522 2
d526 30
a559 2
        BL      I2C_Init ; Uses GPTIMER2

d572 3
@


1.18
log
@Update OMAP3 HAL to use correct instruction/memory barrier operations and to handle branch target predictors
Detail:
  hdr/Copro15ops - Added myISB, myDSB, myDMB macros to provide barrier functionality for ARMv6+
  s/Boot, s/Interrupts, s/RAM, s/Top, s/Video - updated to use correct barrier operations after CP15 writes, and to invalidate branch predictors where appropriate
Admin:
  Tested on rev C2 beagleboard


Version 0.28. Tagged as 'OMAP3-0_28'
@
text
@d54 1
d794 14
@


1.17
log
@Reduce amount of IO space requested by OMAP HAL
Detail:
  hdr/Interrupts - moved MPU_INTC values into hdr/omap3530
  hdr/omap3530 - Revised L3_Size, L4_Size, etc. so that they indicate the size of the used area of the interconnects, rather than the size of the address space
  s/Boot - reworked HAL setup to take into account the fact that mapping in L4_Core no longer maps in L4_Wakeup and MPU_INTC. Also fixed DevKit NIC setup to request correct IO space size
Admin:
  Tested on rev C2 beagleboard. Should now use ~4MB of IO space instead of >=33MB


Version 0.27. Tagged as 'OMAP3-0_27'
@
text
@d601 1
d603 3
a605 1
        MCR     p15, 0, a1, c7, c10, 4 ; Drain write buffer
d792 1
a792 2
        MOV     r8, #0
        MCR     ARM_config_cp, 0, r8, C7, C10, 4
@


1.16
log
@Add basic GPIO init code to OMAP HAL
Detail:
  s/Boot, s/GPIO - Added some basic GPIO init code, to make sure there aren't any unexpected GPIO IRQs active
Admin:
  Tested on rev C2 beagleboard.


Version 0.25. Tagged as 'OMAP3-0_25'
@
text
@a413 14
        ADD     a2, a1, #L4_Wakeup-L4_Core
        STR     a2, L4_Wakeup_Log
        
        ; L4_PowerMan, L4_32KTIMER, L4_GPIO1
        ADD     a3, a2, #L4_PowerMan-L4_Wakeup
        STR     a3, L4_PowerMan_Log
        ADD     a3, a2, #L4_32KTIMER-L4_Wakeup
        STR     a3, L4_32KTIMER_Log
        ADD     a3, a2, #L4_GPIO1-L4_Wakeup
        STR     a3, L4_GPIO1_Log

        ; Interrupt controller
        ADD     a3, a1, #MPU_INTC-L4_Core
        STR     a3, MPU_INTC_Log
d436 14
d471 7
a485 1
        ; This gets mapped in last so debugging is easier (don't have to worry about logical addresses being offset by funny amounts)
d560 4
a563 1
        LDR     a3, L4_Core_Log
d648 1
a648 1
        MOV     v1, #256
@


1.15
log
@Add basic GPMC setup code and NIC HAL devices to OMAP HAL
Detail:
  s/GPMC, hdr/GPMC, hdr/StaticWS - basic code to reset the GPMC and configure chip selects
  s/NIC, hdr/NIC, hdr/StaticWS - code to expose any onboard NICs (SMSC9221, DM9000) to RISC OS as simple HAL devices.
  Makefile - added GPMC & NIC source files
  s/board, hdr/board - Expanded board config struct to include a pointer to extra code to call at the end of HAL_InitDevices, to allow board-specific devices to be initialised
  s/boot - Extra HAL_InitDevices code to set up the NICs on the IGEP/DevKit
  s/GPIO, hdr/GPIO - Improved functionality to allow GPIO IRQs to be used
  s/SDMA, s/Video - Tweaked the HAL device descriptors to indicate that the devices are on the L3 interconnect
Admin:
  Tested on rev C2 beagleboard. IGEP/DevKit entry points booted OK, but no attempts were made to look for or interact with the new HAL devices!


Version 0.24. Tagged as 'OMAP3-0_24'
@
text
@d159 1
d514 2
@


1.14
log
@Update OMAP3 HAL to support new OMAPVideo module, plus other minor changes
Detail:
  hdr/StaticWS, hdr/Video, hdr/board, hdr/omap3530, s/Boot, s/Video, s/board - Add new HALDoesVideo switch to control whether the HAL provides the video driver or whether a HAL device is used to expose the video hardware to the OMAPVideo module. Switch defaults to the 'off' state, i.e. OMAPVideo provides the video driver. Also updated the board config struct to contain more detailed information about the video capabilities of each board.
  s/Audio - fix the FIFO underflow/overflow IRQ handler to disable the IRQ after the underflow/overflow has been detection. This prevents the OS from (potentially) getting stuck in a loop servicing the interrupt and never reaching the state where it can shut down & re-initialise the audio to fix the error properly.
  s/Debug - add DebugCallstack function that disables IRQs/FIQs and dumps the stack contents over the serial port
Admin:
  Tested on rev C2 beagleboard.


Version 0.23. Tagged as 'OMAP3-0_23'
@
text
@d36 1
d153 10
d470 7
d523 2
d608 1
d615 23
@


1.13
log
@Update OMAP HAL to support different board configs, plus use new YearLOIsGood flag to ensure correct RTC handling, plus other misc tidying
Detail:
  The OMAP HAL now has multiple entry points, one per board config. See Top.s/board.s for more info.
  audio.s - Moved APLL_CTL value to board config
  board.s - New file to list all the settings for the different board configs
  boot.s - Change HAL_Init to deal with the new board config stuff
  debug.s - Debug UART now specified in board config
  GPIO.s - A few utility functions for handling OMAP/TPS GPIO pins
  I2C.s - Update to use new board config struct
  RAM.s - Disable the beagleboard-specific RAM init code. Instead we'll just rely on u-boot to initialise all our RAM for us.
  RTC.s - Get rid of the magic numbers, and use the YearLOIsGood flag to indicate to RISC OS that YearLO is 2-digit BCD
  Top.s - Got rid of old debug code and rewrote initial flow to handle detecting & storing the board config
  UART.s - Update to use board config struct, support multiple UARTs
  USB.s - Get EHCI PHY power GPIO from board config
  Video.s - Get DVI framer power GPIO and max pixel rate from board config. Add 'PassiveVideo' option, to build a driver that doesn't alter the video output settings - should hopefully result in a usable display on Touch Book, etc.
  board.hdr - Definition of board config table struct
  GPIO.hdr - Add lots of macros for handling OMAP GPIO pins, new constants for OMAP/TPS GPIO
  I2C.hdr - Added I2C transfer block struct, HAL I2C API transfer states (both moved here from other source files)
  omap3530.hdr - Move/remove some unwanted constants, disable DebugChar for now
  StaticWS.hdr - Move I2C transfer block struct to I2C.hdr, add board config struct to HAL workspace, get rid of unused 64K AllocArea
  Timers.hdr - Tidy up constants a bit
  UART.hdr - Add UARTCLK (moved from StaticWS.hdr), UART IRQ #'s
  Makefile - add GPIO.s
Admin:
  Tested on rev C2 beagleboard. Board configs for other board types may be inaccurate in a couple of places.


Version 0.19. Tagged as 'OMAP3-0_19'
@
text
@d148 1
d150 1
d590 1
d592 1
@


1.12
log
@Add sound support to OMAP3 HAL, plus other changes
Detail:
  hdr/Audio, s/Audio, Makefile, hdr/StaticWS, s/Boot - Add sound support to OMAP3 HAL. Should work with a TPS65950 connected to I2C1/McBSP2, as per beagleboard.
  s/TPS, s/RTC - Moved TPSRead, TPSWrite functions out of s/RTC and into their own file
  hdr/SDMA, s/SDMA - Add support for packet-based transfer (for audio), improve debug code, remove TestRAMToRAM test code
  s/I2C - Update to handle spurious RDR interrupts as mentioned in OMAP3 errata
  s/Video - Enable support for the larger porch & sync timing registers found in OMAP3 ES3.1 and above
Admin:
  Tested on rev C2 beagleboard


Version 0.18. Tagged as 'OMAP3-0_18'
@
text
@d76 1
a76 1
        ; On entry, v8 -> OS entry table
d381 1
a381 1
        Entry
d402 1
a402 1

a430 8
        ; I2C
        ADD     a3, a1, #L4_I2C1-L4_Core
        STR     a3, I2C1Block+I2C_HW
        ADD     a3, a1, #L4_I2C2-L4_Core
        STR     a3, I2C2Block+I2C_HW
        ADD     a3, a1, #L4_I2C3-L4_Core
        STR     a3, I2C3Block+I2C_HW        

a444 4
        ; UART
        ADD     a2, a1, #L4_UART3-L4_Per
        STR     a2, L4_UART3_Log

d457 33
a489 1
;        DebugChar a1,a2, 72
a492 2
;        DebugChar a1,a2, 73

a498 2
;        DebugChar a1,a2, 74

a500 2
;        DebugChar a1,a2, 75

d503 5
a507 1
;        DebugChar a1,a2, 76
d509 1
a509 2
        MOV     a1,#0
        BL      HAL_UARTStartUp
d511 23
a533 7
;        DebugChar a1,a2, 77
;        MOV     a1,#1
;        BL      HAL_UARTStartUp
;        MOV     a1,#2
;        BL      HAL_UARTStartUp

        EXIT
d626 1
a626 1
NibbleShift     *       PAGE_SIZE_POW2
d694 1
a694 1
        LDR     r8, L4_UART3_Log
@


1.11
log
@OMAP3 DMA support, video device, debugging improvements
Detail:
  Boot.s - Make FIQDebug work again
  Boot.s - Add support for DMA & video devices
  Interrupts.s, hdr/omap3530 - Add 'ExtraDebugInterrupts' option
  hdr/SDMA, SDMA.s, Makefile - DMA code which presents itself to RISC OS as a set of single-buffered, interrupt-driven DMA channels.
  hdr/StaticWS - Add extra DMA, video & debug entries to workspace
  Interrupts.s - Add 'DebugDisablePrevious' debug option for more flexibility in tracking down noncleared IRQs with ExtraDebugInterrupts
  RAM.s - Use DMA to clear RAM on boot. RAM clear now takes less than 1 second on a rev C board, whereas before it used to take several.
  Video.s - Add simple HAL device to expose information needed by upcoming RISC OS module based video driver.
Admin:
  Tested on rev C2 beagleboard.


Version 0.16. Tagged as 'OMAP3-0_16'
@
text
@d149 1
d556 1
@


1.10
log
@Basic HAL_Reset implementation for OMAP3 HAL
Detail:
  This implementation only supports resets - for power-off a more complex implementation will be required (involving talking to the TPS over I2C, AFAIK).
Admin:
  Tested on rev C2 beagleboard


Version 0.14. Tagged as 'OMAP3-0_14'
@
text
@d40 1
a40 1
; Currently the code installs itself on the FIQ interrupt during HAL_InitDevices - but something during bootup appears to overwrite the code, so to get it working you may have to re-call it via OS_Hardware (with r8=0,r9=100)
d76 1
d147 2
d438 4
a522 3
        Entry
        BL      RTC_Init
        ; todo - move the FIQDebug code someplace safer!
d524 2
a525 2
        ; HAL_InitDevices gets called after the processor vectors are set up... so it's the perfect time for us to hijack the FIQ vector!
        ; First we set up the vector
d548 2
a549 2
        BL      HAL_FIQEnable
        ; Done!
d551 4
@


1.9
log
@Add HAL RTC support to OMAP3 kernel, improve IIC code
Detail:
  s/RTC - Implementation of new HAL RTC API. Uses the RTC built into the TWL/TPS companion chip.
  s/Boot - Initialise RTC HALDevice
  s/I2C - Add workaround for apparent hardware limitation of the OMAP I2C controllers; where appropriate multiple iic_transfers will now be merged together into one transfer, to ensure that a start bit is always sent at the start of each transfer
  hdr/omap3530 - Tweak DebugReg and DebugRegByte to allow LR to be output
  Makefile - add s.RTC to list of files. Fix GPADBG definition to not conflict with the 'gpa' folder that one of the makefile fragments creates.
Admin:
  Tested on rev C2 beagleboard


Version 0.13. Tagged as 'OMAP3-0_13'
@
text
@d35 1
a226 2
        IMPORT   HAL_Reset

d628 8
@


1.8
log
@Add I2C support to OMAP3 HAL. Fix FIQ handling. Improve debugging code.
Detail:
  Makefile, s/Boot, s/I2C, hdr/I2C, hdr/StaticWS - Adds I2C support to the OMAP3 HAL, via both HAL_IIC* and HAL_Video_IICOp.
  s/Interrupts - Fix bug causing incorrect clearing of FIQs
  s/Debug, s/Boot, hdr/omap3530 - Improve debugging code, and add simple FIQ debugger that outputs the PC to the serial port when the beagleboard USER button is pressed
  s/Stubs - Remove old stub functions
Admin:
  Tested on rev C2 beagleboard


Version 0.12. Tagged as 'OMAP3-0_12'
@
text
@d51 1
d518 2
a519 1
        ; No devices to implement yet
@


1.7
log
@Update OMAP3 HAL to expose USB OTG controller via HAL_USBControllerInfo
Detail:
  hdr/StaticWS, s/Boot - Store logical address of OTG controller
  hdr/USB, s/USB - Expose OTG controller by HAL_USBControllerInfo API
Admin:
  Tested on Rev C2 beagleboard


Version 0.11. Tagged as 'OMAP3-0_11'
@
text
@d33 2
d38 5
d143 1
d171 4
d193 1
d270 1
a270 1
        NullEntry ; HAL_IICType
d273 3
a275 3
        NullEntry ; HAL_IICDevice
        NullEntry ; HAL_IICTransfer
        NullEntry ; HAL_IICMonitorTransfer
d368 1
a368 1
        NullEntry ;HALEntry HAL_Video_IICOp
d427 8
d471 2
d518 28
d637 47
@


1.6
log
@OMAP3 HAL USB (EHCI) support, interrupt handling fixes
Detail:
  Makefile - added USB to objects list
  s/Boot, s/USB, hdr/StaticWS, hdr/USB - USB EHCI code
  s/Debug, s/Stubs, s/Timers, s/Top, s/UART, s/Video - Debugging tweaks and header dependency fixes
  s/Interrupts, hdr/omap3530 - Interrupt fixes & debugging code
  hdr/PRCM - typo fix
Admin:
  Tested on rev C2 beagleboard


Version 0.08. Tagged as 'OMAP3-0_08'
@
text
@d411 2
@


1.5
log
@OMAP3 HAL video support, safer RAM initialisation
Detail:
  Makefile - Enable compilation of s.video
  hdr/StaticWS - New workspace entries for video support
  hdr/Video - Typo fix, VENC registers
  s/Boot - Change initialisation order for video support
  s/Debug - Added DebugMemDump routine
  s/RAM - Added code to verify RAM config, to avoid crash if a board looks like a revision C but doesn't have the extra RAM
  s/Stubs - Disable stub video functions
  s/Video - Working video code, beginnings of TV-out code
Admin:
  Tested on rev C2 beagleboard. Video code may only function correctly if kernel is loaded via u-boot.


Version 0.06. Tagged as 'OMAP3-0_06'
@
text
@d27 1
a28 1
        GET     hdr.omap3530
d135 1
d214 5
d345 1
a345 1
        NullEntry ;HALEntry HAL_USBControllerInfo
d351 3
a353 3
        NullEntry ;HALEntry HAL_USBPortPower
        NullEntry ;HALEntry HAL_USBPortStatus
        NullEntry ;HALEntry HAL_USBPortIRQ
d405 7
a411 1
        
d440 1
a440 1
        BL      PRCM_SetClocks ; Inits timers & starts GPTIMER2
d446 2
d525 1
a525 1
        LDMIA   a3, {a1-a2} ; Return the lower 8 bytes of the ID. According to the HAL spec there should also be a CRC, but I haven't yet found out how to calculate it (or found anywhere in the OS where HAL_MachineID gets called!)
@


1.4
log
@OMAP3 HAL Beagleboard Rev C support, further video work.
Detail:
  s/Boot - Fixes for rev C beagleboard. Added GPIO code.
  s/Debug - DebugHALPrint, DebugHALPrintReg routines
  s/PRCM - PRCM_GetFreqSel added
  s/RAM - Fixes for rev C beagleboard. Sped up RAM clear by using more regs.
  s/Top - Fixes for rev C beagleboard
  s/Video - Video code potentially complete, but full of bugs and so still disabled.
  hdr/GPIO - Added GPIO registers
  hdr/omap3530 - Fixes for rev C beagleboard, GPIO, debug macros, QEMU support for new video code
  hdr/SDRC - Typo fix
  hdr/StaticWS - GPIO, pixel rate entries added
  hdr/Video - DSI PLL registers added
Admin:
  Tested on rev C beagleboard.


Version 0.04. Tagged as 'OMAP3-0_04'
@
text
@d428 1
a428 1
        BL      PRCM_SetClocks
d432 1
a432 1
        BL      Timer_Init
d436 1
a436 1
        BL      Video_init
@


1.3
log
@OMAP3 HAL fixes and further video work
Detail:
  s/Boot - Store some workspace vars used by video code. Disable some debug output.
  s/Interrupts - Update HAL_IRQClear to allow clearing of VSync IRQ
  s/Top - Fix CP15 flags
  s/Video - Implemented majority of video code needed by kernel. Correct code for calculating and programming pixel clocks still required, so code remains disabled by default.
  hdr/PRCM - Correct typo
  hdr/StaticWS - Add video-related workspace entries
  hdr/Video - Add constants for mouse pointer image buffer size
Admin:
  Tested under qemu-omap3 and rev B6 beagleboard.


Version 0.03. Tagged as 'OMAP3-0_03'
@
text
@d32 1
a37 1
        EXPORT  get_end_of_ram
d41 2
d70 1
d79 1
d89 1
a89 1
        LDR     a2, =CS1_SDRAM
d97 2
d380 1
a380 1
        ; L4_PowerMan, L4_32KTIMER
d385 2
d414 12
a569 14
move_ram
; [ RAM_Base <> Boot_RAM_Base
;        ; so that SBR regs don't need changing
;        ASSERT  (RAM_Base :AND: &3FFFFFFF) = (Boot_RAM_Base :AND: &3FFFFFFF)
;        LDR     ip, =PMMR
;        MOV     a1, #RAM_Base
;        STR     a1, [ip, #MCU_SDBR]
;        ADD     sp, sp, #RAM_Base - Boot_RAM_Base
; ]
        MOV     pc, lr

get_end_of_ram
        MOV     pc, lr

@


1.2
log
@  OMAP3 HAL fixes and updates to allow booting on real hardware.
Detail:
  Makefile - add s.PRCM to objects
  s/Boot - Call PRCM_SetClocks during HAL_Init. Added (disabled) debugging code.
  s/Interrupts - Updated HAL_IRQSource, HAL_FIQSource to query ARM interrupt state instead of relying on INTC alone to detect whether an interrupt is firing or not.
  s/PRCM - Code to measure system clock frequency, store it for HAL purposes, and notify the OMAP of the frequency in order to ensure correct operation.
  s/Timers - Use measured system clock frequency as the timer frequency instead of hard-coded value. Return correct values from HAL_TimerPeriod.
  s/Top - Added (disabled) debugging code. Updated ARM initialisation to use correct cache cleaning procedure.
  s/Video - Further minor work towards completing video driver.
  hdr/CoPro15ops - Deprecate ARM_flush_* macros
  hdr/PRCM - Add more register addresses
  hdr/StaticWS - Add entried for PowerMan & 32K timer logical addresses, system clock speed
  hdr/Timers - remove incorrect, hard-coded timer frequency
  hdr/omap3530 - remove unused FlashCheck global, add DebugChar macro
Admin:
  Tested with HALTester and the RISC OS kernel using qemu-omap3.
  Tested with HALTester on a rev. B6 beagleboard.


Version 0.02. Tagged as 'OMAP3-0_02'
@
text
@d355 1
d387 4
d406 1
a406 1
        DebugChar a1,a2, 72
d410 1
a410 1
        DebugChar a1,a2, 73
d414 1
a414 1
        DebugChar a1,a2, 74
d418 1
a418 1
        DebugChar a1,a2, 75
d422 1
a422 1
        DebugChar a1,a2, 76
d427 1
a427 1
        DebugChar a1,a2, 77
@


1.1
log
@Basic OMAP3 HAL
Detail:
  Performs startup procedure suitable for any location in ROM or RAM. UART, timer, counter, interrupt & debug functionality implemented. Video support incomplete and nonfunctional.
Admin:
  Tested with HALTester & RISC OS kernel under qemu-omap3


Version 0.01. Tagged as 'OMAP3-0_01'
@
text
@d67 1
d97 1
d128 1
d373 6
d399 7
a405 1
        STR     a2, L4_UART3_Log 
d409 2
d413 2
d417 2
d421 2
@

