head	1.6;
access;
symbols
	OMAP3-1_18:1.6
	OMAP3-1_17:1.6
	OMAP3-1_16:1.6
	OMAP3-1_15:1.6
	OMAP3-1_14:1.6
	SMP:1.6.0.2
	SMP_bp:1.6
	OMAP3-1_13:1.6
	OMAP3-1_12:1.6
	OMAP3-1_11:1.6
	OMAP3-1_10:1.6
	OMAP3-1_09:1.6
	OMAP3-1_08:1.6
	OMAP3-1_07:1.6
	OMAP3-1_06:1.6
	OMAP3-1_05:1.6
	OMAP3-1_04:1.6
	OMAP3-1_03:1.6
	OMAP3-1_02:1.6
	OMAP3-1_01:1.6
	OMAP3-1_00:1.6
	OMAP3-0_99:1.5
	OMAP3-0_98:1.5
	OMAP3-0_97:1.5
	OMAP3-0_96:1.5
	OMAP3-0_95:1.5
	OMAP3-0_94:1.5
	OMAP3-0_93:1.5
	OMAP3-0_92:1.5
	OMAP3-0_91:1.5
	OMAP3-0_90:1.5
	OMAP3-0_89:1.4
	OMAP3-0_88:1.4
	OMAP3-0_87:1.4
	OMAP3-0_86:1.4
	OMAP3-0_85:1.4
	OMAP3-0_84:1.4
	OMAP3-0_83:1.4
	OMAP3-0_82:1.4
	OMAP3-0_81:1.4
	OMAP3-0_80:1.4
	OMAP3-0_79:1.4
	OMAP3-0_78:1.4
	OMAP3-0_77:1.4
	OMAP3-0_76:1.4
	OMAP3-0_75:1.4
	OMAP3-0_74:1.4
	OMAP3-0_73:1.4
	OMAP3-0_72:1.4
	OMAP3-0_71:1.4
	OMAP3-0_70:1.4
	OMAP3-0_69:1.4
	OMAP3-0_68:1.4
	OMAP3-0_67:1.4
	OMAP3-0_66:1.4
	OMAP3-0_65:1.4
	OMAP3-0_64:1.4
	OMAP3-0_63:1.4
	OMAP3-0_62:1.4
	OMAP3-0_61:1.4
	OMAP3-0_60:1.3
	OMAP3-0_59:1.3
	OMAP3-0_58:1.3
	OMAP3-0_57:1.3
	OMAP3-0_56:1.3
	OMAP3-0_55:1.3
	OMAP3-0_54:1.3
	OMAP3-0_53:1.3
	OMAP3-0_52:1.3
	OMAP3-0_51:1.3
	OMAP3-0_50:1.3
	OMAP3-0_49:1.3
	OMAP3-0_48:1.3
	OMAP3-0_47:1.3
	OMAP3-0_46:1.3
	OMAP3-0_45:1.3
	OMAP3-0_44:1.3
	OMAP3-0_43:1.3
	OMAP3-0_42:1.3
	OMAP3-0_41:1.3
	OMAP3-0_40:1.3
	OMAP3-0_39:1.3
	OMAP3-0_38:1.3
	OMAP3-0_37:1.3
	OMAP3-0_36:1.3
	OMAP3-0_35:1.3
	OMAP3-0_34:1.2
	OMAP3-0_33:1.2
	OMAP3-0_32:1.2
	OMAP3-0_31:1.2
	OMAP3-0_30:1.2
	OMAP3-0_29:1.2
	OMAP3-0_28:1.2
	OMAP3-0_27:1.2
	OMAP3-0_26:1.2
	OMAP3-0_25:1.1
	OMAP3-0_24:1.1;
locks; strict;
comment	@# @;


1.6
date	2014.12.06.10.43.11;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	txtXqid4r9I85Y0y;

1.5
date	2013.11.01.18.52.57;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	exT1lzL3WDXiEBbx;

1.4
date	2012.03.25.11.49.08;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	c99VvmwezV2J8gYv;

1.3
date	2010.11.08.20.27.22;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2010.03.28.17.59.49;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2010.03.20.01.07.07;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Change over to reassigned bus types

Version 1.00. Tagged as 'OMAP3-1_00'
@
text
@; Copyright 2010 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        $GetIO

        GET     Hdr:OSEntries
        GET     Hdr:HALEntries
        GET     Hdr:Proc

        GET     hdr.omap3530
        GET     hdr.StaticWS
        GET     hdr.GPIO

        AREA    |Asm$$Code|, CODE, READONLY, PIC


        EXPORT  NIC_Init
        EXPORT  NIC_GPMC_Config_IGEP
        EXPORT  NIC_GPMC_Config_DevKit
        EXPORT  NIC_SMSC
        EXPORT  NIC_DM9000

        IMPORT  GPMC_Enable
        IMPORT  memcpy
        IMPORT  GPIOx_SetAndEnableIRQ

NIC_Init
        ; a1 = GPMC CS
        ; a2 = GPMC configuration
        ; a3 = GPIO IRQ
        ; a4 = HAL device template
        ; v1 = amount of memory to map in
        Entry   "v2"
        ; First copy the HAL device template into our workspace
        Push    "a1-a3"
        ADRL    v2, NICWS
        MOV     a1, v2
        MOV     a2, a4
        MOV     a3, #NIC_DeviceSize
        BL      memcpy
        STR     sb, [v2, #:INDEX:NICWorkspace]
        Pull    "a1-a3"
        STRB    a1, [v2, #HALDevice_Location+1] ; Might as well fill in the GPMC CS #
        STR     a3, [v2, #:INDEX:NICGPIO]
        ; Work out what IRQ that GPIO corresponds to
        GPIO_GetIRQR a3, a3
        ORR     a3, a3, #1:SHL:31
        STR     a3, [v2, #HALDevice_Device]
        ; Set up the GPMC bus
        BL      GPMC_Enable
        ; We now have a2=base addr, a3=size
        ; Map it in, but using the supplied size (v1), since no NIC is going to need 16MB of address space
        MOV     a1, #0
        MOV     a3, v1
        CallOS  OS_MapInIO
        STR     a1, [v2, #HALDevice_Address]
        ; Now register the HAL device
        MOV     a1, #0
        MOV     a2, v2
        CallOS  OS_AddDevice
        EXIT

; These boards use the same GPMC config values
NIC_GPMC_Config_IGEP
NIC_GPMC_Config_DevKit
        DCD     &00001000 ; GPMC_CONFIG1
        DCD     &001E1E01 ; GPMC_CONFIG2 note - DevKit version of u-boot has CSONTIME of 0, but DevKit code in mainline u-boot has CSONTIME of 1.
        DCD     &00080300 ; GPMC_CONFIG3
        DCD     &1C091C09 ; GPMC_CONFIG4
        DCD     &04181F1F ; GPMC_CONFIG5
        DCD     &00000FCF ; GPMC_CONFIG6
        DCD     &00000F6C ; GPMC_CONFIG7 (16mb CS @@ &26000000)

; HAL device template for SMSC NIC
NIC_SMSC
        DCW     HALDeviceType_Comms + HALDeviceComms_EtherNIC
        DCW     HALDeviceID_EtherNIC_SMSC9221
        DCD     HALDeviceBus_Exp + HALDeviceExpBus_GPMC
        DCD     0               ; API version
        DCD     SMSCDesc        ; Description
        DCD     0               ; Address - filled in later
        %       12              ; Reserved
        DCD     NICActivate
        DCD     NICDeactivate
        DCD     NICReset
        DCD     NICSleep
        DCD     0               ; Device - filled in later
        DCD     NICTestIRQ      ; TestIRQ
        DCD     NICClearIRQ     ; ClearIRQ
        %       4
        ASSERT  (.-NIC_SMSC) = HALDeviceSize
        DCD     0               ; HAL workspace
        DCD     0               ; GPIO IRQ #
        DCD     GPIO_LEVELDETECT0_FLAG ; SMSC9221 uses active-low IRQ by default
        ASSERT  (.-NIC_SMSC) = NIC_DeviceSize                

; HAL device template for DM9000 NIC
NIC_DM9000
        DCW     HALDeviceType_Comms + HALDeviceComms_EtherNIC
        DCW     HALDeviceID_EtherNIC_DM9000
        DCD     HALDeviceBus_Exp + HALDeviceExpBus_GPMC
        DCD     0               ; API version
        DCD     DM9000Desc      ; Description
        DCD     0               ; Address - filled in later
        %       12              ; Reserved
        DCD     NICActivate
        DCD     NICDeactivate
        DCD     NICReset
        DCD     NICSleep
        DCD     0               ; Device - filled in later
        DCD     NICTestIRQ      ; TestIRQ
        DCD     NICClearIRQ     ; ClearIRQ
        %       4
        ASSERT  (.-NIC_DM9000) = HALDeviceSize
        DCD     0               ; HAL workspace
        DCD     0               ; GPIO IRQ #
        DCD     GPIO_LEVELDETECT0_FLAG ; DM9000 uses active-low IRQ by default 
        ASSERT  (.-NIC_DM9000) = NIC_DeviceSize

SMSCDesc
        =       "SMSC LAN9221 NIC", 0
DM9000Desc
        =       "DAVICOM DM9000 NIC", 0
        ALIGN

NICActivate
        ; Configure GPIO IRQ
        Entry   "sb"
        LDR     sb, NICWorkspace
        LDR     a2, NICGPIO_Mode
        LDR     a1, NICGPIO
        BL      GPIOx_SetAndEnableIRQ
        MOV     a1, #1
        EXIT

NICDeactivate
        ; Disable GPIO IRQ
        Entry   "sb"
        LDR     sb, NICWorkspace
        LDR     ip, NICGPIO
        GPIO_PrepareR a2, a3, ip
        STR     a3, [a2, #GPIO_CLEARIRQENABLE1]
        EXIT

NICReset
        ; What should we do here?
        MOV     pc, lr

NICSleep
        ; Nothing we can do
        MOV     a1, #0
        MOV     pc, lr

NICTestIRQ
        LDR     ip, NICGPIO
        MOV     a3, #1
        LDR     a4, NICWorkspace
        MOV     a2, ip, LSR #5
        ADD     a2, a4, a2, LSL #2
        LDR     a2, [a2, #:INDEX:L4_GPIO_Table]
        LDR     a1, [a2, #GPIO_IRQSTATUS1]
        AND     a1, a3, a1, ROR ip
        MOV     pc, lr

NICClearIRQ
        Entry   "sb"
        LDR     ip, NICGPIO
        LDR     sb, NICWorkspace
        GPIO_PrepareR a1, a2, ip
        STR     a2, [a1, #GPIO_IRQSTATUS1]
        EXIT

        END
@


1.5
log
@Refactor IIC calls to use RISCOS_IICOpV
- Comments and symbolic names for RTC register bits copied over from OMAP4 sources.
- Delete dead function ReadTimeForNVRAM.
- Use RTCFormatFlags_BCD_NeedsYearHelp flag for year 2070 compatibility.
- Moved CallOS macro into a header.
Tested on a Beagleboard xM, clock still worked over a power cycle.

Version 0.90. Tagged as 'OMAP3-0_90'
@
text
@d95 1
a95 1
        DCD     HALDeviceBus_Peri + HALDevicePeriBus_GPMC
d118 1
a118 1
        DCD     HALDeviceBus_Peri + HALDevicePeriBus_GPMC
@


1.4
log
@Line some things up.
To help OMAP4 tracking changes a number of the changes were purely cosmetic lining up differences, this change is where OMAP3 wasn't on a conventional column layout.

Version 0.61. Tagged as 'OMAP3-0_61'
@
text
@a43 8
        ; This macro should really go in a header somewhere!
        MACRO
        CallOS  $entry
        ASSERT  $entry <= HighestOSEntry
        MOV     lr, pc
        LDR     pc, OSentries + 4*$entry
        MEND
 
@


1.3
log
@Correct DM9000 NIC IRQ configuration
Detail:
  s/GPIO - The IRQ settings for the DevKit8000's NIC were wrong and should have been active-low, not active-high. This fixes that.
Admin:
  Tested by Stephen Leary with his NIC driver


Version 0.35. Tagged as 'OMAP3-0_35'
@
text
@d15 1
@


1.2
log
@Fix OMAP HAL GPIO/NIC setup code
Detail:
  s/GPIO - Fixed use of invalid 'MSR <psr>,<rn>,<shift>' instruction in GPIOx_SetAndEnableIRQ. Fixed PSR flags that are used to calculate LEVELDETECT0 value.
  s/NIC - Fixed NICActivate to load NICGPIO_Mode before the HAL device ptr gets clobbered
Admin:
  Tested on rev C2 beagleboard, using IGEP config. NICActivate now appears to configure the GPIO controller properly.


Version 0.26. Tagged as 'OMAP3-0_26'
@
text
@d141 1
a141 1
        DCD     GPIO_LEVELDETECT1_FLAG ; DM9000 uses active-high IRQ by default 
@


1.1
log
@Add basic GPMC setup code and NIC HAL devices to OMAP HAL
Detail:
  s/GPMC, hdr/GPMC, hdr/StaticWS - basic code to reset the GPMC and configure chip selects
  s/NIC, hdr/NIC, hdr/StaticWS - code to expose any onboard NICs (SMSC9221, DM9000) to RISC OS as simple HAL devices.
  Makefile - added GPMC & NIC source files
  s/board, hdr/board - Expanded board config struct to include a pointer to extra code to call at the end of HAL_InitDevices, to allow board-specific devices to be initialised
  s/boot - Extra HAL_InitDevices code to set up the NICs on the IGEP/DevKit
  s/GPIO, hdr/GPIO - Improved functionality to allow GPIO IRQs to be used
  s/SDMA, s/Video - Tweaked the HAL device descriptors to indicate that the devices are on the L3 interconnect
Admin:
  Tested on rev C2 beagleboard. IGEP/DevKit entry points booted OK, but no attempts were made to look for or interact with the new HAL devices!


Version 0.24. Tagged as 'OMAP3-0_24'
@
text
@d154 1
a155 1
        LDR     a2, NICGPIO_Mode
@

