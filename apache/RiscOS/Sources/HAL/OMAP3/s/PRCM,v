head	1.5;
access;
symbols
	OMAP3-1_18:1.5
	OMAP3-1_17:1.5
	OMAP3-1_16:1.5
	OMAP3-1_15:1.5
	OMAP3-1_14:1.5
	SMP:1.5.0.2
	SMP_bp:1.5
	OMAP3-1_13:1.5
	OMAP3-1_12:1.5
	OMAP3-1_11:1.5
	OMAP3-1_10:1.5
	OMAP3-1_09:1.5
	OMAP3-1_08:1.5
	OMAP3-1_07:1.5
	OMAP3-1_06:1.5
	OMAP3-1_05:1.5
	OMAP3-1_04:1.5
	OMAP3-1_03:1.5
	OMAP3-1_02:1.5
	OMAP3-1_01:1.5
	OMAP3-1_00:1.5
	OMAP3-0_99:1.5
	OMAP3-0_98:1.5
	OMAP3-0_97:1.5
	OMAP3-0_96:1.5
	OMAP3-0_95:1.5
	OMAP3-0_94:1.5
	OMAP3-0_93:1.5
	OMAP3-0_92:1.5
	OMAP3-0_91:1.5
	OMAP3-0_90:1.5
	OMAP3-0_89:1.5
	OMAP3-0_88:1.5
	OMAP3-0_87:1.5
	OMAP3-0_86:1.5
	OMAP3-0_85:1.5
	OMAP3-0_84:1.5
	OMAP3-0_83:1.5
	OMAP3-0_82:1.5
	OMAP3-0_81:1.5
	OMAP3-0_80:1.5
	OMAP3-0_79:1.5
	OMAP3-0_78:1.5
	OMAP3-0_77:1.5
	OMAP3-0_76:1.5
	OMAP3-0_75:1.5
	OMAP3-0_74:1.5
	OMAP3-0_73:1.5
	OMAP3-0_72:1.5
	OMAP3-0_71:1.5
	OMAP3-0_70:1.5
	OMAP3-0_69:1.5
	OMAP3-0_68:1.5
	OMAP3-0_67:1.5
	OMAP3-0_66:1.5
	OMAP3-0_65:1.5
	OMAP3-0_64:1.5
	OMAP3-0_63:1.5
	OMAP3-0_62:1.5
	OMAP3-0_61:1.5
	OMAP3-0_60:1.4
	OMAP3-0_59:1.4
	OMAP3-0_58:1.4
	OMAP3-0_57:1.4
	OMAP3-0_56:1.4
	OMAP3-0_55:1.4
	OMAP3-0_54:1.4
	OMAP3-0_53:1.4
	OMAP3-0_52:1.4
	OMAP3-0_51:1.4
	OMAP3-0_50:1.4
	OMAP3-0_49:1.4
	OMAP3-0_48:1.4
	OMAP3-0_47:1.4
	OMAP3-0_46:1.4
	OMAP3-0_45:1.4
	OMAP3-0_44:1.4
	OMAP3-0_43:1.4
	OMAP3-0_42:1.4
	OMAP3-0_41:1.4
	OMAP3-0_40:1.4
	OMAP3-0_39:1.4
	OMAP3-0_38:1.4
	OMAP3-0_37:1.4
	OMAP3-0_36:1.4
	OMAP3-0_35:1.4
	OMAP3-0_34:1.4
	OMAP3-0_33:1.4
	OMAP3-0_32:1.4
	OMAP3-0_31:1.3
	OMAP3-0_30:1.3
	OMAP3-0_29:1.3
	OMAP3-0_28:1.3
	OMAP3-0_27:1.3
	OMAP3-0_26:1.3
	OMAP3-0_25:1.3
	OMAP3-0_24:1.3
	OMAP3-0_23:1.3
	OMAP3-0_22:1.3
	OMAP3-0_21:1.3
	OMAP3-0_20:1.3
	OMAP3-0_19:1.2
	OMAP3-0_18:1.2
	OMAP3-0_17:1.2
	OMAP3-0_16:1.2
	OMAP3-0_15:1.2
	OMAP3-0_14:1.2
	OMAP3-0_13:1.2
	OMAP3-0_12:1.2
	OMAP3-0_11:1.2
	OMAP3-0_10:1.2
	OMAP3-0_09:1.2
	OMAP3-0_08:1.2
	OMAP3-0_07:1.2
	OMAP3-0_06:1.2
	OMAP3-0_05:1.2
	OMAP3-0_04:1.2
	OMAP3-0_03:1.1
	OMAP3-0_02:1.1;
locks; strict;
comment	@# @;


1.5
date	2012.03.25.11.49.08;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	c99VvmwezV2J8gYv;

1.4
date	2010.09.14.20.58.50;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2010.01.24.15.51.20;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.08.22.25.11;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.21.18.51.47;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Line some things up.
To help OMAP4 tracking changes a number of the changes were purely cosmetic lining up differences, this change is where OMAP3 wasn't on a conventional column layout.

Version 0.61. Tagged as 'OMAP3-0_61'
@
text
@; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        GET     Hdr:Proc

        GET     Hdr:OSEntries

        GET     hdr.omap3530
        GET     hdr.PRCM
        GET     hdr.StaticWS
        GET     hdr.Timers

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        IMPORT  Timer_Init

        EXPORT  PRCM_SetClocks
        EXPORT  PRCM_GetFreqSel

PRCM_SetClocks
        Push    "v1-v4,lr"
        ; First we calculate the system clock speed by measuring it against the 32KHz counter
        ; Then we make sure all system clocks are set to max
        ; This is basically the same algorithm as u-boot uses
        LDR     v4, L4_PowerMan_Log
        ; Use timer 2, just so we don't have to worry about turning it off later (since it's used as HAL timer 0)
        BL      Timer_Init ; Just (re)initialise all of them for simplicity
        LDR     a3, Timers_Log
        MOV     a1, #0
        STR     a1, [a3, #TLDR] ; Start at 0
        MOV     a1, #1
        STR     a1, [a3, #TCLR] ; Start timer
        LDR     a4, L4_32KTIMER_Log
        LDR     a1, [a4, #REG_32KSYNCNT_CR]
        ; Wait 20 ticks. But unlike u-boot, we'll properly take into account the chance of
        ; the timer overflowing
10
        LDR     a2, [a4, #REG_32KSYNCNT_CR]
        SUB     a2, a2, a1
        CMP     a2, #20
        BLT     %BT10
        ; Now begin
        LDR     a1, [a4, #REG_32KSYNCNT_CR]
        LDR     v1, [a3, #TCRR]
10
        LDR     a2, [a4, #REG_32KSYNCNT_CR]
        LDR     v2, [a3, #TCRR]
        SUB     a2, a2, a1
        CMP     a2, #20
        BLT     %BT10
        SUB     a1, v2, v1
        ; If the system clock was being divided by two, double our value
        ; This avoids us having to disable the divider during the measurement loop
        ; (For systems that don't like us doing that, e.g. AM/DM37xx)
        ADD     a2, v4, #Global_Reg_PRM
        LDR     a2, [a2, #PRM_CLKSRC_CTRL]
        TST     a2, #&80
        MOVNE   a1, a1, LSL #1
        ; Now search the lookup table for the right entry
        ADR     a2, SysClkTable
10
        LDMIA   a2!,{a3,a4,v1,v2,v3}
        CMP     a1, a3
        BLE     %BT10
        ; Program PRM_CLKSEL with input oscillator frequency
        ADD     a1, v4, #Clock_Control_Reg_PRM
        STR     v1, [a1, #PRM_CLKSEL]
        ; Program PRM_CLKSRC_CTRL with required clock divider
        ADD     a1, v4, #Global_Reg_PRM
        LDR     a2, [a1, #PRM_CLKSRC_CTRL]
        BIC     a2, a2, #&C0
        ORR     a2, a2, v2, LSL #6
        STR     a2, [a1, #PRM_CLKSRC_CTRL]
        ; Calculate clock speed following divider, and store for our own use
        CMP     v2, #2
        MOVEQ   a4, a4, LSR #1
        MOVEQ   v3, v3, LSR #1
        STR     a4, sys_clk
        STR     v3, Timer_DelayMul
        ; Use the sys_clk value to configure DPLL5 to generate a 120MHz clock
        ; sys_clk should be either 12MHz, 13MHz, or 19.2MHz
        CMP     v3, #130 ; DelayMul is an easy value to compare against
        LDR     a1, L4_ClockMan_Log
        MOVNE   a2, #11 ; 12MHz -> 1MHz, 19.2MHz -> 1.6MHz
        MOVEQ   a2, #12 ; 13MHz -> 1MHz
        LDR     a3, =CM_CLKSEL4_PLL
        ORRLE   a2, a2, #120:SHL:8 ; 1MHz -> 120MHz
        ORRGT   a2, a2, #75:SHL:8 ; 1.6MHz -> 120MHz
        STR     a2, [a1, a3]
        LDR     a3, =CM_CLKSEL5_PLL
        MOV     a2, #1 ; Divide by 1
        STR     a2, [a1, a3]
        LDR     a3, =CM_CLKEN2_PLL
        MOVLE   a2, #&37 ; Fint=1MHz, FREQSEL=3
        MOVGT   a2, #&67 ; Fint=1.6MHz, FREQSEL=6
        STR     a2, [a1, a3]
        ; Wait for lock
5
        LDR     a3, =CM_IDLEST2_CKGEN
        LDR     a2, [a1, a3]
        TST     a2, #1
        BEQ     %BT5
        Pull    "v1-v4,pc"

PRCM_GetFreqSel
        ; Return PLL FREQSEL value for a given clock frequency
        ; In: a1=Fint
        ; Out: a1=FREQSEL, 0 for error
        ; Corrupts a2-a4,ip
        ADR     ip, FreqSelTable
10
        LDMIA   ip!, {a2-a4}
        CMP     a1, a2
        CMPHS   a3, a1
        BLO     %BT10
        MOV     a1, a4
        MOV     pc, lr


SysClkTable
        ;   Counter Clock speed SYS_CLKIN_SEL Divider DelayMul
        DCD 19000,  38400000,   4,            2,      384
        DCD 15200,  26000000,   3,            2,      260
        DCD 9000,   19200000,   2,            1,      192
        DCD 7600,   13000000,   1,            1,      130
        DCD -1,     12000000,   0,            1,      120
        ; Where is 16.8MHz?

FreqSelTable
        ;   Min rate  Max rate   FREQSEL value
        DCD 750000,   1000000,   &3
        DCD 1000000,  1250000,   &4
        DCD 1250000,  1500000,   &5
        DCD 1500000,  1750000,   &6
        DCD 1750000,  2100000,   &7
        DCD 7500000,  10000000,  &B
        DCD 10000000, 12500000,  &C
        DCD 12500000, 15000000,  &D
        DCD 15000000, 17500000,  &E
        DCD 17500000, 21000000,  &F
        DCD 0,        &FFFFFFFF, 0 ; List terminator is catch-all for error case

        END
@


1.4
log
@BeagleBoard-xM, TouchBook fixes
Detail:
  s/board, hdr/board, hdr/omap3530, hdr/UART - Add support for 4th UART available on AM/DM37x (i.e. BeagleBoard-xM)
  hdr/omap3530 - Add details of CONTROL_IDCODE register & known hawkeye/revision numbers for OMAP type/revision detection
  s/Boot, s/GPIO, hdr/GPIO, s/I2C, hdr/StaticWS - Allow TPS LED drivers to be used as (output-only) GPIOs. Add new polled I/O I2C function, and appropriate logic to make GPIO code use it instead of RISCOS_IICOpV if RISC OS hasn't finished initialising yet. Add code to initialise some extra BB/TB GPIOs on boot.
  s/Timers, hdr/Timers - Stop RISC OS from using GPTIMER9, because it's used to drive the screen backlight on the TouchBook
  s/Video - Use appropriate porch/sync limits on non-OMAP35x
  s/PRCM - Don't mess with the system clock divider when calculating system clock speed (AM/DM37x fix)
Admin:
  Tested on rev C2 beagleboard, rev A2 BB-xM (indirectly), rev C1 TouchBook


Version 0.32. Tagged as 'OMAP3-0_32'
@
text
@d52 2
a53 1
        ; Wait 20 ticks. But unlike u-boot, we'll properly take into account the chance of the timer overflowing
d127 1
a127 1
        ADR     ip,FreqSelTable
d129 3
a131 3
        LDMIA   ip!,{a2-a4}
        CMP     a1,a2
        CMPHS   a3,a1
d133 2
a134 2
        MOV     a1,a4
        MOV     pc,lr
@


1.3
log
@Fix hang on boot in OMAP3 HAL
Detail:
  PRCM.s - This file missed my checkin last night. Contains some rather important code that was moved there from USB.s, for initialising DPLL5.
Admin:
  Tested on rev C2 beagleboard. HAL code in CVS should now match what's on my machine!


Version 0.20. Tagged as 'OMAP3-0_20'
@
text
@a42 6
        ; Make sure system clock isn't being divided by 2
        ADD     a2, v4, #Global_Reg_PRM
        LDR     a3, [a2, #PRM_CLKSRC_CTRL]
        BIC     a3, a3, #&80
        ORR     a3, a3, #&40
        STR     a3, [a2, #PRM_CLKSRC_CTRL]
d68 8
@


1.2
log
@OMAP3 HAL Beagleboard Rev C support, further video work.
Detail:
  s/Boot - Fixes for rev C beagleboard. Added GPIO code.
  s/Debug - DebugHALPrint, DebugHALPrintReg routines
  s/PRCM - PRCM_GetFreqSel added
  s/RAM - Fixes for rev C beagleboard. Sped up RAM clear by using more regs.
  s/Top - Fixes for rev C beagleboard
  s/Video - Video code potentially complete, but full of bugs and so still disabled.
  hdr/GPIO - Added GPIO registers
  hdr/omap3530 - Fixes for rev C beagleboard, GPIO, debug macros, QEMU support for new video code
  hdr/SDRC - Typo fix
  hdr/StaticWS - GPIO, pixel rate entries added
  hdr/Video - DSI PLL registers added
Admin:
  Tested on rev C beagleboard.


Version 0.04. Tagged as 'OMAP3-0_04'
@
text
@d93 24
a116 1
        STR     v3, Timer_DelayMul        
@


1.1
log
@  OMAP3 HAL fixes and updates to allow booting on real hardware.
Detail:
  Makefile - add s.PRCM to objects
  s/Boot - Call PRCM_SetClocks during HAL_Init. Added (disabled) debugging code.
  s/Interrupts - Updated HAL_IRQSource, HAL_FIQSource to query ARM interrupt state instead of relying on INTC alone to detect whether an interrupt is firing or not.
  s/PRCM - Code to measure system clock frequency, store it for HAL purposes, and notify the OMAP of the frequency in order to ensure correct operation.
  s/Timers - Use measured system clock frequency as the timer frequency instead of hard-coded value. Return correct values from HAL_TimerPeriod.
  s/Top - Added (disabled) debugging code. Updated ARM initialisation to use correct cache cleaning procedure.
  s/Video - Further minor work towards completing video driver.
  hdr/CoPro15ops - Deprecate ARM_flush_* macros
  hdr/PRCM - Add more register addresses
  hdr/StaticWS - Add entried for PowerMan & 32K timer logical addresses, system clock speed
  hdr/Timers - remove incorrect, hard-coded timer frequency
  hdr/omap3530 - remove unused FlashCheck global, add DebugChar macro
Admin:
  Tested with HALTester and the RISC OS kernel using qemu-omap3.
  Tested with HALTester on a rev. B6 beagleboard.


Version 0.02. Tagged as 'OMAP3-0_02'
@
text
@d35 1
d95 15
a109 1
        
d120 14
@

