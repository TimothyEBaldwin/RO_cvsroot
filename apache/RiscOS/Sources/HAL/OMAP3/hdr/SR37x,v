head	1.3;
access;
symbols
	OMAP3-1_18:1.3
	OMAP3-1_17:1.3
	OMAP3-1_16:1.3
	OMAP3-1_15:1.3
	OMAP3-1_14:1.3
	SMP:1.3.0.2
	SMP_bp:1.3
	OMAP3-1_13:1.3
	OMAP3-1_12:1.3
	OMAP3-1_11:1.3
	OMAP3-1_10:1.3
	OMAP3-1_09:1.3
	OMAP3-1_08:1.3
	OMAP3-1_07:1.3
	OMAP3-1_06:1.2
	OMAP3-1_05:1.2
	OMAP3-1_04:1.2
	OMAP3-1_03:1.2
	OMAP3-1_02:1.2
	OMAP3-1_01:1.2
	OMAP3-1_00:1.2
	OMAP3-0_99:1.2
	OMAP3-0_98:1.2
	OMAP3-0_97:1.2
	OMAP3-0_96:1.2
	OMAP3-0_95:1.2
	OMAP3-0_94:1.2
	OMAP3-0_93:1.2
	OMAP3-0_92:1.2
	OMAP3-0_91:1.2
	OMAP3-0_90:1.2
	OMAP3-0_89:1.2
	OMAP3-0_88:1.2
	OMAP3-0_87:1.2
	OMAP3-0_86:1.2
	OMAP3-0_85:1.2
	OMAP3-0_84:1.2
	OMAP3-0_83:1.2
	OMAP3-0_82:1.2
	OMAP3-0_81:1.1
	OMAP3-0_80:1.1
	OMAP3-0_79:1.1
	OMAP3-0_78:1.1
	OMAP3-0_77:1.1
	OMAP3-0_76:1.1
	OMAP3-0_75:1.1
	OMAP3-0_74:1.1
	OMAP3-0_73:1.1
	OMAP3-0_72:1.1
	OMAP3-0_71:1.1
	OMAP3-0_70:1.1
	OMAP3-0_69:1.1
	OMAP3-0_68:1.1
	OMAP3-0_67:1.1
	OMAP3-0_66:1.1
	OMAP3-0_65:1.1
	OMAP3-0_64:1.1
	OMAP3-0_63:1.1
	OMAP3-0_62:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.01.02.10.02.47;	author rool;	state Exp;
branches;
next	1.2;
commitid	7h6NDHS2wpJ4glPy;

1.2
date	2012.10.07.23.06.15;	author jlee;	state Exp;
branches;
next	1.1;
commitid	7PiwdqwfsfurAvnw;

1.1
date	2012.04.08.22.37.51;	author jlee;	state Exp;
branches;
next	;
commitid	3W6tvBOo1ezoh70w;


desc
@@


1.3
log
@Extend to support CPUClk device 0.2 API
Detail:
  Extra entry to get the die temperature, as reported by Portable_ReadSensor(0,0,0).
Admin:
  Submission from Willi Theiss.
  Tested on IGEPv2 and BBxM.

Version 1.07. Tagged as 'OMAP3-1_07'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; SmartReflex registers - relative to L4_SR1/L4_SR2

SR37x_SRCONFIG            * &00
SR37x_SRSTATUS            * &04
SR37x_SENVAL              * &08
SR37x_SENMIN              * &0C
SR37x_SENMAX              * &10
SR37x_SENAVG              * &14
SR37x_AVGWEIGHT           * &18
SR37x_NVALUERECIPROCAL    * &1C
SR37x_IRQSTATUS_RAW       * &24
SR37x_IRQSTATUS           * &28
SR37x_IRQENABLE_SET       * &2C
SR37x_IRQENABLE_CLR       * &30
SR37x_SENERROR_REG        * &34
SR37x_ERRCONFIG           * &38

; eFuse registers containing SmartReflex parameters - relative to L4_Core

CONTROL_FUSE_OPP50_VDD1   * &2384
CONTROL_FUSE_OPP100_VDD1  * &2388
CONTROL_FUSE_OPP130_VDD1  * &2390
CONTROL_FUSE_OPP1G_VDD1   * &2380
CONTROL_FUSE_OPP50_VDD2   * &2398
CONTROL_FUSE_OPP100_VDD2  * &239C
CONTROL_FUSE_SR           * &23A0

; IRQs

SR1_IRQ  * 18
SR2_IRQ  * 19

; Fixed values from Linux sources
SR37x_ACCUMDATA     * &1F4 ; 5ms accumulator time window
SR37x_SENNAVGWEIGHT * 1
SR37x_SENPAVGWEIGHT * 1
SR37x_ERRWEIGHT     * 4
SR37x_ERRMAXLIMIT   * 2

; TPS65950 parameters
TPS_VP_ERROROFFSET      * 0
TPS_VP_VSTEPMIN         * 1
TPS_VP_VSTEPMAX         * 4
TPS_VP_VLIMITTO_TIMEOUT * 200
TPS_VP1_VLIMITTO_VDDMIN * &18
TPS_VP1_VLIMITTO_VDDMAX * &3C
TPS_VP2_VLIMITTO_VDDMIN * &18
TPS_VP2_VLIMITTO_VDDMAX * &30
TPS_VP_STEPSIZE         * 12500 ; uV
TPS_VP_SLEWRATE         * 4000 ; uV/uS

ABB_SETTLING_TIME       * 30 ; uS
ABB_FBB_VOLTAGE         * 54 ; 1.27V. Enable FBB for anything above this.

; OPP table format for the SmartReflex driver
                              ^  0
SR37x_OPPTbl_MHz              #  2 ; Max MHz value for this voltage
SR37x_OPPTbl_VDD              #  1 ; Required VDD value, in VDD1_VSEL format
SR37x_OPPTbl_CLKOUT_M2        #  1 ; Required DPLL1CLKOUT_M2 value
SR37x_OPPTbl_NVALUERECIPROCAL #  4 ; Required NVALUERECIPROCAL value
SR37x_OPPTbl_ERRCONFIG        #  3 ; Required SR ERRCONFIG value (bits 0-18)
SR37x_OPPTbl_ERRGAIN          #  1 ; Required VP ERRGAIN value
SR37x_OPPTbl_Size             #  0 ; Size of each entry

SR37x_OPPTbl_Format    *  0 ; Format number as returned by SR37x_Override

SR37x_OPPTbl_Max       *  6 ; Max number of entries we support

; Workspace
                   ^  0, a1
; Public bits
SR37xDevice       #  HALDevice_CPUClk_Size_0_2 ; support API 0.2
; Private bits
SR37xShutdown     #  4 ; Pointer to shutdown func. Must be at same offset as CPUClkShutdown!
SR37xWorkspace    #  4 ; HAL workspace pointer
SR37xNewSpeed     #  4 ; Re-entrancy flag. -1 if idle, desired table idx if in process of changing CPU speed. Allows SR37x_Get to finish changing the speed if it gets called in the middle of a change. (Note somewhat redundant since SR37x code currently avoids re-entrancy)
SR37xCurSpeed     #  4 ; Current table idx
SR37xOPPTblSize   #  4 ; Number of entries in table
SR37xOPPTbl       #  SR37x_OPPTbl_Size*SR37x_OPPTbl_Max ; OPP table
SR37x_DeviceSize  *  :INDEX: @@

SR37x_WorkspaceSize  * SR37x_DeviceSize

; Smartreflex driver workspace fits into CPUClk workspace
        ASSERT    SR37x_WorkspaceSize <= CPUClk_WorkspaceSize


        END
@


1.2
log
@Switch to default clock speed before reset/power off. Place EHCI PHY in reset too.
Detail:
  hdr/CPUClk, hdr/SR37x, s/Boot, s/CPUClk, s/SR37x - Modifed CPU clock drivers to allow the core speed & voltage to be reset to the power on defaults prior to reset/poweroff. This fixes an issue seen on Pandora where Linux will often fail to boot after RISC OS has been run, presumably due to VDD1 being too low for the initial clock speed Linux switches to.
  s/Boot - Place EHCI PHY in reset prior to reset/power off. May help with a reported issue of USB host being unreliable after RISC OS has been run (although reset/poweroff should reset the GPIO anyway)
Admin:
  Tested on Pandora & BB-xM


Version 0.82. Tagged as 'OMAP3-0_82'
@
text
@d87 1
a87 1
SR37xDevice       #  HALDevice_CPUClk_Size
@


1.1
log
@Add AM/DM37x SmartReflex driver
Detail:
  s/SR37x, hdr/SR37x - New files containing SmartReflex driver targeting AM/DM37x chips. Initialises SmartReflex for both VDD1 & VDD2, but currently only VDD1/DPLL1 settings can be adjusted at runtime (via CPUClk HAL device)
  Makefile - Add SR37x to object list
  hdr/CPUClk - Adjust OPPTbl_Max so CPUClk workspace size is >= SR37x workspace size (both drivers share their HAL workspace, since only one can be active at once)
  hdr/GPIO - Add TPS_GPPUPDCTR1 definition
  hdr/PRCM - Add SmartReflex related registers
  hdr/omap3530 - Add "control device status" register & extra AM/DM37x revision numbers
  s/CPUClk:
  - Modify CPUClk_PreInit to try initialising the SmartReflex driver.
  - Ensure SmartReflex is disabled in the TPS if using CPUClk driver.
  - Fix 'OPP60' typo in AMDM37x table.
  - Move DPLL adjustment code into its own function to allow it to be shared with SmartReflex driver.
  - Add a few ROUTs and ASSERTs for safety.
Admin:
  Both new & old CPUClk devices tested on BB-xM


Version 0.62. Tagged as 'OMAP3-0_62'
@
text
@d89 1
a102 1

@

