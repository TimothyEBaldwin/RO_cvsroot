head	1.33;
access;
symbols
	OMAP3-1_18:1.33
	OMAP3-1_17:1.32
	OMAP3-1_16:1.31
	OMAP3-1_15:1.31
	OMAP3-1_14:1.30
	SMP:1.30.0.2
	SMP_bp:1.30
	OMAP3-1_13:1.30
	OMAP3-1_12:1.30
	OMAP3-1_11:1.30
	OMAP3-1_10:1.30
	OMAP3-1_09:1.30
	OMAP3-1_08:1.30
	OMAP3-1_07:1.30
	OMAP3-1_06:1.30
	OMAP3-1_05:1.30
	OMAP3-1_04:1.30
	OMAP3-1_03:1.30
	OMAP3-1_02:1.30
	OMAP3-1_01:1.30
	OMAP3-1_00:1.30
	OMAP3-0_99:1.30
	OMAP3-0_98:1.30
	OMAP3-0_97:1.29
	OMAP3-0_96:1.29
	OMAP3-0_95:1.29
	OMAP3-0_94:1.29
	OMAP3-0_93:1.29
	OMAP3-0_92:1.29
	OMAP3-0_91:1.29
	OMAP3-0_90:1.29
	OMAP3-0_89:1.28
	OMAP3-0_88:1.28
	OMAP3-0_87:1.28
	OMAP3-0_86:1.27
	OMAP3-0_85:1.27
	OMAP3-0_84:1.27
	OMAP3-0_83:1.27
	OMAP3-0_82:1.26
	OMAP3-0_81:1.26
	OMAP3-0_80:1.25
	OMAP3-0_79:1.25
	OMAP3-0_78:1.25
	OMAP3-0_77:1.25
	OMAP3-0_76:1.25
	OMAP3-0_75:1.25
	OMAP3-0_74:1.25
	OMAP3-0_73:1.25
	OMAP3-0_72:1.25
	OMAP3-0_71:1.25
	OMAP3-0_70:1.25
	OMAP3-0_69:1.25
	OMAP3-0_68:1.25
	OMAP3-0_67:1.24
	OMAP3-0_66:1.24
	OMAP3-0_65:1.23
	OMAP3-0_64:1.23
	OMAP3-0_63:1.22
	OMAP3-0_62:1.22
	OMAP3-0_61:1.22
	OMAP3-0_60:1.21
	OMAP3-0_59:1.21
	OMAP3-0_58:1.21
	OMAP3-0_57:1.21
	OMAP3-0_56:1.21
	OMAP3-0_55:1.20
	OMAP3-0_54:1.20
	OMAP3-0_53:1.20
	OMAP3-0_52:1.20
	OMAP3-0_51:1.20
	OMAP3-0_50:1.20
	OMAP3-0_49:1.19
	OMAP3-0_48:1.19
	OMAP3-0_47:1.18
	OMAP3-0_46:1.18
	OMAP3-0_45:1.18
	OMAP3-0_44:1.18
	OMAP3-0_43:1.18
	OMAP3-0_42:1.17
	OMAP3-0_41:1.17
	OMAP3-0_40:1.16
	OMAP3-0_39:1.16
	OMAP3-0_38:1.16
	OMAP3-0_37:1.15
	OMAP3-0_36:1.15
	OMAP3-0_35:1.15
	OMAP3-0_34:1.15
	OMAP3-0_33:1.15
	OMAP3-0_32:1.15
	OMAP3-0_31:1.14
	OMAP3-0_30:1.14
	OMAP3-0_29:1.14
	OMAP3-0_28:1.14
	OMAP3-0_27:1.14
	OMAP3-0_26:1.14
	OMAP3-0_25:1.14
	OMAP3-0_24:1.14
	OMAP3-0_23:1.13
	OMAP3-0_22:1.12
	OMAP3-0_21:1.12
	OMAP3-0_20:1.12
	OMAP3-0_19:1.12
	OMAP3-0_18:1.11
	OMAP3-0_17:1.10
	OMAP3-0_16:1.10
	OMAP3-0_15:1.9
	OMAP3-0_14:1.9
	OMAP3-0_13:1.9
	OMAP3-0_12:1.9
	OMAP3-0_11:1.8
	OMAP3-0_10:1.7
	OMAP3-0_09:1.6
	OMAP3-0_08:1.6
	OMAP3-0_07:1.5
	OMAP3-0_06:1.5
	OMAP3-0_05:1.4
	OMAP3-0_04:1.4
	OMAP3-0_03:1.3
	OMAP3-0_02:1.2
	OMAP3-0_01:1.1;
locks; strict;
comment	@# @;


1.33
date	2018.04.01.21.23.01;	author rsprowson;	state Exp;
branches;
next	1.32;
commitid	0gqrh5c5mI0fFMwA;

1.32
date	2018.03.31.20.43.14;	author rool;	state Exp;
branches;
next	1.31;
commitid	p8kCKDDwBCzBtEwA;

1.31
date	2017.09.09.10.45.41;	author rool;	state Exp;
branches;
next	1.30;
commitid	7FzPWEY96oS9Hv6A;

1.30
date	2014.10.25.17.35.37;	author rsprowson;	state Exp;
branches;
next	1.29;
commitid	f6nsEIQ8JetkIBVx;

1.29
date	2013.11.01.18.52.54;	author rsprowson;	state Exp;
branches;
next	1.28;
commitid	exT1lzL3WDXiEBbx;

1.28
date	2013.08.15.13.39.55;	author rsprowson;	state Exp;
branches;
next	1.27;
commitid	lNtJbslyvHNmqy1x;

1.27
date	2012.11.21.23.36.55;	author jlee;	state Exp;
branches;
next	1.26;
commitid	FEuG5wzxvhvijitw;

1.26
date	2012.09.30.16.36.40;	author jlee;	state Exp;
branches;
next	1.25;
commitid	mVbXtrwyVtNKEzmw;

1.25
date	2012.07.02.17.50.19;	author bavison;	state Exp;
branches;
next	1.24;
commitid	Ukt7tNPf83vnX0bw;

1.24
date	2012.06.07.23.15.15;	author bavison;	state Exp;
branches;
next	1.23;
commitid	AkxjZwpvyQFFyP7w;

1.23
date	2012.06.04.23.45.07;	author jlee;	state Exp;
branches;
next	1.22;
commitid	m70jrk0mZm9UOr7w;

1.22
date	2012.03.25.11.49.03;	author rsprowson;	state Exp;
branches;
next	1.21;
commitid	c99VvmwezV2J8gYv;

1.21
date	2012.01.07.21.22.21;	author rsprowson;	state Exp;
branches;
next	1.20;
commitid	ZJYg3muaiybPOhOv;

1.20
date	2011.11.06.13.51.39;	author jlee;	state Exp;
branches;
next	1.19;
commitid	xDHSfy5FwWIFjhGv;

1.19
date	2011.07.31.18.56.17;	author jlee;	state Exp;
branches;
next	1.18;
commitid	trdyxuPEj4eC9Itv;

1.18
date	2011.05.22.19.36.02;	author jlee;	state Exp;
branches;
next	1.17;
commitid	VEzaKWvEB8QKCIkv;

1.17
date	2011.03.19.18.43.36;	author jlee;	state Exp;
branches;
next	1.16;
commitid	luFqb0o1sKujoucv;

1.16
date	2011.01.23.22.48.18;	author jlee;	state Exp;
branches;
next	1.15;

1.15
date	2010.09.14.20.58.47;	author jlee;	state Exp;
branches;
next	1.14;

1.14
date	2010.03.20.01.07.06;	author jlee;	state Exp;
branches;
next	1.13;

1.13
date	2010.02.28.19.47.12;	author jlee;	state Exp;
branches;
next	1.12;

1.12
date	2010.01.24.02.49.29;	author jlee;	state Exp;
branches;
next	1.11;

1.11
date	2010.01.16.04.09.43;	author jlee;	state Exp;
branches;
next	1.10;

1.10
date	2009.11.28.22.30.56;	author jlee;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.17.00.16.31;	author jlee;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.02.19.37.04;	author jlee;	state Exp;
branches;
next	1.7;

1.7
date	2009.05.13.00.12.49;	author jlee;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.09.19.04.57;	author jlee;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.22.22.03.39;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2009.04.08.22.25.09;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.06.23.35.40;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.21.18.51.46;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.01.13.58.04;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.33
log
@Add GPIO device implementation
Update to API 1.0, and corresponding set of register wide accessor functions.
The tables of permitted pins come from staring at the schematics for any connectors, minus those that are "owned" by the OS.
In the absence of any Touchbook schematics, no GPIO device will be registered for this (given the physical size of the Touchbook it's unlikely there are any usefully accessible headers anyway).

Tested on a BB-xM, toggling the two user LEDs and scanning the 'USER' push button.

Version 1.18. Tagged as 'OMAP3-1_18'
@
text
@; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     hdr.SDMA
        GET     hdr.Video
        GET     hdr.Audio
        GET     hdr.I2C
        GET     hdr.board
        GET     hdr.NIC
        GET     hdr.CPUClk
        GET     Hdr:GPIODevice
        GET     Hdr:SDHCIDevice
        GET     Hdr:BMUDevice
        GET     Hdr:RTCDevice

sb              RN      9

        MACRO
        CallOS  $entry, $tailcall
        ASSERT  $entry <= HighestOSEntry
 [ "$tailcall"=""
        MOV     lr, pc
 |
   [ "$tailcall"<>"tailcall"
        ! 0, "Unrecognised parameter to CallOS"
   ]
 ]
        LDR     pc, OSentries + 4*$entry
        MEND

; Per-SDHCI workspace

                ^       0
SDHCIDevice     #       HALDevice_SDHCISize          ; see Hdr:SDHCIDevice
SDHCISB         #       4                            ; pointer to HAL workspace for HAL calls
SDHCISlotInfo   #       HALDeviceSDHCI_SlotInfo_Size ; each of our controllers has just the 1 slot
SDHCISize       *       :INDEX:@@

MaxSDControllers *      3

; Per-BMU workspace

                ^       0
BMUDevice       #       HALDevice_BMU_Size           ; see Hdr:BMUDevice
BMUWS           #       4                            ; pointer to HAL workspace for HAL calls
BMUParams       #       4                            ; Per-device params
BMUSize         *       :INDEX:@@                

; Per-RTC workspace

                ^       0
RTCDevice       #       HALDevice_RTC_Size           ; see Hdr:RTCDevice
RTCDeviceHAL_SB #       4                            ; pointer to HAL workspace for HAL calls
RTCSize         *       :INDEX:@@

                ^       0,sb
BoardConfig     #       BoardConfig_Size ; NOTE: Almost all code assumes the board config is at the start. You have been warned!
OSheader        #       4
OSentries       #       4*(HighestOSEntry+1)
L3_Log          #       4 ; L3 base logical address
L4_Core_Log     #       4 ; L4 Core/Wakeup base logical address
L4_Wakeup_Log   #       4 ; L4 Wakeup base logical address
L4_Per_Log      #       4 ; L4 Per base logical address
MPU_INTC_Log    #       4 ; MPU_INTC logical address
Timers_Log      #       4 ; Timers logical base address
L4_ClockMan_Log #       4 ; L4_ClockMan base address
L4_PowerMan_Log #       4 ; L4_PowerMan base address
L4_32KTIMER_Log #       4 ; L4_32KTIMER base address
L4_USBTLL_Log   #       4 ; L4_USBTLL base address
L4_USB_Host_Log #       4 ; L4_USB_Host base address
L4_USB_OTG_Log  #       4 ; L4_USB_OTG base address
GPMC_Regs_Log   #       4 ; GPMC_Regs base address
sys_clk         #       4 ; System clock speed in Hz
Timer_DelayMul  #       4 ; sys_clk/100KHz
HALInitialised  #       4 ; Flag for whether HAL_Init is done yet
NVMemoryFound   #       4 ; Size of EEPROM detected (may be 0)
L4_Display_Log  #       4 ; L4_Display base address
L4_sDMA_Log     #       4 ; L4_sDMA logical address
IntSRAM_Log     #       4 ; SRAM logical address

L4_GPIO_Table   #       0 ; Lookup table for GPIO addresses
L4_GPIO1_Log    #       4 ; L4_GPIO1 base address
L4_GPIO2_Log    #       4 ; L4_GPIO2 base address
L4_GPIO3_Log    #       4 ; L4_GPIO3 base address
L4_GPIO4_Log    #       4 ; L4_GPIO4 base address
L4_GPIO5_Log    #       4 ; L4_GPIO5 base address
L4_GPIO6_Log    #       4 ; L4_GPIO6 base address

I2C_Table       #       0 ; Table of I2C HW ptrs & transfer states
I2C1Block       #       I2CBlockSize
I2C2Block       #       I2CBlockSize
I2C3Block       #       I2CBlockSize

 [ DebugInterrupts
LastInterrupt_IRQ #     4 ; Last IRQ, -1 if cleared
LastInterrupt_FIQ #     4 ; Last FIQ, -1 if cleared
  [ ExtraDebugInterrupts
ExtraDebugIRQEnabled #  4 ; Nonzero if extra debugging enabled
  ]
 ]

UARTFCRSoftCopy #       4
NCNBWorkspace   #       4 ; Base of ncnb workspace
NCNBAllocNext   #       4 ; next free address in ncnb workspace

DMAPktSz_Audio  #       4 ; DMA packet size to use for audio transfers (McBSP2 TX)
KbdMatrixScan   #       4 ; Scan results for boot-time keyboard matrix scanning
KbdMatrixTime   #       4 ; Start time of boot-time keyboard matrix scanning

SDMAWS          #       SDMA_WorkspaceSize

VideoDevice     #       Video_DeviceSize
VideoBoardConfig #      VideoBoardConfig_Size

AudioWS         #       Audio_WorkspaceSize
NICWS           #       NIC_DeviceSize
CPUClkWS        #       CPUClk_WorkspaceSize
GPIOWS          #       6 * (HALDevice_GPIO_Size_1_0 + (2*4))
NVRAMWS         #       HALDeviceSize
RTCWS           #       RTCSize

SDIOWS          #       SDHCISize * MaxSDControllers
BMUWS1          #       BMUSize
BMUWS2          #       BMUSize

                #       (((:INDEX:@@)+15):AND::NOT:15)-(:INDEX:@@)

HAL_WsSize      *       :INDEX:@@
                    
        END
@


1.32
log
@Comment and workspace tidy up
Detail:
  SDIO.s comment correction
  hdr/StaticWS removed unused USBAllocArea
Admin:
  From similar change in OMAP4-0_57.

Version 1.17. Tagged as 'OMAP3-1_17'
@
text
@d130 1
a130 1
GPIOWS          #       HALDevice_GPIO_Size
@


1.31
log
@Participate in keyboard scan dependencies
Detail:
  Replace keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Delete unused workspace.
  Don't link against HAL USB library.
Admin:
  Submission for USB bounty.

Version 1.15. Tagged as 'OMAP3-1_15'
@
text
@a139 4
USBAllocAreaSize * 16*1024 ; With an ordinary setup, about half of this memory gets used. About 3K goes to some big allocs (looks like the bus structs)

USBAllocArea    #       USBAllocAreaSize

@


1.30
log
@Don't bother providing even dummy implementations of USB port and overcurrent functions
As the flag bit in HAL_USBControllerInfo isn't set, no need to provide them.
Use symbols from Hdr:HALEntries when building the USB info.
No need for AASMFLAGS in the makefile.
Built, but not tested.

Version 0.98. Tagged as 'OMAP3-0_98'
@
text
@a22 1
        GET     <Lib$$Dir>.USB.hdr.usbhal
a121 2
USBHAL_WS       #       USBHAL_WS_Size ; USB workspace for keyboard scan

@


1.29
log
@Refactor IIC calls to use RISCOS_IICOpV
- Comments and symbolic names for RTC register bits copied over from OMAP4 sources.
- Delete dead function ReadTimeForNVRAM.
- Use RTCFormatFlags_BCD_NeedsYearHelp flag for year 2070 compatibility.
- Moved CallOS macro into a header.
Tested on a Beagleboard xM, clock still worked over a power cycle.

Version 0.90. Tagged as 'OMAP3-0_90'
@
text
@d23 1
a23 1
        GET     <Lib$Dir>.USB.hdr.usbhal
@


1.28
log
@Create placeholder NVMemory HAL device when EEPROM detected
The HAL device created is merely a dummy one, but presents any EEPROM detected for completeness of stuff the HAL knows about.

Version 0.87. Tagged as 'OMAP3-0_87'
@
text
@d27 1
d31 13
d62 7
d135 1
@


1.27
log
@Add BMU support for Pandora & TouchBook
Detail:
  s/BMU, Makefile - BMU HAL device implementations for the Pandora & TouchBook
  hdr/StaticWS - Reserve workspace for the BMU devices
  s/Boot - Add the BMU devices to HAL device initialisation. Move Enable_main_battery_charging into s/BMU.
Admin:
  Tested in ROM on BB-xM, Pandora, TouchBook


Version 0.83. Tagged as 'OMAP3-0_83'
@
text
@d113 1
@


1.26
log
@Implement Pandora keyboard scan & audio support
Detail:
  s/PAudio, Makefile - Added Pandora audio driver. The Pandora uses a different audio setup to all the other OMAP boards, so to keep things simple the implementation is kept in its own file seperate from the main one.
  s/KbdMatrix, hdr/StaticWS - Implemented Pandora boot-time keyboard scan. This uses the keyboard matrix & GPIO keys instead of the USB libraries.
  s/Boot - Moved call to Audio_Init into the per-board HAL_InitDevices code so that Pandora can call PandoraAudio_Init instead.
  s/SDIO - For MMC1, avoid touching VSIM if the bus width is only 4 bits (i.e. on Pandora). On Pandora VSIM is used for the audio DAC instead.
Admin:
  Tested on Pandora


Version 0.81. Tagged as 'OMAP3-0_81'
@
text
@d26 1
d40 8
d115 2
@


1.25
log
@  Added support for the SD slots and WiFi SDIO chip on the Pandora console
Detail:
  Information gathered from the "Pandora Hacker Guide" is a little sketchy
  so try with caution. Uniquely, the Pandora uses all 3 SD controllers on the
  OMAP3.
Admin:
  Checked that still functions on a beagleboard, but untested on Pandora!

Version 0.68. Tagged as 'OMAP3-0_68'
@
text
@d90 2
@


1.24
log
@  Added HAL devices for main board SDHCI controllers
Detail:
  * For Beagleboard and Beagleboard-xM, supports MMC1, and is tested
  * For DevKit8000, supports MMC1 (but untested)
  * For IGEPv2, supports MMC1 and MMC2 (but untested)
  * No support for controllers on other boards at the present time
Admin:
  Requires headers exported from SDIODriver

Version 0.66. Tagged as 'OMAP3-0_66'
@
text
@d37 1
a37 1
MaxSDControllers *      2 ; I don't think any platform uses all 3 controllers?
@


1.23
log
@Add HAL_UARTDefault implementation. Delete old HAL video code. Add some SmartReflex tweaks.
Detail:
  hdr/board, s/board, s/Boot, s/UART - Added HAL_UARTDefault implementation, to allow OS_SerialOp to be used
  hdr/StaticWS, hdr/omap3530, s/Boot, s/Interrupts, s/Video - Removed old HAL video code. The OMAPVideo module is a much better video driver.
  s/SR37x - Add some SmartReflex tweaks which we can try if we run into any stability issues with the current code.
Admin:
  Tested on rev A2 BB-xM


Version 0.64. Tagged as 'OMAP3-0_64'
@
text
@d25 1
d29 10
d103 2
@


1.22
log
@Line some things up.
To help OMAP4 tracking changes a number of the changes were purely cosmetic lining up differences, this change is where OMAP3 wasn't on a conventional column layout.

Version 0.61. Tagged as 'OMAP3-0_61'
@
text
@a49 10
 [ HALDoesVideo
video_palette   #       4 ; Logical addr of palette regs
cursor_image    #       4 ; Logical addr of hardware cursor image
cursor_palette  #       4*4 ; 4 palette entries for hardware cursor
cursor_update   #       4 ; Cursor update flag (set when palette is changed)
pixel_rate      #       4 ; Last pixel rate we programmed DISPC with
video_gobits    #       4 ; Which go bits need setting in DISPC_CONTROL
video_maxporch  #       4 ; Max H/V F/B porch values supported by OMAP revision
video_maxsync   #       4 ; Max H/V sync values supported by OMAP revision
 ]
a83 1
 [ :LNOT: HALDoesVideo
a85 1
 ]
@


1.21
log
@Prep for SDFS and support for hardware CMOS adapter board.
To avoid conflicting use of the SDIO controller by higher level filing system (and the need for a HAL to somehow ask for a disc to be reinserted) this HAL onwards supports hardware CMOS attached via the JTAG connector.
On power up the presence and size of EEPROM is detected (sizes from 256 to 2048 bytes are understood corresponding to 24AA02 to 24AA16 family of parts).
If no EEPROM is found the HAL falls back to permitting a CMOS file to be loaded off the SD card, but crucially this is done by uboot before FileCore starts.
If no EEPROM is found, or the CMOS file looks suspicious, some fake CMOS is made and the kernel defaults used.
The "ProbeEESize" switch enables size probing, otherwise 256 bytes is assumed.
The "TryLoadedCMOS" switch enables use of a CMOS file from the SD card, if that's off and nothing is found the HAL declares that there is no CMOS at all!
The respective boot script needs the line
  fatload mmc 0:1 0x4020F000 cmos
adding to it, though the filename 'cmos' is arbitrary and only used as a suggestion.

Version 0.56. Tagged as 'OMAP3-0_56'
@
text
@d112 1
a112 1
                END
@


1.20
log
@Add Dave Higton's CMOS save code
Detail:
  Makefile - fixed warning about StdRules being included twice (via CModule)
  c/NVMem, c/fat, h/NVMem, h/common, h/fat, hdr/StaticWS, s/NVMemory, s/RTC - Added Dave Higton's code to create/update the 'CMOS' file on NVRAM writes
Admin:
  Tested on rev A2 BB-xM


Version 0.50. Tagged as 'OMAP3-0_50'
@
text
@d48 1
a103 65
; Define the NVRAM cache size
NVRAMCacheSize   *  2048

NVMem_workspace  *  @@
; The following table MUST be in the same order as the
; offsets table in NVMemory
PRCM_address_table   *  @@
PRCM_CM_ICLKEN1_CORE #  4
PRCM_CM_FCLKEN1_CORE #  4
PRCM_address_table_length * (@@ - PRCM_address_table) / 4
; The following table MUST be in the same order as the
; offsets table in NVMemory
MMCHS1_address_table *  @@
MMCHS1_SYSCONFIG #  4
MMCHS1_SYSSTATUS #  4
MMCHS1_CSRE      #  4
MMCHS1_SYSTEST   #  4
MMCHS1_CON       #  4
MMCHS1_PWCNT     #  4
MMCHS1_BLK       #  4
MMCHS1_ARG       #  4
MMCHS1_CMD       #  4
MMCHS1_RSP10     #  4
MMCHS1_RSP32     #  4
MMCHS1_RSP54     #  4
MMCHS1_RSP76     #  4
MMCHS1_DATA      #  4
MMCHS1_PSTATE    #  4
MMCHS1_HCTL      #  4
MMCHS1_SYSCTL    #  4
MMCHS1_STAT      #  4
MMCHS1_IE        #  4
MMCHS1_ISE       #  4
MMCHS1_AC12      #  4
MMCHS1_CAPA      #  4
MMCHS1_CUR_CAPA  #  4
MMCHS1_REV       #  4
MMCHS1_address_table_length * (@@ - MMCHS1_address_table) / 4
CardType         #  4 ; Replaces bHC
volume_base      #  4 ; The number of the first block of the first partition
BPB_BytesPerSec  #  4
BPB_SecPerClus   #  4
bytespercluster  #  4
BPB_RsvdSecCnt   #  4
offset_to_FAT1   #  4
BPB_NumFATs      #  4
BPB_RootEntCnt   #  4
BPB_TotSec16     #  4
RootDirSectors   #  4
BPB_FATSz16      #  4
BPB_FATSz32      #  4
FATSz            #  4
offset_to_root_dir #  4
BPB_TotSec32     #  4
TotSec           #  4
DataSec          #  4
CountOfClusters  #  4
cluster0base     #  4
BPB_RootClus     #  4
bytesperFATentry #  4
FirstDataSector  #  4
FATType          #  4
BootDollarOSVersion #  4
NVRAMCache       #  NVRAMCacheSize

d111 1
a111 2


@


1.19
log
@Add new support for the new GPIO HAL device
Detail:
  hdr/board - Add information about determining the IGEP board revision
  hdr/StaticWS - Add workspace for storing the GPIO HAL device
  s/board - Update BeagleBoard entry to have a custom HAL device init func
  s/Boot - Fix HAL_Init to not configure GPIOs 171-173 if not running on a beagleboard. Update HAL_InitDevices to preserve the right registers and initialise the GPIO devices where appropriate.
  s/GPIO - Added GPIO_InitDevice function to do the actual initialisation
Admin:
  Tested on rev A2 BB-xM


Version 0.48. Tagged as 'OMAP3-0_48'
@
text
@d82 1
a82 1
                
d165 1
@


1.18
log
@Update OMAP3 HAL to support keyboard scan on boot, plus other changes
Detail:
  Makefile, s/KdbScan, hdr/StaticWS - Code to handle keyboard scanning, via the new HAL build of the USB drivers.
  s/Stubs - Removed old stub keyboard scan routines
  s/CPUClk - ADR -> ADRL to cope with new workspace layout
  s/Boot, s/Top, hdr/Post - Modified to use new HALSize variable for determining the HAL size. Trimmed dead code/definitions.
  s/Boot - FIQDebug code now copes with the different USER button GPIO used on the BB-xM
  s/board - Increased max pixel rate from 86.5MHz to 100MHz. This allows a wider range of screen modes to be used, although it is beyond the spec of the video controller, and not all boards will be able to reach 100MHz. This should match the value used in the initial ARMini units.
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Needs latest USB drivers, Kernel source, BuildSys & Env (not all of which have been checked in yet)


Version 0.43. Tagged as 'OMAP3-0_43'
@
text
@d24 1
d101 1
@


1.17
log
@Add CPUClk HAL device implementation
Detail:
  Makefile, s/CPUClk, hdr/CPUClk, s/Boot, hdr/StaticWS - Provide an implementation of the new HALDevice_CPUClk HAL device. Allows OMAP35x and DM37x CPU's to be set to any of the standard OPPs as listed in the datasheets. Doesn't yet support 1GHz on DM37x.
  hdr/NIC, hdr/PRCM, hdr/omap3530, s/TPS - Misc additions/tweaks/fixes.
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Requires latest PortableHAL & Kernel


Version 0.41. Tagged as 'OMAP3-0_41'
@
text
@d23 1
d88 2
d165 5
a169 3
;                #       (((:INDEX:@@)+15):AND::NOT:15)-(:INDEX:@@)
;
;AllocArea       #       64*1024
@


1.16
log
@Add Dave Higton's SD/MMC & CMOS code
Detail:
  c/NVMem, c/fat, h/NVMem, h/common, h/fat - C code for reading a 'CMOS' file off the SD card on boot, for use as a CMOS RAM image
  c/CLib - Added extra functions needed by the SD/MMC driver
  s/NVMemory - Implementation of the HAL NVRAM API, for reading/writing the loaded CMOS file. The read/write functions handle RISC OS's CMOS address mangling, so that CMOS files saved by *SaveCMOS can be used as-is.
  hdr/StaticWS - Updated with workspace needed by the new code
  s/Boot - Initialise the CMOS cache on boot
  s/Stubs - Removed the stub NVRAM function
  Makefile - Added the new files
Admin:
  Tested on rev A2 BB-xM.


Version 0.38. Tagged as 'OMAP3-0_38'
@
text
@d22 1
d96 1
@


1.15
log
@BeagleBoard-xM, TouchBook fixes
Detail:
  s/board, hdr/board, hdr/omap3530, hdr/UART - Add support for 4th UART available on AM/DM37x (i.e. BeagleBoard-xM)
  hdr/omap3530 - Add details of CONTROL_IDCODE register & known hawkeye/revision numbers for OMAP type/revision detection
  s/Boot, s/GPIO, hdr/GPIO, s/I2C, hdr/StaticWS - Allow TPS LED drivers to be used as (output-only) GPIOs. Add new polled I/O I2C function, and appropriate logic to make GPIO code use it instead of RISCOS_IICOpV if RISC OS hasn't finished initialising yet. Add code to initialise some extra BB/TB GPIOs on boot.
  s/Timers, hdr/Timers - Stop RISC OS from using GPTIMER9, because it's used to drive the screen backlight on the TouchBook
  s/Video - Use appropriate porch/sync limits on non-OMAP35x
  s/PRCM - Don't mess with the system clock divider when calculating system clock speed (AM/DM37x fix)
Admin:
  Tested on rev C2 beagleboard, rev A2 BB-xM (indirectly), rev C1 TouchBook


Version 0.32. Tagged as 'OMAP3-0_32'
@
text
@d96 64
@


1.14
log
@Add basic GPMC setup code and NIC HAL devices to OMAP HAL
Detail:
  s/GPMC, hdr/GPMC, hdr/StaticWS - basic code to reset the GPMC and configure chip selects
  s/NIC, hdr/NIC, hdr/StaticWS - code to expose any onboard NICs (SMSC9221, DM9000) to RISC OS as simple HAL devices.
  Makefile - added GPMC & NIC source files
  s/board, hdr/board - Expanded board config struct to include a pointer to extra code to call at the end of HAL_InitDevices, to allow board-specific devices to be initialised
  s/boot - Extra HAL_InitDevices code to set up the NICs on the IGEP/DevKit
  s/GPIO, hdr/GPIO - Improved functionality to allow GPIO IRQs to be used
  s/SDMA, s/Video - Tweaked the HAL device descriptors to indicate that the devices are on the L3 interconnect
Admin:
  Tested on rev C2 beagleboard. IGEP/DevKit entry points booted OK, but no attempts were made to look for or interact with the new HAL devices!


Version 0.24. Tagged as 'OMAP3-0_24'
@
text
@d44 1
@


1.13
log
@Update OMAP3 HAL to support new OMAPVideo module, plus other minor changes
Detail:
  hdr/StaticWS, hdr/Video, hdr/board, hdr/omap3530, s/Boot, s/Video, s/board - Add new HALDoesVideo switch to control whether the HAL provides the video driver or whether a HAL device is used to expose the video hardware to the OMAPVideo module. Switch defaults to the 'off' state, i.e. OMAPVideo provides the video driver. Also updated the board config struct to contain more detailed information about the video capabilities of each board.
  s/Audio - fix the FIFO underflow/overflow IRQ handler to disable the IRQ after the underflow/overflow has been detection. This prevents the OS from (potentially) getting stuck in a loop servicing the interrupt and never reaching the state where it can shut down & re-initialise the audio to fix the error properly.
  s/Debug - add DebugCallstack function that disables IRQs/FIQs and dumps the stack contents over the serial port
Admin:
  Tested on rev C2 beagleboard.


Version 0.23. Tagged as 'OMAP3-0_23'
@
text
@d21 1
d41 1
d93 1
@


1.12
log
@Update OMAP HAL to support different board configs, plus use new YearLOIsGood flag to ensure correct RTC handling, plus other misc tidying
Detail:
  The OMAP HAL now has multiple entry points, one per board config. See Top.s/board.s for more info.
  audio.s - Moved APLL_CTL value to board config
  board.s - New file to list all the settings for the different board configs
  boot.s - Change HAL_Init to deal with the new board config stuff
  debug.s - Debug UART now specified in board config
  GPIO.s - A few utility functions for handling OMAP/TPS GPIO pins
  I2C.s - Update to use new board config struct
  RAM.s - Disable the beagleboard-specific RAM init code. Instead we'll just rely on u-boot to initialise all our RAM for us.
  RTC.s - Get rid of the magic numbers, and use the YearLOIsGood flag to indicate to RISC OS that YearLO is 2-digit BCD
  Top.s - Got rid of old debug code and rewrote initial flow to handle detecting & storing the board config
  UART.s - Update to use board config struct, support multiple UARTs
  USB.s - Get EHCI PHY power GPIO from board config
  Video.s - Get DVI framer power GPIO and max pixel rate from board config. Add 'PassiveVideo' option, to build a driver that doesn't alter the video output settings - should hopefully result in a usable display on Touch Book, etc.
  board.hdr - Definition of board config table struct
  GPIO.hdr - Add lots of macros for handling OMAP GPIO pins, new constants for OMAP/TPS GPIO
  I2C.hdr - Added I2C transfer block struct, HAL I2C API transfer states (both moved here from other source files)
  omap3530.hdr - Move/remove some unwanted constants, disable DebugChar for now
  StaticWS.hdr - Move I2C transfer block struct to I2C.hdr, add board config struct to HAL workspace, get rid of unused 64K AllocArea
  Timers.hdr - Tidy up constants a bit
  UART.hdr - Add UARTCLK (moved from StaticWS.hdr), UART IRQ #'s
  Makefile - add GPIO.s
Admin:
  Tested on rev C2 beagleboard. Board configs for other board types may be inaccurate in a couple of places.


Version 0.19. Tagged as 'OMAP3-0_19'
@
text
@d17 1
a17 1
        GET     hdr:VideoDevice
d43 1
d52 1
d85 4
a88 1
VideoDevice     #       HALDevice_VDU_Size
@


1.11
log
@Add sound support to OMAP3 HAL, plus other changes
Detail:
  hdr/Audio, s/Audio, Makefile, hdr/StaticWS, s/Boot - Add sound support to OMAP3 HAL. Should work with a TPS65950 connected to I2C1/McBSP2, as per beagleboard.
  s/TPS, s/RTC - Moved TPSRead, TPSWrite functions out of s/RTC and into their own file
  hdr/SDMA, s/SDMA - Add support for packet-based transfer (for audio), improve debug code, remove TestRAMToRAM test code
  s/I2C - Update to handle spurious RDR interrupts as mentioned in OMAP3 errata
  s/Video - Enable support for the larger porch & sync timing registers found in OMAP3 ES3.1 and above
Admin:
  Tested on rev C2 beagleboard


Version 0.18. Tagged as 'OMAP3-0_18'
@
text
@d19 2
a23 10
; I2C transfer block/hardware info

                ^       0
I2C_HW          #       4 ; Address of I2C hardware regs
I2C_XStart      #       4 ; iic_transfer array ptr (null for idle channel)
I2C_XEnd        #       4 ; array end ptr (inclusive)
I2C_XCurrent    #       4 ; Current iic_transfer ptr
I2C_XBytes      #       4 ; Bytes transferred in stage so far
I2CBlockSize    #       0

d25 1
a34 1
L4_UART3_Log    #       4 ; L4 UART3 logical address
d52 1
d87 3
a89 3
                #       (((:INDEX:@@)+15):AND::NOT:15)-(:INDEX:@@)

AllocArea       #       64*1024
@


1.10
log
@OMAP3 DMA support, video device, debugging improvements
Detail:
  Boot.s - Make FIQDebug work again
  Boot.s - Add support for DMA & video devices
  Interrupts.s, hdr/omap3530 - Add 'ExtraDebugInterrupts' option
  hdr/SDMA, SDMA.s, Makefile - DMA code which presents itself to RISC OS as a set of single-buffered, interrupt-driven DMA channels.
  hdr/StaticWS - Add extra DMA, video & debug entries to workspace
  Interrupts.s - Add 'DebugDisablePrevious' debug option for more flexibility in tracking down noncleared IRQs with ExtraDebugInterrupts
  RAM.s - Use DMA to clear RAM on boot. RAM clear now takes less than 1 second on a rev C board, whereas before it used to take several.
  Video.s - Add simple HAL device to expose information needed by upcoming RISC OS module based video driver.
Admin:
  Tested on rev C2 beagleboard.


Version 0.16. Tagged as 'OMAP3-0_16'
@
text
@d18 1
d86 2
d92 2
a99 7
                ^       0
NCNB_AllocArea  #       12*1024
NCNB_MUArea     #        4*1024
NCNB_MUQueue    #       16*1024

IOST_COMBOMASK  * 7
IOST_37C665     * 3
@


1.9
log
@Add I2C support to OMAP3 HAL. Fix FIQ handling. Improve debugging code.
Detail:
  Makefile, s/Boot, s/I2C, hdr/I2C, hdr/StaticWS - Adds I2C support to the OMAP3 HAL, via both HAL_IIC* and HAL_Video_IICOp.
  s/Interrupts - Fix bug causing incorrect clearing of FIQs
  s/Debug, s/Boot, hdr/omap3530 - Improve debugging code, and add simple FIQ debugger that outputs the PC to the serial port when the beagleboard USER button is pressed
  s/Stubs - Remove old stub functions
Admin:
  Tested on rev C2 beagleboard


Version 0.12. Tagged as 'OMAP3-0_12'
@
text
@d15 3
d58 1
d76 3
d85 4
@


1.8
log
@Update OMAP3 HAL to expose USB OTG controller via HAL_USBControllerInfo
Detail:
  hdr/StaticWS, s/Boot - Store logical address of OTG controller
  hdr/USB, s/USB - Expose OTG controller by HAL_USBControllerInfo API
Admin:
  Tested on Rev C2 beagleboard


Version 0.11. Tagged as 'OMAP3-0_11'
@
text
@d18 9
d64 5
@


1.7
log
@OMAP3 HAL video tweaks & improvements
Detail:
  hdr/StaticWS - Add entries for max porch & sync values, in anticipation of future OMAP revisions increasing the limits from 8/6 bits to 12/8 bits.
  hdr/omap3530 - Add entry for CONTROL_IDCODE register for reading silicon revision
  s/Video - Increase max pixel rate from 65MHz to 75MHz (86.5MHz seems unstable). Add support for different max porch/sync values depending on hardware revision (currently disabled). Make mode change code more robust to try and fix corruption seen when changing mode too many times. Improve HAL_Video_VetMode to check for (HFP+HSW+HBP)*PCD > 8 limitation. Add a bit more debug code.
Admin:
  Tested on rev C2 beagleboard.


Version 0.10. Tagged as 'OMAP3-0_10'
@
text
@d34 1
@


1.6
log
@OMAP3 HAL USB (EHCI) support, interrupt handling fixes
Detail:
  Makefile - added USB to objects list
  s/Boot, s/USB, hdr/StaticWS, hdr/USB - USB EHCI code
  s/Debug, s/Stubs, s/Timers, s/Top, s/UART, s/Video - Debugging tweaks and header dependency fixes
  s/Interrupts, hdr/omap3530 - Interrupt fixes & debugging code
  hdr/PRCM - typo fix
Admin:
  Tested on rev C2 beagleboard


Version 0.08. Tagged as 'OMAP3-0_08'
@
text
@d43 2
@


1.5
log
@OMAP3 HAL video support, safer RAM initialisation
Detail:
  Makefile - Enable compilation of s.video
  hdr/StaticWS - New workspace entries for video support
  hdr/Video - Typo fix, VENC registers
  s/Boot - Change initialisation order for video support
  s/Debug - Added DebugMemDump routine
  s/RAM - Added code to verify RAM config, to avoid crash if a board looks like a revision C but doesn't have the extra RAM
  s/Stubs - Disable stub video functions
  s/Video - Working video code, beginnings of TV-out code
Admin:
  Tested on rev C2 beagleboard. Video code may only function correctly if kernel is loaded via u-boot.


Version 0.06. Tagged as 'OMAP3-0_06'
@
text
@d32 2
d52 4
@


1.4
log
@OMAP3 HAL Beagleboard Rev C support, further video work.
Detail:
  s/Boot - Fixes for rev C beagleboard. Added GPIO code.
  s/Debug - DebugHALPrint, DebugHALPrintReg routines
  s/PRCM - PRCM_GetFreqSel added
  s/RAM - Fixes for rev C beagleboard. Sped up RAM clear by using more regs.
  s/Top - Fixes for rev C beagleboard
  s/Video - Video code potentially complete, but full of bugs and so still disabled.
  hdr/GPIO - Added GPIO registers
  hdr/omap3530 - Fixes for rev C beagleboard, GPIO, debug macros, QEMU support for new video code
  hdr/SDRC - Typo fix
  hdr/StaticWS - GPIO, pixel rate entries added
  hdr/Video - DSI PLL registers added
Admin:
  Tested on rev C beagleboard.


Version 0.04. Tagged as 'OMAP3-0_04'
@
text
@d40 1
@


1.3
log
@OMAP3 HAL fixes and further video work
Detail:
  s/Boot - Store some workspace vars used by video code. Disable some debug output.
  s/Interrupts - Update HAL_IRQClear to allow clearing of VSync IRQ
  s/Top - Fix CP15 flags
  s/Video - Implemented majority of video code needed by kernel. Correct code for calculating and programming pixel clocks still required, so code remains disabled by default.
  hdr/PRCM - Correct typo
  hdr/StaticWS - Add video-related workspace entries
  hdr/Video - Add constants for mouse pointer image buffer size
Admin:
  Tested under qemu-omap3 and rev B6 beagleboard.


Version 0.03. Tagged as 'OMAP3-0_03'
@
text
@d39 9
@


1.2
log
@  OMAP3 HAL fixes and updates to allow booting on real hardware.
Detail:
  Makefile - add s.PRCM to objects
  s/Boot - Call PRCM_SetClocks during HAL_Init. Added (disabled) debugging code.
  s/Interrupts - Updated HAL_IRQSource, HAL_FIQSource to query ARM interrupt state instead of relying on INTC alone to detect whether an interrupt is firing or not.
  s/PRCM - Code to measure system clock frequency, store it for HAL purposes, and notify the OMAP of the frequency in order to ensure correct operation.
  s/Timers - Use measured system clock frequency as the timer frequency instead of hard-coded value. Return correct values from HAL_TimerPeriod.
  s/Top - Added (disabled) debugging code. Updated ARM initialisation to use correct cache cleaning procedure.
  s/Video - Further minor work towards completing video driver.
  hdr/CoPro15ops - Deprecate ARM_flush_* macros
  hdr/PRCM - Add more register addresses
  hdr/StaticWS - Add entried for PowerMan & 32K timer logical addresses, system clock speed
  hdr/Timers - remove incorrect, hard-coded timer frequency
  hdr/omap3530 - remove unused FlashCheck global, add DebugChar macro
Admin:
  Tested with HALTester and the RISC OS kernel using qemu-omap3.
  Tested with HALTester on a rev. B6 beagleboard.


Version 0.02. Tagged as 'OMAP3-0_02'
@
text
@d34 6
d42 2
a43 2
NCNBWorkspace   #       4
;NCNBAllocNext  #       4
@


1.1
log
@Basic OMAP3 HAL
Detail:
  Performs startup procedure suitable for any location in ROM or RAM. UART, timer, counter, interrupt & debug functionality implemented. Video support incomplete and nonfunctional.
Admin:
  Tested with HALTester & RISC OS kernel under qemu-omap3


Version 0.01. Tagged as 'OMAP3-0_01'
@
text
@d30 4
@

