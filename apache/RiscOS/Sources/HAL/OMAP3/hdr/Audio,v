head	1.4;
access;
symbols
	OMAP3-1_18:1.4
	OMAP3-1_17:1.4
	OMAP3-1_16:1.4
	OMAP3-1_15:1.4
	OMAP3-1_14:1.4
	SMP:1.4.0.2
	SMP_bp:1.4
	OMAP3-1_13:1.4
	OMAP3-1_12:1.4
	OMAP3-1_11:1.4
	OMAP3-1_10:1.4
	OMAP3-1_09:1.4
	OMAP3-1_08:1.4
	OMAP3-1_07:1.4
	OMAP3-1_06:1.4
	OMAP3-1_05:1.4
	OMAP3-1_04:1.4
	OMAP3-1_03:1.4
	OMAP3-1_02:1.4
	OMAP3-1_01:1.4
	OMAP3-1_00:1.4
	OMAP3-0_99:1.4
	OMAP3-0_98:1.4
	OMAP3-0_97:1.4
	OMAP3-0_96:1.4
	OMAP3-0_95:1.4
	OMAP3-0_94:1.4
	OMAP3-0_93:1.4
	OMAP3-0_92:1.3
	OMAP3-0_91:1.3
	OMAP3-0_90:1.3
	OMAP3-0_89:1.3
	OMAP3-0_88:1.3
	OMAP3-0_87:1.3
	OMAP3-0_86:1.3
	OMAP3-0_85:1.3
	OMAP3-0_84:1.3
	OMAP3-0_83:1.3
	OMAP3-0_82:1.3
	OMAP3-0_81:1.3
	OMAP3-0_80:1.3
	OMAP3-0_79:1.3
	OMAP3-0_78:1.3
	OMAP3-0_77:1.3
	OMAP3-0_76:1.3
	OMAP3-0_75:1.3
	OMAP3-0_74:1.3
	OMAP3-0_73:1.3
	OMAP3-0_72:1.3
	OMAP3-0_71:1.3
	OMAP3-0_70:1.3
	OMAP3-0_69:1.3
	OMAP3-0_68:1.3
	OMAP3-0_67:1.3
	OMAP3-0_66:1.3
	OMAP3-0_65:1.3
	OMAP3-0_64:1.3
	OMAP3-0_63:1.3
	OMAP3-0_62:1.3
	OMAP3-0_61:1.3
	OMAP3-0_60:1.3
	OMAP3-0_59:1.3
	OMAP3-0_58:1.3
	OMAP3-0_57:1.2
	OMAP3-0_56:1.2
	OMAP3-0_55:1.2
	OMAP3-0_54:1.2
	OMAP3-0_53:1.2
	OMAP3-0_52:1.2
	OMAP3-0_51:1.2
	OMAP3-0_50:1.2
	OMAP3-0_49:1.2
	OMAP3-0_48:1.2
	OMAP3-0_47:1.2
	OMAP3-0_46:1.2
	OMAP3-0_45:1.2
	OMAP3-0_44:1.2
	OMAP3-0_43:1.2
	OMAP3-0_42:1.2
	OMAP3-0_41:1.2
	OMAP3-0_40:1.2
	OMAP3-0_39:1.2
	OMAP3-0_38:1.2
	OMAP3-0_37:1.2
	OMAP3-0_36:1.2
	OMAP3-0_35:1.2
	OMAP3-0_34:1.2
	OMAP3-0_33:1.2
	OMAP3-0_32:1.2
	OMAP3-0_31:1.2
	OMAP3-0_30:1.2
	OMAP3-0_29:1.2
	OMAP3-0_28:1.2
	OMAP3-0_27:1.2
	OMAP3-0_26:1.2
	OMAP3-0_25:1.2
	OMAP3-0_24:1.2
	OMAP3-0_23:1.2
	OMAP3-0_22:1.2
	OMAP3-0_21:1.2
	OMAP3-0_20:1.1
	OMAP3-0_19:1.1
	OMAP3-0_18:1.1;
locks; strict;
comment	@# @;


1.4
date	2013.12.17.21.31.53;	author jlee;	state Exp;
branches;
next	1.3;
commitid	pn559IPohBTa3xhx;

1.3
date	2012.01.21.19.39.55;	author jlee;	state Exp;
branches;
next	1.2;
commitid	Ax0JFkQAJsPPN4Qv;

1.2
date	2010.01.30.00.23.18;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.16.04.09.42;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fix left/right sound channels being swapped on Pandora
Detail:
  s/PAudio - Change the Pandora audio device over to API version 2 so that we can specify the stereo reverse flag
  s/Audio - Adjust workspace of the audio device used by the other machines so that it's still the same size as the Pandora one. Note that the stereo reverse flag isn't needed - although I can't remember how I'm doing it, it seems there's some TWL feature which I'm making use of on other machines to deal with the stereo reversal there, as the hardware doesn't use VIDC channel order by default
  hdr/Audio - Adjust size of the shared audio device workspace
Admin:
  Tested on Pandora & BB-xM


Version 0.93. Tagged as 'OMAP3-0_93'
@
text
@; Copyright 2010 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET   Hdr:AudioDevice
        GET   Hdr:MixerDevice

; McBSP registers - relative to L4_McBSP*

MCBSPLP_DRR           *    &00
MCBSPLP_DXR           *    &08
MCBSPLP_SPCR2         *    &10
MCBSPLP_SPCR1         *    &14
MCBSPLP_RCR2          *    &18
MCBSPLP_RCR1          *    &1C
MCBSPLP_XCR2          *    &20
MCBSPLP_XCR1          *    &24
MCBSPLP_SRGR2         *    &28
MCBSPLP_SRGR1         *    &2C
MCBSPLP_MCR2          *    &30
MCBSPLP_MCR1          *    &34
MCBSPLP_RCERA         *    &38
MCBSPLP_RCERB         *    &3C
MCBSPLP_XCERA         *    &40
MCBSPLP_XCERB         *    &44
MCBSPLP_PCR           *    &48
MCBSPLP_RCERC         *    &4C
MCBSPLP_RCERD         *    &50
MCBSPLP_XCERC         *    &54
MCBSPLP_XCERD         *    &58
MCBSPLP_RCERE         *    &5C
MCBSPLP_RCERF         *    &60
MCBSPLP_XCERE         *    &64
MCBSPLP_XCERF         *    &68
MCBSPLP_RCERG         *    &6C
MCBSPLP_RCERH         *    &70
MCBSPLP_XCERG         *    &74
MCBSPLP_XCERH         *    &78
MCBSPLP_RINTCLR       *    &80
MCBSPLP_XINTCLR       *    &84
MCBSPLP_ROVFLCLR      *    &88
MCBSPLP_SYSCONFIG     *    &8C
MCBSPLP_THRSH2        *    &90
MCBSPLP_THRSH1        *    &94
MCBSPLP_IRQSTATUS     *    &A0
MCBSPLP_IRQENABLE     *    &A4
MCBSPLP_WAKEUPEN      *    &A8
MCBSPLP_XCCR          *    &AC
MCBSPLP_RCCR          *    &B0
MCBSPLP_XBUFFSTAT     *    &B4
MCBSPLP_RBUFFSTAT     *    &B8
MCBSPLP_SSELCR        *    &BC
MCBSPLP_STATUS        *    &C0

; McBSP sidetone registers - relative to L4_McBSP*S

ST_SYSCONFIG          *    &10
ST_IRQSTATUS          *    &18
ST_IRQENABLE          *    &1C
ST_SGAINCR            *    &24
ST_SFIRCR             *    &28
ST_SSELCR             *    &2C

; TWL/TPS audio IIC address
TPSAUDIO_IIC   * &49

; TWL/TPS audio registers

CODEC_MODE              *  &01
OPTION                  *  &02
MICBIAS_CTL             *  &04
ANAMICL                 *  &05
ANAMICR                 *  &06
AVADC_CTL               *  &07
ADCMICSEL               *  &08
DIGMIXING               *  &09
ATXL1PGA                *  &0A
ATXR1PGA                *  &0B
AVTXL2PGA               *  &0C
AVTXR2PGA               *  &0D
AUDIO_IF                *  &0E
VOICE_IF                *  &0F
ARXR1PGA                *  &10
ARXL1PGA                *  &11
ARXR2PGA                *  &12
ARXL2PGA                *  &13
VRXPGA                  *  &14
VSTPGA                  *  &15
VRX2ARXPGA              *  &16
AVDAC_CTL               *  &17
ARX2VTXPGA              *  &18
ARXL1_APGA_CTL          *  &19
ARXR1_APGA_CTL          *  &1A
ARXL2_APGA_CTL          *  &1B
ARXR2_APGA_CTL          *  &1C
ATX2ARXPGA              *  &1D
BT_IF                   *  &1E
BTPGA                   *  &1F
BTSTPGA                 *  &20
EAR_CTL                 *  &21
HS_SEL                  *  &22
HS_GAIN_SET             *  &23
HS_POPN_SET             *  &24
PREDL_CTL               *  &25
PREDR_CTL               *  &26
PRECKL_CTL              *  &27
PRECKR_CTL              *  &28
HFL_CTL                 *  &29
HFR_CTL                 *  &2A
ALC_CTL                 *  &2B
ALC_SET1                *  &2C
ALC_SET2                *  &2D
BOOST_CTL               *  &2E
SOFTVOL_CTL             *  &2F
DTMF_FREQSEL            *  &30
DTMF_TONEXT1H           *  &31
DTMF_TONEXT1L           *  &32
DTMF_TONEXT2H           *  &33
DTMF_TONEXT2L           *  &34
DTMF_TONOFF             *  &35
DTMF_WANONOFF           *  &36
CODEC_RX_SCRAMBLE_H     *  &37
CODEC_RX_SCRAMBLE_M     *  &38
CODEC_RX_SCRAMBLE_L     *  &39
APLL_CTL                *  &3A
DTMF_CTL                *  &3B
DTMF_PGA_CTL2           *  &3C
DTMF_PGA_CTL1           *  &3D
MISC_SET_1              *  &3E
PCMBTMUX                *  &3F
RX_PATH_SEL             *  &43
VDL_APGA_CTL            *  &44
VIBRA_CTL               *  &45
VIBRA_SET               *  &46
ANAMIC_GAIN             *  &48
MISC_SET_2              *  &49

; McBSP DMA request IDs

McBSP1_DMA_TX * 30
McBSP1_DMA_RX * 31
McBSP2_DMA_TX * 32
McBSP2_DMA_RX * 33
McBSP3_DMA_TX * 16
McBSP3_DMA_RX * 17
McBSP4_DMA_TX * 18
McBSP4_DMA_RX * 19
McBSP5_DMA_TX * 20
McBSP5_DMA_RX * 21

; McBSP IRQ numbers (ignoring legacy split TX/RX IRQs)
McBSP1_IRQ    * 16
McBSP2_IRQ    * 17
McBSP3_IRQ    * 22
McBSP4_IRQ    * 23
McBSP5_IRQ    * 27
ST_McBSP2_IRQ * 4
ST_McBSP3_IRQ * 5

; Audio device
                       ^   0, a1
; Public bits
AudioDevice            #   HALDevice_Audio_Size_2
; Private bits
AudioRegs              #   4 ; L4_McBSP*_Log
AudioWorkspace         #   4 ; HAL workspace pointer
AudioMode              #   4 ; Softcopy of CODEC_MODE register
Audio_DeviceSize       *   :INDEX: @@

; Mixer device
                        ^       0
MixerChannel_HeadsetOut #       1 ; Stereo headset output
MixerChannel_Predriver  #       1 ; Stereo speaker predriver output
MixerChannel_HandsFree  #       1 ; Stereo hands-free output
MixerChannel_CarkitOut  #       1 ; Stereo carkit output
MixerChannel_System     #       1 ; Stereo sound data generated by computer
MixerChannel_HeadsetMic #       1 ; Mono headset mic
MixerChannel_AuxInput   #       1 ; Stereo FM/aux input
MixerChannel_CarkitMic  #       1 ; Mono carkit mic
MixerChannels           *       :INDEX: @@

                       ^   0, a1
; Public bits
MixerDevice            #   HALDevice_Mixer_Size + 4 ; +4 for API 0.1
; Private bits
MixerSettings          #   8 * MixerChannels
MixerHeadsetGain       #   2 ; Cached HS_GAIN_SET value
MixerPredriverGain     #   2 ; Cached PREDL_CTL, PREDR_CTL regs
MixerHandsFreeGain     #   2 ; Cached HFL_CTL, HFR_CTL regs
MixerCarkitOutGain     #   2 ; Cached PRECKL_CTL, PRECKR_CTL regs
MixerSystemGain        #   2 ; Cached ARXL2PGA, ARXR2PGA regs
MixerSystemGain2       #   2 ; Cached ARXL2_APGA_CTL, ARXR2_APGA_CTL regs
MixerDisableFlags      #   1 ; Copy of BoardConfig_MixerChans, for convenience
                       #   3 ; Spare
Mixer_DeviceSize       *   :INDEX: @@

Audio_WorkspaceSize    *    (Audio_DeviceSize + Mixer_DeviceSize)

        END
        @


1.3
log
@Add support for new HAL mixer 0.1 API. Improve mixer functionality.
Detail:
  hdr/Audio, s/Audio - The audio mixer now implements version 0.1 of the API, allowing it to return information about the min/max gain values supported by each channel.
  The code has also been updated to add support for an additional amplifier on the system audio channel, allowing for an extra +18dB volume boost
  Additionally, MixerGetMix will now return the clamped/rounded gain value that was last programmed to the hardware, instead of the unvalidated value the user supplied to MixerSetMix.
Admin:
  Tested in OMAP3 ROM


Version 0.58. Tagged as 'OMAP3-0_58'
@
text
@d174 1
a174 1
AudioDevice            #   HALDevice_Audio_Size_1
@


1.2
log
@Various OMAP3 HAL power management improvements, plus add support for board config autodetection via Linux machine ID
Detail:
  s/board, hdr/board - Add Linux machine ID & available mixer channels to board config table
  s/Top - Add new entry point at offset &64, for booting as a fake Linux kernel. Searches the board config table until it finds a config matching the machine ID passed in R1. Also minor ROM copy optimisation, unsigned pointer comparison fixes
  s/Audio, hdr/Audio - Use board config to lock-out mixer channels that aren't connected to any hardware, to avoid excessive power drain or other problems if the channels get turned on. Also perform many other setting tweaks to tidy up default settings for unused mixer paths/channels.
  s/Video - Fix Video_Init logic when deciding whether to reset DSS, enable DSI PLL drift guard
  s/I2C - Increase I2C timeout values, since the previous values were perhaps a bit low
  s/Audio, s/I2C, s/Interrupts, s/RAM, s/SDMA, s/Timers, s/UART, hdr/UART, s/USB, s/Video - Enable autoidle/smart idle where possible to help save power.
Admin:
  Tested on rev C2 beagleboard


Version 0.21. Tagged as 'OMAP3-0_21'
@
text
@d91 1
a91 1
ACTXR2PGA               *  &0D
d195 1
a195 1
MixerDevice            #   HALDevice_Mixer_Size
d202 2
a203 1
MixerSystemGain        #   2 ; Cached ARXL1PGA, ARXR1PGA regs
d205 1
a205 1
                       #   1 ; Spare
@


1.1
log
@Add sound support to OMAP3 HAL, plus other changes
Detail:
  hdr/Audio, s/Audio, Makefile, hdr/StaticWS, s/Boot - Add sound support to OMAP3 HAL. Should work with a TPS65950 connected to I2C1/McBSP2, as per beagleboard.
  s/TPS, s/RTC - Moved TPSRead, TPSWrite functions out of s/RTC and into their own file
  hdr/SDMA, s/SDMA - Add support for packet-based transfer (for audio), improve debug code, remove TestRAMToRAM test code
  s/I2C - Update to handle spurious RDR interrupts as mentioned in OMAP3 errata
  s/Video - Enable support for the larger porch & sync timing registers found in OMAP3 ES3.1 and above
Admin:
  Tested on rev C2 beagleboard


Version 0.18. Tagged as 'OMAP3-0_18'
@
text
@d203 2
a204 1
                       #   2 ; Spare
@

