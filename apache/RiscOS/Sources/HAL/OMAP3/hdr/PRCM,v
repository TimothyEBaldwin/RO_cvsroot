head	1.7;
access;
symbols
	OMAP3-1_18:1.7
	OMAP3-1_17:1.7
	OMAP3-1_16:1.7
	OMAP3-1_15:1.7
	OMAP3-1_14:1.7
	SMP:1.7.0.2
	SMP_bp:1.7
	OMAP3-1_13:1.7
	OMAP3-1_12:1.7
	OMAP3-1_11:1.7
	OMAP3-1_10:1.7
	OMAP3-1_09:1.7
	OMAP3-1_08:1.7
	OMAP3-1_07:1.7
	OMAP3-1_06:1.7
	OMAP3-1_05:1.7
	OMAP3-1_04:1.7
	OMAP3-1_03:1.7
	OMAP3-1_02:1.7
	OMAP3-1_01:1.7
	OMAP3-1_00:1.7
	OMAP3-0_99:1.7
	OMAP3-0_98:1.7
	OMAP3-0_97:1.7
	OMAP3-0_96:1.7
	OMAP3-0_95:1.7
	OMAP3-0_94:1.7
	OMAP3-0_93:1.7
	OMAP3-0_92:1.7
	OMAP3-0_91:1.7
	OMAP3-0_90:1.7
	OMAP3-0_89:1.7
	OMAP3-0_88:1.7
	OMAP3-0_87:1.7
	OMAP3-0_86:1.7
	OMAP3-0_85:1.7
	OMAP3-0_84:1.7
	OMAP3-0_83:1.7
	OMAP3-0_82:1.7
	OMAP3-0_81:1.7
	OMAP3-0_80:1.7
	OMAP3-0_79:1.7
	OMAP3-0_78:1.7
	OMAP3-0_77:1.7
	OMAP3-0_76:1.7
	OMAP3-0_75:1.7
	OMAP3-0_74:1.7
	OMAP3-0_73:1.7
	OMAP3-0_72:1.7
	OMAP3-0_71:1.7
	OMAP3-0_70:1.7
	OMAP3-0_69:1.7
	OMAP3-0_68:1.7
	OMAP3-0_67:1.7
	OMAP3-0_66:1.7
	OMAP3-0_65:1.7
	OMAP3-0_64:1.7
	OMAP3-0_63:1.7
	OMAP3-0_62:1.7
	OMAP3-0_61:1.6
	OMAP3-0_60:1.5
	OMAP3-0_59:1.5
	OMAP3-0_58:1.5
	OMAP3-0_57:1.5
	OMAP3-0_56:1.5
	OMAP3-0_55:1.5
	OMAP3-0_54:1.5
	OMAP3-0_53:1.5
	OMAP3-0_52:1.5
	OMAP3-0_51:1.5
	OMAP3-0_50:1.5
	OMAP3-0_49:1.5
	OMAP3-0_48:1.5
	OMAP3-0_47:1.5
	OMAP3-0_46:1.5
	OMAP3-0_45:1.5
	OMAP3-0_44:1.5
	OMAP3-0_43:1.5
	OMAP3-0_42:1.5
	OMAP3-0_41:1.5
	OMAP3-0_40:1.4
	OMAP3-0_39:1.4
	OMAP3-0_38:1.4
	OMAP3-0_37:1.4
	OMAP3-0_36:1.4
	OMAP3-0_35:1.4
	OMAP3-0_34:1.4
	OMAP3-0_33:1.4
	OMAP3-0_32:1.4
	OMAP3-0_31:1.4
	OMAP3-0_30:1.4
	OMAP3-0_29:1.4
	OMAP3-0_28:1.4
	OMAP3-0_27:1.4
	OMAP3-0_26:1.4
	OMAP3-0_25:1.4
	OMAP3-0_24:1.4
	OMAP3-0_23:1.4
	OMAP3-0_22:1.4
	OMAP3-0_21:1.4
	OMAP3-0_20:1.4
	OMAP3-0_19:1.4
	OMAP3-0_18:1.4
	OMAP3-0_17:1.4
	OMAP3-0_16:1.4
	OMAP3-0_15:1.4
	OMAP3-0_14:1.4
	OMAP3-0_13:1.4
	OMAP3-0_12:1.4
	OMAP3-0_11:1.4
	OMAP3-0_10:1.4
	OMAP3-0_09:1.4
	OMAP3-0_08:1.4
	OMAP3-0_07:1.3
	OMAP3-0_06:1.3
	OMAP3-0_05:1.3
	OMAP3-0_04:1.3
	OMAP3-0_03:1.3
	OMAP3-0_02:1.2
	OMAP3-0_01:1.1;
locks; strict;
comment	@# @;


1.7
date	2012.04.08.22.37.50;	author jlee;	state Exp;
branches;
next	1.6;
commitid	3W6tvBOo1ezoh70w;

1.6
date	2012.03.25.11.49.02;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	c99VvmwezV2J8gYv;

1.5
date	2011.03.19.18.43.36;	author jlee;	state Exp;
branches;
next	1.4;
commitid	luFqb0o1sKujoucv;

1.4
date	2009.05.09.19.04.57;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.06.23.35.40;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.21.18.51.46;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.02.01.13.58.04;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add AM/DM37x SmartReflex driver
Detail:
  s/SR37x, hdr/SR37x - New files containing SmartReflex driver targeting AM/DM37x chips. Initialises SmartReflex for both VDD1 & VDD2, but currently only VDD1/DPLL1 settings can be adjusted at runtime (via CPUClk HAL device)
  Makefile - Add SR37x to object list
  hdr/CPUClk - Adjust OPPTbl_Max so CPUClk workspace size is >= SR37x workspace size (both drivers share their HAL workspace, since only one can be active at once)
  hdr/GPIO - Add TPS_GPPUPDCTR1 definition
  hdr/PRCM - Add SmartReflex related registers
  hdr/omap3530 - Add "control device status" register & extra AM/DM37x revision numbers
  s/CPUClk:
  - Modify CPUClk_PreInit to try initialising the SmartReflex driver.
  - Ensure SmartReflex is disabled in the TPS if using CPUClk driver.
  - Fix 'OPP60' typo in AMDM37x table.
  - Move DPLL adjustment code into its own function to allow it to be shared with SmartReflex driver.
  - Add a few ROUTs and ASSERTs for safety.
Admin:
  Both new & old CPUClk devices tested on BB-xM


Version 0.62. Tagged as 'OMAP3-0_62'
@
text
@; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; Clock manager registers - relative to L4_ClockMan

CM_FCLKEN_IVA2       *       &0000
CM_CLKEN_PLL_IVA2    *       &0004
CM_IDLEST_IVA2       *       &0020
CM_IDLEST_PLL_IVA2   *       &0024
CM_AUTOIDLE_PLL_IVA2 *       &0034
CM_CLKSEL1_PLL_IVA2  *       &0040
CM_CLKSEL2_PLL_IVA2  *       &0044
CM_CLKSTCLTRL_IVA2   *       &0048
CM_CLKSTST_IVA2      *       &004C

CM_REVISION          *       &0800
CM_SYSCONFIG         *       &0810

CM_CLKEN_PLL_MPU     *       &0904
CM_IDLEST_MPU        *       &0920
CM_IDLEST_PLL_MPU    *       &0924
CM_AUTOIDLE_PLL_MPU  *       &0934
CM_CLKSEL1_PLL_MPU   *       &0940
CM_CLKSEL2_PLL_MPU   *       &0944
CM_CLKSTCTRL_MPU     *       &0948
CM_CLKSTST_MPU       *       &094C

CM_FCLKEN1_CORE      *       &0A00
CM_FCLKEN3_CORE      *       &0A08
CM_ICLKEN1_CORE      *       &0A10
CM_ICLKEN2_CORE      *       &0A14
CM_ICLKEN3_CORE      *       &0A18
CM_IDLEST1_CORE      *       &0A20
CM_IDLEST2_CORE      *       &0A24
CM_IDLEST3_CORE      *       &0A28
CM_AUTOIDLE1_CORE    *       &0A30
CM_AUTOIDLE2_CORE    *       &0A34
CM_AUTOIDLE3_CORE    *       &0A38
CM_CLKSEL_CORE       *       &0A40
CM_CLKSTCTRL_CORE    *       &0A48
CM_CLKSTST_CORE      *       &0A4C

CM_FCLKEN_SGX        *       &0B00
CM_ICLKEN_SGX        *       &0B10
CM_IDLEST_SGX        *       &0B20
CM_CLKSEL_SGX        *       &0B40
CM_SLEEPDEP_SGX      *       &0B44
CM_CLKSTCTRL_SGX     *       &0B48
CM_CLKSTST_SGX       *       &0B4C

CM_FCLKEN_WKUP       *       &0C00
CM_ICLKEN_WKUP       *       &0C10
CM_IDLEST_WKUP       *       &0C20
CM_AUTOIDLE_WKUP     *       &0C30
CM_CLKSEL_WKUP       *       &0C40

CM_CLKEN_PLL         *       &0D00
CM_CLKEN2_PLL        *       &0D04
CM_IDLEST_CKGEN      *       &0D20
CM_IDLEST2_CKGEN     *       &0D24
CM_AUTOIDLE_PLL      *       &0D30
CM_AUTOIDLE2_PLL     *       &0D34
CM_CLKSEL1_PLL       *       &0D40
CM_CLKSEL2_PLL       *       &0D44
CM_CLKSEL3_PLL       *       &0D48
CM_CLKSEL4_PLL       *       &0D4C
CM_CLKSEL5_PLL       *       &0D50
CM_CLKOUT_CTRL       *       &0D70

CM_FCLKEN_DSS        *       &0E00
CM_ICLKEN_DSS        *       &0E10
CM_IDLEST_DSS        *       &0E20
CM_AUTOIDLE_DSS      *       &0E30
CM_CLKSEL_DSS        *       &0E40
CM_SLEEPDEP_DSS      *       &0E44
CM_CLKSTCTRL_DSS     *       &0E48
CM_CLKSTST_DSS       *       &0E4C

CM_FCLKEN_CAM        *       &0F00
CM_ICLKEN_CAM        *       &0F10
CM_IDLEST_CAM        *       &0F20
CM_AUTOIDLE_CAM      *       &0F30
CM_CLKSEL_CAM        *       &0F40
CM_SLEEPDEP_CAM      *       &0F44
CM_CLKSTCTRL_CAM     *       &0F48
CM_CLKSTST_CAM       *       &0F4C

CM_FCLKEN_PER        *       &1000
CM_ICLKEN_PER        *       &1010
CM_IDLEST_PER        *       &1020
CM_AUTOIDLE_PER      *       &1030
CM_CLKSEL_PER        *       &1040
CM_SLEEPDEP_PER      *       &1044
CM_CLKSTCTRL_PER     *       &1048
CM_CLKSTST_PER       *       &104C

CM_CLKSEL1_EMU       *       &1140
CM_CLKSTCTRL_EMU     *       &1148
CM_CLKSTST_EMU       *       &114C
CM_CLKSEL2_EMU       *       &1150
CM_CLKSEL3_EMU       *       &1154

CM_POLCTRL           *       &129C

CM_ILDEST_NEON       *       &1320
CM_CLKSTCTRL_NEON    *       &1348

CM_FCLKEN_USBHOST    *       &1400
CM_ICLKEN_USBHOST    *       &1410
CM_IDLEST_USBHOST    *       &1420
CM_AUTOIDLE_USBHOST  *       &1430
CM_SLEEPDEP_USBHOST  *       &1444
CM_CLKSTCTRL_USBHOST *       &1448
CM_CLKSTST_USBHOST   *       &144C

; PRM register subgroups - relative to L4_PowerMan
IVA2_PRM               *     &0000
OCP_System_Reg_PRM     *     &0800
MPU_PRM                *     &0900
CORE_PRM               *     &0A00
SGX_PRM                *     &0B00
WKUP_PRM               *     &0C00
Clock_Control_Reg_PRM  *     &0D00
DSS_PRM                *     &0E00
CAM_PRM                *     &0F00
PER_PRM                *     &1000
EMU_PRM                *     &1100
Global_Reg_PRM         *     &1200
NEON_PRM               *     &1300
USBHOST_PRM            *     &1400

; OCP system regsiters - relative to OCP_System_Reg_PRM
PRM_IRQSTATUS_MPU      *     &0018      

; Clock control registers - relative to Clock_Control_Reg_PRM
PRM_CLKSEL           *       &0040
PRM_CLKOUT_CTRL      *       &0070

; PRM global registers - relative to Global_Reg_PRM
PRM_VC_SMPS_SA       *       &0020
PRM_VC_SMPS_VOL_RA   *       &0024
PRM_VC_SMPS_CMD_RA   *       &0028
PRM_VC_CMD_VAL_0     *       &002C
PRM_VC_CMD_VAL_1     *       &0030
PRM_VC_CH_CONF       *       &0034
PRM_VC_I2C_CFG       *       &0038
PRM_VC_BYPASS_VAL    *       &003C
PRM_RSTCTRL          *       &0050
PRM_RSTTIME          *       &0054
PRM_RSTST            *       &0058
PRM_VOLTCTRL         *       &0060
PRM_SRAM_PCHARGE     *       &0064
PRM_CLKSRC_CTRL      *       &0070
PRM_OBS              *       &0080
PRM_VOLTSETUP1       *       &0090
PRM_VOLTOFFSET       *       &0094
PRM_CLKSETUP         *       &0098
PRM_POLCTRL          *       &009C
PRM_VOLTSETUP2       *       &00A0
PRM_LDO_ABB_SETUP    *       &00F0
PRM_LDO_ABB_CTRL     *       &00F4

; SmartReflex voltage processor registers - relative to Global_Reg_PRM
PRM_VP1_CONFIG       *       &00B0
PRM_VP1_VSTEPMIN     *       &00B4
PRM_VP1_VSTEPMAX     *       &00B8
PRM_VP1_VLIMITTO     *       &00BC
PRM_VP1_VOLTAGE      *       &00C0
PRM_VP1_STATUS       *       &00C4
PRM_VP2_CONFIG       *       &00D0
PRM_VP2_VSTEPMIN     *       &00D4
PRM_VP2_VSTEPMAX     *       &00D8
PRM_VP2_VLIMITTO     *       &00DC
PRM_VP2_VOLTAGE      *       &00E0
PRM_VP2_STATUS       *       &00E4

; 32KHz counter - relative to L4_32KTIMER
REG_32KSYNCNT_SYSCONFIG  *   &0004
REG_32KSYNCNT_CR         *   &0010

        END
@


1.6
log
@Line some things up.
To help OMAP4 tracking changes a number of the changes were purely cosmetic lining up differences, this change is where OMAP3 wasn't on a conventional column layout.

Version 0.61. Tagged as 'OMAP3-0_61'
@
text
@d142 4
a145 1
USBHOST_PRM            *     &1400      
d172 16
@


1.5
log
@Add CPUClk HAL device implementation
Detail:
  Makefile, s/CPUClk, hdr/CPUClk, s/Boot, hdr/StaticWS - Provide an implementation of the new HALDevice_CPUClk HAL device. Allows OMAP35x and DM37x CPU's to be set to any of the standard OPPs as listed in the datasheets. Doesn't yet support 1GHz on DM37x.
  hdr/NIC, hdr/PRCM, hdr/omap3530, s/TPS - Misc additions/tweaks/fixes.
Admin:
  Tested on rev C2 BB, A2 BB-xM, C1 TouchBook
  Requires latest PortableHAL & Kernel


Version 0.41. Tagged as 'OMAP3-0_41'
@
text
@d174 1
a174 1
       END
@


1.4
log
@OMAP3 HAL USB (EHCI) support, interrupt handling fixes
Detail:
  Makefile - added USB to objects list
  s/Boot, s/USB, hdr/StaticWS, hdr/USB - USB EHCI code
  s/Debug, s/Stubs, s/Timers, s/Top, s/UART, s/Video - Debugging tweaks and header dependency fixes
  s/Interrupts, hdr/omap3530 - Interrupt fixes & debugging code
  hdr/PRCM - typo fix
Admin:
  Tested on rev C2 beagleboard


Version 0.08. Tagged as 'OMAP3-0_08'
@
text
@d32 2
a33 2
CM_ILDEST_MPU        *       &0920
CM_ILDEST_PLL_MPU    *       &0924
@


1.3
log
@OMAP3 HAL fixes and further video work
Detail:
  s/Boot - Store some workspace vars used by video code. Disable some debug output.
  s/Interrupts - Update HAL_IRQClear to allow clearing of VSync IRQ
  s/Top - Fix CP15 flags
  s/Video - Implemented majority of video code needed by kernel. Correct code for calculating and programming pixel clocks still required, so code remains disabled by default.
  hdr/PRCM - Correct typo
  hdr/StaticWS - Add video-related workspace entries
  hdr/Video - Add constants for mouse pointer image buffer size
Admin:
  Tested under qemu-omap3 and rev B6 beagleboard.


Version 0.03. Tagged as 'OMAP3-0_03'
@
text
@d50 1
a50 1
CM_AUTOIDEL3_CORE    *       &0A38
@


1.2
log
@  OMAP3 HAL fixes and updates to allow booting on real hardware.
Detail:
  Makefile - add s.PRCM to objects
  s/Boot - Call PRCM_SetClocks during HAL_Init. Added (disabled) debugging code.
  s/Interrupts - Updated HAL_IRQSource, HAL_FIQSource to query ARM interrupt state instead of relying on INTC alone to detect whether an interrupt is firing or not.
  s/PRCM - Code to measure system clock frequency, store it for HAL purposes, and notify the OMAP of the frequency in order to ensure correct operation.
  s/Timers - Use measured system clock frequency as the timer frequency instead of hard-coded value. Return correct values from HAL_TimerPeriod.
  s/Top - Added (disabled) debugging code. Updated ARM initialisation to use correct cache cleaning procedure.
  s/Video - Further minor work towards completing video driver.
  hdr/CoPro15ops - Deprecate ARM_flush_* macros
  hdr/PRCM - Add more register addresses
  hdr/StaticWS - Add entried for PowerMan & 32K timer logical addresses, system clock speed
  hdr/Timers - remove incorrect, hard-coded timer frequency
  hdr/omap3530 - remove unused FlashCheck global, add DebugChar macro
Admin:
  Tested with HALTester and the RISC OS kernel using qemu-omap3.
  Tested with HALTester on a rev. B6 beagleboard.


Version 0.02. Tagged as 'OMAP3-0_02'
@
text
@d109 1
a109 1
CL_CLKSEL1_EMU       *       &1140
@


1.1
log
@Basic OMAP3 HAL
Detail:
  Performs startup procedure suitable for any location in ROM or RAM. UART, timer, counter, interrupt & debug functionality implemented. Video support incomplete and nonfunctional.
Admin:
  Tested with HALTester & RISC OS kernel under qemu-omap3


Version 0.01. Tagged as 'OMAP3-0_01'
@
text
@d128 46
@

