head	1.4;
access;
symbols
	OMAP3-1_18:1.4
	OMAP3-1_17:1.4
	OMAP3-1_16:1.4
	OMAP3-1_15:1.4
	OMAP3-1_14:1.4
	SMP:1.4.0.2
	SMP_bp:1.4
	OMAP3-1_13:1.4
	OMAP3-1_12:1.4
	OMAP3-1_11:1.4
	OMAP3-1_10:1.4
	OMAP3-1_09:1.4
	OMAP3-1_08:1.4
	OMAP3-1_07:1.4
	OMAP3-1_06:1.4
	OMAP3-1_05:1.4
	OMAP3-1_04:1.4
	OMAP3-1_03:1.4
	OMAP3-1_02:1.4
	OMAP3-1_01:1.4
	OMAP3-1_00:1.4
	OMAP3-0_99:1.4
	OMAP3-0_98:1.4
	OMAP3-0_97:1.3
	OMAP3-0_96:1.3
	OMAP3-0_95:1.3
	OMAP3-0_94:1.3
	OMAP3-0_93:1.3
	OMAP3-0_92:1.3
	OMAP3-0_91:1.3
	OMAP3-0_90:1.3
	OMAP3-0_89:1.3
	OMAP3-0_88:1.3
	OMAP3-0_87:1.3
	OMAP3-0_86:1.3
	OMAP3-0_85:1.3
	OMAP3-0_84:1.3
	OMAP3-0_83:1.3
	OMAP3-0_82:1.3
	OMAP3-0_81:1.3
	OMAP3-0_80:1.3
	OMAP3-0_79:1.3
	OMAP3-0_78:1.3
	OMAP3-0_77:1.3
	OMAP3-0_76:1.3
	OMAP3-0_75:1.3
	OMAP3-0_74:1.3
	OMAP3-0_73:1.3
	OMAP3-0_72:1.3
	OMAP3-0_71:1.3
	OMAP3-0_70:1.3
	OMAP3-0_69:1.3
	OMAP3-0_68:1.3
	OMAP3-0_67:1.3
	OMAP3-0_66:1.3
	OMAP3-0_65:1.3
	OMAP3-0_64:1.3
	OMAP3-0_63:1.3
	OMAP3-0_62:1.3
	OMAP3-0_61:1.3
	OMAP3-0_60:1.2
	OMAP3-0_59:1.2
	OMAP3-0_58:1.2
	OMAP3-0_57:1.2
	OMAP3-0_56:1.2
	OMAP3-0_55:1.2
	OMAP3-0_54:1.2
	OMAP3-0_53:1.2
	OMAP3-0_52:1.2
	OMAP3-0_51:1.2
	OMAP3-0_50:1.2
	OMAP3-0_49:1.2
	OMAP3-0_48:1.2
	OMAP3-0_47:1.2
	OMAP3-0_46:1.2
	OMAP3-0_45:1.2
	OMAP3-0_44:1.2
	OMAP3-0_43:1.2
	OMAP3-0_42:1.2
	OMAP3-0_41:1.2
	OMAP3-0_40:1.2
	OMAP3-0_39:1.2
	OMAP3-0_38:1.2
	OMAP3-0_37:1.2
	OMAP3-0_36:1.2
	OMAP3-0_35:1.2
	OMAP3-0_34:1.2
	OMAP3-0_33:1.2
	OMAP3-0_32:1.2
	OMAP3-0_31:1.2
	OMAP3-0_30:1.2
	OMAP3-0_29:1.2
	OMAP3-0_28:1.2
	OMAP3-0_27:1.2
	OMAP3-0_26:1.2
	OMAP3-0_25:1.2
	OMAP3-0_24:1.2
	OMAP3-0_23:1.2
	OMAP3-0_22:1.2
	OMAP3-0_21:1.2
	OMAP3-0_20:1.2
	OMAP3-0_19:1.2
	OMAP3-0_18:1.2
	OMAP3-0_17:1.2
	OMAP3-0_16:1.2
	OMAP3-0_15:1.2
	OMAP3-0_14:1.2
	OMAP3-0_13:1.2
	OMAP3-0_12:1.2
	OMAP3-0_11:1.2
	OMAP3-0_10:1.1
	OMAP3-0_09:1.1
	OMAP3-0_08:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.10.25.17.35.37;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	f6nsEIQ8JetkIBVx;

1.3
date	2012.03.25.11.49.03;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	c99VvmwezV2J8gYv;

1.2
date	2009.07.02.19.37.04;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.09.19.04.57;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Don't bother providing even dummy implementations of USB port and overcurrent functions
As the flag bit in HAL_USBControllerInfo isn't set, no need to provide them.
Use symbols from Hdr:HALEntries when building the USB info.
No need for AASMFLAGS in the makefile.
Built, but not tested.

Version 0.98. Tagged as 'OMAP3-0_98'
@
text
@; Copyright 2009 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; USBTLL registers - relative to L4_USBTLL

USBTLL_REVISION          *    &00
USBTLL_SYSCONFIG         *    &10
USBTLL_SYSSTATUS         *    &14
USBTLL_IRQSTATUS         *    &18
USBTLL_IRQENABLE         *    &1C
TLL_SHARED_CONF          *    &30
TLL_CHANNEL_CONF_0       *    &40
TLL_CHANNEL_CONF_1       *    &44
TLL_CHANNEL_CONF_2       *    &48

; ULPI register groups - relative to L4_USBTLL
ULPI_BASE                *    &800
ULPI_SIZE                *    &100
ULPI_NUM                 *    2

ULPI_VENDOR_ID_LO         *   &00 ; All registers are byte sized!
ULPI_VENDOR_ID_HI         *   &01
ULPI_PRODUCT_ID_LO        *   &02
ULPI_PRODUCT_ID_HI        *   &03
ULPI_FUNCTION_CTRL        *   &04
ULPI_FUNCTION_CTRL_SET    *   &05
ULPI_FUNCTION_CTRL_CLR    *   &06
ULPI_INTERFACE_CTRL       *   &07
ULPI_INTERFACE_CTRL_SET   *   &08
ULPI_INTERFACE_CTRL_CLR   *   &09
ULPI_OTG_CTRL             *   &0A
ULPI_OTG_CTRL_SET         *   &0B
ULPI_OTG_CTRL_CLR         *   &0C
ULPI_USB_INT_EN_RISE      *   &0D
ULPI_USB_INT_EN_RISE_SET  *   &0E
ULPI_USB_INT_EN_RISE_CLR  *   &0F
ULPI_USB_INT_EN_FALL      *   &10
ULPI_USB_INT_EN_FALL_SET  *   &11
ULPI_USB_INT_EN_FALL_CLR  *   &12
ULPI_USB_INT_STATUS       *   &13
ULPI_USB_INT_LATCH        *   &14
ULPI_DEBUG                *   &15
ULPI_SCRATCH_REGISTER     *   &16
ULPI_SCRATCH_REGISTER_SET *   &17    
ULPI_SCRATCH_REGISTER_CLR *   &18
ULPI_EXTENDED_SET_ACCESS  *   &2F
ULPI_UTMI_VCONTROL_EN     *   &30
ULPI_UTMI_VCONTROL_EN_SET *   &31
ULPI_UTMI_VCONTROL_EN_CLR *   &32
ULPI_UTMI_VCONTROL_STATUS *   &33
ULPI_UTMI_VCONTROL_LATCH  *   &34
ULPI_UTMI_VSTATUS         *   &35
ULPI_UTMI_VSTATUS_SET     *   &36
ULPI_UTMI_VSTATUS_CLR     *   &37
ULPI_USB_INT_LATCH_NOCLR  *   &38
ULPI_VENDOR_INT_EN        *   &3B
ULPI_VENDOR_INT_EN_SET    *   &3C
ULPI_VENDOR_INT_EN_CLR    *   &3D
ULPI_VENDOR_INT_STATUS    *   &3E
ULPI_VENDOR_INT_LATCH     *   &3F

; USB host registers - relative to L4_USB_Host
UHH_REVISION         *    &00
UHH_SYSCONFIG        *    &10
UHH_SYSSTATUS        *    &14
UHH_HOSTCONFIG       *    &40
UHH_DEBUG_SCR        *    &44
OHCI_BASE            *    &400
EHCI_BASE            *    &800

; OHCI registers - relative to OHCI_BASE
OHCI_HCREVISION           *    &00
OHCI_HCCONTROL            *    &04
OHCI_HCCOMANDSTATUS       *    &08
OHCI_HCINTERRUPTSTATUS    *    &0C
OHCI_HCINTERRUPTENABLE    *    &10
OHCI_HCINTERRUPTDISABLE   *    &14
OHCI_HCHCCA               *    &18
OHCI_HCPERIODCURRENTED    *    &1C
OHCI_HCCONTROLHEADED      *    &20
OHCI_HCCONTROLCURRENTED   *    &24
OHCI_HCBULKHEADED         *    &28
OHCI_HCBULKCURRENTED      *    &2C
OHCI_HCDONEHEAD           *    &30
OHCI_HCFMINTERVAL         *    &34
OHCI_HCFMREMAINING        *    &38
OHCI_HCFMNUMBER           *    &3C
OHCI_HCPERIODICSTART      *    &40
OHCI_HCLSTHRESHOLD        *    &44
OHCI_HCRHDESCRIPTORA      *    &48
OHCI_HCRHDESCRIPTORB      *    &4C
OHCI_HCRHSTATUS           *    &50
OHCI_HCRHPORTSTATUS_1     *    &54
OHCI_HCRHPORTSTATUS_2     *    &58
OHCI_HCRHPORTSTATUS_3     *    &5C

; EHCI registers - relative to EHCI_BASE
EHCI_HCCAPBASE           *    &00
EHCI_HCSPARAMS           *    &04
EHCI_HCCPARAMS           *    &08
EHCI_USBCMD              *    &10
EHCI_USBSTS              *    &14
EHCI_USBINTR             *    &18
EHCI_FRINDEX             *    &1C
EHCI_CTRLDSSEGMENT       *    &20
EHCI_PERIODICLISTBASE    *    &24
EHCI_ASYNCLISTADDR       *    &28
EHCI_CONFIGFLAG          *    &50
EHCI_PORTSC_0            *    &54
EHCI_PORTSC_1            *    &58
EHCI_PORTSC_2            *    &5C
EHCI_INSNREG00           *    &90
EHCI_INSNREG01           *    &94
EHCI_INSNREG02           *    &98
EHCI_INSNREG03           *    &9C
EHCI_INSNREG04           *    &A0
EHCI_INSNREG05_UTMI      *    &A4
EHCI_INSNREG05_ULPI      *    &A4 ; (eh?)

        END
@


1.3
log
@Line some things up.
To help OMAP4 tracking changes a number of the changes were purely cosmetic lining up differences, this change is where OMAP3 wasn't on a conventional column layout.

Version 0.61. Tagged as 'OMAP3-0_61'
@
text
@a15 13
; usbinfo struct
                   ^ 0
USBINFO_TYPE       # 4 ; 0=OHCI, 1=EHCI, 2=MUSBMHDRC
USBINFO_FLAGS      # 4 ; See below
USBINFO_HW         # 4 ; EHCI/OHCI base addr
USBINFO_DEVNO      # 4 ; IRQ number
USBINFO_SIZEOF     # 0 ; Size of struct

USBINFO_FLAG_HAL_USBPortPower   * 1 ; Use HAL_USBPortPower
USBINFO_FLAG_HAL_USBPortStatus  * 2 ; Use HAL_USBPortStatus
USBINFO_FLAG_HAL_USBPortIRQ     * 4 ; Use HAL_USBPortIRQ
USBINFO_FLAG_32bit_Regs         * 8 ; Must use 32bit access for all registers

@


1.2
log
@Update OMAP3 HAL to expose USB OTG controller via HAL_USBControllerInfo
Detail:
  hdr/StaticWS, s/Boot - Store logical address of OTG controller
  hdr/USB, s/USB - Expose OTG controller by HAL_USBControllerInfo API
Admin:
  Tested on Rev C2 beagleboard


Version 0.11. Tagged as 'OMAP3-0_11'
@
text
@d145 1
a145 1
                END
@


1.1
log
@OMAP3 HAL USB (EHCI) support, interrupt handling fixes
Detail:
  Makefile - added USB to objects list
  s/Boot, s/USB, hdr/StaticWS, hdr/USB - USB EHCI code
  s/Debug, s/Stubs, s/Timers, s/Top, s/UART, s/Video - Debugging tweaks and header dependency fixes
  s/Interrupts, hdr/omap3530 - Interrupt fixes & debugging code
  hdr/PRCM - typo fix
Admin:
  Tested on rev C2 beagleboard


Version 0.08. Tagged as 'OMAP3-0_08'
@
text
@d18 1
a18 1
USBINFO_TYPE       # 4 ; 0=OHCI, 1=EHCI
@

