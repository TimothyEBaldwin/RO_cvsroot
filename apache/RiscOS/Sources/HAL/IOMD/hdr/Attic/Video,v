head	1.3;
access;
symbols
	IOMD-0_15:1.2
	IOMD-0_14:1.2
	IOMD-0_13:1.2
	IOMD-0_12:1.2
	IOMD-0_11:1.2
	IOMD-0_10:1.2
	IOMD-0_09:1.2
	IOMD-0_08:1.2
	IOMD-0_07:1.2
	IOMD-0_06:1.2
	IOMD-0_05:1.2
	IOMD-0_04:1.2
	IOMD-0_03:1.2
	IOMD-0_02:1.2
	HAL_merge:1.1.2.1
	IOMD-0_01:1.2
	Kernel-5_35-4_79_2_59:1.1.2.1
	Kernel-5_35-4_79_2_58:1.1.2.1
	Kernel-5_35-4_79_2_57:1.1.2.1
	Kernel-5_35-4_79_2_56:1.1.2.1
	Kernel-5_35-4_79_2_55:1.1.2.1
	Kernel-5_35-4_79_2_54:1.1.2.1
	Kernel-5_35-4_79_2_53:1.1.2.1
	Kernel-5_35-4_79_2_52:1.1.2.1
	Kernel-5_35-4_79_2_51:1.1.2.1
	Kernel-5_35-4_79_2_50:1.1.2.1
	Kernel-5_35-4_79_2_49:1.1.2.1
	Kernel-5_35-4_79_2_48:1.1.2.1
	Kernel-5_35-4_79_2_47:1.1.2.1
	Kernel-5_35-4_79_2_46:1.1.2.1
	Kernel-5_35-4_79_2_45:1.1.2.1
	Kernel-5_35-4_79_2_44:1.1.2.1
	MSI_Demo_merge:1.1.2.1
	Kernel-5_35-4_79_2_25_2_2:1.1.2.1
	Kernel-5_35-4_79_2_43:1.1.2.1
	Kernel-5_35-4_79_2_42:1.1.2.1
	Kernel-5_35-4_79_2_41:1.1.2.1
	Kernel-5_35-4_79_2_40:1.1.2.1
	Kernel-5_35-4_79_2_39:1.1.2.1
	Kernel-5_35-4_79_2_38:1.1.2.1
	Kernel-5_35-4_79_2_37:1.1.2.1
	Kernel-5_35-4_79_2_36:1.1.2.1
	Kernel-5_35-4_79_2_35:1.1.2.1
	Kernel-5_35-4_79_2_34:1.1.2.1
	Kernel-5_35-4_79_2_33:1.1.2.1
	Kernel-5_35-4_79_2_32:1.1.2.1
	Kernel-5_35-4_79_2_25_2_1:1.1.2.1
	MSI_Demo:1.1.2.1.0.2
	Kernel-5_35-4_79_2_31:1.1.2.1
	Kernel-5_35-4_79_2_30:1.1.2.1
	Kernel-5_35-4_79_2_29:1.1.2.1
	Kernel-5_35-4_79_2_28:1.1.2.1
	Kernel-5_35-4_79_2_27:1.1.2.1
	Kernel-5_35-4_79_2_26:1.1.2.1
	Kernel-5_35-4_79_2_25:1.1.2.1
	Kernel-5_35-4_79_2_24:1.1.2.1
	Kernel-5_35-4_79_2_23:1.1.2.1
	Kernel-5_35-4_79_2_22:1.1.2.1
	Kernel-5_35-4_79_2_21:1.1.2.1
	Kernel-5_35-4_79_2_20:1.1.2.1
	Kernel-5_35-4_79_2_19:1.1.2.1
	Kernel-5_35-4_79_2_18:1.1.2.1
	Kernel-5_35-4_79_2_17:1.1.2.1
	Kernel-5_35-4_79_2_16:1.1.2.1
	Kernel-5_35-4_79_2_15:1.1.2.1
	Kernel-5_35-4_79_2_14:1.1.2.1
	Kernel-5_35-4_79_2_13:1.1.2.1
	Kernel-5_35-4_79_2_12:1.1.2.1
	Kernel-5_35-4_79_2_11:1.1.2.1
	Kernel-5_35-4_79_2_10:1.1.2.1
	Kernel-5_35-4_79_2_9:1.1.2.1
	HAL:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2012.07.04.18.19.00;	author rsprowson;	state dead;
branches;
next	1.2;
commitid	nTJOJt9IePDd3hbw;

1.2
date	2008.12.22.00.15.15;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.05.16.50.17;	author mstephen;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.10.05.16.50.17;	author mstephen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add HAL device for VIDC20
Required by VIDC20Video to locate the controller and its info.
Moved the HAL video code out into a module.
Reordered the power on VIDC pokes to disable sound ASAP.
Added a header file to the 'cbits' for 1 less warning.
Used IOMDPhys where we mean its physical address, and IOMD_Base where offsets are being referred to.
Set up "CLines" single GPIO bit as input (it's the only thing on port C on the A7000/A7000+.
Tested on RiscPC and RPCEmu.

Version 0.16. Tagged as 'IOMD-0_16'
@
text
@; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; -----------------------------------------------------------------------------------

;
;VIDC20 parameters size (for table of VIDC20 registers)
;
VIDC20ParmsSize * (128*4) ; 128 words from 80xxxxxx to FFxxxxxx step 01000000

;
; VRAM SAM length in bytes
;
SAMLength *     512*4

; -----------------------------------------------------------------------------------

;
; VIDC20 Registers
;

VIDCPalAddress          *       &10000000       ; used in palette programming

LCDOffsetRegister0      *       &30000000
LCDOffsetRegister1      *       &31000000

VIDC20BorderColour      *       &40000000       ; added by mjs
VIDC20PointerColour     *       &50000000       ; added by mjs

HorizCycle              *       &80000000
HorizSyncWidth          *       &81000000
HorizBorderStart        *       &82000000
HorizDisplayStart       *       &83000000
HorizDisplayEnd         *       &84000000
HorizBorderEnd          *       &85000000
HorizCursorStart        *       &86000000       ; used in pointer programming
HorizInterlace          *       &87000000

VertiCycle              *       &90000000
VertiSyncWidth          *       &91000000       ; Needed to set up FSIZE register in IOMD
VertiBorderStart        *       &92000000       ; First register affected by *TV
VertiDisplayStart       *       &93000000
VertiDisplayEnd         *       &94000000
VertiBorderEnd          *       &95000000
VertiCursorStart        *       &96000000
VertiCursorEnd          *       &97000000       ; Last register affected by *TV

VIDCExternal            *       &C0000000
VIDCFSyn                *       &D0000000
VIDCControl             *       &E0000000
VIDCDataControl         *       &F0000000

; Pseudo-registers used to return additional information to kernel

PseudoRegisters         *       5               ; number of pseudo-register entries at end of table

PseudoRegister_HClockSpeed *    &FB000000       ; used to indicate VIDC hclock speed (and use it)
PseudoRegister_ClockSpeed *     &FC000000       ; used to indicate real VIDC rclock speed

; Bits in VCSR, VCER
CursorSinglePanel       *       0 :SHL: 13
CursorTopPanel          *       1 :SHL: 13
CursorBottomPanel       *       1 :SHL: 14
CursorStraddle          *       3 :SHL: 13


; Bits in external register

Ext_HSYNCbits   *       3 :SHL: 16
Ext_InvertHSYNC *       1 :SHL: 16
Ext_CompHSYNC   *       2 :SHL: 16
Ext_InvertCompHSYNC *   3 :SHL: 16
Ext_VSYNCbits   *       3 :SHL: 18
Ext_InvertVSYNC *       1 :SHL: 18
Ext_CompVSYNC   *       2 :SHL: 18
Ext_InvertCompVSYNC *   3 :SHL: 18
Ext_HiResMono   *       1 :SHL: 14
Ext_LCDGrey     *       1 :SHL: 13
Ext_DACsOn      *       1 :SHL: 12
Ext_PedsOn      *       7 :SHL: 8
Ext_PedsShift   *       8
Ext_ERegShift   *       4
Ext_ECKOn       *       1 :SHL: 2
Ext_ERegBits    *       3 :SHL: 0
Ext_ERegRed     *       0 :SHL: 0
Ext_ERegGreen   *       1 :SHL: 0
Ext_ERegBlue    *       2 :SHL: 0
Ext_ERegExt     *       3 :SHL: 0       ; use this for lowest power

; Bits in Frequency Synthesizer Register

FSyn_VShift     *       8
FSyn_RShift     *       0
FSyn_ClearV     *       1 :SHL: 15
FSyn_ForceLow   *       1 :SHL: 14
FSyn_ClearR     *       1 :SHL: 7
FSyn_ForceHigh  *       1 :SHL: 6

FSyn_ResetValue *       FSyn_ClearV :OR: FSyn_ClearR :OR: FSyn_ForceLow :OR: (63 :SHL: FSyn_RShift) :OR: (0 :SHL: FSyn_VShift)           ; value to get PLL working properly

; Bits in Control Register

CR_DualPanel    *       1 :SHL: 13
CR_Interlace    *       1 :SHL: 12
CR_FIFOLoadShift *      8
CR_LBPP0        *       0 :SHL: 5
CR_LBPP1        *       1 :SHL: 5
CR_LBPP2        *       2 :SHL: 5
CR_LBPP3        *       3 :SHL: 5
CR_LBPP4        *       4 :SHL: 5
CR_LBPP5        *       6 :SHL: 5 ; spot the gap!
CR_PixelDivShift *      2
CR_VCLK         *       0 :SHL: 0
CR_HCLK         *       1 :SHL: 0
CR_RCLK         *       2 :SHL: 0

; Bits in Data Control Register

DCR_VRAMOff     *       0 :SHL: 18
DCR_VRAMDiv1    *       1 :SHL: 18
DCR_VRAMDiv2    *       2 :SHL: 18
DCR_VRAMDiv4    *       3 :SHL: 18
DCR_BusBits     *       3 :SHL: 16
DCR_Bus31_0     *       1 :SHL: 16
DCR_Bus63_32    *       2 :SHL: 16
DCR_Bus63_0     *       3 :SHL: 16
DCR_HDis        *       1 :SHL: 13
DCR_Sync        *       1 :SHL: 12
DCR_HDWRShift   *       0

; -----------------------------------------------------------------------------------

; mjs - this had better agree with the format specified in kernel s.vdu.vdumodes

;
; format of a VIDC list type 3
;
                                ^       4
VIDCList3_PixelDepth            #       4
VIDCList3_HorizSyncWidth        #       4
VIDCList3_HorizBackPorch        #       4
VIDCList3_HorizLeftBorder       #       4
VIDCList3_HorizDisplaySize      #       4
VIDCList3_HorizRightBorder      #       4
VIDCList3_HorizFrontPorch       #       4
VIDCList3_VertiSyncWidth        #       4
VIDCList3_VertiBackPorch        #       4
VIDCList3_VertiTopBorder        #       4
VIDCList3_VertiDisplaySize      #       4
VIDCList3_VertiBottomBorder     #       4
VIDCList3_VertiFrontPorch       #       4
VIDCList3_PixelRate             #       4
VIDCList3_SyncPol               #       4  ; sync polarity/flag bits
VIDCList3_ControlList           #       0  ; possibly empty list of pairs of index,value words
;
; and VIDCList3 is terminated by a -1 word
;
; Indices in VIDCList3_ControlList
;
                                ^       1
ControlList_LCDMode             #       1
ControlList_LCDDualPanelMode    #       1
ControlList_LCDOffset0          #       1
ControlList_LCDOffset1          #       1
ControlList_HiResMode           #       1
ControlList_DACControl          #       1
ControlList_RGBPedestals        #       1
ControlList_ExternalRegister    #       1
ControlList_HClockSelect        #       1
ControlList_RClockFrequency     #       1
ControlList_DPMSState           #       1
ControlList_Interlaced          #       1
ControlList_InvalidReason       #       0

; bits/flags in VIDCList3_SyncPol word:
;
SyncPol_InvertHSync        *  1
SyncPol_InvertVSync        *  2
SyncPol_InterlaceSpecified *  4   ; if set, interlace bit has been specified, else filled in by kernel
SyncPol_Interlace          *  8   ; set=interlaced, either specified by service call claimant or filled in from *TV by kernel

; -----------------------------------------------------------------------------------

       END
@


1.2
log
@Merged IOMD HAL to trunk.

Version 0.01. Tagged as 'IOMD-0_01'
@
text
@@


1.1
log
@file Video was initially added on branch HAL.
@
text
@d1 196
@


1.1.2.1
log
@add video header file in HAL/IOMD
@
text
@a0 196
; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; -----------------------------------------------------------------------------------

;
;VIDC20 parameters size (for table of VIDC20 registers)
;
VIDC20ParmsSize * (128*4) ; 128 words from 80xxxxxx to FFxxxxxx step 01000000

;
; VRAM SAM length in bytes
;
SAMLength *     512*4

; -----------------------------------------------------------------------------------

;
; VIDC20 Registers
;

VIDCPalAddress          *       &10000000       ; used in palette programming

LCDOffsetRegister0      *       &30000000
LCDOffsetRegister1      *       &31000000

VIDC20BorderColour      *       &40000000       ; added by mjs
VIDC20PointerColour     *       &50000000       ; added by mjs

HorizCycle              *       &80000000
HorizSyncWidth          *       &81000000
HorizBorderStart        *       &82000000
HorizDisplayStart       *       &83000000
HorizDisplayEnd         *       &84000000
HorizBorderEnd          *       &85000000
HorizCursorStart        *       &86000000       ; used in pointer programming
HorizInterlace          *       &87000000

VertiCycle              *       &90000000
VertiSyncWidth          *       &91000000       ; Needed to set up FSIZE register in IOMD
VertiBorderStart        *       &92000000       ; First register affected by *TV
VertiDisplayStart       *       &93000000
VertiDisplayEnd         *       &94000000
VertiBorderEnd          *       &95000000
VertiCursorStart        *       &96000000
VertiCursorEnd          *       &97000000       ; Last register affected by *TV

VIDCExternal            *       &C0000000
VIDCFSyn                *       &D0000000
VIDCControl             *       &E0000000
VIDCDataControl         *       &F0000000

; Pseudo-registers used to return additional information to kernel

PseudoRegisters         *       5               ; number of pseudo-register entries at end of table

PseudoRegister_HClockSpeed *    &FB000000       ; used to indicate VIDC hclock speed (and use it)
PseudoRegister_ClockSpeed *     &FC000000       ; used to indicate real VIDC rclock speed

; Bits in VCSR, VCER
CursorSinglePanel       *       0 :SHL: 13
CursorTopPanel          *       1 :SHL: 13
CursorBottomPanel       *       1 :SHL: 14
CursorStraddle          *       3 :SHL: 13


; Bits in external register

Ext_HSYNCbits   *       3 :SHL: 16
Ext_InvertHSYNC *       1 :SHL: 16
Ext_CompHSYNC   *       2 :SHL: 16
Ext_InvertCompHSYNC *   3 :SHL: 16
Ext_VSYNCbits   *       3 :SHL: 18
Ext_InvertVSYNC *       1 :SHL: 18
Ext_CompVSYNC   *       2 :SHL: 18
Ext_InvertCompVSYNC *   3 :SHL: 18
Ext_HiResMono   *       1 :SHL: 14
Ext_LCDGrey     *       1 :SHL: 13
Ext_DACsOn      *       1 :SHL: 12
Ext_PedsOn      *       7 :SHL: 8
Ext_PedsShift   *       8
Ext_ERegShift   *       4
Ext_ECKOn       *       1 :SHL: 2
Ext_ERegBits    *       3 :SHL: 0
Ext_ERegRed     *       0 :SHL: 0
Ext_ERegGreen   *       1 :SHL: 0
Ext_ERegBlue    *       2 :SHL: 0
Ext_ERegExt     *       3 :SHL: 0       ; use this for lowest power

; Bits in Frequency Synthesizer Register

FSyn_VShift     *       8
FSyn_RShift     *       0
FSyn_ClearV     *       1 :SHL: 15
FSyn_ForceLow   *       1 :SHL: 14
FSyn_ClearR     *       1 :SHL: 7
FSyn_ForceHigh  *       1 :SHL: 6

FSyn_ResetValue *       FSyn_ClearV :OR: FSyn_ClearR :OR: FSyn_ForceLow :OR: (63 :SHL: FSyn_RShift) :OR: (0 :SHL: FSyn_VShift)           ; value to get PLL working properly

; Bits in Control Register

CR_DualPanel    *       1 :SHL: 13
CR_Interlace    *       1 :SHL: 12
CR_FIFOLoadShift *      8
CR_LBPP0        *       0 :SHL: 5
CR_LBPP1        *       1 :SHL: 5
CR_LBPP2        *       2 :SHL: 5
CR_LBPP3        *       3 :SHL: 5
CR_LBPP4        *       4 :SHL: 5
CR_LBPP5        *       6 :SHL: 5 ; spot the gap!
CR_PixelDivShift *      2
CR_VCLK         *       0 :SHL: 0
CR_HCLK         *       1 :SHL: 0
CR_RCLK         *       2 :SHL: 0

; Bits in Data Control Register

DCR_VRAMOff     *       0 :SHL: 18
DCR_VRAMDiv1    *       1 :SHL: 18
DCR_VRAMDiv2    *       2 :SHL: 18
DCR_VRAMDiv4    *       3 :SHL: 18
DCR_BusBits     *       3 :SHL: 16
DCR_Bus31_0     *       1 :SHL: 16
DCR_Bus63_32    *       2 :SHL: 16
DCR_Bus63_0     *       3 :SHL: 16
DCR_HDis        *       1 :SHL: 13
DCR_Sync        *       1 :SHL: 12
DCR_HDWRShift   *       0

; -----------------------------------------------------------------------------------

; mjs - this had better agree with the format specified in kernel s.vdu.vdumodes

;
; format of a VIDC list type 3
;
                                ^       4
VIDCList3_PixelDepth            #       4
VIDCList3_HorizSyncWidth        #       4
VIDCList3_HorizBackPorch        #       4
VIDCList3_HorizLeftBorder       #       4
VIDCList3_HorizDisplaySize      #       4
VIDCList3_HorizRightBorder      #       4
VIDCList3_HorizFrontPorch       #       4
VIDCList3_VertiSyncWidth        #       4
VIDCList3_VertiBackPorch        #       4
VIDCList3_VertiTopBorder        #       4
VIDCList3_VertiDisplaySize      #       4
VIDCList3_VertiBottomBorder     #       4
VIDCList3_VertiFrontPorch       #       4
VIDCList3_PixelRate             #       4
VIDCList3_SyncPol               #       4  ; sync polarity/flag bits
VIDCList3_ControlList           #       0  ; possibly empty list of pairs of index,value words
;
; and VIDCList3 is terminated by a -1 word
;
; Indices in VIDCList3_ControlList
;
                                ^       1
ControlList_LCDMode             #       1
ControlList_LCDDualPanelMode    #       1
ControlList_LCDOffset0          #       1
ControlList_LCDOffset1          #       1
ControlList_HiResMode           #       1
ControlList_DACControl          #       1
ControlList_RGBPedestals        #       1
ControlList_ExternalRegister    #       1
ControlList_HClockSelect        #       1
ControlList_RClockFrequency     #       1
ControlList_DPMSState           #       1
ControlList_Interlaced          #       1
ControlList_InvalidReason       #       0

; bits/flags in VIDCList3_SyncPol word:
;
SyncPol_InvertHSync        *  1
SyncPol_InvertVSync        *  2
SyncPol_InterlaceSpecified *  4   ; if set, interlace bit has been specified, else filled in by kernel
SyncPol_Interlace          *  8   ; set=interlaced, either specified by service call claimant or filled in from *TV by kernel

; -----------------------------------------------------------------------------------

       END
@

