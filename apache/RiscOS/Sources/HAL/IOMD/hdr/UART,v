head	1.1;
access;
symbols
	IOMD-0_36:1.1
	SMP:1.1.0.2
	SMP_bp:1.1
	IOMD-0_35:1.1
	IOMD-0_34:1.1
	IOMD-0_33:1.1
	IOMD-0_32:1.1
	IOMD-0_31:1.1
	IOMD-0_30:1.1
	IOMD-0_29:1.1
	IOMD-0_28:1.1
	IOMD-0_27:1.1
	IOMD-0_26:1.1
	IOMD-0_25:1.1
	IOMD-0_24:1.1
	IOMD-0_23:1.1
	IOMD-0_22:1.1
	IOMD-0_20:1.1
	IOMD-0_19:1.1
	IOMD-0_18:1.1
	IOMD-0_17:1.1
	IOMD-0_16:1.1
	IOMD-0_15:1.1
	IOMD-0_14:1.1
	IOMD-0_13:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.06.19.23.38.28;	author jlee;	state Exp;
branches;
next	;
commitid	bSrBAroyIB3Jin9w;


desc
@@


1.1
log
@Add debugging code. Fix detection of RAM in bank 3.
Detail:
  hdr/Debug, hdr/UART, s/Boot, s/Debug, Makefile - Added HAL_DebugTX/HAL_DebugRX implementations, and assorted functions/macros for getting pre-MMU debug output from the HAL. Use Debug switch in hdr/Debug to turn debugging on/off (currently off by default).
  s/Top - Added lots of debug output to help track down RAM detection/configuration issues. Fixed RAM detection result for bank 3 being overwritten with result for bank 2 in NoRelocate.
Admin:
  Tested under RPCEmu & StrongARM softload
  Warning - RPCEmu doesn't emulate the serial line status register. This means debug builds will hang on startup.


Version 0.13. Tagged as 'IOMD-0_13'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; UART registers as offsets from C710 base

UART_THR        *       (&000+&3f8)*4
UART_RBR        *       (&000+&3f8)*4
UART_IER        *       (&001+&3f8)*4
UART_IIR        *       (&002+&3f8)*4
UART_FCR        *       (&002+&3f8)*4
UART_LCR        *       (&003+&3f8)*4
UART_MCR        *       (&004+&3f8)*4
UART_LSR        *       (&005+&3f8)*4
UART_MSR        *       (&006+&3f8)*4
UART_SCR        *       (&007+&3f8)*4

UART_DLL        *       (&000+&3f8)*4
UART_DLM        *       (&001+&3f8)*4

; IER
ERBI            *       2_00000001
ETBEI           *       2_00000010
ELSI            *       2_00000100
EDSSI           *       2_00001000

; FCR
FIFOEN          *       2_00000001
FIFORSTRX       *       2_00000010
FIFORSTTX       *       2_00000100
FIFOTHR         *       2_11000000
FIFOTHR_1       *       2_00000000
FIFOTHR_4       *       2_01000000
FIFOTHR_8       *       2_10000000
FIFOTHR_14      *       2_11000000

; LCR
WLS             *       2_00000011
WLS_5           *       2_00000000
WLS_6           *       2_00000001
WLS_7           *       2_00000010
WLS_8           *       2_00000011
STP             *       2_00000100
PEN             *       2_00001000
EPS             *       2_00010000
SPA             *       2_00100000
BCR             *       2_01000000
DLAB            *       2_10000000

; LSR
DR              *       2_00000001
OE              *       2_00000010
PE              *       2_00000100
FE              *       2_00001000
BI              *       2_00010000
THRE            *       2_00100000
TEMPT           *       2_01000000

; MCR
DTR             *       2_00000001
RTS             *       2_00000010
OUT2            *       2_00001000

; MSR
DCTS            *       2_00000001
DDSR            *       2_00000010
TERI            *       2_00000100
DDCD            *       2_00001000
CTS             *       2_00010000
DSR             *       2_00100000
RI              *       2_01000000
DCD             *       2_10000000

                END
@
