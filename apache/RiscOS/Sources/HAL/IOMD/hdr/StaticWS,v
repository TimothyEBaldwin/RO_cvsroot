head	1.16;
access;
symbols
	IOMD-0_36:1.16
	SMP:1.15.0.2
	SMP_bp:1.15
	IOMD-0_35:1.15
	IOMD-0_34:1.15
	IOMD-0_33:1.14
	IOMD-0_32:1.14
	IOMD-0_31:1.13
	IOMD-0_30:1.13
	IOMD-0_29:1.13
	IOMD-0_28:1.12
	IOMD-0_27:1.11
	IOMD-0_26:1.11
	IOMD-0_25:1.11
	IOMD-0_24:1.10
	IOMD-0_23:1.10
	IOMD-0_22:1.9
	IOMD-0_20:1.9
	IOMD-0_19:1.9
	IOMD-0_18:1.9
	IOMD-0_17:1.9
	IOMD-0_16:1.8
	IOMD-0_15:1.7
	IOMD-0_14:1.7
	IOMD-0_13:1.7
	IOMD-0_12:1.7
	IOMD-0_11:1.6
	IOMD-0_10:1.5
	IOMD-0_09:1.5
	IOMD-0_08:1.4
	IOMD-0_07:1.3
	IOMD-0_06:1.3
	IOMD-0_05:1.3
	IOMD-0_04:1.3
	IOMD-0_03:1.3
	IOMD-0_02:1.3
	HAL_merge:1.1.2.4
	IOMD-0_01:1.2
	Kernel-5_35-4_79_2_59:1.1.2.4
	Kernel-5_35-4_79_2_58:1.1.2.4
	Kernel-5_35-4_79_2_57:1.1.2.4
	Kernel-5_35-4_79_2_56:1.1.2.4
	Kernel-5_35-4_79_2_55:1.1.2.4
	Kernel-5_35-4_79_2_54:1.1.2.4
	Kernel-5_35-4_79_2_53:1.1.2.4
	Kernel-5_35-4_79_2_52:1.1.2.4
	Kernel-5_35-4_79_2_51:1.1.2.4
	Kernel-5_35-4_79_2_50:1.1.2.4
	Kernel-5_35-4_79_2_49:1.1.2.4
	Kernel-5_35-4_79_2_48:1.1.2.4
	Kernel-5_35-4_79_2_47:1.1.2.4
	Kernel-5_35-4_79_2_46:1.1.2.4
	Kernel-5_35-4_79_2_45:1.1.2.4
	Kernel-5_35-4_79_2_44:1.1.2.4
	MSI_Demo_merge:1.1.2.4
	Kernel-5_35-4_79_2_25_2_2:1.1.2.4
	Kernel-5_35-4_79_2_43:1.1.2.4
	Kernel-5_35-4_79_2_42:1.1.2.4
	Kernel-5_35-4_79_2_41:1.1.2.4
	Kernel-5_35-4_79_2_40:1.1.2.4
	Kernel-5_35-4_79_2_39:1.1.2.4
	Kernel-5_35-4_79_2_38:1.1.2.4
	Kernel-5_35-4_79_2_37:1.1.2.4
	Kernel-5_35-4_79_2_36:1.1.2.4
	Kernel-5_35-4_79_2_35:1.1.2.4
	Kernel-5_35-4_79_2_34:1.1.2.4
	Kernel-5_35-4_79_2_33:1.1.2.4
	Kernel-5_35-4_79_2_32:1.1.2.4
	Kernel-5_35-4_79_2_25_2_1:1.1.2.4
	MSI_Demo:1.1.2.4.0.2
	Kernel-5_35-4_79_2_31:1.1.2.4
	Kernel-5_35-4_79_2_30:1.1.2.4
	Kernel-5_35-4_79_2_29:1.1.2.4
	Kernel-5_35-4_79_2_28:1.1.2.4
	Kernel-5_35-4_79_2_27:1.1.2.4
	Kernel-5_35-4_79_2_26:1.1.2.4
	Kernel-5_35-4_79_2_25:1.1.2.4
	Kernel-5_35-4_79_2_24:1.1.2.4
	Kernel-5_35-4_79_2_23:1.1.2.4
	Kernel-5_35-4_79_2_22:1.1.2.4
	Kernel-5_35-4_79_2_21:1.1.2.4
	Kernel-5_35-4_79_2_20:1.1.2.4
	Kernel-5_35-4_79_2_19:1.1.2.4
	Kernel-5_35-4_79_2_18:1.1.2.4
	Kernel-5_35-4_79_2_17:1.1.2.4
	Kernel-5_35-4_79_2_16:1.1.2.4
	Kernel-5_35-4_79_2_15:1.1.2.4
	Kernel-5_35-4_79_2_14:1.1.2.4
	Kernel-5_35-4_79_2_13:1.1.2.4
	Kernel-5_35-4_79_2_12:1.1.2.4
	Kernel-5_35-4_79_2_11:1.1.2.4
	Kernel-5_35-4_79_2_10:1.1.2.4
	Kernel-5_35-4_79_2_9:1.1.2.4
	Kernel-5_35-4_79_2_8:1.1.2.3
	Kernel-5_35-4_79_2_7:1.1.2.2
	Kernel-5_35-4_79_2_6:1.1.2.2
	Kernel-5_35-4_79_2_5:1.1.2.2
	Kernel-5_35-4_79_2_4:1.1.2.1
	Kernel-5_35-4_79_2_3:1.1.2.1
	Kernel-5_35-4_79_2_2:1.1.2.1
	HAL:1.1.0.2;
locks; strict;
comment	@# @;


1.16
date	2017.09.09.10.40.57;	author rool;	state Exp;
branches;
next	1.15;
commitid	dKxxNzzikYuxFv6A;

1.15
date	2016.01.05.21.52.57;	author rsprowson;	state Exp;
branches;
next	1.14;
commitid	ivRNyzwriH1I5NPy;

1.14
date	2014.10.07.07.25.07;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	6z0LCoFhcaULUeTx;

1.13
date	2013.10.28.22.28.53;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	MrM5i56lHItnY6bx;

1.12
date	2013.05.26.16.59.53;	author rsprowson;	state Exp;
branches;
next	1.11;
commitid	GMODlInzBrXp8aRw;

1.11
date	2013.03.28.21.48.41;	author jlee;	state Exp;
branches;
next	1.10;
commitid	4NAwCJkLkDe3DBJw;

1.10
date	2013.02.02.09.12.22;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	MY6QD1zOoCvdbBCw;

1.9
date	2012.07.09.07.32.07;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	5eSZam1l3tbmjRbw;

1.8
date	2012.07.04.18.18.59;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	nTJOJt9IePDd3hbw;

1.7
date	2012.06.09.11.29.45;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	QBFdo1jqgrSEA18w;

1.6
date	2012.02.25.17.16.34;	author jlee;	state Exp;
branches;
next	1.5;
commitid	Dn81wPJ3GobPSyUv;

1.5
date	2011.06.25.22.20.21;	author jlee;	state Exp;
branches;
next	1.4;
commitid	FZ1UGujZgGLmr6pv;

1.4
date	2011.06.22.00.56.11;	author jlee;	state Exp;
branches;
next	1.3;
commitid	udJTrSwtAzLNqBov;

1.3
date	2008.12.22.01.41.44;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.22.00.15.15;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.02.08.52.19;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.10.02.08.52.19;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2000.10.05.13.54.48;	author kbracey;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2000.10.05.16.37.33;	author mstephen;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2000.10.09.15.59.15;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Participate in keyboard scan dependencies
Detail:
  Replace keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Delete unused workspace.
Admin:
  Submission for USB bounty.

Version 0.36. Tagged as 'IOMD-0_36'
@
text
@; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
 
        MACRO
        CallOS  $entry, $tailcall
        ASSERT  $entry <= HighestOSEntry
 [ "$tailcall"=""
        MOV     lr, pc
 |
   [ "$tailcall"<>"tailcall"
        ! 0, "Unrecognised parameter to CallOS"
   ]
 ]
        LDR     pc, OSentries + 4*$entry
        MEND

sb                      RN 9

                        ^  0,sb
; workspace                        
OSheader                #  4
OSentries               #  4*(HighestOSEntry+1)
IO_Address              #  4
IOMD_Address            #  4
VIDC_Address            #  4
EASI_Address            #  4
C710_Address            #  4
Gemini_Address          #  4
TimerPeriods            #  4*2
HardROMAmount           #  4
IOCRSoftCopy            #  1
IOSystemType            #  1
IOST_Medusa             *  0
IOST_7500               *  1
IsKinetic               #  1
                        #  1

; workspace for RTC
RTCDeviceStruct         #  80

; workspace for video functions
VideoDevice             #  68
VRAMWidth               #  1
CLine_Softcopy          #  1   ; IOMD_CLINES soft copy
VIDCIsAsleep            #  1
                        #  1

; workspace for DMA controller
DMACDeviceStruct        #  (80+4)*1     ; (DMAC + 1 private) * 1 controller
DMABChannelPtrs         #  4*6          ; 6 pointers
DMABChannelStructs      #  (112+16)*6   ; (DMAB + 4 private) * 6 channels

; workspace for IDE controller
IDEDeviceStruct         #  76+4

HAL_WsSize              *  :INDEX:@@

        END
@


1.15
log
@Declare the presence of an IDE controller
ATA.s:
  Refactor to report a PATA IDE controller. Delete lots of junk left over from copying this from the Tungsten HAL.
Boot.s:
  Init the ATA device.
  Report a HAL platform name string for OS_ReadSysInfo 9,7.
Tested on a Risc PC.

Version 0.34. Tagged as 'IOMD-0_34'
@
text
@a64 8
; workspace for keyboard scan
KbdFlags                #  4
KbdKeyNumTable          #  4
KbdCountDown            #  4
KbdPort2Present         #  1
KbdPresentFlags         #  1
                        #  2

@


1.14
log
@Extend HAL_ControllerAddress to report where the Gemini ASIC is
Useful for a future 32 bit PC card, or similar coprocessor plugins.

Version 0.32. Tagged as 'IOMD-0_32'
@
text
@d73 3
@


1.13
log
@Add RTC device
HAL RTC device added after probing IIC address &A0.
Moved CallOS macro into a header.

Version 0.29. Tagged as 'IOMD-0_29'
@
text
@d40 1
@


1.12
log
@Run boot time keyboard scan in parallel with RAM clear
Previously the RAM clear would take place (in the kernel startup) then 5s of waiting for the keyboard would occur.
Now, if a keypress is detected the scan is terminated early, or if 2s has elapsed (allowing for the keyboard's POST plus a typematic repeat plus a bit of slack).
This way, if your RAM clear takes 2s or more the boot process is 5s faster.
Tested on a Risc PC with 128MB of RAM.

Version 0.28. Tagged as 'IOMD-0_28'
@
text
@d15 14
d49 3
d74 1
a74 1
                END
@


1.11
log
@Add Kinetic support
Detail:
  hdr/IOMD - Add definitions for the interesting bits of the Kinetic memory map
  hdr/StaticWS - Add an extra flag to workspace for whether we're running on a Kinetic
  s/Top - Add debug options for ignoring DRAM & ignoring the Kinetic card. Update startup code to add Kinetic card + SDRAM detection. Current code makes no attempt to configure the SDRAM timings and assumes the correct settings have been set via the DIP switches.
  s/Boot - Update HAL_CleanerSpace, HAL_PhysInfo & HAL_InitDevices to cope with running on a Kinetic.
  s/Post - Update POST routine register usage. Add experimental (disabled) code to not count a "SDRAM+VRAM but no DRAM" situation as a POST failure. The OS will boot in that configuration, but lack of DMA capable memory is troublesome.
  s/ATA - Adjust the flags returned by HAL_ATAControllerInfo to match the comments. Although the old flags were technically wrong, this had no effect on function as the lack of DMA support meant they were never acted on by ADFS.
Admin:
  Tested in ROM softload on Kinetic RiscPC, and in RPCEmu
  Note that if a Kinetic card is fitted, the IOMD DMA HAL devices won't be registered with the OS, as DMAManager isn't yet ready to cope with the possibility of DMA-incapable memory.


Version 0.25. Tagged as 'IOMD-0_25'
@
text
@d49 3
a51 2
KeyDataPtr              #  4
Port2Present            #  1
@


1.10
log
@Add HAL device for IOMD's DMA controller
Tested with simple DMA test podule 8067660000012 rev 0.10 and DMAManager 0.20.

Version 0.23. Tagged as 'IOMD-0_23'
@
text
@d32 2
a33 1
                        #  2
@


1.9
log
@Added autodetection of ROM size
New function Count_Hard_ROM looks with the MMU off at how big the ROM chip is (because both softloaded and compressed ROMs might be smaller or larger than the chips themselves).
Adopt revised HAL_PhysInfo API.
Removed pointless setting of ECTCR since the podule manager does that itself anyway.
Last two NullEntry in the entry point table trimmed.
Tested on RPCEmu (which emulates 8MB of ROM) and a Risc PC (with 4MB ROM).

Version 0.17. Tagged as 'IOMD-0_17'
@
text
@d41 5
d51 1
a51 1
                        #  3
@


1.8
log
@Add HAL device for VIDC20
Required by VIDC20Video to locate the controller and its info.
Moved the HAL video code out into a module.
Reordered the power on VIDC pokes to disable sound ASAP.
Added a header file to the 'cbits' for 1 less warning.
Used IOMDPhys where we mean its physical address, and IOMD_Base where offsets are being referred to.
Set up "CLines" single GPIO bit as input (it's the only thing on port C on the A7000/A7000+.
Tested on RiscPC and RPCEmu.

Version 0.16. Tagged as 'IOMD-0_16'
@
text
@d27 1
@


1.7
log
@Fix to HAL_MachineID
In transplanting the unique id chip bit basher, the routine carefully preserves the (write only) IOControl register in IOMD, but unfortunately uses a softcopy of 0 since that's never set. Since the I2C startup happens first the ID line is low pretty quickly after startup, therefore the ID chip reset doesn't work (needs a H-L-H transition) and so no unique ID is retrieved.

hdr.StaticWS: define symbol for Medusa.
s.Boot: once some workspace is available, ensure the softcopy matches the hardware.
s.MachineID: trim out the CheckCRC function since the Kernel does this, allows the error exit to be a bit more simple too.
s.Top: improve commenting of startup sequence, and get some consistency on IOC/IOMD, since this doesn't run on IOC. Move the default podule setup into the common setup.

Inspected on a scope, pin 2 of the DS2401 wiggles appropriately and a valid looking MAC address is available from OS_ReadSysInfo 4.

Version 0.12. Tagged as 'IOMD-0_12'
@
text
@d15 1
a15 1
sb              RN      9
d17 15
a31 14
                ^       0,sb
OSheader        #       4
OSentries       #       4*(HighestOSEntry+1)
IO_Address      #       4
IOMD_Address    #       4
VIDC_Address    #       4
EASI_Address    #       4
C710_Address    #       4
TimerPeriods    #       4*2
IOCRSoftCopy    #       1
IOSystemType    #       1
IOST_Medusa     * 0
IOST_7500       * 1
                #       2
d34 5
a38 19
;
VRAMWidth               #    1
CLine_Softcopy          #    1   ; IOMD_CLINES soft copy
                        #    2
VIDC_NextPaletteIndex   #    4   ; last index used in setting normal palette entry
VIDC_SoftPalette0       #    4   ; soft copy of BBGGRRSS for normal palette entry 0
                                 ; (used to support ReadPaletteEntry)
VIDC_Interlace          #    4   ; flag from VIDCList3 SyncPol word
VIDC_VertiDisplaySize   #    4   ; we keep this for vertical pointer clipping
VIDC_PointerVAdjust     #    4   ; vertical adjust for pointer
VIDC_PointerHAdjust     #    4   ; horizontal adjust for pointer
VIDC_ExternalSoftCopy   #    4
VIDC_FSynSoftCopy       #    4
VIDC_ControlSoftCopy    #    4
VIDC_HSWRSoftCopy       #    4   ; horizontal sync width
VIDC_VSWRSoftCopy       #    4   ; vertical sync width
IOMD_VInitSoftCopy      #    4
IOMD_VEndSoftCopy       #    4
;
d41 5
a45 5
KbdFlags        #    4
KeyDataPtr      #    4
Port2Present    #    1
KbdPresentFlags #    1
                #    3
d47 1
a47 1
HAL_WsSize      *       :INDEX:@@
@


1.6
log
@Rewrite Makefile & RAM setup code. Remove/tidy other scripts. Add support for compressed ROMs, keyboard scan, HAL_Reset, HAL_MonitorLeadID and HAL_PhysInfo.
Detail:
  Makefile, MkClean,fd7, MkRom,fd7 - Rewritten
  CopyIt,feb, CopyIt2,feb, CopyItKB,feb, GlueIt,feb, aif, bin, gpa, o - Deleted obsolete files/folders
  s/Boot, s/Top - Moved image entry point from s/Boot to s/Top, to match other HALs. Rewritten RAM setup code to avoid poking dangerous registers during softloads, and to hopefully fix problems people have been having with some memory configurations.
  c/cbits - C code for use during RAM initialisation. Examines the detected RAM banks to work out the optimal physical RAM layout and where to relocate the ROM image, taking into account any ROM compression.
  s/ATA - Convert tabs to spaces for consistency. Fix conditional MOV pc,lr in HAL_ATACableID.
  s/Boot - Added HAL_PhysInfo implementation, based around pre-HAL kernel code. Added HAL_Reset implementation, using similar code to the softload tool to disable the MMU and restart the ROM. Convert tabs to spaces for consistency.
  s/Video, hdr/StaticWS - Added HAL_MonitorLeadID implementation, based around pre-HAL kernel code. Retab Video_init.
  s/KbdScan, hdr/StaticWS - Added HAL_KbdScan_* implementation, based around pre-HAL kernel code.
  s/NVRAM - Convert tabs to spaces for consistency
  hdr/Copro15ops - ARMv3/v4 cache/TLB macros for use during HAL_Reset
  hdr/IOMD - New header to pull together all the physical memory map definitions
Admin:
  Tested in IOMD ROM softload on RiscPC, plus as 'real' ROM under RPCEmu
  New RAM setup code may be a bit buggy still


Version 0.11. Tagged as 'IOMD-0_11'
@
text
@d28 2
a29 1
IOST_7500 * 1
@


1.5
log
@Fix HAL_CleanerSpace. Improve HAL_PlatformInfo.
Detail:
  hdr/StaticWS, s/Boot - Fixed HAL_CleanerSpace implementation to return the physical address of the cleaner area instead of the logical address
  s/Boot - Improve HAL_PlatformInfo to provide an indication of whether the OS is running from RAM or ROM
Admin:
  Tested in ROM softload on RiscPC


Version 0.09. Tagged as 'IOMD-0_09'
@
text
@d34 2
a35 1
                        #    3
d52 7
@


1.4
log
@IOMD HAL improvements
Detail:
  Makefile - Specify link base address to fix any absolute address issues
  s/Boot - Add support for new HAL_ControllerAddress reason code to get the 82C710 address. Correct HAL_HardwareInfo. Make HAL_CleanerSpace return the address of ROM bank 1, as per pre-HAL kernel.
  hdr/StaticWS - New workspace entries for 82C710 & CleanerSpace addresses
Admin:
  Tested in ROM softload on RiscPC


Version 0.08. Tagged as 'IOMD-0_08'
@
text
@a24 1
CleanerSpace    #       4
@


1.3
log
@  Updating and development of the IOMD HAL.
Detail:
  * Resolved multiple declaration of HighestOSEntry
  * Extended IRQ code to modern HAL API
  * New FIQ code, partially copied from Tungsten HAL
  * Added HAL_PlatformInfo and HAL_NVMemoryPageSize, both additional
    requirements of recent kernels
  * Default hard-coded screen mode changed to VGA timings - few modern monitors
    will sync down to the old TV rate modes
  * RAM map hard-coded to match the A7000 I'm using for development
    (previously was hard-coded for a 2MB VRAM + 16 MB DRAM Risc PC -
    ultimately, we need to merge in the autodetection code from non-HAL kernels)
  * Video DMA width tweaked so it works on non-VRAM machines (again this should
    be autodetected)
Admin:
  Known issues include: OS_Reset and hardware scrolling don't work
                        CMOS appears to be reset on every boot
  Work in progress

Version 0.02. Tagged as 'IOMD-0_02'
@
text
@d24 2
@


1.2
log
@Merged IOMD HAL to trunk.

Version 0.01. Tagged as 'IOMD-0_01'
@
text
@a16 2
HighestOSEntry  *       OS_MapInIO

@


1.1
log
@file StaticWS was initially added on branch HAL.
@
text
@d1 54
@


1.1.2.1
log
@More HAL work. IOMD HAL work in progress. Lots of my own little build
scripts. Don't touch this.

Version 5.35, 4.79.2.2. Tagged as 'Kernel-5_35-4_79_2_2'
@
text
@a0 29
; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
sb              RN      9

HighestOSEntry  *       OS_MapInIO

                ^       0,sb
OSheader        #       4
OSentries       #       4*(HighestOSEntry+1)
IOa             #       4
IOMDa           #       4
VIDCa           #       4
IOCRSoftCopy    #       1

HAL_WsSize      *       :INDEX:@@

                END
@


1.1.2.2
log
@More HAL work. IOMD HAL fleshed out somewhat - system gets most of the way
through initialisation.

Version 5.35, 4.79.2.5. Tagged as 'Kernel-5_35-4_79_2_5'
@
text
@a24 1
TimerPeriods    #       4*2
@


1.1.2.3
log
@first attemp at mjs video code in real HAL
@
text
@d22 3
a24 3
IO_Address      #       4
IOMD_Address    #       4
VIDC_Address    #       4
a26 23
IOSystemType    #       1
IOST_7500 * 1
                #       2

; workspace for video functions
;
VRAMWidth               #    1
                        #    3
VIDC_NextPaletteIndex   #    4   ; last index used in setting normal palette entry
VIDC_SoftPalette0       #    4   ; soft copy of BBGGRRSS for normal palette entry 0
                                 ; (used to support ReadPaletteEntry)
VIDC_Interlace          #    4   ; flag from VIDCList3 SyncPol word
VIDC_VertiDisplaySize   #    4   ; we keep this for vertical pointer clipping
VIDC_PointerVAdjust     #    4   ; vertical adjust for pointer
VIDC_PointerHAdjust     #    4   ; horizontal adjust for pointer
VIDC_ExternalSoftCopy   #    4
VIDC_FSynSoftCopy       #    4
VIDC_ControlSoftCopy    #    4
VIDC_HSWRSoftCopy       #    4   ; horizontal sync width
VIDC_VSWRSoftCopy       #    4   ; vertical sync width
IOMD_VInitSoftCopy      #    4
IOMD_VEndSoftCopy       #    4
;
@


1.1.2.4
log
@More L7200 HAL work
@
text
@a24 1
EASI_Address    #       4
@


