head	1.37;
access;
symbols
	IOMD-0_36:1.37
	SMP:1.36.0.2
	SMP_bp:1.36
	IOMD-0_35:1.36
	IOMD-0_34:1.35
	IOMD-0_33:1.34
	IOMD-0_32:1.33
	IOMD-0_31:1.32
	IOMD-0_30:1.31
	IOMD-0_29:1.30
	IOMD-0_28:1.29
	IOMD-0_27:1.28
	IOMD-0_26:1.27
	IOMD-0_25:1.26
	IOMD-0_24:1.25
	IOMD-0_23:1.24
	IOMD-0_22:1.23
	IOMD-0_20:1.21
	IOMD-0_19:1.20
	IOMD-0_18:1.19
	IOMD-0_17:1.18
	IOMD-0_16:1.17
	IOMD-0_15:1.16
	IOMD-0_14:1.15
	IOMD-0_13:1.14
	IOMD-0_12:1.13
	IOMD-0_11:1.12
	IOMD-0_10:1.11
	IOMD-0_09:1.10
	IOMD-0_08:1.9
	IOMD-0_07:1.8
	IOMD-0_06:1.7
	IOMD-0_05:1.6
	IOMD-0_04:1.5
	IOMD-0_03:1.4
	IOMD-0_02:1.3
	IOMD-0_01:1.2;
locks; strict;
comment	@# @;


1.37
date	2017.09.09.10.40.54;	author rool;	state Exp;
branches;
next	1.36;
commitid	dKxxNzzikYuxFv6A;

1.36
date	2016.11.29.20.27.26;	author rsprowson;	state Exp;
branches;
next	1.35;
commitid	Wx1fz688KFXJ24wz;

1.35
date	2016.01.05.21.52.52;	author rsprowson;	state Exp;
branches;
next	1.34;
commitid	ivRNyzwriH1I5NPy;

1.34
date	2014.12.06.09.09.29;	author rsprowson;	state Exp;
branches;
next	1.33;
commitid	D1h4LC2lMub1zX0y;

1.33
date	2014.10.07.07.25.04;	author rsprowson;	state Exp;
branches;
next	1.32;
commitid	6z0LCoFhcaULUeTx;

1.32
date	2014.09.17.07.52.36;	author rsprowson;	state Exp;
branches;
next	1.31;
commitid	upLdTLnDcT55IFQx;

1.31
date	2013.12.15.22.24.56;	author jlee;	state Exp;
branches;
next	1.30;
commitid	itxoCMPuM5Ynphhx;

1.30
date	2013.10.28.22.28.51;	author rsprowson;	state Exp;
branches;
next	1.29;
commitid	MrM5i56lHItnY6bx;

1.29
date	2013.05.26.16.59.51;	author rsprowson;	state Exp;
branches;
next	1.28;
commitid	GMODlInzBrXp8aRw;

1.28
date	2013.05.25.15.52.22;	author rsprowson;	state Exp;
branches;
next	1.27;
commitid	kwoJ5V6eAGLfN1Rw;

1.27
date	2013.04.21.19.51.35;	author rsprowson;	state Exp;
branches;
next	1.26;
commitid	8YOlwQ0mTgI4dGMw;

1.26
date	2013.03.28.21.48.35;	author jlee;	state Exp;
branches;
next	1.25;
commitid	4NAwCJkLkDe3DBJw;

1.25
date	2013.02.03.22.43.00;	author rsprowson;	state Exp;
branches;
next	1.24;
commitid	yButiU4P8gslDNCw;

1.24
date	2013.02.02.09.12.19;	author rsprowson;	state Exp;
branches;
next	1.23;
commitid	MY6QD1zOoCvdbBCw;

1.23
date	2013.01.22.23.32.40;	author jlee;	state Exp;
branches;
next	1.22;
commitid	scjHrR0sFnviigBw;

1.22
date	2013.01.12.10.40.59;	author rsprowson;	state Exp;
branches;
next	1.21;
commitid	ZzPrVbzkYwpulUzw;

1.21
date	2012.12.24.14.02.30;	author rsprowson;	state Exp;
branches;
next	1.20;
commitid	MJfUGj0f0YLt4uxw;

1.20
date	2012.10.20.18.14.19;	author rsprowson;	state Exp;
branches;
next	1.19;
commitid	z1ni8btRBpLpy9pw;

1.19
date	2012.07.15.12.07.27;	author rsprowson;	state Exp;
branches;
next	1.18;
commitid	th0BmFZji9LRDEcw;

1.18
date	2012.07.09.07.32.04;	author rsprowson;	state Exp;
branches;
next	1.17;
commitid	5eSZam1l3tbmjRbw;

1.17
date	2012.07.04.18.18.54;	author rsprowson;	state Exp;
branches;
next	1.16;
commitid	nTJOJt9IePDd3hbw;

1.16
date	2012.06.20.21.45.40;	author rsprowson;	state Exp;
branches;
next	1.15;
commitid	yHU33Si6svt3Eu9w;

1.15
date	2012.06.20.00.40.31;	author jlee;	state Exp;
branches;
next	1.14;
commitid	V4TfYa4ZA6i2En9w;

1.14
date	2012.06.19.23.38.25;	author jlee;	state Exp;
branches;
next	1.13;
commitid	bSrBAroyIB3Jin9w;

1.13
date	2012.06.09.11.29.42;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	QBFdo1jqgrSEA18w;

1.12
date	2012.02.25.17.16.20;	author jlee;	state Exp;
branches;
next	1.11;
commitid	Dn81wPJ3GobPSyUv;

1.11
date	2011.07.18.22.35.03;	author jlee;	state Exp;
branches;
next	1.10;
commitid	wVUi11YAueRAM3sv;

1.10
date	2011.06.25.22.20.17;	author jlee;	state Exp;
branches;
next	1.9;
commitid	FZ1UGujZgGLmr6pv;

1.9
date	2011.06.22.00.56.08;	author jlee;	state Exp;
branches;
next	1.8;
commitid	udJTrSwtAzLNqBov;

1.8
date	2010.12.02.20.28.02;	author bavison;	state Exp;
branches;
next	1.7;

1.7
date	2010.02.02.00.56.52;	author jlee;	state Exp;
branches;
next	1.6;

1.6
date	2010.02.01.22.29.41;	author jlee;	state Exp;
branches;
next	1.5;

1.5
date	2010.02.01.02.22.21;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2009.07.14.18.40.41;	author srevill;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.22.01.41.42;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.22.00.15.07;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.22.00.14.02;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.37
log
@Participate in keyboard scan dependencies
Detail:
  Replace keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Delete unused workspace.
Admin:
  Submission for USB bounty.

Version 0.36. Tagged as 'IOMD-0_36'
@
text
@/* (0.36)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.36
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                09 Sep 2017

#define Module_MajorVersion             "0.36"
#define Module_Version                  36
#define Module_MinorVersion             ""
#define Module_Date                     "09 Sep 2017"

#define Module_ApplicationDate          "09-Sep-17"

#define Module_ComponentName            "IOMD"
#define Module_ComponentPath            "castle/RiscOS/Sources/HAL/IOMD"

#define Module_FullVersion              "0.36"
#define Module_HelpVersion              "0.36 (09 Sep 2017)"
#define Module_LibraryVersionInfo       "0:36"
@


1.36
log
@Don't accept backspace-power-on
None of the other HALs equate backspace to delete-power-on, so don't bother scanning for it on IOMD either.

Version 0.35. Tagged as 'IOMD-0_35'
@
text
@d1 1
a1 1
/* (0.35)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.35
d9 1
a9 1
#define Module_Date_CMHG                29 Nov 2016
d11 2
a12 2
#define Module_MajorVersion             "0.35"
#define Module_Version                  35
d14 1
a14 1
#define Module_Date                     "29 Nov 2016"
d16 1
a16 1
#define Module_ApplicationDate          "29-Nov-16"
d21 3
a23 3
#define Module_FullVersion              "0.35"
#define Module_HelpVersion              "0.35 (29 Nov 2016)"
#define Module_LibraryVersionInfo       "0:35"
@


1.35
log
@Declare the presence of an IDE controller
ATA.s:
  Refactor to report a PATA IDE controller. Delete lots of junk left over from copying this from the Tungsten HAL.
Boot.s:
  Init the ATA device.
  Report a HAL platform name string for OS_ReadSysInfo 9,7.
Tested on a Risc PC.

Version 0.34. Tagged as 'IOMD-0_34'
@
text
@d1 1
a1 1
/* (0.34)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.34
d9 1
a9 1
#define Module_Date_CMHG                05 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "0.34"
#define Module_Version                  34
d14 1
a14 1
#define Module_Date                     "05 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "05-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "0.34"
#define Module_HelpVersion              "0.34 (05 Jan 2016)"
#define Module_LibraryVersionInfo       "0:34"
@


1.34
log
@Minor HAL API corrections
HAL_HardwareInfo - now adjusts word 2 depending on whether it's an A7000(+) or Risc PC.
HAL_PhysInfo - report the ROM range as an inclusive range for op 2, same as the RAM is for op 1.
Requires Kernel 4.79.2.248 to get the corresponding ROM range change.

Version 0.33. Tagged as 'IOMD-0_33'
@
text
@d1 1
a1 1
/* (0.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.33
d9 1
a9 1
#define Module_Date_CMHG                06 Dec 2014
d11 2
a12 2
#define Module_MajorVersion             "0.33"
#define Module_Version                  33
d14 1
a14 1
#define Module_Date                     "06 Dec 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-Dec-14"
d21 3
a23 3
#define Module_FullVersion              "0.33"
#define Module_HelpVersion              "0.33 (06 Dec 2014)"
#define Module_LibraryVersionInfo       "0:33"
@


1.33
log
@Extend HAL_ControllerAddress to report where the Gemini ASIC is
Useful for a future 32 bit PC card, or similar coprocessor plugins.

Version 0.32. Tagged as 'IOMD-0_32'
@
text
@d1 1
a1 1
/* (0.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.32
d9 1
a9 1
#define Module_Date_CMHG                07 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.32"
#define Module_Version                  32
d14 1
a14 1
#define Module_Date                     "07 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.32"
#define Module_HelpVersion              "0.32 (07 Oct 2014)"
#define Module_LibraryVersionInfo       "0:32"
@


1.32
log
@Fix for spurious "no keyboard, autobooting"
Constructing the IIC transfer miscalculated the block offset, zapping a word on the callers stack, manifesting itself as the above warning on each boot.
Tested with IOMD softload.

Version 0.31. Tagged as 'IOMD-0_31'
@
text
@d1 1
a1 1
/* (0.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.31
d9 1
a9 1
#define Module_Date_CMHG                17 Sep 2014
d11 2
a12 2
#define Module_MajorVersion             "0.31"
#define Module_Version                  31
d14 1
a14 1
#define Module_Date                     "17 Sep 2014"
d16 1
a16 1
#define Module_ApplicationDate          "17-Sep-14"
d21 3
a23 3
#define Module_FullVersion              "0.31"
#define Module_HelpVersion              "0.31 (17 Sep 2014)"
#define Module_LibraryVersionInfo       "0:31"
@


1.31
log
@Remove obsolte stub HAL video API implementation
Detail:
  s/Boot, s/Video - Removed obsolete HAL video API implementation. A stub implementation is no longer required for systems that have a GraphicsV driver in a module, and can even cause problems if the OS decides to use the HAL implementation instead of the module one.
Admin:
  Tested in IOMD ROM softload
  Requires Kernel-5_35-4_79_2_203


Version 0.30. Tagged as 'IOMD-0_30'
@
text
@d1 1
a1 1
/* (0.30)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.30
d9 1
a9 1
#define Module_Date_CMHG                15 Dec 2013
d11 2
a12 2
#define Module_MajorVersion             "0.30"
#define Module_Version                  30
d14 1
a14 1
#define Module_Date                     "15 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-13"
d21 3
a23 3
#define Module_FullVersion              "0.30"
#define Module_HelpVersion              "0.30 (15 Dec 2013)"
#define Module_LibraryVersionInfo       "0:30"
@


1.30
log
@Add RTC device
HAL RTC device added after probing IIC address &A0.
Moved CallOS macro into a header.

Version 0.29. Tagged as 'IOMD-0_29'
@
text
@d1 1
a1 1
/* (0.29)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.29
d9 1
a9 1
#define Module_Date_CMHG                28 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "0.29"
#define Module_Version                  29
d14 1
a14 1
#define Module_Date                     "28 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "28-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "0.29"
#define Module_HelpVersion              "0.29 (28 Oct 2013)"
#define Module_LibraryVersionInfo       "0:29"
@


1.29
log
@Run boot time keyboard scan in parallel with RAM clear
Previously the RAM clear would take place (in the kernel startup) then 5s of waiting for the keyboard would occur.
Now, if a keypress is detected the scan is terminated early, or if 2s has elapsed (allowing for the keyboard's POST plus a typematic repeat plus a bit of slack).
This way, if your RAM clear takes 2s or more the boot process is 5s faster.
Tested on a Risc PC with 128MB of RAM.

Version 0.28. Tagged as 'IOMD-0_28'
@
text
@d1 1
a1 1
/* (0.28)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.28
d9 1
a9 1
#define Module_Date_CMHG                26 May 2013
d11 2
a12 2
#define Module_MajorVersion             "0.28"
#define Module_Version                  28
d14 1
a14 1
#define Module_Date                     "26 May 2013"
d16 1
a16 1
#define Module_ApplicationDate          "26-May-13"
d21 3
a23 3
#define Module_FullVersion              "0.28"
#define Module_HelpVersion              "0.28 (26 May 2013)"
#define Module_LibraryVersionInfo       "0:28"
@


1.28
log
@Change to SDRAM probing for 256MB Kinetic
The RAM probing for Kinetic relied on the default row/column split which doesn't quite have enough address lines for 256MB SODIMMs.
Try probing each of the 3 supported row/column splits in descending order, stopping when either no RAM is found (it's not a Kinetic) or when the address lines have no holes, whichever is sooner.
Careful not to rearrange the memory when softloaded!
Tested with a 64MB, 128MB, 256MB SODIMM in both physical ROM and softload form.

Version 0.27. Tagged as 'IOMD-0_27'
@
text
@d1 1
a1 1
/* (0.27)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.27
d9 1
a9 1
#define Module_Date_CMHG                25 May 2013
d11 2
a12 2
#define Module_MajorVersion             "0.27"
#define Module_Version                  27
d14 1
a14 1
#define Module_Date                     "25 May 2013"
d16 1
a16 1
#define Module_ApplicationDate          "25-May-13"
d21 3
a23 3
#define Module_FullVersion              "0.27"
#define Module_HelpVersion              "0.27 (25 May 2013)"
#define Module_LibraryVersionInfo       "0:27"
@


1.27
log
@Fix for distorted audio output on A7k/A7k+
The VIDMUX register (which used to be poked in the Kernel) was not being set up, so the audio data was being sent to the DACs with an extra bit of phase shift between the data and the LRCLK - this resulted in lots of clipping.

Version 0.26. Tagged as 'IOMD-0_26'
@
text
@d1 1
a1 1
/* (0.26)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.26
d9 1
a9 1
#define Module_Date_CMHG                21 Apr 2013
d11 2
a12 2
#define Module_MajorVersion             "0.26"
#define Module_Version                  26
d14 1
a14 1
#define Module_Date                     "21 Apr 2013"
d16 1
a16 1
#define Module_ApplicationDate          "21-Apr-13"
d21 3
a23 3
#define Module_FullVersion              "0.26"
#define Module_HelpVersion              "0.26 (21 Apr 2013)"
#define Module_LibraryVersionInfo       "0:26"
@


1.26
log
@Add Kinetic support
Detail:
  hdr/IOMD - Add definitions for the interesting bits of the Kinetic memory map
  hdr/StaticWS - Add an extra flag to workspace for whether we're running on a Kinetic
  s/Top - Add debug options for ignoring DRAM & ignoring the Kinetic card. Update startup code to add Kinetic card + SDRAM detection. Current code makes no attempt to configure the SDRAM timings and assumes the correct settings have been set via the DIP switches.
  s/Boot - Update HAL_CleanerSpace, HAL_PhysInfo & HAL_InitDevices to cope with running on a Kinetic.
  s/Post - Update POST routine register usage. Add experimental (disabled) code to not count a "SDRAM+VRAM but no DRAM" situation as a POST failure. The OS will boot in that configuration, but lack of DMA capable memory is troublesome.
  s/ATA - Adjust the flags returned by HAL_ATAControllerInfo to match the comments. Although the old flags were technically wrong, this had no effect on function as the lack of DMA support meant they were never acted on by ADFS.
Admin:
  Tested in ROM softload on Kinetic RiscPC, and in RPCEmu
  Note that if a Kinetic card is fitted, the IOMD DMA HAL devices won't be registered with the OS, as DMAManager isn't yet ready to cope with the possibility of DMA-incapable memory.


Version 0.25. Tagged as 'IOMD-0_25'
@
text
@d1 1
a1 1
/* (0.25)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.25
d9 1
a9 1
#define Module_Date_CMHG                28 Mar 2013
d11 2
a12 2
#define Module_MajorVersion             "0.25"
#define Module_Version                  25
d14 1
a14 1
#define Module_Date                     "28 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "28-Mar-13"
d21 3
a23 3
#define Module_FullVersion              "0.25"
#define Module_HelpVersion              "0.25 (28 Mar 2013)"
#define Module_LibraryVersionInfo       "0:25"
@


1.25
log
@Fix HAL_IRQSource to sign extend 'NoInterrupt' return value
The tables of priorities are looked up with LDRB, so the NoInterrupt case returns 0xFF not -1, leading to a branch through zero in the kernel's IRQ despatch.
Interrupts.s: Reordered the priority tables to be in the same order as the IRQ status registers are inspected, saving a whole instruction, which is then used to do a final compare on r0. If only LDRSB were available...
IOMD21DMA.s: UAL syntax warning resolved

Version 0.24. Tagged as 'IOMD-0_24'
@
text
@d1 1
a1 1
/* (0.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.24
d9 1
a9 1
#define Module_Date_CMHG                03 Feb 2013
d11 2
a12 2
#define Module_MajorVersion             "0.24"
#define Module_Version                  24
d14 1
a14 1
#define Module_Date                     "03 Feb 2013"
d16 1
a16 1
#define Module_ApplicationDate          "03-Feb-13"
d21 3
a23 3
#define Module_FullVersion              "0.24"
#define Module_HelpVersion              "0.24 (03 Feb 2013)"
#define Module_LibraryVersionInfo       "0:24"
@


1.24
log
@Add HAL device for IOMD's DMA controller
Tested with simple DMA test podule 8067660000012 rev 0.10 and DMAManager 0.20.

Version 0.23. Tagged as 'IOMD-0_23'
@
text
@d1 1
a1 1
/* (0.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.23
d9 1
a9 1
#define Module_Date_CMHG                02 Feb 2013
d11 2
a12 2
#define Module_MajorVersion             "0.23"
#define Module_Version                  23
d14 1
a14 1
#define Module_Date                     "02 Feb 2013"
d16 1
a16 1
#define Module_ApplicationDate          "02-Feb-13"
d21 3
a23 3
#define Module_FullVersion              "0.23"
#define Module_HelpVersion              "0.23 (02 Feb 2013)"
#define Module_LibraryVersionInfo       "0:23"
@


1.23
log
@Implement HAL_IRQMax
Detail:
  s/Boot, s/Interrupts - Added HAL_IRQMax implementation, to ensure correct functionality with latest Kernel
Admin:
  Tested on SA RiscPC with IOMD softload
  Requires Kernel-5_35-4_79_2_182


Version 0.22. Tagged as 'IOMD-0_22'
@
text
@d1 1
a1 1
/* (0.22)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.22
d9 1
a9 1
#define Module_Date_CMHG                22 Jan 2013
d11 2
a12 2
#define Module_MajorVersion             "0.22"
#define Module_Version                  22
d14 1
a14 1
#define Module_Date                     "22 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jan-13"
d21 3
a23 3
#define Module_FullVersion              "0.22"
#define Module_HelpVersion              "0.22 (22 Jan 2013)"
#define Module_LibraryVersionInfo       "0:22"
@


1.22
log
@Correct the sense of the protection link LK5
Top.s: ORRNE -> ORREQ to match RISC OS 3.70 et al
KbdScan.s: Substitute a few of the constants to make it simpler to read
Tested on a Risc PC with and without protection enabled, compared with RISC OS 3.70 ROMs.

Version 0.21. Tagged as 'IOMD-0_21'
@
text
@d1 1
a1 1
/* (0.21)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.21
d9 1
a9 1
#define Module_Date_CMHG                12 Jan 2013
d11 2
a12 2
#define Module_MajorVersion             "0.21"
#define Module_Version                  21
d14 1
a14 1
#define Module_Date                     "12 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "12-Jan-13"
d21 3
a23 3
#define Module_FullVersion              "0.21"
#define Module_HelpVersion              "0.21 (12 Jan 2013)"
#define Module_LibraryVersionInfo       "0:21"
@


1.21
log
@Fix keyboard jamming when attempting to disable the unknown IRQ
Function HAL_IRQSource was returning 38 when a ghost interrupt occurred rather than -1 as documented.
When the kernel can't find anyone interesting in device number 38 (which doesn't exist on IOMD) it ends up at the NOIRQ handler which then calls HAL_DisableIRQ with that device number.
DevNoToRegAndBit then adds 2, divides by 8, and tries to pick up offset 5 from a table that only has entries 0-4 (so now has offset 0 from IOMD), then adds the difference between MSK & STA (8), which is unfortunately KBDCR.
The BIC operation then clears bit 0 of KBDCR which forces the PS/2 keyboard clock line and stops the keyboard working.

Tested with EtherB NIC running the IRQ line self test which sets and clears an interrupt with interrupts disabled.

Version 0.20. Tagged as 'IOMD-0_20'
@
text
@d1 1
a1 1
/* (0.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.20
d9 1
a9 1
#define Module_Date_CMHG                24 Dec 2012
d11 2
a12 2
#define Module_MajorVersion             "0.20"
#define Module_Version                  20
d14 1
a14 1
#define Module_Date                     "24 Dec 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-Dec-12"
d21 3
a23 3
#define Module_FullVersion              "0.20"
#define Module_HelpVersion              "0.20 (24 Dec 2012)"
#define Module_LibraryVersionInfo       "0:20"
@


1.20
log
@Fix to HAL_FIQEnable and HAL_FIQDisable
Interrupts.s
 A typo meant that any attempt to enable FIQs actually OR'd the mask register with the temporary PSR value. To add to the woes this PSR value has I32 and F32 set, which means the bit 7 (software generated FIQ) was getting enabled.
 The main use of FIQs on IOMD is ADFS, the result of this bug was that floppies immediately locked up the machine because the data pump routines could never clear the FIQ.
 Similar typo in HAL_FIQDisable.
Top.s
 Retire STB conditional.

Version 0.19. Tagged as 'IOMD-0_19'
@
text
@d1 1
a1 1
/* (0.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.19
d9 1
a9 1
#define Module_Date_CMHG                20 Oct 2012
d11 2
a12 2
#define Module_MajorVersion             "0.19"
#define Module_Version                  19
d14 1
a14 1
#define Module_Date                     "20 Oct 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-Oct-12"
d21 3
a23 3
#define Module_FullVersion              "0.19"
#define Module_HelpVersion              "0.19 (20 Oct 2012)"
#define Module_LibraryVersionInfo       "0:19"
@


1.19
log
@Addition of POST checking
Unlike some more recent targets, there are a lot of optional/removeable bits on IOMD platforms which may stop the machine booting, this checks for
* VRAM (non fatal if missing)
* RAM
* ROM checksum
* Video timing
* IOMD
in the event of a failure the fault code is flashed on the floppy drive LED (pattern decoder in TRM appendix A).

Video.s: the POST code highlighted that the VIDCTAB had the wrong VCO reference clock on Medusa - this is now corrected for a 60Hz mode.
IOMD.hdr: share the address line bits
Tested on Risc PC + A7000, the timing emulation is not accurate enough on RPCEmu, so POST is skipped under emulation.

Version 0.18. Tagged as 'IOMD-0_18'
@
text
@d1 1
a1 1
/* (0.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.18
d9 1
a9 1
#define Module_Date_CMHG                15 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.18"
#define Module_Version                  18
d14 1
a14 1
#define Module_Date                     "15 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.18"
#define Module_HelpVersion              "0.18 (15 Jul 2012)"
#define Module_LibraryVersionInfo       "0:18"
@


1.18
log
@Added autodetection of ROM size
New function Count_Hard_ROM looks with the MMU off at how big the ROM chip is (because both softloaded and compressed ROMs might be smaller or larger than the chips themselves).
Adopt revised HAL_PhysInfo API.
Removed pointless setting of ECTCR since the podule manager does that itself anyway.
Last two NullEntry in the entry point table trimmed.
Tested on RPCEmu (which emulates 8MB of ROM) and a Risc PC (with 4MB ROM).

Version 0.17. Tagged as 'IOMD-0_17'
@
text
@d1 1
a1 1
/* (0.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.17
d9 1
a9 1
#define Module_Date_CMHG                09 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.17"
#define Module_Version                  17
d14 1
a14 1
#define Module_Date                     "09 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.17"
#define Module_HelpVersion              "0.17 (09 Jul 2012)"
#define Module_LibraryVersionInfo       "0:17"
@


1.17
log
@Add HAL device for VIDC20
Required by VIDC20Video to locate the controller and its info.
Moved the HAL video code out into a module.
Reordered the power on VIDC pokes to disable sound ASAP.
Added a header file to the 'cbits' for 1 less warning.
Used IOMDPhys where we mean its physical address, and IOMD_Base where offsets are being referred to.
Set up "CLines" single GPIO bit as input (it's the only thing on port C on the A7000/A7000+.
Tested on RiscPC and RPCEmu.

Version 0.16. Tagged as 'IOMD-0_16'
@
text
@d1 1
a1 1
/* (0.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.16
d9 1
a9 1
#define Module_Date_CMHG                04 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.16"
#define Module_Version                  16
d14 1
a14 1
#define Module_Date                     "04 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (04 Jul 2012)"
#define Module_LibraryVersionInfo       "0:16"
@


1.16
log
@Add carriage return to debug strings
To match the kernel's use of DebugHALPrint so TeraTerm doesn't get confused.

Version 0.15. Tagged as 'IOMD-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d9 1
a9 1
#define Module_Date_CMHG                20 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d14 1
a14 1
#define Module_Date                     "20 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (20 Jun 2012)"
#define Module_LibraryVersionInfo       "0:15"
@


1.15
log
@Fix detection of multiple DRAM banks when debugging enabled
Detail:
  s/Top - The debug output at the end of Add_DRAM_bank was corrupting R0, causing any banks after the 1st occupied one to fail detection
Admin:
  Tested in ROM softload on StrongARM RiscPC


Version 0.14. Tagged as 'IOMD-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (20 Jun 2012)"
#define Module_LibraryVersionInfo       "0:14"
@


1.14
log
@Add debugging code. Fix detection of RAM in bank 3.
Detail:
  hdr/Debug, hdr/UART, s/Boot, s/Debug, Makefile - Added HAL_DebugTX/HAL_DebugRX implementations, and assorted functions/macros for getting pre-MMU debug output from the HAL. Use Debug switch in hdr/Debug to turn debugging on/off (currently off by default).
  s/Top - Added lots of debug output to help track down RAM detection/configuration issues. Fixed RAM detection result for bank 3 being overwritten with result for bank 2 in NoRelocate.
Admin:
  Tested under RPCEmu & StrongARM softload
  Warning - RPCEmu doesn't emulate the serial line status register. This means debug builds will hang on startup.


Version 0.13. Tagged as 'IOMD-0_13'
@
text
@d1 1
a1 1
/* (0.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.13
d11 2
a12 2
#define Module_MajorVersion             "0.13"
#define Module_Version                  13
d21 3
a23 3
#define Module_FullVersion              "0.13"
#define Module_HelpVersion              "0.13 (20 Jun 2012)"
#define Module_LibraryVersionInfo       "0:13"
@


1.13
log
@Fix to HAL_MachineID
In transplanting the unique id chip bit basher, the routine carefully preserves the (write only) IOControl register in IOMD, but unfortunately uses a softcopy of 0 since that's never set. Since the I2C startup happens first the ID line is low pretty quickly after startup, therefore the ID chip reset doesn't work (needs a H-L-H transition) and so no unique ID is retrieved.

hdr.StaticWS: define symbol for Medusa.
s.Boot: once some workspace is available, ensure the softcopy matches the hardware.
s.MachineID: trim out the CheckCRC function since the Kernel does this, allows the error exit to be a bit more simple too.
s.Top: improve commenting of startup sequence, and get some consistency on IOC/IOMD, since this doesn't run on IOC. Move the default podule setup into the common setup.

Inspected on a scope, pin 2 of the DS2401 wiggles appropriately and a valid looking MAC address is available from OS_ReadSysInfo 4.

Version 0.12. Tagged as 'IOMD-0_12'
@
text
@d1 1
a1 1
/* (0.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.12
d9 1
a9 1
#define Module_Date_CMHG                09 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.12"
#define Module_Version                  12
d14 1
a14 1
#define Module_Date                     "09 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.12"
#define Module_HelpVersion              "0.12 (09 Jun 2012)"
#define Module_LibraryVersionInfo       "0:12"
@


1.12
log
@Rewrite Makefile & RAM setup code. Remove/tidy other scripts. Add support for compressed ROMs, keyboard scan, HAL_Reset, HAL_MonitorLeadID and HAL_PhysInfo.
Detail:
  Makefile, MkClean,fd7, MkRom,fd7 - Rewritten
  CopyIt,feb, CopyIt2,feb, CopyItKB,feb, GlueIt,feb, aif, bin, gpa, o - Deleted obsolete files/folders
  s/Boot, s/Top - Moved image entry point from s/Boot to s/Top, to match other HALs. Rewritten RAM setup code to avoid poking dangerous registers during softloads, and to hopefully fix problems people have been having with some memory configurations.
  c/cbits - C code for use during RAM initialisation. Examines the detected RAM banks to work out the optimal physical RAM layout and where to relocate the ROM image, taking into account any ROM compression.
  s/ATA - Convert tabs to spaces for consistency. Fix conditional MOV pc,lr in HAL_ATACableID.
  s/Boot - Added HAL_PhysInfo implementation, based around pre-HAL kernel code. Added HAL_Reset implementation, using similar code to the softload tool to disable the MMU and restart the ROM. Convert tabs to spaces for consistency.
  s/Video, hdr/StaticWS - Added HAL_MonitorLeadID implementation, based around pre-HAL kernel code. Retab Video_init.
  s/KbdScan, hdr/StaticWS - Added HAL_KbdScan_* implementation, based around pre-HAL kernel code.
  s/NVRAM - Convert tabs to spaces for consistency
  hdr/Copro15ops - ARMv3/v4 cache/TLB macros for use during HAL_Reset
  hdr/IOMD - New header to pull together all the physical memory map definitions
Admin:
  Tested in IOMD ROM softload on RiscPC, plus as 'real' ROM under RPCEmu
  New RAM setup code may be a bit buggy still


Version 0.11. Tagged as 'IOMD-0_11'
@
text
@d1 1
a1 1
/* (0.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.11
d9 1
a9 1
#define Module_Date_CMHG                25 Feb 2012
d11 2
a12 2
#define Module_MajorVersion             "0.11"
#define Module_Version                  11
d14 1
a14 1
#define Module_Date                     "25 Feb 2012"
d16 1
a16 1
#define Module_ApplicationDate          "25-Feb-12"
d21 3
a23 3
#define Module_FullVersion              "0.11"
#define Module_HelpVersion              "0.11 (25 Feb 2012)"
#define Module_LibraryVersionInfo       "0:11"
@


1.11
log
@Fix HAL_ControllerAddress clashing with OS_Memory 9
Detail:
  s/Boot - Changed the 82C710/SuperIO/SMC37C665/whatever to be controller #34 instead of controller #6. This stops it clashing with the tube ULA allocation, and matches the controller number that ROL are using.
  s/ATA - Use C710_Address instead of a hardcoded offset from IOMD_Address
Admin:
  Tested in ROM softload on RiscPC


Version 0.10. Tagged as 'IOMD-0_10'
@
text
@d1 1
a1 1
/* (0.10)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.10
d9 1
a9 1
#define Module_Date_CMHG                18 Jul 2011
d11 2
a12 2
#define Module_MajorVersion             "0.10"
#define Module_Version                  10
d14 1
a14 1
#define Module_Date                     "18 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "18-Jul-11"
d21 3
a23 3
#define Module_FullVersion              "0.10"
#define Module_HelpVersion              "0.10 (18 Jul 2011)"
#define Module_LibraryVersionInfo       "0:10"
@


1.10
log
@Fix HAL_CleanerSpace. Improve HAL_PlatformInfo.
Detail:
  hdr/StaticWS, s/Boot - Fixed HAL_CleanerSpace implementation to return the physical address of the cleaner area instead of the logical address
  s/Boot - Improve HAL_PlatformInfo to provide an indication of whether the OS is running from RAM or ROM
Admin:
  Tested in ROM softload on RiscPC


Version 0.09. Tagged as 'IOMD-0_09'
@
text
@d1 1
a1 1
/* (0.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.09
d9 1
a9 1
#define Module_Date_CMHG                25 Jun 2011
d11 2
a12 2
#define Module_MajorVersion             "0.09"
#define Module_Version                  9
d14 1
a14 1
#define Module_Date                     "25 Jun 2011"
d16 1
a16 1
#define Module_ApplicationDate          "25-Jun-11"
d21 3
a23 3
#define Module_FullVersion              "0.09"
#define Module_HelpVersion              "0.09 (25 Jun 2011)"
#define Module_LibraryVersionInfo       "0:9"
@


1.9
log
@IOMD HAL improvements
Detail:
  Makefile - Specify link base address to fix any absolute address issues
  s/Boot - Add support for new HAL_ControllerAddress reason code to get the 82C710 address. Correct HAL_HardwareInfo. Make HAL_CleanerSpace return the address of ROM bank 1, as per pre-HAL kernel.
  hdr/StaticWS - New workspace entries for 82C710 & CleanerSpace addresses
Admin:
  Tested in ROM softload on RiscPC


Version 0.08. Tagged as 'IOMD-0_08'
@
text
@d1 1
a1 1
/* (0.08)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.08
d9 1
a9 1
#define Module_Date_CMHG                22 Jun 2011
d11 2
a12 2
#define Module_MajorVersion             "0.08"
#define Module_Version                  8
d14 1
a14 1
#define Module_Date                     "22 Jun 2011"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jun-11"
d21 3
a23 3
#define Module_FullVersion              "0.08"
#define Module_HelpVersion              "0.08 (22 Jun 2011)"
#define Module_LibraryVersionInfo       "0:8"
@


1.8
log
@  Added RPCEmu support
Detail:
  Not supplied
Admin:
  Changes by Tom Walker

Version 0.07. Tagged as 'IOMD-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.07
d9 1
a9 1
#define Module_Date_CMHG                02 Dec 2010
d11 2
a12 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d14 1
a14 1
#define Module_Date                     "02 Dec 2010"
d16 1
a16 1
#define Module_ApplicationDate          "02-Dec-10"
d21 3
a23 3
#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (02 Dec 2010)"
#define Module_LibraryVersionInfo       "0:7"
@


1.7
log
@Tweak IOMD HAL NVRAM settings and add dummy keyboard scan code to get CMOS working properly
Detail:
  s/NVRAM - Changed the NVRAM setting from 'MaybeIIC' to just 'IIC', as a workaround for RPCemu's apparently buggy support for IIC probing (plus we know the address of the RTC/CMOS chip anyway - no need for the kernel to probe for it)
  s/Boot - Add dummy keyboard scan functions, so kernel doesn't think the CMOS reset keys are being held down on each boot.
Admin:
  Tested under RPCemu. CMOS settings now seem to load and save properly.


Version 0.06. Tagged as 'IOMD-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                02 Feb 2010
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "02 Feb 2010"
d16 1
a16 1
#define Module_ApplicationDate          "02-Feb-10"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (02 Feb 2010)"
#define Module_LibraryVersionInfo       "0:6"
@


1.6
log
@Fix hardware scrolling in IOMD HAL
Detail:
  s/Video - Looks like hardware scrolling for this HAL_Video_SetDAG implementation became broken just over 7 years ago when DAG #3 (VDU buffer address) was introduced for use by the NVidia module. The fix is to obvious ignore DAG numbers that we don't recognise!
Admin:
  Tested under RPCemu.


Version 0.05. Tagged as 'IOMD-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d9 1
a9 1
#define Module_Date_CMHG                01 Feb 2010
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d14 1
a14 1
#define Module_Date                     "01 Feb 2010"
d16 1
a16 1
#define Module_ApplicationDate          "01-Feb-10"
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (01 Feb 2010)"
#define Module_LibraryVersionInfo       "0:5"
@


1.5
log
@Add DRAM + VRAM detection logic to IOMD HAL
Detail:
  s/Boot - Added DRAM + VRAM detection code, taken from the pre-HAL bits of the kernel.
  s/Video - Calculate VRAMWidth by reverse-engineering the value programmed into IOMD_VIDCR
Admin:
  Tested under RPCemu - seems to detect correct DRAM + VRAM sizes for all of the combinations supported by RPCemu.


Version 0.04. Tagged as 'IOMD-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (01 Feb 2010)"
#define Module_LibraryVersionInfo       "0:4"
@


1.4
log
@Removed some resources junk from the Makefile.

This looks like a cut-n-paste error of including some stuff relating to
exporting resources which do not exist in this component. This will fix the
only (current) build error in the IOMDHALDev build.

Version 0.03. Tagged as 'IOMD-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                14 Jul 2009
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "14 Jul 2009"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jul-09"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (14 Jul 2009)"
#define Module_LibraryVersionInfo       "0:3"
@


1.3
log
@  Updating and development of the IOMD HAL.
Detail:
  * Resolved multiple declaration of HighestOSEntry
  * Extended IRQ code to modern HAL API
  * New FIQ code, partially copied from Tungsten HAL
  * Added HAL_PlatformInfo and HAL_NVMemoryPageSize, both additional
    requirements of recent kernels
  * Default hard-coded screen mode changed to VGA timings - few modern monitors
    will sync down to the old TV rate modes
  * RAM map hard-coded to match the A7000 I'm using for development
    (previously was hard-coded for a 2MB VRAM + 16 MB DRAM Risc PC -
    ultimately, we need to merge in the autodetection code from non-HAL kernels)
  * Video DMA width tweaked so it works on non-VRAM machines (again this should
    be autodetected)
Admin:
  Known issues include: OS_Reset and hardware scrolling don't work
                        CMOS appears to be reset on every boot
  Work in progress

Version 0.02. Tagged as 'IOMD-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                22 Dec 2008
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "22 Dec 2008"
d16 1
a16 1
#define Module_ApplicationDate          "22-Dec-08"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (22 Dec 2008)"
#define Module_LibraryVersionInfo       "0:2"
@


1.2
log
@Merged IOMD HAL to trunk.

Version 0.01. Tagged as 'IOMD-0_01'
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (22 Dec 2008)"
#define Module_LibraryVersionInfo       "0:1"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.00)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.00
d11 2
a12 2
#define Module_MajorVersion             "0.00"
#define Module_Version                  0
d21 3
a23 3
#define Module_FullVersion              "0.00"
#define Module_HelpVersion              "0.00 (22 Dec 2008)"
#define Module_LibraryVersionInfo       "0:0"
@

