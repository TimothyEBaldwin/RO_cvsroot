head	1.2;
access;
symbols
	SMP:1.1.0.2
	SMP_bp:1.1
	Tungsten-0_59:1.1
	Tungsten-0_58:1.1
	Tungsten-0_57:1.1
	Tungsten-0_56:1.1
	Tungsten-0_55:1.1
	Tungsten-0_54:1.1
	Tungsten-0_53:1.1
	Tungsten-0_52:1.1
	Tungsten-0_51:1.1
	Tungsten-0_50:1.1
	Tungsten-0_49:1.1
	Tungsten-0_48:1.1
	Tungsten-0_47:1.1
	Tungsten-0_46:1.1
	Tungsten-0_45:1.1
	Tungsten-0_44:1.1
	Tungsten-0_43:1.1
	Tungsten-0_42:1.1
	Tungsten-0_41:1.1
	Tungsten-0_40:1.1
	Tungsten-0_39:1.1
	Tungsten-0_38:1.1
	Tungsten-0_37:1.1
	Tungsten-0_36:1.1
	Tungsten-0_35:1.1
	Tungsten-0_34:1.1
	Tungsten-0_33:1.1
	Tungsten-0_32:1.1
	Tungsten-0_31:1.1
	Tungsten-0_30:1.1
	Tungsten-0_29:1.1
	Tungsten-0_28:1.1
	Tungsten-Official514:1.1
	Tungsten-0_27:1.1
	Tungsten-0_26:1.1
	Tungsten-0_25:1.1
	Tungsten-0_24:1.1
	Tungsten-0_23:1.1
	Tungsten-0_22:1.1
	Tungsten-0_21:1.1
	Tungsten-0_20:1.1
	RO_5_07:1.1
	Tungsten-0_19:1.1
	Tungsten-0_18:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.09.09.10.56.55;	author rool;	state dead;
branches;
next	1.1;
commitid	JbhyAilQebq1Lv6A;

1.1
date	2004.06.30.14.35.49;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Participate in keyboard scan dependencies
Detail:
  Replace keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Back fill missing UARTDefault entry point.
  Delete unused workspace.
  Remove now unused USB driver and local copies of OHCI registers.
Admin:
  Submission for USB bounty.

Version 0.60. Tagged as 'Tungsten-0_60'
@
text
@/* Copyright 2004 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <stdint.h>

#define HAL

#ifdef HAL
//#define DEBUGLIB
#endif

#include "pci.h"
/* Calling standard mungery - mustn't touch sb/v6 */
__global_reg(6) void *sb;

void* hal_find_usb_base(int* basep)
{
  return pci_find_class_address (0x0C0310, basep);
}

uint8_t hal_find_usb_irq(pci_dev* device)
{
  return pci_read_config_byte_dev(device, PCI_INT_LINE); 
}

void hal_done_with_controller(pci_dev* device)
{
  return ; 
}

void hal_usb_power(int port, int state)
{
}

void hal_ack_usb_irq(unsigned device)
{
}


@


1.1
log
@Split USB and PCI parts of HAL into hardware-specific and generic parts.
The generic parts are included by other HALs.

Version 0.18. Tagged as 'Tungsten-0_18'
@
text
@@

