head	1.5;
access;
symbols
	Tungsten-0_63:1.5
	Tungsten-0_62:1.5
	Tungsten-0_61:1.5
	Tungsten-0_60:1.4
	SMP:1.4.0.2
	SMP_bp:1.4
	Tungsten-0_59:1.4
	Tungsten-0_58:1.4
	Tungsten-0_57:1.4
	Tungsten-0_56:1.4
	Tungsten-0_55:1.4
	Tungsten-0_54:1.4
	Tungsten-0_53:1.4
	Tungsten-0_52:1.4
	Tungsten-0_51:1.4
	Tungsten-0_50:1.4
	Tungsten-0_49:1.4
	Tungsten-0_48:1.4
	Tungsten-0_47:1.4
	Tungsten-0_46:1.4
	Tungsten-0_45:1.4
	Tungsten-0_44:1.4
	Tungsten-0_43:1.4
	Tungsten-0_42:1.4
	Tungsten-0_41:1.4
	Tungsten-0_40:1.4
	Tungsten-0_39:1.4
	Tungsten-0_38:1.4
	Tungsten-0_37:1.4
	Tungsten-0_36:1.3
	Tungsten-0_35:1.3
	Tungsten-0_34:1.3
	Tungsten-0_33:1.3
	Tungsten-0_32:1.3
	Tungsten-0_31:1.3
	Tungsten-0_30:1.3
	Tungsten-0_29:1.3
	Tungsten-0_28:1.3
	Tungsten-Official514:1.3
	Tungsten-0_27:1.3
	Tungsten-0_26:1.3
	Tungsten-0_25:1.3
	Tungsten-0_24:1.3
	Tungsten-0_23:1.3
	Tungsten-0_22:1.3
	Tungsten-0_21:1.3
	Tungsten-0_20:1.3
	RO_5_07:1.3
	Tungsten-0_19:1.3
	Tungsten-0_18:1.3
	Tungsten-0_17:1.3
	Tungsten-0_16:1.2
	Tungsten-0_15:1.2
	Tungsten-0_14:1.2
	Tungsten-0_13:1.2
	Tungsten-0_12:1.2
	Tungsten-0_11:1.2
	Tungsten-0_10:1.1
	Tungsten-0_09:1.1
	Tungsten-0_08:1.1
	Tungsten-0_07:1.1
	Tungsten-0_06:1.1
	Tungsten-0_05:1.1
	Tungsten-0_04:1.1
	Tungsten-0_03:1.1
	Tungsten-0_02:1.1
	Tungsten-0_01:1.1;
locks; strict;
comment	@# @;


1.5
date	2018.02.08.00.26.31;	author jlee;	state Exp;
branches;
next	1.4;
commitid	YMfT17CbT7cPnZpA;

1.4
date	2012.02.25.16.43.17;	author jlee;	state Exp;
branches;
next	1.3;
commitid	jZ2NTOmQjvfsHyUv;

1.3
date	2004.02.16.15.32.43;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.16.18.55.45;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.07.12.34.11;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Implement HAL_TimerIRQClear
Detail:
  s/Timers - Implement HAL_TimerIRQClear
  s/Interupts - Remove HAL_IRQClear implementation, since clearing the timer interrupts was the only thing it did. Remove empty HAL_FIQClear as well.
  s/Boot - NOP out HAL_IRQClear & HAL_FIQClear entry points. Hook up HAL_TimerIRQClear entry point.
Admin:
  Tested on Iyonix


Version 0.61. Tagged as 'Tungsten-0_61'
@
text
@; Copyright 2002 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>

        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.StaticWS
        GET     hdr.80321

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  Timer_Init

        EXPORT  HAL_Timers
        EXPORT  HAL_TimerDevice
        EXPORT  HAL_TimerGranularity
        EXPORT  HAL_TimerMaxPeriod
        EXPORT  HAL_TimerSetPeriod
        EXPORT  HAL_TimerPeriod
        EXPORT  HAL_TimerReadCountdown
        EXPORT  HAL_TimerIRQClear

        EXPORT  HAL_CounterRate
        EXPORT  HAL_CounterPeriod
        EXPORT  HAL_CounterRead
        EXPORT  HAL_CounterDelay


Timer_Init
        MOV     pc, lr

HAL_Timers
        MOV     a1, #2
        MOV     pc, lr

HAL_TimerDevice
        ASSERT  Device_Timer1 = Device_Timer0+1
        ADD     a1, a1, #Device_Timer0
        MOV     pc, lr

HAL_CounterRate
HAL_TimerGranularity
        LDR     a1, =TIMER_RATE
        MOV     pc, lr

HAL_TimerMaxPeriod
        MOV     a1, #&FFFFFFFF
        MOV     pc, lr

HAL_TimerSetPeriod
        TEQ     a2, #0
        BEQ     HAL_TimerSetPeriod_Disable
        TEQ     a1, #0
        WriteTRR0 a2, EQ                ; set period first before enabling
        WriteTRR1 a2, NE
        MOV     a3, #2_001110           ; x1 clock, privileged access only, reload, enabled
        WriteTMR0 a3, EQ
        WriteTMR1 a3, NE
        MOV     pc, lr

HAL_TimerSetPeriod_Disable
        MOV     a3, #2_001100           ; x1 clock, privileged access only, reload, disabled
        TEQ     a1, #0
        WriteTMR0 a3, EQ                ; disable first
        WriteTMR1 a3, NE
        WriteTRR0 a2, EQ                ; then set period to zero for benefit of reading
        WriteTRR1 a2, NE
        MOV     pc, lr

HAL_CounterPeriod
        MOV     a1, #0
        ; Fall through

HAL_TimerPeriod
        TEQ     a1, #0
        ReadTRR0 a1, EQ
        ReadTRR1 a1, NE
        MOV     pc, lr

HAL_CounterRead
        MOV     a1, #0
        ; Fall through

HAL_TimerReadCountdown
        TEQ     a1, #0
        ReadTCR0 a1, EQ
        ReadTCR1 a1, NE
        MOV     pc, lr



; If they want n ticks, wait until we've seen n+1 transitions of the clock.
        EXPORT  delay
delay
HAL_CounterDelay
        ASSERT  TIMER_RATE > 1000000
        LDR     a2, =TIMER_RATE/1000000
        MUL     a1, a2, a1

        ReadTCR0 a2
10
        ReadTCR0 a3
        SUBS    ip, a2, a3              ; ip = difference in ticks
        ADDLO   ip, a2, #1              ; if wrapped, must have had at least old latch+1 ticks
        SUBS    a1, a1, ip
        MOVLO   pc, lr
        ReadTCR0 a2
        SUBS    ip, a3, a2              ; ip = difference in ticks
        ADDLO   ip, a3, #1              ; if wrapped, must have had at least old latch+1 ticks
        SUBS    a1, a1, ip
        BHS     %BT10
        MOV     pc, lr

HAL_TimerIRQClear
        ADD     a1, a1, #1              ; convert timer number to bit
        WriteTISR a1
        MOV     pc, lr

        END
@


1.4
log
@Add compressed ROM support. Make softload-aware.
Detail:
  hdr/Post, s/FlashProg - Add sizeofROM definition, for expected size of compressed ROM/physical ROM chip. Used to replace references to OSROM_ImageSize throughout the code.
  s/ATA, s/Boot, s/Debug, s/DebugPCI, s/IIC, s/Interrupts, s/MSI, s/NVMemory, s/Timers, s/Top, s/UART - Removed unnecessary GETs of Hdr:ImageSize.<ImageSize>
  s/Boot, s/Video - Add a new 'Tungsten video' HAL device, for storing the NVidia STRAP data that the softload & ROM flash tools need to poke into the ROMs on a per-machine basis. Previously the data was stored in the NVidia module, which would have caused complications with compressed ROM images.
  s/RAM, s/Top - Add compressed ROM & softload support. Softload code just skips some hardware initialisation and relocates the ROM to the high end of RAM.
Admin:
  Tested as Tungsten ROM softload only.
  For safety, compressed ROMs that have been burnt to ROM are required to be 4MB in size. This helps to simplify the ROM consistency checks and recovery code.
  Softloaded ROMs aren't subjected to the FlashCheck code and can be any size.


Version 0.37. Tagged as 'Tungsten-0_37'
@
text
@d37 1
d49 1
a49 1
        MOV     a1, #2                  ; 1 timer
d130 4
@


1.3
log
@HAL_TimerDevice returned wrong result for Timer 1.

Version 0.17. Tagged as 'Tungsten-0_17'
@
text
@a18 1
        GET     Hdr:ImageSize.<ImageSize>
@


1.2
log
@Random check in as it's been rather a long time and I don't trust
people's harddiscs.
Changes for DMA support (s.ATA)
Bug fix to HAL Counter info,it only worked if R0=0 on entry - spotted
by Dan Ellis
Power on <key held down> support in C.USBHAL and H.USBHAL
Reads the CMOS lock jumper
The beginnings of flash recovery code
Some code tidy ups and documentation updates

Version 0.11. Tagged as 'Tungsten-0_11'
@
text
@d53 2
a54 1
        MOV     a1, #Device_Timer0
@


1.1
log
@Initial check-in.

Version 0.01. Tagged as 'Tungsten-0_01'
@
text
@d86 3
d108 2
@

