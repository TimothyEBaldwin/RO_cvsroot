head	1.3;
access;
symbols
	Tungsten-0_63:1.3
	Tungsten-0_62:1.3
	Tungsten-0_61:1.3
	Tungsten-0_60:1.3
	SMP:1.3.0.2
	SMP_bp:1.3
	Tungsten-0_59:1.3
	Tungsten-0_58:1.3
	Tungsten-0_57:1.3
	Tungsten-0_56:1.3
	Tungsten-0_55:1.3
	Tungsten-0_54:1.3
	Tungsten-0_53:1.3
	Tungsten-0_52:1.3
	Tungsten-0_51:1.3
	Tungsten-0_50:1.3
	Tungsten-0_49:1.3
	Tungsten-0_48:1.3
	Tungsten-0_47:1.3
	Tungsten-0_46:1.2
	Tungsten-0_45:1.2
	Tungsten-0_44:1.2
	Tungsten-0_43:1.2
	Tungsten-0_42:1.1
	Tungsten-0_41:1.1
	Tungsten-0_40:1.1
	Tungsten-0_39:1.1
	Tungsten-0_38:1.1
	Tungsten-0_37:1.1
	Tungsten-0_36:1.1
	Tungsten-0_35:1.1
	Tungsten-0_34:1.1
	Tungsten-0_33:1.1
	Tungsten-0_32:1.1
	Tungsten-0_31:1.1
	Tungsten-0_30:1.1
	Tungsten-0_29:1.1
	Tungsten-0_28:1.1
	Tungsten-Official514:1.1
	Tungsten-0_27:1.1
	Tungsten-0_26:1.1
	Tungsten-0_25:1.1
	Tungsten-0_24:1.1
	Tungsten-0_23:1.1
	Tungsten-0_22:1.1
	Tungsten-0_21:1.1
	Tungsten-0_20:1.1
	RO_5_07:1.1
	Tungsten-0_19:1.1
	Tungsten-0_18:1.1
	Tungsten-0_17:1.1
	Tungsten-0_16:1.1
	Tungsten-0_15:1.1
	Tungsten-0_14:1.1
	Tungsten-0_13:1.1
	Tungsten-0_12:1.1
	Tungsten-0_11:1.1
	Tungsten-0_10:1.1
	Tungsten-0_09:1.1
	Tungsten-0_08:1.1
	Tungsten-0_07:1.1
	Tungsten-0_06:1.1
	Tungsten-0_05:1.1
	Tungsten-0_04:1.1
	Tungsten-0_03:1.1
	Tungsten-0_02:1.1
	Tungsten-0_01:1.1;
locks; strict;
comment	@# @;


1.3
date	2013.11.01.18.42.01;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	s4z9LXAGCdnyABbx;

1.2
date	2012.07.09.07.26.06;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	KRTEdlJrzUihhRbw;

1.1
date	2002.10.07.12.34.10;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add RTC device
HAL RTC device added after probing IIC address &D0.
Moved CallOS macro into a header.

Version 0.47. Tagged as 'Tungsten-0_47'
@
text
@; Copyright 2002 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.StaticWS
        GET     hdr.80321

        AREA    |Asm$$Code|, CODE, READONLY, PIC
        EXPORT  HAL_MachineID

HAL_MachineID
        ; the Unique id is stored in an 8 byte hidden region of flash which is
        ; either programmed by hand,or at the factory in batches.The format is thus:
        ; 0x81 aa bb cc dd ee ff CC where aa-ff is the MAC address and CC is a crc
        ; calculated using the same crc algorithm as the DS2401 used
        Push    "v1-v2,lr"
        MOV     a1, #0
        LDR     a2, =ROM_Base
        MOV     a3, #16              ; will get rounded up to 1MByte!
        CallOS  OS_MapInIO           ; a1=logical memory of bottom of ROM

        ADD     a4, a1, #&055*2
        ADD     a4, a4, #&500*2      ; v4 -> &555
        ADD     a3, a1, #&0AA*2
        ADD     a3, a3, #&200*2      ; v3 -> &2AA
        MOV     v2, #&55             ; v2 = &55
        MOV     v1, #&AA             ; v1 = &AA

        STRH    v1, [a4]
        STRH    v2, [a3]
        MOV     ip, #&88
        STRH    ip, [a4]             ; page in hidden flash area

        LDMIA   a1, {a1, a2}

        ; the id area may be blank,leading to an id of 0xFFFFFFFF but that'll fail
        ; the crc check and be set to zero so no need to check it here

        STRH    v1, [a4]
        STRH    v2, [a3]
        MOV     ip, #&90
        STRH    ip, [a4]
        MOV     ip, #0
        STRH    ip, [a4]             ; page out hidden area
        Pull    "v1-v2,pc"           ; don't need the flash anymore,but looks like I'm stuck with it

        END
@


1.2
log
@Adopt revised HAL_PhysInfo API
Also spotted that HAL_MachineID was corrupting v1-v4 so rejigged the register use a bit.

Version 0.43. Tagged as 'Tungsten-0_43'
@
text
@a26 7
        MACRO
        CallOS  $entry
        ASSERT  $entry <= HighestOSEntry
        MOV     lr, pc
        LDR     pc, OSentries + 4*$entry
        MEND

@


1.1
log
@Initial check-in.

Version 0.01. Tagged as 'Tungsten-0_01'
@
text
@d39 1
a39 1
        Push    "a3-a4,lr"
d45 4
a48 4
        ADD     v4, a1, #&055*2
        ADD     v4, v4, #&500*2      ; v4 -> &555
        ADD     v3, a1, #&0AA*2
        ADD     v3, v3, #&200*2      ; v3 -> &2AA
d52 4
a55 4
        STRH    v1, [v4]
        STRH    v2, [v3]
        MOV     a4, #&88
        STRH    a4, [v4]             ; page in hidden flash area
d62 7
a68 7
        STRH    v1, [v4]
        STRH    v2, [v3]
        MOV     a4, #&90
        STRH    a4, [v4]
        MOV     a4, #0
        STRH    a4, [v4]             ; page out hidden area
        Pull    "a3-a4,pc"           ; don't need the flash anymore,but looks like I'm stuck with it
@

