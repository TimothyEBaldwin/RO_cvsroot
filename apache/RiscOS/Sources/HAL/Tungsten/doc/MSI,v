head	1.1;
access;
symbols
	Tungsten-0_63:1.1
	Tungsten-0_62:1.1
	Tungsten-0_61:1.1
	Tungsten-0_60:1.1
	SMP:1.1.0.2
	SMP_bp:1.1
	Tungsten-0_59:1.1
	Tungsten-0_58:1.1
	Tungsten-0_57:1.1
	Tungsten-0_56:1.1
	Tungsten-0_55:1.1
	Tungsten-0_54:1.1
	Tungsten-0_53:1.1
	Tungsten-0_52:1.1
	Tungsten-0_51:1.1
	Tungsten-0_50:1.1
	Tungsten-0_49:1.1
	Tungsten-0_48:1.1
	Tungsten-0_47:1.1
	Tungsten-0_46:1.1
	Tungsten-0_45:1.1
	Tungsten-0_44:1.1
	Tungsten-0_43:1.1
	Tungsten-0_42:1.1
	Tungsten-0_41:1.1
	Tungsten-0_40:1.1
	Tungsten-0_39:1.1
	Tungsten-0_38:1.1
	Tungsten-0_37:1.1
	Tungsten-0_36:1.1
	Tungsten-0_35:1.1
	Tungsten-0_34:1.1
	Tungsten-0_33:1.1
	Tungsten-0_32:1.1
	Tungsten-0_31:1.1
	Tungsten-0_30:1.1
	Tungsten-0_29:1.1
	Tungsten-0_28:1.1
	Tungsten-Official514:1.1
	Tungsten-0_27:1.1
	Tungsten-0_26:1.1
	Tungsten-0_25:1.1
	Tungsten-0_24:1.1
	Tungsten-0_23:1.1
	Tungsten-0_22:1.1
	Tungsten-0_21:1.1
	Tungsten-0_20:1.1
	RO_5_07:1.1
	Tungsten-0_19:1.1
	Tungsten-0_18:1.1
	Tungsten-0_17:1.1
	Tungsten-0_16:1.1
	Tungsten-0_15:1.1
	Tungsten-0_14:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.04.15.20.03.34;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.1
log
@First venture into the world of message signalled interrupts (s.MSI).
High speed RAM clear added using AAU in the XScale.
Tighten up check on RAM modules to reject some 4 bit wide devices.
Fix for CMOS protect link being ignored.
Add table returned by ReadPhysicalMemory.
New poke to move sound DMA into the top half of physical memory.
PCI rewrite.

Version 0.14. Tagged as 'Tungsten-0_14'
@
text
@Each device writes a message (a 16-bit number) to a fixed address.
Each device has 1-32 messages (contiguous).

For the XScale, use the Inbound Queue Port (BAR0 + &40)
(BAR0 is currently undefined - have to allocate 4K to it).

When the device writes to the Inbound Queue Port, the word is
added to the circular Inbound Post Queue, and an interrupt is
generated.



PCI_MSIFeatures()

Lowest message (&0000)
Highest message (&FFFF)
PCI address of message port (BAR0+&40 -> a 4K chunk of HAL workspace)
Device number (58)

PCI_MSIGetNextMessage()

Returns the next message, or -1 if none. Clears the interrupt condition,
unless more messages still pending.

@
