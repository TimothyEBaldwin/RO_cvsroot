head	1.6;
access;
symbols
	SMP:1.5.0.2
	SMP_bp:1.5
	Tungsten-0_59:1.5
	Tungsten-0_58:1.5
	Tungsten-0_57:1.5
	Tungsten-0_56:1.5
	Tungsten-0_55:1.5
	Tungsten-0_54:1.4
	Tungsten-0_53:1.4
	Tungsten-0_52:1.4
	Tungsten-0_51:1.4
	Tungsten-0_50:1.4
	Tungsten-0_49:1.4
	Tungsten-0_48:1.4
	Tungsten-0_47:1.4
	Tungsten-0_46:1.4
	Tungsten-0_45:1.4
	Tungsten-0_44:1.4
	Tungsten-0_43:1.4
	Tungsten-0_42:1.4
	Tungsten-0_41:1.4
	Tungsten-0_40:1.4
	Tungsten-0_39:1.4
	Tungsten-0_38:1.4
	Tungsten-0_37:1.4
	Tungsten-0_36:1.4
	Tungsten-0_35:1.4
	Tungsten-0_34:1.4
	Tungsten-0_33:1.4
	Tungsten-0_32:1.4
	Tungsten-0_31:1.4
	Tungsten-0_30:1.4
	Tungsten-0_29:1.3
	Tungsten-0_28:1.3
	Tungsten-Official514:1.3
	Tungsten-0_27:1.3
	Tungsten-0_26:1.3
	Tungsten-0_25:1.3
	Tungsten-0_24:1.3
	Tungsten-0_23:1.3
	Tungsten-0_22:1.3
	Tungsten-0_21:1.3
	Tungsten-0_20:1.3
	RO_5_07:1.3
	Tungsten-0_19:1.3
	Tungsten-0_18:1.3
	Tungsten-0_17:1.2
	Tungsten-0_16:1.2
	Tungsten-0_15:1.2
	Tungsten-0_14:1.2
	Tungsten-0_13:1.2
	Tungsten-0_12:1.1
	Tungsten-0_11:1.1;
locks; strict;
comment	@# @;


1.6
date	2017.09.09.10.56.58;	author rool;	state dead;
branches;
next	1.5;
commitid	JbhyAilQebq1Lv6A;

1.5
date	2015.01.01.14.52.53;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	Vixpip80cBmYCk4y;

1.4
date	2011.11.26.21.39.25;	author jlee;	state Exp;
branches;
next	1.3;
commitid	dS7sZziFfWSpgTIv;

1.3
date	2004.06.30.14.35.50;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.23.18.19.42;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.16.18.55.44;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Participate in keyboard scan dependencies
Detail:
  Replace keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Back fill missing UARTDefault entry point.
  Delete unused workspace.
  Remove now unused USB driver and local copies of OHCI registers.
Admin:
  Submission for USB bounty.

Version 0.60. Tagged as 'Tungsten-0_60'
@
text
@/* Copyright 2003 Tematic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef USBHAL_H
#define USBHAL_H

extern void HAL_KbdScanSetup (void);
extern unsigned int HAL_KbdScan (void);
extern void HAL_KbdScanFinish (void);
extern int HAL_KbdScanInterrupt (int devno);

extern void HAL_IRQEnable(int);

extern void* vtophys (const void* v);
extern void *alloc_contig(size_t len, int alignment);
extern void free_contig(void *p);

/* microsecond delay */
extern void delay(int);

struct usbhal;
extern struct usbhal* alloc_usbhal (int s);
extern struct usbhal* get_usbhal (void);

#endif
@


1.5
log
@Use KbdFlags from OSEntries header
Exposed possible return with reserved bit 8 set when enter was pressed.

Version 0.55. Tagged as 'Tungsten-0_55'
@
text
@@


1.4
log
@Update keyboard scanning to work with new kernel changes
Detail:
  c/USBHAL, h/USBHAL - Updated HAL_KbdScanInterrupt to follow the behaviour that the kernel expects. The interrupting device number is passed in in a1, and the function should return a1 unmodified if the device is unrecognised, or -1 if the interrupt was handled.
Admin:
  Tested in ROM on Iyonix


Version 0.30. Tagged as 'Tungsten-0_30'
@
text
@a35 10
#define HAL_KbdScan_Ctrl        (1u<<0)
#define HAL_KbdScan_Shift       (1u<<1)
#define HAL_KbdScan_R           (1u<<4)
#define HAL_KbdScan_T           (1u<<5)
#define HAL_KbdScan_Delete      (1u<<6)
#define HAL_KbdScan_End         (1u<<7)
#define HAL_KbdScan_Return      (1u<<8)
#define HAL_KbdScan_Present     (1u<<30)
#define HAL_KbdScan_Complete    (1u<<31)

@


1.3
log
@Split USB and PCI parts of HAL into hardware-specific and generic parts.
The generic parts are included by other HALs.

Version 0.18. Tagged as 'Tungsten-0_18'
@
text
@d21 1
a21 1
extern int HAL_KbdScanInterrupt (void);
@


1.2
log
@Kevin's new PCI enumeration C.
Kevin's UART control for DualSerial to talk to.
Completion of flash recovery stuff - it now flashes the floppy drive
light appropriately then requests a new OS image down the serial port
but is careful never to erase itself.To allow this has required some
shuffling to ensure the first 8k of binary is fixed and makes no
external calls - "s.Top" arranges this and effectively moves the
HAL up 8k in ROM.

Version 0.13. Tagged as 'Tungsten-0_13'
@
text
@a24 5
/* return the base address for device class cl, starting with *device = 0,
   returns with *device = 0 and value 0 when no more devices */
extern volatile int* pci_find_class_address (uint32_t cl, int* device);
extern int pci_read_config_byte_dev(int dev, int addr);

d42 1
@


1.1
log
@Random check in as it's been rather a long time and I don't trust
people's harddiscs.
Changes for DMA support (s.ATA)
Bug fix to HAL Counter info,it only worked if R0=0 on entry - spotted
by Dan Ellis
Power on <key held down> support in C.USBHAL and H.USBHAL
Reads the CMOS lock jumper
The beginnings of flash recovery code
Some code tidy ups and documentation updates

Version 0.11. Tagged as 'Tungsten-0_11'
@
text
@d28 1
a28 1
extern int pci_read_config_byte(int dev, int addr);
@

