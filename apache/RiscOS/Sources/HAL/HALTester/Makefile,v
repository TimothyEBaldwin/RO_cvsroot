head	1.3;
access;
symbols
	SMP:1.3.0.2
	SMP_bp:1.3
	HALTester-0_07:1.3
	HALTester-0_06:1.3
	HALTester-0_05:1.2
	HALTester-0_04:1.2
	HALTester-0_03:1.1
	HALTester-0_02:1.1
	HALTester-0_01:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.06.29.06.36.52;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	A3AwnbRpevOwRnGx;

1.2
date	2012.01.14.22.53.21;	author srevill;	state Exp;
branches;
next	1.1;
commitid	sYoTEinNRNG96cPv;

1.1
date	2009.02.01.14.06.27;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Make use of StdTools
Can also trim out the resources and exports phases since they don't really apply.
Built, but not tested.

Version 0.06. Tagged as 'HALTester-0_06'
@
text
@# Copyright 2009 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for HALTester
#

include StdTools

CCFLAGS = -c ${THROWBACK} -Wc -ff -cpu 5TE -APCS 3/32bit/noswst -depend !Depend -IC:,TCPIPLibs:,C:USB
ASFLAGS = -depend !Depend -g -APCS 3/nofp/noswst ${THROWBACK} -cpu 5TE

#
# Program specific options:
#
COMPONENT = HALTester
TARGET    = rm.Kernel
DIRS      = o.dirs
OBJECTS   = o.Kernel o.CLib o.main o.CLibAsm o.HALCalls

#
# Generic rules:
#
.SUFFIXES: .o .s
.s.o:; ${AS} ${ASFLAGS} -o $@@ $<
.c.o:; ${CC} ${CCFLAGS} $< $@@

rom: ${TARGET} ${DIRS}
     @@${ECHO} ${COMPONENT}: rom module built

install_rom: ${TARGET}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: rom module installed

${DIRS}:
        ${MKDIR} o
        ${MKDIR} rm
        ${TOUCH} $@@

clean:
        ${WIPE} o ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
        @@${ECHO} ${COMPONENT}: cleaned

${TARGET}: ${OBJECTS}
        ${LD} -bin -o ${TARGET} ${OBJECTS}

# Dynamic dependencies:
@


1.2
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.04. Tagged as 'HALTester-0_04'
@
text
@d15 1
a15 8
# Makefile for Kernel
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 25-May-94  AMcC         Created.
d18 1
a18 5
#
# Paths
#
EXP_HDR = <export$dir>
C_EXP_HDR = <cexport$dir>.Global.h
a19 11
#
# Generic options:
#
MKDIR   = mkdir -p
AS      = aasm
ARMASM  = objasm
LD      = link
CP      = copy
CC      = cc
RM      = remove
WIPE    = x wipe
d21 1
a21 7
ASFLAGS = -depend !Depend ${THROWBACK} -Stamp -quit -To $@@ -From
ARMASMFLAGS = -depend !Depend -g -APCS 3/nofp/noswst ${THROWBACK} -cpu 5TE
CPFLAGS = ~cfr~v
WFLAGS  = ~cfr~v

TOKENISE = tokenise
TOKENS   = Hdr:Tokens
a26 1
SOURCE    = s.Kernel
d28 1
a28 2
AIFDBG    = aif.Kernel
GPADBG    = GPA
a29 12
EXPORTS   = ${EXP_HDR}.EnvNumbers \
            ${EXP_HDR}.ModHand \
            ${EXP_HDR}.PublicWS \
            ${EXP_HDR}.RISCOS \
            ${EXP_HDR}.Variables \
            ${EXP_HDR}.VduExt \
            ${EXP_HDR}.HALEntries \
            ${EXP_HDR}.HALDevice \
            ${EXP_HDR}.OSEntries \
            ${C_EXP_HDR}.RISCOS \
            ${C_EXP_HDR}.HALEntries \
            ${C_EXP_HDR}.HALDevice
d35 2
a36 2
.s.o:; ${ARMASM} ${ARMASMFLAGS} -o $@@ $< #-list list.$*
.c.o:;  ${CC} ${CCFLAGS} $< $@@
d38 2
a39 5
rom: ${TARGET}
     @@echo ${COMPONENT}: rom module built

debug: ${GPADBG}
        @@echo ${COMPONENT}: debug image built
d43 6
a48 1
        @@echo ${COMPONENT}: rom module installed
d51 3
a53 29
        ${RM} s.TMOSHelp
        ${RM} s.Time+Date
        ${WIPE} o.* ${WFLAGS}
        ${RM} ${TARGET}
        ${WIPE} aif ${WFLAGS}
        ${RM} ${GPADBG}
        ${WIPE} list.* ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

export: ${EXPORTS}
        @@echo ${COMPONENT}: export complete

resources: resources-${CMDHELP}
        @@echo ${COMPONENT}: resource files copied

resources_common:
        ${MKDIR} ${RESDIR}.${COMPONENT}
        Set Kernel$Messages LocalRes:Messages
        IfThere LocalRes:<UserIF>.Messages Then Set Kernel$Messages LocalRes:<UserIF>.Messages
        TokenCheck LocalRes:<UserIF>.Messages
        ${CP} <Kernel$Messages>  ${RESDIR}.${COMPONENT}.Messages  ${CPFLAGS}
        UnSet Kernel$Messages

resources-None: resources_common
	@@

resources-: resources_common
        TokenCheck LocalRes:Messages
        print LocalRes:CmdHelp { >> ${RESDIR}.${COMPONENT}.Messages }
a57 72
${AIFDBG}: ${OBJECTS}
        ${MKDIR} aif
        ${LD} -aif -bin -d -o ${AIFDBG} ${OBJECTS}

${GPADBG}: ${AIFDBG}
        ToGPA -s ${AIFDBG} ${GPADBG}

s.TMOSHelp: ${TOKENS} HelpStrs
        ${TOKENISE} ${TOKENS} HelpStrs $@@

s.Time+Date:
        @@echo |IGBLS Builddate|JBuilddate SETS "<Sys$Date> <Sys$Year>.<Sys$Time>" |J|IEND { > s.Time+Date }
        settype s.Time+Date FFF
        
o.GetAll: s.TMOSHelp \
          s.Time+Date

#
# Exported interface headers
#
${EXP_HDR}.EnvNumbers: hdr.EnvNumbers
        ${CP} hdr.EnvNumbers $@@ ${CPFLAGS}

${EXP_HDR}.ModHand: hdr.ModHand
        ${CP} hdr.ModHand $@@ ${CPFLAGS}

${EXP_HDR}.PublicWS: hdr.PublicWS
        ${CP} hdr.PublicWS $@@ ${CPFLAGS}

${EXP_HDR}.RISCOS: hdr.RISCOS
        ${CP} hdr.RISCOS $@@ ${CPFLAGS}

${EXP_HDR}.VduExt: hdr.VduExt
        ${CP} hdr.VduExt $@@ ${CPFLAGS}

${EXP_HDR}.Variables: hdr.Variables
        ${CP} hdr.Variables $@@ ${CPFLAGS}
        
${EXP_HDR}.HALEntries: hdr.HALEntries
        ${CP} hdr.HALEntries $@@ ${CPFLAGS}
        
${EXP_HDR}.HALDevice: hdr.HALDevice
        ${CP} hdr.HALDevice $@@ ${CPFLAGS}
        
${EXP_HDR}.OSEntries: hdr.OSEntries
        ${CP} hdr.OSEntries $@@ ${CPFLAGS}
        
${C_EXP_HDR}.RISCOS: hdr.RISCOS
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.RISCOS $@@

${C_EXP_HDR}.HALEntries: hdr.HALEntries
        ${MKDIR} ${C_EXP_HDR}
        perl Build:Hdr2H hdr.HALEntries $@@

${C_EXP_HDR}.HALDevice: o.Global.h.HALDevice h.HALDevice
        ${CP} h.HALDevice $@@ ${CPFLAGS}
        print o.Global.h.HALDevice { >> $@@ }

o.Global.h.HALDevice: hdr.HALDevice
        ${MKDIR} o.Global.h
        dir o
        perl Build:Hdr2H ^.hdr.HALDevice Global.h.HALDevice
        back

BBETYPE = kernel
bbe-kernel: bbe-generic-resources-get-alias
        BBE_Export_File_In_Dir Resources.${LOCALE} CmdHelp
        BBE_Export_File_In_Dir Resources.${LOCALE} Messages
        BBE_Export_Dir Resources.${LOCALE}.${USERIF}
        BBE_Export_File VersionNum

@


1.1
log
@Initial version of HALTester - simple kernel for HAL testing
Detail:
  Simple, easy-to-modify kernel to allow testing of HAL functionality before trying a new HAL with a real RISC OS kernel.
Admin:
  Used during development of OMAP3 HAL. Tested under qemu-omap3.


Version 0.01. Tagged as 'HALTester-0_01'
@
text
@d41 1
a41 1
WIPE    = -wipe
@

