head	1.1;
access;
symbols
	SMP:1.1.0.2
	SMP_bp:1.1
	S3C6410-0_05:1.1
	S3C6410-0_04:1.1
	S3C6410-0_03:1.1
	S3C6410-0_02:1.1
	S3C6410-0_01:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.03.22.47.18;	author bavison;	state Exp;
branches;
next	;
commitid	qXlypvv9bHZqihmv;


desc
@@


1.1
log
@  Initial import of S3C6410 HAL
Detail:
  The S3C6410 HAL is aimed at the Mini6410 board. There's a major bug
  somewhere which prevents the FP emulator from working (crashes on
  initialisation), and the interrupt handling is broken (which is believed to
  break USB). But video works (hardwired to 480x272), though the cursor hasn't
  been implemented yet, and the debugging console works.
Admin:
  Code submitted by Tom Walker

Version 0.01. Tagged as 'S3C6410-0_01'
@
text
@; Copyright 2011 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        $GetIO

        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.StaticWS

        EXPORT  HAL_IICBuses
        EXPORT  HAL_IICType
        EXPORT  HAL_IICSetLines
        EXPORT  HAL_IICReadLines

        AREA    |Asm$$Code|, CODE, READONLY, PIC

HAL_IICBuses
        MOV     a1, #1
        MOV     pc, lr

HAL_IICType
        MOV     a1, #IICFlag_LowLevel
 [ MaxI2Cspeed >= 400
        ORR     a1, a1, #IICFlag_Fast
 ]
        MOV     pc, lr

; In:  a1 = bus number, a2 = SDA, a3 = SCL
; Out: a1 = SDA, a2 = SCL
HAL_IICSetLines
        LDRB    ip, IOCRSoftCopy
        LDR     a4, IOMD_Address
        ADD     a2, a2, a3, LSL #1      ; bit 1 = SCL, bit 0 = SDA
        BIC     ip, ip, #3
        ORR     ip, ip, a2
        STRB    ip, IOCRSoftCopy
        STRB    ip, [a4, #IOCControl]
10      LDRB    a1, [a4, #IOCControl]
        MOV     a2, a1, LSR #1
        AND     a1, a1, #1
        AND     a2, a2, #1
        MOV     pc, lr

HAL_IICReadLines
        LDR     a4, IOMD_Address
        B       %BT10

        END

@
