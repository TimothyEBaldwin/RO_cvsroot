head	1.2;
access;
symbols
	SoundCtrl-1_06:1.2
	SoundCtrl-1_05:1.2
	SoundCtrl-1_04:1.2
	SoundCtrl-1_03:1.2
	SoundCtrl-1_02:1.2
	SoundCtrl-1_01:1.2
	RO_5_07:1.1.1.1
	SoundCtrl-1_00:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.01.21.19.18.29;	author jlee;	state Exp;
branches;
next	1.1;
commitid	z0ZvgtPNceKrG4Qv;

1.1
date	2003.02.21.20.29.11;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.02.21.20.29.11;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Allow mixer devices to indicate the range of supported gain values
Detail:
  This adds support for version 0.1 of the HAL mixer device API. Mixer devices which implement this version of the API are able to indicate the min/max gain values each mixer supports, along with the smallest gain step.
  Docs/SoundCtrl - Updated to describe how this new information is exposed to RISC OS
  h/MixerDevice, hdr/MixerDevice - Updated mixer device structure definitions
  c/module - Added code to read gain information if present. Also fixed runtime mixer registration/deregistration to accept any device of version 0.x instead of 0.0
Admin:
  Tested in OMAP3 ROM & Tungsten ROM softload.


Version 1.01. Tagged as 'SoundCtrl-1_01'
@
text
@/* Copyright 2003 Tematic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef GLOBAL_MIXERDEVICE_H
#define GLOBAL_MIXERDEVICE_H

#pragma force_top_level
#pragma include_only_once

#include <stdbool.h>
#include <stdint.h>
#include "Global/HALDevice.h"

struct mixer_device_channel_features
{
  bool fixed: 1;
  bool mono: 1;
  bool default_mute: 1;
  unsigned : 13;
  signed category: 16;
};

struct mixer_device_channel_state
{
  bool mute: 1;
  int32_t gain;
};

struct mixer_device_channel_limits
{
  int32_t mingain;
  int32_t maxgain;
  int32_t step;
};  

struct mixer_device
{
  struct device device;
  struct device *controller;
  uint32_t nchannels;
  struct mixer_device_channel_features (*GetFeatures)(struct mixer_device *, uint32_t channel);
  void (*SetMix)(struct mixer_device *, uint32_t channel, struct mixer_device_channel_state state);
  __value_in_regs struct mixer_device_channel_state (*GetMix)(struct mixer_device *, uint32_t channel);
  void (*GetMixLimits)(struct mixer_device *, uint32_t channel, struct mixer_device_channel_limits *); /* API 0.1 extension */
};

enum
{
  mixer_CATEGORY_SPEAKER    = -1,
  mixer_CATEGORY_HEADPHONES = -2,
  mixer_CATEGORY_LINE_OUT   = -3,
  mixer_CATEGORY_AUX_OUT    = -4,
  mixer_CATEGORY_SYSTEM     = 0,
  mixer_CATEGORY_MIC        = 1,
  mixer_CATEGORY_LINE_IN    = 2,
  mixer_CATEGORY_AUX_IN     = 3,
};

#endif
@


1.1
log
@Initial revision
@
text
@d40 7
d55 1
@


1.1.1.1
log
@Import of initial version of SoundControl (HAL variant).

This module pinches the name, SWI base and error block of its Phoebe
equivalent (now moved to RiscOS/Sources/Audio/SoundCtrlPhoebe), but is a
completely new implementation.
@
text
@@
