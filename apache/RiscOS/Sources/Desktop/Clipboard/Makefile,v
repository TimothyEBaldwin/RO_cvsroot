head	1.7;
access;
symbols
	Clipboard-0_10:1.7
	Clipboard-0_09:1.6
	Clipboard-0_08:1.6
	Clipboard-0_07:1.5
	Clipboard-0_06:1.4
	Clipboard-0_05:1.4
	Clipboard-0_04:1.4
	Clipboard-0_03:1.3
	Clipboard-0_02:1.1;
locks; strict;
comment	@# @;


1.7
date	2018.05.27.16.05.26;	author rool;	state Exp;
branches;
next	1.6;
commitid	Apl4m39uCboI6XDA;

1.6
date	2007.11.13.02.34.33;	author srevill;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.19.14.31.35;	author srevill;	state Exp;
branches;
next	1.4;

1.4
date	99.02.19.11.21.56;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	99.02.12.20.01.45;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	98.11.20.18.33.31;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	98.11.10.20.39.50;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Makefile recreated from fragments
Detail:
  Updates to build against current HdrSrc, and inherit 'standalone' from the shared makefiles.
Admin:
  Built, but no run time testing.

Version 0.10. Tagged as 'Clipboard-0_10'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for Clipboard
#

COMPONENT = Clipboard
HEADER1   = Clipboard
ASFLAGS  += -ABS

include AAsmModule

# Dynamic dependencies:
@


1.6
log
@Fixed RAM install rule.
@
text
@a16 9
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name    Description
# ----       ----    -----------
# 10-Nov-98  BJGA    Created.
# 20-Nov-98  BJGA    Added stripdepnd command to target 'clean'.
# 12-Feb-99  BJGA    Added install_rom; gave RAM builds different name; supported LocalRes$Path
#
a17 23
#
# Paths
#
EXP_HDR = <export$dir>
INSTDIR ?= <install$dir>

#
# Generic options:
#
MKDIR   = do mkdir -p
AS      = objasm
LD      = link
CP      = copy
RM      = remove
WIPE    = x wipe
ASFLAGS = -ABSolute -depend !Depend ${THROWBACK} -o $@@
LDFLAGS = -bin -o $@@
CPFLAGS = ~cfr~v
WFLAGS  = ~cfr~v

#
# Program specific options:
#
d19 2
a20 70
SOURCE    = s.${COMPONENT}
OBJECT    = o.${COMPONENT}
RAMOBJECT = o.${COMPONENT}R
TARGET    = rm.${COMPONENT}
RAMTARGET = rm.${COMPONENT}R
EXPORT    = ${EXP_HDR}.${COMPONENT}

#
# Generic rules:
#
ram: ${RAMTARGET}
        @@echo ${COMPONENT}: ram module built

rom: ${TARGET}
        @@echo ${COMPONENT}: rom module built

install: ${RAMTARGET}
        ${MKDIR} ${INSTDIR}
        ${CP} ${RAMTARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: installed (disc)

install_rom: ${TARGET}
        ${MKDIR} ${INSTDIR}
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@echo ${COMPONENT}: installed (rom)

export: ${EXPORT}
        @@echo ${COMPONENT}: export complete

resources: messages-${CMDHELP}
        ${MKDIR} ${RESDIR}.${COMPONENT}
        ${CP} Messages ${RESDIR}.${COMPONENT}.Messages ${CPFLAGS}
        ${RM} Messages
        @@echo ${COMPONENT}: resource files copied

clean:
        ${RM} Messages
        ${WIPE} o ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

${RAMTARGET}: rm ${RAMOBJECT} o messages-${CMDHELP}
        ${RM} Messages
        ${LD} ${LDFLAGS} ${RAMOBJECT}
        SetType $@@ Module
        Access $@@ rw/r

${RAMOBJECT}: ${SOURCE}
        ${AS} ${ASFLAGS} -PreDefine "Standalone SETL {TRUE}" ${SOURCE}

${TARGET}: rm ${OBJECT} o
        ${LD} ${LDFLAGS} ${OBJECT}
        SetType $@@ Module
        Access $@@ rw/r

${OBJECT}: ${SOURCE}
        ${AS} ${ASFLAGS} -PreDefine "Standalone SETL {FALSE}" ${SOURCE}

rm:
        ${MKDIR} rm

o:
        ${MKDIR} o

messages-:
        ${CP} LocalRes:Messages Messages ${CPFLAGS}
        print LocalRes:CmdHelp { >> Messages }

messages-None:
        ${CP} LocalRes:Messages Messages ${CPFLAGS}
d22 1
a22 2
${EXP_HDR}.${COMPONENT}: hdr.Clipboard
        ${CP} hdr.Clipboard $@@ ${CPFLAGS}
@


1.5
log
@Fixed so that it builds and installs. No runtime checking.

Version 0.07. Tagged as 'Clipboard-0_07'
@
text
@d69 1
a69 1
        ${CP} ${TARGET} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
@


1.4
log
@* Updated API to match that from the spec 1309,419/FS
* Added symbols for all flag bits in SWIs and messages
* Major reorganisation of workspace layout, primarily to facilitate multiple
  concurrent data transfer transactions - because of this, most of the
  useful functionality is currently commented out, pending updating to use
  the new structures
* Replaced "event" queue with a simple queue of ready-to-send Wimp message
  blocks - this way, event handling can be handled in the same place in the
  code, irrespective of whether we're in the foreground or background
* Reorganised finalisation code so that task and module operations are
  performed in separate routines and (mostly) in strictly the reverse order
  to at initialisation. This allows code sharing between module finalisation,
  the exit handler, the UpCall_NewApplication handler, and the task quit
  code, as well as eradicating several memory leaks in the process

Version 0.04. Tagged as 'Clipboard-0_04'
@
text
@d31 1
a31 1
INSTDIR = <install$dir>
d36 1
a36 1
MKDIR   = cdir
d41 1
a41 2
STRIPDEP= -stripdepnd
WIPE    = -wipe
d67 5
d73 1
d75 1
a75 1
        @@echo ${COMPONENT}: rom module installed
a89 1
        ${STRIPDEP}
a91 2


@


1.3
log
@* Makefile altered to build separate targets for RAM and ROM builds
* Makefile supports LocalRes$Path
* General tidying up of source
* Drag-and-Drop features optioned out (implementation unlikely in first release)
* R0 passed to Wimp_Initialise now a recognised value
* Ursula fast service call table added
* Now launches task when module is RMRun
* Error handler modified to have a Quit button instead of Cancel
* Debug builds append error PC to error message in error handler error box

Version 0.03. Tagged as 'Clipboard-0_03'
@
text
@d43 1
a43 1
ASFLAGS = -ABSolute -NOWarn -depend !Depend ${THROWBACK} -o $@@
@


1.2
log
@Added stripdepnd to make-clean functionality.
@
text
@d24 1
d31 1
d41 1
d43 1
a43 1
ASFLAGS = -ABSolute -NOWarn -depend !Depend ${THROWBACK} ${SA} -o $@@
d54 1
d56 1
a57 3
RDIR      = Resources
LDIR      = ${RDIR}.${LOCALE}
SA        = -PreDefine "Standalone SETL {${STANDALONE}}"
d62 1
a62 1
ram: ${TARGET} messages-${CMDHELP}
d68 4
d75 6
d82 1
a82 1
        ${RM} ${RDIR}.Messages
d85 1
a85 1
        -stripdepnd
a87 4
resources: messages-${CMDHELP}
        ${MKDIR} ${RESDIR}.${COMPONENT}
        ${CP} ${RDIR}.Messages ${RESDIR}.${COMPONENT}.Messages ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied
a88 3
messages-:
        ${CP} ${LDIR}.Messages ${RDIR}.Messages ${CPFLAGS}
        print ${LDIR}.CmdHelp { >> ${RDIR}.Messages }
d90 5
a94 2
messages-None:
        ${CP} ${LDIR}.Messages ${RDIR}.Messages ${CPFLAGS}
d96 2
a97 3
${OBJECT}: ${SOURCE}
        ${MKDIR} o
        ${AS} ${ASFLAGS} ${SOURCE}
d99 1
a99 2
${TARGET}: ${OBJECT}
        ${MKDIR} rm
d103 16
@


1.1
log
@* Introduced makefile (and non-stand-alone export / ROM build capabilities)
* Split Messages into CmdHelp and Messages

Version 0.02. Tagged as 'Clipboard-0_02'
@
text
@d23 1
d73 1
@
