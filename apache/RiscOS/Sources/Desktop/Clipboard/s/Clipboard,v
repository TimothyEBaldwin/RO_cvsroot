head	1.12;
access;
symbols
	Clipboard-0_10:1.12
	Clipboard-0_09:1.10
	Clipboard-0_08:1.9
	Clipboard-0_07:1.8
	Clipboard-0_06:1.8
	Clipboard-0_05:1.7
	Clipboard-0_04:1.6
	Clipboard-0_03:1.5
	Clipboard-0_02:1.4
	Clipboard-0_01:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2018.05.27.16.05.31;	author rool;	state Exp;
branches;
next	1.11;
commitid	Apl4m39uCboI6XDA;

1.11
date	2009.06.11.20.54.03;	author bavison;	state Exp;
branches;
next	1.10;

1.10
date	2008.09.16.18.36.54;	author rool;	state Exp;
branches;
next	1.9;

1.9
date	2007.11.13.01.41.06;	author srevill;	state Exp;
branches;
next	1.8;

1.8
date	99.02.25.10.57.27;	author bavison;	state Exp;
branches;
next	1.7;

1.7
date	99.02.22.11.57.57;	author bavison;	state Exp;
branches;
next	1.6;

1.6
date	99.02.19.11.22.04;	author bavison;	state Exp;
branches;
next	1.5;

1.5
date	99.02.12.20.01.53;	author bavison;	state Exp;
branches;
next	1.4;

1.4
date	98.11.10.18.02.01;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	98.11.10.17.55.11;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	98.11.10.17.36.18;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	98.11.10.17.28.24;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.10.17.28.24;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Makefile recreated from fragments
Detail:
  Updates to build against current HdrSrc, and inherit 'standalone' from the shared makefiles.
Admin:
  Built, but no run time testing.

Version 0.10. Tagged as 'Clipboard-0_10'
@
text
@; Copyright 1998 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;
;  s.Clipboard - primary source file
;


        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Symbols
        GET     Hdr:Proc
        GET     Hdr:Services

        GET     Hdr:ModHand
        GET     Hdr:Messages
        GET     Hdr:ResourceFS
        GET     Hdr:MsgTrans
        GET     Hdr:Wimp
        GET     Hdr:WimpSpace
        GET     Hdr:HighFSI

        GET     Hdr:HostFS
        GET     Hdr:NdrDebug

        GET     hdr.Clipboard
        GET     hdr.MsgStructs

        GET     VersionASM

        GET     Options.s
        GET     Workspace.s
        GET     Module.s
        GET     Task.s
        GET     SWIs.s

        GET     Action.s
        GET     Buffer.s
        GET     Handlers.s
        GET     States.s
        GET     WimpMsg.s

        END
@


1.11
log
@  GET file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both objasm and asasm.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 0.09. Not tagged
@
text
@d22 1
a22 2
        GET     Hdr:SWIs
        GET     Hdr:CPU.Generic26
a28 1
        GET     Hdr:RISCOS
@


1.10
log
@  Completed the clipboard support part of the Clipboard module.
  Drag-and-Drop support still needs to be designed and implemented.
Detail:
  The initial Clipboard module released by ROOL was in a state of flux due
  to a redesign of how the module worked. The transition to the new way
  of doing things was only done partially and needed completing to make the
  Clipboard module support the clipboard fully. The module also contained
  26-bit only code.

  - Replaced all the 26-bit code with 32-bit (not mode neutral) code.

  - Completed implementation of Clipboard_GetDataType by adding support for
    the situation where the Clipboard module doesn't own the clipboard and
    isn't proxying either. The required StateHandler_DataRequest2 has been
    implemented also.

  - Fully implemented Clipboard_Get including all the required statehandlers.
      StateHandler_DataSaveAck
      StateHandler_RAMFetch1
      StateHandler_RAMFetch2
      StateHandler_DataRequest1
      StateHandler_DataRequest2
      StateHandler_PutRequest3
      StateHandler_Paste

  - Modified CopyData routine to allow for clipboard content not being
    word-aligned and/or its length not being a multiple of four.

  - Removed all the commented out code that was left over from the initial
    implementation of the Clipboard module.

  - Added GetData to the set of test applications. It displays the clipboard
    contents if it's of type text (It's best to use short text strings). It's
    not very polished and it's better to use PutClip and GetClip to test the
    Clipboard module.

  - Added PutClip to the set of test applications. It can be used test
    SWI Clipboard_Put. Details on how can be found in its Help file.

  - Added GetClip to the set of test applications. It can be used test
    SWI Clipboard_Get. Details on how can be found in its Help file.
Admin:
  Extensively tested on Iyonix RO 5.11 both external behaviour with PutClip
  and GetClip as well as the internal behaviour of the statehandler (by using
  StrongED as the clipboard owner/requester and rigging it to fail at certain
  points during the datatransfer).

  Briefly tested on RO 4.02, seems to be OK.

  Briefly tested on RO 6.06, seems to be OK. Functionality may be different
  from 5.11 and 4.02 though due to ClipboardHolder. In particular using the
  Clipboard module as a proxy is likely to be affected.

Version 0.09. Tagged as 'Clipboard-0_09'
@
text
@d45 5
a49 5
        GET     s.Options
        GET     s.Workspace
        GET     s.Module
        GET     s.Task
        GET     s.SWIs
d51 5
a55 5
        GET     s.Action
        GET     s.Buffer
        GET     s.Handlers
        GET     s.States
        GET     s.WimpMsg
@


1.9
log
@Fixed Clipboard to build and made it 32bit.
Detail:
  Clipboard has never been 32bitted, therefore it refused to build for
  Tungsten. It's now been fixed to build. It's still not finished though.
Admin:
  Tested on RiscPC RO402. Module checked with ARMalyser.
Notes:
  Changes by James Lampard.

Version 0.08. Tagged as 'Clipboard-0_08'
@
text
@d22 2
a23 3
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>

d30 1
d37 3
@


1.8
log
@* Standardised all error blocks to use AddError/MakeErrorBlock macros
* Routines added for making "safe" copies of data blocks, data type lists
  and leafnames passed in via the various mechanisms
* SWI Clipboard_Put and Message_DataRequest handler implemented, and the
  supporting state handlers
    State_PutRequest1
    State_DataSave
    State_RAMTransmit
    State_DataLoad
* SWI Clipboard_GetDataType implemented, and the supporting handler
    State_PutRequest2
    (but not State_DataRequest2 yet)
* Now requires that the caller is an active task
* Fixed occasional data abort bug in MySendMessage
* Fixed corruption of wimp event code bug
* Implemented and added test applications

Version 0.06. Tagged as 'Clipboard-0_06'
@
text
@d22 3
a24 2
        GET     Hdr:SWIs
        GET     Hdr:CPU.Generic26
a30 1
        GET     Hdr:RISCOS
@


1.7
log
@* Task-related initialisation moved from module init to Start routine
* State handler added, called from SWI, UserMessage, UserMessageAck handlers
* Implemented NewAction, DeleteAction, DeleteActions, FreeClipboard and
  FreeMsgQueue
* DA memory allocation adapted so as not to use max-size "-1" DAs
* RMA memory allocation functions completed to match DA functions - will now
  assemble with DA support option turned off!

Version 0.05. Tagged as 'Clipboard-0_05'
@
text
@d35 1
@


1.6
log
@* Updated API to match that from the spec 1309,419/FS
* Added symbols for all flag bits in SWIs and messages
* Major reorganisation of workspace layout, primarily to facilitate multiple
  concurrent data transfer transactions - because of this, most of the
  useful functionality is currently commented out, pending updating to use
  the new structures
* Replaced "event" queue with a simple queue of ready-to-send Wimp message
  blocks - this way, event handling can be handled in the same place in the
  code, irrespective of whether we're in the foreground or background
* Reorganised finalisation code so that task and module operations are
  performed in separate routines and (mostly) in strictly the reverse order
  to at initialisation. This allows code sharing between module finalisation,
  the exit handler, the UpCall_NewApplication handler, and the task quit
  code, as well as eradicating several memory leaks in the process

Version 0.04. Tagged as 'Clipboard-0_04'
@
text
@d15 5
d42 1
a42 1
        GET     s.Memory
a43 2
        GET     s.States
        GET     s.Utils
d46 3
d50 2
@


1.5
log
@* Makefile altered to build separate targets for RAM and ROM builds
* Makefile supports LocalRes$Path
* General tidying up of source
* Drag-and-Drop features optioned out (implementation unlikely in first release)
* R0 passed to Wimp_Initialise now a recognised value
* Ursula fast service call table added
* Now launches task when module is RMRun
* Error handler modified to have a Quit button instead of Cancel
* Debug builds append error PC to error message in error handler error box

Version 0.03. Tagged as 'Clipboard-0_03'
@
text
@d39 3
a42 1
        GET     s.Task
@


1.4
log
@Expanded tabs.

Version 0.01. Not tagged
@
text
@d19 1
a19 2
        GET     Hdr:RISCOS
        GET     Hdr:ModHand
a20 1
        GET     Hdr:Symbols
d22 2
d25 1
a25 1

a30 2
        GET     VersionASM

d33 2
@


1.3
log
@Placed under srccommit control.

Version 0.01. Not tagged
@
text
@d15 10
a24 10
	GET	Hdr:ListOpts
	GET	Hdr:Macros
	GET	Hdr:SWIs
	GET	Hdr:CPU.Generic26
	GET	Hdr:RISCOS
	GET	Hdr:ModHand
	GET	Hdr:Proc
	GET	Hdr:Symbols
	GET	Hdr:Services
	GET	Hdr:Messages
d26 4
a29 4
	GET	Hdr:ResourceFS
	GET	Hdr:MsgTrans
	GET	Hdr:Wimp
	GET	Hdr:WimpSpace
d33 2
a34 2
	GET	hdr.Clipboard
	GET     hdr.MsgStructs
d36 6
a41 6
	GET	s.Options
	GET	s.Memory
	GET	s.Module
	GET	s.SWIs
	GET	s.Task
	GET	s.Handlers
d43 1
a43 1
	END
@


1.2
log
@Will now compile against standard RISC OS headers (with the exception of
Message_DataSuck being renamed Message_DataRequest!)
@
text
@d31 2
@


1.1
log
@Initial revision
@
text
@d32 1
@


1.1.1.1
log
@Initial import: Kevin's original version.
@
text
@@
