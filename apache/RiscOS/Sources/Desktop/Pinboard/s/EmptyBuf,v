head	4.4;
access;
symbols
	Pinboard-1_04:4.4
	Pinboard-1_03:4.4
	Pinboard-1_02:4.4
	Pinboard-1_01:4.4
	Pinboard-1_00:4.4
	Pinboard-0_99:4.4
	Pinboard-0_98:4.4
	Pinboard-0_97:4.4
	Pinboard-0_96:4.4
	Pinboard-0_95:4.4
	Pinboard-0_94:4.3
	Pinboard-0_93:4.3
	Pinboard-0_92:4.2
	Pinboard-0_91:4.2
	Pinboard-0_90:4.2
	Pinboard-0_89:4.2
	Pinboard-0_88:4.2
	Pinboard-0_87:4.2
	Pinboard-0_86:4.2
	Pinboard-0_85:4.2
	Pinboard-0_84:4.2
	Pinboard-0_83:4.2
	Pinboard-0_82:4.2
	RO_5_07:4.2
	Pinboard-0_81:4.2
	Pinboard-0_80:4.2
	Pinboard-0_79:4.2
	Pinboard-0_78:4.2
	Pinboard-0_77:4.2
	Pinboard-0_76:4.2
	Ursula_merge:4.1
	Pinboard-0_75:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rleggett_Pinboard-0_75d:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rleggett_Pinboard-0_75c:4.1
	rleggett_Pinboard-0_75b:4.1
	rleggett_Pinboard-0_75:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rleggett_Pinboard-0_74:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2012.08.23.19.59.07;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	rztFpV1VBvCVZHhw;

4.3
date	2011.09.24.07.23.44;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	U6nT8u4TlrjayIAv;

4.2
date	2001.03.16.17.07.03;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.59;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.59;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.29.45;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.20.49;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.18.43;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Fix for patchy tiled backdrops on changing to non EX1/EY1 mode
Pinboard keeps a note of the mode (from OS_Byte 135) that the backdrop sprite tile was last cached in, to avoid having to recache it all the time. However, the comparison fails when the mode specifier block (ie. when OS_Byte 135 is not reporting a numeric screen mode) is static since although the mode might have changed Pinboard would not think it had and hence not recache the sprite.
The result is a patchy desktop, for example changing from EX1/EY1 to EX0/EY0 would leave a quadrant arrangement of 1 redrawn patch and 3 not redrawn.
Backdrop.s:
Line 151 onwards, when a mode specifier is used, build a magic mode word combining EX EY and BPP (the 3 parameters the cache sprite function cares about), as a stronger check.
Tail.s:
Line 130 onwards, calculate the iconbar height properly (previously used 134 pixels for EY0 modes, 1 too high, leading to a thin strip of background colour above the iconbar.
Other changes
 - Use sprite area offset names from Hdr:Sprites rather than magic numbers
 - Use OS_Byte reasons from Hdr:OsBytes
 - Use "file.s" style names in LNK commands
 - Move BadOptions/NotASprite error blocks to avoid range error when assembling debug versions
 - true and false for objasm {TRUE} and {FALSE}

Version 0.95. Tagged as 'Pinboard-0_95'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;       Buffered list is non-empty

empty_buffer
        Push    "LR"

        LDR     r1,backdrop_redraw
        CMP     r1,#-1
        BNE     next_buffer_slot

        LDR     r0,backdrop_handle
        MOV     r1,#-1
        MOV     r2,#-1
        MOV     r3,#&10000
        MOV     r4,#&10000
        SWI     XWimp_ForceRedraw

        MOV     r0,#0
        STR     r0,backdrop_redraw

        Debug   sp,"Forced redraw."

next_buffer_slot
        LDR     r0, buffered_ptr
        CMP     r0, #0
        Pull    "PC",LE
; Unlink block from buffered list (note that it is at the front of list, so it has no previous block)
        MOV     r4, r0
        LDR     r0, [r4, #next_ptr]
        STR     r0, buffered_ptr
        CMP     r0, #0
        MOVGT   r1, #0
        STRGT   r1, [r0,#prev_ptr]
        LDRGT   r0, [r0,#icon_handle]
        Debug   pi,"next icon's handle ",r0
; Find position in active list to place it
        MOV     r0, #OsByte_INKEY
        MOV     r1, #&ff                ; Shift key
        MOV     r2, #&ff
        SWI     XOS_Byte
        ADR     r0, active_ptr
        LDR     r3, [r4, #icon_handle]
        Debug   pi,"empty buffer handle ",r3
        CMP     r3, #remove_normal
        ASSERT  remove_normal > remove_tinydir
        BLE     remove_command_entry
        CMP     r3, #insert_tinydir
        BEQ     install_tinydirs
02
        LDR     r1, [r0,#next_ptr]
        CMP     r1, #0
        BLE     found_insertion_point
        CMP     r3, #-2
        BEQ     found_insertion_point
        LDR     r5, [r1, #icon_handle]
        CMP     r5, r3
        TEQEQ   r2, #&ff
        BEQ     found_insertion_point
        MOV     r0, r1
        CMP     r5, r3
        BNE     %BT02
        LDR     r1, [r0,#next_ptr]
; Link block into active list (r0->before,r1->after)
found_insertion_point
        STR     r0, [r4,#prev_ptr]
        STR     r4, [r0,#next_ptr]
        STR     r1, [r4,#next_ptr]
        CMP     r1, #0
        STRGT   r4, [r1,#prev_ptr]
; Install the icon
        BL      install_icon
; We can't be in a drag so clear drag icon.
        MOV     r1,#-1
        STR     r1,drag_icon
; If there was an error then unlink the icon and return
        STRVS   r1, [r11,#icon_handle]
        BLVS    delete_icon
        Pull    "PC",VS
; Store the icon handle
        LDR     r1, [r4,#icon_handle]
        STR     r0, [r4,#icon_handle]
        MOV     r3, r0
        CMP     r1, #insert_pinboard
        LDRNE   r0, no_icons
        LDREQ   r0, pinboard_no_icons
        ADD     r0, r0, #1
        STREQ   r0, pinboard_no_icons
        ADDNE   r0, r0, #1
        STRNE   r0, no_icons
; Check icon handle - if inserting at end then okay, else change all icon entries in buffered list
        CMP     r1, #-1
        BEQ     next_buffer_slot
        CMP     r1, #insert_pinboard
        BEQ     next_buffer_slot
        ADR     r0, buffered_ptr
02
        LDR     r0, [r0,#next_ptr]
        CMP     r0, #0
        BLE     next_buffer_slot
        LDR     r2, [r0,#icon_handle]
        CMP     r2, r1
        STREQ   r3, [r0,#icon_handle]
        B       %BT02
; ----------------------------------------------------------------------------------------------------------------------
install_tinydirs
        LDR     r0, tinydir_icon
        CMP     r0, #0
        Pull    "PC",GE
; Delete icon block
        MOV     r2, r4
        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module
        Pull    "PC",VS
; Add Tinydirs icon
        ADR     r2, tinydirs_icon_name
        MOV     r0, #SpriteReason_ReadSpriteSize
        SWI     XWimp_SpriteOp
; Valid registers r6 = sprite mode, r3,r4 = sprite width,height, r9->icon name,r10->sprite name,r11->icon
        MOVVC   r0, r6                          ; creation mode of sprite
        MOVVC   r1, #VduExt_XEigFactor
        SWIVC   XOS_ReadModeVariable
        MOVVC   r5, r3, LSL r2
        MOVVC   r3, #0
        MOVVC   r1, #VduExt_YEigFactor
        SWIVC   XOS_ReadModeVariable
        Pull    "PC",VS
        MOV     r6, r4, LSL r2
        ADD     r6, r6, #20
        MOV     r4, #20
; Transfer data
        ADR     r1, tinydirs_icon_block
        LDMIA   r1, {r7,r8,r9,r10}
        ADR     r1, dataarea
        MOV     r2, #-2
        STMIA   r1, {r2,r3,r4,r5,r6,r7,r8,r9,r10}
        SWI     XWimp_CreateIcon
        Pull    "PC",VS
        STR     r0, tinydir_icon
        B       next_buffer_slot
tinydirs_icon_block
        DCD     &0000301A
tinydirs_icon_name
        DCB     "Directory",0,0,0
        ALIGN
; ----------------------------------------------------------------------------------------------------------------------
remove_command_entry
        CMP     r3, #remove_tinydir
        BNE     %FT99
; Delete tinydir icon
        LDR     r3, tinydir_icon
        CMP     r3, #-2
        MOVEQ   r3, #-1
        STREQ   r3, tinydir_icon
        CMP     r3, #0
        Pull    "PC",LT
        MOV     r2, #-1
        STR     r2, tinydir_icon
; Delete icon block
        MOV     r2, r4
        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module
        Pull    "PC",VS
; Add Tinydirs icon
        ADR     r1, dataarea
        STR     r3, [r1,#4]
        MOV     r3, #-1
        STR     r3, [r1]
        SWI     XWimp_DeleteIcon
        Pull    "PC",VS
        B       next_buffer_slot

; Find first active icon which matches the monotonic number
99
        CMP     r3, #remove_monotonic
        BNE     %FT99
        ADR     r1, active_ptr
01
        LDR     r1, [r1,#next_ptr]
        CMP     r1, #0
        BLE     removed_all_entries
        LDR     r2, [r4, #icon_id]
        LDR     r3, [r1, #icon_id]
        CMP     r2, r3
        BNE     %BT01
; Get icon handle of icon to left of deleting one
        Push    "r4"
        LDR     r5, [r1,#icon_handle]
        ADR     r7, active_ptr
        LDR     r6, [r1,#prev_ptr]
        CMP     r6, #0
        CMPNE   r6, r7
        MOVEQ   r6, #-2
        LDRNE   r6, [r6,#icon_handle]
        MOV     r4, r1
        BL      delete_icon
        Pull    "r4,PC",VS
; Find all occurences of Add to right of in buffered list, and change to icon to left of this
; Check icon handle - if inserting at end then okay, else change all icon entries in buffered list
        Pull    "r4"
        ADR     r0, buffered_ptr
02
        LDR     r0, [r0,#next_ptr]
        CMP     r0, #0
        BLE     removed_all_entries
        LDR     r2, [r0,#icon_handle]
        CMP     r2, r5
        STREQ   r6, [r0,#icon_handle]
        B       %BT02

; Find first active icon which matches the name
99
        ADR     r1, active_ptr
01
        LDR     r1, [r1,#next_ptr]
        CMP     r1, #0
        BLE     removed_all_entries
        Pull    "PC",LE
        ADD     r2, r4, #icon_filename
        ADD     r3, r1, #icon_filename
02
        LDRB    r0, [r2], #1
        LDRB    r5, [r3], #1
        CMP     r0, #32         ;       End of source (and dest?)
        BLE     end_of_source_active
        CMP     r5, #32         ;       End of dest but not source -> failure
        BLE     %BT01
        UpperCase  r0, r6
        UpperCase  r5, r6
        CMP     r0, r5          ;       Source<>Dest -> failure
        BNE     %BT01
        B       %BT02
end_of_source_active            ;       End of source
        CMP     r5, #32
        BGT     %BT01           ;       But not dest -> failure
; Icon name at r1 matches that at r4
        Push    "r1,r4"
found_removal
; Get icon handle of icon to left of deleting one
        LDR     r5, [r1,#icon_handle]
        ADR     r7, active_ptr
        LDR     r6, [r1,#prev_ptr]
        CMP     r6, #0
        CMPNE   r6, r7
        MOVEQ   r6, #-2
        LDRNE   r6, [r6,#icon_handle]
        MOV     r4, r1
        BL      delete_icon
        Pull    "r1,r4,PC",VS
; Find all occurences of Add to right of in buffered list, and change to icon to left of this
; Check icon handle - if inserting at end then okay, else change all icon entries in buffered list
        Pull    "r1,r4"
        ADR     r0, buffered_ptr
02
        LDR     r0, [r0,#next_ptr]
        CMP     r0, #0
        BLE     %BT01
        LDR     r2, [r0,#icon_handle]
        CMP     r2, r5
        STREQ   r6, [r0,#icon_handle]
        B       %BT02
; Delete icon block
removed_all_entries
        MOV     r2, r4
        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module
        Pull    "PC",VS
        B       next_buffer_slot
; ----------------------------------------------------------------------------------------------------------------------
        LNK     Mouse.s
@


4.3
log
@Collapse dead switches.
Same binary as 0.92, not tagged.
@
text
@d50 2
a51 2
        MOV     r0, #&81
        MOV     r1, #&ff
@


4.2
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.76. Tagged as 'Pinboard-0_76'
@
text
@a97 1
      [ Version >= 9
a100 1
      |
a101 1
      ]
@


4.1
log
@Initial revision
@
text
@d17 2
a18 2
empty_buffer                      
        Push    "LR" 
d30 1
a30 1
 
d37 1
a37 1
        LDR     r0, buffered_ptr            
d43 1
a43 1
        STR     r0, buffered_ptr  
d77 1
a77 1
found_insertion_point       
d91 1
a91 1
        Pull    "PC",VS   
d107 1
a107 1
        CMP     r1, #-1                                                            
d109 1
a109 1
        CMP     r1, #insert_pinboard                                                            
d112 1
a112 1
02                              
d119 1
a119 1
        B       %BT02           
d125 1
a125 1
; Delete icon block                    
d162 1
a162 1
remove_command_entry               
d174 1
a174 1
; Delete icon block                    
d186 1
a186 1
        B       next_buffer_slot   
d189 1
a189 1
99                    
d194 1
a194 1
        LDR     r1, [r1,#next_ptr]   
d200 1
a200 1
        BNE     %BT01                              
d208 1
a208 1
        MOVEQ   r6, #-2         
d217 1
a217 1
02                              
d230 1
a230 1
        LDR     r1, [r1,#next_ptr]   
d246 1
a246 1
        BNE     %BT01                              
d253 1
a253 1
found_removal       
d260 1
a260 1
        MOVEQ   r6, #-2         
d269 1
a269 1
02                              
d277 1
a277 1
; Delete icon block                    
d283 1
a283 1
        B       next_buffer_slot   
d285 1
a285 1
        LNK     s.Mouse
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
