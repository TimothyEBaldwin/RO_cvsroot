head	4.17;
access;
symbols
	Pinboard-1_04:4.17
	Pinboard-1_03:4.17
	Pinboard-1_02:4.16
	Pinboard-1_01:4.16
	Pinboard-1_00:4.15
	Pinboard-0_99:4.14
	Pinboard-0_98:4.14
	Pinboard-0_97:4.13
	Pinboard-0_96:4.12
	Pinboard-0_95:4.11
	Pinboard-0_94:4.10
	Pinboard-0_93:4.10
	Pinboard-0_92:4.8
	Pinboard-0_91:4.8
	Pinboard-0_90:4.8
	Pinboard-0_89:4.7
	Pinboard-0_88:4.7
	Pinboard-0_87:4.7
	Pinboard-0_86:4.7
	Pinboard-0_85:4.6
	Pinboard-0_84:4.6
	Pinboard-0_83:4.6
	Pinboard-0_82:4.5
	RO_5_07:4.5
	Pinboard-0_81:4.5
	Pinboard-0_80:4.4
	Pinboard-0_79:4.4
	Pinboard-0_78:4.4
	Pinboard-0_77:4.3
	Pinboard-0_76:4.3
	Ursula_merge:4.1.4.8
	Pinboard-0_75:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.7
	Ursula_RiscPC:4.1.4.7.0.2
	rleggett_Pinboard-0_75d:4.1.4.8
	rthornb_UrsulaBuild-19Aug1998:4.1.4.7
	UrsulaBuild_FinalSoftload:4.1.4.7
	rthornb_UrsulaBuild-12Aug1998:4.1.4.7
	aglover_UrsulaBuild-05Aug1998:4.1.4.7
	rthornb_UrsulaBuild-29Jul1998:4.1.4.7
	rthornb_UrsulaBuild-22Jul1998:4.1.4.7
	rleggett_Pinboard-0_75c:4.1.4.7
	rleggett_Pinboard-0_75b:4.1.4.7
	rleggett_Pinboard-0_75:4.1.4.7
	rthornb_UrsulaBuild-15Jul1998:4.1.4.6
	rthornb_UrsulaBuild-07Jul1998:4.1.4.6
	rthornb_UrsulaBuild-17Jun1998:4.1.4.6
	rthornb_UrsulaBuild-03Jun1998:4.1.4.6
	rthornb_UrsulaBuild-27May1998:4.1.4.6
	rthornb_UrsulaBuild-21May1998:4.1.4.6
	rleggett_Pinboard-0_74:4.1.4.6
	rthornb_UrsulaBuild_01May1998:4.1.4.6
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.17
date	2017.05.06.09.46.26;	author rool;	state Exp;
branches;
next	4.16;
commitid	0B1LpIyDG92VpjQz;

4.16
date	2016.05.10.21.05.00;	author rsprowson;	state Exp;
branches;
next	4.15;
commitid	O1qMSkbGF6eaMY5z;

4.15
date	2016.05.08.16.45.04;	author jlee;	state Exp;
branches;
next	4.14;
commitid	6qtTwO9XstbZoH5z;

4.14
date	2014.03.09.23.16.44;	author jlee;	state Exp;
branches;
next	4.13;
commitid	XYk2o9fGemkJZ4sx;

4.13
date	2014.03.09.17.43.11;	author jlee;	state Exp;
branches;
next	4.12;
commitid	JtNt6aLcTqSi93sx;

4.12
date	2012.09.11.19.31.15;	author rsprowson;	state Exp;
branches;
next	4.11;
commitid	wgigNNHV7grve9kw;

4.11
date	2012.08.23.19.59.15;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	rztFpV1VBvCVZHhw;

4.10
date	2011.09.24.07.31.20;	author rsprowson;	state Exp;
branches;
next	4.9;
commitid	nRjnbtmOSxK1BIAv;

4.9
date	2011.09.24.07.25.50;	author rsprowson;	state Exp;
branches;
next	4.8;
commitid	NapphrXjtkIXyIAv;

4.8
date	2011.04.14.13.23.50;	author bavison;	state Exp;
branches;
next	4.7;
commitid	OKU4kYQkZdJNMNfv;

4.7
date	2007.11.05.17.23.48;	author srevill;	state Exp;
branches;
next	4.6;

4.6
date	2006.03.14.18.45.07;	author srevill;	state Exp;
branches;
next	4.5;

4.5
date	2003.07.31.12.55.12;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2002.11.11.12.34.51;	author rsprowson;	state Exp;
branches;
next	4.3;

4.3
date	2001.03.16.17.07.04;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.19.05.23;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.30.04;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.30.04;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.29.58;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.06.13.08.40.37;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	97.08.04.11.50.48;	author rleggett;	state Exp;
branches;
next	4.1.4.3;

4.1.4.3
date	97.10.21.09.57.07;	author rleggett;	state Exp;
branches;
next	4.1.4.4;

4.1.4.4
date	97.12.05.09.40.08;	author rleggett;	state Exp;
branches;
next	4.1.4.5;

4.1.4.5
date	98.01.07.10.28.43;	author rleggett;	state Exp;
branches;
next	4.1.4.6;

4.1.4.6
date	98.04.15.11.24.55;	author rleggett;	state Exp;
branches;
next	4.1.4.7;

4.1.4.7
date	98.07.22.09.30.07;	author rleggett;	state Exp;
branches;
next	4.1.4.8;

4.1.4.8
date	98.09.18.10.18.18;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.21.06;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.18.58;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.17
log
@Fixes for pinboard backdrop sprite changing
Detail:
  Fix out-by-1 error in MakeCompactModeWord, the palette checksum read from array index -1 due to the loop construction.
  Consider the x/y size as well as the compact mode word when deciding whether to recache the backdrop sprite.
  Don't assume the screen byte size is equivalent to working out the sprite byte size, due to word rounding at the end of each line. Calculate it properly.
  Allow the Wimp_SlotSize to exactly equal the required memory (previously, had to be larger).
Admin:
  Submission from Timothy Baldwin, with minor refactoring.

Version 1.03. Tagged as 'Pinboard-1_03'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > s.StartLoop

; ----------------------------------------------------------------------------------------------------------------------
;      Application title and 'TASK' word store
taskidentifier  DCB     "TASK"
tasktitle       DCB     "TaskID",0
                ALIGN
; ----------------------------------------------------------------------------------------------------------------------
;       Set up error blocks

        MakeErrorBlock Pinboard_NoWimp

ErrorOldWimp
        SWI     XWimp_CloseDown
        SWI     XOS_WriteI+4            ; just in case (old Wimp!)
        ADR     r0,ErrorBlock_Pinboard_NoWimp
        BL      msgtrans_errorlookup

ErrorNoWimp
        SWI     OS_GenerateError        ; can't use Wimp to report error!

CloseWimp

        EntryS  r0
        LDR     r0, mytaskhandle        ; Get task handle
        LDR     r1, taskidentifier
        SWI     XWimp_CloseDown
        MOV     r0, #0
        STR     r0, mytaskhandle
        EXITS

; ----------------------------------------------------------------------------------------------------------------------
template_filename
        DCB     "Pinboard:Templates",0
        ALIGN
;info_name
;        DCB     "Proginfo",0
;        ALIGN
saveas_name
        DCB     "saveas",0
        ALIGN
back_name
        DCB     "Back",0
        ALIGN

bgcol
        DCD &77777700
 [ technicolour_text
fgcol
        DCD &FFFFFF00
 ]

MessagesList
                DCD     Message_DataLoad
                DCD     Message_DataLoadAck
                DCD     Message_DataSaveAck
                DCD     Message_FilerDevicePath
                DCD     Message_ModeChange
              [ :LNOT: ursulawimp
                DCD     Message_PaletteChange
              ]
                DCD     Message_MenusDeleted
                DCD     Message_HelpRequest
                DCD     Message_Iconize
                DCD     Message_IconizeAt
                DCD     Message_TaskNameIs
                DCD     Message_WindowClosed
                DCD     Message_TaskCloseDown
                DCD     Message_WindowInfo
                DCD     Message_FilerSelection
                DCD     Message_FontChanged
                DCD     Message_ToggleBackdrop
                DCD     0

; ----------------------------------------------------------------------------------------------------------------------
;       Start up the wimp task for Pinboard
Start
        MOV     r11, r12
        LDR     r12, [r12]              ; get workspace pointer

        addr    r0, ErrorBlock_CantStartPinboard
        MOV     r1,#0                   ; Relies on global error message
        MOV     r2,#0
        ADRL    r4,Title
        SWI     XMessageTrans_ErrorLookup
        CMP     r12, #0
        SWIEQ   OS_GenerateError        ; abort if module not initialised

        LDR     r14, mytaskhandle       ; abort if already a task
        CMP     r14, #-1
        SWINE   OS_GenerateError

        ADRL    sp, stacktop            ; STACK IS NOW VALID!

        BL      msgtrans_openfile
        SWIVS   OS_GenerateError

        ADR     r0,message_file_block+4
        ADR     r1,tasktitle
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XMessageTrans_Lookup
        ADRVSL  r2,Title

        LDR     r0, bgcol
        STR     r0, background_colour

 [ technicolour_text
        LDR     r0, fgcol
        STR     r0,foreground_colour
 ]

        MOV     r0,#0
        STR     r0,poll_word
        STR     r0,slot_size                    ; We don't have a slot.
        STR     r0,GotToClearBackdrop
        STR     r0,MonotonicID
        STR     r0,backdrop_options

        ORR     r0, r0, #PinboardOption_UseWinToCorner
        ORR     r0, r0, #PinboardOption_WinToCornerLR
        ORR     r0, r0, #PinboardOption_WinToCornerHV
        STR     r0, Pinboard_options

        MOV     r0, #-1
        STR     r0, IconizeAtX
        STR     r0, IconizeAtY

        MOV     r0, #Default_IconizeAtFlags
        STR     r0, IconizeAtFlags
        MOV     r0, #0
        STR     r0,Pinboard_Icons
        STR     r0,Window_Icons
        STR     r0,All_PB_Icons
        STR     r0,TinyDirs_Icons
        STR     r0,Pinboard_Selected
        STR     r0,TinyDirs_Selected
        STR     r0,Windows_Selected
        STR     r0,Iconbar_Icons
        STR     r0,soft_selection_window
        STR     r0,CachedBackdrop_x1
        STR     r0,CachedBackdrop_y1

        SUB     r0,r0,#1
        STR     r0,CachedBackdropMode
        STR     r0,TinyDirs_Handle

        MOV     r0, #300                ; We know about wimp 3.00 and have a messages list.
        LDR     r1, taskidentifier
        ADR     r3, MessagesList
        SWI     XWimp_Initialise
        LDR     r3, =269                ; Wimp version required
        CMP     r0, #256                ; needs Wimp with Wimp_PollWord, draggable iconbar icons
                                        ; and Iconize and close window messages.
        BCC     ErrorOldWimp

        STR     r1, mytaskhandle        ; Store task handle

        ADR     r1, template_filename   ; Load in the templates
        SWI     XWimp_OpenTemplate
        BLVS    CloseWimp
        SWIVS   OS_GenerateError

        ADR     r1, dataarea                ; Get template for back window.
        LDR     r2, =indirected_data_offset
        ADD     r2,r2,r12
        ADD     r3, r2, #indirected_space
        MOV     r4, #-1                     ; No font array
        ADR     r5, back_name               ; Name of window.
        MOV     r6, #0                      ; Search from first template.
        SWI     XWimp_LoadTemplate
        BLVS    CloseWimp
        SWIVS   OS_GenerateError

        BL      read_mode_variables         ; Read screen bounding box.
        [ truncate_filenames
        BL      read_font_widths
        ]

        ADR     r1, bounding_box            ; Set correct extent
        LDMIA   r1, {r2,r3,r4,r5}
        ADD     r4,r4,#100
        ADD     r5,r5,#100
        ADRL    r1, dataarea+40
        STMIA   r1, {r2,r3,r4,r5}

        ADR     r1, dataarea                ; Create the backdrop window
        SWI     XWimp_CreateWindow
        STRVC   r0, backdrop_handle
        BLVS    CloseWimp
        SWIVS   OS_GenerateError

        ADR     r1, dataarea                ; Get template for saveas box.
        LDR     r2, =save_filename_offset
        ADD     r2,r2,r12
        ADD     r3, r2, #&180
        MOV     r4, #-1
        ADR     r5, saveas_name
        MOV     r6, #0
        SWI     XWimp_LoadTemplate
        BLVS    CloseWimp
        SWIVS   OS_GenerateError
        ADR     r1, dataarea            ; Create the info window
        LDR     r14,[r1,#88+2*32+20]
        DebugS  sa,"Default name is ",R14
        STR     r14,save_filename_address
        SWI     XWimp_CreateWindow
        STRVC   r0, saveas_handle

        SWI     XWimp_CloseTemplate

        BL      set_icon_bar_height

        ADR     r1, dataarea            ; Open the backdrop window
        MOV     r0, r1
        LDR     r2, backdrop_handle
        STR     r2, [r0],#4

        ADR     r3, bounding_box        ; Screen bounding box.
        LDMIA   r3, {r4,r5,r6,r7}
        LDR     r5, icon_bar_height     ; Don't cover iconbar.
        ADD     r6,r6,#100
        ADD     r7,r7,#100
        STMIA   r0!, {r4,r5,r6,r7}

        MOV     r8, #-2                 ; bottom of stack
        STMIA   r0, {r6,r7,r8}          ; Scroll x / Scroll y & open behind.

        Debug   bd,"Open Window"

        SWI     XWimp_OpenWindow        ; Go open the window.
        BLVS    CloseWimp
        SWIVS   OS_GenerateError

        BL      FreeAll                 ; Free icon list, backdrop path etc. if used

      [ defaultbackdrop
        BL      CheckLCD
      ]

        BL      Int_ModeChange

      [ useECFforLCD
        BL      setupECF
      ]

; ----------------------------------------------------------------------------------------------------------------------
;       Wimp polling routine
repollwimp
        Debug   sa,"Repoll wimp"
        BLVS    ReportError

; See if we need to add tinydirs icon.

        LDR     r0,Pinboard_options
        TST     r0,#PinboardOption_TinyDirs
        BEQ     %FT01

        LDR     r0,TinyDirs_Icons
        CMP     r0,#0
        BNE     %FT01

        Debug   sa,"Calling add tiny dirs"
        Push    "PC"
        B       Int_AddTinyDirs
        MOV     r0,r0
01
; Call Wimp_Poll

        Debug   sa,"Calling Wimp_Poll"
        MOV     R0, #null_bit :OR: pointerchange_bits
        ORR     R0, R0, #pollword_enable
        ADR     R1,dataarea
        ADR     r3, poll_word
        SWI     XWimp_Poll              ; can't call non-X form
        Debug   sa,"Wimp_poll returned ",r0
        BVS     repollwimp
        Debug   sa,"No error in wimp_poll"
; Call the appropriate routine using a fast jump table
        ADR     LR,repollwimp
        CMP     R0,#(endjptable-jptable)/4
        ADDCC   PC,PC,R0,ASL #2
        MOV     PC,LR

jptable
        MOV     PC,LR                   ;  0  null reason
        B       Redraw                  ;  1  redraw window
        B       open_window             ;  2  open window
        MOV     PC,LR                   ;  3  close window
        MOV     PC,LR                   ;  4  pointer leaving window
        MOV     PC,LR                   ;  5  pointer entering window
        B       mouse_click             ;  6  mouse click
        B       drag_end                ;  7  drag box complete
        B       Key_Press_Event         ;  8  key pressed.
        B       menu_selection          ;  9  menu selection
        MOV     PC,LR                   ; 10
        MOV     PC,LR                   ; 11
        MOV     PC,LR                   ; 12
        B       poll_word_set           ; 13  poll word non-zero
        MOV     PC,LR                   ; 14
        MOV     PC,LR                   ; 15
        MOV     PC,LR                   ; 16
        B       message_received        ; 17  message_received
        B       message_received        ; 18  message_received_ack
        B       message_bounced         ; 19  message_bounced
endjptable


;----------------------------------------------------------------------------------------------------------------------
; Key_Pressed
;     Check to see which window has the keypress event. The backdrop window gets
;     input focus at the start of a drag operation so that the Escape key can then
;     cancel the drag.
;
Key_Press_Event ROUT
        Push    "R0, R10, LR"
        LDR     R10, [R1]       ; Make a note of the keypress window handle
        LDR     R0, [R1, #24]   ; Check the key is escape
        TEQ     R0, #&1B
        BNE     %FT01
        ; Check there is a drag in progress
        LDR     R0, DragType
        TEQ     R0, #DragType_NoDrag
        BEQ     %FT01
        ; Abort the drag and restore input focus
        MOV     R0, #DragType_NoDrag
        STR     R0, DragType
        BL      Restore_Focus
        SWI     XDragASprite_Stop
        Pull    "R0, R10, PC"
01      ; Skip the drag cancel stuff
        LDR     R0, backdrop_handle
        TEQ     R0, R10
        Pull    "R0, R10, LR"
        BNE     Save_KeyPressed
        LDR     R0, [R1, #24]   ; Pass-on any non-escape keys
        SWI     XWimp_ProcessKey
        MOV     PC, LR


;----------------------------------------------------------------------------------------------------------------------
; open_window
;     Open window unless it's the backdrop window which is opened only on a mode change.
;
open_window

        Push    "LR"

        Debug   pi,"open_window"
        LDR     r0,backdrop_handle
        LDR     r14,[r1]
        CMP     r0,r14
        SWINE   XWimp_OpenWindow        ;  2  open window

        Pull    "PC"

; ----------------------------------------------------------------------------------------------------------------------

poll_word_set

        Push    "LR"

        LDR     R0,poll_word
        TST     R0,#PollWordReason_Buffered
        BICNE   R0,R0,#PollWordReason_Buffered
        STRNE   R0,poll_word
        BLNE    ReadBufferedList
        Pull    "PC",VS
        LDR     R0,poll_word
        TST     R0,#PollWordReason_Recache
 [ technicolour_text
        BLNE    change_icon_colours     ; trashes flags
        TST     R0,#PollWordReason_Recache
 ]
        BICNE   R0,R0,#PollWordReason_Recache
        STRNE   R0,poll_word
        BLNE    CacheBackdropSprite

        LDR     lr,poll_word
        TST     lr,#PollWordReason_Remove
        BICNE   lr,lr,#PollWordReason_Remove
        STRNE   lr,poll_word
        BLNE    ClearBackdrop
        Pull    "PC"

; ----------------------------------------------------------------------------------------------------------------------
Redraw  ROUT

        Push    "LR"

      [ useECFforLCD
        MOV     r0,#1
        SWI     XOS_ReadSysInfo
        Pull    "PC",VS
        MOV     r11,r1                  ; save monitor type
      ]

        ADR     r1,dataarea
        LDR     r9,backdrop_handle
        Debug   td,"Window handle = ",r9
        STR     r9,[r1]

        LDR     r9,backdrop_options
        Debug   td,"Redraw: options are ",r9

        SWI     XWimp_RedrawWindow
        Pull    "PC",VS

01      CMP     r0,#0
        Pull    "PC",EQ

        TST     r9,#bd_OptionActive
        TSTNE   r9,#bd_OptionScaled :OR: bd_OptionTiled
        BNE     %FT10

      [ useECFforLCD
        CMP     r11,#5
        BEQ     %FT08
        LDR     r0,=128+4
        SWI     XWimp_SetColour
        MOVS    r1,PC
08
        MOVEQ   r0,#&30
        ADREQ   r1,backdropECF
        SWIEQ   XOS_SetColour
      |
        Push    "r3,r4"
        LDR     r0, background_colour
        MOV     r3, #128+256
        MOV     r4, #0
        SWI     XColourTrans_SetGCOL
        Pull    "r3,r4"
      ]
        Pull    "PC",VS
        SWI     XOS_WriteI+16           ; Clear background to colour 4
        Pull    "PC",VS

10      TST     r9,#bd_OptionActive     ; do we have a backdrop image?
        BEQ     %FT02                   ; if not, skip plotting of image

        TST     r9,#bd_OptionTiled      ; should the image be tiled?
        BLNE    PlotImageTiled          ; if so, plot the tiled image
        TST     r9, #bd_OptionScaled    ; should the image be scaled?
        TSTEQ   r9, #bd_OptionCentred   ; or centred on screen?
        BLNE    PlotImageScaled         ; if so, plot the image scaled/centred

        ; We've dealt with this redraw rectangle see if there's another one

02      ADR     r1,dataarea             ;
        SWI     XWimp_GetRectangle      ; get next redraw rectangle
        Pull    "PC",VS                 ; exit if something went wrong
        B       %BT01                   ; deal with next rectangle


;-------------------------------------------------------------------------------
; In: Nothing
;
; Out: All registers preserved
;-------------------------------------------------------------------------------
PlotImageScaled
        Entry   "r0-r12"

        LDR     r14,backdrop_options    ; get options for backdrop image
        TST     r14,#bd_OptionJPEG      ; is it a jpeg image?
        BEQ     %FT10                   ; if not, plot a sprite

        ; Scaled/centred backdrop jpeg
        MOV     r0, #&8000              ; -> jpeg image data
        LDR     r1, Sprite_x            ; x co-ordinate at which to plot
        LDR     r2, Sprite_y            ; y co-ordinate at which to plot
        ADR     r3, ScaleFactors        ; -> scale factors to use
        LDR     r4, slot_size           ; size of image
        MOV     r5, #1                  ; 1 => dither output
        SWI     XJPEG_PlotScaled        ; plot jpeg (ignore any errors)
        B       %FT20                   ; jump to exit

        ; Scaled/centred backdrop sprite
10      LDR     r0,=&200 + SpriteReason_PutSpriteUserCoords
        MOV     r1,#&8000               ; -> sprite area
        ADD     r2,r1,#&10              ; -> sprite to plot
        LDR     r3,Sprite_x             ; x co-ordinate at which to plot
        LDR     r4,Sprite_y             ; y co-ordinate at which to plot
        MOV     r5,#0                   ; 0 => plot action is overwrite
        SWI     XOS_SpriteOp            ; plot sprite (ignore any errors)

20
        EXIT


;-------------------------------------------------------------------------------
; In: Nothing
;
; Out: All registers preserved
;-------------------------------------------------------------------------------
PlotImageTiled
        Entry   "r0-r12"

        LDR     r14,backdrop_options
        TST     r14,#bd_OptionJPEG
        BNE     %FT05
        ; Tiled sprite, use the new tiled OS_SpriteOp
        LDR     r0,Screen_y1
        MOV     r9,#1
        LDR     r10,YEig
        ADD     r4,r0,r9,LSL r10
        LDR     r0,=SpriteReason_TileSpriteScaled+512
        MOV     r1,#&8000
        ADD     r2,r1,#16
        MOV     r3,#0
        MOV     r5,#0
        MOV     r6,#0
        MOV     r7,#0
        SWI     XOS_SpriteOp
      [ standalonemessages
        ; Try plotting manually if it looks like the call isn't supported
        EXIT    VC
        LDR     r0,[r0]
        LDR     r1,=ErrorNumber_Sprite_BadReasonCode
        TEQ     r0,r1
        EXIT    NE
      |
        EXIT
      ]

05
        ADR     r1,dataarea             ; Get the redraw rectangle

        ; Work out MinX of first tile to plot

        LDR     r14,[r1,#28]            ; X0 of current rectangle.
        LDR     r0,scale_x1             ; width of image in OS units
        DivRem  r3,r14,r0,r2,norem      ;
        MUL     r6,r0,r3                ; MinX of leftmost tile to plot
        Debug   bd,"First x ",r6

        ; Work out MinY of first tile to plot

        LDR     r0,Screen_y1            ;
        LDR     r14,scale_y1            ;
        MOV     r9,#1                   ;
        LDR     r10,YEig                ;
        MOV     r9,r9,ASL r10           ;
        ADD     r0,r0,r9                ;
        SUB     r3,r14,#0               ;
        LDR     r4,[r1,#32]             ; Y0 of current rectangle.
        SUB     r2,r0,r4                ; r2 = ScrY1 - Y0
        ADD     r2,r2,r3                ; r2 = (ScrY1-Y0)+YSize-1
        DivRem  r3,r2,r14,r5,norem      ; r3 = (ScrY1-Y0+YSize-1)  / YSize
        LDR     r14,scale_y1            ;
        MUL     r5,r3,r14               ; r5 = INT ( (ScrY1-Y0+YSize-1)  / YSize ) * YSize
        SUB     r8,r0,r5                ; r3 = ScrY1 - r5 (Base Y)
        Debug   bd,"First y ",r8

        MOV     R7,R6                   ;
        LDR     r9, [r1,#36]            ; r9  = redraw MaxX
        LDR     r10,[r1,#40]            ; r10 = redraw MaxY

10      MOV     r0,r7                   ; MinX of next tile
        MOV     r1,r8                   ; MinY of next tile

        LDR     r14,backdrop_options    ; get options for backdrop image
        TST     r14,#bd_OptionJPEG      ; is it a jpeg image?

        ADR     r14,%FT20               ; set up a return address
        BNE     PlotJpegTiled           ; if so, plot jpeg
        BEQ     PlotSpriteTiled         ; if not, plot sprite

20      LDR     r2, scale_x1            ; width of image in OS units
        ADD     r7, r7, r2              ; hence MinX of next tile
        CMP     r7, r9                  ; have we gone past redraw MaxX?
        BLT     %BT10                   ; if not, plot this tile

        ; We've gone past the redraw MaxX, move to next row

        MOV     r7, r6                  ; reset MinX to leftmost tile
        LDR     r2, scale_y1            ; height of image in OS units
        ADD     r8, r8, r2              ; hence MinY of next row of tiles
        CMP     r8, r10                 ; have we gone past redraw MaxY?
        BLT     %BT10                   ; if not, plot this tile

        EXIT


;-------------------------------------------------------------------------------
; In:   R0 = x co-ordinate at which to plot
;       R1 = y co-ordinate at which to plot
;
; Out:  All registers preserved
;-------------------------------------------------------------------------------
PlotJpegTiled
        Entry   "r0-r5"

        MOV     r5, #1                  ; 1 => dither output
        LDR     r4, slot_size           ; size of image
        MOV     r3, #0                  ; 0 => no scale factors (1:1)
        MOV     r2, r1                  ; x co-ordinate at which to plot
        MOV     r1, r0                  ; y co-ordinate at which to plot
        MOV     r0, #&8000              ; -> jpeg image data
        SWI     XJPEG_PlotScaled        ; plot jpeg (ignore any errors)

        EXIT


;-------------------------------------------------------------------------------
; In:   R0 = x co-ordinate at which to plot
;       R1 = y co-ordinate at which to plot
;
; Out:  All registers preserved
;-------------------------------------------------------------------------------
PlotSpriteTiled
        Entry   "r0-r5"

        MOV     r5,#0                   ; 0 => plot action is overwrite
        MOV     r4,r1                   ; x co-ordinate at which to plot
        MOV     r3,r0                   ; y co-ordinate at which to plot
        LDR     r0,=&200 + SpriteReason_PutSpriteUserCoords
        MOV     r1,#&8000               ; -> sprite area
        ADD     r2,r1,#&10              ; -> sprite to plot
        SWI     XOS_SpriteOp            ; plot sprite (ignore any errors)

        EXIT


        LNK     Messages.s


@


4.16
log
@Emit boot relative Pin/AddTinyDir commands where possible
When saving the desktop settings, use the same substring matching logic that !Configure's boot addapps/lookat/run uses, and replace the base of the name with Boot: or Boot:^.
This means that if the boot drive is renamed the pinboard still starts up with the same items on it.
Ditch support for Message_SaveDesktop - the code's been a NOP since Ursula (circa 1998).
Tested on a Raspberry Pi, renaming the SD card.

Version 1.01. Tagged as 'Pinboard-1_01'
@
text
@d155 2
@


4.15
log
@Avoid unnecessary remainder calculations. Fix wonky "snap to grid" logic.
Detail:
  s/Drag, s/Messages, s/StartLoop - Avoid unnecessary remainder calculation in DivRem macro
  s/Icons - Fix grid coordinate rounding when tidying to the left
Admin:
  Tested on Cortex-A15


Version 1.00. Tagged as 'Pinboard-1_00'
@
text
@a75 1
                DCD     Message_SaveDesktop
@


4.14
log
@Fix background tiling logic
Detail:
  s/StartLoop - Fix non-softload version to exit immediately after the tiled OS_SpriteOp instead of falling through to the old manual loop. Make sure r1 is initialised correctly for the manual loop (contrary to the source comments, the function was previously relying on r1 being a pointer to the redraw rectangle on entry)
Admin:
  Tested on BB-xM (ROM build with OS_SpriteOp 65), Iyonix (softload without OS_SpriteOp 65 available)
  Issue spotted by eagle-eyed Sprow


Version 0.98. Tagged as 'Pinboard-0_98'
@
text
@d545 1
a545 1
        DivRem  r3,r14,r0,r2            ;
d561 1
a561 1
        DivRem  r3,r2,r14,r5            ; r3 = (ScrY1-Y0+YSize-1)  / YSize
@


4.13
log
@Use OS_SpriteOp 65 for tiled backdrop sprites
Detail:
  s/StartLoop - Use OS_SpriteOp 65 for drawing tiled backdrop sprites. Fall back to manual tiling code in softload versions if OS_SpriteOp 65 unavailable.
Admin:
  Tested on Iyonix, BB-xM
  Requires HdrSrc-2_42


Version 0.97. Tagged as 'Pinboard-0_97'
@
text
@d534 2
d539 2
@


4.12
log
@Fix for not recalculating pixel translation on backdrop tile going from G256 to C256 (or G16 to C16) mode specifier
The change in Pinboard-0_95 to get eigen factor rescaling right included a quick exit when neither the bpp nor eigen factors had changed.
However, changing from a greyscale to colour 8bpp or 4bpp mode falls fouls of this (since bpp and eigen are the same), so the backdrop sprite was not recached.
There was code to collect Message_PaletteChanged, however the Wimp hasn't sent this round since pre RISC OS 3.60, additionally the mode change code was manually disabling it (not required since Message_ModeChange was never accompanied by Message_PaletteChange according to PRM3-230). This has been switched out.
Now, the 'have I already done this sprite' flag includes the bpp and eigen factors plus a 13 bit hash of the desktop palette.

Version 0.96. Tagged as 'Pinboard-0_96'
@
text
@d511 26
@


4.11
log
@Fix for patchy tiled backdrops on changing to non EX1/EY1 mode
Pinboard keeps a note of the mode (from OS_Byte 135) that the backdrop sprite tile was last cached in, to avoid having to recache it all the time. However, the comparison fails when the mode specifier block (ie. when OS_Byte 135 is not reporting a numeric screen mode) is static since although the mode might have changed Pinboard would not think it had and hence not recache the sprite.
The result is a patchy desktop, for example changing from EX1/EY1 to EX0/EY0 would leave a quadrant arrangement of 1 redrawn patch and 3 not redrawn.
Backdrop.s:
Line 151 onwards, when a mode specifier is used, build a magic mode word combining EX EY and BPP (the 3 parameters the cache sprite function cares about), as a stronger check.
Tail.s:
Line 130 onwards, calculate the iconbar height properly (previously used 134 pixels for EY0 modes, 1 too high, leading to a thin strip of background colour above the iconbar.
Other changes
 - Use sprite area offset names from Hdr:Sprites rather than magic numbers
 - Use OS_Byte reasons from Hdr:OsBytes
 - Use "file.s" style names in LNK commands
 - Move BadOptions/NotASprite error blocks to avoid range error when assembling debug versions
 - true and false for objasm {TRUE} and {FALSE}

Version 0.95. Tagged as 'Pinboard-0_95'
@
text
@d73 1
d75 1
d284 2
a285 2
        MOV     R0, #&31
        ORR     R0, R0, #&400000        ; Poll word (low priority)
@


4.10
log
@Shade "Configure..." when boot was unsuccessful.
When BootResources$Path is unset the option to run the configure plugin is no longer available.
Shared a "Filer_Run " string in 3x places.
Replaced most occurrences of calling XOS_ReadModeVariable of the current mode's XEig and YEig factors to use the cached copy sitting unloved in the workspace. Should thrash less during redraw.

Version 0.93. Tagged as 'Pinboard-0_93'
@
text
@d605 1
a605 1
        LNK     s.Messages
@


4.9
log
@Replace magic numbers with sumbols from header files for OS_ calls.
Same binary as 0.92, not tagged.
@
text
@a203 15
        ;ADR     r1, dataarea                ; Get template for info box.
        ;LDR     r2, =indirected_data_offset
        ;ADD     r2,r2,r12
        ;ADD     r3, r2, #indirected_space
        ;MOV     r4, #-1
        ;ADR     r5, info_name
        ;MOV     r6, #0
        ;SWI     XWimp_LoadTemplate
        ;BLVS    CloseWimp
        ;SWIVS   OS_GenerateError
        ;ADR     r1, dataarea            ; Create the info window
        ;SWI     XWimp_CreateWindow
        ;STRVC   r0, info_dbox_handle


d348 1
a348 1
        SWI	XWimp_ProcessKey
@


4.8
log
@  Add Message_ToggleBackdrop to allow the backdrop to be moved to front or back.
Detail:
  The Message_ToggleBackdrop has been introduced by ROL in one of their Select
  releases. In order to bring the RISC OS 5 API closer the ROL branch this
  changeset aims to add this message to RO5.

  Applications can broadcast Message_ToggleBackdrop to request that the backdrop
  application moves the backdrop. The message can be used to move the backdrop
  to the front, the back, toggle it or to get notified of the backdrop's
  current position.

  After the backdrop has been moved, this message is sent back to the
  application to notify it of the backdrop's new position.

  Message_ToggleBackdrop &400D1:
     +0  = 24 (Message size)
     +4  = Backdrop controlling application
     +8  = My reference number
     +12 = Your reference number
     +16 = &400D1 (Message_ToggleBackdrop)
     +20 = Flags (if not present, assumed 0)
             b0-1  = type of toggle
                      0 = toggle
                      1 = front
                      2 = back
                      3 = notify of status
             other = reserved
Admin:
  Tested on RO 5.16
Author:
  Fred Graute

Version 0.90. Tagged as 'Pinboard-0_90'
@
text
@d504 1
a504 1
10      LDR     r0,=34+&200             ; 34 => plot sprite at x,y given
d612 1
a612 1
        LDR     r0,=34+&200             ; 34 => plot sprite at x,y given
@


4.7
log
@  Bug fixed and refactored code for plotting the background image.
Details:
  Changed plotting of tiled jpegs so that only affected tiles are redrawn.
  Plotting of tiled sprites started one pixel too low.
  Tiled jpegs used a different origin to tiled sprites.
  Tiled sprites plotting treated redraw MaxX/MaxY as inclusive.
Admin:
  Tested on Iyonix RO5.11
Changes by:
  Fred Graute

Version 0.86. Tagged as 'Pinboard-0_86'
@
text
@d85 1
@


4.6
log
@  Different way of doing escape-aborts-drag implementation
Detail:
  Although the previous check-in works, it uses EventV to trap escape key
  press events. This mechanism doesn't stop them from being passed on to
  whoever has input focus (e.g. a task window).

  The new way to do things is to grab input focus when a drag starts and
  to restore it (if possible) when the drag f we abort the drag (and restore focus). All other keys
  are passed on to the Wimp.

  The side-effect is that any window which has focus will temporarily lose
  focus for the duration of a Pinboard drag op I think we can
  live with that.
Admin:
  Tested on Iyonix and works fine. Now, if only the Filer did this, too...

Version 0.83. Tagged as 'Pinboard-0_83'
@
text
@a411 1

d433 2
a434 2
01
        CMP     r0,#0
a461 3
10
        TST     r9,#bd_OptionActive
        BEQ     %FT02
d463 59
a521 18
        TST     r9, #bd_OptionJPEG
        BEQ     %FT12
        BL      plot_jpeg
        LDR     r9, backdrop_options
        B       %FT02
12
        TST     r9,#bd_OptionTiled
        BNE     %FT14
        LDR     r0,=34+&200             ; Not tiled, plot at pre-calculated x,y
        MOV     r1,#&8000
        ADD     r2,r1,#&10
        LDR     r3,Sprite_x
        LDR     r4,Sprite_y
        MOV     r5,#0
        SWI     XOS_SpriteOp
        Pull    "PC",VS
        B       %FT02
14
d523 1
a523 1
; Tiled sprite plotting goes here.
d526 3
a528 3
        LDR     r0,scale_x1
        DivRem  r3,r14,r0,r2
        MUL     r6,r0,r3
d531 9
a539 6
        LDR     r0,Screen_y1
        LDR     r14,scale_y1
        MOV     r9,#1
        LDR     r10,YEig
        MOV     r9,r9,ASL r10
        SUB     r3,r14,r9
d544 1
a544 1
        LDR     r14,scale_y1
d546 2
a547 2
        SUB     r4,r0,r5                ; r3 = ScrY1 - r5 (Base Y)
        Debug   bd,"First y ",r4
d549 26
a574 2
        MOV     r3,r6
        LDR     r7,scale_y1
d576 1
a576 19
        LDR     r6,scale_x1
        MOV     r8,r3                   ; r8  = Base X
        LDR     r9, [r1,#36]            ; r9  = Max  X
        LDR     r10,[r1,#40]            ; r10 = Max  Y

21
        LDR     r0,=34+&200
        MOV     r1,#&8000
        ADD     r2,r1,#&10
        MOV     r5,#0
        SWI     XOS_SpriteOp
        ADD     r3,r3,r6
        CMP     r3,r9
        BLE     %BT21

        MOV     r3,r8
        ADD     r4,r4,r7
        CMP     r4,r10
        BLE     %BT21
a577 1
        LDR     r9,backdrop_options
d579 16
a594 1
02
d596 1
a596 4
        ADR     r1,dataarea
        SWI     XWimp_GetRectangle
        Pull    "PC",VS
        B       %BT01
d599 3
a601 2
;---------------------------------------------------------------
; plot_jpeg
d603 12
a614 3
; Plot a JPEG backdrop

plot_jpeg Entry
a615 46
        TST     r9,#bd_OptionTiled
        BNE     %FT10
        TST     r9, #bd_OptionScaled
        BNE     %FT20
        TST     r9, #bd_OptionCentred
        BNE     %FT20
        B       %FT80

10      ; Tiled backdrop
        MOV     r7, #0
        LDR     r8, icon_bar_height
        LDR     r9, Screen_x1
        LDR     r10, Screen_y1

12
        MOV     r0, #&8000
        MOV     r1, r7
        MOV     r2, r8
        MOV     r3, #0
        LDR     r4, slot_size
        MOV     r5, #1
        SWI     XJPEG_PlotScaled
        ; trap error

        LDR     r2, scale_x1            ; width of image in OS units
        ADD     r7, r7, r2
        CMP     r7, r9
        BLT     %BT12

        MOV     r7, #0                  ; height of image in OS units
        LDR     r2, scale_y1
        ADD     r8, r8, r2
        CMP     r8, r10
        BLT     %BT12
        B       %FT80

20      ; Scaled/centred backdrop
        MOV     r0, #&8000
        LDR     r1, Sprite_x
        LDR     r2, Sprite_y
        ADR     r3, ScaleFactors
        LDR     r4, slot_size
        MOV     r5, #1
        SWI     XJPEG_PlotScaled

80
d621 1
@


4.5
log
@A few assumptions about SWIs preserving flags remained: nuked.
A few TEQ Rn,#0 changed to use 'S' and save an instruction.
Fix for misscaled tiled backdrop sprite in EX/EY0 mode - an 'out by 1'
error meant that some of the background colour shone through when the
tile sprite got resized to be too short.In any other EX/EY mode you never
noticed it due to rounding errors in the scaling.
The "Iconise to..." options submenu is now shaded if the Wimp has the
iconise buttons turned off: this minimises confusion for anyone who
hasn't realised that shift-close and iconise are subtley different in that
only the iconise button obeys the "Iconise to..." options,whereas
shift-close iconises at the point of application.

Version 0.81. Tagged as 'Pinboard-0_81'
@
text
@d319 1
a319 1
        B       Save_KeyPressed         ;  8  key pressed.
d335 32
@


4.4
log
@Commented out "proginfo" string,no longer used.
Prefixed the pin and addtinydir commands that get saved in the
pinboard file with "X " so your pinboard setup continues even if a file
is no longer available.ROL did this with a new XPin command,not taken.
Merged changes from ROL to allow the icon text to be an arbitary colour
though this can be switched out with "technicolour_text" for the
purists.
Help entry added to the pinboard selection submenu,this will be greyed
out except when
 it's an app
 and it has a !help file
 and it is the only object selected
like the filer does.
Updated messages file accordingly.
Menu clicking on the "save pinboard settings" OK button no longer saves
the file,and adjust clicking keeps the menu tree open
 -> fixes bug report from 1998,now removed from "Status" file
Saveas template resized to match !Edit.
Fixed problem of select dragging a file to an app leaving the icon
selected (due to two conditional MOV R0's being followed by an
unconditional one for some reason).
 -> fixes bug report from 1998,now removed from "Status" file
Tweaked a few CMP#0 BLT's to test specifically for the iconbar handle.
The bug report in "Status" about bits of filenames being left on the
pinboard can be bodged by popping an ADD r0,r0,#16 after the XWimp_TextOp
in s.buffered but I've not done this yet.

Version 0.78. Tagged as 'Pinboard-0_78'
@
text
@d412 5
a416 2
        LDRNE   r0,=128+4
        SWINE   XWimp_SetColour
d421 1
a421 3
        ;LDR     r0,=128+4
        ;SWI     XWimp_SetColour
        Push    "r0-r4"
d426 1
a426 1
        Pull    "r0-r4"
d442 8
a449 7
        LDREQ   r0,=34+&200             ; Not tiled, plot at pre-calculated x,y
        MOVEQ   r1,#&8000
        ADDEQ   r2,r1,#&10
        LDREQ   r3,Sprite_x
        LDREQ   r4,Sprite_y
        MOVEQ   r5,#0
        SWIEQ   XOS_SpriteOp
d451 2
a452 1
        BEQ     %FT02
d484 1
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.76. Tagged as 'Pinboard-0_76'
@
text
@d50 3
a52 3
info_name
        DCB     "Proginfo",0
        ALIGN
d62 4
d71 1
d99 1
a99 1
        SWILE   OS_GenerateError        ; abort if module not initialised
d102 2
a103 2
        CMP     r14, #0
        SWIGE   OS_GenerateError
d120 5
d266 2
d364 4
@


4.2
log
@Ursula branch merged.
Added inclusion of Machine header for new CMOS header
Moved to srccommit.
Templates contain hardwired version/date information which is a long
  way out of date.  This has not been fixed in this checkin.

Version 0.75. Tagged as 'Pinboard-0_75'
@
text
@d36 1
a36 1
CloseWimp     
d38 1
a38 1
        Push    "r0,lr"
d44 1
a44 1
        Pull    "r0,pc",,^
d63 1
a63 1
MessagesList   
d130 1
a130 1
        
d162 1
a162 1
        SWIVS   OS_GenerateError  
d186 1
a186 1
        
d199 1
a199 1
        ;MOV     r6, #0       
d205 1
a205 1
        ;STRVC   r0, info_dbox_handle    
d214 1
a214 1
        MOV     r6, #0       
d223 1
a223 1
        STRVC   r0, saveas_handle    
d262 1
a262 1
repollwimp   
d275 1
a275 1
                  
d282 1
a282 1
           
d284 1
a284 1
        MOV     R0, #&31    
d288 1
a288 1
        SWI     XWimp_Poll              ; can't call non-X form 
d376 1
a376 1
        ADR     r1,dataarea               
d381 1
a381 1
        LDR     r9,backdrop_options 
d389 2
a390 2
                  
        TST     r9,#bd_OptionActive 
d393 1
a393 1
                
d443 1
a443 1
        LDR     r0,Screen_y1        
d446 1
a446 1
        LDR     r10,YEig    
d478 1
a478 1
        BLE     %BT21      
d495 1
a495 1
plot_jpeg ENTRY
d504 1
a504 1
        
d520 1
a520 1
        
d525 1
a525 1
        
@


4.1
log
@Initial revision
@
text
@d60 3
d73 1
d81 1
d112 3
d121 13
a133 1
        STR     r0,Pinboard_options
d135 1
d140 2
d176 3
d193 13
a205 13
        ADR     r1, dataarea                ; Get template for info box.
        LDR     r2, =indirected_data_offset
        ADD     r2,r2,r12
        ADD     r3, r2, #indirected_space
        MOV     r4, #-1
        ADR     r5, info_name
        MOV     r6, #0       
        SWI     XWimp_LoadTemplate
        BLVS    CloseWimp
        SWIVS   OS_GenerateError
        ADR     r1, dataarea            ; Create the info window
        SWI     XWimp_CreateWindow
        STRVC   r0, info_dbox_handle    
d393 1
d402 8
a409 2
        LDR     r0,=128+4
        SWI     XWimp_SetColour
d418 6
d488 57
@


4.1.4.1
log
@Added option to iconise windows to a corner
@
text
@a69 5

                [ Version >= 67
                DCD     Message_IconizeAt
                ]
                
d113 1
a113 13

      [ Version >=67
        ORR     r0, r0, #PinboardOption_UseWinToCorner
        ;ORR     r0, r0, #PinboardOption_IconiseToIconBar
        ORR     r0, r0, #PinboardOption_WinToCornerLR
        ORR     r0, r0, #PinboardOption_WinToCornerHV
        ;ORR     r0, r0, #PinboardOption_WinToCornerTB
        STR     r0, Pinboard_options
        MOV     r0, #0
      |
        STR     r0,Pinboard_options        
      ]

@


4.1.4.2
log
@Improved consistency of files/windows, plus JPEG backdrops
@
text
@d119 1
a119 1
        [ Version >=67
a124 2
        ;ORR     r0, r0, #PinboardOption_TidyToCornerHV
        ;ORR     r0, r0, #PinboardOption_TidyToCornerTB
d127 1
a127 1
        |
d129 1
a129 1
        ]
a401 9
        [ Version >= 67
        TST     r9, #bd_OptionJPEG
        BEQ     %FT12
        BL      plot_jpeg
        LDR     r9, backdrop_options
        B       %FT02
12
        ]

a465 58

 [ Version >= 67
;---------------------------------------------------------------
; plot_jpeg
;
; Plot a JPEG backdrop

plot_jpeg ENTRY

        TST     r9,#bd_OptionTiled
        BNE     %FT10
        TST     r9, #bd_OptionScaled
        BNE     %FT20
        TST     r9, #bd_OptionCentred
        BNE     %FT20
        B       %FT80
        
10      ; Tiled backdrop
        MOV     r7, #0
        LDR     r8, icon_bar_height
        LDR     r9, Screen_x1
        LDR     r10, Screen_y1

12
        MOV     r0, #&8000
        MOV     r1, r7
        MOV     r2, r8
        MOV     r3, #0
        LDR     r4, slot_size
        MOV     r5, #1
        SWI     &49982                  ; XJPEG_PlotScaled
        ; trap error
        
        LDR     r2, scale_x1            ; width of image in OS units
        ADD     r7, r7, r2
        CMP     r7, r9
        BLT     %BT12
        
        MOV     r7, #0                  ; height of image in OS units
        LDR     r2, scale_y1
        ADD     r8, r8, r2
        CMP     r8, r10
        BLT     %BT12
        B       %FT80

20      ; Scaled/centred backdrop
        MOV     r0, #&8000
        LDR     r1, Sprite_x
        LDR     r2, Sprite_y
        ADR     r3, ScaleFactors
        LDR     r4, slot_size
        MOV     r5, #1
        SWI     &49982                  ; XJPEG_PlotScaled

80
        EXIT

 ]
@


4.1.4.3
log
@Windows, as well as files, can be selected, plus new menu structure and options
@
text
@d70 2
d73 2
a133 1
        STR     r0,Window_Icons
a137 1
        STR     r0, Windows_Selected
d186 13
a198 13
        ;ADR     r1, dataarea                ; Get template for info box.
        ;LDR     r2, =indirected_data_offset
        ;ADD     r2,r2,r12
        ;ADD     r3, r2, #indirected_space
        ;MOV     r4, #-1
        ;ADR     r5, info_name
        ;MOV     r6, #0       
        ;SWI     XWimp_LoadTemplate
        ;BLVS    CloseWimp
        ;SWIVS   OS_GenerateError
        ;ADR     r1, dataarea            ; Create the info window
        ;SWI     XWimp_CreateWindow
        ;STRVC   r0, info_dbox_handle    
@


4.1.4.4
log
@Pinboard options now set via a *PinboardOptions command.
Backdrop command now includes a -Colour &GGBBRR00 switch to set background
colour.
Save now only saves a Pinboard command, followed by Pin commands. Options
and backdrops are instead set by Configure.
A click on 'Save' (as opposed to opening the saveas box) will save the
pinboard under the current filename.
@
text
@a59 3
bgcol
        DCD &77777700

a77 1

a107 3
        LDR     r0, bgcol
        STR     r0, background_colour

a383 1
                
d392 2
a393 8
        ;LDR     r0,=128+4
        ;SWI     XWimp_SetColour
        Push    "r0-r4"
        LDR     r0, background_colour
        MOV     r3, #128+256
        MOV     r4, #0
        SWI     XColourTrans_SetGCOL
        Pull    "r0-r4"
@


4.1.4.5
log
@Removed Info option on TinyDirs menu.
Updated interactive help messages.
Shift+Click on close icon now ALWAYS iconises the window underneath the icon
(old behaviour), while a click on iconise button iconises according to the
IconiseTo corner.
@
text
@d122 1
d124 1
d127 3
d131 4
a135 6
        MOV     r0, #-1
        STR     r0, IconizeAtX
        STR     r0, IconizeAtY
        
        MOV     r0, #0
        STR     r0, IconizeAtFlags
d416 1
d423 2
d490 1
a490 1

d546 1
@


4.1.4.6
log
@Fixed a couple of bugs.
Improved tidying code.
Filenames are now truncated.
@
text
@a173 3
        [ truncate_filenames
        BL      read_font_widths
        ]
d513 1
a513 1
        SWI     XJPEG_PlotScaled
d535 1
a535 1
        SWI     XJPEG_PlotScaled
@


4.1.4.7
log
@* If Ursula window manager not present, always iconises to close icon.
* Sorted problem with spacing of icons dragged from long filename dir viewers.
* If the co-ordinates for Message_IconizeAt put an icon off screen, it is
  pushed back on screen by Pinboard.
@
text
@d131 1
a131 1
        MOV     r0, #Default_IconizeAtFlags
a132 1
        MOV     r0, #0
@


4.1.4.8
log
@When the only window icons are on the iconbar, grey out the 'Select all'
menu item.
File 'Status' added giving Pinboard status after RPC2 cancellation.
@
text
@d140 1
a140 2
        STR     r0,Windows_Selected
        STR     r0,Iconbar_Icons
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
