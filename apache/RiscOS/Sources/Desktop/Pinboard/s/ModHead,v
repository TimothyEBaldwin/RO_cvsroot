head	4.10;
access;
symbols
	Pinboard-1_04:4.10
	Pinboard-1_03:4.10
	Pinboard-1_02:4.10
	Pinboard-1_01:4.10
	Pinboard-1_00:4.10
	Pinboard-0_99:4.10
	Pinboard-0_98:4.10
	Pinboard-0_97:4.9
	Pinboard-0_96:4.9
	Pinboard-0_95:4.9
	Pinboard-0_94:4.8
	Pinboard-0_93:4.8
	Pinboard-0_92:4.7
	Pinboard-0_91:4.7
	Pinboard-0_90:4.7
	Pinboard-0_89:4.7
	Pinboard-0_88:4.7
	Pinboard-0_87:4.7
	Pinboard-0_86:4.7
	Pinboard-0_85:4.7
	Pinboard-0_84:4.7
	Pinboard-0_83:4.7
	Pinboard-0_82:4.6
	RO_5_07:4.5
	Pinboard-0_81:4.5
	Pinboard-0_80:4.5
	Pinboard-0_79:4.5
	Pinboard-0_78:4.5
	Pinboard-0_77:4.4
	Pinboard-0_76:4.3
	Ursula_merge:4.1.4.10
	Pinboard-0_75:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.10
	Ursula_RiscPC:4.1.4.10.0.2
	rleggett_Pinboard-0_75d:4.1.4.10
	rthornb_UrsulaBuild-19Aug1998:4.1.4.10
	UrsulaBuild_FinalSoftload:4.1.4.10
	rthornb_UrsulaBuild-12Aug1998:4.1.4.10
	aglover_UrsulaBuild-05Aug1998:4.1.4.10
	rthornb_UrsulaBuild-29Jul1998:4.1.4.10
	rthornb_UrsulaBuild-22Jul1998:4.1.4.10
	rleggett_Pinboard-0_75c:4.1.4.10
	rleggett_Pinboard-0_75b:4.1.4.10
	rleggett_Pinboard-0_75:4.1.4.10
	rthornb_UrsulaBuild-15Jul1998:4.1.4.9
	rthornb_UrsulaBuild-07Jul1998:4.1.4.9
	rthornb_UrsulaBuild-17Jun1998:4.1.4.9
	rthornb_UrsulaBuild-03Jun1998:4.1.4.9
	rthornb_UrsulaBuild-27May1998:4.1.4.9
	rthornb_UrsulaBuild-21May1998:4.1.4.9
	rleggett_Pinboard-0_74:4.1.4.9
	rthornb_UrsulaBuild_01May1998:4.1.4.8
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.10
date	2015.01.16.00.19.39;	author jlee;	state Exp;
branches;
next	4.9;
commitid	e8KqBkhpmH3yjb6y;

4.9
date	2012.08.23.19.59.12;	author rsprowson;	state Exp;
branches;
next	4.8;
commitid	rztFpV1VBvCVZHhw;

4.8
date	2011.09.24.07.25.50;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	NapphrXjtkIXyIAv;

4.7
date	2006.03.14.18.45.07;	author srevill;	state Exp;
branches;
next	4.6;

4.6
date	2006.03.14.15.32.36;	author srevill;	state Exp;
branches;
next	4.5;

4.5
date	2002.11.11.12.34.51;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2002.08.22.21.36.10;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2001.03.16.17.07.04;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.19.05.21;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.30.03;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.30.03;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.29.54;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.06.13.08.40.31;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	97.08.04.11.50.29;	author rleggett;	state Exp;
branches;
next	4.1.4.3;

4.1.4.3
date	97.10.21.09.57.03;	author rleggett;	state Exp;
branches;
next	4.1.4.4;

4.1.4.4
date	97.12.05.09.40.03;	author rleggett;	state Exp;
branches;
next	4.1.4.5;

4.1.4.5
date	98.01.07.10.28.40;	author rleggett;	state Exp;
branches;
next	4.1.4.6;

4.1.4.6
date	98.03.27.09.36.33;	author rleggett;	state Exp;
branches;
next	4.1.4.7;

4.1.4.7
date	98.03.27.13.26.03;	author rleggett;	state Exp;
branches;
next	4.1.4.8;

4.1.4.8
date	98.04.23.11.52.20;	author rleggett;	state Exp;
branches;
next	4.1.4.9;

4.1.4.9
date	98.05.06.08.54.16;	author rleggett;	state Exp;
branches;
next	4.1.4.10;

4.1.4.10
date	98.07.22.09.30.05;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.21.00;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.18.54;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.10
log
@Escape some dollars
Detail:
  s/MenuSelect, s/ModHead - Escape some dollars contained in strings to avoid warnings from objasm
Admin:
  Resulting binary unchanged


Version 0.98. Retagged as 'Pinboard-0_98'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; s.ModHead
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        ASSERT  (.=Module_BaseAddr)

        DCD     Start          - Module_BaseAddr
        DCD     Init           - Module_BaseAddr
        DCD     Die            - Module_BaseAddr
        DCD     Service        - Module_BaseAddr
        DCD     Title          - Module_BaseAddr
        DCD     Helpstr        - Module_BaseAddr
        DCD     Helptable      - Module_BaseAddr
        DCD     0
        DCD     0
        DCD     0
        DCD     0
 [ International_Help <> 0
        DCD     message_filename - Module_BaseAddr
 |
        DCD     0
 ]
 [ :LNOT: No32bitCode
        DCD     ModuleFlags      - Module_BaseAddr
 ]


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

resourcefsfiles
      [ standalonemessages
        ResourceFile    $MergedMsgs, Resources.Pinboard.Messages
        ResourceFile    LocalRes:Templates, Resources.Pinboard.Templates
      ]
      [ defaultbackdrop
        ResourceFile    LCDTile, Resources.Pinboard.LCDTile
      ]
        DCD     0

Title   DCB     "Pinboard",0
Helpstr DCB     "Pinboard",9,"$Module_HelpVersion", 0
        ALIGN
Taskid  DCB     "TASK"
                ALIGN

 [ :LNOT: No32bitCode
ModuleFlags     DCD   ModuleFlag_32bit
 ]

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Desktop_Pinboard_Code
;
; Handle *Desktop_Pinboard - only enter modules if after a Service_StartWimp

Desktop_Pinboard_Code
        Push    "LR"

        LDR     r12, [r12]
        Debug   ,"Desktop_Pinboard"
        LDR     r14, mytaskhandle
        CMP     r14, #-1
        MOVEQ   r2, r0                  ; r2 --> command tail
        MOVEQ   r0, #ModHandReason_Enter
        ADREQ   r1, Title
        SWIEQ   XOS_Module
01
        ADR     r0, ErrorBlock_CantStartPinboard
        MOV     r1, #0                                  ; Relies on a global message
        MOV     r2, #0
        ADR     r4, Title
        SWI     XMessageTrans_ErrorLookup
        Pull    "PC"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; ErrorBlock_CantStartPinboard
;
; Error block for use of *Desktop_Pinboard

ErrorBlock_CantStartPinboard
        DCD     0
        DCB     "UseDesk",0
        ALIGN


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; AddTinyDir_Code
;
; Called when OS executes an AddTinyDir *Command.

AddTinyDir_Code
        Push    "LR"

        LDR     r12, [r12]              ; Do we have a task active ?
        CMP     r12, #0
        Pull    "PC",LE                 ; No, just return.

        MOV     r1,r0
        ADRL    r0,addtiny_args
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XOS_ReadArgs            ; Read command line args.
        Pull    "PC",VS

        LDR     r0,[r2]
        CMP     r0,#0
        BNE     %FT01

        Debug   td,"AddTinyDirs, no args."

        LDR     r0,Pinboard_options
        ORR     r0,r0,#PinboardOption_TinyDirs
        STR     r0,Pinboard_options

        MOV     r1,#-2
        MOV     r0,#BufferReason_AddTinyDirsIcon
        BL      BufferIcon
        Pull    "PC"
01
        Debug   td,"AddTinyDirs, with path."

        MOV     r0,#FSControl_CanonicalisePath
        LDR     r1,[r2]                 ; Pointer to path
        ADR     r2,dataarea
        MOV     r3,#0
        MOV     r4,#0
        MOV     r5,#256
        SWI     XOS_FSControl
        Pull    "PC",VS
        DebugS  pi,"Full Path is : ",r2
        RSB     r3,r5,#&100
        ADD     r3,r3,#1

        MOV     r1,#-2
        BL      GetMonotonicID
        MOV     r0,#BufferReason_Remove
        BL      BufferIcon
        MOV     r0,#BufferReason_AddNewTinyDir
        BL      BufferIcon

        Pull    "PC"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Pinboard_Code
;
; Called when Pinboard command is executed by OS.

Pinboard_Code
        Push    "LR"

        LDR     r12, [r12]              ; Do we have a task active ?
        CMP     r12, #0
        Pull    "PC",EQ                 ; No, just return.

        Debug   sa,"*Pinboard called."

        MOV     r1,r0
        ADRL    r0,pinboard_args
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XOS_ReadArgs            ; Read command line args.
        Pull    "PC",VS

        ; Reset IconizeAt
        MOV     r0, #-1
        STR     r0, IconizeAtX
        STR     r0, IconizeAtY
        MOV     r0, #Default_IconizeAtFlags
        STR     r0, IconizeAtFlags

        Debug   pi,"Pinboard options are :",r0

        ; Clear any pending backdrop recache
        ;LDR     r0,poll_word
        ;BIC     r0,r0,#PollWordReason_Recache
        ;STR     r0,poll_word

        LDR     r1,backdrop_handle
        MOV     r0,#BufferReason_RemoveAllPinboard
        BL      BufferIcon

        Pull    "PC"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; PinboardOptions_Code
;
; Called when PinboardOptions command is executed by OS.

PinboardOptions_Code
        Push    "LR"

        LDR     r12, [r12]              ; Do we have a task active ?
        CMP     r12, #0
        Pull    "PC",LE                 ; No, just return.

        MOV     r1,r0
        ADRL    r0,pinboardoptions_args
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XOS_ReadArgs            ; Read command line args.
        Pull    "PC",VS

      [ debug_commands
        ; Query option
        LDR     r0, [r2, #48]
        CMP     r0, #0
        BLNE    deb_winsel
        CMP     r0, #0
        Pull    "pc", NE
      ]

        ; Grid option
        LDR     r0,[r2]
        CMP     r0,#0
        MOVNE   r0,#PinboardOption_Grid

        ; Check for IconiseToIconBar
        LDR     lr,[r2,#4]
        CMP     lr,#0
        ORRNE   r0,r0,#PinboardOption_IconiseToIconBar
        BNE     %FT20

        ; WindowsToTopLeft
        LDR     r1, [r2, #8]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
        ; WindowsToBottomLeft
        LDR     r1, [r2, #12]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
        ORRGT   r0, r0, #PinboardOption_WinToCornerTB
        ; WindowsToTopRight
        LDR     r1, [r2, #16]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
        ORRGT   r0, r0, #PinboardOption_WinToCornerLR
        ; WindowsToBottomRight
        LDR     r1, [r2, #20]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
        ORRGT   r0, r0, #PinboardOption_WinToCornerLR
        ORRGT   r0, r0, #PinboardOption_WinToCornerTB
        ; WindowsStackVertical
        LDR     r1, [r2, #24]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_WinToCornerHV

20
        ; TidyToTopLeft
        ; TidyToBottomLeft
        LDR     r1, [r2, #32]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerTB
        ; TidyToTopRight
        LDR     r1, [r2, #36]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerLR
        ; TidyToBottomRight
        LDR     r1, [r2, #40]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerLR
        ORRGT   r0, r0, #PinboardOption_TidyToCornerTB
        ; TidyStackVertical
        LDR     r1, [r2, #44]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerHV

        STR     r0,Pinboard_options

        MOV     r0, #-1
        STR     r0, IconizeAtX
        STR     r0, IconizeAtY
        MOV     r0, #Default_IconizeAtFlags
        STR     r0, IconizeAtFlags

        Pull    "PC"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; RemoveTinyDir_Code
;
; Called when RemoveTinyDir_Code command is executed by OS.

RemoveTinyDir_Code  ROUT
        Push    "LR"

        LDR     r12, [r12]             ; Do we have a task running ?
        CMP     r12, #0
        Pull    "PC",LE

        MOV     r1,r0
        ADRL    r0,addtiny_args
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XOS_ReadArgs            ; Read command line args.
        Pull    "PC",VS

        LDR     r0,[r2]
        CMP     r0,#0
        BNE     %FT01

        Debug   td,"RemoveTinyDir, no args."

        MOV     r1,#-2
        MOV     r0,#BufferReason_RemoveAllTinyDirs
        BL      BufferIcon
        Pull    "PC"
01
        Debug   td,"RemoveTinyDir with path."


        MOV     r0,#FSControl_CanonicalisePath
        LDR     r1,[r2]                 ; Pointer to path
        ADR     r2,dataarea
        MOV     r3,#0
        MOV     r4,#0
        MOV     r5,#256
        SWI     XOS_FSControl
        Pull    "PC",VS
        DebugS  pi,"Full Path is : ",r2
        RSB     r3,r5,#&100
        ADD     r3,r3,#1

        MOV     r1,#-2
        BL      GetMonotonicID
        MOV     r0,#BufferReason_Remove
        BL      BufferIcon

        Pull    "PC"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Helptable

Pinboardcommand
        Command Desktop_Pinboard,0,0,International_Help
        Command AddTinyDir,1,0,&100:OR: International_Help
        Command RemoveTinyDir,1,0,&100:OR: International_Help
        Command Pinboard,2,0, International_Help
        Command Pin,3,3,&100:OR: International_Help
 [ technicolour_text
        Command BackDrop,9,0,&100:OR: International_Help
 |
        Command BackDrop,7,0,&100:OR: International_Help
 ]
        Command PinboardOptions, 6, 0, International_Help
        DCB     0


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Non international help

        [ International_Help=0

Desktop_Pinboard_Help
        DCB     "The Pinboard utility allows directories and files to appear on the desktop background."
        DCB     13,10
        DCB     "It also provides the TinyDirs utility which allows directories and files to appear on the icon bar."
        DCB     13,10
        DCB     "Do not use *Desktop_Pinboard, use *Desktop instead."
        DCB     13,10
Desktop_Pinboard_Syntax
        DCB     "Syntax: *Desktop_Pinboard",0

AddTinyDir_Help
        DCB     "*AddTinyDir adds a file, application or directory to the desktop icon bar."
        DCB     13,10
AddTinyDir_Syntax
        DCB     "Syntax: *AddTinyDir [<pathname>]",0

; Optional delete all ????
RemoveTinyDir_Help
        DCB     "*RemoveTinyDir removes a file, application or directory icon from the desktop icon bar."
        DCB     13,10
RemoveTinyDir_Syntax
        DCB     "Syntax: *RemoveTinyDir <pathname>",0

Pinboard_Help
        DCB     "*Pinboard clears the pinboard."
        DCB     13,10
Pinboard_Syntax
        DCB     "Syntax: *Pinboard [-Grid]",0

Pin_Help
        DCB     "*Pin adds a file, application or directory to the desktop pinboard."
        DCB     13,10
Pin_Syntax
        DCB     "Syntax: *Pin <pathname> <x> <y>",0

BackDrop_Help
        DCB     "*BackDrop puts a sprite on the desktop background. Use *Backdrop -Remove to clear the background"
        DCB     13,10
BackDrop_Syntax
 [ technicolour_text
        DCB     "Syntax: *BackDrop [-Colour <&BBGGRR00>] [-TextColour <&BBGGRR00>] [-Centre | -Tile | -Scale | -Remove] [<pathname>]",0
 |
        DCB     "Syntax: *BackDrop [-Colour <&BBGGRR00>] [-Centre | -Tile | -Scale | -Remove] [<pathname>]",0
 ]

PinboardOptions_Help
        DCB     "*PinboardOptions allows you to set the options used by Pinboard.", 13
        DCB     "Switches:", 13
        DCB     "-Grid", 9, 9, 9, "Turn on grid lock", 13
        DCB     "", 9, 9, 9, "If switch not specified, grid lock is off.", 13
        DCB     "-IconiseTo<Location>", 9, "Specify location windows are iconised and tidied to", 13
        DCB     "", 9, 9, 9, "(IconBar, TopLeft, BottomLeft, TopRight, BottomRight)", 13
        DCB     "", 9, 9, 9, "Without switch, icons are iconised at pointer.", 13
        DCB     "-IconiseStackVertical", 9, "Specify vertical stacking of iconised window icons", 13
        DCB     "", 9, 9, 9, "If switch not specified, icons are stacked horizontally.", 13
        DCB     "-TidyTo<Location>", 9, "Specify location file icons are tidied to", 13
        DCB     "", 9, 9, 9, "(TopLeft, BottomLeft, TopRight, BottomRight)", 13
        DCB     "", 9, 9, 9, "Without switch, icons are tidied to top left.", 13
        DCB     "-TidyStackVertical", 9, "Specify vertical stacking of file icons", 13
        DCB     "", 9, 9, 9, "If switch not specified, icons are stacked horizontally.", 13

PinboardOptions_Syntax
        DCB     "Syntax: *PinboardOptions <switches>", 0

        |

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; International Help

Desktop_Pinboard_Help   DCB     "HPINDPB",0
Desktop_Pinboard_Syntax DCB     "SPINDPB",0

AddTinyDir_Help         DCB     "HPINADD",0
AddTinyDir_Syntax       DCB     "SPINADD",0

RemoveTinyDir_Help      DCB     "HPINREM",0
RemoveTinyDir_Syntax    DCB     "SPINREM",0

Pinboard_Help           DCB     "HPINPB",0
Pinboard_Syntax         DCB     "SPINPB",0

Pin_Help                DCB     "HPINPIN",0
Pin_Syntax              DCB     "SPINPIN",0

BackDrop_Help           DCB     "HPINBCK",0
BackDrop_Syntax         DCB     "SPINBCK",0

PinboardOptions_Help    DCB     "HPINOPT",0
PinboardOptions_Syntax  DCB     "SPINOPT",0

        ]

        ALIGN


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Module initialisation point

Init
        Entry

        LDR     r2, [r12]                       ; Have we already got a workspace ?
        CMP     r2, #0                          ; clears V

        MOVEQ   r0, #ModHandReason_Claim
        LDREQ   r3, =max_running_work
        SWIEQ   XOS_Module                      ; Claim workspace
        BVS     %FT99

        STR     r2, [r12]                       ; Store workspace pointer.
        MOV     r12, r2
01
        Debug   ,"Initialising"
      [ defaultbackdrop :LOR: standalonemessages
        ADRL    r0,resourcefsfiles
        SWI     XResourceFS_RegisterFiles       ; ignore errors
      ]
; initialise Pinboard$Path if not already done

        ADR     R0, Path
        MOV     R2, #-1
        MOV     R3, #0
        MOV     R4, #VarType_Expanded
        SWI     XOS_ReadVarVal          ; returns R2=0 if doesn't exist
        CMP     R2, #0                  ; clears V as well!

        ADREQ   R0, Path
        ADREQ   R1, PathDefault
        MOVEQ   R2, #?PathDefault
        MOVEQ   R3, #0
        MOVEQ   R4, #VarType_String
        SWIEQ   XOS_SetVarVal

;        MOV     R0, #DragType_NoDrag
;        STR     R0, DragType
;;       MOV     R0, #0      <- not needed because DragType_NoDrag = 0
;        STR     R0, EventV_Claimed
;        BL      claim_eventv
;        BVS     %FT99

        SUBS    r0,r0,r0                        ; R0 := 0, clear V; Start when wimp starts up.
        STR     r0,mytaskhandle
        STR     r0,backdrop_path                ; No backdrop picture.
        STR     r0,Buffered_list
        STR     r0,iconized_ptr
        STR     r0,Icon_list
        STR     r0,message_file_block
        STR     r0,CaretPos
99
        EXIT

Path            DCB     "Pinboard$$Path"
                DCB     0
PathDefault     DCB     RESPATH
                DCB     0
                ALIGN

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Table of service calls we want

        ASSERT  Service_Reset > Service_Memory
        ASSERT  Service_StartWimp > Service_Reset
        ASSERT  Service_StartedWimp > Service_StartWimp
        ASSERT  Service_StartFiler > Service_StartedWimp
        ASSERT  Service_ResourceFSStarting > Service_StartFiler

ServiceTable
        DCD     0
        DCD     ServiceUrsula - Module_BaseAddr
        DCD     Service_Memory
        DCD     Service_Reset
        DCD     Service_StartWimp
        DCD     Service_StartedWimp
        DCD     Service_StartFiler
      [ defaultbackdrop :LOR: standalonemessages
        DCD     Service_ResourceFSStarting
      ]
        DCD     0
        DCD     ServiceTable - Module_BaseAddr


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Module service entry point

Service
        MOV     r0, r0                  ; Indicates there is a service call table

        ; Fast rejection
        TEQ     r1, #Service_Memory
        TEQNE   r1, #Service_Reset
        TEQNE   r1, #Service_StartWimp
        TEQNE   r1, #Service_StartedWimp
        TEQNE   r1, #Service_StartFiler
      [ defaultbackdrop :LOR: standalonemessages
        TEQNE   r1, #Service_ResourceFSStarting
      ]
        MOVNE   pc, lr

ServiceUrsula

        LDR     R12, [R12]
        CMP     R12, #0
        MOVEQ   PC, LR

        TEQ     R1,#Service_StartWimp
        BEQ     svc_startwimp

        TEQ     R1,#Service_StartedWimp
        BEQ     svc_startedwimp

        TEQ     R1,#Service_Reset
        BEQ     svc_reset

        TEQ     R1, #Service_StartFiler
        STREQ   R0, Filer_taskid

      [ defaultbackdrop :LOR: standalonemessages
        TEQ     r1, #Service_ResourceFSStarting
        BNE     %FT10
        Push    "r0-r3,lr"
        ADRL    r0, resourcefsfiles
        MOV     lr, pc
        MOV     pc, r2
        Pull    "r0-r3,pc"
10
      ]

        TEQ     r1, #Service_Memory             ; Wimp wants app workspace
        MOVNE   PC,LR
        Push    "r3,lr"
        ADRL    r3,Module_BaseAddr             ; is it trying to grab ours?
        TEQ     r3,r2
        Pull    "r3,pc",NE
        LDR     r3,backdrop_options
        TST     r3,#bd_OptionActive
        MOVNE   r1,#0                           ; prevent it if we have a backdrop
        Pull    "r3,pc"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Wimp call to ask task to start up. Claimed by setting task_handle to -1, but only if 0 to start with

svc_startwimp
        Push    "lr"

        Debug   ,"Service_StartWimp"
        LDR     r14, mytaskhandle
        TEQ     r14, #0
        MOVEQ   r14, #-1
        STREQ   r14, mytaskhandle
        ADREQL  r0,  Pinboardcommand
        MOVEQ   R1, #0

        Pull    "pc"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Wimp has finished starting the tasks. If task handle=-1 then start up failed, so reset to 0.

svc_startedwimp
        Push    "lr"

        Debug   ,"Service_StartedWimp"
;  Test task handle to see if in starting sequence, or if started succesfully
        LDR     r14, mytaskhandle
        CMP     r14, #-1
        MOVEQ   r14, #0                  ; unset flag (so user can retry)
        STREQ   r14, [r12]

        Pull    "pc"

        LTORG


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Reset button pressed. Wimp has shut down. Reset task handle to 0.
; Release linked lists of icons.

svc_reset
        Push    "r0-r3, LR"

        Debug   ,"Service_Reset"
        MOV     r0, #0                  ; Clear task handle
        STR     r0, mytaskhandle

        BL      msgtrans_closefile

        BL      FreeAll

        Pull    "r0-r3,pc"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; RMKill'ing the module

Die
        Push    "R7-R11,LR"

        LDR     r12, [r12]
        CMP     r12, #0                 ; clears V
        Pull    "R7-R11,PC",EQ

        Debug   ,"Dying"

;; Remove our vector claimant
;        BL      release_eventv

; Close down the wimp end

        LDR     r0, mytaskhandle
        CMP     r0, #0

        LDRGT   r1, Taskid
        SWIGT   XWimp_CloseDown
01
        BL      msgtrans_closefile

      [ defaultbackdrop :LOR: standalonemessages
        ADRL     r0, resourcefsfiles
        SWI     XResourceFS_DeregisterFiles
      ]

        BL      FreeAll

        CLRV
        Pull    "R7-R11,PC"              ; don't refuse to die


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; FreeAll

FreeAll
        Push    "r0-r2,lr"

        LDR     r2,backdrop_path
        CMP     r2,#0
        MOVNE   r0,#0
        STRNE   r0,backdrop_path
        MOVNE   r0,#ModHandReason_Free
        SWINE   XOS_Module

        BL      FreeIconList
        BL      FreeBufferedList
        BL      FreeIconisedList

        Pull    "r0-r2,pc"


FreeIconList    ROUT

        Push    "r0-r3,LR"
        LDR     r3,Icon_list
01
        CMP     r3,#0
        STREQ   r3,Icon_list
        Pull    "r0-r3,PC",EQ

        MOV     r2,r3
        LDR     r3,[r3,#ic_next]
        MOV     r0,#ModHandReason_Free
        SWI     XOS_Module
        B       %BT01


FreeBufferedList    ROUT

        Push    "r0-r3,LR"
        LDR     r3,Buffered_list
01
        CMP     r3,#0
        STREQ   r3,Buffered_list
        Pull    "r0-r3,PC",EQ

        MOV     r2,r3
        LDR     r3,[r3,#ic_next]
        MOV     r0,#ModHandReason_Free
        SWI     XOS_Module
        B       %BT01


FreeIconisedList        ROUT
        Push    "r0-r3,lr"
        LDR     r3,iconized_ptr
01
        CMP     r3,#0
        STREQ   r3,iconized_ptr
        Pull    "r0-r3,pc",EQ

        MOV     r2,r3
        LDR     r3,[r3,#w_next_ptr]
        MOV     r0,#ModHandReason_Free
        SWI     XOS_Module
        B       %BT01


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Pin_Code
;
; Called when OS encounters a *Pin command.

Pin_Code        ROUT
        Push    "LR"

        LDR     r12, [r12]
        CMP     r12, #0
        Pull    "PC",EQ

        Debug   sa,"*Pin called."

        MOV     r1,r0
        ADRL    r0,pin_args
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XOS_ReadArgs            ; Read command line args.
        Pull    "PC",VS

        LDR     r14,[r2,#4]
        LDRB    r6,[r14,#1]
        LDRB    r0,[r14,#2]
        ORR     r6,r6,r0, LSL #8
        LDRB    r0,[r14,#3]
        ORR     r6,r6,r0, LSL #16
        LDRB    r0,[r14,#4]
        ORR     r6,r6,r0, LSL #24
        Debug   pi,"X = ",r6

        LDR     r14,[r2,#8]
        LDRB    r7,[r14,#1]
        LDRB    r0,[r14,#2]
        ORR     r7,r7,r0, LSL #8
        LDRB    r0,[r14,#3]
        ORR     r7,r7,r0, LSL #16
        LDRB    r0,[r14,#4]
        ORR     r7,r7,r0, LSL #24
        Debug   pi,"Y = ",r7

        MOV     r0,#FSControl_CanonicalisePath
        LDR     r1,[r2]                 ; Pointer to path
        ADR     r2,dataarea
        MOV     r3,#0
        MOV     r4,#0
        MOV     r5,#256
        SWI     XOS_FSControl
        Pull    "PC",VS
        DebugS  pi,"Full Path is : ",r2
        RSB     r3,r5,#&100
        ADD     r3,r3,#1

        LDR     r1,backdrop_handle
        Debug   pi,"backdrop handle is ",r1
        BL      GetMonotonicID
        MOV     r0,#BufferReason_Remove
        BL      BufferIcon
        MOV     r0,#BufferReason_AddAtXYWithoutLock
        BL      BufferIcon

        Pull    "PC"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Backdrop_Code
;
; Called when OS encounters a Backdrop *command.

BackDrop_Code
        Push    "LR"

        LDR     r12, [r12]
        CMP     r12, #0
        Pull    "PC",EQ

        Debug   bd,"*BackDrop called."

        MOV     r1,r0
        ADRL    r0,backdrop_args
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XOS_ReadArgs
        Pull    "PC",VS

        ; Deal with colour command
        LDR     r1, [r2, #24]
        CMP     r1, #0
        ;LDREQ   r0, =&77777700              ; No colour specified, so reset to grey.
        ;STREQ   r0, background_colour
        BEQ     %FT01

        LDRB    r0, [r1]
        CMP     r0, #0
        BNE     %FT01
        LDRB    r0, [r1, #2]
        MOV     r14, r0, LSL #8
        LDRB    r0, [r1, #3]
        ADD     r14, r14, r0, LSL #16
        LDRB    r0, [r1, #4]
        ADD     r14, r14, r0, LSL #24
        STR     r14, background_colour
01
 [ technicolour_text
        ; Deal with colour command
        LDR     r1, [r2, #28]
        CMP     r1, #0
        BEQ     %FT90

        LDRB    r0, [r1]
        CMP     r0, #0
        BNE     %FT90
        LDRB    r0, [r1, #2]
        MOV     r14, r0, LSL #8
        LDRB    r0, [r1, #3]
        ADD     r14, r14, r0, LSL #16
        LDRB    r0, [r1, #4]
        ADD     r14, r14, r0, LSL #24
        STR     r14, foreground_colour

90      LDR     r1,[r2,#24]
        TEQ     r1,#0
        LDREQ   r1,[r2,#28]
        TEQEQ   r1,#0
        LDRNE   r0,poll_word
        ORRNE   r0,r0,#PollWordReason_Recache
        STRNE   r0,poll_word
 ]
        ; Deal with backdrop
        MOV     r0,#0
        MOV     r1,#0
        LDR     r14,[r2,#4]     ; Centre ?
        CMP     r14,#0
        ADDNE   r1,r1,#1
        ORRNE   r0,r0,#bd_OptionCentred
        LDR     r14,[r2,#8]     ; Tile ?
        CMP     r14,#0
        ADDNE   r1,r1,#1
        ORRNE   r0,r0,#bd_OptionTiled
        LDR     r14,[r2,#12]     ; Scale ?
        CMP     r14,#0
        ADDNE   r1,r1,#1
        ORRNE   r0,r0,#bd_OptionScaled

        LDR     R14,[R2,#20]    ; Remove
        CMP     R14,#0
        LDRNE   R14,poll_word
        ORRNE   R14,R14,#PollWordReason_Remove
        STRNE   R14,poll_word
        Pull    "PC",NE

        CMP     r1,#1
        MOVLT   r0,#bd_OptionScaled     ; If no options then it is scaled.
        ADRGT   r0,ErrorBlock_Pinboard_BadOptions
        BLGT    msgtrans_errorlookup
        Pull    "PC",VS

        LDR     r14,[r12,#16]
        CMP     r14,#0
        ORRNE   r0,r0,#bd_OptionRecache

        STR     r0,backdrop_options
        Debug   bd,"Backdrop options are",r0

        LDR     r0,poll_word
        ORR     r0,r0,#PollWordReason_Recache
        STR     r0,poll_word

        MOV     r0,#FSControl_CanonicalisePath
        LDR     r1,[r2]         ; Pointer to path
        CMP     r1,#0           ; If no path given then
        Pull    "PC",LE         ;   go and recache the current backdrop
        ADR     r2,dataarea
        MOV     r3,#0
        MOV     r4,#0
        MOV     r5,#256
        DebugS  bd,"FSControl r1 -> ",r1
        SWI     XOS_FSControl
        Pull    "PC",VS

        DebugS  bd,"Full path is ",r2

; Now check that the file exists and is a sprite file.

        MOV     r0,#OSFile_ReadWithTypeNoPath
        ADR     r1,dataarea
        SWI     XOS_File
        Pull    "PC",VS

        CMP     r0,#1
        MOVNE   r2,r0
        MOVNE   r0,#OSFile_MakeError
        SWINE   XOS_File
        Pull    "PC",VS

        LDR     r0, backdrop_options
        LDR     r14,=&C85
        CMP     r6, r14
        BNE     %FT02
        ORR     r0, r0, #bd_OptionJPEG
        STR     r0, backdrop_options
        B       %FT04
02
        BIC     r0, r0, #bd_OptionJPEG
        STR     r0, backdrop_options

        LDR     r14,=&FF9
        CMP     r6,r14
        ADRNE   r0,ErrorBlock_Pinboard_NotASprite
        ADRNE   r4,dataarea
        BLNE    msgtrans_errorlookup
        Pull    "PC",VS
04
        LDR     r2,backdrop_path                ; Free old name if there is one.
        CMP     r2,#0
        MOVNE   r0,#ModHandReason_Free
        SWINE   XOS_Module
        Pull    "PC",VS

        ADR     r1,dataarea                     ; Count length of new name
01
        LDRB    r0,[r1],#1
        CMP     r0,#32
        BGE     %BT01

        ADR     r4,dataarea
        SUB     r3,r1,r4
        MOV     r0,#ModHandReason_Claim
        SWI     XOS_Module
        Pull    "PC",VS

        STR     r2,backdrop_path                ; Store name pointer

01                                              ; Now copy name into block
        LDRB    r0,[r4],#1
        STRB    r0,[r2],#1
        CMP     r0,#32
        BGE     %BT01

        Pull    "PC"

        MakeErrorBlock  Pinboard_BadOptions
        MakeErrorBlock  Pinboard_NotASprite

 [ technicolour_text
        ASSERT  :INDEX: w_next_ptr = 0
        ASSERT  :INDEX: w_icon_handle = 8
        ASSERT  :INDEX: w_icon_id = 12
        ASSERT  :INDEX: w_valid_string = 16
        ASSERT  :INDEX: ic_next = 0
        ASSERT  :INDEX: ic_icon = 8
        ASSERT  :INDEX: ic_window = 12
        ASSERT  :INDEX: ic_valid_string = 16

change_icon_colours
        ROUT
        Push    "r0-r5,lr"

        SUB     sp,sp,#40 + 16                  ; space for icon state block and new valid string
        ADD     r4,sp,#40

        MOV     r1,r4
        LDR     r2,foreground_colour
        LDR     r3,background_colour
        BL      write_colour_valid

        MOV     r1,sp

        ADR     r5,Icon_list
        BL      %FT50
        ADR     r5,iconized_ptr
        BL      %FT50

        ADD     sp,sp,#40 + 16
        Pull    "r0-r5,pc"

50
        Push    "lr"
51      LDR     r5,[r5,#0]
        TEQ     r5,#0
        Pull    "pc",EQ

        LDR     r2,[r5,#12]                     ; window handle
        CMP     r2,#-2
        BEQ     %BT51                           ; ignore icons on the iconbar
        LDR     r3,[r5,#8]                      ; icon handle
        STMIA   r1,{r2,r3}
        SWI     XWimp_GetIconState
        BVS     %BT51

        LDR     r0,[r1,#24]
        TST     r0,#1<<21                       ; if icon is selected then don't change it's valid string
        BNE     %BT51

        ADD     r2,r5,#16                       ; offset to validation string
        MOV     r3,r4
        MOV     r14,#14

01      LDRB    r0,[r3],#1
        STRB    r0,[r2],#1
        SUBS    r14,r14,#1
        BNE     %BT01

        B       %BT51
 ]

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; *Command arguments

backdrop_args   DCB     "path,"
                DCB     "Centre=C/S,"
                DCB     "Tile=T/S,"
                DCB     "Scale=S/S,"
                DCB     "N=NoRecache/S,"
                DCB     "Remove=R/S,"
                DCB     "Colour/E"
 [ technicolour_text
                DCB     ",TextColour/E"
 ]
                DCB     0
                ALIGN

pin_args        DCB     "path/A,"
                DCB     "X/E/A,"
                DCB     "Y/E/A"
                DCB     0
                ALIGN

pinboard_args
                DCB     "Grid=G/S,"
                DCB     "IconiseToIconBar=ITIB/S"
                DCB     0
                ALIGN

pinboardoptions_args
                DCB     "Grid=G/S,"
                DCB     "IconiseToIconBar=ITIB/S,"
                DCB     "IconiseToTopLeft=ITTL/S,"
                DCB     "IconiseToBottomLeft=ITBL/S,"
                DCB     "IconiseToTopRight=ITTR/S,"
                DCB     "IconiseToBottomRight=ITBR/S,"
                DCB     "IconiseStackVertical=ISV/S,"
                DCB     "TidyToTopLeft=TTTL/S,"
                DCB     "TidyToBottomLeft=TTBL/S,"
                DCB     "TidyToTopRight=TTTR/S,"
                DCB     "TidyToBottomRight=TTBR/S,"
                DCB     "TidyStackVertical=TSV/S,"
              [ debug_commands
                DCB     "Query=Q/S"
              ]
                DCB     0
                ALIGN

addtiny_args    DCB     "path",0
                ALIGN

        LNK     StartLoop.s
@


4.9
log
@Fix for patchy tiled backdrops on changing to non EX1/EY1 mode
Pinboard keeps a note of the mode (from OS_Byte 135) that the backdrop sprite tile was last cached in, to avoid having to recache it all the time. However, the comparison fails when the mode specifier block (ie. when OS_Byte 135 is not reporting a numeric screen mode) is static since although the mode might have changed Pinboard would not think it had and hence not recache the sprite.
The result is a patchy desktop, for example changing from EX1/EY1 to EX0/EY0 would leave a quadrant arrangement of 1 redrawn patch and 3 not redrawn.
Backdrop.s:
Line 151 onwards, when a mode specifier is used, build a magic mode word combining EX EY and BPP (the 3 parameters the cache sprite function cares about), as a stronger check.
Tail.s:
Line 130 onwards, calculate the iconbar height properly (previously used 134 pixels for EY0 modes, 1 too high, leading to a thin strip of background colour above the iconbar.
Other changes
 - Use sprite area offset names from Hdr:Sprites rather than magic numbers
 - Use OS_Byte reasons from Hdr:OsBytes
 - Use "file.s" style names in LNK commands
 - Move BadOptions/NotASprite error blocks to avoid range error when assembling debug versions
 - true and false for objasm {TRUE} and {FALSE}

Version 0.95. Tagged as 'Pinboard-0_95'
@
text
@d523 1
a523 1
Path            DCB     "Pinboard$Path"
@


4.8
log
@Replace magic numbers with sumbols from header files for OS_ calls.
Same binary as 0.92, not tagged.
@
text
@d782 1
a782 1
        ADR     r0,pin_args
d846 1
a846 1
        ADR     r0,backdrop_args
d1008 3
a1122 3
        MakeErrorBlock  Pinboard_BadOptions
        MakeErrorBlock  Pinboard_NotASprite

@


4.7
log
@  Different way of doing escape-aborts-drag implementation
Detail:
  Although the previous check-in works, it uses EventV to trap escape key
  press events. This mechanism doesn't stop them from being passed on to
  whoever has input focus (e.g. a task window).

  The new way to do things is to grab input focus when a drag starts and
  to restore it (if possible) when the drag f we abort the drag (and restore focus). All other keys
  are passed on to the Wimp.

  The side-effect is that any window which has focus will temporarily lose
  focus for the duration of a Pinboard drag op I think we can
  live with that.
Admin:
  Tested on Iyonix and works fine. Now, if only the Filer did this, too...

Version 0.83. Tagged as 'Pinboard-0_83'
@
text
@d136 1
a136 1
        MOV     r0,#37                  ; Canonicalise path
d328 1
a328 1
        MOV     r0,#37                  ; Canonicalise path
d476 1
a476 1
        MOVEQ   r0, #6
a528 62
;; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;; Claim EventV so that we can watch for the Escape key being pressed
;; (at which point we stop any drag which we're currently doing).
;;
;claim_eventv
;        Push    "R1-R2, LR"
;        MOV     R0, #EventV
;        ADR     R1, eventv_handler
;        MOV     R2, R12
;        SWI     XOS_Claim
;        STRVC   PC, EventV_Claimed
;        Pull    "R1-R2, PC"
;
;; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;; Remove our EventV handler.
;;
;release_eventv
;        LDR     R0, EventV_Claimed
;        TEQ     R0, #0
;        MOVEQ   PC, LR
;        Push    "R1-R2, LR"
;        MOV     R0, #EventV
;        ADR     R1, eventv_handler
;        MOV     R2, R12
;        SWI     XOS_Claim
;        ADR     R0, callback_handler
;        MOV     R1, R12
;        SWI     XOS_RemoveCallBack
;        SUBS    R0, R0, R0      ; R0=0, V is clear
;        STR     R0, EventV_Claimed
;        Pull    "R1-R2, PC"
;
;; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;; Watch for Escape key going down. If we're currently doing a drag, stop it.
;eventv_handler
;        TEQ     R0, #11         ; only care about key transition events...
;        TEQEQ   R2, #0          ; ...on the Escape key...
;        TEQEQ   R1, #0          ; ...being pressed (not released)
;        MOVNE   PC, LR          ; exit if any of the above conditions aren't met
;        Push    "R0-R1, LR"
;        ; If there's a drag in progress, stop it
;        LDR     R0, DragType
;        TEQ     R0, #DragType_NoDrag
;        Pull    "R0-R1, PC", EQ
;        ADR     R0, callback_handler
;        MOV     R1, R12
;        SWI     XOS_AddCallBack ; use a callback in case DragASprite_Stop isn't safe here
;        Pull    "R0-R1, LR"
;        ; Claim the event (so nobody else acts upon it)
;        Pull	"PC"
;
;; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;; Abort the current drag operation (if any)
;callback_handler
;        Push    "R0, LR"
;        MOV     R0, #DragType_NoDrag
;        STR     R0, DragType
;        SWI     XDragASprite_Stop
;        CLRV
;        ; Don't return any errors
;        Pull    "R0, PC"

d808 1
a808 1
        MOV     r0,#37                  ; Canonicalise path
d935 1
a935 1
        MOV     r0,#37          ; Canonicalise path
d951 1
a951 1
        MOV     r0,#23          ; Read catalogue info with type / no path
d958 1
a958 1
        MOVNE   r0,#19          ; Generate error.
@


4.6
log
@  Escape cancels drags
Detail:
  Pressing escape will cancel any current drag operation for the pinboard.
  At long bleedin' last!
Admin:
  Tested on my Iyonix. Seems to work.

Version 0.82. Tagged as 'Pinboard-0_82'
@
text
@d505 6
a510 6
        MOV     R0, #DragType_NoDrag
        STR     R0, DragType
;       MOV     R0, #0      <- not needed because DragType_NoDrag = 0
        STR     R0, EventV_Claimed
        BL      claim_eventv
        BVS     %FT99
d519 1
d529 31
a559 3
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Claim EventV so that we can watch for the Escape key being pressed
; (at which point we stop any drag which we're currently doing).
d561 18
a578 11
claim_eventv
        Push    "R1-R2, LR"
        MOV     R0, #EventV
        ADR     R1, eventv_handler
        MOV     R2, R12
        SWI     XOS_Claim
        STRVC   PC, EventV_Claimed
        Pull    "R1-R2, PC"

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Remove our EventV handler.
d580 10
a589 42
release_eventv
        LDR     R0, EventV_Claimed
        TEQ     R0, #0
        MOVEQ   PC, LR
        Push    "R1-R2, LR"
        MOV     R0, #EventV
        ADR     R1, eventv_handler
        MOV     R2, R12
        SWI     XOS_Claim
        ADR     R0, callback_handler
        MOV     R1, R12
        SWI     XOS_RemoveCallBack
        SUBS    R0, R0, R0      ; R0=0, V is clear
        STR     R0, EventV_Claimed
        Pull    "R1-R2, PC"

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Watch for Escape key going down. If we're currently doing a drag, stop it.
eventv_handler
        TEQ     R0, #11         ; only care about key transition events...
        TEQEQ   R2, #0          ; ...on the Escape key...
        TEQEQ   R1, #0          ; ...being pressed (not released)
        MOVNE   PC, LR          ; exit if any of the above conditions aren't met
        Push    "R0-R1, LR"
        ; If there's a drag in progress, stop it
        LDR     R0, DragType
        TEQ     R0, #DragType_NoDrag
        ADRNE   R0, callback_handler
        MOVNE   R1, R12
        SWINE   XOS_AddCallBack ; use a callback in case DragASprite_Stop isn't safe here
        Pull    "R0-R1, PC"

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Abort the current drag operation (if any)
callback_handler
        Push    "R0, LR"
        MOV     R0, #DragType_NoDrag
        STR     R0, DragType
        SWI     XDragASprite_Stop
        CLRV
        ; Don't return any errors
        Pull    "R0, PC"
d738 2
a739 2
; Remove our vector claimant
        BL      release_eventv
@


4.5
log
@Commented out "proginfo" string,no longer used.
Prefixed the pin and addtinydir commands that get saved in the
pinboard file with "X " so your pinboard setup continues even if a file
is no longer available.ROL did this with a new XPin command,not taken.
Merged changes from ROL to allow the icon text to be an arbitary colour
though this can be switched out with "technicolour_text" for the
purists.
Help entry added to the pinboard selection submenu,this will be greyed
out except when
 it's an app
 and it has a !help file
 and it is the only object selected
like the filer does.
Updated messages file accordingly.
Menu clicking on the "save pinboard settings" OK button no longer saves
the file,and adjust clicking keeps the menu tree open
 -> fixes bug report from 1998,now removed from "Status" file
Saveas template resized to match !Edit.
Fixed problem of select dragging a file to an app leaving the icon
selected (due to two conditional MOV R0's being followed by an
unconditional one for some reason).
 -> fixes bug report from 1998,now removed from "Status" file
Tweaked a few CMP#0 BLT's to test specifically for the iconbar handle.
The bug report in "Status" about bits of filenames being left on the
pinboard can be bodged by popping an ADD r0,r0,#16 after the XWimp_TextOp
in s.buffered but I've not done this yet.

Version 0.78. Tagged as 'Pinboard-0_78'
@
text
@d479 1
a479 1
        EXIT    VS
d505 7
d519 1
a519 2


d529 59
d733 4
@


4.4
log
@  Unfinished attempt to make RISC OS 3.1 compatible.
Detail:
  * Softload builds now work
  * Non-internationalised versions of * commands added
  * Currently *Backdrop fails with "Reserved fields must be zero" error on
    RISC OS 3.1 - probably passed up from elsewhere in the OS, since 3.1
    was fussy about such things.
Admin:
  Tested on Virtual A5000.

Version 0.77. Tagged as 'Pinboard-0_77'
@
text
@d168 1
a168 1
        Pull    "PC",LE                 ; No, just return.
d358 5
a362 1
        Command BackDrop,4,0,&100:OR: International_Help
d411 5
a415 1
        DCB     "Syntax: *BackDrop [-Centre | -Tile | -Scale | -Remove] [<pathname>]",0
d766 1
a766 1
        Pull    "PC",LE
d830 1
a830 1
        Pull    "PC",LE
d859 25
d997 61
d1069 3
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.76. Tagged as 'Pinboard-0_76'
@
text
@d47 1
a47 1
        ResourceFile    Templates, Resources.Pinboard.Templates
d408 19
@


4.2
log
@Ursula branch merged.
Added inclusion of Machine header for new CMOS header
Moved to srccommit.
Templates contain hardwired version/date information which is a long
  way out of date.  This has not been fixed in this checkin.

Version 0.75. Tagged as 'Pinboard-0_75'
@
text
@a18 3

        LEADR   Module_LoadAddr

d37 3
d46 1
a46 1
        ResourceFile    Messages, Resources.Pinboard.Messages
d55 1
a55 5
Helpstr DCB     "Pinboard",9,"$Module_MajorVersion ($Module_Date)"
      [ Module_MinorVersion <> ""
        =       " $Module_MinorVersion"
      ]
        DCB     0
d60 3
d178 1
a178 1
        
d187 1
a187 1
 
d211 1
a211 1
        
d242 1
a242 1
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner        
d285 1
a285 1
        
d293 1
a293 1
        
d444 1
a444 1
        Push    "r0-r3,LR"
d446 2
a447 8
        LDR     r0, [r12]                       ; Have we already got a workspace ?
        CMP     r0, #0                          ; clears V
      [ Version >= 29
        MOVNE   r12,r0
        BNE     %FT01
      |
        Pull    "r0-r3,PC",NE
      ]
d449 4
a452 5
        MOV     r0, #6
        LDR     r3, =max_running_work
        SWI     XOS_Module                      ; Claim workspace
        ADDVS   sp,sp,#4
        Pull    "r1-r3,PC",VS
a461 8
        MOV     r0,#0                           ; Start when wimp starts up.
        STR     r0,mytaskhandle
        STR     r0,backdrop_path                ; No backdrop picture.
        STR     r0,Buffered_list
        STR     r0,iconized_ptr
        STR     r0,Icon_list
        STR     r0,message_file_block

d478 10
a487 1
        Pull    "r0-r3,PC",,^
d518 1
a518 1
 
d534 2
a535 2
        MOVNES  pc, lr
        
a541 4
        [ {FALSE}
        DevMessage      "                Development Pinboard Module (",Module_MajorVersion,")       - NOT FOR SALE"
        ]

d553 1
a553 1
        
d561 1
a561 1
        Pull    "r0-r3,pc",,^
d634 1
a634 1
        Push    "R0-R11,LR"
d637 2
a638 2
        CMP     r12, #0
        Pull    "R0-R11,PC",EQ,^
a644 1
        BLE     %FT01
d646 2
a647 2
        LDR     r1, Taskid
        SWI     XWimp_CloseDown
d658 2
a659 8
      [ Version <= 29
; Release all workspace
        MOV     r2, r12
        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module
      ]

        Pull    "R0-R11,PC",,^           ; don't refuse to die
d820 1
a820 1
        
d996 1
a996 1
        LNK     s.StartLoop
@


4.1
log
@Initial revision
@
text
@d15 5
a19 1
; > s.ModHead
d41 2
a42 1
; ----------------------------------------------------------------------------------------------------------------------
d55 6
a60 2
Helpstr DCB     "Pinboard",9,"$VString ($Date)",0
                ALIGN
d64 5
a68 2
; ----------------------------------------------------------------------------------------------------------------------
;       Handle *Desktop_Pinboard - only enter modules if after a Service_StartWimp
d89 5
a93 2
; ----------------------------------------------------------------------------------------------------------------------
;       Error block for use of *Desktop_Pinboard
d99 6
a104 1
; ----------------------------------------------------------------------------------------------------------------------
d157 6
a162 1
; ----------------------------------------------------------------------------------------------------------------------
d179 7
d187 43
a231 1

d234 1
a234 1
 [ iconise_to_iconbar
d238 1
a238 1
 ]
d240 44
a283 1
        Debug   pi,"Pinboard options are :",r0
d286 6
d293 2
a294 8
        ; Clear any pending backdrop recache
        LDR     r0,poll_word
        BIC     r0,r0,#PollWordReason_Recache
        STR     r0,poll_word

        LDR     r1,backdrop_handle
        MOV     r0,#BufferReason_RemoveAllPinboard
        BL      BufferIcon
d296 4
a299 1
        Pull    "PC"
a300 1
; ----------------------------------------------------------------------------------------------------------------------
d349 1
a350 1
; ----------------------------------------------------------------------------------------------------------------------
d352 1
a352 1
; ----------------------------------------------------------------------------------------------------------------------
a356 1
 [ iconise_to_iconbar
a357 3
 |
        Command Pinboard,1,0, International_Help
 ]
d359 2
a360 1
        Command BackDrop,3,0,&100:OR: International_Help
d362 5
a366 1
; ----------------------------------------------------------------------------------------------------------------------
d378 1
a378 1
; ----------------------------------------------------------------------------------------------------------------------
d384 1
a384 1
; ----------------------------------------------------------------------------------------------------------------------
d391 1
a391 1
; ----------------------------------------------------------------------------------------------------------------------
d397 1
a397 1
; ----------------------------------------------------------------------------------------------------------------------
d403 1
a403 1
; ----------------------------------------------------------------------------------------------------------------------
d411 4
d433 3
d439 5
a443 2
; ----------------------------------------------------------------------------------------------------------------------
;       Module initialisation point
d502 26
a527 2
; ----------------------------------------------------------------------------------------------------------------------
;       Module service entry point
d530 15
d550 1
a550 1
        DevMessage      "                Development Pinboard Module (",VString,")       - NOT FOR SALE"
d564 1
a564 1

d588 2
a590 3

; ----------------------------------------------------------------------------------------------------------------------
;       Wimp call to ask task to start up. Claimed by setting task_handle to -1, but only if 0 to start with
d604 4
a607 2
; ----------------------------------------------------------------------------------------------------------------------
;       Wimp has finished starting the tasks. If task handle=-1 then start up failed, so reset to 0.
d622 5
a626 2
; ----------------------------------------------------------------------------------------------------------------------
;       Reset button pressed. Wimp has shut down. Reset task handle to 0. Release linked lists of icons.
d640 4
a643 2
; ----------------------------------------------------------------------------------------------------------------------
;       RMKill'ing the module
d678 4
a681 1
; ----------------------------------------------------------------------------------------------------------------------
d699 1
d715 1
d731 1
d746 6
a751 1
; ----------------------------------------------------------------------------------------------------------------------
d805 1
a805 1
        MOV     r0,#BufferReason_AddAtXY
d810 6
a815 1
; -----------------------------------------------------------------------------------------------------------
d832 19
d881 1
a881 1
        ORREQ   r0,r0,#bd_OptionRecache
d917 11
d934 1
a934 1

d963 12
a974 1
backdrop_args   DCB     "path,Centre=C/S,Tile=T/S,Scale=S/S,N=NoRecache/S,Remove=R/S",0
d976 5
a980 1
pin_args        DCB     "path/A,X/E/A,Y/E/A",0
d982 1
d984 22
a1005 5
 [ iconise_to_iconbar
                DCB     "Grid/S,IconiseToIconBar/S",0
 |
                DCB     "Grid/S",0
 ]
d1007 1
@


4.1.4.1
log
@Added option to iconise windows to a corner
@
text
@a163 5

        [ Version >= 67
        CMP     lr, #0
        BNE     %FT20
        ]
d166 1
a166 32
 [ Version >= 67
        Push    "r1-r4"
        MOV     r3, #8
        MOV     r4, #4
        MOV     r5, #0
04
        LDR     r1, [r2, r3]
        CMP     r1, #0
        MOVNE   r4, r5        
        ADD     r3, r3, #4
        ADD     r5, r5, #1
        CMP     r5, #4
        BLT     %BT04
        
        CMP     r4, #3
        BGT     %FT10

        BIC     r0, r0, #PinboardOption_IconiseToIconBar
        TST     r4, #1
        ORRNE   r0, r0, #PinboardOption_WinToCornerTB
        BICEQ   r0, r0, #PinboardOption_WinToCornerTB
        TST     r4, #2
        ORRNE   r0, r0, #PinboardOption_WinToCornerLR
        BICEQ   r0, r0, #PinboardOption_WinToCornerLR
         
        ORR     r0, r0, #PinboardOption_UseWinToCorner
10
        LDR     r1, [r2, #24]
        CMP     r1, #0
        Pull    "r1-r4"
        ORRNE   r0, r0, #PinboardOption_WinToCornerHV
 ]       
a167 1
20
a168 6
        
        [ Version >= 67
        MOV     r0, #-1
        STR     r0, IconizeAtX
        STR     r0, IconizeAtY
        ]
a169 2
        Debug   pi,"Pinboard options are :",r0
 
d238 2
a239 3

 [ Version >=67
        Command Pinboard,3,0, International_Help
a240 3
   [ iconise_to_iconbar
        Command Pinboard,2,0, International_Help
   |
a241 1
   ]
a275 3
 [ Version >= 67
        DCB     "Syntax: *Pinboard [-Grid] [-IconiseToIconbar] [-TopLeft | -BottomLeft | -TopRight | -BottomRight] [-StackVertical]",0
 |
a276 1
 ]
d747 2
a748 9
 [ Version >= 67
                DCB     "Grid=G/S,"
                DCB     "IconiseToIconBar=ITIB/S,"
                DCB     "TopLeft=TL/S,"
                DCB     "BottomLeft=BL/S,"
                DCB     "TopRight=TR/S,"
                DCB     "BottomRight=BR/S,"
                DCB     "StackVertical=SV/S"
                DCB     0
a749 3
   [ iconise_to_iconbar
                DCB     "Grid/S,IconiseToIconBar/S",0
   |
a750 1
   ]
@


4.1.4.2
log
@Improved consistency of files/windows, plus JPEG backdrops
@
text
@d172 6
a177 2
        ; WindowsToTopLeft
        LDR     r1, [r2, #8]
d179 5
a183 1
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
d185 2
a186 5
        ; WindowsToBottomLeft
        LDR     r1, [r2, #12]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
        ORRGT   r0, r0, #PinboardOption_WinToCornerTB
d188 11
a198 2
        ; WindowsToTopRight
        LDR     r1, [r2, #16]
d200 3
a202 2
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
        ORRGT   r0, r0, #PinboardOption_WinToCornerLR
a203 11
        ; WindowsToBottomRight
        LDR     r1, [r2, #20]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner
        ORRGT   r0, r0, #PinboardOption_WinToCornerLR
        ORRGT   r0, r0, #PinboardOption_WinToCornerTB
        
        ; WindowsStackVertical
        LDR     r1, [r2, #24]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_WinToCornerHV
a204 24
        ; TidyToTopLeft

        ; TidyToBottomLeft
        LDR     r1, [r2, #32]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerTB

        ; TidyToTopRight
        LDR     r1, [r2, #36]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerLR

        ; TidyToBottomRight
        LDR     r1, [r2, #40]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerLR
        ORRGT   r0, r0, #PinboardOption_TidyToCornerTB

        ; TidyStackVertical
        LDR     r1, [r2, #44]
        CMP     r1, #0
        ORRGT   r0, r0, #PinboardOption_TidyToCornerHV
 ]

d285 1
a285 1
        Command Pinboard,5,0, International_Help
a760 13
 [ Version >= 67
        LDR     r0, backdrop_options
        LDR     r14,=&C85
        CMP     r6, r14
        BNE     %FT02
        ORR     r0, r0, #bd_OptionJPEG
        STR     r0, backdrop_options
        B       %FT04
02
        BIC     r0, r0, #bd_OptionJPEG
        STR     r0, backdrop_options
 ]

d767 1
a767 1
04
d804 5
a808 10
                DCB     "WindowsToTopLeft=WTTL/S,"
                DCB     "WindowsToBottomLeft=WTBL/S,"
                DCB     "WindowsToTopRight=WTTR/S,"
                DCB     "WindowsToBottomRight=WTBR/S,"
                DCB     "WindowsStackVertical=WSV/S,"
                DCB     "TidyToTopLeft=TTTL/S,"
                DCB     "TidyToBottomLeft=TTBL/S,"
                DCB     "TidyToTopRight=TTTR/S,"
                DCB     "TidyToBottomRight=TTBR/S,"
                DCB     "TidyStackVertical=TSV/S"
@


4.1.4.3
log
@Windows, as well as files, can be selected, plus new menu structure and options
@
text
@a154 8
        ; Query option
        LDR     r0, [r2, #48]
        CMP     r0, #0
        BLNE    deb_winsel
        CMP     r0, #0
        Pull    "pc", NE

        ; Grid option
d157 1
d160 1
a160 1
        ; Check for IconiseToIconBar
d164 3
d168 2
d171 1
d175 2
a176 1
        ORRGT   r0, r0, #PinboardOption_UseWinToCorner        
d182 1
d188 1
d195 1
a199 1

d202 1
d207 1
d212 1
d218 1
d223 1
d227 1
d231 1
d303 2
d306 7
d693 1
a693 1
        MOV     r0,#BufferReason_AddAtXYWithoutLock
d745 1
a745 1
        ORRNE   r0,r0,#bd_OptionRecache
d781 1
d792 1
d834 1
d846 1
a846 2
                DCB     "TidyStackVertical=TSV/S,"
                DCB     "Query=Q/S"
d848 7
a855 1

@


4.1.4.4
log
@Pinboard options now set via a *PinboardOptions command.
Backdrop command now includes a -Colour &GGBBRR00 switch to set background
colour.
Save now only saves a Pinboard command, followed by Pin commands. Options
and backdrops are instead set by Configure.
A click on 'Save' (as opposed to opening the saveas box) will save the
pinboard under the current filename.
@
text
@d15 1
a15 5
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; s.ModHead
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


d37 1
a37 2

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
d55 2
a56 5

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Desktop_Pinboard_Code
;
; Handle *Desktop_Pinboard - only enter modules if after a Service_StartWimp
d77 2
a78 5

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; ErrorBlock_CantStartPinboard
;
; Error block for use of *Desktop_Pinboard
d84 1
a84 6


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; AddTinyDir_Code
;
; Called when OS executes an AddTinyDir *Command.
d137 1
a137 6


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Pinboard_Code
;
; Called when Pinboard command is executed by OS.
a154 48
        ; Check for Grid and IconiseToIconBar options
        ;LDR     r0, Pinboard_options
        ;LDR     lr, [r2]
        ;CMP     lr, #0
        ;ORRNE   r0, r0, #PinboardOption_Grid
        ;LDR     lr, [r2, #4]
        ;CMP     lr, #0
        ;ORRNE   r0, r0,#PinboardOption_IconiseToIconBar
        ;STR     r0, Pinboard_options
        
        ; Reset IconizeAt
        ;MOV     r0, #-1
        ;STR     r0, IconizeAtX
        ;STR     r0, IconizeAtY

        Debug   pi,"Pinboard options are :",r0
 
        ; Clear any pending backdrop recache
        ;LDR     r0,poll_word
        ;BIC     r0,r0,#PollWordReason_Recache
        ;STR     r0,poll_word

        LDR     r1,backdrop_handle
        MOV     r0,#BufferReason_RemoveAllPinboard
        BL      BufferIcon

        Pull    "PC"


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; PinboardOptions_Code
;
; Called when PinboardOptions command is executed by OS.

PinboardOptions_Code
        Push    "LR"

        LDR     r12, [r12]              ; Do we have a task active ?
        CMP     r12, #0
        Pull    "PC",LE                 ; No, just return.
        
        MOV     r1,r0
        ADRL    r0,pinboardoptions_args
        ADR     r2,dataarea
        MOV     r3,#&100
        SWI     XOS_ReadArgs            ; Read command line args.
        Pull    "PC",VS

d224 11
a235 6
        

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; RemoveTinyDir_Code
;
; Called when RemoveTinyDir_Code command is executed by OS.
d237 1
a285 1
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
d287 1
d289 1
a289 1

d294 1
a294 1
        Command Pinboard,2,0, International_Help
d296 1
a296 2
        Command BackDrop,4,0,&100:OR: International_Help
        Command PinboardOptions, 6, 0, International_Help
d298 1
a298 5


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Non international help

d310 1
a310 1

d316 1
a316 1

d323 1
a323 1

d328 3
d332 2
a333 1

d339 1
a339 1

a346 4

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; International Help

a364 3
PinboardOptions_Help    DCB     "HPINOPT",0
PinboardOptions_Syntax  DCB     "SPINOPT",0

d368 2
a369 5


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Module initialisation point

d428 2
a429 3

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Module service entry point
d451 1
a451 1
        
a474 2
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Wimp call to ask task to start up. Claimed by setting task_handle to -1, but only if 0 to start with
d476 3
d492 2
a493 4

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Wimp has finished starting the tasks. If task handle=-1 then start up failed, so reset to 0.

d508 2
a509 5

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Reset button pressed. Wimp has shut down. Reset task handle to 0.
; Release linked lists of icons.

d523 2
a524 4

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; RMKill'ing the module

d559 1
a559 4


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; FreeAll
a576 1

a591 1

a606 1

d621 1
a621 6

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Pin_Code
;
; Called when OS encounters a *Pin command.

d680 1
a680 6

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Backdrop_Code
;
; Called when OS encounters a Backdrop *command.

a696 17
        ; Deal with colour command
        LDR     r1, [r2, #24]
        CMP     r1, #0
        BEQ     %FT01
        
        LDRB    r0, [r1]
        CMP     r0, #0
        BNE     %FT01
        LDRB    r0, [r1, #2]
        MOV     r14, r0, LSL #8
        LDRB    r0, [r1, #3]
        ADD     r14, r14, r0, LSL #16
        LDRB    r0, [r1, #4]
        ADD     r14, r14, r0, LSL #24
        STR     r14, background_colour
01
        ; Deal with backdrop
d809 1
a809 12

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; *Command arguments

backdrop_args   DCB     "path,"
                DCB     "Centre=C/S,"
                DCB     "Tile=T/S,"
                DCB     "Scale=S/S,"
                DCB     "N=NoRecache/S,"
                DCB     "Remove=R/S,"
                DCB     "Colour/E"
                DCB     0
d811 1
a811 5

pin_args        DCB     "path/A,"
                DCB     "X/E/A,"
                DCB     "Y/E/A"
                DCB     0
a812 1

a813 6
                DCB     "Grid=G/S,"
                DCB     "IconiseToIconBar=ITIB/S"
                DCB     0
                ALIGN

pinboardoptions_args
@


4.1.4.5
log
@Removed Info option on TinyDirs menu.
Updated interactive help messages.
Shift+Click on close icon now ALWAYS iconises the window underneath the icon
(old behaviour), while a click on iconise button iconises according to the
IconiseTo corner.
@
text
@d175 10
d187 3
a189 5
        MOV     r0, #-1
        STR     r0, IconizeAtX
        STR     r0, IconizeAtY
        MOV     r0, #0
        STR     r0, IconizeAtFlags
a291 2
        MOV     r0, #0
        STR     r0, IconizeAtFlags
@


4.1.4.6
log
@Bug fixes.
Turned off defaultbackdrop and UseECFforLCD. Only needed on A4.
Updated service call handling to use new Ursula tables.
@
text
@a495 2
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Table of service calls we want
a496 21
        ASSERT  Service_Reset > Service_Memory
        ASSERT  Service_StartWimp > Service_Reset
        ASSERT  Service_StartedWimp > Service_StartWimp
        ASSERT  Service_StartFiler > Service_StartedWimp
        ASSERT  Service_ResourceFSStarting > Service_StartFiler

ServiceTable
        DCD     0
        DCD     ServiceUrsula - Module_BaseAddr
        DCD     Service_Memory
        DCD     Service_Reset
        DCD     Service_StartWimp
        DCD     Service_StartedWimp
        DCD     Service_StartFiler
      [ defaultbackdrop :LOR: standalonemessages
        DCD     Service_ResourceFSStarting
      ]
        DCD     0
        DCD     ServiceTable - Module_BaseAddr

 
a500 15
        MOV     r0, r0                  ; Indicates there is a service call table

        ; Fast rejection
        TEQ     r1, #Service_Memory
        TEQNE   r1, #Service_Reset
        TEQNE   r1, #Service_StartWimp
        TEQNE   r1, #Service_StartedWimp
        TEQNE   r1, #Service_StartFiler
      [ defaultbackdrop :LOR: standalonemessages
        TEQNE   r1, #Service_ResourceFSStarting
      ]
        MOVNE   pc, lr
        
ServiceUrsula

d946 5
a950 5
                DCB     "IconiseToTopLeft=ITTL/S,"
                DCB     "IconiseToBottomLeft=ITBL/S,"
                DCB     "IconiseToTopRight=ITTR/S,"
                DCB     "IconiseToBottomRight=ITBR/S,"
                DCB     "IconiseStackVertical=ISV/S,"
@


4.1.4.7
log
@*** empty log message ***
@
text
@d535 1
a535 1
        MOVNES  pc, lr
@


4.1.4.8
log
@- If Shift+Click on close icon, then don't iconise to iconbar.
- Fixed bug in stacking of icons vertically from bottom of screen.
@
text
@a828 2
        ;LDREQ   r0, =&77777700              ; No colour specified, so reset to grey.
        ;STREQ   r0, background_colour
@


4.1.4.9
log
@Bug fix: sometimes thought there was a selection when no icons were selected.
@
text
@a215 1
      [ debug_commands
a221 1
      ]
a995 1
              [ debug_commands
a996 1
              ]
@


4.1.4.10
log
@* If Ursula window manager not present, always iconises to close icon.
* Sorted problem with spacing of icons dragged from long filename dir viewers.
* If the co-ordinates for Message_IconizeAt put an icon off screen, it is
  pushed back on screen by Pinboard.
@
text
@d180 1
a180 1
        MOV     r0, #Default_IconizeAtFlags
d286 1
a286 1
        MOV     r0, #Default_IconizeAtFlags
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
