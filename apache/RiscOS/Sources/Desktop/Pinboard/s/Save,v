head	4.13;
access;
symbols
	Pinboard-1_04:4.13
	Pinboard-1_03:4.13
	Pinboard-1_02:4.13
	Pinboard-1_01:4.13
	Pinboard-1_00:4.12
	Pinboard-0_99:4.12
	Pinboard-0_98:4.12
	Pinboard-0_97:4.12
	Pinboard-0_96:4.12
	Pinboard-0_95:4.12
	Pinboard-0_94:4.11
	Pinboard-0_93:4.11
	Pinboard-0_92:4.8
	Pinboard-0_91:4.7
	Pinboard-0_90:4.7
	Pinboard-0_89:4.7
	Pinboard-0_88:4.6
	Pinboard-0_87:4.6
	Pinboard-0_86:4.6
	Pinboard-0_85:4.6
	Pinboard-0_84:4.6
	Pinboard-0_83:4.6
	Pinboard-0_82:4.5
	RO_5_07:4.5
	Pinboard-0_81:4.5
	Pinboard-0_80:4.4
	Pinboard-0_79:4.4
	Pinboard-0_78:4.4
	Pinboard-0_77:4.3
	Pinboard-0_76:4.3
	Ursula_merge:4.1.4.4
	Pinboard-0_75:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.4
	Ursula_RiscPC:4.1.4.4.0.2
	rleggett_Pinboard-0_75d:4.1.4.4
	rthornb_UrsulaBuild-19Aug1998:4.1.4.4
	UrsulaBuild_FinalSoftload:4.1.4.4
	rthornb_UrsulaBuild-12Aug1998:4.1.4.4
	aglover_UrsulaBuild-05Aug1998:4.1.4.4
	rthornb_UrsulaBuild-29Jul1998:4.1.4.4
	rthornb_UrsulaBuild-22Jul1998:4.1.4.4
	rleggett_Pinboard-0_75c:4.1.4.4
	rleggett_Pinboard-0_75b:4.1.4.4
	rleggett_Pinboard-0_75:4.1.4.4
	rthornb_UrsulaBuild-15Jul1998:4.1.4.4
	rthornb_UrsulaBuild-07Jul1998:4.1.4.4
	rthornb_UrsulaBuild-17Jun1998:4.1.4.4
	rthornb_UrsulaBuild-03Jun1998:4.1.4.4
	rthornb_UrsulaBuild-27May1998:4.1.4.4
	rthornb_UrsulaBuild-21May1998:4.1.4.3
	rleggett_Pinboard-0_74:4.1.4.3
	rthornb_UrsulaBuild_01May1998:4.1.4.3
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.13
date	2016.05.10.21.05.00;	author rsprowson;	state Exp;
branches;
next	4.12;
commitid	O1qMSkbGF6eaMY5z;

4.12
date	2012.08.23.19.59.14;	author rsprowson;	state Exp;
branches;
next	4.11;
commitid	rztFpV1VBvCVZHhw;

4.11
date	2011.09.24.07.31.20;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	nRjnbtmOSxK1BIAv;

4.10
date	2011.09.24.07.25.50;	author rsprowson;	state Exp;
branches;
next	4.9;
commitid	NapphrXjtkIXyIAv;

4.9
date	2011.09.24.07.23.44;	author rsprowson;	state Exp;
branches;
next	4.8;
commitid	U6nT8u4TlrjayIAv;

4.8
date	2011.09.19.07.41.57;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	90jvproiNPICO4Av;

4.7
date	2010.11.14.15.55.40;	author jlee;	state Exp;
branches;
next	4.6;

4.6
date	2006.03.14.18.45.07;	author srevill;	state Exp;
branches;
next	4.5;

4.5
date	2003.07.31.12.55.12;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2002.11.11.12.34.51;	author rsprowson;	state Exp;
branches;
next	4.3;

4.3
date	2001.03.16.17.07.04;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.19.05.23;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.30.04;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.30.04;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.29.57;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.06.13.08.40.36;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	97.08.04.11.50.42;	author rleggett;	state Exp;
branches;
next	4.1.4.3;

4.1.4.3
date	97.12.05.09.40.07;	author rleggett;	state Exp;
branches;
next	4.1.4.4;

4.1.4.4
date	98.05.26.11.14.27;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.21.04;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.18.57;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.13
log
@Emit boot relative Pin/AddTinyDir commands where possible
When saving the desktop settings, use the same substring matching logic that !Configure's boot addapps/lookat/run uses, and replace the base of the name with Boot: or Boot:^.
This means that if the boot drive is renamed the pinboard still starts up with the same items on it.
Ditch support for Message_SaveDesktop - the code's been a NOP since Ursula (circa 1998).
Tested on a Raspberry Pi, renaming the SD card.

Version 1.01. Tagged as 'Pinboard-1_01'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; s.Save
; Save pinboard menu handling.
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Save_KeyPressed ROUT
        Push    "LR"

        LDR     r0,[r1,#24]
        CMP     r0,#13
        BEQ     %FT00
        SWI     XWimp_ProcessKey
        Pull    "PC"
00
        MOV     r0, #4                  ; fake a select click

IntSave_KeyPressed

; Scan for a '.' in the filename

        Push    "r0"
        LDR     r0,save_filename_address
01
        LDRB    r14,[r0],#1
        CMP     r14,#"."
        BEQ     %FT02
        CMP     r14,#32
        BGE     %BT01

        ADD     sp,sp,#4
        ADR     r0,ErrorBlock_PinboardNoDot
        BL      msgtrans_errorlookup
        Pull    "PC"

02
        Debug   sa,"Dot is at ",r14
        LDR     r1,save_filename_address

        BL      DoSave
        ADDVS   sp,sp,#4
        Pull    "PC",VS

        Pull    "r0"
        TEQ     r0, #1                  ; was it an adjust click?
        MOVNE   r1,#-1
        SWINE   XWimp_CreateMenu
        Pull    "PC"


ErrorBlock_PinboardNoDot
        DCD     0
        DCB     "NoDot",0
        ALIGN



save_click      ROUT

        Debug   sa,"Save click ",r2
        CMP     r0,#&40
        BEQ     save_drag

        CMP     r2,#0                   ; icon of the OK button
        ANDEQS  r14,r0,#2               ; ignore menu button
        BEQ     IntSave_KeyPressed
        Pull    "PC"

save_drag       ROUT

        Debug   sa,"Save drag"

        ADR     r1,dataarea
        LDR     r2,saveas_handle
        STR     r2,[r1]
        MOV     r0,#3
        STR     r0,[r1,#4]
        SWI     XWimp_GetIconState
        Pull    "PC",VS

        ADD     R14,R1,#8
        LDMIA   R14,{R6-R9}             ; x0 - y1 of icon

        ADRL    R1,(dataarea+40)
        STR     R2,[R1]                 ; R2 = window handle (store it baby!)

        SWI     XWimp_GetWindowState
        Pull    "PC",VS

        ADD     r14,r1,#4
        LDMIA   r14,{r0-r3}
        ADD     r6,r6,r0              ; Scrren coords.
        ADD     r8,r8,r0
        ADD     r7,r7,r3
        ADD     r9,r9,r3

        Push    "R0-R2"
        MOV     R0,#OsByte_ReadCMOS
        MOV     R1,#FileSwitchCMOS
        SWI     XOS_Byte                ; R2 = CMOS byte allocated to FileSwitch
        MOVVS   R2,#0
        TST     R2,#1:SHL:1             ; Is 'drag a sprite' enabled?
        Pull    "R0-R2"
        BEQ     %FT10                   ; obviously not!

        Push    "R6-R9"                 ; R6-R9 contain icon position
        MOV     R3,SP                   ; R3 -> pushed coordinates
        ADRL    R2,(dataarea+28)        ; R2 -> sprite name to use (from icon data)
        MOV     R1,#1                   ; R1 =1 => sprite in Wimp sprite pool

        MOV     R0,#DS_HJustify_Centre :OR: DS_VJustify_Centre :OR: DS_BoundTo_Screen :OR: DS_Bound_Pointer :OR: DS_DropShadow_Present
        SWI     XDragASprite_Start
        ADD     SP,SP,#4*4              ; balance out the stack
        B       %FT20                   ; then exit 'cos finished the drag start

10      LDR     r0,saveas_handle
        ADR     r1,dataarea
        MOV     r2,#5
        STMIA   r1,{r0,r2,r6-r9}

        SUB     r3,r8,r6
        SUB     r4,r9,r7
        ADR     r0, bounding_box
        LDMIA   r0, {r6-r9}
        SUB     r6, r6, r3 ,LSR #1
        SUB     r7, r7, r4 ,LSR #1
        ADD     r8, r8, r3, LSR #1  ; half x size.
        ADD     r9, r9, r4, LSR #1  ; half y size.
        ADR     r1,dataarea
        ADD     r14,r1,#6*4
        STMIA   r14,{r6-r9}

        Debug   sa,"Calling wimp_dragbox ",r1

        SWI     XWimp_DragBox

        Pull    "PC",VS

        Debug   sa,"Wimp_DragBox returned"
20
        MOV     r0,#DragType_Save
        STR     r0,DragType

        BL      Claim_Focus

        Debug   sa,"Save drag exits"

      [ debugsa
        Pull    "LR"
        Debug   sa,"LR is ",r14
        MOV     PC,LR
      ]

        Pull    "PC"

Save_DragEnd    ROUT

        SWI     XDragASprite_Stop

        ADR     r1,dataarea
        SWI     XWimp_GetPointerInfo
        Pull    "PC",VS

        LDMIA   r1,{r4,r5}
        ADD     r14,r1,#12
        LDMIA   r14,{r2,r3}

        MOV     r0,#Message_DataSave
        STR     r0,[r1,#ms_action]
        MOV     r0,#252
        STR     r0,[r1,#ms_size]
        MOV     r6,#0
        STR     r6,[r1,#ms_yourref]
        LDR     r7,=FileType_Obey
        ADD     r14,r1,#ms_data
        STMIA   r14!,{r2,r3,r4,r5,r6,r7}       ; Window, icon , x , y

        LDR     r0,save_filename_address
        MOV     r4,r0
01
        LDRB    r5,[r0],#1
        CMP     r5,#"."
        MOVEQ   r4,r0
        CMP     r5,#32
        BGE     %BT01

; r4 -> Leafname

        MOV     r0,r4
        MOV     r1,r14
        BL      Copy_r0r1


        ADR     r1,dataarea
        ADD     r14,r1,#44
        DebugS  sa,"Leafname is ",r14
        MOV     r0,#18                       ; r2,r3 are icon / window handles
        Debug   sa,"Icon,Window ",r2,r3
        SWI     XWimp_SendMessage

        Pull    "PC"

Save_DataSaveAck        ROUT

        DebugS  sa,"Filename is ",r14

        ADD     r1,r1,#44
        BL      DoSave

        ADR     r1,dataarea
        LDR     r0,[r1,#8]
        STR     r0,[r1,#12]
        MOV     r0,#Message_DataLoad
        STR     r0,[r1,#ms_action]
        MOV     r0,#18
        LDR     r2,[r1,#4]
        SWI     XWimp_SendMessage
        Pull    "PC",VS

        ADR     r1,dataarea
        ADD     r2,r1,#44                       ; SMC: point to file name
        LDR     r3,[r1,#36]
        CMP     r3,#-1                          ; Check for unsafe file eg. <Wimp$Scrap>
        MOVNE   r0,r2                           ; SMC: only copy if not unsafe
        LDRNE   r1,save_filename_address
        BLNE    Copy_r0r1

        MOVVC   r1,#-1
        SWIVC   XWimp_CreateMenu

        Pull    "PC"

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; DoSave
;
; Save a Pinboard Obey file
;
; In: r1 -> filename
; Out: r0 corrupt

DoSave  ROUT
        Entry   "r1-r9"

        MOV     r8, r1                          ; r8 -> filename

        ; Get substrings of Boot:
        ADR     r0, BootPathVar
        ADR     r1, dest_directory
        MOV     r2, #?dest_directory
        MOV     r3, #0
        MOV     r4, #VarType_Expanded
        SWI     XOS_ReadVarVal
        MOV     r0, #0
        STRVCB  r0, [r1, r2]                    ; FSName::Drive.$.![Arm]Boot.[,OtherStuff]...
        BVS     %FT20
10
        LDRB    lr, [r1, r0]
        CMP     lr, #','
        BEQ     %FT20
        CMP     lr, #' '
        ADDHI   r0, r0, #1
        BHI     %BT10
20
        STR     r0, save_boot_length            ; FSName::Drive.$.![Arm]Boot.
        STR     r0, save_boothat_length
        SUBS    r0, r0, #2
        BMI     %FT40
30
        LDRB    lr, [r1, r0]
        CMP     lr, #'.'
        BEQ     %FT40
        STR     r0, save_boothat_length         ; FSName::Drive.$.
        SUBS    r0, r0, #1
        BPL     %BT30
40
        ; Open file to write
        MOV     r0, #open_write :OR: open_pathbits :OR: open_mustopen :OR: open_nodir
        MOV     r1, r8
        SWI     XOS_Find
        EXIT    VS
        MOV     r9, r0                          ; r9 = file handle

        ; Write a 'Pinboard' command
        MOV     r0, r9
        ADR     r1, PinboardCommand
        BL      PutString
        ADR     r1, NL
        BL      PutString

        ; Write *Pin commands for each icon
        BL      write_pin_commands

        ; Close the file, set it's type and exit
        MOV     r0, #0
        MOV     r1, r9
        SWI     XOS_Find

        MOV     r0, #OSFile_SetType
        MOV     r1, r8
        LDR     r2,=FileType_Obey
        SWI     XOS_File
        EXIT


PinboardCommand DCB "Pinboard",0
TinyDirsCommand DCB "X AddTinyDir ", 0          ; ignore errors so that entering the desktop
PinCommand      DCB "X Pin ", 0                 ; doesn't result in scores of error boxes
BootPathVar     DCB "Boot$$Path", 0
BootSubst       DCB "Boot:", 0
BootHatSubst    DCB "Boot:^.", 0
Space           DCB " ", 0
NL              DCB 10, 0
        ALIGN

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; TryMatchBoot[Hat]
;
; Look for a match in the first <n> characters of a pin or addtinydir name
;
; In: r0 = filehandle of output
;     r1 = null terminated string to try for a match
;
; Out: r1 = adjusted if match made, and prefix string written to filehandle
;      all other regs preserved

TryMatchBoot Entry "r2-r5"
        LDR     r3, save_boot_length
        ADR     r4, BootSubst
        B       %FT10
TryMatchBootHat ALTENTRY
        LDR     r3, save_boothat_length
        ADR     r4, BootHatSubst
10
        TEQ     r3, #0
        EXIT    EQ                              ; Boot$Path unset, no match
        ADR     r2, dest_directory

        LDRB    r5, [r1, r3]
        LDRB    lr, [r2, r3]
        Push    "r0, r3, r5, lr"
        MOV     r5, #0
        STRB    r5, [r1, r3]                    ; Trim string for compare
        STRB    r5, [r2, r3]                    ; Trim Boot$Path for compare

        MOV     r0, #-1
        MOV     r3, #Collate_IgnoreCase
        SWI     XTerritory_Collate
        CMP     r0, #0
        Pull    "r0, r3, r5, lr"
        STRB    r5, [r1, r3]                    ; Restore
        STRB    lr, [r2, r3]                    ; Restore
        EXIT    NE                              ; No match (or error)

        MOV     r2, r1
        MOV     r1, r4
        BL      PutString
        ADD     r1, r2, r3                      ; Adjust to string remainder
        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; write_pin_commands
;
; Output Pin commands to a file for each icon on the backdrop
;
; In: r0 = filehandle of output
;
; Out: all regs preserved

write_pin_commands Entry "r1-r3"
        ; Loop through all the icons and write Pin commands for each one.
        ADR     r2,Icon_list
02
        LDR     r2,[r2]
        CMP     r2,#0
        EXIT    EQ
        LDR     r3,[r2,#ic_window]
        CMP     r3,#iconbar_whandle
        ADREQ   r1,TinyDirsCommand
        ADRNE   r1,PinCommand
        BL      PutString
        EXIT    VS

        ADD     r1,r2,#ic_path
        BL      TryMatchBoot
        ADD     lr,r2,#ic_path
        TEQ     lr,r1                           ; Was there a substitution?
        BLEQ    TryMatchBootHat                 ; No, so try the smaller substring
        BL      PutString
        EXIT    VS

        CMP     r3,#iconbar_whandle
        BEQ     %FT03                           ; AddTinyDir has no x,y

        ADR     r1,Space
        BL      PutString
        EXIT    VS

        Push    "r0-r2"
        ADR     r1,ConversionSpace
        LDR     r0,[r2,#ic_x]
        MOV     r2,#256
        SWI     XOS_ConvertInteger4
        STRVS   r0,[sp]
        Pull    "r0-r2"
        EXIT    VS
        ADR     r1,ConversionSpace
        BL      PutString
        EXIT    VS

        ADRL    r1,Space
        BL      PutString
        EXIT    VS

        Push    "r0-r2"
        ADR     r1,ConversionSpace
        LDR     r0,[r2,#ic_y]
        MOV     r2,#256
        SWI     XOS_ConvertInteger4
        STRVS   r0,[sp]
        Pull    "r0-r2"
        EXIT    VS
        ADR     r1,ConversionSpace
        BL      PutString
        EXIT    VS
03
        ADRL    r1,NL
        BL      PutString
        EXIT    VS

        B       %BT02


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; PutString
;
; Write a NULL terminated string to a file
;
; In: r0 = file handle
;     r1 -> string to write
;
; Out: All registers preserved

PutString       ROUT
        EntryS  "r0-r2"

        MOV     r2,r1
        MOV     r1,r0
01
        LDRB    r0,[r2],#1
        CMP     r0,#0
        EXITS   EQ
        SWI     XOS_BPut
        STRVS   r0,[sp]
        EXIT    VS
        B       %BT01

        LNK     Backdrop.s
@


4.12
log
@Fix for patchy tiled backdrops on changing to non EX1/EY1 mode
Pinboard keeps a note of the mode (from OS_Byte 135) that the backdrop sprite tile was last cached in, to avoid having to recache it all the time. However, the comparison fails when the mode specifier block (ie. when OS_Byte 135 is not reporting a numeric screen mode) is static since although the mode might have changed Pinboard would not think it had and hence not recache the sprite.
The result is a patchy desktop, for example changing from EX1/EY1 to EX0/EY0 would leave a quadrant arrangement of 1 redrawn patch and 3 not redrawn.
Backdrop.s:
Line 151 onwards, when a mode specifier is used, build a magic mode word combining EX EY and BPP (the 3 parameters the cache sprite function cares about), as a stronger check.
Tail.s:
Line 130 onwards, calculate the iconbar height properly (previously used 134 pixels for EY0 modes, 1 too high, leading to a thin strip of background colour above the iconbar.
Other changes
 - Use sprite area offset names from Hdr:Sprites rather than magic numbers
 - Use OS_Byte reasons from Hdr:OsBytes
 - Use "file.s" style names in LNK commands
 - Move BadOptions/NotASprite error blocks to avoid range error when assembling debug versions
 - true and false for objasm {TRUE} and {FALSE}

Version 0.95. Tagged as 'Pinboard-0_95'
@
text
@d17 1
a17 1
; Save and Desktop save handling.
a220 1
        ;MOV     r0,#&8F
a221 5
        ;DebugS  sa,"Filename is ",r1
        ;SWI     XOS_Find
        ;Pull    "PC",VS

        ;Push    "r0"                            ; SMC: save file handle for CloseFile
a222 3
        ;BL      CloseFile
        ;ADD     sp, sp, #4                      ; SMC: don't need file handle now
        ;Pull    "PC",VS                         ; SMC: return error from DoSave or CloseFile
a246 6
DesktopSave
        ;LDR     r0, [r1, #msSaveDesktop_handle]
        ;BL      DoSave
        Pull    "PC"


d260 30
d322 3
d327 12
d340 33
d391 1
a391 1
        CMP     r3,#-2
d398 4
d405 3
a407 4
        ADREQ   r1,NL
        BLEQ    PutString
        EXIT    VS
        BEQ     %BT02
a414 3
        CMP     r0,#0
        MOVLT   r2,#"0"
        STRLTB  r2,[r1],#1
d423 1
d439 1
@


4.11
log
@Shade "Configure..." when boot was unsuccessful.
When BootResources$Path is unset the option to run the configure plugin is no longer available.
Shared a "Filer_Run " string in 3x places.
Replaced most occurrences of calling XOS_ReadModeVariable of the current mode's XEig and YEig factors to use the cached copy sitting unloved in the workspace. Should thrash less during redraw.

Version 0.93. Tagged as 'Pinboard-0_93'
@
text
@d112 1
a112 1
        MOV     R0,#ReadCMOS
@


4.10
log
@Replace magic numbers with sumbols from header files for OS_ calls.
Same binary as 0.92, not tagged.
@
text
@d188 1
a188 1
        LDR     r7,=&FEB
a250 5
        ;MOV     r0,#18                          ; SMC: set filetype even if unsafe
        ;MOV     r1,r2                           ; SMC: r2->file name from above
        ;LDR     r2,=&FEB
        ;SWI     XOS_File

@


4.9
log
@Collapse dead switches.
Same binary as 0.92, not tagged.
@
text
@a216 15

;CloseFile       ROUT
;; In:   [sp] = file handle
;        Push    "r0,r1,lr"
;        MOV     r0,#0
;        LDR     r1,[sp,#12]
;        BVS     %FT10
;
;        SWI     XOS_Find                        ; SMC: no error passed in so return one from OS_Find
;        STRVS   r0,[sp]
;        Pull    "r0,r1,pc"
;10
;        SWI     XOS_Find                        ; SMC: error passed in so ignore error from OS_Find
;        Pull    "r0,r1,pc",,^

d281 1
a281 1
        MOV     r0, #&8F
d302 1
a302 1
        MOV     r0, #18
d304 1
a304 1
        LDR     r2,=&FEB
@


4.8
log
@Restore *AddTinyDir <nothing> functionality.
See ticket #283.
Moved 'Status' document into Docs.
Merged 'Changes' into 'BlackLog' and delete.
Expanded 2x POPs of lr/pc cos ARM deprecated it.
Combined 2x MUL/ADD into MLA so the module is the same size.

Version 0.92. Tagged as 'Pinboard-0_92'
@
text
@a97 1
      [ Version >= 037
d100 1
a100 1
      ]
a103 3
      [ Version <= 036
        ADR     r1,dataarea
      ]
a110 2
      [ Version >= 037

a129 2
      ]

a171 1
      [ Version >= 037                  ; kill that blessed thingi!
a172 1
      ]
@


4.7
log
@Fix pinboard save code returning corrupt error pointers
Detail:
  s/Save - After the 'dot check' or DoSave resulted in an error being generated, IntSave_KeyPressed was pulling R0 from the stack instead of returning the error block pointer. This typically results in ofla errors on an Iyonix or alignment faults on a beagleboard.
Admin:
  Tested on BB-xM rev A3. Errors due to no dot in the filename, or DoSave failing, are now reported correctly.


Version 0.89. Tagged as 'Pinboard-0_89'
@
text
@d54 3
a56 2
        BL      DoSave     
        Pull    "lr,PC",VS
@


4.6
log
@  Different way of doing escape-aborts-drag implementation
Detail:
  Although the previous check-in works, it uses EventV to trap escape key
  press events. This mechanism doesn't stop them from being passed on to
  whoever has input focus (e.g. a task window).

  The new way to do things is to grab input focus when a drag starts and
  to restore it (if possible) when the drag f we abort the drag (and restore focus). All other keys
  are passed on to the Wimp.

  The side-effect is that any window which has focus will temporarily lose
  focus for the duration of a Pinboard drag op I think we can
  live with that.
Admin:
  Tested on Iyonix and works fine. Now, if only the Filer did this, too...

Version 0.83. Tagged as 'Pinboard-0_83'
@
text
@d45 1
d48 1
a48 1
        Pull    "r0,PC"
a51 1
        ;MOV     r0,#&8F
a52 3
        ;DebugS  sa,"Filename is ",r1
        ;SWI     XOS_Find
        ;Pull    "PC",VS
d54 2
a55 2
        BL      DoSave
        Pull    "r0,PC",VS
d297 1
@


4.5
log
@A few assumptions about SWIs preserving flags remained: nuked.
A few TEQ Rn,#0 changed to use 'S' and save an instruction.
Fix for misscaled tiled backdrop sprite in EX/EY0 mode - an 'out by 1'
error meant that some of the background colour shone through when the
tile sprite got resized to be too short.In any other EX/EY mode you never
noticed it due to rounding errors in the scaling.
The "Iconise to..." options submenu is now shaded if the Wimp has the
iconise buttons turned off: this minimises confusion for anyone who
hasn't realised that shift-close and iconise are subtley different in that
only the iconise button obeys the "Iconise to..." options,whereas
shift-close iconises at the point of application.

Version 0.81. Tagged as 'Pinboard-0_81'
@
text
@d29 1
a29 1
00        
d59 1
a59 1
        
d168 2
@


4.4
log
@Commented out "proginfo" string,no longer used.
Prefixed the pin and addtinydir commands that get saved in the
pinboard file with "X " so your pinboard setup continues even if a file
is no longer available.ROL did this with a new XPin command,not taken.
Merged changes from ROL to allow the icon text to be an arbitary colour
though this can be switched out with "technicolour_text" for the
purists.
Help entry added to the pinboard selection submenu,this will be greyed
out except when
 it's an app
 and it has a !help file
 and it is the only object selected
like the filer does.
Updated messages file accordingly.
Menu clicking on the "save pinboard settings" OK button no longer saves
the file,and adjust clicking keeps the menu tree open
 -> fixes bug report from 1998,now removed from "Status" file
Saveas template resized to match !Edit.
Fixed problem of select dragging a file to an app leaving the icon
selected (due to two conditional MOV R0's being followed by an
unconditional one for some reason).
 -> fixes bug report from 1998,now removed from "Status" file
Tweaked a few CMP#0 BLT's to test specifically for the iconbar handle.
The bug report in "Status" about bits of filenames being left on the
pinboard can be bodged by popping an ADD r0,r0,#16 after the XWimp_TextOp
in s.buffered but I've not done this yet.

Version 0.78. Tagged as 'Pinboard-0_78'
@
text
@d26 4
a29 2
        SWINE   XWimp_ProcessKey
        Pull    "PC",NE
d429 2
a430 1
        SWIGT   XOS_BPut
d433 1
a433 3
        BGT     %BT01

        EXITS
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.76. Tagged as 'Pinboard-0_76'
@
text
@d28 1
d34 1
d45 1
a45 1
        Pull    "PC"
d56 6
a61 14
        Pull    "PC",VS

        ;MOV     r1,r0
        ;MOV     r0,#0
        ;SWI     XOS_Find

        ;MOV     r0, #18
        ;LDR     r1,save_filename_address
        ;LDR     r2,=&FEB
        ;SWI     XOS_File

        MOVVC   r1,#-1
        SWIVC   XWimp_CreateMenu

d78 2
a79 1
        CMP     r2,#0
d269 4
a272 4
        CMP     r3,#0                           ; Check for unsafe file eg. <Wimp$Scrap>
        MOVGE   r0,r2                           ; SMC: only copy if not unsafe
        LDRGE   r1,save_filename_address
        BLGE    Copy_r0r1
d332 2
a333 2
TinyDirsCommand DCB "AddTinyDir ", 0
PinCommand      DCB "Pin ", 0
@


4.2
log
@Ursula branch merged.
Added inclusion of Machine header for new CMOS header
Moved to srccommit.
Templates contain hardwired version/date information which is a long
  way out of date.  This has not been fixed in this checkin.

Version 0.75. Tagged as 'Pinboard-0_75'
@
text
@d231 13
a243 13
CloseFile       ROUT
; In:   [sp] = file handle
        Push    "r0,r1,lr"
        MOV     r0,#0
        LDR     r1,[sp,#12]
        BVS     %FT10

        SWI     XOS_Find                        ; SMC: no error passed in so return one from OS_Find
        STRVS   r0,[sp]
        Pull    "r0,r1,pc"
10
        SWI     XOS_Find                        ; SMC: error passed in so ignore error from OS_Find
        Pull    "r0,r1,pc",,^
d303 1
a303 1
        ENTRY   "r1-r9"
d323 1
a323 1
               
d341 1
a341 1
              
d352 1
a352 1
write_pin_commands ENTRY "r1-r3"
d425 1
a425 1
        Push    "r0-r2,LR"
d434 1
a434 1
        Pull    "r0-r2,PC",VS
d437 3
a439 3
        Pull    "r0-r2,PC",,^
        
        LNK     s.Backdrop
@


4.1
log
@Initial revision
@
text
@d15 1
a16 1
;
d18 2
a19 1
;
d47 1
a47 1
        MOV     r0,#&8F
d49 3
a51 3
        DebugS  sa,"Filename is ",r1
        SWI     XOS_Find
        Pull    "PC",VS
d56 8
a63 8
        MOV     r1,r0
        MOV     r0,#0
        SWI     XOS_Find

        MOV     r0, #18
        LDR     r1,save_filename_address
        LDR     r2,=&FEB
        SWI     XOS_File
d79 1
d249 1
a249 1
        MOV     r0,#&8F
d251 3
a253 3
        DebugS  sa,"Filename is ",r1
        SWI     XOS_Find
        Pull    "PC",VS
d255 1
a255 1
        Push    "r0"                            ; SMC: save file handle for CloseFile
d257 3
a259 3
        BL      CloseFile
        ADD     sp, sp, #4                      ; SMC: don't need file handle now
        Pull    "PC",VS                         ; SMC: return error from DoSave or CloseFile
d279 4
a282 4
        MOV     r0,#18                          ; SMC: set filetype even if unsafe
        MOV     r1,r2                           ; SMC: r2->file name from above
        LDR     r2,=&FEB
        SWI     XOS_File
d290 2
a291 2
        LDR     r0, [r1, #msSaveDesktop_handle]
        BL      DoSave
d295 6
a300 13
StartupCommand  DCB "Pinboard",0
GridOption      DCB " -Grid",0
 [ iconise_to_iconbar
ITIBOption      DCB " -IconiseToIconBar",0
 ]
BackdropCommand DCB "Backdrop ",0
CentredOption   DCB " -C ",0
TiledOption     DCB " -T ",0
ScaledOption    DCB " -S ",0
TinyDirsCommand DCB "AddTinyDir ",0
PinboardCommand DCB "Pin ",0
Space           DCB " ",0
NL              DCB 10,0
a301 1
        ALIGN
d303 1
d305 8
a312 18
        Push    "r1-r3,LR"
        ADR     r1,StartupCommand
        BL      PutString
        Pull    "r1-r3,PC",VS
        LDR     r2,Pinboard_options
        TST     r2,#PinboardOption_Grid
        ADRNE   r1,GridOption
        BLNE    PutString
        Pull    "r1-r3,PC",VS
 [ iconise_to_iconbar
        TST     r2,#PinboardOption_IconiseToIconBar
        ADRNE   r1,ITIBOption
        BLNE    PutString
        Pull    "r1-r3,PC",VS
 ]
        ADR     r1,NL
        BL      PutString
        Pull    "r1-r3,PC",VS
d314 14
a327 3
        LDR     r3,backdrop_path
        CMP     r3,#0
        BEQ     %FT01
d329 5
a333 2
        ADR     r1,BackdropCommand
        BL      PutString
a334 9
        LDR     r2,backdrop_options
        TST     r2,#bd_OptionCentred
        ADRNE   r1,CentredOption
        TST     r2,#bd_OptionScaled
        ADRNE   r1,ScaledOption
        TST     r2,#bd_OptionTiled
        ADRNE   r1,TiledOption
        BL      PutString
        Pull    "r1-r3,PC",VS
d336 6
a341 3
        MOV     r1,r3
        BL      PutString
        Pull    "r1-r3,PC",VS
d343 8
a350 3
        ADR     r1,NL
        BL      PutString
        Pull    "r1-r3,PC",VS
d352 2
a353 1
01
d358 1
a358 1
        Pull    "r1-r3,PC",EQ
d362 1
a362 1
        ADRNE   r1,PinboardCommand
d364 1
a364 1
        Pull    "r1-r3,PC",VS
d368 1
a368 1
        Pull    "r1-r3,PC",VS
d372 1
a372 1
        Pull    "r1-r3,PC",VS
d376 1
a376 1
        Pull    "r1-r3,PC",VS
d388 1
a388 1
        Pull    "r1-r3,PC",VS
d391 1
a391 1
        Pull    "r1-r3,PC",VS
d394 1
a394 1
        Pull    "r1-r3,PC",VS
d403 1
a403 1
        Pull    "r1-r3,PC",VS
d406 2
a407 2
        Pull    "r1-r3,PC",VS
        ADRL     r1,NL
d409 1
a409 1
        Pull    "r1-r3,PC",VS
d413 11
d438 1
a438 1

@


4.1.4.1
log
@Added option to iconise windows to a corner
@
text
@a297 9
 
 [ Version >=67
TLOption        DCB " -TopLeft",0
BLOption        DCB " -BottomLeft",0
TROption        DCB " -TopRight",0
BROption        DCB " -BottomRight",0
SVOption        DCB " -StackVertical",0
 ]
 
a303 2

 [ Version < 67
a305 1
 ]
a324 37

 [ Version >= 67
        ; Check for corner options
        TST     r2, #PinboardOption_UseWinToCorner
        BEQ     %FT10
        
        MOV     r3, #0
        TST     r2, #PinboardOption_WinToCornerLR
        ADDNE   r3, r3, #2
        TST     r2, #PinboardOption_WinToCornerTB
        ADDNE   r3, r3, #1

        CMP     r3, #0           ; Option 0 - top left
        ADREQ   r1, TLOption
        CMP     r3, #1           ; option 1 - bottom left
        ADREQ   r1, BLOption
        CMP     r3, #2           ; option 2 - top right
        ADREQ   r1, TROption
        CMP     r3, #3           ; option 3 - bottom right
        ADREQ   r1, BROption
        
        BL      PutString
        Pull    "r1-r3,PC",VS

        ; Check for stack vertical
        TST     r2, #PinboardOption_WinToCornerHV
        ADRNE   r1, SVOption
        BLNE    PutString
        Pull    "r1-r3,PC",VS
        B       %FT10

Space           DCB " ",0
NL              DCB 10,0
                
10        
 ]

a427 1

@


4.1.4.2
log
@Improved consistency of files/windows, plus JPEG backdrops
@
text
@d299 8
a306 1
 [ Version < 67
d314 1
d317 1
a317 1
 ] 
d349 9
a357 31
        CMP     r3, #0                                    ; Option 0 - top left
        ADREQ   r1, WinTLOption
        CMP     r3, #1                                    ; option 1 - bottom left
        ADREQ   r1, WinBLOption
        CMP     r3, #2                                    ; option 2 - top right
        ADREQ   r1, WinTROption
        CMP     r3, #3                                    ; option 3 - bottom right
        ADREQ   r1, WinBROption
        BL      PutString
        Pull    "r1-r3,PC",VS

        TST     r2, #PinboardOption_WinToCornerHV         ; Check for stack vertical
        ADRNE   r1, WinSVOption
        BLNE    PutString
        Pull    "r1-r3,PC",VS

        ; Check for Tidy options
        MOV     r3, #0
        TST     r2, #PinboardOption_TidyToCornerLR
        ADDNE   r3, r3, #2
        TST     r2, #PinboardOption_TidyToCornerTB
        ADDNE   r3, r3, #1

        CMP     r3, #0                                    ; Option 0 - top left
        ADREQ   r1, TidyTLOption
        CMP     r3, #1                                    ; option 1 - bottom left
        ADREQ   r1, TidyBLOption
        CMP     r3, #2                                    ; option 2 - top right
        ADREQ   r1, TidyTROption
        CMP     r3, #3                                    ; option 3 - bottom right
        ADREQ   r1, TidyBROption
d361 3
a363 2
        TST     r2, #PinboardOption_TidyToCornerHV        ; Check for stack vertical
        ADRNE   r1, TidySVOption
a365 1

a367 19
WinTLOption     DCB " -WTTL",0
WinBLOption     DCB " -WTBL",0
WinTROption     DCB " -WTTR",0
WinBROption     DCB " -WTBR",0
WinSVOption     DCB " -WSV",0

TidyTLOption    DCB " -TTTL",0
TidyBLOption    DCB " -TTBL",0
TidyTROption    DCB " -TTTR",0
TidyBROption    DCB " -TTBR",0
TidySVOption    DCB " -TSV",0

BackdropCommand DCB "Backdrop ",0
CentredOption   DCB " -C ",0
TiledOption     DCB " -T ",0
ScaledOption    DCB " -S ",0
TinyDirsCommand DCB "AddTinyDir ",0
PinboardCommand DCB "Pin ",0

d370 1
a370 1
               
@


4.1.4.3
log
@Pinboard options now set via a *PinboardOptions command.
Backdrop command now includes a -Colour &GGBBRR00 switch to set background
colour.
Save now only saves a Pinboard command, followed by Pin commands. Options
and backdrops are instead set by Configure.
A click on 'Save' (as opposed to opening the saveas box) will save the
pinboard under the current filename.
@
text
@a0 15
; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
d16 1
d18 1
a18 2
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

d46 1
a46 1
        ;MOV     r0,#&8F
d48 3
a50 3
        ;DebugS  sa,"Filename is ",r1
        ;SWI     XOS_Find
        ;Pull    "PC",VS
d55 8
a62 8
        ;MOV     r1,r0
        ;MOV     r0,#0
        ;SWI     XOS_Find

        ;MOV     r0, #18
        ;LDR     r1,save_filename_address
        ;LDR     r2,=&FEB
        ;SWI     XOS_File
d247 1
a247 1
        ;MOV     r0,#&8F
d249 3
a251 3
        ;DebugS  sa,"Filename is ",r1
        ;SWI     XOS_Find
        ;Pull    "PC",VS
d253 1
a253 1
        ;Push    "r0"                            ; SMC: save file handle for CloseFile
d255 3
a257 3
        ;BL      CloseFile
        ;ADD     sp, sp, #4                      ; SMC: don't need file handle now
        ;Pull    "PC",VS                         ; SMC: return error from DoSave or CloseFile
d277 4
a280 4
        ;MOV     r0,#18                          ; SMC: set filetype even if unsafe
        ;MOV     r1,r2                           ; SMC: r2->file name from above
        ;LDR     r2,=&FEB
        ;SWI     XOS_File
d288 2
a289 2
        ;LDR     r0, [r1, #msSaveDesktop_handle]
        ;BL      DoSave
d293 17
a309 6
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; DoSave
;
; Save a Pinboard Obey file
;
; In: r1 -> filename
d311 1
a312 1
        ENTRY   "r1-r9"
d314 60
a373 1
        MOV     r8, r1                          ; r8 -> filename
d375 31
a405 6
        ; Open file to write
        MOV     r0, #&8F
        MOV     r1, r8
        SWI     XOS_Find
        EXIT    VS
        MOV     r9, r0                          ; r9 = file handle
d407 1
a407 5
        ; Write a 'Pinboard' command
        MOV     r0, r9
        ADR     r1, PinboardCommand
        BL      PutString
        ADR     r1, NL
d409 1
d411 3
a413 7
        ; Write *Pin commands for each icon
        BL      write_pin_commands
               
        ; Close the file, set it's type and exit
        MOV     r0, #0
        MOV     r1, r9
        SWI     XOS_Find
d415 2
a416 5
        MOV     r0, #18
        MOV     r1, r8
        LDR     r2,=&FEB
        SWI     XOS_File
        EXIT
d418 9
d428 3
a430 6
PinboardCommand DCB "Pinboard",0
TinyDirsCommand DCB "AddTinyDir ", 0
PinCommand      DCB "Pin ", 0
Space           DCB " ", 0
NL              DCB 10, 0
              
d432 3
a434 8
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; write_pin_commands
;
; Output Pin commands to a file for each icon on the backdrop
;
; In: r0 = filehandle of output
;
; Out: all regs preserved
d436 1
a436 2
write_pin_commands ENTRY "r1-r3"
        ; Loop through all the icons and write Pin commands for each one.
d441 1
a441 1
        EXIT    EQ
d445 1
a445 1
        ADRNE   r1,PinCommand
d447 1
a447 1
        EXIT    VS
d451 1
a451 1
        EXIT    VS
d455 1
a455 1
        EXIT    VS
d459 1
a459 1
        EXIT    VS
d471 1
a471 1
        EXIT    VS
d474 1
a474 1
        EXIT    VS
d477 1
a477 1
        EXIT    VS
d486 1
a486 1
        EXIT    VS
d489 2
a490 2
        EXIT    VS
        ADRL    r1,NL
d492 1
a492 1
        EXIT    VS
a495 11

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; PutString
;
; Write a NULL terminated string to a file
;
; In: r0 = file handle
;     r1 -> string to write
;
; Out: All registers preserved

d510 2
a511 1
        
@


4.1.4.4
log
@Backdrop images that have a mask now have the chosen background colour
showing through (rather than just grey as before).
Added noiconbar compile-time flag (for DiTV demo).
@
text
@a78 1

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
