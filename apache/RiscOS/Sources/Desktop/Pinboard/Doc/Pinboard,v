head	4.1;
access;
symbols
	Pinboard-1_04:4.1
	Pinboard-1_03:4.1
	Pinboard-1_02:4.1
	Pinboard-1_01:4.1
	Pinboard-1_00:4.1
	Pinboard-0_99:4.1
	Pinboard-0_98:4.1
	Pinboard-0_97:4.1
	Pinboard-0_96:4.1
	Pinboard-0_95:4.1
	Pinboard-0_94:4.1
	Pinboard-0_93:4.1
	Pinboard-0_92:4.1
	Pinboard-0_91:4.1
	Pinboard-0_90:4.1
	Pinboard-0_89:4.1
	Pinboard-0_88:4.1
	Pinboard-0_87:4.1
	Pinboard-0_86:4.1
	Pinboard-0_85:4.1
	Pinboard-0_84:4.1
	Pinboard-0_83:4.1
	Pinboard-0_82:4.1
	RO_5_07:4.1
	Pinboard-0_81:4.1
	Pinboard-0_80:4.1
	Pinboard-0_79:4.1
	Pinboard-0_78:4.1
	Pinboard-0_77:4.1
	Pinboard-0_76:4.1
	Ursula_merge:4.1
	Pinboard-0_75:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	rleggett_Pinboard-0_75d:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rleggett_Pinboard-0_75c:4.1
	rleggett_Pinboard-0_75b:4.1
	rleggett_Pinboard-0_75:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rleggett_Pinboard-0_74:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.29.56;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.56;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.29.34;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.20.36;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.18.29;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@The following is the iconize message protocol.

 Pinboard acts as the default iconizer.


When the user SHIFT-Select on the close tool the wimp broadcasts the
following message:

 Message_Iconize: 

     +20  Window handle.
     +24  Task handle.
     +28  20 Bytes of title string. (last part of first word)
     +48
                   


If no iconizer loaded 
        Nothing happens.

If iconizer loaded
        1. It acknowledges the message. (stops the broadcast)
        2. It sends the following message to the window:

           Message_WindowInfo:

               +20 Window handle

           (For old applications)
                         Application ignores the message.
                         Iconizer gets acknowledgement back.
                         Iconizer uses info in the first Message_Iconize to
                         iconize the window.

                        sprite used is ic_<task name> or ic_? if not found.


           (New applications)

                    1. If it doesn't want to help it ignores the message.

                    2. If it wants to help it replies with the following
                       message:

                       Message_WindowInfo:

                          +20 Window handle.
                          +24 Reserved, must be 0.
                          +28 Sprite name to use, null terminated  (MAX = 7
                              chars + NULL) sprite name used is 
                              ic_<string>
                          +36 Title string to use null terminated (as short
                              as possible truncated to 20 characters).

                        The iconizer will then use this info to iconize the
                        window.       

                        This should enable applications such as edit to give
                        a different icon depending on the file type of
                        the file being edited in the window.


                    3.  If the application wants to iconize its own window
                        it acknowledges the original Window_Info                        
                        message, and does all the work itself.


When a window is closed:

                    The wimp broadcasts the following message:
 
                    Message_WindowClosed

                    +20 Window handle.

                    The iconizer should then remove the icon.

When a task exits:

                    The iconizer should spot the Message_TaskQuit and
                    remove all the icons for that task.


When a new iconizer starts up:

                    It broadcasts a Message_WindowInfo with
 
                    +20 0.   (Window handle 0)
                    +24
                    
                    An iconizer receiving this message should reopen 
                    all iconized windows.

                    All applications should ignore such a message.


Current iconizer (Pinboard) behaviour:


          If it does not get a reply to the Message_WindowInfo
             
               1. It gets the task name for the task that owns the window.
                  it tries to find a sprite called ic_<task name> in the 
                  wimp sprite area, if it fails it uses a sprite called
                  ic_?. 

               2. It uses the title given in the Message_Iconize.
                
          If it gets a Message_WindowInfo:

               1. It tries to find the sprite ic_<name given in message>
                  if it fails it uses ic_?.

               2. It uses the title given in the Message_WindowInfo.


When shift menu is pressed over an iconized window, the application will
receive a normal menu event, new applications should note that the window is
iconized and always produce the main menu for the window, even if there is a
context specific menu for the current pointer position.



          



 

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
