head	4.3;
access;
symbols
	Free-0_42:4.3
	Free-0_41:4.3
	Free-0_40:4.3
	RO_5_07:4.2
	Free-0_39:4.2
	Free-0_38:4.2
	Free-0_37:4.2
	Free-0_36:4.2
	dellis_autobuild_BaseSW:4.2
	Free-0_35:4.2
	Free-0_34:4.2
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.2
	Free-0_33:4.1
	ROL_merge:4.1
	ROL_Free-0_33:4.1
	ROL_bp:4.1
	ROL:4.1.0.10
	Free-0_32:4.1
	Ursula_merge:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_Free_0_30:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	2011.11.28.12.18.36;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	iKirgixLQEf066Jv;

4.2
date	2000.05.25.16.05.17;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.53;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.53;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.29.19;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.20.18;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.18.13;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Change text formatting to be a single right justified (internationalised) icon.
Delete Doc.doc duplication.
Delete Template2D.
Excess headers removed.
Out of range SWIs returned error 0.
Some symbolic names from ModHand, HighFSI, WimpSpace used.
Fix corrupt error message in set_text due to misplaced Pull.
Uses k for thousands not Kelvins.

Version 0.40. Tagged as 'Free-0_40'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > s.Tail

;-----------------------------------------------------------------------------------------
; stricmp(char *r0, char *r1) returning Z=1 if equal
;
; compare the null terminated strings pointed to by r0 and r1 (case insensitive).
stricmp
       Push     "r0-r2,LR"

01
       LDRB     r14,[r0],#1
       BIC      r14,r14,#&20            ; Uppercasify
       LDRB     r2,[r1],#1
       BIC      r2,r2,#&20              ; Uppercasify
       CMP      r14,r2
       Pull     "r0-r2,PC",NE
       CMP      r14,#0
       BNE      %BT01

       Pull     "r0-r2,PC"

; ----------------------------------------------------------------------------------------------------------------------
;       Release linked lists of files/icons. Note - may be in USER mode or SVC mode - can't use USER stack,
;       though, as it may not be okay. Hence not allowed to use the stack at all.
;    R2 -> pointer to start of list to kill (active_ptr or buffered_ptr)
;        DANGER - CORRUPTS R0-R3
free_list
        MOV     R3, LR
        LDR     r1, [r2,#next_ptr]
        MOV     r0, #0
        STR     r0, [r2,#next_ptr]
; Get next file in the list
01
        MOV     r0, #ModHandReason_Free
        SUBS    r2, r1, #0
        MOVLE   PC, R3
; Free the workspace
        LDR     r1, [r2,#next_ptr]
        SWI     XOS_Module
        B       %BT01

; ----------------------------------------------------------------------------------------------------------------------

copy_r0r4r3_space

        Push    "r3,r4,LR"
01
        LDRB    r14, [r4], #1
        CMP     r14,#32
        MOVLE   R14,#0
        STRB    r14, [r0], #1
        SUBS    r3 , r3,#1
        CMPNE   r14, #0
        BNE     %BT01
        CMP     r3,#0
        STREQB  r3,[r0],#1
        SUB     r0, r0, #1

        Pull    "r3,r4,PC"

; ----------------------------------------------------------------------------------------------------------------------
copy_r0r4_null
01
        LDRB    r6, [r4], #1
        STRB    r6, [r0], #1
        CMP     r6, #0
        BNE     %BT01     
        SUB     r0, r0, #1
        MOV     PC, LR

; ----------------------------------------------------------------------------------------------------------------------

; MessageTrans routines

LookupError
        Push    "r1-r7,lr"
        BL      open_messages
        Pull    "r1-r7,pc",VS
        MOV     r4, r1
        ADR     r1, message_fblock
        MOV     r2, #0
        MOV     r5, #0
        MOV     r6, #0
        MOV     r7, #0
        SWI     XMessageTrans_ErrorLookup
        Pull    "r1-r7,pc"

message_filename
        DCB     "Free:Messages",0
        ALIGN

open_messages
        Push    "r0-r2,lr"
        LDR     r0, message_fopen
        CMP     r0, #0
        Pull    "r0-r2,pc",NE
        ADR     r0, message_fblock
        ADR     r1, message_filename
        MOV     r2, #0
        SWI     XMessageTrans_OpenFile
        STRVS   r0, [sp]
        STRVC   r0, message_fopen
        Pull    "r0-r2,pc"

Lookup_InPlace  ROUT
        Push    "r1-r7,LR"
        BL      open_messages
        Pull    "r1-r7,PC",VS
        MOV     r1,r0
        ADR     r0,message_fblock
        MOV     r2,#0
        MOV     R4,#0
        MOV     R5,#0
        MOV     R6,#0
        MOV     R7,#0
        SWI     XMessageTrans_Lookup
        MOVVC   r0,r2
        Pull    "r1-r7,PC"

Lookup  ROUT                            ; r0 -> token, r2 -> buffer , r3 = buf length ,r4 -> arg
        Push    "r1-r7,LR"
        BL      open_messages
        Pull    "r1-r7,PC",VS
        MOV     r1,r0
        ADR     r0,message_fblock
        MOV     R5,#0
        MOV     R6,#0
        MOV     R7,#0
        SWI     XMessageTrans_Lookup
        MOVVC   r0,r2
        STRVC   r3,[sp,#2*4]
        Pull    "r1-r7,PC"

; ----------------------------------------------------------------------------------------------------------------------



; Neil's debugging routines

      [ debug
        InsertNDRDebugRoutines
      ]

        END
@


4.2
log
@  32-bit compatibility.
Detail:
  Module is 32-bit compatible
  Documentation updated to note that entry point is now called in SVC32.
Admin:
  Tested briefly on Ursula build.

Version 0.34. Tagged as 'Free-0_34'
@
text
@d18 1
a18 1
; cmpstr.
d20 2
a21 2
; compare the strings pointed to by r0 and r1 (case insensitive).
cmpstr
d26 1
a26 1
       BIC      r14,r14,#&20
d28 1
a28 1
       BIC      r2,r2,#&20
a35 49
; [ :LNOT: usefp
;;-----------------------------------------------------------------------------------------
;; divrem.
;;
;; divides r9 by r10. result in r9, reminder in r10.
;divrem
;       Push    "LR"

;       Debuga  xx,"Div ",r9,r10

;       CMP     r10,#0
;       MOVEQ   r9,#0
;       Pull   "PC",EQ
;
;       MOV     r14,#0
;01
;       SUBS    r9,r9,r10
;       BCC     %FT02
;       ADD     r14,r14,#1
;       B       %BT01
;02
;       ADD     r10,r9,r10
;       MOV     r9,r14

;       Debug   xx," = ",r9,r10

;       Pull    "PC"
; ]

 [ {FALSE}      ; no longer used
;-----------------------------------------------------------------------------------------
; round.
;
; Rounds r0 to the nearest whole multiple of r1.
round
        Push    "LR"

        ADD     r0,r0,r1,LSR #1     ; Add half of R1
        MOV     r14,#0
01
        SUBS    r0,r0,r1
        BMI     %FT02
        ADD     r14,r14,#1
        B       %BT01
02
        MUL     r0,r1,r14

        Pull    "PC"
 ]
d76 10
d134 1
a134 1
Lookup  ROUT                ; r0 -> token, r2 -> buffer , r3 = buf length ,r4 -> arg
@


4.1
log
@Initial revision
@
text
@d49 1
a49 1
;      
d100 1
a100 1
; Free the workspace                
a105 1
       [ Version >= 4          
d117 1
a117 2
        BNE     %BT01   
      [ Version >= 6
a119 1
      ]
a122 1
       ]
d169 1
a169 1
        SWI     XMessageTrans_Lookup 
d182 1
a182 1
        SWI     XMessageTrans_Lookup 
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
