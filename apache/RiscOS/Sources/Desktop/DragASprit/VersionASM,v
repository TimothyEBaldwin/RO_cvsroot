head	4.9;
access;
symbols
	DragASprit-0_21:4.9
	DragASprit-0_20:4.8
	DragASprit-0_19:4.7
	DragASprit-0_18:4.6
	DragASprit-0_17:4.5
	DragASprit-0_16:4.4
	RO_5_07:4.3
	DragASprit-0_15:4.3
	dellis_autobuild_BaseSW:4.2
	dcotton_autobuild_BaseSW:4.3
	DragASprit-0_14:4.2;
locks; strict;
comment	@# @;


4.9
date	2017.08.30.22.36.03;	author jlee;	state Exp;
branches;
next	4.8;
commitid	cEmt8eL1pUvNWh5A;

4.8
date	2016.05.08.16.39.30;	author jlee;	state Exp;
branches;
next	4.7;
commitid	3yxufEQR94T5nH5z;

4.7
date	2014.07.05.12.06.13;	author jlee;	state Exp;
branches;
next	4.6;
commitid	LoVRzNlwqbCyubHx;

4.6
date	2014.07.03.22.40.04;	author jlee;	state Exp;
branches;
next	4.5;
commitid	Wvkrnx3yQXMZ3ZGx;

4.5
date	2013.10.14.23.28.24;	author jlee;	state Exp;
branches;
next	4.4;
commitid	Z9zBtet7qrvIKj9x;

4.4
date	2013.10.07.00.48.30;	author jlee;	state Exp;
branches;
next	4.3;
commitid	VmHZmrpDtev8si8x;

4.3
date	2001.03.16.17.09.40;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	2000.04.20.15.57.16;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	2000.04.20.15.54.31;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.9
log
@Fix redraw issue with alpha drop shadow
Detail:
  s/StartUp - When the alpha drop shadow is in use, the foreground sprite is one row+column larger than normal, to allow the shadow to be feathered. However the drag box calculations weren't taking this into account, resulting in slightly wonky coordinates that can result in redraw issues in some situations (specifically, the screen area under the sprite's current location is filled with a plain colour if the bounding box overlaps the graphics window in a certain manner). Introduce orig_x_size and orig_y_size variables so that the drag box calculations can be correct regardless of how much padding is added to the image (with the limitation that the padding must be on the right / bottom)
  Also, fix the AtPointer support so that the pointer is placed at the centre of the input sprite, not the padded sprite.
Admin:
  Tested on Raspberry Pi
  Resolves ticket #402, and similar corruption with animated windows (e.g. start a drag of a sprite which overlaps !Alarm's icon)


Version 0.21. Tagged as 'DragASprit-0_21'
@
text
@;
; This file is automatically maintained by srccommit, do not edit manually.
; Last processed by srccommit version: 1.1.
;
                        GBLS    Module_MajorVersion
                        GBLA    Module_Version
                        GBLS    Module_MinorVersion
                        GBLS    Module_Date
                        GBLS    Module_FullVersion
                        GBLS    Module_ApplicationDate
                        GBLS    Module_HelpVersion
                        GBLS    Module_ComponentName
                        GBLS    Module_ComponentPath
Module_MajorVersion     SETS    "0.21"
Module_Version          SETA    21
Module_MinorVersion     SETS    ""
Module_Date             SETS    "30 Aug 2017"
Module_ApplicationDate  SETS    "30-Aug-17"
Module_ComponentName    SETS    "DragASprit"
Module_ComponentPath    SETS    "castle/RiscOS/Sources/Desktop/DragASprit"
Module_FullVersion      SETS    "0.21"
Module_HelpVersion      SETS    "0.21 (30 Aug 2017)"
                        END
@


4.8
log
@Avoid unnecessary remainder calculations
Detail:
  s/StartUp - Avoid unnecessary remainder calculations in DivRem macro
Admin:
  Tested on Cortex-A15


Version 0.20. Tagged as 'DragASprit-0_20'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.20"
Module_Version          SETA    20
d17 2
a18 2
Module_Date             SETS    "08 May 2016"
Module_ApplicationDate  SETS    "08-May-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.20"
Module_HelpVersion      SETS    "0.20 (08 May 2016)"
@


4.7
log
@Fix flickery drags. Tweak translucent drop shadows.
Detail:
  s/Drag - When moving the dragged sprite, avoid plotting over the top of its old location in order to prevent flicker caused by overdraw. This flicker wasn't so apparent with the older translucent or hatched sprite plotting, but is a lot more noticeable with ABGR sprites.
  s/StartUp - Use 50% alpha for the ABGR sprite in true colour modes, to match hatching & non-drop shadow variants. Also make the drop shadow completely invisible when behind the sprite - better than having it there but making it almost completely imperceptible in order to try and hide the fact that it always looks a bit funny
Admin:
  Tested on Iyonix


Version 0.19. Tagged as 'DragASprit-0_19'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.19"
Module_Version          SETA    19
d17 2
a18 2
Module_Date             SETS    "05 Jul 2014"
Module_ApplicationDate  SETS    "05-Jul-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.19"
Module_HelpVersion      SETS    "0.19 (05 Jul 2014)"
@


4.6
log
@Add support for translucent drop shadows
Detail:
  Drop shadows were disabled in DragASprite 0.17 when using translucency due to them looking a bit ugly. This change brings them back, but implemented in a different manner to produce a better result.
  Instead of using a standard sprite and rendering it with translucency, we create a sprite with an alpha channel and use the alpha to control the relative intensity of the dragged sprite and its shadow. The alpha channel also allows us to feather/blur the shadow, getting rid of the hard edges that were mostly resposible for the previous version looking so poor.
  s/Drag - Adjust TranslucentPlot to support plotting of the ABGR sprite
  s/StartUp - Adjust drag startup logic so that >2bpp uses an ABGR sprite, 2bpp uses a translucent plot (+ hard shadow), and 1bpp continues to use dithering/hatching. Add new GenerateTranslucentDropShadow routine that's responsible for creating the ABGR sprite. Adjust GetByteSizeOfSprite to return separate values for the size of the foreground (masked/ABGR) and background sprites.
  s/Support - Add new check for whether the kernel supports ABGR sprites
Admin:
  Tested on BB-xM
  Fixes issue #390:
  https://www.riscosopen.org/tracker/tickets/390


Version 0.18. Tagged as 'DragASprit-0_18'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.18"
Module_Version          SETA    18
d17 2
a18 2
Module_Date             SETS    "03 Jul 2014"
Module_ApplicationDate  SETS    "03-Jul-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.18"
Module_HelpVersion      SETS    "0.18 (03 Jul 2014)"
@


4.5
log
@Disable drop shadow when using translucency
Detail:
  s/StartUp - By popular demand, automatically disable the drop shadow when we're performing a translucent drag, as general opinion seems to be that translucent drags will look better without it. Reportedly this also matches the behaviour of ROL's version of the module.
Admin:
  Tested on BB-xM


Version 0.17. Tagged as 'DragASprit-0_17'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.17"
Module_Version          SETA    17
d17 2
a18 2
Module_Date             SETS    "15 Oct 2013"
Module_ApplicationDate  SETS    "15-Oct-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.17"
Module_HelpVersion      SETS    "0.17 (15 Oct 2013)"
@


4.4
log
@Add support for translucent rendering of dragged sprites
Detail:
  As per ROL's version of DragASprite, we now support translucent drags as well.
  As long as you have a suitable SpriteExtend version, DragASprite will try and use translucent drags wherever it used to use hatching before.
  The only exception to this is in 1bpp modes, where blending is essentially impossible and so it sticks with the old hatching code.
  As with ROL's version, the only way of disabling translucent drags (short of loading an older SpriteExtend) is to set bit 8 of the flags in R0 when calling DragASprite_Start.
  File changes:
  s/Drag - Drag sprite rendering now goes via new TranslucentPlot routine, to allow translucent/non-translucent rendering to be performed as appropriate
  s/Startup, s/Support - Updated with code to detect when translucency is and isn't supported. A few OS_SpriteOp reason code magic numbers replaced with symbols.
Admin:
  Tested on BB-xM


Version 0.16. Tagged as 'DragASprit-0_16'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.16"
Module_Version          SETA    16
d17 2
a18 2
Module_Date             SETS    "07 Oct 2013"
Module_ApplicationDate  SETS    "07-Oct-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.16"
Module_HelpVersion      SETS    "0.16 (07 Oct 2013)"
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 0.15. Tagged as 'DragASprit-0_15'
@
text
@d3 1
d10 1
a10 2
                        GBLS    Module_ApplicationDate2
                        GBLS    Module_ApplicationDate4
d14 2
a15 2
Module_MajorVersion     SETS    "0.15"
Module_Version          SETA    15
d17 2
a18 3
Module_Date             SETS    "16 Mar 2001"
Module_ApplicationDate2 SETS    "16-Mar-01"
Module_ApplicationDate4 SETS    "16-Mar-2001"
d20 3
a22 3
Module_ComponentPath    SETS    "RiscOS/Sources/Desktop/DragASprit"
Module_FullVersion      SETS    "0.15"
Module_HelpVersion      SETS    "0.15 (16 Mar 2001)"
@


4.2
log
@Module made 32-bit compatible. Placed under srccommit control.

Version 0.14. Tagged as 'DragASprit-0_14'
@
text
@d9 7
a15 2
Module_MajorVersion     SETS    "0.14"
Module_Version          SETA    14
d17 7
a23 2
Module_Date             SETS    "20 Apr 2000"
Module_FullVersion      SETS    "0.14"
@


4.1
log
@created by srccommit.
@
text
@d9 2
a10 2
Module_MajorVersion     SETS    "0.13"
Module_Version          SETA    13
d13 1
a13 1
Module_FullVersion      SETS    "0.13"
@

