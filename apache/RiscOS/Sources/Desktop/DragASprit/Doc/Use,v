head	4.1;
access;
symbols
	DragASprit-0_21:4.1
	DragASprit-0_20:4.1
	DragASprit-0_19:4.1
	DragASprit-0_18:4.1
	DragASprit-0_17:4.1
	DragASprit-0_16:4.1
	RO_5_07:4.1
	DragASprit-0_15:4.1
	dellis_autobuild_BaseSW:4.1
	DragASprit-0_14:4.1
	sbrodie_sedwards_16Mar2000:4.1
	Ursula_merge:4.1
	DragASprit-0_13:4.1
	dcotton_autobuild_BaseSW:4.1
	nturton_DragASprit-0_11:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_DragASprite_0_11:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rleggett_DragASprit-0_13:4.1
	bavison_DragASprite-0_12:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.29.13;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.13;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.26.38;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.15.03;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.15.16;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@How to drive DragASprite

How to do a drag
----------------

i) Prepare a sprite to be dragged (this may be trivial as the application may
        have a suitable sprite already to hand).
ii) Perform a DragASprite_Start. This takes a copy of your sprite (so you can
        dispose of your copy whenever you like) and starts a Wimp drag.
iii) When the Wimp sends you an indication that your drag has finished do
        a DragASprite_Stop which will release the workspace necessary for
        doing a drag-a-sprite.

The Swis
--------

DragASprite_Start (0x42400)

This Swi starts dragging a sprite. The sprite you supply is copied, so there
is no problem with you disposing of your copy of the sprite.

In:
r0 = flags:
        Bits    Meaning
        0-1     Horizontal location of sprite in box:
                00      Left
                01      Centre
                10      Right
                11      <undefined>
        2-3     Vertical location of sprite in box:
                00      Bottom
                01      Centre
                10      Top
                11      <undefined>
        4-5     Drag bounding box is:
                00      Whole screen
                01      Display area of window that the pointer's over
                10      User specified
                11      <undefined>
        6       Bounding box applies to:
                0       The box
                1       The pointer
        7       Control of drop-shadow:
                0       Don't do a drop-shadow
                1       Make a drop shadow when copying the sprite
        8-31    Reserved for future use, should be set to 0.
r1 = sprite area:
        0       System sprite area
        1       Wimp sprite area
        other   Address of sprite area
r2 = sprite name^
r3 = Pointer to 16-byte block containing box:
        Offset  Use
        0       x0
        4       y0
        8       x1
        12      y1
r4 = Pointer to optional (see flags) 16-byte block containing bounding box:
        Offset  Use
        0       x0
        4       y0
        8       x1
        12      y1

Out:
All registers preserved.

DragASprite_Stop (0x42401)

This Swi terminates any current drag operation and releases any
drag-a-sprite workspace claimed to do a drag. It is expected that this Swi
will be called when the user_drag_box reason is received by the application.

In:
-
Out:
-
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
