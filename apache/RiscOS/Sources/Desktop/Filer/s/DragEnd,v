head	4.12;
access;
symbols
	Filer-2_43:4.12
	Filer-2_42:4.12
	Filer-2_41:4.12
	Filer-2_40:4.12
	Filer-2_39:4.12
	Filer-2_38:4.10
	Filer-2_37:4.10
	Filer-2_36:4.10
	Filer-2_35:4.10
	Filer-2_34:4.10
	Filer-2_33:4.10
	Filer-2_32:4.10
	Filer-2_31:4.10
	Filer-2_30:4.10
	Filer-2_29:4.10
	Filer-2_28:4.9
	Filer-2_27:4.9
	Filer-2_26:4.9
	Filer-2_25:4.8
	Filer-2_24:4.8
	Filer-2_23:4.8
	Filer-2_22:4.8
	Filer-2_21:4.8
	Filer-2_20:4.8
	Filer-2_19:4.8
	Filer-2_18:4.8
	Filer-2_17:4.7
	Filer-2_16:4.7
	Filer-2_15:4.7
	Filer-2_14:4.7
	Filer-2_13:4.7
	Filer-2_12:4.7
	Filer-2_11:4.7
	Filer-2_10:4.7
	Filer-2_09:4.7
	RO_5_07:4.7
	Filer-2_08:4.7
	Filer-2_07:4.5
	Filer-2_06:4.5
	Filer-2_05:4.5
	Filer-2_04:4.4
	Filer-2_03:4.4
	Filer-2_02:4.4
	Filer-2_01:4.4
	Filer-2_00:4.3
	Filer-1_99:4.3
	Filer-1_98:4.3
	Filer-1_97:4.3
	Ursula_merge:4.1.4.8
	Filer-1_96:4.2
	Filer-1_95:4.1.4.8
	nturton_Filer-1_85:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.8
	Ursula_RiscPC:4.1.4.8.0.2
	rthornb_UrsulaBuild-19Aug1998:4.1.4.8
	UrsulaBuild_FinalSoftload:4.1.4.8
	rthornb_UrsulaBuild-12Aug1998:4.1.4.8
	aglover_UrsulaBuild-05Aug1998:4.1.4.8
	rthornb_UrsulaBuild-29Jul1998:4.1.4.8
	rthornb_UrsulaBuild-22Jul1998:4.1.4.8
	rleggett_Filer-1_94:4.1.4.8
	rthornb_UrsulaBuild-15Jul1998:4.1.4.7
	rthornb_UrsulaBuild-07Jul1998:4.1.4.7
	rthornb_UrsulaBuild-17Jun1998:4.1.4.7
	rthornb_UrsulaBuild-03Jun1998:4.1.4.7
	rthornb_UrsulaBuild-27May1998:4.1.4.7
	rleggett_Filer-1_93:4.1.4.7
	rthornb_UrsulaBuild-21May1998:4.1.4.6
	rthornb_UrsulaBuild_01May1998:4.1.4.6
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.12
date	2014.11.17.23.11.02;	author rsprowson;	state Exp;
branches;
next	4.11;
commitid	l4rizoxS4VCzPAYx;

4.11
date	2014.11.17.23.08.55;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	zHjekpptJV1iOAYx;

4.10
date	2011.11.12.13.06.46;	author rsprowson;	state Exp;
branches;
next	4.9;
commitid	nyU3LOr3CQgrS2Hv;

4.9
date	2010.10.23.18.02.28;	author rsprowson;	state Exp;
branches;
next	4.8;

4.8
date	2009.06.15.23.38.17;	author bavison;	state Exp;
branches;
next	4.7;

4.7
date	2003.02.07.15.23.48;	author bavison;	state Exp;
branches;
next	4.6;

4.6
date	2003.02.04.14.30.59;	author bavison;	state Exp;
branches;
next	4.5;

4.5
date	2002.11.12.20.43.55;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2001.03.16.17.09.22;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	2000.04.20.16.21.12;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.11.56.25;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.21;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.21;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.27.11;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.08.27.09.08.52;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	97.09.12.09.17.27;	author rleggett;	state Exp;
branches;
next	4.1.4.3;

4.1.4.3
date	97.09.24.13.26.32;	author rleggett;	state Exp;
branches;
next	4.1.4.4;

4.1.4.4
date	97.10.21.09.38.19;	author rleggett;	state Exp;
branches;
next	4.1.4.5;

4.1.4.5
date	98.01.07.10.27.49;	author rleggett;	state Exp;
branches;
next	4.1.4.6;

4.1.4.6
date	98.04.27.10.26.07;	author rleggett;	state Exp;
branches;
next	4.1.4.7;

4.1.4.7
date	98.05.26.11.21.30;	author rleggett;	state Exp;
branches;
next	4.1.4.8;

4.1.4.8
date	98.07.22.09.51.18;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.16.11;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.15.53;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.12
log
@Fix error on drag termination
When DragASprite is unplugged the Filer would error on terminating a file drag.
Changed to 'X' SWI like all the other DragASprite_Stop uses.

Tested on a Risc PC with & without the DragASprite setting enabled.

Version 2.39. Tagged as 'Filer-2_39'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; event_user_dragbox
; ==================

; In    r1 -> wimp_eventstr
;             [r1, #0]  dragbox x0
;             [r1, #4]          y0
;             [r1, #8]          x1
;             [r1, #12]         y1

; NB. The dirviewer that caused the drag may have been replaced, so we must
; deal solely with textual objects. (drag -> tasks get null events -> structure
; is liable to change)

; Out   all regs may be corrupted - going back to PollWimp
;       userdata corrupted

event_user_dragbox Entry
 [ DragASprite
        SWI     XDragASprite_Stop
 ]
        ; Check the variety of drag, and ignore any more drags that we
        ; didn't start.
        LDRB    r14, drag_type
        STRB    r14, last_drag_type
        MOV     r10, #drag_ignore
        STRB    r10, drag_type
        CMP     r14, #drag_ignore
        EXIT    EQ

 [ autoscroll
        CMP     r14, #drag_selectmany
        CMPNE   r14, #drag_adjustmany
        MOVEQ   r0, #0
        SWIEQ   XWimp_AutoScroll
 ]

        CMP     r14, #drag_file
        BEQ     file_drag
        CMP     r14, #drag_copysave
        BEQ     copysave_drag
        CMP     r14, #drag_newdirsave
        BEQ     newdir_drag
        CMP     r14, #drag_selectmany
        BEQ     selectmany_drag
        CMP     r14, #drag_adjustmany
        BEQ     adjustmany_drag
        EXIT

file_drag       ROUT    ; NOENTRY
        LDR     r0, sel_whandle         ; If this has changed, we can do nowt
        TEQ     r0, #Nowt
 [ debug
 BNE %FT00
 DLINE "Selection handle has been zapped in the background. Goodbye"
00
 ]
        EXIT    EQ

        BL      FindDir
        BLEQ    InitSelection
        EXIT    NE                      ; [Waarg! Dir/Sel has vanished]


        ADR     r1, mousedata           ; Need pointer position when dropped
        SWI     XWimp_GetPointerInfo    ; r1 -> wimp_pointerinfo. Won't error

 [ debug
 Push "r0-r3"
 LDMIA r1, {r0-r3}
 DREG r0, "user_dragbox: x ",cc,Integer
 DREG r1, ", y ",cc,Integer
 DREG r2, ", ihandle ",cc
 DREG r3, ", whandle ",,Integer
 Pull "r0-r3"
 ]

        LDR     r0, windowhandle
        BL      FindDir                 ; r4 -> dirviewer block
 [ version >= 113
        BNE     SendSelectionToWindow   ; Dropped on a not directory viewer
 |
        BNE     %FT50                   ; [not dropped in a dirviewer]
 ]


        LDR     r14, sel_whandle
        TEQ     r14, r0
        EXIT    EQ                      ; [dropped into itself !]

 [ disallow_recursive_copies
        BL      is_copy_recursive
        EXIT    VS
 ]


; Dropped into another of our directory viewers - do copy/move
; by *Copy with appropriate postfix

 [ :LNOT: actionwind
        LDRB    r14, initshiftstate     ; If SHIFT-drag used to drag to another
        TEQ     r14, #&FF               ; dirviewer, copy files with D option.
 |
      [ version >= 138                  ; Check if configuration calls for filer_action
        MOV     R0,#&A1
        MOV     R1,#FileSwitchCMOS
        SWI     XOS_Byte
        MOVVS   R2,#0
        TST     R2,#InteractiveCopyCMOSBit
        MOVNE   r0,#0
        MOVEQ   r0, #Filer_Action_Memory_CopyRename
        BLEQ    StartActionWindow
      |
      [ version >= 113
        MOV     r0, #Filer_Action_Memory_CopyRename
      ]
        BL      StartActionWindow
      ]
        BVS     %FT02
        TEQ     r0, #0
        BEQ     %FT02
        LDR     r1, sel_dirname
        SWI     XFilerAction_SendSelectedDirectory
        BVS     %FT02
        BL      SendSelectedFiles
        BVS     %FT02
        LDR     r1, [r4, #d_dirnamestore]
        BL      strlen
        ADD     r4, r3, #1
        MOV     r3, r1
        LDRB    r1, initshiftstate
        TEQ     r1, #&FF
        MOVNE   r1, #Action_Copying
        MOVEQ   r1, #Action_Moving
        [ OptionsAreInRAM
        LDRB    r2, fileraction_options
        |
        BL      ExtractCMOSOptions
        ]
        SWI     XFilerAction_SendStartOperation
        B       %FT49
02      ;
        CLRV
        LDRB    r14, initshiftstate
        TEQ     r14, #&FF
 ]

        ADRNE   r0, copy_commandtitle
        ADRNE   r6, copydrag_postfix

        ADREQ   r0, move_commandtitle
        ADREQ   r6, movedrag_postfix

        BL      messagetrans_lookup; SMC: look up command window title
        SWI     XWimp_CommandWindow
        EXIT    VS

        MOV     r7, #0                  ; Close command window with prompt

05      CMP     r5, #Nowt
        BEQ     %FT48                   ; [finished]

        ADR     r1, userdata
        ADR     r2, star_copy_prefix    ; 'copy src.leaf dst.leaf opt1 opt2'
        BL      strcpy
        LDR     r2, sel_dirname         ; +srcdirname
        BL      strcat_excludingspaces
        LDR     r2, sel_leafname        ; +leafname
        BL      AppendLeafnameToDirname
        ADR     r2, aspace
        BL      strcat
        LDR     r2, [r4, #d_dirnamestore] ; +dstdirname
        BL      strcat_excludingspaces
        LDR     r2, sel_leafname        ; +leafname
        BL      AppendLeafnameToDirname
        ADR     r2, star_copy_postfix   ; +static options
        BL      strcat
        MOV     r2, r6                  ; +dynamic options
        BL      strcat
 [ version >= 114
        BL      AppendConfirmVerboseForceAndNewer
 |
        BL      AppendConfirmAndVerbose
 ]
        ADR     r0, userdata
        SWI     XOS_CLI                 ; Doing this in a box
        BVS     %FT45

        Push    r4                      ; Want to preserve dest dirviewer^
        BL      GetSelection
        Pull    r4
        B       %BT05


45      BL      LocalReportError        ; Prints the error; gives 'Press SPACE'
        MOV     r7, #-1                 ; Close command window without prompt

48      MOV     r0, r7                  ; 'Press SPACE' if command printed 'owt
        SWI     XWimp_CommandWindow     ; Or close window without prompt if err

49      ;
 [ clearsel_copymove
        MOV     r2, #Nowt
        BL      ClearAllSelections
 ]
        B       %FT90                   ; go home



copy_commandtitle
        DCB     "TCopy", 0

move_commandtitle
        DCB     "TMove", 0

copydrag_postfix
        DCB     "~D", 0                 ; ~D(elete)

movedrag_postfix
        DCB     "D", 0                  ; D(elete)

star_copy_prefix
        DCB     "Copy ", 0

star_copy_postfix
 [ version >= 114
        DCB     " ~P~QR~T~LF", 0        ; Don't alter A(ccess),S(tamp)
                                        ; CMOS set for C(onfirm),V(erbose),N(ewer)
                                        ; CMOS Force doesn't have a *copy equivalent
 |
        DCB     " ~P~QR~T", 0           ; Don't alter A(ccess),L(ook),N(ewer)
                                        ;             S(tamp),F(orce)
                                        ; CMOS set for C(onfirm),V(erbose)
 ]
aspace  DCB     space, 0

adot    DCB     "."                     ; Share zero with ...
anull   DCB     0


        ALIGN


 [ version >= 113
SendSelectionToWindow
        BL      NobbleMenuTree
 |
50 ; Dropped selection in alien window, so send to window owner
 ]

 [ debugtask
        DREG    r13,"Entry R13 "
 ]

        LDR     r4, sel_dir             ; We overwrote this by doing FindDir

        STR     r4, was_seldir

 [ dragtobar
        MOV     r7, #0                  ; No directories dragged to the bar
 ]

 [ version >= 140                       ; Send Message_FilerSelection to window /icon.
        Push    "r0-r9,r14"
      [ debugtask
        DLINE   "Pushed r0-r9,r14"
        DLINE   "Sending Filer selection message"
      ]
        ADR     r1,userdata
        LDR     r0,[r1]
        STR     r0,[r1,#ms_data]
        LDR     r0,[r1,#4]
        STR     r0,[r1,#ms_data+4]
        LDR     r0,[r1,#8]
        STR     r0,[r1,#ms_data+8]
        LDR     r0,[r1,#12]
        STR     r0,[r1,#ms_data+12]     ; Copy bounding box.
      [ debugtask
        DREG    r13,"r13 on entry to GetItemBoxSize"
      ]
        BL      GetItemBoxSize
      [ debugtask
        DREG    r13,"r13 on exit from GetItemBoxSize"
      ]
        STR     r11,[r1,#ms_data+16]    ; Followed by x size of items
        STR     r14,[r1,#ms_data+20]    ; y size of items.
        LDRB    r14,[r4,#d_viewmode]
        STR     r14,[r1,#ms_data+24]    ; View mode for this directory.

; Now work out bounding box in rows and columns

        LDRB    r14,[r4,#d_filesperrow] ; Number of files per row.
        LDR     r11,[r4,#d_nfiles]      ; Number of objects in this directory.
        ADD     r0,r4,#d_headersize
        MOV     r2,#&80000              ; Start column
        MOV     r3,#-1                  ; End column.
        MOV     r4,#&80000              ; Start row
        MOV     r5,#-1                  ; End row
        MOV     r6,#0                   ; Current row
        MOV     r7,#0                   ; Current column
01
        CMP     r11,#0                  ; Reached the end?
        BEQ     %FT10

        LDRB    r8, [r0, #df_state]     ; Is current file selected ?
        TST     r8, #dfs_selected

        ORRNE   r8, r8, #dfs_wasselected
        BICEQ   r8, r8, #dfs_wasselected
        STRB    r8, [r0, #df_state]
        TST     r8, #dfs_selected

        BEQ     %FT02

        CMP     r6,r4                   ; Is current row the top one ?
        MOVLT   r4,r6

        CMP     r6,r5                   ; Is current row the bottom one ?
        MOVGT   r5,r6

        CMP     r7,r2                   ; Is current column the left most?
        MOVLT   r2,r7

        CMP     r7,r3                   ; Is current column the right most ?
        MOVGT   r3,r7
02
        ADD     r7,r7,#1
        CMP     r7,r14
        MOVGE   r7,#0
        ADDGE   r6,r6,#1
        ADD     r0,r0,#df_size
        SUB     r11,r11,#1
        B       %BT01                   ; Go do next file.

10
        STR     r2,[r1,#ms_data+28]
        STR     r4,[r1,#ms_data+32]
        STR     r3,[r1,#ms_data+36]
        STR     r5,[r1,#ms_data+40]

        [ NewMessageFilerSelection
        Push    "r1"
        ; Use Wimp_GetPointerInfo to add the x and y of the pointer to the
        ; FilerSelection message.
        ADD     r1, r1, #64
        SWI     Wimp_GetPointerInfo
        Pull    "r1"
        ]

        MOV     r0,#0
        STR     r0,[r1,#ms_myref]
        STR     r0,[r1,#ms_yourref]

        [ NewMessageFilerSelection
        MOV     r0,#ms_data+(13*4)
        |
        MOV     r0,#ms_data+11*4
        ]

        STR     r0,[r1,#ms_size]
        LDR     r0,=Message_FilerSelection
        STR     r0,[r1,#ms_action]
        MOV     r0,#17
        LDR     r2,windowhandle
        LDR     r3,iconhandle
        SWI     XWimp_SendMessage
      [ debugtask
        DREG    r13,"r13 before pull is "
      ]
        Pull    "r0-r9,r14"
      [ debugtask
;        DREG    PC,"PC is "
;        DLINE   "Pulled r0-r9,r14"
        DREG    r13,"r13 after pull is "
      ]
        CLRV                    ; For this not to work it has to be our menu.
      [ debugtask
        DLINE   "Filer selection message sent"
      ]
 ]

60      CMP     r5, #Nowt
        BEQ     %FT92                   ; [finished]

      [ debugtask
        DLINE   "Found selection"
      ]


 [ clearsel_copymove
        BL      ClearSelectedItem       ; Can do this here; not a CommandWindow
        EXIT    VS
 ]

 [ hastiny
        LDR     r0, windowhandle
        CMP     r0, #iconbar_whandle
        LDREQ   r0, iconhandle
        CMPEQ   r0, #-1
        BEQ     %FT80                   ; [dropped on empty part of iconbar]
 ]

 [ dragtobar
        LDR     r0, windowhandle
        CMP     r0, #iconbar_whandle
        LDREQ   r0, iconhandle
        CMPEQ   r0, #-1
        BEQ     %FT80                   ; [dropped on empty part of iconbar]
 ]

      [ debugtask
        DLINE   "Calculate position"
      ]


      [ version >=140
        Push    "r8,r9"
        LDR     r3,sel_filenumber
        LDR     r4, sel_dir
        LDR     r0,[r4,#d_nfiles]
        SUB     r8,r0,r3
        LDRB    r0,[r4,#d_filesperrow]
        DivRem  r9,r8,r0,r14            ; r9 = row, r8 = column
      ]

      [ debugtask
        DREG    r9,"row "
        DREG    r8,"column "
      ]
        LDR     r0, =Message_DataLoad   ; ep for below
        LDR     r1, sel_dirname
        LDR     r2, sel_leafname
        LDR     r3, sel_filetype
        LDR     r4, windowhandle
        LDR     r5, iconhandle
      [ debugtask
        DREG    r13,"r13 before SendMessage "
      ]
        BL      SendMessage             ; DataLoadAck may remove dir
      [ debugtask
        DREG    r13,"r13 after SendMessage "
      ]
      [ version >= 140
        Pull    "r8,r9"
      ]
        EXIT    VS

      [ debugtask
        DLINE   "Sent DataLoad message"
      ]

79      BL      GetSelection

        B       %BT60


 [ hastiny
80 ; Dropped in icon bar, so send into exile (if it's not a file !)

        LDR     r0, sel_filetype
        CMP     r0, #filetype_directory
        CMPNE   r0, #filetype_application
        BNE     %BT75                   ; [files passed on]

        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        LDR     r2, sel_dirname
        BL      strcpy
        LDR     r2, sel_leafname
        BL      AppendLeafnameToDirname

        BL      MakeTinyDir
        EXIT    VS
        B       %BT79
 ]

 [ dragtobar
80 ; Dropped in icon bar so Data_Open the object
        LDR     r3, sel_filetype

  [ version >= 117
        ; Files,directories,applications - everybody's welcome and will be opened
  |
        CMP     r3, #filetype_application       ; reject anything but applications
        BNE     %BT79
  ]

        LDR     r1, sel_dirname
        LDR     r2, sel_leafname
        ; r3 already has sel_filetype in it
        MOV     r4, #0                          ; broadcast this
        MOV     r5, #0                          ; Icon irrelevant
        BL      SendDataOpenMessage
        B       %BT79
 ]


90
      [ debugtask
        DLINE   "CloseInitiatingDir"
      ]
        BL      CloseInitiatingDir
      [ debugtask
        DLINE   "CloseInitiatingDir returned"
      ]
92
        TEQ     r7, #1
        LDREQ   r0, sel_whandle
        STREQ   r0, windowhandle
      [ debugtask
        DLINE   "About to exit"
      ]
        CLRV
 [ debugtask
        DREG    r13,"Exit R13 "
 ]
        EXIT

newdir_drag  ROUT

        SWI     XDragASprite_Stop

        ADR     r1, mousedata           ; Need pointer position when dropped
        SWI     XWimp_GetPointerInfo    ; r1 -> wimp_pointerinfo.
        LDR     r0,  windowhandle
        LDR     r14, newdirsubmenu
        TEQ     r0,  r14
        EXIT    EQ                      ; dropped on ourself

        BL      FindDir
        EXIT    NE                      ; not a dirviewer

        ADR     r1, userdata
        LDR     r2, [r4, #d_dirnamestore]
        BL      strcpy_excludingspaces  ; copy pathname

        MOV     r3, r1
        LDR     r1, newdirbox_text
        BL      FindLeafname
        MOV     r1, r3
        BL      AppendLeafnameToDirname
        MOV     r3, r1                  ; append leafname

        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        ADR     r2, star_cdir_prefix
        BL      strcpy
        MOV     r2, r3
        BL      strcat                  ; append filename to CDir command

        MOV     r0, r1
        BL      DoOSCLIInBox            ; Do the command

        BL      ClearAllSelections
        BL      NobbleMenuTree


        EXIT

star_cdir_prefix
        DCB     "CDir ", 0              ; Needs space
        ALIGN

 [ version >= 113
copysave_drag   ROUT    ; NOENTRY
 [ DragASprite
        SWI     XDragASprite_Stop
 ]

        LDR     r0, sel_whandle         ; If this has changed, we can do nowt
        TEQ     r0, #Nowt
 [ debug
 BNE %FT00
 DLINE "Selection handle has been zapped in the background. Goodbye"
00
 ]
        BEQ     %FT90

        BL      FindDir
        BLEQ    InitSelection
        BNE     %FT90                   ; Del/Sel disappeared - finish off

        ADR     r1, mousedata           ; Need pointer position when dropped
        SWI     XWimp_GetPointerInfo    ; r1 -> wimp_pointerinfo.

 [ version >= 138
        LDR     r0,  windowhandle
        LDR     r14, csavesubmenu
        TEQ     r0,  r14
        EXIT    EQ
 ]


75
        LDR     r0, windowhandle
        BL      FindDir                 ; r4 -> dirviewer block
        MOVNE   r0, #Nowt
        STRNE   r0, dirtoclose
        BNE     SendSelectionToWindow   ; Selection dropped on a not directory viewer

 [ disallow_recursive_copies
        BL      is_copy_recursive
        BVS     %FT90
 ]


; Dropped into another of our directory viewers - do copy
; by *Copy with appropriate postfix

        ; Start new task
      [ version >= 138                  ; Check if configuration calls for filer_action
        MOV     R0,#&A1
        MOV     R1,#FileSwitchCMOS
        SWI     XOS_Byte
        MOVVS   R2,#0
        TST     R2,#InteractiveCopyCMOSBit
        MOVNE   r0,#0
        MOVEQ   r0, #Filer_Action_Memory_CopyRename
        BLEQ    StartActionWindow
      |
        MOV     r0, #Filer_Action_Memory_CopyRename
        BL      StartActionWindow
      ]
        BVS     %FT10           ; Task didn't get going
        TEQ     r0, #0          ;
        BEQ     %FT10           ; for one reason or another.

        ; Send source dir
        LDR     r1, sel_dirname
        SWI     XFilerAction_SendSelectedDirectory
        BVS     %FT10

        ; Send file(s) (there should only be one if we are here)
        BL      SendSelectedFiles
        BVS     %FT10

        ; Send leaf appended to destination dir
        ADR     r1, userdata
        LDR     r2, [r4, #d_dirnamestore]
        BL      strcpy_excludingspaces
        MOV     r3, r1
 [ version >= 117
        LDR     r1, csavebox_text
 |
        wsaddr  r1, csavebox_text
 ]
        BL      FindLeafname
        MOV     r1, r3
        BL      AppendLeafnameToDirname
        BL      strlen
        ADD     r4, r3, #1
        MOV     r3, r1
        MOV     r1, #Action_CopyLocal
        [ OptionsAreInRAM
        LDRB     r2, fileraction_options
        |
        BL      ExtractCMOSOptions
        ]
        SWI     XFilerAction_SendStartOperation
        B       %FT80

10      ;
        CLRV

        ADRL    r0, copy_commandtitle
        ADRL    r6, copydrag_postfix

        BL      messagetrans_lookup     ; SMC: look up command window title
        SWI     XWimp_CommandWindow
        BVS     %FT90

        MOV     r7, #0                  ; Close command window with prompt

        ADR     r1, userdata
        ADRL    r2, star_copy_prefix    ; 'copy src.leaf dst.leaf opt1 opt2'
        BL      strcpy
        LDR     r2, sel_dirname         ; +srcdirname
        BL      strcat_excludingspaces
        LDR     r2, sel_leafname        ; +leafname
        BL      AppendLeafnameToDirname
        ADRL    r2, aspace
        BL      strcat
        LDR     r2, [r4, #d_dirnamestore] ; +dstdirname
        BL      strcat_excludingspaces
        MOV     r0, r1
 [ version >= 117
        LDR     r1, csavebox_text
 |
        wsaddr  r1, csavebox_text
 ]
        BL      FindLeafname
        MOV     r1, r0
        BL      AppendLeafnameToDirname
        ADRL    r2, star_copy_postfix   ; +static options
        BL      strcat
        MOV     r2, r6                  ; +dynamic options
        BL      strcat
 [ version >= 114
        BL      AppendConfirmVerboseForceAndNewer
 |
        BL      AppendConfirmAndVerbose
 ]

        ADR     r0, userdata
        SWI     XOS_CLI                 ; Doing this in a box
        BVC     %FT30

        BL      LocalReportError        ; Prints the error; gives 'Press SPACE'
        MOV     r7, #-1                 ; Close command window without prompt

30      MOV     r0, r7                  ; 'Press SPACE' if command printed 'owt
        SWI     XWimp_CommandWindow     ; Or close window without prompt if err

80      ;
 [ clearsel_file_copy
        MOV     r2, #Nowt
        BL      ClearAllSelections
        BL      NobbleMenuTree
 |
        ; Only nobble the menu tree if the right button wasn't used.
        LDR     r2, init_buttonstate
        TST     r2, #button_right :OR: button_right_drag
        BLEQ    NobbleMenuTree
 ]
90
        EXIT
 ]

 [ version >= 140
        LTORG
 ]

 [ version >= 114
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;

selectmany_drag ROUT ; NOENTRY
        ; sel_dir unlikely to change, except to Nowt, so only check that
        LDR     r4, sel_dir
        TEQ     r4, #Nowt
        EXIT    EQ

        ; Get the work area origin and store it somewhere handy
        LDR     r0, [r4, #d_handle]
        BL      GetWorkAreaCoords
        EXIT    VS
        MOV     r3, x0
        MOV     r5, y1

        ; Extract the drag rectangle from the event
        LDMIA   r1, {x0, y0, x1, y1}

        ; Translate drag rectangle to relative coordinates
        SUB     x0, x0, r3
        SUB     y0, y0, r5
        SUB     x1, x1, r3
        SUB     y1, y1, r5

        ; Ensure ordering of x0, x1 and y0,y1
        CMP     x0, x1
        MOVGT   r0, x0
        MOVGT   x0, x1
        MOVGT   x1, r0
        CMP     y0, y1

        MOVGT   r0, y0
        MOVGT   y0, y1
        MOVGT   y1, r0

        LDR     r3, [r4, #d_nfiles]
        CMP     r3, #0
        EXIT    EQ

        ADD     r5, r4, #d_headersize
10
        BL      HitsFile
        BEQ     %FT20                   ; rats - it missed!

        ; Hah! found it
        LDRB    r1, [r5, #df_state]
        TST     r1, #dfs_selected
        BNE     %FT20                   ; its already selected
        ORR     r1, r1, #dfs_selected
        STRB    r1, [r5, #df_state]
        BL      UpdateFile
        EXIT    VS

20
        ADD     r5, r5, #df_size
        SUBS    r3, r3, #1
        BNE     %BT10

        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;

adjustmany_drag ROUT ; NOENTRY
        ; sel_dir unlikely to change, except to Nowt, so only check that
        LDR     r4, sel_dir
        TEQ     r4, #Nowt
        EXIT    EQ

        ; Get the work area origin and store it somewhere handy
        LDR     r0, [r4, #d_handle]
        BL      GetWorkAreaCoords
        EXIT    VS
        MOV     r3, x0
        MOV     r5, y1

        ; Extract the drag rectangle from the event
        LDMIA   r1, {x0, y0, x1, y1}

        ; Translate drag rectangle to relative coordinates
        SUB     x0, x0, r3
        SUB     y0, y0, r5
        SUB     x1, x1, r3
        SUB     y1, y1, r5

        ; Ensure ordering of x0, x1 and y0,y1
        CMP     x0, x1
        MOVGT   r0, x0
        MOVGT   x0, x1
        MOVGT   x1, r0
        CMP     y0, y1
        MOVGT   r0, y0
        MOVGT   y0, y1
        MOVGT   y1, r0

        LDR     r3, [r4, #d_nfiles]
        CMP     r3, #0
        EXIT    EQ

        ADD     r5, r4, #d_headersize
10
        BL      HitsFile
        BEQ     %FT20                   ; rats - it missed!

        ; Hah! found it
        LDRB    r1, [r5, #df_state]
        EOR     r1, r1, #dfs_selected   ; Toggle its selectedness
        STRB    r1, [r5, #df_state]
        BL      UpdateFile
        EXIT    VS

20
        ADD     r5, r5, #df_size
        SUBS    r3, r3, #1
        BNE     %BT10

        EXIT
 ]

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r1 -> string to append to

AppendConfirmAndVerbose Entry "r1, r3"

        BL      strlen
        ADD     r1, r1, r3

        [ OptionsAreInRAM
        LDRB     r3, fileraction_options
        |
        BL      ReadCMOSBits
        ]

        [ OptionsAreInRAM
        TST     r3, #Action_OptionConfirm
        |
        TST     r3, #confirm_cmos_bit   ; 0 -> no confirm
        ]

        MOVEQ   r14, #"~"
        STREQB  r14, [r1], #1
        MOV     r14, #"C"
        STRB    r14, [r1], #1

        [ OptionsAreInRAM
        TST     r3, #Action_OptionVerbose
        |
        TST     r3, #verbose_cmos_bit   ; 0 -> no verbose
        ]

        MOVEQ   r14, #"~"
        STREQB  r14, [r1], #1
        MOV     r14, #"V"
        STRB    r14, [r1], #1

        MOV     r14, #0
        STRB    r14, [r1], #1
        EXIT

 [ version >= 114
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r1 -> string to append to

AppendConfirmVerboseAndForce Entry "r1, r3"

        BL      AppendConfirmAndVerbose

        BL      strlen
        ADD     r1, r1, r3

        [ OptionsAreInRAM
        LDRB     r3, fileraction_options
        TST     r3, #Action_OptionForce
        |
        BL      ReadCMOSBits
        TST     r3, #force_cmos_bit
        ]

        MOVEQ   r14, #"~"
        STREQB  r14, [r1], #1
        MOV     r14, #"F"
        STRB    r14, [r1], #1

        MOV     r14, #0
        STRB    r14, [r1], #1
        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Appends LN or ~L~N
; In    r1 -> string to append to

AppendConfirmVerboseForceAndNewer Entry "r1, r3"

        BL      AppendConfirmAndVerbose

        BL      strlen
        ADD     r1, r1, r3

        [ OptionsAreInRAM
        LDRB      r3, fileraction_options
        TST     r3, #Action_OptionNewer
        |
        BL      ReadCMOSBits
        TST     r3, #newer_cmos_bit
        ]

        MOVEQ   r14, #"~"
        STREQB  r14, [r1], #1
        MOV     r14, #"N"
        STRB    r14, [r1], #1

        MOV     r14, #0
        STRB    r14, [r1], #1
        EXIT
 ]

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Close the dirviewer that an action (double-click, drag) was initiated from

CloseInitiatingDir EntryS "r0, r4"

        LDR     r4, dirtoclose
        TEQ     r4, #Nowt
        EXITS   EQ

        MOV     r14, #Nowt
        STR     r14, dirtoclose

        LDR     r0, [r4, #d_handle]
        BL      DeleteDir
        EXITS   VC

        STR     r0, [sp, #Proc_RegOffset]
        EXIT

 [ disallow_recursive_copies
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;  is_copy_recursive
; ===================
;
; In    r4 -> destination dir viewer
;       sel_xxx set for current selection
; Out   r0 scrambled and VC (not recursive)
;       r0->errorblock and VS (recursive)
;

        MakeErrorBlock  Filer_NoRecursion

is_copy_recursive Entry "r1-r7"
        ; Check dest dir starts same as source dir
        LDR     r1, sel_dirname
        BL      strlen_excludingspaces
        LDR     r2, [r4, #d_dirnamestore]
        BL      strncmp
        BNE     %FT99

        ; Check dest dir isn't source dir
        ADD     r2, r2, r3
        LDRB    r0, [r2]
        CMP     r0, #space
        BLE     %FT99

        TEQ     r0, #"."
        ADDEQ   r2, r2, #1
        BEQ     %FT10
        LDRB    r0, [r2, #-1]
        CMP     r0, #":"
        BNE     %FT99

;       Dest = source. or source ends in : and r2 points past the . or : respectively
10      MOV     r6, #"."
        LDR     r7, sel_dir
        LDR     r5, [r7, #d_filenames]
        LDR     r3, [r7, #d_nfiles]
        ADD     r7, r7, #d_headersize

20      ; Have we run out of entries?
        TEQ     r3, #0
        BEQ     %FT99

        ; Get the leaf name
        LDR     r1, [r7, #df_fileptr]
 [ not_16bit_offsets
        ADD     r1, r5, r1
 |
        ADD     r1, r5, r1, LSR #16
 ]

        ; Compare up to the . or terminator
        BL      strcmpTS
        BNE     %FT30

        ; If matched and its selected, then we're recursive
        LDRB    r0, [r7, #df_state]
        TST     r0, #dfs_selected
        BEQ     %FT30

        ; It is recursive
        ADR     r0, ErrorBlock_Filer_NoRecursion
        BL      LookupError
        EXIT

30      ; Move on to the next entry
        ADD     r7, r7, #df_size
        SUB     r3, r3, #1
        B       %BT20

99      ; Is not recursive
        CLRV
        EXIT
 ]


        END
@


4.11
log
@Use bit definitions from headers
All uses of FileSwitchCMOS now use symbolic names from Hdr:CMOS.
Fix up $$ escape warning from objasm.
Same binary, not tagged.
@
text
@d35 1
a35 1
        SWI     DragASprite_Stop
@


4.10
log
@Adjust dragging to drive icons no longer attempts to reference a deleted dir viewer.
In the case of adjust dragging from one dir viewer to another it is safe to call CloseInitiatingDir because the operation is handled entirely internally. In the case of adjust dragging to a drive icon the dir viewer must be kept until after the next wimp poll so that the selection can be retrieved and the copy operation started.
DelViews.s: made the stack frame a bit more reasonably sized
GoFiler.s: removed some unused messages from the message list
MsgsIn.s: removed the corresponding dead switch

Version 2.29. Tagged as 'Filer-2_29'
@
text
@d124 1
a124 1
        TST     R2,#4
d631 1
a631 1
        TST     R2,#4
@


4.9
log
@Fix for 'set type' writeable icon being out of step with the disc.
Adjust clicking would recreate the menu immediately after the operation but before the next wimp poll when the directory gets recached, so the first entry in the cache is manually fixed up so the recreated menu is right (the files all get refreshed later anyway).
Collapsed switch 'Fix003', after 21 years of testing it's safe to assume it's good.
Reinstated ExtractCMOSOptions conditional on not OptionsAreInRAM so that combination still assembles.
Optimise MUL/ADD into MLA where possible, and set 'S' flag on ALU operations when followed by TEQ#0.
Tested with & without filer action running, fixes ticket 254.

Version 2.26. Tagged as 'Filer-2_26'
@
text
@d151 1
a151 1
        LDRB     r2, fileraction_options
d398 1
a398 2
        BEQ     %FT90                   ; [finished]
        ;BEQ    %FT92
@


4.8
log
@  Bugfixes related to misuse of unaligned loads
Detail:
  s.Commands: Filer_Truncation code to parse OS_ReadArgs output block was
    written on the assumption that LDR allows unaligned accesses - this is
    only true as of ARMv6! We got away with it as long as all the truncation
    widths were <= 65535 OS units - which in practice is easily as wide as
    any screen anyone might use. Nevertheless, this is now fixed to use the
    LDW macro.
  s.DragEnd - d_filesperrow is a 1-byte variable, yet it was loaded using
    LDR. This is clearly wrong and may in part be responsible for offsets
    48-63 of Message_FilerSelection being nonsense (though they are still
    incorrect after this fix).
  s.Redraw - loaded colour values to pass to Wimp_SetColour from 1-byte
    variables using LDR, and hence was setting undefined bits. Harmless with
    current Wimps, but probably not a good idea.
Admin:
  Builds but untested.

Version 2.18. Tagged as 'Filer-2_18'
@
text
@a217 1
  [ Fix003
a218 1
  ]
a731 1
  [ Fix003
a732 1
  ]
@


4.7
log
@Fixed abort when dragging a file to another directory display - merging
fault in No16bitOffsets merge.

Retagged as 'Filer-2_08'

Version 2.08. Not tagged
@
text
@d309 1
a309 1
        LDR     r14,[r4,#d_filesperrow] ; Number of files per row.
d440 1
a440 1
        LDR     r0,[r4,#d_filesperrow]
@


4.6
log
@  Misc bugfixes.
Detail:
  * Mered in RISCOS Ltd's fix for directory displays with more than 65536
    bytes of leafnames.
  * Tries to use Wimp_TextOp 4 to do ellipsis truncation. As a result, it
    can now cope properly with:
    + multibyte UTF-8 characters in leafnames (previously this caused
      problems even if not truncated)
    + WimpSymbol character substitution in leafnames
    + alphabets without an ellipsis character
    + fonts without an ellipsis character
  * Sprite icons in 'Copy as' and 'New directory' dialogue boxes are no
    longer filled.
Admin:
  Tested on Tungsten.

Version 2.08. Tagged as 'Filer-2_08'
@
text
@d1037 1
a1037 1
        LDR     r1, [r7, #df_type]
@


4.5
log
@Picked up bug fix from ROL,in 2.04 you could select a file in one viewer
and then adjust select a group in another viewer without the first
file becoming unselected.
Added test so you're less likely to lose the "rename" writeable icon
when someone's updating filer windows.Now,only if the window being
reopened also has the writeable in it will you lose it.
Adjust dragging dirs to the icon bar will now close the parent (was
only files and apps before).
Create dir and Copy as templates tweaked for 3d borders in UK only as
the German ones are very out of date anyway.

Version 2.05. Tagged as 'Filer-2_05'
@
text
@d1038 3
d1042 1
@


4.4
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 2.01. Tagged as 'Filer-2_01'
@
text
@d496 1
a496 1
80 ; Dropped in icon bar so Data_Open all but directories
d500 1
a500 5
        ; This is for openning directories - we must have a window to open under.
        CMP     r3, #filetype_directory
        MOVEQ   r0, #Nowt
        STREQ   r0, dirtoclose
        MOVEQ   r7, #1                          ; We've dragged a directory
@


4.3
log
@Made 32-bit compatible. Quite a complex job, and only limited testing so far.

Version 1.97. Tagged as 'Filer-1_97'
@
text
@d33 1
a33 1
event_user_dragbox ENTRY
d881 1
a881 1
AppendConfirmAndVerbose ENTRY "r1, r3"
d922 1
a922 1
AppendConfirmVerboseAndForce ENTRY "r1, r3"
d950 1
a950 1
AppendConfirmVerboseForceAndNewer ENTRY "r1, r3"
d1008 1
a1008 1
is_copy_recursive ENTRY "r1-r7"
@


4.2
log
@Merged Ursula branch.
Moved to srccommit.

Version 1.96. Tagged as 'Filer-1_96'
@
text
@d45 1
a45 1
        
d51 2
a52 2
 ]        
        
d273 1
a273 1
        
d376 1
a376 1
        
d554 1
a554 1
                
d569 1
a569 1
        BL      strcpy                  
d572 1
a572 1
        
d579 1
a579 1
        
d789 1
a789 1
        
d896 1
a896 1
        ]        
d908 1
a908 1
        
d936 1
a936 1
        
d964 1
a964 1
        
d978 1
a978 1
CloseInitiatingDir ENTRY "r0, r4"
d991 1
a991 1
        STR     r0, [sp]
@


4.1
log
@Initial revision
@
text
@d40 1
d45 8
d57 2
d150 3
d154 1
d257 1
d273 2
d324 6
d358 9
d370 4
d375 2
d401 1
d483 2
a484 1
        ADR     r1, dirnamebuffer
d528 1
d541 45
d676 3
d680 1
d789 1
d886 3
d890 1
d892 3
d896 2
d903 3
d907 2
d929 4
a933 1

d935 2
d957 4
a961 1

d963 2
@


4.1.4.1
log
@Long filename support and SaveAs style new directory creation
@
text
@a47 2
        CMP     r14, #drag_newdirsave
        BEQ     newdir_drag
a497 45


newdir_drag  ROUT

        SWI     XDragASprite_Stop

        ADR     r1, mousedata           ; Need pointer position when dropped
        SWI     XWimp_GetPointerInfo    ; r1 -> wimp_pointerinfo.
        LDR     r0,  windowhandle
        LDR     r14, newdirsubmenu
        TEQ     r0,  r14
        EXIT    EQ                      ; dropped on ourself

        BL      FindDir
        EXIT    NE                      ; not a dirviewer
                
        ADR     r1, userdata
        LDR     r2, [r4, #d_dirnamestore]
        BL      strcpy_excludingspaces  ; copy pathname

        MOV     r3, r1
        LDR     r1, newdirbox_text
        BL      FindLeafname
        MOV     r1, r3
        BL      AppendLeafnameToDirname
        MOV     r3, r1                  ; append leafname

        ADR     r1, dirnamebuffer
        ADR     r2, star_cdir_prefix
        BL      strcpy                  
        MOV     r2, r3
        BL      strcat                  ; append filename to CDir command
        
        MOV     r0, r1
        BL      DoOSCLIInBox            ; Do the command

        BL      ClearAllSelections
        BL      NobbleMenuTree

        
        EXIT

star_cdir_prefix
        DCB     "CDir ", 0              ; Needs space
        ALIGN
@


4.1.4.2
log
@Added code to enable files to be copied to icon bar device icons
@
text
@a39 1
        STRB    r14, last_drag_type
a258 2
        
        STR     r4, was_seldir
a307 6

        ORRNE   r8, r8, #dfs_wasselected
        BICEQ   r8, r8, #dfs_wasselected
        STRB    r8, [r0, #df_state]
        TST     r8, #dfs_selected

d363 1
a363 1
        BEQ     %FT92                   ; [finished]
a488 1
92
d501 1
a744 1
        
@


4.1.4.3
log
@Add new options to Options menu, plus fixed bugs
@
text
@a141 3
        [ OptionsAreInRAM
        LDR     r2, fileraction_options
        |
a142 1
        ]
a644 3
        [ OptionsAreInRAM
        LDR     r2, fileraction_options
        |
a645 1
        ]
a850 3
        [ OptionsAreInRAM
        LDR     r3, fileraction_options
        |
a851 1
        ]
a852 3
        [ OptionsAreInRAM
        TST     r3, #Action_OptionConfirm
        |
a853 2
        ]        

a858 3
        [ OptionsAreInRAM
        TST     r3, #Action_OptionVerbose
        |
a859 2
        ]
        
a879 4
        [ OptionsAreInRAM
        LDR     r3, fileraction_options
        TST     r3, #Action_OptionForce
        |
d881 1
a882 2
        ]
        
a902 4
        [ OptionsAreInRAM
        LDR      r3, fileraction_options
        TST     r3, #Action_OptionNewer
        |
d904 1
a905 2
        ]
        
@


4.1.4.4
log
@Fixed bug with system font in Filer windows, plus redraw of highlighted icons.
@
text
@d458 1
a458 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
d540 1
a540 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
@


4.1.4.5
log
@A *Filer_Layout command now replaces CMOS setting of the display options.
Fixed bug which meant dirviews weren't sorted if they had >256 entries.
Increased dirnamebuffer to 2K to cope with long pathname renames.
@
text
@d143 1
a143 1
        LDRB     r2, fileraction_options
d652 1
a652 1
        LDRB     r2, fileraction_options
d862 1
a862 1
        LDRB     r3, fileraction_options
d905 1
a905 1
        LDRB     r3, fileraction_options
d933 1
a933 1
        LDRB      r3, fileraction_options
@


4.1.4.6
log
@Autoscrolling windows added.
Now reads icon bar tool widths so window title isn't obscured by iconise tool.
@
text
@a44 8
        
 [ autoscroll
        CMP     r14, #drag_selectmany
        CMPNE   r14, #drag_adjustmany
        MOVEQ   r0, #0
        SWIEQ   XWimp_AutoScroll
 ]        
        
@


4.1.4.7
log
@New viewers are now opened at default width of four colums, where possible.
Addition to Message_FilerOpenDir to allow the forced update of all dir viewers
bu the FilrSetup application.
Bug fix: Adjust clicks on New directory OK icon now keep the menu structure up.
Bug fix: Adjust drags from Filer windows close the initiating dir viewer.
@
text
@d384 1
a384 2
        BEQ     %FT90                   ; [finished]
        ;BEQ    %FT92
@


4.1.4.8
log
@Message_FilerSelection enhanced to provide x and y co-ordinates of pointer.
Fixed redraw bug associated with very tall dirviewers.
@
text
@a256 1

a356 9
        [ NewMessageFilerSelection
        Push    "r1"
        ; Use Wimp_GetPointerInfo to add the x and y of the pointer to the
        ; FilerSelection message.
        ADD     r1, r1, #64
        SWI     Wimp_GetPointerInfo
        Pull    "r1"
        ]

a359 4

        [ NewMessageFilerSelection
        MOV     r0,#ms_data+(13*4)
        |
a360 2
        ]
        
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
