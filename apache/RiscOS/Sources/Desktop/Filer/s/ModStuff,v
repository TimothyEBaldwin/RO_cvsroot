head	4.7;
access;
symbols
	Filer-2_43:4.7
	Filer-2_42:4.7
	Filer-2_41:4.7
	Filer-2_40:4.7
	Filer-2_39:4.7
	Filer-2_38:4.6
	Filer-2_37:4.6
	Filer-2_36:4.6
	Filer-2_35:4.6
	Filer-2_34:4.6
	Filer-2_33:4.6
	Filer-2_32:4.6
	Filer-2_31:4.6
	Filer-2_30:4.6
	Filer-2_29:4.5
	Filer-2_28:4.5
	Filer-2_27:4.5
	Filer-2_26:4.5
	Filer-2_25:4.5
	Filer-2_24:4.5
	Filer-2_23:4.5
	Filer-2_22:4.5
	Filer-2_21:4.5
	Filer-2_20:4.4
	Filer-2_19:4.4
	Filer-2_18:4.4
	Filer-2_17:4.4
	Filer-2_16:4.4
	Filer-2_15:4.4
	Filer-2_14:4.4
	Filer-2_13:4.4
	Filer-2_12:4.4
	Filer-2_11:4.4
	Filer-2_10:4.4
	Filer-2_09:4.4
	RO_5_07:4.4
	Filer-2_08:4.4
	Filer-2_07:4.4
	Filer-2_06:4.4
	Filer-2_05:4.4
	Filer-2_04:4.4
	Filer-2_03:4.4
	Filer-2_02:4.4
	Filer-2_01:4.4
	Filer-2_00:4.3
	Filer-1_99:4.3
	Filer-1_98:4.3
	Filer-1_97:4.3
	Ursula_merge:4.1.4.5
	Filer-1_96:4.2
	Filer-1_95:4.1.4.5
	nturton_Filer-1_85:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.5
	Ursula_RiscPC:4.1.4.5.0.2
	rthornb_UrsulaBuild-19Aug1998:4.1.4.5
	UrsulaBuild_FinalSoftload:4.1.4.5
	rthornb_UrsulaBuild-12Aug1998:4.1.4.5
	aglover_UrsulaBuild-05Aug1998:4.1.4.5
	rthornb_UrsulaBuild-29Jul1998:4.1.4.5
	rthornb_UrsulaBuild-22Jul1998:4.1.4.5
	rleggett_Filer-1_94:4.1.4.5
	rthornb_UrsulaBuild-15Jul1998:4.1.4.5
	rthornb_UrsulaBuild-07Jul1998:4.1.4.5
	rthornb_UrsulaBuild-17Jun1998:4.1.4.5
	rthornb_UrsulaBuild-03Jun1998:4.1.4.5
	rthornb_UrsulaBuild-27May1998:4.1.4.5
	rleggett_Filer-1_93:4.1.4.5
	rthornb_UrsulaBuild-21May1998:4.1.4.5
	rthornb_UrsulaBuild_01May1998:4.1.4.5
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.7
date	2014.11.17.23.08.56;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	zHjekpptJV1iOAYx;

4.6
date	2012.05.07.21.33.46;	author bavison;	state Exp;
branches;
next	4.5;
commitid	ucGU0rswOADBZP3w;

4.5
date	2010.01.07.21.43.30;	author rool;	state Exp;
branches;
next	4.4;

4.4
date	2001.03.16.17.09.23;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	2000.04.20.16.21.13;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.11.56.34;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.25;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.25;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.27.26;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.08.27.09.09.02;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	97.09.24.13.26.38;	author rleggett;	state Exp;
branches;
next	4.1.4.3;

4.1.4.3
date	98.01.07.10.27.54;	author rleggett;	state Exp;
branches;
next	4.1.4.4;

4.1.4.4
date	98.03.27.09.26.13;	author rleggett;	state Exp;
branches;
next	4.1.4.5;

4.1.4.5
date	98.03.27.13.24.16;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.16.46;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.16.07;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Use bit definitions from headers
All uses of FileSwitchCMOS now use symbolic names from Hdr:CMOS.
Fix up $$ escape warning from objasm.
Same binary, not tagged.
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Table of service calls we want

        ASSERT  Service_StartWimp > Service_Reset
        ASSERT  Service_StartedWimp > Service_StartWimp
        ASSERT  Service_MessageFileClosed > Service_StartedWimp
        ASSERT  Service_ResourceFSStarting > Service_MessageFileClosed
        ASSERT  Service_TerritoryStarted > Service_ResourceFSStarting
        ASSERT  Service_DiscDismounted > Service_TerritoryStarted

ServiceTable

        DCD     0
        DCD     ServiceUrsula - Module_BaseAddr
        DCD     Service_Reset
        DCD     Service_StartWimp
        DCD     Service_StartedWimp
        DCD     Service_MessageFileClosed
      [ includeresources
        DCD     Service_ResourceFSStarting
      ]
        DCD     Service_TerritoryStarted
        DCD     Service_DiscDismounted
        DCD     0
        DCD     ServiceTable - Module_BaseAddr



; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Filer_Service ROUT

        MOV     r0, r0                  ; Indicates there is a service call table

        ; Fast rejection
        TEQ     r1, #Service_Reset
        TEQNE   r1, #Service_StartWimp
        TEQNE   r1, #Service_StartedWimp
      [ includeresources
        TEQNE   r1, #Service_ResourceFSStarting
      ]
        TEQNE   r1, #Service_MessageFileClosed
        TEQNE   r1, #Service_TerritoryStarted
        TEQNE   r1, #Service_DiscDismounted
        MOVNE   pc, lr

ServiceUrsula

        TEQ     r1, #Service_StartWimp
        BEQ     Filer_Service_StartWimp

        TEQ     r1, #Service_Reset
        BEQ     Filer_Service_Reset

        TEQ     r1, #Service_MessageFileClosed
        BEQ     Filer_Service_MessageFileClosed

      [ includeresources

        TEQ     r1, #Service_ResourceFSStarting
        BEQ     Filer_Service_ResourceFSStarting
      ]

        TEQ     r1, #Service_DiscDismounted
        BEQ     Filer_Service_DiscDismounted

        TEQ     r1, #Service_TerritoryStarted
        BEQ     Filer_Service_TerritoryStarted

        TEQ     r1, #Service_StartedWimp
        MOVNE   pc, lr


Filer_Service_StartedWimp Entry
        LDR     r14, [r12]
        LDR     r14, mytaskhandle
        CMP     r14, #0
        MOVLT   r14, #0
        STRLT   r14, mytaskhandle       ; Store 0 if was -1 (failed to expand for desktop work)
        EXIT                            ; Keep workspace around for poking in


Filer_Service_Reset Entry "r0-r6"
        LDR     r12, [r12]
        LDR     r14, mytaskhandle
        CMP     r14, #0
        BLGT    ShrinkWorkspace
        BLGT    JunkApplicationLists
        MOV     r14, #0
        STR     r14, mytaskhandle
        EXIT

Filer_Service_StartWimp Entry
        LDR     r12, [r12]
        LDR     r14, mytaskhandle
        TEQ     r14, #0
        MOVEQ   r14, #-1
        STREQ   r14, mytaskhandle
        ADREQL  r0, Filer_StarCommand
        MOVEQ   r1, #0
        EXIT

        LTORG

Filer_Service_MessageFileClosed Entry
        LDR     r12, [r12]
        LDR     r14, mytaskhandle
        TEQ     r14, #0
        EXIT    MI
        EXIT    EQ
        LDR     r14, poll_word
        ORR     r14, r14, #poll_word_messagefile_closed
        STR     r14, poll_word
        EXIT

      [ includeresources
Filer_Service_ResourceFSStarting Entry "r0"
        ADRL    r0, ResourceFSFiles
        MOV     lr, pc
        MOV     pc, r2
        EXIT
      ]

Filer_Service_DiscDismounted Entry "r0-r2"

        LDR     r12, [r12]
        LDR     r14, mytaskhandle
        CMP     r14, #0
        EXIT    LS

        MOV     r1, r2
        MOV     r2, #0
        BL      Queue_CloseDir_Request_To_Self

        EXIT

Filer_Service_TerritoryStarted Entry "r0"

        LDR     r12, [r12]
        MOV     r0, #-1
        SWI     XTerritory_LowerCaseTable
        STRVC   r0, lower_case_table

        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; Initialise the Filer to have a bit of workspace
;

Filer_Init Entry

        ; If the private word is non_zero something is wrong
        LDR     r0, [r12]
        CMP     r0, #0
        EXIT    NE              ; Somebody is messing us about!

        ; Get the block
        MOV     r0, #ModHandReason_Claim
        MOV     r3, #Filer_SmallWorkspaceSize
        SWI     XOS_Module
        EXIT    VS              ; Bother, even the little bit we want didn't allocate!

        ; Hold the private word's address in r1 and set wp for variables
        MOV     r1, r12
        MOV     wp, r2

        ; Ensure block is well formed before attaching it to private word
        STR     r1, privatewordaddr

        MOV     r0, #0
        STR     r0, mytaskhandle
      [ version >= 132
        STR     r0,ctrl_pressed
        STRB    r0,initshiftstate
      ]
        STR     r0, msgtrans_blockptr

        ; Set default FilerAction options
        ORR     r0, r0, #Action_OptionVerbose
        ORR     r0, r0, #Action_OptionNewer
        STRB    r0, fileraction_options

        MOV     r0, #0
        STRB    r0, layout_options
        STR     r0, dclickhold_delay

        ; Zero out the various lists we have
        MOV     r0, #Nowt
        STR     r0, ViewerList
        STR     r0, DirRequestList
        STR     r0, ApplicList
        STR     r0, ApplicListEndPointer
        STR     r0, ApplicDirList

        MOV     R0,#0
        STR     r0, wimpextend
        STR     r0, wimpr12
        STR     r0, wimplistat
        STR     r0, wimpsprname
        STR     r0, filetype_cache
        STR     r0, redraw_all

        ADR     r0, DirRequestList
        STR     r0, DirRequestEndLink


        ; Attach block to private word
        STR     wp, [r1]

        ; Get lower case table from Territory Manager but allow to fail as territory
        ; might not be there until Service_TerritoryStarted.
        MOV     r0, #-1
        SWI     XTerritory_LowerCaseTable
        STRVC   r0, lower_case_table

        ; initialise Filer$Path if not already done
        ADR     R0, FilerPath
        MOV     R2, #-1
        MOV     R3, #0
        MOV     R4, #VarType_Expanded
        SWI     XOS_ReadVarVal          ; returns R2=0 if doesn't exist
        CMP     R2, #0                  ; clears V as well!

        ADREQ   R0, FilerPath
        ADREQ   R1, PathDefault
        MOVEQ   R2, #?PathDefault
        MOVEQ   R3, #0
        MOVEQ   R4, #VarType_String
        SWIEQ   XOS_SetVarVal
        CLRV

      [ includeresources
        ; Register our resources
        ADRL    r0, ResourceFSFiles
        SWI     XResourceFS_RegisterFiles
        CLRV
      ]


        EXIT

FilerPath       DCB     "Filer$$Path", 0
PathDefault     DCB     "Resources:$.Resources.Filer.", 0
        ALIGN

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r0-r6 trashable

; Don't distinguish between soft/hard kills, as WindowManager can't cope either

Filer_Die Entry

        LDR     wp, [r12]
        BL      FreeWorkspace
        CLRV                            ; Mustn't refuse to die
        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Get out of here, deallocating all resources used by Filer

; In    wp valid or 0, sp valid

; Out   r12 -> private word
;       VC: r0-r5 corrupt, sp_usr no longer valid
;       VS: r0 -> error

FreeWorkspace ROUT

        CMP     wp, #0
        MOVLE   pc, lr

        ; Hold lr in r5 as we have no reliable stack and may be in svc mode
        MOV     r5, lr

      [ includeresources
        ; Release our resourcefsfiles.
        ADRL    r0, ResourceFSFiles
        SWI     XResourceFS_DeregisterFiles
        CLRV
      ]

        BL      ShrinkWorkspace

        BL      JunkApplicationLists

        ; Unlink the space from the private word
        MOV     r0, #0
        MOV     r2, wp
        LDR     r12, privatewordaddr
        STR     r0, [r12]

        ; Free the block
        MOV     r0, #ModHandReason_Free
        SWI     XOS_Module

        ; return
        MOV     pc, r5

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; ShrinkWorkspace
;
; This shrinks the workspace to non-desktop size and closes down the wimp session
; sp_usr no longer be valid
;

ShrinkWorkspace ROUT ; NOENTRY as stack in unknown state

        CMP     wp, #0                  ; Are we active ? VClear
        MOVEQ   pc, lr                  ; [no, so nothing to free]

        ; Check task handle, if didn't get started then nothing to discard.
        LDR     r0, mytaskhandle
        CMP     r0, #0
        MOVLE   pc, lr                  ; Condition => VClear

        MOV     r6, lr                  ; Not lr as may be in svc mode or may lose our stack space

        BL      DiscardTempString

        BL      FreeLists

        BL      discard_savedisplaybuffer

        ADR     r0, messagetrans_struct
        SWI     MessageTrans_CloseFile
        MOV     r0, #0
        STR     r0, msgtrans_blockptr

        ; Get off the UpCall vector
        MOV     r0, #UpCallV
        ADRL    r1, UpCall_Handler
        MOV     r2, wp
        SWI     XOS_Release

        ; Tell everybody that the Filer is dying
        LDR     r0, mytaskhandle        ; Say goodbye iff task started fully
        MOV     r1, #Service_FilerDying
        SWI     XOS_ServiceCall

        ; Die
        LDR     r0, mytaskhandle        ; CloseDown iff task started fully
        LDR     r1, taskidentifier
        SWI     XWimp_CloseDown

        ; Shrink the workspace to small size
        MOV     r0, #ModHandReason_ExtendBlock
        MOV     r2, wp
        LDR     r3, large_workspace_size        ; OSS Get actual size.
        RSB     r3, r3, #Filer_SmallWorkspaceSize       ; Subract from small.
        SWI     XOS_Module
        MOVVC   wp, r2                  ; If error regs may be corrupted so only load if OK

        ; Point private word at small workspace
        LDR     r2, privatewordaddr
        STR     wp, [r2]

        ; Zero the task handle
        MOV     r2, #0
        STR     r2, mytaskhandle

        MOV     pc, r6                  ; NB. Can't use lr as we may be in svc
                                        ; mode, and no stack as we may be in
                                        ; usr mode after deallocating it!

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; GrowWorkspace
;
; This grows the workspace if it is valid to do so now. It is expected
; that this is in usr mode (and hence SWIs do not corrupt LR).
;
; Out - mucho registers corrupted.
;

GrowWorkspace   ROUT ; NOENTRY due to stack being obtained just at the moment

        ; Only grow if in a start wimp situation
        LDR     r0, mytaskhandle
        CMP     r0, #-1
        EXIT    NE

        LDR     r3, =Filer_WorkspaceSize - Filer_SmallWorkspaceSize
        MOV     r2, wp
        MOV     r0, #ModHandReason_ExtendBlock ; Extend workspace to desktop proportions
        SWI     XOS_Module
        MOVVS   pc, lr

        MOV     r11, lr                 ; We now call other routines
        MOV     wp, r2                  ; intermediate wp
        LDR     r1, privatewordaddr
        STR     wp, [r1]

        wsaddr  sp, stacktop            ; need stack to find template size
        LDR     r0, =Filer_WorkspaceSize
        STR     r0, large_workspace_size

; OSS Find out size needed for template files. Accumulate total size
; needed in r10, and store this accumulating offset in each pointer location
; as we go to make calculating the addresses later trivial. We use a macro
; to do the accumulating, to ensure that all buffers start at a word
; address. Note that the indirect area for a window is always before the
; main area, so we can use the pointer for the main area as the limit for
; the indirect area.

    MACRO
    add_size_r10 $reg
    ADD     r10, r10, $reg
    ADD     r10, r10, #3
    BIC     r10, r10, #3
    MEND

        MOV     r10, #0
        addr    r1, templatefilename
        SWIVC   XWimp_OpenTemplate
        BVS     ErrorAbort

 [ fonthack
        MOV     r0, #0
        wsaddr  r1, fontrefarray
        MOV     r14, #256
00      STR     r0, [r1], #4
        SUBS    r14, r14, #4
        BNE     %BT00
 ]

; Find memory size for directory viewer windows. This one must be first.
; The indirected icons are ignored as they are thrown away.

        MOV     r1, #-1
        addr    r5, wn_directory
        BL      load_template
        BVS     ErrorCloseTemplate
        add_size_r10 r1

; Memory for access windows.

 [ :LNOT: actionwind

        MOV     r1, #-1
        addr    r5, wn_daccess
        BL      load_template
        BVS     ErrorCloseTemplate
        STR     r10, ind_daccesswindow_ptr
        add_size_r10 r2
        STR     r10, daccesswindow_ptr
        add_size_r10 r1
 ]

        ; Memory for file access window
        MOV     r1, #-1
        addr    r5, wn_faccess
        BL      load_template
        BVS     ErrorCloseTemplate
        STR     r10, ind_faccesswindow_ptr
        add_size_r10 r2
        STR     r10, faccesswindow_ptr
        add_size_r10 r1

        ; Memory for copy save window
        MOV     r1, #-1
        addr    r5, wn_csavebox
        BL      load_template
        BVS     ErrorCloseTemplate
        STR     r10, ind_csavebox_ptr
        add_size_r10 r2
        STR     r10, csavebox_ptr
        add_size_r10 r1

        ; Memory for new directory window
        MOV     r1, #-1
        addr    r5, wn_newdirbox
        BL      load_template
        BVS     ErrorCloseTemplate
        STR     r10, ind_newdirbox_ptr
        add_size_r10 r2
        STR     r10, newdirbox_ptr
        add_size_r10 r1

        ; Memory for info box window
        MOV     r1, #-1
        addr    r5, wn_infobox
        BL      load_template
        BVS     ErrorCloseTemplate
        STR     r10, ind_infobox_ptr
        add_size_r10 r2
        STR     r10, infobox_ptr
        add_size_r10 r1

        SWI     XWimp_CloseTemplate
        BVS     ErrorCloseTemplate

; OSS Now grow workspace for template memory.

        MOV     r3, r10
        MOV     r2, wp
        MOV     r0, #ModHandReason_ExtendBlock
        SWI     XOS_Module
        BVS     ErrorAbort

        MOV     wp, r2                  ; Final wp.
        LDR     r1, privatewordaddr
        STR     wp, [r1]

        wsaddr  sp, stacktop            ; New stack.
        LDR     r1, large_workspace_size
        ADD     r0, r10, r1
        STR     r0, large_workspace_size ; New size

; OSS Now turn offsets into pointers.

        ADD     r1, wp, r1              ; Pointer to directory viewer

    MACRO
    make_address $loc
    LDR     r0, $loc
    ADD     r0, r0, r1
    STR     r0, $loc
    MEND

 [ :LNOT: actionwind

        make_address ind_daccesswindow_ptr
        make_address daccesswindow_ptr
 ]

        make_address ind_faccesswindow_ptr
        make_address faccesswindow_ptr

        make_address ind_csavebox_ptr
        make_address csavebox_ptr

        make_address ind_newdirbox_ptr
        make_address newdirbox_ptr

        make_address ind_infobox_ptr
        make_address infobox_ptr

; OSS Normal service is now resumed.

        MOV     r0, #0
        STR     r0, displaysave_buffer_rover
        STR     r0, displaysave_buffer_bytes_in_it

        MOV     r0, #Nowt               ; Not yet claimed any extra ws
        STR     r0, ViewerList
        STR     r0, DirRequestList
        STR     r0, TempString
        STR     r0, displaysave_bufferp

        MOV     R0,#0
        STR     r0, wimpextend
        STR     r0, wimpr12
        STR     r0, wimplistat
        STR     r0, wimpsprname
        STR     r0, filetype_cache
        STR     r0, redraw_all

        ADR     r0, DirRequestList
        STR     r0, DirRequestEndLink

        ADR     r0, messagetrans_struct
        ADRL    r1, messages_file
        MOV     r2, #0
        SWI     MessageTrans_OpenFile
        STRVC   r0, msgtrans_blockptr

        MOV     pc, r11


taskidentifier
        DCB     "TASK"                  ; Picked up as a word

        END
@


4.6
log
@  Keyboard shortcuts in the Filer
Detail:
  Tab - focus to next window
  Shift-Tab - focus to previous window
  Backspace - open parent
  ^W - Set working directory
  ^F - Change display format
  ^S - Change sort order
  ^F2 - Close current window and move focus
  ^A - Select all
  ^Z/Esc - clear selection
  Del - delete selected object(s)  (WARNING - No confirmation)
  Also installed error handler to help prevent it becoming the innocent victim
  of failures in callback handlers etc.
Admin:
  Changes received from Adrian Lees

Version 2.30. Tagged as 'Filer-2_30'
@
text
@d257 1
a257 1
FilerPath       DCB     "Filer$Path", 0
@


4.5
log
@  Make doubleclick-and-hold configurable
Detail:
  Added the command Filer_DClickHold to the Filer.
  It allows you to specify how long the second click of a doubleclick must be
  held down for before it is seen as a doubleclick-and-hold.
  The delay is specified in centiseconds, setting the delay to zero turns
  doubleclick-and-hold off.
Admin:
  Tested on Iyonix RO5.14
  Submitted by Fred Graute, mid-December 2009

Version 2.21. Tagged as 'Filer-2_21'
@
text
@d347 1
a347 1
        ADRL    r1, UpCallHandler
@


4.4
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 2.01. Tagged as 'Filer-2_01'
@
text
@d200 1
@


4.3
log
@Made 32-bit compatible. Quite a complex job, and only limited testing so far.

Version 1.97. Tagged as 'Filer-1_97'
@
text
@a62 4
        [ {FALSE}
        DevMessage     "                Development Filer Module (",$Module_MajorVersion,")          - NOT FOR SALE"
        ]

d88 1
a88 1
Filer_Service_StartedWimp ENTRY
d97 1
a97 1
Filer_Service_Reset ENTRY "r0-r6"
d107 1
a107 1
Filer_Service_StartWimp ENTRY
d119 1
a119 1
Filer_Service_MessageFileClosed ENTRY
d131 1
a131 1
Filer_Service_ResourceFSStarting ENTRY "r0"
d138 1
a138 1
Filer_Service_DiscDismounted ENTRY "r0-r2"
d151 1
a151 1
Filer_Service_TerritoryStarted ENTRY "r0"
d165 1
a165 1
Filer_Init ENTRY
d265 1
a265 1
Filer_Die ENTRY
@


4.2
log
@Merged Ursula branch.
Moved to srccommit.

Version 1.96. Tagged as 'Filer-1_96'
@
text
@d59 1
a59 1
        MOVNES  pc, lr
d62 1
a62 1
        
d64 1
a64 1
        DevMessage     "                Development Filer Module (",$Module_MajorVersion,")          - NOT FOR SALE" 
d75 1
a75 1
                              
d109 1
a109 1
        EXITS
d133 1
a133 1
                  
d139 1
a139 1
        EXIT             
d147 1
a147 1
        EXITS   LS
d153 1
a153 1
        EXITS
d162 1
a162 1
        EXITS
d204 1
a204 1
                     
d254 1
a254 1
        CLRV               
d273 2
a274 1
        EXITS                           ; Mustn't refuse to die
d292 1
a292 1
                      
d297 1
a297 1
        CLRV            
d573 1
a573 1
        STR     r0, wimpsprname 
@


4.1
log
@Initial revision
@
text
@d15 28
d45 3
d49 11
a59 1
Filer_Service ROUT
d61 2
d64 1
a64 1
        DevMessage     "                Development Filer Module (",Version,")          - NOT FOR SALE" 
d197 8
d487 10
d549 3
@


4.1.4.1
log
@Long filename support and SaveAs style new directory creation
@
text
@a435 10
        ; Memory for new directory window
        MOV     r1, #-1
        addr    r5, wn_newdirbox
        BL      load_template
        BVS     ErrorCloseTemplate
        STR     r10, ind_newdirbox_ptr
        add_size_r10 r2
        STR     r10, newdirbox_ptr
        add_size_r10 r1

a487 3

        make_address ind_newdirbox_ptr
        make_address newdirbox_ptr
@


4.1.4.2
log
@Add new options to Options menu, plus fixed bugs
@
text
@a153 5
        ; Set default FilerAction options
        ORR     r0, r0, #Action_OptionVerbose
        ORR     r0, r0, #Action_OptionNewer
        STR     r0, fileraction_options
                     
@


4.1.4.3
log
@A *Filer_Layout command now replaces CMOS setting of the display options.
Fixed bug which meant dirviews weren't sorted if they had >256 entries.
Increased dirnamebuffer to 2K to cope with long pathname renames.
@
text
@d157 1
a157 4
        STRB    r0, fileraction_options

        MOV     r0, #0
        STRB    r0, layout_options
@


4.1.4.4
log
@Added service call table, used by Ursula kernel.
@
text
@d15 1
a15 26
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Table of service calls we want

        ASSERT  Service_StartWimp > Service_Reset
        ASSERT  Service_StartedWimp > Service_StartWimp
        ASSERT  Service_MessageFileClosed > Service_StartedWimp
        ASSERT  Service_ResourceFSStarting > Service_MessageFileClosed
        ASSERT  Service_TerritoryStarted > Service_ResourceFSStarting
        ASSERT  Service_DiscDismounted > Service_TerritoryStarted

ServiceTable

        DCD     0
        DCD     ServiceUrsula - Module_BaseAddr
        DCD     Service_Reset
        DCD     Service_StartWimp
        DCD     Service_StartedWimp
        DCD     Service_MessageFileClosed
      [ includeresources
        DCD     Service_ResourceFSStarting
      ]
        DCD     Service_TerritoryStarted
        DCD     Service_DiscDismounted
        DCD     0
        DCD     ServiceTable - Module_BaseAddr

a17 2
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

a19 16
        MOV     r0, r0                  ; Indicates there is a service call table

        ; Fast rejection
        TEQ     r1, #Service_Reset
        TEQNE   r1, #Service_StartWimp
        TEQNE   r1, #Service_StartedWimp
      [ includeresources
        TEQNE   r1, #Service_ResourceFSStarting
      ]
        TEQNE   r1, #Service_MessageFileClosed
        TEQNE   r1, #Service_TerritoryStarted
        TEQNE   r1, #Service_DiscDismounted
        MOVNE   pc, lr

ServiceUrsula
        
@


4.1.4.5
log
@*** empty log message ***
@
text
@d59 1
a59 1
        MOVNES  pc, lr
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
