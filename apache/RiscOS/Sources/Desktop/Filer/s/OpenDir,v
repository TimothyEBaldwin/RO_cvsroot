head	4.6;
access;
symbols
	Filer-2_43:4.6
	Filer-2_42:4.6
	Filer-2_41:4.6
	Filer-2_40:4.6
	Filer-2_39:4.6
	Filer-2_38:4.6
	Filer-2_37:4.6
	Filer-2_36:4.6
	Filer-2_35:4.6
	Filer-2_34:4.6
	Filer-2_33:4.5
	Filer-2_32:4.5
	Filer-2_31:4.5
	Filer-2_30:4.5
	Filer-2_29:4.5
	Filer-2_28:4.5
	Filer-2_27:4.5
	Filer-2_26:4.5
	Filer-2_25:4.5
	Filer-2_24:4.5
	Filer-2_23:4.5
	Filer-2_22:4.5
	Filer-2_21:4.4
	Filer-2_20:4.4
	Filer-2_19:4.4
	Filer-2_18:4.4
	Filer-2_17:4.4
	Filer-2_16:4.4
	Filer-2_15:4.4
	Filer-2_14:4.3
	Filer-2_13:4.3
	Filer-2_12:4.3
	Filer-2_11:4.3
	Filer-2_10:4.3
	Filer-2_09:4.3
	RO_5_07:4.3
	Filer-2_08:4.3
	Filer-2_07:4.3
	Filer-2_06:4.3
	Filer-2_05:4.3
	Filer-2_04:4.3
	Filer-2_03:4.3
	Filer-2_02:4.3
	Filer-2_01:4.3
	Filer-2_00:4.2
	Filer-1_99:4.2
	Filer-1_98:4.2
	Filer-1_97:4.2
	Ursula_merge:4.1.4.2
	Filer-1_96:4.2
	Filer-1_95:4.1.4.2
	nturton_Filer-1_85:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.2
	Ursula_RiscPC:4.1.4.2.0.2
	rthornb_UrsulaBuild-19Aug1998:4.1.4.2
	UrsulaBuild_FinalSoftload:4.1.4.2
	rthornb_UrsulaBuild-12Aug1998:4.1.4.2
	aglover_UrsulaBuild-05Aug1998:4.1.4.2
	rthornb_UrsulaBuild-29Jul1998:4.1.4.2
	rthornb_UrsulaBuild-22Jul1998:4.1.4.2
	rleggett_Filer-1_94:4.1.4.2
	rthornb_UrsulaBuild-15Jul1998:4.1.4.2
	rthornb_UrsulaBuild-07Jul1998:4.1.4.2
	rthornb_UrsulaBuild-17Jun1998:4.1.4.2
	rthornb_UrsulaBuild-03Jun1998:4.1.4.2
	rthornb_UrsulaBuild-27May1998:4.1.4.2
	rleggett_Filer-1_93:4.1.4.2
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.6
date	2013.11.24.12.33.02;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	qgjIfJ3IKLI7Owex;

4.5
date	2010.01.07.21.52.57;	author rool;	state Exp;
branches;
next	4.4;

4.4
date	2007.11.05.18.44.28;	author srevill;	state Exp;
branches;
next	4.3;

4.3
date	2001.03.16.17.09.23;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.11.56.38;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.26;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.26;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.27.29;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	98.01.07.10.27.56;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	98.05.26.11.21.33;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.16.50;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.16.11;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.6
log
@Add support for sorting dir contents numerically as well as alphabetically
New option to the display menu "Numerical sort" modifies the existing 4 sort methods (name, size, type, date) to sort by interpreting any numbers as cardinals. This modifier only really has effect on "Sort by name" since the other three already sort numerically.
This means for example a dir containing "File9,File10,File11" will appear in that order, whereas sorting by name alone would show "File10,File11,File9".

SelStuff0.s/SelStuff.s/Gets.s: Removed. Single function placed into SelStuff.
ModHdr.s/OpenDir.s/Commands.s/DebugFlags.s: Decoding of -NumericalSort switch, switched out undocumented 'Query' flags.
DecodeMenu.s/MenuCreate.s: Handle menu entry, simplify rename code a little.
HelpSrc.s/Messages: Extra help text.
SortDir.s: Pass option flag to Territory_Collate.
WkspEtc.s: Corrected definition of db_sm_type and db_sm_size.

Version 2.34. Tagged as 'Filer-2_34'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
 [ centralwrap
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; WrappingOpenDir
;
; In    r1 -> full dirname
;       r3, r4 = coords of where to open window (x0, y1)
;       r8 = viewmode
;       r9 = distance to unwrap x coordinate
;
; Out   r0 corrupted
;       r3, r4 = new coords of where window is to open
;
; Performs same function as OpenDir, but wraps at screen edges

WrappingOpenDir Entry   "r1-r2,r5-r11"

        ; Open the directory with default size and displaymode
        MOV     r5, #0          ; Open with default size
        BL      OpenDir
        EXIT    VS

        ; Check if made afresh
        TEQ     r7, #0          ; Don't mess if just fronted an old viewer
        EXIT    EQ

        ; Move coords to safe place for later
        MOV     r5, r3
        MOV     r6, r4

        ; r1 points to userdata
        ADR     r1, userdata

        ; Get open block to userdata for window OpenDir openned
        LDR     r0, [r7, #d_handle]
        STR     r0, [r1]
        SWI     XWimp_GetWindowState
        EXIT    VS

        ; For window just got data for, set
        ; r2 = width
        ; r3 = height
        LDR     r2, [r1, #u_wax1]
        LDR     r14, [r1, #u_wax0]
        SUB     r2, r2, r14

        ; Find right hand edge of window and compare it with right hand edge
        ; of screen. If found to be beyond screen edge then set window
        ; horizontal position back a bit.
        ADD     r14, r2, r5
        ADD     r14, r14, #vscroll_width
        LDR     r4, xwindsize
        CMP     r14, r4
        SUBGT   r5, r5, r9

        ; Fill in details of new position (may not even have moved!)
        STR     r5, [r1, #u_wax0]
        ADD     r2, r5, r2
        STR     r2, [r1, #u_wax1]

        ; reopen it there
        SWI     XWimp_OpenWindow
        EXIT    VS

        ; Move new coords back to registers for return
        MOV     r3, r5
        MOV     r4, r6
        ; now invalidate the filetypes cache

        BL      invalidate_filetypes

        EXIT
 ]

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; OpenDir
; =======

; In    r1 -> full dirname
;       r3, r4 = coords of where to open window (x0, y1)
 [ openat
;       r5, r6 = (width, height) to open window with.
;                              (0, h) means use defaults.
;       r8 = options to open with.
 ]
 [ centralwrap
;
; Out   r7 -> if VS then random
;          -> if new dir block, then new dir block
;          = 0 if not new dir block
;
  ]

OpenDir Entry "r0-r6,r8-r11"

 [ debug
 DSTRING r1, "OpenDir ",cc
 ]

; Check to see if this directory is already visible

        MOV     r7, #0          ; zero out r7 if return not creating new dir
        ADR     r4, ViewerList - d_link

10      LDR     r4, [r4, #d_link]
        CMP     r4, #Nowt
        BEQ     %FT50                   ; [not existing dirviewer]

        LDR     r14, [r4, #d_handle]
        CMP     r14, #-1                ; don't deal in icons
        BEQ     %BT10

 [ debug
 DREG r4, "comparing with dirviewer "
 ]
        LDR     r2, [r4, #d_dirnamestore] ; r2 -> dirname
        BL      Xstrcmp_excludingspaces  ; May compare 'net:&','net:& (a500)'
        BNE     %BT10                   ; [no match, try next dirviewer]

        LDR     r0, [r4, #d_handle]     ; just front the dirviewer
 [ openat
        ; If the size is given, then force the values passed in
        TST     r5, r5
        BEQ     %FT12

        ; Store the window handle in somewhere handy
        MOV     r7, r0

        ; Work out the new view mode
        LDRB    r2, [r4, #d_viewmode]
        MOV     r1, r2

        ; Replace the relevant fields of r1 with those of r8
        ; Method used is to first construct a mask in r14, which is used
        ; to mask out r1 and mask in r8.
        TST     r8, #1 :SHL: dbu_displaymode
        MOVEQ   r14, #0
        MOVNE   r14, #db_displaymode
        TST     r8, #1 :SHL: dbu_sortmode
        ORRNE   r14, r14, #db_sortmode :OR: db_sortorder :OR: db_sortnumeric
        BIC     r1, r1, r14
        AND     r14, r8, r14
        ORR     r1, r1, r14

        ; If the view mode has changed, do a reshape
        CMP     r1, r2
        BEQ     %FT11
        STRB    r1, [r4, #d_viewmode]
        MOV     r1, r4
        BL      SortDir
      [ centralwrap
        MOV     r1, #db_fpr_reshape
      |
        MOV     r1, #0
      ]
        STRB    r1, [r4, #d_filesperrow]

11      ;

        ; Get the window handle back into r0
        MOV     r0, r7

        ADR     r1, userdata            ; event_open_window expects userdata
        STR     r0, [r1]
        SWI     XWimp_GetWindowState
        BVS     %FT49
        STR     r3, [r1, #u_wax0]
        LDR     r4, [sp, #4*4]          ; restore r4 from the stack
        STR     r4, [r1, #u_way1]
        ADD     r3, r3, r5
        STR     r3, [r1, #u_wax1]
        SUB     r4, r4, r6
        STR     r4, [r1, #u_way0]
        MOV     r3, #-1         ; front
        STR     r3, [r1, #u_bhandle]
        BL      event_open_window
        MOVVC   R0,R7
        B       %FT49
12      ;
 ]
        MOV     r7, r0
        BL      front                   ; at its current screen position
;        MOV     r0, r7
;        MOV     r7, #0

49      MOVVC   R0,R7                   ; r0 = window handle of dir viewer
        BLVC    SendWindowClosedMessage ; remove iconised copies of this viewer

        STRVS   r0, [sp]
        MOV     r7, #0
        EXIT


50 ; Need to create new dirviewer

 [ debug
 DLINE "New dirviewer needed"
 ]
        BL      strlen
        ADD     r3, r3, #1              ; +1 for terminator
        MOV     r0, #ModHandReason_Claim
        SWI     XOS_Module
        BVS     %BT49
 [ debugalloc
 DREG r2, "got room for dirname block at "
 ]
        MOV     r11, r2                 ; save for later!

        MOV     r2, r1
        MOV     r1, r11
        BL      strcpy                  ; Copy dirname string into our block

 [ OptionsAreInRAM
        LDRB    r3, layout_options
 |
        BL      ReadCMOSBits            ; Read current state to r3
        AND     r3, r3, #sorting_cmos_bits :OR: display_cmos_bits
                                        ; Clear out other bits
                                        ; Always created with current viewmode
 ]

 [ openat
        ; Replace the relevant fields of r3 with those of r8
        ; Method used is to first construct a mask in r14, which is used
        ; to mask out r3 and mask in r8.
        TST     r8, #1 :SHL: dbu_displaymode
        MOVEQ   r14, #0
        MOVNE   r14, #db_displaymode
        TST     r8, #1 :SHL: dbu_sortmode
        ORRNE   r14, r14, #db_sortmode :OR: db_sortorder :OR: db_sortnumeric
        BIC     r3, r3, r14
        AND     r14, r8, r14
        ORR     r3, r3, r14
 ]
        BL      CacheDir                ; r7 := copied buffer in RMA block^
        BVS     %FT90

        LDR     r14, ViewerList         ; Add to head of list
        STR     r14, [r7, #d_link]
        STR     r7,  ViewerList

        STR     r11, [r7, #d_dirnamestore]

 [ centralwrap
        MOV     r14, #db_fpr_invalid
 |
        MOV     r14, #0
 ]
        STRB    r14, [r7, #d_filesperrow] ; Ensure size will be calculated

 [ centralwrap
        MOV     r14, #0
 ]
        STRB    r14, [r7, #d_nchildren] ; For offsets at same level

        ADD     r14, sp, #4*3           ; Reload r3,r4in: (x,y) coords
 [ openat
        LDMIA   r14, {r3, r4, r5, r6}
 |
        LDMIA   r14, {r3, r4}
 ]
        BL      MakeDirWindow
 [ ShowOpenDirs
        MOVVC   R0,#refresh_open
        BLVC    RedrawParentIcon        ; Chris - redraw the (open) parent icon
 ]
        EXIT    VC

        STR     r0, [sp]
        LDR     r0, [r7, #d_handle]
        BL      DeleteDirBlock          ; Accumulates V
        EXIT


90      STR     r0, [sp]

        MOV     r2, r11                 ; Free dirname string
        BL      SFreeArea               ; Accumulates V
        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; We've just opened a directory viewer, broadcast a message WindowClosed so
; that any iconised copies of this window are removed by the iconiser.
;
; In    r0 = window handle of dirviewer
;
; Out   All registers preserved
SendWindowClosedMessage
        Entry "r0-r11"
        SUB   r13 ,r13, #24             ; get some workspace off the stack

        MOV   r1, r13                   ; -> workspace to build message in
        MOV   r2, #24                   ; size of message
        MOV   r3, #0                    ; task handle (filled in by wimp)
        MOV   r4, #0                    ; my ref
        MOV   r5, #0                    ; your ref
        MOV   r6, #&40000               ;
        ORR   r6, r6,#&CB               ; message code = &400CB => close window
        MOV   r7, r0                    ; handle of window closed
        STMIA r1, {r2-r7}               ; pop these into workspace

        MOV   r0, #17                   ; 17 => don't need an ack
        MOV   r2, #0                    ; 0 => broadcast message
        SWI   XWimp_SendMessage         ; send message, ignore errors

        ADD   r13, r13, #24             ; release workspace claimed
        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r7 -> dirviewer block to open as window
;       r3,r4 = coords (x0,y1) to open at
 [ openat
;       r5,r6 = (width, height) : (0, h) means use default
 ]

MakeDirWindow Entry "r0-r11"

 [ centralwrap
        MOV     r14, #db_fpr_invalid    ; First time round
 |
        MOV     r14, #0                 ; First time round
 ]
        STRB    r14, [r7, #d_filesperrow]

        wsaddr  r1, dirwindow           ; Create using our dirviewer template

        LDR     r14, [r7, #d_dirnamestore] ; Indirect title -> dirname
        STR     r14, [r1, #w_title]     ; Always use unmoving dirname
 [ debug
 DSTRING r14, "creating window, title "
 ]

        ADD     r14, sp, #4*3
        LDMIA   r14, {cx0, cy1}         ; r3,r4in
 [ openat
        LDR     cx1, [sp, #4*5]         ; r5 in
        TEQ     cx1, #0
        LDRNE   cy0, [sp, #4*6]         ; r6 in
        ; Downgrade non-default size windows to just reshape
      [ centralwrap
        MOVNE   r14, #db_fpr_reshape
      |
        MOVNE   r14, #0
      ]
        STRNEB  r14, [r7, #d_filesperrow]

      [ fourcolumnwidth
        ; Size window to try and fit 4 columns
        BNE     %FT01
        MOV     r0, r7
        BL      FindLgiWidth
        MOV     cy0, #5                  ; number of columns + 1
        MUL     cx1, r0, cy0
        LDR     cy0, initwindowheight
01
      |
        LDREQ   cx1, initwindowwidth
        LDREQ   cy0, initwindowheight
      ]

 |
        LDR     cx1, initwindowwidth
        LDR     cy0, initwindowheight
 ]
        ADD     cx1, cx0, cx1
        SUB     cy0, cy1, cy0
 ASSERT w_wax0 = 0
        STMIA   r1, {cx0, cy0, cx1, cy1}
 [ debugredraw
 DREG cx0,"creating window at ",cc,Integer
 DREG cy0,", ",cc,Integer
 DREG cx1,", ",cc,Integer
 DREG cy1,", ",,Integer
 ]
        SWI     XWimp_CreateWindow
        STRVS   r0, [sp]
        EXIT    VS

 [ debugredraw
 DREG r0, "Got window handle ",,Integer
 ]
        STR     r0, [r7, #d_handle]

        BL      front                   ; open at default coords
        EXIT    VC

        STR     r0, [sp]
        LDR     r0, [r7, #d_handle]     ; deallocate window if error
        BL      DeleteWindow
        SETV
        EXIT

 [ hastiny
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; In    r4 -> dirviewer to make tiny

MakeTinyDir Entry "r1-r11"

; Create icon on icon bar from our template icon 0

        SUB     sp, sp, #i_size + 4

        LDR     r14, tinydir
        LDMIA   r14, {cx0, cy0, cx1, cy1, x0, y0, x1, y1}
        SUB     cx1, cx1, cx0           ; set this to keep Wimp happy
        MOV     cx0, #0
        SUB     cy1, cy1, cy0
        MOV     cy0, #0

        MOV     r0, #-2                 ; lhs of icon bar
        STMIA   sp, {r0, cx0, cy0, cx1, cy1, x0, y0, x1, y1}
                                        ; window handle (w), icon coords (4w)
                                        ; icon flags (w), icon data (3w)

        LDR     r1, [r4, #d_dirnamestore] ; Point icon indirect text at leafname

;;;;;;;; Extract here + now

 [ debug
 DSTRING r1,"leafname for icon "
 ]
        STR     r1, [sp, #6*4]
        BL      strlen
        STR     r3, [sp, #8*4]          ; And length of leafname in data

        ADR     r1, %FT66               ; Point icon validation string at
        STR     r1, [sp, #7*4]          ; frigged about sprite name

        MOV     r1, sp
        SWI     XWimp_CreateIcon
        ADD     sp, sp, #i_size + 4

 [ debug
 BVS %FT00
 DREG r0, "allocated icon handle "
00
 ]
        LDRVC   r4, [sp, #4*3]          ; r4in
        STRVC   r0, [r4, #d_iconhandle]

; Remove window from screen, but not from dirviewer list

        LDRVC   r0, [r4, #d_handle]
        BLVC    DeleteWindow

        MOVVC   r14, #-2                ; Now bound to the icon bar
        STRVC   r14, [r4, #d_handle]
        EXIT

66
        DCB     "sdirectory", 0         ; 's' not part of sprite name
        ALIGN
 ]

        END
@


4.5
log
@  Add the ability to sort Filer objects in reverse order
Detail:
  It's been possible to sort Filer objects using various criteria for a long
  time but sorting objects in reverse order was not possible. This change aims
  to remedy that omission.
  The option 'Reverse sort' has been added to the 'Display' submenu of the
  Filer menu, allowing the sort order of individual directory viewers to be
  changed dynamically.
  The switch -ReverseSort has been added to the command Filer_OpenDir to allow
  it to open directories with the sort order reversed.
  The switch -ReverseSort has been added to the Filer_Layout command so that
  reverse sort order can be set as default for new directory viewers. The
  Filer_Layout command is also written to the FlrSetup file in Choices:Boot.
  Tasks by the Filer configure plug-in (which has been also updated to allow
  -ReverseSort).
Admin:
  Tested on Iyonix RO5.14


Version 2.22. Tagged as 'Filer-2_22'
@
text
@d155 1
a155 1
        ORRNE   r14, r14, #db_sortmode :OR: db_sortorder
d245 1
a245 1
        ORRNE   r14, r14, #db_sortmode :OR: db_sortorder
@


4.4
log
@Remove iconised viewer icon when the viewer is reopened.
Detail:
  Opening a viewer, iconising it then reopening it from its parent viewer or
  the iconbar doesn't remove the iconised viewer icon from the pinboard.
  Sending the message Wimp_WindowClosed (&400CC) when reopening an existant
  viewer fixes this.
Admin:
  Tested on Iyonix RO5.11
Changes by:
  Fred Graute

Version 2.15. Tagged as 'Filer-2_15'
@
text
@d155 1
a155 1
        ORRNE   r14, r14, #db_sortmode
d245 1
a245 1
        ORRNE   r14, r14, #db_sortmode
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 2.01. Tagged as 'Filer-2_01'
@
text
@d192 1
d196 1
d198 5
d204 2
a205 1
49      STRVS   r0, [sp]
d297 28
@


4.2
log
@Merged Ursula branch.
Moved to srccommit.

Version 1.96. Tagged as 'Filer-1_96'
@
text
@d30 1
a30 1
WrappingOpenDir ENTRY   "r1-r2,r5-r11"
d105 1
a105 1
;          = 0 if not new dir block 
d109 1
a109 1
OpenDir ENTRY "r0-r6,r8-r11"
d146 1
a146 1
        MOV     r1, r2    
d295 1
a295 1
MakeDirWindow ENTRY "r0-r11"
d341 1
a341 1
        LDR     cx1, initwindowwidth        
d376 1
a376 1
MakeTinyDir ENTRY "r1-r11"
@


4.1
log
@Initial revision
@
text
@d220 3
d227 2
d325 11
d338 2
@


4.1.4.1
log
@A *Filer_Layout command now replaces CMOS setting of the display options.
Fixed bug which meant dirviews weren't sorted if they had >256 entries.
Increased dirnamebuffer to 2K to cope with long pathname renames.
@
text
@a219 3
 [ OptionsAreInRAM
        LDRB    r3, layout_options
 |
a223 2
 ]

@


4.1.4.2
log
@New viewers are now opened at default width of four colums, where possible.
Addition to Message_FilerOpenDir to allow the forced update of all dir viewers
bu the FilrSetup application.
Bug fix: Adjust clicks on New directory OK icon now keep the menu structure up.
Bug fix: Adjust drags from Filer windows close the initiating dir viewer.
@
text
@a324 11

      [ fourcolumnwidth
        ; Size window to try and fit 4 columns
        BNE     %FT01
        MOV     r0, r7
        BL      FindLgiWidth
        MOV     cy0, #5                  ; number of columns + 1
        MUL     cx1, r0, cy0
        LDR     cy0, initwindowheight
01
      |
a326 2
      ]

@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
