head	4.11;
access;
symbols
	Filer-2_43:4.11
	Filer-2_42:4.11
	Filer-2_41:4.11
	Filer-2_40:4.11
	Filer-2_39:4.11
	Filer-2_38:4.10
	Filer-2_37:4.10
	Filer-2_36:4.10
	Filer-2_35:4.10
	Filer-2_34:4.10
	Filer-2_33:4.10
	Filer-2_32:4.10
	Filer-2_31:4.10
	Filer-2_30:4.10
	Filer-2_29:4.10
	Filer-2_28:4.9
	Filer-2_27:4.9
	Filer-2_26:4.9
	Filer-2_25:4.8
	Filer-2_24:4.8
	Filer-2_23:4.7
	Filer-2_22:4.7
	Filer-2_21:4.6
	Filer-2_20:4.6
	Filer-2_19:4.6
	Filer-2_18:4.6
	Filer-2_17:4.6
	Filer-2_16:4.5
	Filer-2_15:4.5
	Filer-2_14:4.5
	Filer-2_13:4.5
	Filer-2_12:4.5
	Filer-2_11:4.5
	Filer-2_10:4.5
	Filer-2_09:4.5
	RO_5_07:4.5
	Filer-2_08:4.5
	Filer-2_07:4.5
	Filer-2_06:4.4
	Filer-2_05:4.3
	Filer-2_04:4.3
	Filer-2_03:4.3
	Filer-2_02:4.3
	Filer-2_01:4.3
	Filer-2_00:4.2
	Filer-1_99:4.2
	Filer-1_98:4.2
	Filer-1_97:4.2
	Ursula_merge:4.1.4.9
	Filer-1_96:4.2
	Filer-1_95:4.1.4.9
	nturton_Filer-1_85:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.9
	Ursula_RiscPC:4.1.4.9.0.2
	rthornb_UrsulaBuild-19Aug1998:4.1.4.9
	UrsulaBuild_FinalSoftload:4.1.4.9
	rthornb_UrsulaBuild-12Aug1998:4.1.4.9
	aglover_UrsulaBuild-05Aug1998:4.1.4.9
	rthornb_UrsulaBuild-29Jul1998:4.1.4.9
	rthornb_UrsulaBuild-22Jul1998:4.1.4.9
	rleggett_Filer-1_94:4.1.4.9
	rthornb_UrsulaBuild-15Jul1998:4.1.4.9
	rthornb_UrsulaBuild-07Jul1998:4.1.4.9
	rthornb_UrsulaBuild-17Jun1998:4.1.4.9
	rthornb_UrsulaBuild-03Jun1998:4.1.4.8
	rthornb_UrsulaBuild-27May1998:4.1.4.8
	rleggett_Filer-1_93:4.1.4.8
	rthornb_UrsulaBuild-21May1998:4.1.4.7
	rthornb_UrsulaBuild_01May1998:4.1.4.7
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.11
date	2014.11.17.23.08.56;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	zHjekpptJV1iOAYx;

4.10
date	2011.11.12.13.06.46;	author rsprowson;	state Exp;
branches;
next	4.9;
commitid	nyU3LOr3CQgrS2Hv;

4.9
date	2010.10.23.18.02.28;	author rsprowson;	state Exp;
branches;
next	4.8;

4.8
date	2010.03.07.08.26.14;	author rsprowson;	state Exp;
branches;
next	4.7;

4.7
date	2010.01.07.21.52.57;	author rool;	state Exp;
branches;
next	4.6;

4.6
date	2008.10.04.18.41.12;	author bavison;	state Exp;
branches;
next	4.5;

4.5
date	2003.01.14.00.31.06;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2003.01.09.15.58.11;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2001.03.16.17.09.23;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.11.56.36;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.25;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.25;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.27.27;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.05.27.11.13.27;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	97.05.28.08.44.06;	author rleggett;	state Exp;
branches;
next	4.1.4.3;

4.1.4.3
date	97.08.27.09.09.04;	author rleggett;	state Exp;
branches;
next	4.1.4.4;

4.1.4.4
date	97.09.12.09.17.31;	author rleggett;	state Exp;
branches;
next	4.1.4.5;

4.1.4.5
date	97.09.24.13.26.40;	author rleggett;	state Exp;
branches;
next	4.1.4.6;

4.1.4.6
date	97.10.21.09.38.30;	author rleggett;	state Exp;
branches;
next	4.1.4.7;

4.1.4.7
date	98.01.07.10.27.55;	author rleggett;	state Exp;
branches;
next	4.1.4.8;

4.1.4.8
date	98.05.26.11.21.31;	author rleggett;	state Exp;
branches;
next	4.1.4.9;

4.1.4.9
date	98.06.10.09.45.14;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.16.44;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.16.09;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.11
log
@Use bit definitions from headers
All uses of FileSwitchCMOS now use symbolic names from Hdr:CMOS.
Fix up $$ escape warning from objasm.
Same binary, not tagged.
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; event_user_message (and _recorded)
; ==================

; In    r1 -> wimp_eventstr
;             [r1, #0]     block size
;             [r1, #12]    your ref
;             [r1, #16]    message action
;             [r1, #20...] message data

; Out   all regs may be corrupted - going back to PollWimp

event_user_message      Entry

        Push    "r0-r2"
        MOV     r0, #&81                ; Store initiating SHIFT state
        MOV     r1, #&FF
        MOV     r2, #&FF
        SWI     XOS_Byte
        STRB    r1, initshiftstate      ; &FF -> SHIFT depressed
        Pull    "r0-r2"

        LDR     r0, [r1, #ms_action]

  [ debugtask
  DREG r0, "Got UserMessage "
  ]

        ADR     r2, messages_processed_start
        B       %FT01
02
        TEQ     r14, r0
        SUBEQ   pc, r2, #4
01
        LDR     r14, [r2], #8
        CMP     r14, #-1
        BNE     %BT02

  [ debugtask
  DLINE "Ignored UserMessage"
  ]
        EXIT

messages_processed_start
        DCD     Message_FilerOpenDir
        B       message_fileropendir_code
        DCD     Message_FilerCloseDir
        B       message_filerclosedir_code
        DCD     Message_FilerOpenDirAt
        B       message_fileropendirat_code
        DCD     Message_DataSave
        B       message_datasave_code
        DCD     Message_DataLoad
        B       message_dataload_code
        DCD     Message_DataLoadAck
        B       message_dataloadack_code
        DCD     Message_ModeChange
        B       message_modechange_code
        DCD     Message_HelpRequest
        B       message_helprequest_code
        DCD     Message_Quit
        B       message_quit_code
        DCD     Message_MenuWarning
        B       message_menuwarning_code
        DCD     Message_SaveDesktop
        B       message_savedesktop_code
        DCD     Message_MenusDeleted
        B       message_menusdeleted_code
        DCD     Message_FontChanged
        B       message_fontchanged_code
        DCD     Message_ClaimEntity
        B       message_claim_entity
        DCD     Message_FilerDevicePath
        B       message_filerdevicepath
        DCD     -1


; .............................................................................
; Quit

message_quit_code       ROUT    ; NOENTRY
        BL      ShrinkWorkspace
        SWI     XOS_Exit


; .............................................................................
; Filer_OpenDir message format: data+0 filesystem
;                               data+4 bitset
;                               data+8 full dirname - may have space then info
;                                      eg. 'net#arf:& (a500)'

message_fileropendir_code      ROUT    ; NOENTRY

      [ {TRUE}
        ; If filesystem number is -1 and first word of dir name is &00000000, we
        ; force an update of all open dirviewers.
        LDR     r0, [r1, #ms_data+0]
        CMP     r0, #-1
        LDREQ   r0, [r1, #ms_data+8]
        CMPEQ   r0, #0
        BNE     %FT10

        ; Get rid of the renaming writeable icon (if it exists)
        BL      remove_rename_writeable

        ; Loop though all dir viewers force them to reopen.
        LDR     r4, ViewerList
02      CMP     r4, #Nowt
        EXIT    EQ
      [ centralwrap
        MOV     r0, #db_fpr_reshape     ; A filesperrow to cause a reshape
      |
        MOV     r0, #0
      ]
        STRB    r0, [r4, #d_filesperrow]
        InvSmiWidth r4
        BL      ForceReopen
        LDR     r4, [r4, #d_link]
        B       %BT02

10      ; Normal opendir message code follows (ie. no forced update required)
      ]

        LDR     r14, [r1, #ms_data +4]
        ADD     r1, r1, #ms_data + 8
        TST     r14, #1                 ; See if canonicalisation was requested
        BLEQ    CanonicaliseOpenDirPath
        MOV     r8, #0                  ; Use default viewmode
        BL      OpenDir_Root

        EXIT


 [ openat
; .............................................................................
; Filer_OpenDirAt message format:       data+0  filesystem
;                                       data+4  bitset
;                                       data+8  x
;                                       data+12 y
;                                       data+16 w
;                                       data+20 h
;                                       data+24 viewmode
;                                       data+25 full dirname - may have
;                                               space then info
;                                               eg. 'net#arf:& (a500)'

message_fileropendirat_code     ROUT    ; NOENTRY

        ; Load into r3, r4, r5, r6, r8 window parameters from message
        LDR     r14, [r1, #ms_data +4]
        ADD     r11, r1, #ms_data+8
        LDMIA   r11, {r3, r4, r5, r6}
        LDRB    r8, [r1, #ms_data+24]

        ADD     r1, r1, #ms_data + 25   ; r2 -> full dirname
        TST     r14, #1                 ; See if canonicalisation was requested
        BLEQ    CanonicaliseOpenDirPath

        ; If window position is (0, 0), then go do a wrapping OpenDir
        CMP     r3, #0
        CMPEQ   r4, #0
        BLEQ    OpenDir_Root

        ; Do a normal OpenDir if position and size specified.
        BLNE    OpenDir_At
        EXIT
 ]

CanonicaliseOpenDirPath
        Entry   "r0,r2-r5"
        ; r1 -> pathname to convert

        MOV     r0, #FSControl_CanonicalisePath
        LDR     r2, dirnamebuffer
        MOV     r3, #0
        MOV     r4, #0
        MOV     r5, #dirnamebuffer_size
        SWI     XOS_FSControl
        EXIT    VS

        CMP     r5,#0                   ; ran out of expansion RAM
        LDRGT   r1,dirnamebuffer

        ; r1 -> expanded pathname
        EXIT


OpenDir_Root    Entry
        ; Do a normal open dir with default everythings but viewmode.
        ; r1 -> path name
        MOV     r2, r1
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        BL      strcpy

        LDR     r3, initwindowx
        LDR     r4, initwindowy
      [ centralwrap
        MOV     r9, r3                  ; Unwrap by position
        BL      WrappingOpenDir
      |
        MOV     r5, #0
        BL      OpenDir
      ]
        LDR     r14, initwindow_xoff
        ADD     r3, r3, r14
        STR     r3, initwindowx
        LDR     r14, initwindow_yoff
        ADD     r4, r4, r14
        STR     r4, initwindowy
        EXIT

OpenDir_At      Entry
        ; r1 -> path name
        ; r3 = x0, r4 = y0, r5 = width, r6 = height
        ; r8 = viewmode
        MOV     r2, r1
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        BL      strcpy

        BL      OpenDir
        EXIT


; .............................................................................
; Filer_CloseDir message format: data+0 1 words (reserved)
;                                data+4 1 word:
;                                       bit     meaning when set
;                                       0       'don't canonicalise this before using it'
;                                       1-31    reserved
;                                data+8 full dirname (eg. net#vax:)

message_filerclosedir_code      ROUT    ; NOENTRY

        LDR     r2, [r1, #ms_data+4]
        ADD     r1, r1, #ms_data + 8
        BL      DeleteSubDirs
        EXIT


; .............................................................................
; Got a DataSave; -> someone wants to save a file; give him a name

message_datasave_code   ROUT    ; NOENTRY

 [ debugtask
 DREG r0,"Someone wants a dirname appending from window ",,Integer
 ]

        LDR     r0, [r1, #msDataTransfer_window]
        BL      FindDir
        EXIT    NE                      ; [not a dirviewer]


; I have to send a reply to the enquirer after appending leafname to dirname

        SUB     sp, sp, #256
        ADD     r2, r1, #msDataTransfer_filename ; Hide source leafname
        MOV     r1, sp
        BL      strcpy

  [ debugtask
 DSTRING r1, "Copied away his leafname "
  ]

        MOV     r1, r2

        LDR     r2, [r4, #d_dirnamestore] ; r2 -> dirname
        BL      strcpy_excludingspaces  ; send him our full dirname, no spaces

        MOV     r2, sp                  ; after appending his leafname
        BL      AppendLeafnameToDirname
00
        ADD     sp, sp, #256

        BL      strlen
        ADD     r1, r1, r3

        ADD     r1, r1, #3+1            ; round up to word size (remember null)
        BIC     r2, r1, #3
        ADR     r1, userdata
        SUB     r2, r2, r1
        STR     r2, [r1, #ms_size]

        LDR     r0, =Message_DataSaveAck
        BL      SendAck
        EXIT

        LTORG


; .............................................................................
; Got a DataLoad, so just acknowledge it (don't mess about with contents/size)

message_dataload_code   ROUT    ; NOENTRY
        LDR     r0, =Message_DataLoadAck
        BL      SendAck
        EXIT


; .............................................................................
; Got a DataLoadAck (from DataOpen/DataLoad); close dir if appropriate

message_dataloadack_code        ROUT    ; NOENTRY
        BL      CloseInitiatingDir
        EXIT


; .............................................................................
; Mode change ocurred

message_modechange_code ROUT    ; NOENTRY
        BL      SetForThisMode
 [ bug1596
        ; Run round all dirviewers setting their filesperrow to
        ; db_fpr_reshape to force a reshape which also resets their extents.
        LDR     r4, ViewerList          ; Run round dirviewers so we will
                                        ; resize correctly

      [ centralwrap
        MOV     r14, #db_fpr_reshape    ; A filesperrow to cause a reshape
      |
        MOV     r14, #0
      ]

85      TEQ     r4, #Nowt
        EXIT    EQ

        STRB    r14, [r4, #d_filesperrow]
        InvSmiWidth r4

        LDR     r4, [r4, #d_link]
        B       %BT85
 |
        LDR     r4, ViewerList          ; Run round dirviewers so we will
                                        ; resize correctly
85      TEQ     r4, #Nowt
        EXIT    EQ

        MOV     r14, #0
        STRB    r14, [r4, #d_filesperrow]
        STR     r14, [r4, #d_smiwidth]

        LDR     r4, [r4, #d_link]
        B       %BT85
 ]


; .............................................................................
; !Help wants some help

viewer_help_tag                 DCB     "Viewer_Help", 0
infobox_help_tag_prefix         DCB     "Infobox_Help_", 0
copysave_help_tag_prefix        DCB     "Copysave_Help_", 0
newdirectory_help_tag_prefix    DCB     "Newdirectory_Help_",0
access_help_tag_prefix          DCB     "Access_Help_", 0
unknown_help_tag_prefix         DCB     "Unknown_Help_", 0
menu_help_tag_prefix            DCB     "MH", 0
        ALIGN

message_helprequest_code        ROUT    ; NOENTRY
        LDR     r0, [r1, #ms_data + b_window]
        BL      FindDir
        ADREQ   r2, viewer_help_tag
        BEQ     %FT90

        ; One of our menu windows hanging off the menu
        LDR     r14, h_menuwindow_loc
        TEQ     r14, #0
        LDRNE   r14, [r14]
        TEQ     r0, r14
        BNE     %FT10
        LDR     r14, type_menuwindow

        TEQ     r14, #menuwindow_newdir
        ADREQ   r2, newdirectory_help_tag_prefix
        BEQ     %FT05

        TEQ     r14, #menuwindow_copysave
        ADREQ   r2, copysave_help_tag_prefix
        BEQ     %FT05

        TEQ     r14, #menuwindow_setaccess
        ADREQ   r2, access_help_tag_prefix
        BEQ     %FT05

        TEQ     r14, #menuwindow_infobox
        ADREQ   r2, infobox_help_tag_prefix
        ADRNE   r2, unknown_help_tag_prefix
05      ; r2 contains prefix for help tag
        ; Construct full help tag into dirnamebuffer, preserving
        ; r1 in r0. Full tag consists of tag prefix followed by
        ; "0"+icon
        MOV     r0, r1
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        BL      strcpy_advance
        LDR     r2, [r0, #msHelp_icon]
        ADD     r2, r2, #"0"
        TEQ     r2, #"/"
        MOVEQ   r2, #"B"
        STRB    r2, [r1], #1
        MOV     r2, #0
        STRB    r2, [r1]
        ;ADR     r2, dirnamebuffer
        LDR     r2, dirnamebuffer
        MOV     r1, r0
        B       %FT90

10      ; Must part of the menu structure
        ; Construct into dirnamebuffer the tag for the menu

        ; Hold address of incomming message somewhere handy
        MOV     r4, r1

        ; Copy the prefix
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        ADR     r2, menu_help_tag_prefix
        BL      strcpy_advance

        ; Add the type of selection character as generated when the menu was created
        LDRB    r2, menu_selchar
        STRB    r2, [r1], #1

        ; Hold the address of the end of tag so far somewhere handy
        MOV     r5, r1

        ; Get the menu tree
        MOV     r0, #1
        ADD     r1, r4, #ms_data
        LDR     r2, [r4, #ms_data + b_window]
        LDR     r3, [r4, #ms_data + b_icon]
        SWI     XWimp_GetMenuState
        EXIT    VS
  [ SetDirectoryComesFirst :LAND: AddSetDirectory
    ; we must swap the two entries for open parent and set directories
    ; and this is the easiest way
        LDR     r0,[r1]
        TEQ     r0,#6                    ; is it 'Set directory' ?
        TEQNE   r0,#7                    ; or 'Open parent' ?
        EOREQ   r0,r0,#1                 ; swap them
        STREQ   r0,[r1]
  ]
        ; Move the menu tree details onto the end of the tag
        B       %FT30
20
        ADD     r0, r0, #"0"
        STRB    r0, [r5], #1
30
        LDR     r0, [r1], #4
        TST     r0, r0
        BPL     %BT20

        ; Terminate the tag as determined by the pointer location
        TST     r3, r3
        MOVMI   r0, #"B"
        BMI     %FT40
        Swap    r3, r2
        BL      GetIconState
        TST     r2, #is_shaded
        MOVNE   r0, #"G"
        MOVEQ   r0, #"X"
40
        STRB    r0, [r5], #1
        MOV     r0, #0
        STRB    r0, [r5]

        ; r2 -> tag; r1 -> incomming message (probably pooed a bit)
        MOV     r1, r4
        ;ADR     r2, dirnamebuffer
        LDR     r2, dirnamebuffer

90      ; r2 now contains a pointer to the required help string
        ; r2 now contains a pointer to the tag of the help string
        MOV     r8, r1
        ADR     r0, messagetrans_struct
        MOV     r1, r2
        ADD     r2, r8, #ms_data
        MOV     r3, #256 - ms_data
        LDR     r4, sel_leafname
        MOV     r5, #0
        MOV     r6, #0
        MOV     r7, #0
        SWI     XMessageTrans_Lookup
        EXIT    VS
        MOV     r1, r8

        LDR     r0, [r1, #ms_myref]
        STR     r0, [r1, #ms_yourref]
        LDR     r0, =Message_HelpReply
        STR     r0, [r1, #ms_action]
        MOV     r0, #256
        STR     r0, [r1, #ms_size]
        MOV     r3, r1
        MOV     r0, #User_Message
        MOV     r1, r3
        LDR     r2, [r1, #ms_taskhandle]
        SWI     XWimp_SendMessage
        EXIT

        LTORG

; .............................................................................
;
message_menuwarning_code        ROUT    ; NOENTRY
        BL      delete_closed_menu_window
        LDR     r2, [r1, #ms_data+0]
        STR     r2, type_menuwindow
        CMP     r2, #menuwindow_copysave
        BEQ     message_menuwarning_copysave
        CMP     r2, #menuwindow_setaccess
        BEQ     message_menuwarning_setaccess
        CMP     r2, #menuwindow_infobox
        BEQ     message_menuwarning_infobox
        CMP     r2, #menuwindow_newdir
        BEQ     message_menuwarning_newdir
        EXIT

message_menuwarning_copysave    ROUT    ; NOENTRY
        LDR     r4, [r1, #ms_data+4]     ; x coord of sub menu
        LDR     r3, [r1, #ms_data+8]     ; y coord of sub menu

        ; sel dir has disappeared
        LDR     r2, sel_dir
        TEQ     r2, #Nowt
        ADREQL  r2, file_xxx
        BEQ     %FT10

        LDR     r0, sel_leafname
        LDR     r2, sel_filetype
    [ {TRUE}
        Push    "r3"
        LDR     r3, sel_fileblock
        BL      FiletypeToSpritename
        Pull    "r3"
    |
        BL      FiletypeToSpritename
    ]

10
saveboxiconname_offset *       w_icons + i_size*2 + i_data
        LDR     r1, csavebox_ptr
        ADD     r1, r1, #saveboxiconname_offset
        BL      strcpy
        LDR     r1, csavebox_ptr
        SWI     XWimp_CreateWindow
        EXIT    VS
        MOV     r1, r0
        MOV     r2, r4
        SWI     XWimp_CreateSubMenu
        EXIT    VS
        ADRL    r14, csavesubmenu
        STR     r14, h_menuwindow_loc
        STR     r1, [r14]
        EXIT

message_menuwarning_newdir    ROUT    ; NOENTRY
        LDR     r4, [r1, #ms_data+4]     ; x coord of sub menu
        LDR     r3, [r1, #ms_data+8]     ; y coord of sub menu

newdirboxiconname_offset *       w_icons + i_size*2 + i_data

        ;ADR     r0, newdirdefault
        ;LDR     r1, newdirbox_ptr
        ;ADD     r1, r1, #newdirboxiconname_offset
        ;BL      strcpy

        LDR     r1, newdirbox_text
        ADR     r2, newdirdefaultname
        BL      strcpy                   ; Default dir name

        LDR     r1, newdirbox_ptr
        SWI     XWimp_CreateWindow
        EXIT    VS
        MOV     r1, r0
        MOV     r2, r4
        SWI     XWimp_CreateSubMenu
        EXIT    VS
        ADRL    r14, newdirsubmenu
        STR     r14, h_menuwindow_loc
        STR     r1, [r14]

        EXIT

newdirdefaultsprite DCB "directory",0
newdirdefaultname   DCB "",0

message_menuwarning_setaccess   ROUT    ; NOENTRY
        LDR     r2, [r1, #ms_data+4]     ; x coord of sub menu
        LDR     r3, [r1, #ms_data+8]     ; y coord of sub menu
        LDR     r1, faccesswindow_ptr
        SWI     XWimp_CreateWindow
        EXIT    VS
        MOV     r1, r0
        SWI     XWimp_CreateSubMenu
        EXIT    VS
        ADRL    r14, accesssubmenu
        STR     r14, h_menuwindow_loc
        STR     r1, [r14]

      [ version >= 138                  ; If single file, set icons.
        Push    "r1"
        LDR     r4,sel_dir
        BL      InitForMenuCreation
        CMP     r0,#"F"                 ; Is it a single file ?
      [ version >= 148                  ; Also disable if not interactive.
        MOVNE   R0,#&A1
        MOVNE   R1,#FileSwitchCMOS
        SWINE   XOS_Byte
        MOVVS   R2,#0
        ANDNE   R2,R2,#InteractiveCopyCMOSBit
        CMPNE   R2,#InteractiveCopyCMOSBit
      ]
        Pull    "r14"
        ADR     r1,userdata
        STR     r14,[r1]
        MOV     r14,#6
        STR     r14,[r1,#4]
        MOV     r2, #is_shaded
        STR     r2, [r1,#12]
        MOVNE   r2,#0
        STR     r2, [r1,#8]
        SWI     XWimp_SetIconState
        EXIT    VS
;	EXIT    NE			; NE state not held during 32bit SWI
	TEQ     r2,#0			; use r2 value to show if enabled
    	EXIT    EQ			; with EQ exit instead

        ; Get the access
        LDR     r0, sel_fileblock
        LDR     r5, [r0, #df_attr]

        MOV     r2,#is_inverted
        STR     r2,[r1,#12]
        MOV     r3,#1

        ; Set the owner bits of the string
        STR     r3, [r1,#4]
        TST     r5, #locked_attribute
        BL      set_access_icon
        EXIT    VS
        TST     r5, #read_attribute
        BL      set_access_icon
        EXIT    VS
        TST     r5, #write_attribute
        BL      set_access_icon
        EXIT    VS
        TST     r5, #public_read_attribute
        BL      set_access_icon
        EXIT    VS
        TST     r5, #public_write_attribute
        BL      set_access_icon
        EXIT    VS

      ]
        EXIT

      [ version >= 138
set_access_icon ROUT
        Push    "lr"
        MOVNE   r2, #is_inverted
        MOVEQ   r2, #0
        STR     r2, [r1,#8]
        SWI     XWimp_SetIconState
        EORVC   r2, r2,#is_inverted
        STRVC   r2, [r1,#8]
        ADDVC   r3, r3,#6
        STRVC   r3, [r1,#4]
        SWIVC   XWimp_SetIconState
        SUBVC   r3, r3,#5
        STRVC   r3, [r1,#4]
        Pull    "pc"
      ]

message_menuwarning_infobox     ROUT    ; NOENTRY
        LDR     r2, [r1, #ms_data+4]     ; x coord of sub menu
        LDR     r3, [r1, #ms_data+8]     ; y coord of sub menu
        LDR     r1, infobox_ptr
        SWI     XWimp_CreateWindow
        EXIT    VS
        MOV     r1, r0
        SWI     XWimp_CreateSubMenu
        EXIT    VS
        ADRL    r14, infoboxsubmenu
        STR     r14, h_menuwindow_loc
        STR     r1, [r14]
        EXIT

message_savedesktop_code        ROUT ; NOENTRY
        MOV     r2, r1
        LDR     r1, [r2, #ms_data]
        BL      savedisplay_intofilehandle
        MOVVS   r1, r2
        BVS     %FT90
        BL      saveapps_intofilehandle
        MOVVS   r1, r2
        BVS     %FT90
        EXIT

90
        ; Report what went wrong
        BL      LocalReportError

        ; Ack the message to indicate error
        LDR     r14, [r1, #ms_myref]
        STR     r14, [r1, #ms_yourref]

        MOV     r0, #User_Message_Acknowledge
        LDR     r2, [r1, #ms_taskhandle]
        SWI     XWimp_SendMessage
        EXIT

message_menusdeleted_code ROUT ; NOENTRY
        BL      NobbleMenuSelection
        EXIT

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; event_user_message_acknowledge
; ==============================

; In    r1 -> wimp_eventstr
;             [r1, #0]     block size
;             [r1, #12]    your ref
;             [r1, #16]    message action
;             [r1, #20...] message data

; Out   all regs may be corrupted - going back to PollWimp

event_user_message_acknowledge Entry

        LDR     r0, [r1, #ms_action]
 [ debugtask
 DREG r0, "Got UserMessageAck "
 ]
        ; If datasave bounced, discard the buffer we should have claimed
        LDR     r14, =Message_DataSave
        CMP     r14, r0
        BLEQ    discard_savedisplaybuffer
        EXIT    VS

        LDR     r14, =Message_DataOpen
        CMP     r14, r0
 [ debugtask
 BEQ %FT00
 DLINE "Ignored UserMessageAck"
00
 ]
        EXIT    NE

; .............................................................................
; DataOpen bounced; so I get to run/open the file/directory

; In    requires at least dirtoclose set up
;       sel_dir, windowhandle, setforfilesystem are
;       needed for opening subdirectories

 [ debugtask
 DLINE "No one was interested in DataOpen, so I get to run/open the file/dir"
 ]
        LDR     r0, [r1, #msDataTransfer_filetype]
        CMP     r0, #filetype_directory
        BEQ     %FA20                   ; [open directory]

        CMP     r0, #filetype_application
        BNE     %FA10                   ; [run file]

; Run application

        ADD     r1, r1, #msDataTransfer_filename
        ADR     r2, plingrun            ; Do !Run file, save FileSwitch work
        BL      AppendLeafnameToDirname
        SUB     r1, r1, #msDataTransfer_filename ; And drop into ...


10 ; Run file as new task

 [ False ; >>>a816<<<
        LDR     r14, =&FFE              ; Make Command files into Obey
        CMP     r0, r14
        BEQ     %FT15
 ]

        ; If the type is &FFF (text) then use "@@RunType_FFF" as it may not be a real text file
        LDR     r14, =&FFF
        CMP     r0, r14
        ADDEQ   r0, r1, #msDataTransfer_filename - 16
        ADDNE   r0, r1, #msDataTransfer_filename - 4
        LDREQ   r14, textrunmess
        LDRNE   r14, runmess
        STR     r14, [r0]
        LDREQ   r14, textrunmess+4
        STREQ   r14, [r0,#4]
        LDREQ   r14, textrunmess+8
        STREQ   r14, [r0,#8]
        LDREQ   r14, textrunmess+12
        STREQ   r14, [r0,#12]

 [ debugtask
 DSTRING r0, "XWimp_StartTask "
 ]
        SWI     XWimp_StartTask
        B       %FA50

 [ version >= 130
textrunmess DCB "@@RunType_FFF    "          ; Picked up as 4 words
 ASSERT (textrunmess - Module_BaseAddr) :AND: 3 = 0
 ]
runmess DCB     "Run "                  ; Picked up as word
 ASSERT (runmess - Module_BaseAddr) :AND: 3 = 0


 [ False ; >>>a816<<<
15      ADD     r0, r1, #msDataTransfer_filename - 5
        LDRB    r14, obeymess1
        STRB    r14, [r0, #0]
        LDR     r14, obeymess2
        STR     r14, [r0, #1]
 [ debugtask
 DSTRING r0, "XWimp_StartTask "
 ]
        SWI     XWimp_StartTask
        B       %FA50

obeymess2       DCB     "bey "          ; Picked up as word
 ASSERT (obeymess2 - Module_BaseAddr) :AND: 3 = 0
obeymess1       DCB     "O"
                ALIGN
 ]


; Open directory (must be of form fsprefix:dir or fsprefix:dir.dir.dir etc.,
;                 and never fsprefix: so we can find a leafname for title)

20      ADD     r1, r1, #msDataTransfer_filename ; r1 -> full dirname
 [ debugtask
 DSTRING r1, "Opening dir "
 ]
        ADR     r0, TempString          ; We will abuse userdata in OpenDir
        BL      SGetString
        EXIT    VS

        LDR     r0, windowhandle
 [ debugtask
        DREG    r0, "window handle = "
 ]
        CMP     r0, #0
        BNE     %FT25                   ; If windowhandle = 0 (eg. from Filer_Run) then
        MOV     r8, #0                  ;   use default viewmode
        BL      OpenDir_Root            ;   open root filer viewer
        EXIT
25
        BL      GetWindowCoords         ; r3,r4 := abscoords of window top left
        EXIT    VS

        CMP     r0, #-2                 ; during an adjust drag to the iconbar the parent has already gone
        LDREQ   r3, initwindowx         ;   and GetWindowCoords just reads where the iconbar is which isn't
        LDREQ   r4, initwindowy         ;   much use,so instead fake r3 and r4

        LDR     r14, dirtoclose         ; open some distance from parent
        TEQ     r14, #Nowt              ; if not closing parent
        LDREQ   r14, sel_dir            ; try to open at a different x pos
        LDREQB  r0, [r14, #d_nchildren]
        ANDEQ   r0, r0, #7              ; Note order; always add 1!
        ADDEQ   r0, r0, #1
        STREQB  r0, [r14, #d_nchildren]
        LDREQ   r14, dvoffsetx
;        MULEQ   r14, r0, r14
;        ADDEQ   r3, r3, r14
        MLAEQ   r3, r0, r14, r3
        LDREQ   r14, dvoffsety
        ADDEQ   r4, r4, r14

 [ :LNOT: centralwrap
; Wrap position to keep on screen

        Push    "x1, y1"
        LDR     x1, initwindowwidth
        LDR     y1, initwindowheight

        LDR     r2, xwindsize
        SUB     r2, r2, #vscroll_width  ; Correct for v. scroll bar
        CMP     r3, #0                  ; if xpos<0 then xpos+:=ww
        ADDLT   r3, r3, x1
        ADD     r14, r3, x1             ; if xpos+ww>sl then xpos:=xpos+ww-sl
 [ debugredraw
 DREG r2, "xwindsize = ",cc,Integer
 DREG r14,", xpos+ww = ",,Integer
 ]
        CMP     r14, r2
        SUBGT   r3, r14, r2

        LDR     r2, ywindsize
        SUB     r2, r2, #title_height   ; Correct for title bar
        SUB     r14, r4, y1             ; Note: windsize +ve
 [ debugredraw
 DREG r2, "ywindsize = ",cc,Integer
 DREG r14,", ypos-wh = ",,Integer
 ]
        CMP     r14, #iconbar_height    ; if ypos-wh<96 then ypos+:=wh
        ADDLT   r4, r4, y1
        CMP     r4, r2                  ; if ypos>sl then ypos:=ypos+wh-sl
        SUBGT   r4, r4, r2
        ADDGT   r4, r4, y1
        Pull    "x1, y1"
 ]

        LDR     r1, TempString
 [ centralwrap
        MOV     r8, #0          ; Use default viewmode
        LDR     r9, dvoffsetx
        MOV     r9, r9, LSL #3  ; Unwrap by 8 shifts
        BL      WrappingOpenDir
 |
        BL      OpenDir
 ]


50      BLVC    CloseInitiatingDir      ; Common exit
        EXIT

        LTORG

plingrun
        DCB     "!Run", 0
        ALIGN
access_string   DCB     "LWR/wr ",0
size_string     DCB     "8888",0,0,0,0
length_string   DCB     "8888M ",0,0
applic_string   DCB     "XXXXXXXX ",0
char_string     DCB     "M ",0,0,0
possdatestring  DCB     "88:88:88 30 Mar 1999",0

        ALIGN

        MACRO
        CacheLength     $type
        ADR     R1,$type._string
        MOV     R0,#1
        MOV     R2,#0
        SWI     XWimp_TextOp
        STR     R0,$type._length
        MEND

message_fontchanged_code

        ; Get rid of the renaming writeable icon (if it exists)
        BL remove_rename_writeable

        ; need to update _length variables
        BL      cache_lengths
        ; need to invalidate all dirviewer smi_widths
        LDR     r4,ViewerList
;        MOV     R3,#db_fpr_reshape
        MOV     R14,#0
msg_fontch_loop
        CMP     r4,#Nowt
        BEQ     msg_fontch_end
        STR     R14,[R4,#d_smiwidth]
        STR     R14,[R4,#d_lgiwidth]
;        STRB    R3,[R4,#d_filesperrow]
        LDR     R4,[R4,#d_link]
        B       msg_fontch_loop
msg_fontch_end
        EXIT

cache_lengths
        Push    "R0-R2,lr"
        CacheLength     access
        CacheLength     size
        CacheLength     length                  ; bah!!
        CacheLength     applic
        CacheLength     char

        LDR     R2,mydateformatlen
        MOV     R0,#1
        ADR     R1,possdatestring
        SWI     XWimp_TextOp
        STR     R0,date_length

        LDR     r2, applic_length

        ADRL    r1, dirstring
        BL      cache_length_lookup
        CMP     r2, r0
        MOVCC   r2, r0

        ADRL    r1, applicstring
        BL      cache_length_lookup
        CMP     r2, r0
        STRCC   r0, applic_length
        STRCS   r2, applic_length

        Pull    "R0-R2,PC"

cache_length_lookup
        Push    "r1-r3,lr"

        ADR     r0, messagetrans_struct
        MOV     r2, #0
        SWI     XMessageTrans_Lookup
        MOVVC   r1, r2
        MOV     r0, #1
        MOV     r2, #0
        SWI     XWimp_TextOp

        Pull    "r1-r3,pc"


; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; message_claimentity
;
; Message_ClaimEntity received when another task claims the caret.
;
;  In: r1 -> wimp message block
;
; Out: registers may be corrupted - return to Wimp_Poll.

message_claim_entity ;Entry

        LDR     r0, [r1, #4]              ; load sender's task handle
        LDR     r2, mytaskhandle          ; load my task handle
        CMP     r0, r2                    ; are they the same?
        BLNE    remove_rename_writeable   ; if different, remove the writeable icon
        EXIT


; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; message_filerdevicepath
;
; Start a copy of previously selected files.
;
;  In: r1 -> wimp message block.
;
; Out: registers may be corrupted - return to Wimp_Poll.

message_filerdevicepath

        ; Is there a previous selection to deal with?
        LDR     r0, was_seldir
        CMP     r0, #0
        EXIT    EQ

        ; Copy the device path into dirnamebuffer
        ADD     r2, r1, #20
        MOV     r8, r2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        BL      strcpy_excludingspaces
        LDR     r4, was_seldir
        BL      InitWasSelection

        ; Do we single task or use FilerAction ?
        MOV     R0,#&A1
        MOV     R1,#FileSwitchCMOS
        SWI     XOS_Byte
        MOVVS   R2,#0
        TST     R2,#InteractiveCopyCMOSBit
        MOVNE   r0,#0
        MOVEQ   r0, #Filer_Action_Memory_CopyRename
        BLEQ    StartActionWindow
        BVS     %FT02
        TEQ     r0, #0
        BEQ     %FT02

; Filer Action Copy/Move
        LDR     r1, sel_dirname
        SWI     XFilerAction_SendSelectedDirectory
        BVS     %FT02
        BL      SendWasSelectedFiles
        BVS     %FT02

        LDR     r1, [r4, #d_dirnamestore]
        ;ADR     r1, dirnamebuffer         ; dirname buffer contains destination directory
        LDR     r1, dirnamebuffer
        BL      strlen                    ; find length
        ADD     r4, r3, #1
        MOV     r3, r1
        LDRB    r1, initshiftstate        ; do we copy or move?
        TEQ     r1, #&FF
        MOVNE   r1, #Action_Copying
        MOVEQ   r1, #Action_Moving

        ; Check if last drag was from the copy box.
        LDRB    r7, last_drag_type
        CMP     r7, #drag_copysave
        BNE     %FT01

        ; Last drag was from copybox - do a CopyLocal and change the filename
        LDR     r1, csavebox_text
        BL      FindLeafname              ; Find the leafname
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
        BL      AppendLeafnameToDirname   ; Add it to the dirname
        BL      strlen                    ; find the new length
        ADD     r4, r3, #1
        MOV     r3, r1                    ; New string length
        MOV     r1, #Action_CopyLocal     ; Do a copy local

01      ; Start the operation
        [ OptionsAreInRAM
        LDRB    r2, fileraction_options
        |
        BL      ExtractCMOSOptions        ; Put options into r2
        ]
        SWI     XFilerAction_SendStartOperation
        B       %FT49

star_copy_prefix_ib
        DCB     "Copy ", 0

star_copy_postfix_ib
        DCB     " ~P~QR~T~LF", 0         ; Don't alter A(ccess),S(tamp)
aspace_ib
        DCB     space, 0

; Single tasking copy/move
02
        CLRV
        LDRB    r14, initshiftstate
        TEQ     r14, #&FF

        ADRNE   r0, copy_commandtitle_ib
        ADRNE   r6, copydrag_postfix_ib
        ADREQ   r0, move_commandtitle_ib
        ADREQ   r6, movedrag_postfix_ib

        BL      messagetrans_lookup      ; SMC: look up command window title
        SWI     XWimp_CommandWindow
        EXIT    VS

        MOV     r7, #0                   ; Close command window with prompt

05      CMP     r5, #Nowt
        BEQ     %FT48                    ; [finished]

        ADR     r1, userdata
        ADR     r2, star_copy_prefix_ib  ; 'copy src.leaf dst.leaf opt1 opt2'
        BL      strcpy
        LDR     r2, sel_dirname          ; +srcdirname
        BL      strcat_excludingspaces
        LDR     r2, sel_leafname         ; +leafname
        BL      AppendLeafnameToDirname
        ADR     r2, aspace_ib
        BL      strcat
        ;ADR     r2, dirnamebuffer
        LDR     r2, dirnamebuffer
        BL      strcat_excludingspaces

        ; Check if last drag was from a save box
        LDRB    r2, last_drag_type
        CMP     r2, #drag_copysave
        BNE     %FT08

        ; Copy was from save box - read new filename from that
        Push    "r1"
        LDR     r1, csavebox_text
        BL      FindLeafname              ; Find the leafname
        Pull    "r1"
        BL      AppendLeafnameToDirname
        B       %FT10

08
        LDR     r2, sel_leafname         ; +leafname
        BL      AppendLeafnameToDirname

10
        ADR     r2, star_copy_postfix_ib ; +static options
        BL      strcat
        MOV     r2, r6                   ; +dynamic options
        BL      strcat
        BL      AppendConfirmVerboseForceAndNewer
        ADR     r0, userdata
        SWI     XOS_CLI                  ; Doing this in a box
        BVS     %FT45

        Push    r4                       ; Want to preserve dest dirviewer^
        BL      GetWasSelection
        Pull    r4
        B       %BT05

45      BL      LocalReportError         ; Prints the error; gives 'Press SPACE'
        MOV     r7, #-1                  ; Close command window without prompt

48      MOV     r0, r7                   ; 'Press SPACE' if command printed 'owt
        SWI     XWimp_CommandWindow      ; Or close window without prompt if err


; +++ Finish for FilerAction and single tasking

49
        MOV     r2, #Nowt
        BL      ClearAllWasSelections

90
        BL      CloseInitiatingDir
        EXIT


copy_commandtitle_ib
        DCB     "TCopy", 0

move_commandtitle_ib
        DCB     "TMove", 0

copydrag_postfix_ib
        DCB     "~D", 0                  ; ~D(elete)

movedrag_postfix_ib
        DCB     "D", 0                   ; D(elete)

        END
@


4.10
log
@Adjust dragging to drive icons no longer attempts to reference a deleted dir viewer.
In the case of adjust dragging from one dir viewer to another it is safe to call CloseInitiatingDir because the operation is handled entirely internally. In the case of adjust dragging to a drive icon the dir viewer must be kept until after the next wimp poll so that the selection can be retrieved and the copy operation started.
DelViews.s: made the stack frame a bit more reasonably sized
GoFiler.s: removed some unused messages from the message list
MsgsIn.s: removed the corresponding dead switch

Version 2.29. Tagged as 'Filer-2_29'
@
text
@d628 2
a629 2
        ANDNE   R2,R2,#4
        CMPNE   R2,#4
d1077 1
a1077 1
        TST     R2,#4
@


4.9
log
@Fix for 'set type' writeable icon being out of step with the disc.
Adjust clicking would recreate the menu immediately after the operation but before the next wimp poll when the directory gets recached, so the first entry in the cache is manually fixed up so the recreated menu is right (the files all get refreshed later anyway).
Collapsed switch 'Fix003', after 21 years of testing it's safe to assume it's good.
Reinstated ExtractCMOSOptions conditional on not OptionsAreInRAM so that combination still assembles.
Optimise MUL/ADD into MLA where possible, and set 'S' flag on ALU operations when followed by TEQ#0.
Tested with & without filer action running, fixes ticket 254.

Version 2.26. Tagged as 'Filer-2_26'
@
text
@a67 7
 [ version >= 117
 |
        DCD     Message_DataSaveAck
        B       message_datasaveack_code
        DCD     Message_RAMFetch
        B       message_ramfetch_code
 ]
@


4.8
log
@Correct sprite name clamping while looking for sm!app
A previous fix in Filer-2_10 had changed the concatenation to be clamped at 10 letters so it doesn't overflow the buffer for long app names. However, having failed to find 'sm!app' it then just tried adding 2 to the string pointer therefore looking for a 10 letter sprite '!app'.
This is different behaviour to before Filer-2_10, which would have overrun thebuffer but at least looked for a full 12 letter name.
Optimised strncat a bit.
Put unused source file in the attic.
Trimmed some bug fix switches dating back to 1989.

Version 2.24. Tagged as 'Filer-2_24'
@
text
@d892 3
a894 2
        MULEQ   r14, r0, r14
        ADDEQ   r3, r3, r14
@


4.7
log
@  Add the ability to sort Filer objects in reverse order
Detail:
  It's been possible to sort Filer objects using various criteria for a long
  time but sorting objects in reverse order was not possible. This change aims
  to remedy that omission.
  The option 'Reverse sort' has been added to the 'Display' submenu of the
  Filer menu, allowing the sort order of individual directory viewers to be
  changed dynamically.
  The switch -ReverseSort has been added to the command Filer_OpenDir to allow
  it to open directories with the sort order reversed.
  The switch -ReverseSort has been added to the Filer_Layout command so that
  reverse sort order can be set as default for new directory viewers. The
  Filer_Layout command is also written to the FlrSetup file in Choices:Boot.
  Tasks by the Filer configure plug-in (which has been also updated to allow
  -ReverseSort).
Admin:
  Tested on Iyonix RO5.14


Version 2.22. Tagged as 'Filer-2_22'
@
text
@a625 2
is_selected     *       2_00000000001000000000000000000000
if_shaded       *       2_00000000010000000000000000000000
d643 1
a643 1
        MOV     r2, #if_shaded
d657 1
a657 1
        MOV     r2,#is_selected
d685 1
a685 1
        MOVNE   r2, #is_selected
d689 1
a689 1
        EORVC   r2, r2,#is_selected
@


4.6
log
@  Merged in changes from Castle
Detail:
  fix for Alt-Select filer renamimg intermittant failure.

  s.msgsin .. replaced EXIT NE after SWI. as NE state not held through 32bit SWI
  file access permissions sub menu window now initialises again
Admin:
  Untested

Version 2.17. Tagged as 'Filer-2_17'
@
text
@d621 1
a621 1
        ADR     r14, accesssubmenu
@


4.5
log
@Reception of message OpenDir was ignoring the flag bit which said whether
or not the pathname given in the block was canonicalised - RamFSFiler 0.38
relies on this to expand its root dir viewer.Fixed that.
Adjust dragging dirs to the iconbar was opening them very low on the
screen as GetWindowCoords was just reading the iconbar top left corner -
now a special case overrides GetWindowCoords so it opens in a more
sensible default place.

Version 2.07. Tagged as 'Filer-2_07'
@
text
@d651 3
a653 1
        EXIT    NE
@


4.4
log
@  The following were present in RISC OS 5.00/5.01:
  * "Directory" string removed from "New directory" dialogue box template.
    Unlike the version shipped in 5.00 and 5.01, this template file doesn't
    have its "Recurse" option button in the "Access details" dialogue box
    deselected.
  * When "New directory" dialogue box is opened, contents of the writable
    icon is now set to a null string, rather than the uninternationalised
    "Directory" that was used previously.
  * Uses OS_HeapSort32 instead of OS_HeapSort when the RMA is high.
  The following are new since then:
  * Fixed rubber dragboxes to use exclusive maximum coordinates, stops you
    dragging the box off the left hand side of the window.
  * Enabled SetDirectory option. Merged in 4.02's SetDirectoryComesFirst
    option, changed token in Messages file to read "Set work directory"
    instead of "Set directory" to match 4.02, and added the missing token
    MH?7? for interactive help.

Version 2.06. Tagged as 'Filer-2_06'
@
text
@d146 1
d148 2
d172 1
d178 2
d191 18
d463 4
a466 4
        TEQ	r0,#6			 ; is it 'Set directory' ?
	TEQNE	r0,#7			 ; or 'Open parent' ?
	EOREQ	r0,r0,#1		 ; swap them
	STREQ	r0,[r1]
d879 4
@


4.3
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 2.01. Tagged as 'Filer-2_01'
@
text
@d435 9
a443 1

d586 1
a586 1
newdirdefaultname   DCB "Directory",0
@


4.2
log
@Merged Ursula branch.
Moved to srccommit.

Version 1.96. Tagged as 'Filer-1_96'
@
text
@d28 1
a28 1
event_user_message      ENTRY
d127 1
a127 1
                
d142 2
a143 2
                
10      ; Normal opendir message code follows (ie. no forced update required)  
d145 1
a145 1
      
d151 1
a151 1
 
d186 1
a186 1
OpenDir_Root    ENTRY
d211 1
a211 1
OpenDir_At      ENTRY
d559 1
a559 1
        
d563 1
a563 1
        
d573 1
a573 1
        STR     r1, [r14]        
d576 1
a576 1
        
d578 1
a578 1
newdirdefaultname   DCB "Directory",0        
d722 1
a722 1
event_user_message_acknowledge ENTRY
d995 1
a995 1
 
d1000 1
a1000 1
; 
d1007 1
a1007 1
message_claim_entity ;ENTRY
d1015 1
a1015 1
    
d1032 1
a1032 1
        
d1039 2
a1040 2
        LDR     r4, was_seldir        
        BL      InitWasSelection       
d1061 2
a1062 2
        
        LDR     r1, [r4, #d_dirnamestore]        
d1072 1
a1072 1
        
d1087 1
a1087 1
        MOV     r1, #Action_CopyLocal     ; Do a copy local                
d1101 1
a1101 1
star_copy_postfix_ib                    
d1143 1
a1143 1
        
@


4.1
log
@Initial revision
@
text
@a27 1
 [ version >= 113
a29 1
      [ version >= 134
a36 1
      ]
d39 1
d43 1
d53 1
a88 1
 [ version >= 116
a90 1
 ]
d93 4
a97 28
 |
event_user_message ENTRY

        LDR     r0, [r1, #ms_action]
  [ debugtask
  DREG r0, "Got UserMessage "
  ]
        SUBS    r14, r0, #Message_FilerOpenDir
        BEQ     %FA20
        CMP     r14, #Message_FilerCloseDir-Message_FilerOpenDir
        BEQ     %FT30
        CMP     r14, #Message_FilerOpenDirAt-Message_FilerOpenDir
        BEQ     %FA25

        CMP     r0, #Message_DataSave
        BEQ     %FT50
        CMP     r0, #Message_DataSaveAck
        BEQ     %FT51
        CMP     r0, #Message_RAMFetch
        BEQ     %FT53
        CMP     r0, #Message_DataLoad
        BEQ     %FT60
        CMP     r0, #Message_DataLoadAck
        BEQ     %FT70

        LDR     r14, =Message_ModeChange
        CMP     r14, r0
        BEQ     %FT80
a98 5
  [ interactive_help
        LDR     r14, =Message_HelpRequest
        CMP     r14, r0
        BEQ     %FT86
  ]
a99 8
        CMP     r0, #Message_Quit
  [ debugtask
  BEQ %FT00
  DLINE "Ignored UserMessage"
00
  ]
        EXIT    NE
 ]
d102 1
a102 1
 [ version >= 113
a104 3
 |
        BL      FreeWorkspace
 ]
d107 1
a113 1
 [ version >= 113
d116 8
a123 14
  [ version < 139
        Push    "r1, r2"
        ADD     r1, r1, #ms_data + 8    ; Try to derive filesystem automaticlly
        MOV     r2, #0                  ; Allow funny terms
        MOV     r0, #FSControl_LookupFS
        SWI     XOS_FSControl
 [ debugtask
 DREG r1,"Initial set + filesystem "
 ]
        LDRVC   r1, [r2, #fscb_infoword]
        STRVC   r1, setplusfilesystem
        Pull    "r1, r2"
        EXIT    VS
  ]
d125 21
d151 1
a151 104
 |
 [ True
  [ version < 139
20      Push    "r1, r2"
        ADD     r1, r1, #ms_data + 8    ; Try to derive filesystem automaticlly
        MOV     r2, #0                  ; Allow funny terms
        MOV     r0, #FSControl_LookupFS
        SWI     XOS_FSControl
 [ debugtask
 DREG r1,"Initial set + filesystem "
 ]
        LDRVC   r1, [r2, #fscb_infoword]
        STRVC   r1, setplusfilesystem
        Pull    "r1, r2"
        EXIT    VS
  ]
 |
20
 ]
        wsaddr  r11, initwindowinfo
        LDMIA   r11, {r3, r4, x1, y1, scx, scy}
 [ :LNOT: centralwrap
 [ debugredraw
 DREG r3,"*** Open topleveldir at ",cc,Integer
 DREG r4,",",,Integer
 DREG x1,"window size is ",cc,Integer
 DREG y1,",",cc,Integer
 DREG scx,", offsets ",cc,Integer
 DREG scy,",",,Integer
 ]
; Wrap position to keep on screen

        LDR     r2, xwindsize
        SUB     r2, r2, #vscroll_width  ; Correct for v. scroll bar
        CMP     r3, #0                  ; if xpos<0 then xpos+:=ww
        ADDLT   r3, r3, x1
        ADD     r14, r3, x1             ; if xpos+ww>sl then xpos:=xpos+ww-sl
 [ debugredraw
 DREG r2, "xwindsize = ",cc,Integer
 DREG r14,", xpos+ww = ",,Integer
 ]
        CMP     r14, r2
        SUBGT   r3, r14, r2

        LDR     r2, ywindsize
        SUB     r2, r2, #title_height   ; Correct for title bar
        SUB     r14, r4, y1             ; Note: windsize +ve
 [ debugredraw
 DREG r2, "ywindsize = ",cc,Integer
 DREG r14,", ypos-wh = ",,Integer
 ]
        CMP     r14, #iconbar_height    ; if ypos-wh<96 then ypos+:=wh
        ADDLT   r4, r4, y1
        CMP     r4, r2                  ; if ypos>sl then ypos:=ypos+wh-sl
        SUBGT   r4, r4, r2
        ADDGT   r4, r4, y1

        ADD     x1, r3, scx             ; Move place where next dirviewer comes
        ADD     y1, r4, scy             ; Usually -ve
        STR     x1, initwindowx
        STR     y1, initwindowy
 [ debugredraw
 DREG x1,"Writing back ",cc,Integer
 DREG y1,",",,Integer
 ]
 ]

 [ False
        LDR     r6,  [r1, #ms_data + 0]
        LDR     r14, [r1, #ms_data + 4]
        ORR     r6, r6, r14, LSL #8     ; r6 := merged set + filesystem
 [ debugtask
 DREG r6,"Initial set + filesystem "
 ]
        STR     r6, setplusfilesystem
 ]

        ADD     r2, r1, #ms_data + 8    ; r2 -> full dirname
        ADR     r1, dirnamebuffer
        BL      strcpy                  ; r1 -> full dirname, copied away
                                        ; including spaces
 [ False
 ADR r2, wally
 BL strcat
 ]
 [ centralwrap
        MOV     r8, #0                  ; Use default viewmode
        MOV     r9, r3                  ; Unwrap by position
        BL      WrappingOpenDir
        ADD     r3, r3, scx
        STR     r3, initwindowx
        ADD     r4, r4, scy
        STR     r4, initwindowy
 |
        BL      OpenDir
 ]
        EXIT

 [ False
wally
 DCB " (a500)", 0
 ALIGN
 ]
 ]
a165 1
 [ version >= 113
a166 14
 |
25
 ]
 [ version < 139
        Push    "r1, r2"
        ADD     r1, r1, #ms_data + 25   ; Try to derive filesystem automaticlly
        MOV     r2, #0                  ; Allow funny terms
        MOV     r0, #FSControl_LookupFS
        SWI     XOS_FSControl
        LDRVC   r1, [r2, #fscb_infoword]
        STRVC   r1, setplusfilesystem
        Pull    "r1, r2"
        EXIT    VS
 ]
d185 1
d190 2
a191 1
        ADR     r1, dirnamebuffer
d216 2
a217 1
        ADR     r1, dirnamebuffer
d223 1
a231 1
 [ version >= 113
d233 1
a233 3
 |
30
 ]
d239 1
a242 1
 [ version >=113
d244 1
a244 3
 |
50
 ]
d248 1
d260 1
d264 1
d290 1
d299 1
d307 1
d347 1
d354 1
d373 5
d381 1
d385 1
d394 2
a395 1
        ADR     r1, dirnamebuffer
d404 2
a405 1
        ADR     r2, dirnamebuffer
d416 2
a417 1
        ADR     r1, dirnamebuffer
d462 2
a463 1
        ADR     r2, dirnamebuffer
d507 2
d523 6
d530 1
d549 31
d933 4
d995 205
@


4.1.4.1
log
@Alt + Select renaming added
@
text
@a94 4
        [ version >=186
        DCD     Message_ClaimEntity
        B       message_claim_entity
        ]
a1077 17
 
 [ version >=186
message_claim_entity ;ENTRY

        LDR     r0, [r1, #4]              ; load sender's task handle
        LDR     r2, mytaskhandle          ; load my task handle
        CMP     r0, r2                    ; are they the same?
        BEQ     %FT10
        BL      remove_rename_writeable   ; if different, remove the writeable icon

        ;MOV      r0, #7
        ;SWI      OS_WriteC

10
        EXIT

 ]
@


4.1.4.2
log
@A few changes to Alt+Select renaming
@
text
@a1023 6

        [ version >=186
        ; Get rid of the renaming writeable icon (if it exists)
        BL remove_rename_writeable
        ]

@


4.1.4.3
log
@Long filename support and SaveAs style new directory creation
@
text
@a637 2
        CMP     r2, #menuwindow_newdir
        BEQ     message_menuwarning_newdir
a670 32
message_menuwarning_newdir    ROUT    ; NOENTRY
        LDR     r4, [r1, #ms_data+4]     ; x coord of sub menu
        LDR     r3, [r1, #ms_data+8]     ; y coord of sub menu

newdirboxiconname_offset *       w_icons + i_size*2 + i_data

        ;ADR     r0, newdirdefault
        ;LDR     r1, newdirbox_ptr
        ;ADD     r1, r1, #newdirboxiconname_offset
        ;BL      strcpy
        
        
        LDR     r1, newdirbox_ptr
        SWI     XWimp_CreateWindow
        EXIT    VS
        MOV     r1, r0
        MOV     r2, r4
        SWI     XWimp_CreateSubMenu
        EXIT    VS
        ADRL    r14, newdirsubmenu
        STR     r14, h_menuwindow_loc
        STR     r1, [r14]
        
        LDR     r1, newdirbox_text
        ADR     r2, newdirdefaultname
        BL      strcpy                   ; Default dir name

        EXIT
        
newdirdefaultsprite DCB "directory",0
newdirdefaultname   DCB "Directory",0        

d1089 1
d1095 7
a1101 1
        BLNE    remove_rename_writeable   ; if different, remove the writeable icon
d1104 1
a1104 1

@


4.1.4.4
log
@Added code to enable files to be copied to icon bar device icons
@
text
@d95 1
d98 1
a98 2
        DCD     Message_FilerDevicePath
        B       message_filerdevicepath
a683 3
        LDR     r1, newdirbox_text
        ADR     r2, newdirdefaultname
        BL      strcpy                   ; Default dir name
d694 5
a698 1
        STR     r1, [r14]        
a1122 11

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; message_claimentity
; 
; Message_ClaimEntity received when another task claims the caret.
;
;  In: r1 -> wimp message block
;
; Out: registers may be corrupted - return to Wimp_Poll.

a1130 173
    
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; message_filerdevicepath
;
; Start a copy of previously selected files.
;
;  In: r1 -> wimp message block.
;
; Out: registers may be corrupted - return to Wimp_Poll.
;
; dirnamebuffer

message_filerdevicepath

        ; Is there a previous selection to deal with?
        LDR     r0, was_seldir
        CMP     r0, #0
        EXIT    EQ
        
        ; Copy the device path into dirnamebuffer
        ADD     r2, r1, #20
        MOV     r8, r2
        ADR     r1, dirnamebuffer
        BL      strcpy_excludingspaces
        LDR     r4, was_seldir        
        BL      InitWasSelection       

        ; Do we single task or use FilerAction ?
        MOV     R0,#&A1
        MOV     R1,#FileSwitchCMOS
        SWI     XOS_Byte
        MOVVS   R2,#0
        TST     R2,#4
        MOVNE   r0,#0
        MOVEQ   r0, #Filer_Action_Memory_CopyRename
        BLEQ    StartActionWindow
        BVS     %FT02
        TEQ     r0, #0
        BEQ     %FT02

; Filer Action Copy/Move
        LDR     r1, sel_dirname
        SWI     XFilerAction_SendSelectedDirectory
        BVS     %FT02
        BL      SendWasSelectedFiles
        BVS     %FT02
        
        LDR     r1, [r4, #d_dirnamestore]        
        ADR     r1, dirnamebuffer         ; dirname buffer contains destination directory
        BL      strlen                    ; find length
        ADD     r4, r3, #1
        MOV     r3, r1
        LDRB    r1, initshiftstate        ; do we copy or move?
        TEQ     r1, #&FF
        MOVNE   r1, #Action_Copying
        MOVEQ   r1, #Action_Moving
        
        ; Check if last drag was from the copy box.
        LDRB    r7, last_drag_type
        CMP     r7, #drag_copysave
        BNE     %FT01

        ; Last drag was from copybox - do a CopyLocal and change the filename
        LDR     r1, csavebox_text
        BL      FindLeafname              ; Find the leafname
        ADR     r1, dirnamebuffer
        BL      AppendLeafnameToDirname   ; Add it to the dirname
        BL      strlen                    ; find the new length
        ADD     r4, r3, #1
        MOV     r3, r1                    ; New string length
        MOV     r1, #Action_CopyLocal     ; Do a copy local                

01      ; Start the operation
        BL      ExtractCMOSOptions        ; Put options into r2
        SWI     XFilerAction_SendStartOperation
        B       %FT49

star_copy_prefix_ib
        DCB     "Copy ", 0

star_copy_postfix_ib                    
        DCB     " ~P~QR~T~LF", 0         ; Don't alter A(ccess),S(tamp)
aspace_ib
        DCB     space, 0

; Single tasking copy/move
02
        CLRV
        LDRB    r14, initshiftstate
        TEQ     r14, #&FF

        ADRNE   r0, copy_commandtitle_ib
        ADRNE   r6, copydrag_postfix_ib
        ADREQ   r0, move_commandtitle_ib
        ADREQ   r6, movedrag_postfix_ib

        BL      messagetrans_lookup      ; SMC: look up command window title
        SWI     XWimp_CommandWindow
        EXIT    VS

        MOV     r7, #0                   ; Close command window with prompt

05      CMP     r5, #Nowt
        BEQ     %FT48                    ; [finished]

        ADR     r1, userdata
        ADR     r2, star_copy_prefix_ib  ; 'copy src.leaf dst.leaf opt1 opt2'
        BL      strcpy
        LDR     r2, sel_dirname          ; +srcdirname
        BL      strcat_excludingspaces
        LDR     r2, sel_leafname         ; +leafname
        BL      AppendLeafnameToDirname
        ADR     r2, aspace_ib
        BL      strcat
        ADR     r2, dirnamebuffer
        BL      strcat_excludingspaces

        ; Check if last drag was from a save box
        LDRB    r2, last_drag_type
        CMP     r2, #drag_copysave
        BNE     %FT08
        
        ; Copy was from save box - read new filename from that
        Push    "r1"
        LDR     r1, csavebox_text
        BL      FindLeafname              ; Find the leafname
        Pull    "r1"
        BL      AppendLeafnameToDirname
        B       %FT10

08
        LDR     r2, sel_leafname         ; +leafname
        BL      AppendLeafnameToDirname

10
        ADR     r2, star_copy_postfix_ib ; +static options
        BL      strcat
        MOV     r2, r6                   ; +dynamic options
        BL      strcat
        BL      AppendConfirmVerboseForceAndNewer
        ADR     r0, userdata
        SWI     XOS_CLI                  ; Doing this in a box
        BVS     %FT45

        Push    r4                       ; Want to preserve dest dirviewer^
        BL      GetWasSelection
        Pull    r4
        B       %BT05

45      BL      LocalReportError         ; Prints the error; gives 'Press SPACE'
        MOV     r7, #-1                  ; Close command window without prompt

48      MOV     r0, r7                   ; 'Press SPACE' if command printed 'owt
        SWI     XWimp_CommandWindow      ; Or close window without prompt if err


; +++ Finish for FilerAction and single tasking

49
        MOV     r2, #Nowt
        BL      ClearAllWasSelections

90
        BL      CloseInitiatingDir
        EXIT


copy_commandtitle_ib
        DCB     "TCopy", 0

move_commandtitle_ib
        DCB     "TMove", 0
a1131 8
copydrag_postfix_ib
        DCB     "~D", 0                  ; ~D(elete)

movedrag_postfix_ib
        DCB     "D", 0                   ; D(elete)

        ALIGN
rmlcr   DCB 10
@


4.1.4.5
log
@Add new options to Options menu, plus fixed bugs
@
text
@a1214 3
        [ OptionsAreInRAM
        LDR     r2, fileraction_options
        |
a1215 1
        ]
d1320 3
@


4.1.4.6
log
@Fixed bug with system font in Filer windows, plus redraw of highlighted icons.
@
text
@d260 1
a260 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
d338 1
a338 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
d363 1
a363 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
a496 1
newdirectory_help_tag_prefix    DCB     "Newdirectory_Help_",0
a514 5

        TEQ     r14, #menuwindow_newdir
        ADREQ   r2, newdirectory_help_tag_prefix
        BEQ     %FT05

a517 1

a520 1

d529 1
a529 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
d538 1
a538 2
        ;ADR     r2, dirnamebuffer
        LDR     r2, dirnamebuffer
d549 1
a549 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
d594 1
a594 2
        ;ADR     r2, dirnamebuffer
        LDR     r2, dirnamebuffer
d1058 1
d1061 1
d1151 2
d1164 1
a1164 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
d1190 1
a1190 2
        ;ADR     r1, dirnamebuffer         ; dirname buffer contains destination directory
        LDR     r1, dirnamebuffer
d1207 1
a1207 2
        ;ADR     r1, dirnamebuffer
        LDR     r1, dirnamebuffer
d1260 1
a1260 2
        ;ADR     r2, dirnamebuffer
        LDR     r2, dirnamebuffer
@


4.1.4.7
log
@A *Filer_Layout command now replaces CMOS setting of the display options.
Fixed bug which meant dirviews weren't sorted if they had >256 entries.
Increased dirnamebuffer to 2K to cope with long pathname renames.
@
text
@d1230 1
a1230 1
        LDRB    r2, fileraction_options
@


4.1.4.8
log
@New viewers are now opened at default width of four colums, where possible.
Addition to Message_FilerOpenDir to allow the forced update of all dir viewers
bu the FilrSetup application.
Bug fix: Adjust clicks on New directory OK icon now keep the menu structure up.
Bug fix: Adjust drags from Filer windows close the initiating dir viewer.
@
text
@d28 1
d31 1
d39 1
a41 1

a44 1

a53 1

d89 1
d92 1
d100 2
d103 31
d135 8
d145 1
a145 1

d148 3
a152 1

d159 1
d162 15
a176 30
      [ {TRUE}
        ; If filesystem number is -1 and first word of dir name is &00000000, we
        ; force an update of all open dirviewers.
        LDR     r0, [r1, #ms_data+0]
        CMP     r0, #-1
        LDREQ   r0, [r1, #ms_data+8]
        CMPEQ   r0, #0
        BNE     %FT10

        ; Get rid of the renaming writeable icon (if it exists)
        BL      remove_rename_writeable
                
        ; Loop though all dir viewers force them to reopen.
        LDR     r4, ViewerList
02      CMP     r4, #Nowt
        EXIT    EQ
      [ centralwrap
        MOV     r0, #db_fpr_reshape     ; A filesperrow to cause a reshape
      |
        MOV     r0, #0
      ]
        STRB    r0, [r4, #d_filesperrow]
        InvSmiWidth r4
        BL      ForceReopen
        LDR     r4, [r4, #d_link]
        B       %BT02
                
10      ; Normal opendir message code follows (ie. no forced update required)  
      ]
      
d182 105
a286 1
 
d301 1
d303 14
a334 1

a371 1

d380 1
d382 3
a384 1

a389 1

d393 1
d395 3
a397 1

a400 1

a411 1

a414 1

a439 1

a447 1

a454 1

a492 1

@


4.1.4.9
log
@Fixed bug which displayed wrong icon in file info window for DEADDEAD files.
@
text
@a522 3
    [ {TRUE}
        Push    "r3"
        LDR     r3, sel_fileblock
a523 4
        Pull    "r3"
    |
        BL      FiletypeToSpritename
    ]
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
