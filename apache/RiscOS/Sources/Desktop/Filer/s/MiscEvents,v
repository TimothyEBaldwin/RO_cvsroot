head	4.8;
access;
symbols
	Filer-2_43:4.8
	Filer-2_42:4.8
	Filer-2_41:4.8
	Filer-2_40:4.8
	Filer-2_39:4.8
	Filer-2_38:4.8
	Filer-2_37:4.8
	Filer-2_36:4.8
	Filer-2_35:4.8
	Filer-2_34:4.8
	Filer-2_33:4.8
	Filer-2_32:4.8
	Filer-2_31:4.8
	Filer-2_30:4.8
	Filer-2_29:4.7
	Filer-2_28:4.7
	Filer-2_27:4.7
	Filer-2_26:4.7
	Filer-2_25:4.7
	Filer-2_24:4.7
	Filer-2_23:4.7
	Filer-2_22:4.7
	Filer-2_21:4.7
	Filer-2_20:4.7
	Filer-2_19:4.7
	Filer-2_18:4.7
	Filer-2_17:4.7
	Filer-2_16:4.6
	Filer-2_15:4.6
	Filer-2_14:4.6
	Filer-2_13:4.6
	Filer-2_12:4.6
	Filer-2_11:4.6
	Filer-2_10:4.6
	Filer-2_09:4.6
	RO_5_07:4.6
	Filer-2_08:4.6
	Filer-2_07:4.5
	Filer-2_06:4.4
	Filer-2_05:4.4
	Filer-2_04:4.4
	Filer-2_03:4.4
	Filer-2_02:4.4
	Filer-2_01:4.4
	Filer-2_00:4.3
	Filer-1_99:4.3
	Filer-1_98:4.3
	Filer-1_97:4.2
	Ursula_merge:4.1.4.5
	Filer-1_96:4.2
	Filer-1_95:4.1.4.5
	nturton_Filer-1_85:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.5
	Ursula_RiscPC:4.1.4.5.0.2
	rthornb_UrsulaBuild-19Aug1998:4.1.4.5
	UrsulaBuild_FinalSoftload:4.1.4.5
	rthornb_UrsulaBuild-12Aug1998:4.1.4.5
	aglover_UrsulaBuild-05Aug1998:4.1.4.5
	rthornb_UrsulaBuild-29Jul1998:4.1.4.5
	rthornb_UrsulaBuild-22Jul1998:4.1.4.5
	rleggett_Filer-1_94:4.1.4.5
	rthornb_UrsulaBuild-15Jul1998:4.1.4.5
	rthornb_UrsulaBuild-07Jul1998:4.1.4.5
	rthornb_UrsulaBuild-17Jun1998:4.1.4.5
	rthornb_UrsulaBuild-03Jun1998:4.1.4.5
	rthornb_UrsulaBuild-27May1998:4.1.4.5
	rleggett_Filer-1_93:4.1.4.5
	rthornb_UrsulaBuild-21May1998:4.1.4.5
	rthornb_UrsulaBuild_01May1998:4.1.4.5
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.8
date	2012.05.07.21.33.46;	author bavison;	state Exp;
branches;
next	4.7;
commitid	ucGU0rswOADBZP3w;

4.7
date	2008.10.04.18.41.11;	author bavison;	state Exp;
branches;
next	4.6;

4.6
date	2003.02.04.14.30.59;	author bavison;	state Exp;
branches;
next	4.5;

4.5
date	2003.01.14.00.31.06;	author rsprowson;	state Exp;
branches;
next	4.4;

4.4
date	2001.03.16.17.09.22;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	2000.05.31.11.43.29;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.08.17.11.56.32;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.24;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.24;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.27.23;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.05.27.11.13.26;	author rleggett;	state Exp;
branches;
next	4.1.4.2;

4.1.4.2
date	97.05.28.08.44.04;	author rleggett;	state Exp;
branches;
next	4.1.4.3;

4.1.4.3
date	97.08.27.09.08.59;	author rleggett;	state Exp;
branches;
next	4.1.4.4;

4.1.4.4
date	97.10.21.09.38.28;	author rleggett;	state Exp;
branches;
next	4.1.4.5;

4.1.4.5
date	98.04.15.11.27.42;	author rleggett;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.16.38;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.16.05;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.8
log
@  Keyboard shortcuts in the Filer
Detail:
  Tab - focus to next window
  Shift-Tab - focus to previous window
  Backspace - open parent
  ^W - Set working directory
  ^F - Change display format
  ^S - Change sort order
  ^F2 - Close current window and move focus
  ^A - Select all
  ^Z/Esc - clear selection
  Del - delete selected object(s)  (WARNING - No confirmation)
  Also installed error handler to help prevent it becoming the innocent victim
  of failures in callback handlers etc.
Admin:
  Changes received from Adrian Lees

Version 2.30. Tagged as 'Filer-2_30'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Out   much corruption
;
; This routine used only to send opendir and closedir requests to myself.
; Now it sends any messages queued to be sent whilst out of the desktop.
;

SendDirRequestsToMyself Entry "r10"

        SUB     sp, sp, #256

10      LDR     r10, DirRequestList      ; Reload from head each time
        TEQ     r10, #Nowt
        BEQ     %FT90                    ; [finished]

        LDR     r14, [r10, #dirreq_link]
        STR     r14, DirRequestList

        MOV     r14, #0                  ; yourref = 0 -> start of sequence
        STR     r14, [sp, #ms_yourref]
        STR     r14, [sp, #ms_data + 0]
        STR     r14, [sp, #ms_data + 4]
        LDRB    r14, [r10, #dirreq_reason]
        TEQ     r14, #drr_open
        BNE     %FT20

        ; Copy data for an open at request

        MOV     r14, #1
        STR     r14, [sp, #ms_data + 4]  ; no thank you to canonicalised paths
        LDR     r14, [r10, #dirreq_x0]
        STR     r14, [sp, #ms_data + 8]
        LDR     r14, [r10, #dirreq_y1]
        STR     r14, [sp, #ms_data + 12]
        LDR     r14, [r10, #dirreq_w]
        STR     r14, [sp, #ms_data + 16]
        LDR     r14, [r10, #dirreq_h]
        STR     r14, [sp, #ms_data + 20]
        LDRB    r14, [r10, #dirreq_viewmode]
        STRB    r14, [sp, #ms_data + 24]
        MOV     r0, #User_Message
        ADD     r1, sp, #ms_data + 25
        LDR     r14, =Message_FilerOpenDirAt
        B       %FT40

20      ;
        TEQ     r14, #drr_close
        BNE     %FT30

        ; Copy data for a closedir request

        LDR     r14, [r10, #dirreq_closeflags]
        STR     r14, [sp, #ms_data+4]
        ADD     r1, sp, #ms_data + 8
        LDR     r14, =Message_FilerCloseDir
        MOV     r0, #User_Message
        B       %FT40

30      ;
        TEQ     r14, #drr_run
        BNE     %FT35

        ; Copy data for a DataOpen request

        MOV     r14, #0
        STR     r14, [sp, #ms_yourref]
        STR     r14, [sp, #msDataTransfer_window]
        STR     r14, [sp, #msDataTransfer_icon]
        LDR     r14, xwindsize
        MOV     r14, r14, LSR #1
        STR     r14, [sp, #msDataTransfer_x]
        LDR     r14, ywindsize
        MOV     r14, r14, LSR #1
        STR     r14, [sp, #msDataTransfer_y]
        MOV     r14, #0
        STR     r14, [sp, #msDataTransfer_filesize]
        LDR     r14, [r10, #dirreq_filetype]
        STR     r14, [sp, #msDataTransfer_filetype]

        ; Initiated junk for DataOpen
        MOV     r14, #Nowt
        STR     r14, dirtoclose

        ; Establish common information
        MOV     r0, #User_Message_Recorded
        ADD     r1, sp, #msDataTransfer_filename
        LDR     r14, =Message_DataOpen
        B       %FT40

35
        ; only request left is filer_boot...

        ADD     r1, r10, #dirreq_dirname
        BL      SussPlingApplic_GivenName
        BLVS    LocalReportError
        CLRV
        B       %FT80

40      ; store the message number
        STR     r14, [sp, #ms_action]

        ADD     r2, r10, #dirreq_dirname
 [ debugtask
 DSTRING r2, ", dirname ",cc
 ]
        BL      strcpy_excludingspaces  ; stop on spaces so Neil can send wally
                                        ; dirnames at top level
        BL      strlen
        ADD     r1, r1, r3

        ADD     r1, r1, #3+1            ; round up to word size (remember null)
        BIC     r1, r1, #3
        SUB     r1, r1, sp
        STR     r1, [sp, #ms_size]

        MOV     r1, sp
        MOV     r2, #0                  ; Broadcast it
        MOV     r3, #0                  ; icon handle
 [ debugtask
 DREG r2,"Sending normal message from Filer to thandle/whandle ",,Word
 DREG r0,  "Event type "
 LDR r14, [r1, #ms_action]
 DREG r14, "Action "
 LDR r14, [r1, #ms_size]
 DREG r14, "Message size "
 ]
        SWI     XWimp_SendMessage

80
        MOV     r2, r10
        BL      SFreeArea               ; Accumulates V
        BVC     %BT10


90      ;
        ADRVC   r14, DirRequestList
        STRVC   r14, DirRequestEndLink
        ADD     sp, sp, #256
        EXIT

        LTORG

 [ version >= 113
;..............................................................................
;
; delete_closed_menu_window
;
; This routine deletes the closed menu window if it is created and closed.
;
; In - nothing
; Out - much corruption and menu window deleted if it was created
;        and closed.
;
delete_closed_menu_window       Entry   ,u_windowstate
        ; Do we think it created
        LDR     r0, h_menuwindow_loc
        TEQ     r0, #0
        EXIT    EQ                      ; Window is not created

        ; Get the menuwindow handle
        LDR     r14, [r0]

        ; Do we think it is open
        STR     r14, [sp, #u_handle]
        MOV     r1, sp
        SWI     XWimp_GetWindowState
        BVS     %FT10
        LDR     r14, [sp, #u_wflags]
        TST     r14, #ws_open
        EXIT    NE                      ; window is open

        ; Restore type_menuwindow to the location which was used for the handle
        LDR     r0, h_menuwindow_loc
        LDR     r14, type_menuwindow
        STR     r14, [r0]

        ; Make sure we think the menuwindow is deleted
        MOV     r14, #0
        STR     r14, h_menuwindow_loc

        ; Delete the window
        SWI     XWimp_DeleteWindow
        EXIT    VC
10      BL      LocalReportError
        EXIT
 ]

; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; event_null_reason
; =================

; In    nothing

; Out   no preservation necessary

        [ version >= 153

event_null_reason Entry

        [       debugsched
        DLINE   "Entered nullevent",cc
        ]

        ; Zero (most of) the poll word to catch upcalls during the recache
        LDR     r10, poll_word
        AND     r1, r10, #poll_word_recache_pending
        STR     r1, poll_word

        ; Hold the old sel_dir to see if the menu might need reopening
        LDR     r9, sel_dir

        [       debugsched
        TST     r10, #poll_word_force_poll
        BEQ     %FT00
        DLINE   " **forcepoll**" , cc
00
        ]

        ; Redraw (recache) if an upcall is waiting to be processed
        ; or zero the recache delay if not
        TST     r10, #poll_word_upcall_waiting

        [       debugsched
        BNE     %FT00
        DLINE   " zeroing recache delay ",cc
00
        ]

        MOVEQ   r0, #0
        STREQ   r0, recache_delay       ; No recache wanted; zero

        [       debugsched
        BEQ     %FT00
        DLINE   " setting recache bit",cc
00
        ]

        ORRNE   r10, r10, #poll_word_recache_pending
        MOVNE   r1, #poll_word_recache_pending
        STRNE   r1, poll_word

        TST     r10, #poll_word_recache_pending
        BEQ     %FT20

; A recache is pending.
; If the current time exceeds the recache delay (or the delay is 0), then allow it to happen.

        ; read current time, for calculating whether we can recache yet.  We also
        ; use this time in the recache_delay calculation later on.
        SWI     XOS_ReadMonotonicTime   ; r0 is NOW
        LDR     r1, recache_delay       ; r1 is DELAY

        [       debugsched
        DREG    r0, " time now: ", cc
        DREG    r1, " delay till: ", cc
        ]

        TEQ     r1, #0                  ; if delay is zero, then
        BEQ     %FT02                   ; allow a recache regardless

        SUBS    r2, r0, r1              ; otherwise only recache if NOW - DELAY >= 0
        [       debugsched
        BPL     %FT00
        DLINE   " try again later ", cc
00
        ]
        BMI     %FT20                   ; this test is wraparound-safe

02
        [       debugsched
        DLINE   " RECACHE ",cc
        ]

        ; Clear recache bit, but ensure that we get called once more so that
        ; we can zero recache_delay if and when things quieten down
        MOV     r1, #poll_word_force_poll
        STR     r1, poll_word

        ; store current time in recache_delay, just for now
        STR     r0, recache_delay

        BL      RedrawIfModified
        BVS     %FT10

        ; Check whether we've got the menu
        MOV     r0, #0
        ADR     r1, userdata
        SWI     XWimp_GetMenuState
        BVS     %FT10
        LDR     r0, [r1]
        TEQ     r0, #0
        BMI     %FT15

        ; Check if our selection has disappeared
        LDR     r0, sel_whandle
        TEQ     r0, #Nowt
        BNE     %FT05

        ; Selection window disappeared - junk the menu tree
        BL      NobbleMenuTree
        B       %FT15

05      ; Check for sel_dir changing - if not, leave menus alone.
        LDR     r4, sel_dir
        TEQ     r4, r9
        BEQ     %FT15

        ; Cause the menu to recreate with the new information
        BL      RecodeAndRecreateMenu

10      BLVS    LocalReportError

15      ; Recalculate the recache_delay value
        ; The value used is Now + (time taken * 4)
        SWI     XOS_ReadMonotonicTime           ; Now is in r0
        LDR     r1, recache_delay               ; Then is in r1
        SUB     r1, r0, r1                      ; wraparound safe
        [       debugsched
        DREG    r1, " took: ", cc
        ]
        ADD     r1, r0, r1, LSL # 2             ; now + time * 4
        [       debugsched
        DREG    r1, " delay till: ", cc
        ]
        STR     r1, recache_delay

20      ; Send directory requests to myself if they're waiting
        TST     r10, #poll_word_command_waiting
        BLNE    SendDirRequestsToMyself
        BLVS    LocalReportError

        ; Process message file closed if we got hit with that service.
        TST     r10, #poll_word_messagefile_closed
        BEQ     %FT90

        [ {TRUE}
        ; if a menu window was up, then it's handle is about to be stuffed

        ; Restore type_menuwindow to the location which was used for the handle
        LDR     r0, h_menuwindow_loc
        TEQ     r0, #0
        BEQ     %FT80

        Push    R0
        BL      NobbleMenuTree
        Pull    R0

        LDR     R1,[R0]
        Push    R0
        Push    R1
        MOV     R1,sp
        SWI     XWimp_DeleteWindow
        ADD     SP,SP,#4
        Pull    R0
        LDR     r14, type_menuwindow
        STR     r14, [r0]

        ; Make sure we think the menuwindow is deleted
        MOV     r14, #0
        STR     r14, h_menuwindow_loc
        CLRV
        ]
80
        ; Copy the new menus
        BL      CopyMenus
        BLVS    LocalReportError

        ; Stuff the old ones if we own them.
        MOV     r0, #0
        ADR     r1, userdata
        SWI     XWimp_GetMenuState
        BVS     %FT85
        LDR     r0, [r1]
        TEQ     r0, #0

        BLPL    NobbleMenuTree

85      BLVS    LocalReportError

90
        ; Don't allow a null event within less than 1/2 second.
        ; Hopefully the recache took all the time and doing the
        ; redraw won't take too long.
        SWI     XOS_ReadMonotonicTime
        ADD     r0, r0, #50
        STR     r0, next_null_event_not_before_time

        [ debugsched
        DLINE   ""
        ]

        EXIT

        |
; Old version if pre-153

event_null_reason Entry

        ; Zero the poll word to catch upcalls during the recache
        LDR     r10, poll_word
        MOV     r0, #0
        STR     r0, poll_word

        ; Hold the old sel_dir to see if the menu might need reopening
        LDR     r9, sel_dir

        ; Redraw (recache) if an upcall is waiting to be processed
        TST     r10, #poll_word_upcall_waiting
        BEQ     %FT20
        BL      RedrawIfModified
        BVS     %FT10

        ; Check whether we've got the menu
        MOV     r0, #0
        ADR     r1, userdata
        SWI     XWimp_GetMenuState
        BVS     %FT10
        LDR     r0, [r1]
        TEQ     r0, #0
        BMI     %FT20

        ; Check if our selection has disappeared
        LDR     r0, sel_whandle
        TEQ     r0, #Nowt
        BNE     %FT05

        ; Selection window disappeared - junk the menu tree
        BL      NobbleMenuTree
        B       %FT20

05      ; Check for sel_dir changing - if not, leave menus alone.
        LDR     r4, sel_dir
        TEQ     r4, r9
        BEQ     %FT20

        ; Cause the menu to recreate with the new information
        BL      RecodeAndRecreateMenu

10      BLVS    LocalReportError

20      ; Send directory requests to myself if they're waiting
        TST     r10, #poll_word_command_waiting
        BLNE    SendDirRequestsToMyself
        BLVS    LocalReportError

        ; Process message file closed if we got hit with that service.
        TST     r10, #poll_word_messagefile_closed
        BEQ     %FT90

        ; Copy the new menus
        BL      CopyMenus
        BLVS    LocalReportError

        ; Stuff the old ones if we own them.
        MOV     r0, #0
        ADR     r1, userdata
        SWI     XWimp_GetMenuState
        BVS     %FT85
        LDR     r0, [r1]
        TEQ     r0, #0
        BLPL    NobbleMenuTree
85      BLVS    LocalReportError

90
        ; Don't allow a null event within less than 1/2 second.
        ; Hopefully the recache took all the time and doing the
        ; redraw won't take too long.
        SWI     XOS_ReadMonotonicTime
        ADD     r0, r0, #50
        STR     r0, next_null_event_not_before_time
        EXIT

        ]

 [ version >= 116
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; event_pollword_nonzero
; ======================

; In    nothing
event_pollword_nonzero Entry

        ; This exists to force a cycle around the poll loop
        ; when the poll word becomes non-zero. This enables
        ; null events to be enabled which eventually causes
        ; a recache to occur.

        EXIT
 ]

        END
@


4.7
log
@  Merged in changes from Castle
Detail:
  fix for Alt-Select filer renamimg intermittant failure.

  s.msgsin .. replaced EXIT NE after SWI. as NE state not held through 32bit SWI
  file access permissions sub menu window now initialises again
Admin:
  Untested

Version 2.17. Tagged as 'Filer-2_17'
@
text
@a201 106
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
; event_key_pressed

; In    r1 -> wimp_eventstr
;       [r1, #0]  = window handle
;       [r1, #4]  = icon handle
;       [r1, #8]  = x offset of caret
;       [r1, #12] = y offset of caret
;       [r1, #16] = caret height
;       [r1, #20] = index of caret into string
;       [r1, #24] = key pressed
; Out   much corruption
event_key_pressed Entry

        ; Check if in window we're interested in
        LDR     r3, [r1, #0]
        LDR     r14, h_menuwindow_loc
        TEQ     r14, #0
        LDRNE   r14, [r14]
        CMP     r14, r3
        BNE     %FT06

        ; Pass on if not a Carriage Return or escape (in a writeable icon)
        LDR     r0, [r1, #24]
        CMP     r0, #CR
        BNE     %FT10

        MOV     r0,#CR
        MOV     r2, #0          ; No buttons were pressed
        STR     r2, buttonstate ; for reopening menus
        MOV     r4, #0          ; Icon 0 was 'clicked'
        B       click_menuwindow

06
        ; If not the menu window, then is it a return in the renaming writeable icon?
        LDR     r0, [r1, #24]
        CMP     r0, #CR
        BEQ     %FT07

        ; No? What about an ESCAPE?
        CMP     r0, #&1b
        BNE     %FT10


; ESCAPE pressed in writeable icon

        [ AltRenaming
        BL      remove_rename_writeable
        ]

        B       %FT10

; RETURN pressed in writeable icon

07
        Push    "r0-r6"                     ; Preserve registers on stack (check if necessary)
        MOV     r0, #-1
        SWI     Wimp_SetCaretPosition       ; Remove the caret

        ; What dirviewer block and file block was the renamed file?
        LDR     r1, renaming_chunkaddr
        ADD     r1, r1, #re_dirblock
        LDR     r4, [r1]                  ; dirviewer
        LDR     r5, [r1, #4]              ; fileblock

        STR     r4, sel_dir               ; r4 -> dirblock
        STR     r5, sel_fileblock         ; r5 -> fileblock

        Push    "r14"
        LDR     r2, renaming_chunkaddr    ; copy new filename
        ADD     r2, r2, #re_textstring
        ADR     r1, ms_writeable_leafname
        BL      strcpy
        Pull    "r14"

        LDR     r2, [r4, #d_dirnamestore] ; r2 -> dirname
        STR     r2, sel_dirname

        LDR     r2, [r4, #d_filenames]
        LDR     r3, [r5, #df_fileptr]
 [ not_16bit_offsets
        ADD     r2, r2, r3                ; r2 -> leafname
 |
        ADD     r2, r2, r3, LSR #16       ; r2 -> leafname
 ]
        STR     r2, sel_leafname
	MOV     r6, #0			  ; ensure known terminator
        BL      strcmp_sensitive          ; has the filename been altered?
        BNE     %FT08                     ; yep, then skip
        BL      remove_rename_writeable   ; else erase the icon
        B       %FT09                     ; don't perform rename

08
        Push    "r15"                     ; Push pc onto stack for return
        BL      DecodeMenu_File_Rename    ; Carry out rename
        NOP                               ; pre-StrongARM pushed R15+12

09
        Pull    "r0-r6"

10      ; Pass the key on
        LDR     r0, [r1, #24]
        SWI     XWimp_ProcessKey
        EXIT

@


4.6
log
@  Misc bugfixes.
Detail:
  * Mered in RISCOS Ltd's fix for directory displays with more than 65536
    bytes of leafnames.
  * Tries to use Wimp_TextOp 4 to do ellipsis truncation. As a result, it
    can now cope properly with:
    + multibyte UTF-8 characters in leafnames (previously this caused
      problems even if not truncated)
    + WimpSymbol character substitution in leafnames
    + alphabets without an ellipsis character
    + fonts without an ellipsis character
  * Sprite icons in 'Copy as' and 'New directory' dialogue boxes are no
    longer filled.
Admin:
  Tested on Tungsten.

Version 2.08. Tagged as 'Filer-2_08'
@
text
@d258 1
a258 1
        Push    "r0-r5"                     ; Preserve registers on stack (check if necessary)
d289 1
a289 1

d301 1
a301 1
        Pull    "r0-r5"
@


4.5
log
@Reception of message OpenDir was ignoring the flag bit which said whether
or not the pathname given in the block was canonicalised - RamFSFiler 0.38
relies on this to expand its root dir viewer.Fixed that.
Adjust dragging dirs to the iconbar was opening them very low on the
screen as GetWindowCoords was just reading the iconbar top left corner -
now a special case overrides GetWindowCoords so it opens in a more
sensible default place.

Version 2.07. Tagged as 'Filer-2_07'
@
text
@d283 3
d287 1
@


4.4
log
@  Updated build structure to use the shared AAsmModule makefile.
  Updated to build using objasm instead of aasm.
  Sources changed to be objasm-compatible.
Admin:
  Requires Library 0.71 or later.
  Requires BuildSys 3.06 or later.
  Requires Env 0.65 or later.

Version 2.01. Tagged as 'Filer-2_01'
@
text
@d26 1
a26 1
10      LDR     r10, DirRequestList     ; Reload from head each time
d28 1
a28 1
        BEQ     %FT90                   ; [finished]
d43 2
@


4.3
log
@  Couple of minor bugs fixed.
Detail:
  Rename routine gets away with Push "r15" because it has only been
    tested on a StrongARM - probably blows the system away if not SA.
  Incorrect condition reversed in DoOSCLIInBox - if the command window
    opens, then the routine exits without doing the command.  Now the
    exit occurs if that SWI failed.
Admin:
  Not tested.

Version 1.98. Tagged as 'Filer-1_98'
@
text
@d22 1
a22 1
SendDirRequestsToMyself ENTRY "r10"
d166 1
a166 1
delete_closed_menu_window       ENTRY   ,u_windowstate
d213 1
a213 1
event_key_pressed ENTRY
d222 1
a222 1
        
d241 1
a241 1
        CMP     r0, #&1b                
d243 1
a243 1
        
d250 1
a250 1
        
d255 1
a255 1
07        
d268 1
a268 1
        
d270 1
a270 1
        LDR     r2, renaming_chunkaddr    ; copy new filename 
d288 1
a288 1
        
d291 1
a291 1
        BL      DecodeMenu_File_Rename    ; Carry out rename    
d293 1
a293 1
        
d313 1
a313 1
event_null_reason ENTRY
d512 1
a512 1
event_null_reason ENTRY
d597 1
a597 1
event_pollword_nonzero ENTRY
@


4.2
log
@Merged Ursula branch.
Moved to srccommit.

Version 1.96. Tagged as 'Filer-1_96'
@
text
@d292 1
@


4.1
log
@Initial revision
@
text
@d221 3
a223 2
        BNE     %FT10
        ; Pass on if not a Carriage Return
d227 2
d233 62
@


4.1.4.1
log
@Alt + Select renaming added
@
text
@a15 31
;
; rename_lose_caret
;
; Called on a wimp event Lose_Caret - if it exists, remove the writeable icon
; (unless the ignorelosecaret flags has been set)
;
; In    r1 -> wimp_eventstr
;             [r1, #0] window handle
;
; Out   some corruption - going back to PollWimp

;rename_lose_caret ENTRY

;        LDR     r2, renaming_chunkaddr
;        LDR     r0, [r2, #re_windowhandle]     ; load the window handle of the writeable icon
;        LDR     r3, [r1]                       ; load the window handle from the event str
;        CMP     r3, r0                         
;        BNE     %FT10                          ; if they're not the same, ignore event

;        MOV     r1, #0
;        LDRB    r0, [r2, #re_ignorelosecaret]  ; otherwise load the ignorelosecaret flag
;        STRB    r1, [r2, #re_ignorelosecaret]  ; (and reset it to zero in memory)
;        CMP     r0, #1                         ; if it was 1...
;        BEQ     %FT10                          ; the don't delete the writeable icon
        
;        BL      remove_rename_writeable        ; otherwise erase writeable icon
;10
;        EXIT


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
d221 2
a222 3
        BNE     %FT06
        
        ; Pass on if not a Carriage Return or escape (in a writeable icon)
a225 2

        MOV     r0,#CR
a229 57

06
        [ version >=186
        ; If not the menu window, then is it a return in the renaming writeable icon?
        LDR     r0, [r1, #24]
        CMP     r0, #CR
        BEQ     %FT07

        ; No? What about an ESCAPE?
        CMP     r0, #&1b                
        BNE     %FT10
        

; ESCAPE pressed in writeable icon

        BL      remove_rename_writeable

        B       %FT10

; RETURN pressed in writeable icon

07
        ; Yes - then erase the icon
        BL      remove_rename_writeable
        
        Push    "r0-r5"                     ; Preserve registers on stack (check if necessary)

        ; What dirviewer block and file block was the renamed file?
        LDR     r1, renaming_chunkaddr
        ADD     r1, r1, #re_dirblock
        LDR     r4, [r1]                  ; dirviewer
        LDR     r5, [r1, #4]              ; fileblock

        STR     r4, sel_dir               ; r4 -> dirblock
        STR     r5, sel_fileblock         ; r5 -> fileblock
        
        Push    "r14"
        LDR     r2, renaming_chunkaddr    ; copy new filename 
        ADD     r2, r2, #re_textstring
        ADR     r1, ms_writeable_leafname
        BL      strcpy
        Pull    "r14"

        LDR     r2, [r4, #d_dirnamestore] ; r2 -> dirname
        STR     r2, sel_dirname

        LDR     r2, [r4, #d_filenames]
        LDR     r3, [r5, #df_fileptr]
        ADD     r2, r2, r3, LSR #16       ; r2 -> leafname
        STR     r2, sel_leafname
        
        Push    "r15"                     ; Push pc onto stack for return
        BL      DecodeMenu_File_Rename    ; Carry out rename    
        
09
        Pull    "r0-r5"
        ]
@


4.1.4.2
log
@A few changes to Alt+Select renaming
@
text
@d286 2
a313 5

        BL      strcmp                    ; has the filename been altered?
        BNE     %FT08                     ; yep, then skip
        BL      remove_rename_writeable   ; else erase the icon
        B       %FT09                     ; don't perform rename
a314 1
08
@


4.1.4.3
log
@Long filename support and SaveAs style new directory creation
@
text
@d16 31
a287 2
        MOV     r0, #-1
        SWI     Wimp_SetCaretPosition       ; Remove the caret
d313 1
a313 1
        BL      strcmp_sensitive          ; has the filename been altered?
@


4.1.4.4
log
@Fixed bug with system font in Filer windows, plus redraw of highlighted icons.
@
text
@d235 1
d254 2
a255 1
07        
d295 1
@


4.1.4.5
log
@Changed font width calculation code.
@
text
@a246 1
        [ AltRenaming
d248 1
a248 2
        ]
        
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
