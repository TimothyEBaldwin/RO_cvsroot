head	4.1;
access;
symbols
	Filter-0_28:4.1
	Filter-0_27:4.1
	Filter-0_26:4.1
	Filter-0_25:4.1
	RO_5_07:4.1
	Filter-0_24:4.1
	dellis_autobuild_BaseSW:4.1
	sbrodie_sedwards_16Mar2000:4.1
	Filter-0_23:4.1
	dcotton_autobuild_BaseSW:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	Filter-0_22:4.1
	Ursula_merge:4.1
	Filter-0_21:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	bavison_FilterMgr_020:4.1
	sbrodie_FilterMgr_019:4.1
	sbrodie_FilterMgr_018:4.1
	FilterMgr_017:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.1
date	96.11.05.09.29.46;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.46;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.28.44;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.19.18;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.17.35;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@
Filter Manager service calls:

Service_FilterManagerInstalled
------------------------------
 in     R0 = Version number of Filter Manager *100, ie. 1.23 => 123
        R1 = Service_FilterManagerInstalled
 out    all must be preserved, must never be claimed

This service call is broadcast to allow modules that install a Filter
to be reinstalled when the filter manager is reloaded / re-inited.

The SWI is issued on a callback, so the SWI interface is valid for
registering filters.


Service_FilterManagerDying
--------------------------
 in     R1 = Service_FilterManagerDying
 out    all must be preserved, must never be claimed

This is broadcast when the filter manager has unlinked all filters from
its active lists (just before the module dies) to allow the filter owners
to tidy any internal state.


Filter manager SWIs:


Filter_RegisterPreFilter

 Add a new pre filter to the list of pre filters.

 Entry:
        R0 - Pointer to 0 terminated filter name. 
        R1 - Addresss of filter.
        R2 - Value to be passed in R12.
        R3 - Task handle of task to which filter is applied.
             or 0 for all tasks.

 Exit:
        Registers preserved.

        The address pointed to by R1 will be called whenever the task who's
handle is passed in R3 calls Wimp_Poll with R12 equal to the value of R2
when this SWI is called.

                         
        The routine pointed to by R1 will be called with:

        R0 =  Event mask as passed to Wimp_Poll
        R1 -> Event block as passed to Wimp_Poll
        R2 = Task handle of task that called Wimp_Poll.  

        On Exit:

        It may clear bits in r0 to provide a new event mask.

        It must preserve all other registers.



Filter_RegisterPostFilter

 Add a new post filter to the list of post filters.

 Entry:
        R0 - Pointer to 0 terminated filter name. 
        R1 - Addresss of filter.
        R2 - Value to be passed in R12.
        R3 - Task handle of task to which filter is applied.
             or 0 for all tasks.
        R4 - Event mask ( 1 bit masks the event out as for Wimp_Poll).

 Exit:
        Registers preserved.

  
        The address pointed to by R1 will be called whenever the Wimp is
about to return to the task who's handle is passed in R3 from Wimp_Poll with
R12 equal to the value of R2 when this SWI is called.

        On entry to the routine pointed to by R1:

        R0 - Event reason code (as from Wimp Poll)
        R1 -> User's event buffer.
        R2 = Task handle for task to which the return is made.
        Task paged in.

        On Exit:

        The routine may modify the reason code in r0 and the contents of the 
        buffer pointed to by R1 to provide a new event.

        It must preserve R1 and R2.
                                          




 Filter_DeRegisterPreFilter

 Remove a pre filter from the list of pre filters.

 Entry:
        R0 - Pointer to 0 terminated filter name. 
        R1 - Addresss of filter.
        R2 - Value to be passed in R12.
        R3 - Task handle of task to which filter was applied.

        All must be the same as those passed to RegisterPreFilter
 Exit:
        Registers preserved.
        Filter de-registered.


 Filter_DeRegisterPostFilter

 Remove a pre filter from the list of pre filters.

 Entry:
        R0 - Pointer to 0 terminated filter name. 
        R1 - Addresss of filter.
        R2 - Value to be passed in R12.
        R3 - Task handle of task to which filter was applied.

        All must be the same as those passed to RegisterPreFilter
 Exit:
        Registers preserved.
        Filter de-registered.

  
  
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
