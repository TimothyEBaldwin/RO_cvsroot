head	1.6;
access;
symbols
	Wimp-5_62:1.6
	Wimp-5_61:1.6
	Wimp-5_60:1.6
	Wimp-5_59:1.6
	Wimp-5_58:1.6
	Wimp-5_57:1.6
	Wimp-5_56:1.6
	Wimp-5_55:1.6
	Wimp-5_54:1.6
	Wimp-5_53:1.6
	Wimp-5_52:1.6
	Wimp-5_51:1.6
	Wimp-5_50:1.6
	Wimp-5_49:1.5
	Wimp-5_48:1.5
	Wimp-5_47-file1ad:1.5
	Wimp-5_47:1.5
	Wimp-5_46:1.5
	Wimp-5_45:1.5
	Wimp-5_44:1.5
	Wimp-5_43:1.5
	Wimp-5_42:1.5
	Wimp-5_41:1.5
	Wimp-5_40:1.4
	Wimp-5_39:1.4
	Wimp-5_38:1.4
	Wimp-5_37:1.4
	Wimp-5_36:1.4
	Wimp-5_35:1.4
	Wimp-5_34:1.4
	Wimp-5_33:1.4
	Wimp-5_32:1.4
	Wimp-5_31:1.4
	Wimp-5_30:1.4
	Wimp-530-pre4:1.4
	Wimp-5_30-pre3:1.4
	Wimp-5_30-pre2:1.4
	Wimp-5_30-pre1:1.4
	Wimp-5_29:1.4
	Wimp-5_28:1.4
	Wimp-5_27:1.4
	Wimp-5_26:1.4
	Wimp-5_25:1.4
	Wimp-5_24:1.3
	Wimp-5_23:1.2
	Wimp-5_22:1.2
	Wimp-5_21:1.1
	Wimp-5_20:1.1
	Wimp-5_19:1.1
	Wimp-5_18:1.1
	Wimp-5_17:1.1
	Wimp-5_16:1.1
	Wimp-5_15:1.1
	Wimp-5_14:1.1
	Wimp-5_13:1.1
	Wimp-5_12:1.1
	Wimp-5_11:1.1
	Wimp-5_10:1.1
	Wimp-5_09:1.1
	Wimp-5_08:1.1
	Wimp-5_07:1.1
	Wimp-5_06:1.1
	Wimp-5_05:1.1
	Wimp-5_04:1.1
	Wimp-5_03:1.1
	Wimp-5_02:1.1
	Wimp-5_01:1.1
	Wimp-4_66-4_77_2_1:1.1.2.1
	bavison_Threads_dev:1.1.0.2
	bavison_Threads_dev_bp:1.1
	Wimp-5_00:1.1
	Wimp-4_100:1.1
	Wimp-4_99:1.1
	Wimp-4_98:1.1
	Wimp-4_97:1.1
	Wimp-4_96:1.1
	Wimp-4_95:1.1
	Wimp-4_94:1.1
	RO_5_07:1.1
	Wimp-4_93:1.1
	Wimp-4_92:1.1
	Wimp-4_91:1.1
	Wimp-4_90:1.1
	Wimp-4_89:1.1
	Wimp-4_88:1.1
	Wimp-4_87:1.1
	Wimp-4_86:1.1
	Wimp-4_85:1.1
	Wimp-4_84:1.1
	Wimp-4_83:1.1
	Wimp-4_82:1.1
	Wimp-4_81:1.1
	Wimp-4_80:1.1
	Wimp-4_79:1.1
	Wimp-4_78:1.1
	Wimp-4_77:1.1
	Wimp-4_76:1.1
	Wimp-4_75:1.1
	Wimp-4_74:1.1
	Wimp-4_73:1.1
	Wimp-4_72:1.1
	Wimp-4_71:1.1
	Wimp-4_70:1.1
	Wimp-4_69:1.1
	Wimp-4_68:1.1
	Wimp-4_67:1.1
	Wimp-4_66:1.1
	Wimp-4_65:1.1
	Wimp-4_64:1.1
	Wimp-4_63:1.1
	Wimp-4_62:1.1
	Wimp-4_61:1.1
	Wimp-4_60:1.1
	Wimp-4_59:1.1
	Wimp-4_58:1.1
	Wimp-4_57:1.1
	Wimp-4_56:1.1
	dellis_autobuild_BaseSW:1.1
	Wimp-4_55:1.1
	Wimp-4_54:1.1
	Wimp-4_53:1.1
	Wimp-4_52:1.1
	Wimp-4_51:1.1
	Wimp-4_50:1.1
	Wimp-4_49:1.1
	Wimp-4_48:1.1
	dcotton_autobuild_BaseSW:1.1
	Wimp-4_47:1.1;
locks; strict;
comment	@# @;


1.6
date	2015.10.10.12.14.23;	author jlee;	state Exp;
branches;
next	1.5;
commitid	hTZlaaPZyibzGyEy;

1.5
date	2014.04.19.09.39.19;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	wEWgncfqw43A9hxx;

1.4
date	2013.05.06.11.54.45;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	dyQdYmrTRpty5zOw;

1.3
date	2013.05.03.21.08.11;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	QS59VqQdUOQmfeOw;

1.2
date	2013.04.10.20.48.42;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	oyotsfYRPfGzSgLw;

1.1
date	2000.04.25.12.24.00;	author kbracey;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2007.10.07.02.17.28;	author bavison;	state Exp;
branches;
next	;
commitid	NSavcPvbNd36pBAs;


desc
@@


1.6
log
@Reinstate Wimp_ClaimFreeMemory
Detail:
  This restores support for Wimp_ClaimFreeMemory, via having the Wimp manage a small-ish (4MB) DA that is used to satisfy Wimp_ClaimFreeMemory requests. The Wimp will only ever grow the DA, but the DA is shrinkable, so the system should shrink it as necessary should the free pool run too low.
  Options/s/!Default, Options/s/32, Options/s/Ursula - Add DynamicAreaWCF option to control support for the Wimp_ClaimFreeMemory DA. Enable the option for any builds of the module destined for RISC OS 5.
  Options/s/!Debug - New debug option for Wimp_ClaimFreeMemory debugging (mainly DynamicAreaWCF code path)
  Wimp/s/Wimp01 - Add calls to create/destroy DA on startup/shutdown
  Wimp/s/Wimp08s - DA create/destroy implementation. DA is only used if the free pool is a PMP or the Wimp expects kernel free pool locking but the kernel doesn't support it. Modify Wimp_ClaimFreeMemory to use the DA if it's present.
Admin:
  Tested on Raspberry Pi
  Restores compatibility with software which relies on Wimp_ClaimFreeMemory, e.g. GDraw module (cause of "No free memory" errors reported by many)
  Note that Wimp_ClaimFreeMemory is still considered deprecated and support may be removed in future OS versions.


Version 5.50. Tagged as 'Wimp-5_50'
@
text
@; Copyright 2000 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;
; Wimp options for a 32-bit desktop build of the Window Manager
;

module_postfix  SETS    " 32-bit"

        Option  ShrinkableAreas,        true                    ; Support Shrinkable Dynamic Areas

        Option  TrueIcon2,              true :LAND: TrueIcon1   ; true colour support, phase 2
        Option  TrueIcon3,              true :LAND: TrueIcon2   ; true colour support, phase 3 (windows)
        Option  IconiseButton,          true                    ; Windows given iconise button
        Option  BounceClose,            true                    ; Furniture buttons are release-type
        Option  ForegroundWindows,      true                    ; Layering of windows within each stack
        Option  SpritePriority,         true                    ; Allow configurable sprite pool priority
        Option  Autoscr,                true                    ; Add Wimp_AutoScroll and dragbox-within-window facilities
        Option  StickyEdges,            false  ; unimplemented  ; Allow windows to "stick" when dragged over edge of screen
        Option  MultiClose,             true                    ; Allow Ctrl-Alt clicks on close/iconise buttons
        Option  PushBothBars,           true                    ; Push in both scrollbars on adjust-drags
        Option  AcceptLoosePointers,    false                   ; Sloppy "any -ve will do" checks (for 64M memory map only)
        Option  CanTileManually,        false                   ; retain manual tiling code incase SpriteOp 65 missing
        Option  DynamicAreaWCF,         true                    ; RISC OS 5.23 drops support for free pool locking, so use a private DA instead 

        END
@


1.5
log
@Fix for missing window backgrounds/scroll bars when tiled sprite op not supported
For the backgrounds, the code was switched with 'standalone' however the Wimp actively wipes SA_FLAGS in its makefile so the standalone switch is always false during the install phase of a disc build. Also, the standalone switch is used to include resources which are ordinarily handled by the boot sequence prefixing the WindowManager$Path rather than using ResourceFS.
For the scroll bars, the decision to plot manually was being made by looking at the V flag on return from Tool_SpriteOp, except that that function uses EntryS/EXITS so the caller can't see the return flags.
Added new switch CanTileManually, removed 0 use tilewithspriteops switch.
Changed single use of NoFontBodge switch to use preferred 'outlinefont'.
Tested on RISC OS 4.02.

Version 5.41. Tagged as 'Wimp-5_41'
@
text
@d35 1
@


1.4
log
@Refinements to disc based targets especially
Previous attempt to disable Sprites11 support for 3.10 and 3.50 hadn't spotted it was reenabled in the common options, also the Sprites11 switch was also tied up in Wimp$IconTheme support.
Title bars would flicker when picked up when using a tool sprite set with no 'p' pushed equivalents on RISC OS 4.0x due to screen cache.
Makefile now installs a default set of tools & sprites when target is ThemeDefs.
CLI limit reduced to 256 pre Ursula to save RAM.

Options/!Common:
  Promote Sprites11 switch into !Default
  Remove fixrmatools
Options/!Default:
  Sprites11 true by default
  LongCommandLines true by default, false on targets pre Ursula
  Remove ServiceCallTable (harmless to have it in all cases)
NewSWIs.s:
  Enable Wimp_Extend 13 all the time
Wimp01.s:
  Reduce RMA use by vital 1.5k for non long command line case
  Change sense of Sprites11 switch to adopt all its previous functionality, but not look for '11' suffix when the switch is false
  Adopt ServiceCallTable switch permanently
Wimp02.s:
  Comments ammended
Wimp07.s:
  Range of ADR
Wimp10.s:
  Change sense of Sprites11 switch to adopt all its previous functionality, but not look for '11' suffix when the switch is false
  Adopt :LNOT: fixrmatools switch permanently
  Supress title bar sprite plotting when none of the sprites exist

Version 5.25. Tagged as 'Wimp-5_25'
@
text
@d34 1
@


1.3
log
@Slacken pointer checks
The pointer comparison checking required when running in a system with > 64M memory was tightened up from Wimp-4_75 to Wimp-4_76, but to allow the module to target pre RISC OS 5 systems an option to relax those checks is required.
Each check has been revisited and where appropriate demarked with a "AcceptLoosePointer" macro, which just remaps the pointer into the stricter form and carries on. In the strict checking case, the macro reduces to nothing.

Detail:
Add AcceptLoosePointers switch.
Retire singular use of StrongARM switch (calling XOS_SynchroniseCodeAreas is harmless pre StrongARM anyway).
Rename Ursula_RPC options to RO400.
Put duplicate documentation in the attic.
Allow -2 or -1 as the iconbar handle in Wimp_ResizeIcon (ticket #203).
Tighten up the list terminator check in the DebugMemory switch of Memory.s

Tested on RISC OS 3.10 (emulated), 3.50, 3.60, 3.70, 4.02.

Version 5.24. Tagged as 'Wimp-5_24'
@
text
@a20 1
        Option  ServiceCallTable,       true                    ; Add Ursula kernel Service Call table
@


1.2
log
@Build fixes for variants pre RISC OS 5
Minor fixups as part of univeral !Boot work.
Options no longer ASSERT on International_Help (which is a definition exported by the kernel, rather than a build switch), and instead define a switch which is true for > 3.50.
Non UTF8 supporting case has simple substitutes for Wimp_TextOp.
Legacy_DomainId and LegacyIRQsema no longer cause NULL pointer dereference.
MOVeQ => MOVEQ to placate ObjAsm.

Ursula_RPC version built and used briefly on RISC OS 4.02 host. No other run time testing.

Version 5.22. Tagged as 'Wimp-5_22'
@
text
@d34 1
@


1.1
log
@  Made 32-bit compatible.
Detail:
  Lots of little changes throughout a lot of source.
Admin:
  Appears to work - not stress tested with things like lots of tasks, big
  transfers, and all the other things that tend to go wrong.

Version 4.47. Tagged as 'Wimp-4_47'
@
text
@a34 2
        ASSERT  International_Help <> 0

@


1.1.2.1
log
@  Added Dan Ellis's multithreading support, on a development branch for now.
Detail:
  This breaks the equivalence between tasks and AMB slots, allowing many
  threads of execution to share the same AMB slot, where an application's
  heap is usually located. In API terms, it is presented as an extension to
  Wimp_StartTask, see Docs/Multithreading for more information. It is the
  caller's responsibility to create a new stack chunk for the new thread if
  required. Note that BASIC's variable storage model is fundamentally
  unsuited for multithreading.
Admin:
  This was developed in 2001 and was not committed at the time due to lack
  of testing and peer review. It is now being added as a branch from a
  contemporary trunk Wimp. Hopefully somebody will be interested enough to
  merge the branch into a recent version!

Version 4.66, 4.77.2.1. Tagged as 'Wimp-4_66-4_77_2_1'
@
text
@a33 1
        Option  Threads,                true                    ; Supply multithreading support
@

