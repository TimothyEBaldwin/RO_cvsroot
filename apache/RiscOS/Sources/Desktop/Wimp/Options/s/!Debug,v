head	1.6;
access;
symbols
	Wimp-5_62:1.6
	Wimp-5_61:1.6
	Wimp-5_60:1.6
	Wimp-5_59:1.6
	Wimp-5_58:1.6
	Wimp-5_57:1.6
	Wimp-5_56:1.6
	Wimp-5_55:1.6
	Wimp-5_54:1.6
	Wimp-5_53:1.6
	Wimp-5_52:1.6
	Wimp-5_51:1.6
	Wimp-5_50:1.6
	Wimp-5_49:1.5
	Wimp-5_48:1.5
	Wimp-5_47-file1ad:1.5
	Wimp-5_47:1.5
	Wimp-5_46:1.5
	Wimp-5_45:1.5
	Wimp-5_44:1.5
	Wimp-5_43:1.5
	Wimp-5_42:1.5
	Wimp-5_41:1.5
	Wimp-5_40:1.5
	Wimp-5_39:1.5
	Wimp-5_38:1.5
	Wimp-5_37:1.5
	Wimp-5_36:1.5
	Wimp-5_35:1.5
	Wimp-5_34:1.5
	Wimp-5_33:1.5
	Wimp-5_32:1.5
	Wimp-5_31:1.5
	Wimp-5_30:1.5
	Wimp-530-pre4:1.5
	Wimp-5_30-pre3:1.5
	Wimp-5_30-pre2:1.5
	Wimp-5_30-pre1:1.5
	Wimp-5_29:1.5
	Wimp-5_28:1.5
	Wimp-5_27:1.5
	Wimp-5_26:1.5
	Wimp-5_25:1.5
	Wimp-5_24:1.5
	Wimp-5_23:1.5
	Wimp-5_22:1.5
	Wimp-5_21:1.5
	Wimp-5_20:1.5
	Wimp-5_19:1.5
	Wimp-5_18:1.5
	Wimp-5_17:1.5
	Wimp-5_16:1.5
	Wimp-5_15:1.5
	Wimp-5_14:1.5
	Wimp-5_13:1.5
	Wimp-5_12:1.5
	Wimp-5_11:1.5
	Wimp-5_10:1.5
	Wimp-5_09:1.5
	Wimp-5_08:1.5
	Wimp-5_07:1.5
	Wimp-5_06:1.5
	Wimp-5_05:1.5
	Wimp-5_04:1.5
	Wimp-5_03:1.5
	Wimp-5_02:1.5
	Wimp-5_01:1.5
	Wimp-4_66-4_77_2_1:1.4.4.1
	bavison_Threads_dev:1.4.0.4
	bavison_Threads_dev_bp:1.4
	Wimp-5_00:1.5
	Wimp-4_100:1.5
	Wimp-4_99:1.5
	Wimp-4_98:1.5
	Wimp-4_97:1.5
	Wimp-4_96:1.5
	Wimp-4_95:1.5
	Wimp-4_94:1.5
	RO_5_07:1.5
	Wimp-4_93:1.5
	Wimp-4_92:1.5
	Wimp-4_91:1.5
	Wimp-4_90:1.5
	Wimp-4_89:1.5
	Wimp-4_88:1.5
	Wimp-4_87:1.5
	Wimp-4_86:1.5
	Wimp-4_85:1.5
	Wimp-4_84:1.5
	Wimp-4_83:1.5
	Wimp-4_82:1.5
	Wimp-4_81:1.5
	Wimp-4_80:1.5
	Wimp-4_79:1.5
	Wimp-4_78:1.5
	Wimp-4_77:1.4
	Wimp-4_76:1.4
	Wimp-4_75:1.4
	Wimp-4_74:1.4
	Wimp-4_73:1.4
	Wimp-4_72:1.4
	Wimp-4_71:1.4
	Wimp-4_70:1.4
	Wimp-4_69:1.4
	Wimp-4_68:1.4
	Wimp-4_67:1.4
	Wimp-4_66:1.4
	Wimp-4_65:1.4
	Wimp-4_64:1.4
	Wimp-4_63:1.4
	Wimp-4_62:1.4
	Wimp-4_61:1.4
	Wimp-4_60:1.4
	Wimp-4_59:1.4
	Wimp-4_58:1.4
	Wimp-4_36-4_46_2_6:1.4
	Wimp-4_57:1.4
	Alpnet_approved:1.4
	Wimp-4_36-4_46_2_5:1.4
	Wimp-4_56:1.4
	dellis_autobuild_BaseSW:1.4
	Wimp-4_36-4_46_2_4:1.4
	Wimp-4_36-4_46_2_3:1.4
	Wimp-4_55:1.4
	Wimp-4_54:1.4
	Wimp-4_36-4_46_2_2:1.4
	Wimp-4_53:1.4
	Wimp-4_36-4_46_2_1:1.4
	Bethany:1.4.0.2
	Wimp-4_52:1.4
	Wimp-4_51:1.4
	Wimp-4_50:1.4
	Wimp-4_49:1.4
	Wimp-4_48:1.4
	Wimp-4_47:1.4
	Wimp-4_46:1.4
	Wimp-4_45:1.4
	Wimp-4_44:1.4
	Wimp-4_43:1.4
	Wimp-4_42:1.4
	sbrodie_sedwards_16Mar2000:1.4
	Wimp-4_41:1.4
	Wimp-4_40:1.4
	Wimp-4_39:1.4
	Wimp-4_38:1.4
	Wimp-4_37:1.4
	Wimp-4_36:1.4
	Wimp-4_35:1.4
	Wimp-4_34:1.4
	Wimp-4_33:1.4
	Wimp-4_32:1.4
	Wimp-4_31:1.4
	dcotton_autobuild_BaseSW:1.4
	Wimp-4_30:1.4
	Wimp-4_29:1.4
	Wimp-4_28:1.4
	Wimp-4_27:1.4
	Wimp-4_26:1.4
	Wimp-4_25:1.4
	Wimp-4_24:1.4
	Wimp-4_23:1.4
	Wimp-4_22:1.4
	Wimp-4_21:1.4
	Wimp-4_20:1.4
	Wimp-4_19:1.4
	Wimp-4_18:1.4
	Wimp-4_17:1.4
	Wimp-4_16:1.4
	Wimp-4_15:1.4
	Wimp-4_14:1.4
	Wimp-4_13:1.4
	Wimp-4_12:1.4
	mstphens_UrsulaRiscPCBuild_20Nov98:1.2.2.6
	bavison_Wimp-4_11:1.4
	Ursula_RiscPC:1.2.2.6.0.2
	Wimp-4_11:1.4
	Wimp-4_10:1.4
	Wimp-4_09:1.4
	Wimp-4_08:1.4
	Wimp-4_07:1.4
	Wimp-4_06:1.4
	Wimp-4_05:1.3
	Wimp-4_04:1.3
	bavison_Wimp-4_03_noshrinkables:1.3
	Wimp-4_03:1.3
	Wimp-4_02:1.3
	Ursula_merge:1.2.2.6
	bavison_Wimp-4_01:1.3
	Wimp-4_01:1.3
	bavison_Wimp-4_00_TRUNK:1.3
	bavison_Wimp-4_00:1.2.2.6
	mjrobert_Wimp_3_98:1.2.2.2
	rthornb_UrsulaBuild-19Aug1998:1.2.2.6
	UrsulaBuild_FinalSoftload:1.2.2.6
	bavison_Wimp-3_99t:1.2.2.6
	rthornb_UrsulaBuild-12Aug1998:1.2.2.6
	bavison_Wimp-3_99s:1.2.2.6
	aglover_UrsulaBuild-05Aug1998:1.2.2.6
	bavison_Wimp-3_99r:1.2.2.6
	rthornb_UrsulaBuild-29Jul1998:1.2.2.6
	bavison_Wimp-3_99q:1.2.2.6
	rthornb_UrsulaBuild-22Jul1998:1.2.2.6
	bavison_Wimp-3_99p:1.2.2.6
	rthornb_UrsulaBuild-15Jul1998:1.2.2.6
	bavison_Wimp-3_99o:1.2.2.6
	bavison_Wimp-3_99n:1.2.2.6
	rthornb_UrsulaBuild-07Jul1998:1.2.2.6
	bavison_Wimp-3_99m:1.2.2.6
	rthornb_UrsulaBuild-17Jun1998:1.2.2.5
	rthornb_UrsulaBuild-03Jun1998:1.2.2.5
	bavison_Wimp-3_99l:1.2.2.5
	rthornb_UrsulaBuild-27May1998:1.2.2.5
	rthornb_UrsulaBuild-21May1998:1.2.2.5
	bavison_Wimp-3_99k:1.2.2.5
	bavison_Wimp-3_99j:1.2.2.5
	bavison_Wimp-3_99i:1.2.2.5
	bavison_Wimp-3_99h:1.2.2.5
	rthornb_UrsulaBuild_01May1998:1.2.2.5
	bavison_Wimp_399g:1.2.2.5
	bavison_Wimp_399f:1.2.2.5
	bavison_Wimp_399e:1.2.2.5
	bavison_Wimp_399d:1.2.2.5
	bavison_Wimp_399c:1.2.2.5
	Wimp_3_98:1.2.2.2
	kbracey_AW97:1.2.2.1
	Daytona:1.2.0.4
	Daytona_bp:1.2
	Ursula:1.2.0.2
	Ursula_bp:1.2
	Wimp_3_91:1.2
	ARTtmp_bp:1.1
	ARTtmp_merge:1.1.2.1
	ARTtmp:1.1.0.2;
locks; strict;
comment	@# @;


1.6
date	2015.10.10.12.14.22;	author jlee;	state Exp;
branches;
next	1.5;
commitid	hTZlaaPZyibzGyEy;

1.5
date	2002.10.30.17.43.42;	author bavison;	state Exp;
branches;
next	1.4;

1.4
date	98.10.20.16.20.08;	author bavison;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	98.09.18.16.13.16;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	97.05.07.14.14.44;	author kbracey;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	97.04.28.16.49.07;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.4.4.1
date	2007.10.07.02.17.28;	author bavison;	state Exp;
branches;
next	;
commitid	NSavcPvbNd36pBAs;

1.2.2.1
date	97.07.07.11.24.39;	author bavison;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	98.02.02.16.27.11;	author kbracey;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	98.03.10.16.11.08;	author bavison;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	98.03.26.19.31.23;	author bavison;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	98.04.03.19.38.25;	author bavison;	state Exp;
branches;
next	1.2.2.6;

1.2.2.6
date	98.07.03.17.59.36;	author bavison;	state Exp;
branches;
next	;

1.1.2.1
date	97.04.28.16.49.08;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Reinstate Wimp_ClaimFreeMemory
Detail:
  This restores support for Wimp_ClaimFreeMemory, via having the Wimp manage a small-ish (4MB) DA that is used to satisfy Wimp_ClaimFreeMemory requests. The Wimp will only ever grow the DA, but the DA is shrinkable, so the system should shrink it as necessary should the free pool run too low.
  Options/s/!Default, Options/s/32, Options/s/Ursula - Add DynamicAreaWCF option to control support for the Wimp_ClaimFreeMemory DA. Enable the option for any builds of the module destined for RISC OS 5.
  Options/s/!Debug - New debug option for Wimp_ClaimFreeMemory debugging (mainly DynamicAreaWCF code path)
  Wimp/s/Wimp01 - Add calls to create/destroy DA on startup/shutdown
  Wimp/s/Wimp08s - DA create/destroy implementation. DA is only used if the free pool is a PMP or the Wimp expects kernel free pool locking but the kernel doesn't support it. Modify Wimp_ClaimFreeMemory to use the DA if it's present.
Admin:
  Tested on Raspberry Pi
  Restores compatibility with software which relies on Wimp_ClaimFreeMemory, e.g. GDraw module (cause of "No free memory" errors reported by many)
  Note that Wimp_ClaimFreeMemory is still considered deprecated and support may be removed in future OS versions.


Version 5.50. Tagged as 'Wimp-5_50'
@
text
@; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;========================================================================================
; Debugging options.
;
; To debug the Wimp, set debug to true, then turn on the debugXXX options of your choice.
;========================================================================================
;
	Option	hostvdu,   false               ; destination for debug output
	Option	debug_flush, true              ; flushing if going to file
	Option	pdebug_module, false	       ; use PDebug module

	Option	DebugMemory, false

	Option	debug,	   false               ; ONLY FALSE IF NO DEBUGGING
	OptionD	omd,       false
	OptionD	sm,        false
	OptionD	nk,        false               ; Neil's special debugs
	OptionD	pk,        false               ; special 2
	OptionD	ptr,       false               ; pointer window
	OptionD	tmp,       false               ; templates
	OptionD	fp,        false               ; FP register saving
	OptionD	sv,        false               ; all service calls
	OptionD	dy,        false               ; ChangeDynamicArea monitoring
	OptionD	sw,        false               ; switching
	OptionD	co,        false               ; command window
	OptionD	xx,        false               ; misc
	OptionD	x1,        false               ; misc II
	OptionD	ic,        false               ; icons
	OptionD	icb,       false               ; icon bar
	OptionD	sc,        false               ; set caret
	OptionD	ms,        false               ; message passing
	OptionD	task,      false               ; for wholesale debugging!
	OptionD	task1,     false               ; for exception handlers etc.
	OptionD	task2,     false               ; for entry points
	OptionD	task3,     false               ; check for single-tasking errors
	OptionD	task4,     false               ; Idle poll performance monitoring
	OptionD	ints,      false
	OptionD	extent,    false
	OptionD	escape,    false               ; trap escape enabled on Wimp_Poll
	OptionD	crw,       false               ; window creation
	OptionD	opn,       false               ; window opening
	OptionD	child,     false               ; child windows
	OptionD	mode,      false               ; mode changing
	OptionD	bpr,       false               ; braindead panic redraw debugging
	OptionD	swp,       false               ; Swapping of tasks to disk.
	OptionD	spr,       false               ; Wimp sprite ops
	OptionD	bo,        false               ; Special borders
	OptionD	valid,     false               ; Service_ValidateAddress
	OptionD	fl,        false               ; Filter handling debugging
	OptionD	am,        false               ; Auto opening of submenus
	OptionD	ff,        false               ; Fancy font for system text
	OptionD	ub,        false               ; User definable scroll bars
	OptionD	val,       false               ; New validation string commands (K)
	OptionD	check,     false               ; Check for inconsistent window stacks and flags
	OptionD	err,       false               ; Wimp_ReportError and errors in general
	OptionD	autoopen,  false               ; For opening of wimp's own windows
	OptionD	rma,       false
	OptionD	perth,     false               ; For Perth power managerment
	OptionD	colours,   false               ; For use of ColourTrans
	OptionD	sprite,    false               ; For sprite caching
	OptionD	msgsel,    false               ; Selective message passing
	OptionD	menu,      false               ; New menu handling (indirection and bits)
	OptionD	tools,     false               ; Tool caching and ToolSprite commands
	OptionD	tools2,    false               ; Plotting and clicking
	OptionD	borders,   false               ; border plotting on icons
	OptionD	inverse,   false               ; Colour inversion/highlighting
	OptionD	font,      false               ; anti-aliased fonts in icons
	OptionD	fcol,      false               ; colour of antialiased fonts
	OptionD	die,       false               ; Die entry
	OptionD	systmpl,   false               ; Loading Wimp's templates
	OptionD	key,       false               ; ProcessKey handling
	OptionD	scroll,    false               ; Funky scroll bars
	OptionD	poll,      false               ; PollWord list management
	OptionD	menuparam, false               ; CreateMenu parameters
	OptionD	exit,      false               ; ExitWimp
	OptionD	L40,       false               ; Fancy font in L40-type icons
	OptionD	menuw,     false               ; Automatic calculation of menu width
	OptionD	upcall,    false               ; Upcalls
	OptionD	mjs,       false               ; Mike's debugs
	OptionD	mjs2,      false               ; Mike's debugs 2
	OptionD	mjs3,      false               ; Mike's debugs 3
	OptionD	mjs4,      false               ; Mike's debugs 4 (TransferBlock)
	OptionD autohg,    false               ; AutoHourglass
	OptionD sprprior,  false               ; ROM vs RAM sprite priority
	OptionD autoscr,   false               ; autoscrolling / drags within windows
	OptionD poll2,     false               ; stages through Wimp_Poll

	OptionD tiling,    false	       ; new tiling code
	OptionD threedpatch, false	       ; 3DPatch code
        OptionD wcf,       false               ; Wimp_ClaimFreeMemory

	END
@


1.5
log
@  Merged in RISC OS 4.02 changes (including ROM patches). Also som bugfixes.
Detail:
  RISC OS 4 changes:
  * Font blending for desktop font (based on NC code, but now configurable)
  * 3-D window/menu/iconbar borders
  * Textured menu backgrounds
  * Loss of rubout box in unfilled text+sprite icons
  * *WimpVisualFlags controls various aspects of cosmetic changes above
  * Iconise button "slot" glyph slightly shorter (but only adopted in the RO400
    Resource directory)
  * Command window has front-window flag set
  * Byte at +39 of the window block has gained two new flag bits:
      bit 2 set => this window must never be given a 3D border
      bit 3 set => this window must always be given a 3D border
      (note that ResEd erroneously created windows with both bits set,
      this case is treated as though both bits were clear)
  * Another two colour specifiers on the end of C validation string command
    for icons controls the foreground and background colours to be used when
    the icon is selected
  * Pointer shape is correctly reprogrammed by the creation of icon
    underneath it
  * Full stops in writable icons are treated the same as spaces from the
    point of view of cursor navigation
  * spritesize routine returns a size of 0 if the sprite didn't exist
    (probably fixes some rendering problems)
  * Adjust-click on back icon brings window to front
  My changes:
  * DeleteRight turned on
  * Icon bar title background is set to default in all resource sets (avoids
    translation table recalc)
  * Error box title now cream across all resource sets
  * RISC OS 4 changes made 32-bit compatible / high addresses safe
  * Undocumented FullIconClipping option disabled
  * Command help made consistent for internationalised and non-
    internationalised builds
  * WimpVisualFlags defaults made sensible
  * Menu side width affected by ThreeD option at *run* time not assemble time
  * Right-clicking on menus with writable items no longer data aborts
  * Auto-opened menus are now at RHS of current icon (matches RISC OS 3.1)
  * Colour menus were knackered unless menu tiling was enabled
  * Fixed a bug whereby adding messages to a task that wanted all messages
    actually caused it to lose all other messages. The RISC OS 4 fix for
    this didn't work
  * Fixed bug introduced in version 4.76: tasks that wanted no messages got
    all of them
  * Autoscrolling is updated every 8 cs rather than every 12 cs
  * Added menu texture to pre-RISC OS 4 sprites files
Admin:
  Tested on Tungsten.

Version 4.78. Tagged as 'Wimp-4_78'
@
text
@d103 1
@


1.4
log
@UTF-8 support from previous version switched in; additional alphabet-
conditional support added as follows:
* Correctly converts character index returned from Font_FindCaret into byte
  index into raw string.
* Left-arrow, right-arrow, delete-left and delete-right now act as far as
  the next character boundary, instead of to the next byte.
* Menu item text justification works again (it relies on overwriting spaces
  with hard space characters, which are two-byte characters in UTF-8).
* General key handling code has been rewritten. The Wimp now has three
  internal key input buffers - one each for taking keyboard-generated,
  task-generated, and function-key-generated strings. Each input buffer is
  processed in chunks of one character, rather than one byte; malformed
  UTF-8 characters are rejected, so tasks don't have to worry about them
  (simplifying their character-handling code). There is also a key output
  buffer, to ensure that (UTF-8) sequences of Key_Pressed events are not
  broken up.
* As a result of the above, multiple calls to Wimp_ProcessKey are now
  possible between calls to Wimp_Poll. Previously, this resulted in bytes
  getting jumbled up - making it useless for input of UTF-8 characters.
* Multi-byte characters are inserted into writeable icons in one go, so you
  don't see a brief flicker of the "malformed character" symbol while the
  initial bytes are being inserted.
* Multi-byte characters that don't entirely fit in a writeable icon buffer
  are not inserted at all.
* A new validation string command ("U") can limit the contents of a
  writeable by number of characters, instead of bytes. This will hide the
  character sizes from the user interface.
* Allowable characters (validation string command "A") now works on Unicode
  characters and character ranges.
* Various other minor bugs are fixed (Wimp_ProcessKey 13 can activate a
  writeable menu item, Shift-arrow keys are always consistent in firing off
  Key_Pressed events, etc.)
* Password icons supported: one symbol is displayed for each character
  (instead of for each byte); the display character (validation string
  command "D") can be any UTF-8 character; correctly displays the caret
  after set-caret-by-index calls, even though characters in the processed
  string are different width to those in the raw string, in password icons.

Other changes:
* The border around NC-style error boxes is resized when the error window
  is grown or shrunk.
* Messages, CmdHelp and Template files made consistent across resource
  directories, including support for all Ursula features.
* ShrinkableAreas turned back on in System=RCA builds.
* User interface features of desktop OS builds standardised.

Version 4.06. Tagged as 'Wimp-4_06'
@
text
@d101 3
@


1.4.4.1
log
@  Added Dan Ellis's multithreading support, on a development branch for now.
Detail:
  This breaks the equivalence between tasks and AMB slots, allowing many
  threads of execution to share the same AMB slot, where an application's
  heap is usually located. In API terms, it is presented as an extension to
  Wimp_StartTask, see Docs/Multithreading for more information. It is the
  caller's responsibility to create a new stack chunk for the new thread if
  required. Note that BASIC's variable storage model is fundamentally
  unsuited for multithreading.
Admin:
  This was developed in 2001 and was not committed at the time due to lack
  of testing and peer review. It is now being added as a branch from a
  contemporary trunk Wimp. Hopefully somebody will be interested enough to
  merge the branch into a recent version!

Version 4.66, 4.77.2.1. Tagged as 'Wimp-4_66-4_77_2_1'
@
text
@a99 1
	OptionD thread,    true                ; thread specific debug
@


1.3
log
@Ursula branch Wimp merged back onto trunk.
@
text
@d91 1
a91 1
	OptionD	temp,      false
@


1.2
log
@ARTtmp branch folded in
@
text
@d21 1
a21 1
	Option	hostvdu,   true                ; destination for debug output
d23 1
d96 4
@


1.2.2.1
log
@Hourglass depth now incremented by 1 between calls to Wimp_Poll; effect is
to automatically display hourglass whenever applications hog the CPU,
irrespective of whether they already display the hourglass themselves or not.
Hourglass is automatically smashed before any Command Windows are displayed
so that output-generating single-tasking programs are not forced to show the
hourglass due to the behaviour described above.
@
text
@a94 1
	OptionD autohg,    false               ; AutoHourglass
@


1.2.2.2
log
@Fixed occasional lock-ups when error boxes displayed.
Added ALIGN directive before watchdog callback label.
Added option to select double-height VDU 4 modes.
Added German resources.
Added necessary options for parallel-port debugging via the PDebugM module.
@
text
@d21 1
a21 1
	Option	hostvdu,   false                ; destination for debug output
a22 1
	Option	pdebug_module, true	       ; use PDebug module
d67 1
a67 1
	OptionD	err,       true                ; Wimp_ReportError and errors in general
@


1.2.2.3
log
@Main new features in Ursula build so far
(some are also available in other builds):

* New icon highlighting scheme - hue rotated 180 degrees, photographic negative,
  darkened 25% - suits Ursula icons better.
* Release-button window tools compile-time switch turned on.
* Any "TASK" word cleared on exit from Wimp_OpenWindow, Wimp_GetWindowState,
  Wimp_ForceRedraw and Wimp_CloseDown.
* Child windows are no longer allowed to be opened inside the icon bar.
* Message_IconizeAt generation optimised, and no longer calls non-X SWIs.
* Message_IconsChanged implemented, and switched out on speed grounds.
* Wimp_ReadSysInfo 15 removed, replaced with (new) Wimp_Extend 11.
* Backwindows are now segregated from normal windows. A new category,
  foreground windows, are added, and stay above all other windows. (The error
  box template is updated to make it a foreground window.)
* ROM sprites override RAM sprites (and duplicate RAM sprites are deleted
  during the building of the sprite lookup list, preceding the first sprite
  plot after a sprite pool update).
* Wimp_ReadSysInfo 16 added, to return sprite area pointers in order of
  priority (Wimp_BaseOfSprites retains the ROM/RAM distinction).
* Error box code altered:
  + symbolic names used for offsets into tempworkspace
  + error button text buffer enlarged
  + stretched error buttons now shrink back for next use
  + int_flush_opens called at appropriate points to ensure buttons are seen to
    slab in, and to reduce flicker when redisplaying error box at a different
    width (also fixes some redraw bugs)
  + Cancel button given the R6 type border when it will be activated by Return
    (and is therefore moved to the extreme right in such cases)
  + Escape now always selects the second-right button (unless there's only one
    button!) - this also fixes a bug when there's a single user-defined button
  + keypresses in "xxx may have gone wrong" error boxes are now correctly
    interpreted - previously the buttons available in the underlying box were
    being used to determine the effect of keys
  + maximum number of buttons increased from 4 to 8, and the machine no longer
    crashes when the maximum is exceeded
  + window stretches horizontally to keep error message to 7 lines or less
* Bugfix: opening or creating a window with a minimum x visible area coordinate
  of -1 was leading to any of smearing/flickering/recursive drawing. (This was
  actually due to a failure to recognise which windows' positions had been
  updated.)
* Features merged in from spinner branch Wimp:
  + support for UpCall_MediaSearchEndMessage added
  + control-termination allowed in upcalls (used to require null-termination)
  + escape character switched to default during error box display, then
    switched back again afterwards
* GetRectangle filters are now called with (internal) window handle in R10.
* Autohourglass is deactivated whenever WrchV is invoked. (Also optimised.)
* Action button bugfixes:
  + action buttons now deselect if the pointer is dragged off and a window tool
    is the pressed before all the buttons have been released
  + action buttons now slab in following a long (autorepeating) press on a
    scroll arrow window tool
@
text
@d21 1
a21 1
	Option	hostvdu,   false               ; destination for debug output
d23 1
a23 1
	Option	pdebug_module, false	       ; use PDebug module
d68 1
a68 1
	OptionD	err,       false               ; Wimp_ReportError and errors in general
a96 1
	OptionD sprprior,  false               ; ROM vs RAM sprite priority
@


1.2.2.4
log
@New features:
Dragboxes can now be clipped by and/or fixed to a given window's work area
SWI Wimp_AutoScroll implemented
Ursula icon highlighting scheme redesigned

Bugfixes:
Wimp_Extend 11 now performs the same check on R1 as the main SWI handling code
Message blocks now updated if in a dynamic area
Screenblanker now turned off when error box is displayed
ptr_double now turned off when a drag starts
@
text
@a97 1
	OptionD autoscr,   true                ; autoscrolling / drags within windows
@


1.2.2.5
log
@Iconise button removed from child windows
Icon bar now jumps to the back of the stack as soon as a window is opened above
it (excluding menus, dialogue boxes and foregroud windows). This is to avoid
the ambiguous situation when the icon bar can be part-way down the window stack.
Improved co-odination between auto-fronting and Shift-F12 behaviour.
Stopped scroll offset overflow during icon bar scroll.
Numerous features made configurable:
  WimpIconBarSpeed
  WimpIconBarAcceleration
  WimpSpritePrecedence
  WimpIconiseButton
  WimpStickyEdges (although not actually implemented yet)
  WimpAutoFrontIconBar
  WimpAutoFrontDelay
  WimpAutoScrollDelay
To make room for these in CMOS, Wimp<Drag|DoubleClick><Delay|Move> and
Wimp<AutoMenu|MenuDrag>Delay options are now stored in a more compressed form
in CMOS - but the *Configure interface is unaltered.
@
text
@d98 1
a98 1
	OptionD autoscr,   false               ; autoscrolling / drags within windows
@


1.2.2.6
log
@Window tool button type is now configurable.
Windows now keep the same depth when toggle-size tool is clicked with Adjust.
Fixed bug where drags in Eureka caused branch-through-zeros and other
miscellaneous errors.
Fixed a few stray non-X form SWI calls.
Extended applicability/functionality of "MyEntry" debug macro.
@
text
@a98 1
	OptionD poll2,     false               ; stages through Wimp_Poll
@


1.1
log
@file !Debug was initially added on branch ARTtmp.
@
text
@d1 96
@


1.1.2.1
log
@Added support for multiple options files (RO310, RO350, RO360, RO370, RCA,
Ursula).
Removed run-time MedusaOS checks.
Enabled correct build for RISC OS 3.1 machines.
Ensured that "freepoolinuse" is cleared before OS_ChangeDynamicArea
is intercepted.
Increased maxrects to 256.
Gave copy filter window handle in R10 (if ChildWindows).
Corrected a few border problems when no toolsprites.
Made toolsprites press in immediately - in particular close and toggle can
now be highlighted.
BounceClose flag no affects all of back,close,iconise and toggle.
Made "L" validation string parsing check manually for presence of a number,
to prevent error from OS_ReadUnsigned trashing MessageTrans' error buffers.
Allow error box buttons to stretch to fit text.
Fixed bug: floating point registers were not being saved unless on a portable.
Integrated some of the Wimp_TransferBlock fixes into Wimp08 from Wimp08s.
@
text
@a0 96
; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;========================================================================================
; Debugging options.
;
; To debug the Wimp, set debug to true, then turn on the debugXXX options of your choice.
;========================================================================================
;
	Option	hostvdu,   true                ; destination for debug output
	Option	debug_flush, true              ; flushing if going to file

	Option	DebugMemory, false

	Option	debug,	   false               ; ONLY FALSE IF NO DEBUGGING
	OptionD	omd,       false
	OptionD	sm,        false
	OptionD	nk,        false               ; Neil's special debugs
	OptionD	pk,        false               ; special 2
	OptionD	ptr,       false               ; pointer window
	OptionD	tmp,       false               ; templates
	OptionD	fp,        false               ; FP register saving
	OptionD	sv,        false               ; all service calls
	OptionD	dy,        false               ; ChangeDynamicArea monitoring
	OptionD	sw,        false               ; switching
	OptionD	co,        false               ; command window
	OptionD	xx,        false               ; misc
	OptionD	x1,        false               ; misc II
	OptionD	ic,        false               ; icons
	OptionD	icb,       false               ; icon bar
	OptionD	sc,        false               ; set caret
	OptionD	ms,        false               ; message passing
	OptionD	task,      false               ; for wholesale debugging!
	OptionD	task1,     false               ; for exception handlers etc.
	OptionD	task2,     false               ; for entry points
	OptionD	task3,     false               ; check for single-tasking errors
	OptionD	task4,     false               ; Idle poll performance monitoring
	OptionD	ints,      false
	OptionD	extent,    false
	OptionD	escape,    false               ; trap escape enabled on Wimp_Poll
	OptionD	crw,       false               ; window creation
	OptionD	opn,       false               ; window opening
	OptionD	child,     false               ; child windows
	OptionD	mode,      false               ; mode changing
	OptionD	bpr,       false               ; braindead panic redraw debugging
	OptionD	swp,       false               ; Swapping of tasks to disk.
	OptionD	spr,       false               ; Wimp sprite ops
	OptionD	bo,        false               ; Special borders
	OptionD	valid,     false               ; Service_ValidateAddress
	OptionD	fl,        false               ; Filter handling debugging
	OptionD	am,        false               ; Auto opening of submenus
	OptionD	ff,        false               ; Fancy font for system text
	OptionD	ub,        false               ; User definable scroll bars
	OptionD	val,       false               ; New validation string commands (K)
	OptionD	check,     false               ; Check for inconsistent window stacks and flags
	OptionD	err,       false               ; Wimp_ReportError and errors in general
	OptionD	autoopen,  false               ; For opening of wimp's own windows
	OptionD	rma,       false
	OptionD	perth,     false               ; For Perth power managerment
	OptionD	colours,   false               ; For use of ColourTrans
	OptionD	sprite,    false               ; For sprite caching
	OptionD	msgsel,    false               ; Selective message passing
	OptionD	menu,      false               ; New menu handling (indirection and bits)
	OptionD	tools,     false               ; Tool caching and ToolSprite commands
	OptionD	tools2,    false               ; Plotting and clicking
	OptionD	borders,   false               ; border plotting on icons
	OptionD	inverse,   false               ; Colour inversion/highlighting
	OptionD	font,      false               ; anti-aliased fonts in icons
	OptionD	fcol,      false               ; colour of antialiased fonts
	OptionD	die,       false               ; Die entry
	OptionD	systmpl,   false               ; Loading Wimp's templates
	OptionD	key,       false               ; ProcessKey handling
	OptionD	scroll,    false               ; Funky scroll bars
	OptionD	poll,      false               ; PollWord list management
	OptionD	menuparam, false               ; CreateMenu parameters
	OptionD	exit,      false               ; ExitWimp
	OptionD	L40,       false               ; Fancy font in L40-type icons
	OptionD	menuw,     false               ; Automatic calculation of menu width
	OptionD	temp,      false
	OptionD	mjs,       false               ; Mike's debugs
	OptionD	mjs2,      false               ; Mike's debugs 2
	OptionD	mjs3,      false               ; Mike's debugs 3
	OptionD	mjs4,      false               ; Mike's debugs 4 (TransferBlock)

	END
@
