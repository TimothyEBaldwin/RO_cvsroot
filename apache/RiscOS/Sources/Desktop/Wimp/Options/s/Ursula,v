head	1.13;
access;
symbols
	Wimp-5_62:1.13
	Wimp-5_61:1.13
	Wimp-5_60:1.13
	Wimp-5_59:1.13
	Wimp-5_58:1.13
	Wimp-5_57:1.13
	Wimp-5_56:1.13
	Wimp-5_55:1.13
	Wimp-5_54:1.13
	Wimp-5_53:1.13
	Wimp-5_52:1.13
	Wimp-5_51:1.13
	Wimp-5_50:1.13
	Wimp-5_49:1.12
	Wimp-5_48:1.12
	Wimp-5_47-file1ad:1.12
	Wimp-5_47:1.12
	Wimp-5_46:1.12
	Wimp-5_45:1.12
	Wimp-5_44:1.12
	Wimp-5_43:1.12
	Wimp-5_42:1.12
	Wimp-5_41:1.12
	Wimp-5_40:1.11
	Wimp-5_39:1.11
	Wimp-5_38:1.11
	Wimp-5_37:1.11
	Wimp-5_36:1.11
	Wimp-5_35:1.11
	Wimp-5_34:1.11
	Wimp-5_33:1.11
	Wimp-5_32:1.11
	Wimp-5_31:1.11
	Wimp-5_30:1.11
	Wimp-530-pre4:1.11
	Wimp-5_30-pre3:1.11
	Wimp-5_30-pre2:1.11
	Wimp-5_30-pre1:1.11
	Wimp-5_29:1.10
	Wimp-5_28:1.10
	Wimp-5_27:1.10
	Wimp-5_26:1.10
	Wimp-5_25:1.10
	Wimp-5_24:1.9
	Wimp-5_23:1.8
	Wimp-5_22:1.8
	Wimp-5_21:1.7
	Wimp-5_20:1.7
	Wimp-5_19:1.7
	Wimp-5_18:1.7
	Wimp-5_17:1.7
	Wimp-5_16:1.7
	Wimp-5_15:1.7
	Wimp-5_14:1.7
	Wimp-5_13:1.7
	Wimp-5_12:1.7
	Wimp-5_11:1.7
	Wimp-5_10:1.7
	Wimp-5_09:1.7
	Wimp-5_08:1.7
	Wimp-5_07:1.7
	Wimp-5_06:1.7
	Wimp-5_05:1.7
	Wimp-5_04:1.7
	Wimp-5_03:1.7
	Wimp-5_02:1.7
	Wimp-5_01:1.7
	Wimp-4_66-4_77_2_1:1.5.4.1
	bavison_Threads_dev:1.5.0.4
	bavison_Threads_dev_bp:1.5
	Wimp-5_00:1.7
	Wimp-4_100:1.7
	Wimp-4_99:1.7
	Wimp-4_98:1.7
	Wimp-4_97:1.7
	Wimp-4_96:1.7
	Wimp-4_95:1.7
	Wimp-4_94:1.7
	RO_5_07:1.7
	Wimp-4_93:1.7
	Wimp-4_92:1.7
	Wimp-4_91:1.7
	Wimp-4_90:1.7
	Wimp-4_89:1.7
	Wimp-4_88:1.7
	Wimp-4_87:1.7
	Wimp-4_86:1.7
	Wimp-4_85:1.7
	Wimp-4_84:1.7
	Wimp-4_83:1.7
	Wimp-4_82:1.7
	Wimp-4_81:1.7
	Wimp-4_80:1.7
	Wimp-4_79:1.7
	Wimp-4_78:1.7
	Wimp-4_77:1.6
	Wimp-4_76:1.6
	Wimp-4_75:1.5
	Wimp-4_74:1.5
	Wimp-4_73:1.5
	Wimp-4_72:1.5
	Wimp-4_71:1.5
	Wimp-4_70:1.5
	Wimp-4_69:1.5
	Wimp-4_68:1.5
	Wimp-4_67:1.5
	Wimp-4_66:1.5
	Wimp-4_65:1.5
	Wimp-4_64:1.5
	Wimp-4_63:1.5
	Wimp-4_62:1.5
	Wimp-4_61:1.5
	Wimp-4_60:1.5
	Wimp-4_59:1.5
	Wimp-4_58:1.5
	Wimp-4_36-4_46_2_6:1.5
	Wimp-4_57:1.5
	Alpnet_approved:1.5
	Wimp-4_36-4_46_2_5:1.5
	Wimp-4_56:1.5
	dellis_autobuild_BaseSW:1.5
	Wimp-4_36-4_46_2_4:1.5
	Wimp-4_36-4_46_2_3:1.5
	Wimp-4_55:1.5
	Wimp-4_54:1.5
	Wimp-4_36-4_46_2_2:1.5
	Wimp-4_53:1.5
	Wimp-4_36-4_46_2_1:1.5
	Bethany:1.5.0.2
	Wimp-4_52:1.5
	Wimp-4_51:1.5
	Wimp-4_50:1.5
	Wimp-4_49:1.5
	Wimp-4_48:1.5
	Wimp-4_47:1.5
	Wimp-4_46:1.5
	Wimp-4_45:1.5
	Wimp-4_44:1.5
	Wimp-4_43:1.5
	Wimp-4_42:1.5
	sbrodie_sedwards_16Mar2000:1.5
	Wimp-4_41:1.5
	Wimp-4_40:1.5
	Wimp-4_39:1.5
	Wimp-4_38:1.5
	Wimp-4_37:1.5
	Wimp-4_36:1.5
	Wimp-4_35:1.5
	Wimp-4_34:1.5
	Wimp-4_33:1.5
	Wimp-4_32:1.5
	Wimp-4_31:1.4
	dcotton_autobuild_BaseSW:1.5
	Wimp-4_30:1.4
	Wimp-4_29:1.4
	Wimp-4_28:1.4
	Wimp-4_27:1.4
	Wimp-4_26:1.4
	Wimp-4_25:1.4
	Wimp-4_24:1.4
	Wimp-4_23:1.4
	Wimp-4_22:1.4
	Wimp-4_21:1.4
	Wimp-4_20:1.4
	Wimp-4_19:1.4
	Wimp-4_18:1.4
	Wimp-4_17:1.4
	Wimp-4_16:1.4
	Wimp-4_15:1.4
	Wimp-4_14:1.4
	Wimp-4_13:1.4
	Wimp-4_12:1.4
	mstphens_UrsulaRiscPCBuild_20Nov98:1.2.2.11
	bavison_Wimp-4_11:1.4
	Ursula_RiscPC:1.2.2.11.0.2
	Wimp-4_11:1.4
	Wimp-4_10:1.4
	Wimp-4_09:1.4
	Wimp-4_08:1.4
	Wimp-4_07:1.4
	Wimp-4_06:1.4
	Wimp-4_05:1.3
	Wimp-4_04:1.3
	bavison_Wimp-4_03_noshrinkables:1.3
	Wimp-4_03:1.3
	Wimp-4_02:1.3
	Ursula_merge:1.2.2.11
	bavison_Wimp-4_01:1.3
	Wimp-4_01:1.3
	bavison_Wimp-4_00_TRUNK:1.3
	bavison_Wimp-4_00:1.2.2.11
	mjrobert_Wimp_3_98:1.2.2.2
	rthornb_UrsulaBuild-19Aug1998:1.2.2.11
	UrsulaBuild_FinalSoftload:1.2.2.11
	bavison_Wimp-3_99t:1.2.2.11
	rthornb_UrsulaBuild-12Aug1998:1.2.2.11
	bavison_Wimp-3_99s:1.2.2.11
	aglover_UrsulaBuild-05Aug1998:1.2.2.11
	bavison_Wimp-3_99r:1.2.2.11
	rthornb_UrsulaBuild-29Jul1998:1.2.2.11
	bavison_Wimp-3_99q:1.2.2.11
	rthornb_UrsulaBuild-22Jul1998:1.2.2.10
	bavison_Wimp-3_99p:1.2.2.10
	rthornb_UrsulaBuild-15Jul1998:1.2.2.10
	bavison_Wimp-3_99o:1.2.2.10
	bavison_Wimp-3_99n:1.2.2.9
	rthornb_UrsulaBuild-07Jul1998:1.2.2.8
	bavison_Wimp-3_99m:1.2.2.8
	rthornb_UrsulaBuild-17Jun1998:1.2.2.8
	rthornb_UrsulaBuild-03Jun1998:1.2.2.8
	bavison_Wimp-3_99l:1.2.2.8
	rthornb_UrsulaBuild-27May1998:1.2.2.8
	rthornb_UrsulaBuild-21May1998:1.2.2.8
	bavison_Wimp-3_99k:1.2.2.8
	bavison_Wimp-3_99j:1.2.2.8
	bavison_Wimp-3_99i:1.2.2.8
	bavison_Wimp-3_99h:1.2.2.8
	rthornb_UrsulaBuild_01May1998:1.2.2.7
	bavison_Wimp_399g:1.2.2.7
	bavison_Wimp_399f:1.2.2.7
	bavison_Wimp_399e:1.2.2.7
	bavison_Wimp_399d:1.2.2.6
	bavison_Wimp_399c:1.2.2.5
	Wimp_3_98:1.2.2.2
	kbracey_AW97:1.2.2.1
	Daytona:1.2.0.4
	Daytona_bp:1.2
	Ursula:1.2.0.2
	Ursula_bp:1.2
	Wimp_3_91:1.2
	ARTtmp_bp:1.1
	ARTtmp_merge:1.1.2.1
	ARTtmp:1.1.0.2;
locks; strict;
comment	@# @;


1.13
date	2015.10.10.12.14.23;	author jlee;	state Exp;
branches;
next	1.12;
commitid	hTZlaaPZyibzGyEy;

1.12
date	2014.04.19.09.39.19;	author rsprowson;	state Exp;
branches;
next	1.11;
commitid	wEWgncfqw43A9hxx;

1.11
date	2013.06.01.16.05.15;	author rsprowson;	state Exp;
branches;
next	1.10;
commitid	vUA7bZz16PeFCVRw;

1.10
date	2013.05.06.11.54.45;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	dyQdYmrTRpty5zOw;

1.9
date	2013.05.03.21.08.11;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	QS59VqQdUOQmfeOw;

1.8
date	2013.04.10.20.48.42;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	oyotsfYRPfGzSgLw;

1.7
date	2002.10.30.17.43.42;	author bavison;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.23.17.12.27;	author bavison;	state Exp;
branches;
next	1.5;

1.5
date	99.10.07.13.28.08;	author bavison;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	98.10.20.16.20.19;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	98.09.18.16.13.19;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	97.05.07.14.14.55;	author kbracey;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	97.04.28.16.49.18;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.5.4.1
date	2007.10.07.02.17.29;	author bavison;	state Exp;
branches;
next	;
commitid	NSavcPvbNd36pBAs;

1.2.2.1
date	97.07.07.11.24.44;	author bavison;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	97.10.21.14.01.24;	author mstphens;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	98.03.10.16.11.11;	author bavison;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	98.03.26.19.31.25;	author bavison;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	98.04.03.19.38.27;	author bavison;	state Exp;
branches;
next	1.2.2.6;

1.2.2.6
date	98.04.07.17.53.37;	author bavison;	state Exp;
branches;
next	1.2.2.7;

1.2.2.7
date	98.04.17.16.54.00;	author bavison;	state Exp;
branches;
next	1.2.2.8;

1.2.2.8
date	98.05.08.11.43.21;	author bavison;	state Exp;
branches;
next	1.2.2.9;

1.2.2.9
date	98.07.13.14.10.35;	author bavison;	state Exp;
branches;
next	1.2.2.10;

1.2.2.10
date	98.07.14.16.33.45;	author bavison;	state Exp;
branches;
next	1.2.2.11;

1.2.2.11
date	98.07.28.17.10.58;	author bavison;	state Exp;
branches;
next	;

1.1.2.1
date	97.04.28.16.49.19;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Reinstate Wimp_ClaimFreeMemory
Detail:
  This restores support for Wimp_ClaimFreeMemory, via having the Wimp manage a small-ish (4MB) DA that is used to satisfy Wimp_ClaimFreeMemory requests. The Wimp will only ever grow the DA, but the DA is shrinkable, so the system should shrink it as necessary should the free pool run too low.
  Options/s/!Default, Options/s/32, Options/s/Ursula - Add DynamicAreaWCF option to control support for the Wimp_ClaimFreeMemory DA. Enable the option for any builds of the module destined for RISC OS 5.
  Options/s/!Debug - New debug option for Wimp_ClaimFreeMemory debugging (mainly DynamicAreaWCF code path)
  Wimp/s/Wimp01 - Add calls to create/destroy DA on startup/shutdown
  Wimp/s/Wimp08s - DA create/destroy implementation. DA is only used if the free pool is a PMP or the Wimp expects kernel free pool locking but the kernel doesn't support it. Modify Wimp_ClaimFreeMemory to use the DA if it's present.
Admin:
  Tested on Raspberry Pi
  Restores compatibility with software which relies on Wimp_ClaimFreeMemory, e.g. GDraw module (cause of "No free memory" errors reported by many)
  Note that Wimp_ClaimFreeMemory is still considered deprecated and support may be removed in future OS versions.


Version 5.50. Tagged as 'Wimp-5_50'
@
text
@; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;
; Wimp options for an Ursula build of the Window Manager
;

        Option  ChocolateScreen,        true                    ; Clean cached screen after redraw loops
        Option  ShrinkableAreas,        true                    ; Support Shrinkable Dynamic Areas
        Option  KernelLocksFreePool,    true                    ; use OS_Memory 10 to lock Free Pool for Wimp_ClaimFreeMemory

        Option  UrsulaHighlighting,     true                    ; Uses icon highlighting algorithm to suit Ursula new-look

        Option  TrueIcon2,              true :LAND: TrueIcon1   ; true colour support, phase 2
        Option  TrueIcon3,              true :LAND: TrueIcon2   ; true colour support, phase 3 (windows)
        Option  IconiseButton,          true                    ; Windows given iconise button
        Option  BounceClose,            true                    ; Furniture buttons are release-type
        Option  ForegroundWindows,      true                    ; Layering of windows within each stack
        Option  SpritePriority,         true                    ; Allow configurable sprite pool priority
        Option  Autoscr,                true                    ; Add Wimp_AutoScroll and dragbox-within-window facilities
        Option  StickyEdges,            false  ; unimplemented  ; Allow windows to "stick" when dragged over edge of screen
        Option  MultiClose,             true                    ; Allow Ctrl-Alt clicks on close/iconise buttons
        Option  PushBothBars,           true                    ; Push in both scrollbars on adjust-drags
        Option  AcceptLoosePointers,    false                   ; Sloppy "any -ve will do" checks (for 64M memory map only)
        Option  UTF8,                   true                    ; support for UTF-8 alphabet (Unicode)

        Option  RO4,                    true                    ; RISC OS 4 extensions
        Option  CanTileManually,        false                   ; retain manual tiling code incase SpriteOp 65 missing
        Option  DynamicAreaWCF,         true                    ; RISC OS 5.23 drops support for free pool locking, so use a private DA instead 

DefaultNextSlot SETA 1024*1024

        END
@


1.12
log
@Fix for missing window backgrounds/scroll bars when tiled sprite op not supported
For the backgrounds, the code was switched with 'standalone' however the Wimp actively wipes SA_FLAGS in its makefile so the standalone switch is always false during the install phase of a disc build. Also, the standalone switch is used to include resources which are ordinarily handled by the boot sequence prefixing the WindowManager$Path rather than using ResourceFS.
For the scroll bars, the decision to plot manually was being made by looking at the V flag on return from Tool_SpriteOp, except that that function uses EntryS/EXITS so the caller can't see the return flags.
Added new switch CanTileManually, removed 0 use tilewithspriteops switch.
Changed single use of NoFontBodge switch to use preferred 'outlinefont'.
Tested on RISC OS 4.02.

Version 5.41. Tagged as 'Wimp-5_41'
@
text
@d40 1
@


1.11
log
@Fix for corrupt register in pushfontstring with password-style substitution
When CnP=TRUE but UTF8=FALSE the code path through pushfontstring for icons using the 'D' validation string would use R11 as a temporary without having preserved it (the UTF8 case preserves it because it uses R11 as a bitmask of substitutes).
Changed to always preserve R11, the routine is so huge one extra pushed register isn't going to slow it down measurably.
Adjusted options files now this combination is safe.

Tagged as Wimp-5_30-pre1.
@
text
@d39 1
@


1.10
log
@Refinements to disc based targets especially
Previous attempt to disable Sprites11 support for 3.10 and 3.50 hadn't spotted it was reenabled in the common options, also the Sprites11 switch was also tied up in Wimp$IconTheme support.
Title bars would flicker when picked up when using a tool sprite set with no 'p' pushed equivalents on RISC OS 4.0x due to screen cache.
Makefile now installs a default set of tools & sprites when target is ThemeDefs.
CLI limit reduced to 256 pre Ursula to save RAM.

Options/!Common:
  Promote Sprites11 switch into !Default
  Remove fixrmatools
Options/!Default:
  Sprites11 true by default
  LongCommandLines true by default, false on targets pre Ursula
  Remove ServiceCallTable (harmless to have it in all cases)
NewSWIs.s:
  Enable Wimp_Extend 13 all the time
Wimp01.s:
  Reduce RMA use by vital 1.5k for non long command line case
  Change sense of Sprites11 switch to adopt all its previous functionality, but not look for '11' suffix when the switch is false
  Adopt ServiceCallTable switch permanently
Wimp02.s:
  Comments ammended
Wimp07.s:
  Range of ADR
Wimp10.s:
  Change sense of Sprites11 switch to adopt all its previous functionality, but not look for '11' suffix when the switch is false
  Adopt :LNOT: fixrmatools switch permanently
  Supress title bar sprite plotting when none of the sprites exist

Version 5.25. Tagged as 'Wimp-5_25'
@
text
@d36 1
@


1.9
log
@Slacken pointer checks
The pointer comparison checking required when running in a system with > 64M memory was tightened up from Wimp-4_75 to Wimp-4_76, but to allow the module to target pre RISC OS 5 systems an option to relax those checks is required.
Each check has been revisited and where appropriate demarked with a "AcceptLoosePointer" macro, which just remaps the pointer into the stricter form and carries on. In the strict checking case, the macro reduces to nothing.

Detail:
Add AcceptLoosePointers switch.
Retire singular use of StrongARM switch (calling XOS_SynchroniseCodeAreas is harmless pre StrongARM anyway).
Rename Ursula_RPC options to RO400.
Put duplicate documentation in the attic.
Allow -2 or -1 as the iconbar handle in Wimp_ResizeIcon (ticket #203).
Tighten up the list terminator check in the DebugMemory switch of Memory.s

Tested on RISC OS 3.10 (emulated), 3.50, 3.60, 3.70, 4.02.

Version 5.24. Tagged as 'Wimp-5_24'
@
text
@a18 1
        Option  ServiceCallTable,       true                    ; Add Ursula kernel Service Call table
@


1.8
log
@Build fixes for variants pre RISC OS 5
Minor fixups as part of univeral !Boot work.
Options no longer ASSERT on International_Help (which is a definition exported by the kernel, rather than a build switch), and instead define a switch which is true for > 3.50.
Non UTF8 supporting case has simple substitutes for Wimp_TextOp.
Legacy_DomainId and LegacyIRQsema no longer cause NULL pointer dereference.
MOVeQ => MOVEQ to placate ObjAsm.

Ursula_RPC version built and used briefly on RISC OS 4.02 host. No other run time testing.

Version 5.22. Tagged as 'Wimp-5_22'
@
text
@d36 1
@


1.7
log
@  Merged in RISC OS 4.02 changes (including ROM patches). Also som bugfixes.
Detail:
  RISC OS 4 changes:
  * Font blending for desktop font (based on NC code, but now configurable)
  * 3-D window/menu/iconbar borders
  * Textured menu backgrounds
  * Loss of rubout box in unfilled text+sprite icons
  * *WimpVisualFlags controls various aspects of cosmetic changes above
  * Iconise button "slot" glyph slightly shorter (but only adopted in the RO400
    Resource directory)
  * Command window has front-window flag set
  * Byte at +39 of the window block has gained two new flag bits:
      bit 2 set => this window must never be given a 3D border
      bit 3 set => this window must always be given a 3D border
      (note that ResEd erroneously created windows with both bits set,
      this case is treated as though both bits were clear)
  * Another two colour specifiers on the end of C validation string command
    for icons controls the foreground and background colours to be used when
    the icon is selected
  * Pointer shape is correctly reprogrammed by the creation of icon
    underneath it
  * Full stops in writable icons are treated the same as spaces from the
    point of view of cursor navigation
  * spritesize routine returns a size of 0 if the sprite didn't exist
    (probably fixes some rendering problems)
  * Adjust-click on back icon brings window to front
  My changes:
  * DeleteRight turned on
  * Icon bar title background is set to default in all resource sets (avoids
    translation table recalc)
  * Error box title now cream across all resource sets
  * RISC OS 4 changes made 32-bit compatible / high addresses safe
  * Undocumented FullIconClipping option disabled
  * Command help made consistent for internationalised and non-
    internationalised builds
  * WimpVisualFlags defaults made sensible
  * Menu side width affected by ThreeD option at *run* time not assemble time
  * Right-clicking on menus with writable items no longer data aborts
  * Auto-opened menus are now at RHS of current icon (matches RISC OS 3.1)
  * Colour menus were knackered unless menu tiling was enabled
  * Fixed a bug whereby adding messages to a task that wanted all messages
    actually caused it to lose all other messages. The RISC OS 4 fix for
    this didn't work
  * Fixed bug introduced in version 4.76: tasks that wanted no messages got
    all of them
  * Autoscrolling is updated every 8 cs rather than every 12 cs
  * Added menu texture to pre-RISC OS 4 sprites files
Admin:
  Tested on Tungsten.

Version 4.78. Tagged as 'Wimp-4_78'
@
text
@a38 2
        ASSERT  International_Help <> 0

@


1.6
log
@  Given a good thrashing.
Detail:
  All pointers passed to the Wimp (mode selectors, menus, sprite areas,
  palettes, pollwords, validation strings, message lists, routines etc etc)
  in any of its APIs can now be anywhere within the 32-bit address range.
  In general, whenever "<= 0" was accepted as a null condition, the value
  must now be either 0 or -1. It should also be tolerant of system memory
  areas (supervisor stack and RMA) being in the top half of memory.
  Also:
  * Default next slot now a build option - Ursula builds (eg Tungsten) use
    1024K instead of 640K
  * Ursula builds no longer have a build variant in the help string
  * Autosenses ROM location
  * CR-LFs in *Configure messages replaced with LF-CRs
  * Added Iyonix resources (currently based on Morris4)
  * Morris4 sprites files have gained file_lxa, small_lxa, file_unf,
    small_unf and lo!help sprites
  * Ursula sprites files have gained lo!help sprites
  * *WimpSlot can take memory sizes in megabytes or gigabytes
Admin:
  Tested on a "traditional" memory-mapped Tungsten.

Version 4.76. Tagged as 'Wimp-4_76'
@
text
@d37 2
@


1.5
log
@Switched Euro option on for all builds, at Kevin's request.

(This stops system font character 128 being reprogrammed to a tick, and also
stops the desktop font being switched to WimpSymbol when character 128 is
encountered.)

Version 4.32. Tagged as 'Wimp-4_32'
@
text
@a18 2
module_postfix	SETS	" Ursula"

d38 2
@


1.5.4.1
log
@  Added Dan Ellis's multithreading support, on a development branch for now.
Detail:
  This breaks the equivalence between tasks and AMB slots, allowing many
  threads of execution to share the same AMB slot, where an application's
  heap is usually located. In API terms, it is presented as an extension to
  Wimp_StartTask, see Docs/Multithreading for more information. It is the
  caller's responsibility to create a new stack chunk for the new thread if
  required. Note that BASIC's variable storage model is fundamentally
  unsuited for multithreading.
Admin:
  This was developed in 2001 and was not committed at the time due to lack
  of testing and peer review. It is now being added as a branch from a
  contemporary trunk Wimp. Hopefully somebody will be interested enough to
  merge the branch into a recent version!

Version 4.66, 4.77.2.1. Tagged as 'Wimp-4_66-4_77_2_1'
@
text
@a37 1
        Option  Threads,                true                    ; Supply multithreading support
@


1.4
log
@UTF-8 support from previous version switched in; additional alphabet-
conditional support added as follows:
* Correctly converts character index returned from Font_FindCaret into byte
  index into raw string.
* Left-arrow, right-arrow, delete-left and delete-right now act as far as
  the next character boundary, instead of to the next byte.
* Menu item text justification works again (it relies on overwriting spaces
  with hard space characters, which are two-byte characters in UTF-8).
* General key handling code has been rewritten. The Wimp now has three
  internal key input buffers - one each for taking keyboard-generated,
  task-generated, and function-key-generated strings. Each input buffer is
  processed in chunks of one character, rather than one byte; malformed
  UTF-8 characters are rejected, so tasks don't have to worry about them
  (simplifying their character-handling code). There is also a key output
  buffer, to ensure that (UTF-8) sequences of Key_Pressed events are not
  broken up.
* As a result of the above, multiple calls to Wimp_ProcessKey are now
  possible between calls to Wimp_Poll. Previously, this resulted in bytes
  getting jumbled up - making it useless for input of UTF-8 characters.
* Multi-byte characters are inserted into writeable icons in one go, so you
  don't see a brief flicker of the "malformed character" symbol while the
  initial bytes are being inserted.
* Multi-byte characters that don't entirely fit in a writeable icon buffer
  are not inserted at all.
* A new validation string command ("U") can limit the contents of a
  writeable by number of characters, instead of bytes. This will hide the
  character sizes from the user interface.
* Allowable characters (validation string command "A") now works on Unicode
  characters and character ranges.
* Various other minor bugs are fixed (Wimp_ProcessKey 13 can activate a
  writeable menu item, Shift-arrow keys are always consistent in firing off
  Key_Pressed events, etc.)
* Password icons supported: one symbol is displayed for each character
  (instead of for each byte); the display character (validation string
  command "D") can be any UTF-8 character; correctly displays the caret
  after set-caret-by-index calls, even though characters in the processed
  string are different width to those in the raw string, in password icons.

Other changes:
* The border around NC-style error boxes is resized when the error window
  is grown or shrunk.
* Messages, CmdHelp and Template files made consistent across resource
  directories, including support for all Ursula features.
* ShrinkableAreas turned back on in System=RCA builds.
* User interface features of desktop OS builds standardised.

Version 4.06. Tagged as 'Wimp-4_06'
@
text
@a26 1
        Option  Euro,                   true                    ; Don't map fancy fonts' char 128 to tick - used for Euro
@


1.3
log
@Ursula branch Wimp merged back onto trunk.
@
text
@d19 2
d22 7
a32 5
        Option  ChocolateScreen,        true                    ; Clean cached screen after redraw loops
        Option  ShrinkableAreas,        true                    ; Support Shrinkable Dynamic Areas
        Option  KernelLocksFreePool,    true                    ; use OS_Memory 10 to lock Free Pool for Wimp_ClaimFreeMemory
        Option  StretchErrorText,       true                    ; Stretch error box to contain long error messages neatly
        Option  UrsulaHighlighting,     true                    ; Uses icon highlighting algorithm to suit Ursula new-look
a37 1
        Option  Euro,                   true                    ; Don't map fancy fonts' char 128 to tick - used for Euro
@


1.2
log
@ARTtmp branch folded in
@
text
@d19 17
a35 2
	Option	IconiseButton,		true			; Windows given iconise button
	Option	ChocolateScreen,	true			; Clean cached screen after redraw loops
d37 1
a37 1
 	ASSERT	International_Help <> 0
@


1.2.2.1
log
@Hourglass depth now incremented by 1 between calls to Wimp_Poll; effect is
to automatically display hourglass whenever applications hog the CPU,
irrespective of whether they already display the hourglass themselves or not.
Hourglass is automatically smashed before any Command Windows are displayed
so that output-generating single-tasking programs are not forced to show the
hourglass due to the behaviour described above.
@
text
@a20 1
	Option	AutoHourglass,		true			; Hourglass automatically on between Wimp_Polls (requires Ursula Task Manager and Hourglass)
@


1.2.2.2
log
@ - corrected comments re Wimp08 versus Wimp08s
 - tidied up Wimp08s
 - Added optional use of kernel lock for Wimp_ClaimFreeMemory, controlled
   by KernelLocksFreePool in Options (currently true for Ursula only)
 - restricted max size of Wimp Sprite Pool dynamic area to 16M (controlled
   by WimpSpritePoolMaxSize in s.Memory) to avoid wasted address space on
   large memory machines
@
text
@d19 3
a21 5
        Option  IconiseButton,          true                    ; Windows given iconise button
        Option  ChocolateScreen,        true                    ; Clean cached screen after redraw loops
        Option  ShrinkableAreas,        true                    ; Support Shrinkable Dynamic Areas
        Option  KernelLocksFreePool,    true                    ; use OS_Memory 10 to lock Free Pool for Wimp_ClaimFreeMemory
        Option  AutoHourglass,          true                    ; Hourglass automatically on between Wimp_Polls (requires Ursula Task Manager and Hourglass)
d23 1
a23 1
        ASSERT  International_Help <> 0
@


1.2.2.3
log
@Main new features in Ursula build so far
(some are also available in other builds):

* New icon highlighting scheme - hue rotated 180 degrees, photographic negative,
  darkened 25% - suits Ursula icons better.
* Release-button window tools compile-time switch turned on.
* Any "TASK" word cleared on exit from Wimp_OpenWindow, Wimp_GetWindowState,
  Wimp_ForceRedraw and Wimp_CloseDown.
* Child windows are no longer allowed to be opened inside the icon bar.
* Message_IconizeAt generation optimised, and no longer calls non-X SWIs.
* Message_IconsChanged implemented, and switched out on speed grounds.
* Wimp_ReadSysInfo 15 removed, replaced with (new) Wimp_Extend 11.
* Backwindows are now segregated from normal windows. A new category,
  foreground windows, are added, and stay above all other windows. (The error
  box template is updated to make it a foreground window.)
* ROM sprites override RAM sprites (and duplicate RAM sprites are deleted
  during the building of the sprite lookup list, preceding the first sprite
  plot after a sprite pool update).
* Wimp_ReadSysInfo 16 added, to return sprite area pointers in order of
  priority (Wimp_BaseOfSprites retains the ROM/RAM distinction).
* Error box code altered:
  + symbolic names used for offsets into tempworkspace
  + error button text buffer enlarged
  + stretched error buttons now shrink back for next use
  + int_flush_opens called at appropriate points to ensure buttons are seen to
    slab in, and to reduce flicker when redisplaying error box at a different
    width (also fixes some redraw bugs)
  + Cancel button given the R6 type border when it will be activated by Return
    (and is therefore moved to the extreme right in such cases)
  + Escape now always selects the second-right button (unless there's only one
    button!) - this also fixes a bug when there's a single user-defined button
  + keypresses in "xxx may have gone wrong" error boxes are now correctly
    interpreted - previously the buttons available in the underlying box were
    being used to determine the effect of keys
  + maximum number of buttons increased from 4 to 8, and the machine no longer
    crashes when the maximum is exceeded
  + window stretches horizontally to keep error message to 7 lines or less
* Bugfix: opening or creating a window with a minimum x visible area coordinate
  of -1 was leading to any of smearing/flickering/recursive drawing. (This was
  actually due to a failure to recognise which windows' positions had been
  updated.)
* Features merged in from spinner branch Wimp:
  + support for UpCall_MediaSearchEndMessage added
  + control-termination allowed in upcalls (used to require null-termination)
  + escape character switched to default during error box display, then
    switched back again afterwards
* GetRectangle filters are now called with (internal) window handle in R10.
* Autohourglass is deactivated whenever WrchV is invoked. (Also optimised.)
* Action button bugfixes:
  + action buttons now deselect if the pointer is dragged off and a window tool
    is the pressed before all the buttons have been released
  + action buttons now slab in following a long (autorepeating) press on a
    scroll arrow window tool
@
text
@a19 1
        Option  BounceClose,            true                    ; Furniture buttons are release-type
a22 1
        Option  StretchErrorText,       true                    ; Stretch error box to contain long error messages neatly
a23 3
        Option  UrsulaHighlighting,     true                    ; Uses icon highlighting algorithm to suit Ursula new-look
        Option  ForegroundWindows,      true                    ; Layering of windows within each stack
        Option  SpritePriority,         true                    ; Allow configurable sprite pool priority
@


1.2.2.4
log
@New features:
Dragboxes can now be clipped by and/or fixed to a given window's work area
SWI Wimp_AutoScroll implemented
Ursula icon highlighting scheme redesigned

Bugfixes:
Wimp_Extend 11 now performs the same check on R1 as the main SWI handling code
Message blocks now updated if in a dynamic area
Screenblanker now turned off when error box is displayed
ptr_double now turned off when a drag starts
@
text
@a28 1
        Option  Autoscr,                true                    ; Add Wimp_AutoScroll and dragbox-within-window facilities
@


1.2.2.5
log
@Iconise button removed from child windows
Icon bar now jumps to the back of the stack as soon as a window is opened above
it (excluding menus, dialogue boxes and foregroud windows). This is to avoid
the ambiguous situation when the icon bar can be part-way down the window stack.
Improved co-odination between auto-fronting and Shift-F12 behaviour.
Stopped scroll offset overflow during icon bar scroll.
Numerous features made configurable:
  WimpIconBarSpeed
  WimpIconBarAcceleration
  WimpSpritePrecedence
  WimpIconiseButton
  WimpStickyEdges (although not actually implemented yet)
  WimpAutoFrontIconBar
  WimpAutoFrontDelay
  WimpAutoScrollDelay
To make room for these in CMOS, Wimp<Drag|DoubleClick><Delay|Move> and
Wimp<AutoMenu|MenuDrag>Delay options are now stored in a more compressed form
in CMOS - but the *Configure interface is unaltered.
@
text
@a29 1
        Option  StickyEdges,            true                    ; Allow windows to "stick" when dragged over edge of screen
@


1.2.2.6
log
@Added Ursula Service Call table
Flushes cached screen after dragbox updates
Fixed window stack behaviour so background windows interact conventionally again
  (fixes a number of window positioning bugs)
Disabled Shift-Select-close for child windows
@
text
@a18 1
        Option  ServiceCallTable,       true                    ; Add Ursula kernel Service Call table
@


1.2.2.7
log
@Redraw of dragboxes when being resized/translated optimised to reduce flicker.

Autoscroll update period extended to 12cs to reduce flicker.

Added Wimp_ReadSysInfo 17 to return configured drag-and-drop scroll startup
delay (in cs) because the CMOS storage isn't easy to read.

Identified and bracketed changes from 3.9x responsible for 24-bit icon colours.

defaultfontcolours now works correctly again.

Introduced new icon colour code. This holds icon colours in 24 bits internally
throughout, rather than treating 24-bit colour specifiers as a special case.
This results in the following bugfixes/improvements:
 * 3D faces and moat colours, and slabbed-in action button backgrounds, can
   all be specified in 24-bits
 * fading of icons is now consistent across icon types, and utilises the
   colour range of >16 colour modes
 * 3D borders now get faded along with the rest of the icon
 * action buttons can now contain sprites (background is correct, and sprite
   is not inverted)
 * various cases where anti-aliasing didn't blend in to the background
   correctly are now fixed
 * conventional and 24-bit specifiers now behave equivalently to each other -
   the same colour specified either way behaves the same when faded, used as
   an EOR colour etc. (greys are now always dithered in 1-bpp modes, even if
   specified in 24-bit)
 * behaviour is now the same whether the Wimp font is the system font or a
   fancy font (amazingly, this wasn't always the case)
 * except for 3D icons, if the icon background matches the work area
   background, it is unaffected by fading - so for example, group boxes can now
   be faded correctly

Switched out AutoHourglass (Mike was concerned about the speed hit).

Corrected *Help syntax strings for On/Off configuration options.
@
text
@a19 1
        Option  TrueIcon2,              true :LAND: TrueIcon1   ; true colour support, phase 2
d26 1
@


1.2.2.8
log
@The title bar, and the back, close and iconise buttons, are no longer redrawn
when a window is resized in just the vertical direction.

All window colours can now be specified in 24-bit colour.

Where a sprite is used to plot the back, close, title, iconise, toggle-size,
adjust-size or scroll arrow icons, the sprite is now plotted using a distorted
translation table, to give the sprites the appearance of being coloured
according to the window colours.

The 3D toolsprite set now has solid titlebar sprites.

The icon bar template now uses the standard title bar colours (this optimises
redraw because of the new border tinting code).

When the toggle-size icon or title bar are to be plotted using solid sprites,
the background is no longer filled in just prior to the event (although this
will still be performed if the relevant sprite is masked). This is to reduce
flicker. Similarly, the erroneous rectangle outlines plotted behind scrollbars
have been removed.

New "TASK"-form Wimp_ForceRedraw reason codes:
  R2 = 0 => redraw whole window border (includes line borders).
  R2 = 8 => redraw iconise button.
@
text
@a20 1
        Option  TrueIcon3,              true :LAND: TrueIcon2   ; true colour support, phase 3 (windows)
d31 1
a31 1
        Option  StickyEdges,            false  ; unimplemented  ; Allow windows to "stick" when dragged over edge of screen
@


1.2.2.9
log
@Window status flag bit 17 "window is fully visible" is now correctly set for
nested windows.
If the lowest window (eg most recently iconised window) is a hotkey window,
the Wimp used to hang if a keypress was not claimed by any task. Now fixed.
Hotkey events can now be delivered to nested windows.
Ctrl-Alt-Close now closes all windows, at the same nesting level, provided
that they have close buttons.
Ctr-Alt-Iconise now iconises all top-level windows that have close buttons.
Low-res versions of autoscroll pointers fixed: they had been in 256 greys!
@
text
@a32 1
        Option  MultiClose,             true                    ; Allow Ctrl-Alt clicks on close/iconise buttons
@


1.2.2.10
log
@Redraw of unfilled, font-specified icons now fixed; this caused antialising
errors, for example in CC applications' banner windows.

No longer maps anti-aliased system font character 128 to WimpSymbol tick;
this leaves character 128 free for use by Euro currency glyph.

Fixed Data Aborts in Wimp_SpriteOps 54, 57 and 58, and in *WimpKillSprite for
a sprite name found only in the ROM sprite pool.

Eureka window titles should now be redrawn correctly, without impacting the
redraw of Wimp-drawn titlebars, provided the ROM toolsprites are used. Note
that the toolsprite spritefile has regained sprite masks, but the colours
"behind" the mask are different to those in the last masked toolsprite file.
@
text
@a33 1
        Option  Euro,                   true                    ; Don't map fancy fonts' char 128 to tick - used for Euro
@


1.2.2.11
log
@Corrected active point for autoscrolling pointers (was wrong in low-res modes).

Certain user-drawn dragbox routines (eg via DragASprite) don't pass the object
bounding box as the box; this was conflicting with one of the redraw
optimisations, and causing smearing when the underlying object was redrawn.
Relevant optimisation optioned out.

If a window stack-change causes the iconise button to appear or disappear,
this is now caught, and the window border is redrawn immediately.

Toggling of child windows now works - the return coordinates are linked to
the parent in the same way as the current ones. Note that this is unlikely to
be useful for anything other than alignment 0/0/0/0/0/0 children.

Return codes for the "Quit" and "Continue" buttons in "xxx may have gone wrong"
error boxes can now be specified.

Both scrollbars push in for adjust-drags.
@
text
@a34 1
        Option  PushBothBars,           true                    ; Push in both scrollbars on adjust-drags
@


1.1
log
@file Ursula was initially added on branch ARTtmp.
@
text
@d1 24
@


1.1.2.1
log
@Added support for multiple options files (RO310, RO350, RO360, RO370, RCA,
Ursula).
Removed run-time MedusaOS checks.
Enabled correct build for RISC OS 3.1 machines.
Ensured that "freepoolinuse" is cleared before OS_ChangeDynamicArea
is intercepted.
Increased maxrects to 256.
Gave copy filter window handle in R10 (if ChildWindows).
Corrected a few border problems when no toolsprites.
Made toolsprites press in immediately - in particular close and toggle can
now be highlighted.
BounceClose flag no affects all of back,close,iconise and toggle.
Made "L" validation string parsing check manually for presence of a number,
to prevent error from OS_ReadUnsigned trashing MessageTrans' error buffers.
Allow error box buttons to stretch to fit text.
Fixed bug: floating point registers were not being saved unless on a portable.
Integrated some of the Wimp_TransferBlock fixes into Wimp08 from Wimp08s.
@
text
@a0 24
; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;
; Wimp options for an Ursula build of the Window Manager
;

	Option	IconiseButton,		true			; Windows given iconise button
	Option	ChocolateScreen,	true			; Clean cached screen after redraw loops

 	ASSERT	International_Help <> 0

        END
@
