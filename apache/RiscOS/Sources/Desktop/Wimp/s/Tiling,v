head	4.10;
access;
symbols
	Wimp-5_62:4.10
	Wimp-5_61:4.10
	Wimp-5_60:4.10
	Wimp-5_59:4.10
	Wimp-5_58:4.10
	Wimp-5_57:4.10
	Wimp-5_56:4.10
	Wimp-5_55:4.10
	Wimp-5_54:4.10
	Wimp-5_53:4.10
	Wimp-5_52:4.10
	Wimp-5_51:4.10
	Wimp-5_50:4.10
	Wimp-5_49:4.10
	Wimp-5_48:4.10
	Wimp-5_47-file1ad:4.10
	Wimp-5_47:4.10
	Wimp-5_46:4.10
	Wimp-5_45:4.10
	Wimp-5_44:4.10
	Wimp-5_43:4.10
	Wimp-5_42:4.10
	Wimp-5_41:4.10
	Wimp-5_40:4.10
	Wimp-5_39:4.10
	Wimp-5_38:4.10
	Wimp-5_37:4.10
	Wimp-5_36:4.10
	Wimp-5_35:4.9
	Wimp-5_34:4.9
	Wimp-5_33:4.9
	Wimp-5_32:4.9
	Wimp-5_31:4.9
	Wimp-5_30:4.8
	Wimp-530-pre4:4.8
	Wimp-5_30-pre3:4.8
	Wimp-5_30-pre2:4.8
	Wimp-5_30-pre1:4.8
	Wimp-5_29:4.8
	Wimp-5_28:4.8
	Wimp-5_27:4.8
	Wimp-5_26:4.7
	Wimp-5_25:4.7
	Wimp-5_24:4.7
	Wimp-5_23:4.7
	Wimp-5_22:4.6
	Wimp-5_21:4.6
	Wimp-5_20:4.6
	Wimp-5_19:4.5
	Wimp-5_18:4.5
	Wimp-5_17:4.5
	Wimp-5_16:4.5
	Wimp-5_15:4.5
	Wimp-5_14:4.5
	Wimp-5_13:4.5
	Wimp-5_12:4.5
	Wimp-5_11:4.5
	Wimp-5_10:4.5
	Wimp-5_09:4.5
	Wimp-5_08:4.5
	Wimp-5_07:4.5
	Wimp-5_06:4.5
	Wimp-5_05:4.5
	Wimp-5_04:4.5
	Wimp-5_03:4.5
	Wimp-5_02:4.5
	Wimp-5_01:4.5
	Wimp-4_66-4_77_2_1:4.4
	bavison_Threads_dev:4.4.0.2
	bavison_Threads_dev_bp:4.4
	Wimp-5_00:4.5
	Wimp-4_100:4.5
	Wimp-4_99:4.5
	Wimp-4_98:4.5
	Wimp-4_97:4.5
	Wimp-4_96:4.5
	Wimp-4_95:4.5
	Wimp-4_94:4.5
	RO_5_07:4.5
	Wimp-4_93:4.5
	Wimp-4_92:4.5
	Wimp-4_91:4.5
	Wimp-4_90:4.5
	Wimp-4_89:4.5
	Wimp-4_88:4.5
	Wimp-4_87:4.5
	Wimp-4_86:4.5
	Wimp-4_85:4.5
	Wimp-4_84:4.5
	Wimp-4_83:4.5
	Wimp-4_82:4.5
	Wimp-4_81:4.5
	Wimp-4_80:4.5
	Wimp-4_79:4.5
	Wimp-4_78:4.5
	Wimp-4_77:4.5
	Wimp-4_76:4.5
	Wimp-4_75:4.4
	Wimp-4_74:4.4
	Wimp-4_73:4.4
	Wimp-4_72:4.4
	Wimp-4_71:4.4
	Wimp-4_70:4.4
	Wimp-4_69:4.4
	Wimp-4_68:4.4
	Wimp-4_67:4.4
	Wimp-4_66:4.4
	Wimp-4_65:4.4
	Wimp-4_64:4.4
	Wimp-4_63:4.4
	Wimp-4_62:4.4
	Wimp-4_61:4.4
	Wimp-4_60:4.4
	Wimp-4_59:4.4
	Wimp-4_58:4.4
	Wimp-4_36-4_46_2_6:4.3
	Wimp-4_57:4.4
	Alpnet_approved:4.3
	Wimp-4_36-4_46_2_5:4.3
	Wimp-4_56:4.4
	dellis_autobuild_BaseSW:4.4
	Wimp-4_36-4_46_2_4:4.3
	Wimp-4_36-4_46_2_3:4.3
	Wimp-4_55:4.4
	Wimp-4_54:4.4
	Wimp-4_36-4_46_2_2:4.3
	Wimp-4_53:4.4
	Wimp-4_36-4_46_2_1:4.3
	Bethany:4.3.0.2
	Wimp-4_52:4.4
	Wimp-4_51:4.4
	Wimp-4_50:4.4
	Wimp-4_49:4.4
	Wimp-4_48:4.4
	Wimp-4_47:4.4
	Wimp-4_46:4.3
	Wimp-4_45:4.3
	Wimp-4_44:4.3
	Wimp-4_43:4.3
	Wimp-4_42:4.3
	sbrodie_sedwards_16Mar2000:4.3
	Wimp-4_41:4.3
	Wimp-4_40:4.3
	Wimp-4_39:4.3
	Wimp-4_38:4.3
	Wimp-4_37:4.3
	Wimp-4_36:4.3
	Wimp-4_35:4.3
	Wimp-4_34:4.3
	Wimp-4_33:4.3
	Wimp-4_32:4.3
	Wimp-4_31:4.3
	dcotton_autobuild_BaseSW:4.4
	Wimp-4_30:4.3
	Wimp-4_29:4.3
	Wimp-4_28:4.3
	Wimp-4_27:4.3
	Wimp-4_26:4.3
	Wimp-4_25:4.3
	Wimp-4_24:4.3
	Wimp-4_23:4.3
	Wimp-4_22:4.3
	Wimp-4_21:4.3
	Wimp-4_20:4.3
	Wimp-4_19:4.3
	Wimp-4_18:4.3
	Wimp-4_17:4.3
	Wimp-4_16:4.3
	Wimp-4_15:4.3
	Wimp-4_14:4.3
	Wimp-4_13:4.3
	Wimp-4_12:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1
	bavison_Wimp-4_11:4.3
	Ursula_RiscPC:4.1.4.1.0.2
	Wimp-4_11:4.3
	Wimp-4_10:4.3
	Wimp-4_09:4.3
	Wimp-4_08:4.2
	Wimp-4_07:4.2
	Wimp-4_06:4.2
	Wimp-4_05:4.2
	Wimp-4_04:4.2
	bavison_Wimp-4_03_noshrinkables:4.2
	Wimp-4_03:4.2
	Wimp-4_02:4.2
	Ursula_merge:4.1.4.1
	bavison_Wimp-4_01:4.2
	Wimp-4_01:4.2
	nicke_Wimp_3_96M:4.1.7.1
	bavison_Wimp-4_00_TRUNK:4.2
	bavison_Wimp-4_00:4.1.4.1
	nicke_Wimp_3_96:4.1.7.1
	mjrobert_Wimp_3_98:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	bavison_Wimp-3_99t:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	bavison_Wimp-3_99s:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	bavison_Wimp-3_99r:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	bavison_Wimp-3_99q:4.1.4.1
	jfarrell_NCWimp_3_96:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	bavison_Wimp-3_99p:4.1.4.1
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	bavison_Wimp-3_99o:4.1.4.1
	bavison_Wimp-3_99n:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	bavison_Wimp-3_99m:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	bavison_Wimp-3_99l:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	bavison_Wimp-3_99k:4.1.4.1
	bavison_Wimp-3_99j:4.1.4.1
	bavison_Wimp-3_99i:4.1.4.1
	bavison_Wimp-3_99h:4.1.4.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	bavison_Wimp_399g:4.1.4.1
	bavison_Wimp_399f:4.1.4.1
	afrost_NC2_Generic:4.1.7.1
	bavison_Wimp_399e:4.1.4.1
	bavison_Wimp_399d:4.1.4.1
	bavison_Wimp_399c:4.1.4.1
	Wimp_3_98:4.1
	kbracey_AW97:4.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Wimp_3_91:4.1
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.10
date	2014.03.01.22.42.58;	author jlee;	state Exp;
branches;
next	4.9;
commitid	KQ4bwdJetbz443rx;

4.9
date	2013.08.06.23.31.42;	author jlee;	state Exp;
branches;
next	4.8;
commitid	UbPZokvIlfdkZr0x;

4.8
date	2013.05.11.15.12.05;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	t0VXhGy6ECMh1ePw;

4.7
date	2013.04.13.08.16.47;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	DLq3yhcS0mdCCALw;

4.6
date	2013.03.28.08.07.32;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	6IoKYZf9tBXk5xJw;

4.5
date	2002.10.23.17.12.35;	author bavison;	state Exp;
branches;
next	4.4;

4.4
date	2000.04.25.12.24.04;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.10.23.15.48.20;	author bavison;	state Exp;
branches;
next	4.2;

4.2
date	98.09.18.16.14.06;	author bavison;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.30.47;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.30.47;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.32.58;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	98.03.10.16.11.31;	author bavison;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.24.35;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.22.09;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.10
log
@Implement sprite translation table caching
Detail:
  This set of changes allows the Wimp to cache the last-used translation table, and cleans up some instances where translation tables were being generated and then not used
  s/Wimp01 - Expand selecttable_args to store all 8 registers needed by ColourTrans_GenerateTable. Add 1K of space for caching the palette that the cached translation table was generated from. Remove unused spriteX, spriteY variables.
  s/Wimp04 - Split cachespritedata in two. cachespritedata now only caches the basic information, while the new cachespritepixtable rotuine will generate a translation table (shaded/inverted if required). This allows table generation to be deferred until we're just about to render the sprite, ensuring that the table isn't generated only to not be used. Also updated icon sprite rendering to check the sprite is within the graphics window before attempting to render it, allowing removal of one more case where tables can be needlessly generated.
  s/NewSWIs, s/Wimp09 - Change ADR to ADRL
  s/Tiling, s/Tiling3D - Use cachespritepixtable when needed
Admin:
  Tested on Iyonix, BB-xM, StrongARM RiscPC


Version 5.36. Tagged as 'Wimp-5_36'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; routines in this file are responsible for tiling the backdrops of
; windows.

        [ windowsprite

; this is a 'signed' division macro

        MACRO
$lab    DivRemS $ra,$rb,$rc,$tmp
$lab    CMP     $rb,#0
        BLT     %FT2
        DivRem  $ra,$rb,$rc,$tmp
        B       %FT4
2       RSB     $rb,$rb,#0
        DivRem  $ra,$rb,$rc,$tmp
        RSB     $rb,$rb,#0
        ; modulus should be -ve if divisor is -ve
4
        MEND


plotsprite_tile1        DCB     "tile_1",0,0
plotsprite_tile1_       DCB     "tile_1-",0

        ALIGN

plotspritebackground
        Push    "R0-R5,lr"
; first find sprite tile_1, look in window area, then wimp area
        LDR     R1,plotsprCB
        TEQ     R1,#0
        BEQ     %FT2
        wsaddr  R5,tile_sc_block
        wsaddr  R4,clipx0
        MOV     R14,PC
        MOV     PC,R1
        Pull    "R0-R5,PC"
2
        TEQ     R0,#sc_verylightgrey            ; colour 1
        SWINE   XOS_WriteI+16                   ; just clear the area
        Pull    "R0-R5,PC",NE

        LDR     R1,[handle,#w_areaCBptr]
        CMP     R1,#2
        BLO     %FT3                            ; 0 ==> system, 1 ==> wimp, else user
        MOV     R0,#SpriteReason_SelectSprite
        ORR     R0,R0,#256
        ADR     R2,plotsprite_tile1
        SWI     XOS_SpriteOp
        BVS     %FT3

        ADRL    R14,tile_sc_block               ; need to save global tile info as
                                                ; a local tile will overwrite this
        LDMIA   R14!,{R0,R3-R5}
        Push    "R0,R3-R5"
        LDMIA   R14,{R0,R3-R5}
        Push    "R0,R3-R5"

        STR     R1,thisCBptr
        STR     R2,spritename
        MOV     R0,#0
        STR     R0,lengthflags                  ; spritename is a pointer
        BL      cachespritedata
        MOV     R1,#0
        BLVC    cachespritepixtable

        LDR     R0,pixtable_at
        STR     R0,tile_temptab
        LDR     R0,sprite_log2px
        STR     R0,tile_log2px
        LDR     R0,sprite_log2py
        STR     R0,tile_log2py

        LDRB    R14,sprite_needsfactors
        TEQ     R14,#0
        ADRNE   R14,sprite_factors

        Push    R3

        LDMNEIA R14,{R0-R3}
        MOVEQ   R0,#0
        ADRL    R14,tile_sc_block
        STMIA   R14,{R0-R3}
        Pull    R3

        LDRB    R1,sprite_needsfactors          ; needs preserving
        Push    R1

        B       %FT6
3
        LDR     R2,tiling_sprite
        CMP     R2,#0                   ; disabled/not there
        BEQ     %FT4
        CMP     R2,#-1                  ; needs recache
        LDRNE   R1,baseofsprites
        BNE     %FT5
        BLEQ    findwimptilesprite
        LDRVC   R1,baseofsprites
        BVC     %FT5
4
        SWI     XOS_WriteI+16

        Pull    "R0-R5,PC"              ; can't find it? don't bother

5
        ADRL    R14,tile_sc_block               ; need to save global tile info as
                                                ; a local tile will overwrite this
        LDMIA   R14!,{R0,R3-R5}
        Push    "R0,R3-R5"
        LDMIA   R14,{R0,R3-R5}
        Push    "R0,R3-R5"

        STR     R1,thisCBptr
        STR     R2,spritename
        MOV     R0,#0
        STR     R0,lengthflags                  ; spritename is a pointer

        LDRB    R1,sprite_needsfactors          ; needs preserving
        Push    R1

        LDR     R0,tile_sc_block
        TEQ     R0, #0
        MOVNE   R0, #-1
        STRB    R0,sprite_needsfactors

        LDR     R0,tile_pixtable
        STR     R0,tile_temptab

        LDR     R3,tile_width
        LDR     R4,tile_height
6
        Push    "x0-y1"

        LDR     R0,tile_log2px
        MOV     R3,R3, LSL R0
        LDR     R0,tile_log2py
        MOV     R4,R4, LSL R0
        Push    "R3,R4"                 ; width and height now on stack
        LDR     y1,[handle,#w_way1]
        LDR     x0,[handle,#w_wax0]
        LDR     R0,[handle,#w_scx]
        DivRemS x1,R0,R3,R5             ; need to start 1 sprite left/below origin
        SUB     x0,x0,R0
        LDR     R0,[handle,#w_scy]
        DivRemS x1,R0,R4,R5
        LDR     R4,[sp,#4]
        SUB     y1,y1,R0


7


        ADR     R14,clipx0
        LDMIA   R14,{R0,y0,x1,R14}

        ADD     x1,x1,#1                        ; boundary condition

        SUB     y0,y0,#1                        ; bc
        RSB     y0,R4,y0


        ADD     R14,R14,#1                        ; boundary conditions
8
; get y1 within graphics window bounds
        CMP     y1,R14
        SUBGT   y1,y1,R4
        BGT     %BT8

        SUB     R0,R0,#1                        ; boundary conditions
9
; get x0 within bounds
        CMP     x0,R0
        ADDLT   x0,x0,R3
        BLT     %BT9
        SUB     x0,x0,R3                        ; get it back to left of window



        MOV     R4,y1
10
        MOV     R3,x0
20
        MOV     R5,#8
        BL      tile_putsprite
        LDR     R5,[sp]
        ADD     R3,R3,R5
        CMP     R3,x1
        BLT     %BT20
        LDR     R5,[sp,#4]
        SUB     R4,R4,R5
        CMP     R4,y0
        BGT     %BT10
err
        ADD     SP,SP,#8
err2

        Pull    "x0-y1"

        Pull    R0
        STRB    R0,sprite_needsfactors

        ADRL    R14,tile_log2px                         ; restore global tile info
        Pull    "R0-R3"
        STMIA   R14,{R0-R3}
        SUB     R14,R14,#16
        Pull    "R0-R3"
        STMIA   R14,{R0-R3}

        Pull    "R0-R5,PC"

        LTORG

;; Routine to stash tile_1 from wimp area
;; returns R2-> tile_1 or VS
findwimptilesprite  Entry "R0-R1"
; is tiling disabled by CMOS ?
        MOV     R0,#161
        MOV     R1,#&8c
        SWI     XOS_Byte
        TST     R2,#128
        SETV    NE
        MOVVS   R2,#0
        STRVS   R2,tiling_sprite

        EXIT    VS

        LDR     R14,log2bpp
        MOV     R0,#1
        MOV     R14,R0,LSL R14
        MOV     R0,#0
        CMP     R14,#8
        MOVHI   R0,#"6"
        CMP     R14,#16
        MOVHI   R0,#"2"
        Push    "R0"                            ; now got "2",0 or "6",0 on stack
        ADR     R2,plotsprite_tile1_
        LDMIA   R2,{R0-R1}
        Push    "R0-R1"                         ; now have "tile_1-?#",0 on stack
        CMP     R14,#8
        ADDLS   R0,R14,#"0"
        MOVHI   R0,#"1"
        CMPHI   R14,#16
        MOVHI   R0,#"3"
        STRB    R0,[sp,#7]
        BL      findwimpspritefordepth

; try again.
        ADRVS   R14,plotsprite_tile1
        LDMVSIA   R14,{R0-R1}
        Push    "R0-R2",VS                         ; routine expects 12 bytes
        BLVS    findwimpspritefordepth
        EXIT    VS

        LDR     R1,baseofsprites
        STR     R1,thisCBptr
        STR     R2,spritename
        MOV     R0,#0
        STR     R0,lengthflags
        BL      cachespritedata
        MOV     R1,#0
        BL      cachespritepixtable

        STR     R3,tile_width
        STR     R4,tile_height

        LDRB    R1,sprite_needsfactors
        Push    "R2-R3"

        LDR     R2,tile_pixtable
        BICS    R2,R2,#1                        ; incase cache invalidated before mode change
        MOVNE   R0,#ModHandReason_Free
        BLNE    XROS_Module

        TEQ     R1,#0

        ADRNE   R14,sprite_factors

        LDMNEIA R14,{R0-R3}
        MOVEQ   R0,#0
        ADRL    R14,tile_sc_block
        STMIA   R14,{R0-R3}

        LDR     R0,pixtable_at
        STR     R0,tile_pixtable
        MOV     R0,#0
        STR     R0,pixtable_at                  ; mark as used

        LDR     R0,sprite_log2px
        STR     R0,tile_log2px

        LDR     R0,sprite_log2py
        STR     R0,tile_log2py

        Pull    "R2-R3"
        CLRV
        EXIT

findwimpspritefordepth
; Sprite name to find (tile_1 or tile_1-##) is on stack
        Push    "lr"
        LDR     R2,list_at
        CMP     R2,#0
        BNE     %FT05
        MOV     R0,#SpriteReason_SelectSprite+256
      [ SpritePriority
        LDR     R1,baseofhisprites
      |
        LDR     R1,baseofsprites
      ]
        ADD     R2,SP,#4
        SWI     XOS_SpriteOp
        BVC     %FT07
        MOV     R0,#SpriteReason_SelectSprite+256
      [ SpritePriority
        LDR     R1,baseoflosprites
      |
        LDR     R1,baseofromsprites
      ]
        ADD     R2,SP,#4
        SWI     XOS_SpriteOp
        B       %FT07
05
; do it the quick way.
        ADD     R2,SP,#4
        STR     R2,spritename
        BL      getspriteaddr
07
        MOVVS   R2,#0
        STR     R2,tiling_sprite
        Pull    "R14"
        ADD     SP,SP,#12                       ; skip name
        MOV     PC,lr

tile_putsprite
        Push    "R1-R7,LR"
;
        LDRB    R0,sprite_needsfactors
        TEQ     R0,#0                   ; do I need to translate
;
        MOVNE   R0,#SpriteReason_PutSpriteScaled
        ADRNEL  R6,tile_sc_block
        MOVEQ   R0,#SpriteReason_PutSpriteUserCoords

        LDRNE   R7,tile_temptab          ; -> translation table
        TSTNE   R7,#1
        BLNE    get_new_pixtable
;
        LDR     R1,thisCBptr
        LDR     R2,spritename
        ORR     R0,R0,#&200

        SWI     XOS_SpriteOp
        SWIVS   XOS_WriteI+16

        Pull    "R1-R7,PC"

get_new_pixtable Entry  "R0-R6"

        BIC     R7,R7,#1                ; now an address again

        MOV     R0,#0
        STR     R0,lengthflags
        BL      cachespritedata
        MOV     R1,#0
        BL      cachespritepixtable
        LDR     R0,tile_pixtable
        TEQ     R0,R7
        BNE     %FT05

        MOVS    R2,R7
        MOVNE   R0,#ModHandReason_Free
        BLNE    XROS_Module

        LDR     R7,pixtable_at
        MOV     R6,#0
        STR     R6,pixtable_at
        STR     R7,tile_pixtable
        STR     R7,tile_temptab

        EXIT

05
        ; if tile_temptab and tile_pixtable were different then we must have been
        ; tiling a window with a custom tile. Can't free it either. However, the
        ; generic table is probably stuffed as well.

        LDR     R7,tile_pixtable
        ORR     R7,R7,#1
        STR     R7,tile_pixtable

        LDR     R7,pixtable_at
        STR     R7,tile_temptab
        EXIT

        LTORG

        ]

        END
@


4.9
log
@Replace OS_SpriteOp reason code magic numbers with definitions. Add support for new screen modes.
Detail:
  s/Tiling, s/Tiling3D, s/Watchdog, s/Wimp05, s/Wimp07, s/Wimp09 - Replaced OS_SpriteOp reason code magic numbers with symbolic definitions.
  s/Wimp01 - Update *WimpMode / Wimp_SetMode to use OS_ScreenMode 13 (mode string to specifer) in place of its own code if a mode specifier string has been given. Note - mode number handling is unchanged, so a mode specifier string which begins with a mode number will currently have the specifier part ignored.
  s/Wimp01, s/Wimp02 - Flag_* -> ModeFlag_* renaming
  s/Wimp02 - Fix mode specifier copying to only stop copying when we hit a mode variable of -1. Previous code would also stop if the variable value was -1. Update mode set code to apply the Wimp's special greyscale palettes if the greyscale mode flag is set (i.e. greyscale mode was set via specifier generated by OS_ScreenMode 13)
Admin:
  Tested on BB-xM


Version 5.31. Tagged as 'Wimp-5_31'
@
text
@d78 2
d274 2
d378 2
@


4.8
log
@Introduce definitions of the 16 standard Wimp colours
Substitute magic numbers through the code.
Squash some UAL warnings from missing #'s in Wimp10.s

Version 5.27. Tagged as 'Wimp-5_27'
@
text
@d314 1
a314 2
        MOV     R0,#24
        ORR     R0,R0,#256
d323 1
a323 2
        MOV     R0,#24
        ORR     R0,R0,#256
@


4.7
log
@Fix bug in Wimp_WhichIcon
When matching an icon on the iconbar the window is initially matched correctly, but the "is this the right task" filter step was trying to compare the handle with -1. The result was that you would get the first match for any iconbar icon rather than a match for *your* iconbar icon.
Unrelated: Tiling.s/Iconbar.s add a couple of comments and use symbols instead of magic numbers.
Tested with a quality 3 line BASIC program, no longer returns icon #0 all the time.

Version 5.23. Tagged as 'Wimp-5_23'
@
text
@d53 1
a53 1
        TEQ     R0,#1                           ; colour 1
@


4.6
log
@Add support for wide translation tables for window tool furniture
With the introduction of 16bpp/32bpp modes it became possible to request tables from ColourTrans which used > 1 byte per colour, but the Wimp wasn't using this extension. Therefore tool sprites designed in 8bpp or less would be quantised horribly when plotted in a 16bpp or 32bpp mode.
The Wimp now requests and plots with a wide table, and to avoid thrashing ColourTrans so much with the prevalence of individually paletted icon sprites, keeps the table seperately to the icon sprites ones. At worst (in 32bpp) this uses an extra 256x4 bytes of RAM.
Trace.s: Split out the tracing routines from Wimp10 as it was getting a bit big.
Tiling.s: Namespace change for the icons versus tools distinction. Removed some unnecessary PC+8/PC+12 confused NOPs.
Tiling3D.s: Namespace change for the icons versus tools distinction.
Wimp01.s: New set of variables to track the tool translation tables separately. Various jiggling to keep ADRs in range.
Wimp02.s: Namespace change. Remove some double handling in Wimp_SetColourMapping.
Wimp04.s: Namespace change. Made factor rationalisation common to both the icon and tool grinding code. Removed dual use of cachespritedata for both icons and tools. The tintfunc moves to Wimp10. Service_InvalidateCache confusion resolved by adding a new flag to remember that the tools need regenerating rather than just marking the tool list as missing (which subsequently got restored in Tool_SpriteOp without actually doing any palette work.
Wimp10.s: Label tools_area renamed as it was immensely confusing to have that (which was actually holding the RMA allocation of the tool_list) and tool_area (which contains the sprite area) hanging around. Changed references to use tools-only cachetolspritedata routine. Added 'wide' flags to sprite op and colour trans calls. Tool_SpriteOp changed to actually regenerate the colour tables when they're known invalid (previously the tools list pointer was merely restored and no colour tables used). Trace functions extracted. Resolved confusion as to what recache_tools_trans and recache_tools_trans2 should be doing.

Tested with 4bpp "NewLook" sprites in 4bpp/8bpp/16bpp/32bpp and 8bpp smooth greyscaled "Steel" tool sprites in same modes.
Also ran a task window doing repeated Service_InvalidateCache calls while monitoring the RMA for leaks.
Generally navigated around some directories to ensure that inverse icons (during double click) and filer windows (with individually paletted sprites) were being rendered.

Version 5.20. Tagged as 'Wimp-5_20'
@
text
@d59 2
a60 2
        BLO     %FT3
        MOV     R0,#24
d104 1
a104 1
        CMP     R2,#0
d106 1
a106 1
        CMP     R2,#-1
@


4.5
log
@  Given a good thrashing.
Detail:
  All pointers passed to the Wimp (mode selectors, menus, sprite areas,
  palettes, pollwords, validation strings, message lists, routines etc etc)
  in any of its APIs can now be anywhere within the 32-bit address range.
  In general, whenever "<= 0" was accepted as a null condition, the value
  must now be either 0 or -1. It should also be tolerant of system memory
  areas (supervisor stack and RMA) being in the top half of memory.
  Also:
  * Default next slot now a build option - Ursula builds (eg Tungsten) use
    1024K instead of 640K
  * Ursula builds no longer have a build variant in the help string
  * Autosenses ROM location
  * CR-LFs in *Configure messages replaced with LF-CRs
  * Added Iyonix resources (currently based on Morris4)
  * Morris4 sprites files have gained file_lxa, small_lxa, file_unf,
    small_unf and lo!help sprites
  * Ursula sprites files have gained lo!help sprites
  * *WimpSlot can take memory sizes in megabytes or gigabytes
Admin:
  Tested on a "traditional" memory-mapped Tungsten.

Version 4.76. Tagged as 'Wimp-4_76'
@
text
@a50 2
        NOP
        NOP
d86 1
a86 1
        LDR     R14,needsfactors
d88 1
a88 1
        ADRNE   R14,factors
d98 1
a98 1
        LDR     R1,needsfactors                 ; needs preserving
d130 7
a138 3
        LDR     R1,needsfactors                 ; needs preserving
        Push    R1

a140 3
        LDR     R0,tile_sc_block
        STR     R0,needsfactors

d212 1
a212 1
        STR     R0,needsfactors
d276 1
a276 1
        LDR     R1,needsfactors
d286 1
a286 1
        ADRNE   R14,factors
d349 1
a349 1
        LDR     R0,needsfactors
@


4.4
log
@  Made 32-bit compatible.
Detail:
  Lots of little changes throughout a lot of source.
Admin:
  Appears to work - not stress tested with things like lots of tasks, big
  transfers, and all the other things that tend to go wrong.

Version 4.47. Tagged as 'Wimp-4_47'
@
text
@d61 1
a61 1
        BLT     %FT3
d108 4
a111 3
        LDRGT   R1,baseofsprites
        BGT     %FT5
        BLLT    findwimptilesprite
a113 1
        CLRV
d244 2
a245 2
        CMP     R14,#9
        MOVGT   R0,#"6"
d247 1
a247 1
        MOVGT   R0,#"2"
d252 5
a256 5
        CMP     R14,#9
        ADDLT   R0,R14,#"0"
        MOVGT   R0,#"1"
        CMPGT   R14,#16
        MOVGT   R0,#"3"
d281 3
a283 4
        BIC     R2,R2,#&80000000                ; incase cache invalidated before mode change
        CMP     R2,#0
        MOVGT   R0,#ModHandReason_Free
        BLGT    XROS_Module
d358 1
a358 1
        TSTNE   R7,#&80000000
d372 1
a372 1
        BIC     R7,R7,#&80000000        ; now an address again
d381 3
a383 4
        MOV     R2,R7
        CMP     R2,#0
        MOVGT   R0,#ModHandReason_Free
        BLGT    XROS_Module
d396 1
a396 1
        ; genereic table is probably stuffed as well.
d399 1
a399 1
        ORR     R7,R7,#&80000000
@


4.3
log
@Adapted assembly process so that the choice of Options file (previously based
purely on the "System" variable) can be overridden by passing "OPTIONS=foo" as
an argument to either MkRom, or to amu/amu_machine directly, or indirectly,
by specifying it in the components file for a build. To accomplish this, it
was necessary to switch from using aasm to objasm - hence the large number of
source files affected in this commit.

Version 4.09. Tagged as 'Wimp-4_09'
@
text
@d17 1
a17 1
 
d19 1
a19 1
        
d22 1
a22 1
        MACRO   
d30 1
a30 1
        RSB     $rb,$rb,#0      
d35 1
a35 1
        
d42 1
a42 1
        Push    "R0-R5,lr"              
d46 1
a46 1
        BEQ     %FT2 
d51 1
a51 1
        NOP               
d64 1
a64 1
        ADR     R2,plotsprite_tile1     
d116 1
a116 1
        
d119 1
a119 1
5       
d132 1
a132 1
        
d141 1
a141 1
        
d146 1
a146 1
        
d189 2
a190 2
       
        
d214 1
a214 1
                         
d236 1
a236 1
        STRVS   R2,tiling_sprite  
d239 1
a239 1
        
d259 1
a259 1
        
d287 1
a287 1
        
d309 1
a309 1
        
d343 1
a343 1
        STR     R2,tiling_sprite  
d362 2
a363 2
        LDR     R1,thisCBptr            
        LDR     R2,spritename           
d365 1
a365 1
       
d369 3
a371 1
        Pull    "R1-R7,PC",,^
a372 2
get_new_pixtable Entry  "R0-R6"                              
 
d376 2
a377 2
        STR     R0,lengthflags                                       
        BL      cachespritedata                              
d386 2
a387 2
                                
        LDR     R7,pixtable_at         
d393 1
a393 1
        EXITS        
d399 1
a399 1
                                                      
d406 1
a406 1
        EXITS
@


4.2
log
@Ursula branch Wimp merged back onto trunk.
@
text
@d228 1
a228 1
findwimptilesprite  ENTRY "R0-R1"
d371 1
a371 1
get_new_pixtable ENTRY  "R0-R6"                              
@


4.1
log
@Initial revision
@
text
@d318 3
d322 1
d328 3
d332 1
@


4.1.4.1
log
@Main new features in Ursula build so far
(some are also available in other builds):

* New icon highlighting scheme - hue rotated 180 degrees, photographic negative,
  darkened 25% - suits Ursula icons better.
* Release-button window tools compile-time switch turned on.
* Any "TASK" word cleared on exit from Wimp_OpenWindow, Wimp_GetWindowState,
  Wimp_ForceRedraw and Wimp_CloseDown.
* Child windows are no longer allowed to be opened inside the icon bar.
* Message_IconizeAt generation optimised, and no longer calls non-X SWIs.
* Message_IconsChanged implemented, and switched out on speed grounds.
* Wimp_ReadSysInfo 15 removed, replaced with (new) Wimp_Extend 11.
* Backwindows are now segregated from normal windows. A new category,
  foreground windows, are added, and stay above all other windows. (The error
  box template is updated to make it a foreground window.)
* ROM sprites override RAM sprites (and duplicate RAM sprites are deleted
  during the building of the sprite lookup list, preceding the first sprite
  plot after a sprite pool update).
* Wimp_ReadSysInfo 16 added, to return sprite area pointers in order of
  priority (Wimp_BaseOfSprites retains the ROM/RAM distinction).
* Error box code altered:
  + symbolic names used for offsets into tempworkspace
  + error button text buffer enlarged
  + stretched error buttons now shrink back for next use
  + int_flush_opens called at appropriate points to ensure buttons are seen to
    slab in, and to reduce flicker when redisplaying error box at a different
    width (also fixes some redraw bugs)
  + Cancel button given the R6 type border when it will be activated by Return
    (and is therefore moved to the extreme right in such cases)
  + Escape now always selects the second-right button (unless there's only one
    button!) - this also fixes a bug when there's a single user-defined button
  + keypresses in "xxx may have gone wrong" error boxes are now correctly
    interpreted - previously the buttons available in the underlying box were
    being used to determine the effect of keys
  + maximum number of buttons increased from 4 to 8, and the machine no longer
    crashes when the maximum is exceeded
  + window stretches horizontally to keep error message to 7 lines or less
* Bugfix: opening or creating a window with a minimum x visible area coordinate
  of -1 was leading to any of smearing/flickering/recursive drawing. (This was
  actually due to a failure to recognise which windows' positions had been
  updated.)
* Features merged in from spinner branch Wimp:
  + support for UpCall_MediaSearchEndMessage added
  + control-termination allowed in upcalls (used to require null-termination)
  + escape character switched to default during error box display, then
    switched back again afterwards
* GetRectangle filters are now called with (internal) window handle in R10.
* Autohourglass is deactivated whenever WrchV is invoked. (Also optimised.)
* Action button bugfixes:
  + action buttons now deselect if the pointer is dragged off and a window tool
    is the pressed before all the buttons have been released
  + action buttons now slab in following a long (autorepeating) press on a
    scroll arrow window tool
@
text
@a317 3
      [ SpritePriority
        LDR     R1,baseofhisprites
      |
a318 1
      ]
a323 3
      [ SpritePriority
        LDR     R1,baseoflosprites
      |
a324 1
      ]
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
