head	4.2;
access;
symbols
	RO_5_07:4.2
	nicke_Wimp_3_96M:4.1.7.1
	nicke_Wimp_3_96:4.1.7.1
	jfarrell_NCWimp_3_96:4.1.7.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks	kbracey:4.2; strict;
comment	@# @;


4.2
date	97.01.13.12.16.00;	author nturton;	state dead;
branches;
next	4.1;

4.1
date	96.11.05.09.30.58;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.30.58;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.33.52;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.25.42;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.23.01;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Files removed from merged WIMP
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Monitor messages comming in */

#include <string.h>

#include "wimp.h"
#include "wimpt.h"
#include "event.h"
#include "win.h"
#include "template.h"
#include "dbox.h"
#include "alarm.h"
#include "res.h"
#include "akbd.h"
#include "kernel.h"
#include "swis.h"


int start_time =0;
int messages =0;
int my_task;

BOOL unknown_event(wimp_eventstr *e, void *handle)
{
 dbox d = (dbox) handle;
 int av=alarm_timedifference(start_time,alarm_timenow());
 static int ov=0;
 
 if (ov==0) ov=av-101;

 if ( (e->e==wimp_ENULL) && akbd_pollsh() )  /* Shift pressed on a null event */
 {
  _kernel_swi_regs r;

  r.r[0]=my_task;
  wimpt_noerror( (os_error *) _kernel_swi(XOS_Bit | 0x816c1 ,&r,&r); /* Get character at pointer */
 }

 if (e->e==wimp_ESEND)
 {            

  if (e->data.msg.action == 0x816c0)
  {
   werr(0,"Character found %c (%i)",e->data.msg.data.words[0],e->data.msg.data.words[0]);
   wimp_processkey(e->data.msg.data.words[0]);
  }


  char   strbuf [100];
  sprintf(strbuf,"%x",e->data.msg.hdr.action);
  dbox_setfield(d,3,strbuf);
  dbox_setnumeric(d,5,++messages);
 }
 
 if (av-ov >= 100)
 {
  ov=av;
  if (av >= 6000) av = messages / (av / 6000);
     else av=messages;

  dbox_setnumeric(d,1,av);
 }
 
 return TRUE;
}

int main()
{
 dbox d;

 /* Start a wimp task */
                       
 wimpt_wimpversion(275);
 my_task=wimpt_init("Monitor");
 res_init("Monitor");
 template_init();
 dbox_init();
 alarm_init();
 start_time=alarm_timenow();

 d=dbox_new("Monitor");
 dbox_showstatic(d);

 win_add_unknown_event_processor(unknown_event,d) ;

 event_setmask(0);

 while (1) 
 {
  event_process();
  if (wimpt_last_event()->e==wimp_ECLOSE) exit(0);
 }

 return 0;

}
@


4.1
log
@Initial revision
@
text
@@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
