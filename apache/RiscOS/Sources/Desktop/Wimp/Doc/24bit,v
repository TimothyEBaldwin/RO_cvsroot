head	4.1;
access;
symbols
	Wimp-5_62:4.1
	Wimp-5_61:4.1
	Wimp-5_60:4.1
	Wimp-5_59:4.1
	Wimp-5_58:4.1
	Wimp-5_57:4.1
	Wimp-5_56:4.1
	Wimp-5_55:4.1
	Wimp-5_54:4.1
	Wimp-5_53:4.1
	Wimp-5_52:4.1
	Wimp-5_51:4.1
	Wimp-5_50:4.1
	Wimp-5_49:4.1
	Wimp-5_48:4.1
	Wimp-5_47-file1ad:4.1
	Wimp-5_47:4.1
	Wimp-5_46:4.1
	Wimp-5_45:4.1
	Wimp-5_44:4.1
	Wimp-5_43:4.1
	Wimp-5_42:4.1
	Wimp-5_41:4.1
	Wimp-5_40:4.1
	Wimp-5_39:4.1
	Wimp-5_38:4.1
	Wimp-5_37:4.1
	Wimp-5_36:4.1
	Wimp-5_35:4.1
	Wimp-5_34:4.1
	Wimp-5_33:4.1
	Wimp-5_32:4.1
	Wimp-5_31:4.1
	Wimp-5_30:4.1
	Wimp-530-pre4:4.1
	Wimp-5_30-pre3:4.1
	Wimp-5_30-pre2:4.1
	Wimp-5_30-pre1:4.1
	Wimp-5_29:4.1
	Wimp-5_28:4.1
	Wimp-5_27:4.1
	Wimp-5_26:4.1
	Wimp-5_25:4.1
	Wimp-5_24:4.1
	Wimp-5_23:4.1
	Wimp-5_22:4.1
	Wimp-5_21:4.1
	Wimp-5_20:4.1
	Wimp-5_19:4.1
	Wimp-5_18:4.1
	Wimp-5_17:4.1
	Wimp-5_16:4.1
	Wimp-5_15:4.1
	Wimp-5_14:4.1
	Wimp-5_13:4.1
	Wimp-5_12:4.1
	Wimp-5_11:4.1
	Wimp-5_10:4.1
	Wimp-5_09:4.1
	Wimp-5_08:4.1
	Wimp-5_07:4.1
	Wimp-5_06:4.1
	Wimp-5_05:4.1
	Wimp-5_04:4.1
	Wimp-5_03:4.1
	Wimp-5_02:4.1
	Wimp-5_01:4.1
	Wimp-4_66-4_77_2_1:4.1
	bavison_Threads_dev:4.1.0.4
	bavison_Threads_dev_bp:4.1
	Wimp-5_00:4.1
	Wimp-4_100:4.1
	Wimp-4_99:4.1
	Wimp-4_98:4.1
	Wimp-4_97:4.1
	Wimp-4_96:4.1
	Wimp-4_95:4.1
	Wimp-4_94:4.1
	RO_5_07:4.1
	Wimp-4_93:4.1
	Wimp-4_92:4.1
	Wimp-4_91:4.1
	Wimp-4_90:4.1
	Wimp-4_89:4.1
	Wimp-4_88:4.1
	Wimp-4_87:4.1
	Wimp-4_86:4.1
	Wimp-4_85:4.1
	Wimp-4_84:4.1
	Wimp-4_83:4.1
	Wimp-4_82:4.1
	Wimp-4_81:4.1
	Wimp-4_80:4.1
	Wimp-4_79:4.1
	Wimp-4_78:4.1
	Wimp-4_77:4.1
	Wimp-4_76:4.1
	Wimp-4_75:4.1
	Wimp-4_74:4.1
	Wimp-4_73:4.1
	Wimp-4_72:4.1
	Wimp-4_71:4.1
	Wimp-4_70:4.1
	Wimp-4_69:4.1
	Wimp-4_68:4.1
	Wimp-4_67:4.1
	Wimp-4_66:4.1
	Wimp-4_65:4.1
	Wimp-4_64:4.1
	Wimp-4_63:4.1
	Wimp-4_62:4.1
	Wimp-4_61:4.1
	Wimp-4_60:4.1
	Wimp-4_59:4.1
	Wimp-4_58:4.1
	Wimp-4_36-4_46_2_6:4.1
	Wimp-4_57:4.1
	Alpnet_approved:4.1
	Wimp-4_36-4_46_2_5:4.1
	Wimp-4_56:4.1
	dellis_autobuild_BaseSW:4.1
	Wimp-4_36-4_46_2_4:4.1
	Wimp-4_36-4_46_2_3:4.1
	Wimp-4_55:4.1
	Wimp-4_54:4.1
	Wimp-4_36-4_46_2_2:4.1
	Wimp-4_53:4.1
	Wimp-4_36-4_46_2_1:4.1
	Bethany:4.1.0.2
	Wimp-4_52:4.1
	Wimp-4_51:4.1
	Wimp-4_50:4.1
	Wimp-4_49:4.1
	Wimp-4_48:4.1
	Wimp-4_47:4.1
	Wimp-4_46:4.1
	Wimp-4_45:4.1
	Wimp-4_44:4.1
	Wimp-4_43:4.1
	Wimp-4_42:4.1
	sbrodie_sedwards_16Mar2000:4.1
	Wimp-4_41:4.1
	Wimp-4_40:4.1
	Wimp-4_39:4.1
	Wimp-4_38:4.1
	Wimp-4_37:4.1
	Wimp-4_36:4.1
	Wimp-4_35:4.1
	Wimp-4_34:4.1
	Wimp-4_33:4.1
	Wimp-4_32:4.1
	Wimp-4_31:4.1
	dcotton_autobuild_BaseSW:4.1
	Wimp-4_30:4.1
	Wimp-4_29:4.1
	Wimp-4_28:4.1
	Wimp-4_27:4.1
	Wimp-4_26:4.1
	Wimp-4_25:4.1
	Wimp-4_24:4.1
	Wimp-4_23:4.1
	Wimp-4_22:4.1
	Wimp-4_21:4.1
	Wimp-4_20:4.1
	Wimp-4_19:4.1
	Wimp-4_18:4.1
	Wimp-4_17:4.1
	Wimp-4_16:4.1
	Wimp-4_15:4.1
	Wimp-4_14:4.1
	Wimp-4_13:4.1
	Wimp-4_12:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.2.2
	bavison_Wimp-4_11:4.1
	Ursula_RiscPC:1.1.2.2.0.2
	Wimp-4_11:4.1
	Wimp-4_10:4.1
	Wimp-4_09:4.1
	Wimp-4_08:4.1
	Wimp-4_07:4.1
	Wimp-4_06:4.1
	Wimp-4_05:4.1
	Wimp-4_04:4.1
	bavison_Wimp-4_03_noshrinkables:4.1
	Wimp-4_03:4.1
	Wimp-4_02:4.1
	Ursula_merge:1.1.2.2
	bavison_Wimp-4_01:4.1
	Wimp-4_01:4.1
	bavison_Wimp-4_00_TRUNK:4.1
	bavison_Wimp-4_00:1.1.2.2
	mjrobert_Wimp_3_98:1.1.2.2
	rthornb_UrsulaBuild-19Aug1998:1.1.2.2
	UrsulaBuild_FinalSoftload:1.1.2.2
	bavison_Wimp-3_99t:1.1.2.2
	rthornb_UrsulaBuild-12Aug1998:1.1.2.2
	bavison_Wimp-3_99s:1.1.2.2
	aglover_UrsulaBuild-05Aug1998:1.1.2.2
	bavison_Wimp-3_99r:1.1.2.2
	rthornb_UrsulaBuild-29Jul1998:1.1.2.2
	bavison_Wimp-3_99q:1.1.2.2
	rthornb_UrsulaBuild-22Jul1998:1.1.2.2
	bavison_Wimp-3_99p:1.1.2.2
	rthornb_UrsulaBuild-15Jul1998:1.1.2.2
	bavison_Wimp-3_99o:1.1.2.2
	bavison_Wimp-3_99n:1.1.2.2
	rthornb_UrsulaBuild-07Jul1998:1.1.2.2
	bavison_Wimp-3_99m:1.1.2.2
	rthornb_UrsulaBuild-17Jun1998:1.1.2.2
	rthornb_UrsulaBuild-03Jun1998:1.1.2.2
	bavison_Wimp-3_99l:1.1.2.2
	rthornb_UrsulaBuild-27May1998:1.1.2.2
	rthornb_UrsulaBuild-21May1998:1.1.2.2
	bavison_Wimp-3_99k:1.1.2.2
	bavison_Wimp-3_99j:1.1.2.2
	bavison_Wimp-3_99i:1.1.2.2
	bavison_Wimp-3_99h:1.1.2.2
	rthornb_UrsulaBuild_01May1998:1.1.2.2
	bavison_Wimp_399g:1.1.2.2
	bavison_Wimp_399f:1.1.2.2
	bavison_Wimp_399e:1.1.2.2
	bavison_Wimp_399d:1.1.2.2
	bavison_Wimp_399c:1.1.2.2
	Wimp_3_98:1.1.2.2
	kbracey_AW97:1.1.2.1
	Ursula_bp:1.1
	Ursula:1.1.0.2;
locks; strict;
comment	@# @;


4.1
date	98.09.18.16.13.13;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	97.07.09.12.28.39;	author kbracey;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.07.09.12.28.39;	author kbracey;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.10.28.11.08.46;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.1
log
@Ursula branch Wimp merged back onto trunk.
@
text
@24-bit colour selection in the Window Manager
=============================================

Icons
-----
Icons can specify 24-bit foreground and background colour via
a new "C" validation string. For example,

             C008000/0080FF     = mid grey foreground, orange background
             CFF00FF            = magenta foreground, background as specified
                                    in flags word
             C/00FFFF           = foreground as specified in the flags word,
                                    yellow background

Either or both colours can be specified. Colours specified with "C" override
those specified with "F" or in the flags word. The colour numbers specified
are shifted left eight bits and passed to ColourTrans_SetGCOL. They are
case-insensitive.

It is suggested that the old-style colours should be specifyed to something
sensible in case the program gets run on a Window Manager that doesn't support
this.

To change colour at run-time, the validation string must be modified, then
Wimp_SetIconFlags can be used to force a redraw.

@


1.1
log
@file 24bit was initially added on branch Ursula.
@
text
@d1 26
@


1.1.2.1
log
@Added 24-bit colour selections for icons
@
text
@a0 67
24-bit colour selection in the Window Manager
=============================================

Icons
-----
Icons will be able to specify 24-bit foreground and background colour via
a new "C" validation string. For example,

             C008000/0080FF     = mid grey foreground, orange background
             CFF00FF            = magenta foreground, background as specified
                                    in flags word
             C/00FFFF           = foreground as specified in the flags word,
                                    yellow background

Either or both colours can be specified. Colours specified with "C" override
those specified with "F" or in the flags word. The colour numbers specified
are shifted left eight bits and passed to ColourTrans_SetGCOL. They are
case-insensitive.

It is suggested that the old-style colours should be specifyed to something
sensible in case the program gets run on a Window Manager that doesn't support
this.

To change colour at run-time, the validation string must be modified, then
Wimp_SetIconFlags can be used to force a redraw.

[ Note: what about 3d borders? ]

Windows (not done - just a suggestion at this stage)
-------
It is now possible to specify a 24-bit value for the work area
background (only). This is partly due to lack of room in the window definition,
and partly on grounds of taste.

The window definition allows the following 7 colours to be set:

         1) Title foreground and window frame colour (normally black(7))
         2) Title background colour (normally grey(2))
         3) Work area foreground colour (normally black(7))   
         4) Work area background colour (normally grey(1))
         5) Scroll bar outer colour (normally grey(3))
         6) Scroll bar inner colour (normally grey(1))
         7) Highlighted title background colour (normally cream(12))

(3) is not actually used in window rendering - the Wimp just sets the
foreground graphics colour appropriately before calling the task's redraw
routine.
(5) and (6) are made redundant by the introduction of toolsprites. It is
anticipated that (2) and (7) will be made redundant by introducing the
ability to specify highlighted and non-highlighted forms of toolsprites.
All toolsprites will then be solid and these background colours will never
be drawn. (1) looks very odd unless it is black, although it is possible
that some user interfaces may be designed so that white is usable. Whatever,
it is unlikely that 24-bit colour selection is desirable for the title bar
text and window frame.

This leaves the work area background colour as the colour most requiring
to be made 24-bit. Therefore it is proposed that the following changes
are made to the window definition (see PRM 3-90)

      R1+39 becomes a flag byte. Bit 0 specifies that a 24-bit colour
      has been given for the background colour. Bits 1-7 remain reserved.
      
      If bit 0 is set, then (R1+34,R1+37,R1+38) become a (RR,GG,BB) triplet
      specifying the window background colour. The Wimp then acts as if
      the work area foreground were specified as black(7), and the
      scrollbars grey(3)+grey(1).
@


1.1.2.2
log
@Fixed problem with PostFilters getting called when doing a Wimp_StartTask
callback exit.
@
text
@d6 1
a6 1
Icons can specify 24-bit foreground and background colour via
d27 41
@
