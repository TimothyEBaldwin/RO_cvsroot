head	4.5;
access;
symbols
	Wimp-5_62:4.5
	Wimp-5_61:4.5
	Wimp-5_60:4.5
	Wimp-5_59:4.5
	Wimp-5_58:4.5
	Wimp-5_57:4.5
	Wimp-5_56:4.5
	Wimp-5_55:4.5
	Wimp-5_54:4.5
	Wimp-5_53:4.5
	Wimp-5_52:4.5
	Wimp-5_51:4.5
	Wimp-5_50:4.5
	Wimp-5_49:4.5
	Wimp-5_48:4.5
	Wimp-5_47-file1ad:4.5
	Wimp-5_47:4.5
	Wimp-5_46:4.5
	Wimp-5_45:4.5
	Wimp-5_44:4.5
	Wimp-5_43:4.5
	Wimp-5_42:4.5
	Wimp-5_41:4.5
	Wimp-5_40:4.5
	Wimp-5_39:4.5
	Wimp-5_38:4.5
	Wimp-5_37:4.5
	Wimp-5_36:4.5
	Wimp-5_35:4.5
	Wimp-5_34:4.5
	Wimp-5_33:4.5
	Wimp-5_32:4.5
	Wimp-5_31:4.5
	Wimp-5_30:4.5
	Wimp-530-pre4:4.5
	Wimp-5_30-pre3:4.5
	Wimp-5_30-pre2:4.5
	Wimp-5_30-pre1:4.5
	Wimp-5_29:4.5
	Wimp-5_28:4.5
	Wimp-5_27:4.5
	Wimp-5_26:4.5
	Wimp-5_25:4.5
	Wimp-5_24:4.5
	Wimp-5_23:4.4
	Wimp-5_22:4.4
	Wimp-5_21:4.4
	Wimp-5_20:4.4
	Wimp-5_19:4.4
	Wimp-5_18:4.4
	Wimp-5_17:4.4
	Wimp-5_16:4.4
	Wimp-5_15:4.4
	Wimp-5_14:4.4
	Wimp-5_13:4.4
	Wimp-5_12:4.4
	Wimp-5_11:4.4
	Wimp-5_10:4.4
	Wimp-5_09:4.4
	Wimp-5_08:4.4
	Wimp-5_07:4.4
	Wimp-5_06:4.4
	Wimp-5_05:4.4
	Wimp-5_04:4.4
	Wimp-5_03:4.4
	Wimp-5_02:4.4
	Wimp-5_01:4.4
	Wimp-4_66-4_77_2_1:4.4
	bavison_Threads_dev:4.4.0.4
	bavison_Threads_dev_bp:4.4
	Wimp-5_00:4.4
	Wimp-4_100:4.4
	Wimp-4_99:4.4
	Wimp-4_98:4.4
	Wimp-4_97:4.4
	Wimp-4_96:4.4
	Wimp-4_95:4.4
	Wimp-4_94:4.4
	RO_5_07:4.4
	Wimp-4_93:4.4
	Wimp-4_92:4.4
	Wimp-4_91:4.4
	Wimp-4_90:4.4
	Wimp-4_89:4.4
	Wimp-4_88:4.4
	Wimp-4_87:4.4
	Wimp-4_86:4.4
	Wimp-4_85:4.4
	Wimp-4_84:4.4
	Wimp-4_83:4.4
	Wimp-4_82:4.4
	Wimp-4_81:4.4
	Wimp-4_80:4.4
	Wimp-4_79:4.4
	Wimp-4_78:4.4
	Wimp-4_77:4.4
	Wimp-4_76:4.4
	Wimp-4_75:4.4
	Wimp-4_74:4.4
	Wimp-4_73:4.4
	Wimp-4_72:4.4
	Wimp-4_71:4.4
	Wimp-4_70:4.4
	Wimp-4_69:4.4
	Wimp-4_68:4.4
	Wimp-4_67:4.4
	Wimp-4_66:4.4
	Wimp-4_65:4.4
	Wimp-4_64:4.4
	Wimp-4_63:4.4
	Wimp-4_62:4.4
	Wimp-4_61:4.4
	Wimp-4_60:4.4
	Wimp-4_59:4.4
	Wimp-4_58:4.4
	Wimp-4_36-4_46_2_6:4.4
	Wimp-4_57:4.4
	Alpnet_approved:4.4
	Wimp-4_36-4_46_2_5:4.4
	Wimp-4_56:4.4
	dellis_autobuild_BaseSW:4.4
	Wimp-4_36-4_46_2_4:4.4
	Wimp-4_36-4_46_2_3:4.4
	Wimp-4_55:4.4
	Wimp-4_54:4.4
	Wimp-4_36-4_46_2_2:4.4
	Wimp-4_53:4.4
	Wimp-4_36-4_46_2_1:4.4
	Bethany:4.4.0.2
	Wimp-4_52:4.4
	Wimp-4_51:4.4
	Wimp-4_50:4.4
	Wimp-4_49:4.4
	Wimp-4_48:4.4
	Wimp-4_47:4.4
	Wimp-4_46:4.4
	Wimp-4_45:4.4
	Wimp-4_44:4.4
	Wimp-4_43:4.4
	Wimp-4_42:4.4
	sbrodie_sedwards_16Mar2000:4.4
	Wimp-4_41:4.4
	Wimp-4_40:4.4
	Wimp-4_39:4.4
	Wimp-4_38:4.4
	Wimp-4_37:4.4
	Wimp-4_36:4.4
	Wimp-4_35:4.4
	Wimp-4_34:4.4
	Wimp-4_33:4.4
	Wimp-4_32:4.4
	Wimp-4_31:4.4
	dcotton_autobuild_BaseSW:4.4
	Wimp-4_30:4.4
	Wimp-4_29:4.4
	Wimp-4_28:4.4
	Wimp-4_27:4.4
	Wimp-4_26:4.4
	Wimp-4_25:4.4
	Wimp-4_24:4.4
	Wimp-4_23:4.4
	Wimp-4_22:4.4
	Wimp-4_21:4.4
	Wimp-4_20:4.4
	Wimp-4_19:4.4
	Wimp-4_18:4.4
	Wimp-4_17:4.4
	Wimp-4_16:4.4
	Wimp-4_15:4.4
	Wimp-4_14:4.4
	Wimp-4_13:4.4
	Wimp-4_12:4.4
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2.2.1
	bavison_Wimp-4_11:4.4
	Ursula_RiscPC:4.2.2.1.0.2
	Wimp-4_11:4.4
	Wimp-4_10:4.4
	Wimp-4_09:4.4
	Wimp-4_08:4.4
	Wimp-4_07:4.4
	Wimp-4_06:4.4
	Wimp-4_05:4.4
	Wimp-4_04:4.4
	bavison_Wimp-4_03_noshrinkables:4.4
	Wimp-4_03:4.4
	Wimp-4_02:4.4
	Ursula_merge:4.2.2.1
	bavison_Wimp-4_01:4.4
	Wimp-4_01:4.4
	nicke_Wimp_3_96M:4.1.7.2
	bavison_Wimp-4_00_TRUNK:4.3
	bavison_Wimp-4_00:4.2.2.1
	nicke_Wimp_3_96:4.1.7.1
	mjrobert_Wimp_3_98:4.2
	rthornb_UrsulaBuild-19Aug1998:4.2.2.1
	UrsulaBuild_FinalSoftload:4.2.2.1
	bavison_Wimp-3_99t:4.2.2.1
	rthornb_UrsulaBuild-12Aug1998:4.2.2.1
	bavison_Wimp-3_99s:4.2.2.1
	aglover_UrsulaBuild-05Aug1998:4.2.2.1
	bavison_Wimp-3_99r:4.2.2.1
	rthornb_UrsulaBuild-29Jul1998:4.2.2.1
	bavison_Wimp-3_99q:4.2.2.1
	jfarrell_NCWimp_3_96:4.1.7.1
	rthornb_UrsulaBuild-22Jul1998:4.2.2.1
	bavison_Wimp-3_99p:4.2.2.1
	rthornb_UrsulaBuild-15Jul1998:4.2.2.1
	bavison_Wimp-3_99o:4.2.2.1
	bavison_Wimp-3_99n:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	bavison_Wimp-3_99m:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	bavison_Wimp-3_99l:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	bavison_Wimp-3_99k:4.2
	bavison_Wimp-3_99j:4.2
	bavison_Wimp-3_99i:4.2
	bavison_Wimp-3_99h:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	bavison_Wimp_399g:4.2
	bavison_Wimp_399f:4.2
	afrost_NC2_Generic:4.1.7.1
	bavison_Wimp_399e:4.2
	bavison_Wimp_399d:4.2
	bavison_Wimp_399c:4.2
	Wimp_3_98:4.2
	kbracey_AW97:4.2
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.4
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Wimp_3_91:4.2
	Spin_merge_7May97:4.1.7.1
	ARTtmp_bp:4.1.7.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1.2.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.2
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.5
date	2013.05.03.21.08.14;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	QS59VqQdUOQmfeOw;

4.4
date	98.09.30.09.06.24;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.09.18.16.13.56;	author bavison;	state Exp;
branches;
next	4.2;

4.2
date	97.05.07.14.15.18;	author kbracey;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.30.32;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	98.07.14.16.34.06;	author bavison;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.30.32;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.31.58;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.23.30;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.21.01;	author nturton;	state Exp;
branches
	4.1.7.1.2.1;
next	4.1.7.2;

4.1.7.2
date	98.09.10.10.35.34;	author kbracey;	state Exp;
branches;
next	;

4.1.7.1.2.1
date	97.04.28.16.49.48;	author kbracey;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Slacken pointer checks
The pointer comparison checking required when running in a system with > 64M memory was tightened up from Wimp-4_75 to Wimp-4_76, but to allow the module to target pre RISC OS 5 systems an option to relax those checks is required.
Each check has been revisited and where appropriate demarked with a "AcceptLoosePointer" macro, which just remaps the pointer into the stricter form and carries on. In the strict checking case, the macro reduces to nothing.

Detail:
Add AcceptLoosePointers switch.
Retire singular use of StrongARM switch (calling XOS_SynchroniseCodeAreas is harmless pre StrongARM anyway).
Rename Ursula_RPC options to RO400.
Put duplicate documentation in the attic.
Allow -2 or -1 as the iconbar handle in Wimp_ResizeIcon (ticket #203).
Tighten up the list terminator check in the DebugMemory switch of Memory.s

Tested on RISC OS 3.10 (emulated), 3.50, 3.60, 3.70, 4.02.

Version 5.24. Tagged as 'Wimp-5_24'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;How to save and restore the flags in a macro:
;       MACRO
;       Push    ... ;whatever
;       Push    PC ;save flags (must be pushed last)
;       ... ;macro body
;       Pull    LR ;contains flags
;       TEQP    PC, LR ;restore them
;       Pull    ... ;as above
;       MEND
;---------------------------------------
        MACRO
$lab    TraceError $dbg
$lab
        [       debug :LAND: debug$dbg
        BVC     %FT00
        Push    R0-R1

        TraceK  $dbg, "ERROR: "
        MOV     R1, R0
; R1 -> error block

        LDR     R0, [R1]
; R0 = error number
        TraceX  $dbg, R0

        TraceK  $dbg, ", "
        ADD     R0, R1, #4
; R0 -> error message
        TraceS  $dbg, R0

        TraceNL $dbg
        Pull    R0-R1
00
        ]
        MEND
;---------------------------------------
        MACRO
$lab    Trace   $dbg, $string, $type, $reg
$lab
        TraceK  $dbg, "$string"
        Trace$type $dbg, $reg
        TraceNL $dbg
        MEND
;---------------------------------------
        MACRO
$lab    TraceC  $dbg, $r
$lab
        [       debug :LAND: debug$dbg
        Push    "R0, LR"
        [       :LNOT: ("$r" = "SP")
        MOV     R0, $r
        |
        ADD     R0, SP, #8 ;trace SP as it was on entry
        ]
        TraceK  $dbg, "'"
        BL      trace_char
        TraceK  $dbg, "'"
        Pull    "R0, LR"
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TracePC $dbg, $r
$lab
        [       debug :LAND: debug$dbg
        Push    "R0, LR"
        [       :LNOT: ("$r" = "SP")
        MOV     R0, $r
        |
        ADD     R0, SP, #8 ;trace SP as it was on entry
        ]
        LDRB    R0, [R0]
        BL      trace_char
        Pull    "R0, LR"
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TraceS  $dbg, $r
$lab
        [       debug :LAND: debug$dbg
        Push    "R0, LR"
        [       :LNOT: ("$r" = "SP")
        MOV     R0, $r
        |
        ADD     R0, SP, #8 ;trace SP as it was on entry
        ]
        TraceK  $dbg, "'"
        BL      trace_string
        TraceK  $dbg, "'"
        Pull    "R0, LR"
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TraceK  $dbg, $s
$lab
        [       debug :LAND: debug$dbg
        Push    "R0, LR"
        ADR     R0, %FT00
        BL      trace_string
        B       %FT01
00
        =       "$s", 0
        ALIGN
01
        Pull    "R0, LR"
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TraceD  $dbg, $r
$lab
        [       debug :LAND: debug$dbg
        Push    "R0, LR"
        [       :LNOT: ("$r" = "SP")
        MOV     R0, $r
        |
        ADD     R0, SP, #8 ;trace SP as it was on entry
        ]
        BL      trace_decimal
        Pull    "R0, LR"
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TraceX  $dbg, $r
$lab
        [       debug :LAND: debug$dbg
        Push    "R0, LR"
        [       :LNOT: ("$r" = "SP")
        MOV     R0, $r
        |
        ADD     R0, SP, #8 ;trace SP as it was on entry
        ]
        TraceK  $dbg, "&"
        BL      trace_hex
        Pull    "R0, LR"
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TraceNL $dbg
$lab
        [       debug :LAND: debug$dbg
        Push    LR
        BL      trace_nl
        Pull    LR
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TraceL  $dbg
$lab
        [       debug :LAND: debug$dbg
        Push    "R0, LR"
        ADR     R0, %FT00
        BL      trace_string
        BL      trace_nl
        B       %FT01
00
        =       "$lab", 0
        ALIGN
01
        Pull    "R0, LR"
        ]
        MEND
;---------------------------------------
        MACRO
$lab    TEST_ARROW $c
$lab
        ;Z := $c is an arrow
 [ RegisterWIMPSymbolFont
        TEQ     $c, #:CHR: &88 ;left
        TEQNE   $c, #:CHR: &89 ;right
        TEQNE   $c, #:CHR: &8A ;down
        TEQNE   $c, #:CHR: &8B ;up
      [ :LNOT: Euro
        TEQNE   $c, #:CHR: &80 ;tick
      ]
        TEQNE   $c, #:CHR: &84 ;cross
 |
        TEQ     PC, #0         ; clear Z - no WIMPSymbol font fitted
 ]
        MEND
;---------------------------------------
        MACRO
$lab    TEST_TERM $c
$lab
        ;Z := $c is a terminator
        TEQ     $c, #:CHR: 0
        TEQNE   $c, #:CHR: 10
        TEQNE   $c, #:CHR: 13
        MEND

        MACRO
$lab    ReportInformation       $info
        Push    "R0-R5,lr"
        ADR     R0,$info
        LDR     R1,=257         ; new bits + ok
        MOV     R2,#0
        MOV     R3,#0
        MOV     R4,#0
        MOV     R5,#0
        SWI     XWimp_ReportError
        Pull    "R0-R5,lr"
        MEND

;----------------------------------------
; Option introduces and sets an option neatly
;
	MACRO
	Option	$name,$value
      [ :LNOT::DEF:$name
	GBLL	$name
      ]
$name	SETL	$value
	MEND

;----------------------------------------
; OptionD introduces and sets a debug option neatly
;
	MACRO
	OptionD	$name,$value
	Option	debug$name,$value:LAND:debug
	MEND

;----------------------------------------
; Make sloppy compares for targets where -ve pointers are not considered valid
;
        MACRO
        AcceptLoosePointer_Neg $reg,$subst,$cc,$tmp
    [ AcceptLoosePointers
      [ "$cc"<>"" :LAND: "$cc"<>"AL"
        LCLS    rcc
rcc     SETS    :REVERSE_CC:"$cc"
        B$rcc   %FT01
        SavePSR $tmp
      ]
        ; Loose, subtitute anything -ve
        CMP     $reg,#0
        LDRLT   $reg,=$subst
      [ "$cc"<>"" :LAND: "$cc"<>"AL"
        ; Keep the condition
        RestPSR $tmp,,f
      ]
01
    ]
        MEND

        MACRO
        AcceptLoosePointer_NegOrZero $reg,$subst,$cc,$tmp
    [ AcceptLoosePointers
      [ "$cc"<>"" :LAND: "$cc"<>"AL"
        LCLS    rcc
rcc     SETS    :REVERSE_CC:"$cc"
        B$rcc   %FT01
        SavePSR $tmp
      ]
        ; Loose, subtitute anything -ve or zero
        CMP     $reg,#0
        LDRLE   $reg,=$subst
      [ "$cc"<>"" :LAND: "$cc"<>"AL"
        ; Keep the condition
        RestPSR $tmp,,f
      ]
01
    ]
        MEND

        END
@


4.4
log
@Spinner branch merged.
Changed to use srccommit.
All conditionals on "Version" removed.

Version 4.01. Tagged as 'Wimp-4_01'
@
text
@d242 43
@


4.3
log
@Ursula branch Wimp merged back onto trunk.
@
text
@d187 1
d196 3
d235 1
a235 1
; OptionD introduces and sets an debug option neatly
a240 1

@


4.2
log
@ARTtmp branch folded in
@
text
@d191 1
d193 1
@


4.2.2.1
log
@Redraw of unfilled, font-specified icons now fixed; this caused antialising
errors, for example in CC applications' banner windows.

No longer maps anti-aliased system font character 128 to WimpSymbol tick;
this leaves character 128 free for use by Euro currency glyph.

Fixed Data Aborts in Wimp_SpriteOps 54, 57 and 58, and in *WimpKillSprite for
a sprite name found only in the ROM sprite pool.

Eureka window titles should now be redrawn correctly, without impacting the
redraw of Wimp-drawn titlebars, provided the ROM toolsprites are used. Note
that the toolsprite spritefile has regained sprite masks, but the colours
"behind" the mask are different to those in the last masked toolsprite file.
@
text
@a190 1
      [ :LNOT: Euro
a191 1
      ]
@


4.1
log
@Initial revision
@
text
@d61 1
a61 1
$lab  
d78 1
a78 1
$lab  
d94 1
a94 1
$lab  
d111 1
a111 1
$lab  
d127 1
a127 1
$lab  
d158 1
a158 1
$lab  
a203 11
;----------------------------------------
; MedusaOS sets Z flag if running under Medusa Kernel
;
        MACRO
$lab    MedusaOS
        Push    "R0"
        LDRB    R0,medusakernel
        CMP     R0,#1
        Pull    "R0"
        MEND

d216 20
a235 1
                         
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@Disabled switching to WIMPSymbol font if WIMPSymbol font not registered.
@
text
@d61 1
a61 1
$lab
d78 1
a78 1
$lab
d94 1
a94 1
$lab
d111 1
a111 1
$lab
d127 1
a127 1
$lab
d158 1
a158 1
$lab
a186 1
 [ RegisterWIMPSymbolFont
a192 3
 |
        TEQ     PC, #0         ; clear Z - no WIMPSymbol font fitted
 ]
d227 1
a227 1

@


4.1.7.1.2.1
log
@Added support for multiple options files (RO310, RO350, RO360, RO370, RCA,
Ursula).
Removed run-time MedusaOS checks.
Enabled correct build for RISC OS 3.1 machines.
Ensured that "freepoolinuse" is cleared before OS_ChangeDynamicArea
is intercepted.
Increased maxrects to 256.
Gave copy filter window handle in R10 (if ChildWindows).
Corrected a few border problems when no toolsprites.
Made toolsprites press in immediately - in particular close and toggle can
now be highlighted.
BounceClose flag no affects all of back,close,iconise and toggle.
Made "L" validation string parsing check manually for presence of a number,
to prevent error from OS_ReadUnsigned trashing MessageTrans' error buffers.
Allow error box buttons to stretch to fit text.
Fixed bug: floating point registers were not being saved unless on a portable.
Integrated some of the Wimp_TransferBlock fixes into Wimp08 from Wimp08s.
@
text
@d61 1
a61 1
$lab
d78 1
a78 1
$lab
d94 1
a94 1
$lab
d111 1
a111 1
$lab
d127 1
a127 1
$lab
d158 1
a158 1
$lab
d204 11
d227 1
a227 20

;----------------------------------------
; Option introduces and sets an option neatly
;
	MACRO
	Option	$name,$value
      [ :LNOT::DEF:$name
	GBLL	$name
      ]
$name	SETL	$value
	MEND

;----------------------------------------
; OptionD introduces and sets an debug option neatly
;
	MACRO
	OptionD	$name,$value
	Option	debug$name,$value:LAND:debug
	MEND

@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
