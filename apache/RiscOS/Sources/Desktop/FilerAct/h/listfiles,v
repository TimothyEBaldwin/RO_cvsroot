head	4.7;
access;
symbols
	FilerAct-0_62:4.7
	FilerAct-0_61:4.7
	FilerAct-0_60:4.7
	FilerAct-0_59:4.7
	FilerAct-0_58:4.7
	FilerAct-0_57:4.7
	FilerAct-0_55:4.7
	FilerAct-0_54:4.7
	FilerAct-0_53:4.6
	FilerAct-0_52:4.5
	FilerAct-0_51:4.4
	FilerAct-0_50:4.3
	FilerAct-0_49:4.3
	FilerAct-0_48:4.2
	RO_5_07:4.2
	FilerAct-0_47:4.2
	FilerAct-0_46:4.2
	FilerAct-0_45:4.2
	dellis_autobuild_BaseSW:4.2
	FilerAct-0_44:4.2
	FilerAct-0_43:4.2
	sbrodie_sedwards_16Mar2000:4.2
	FilerAct-0_42:4.2
	Ursula_merge:4.2
	dcotton_autobuild_BaseSW:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.6
	nicke_FilerAct_0_39:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rleggett_FilerAct-0_42:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	rthornb_UrsulaBuild_01May1998:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.4
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.2
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.7
date	2011.10.23.07.55.57;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	xuMPqvl0RQswNrEv;

4.6
date	2011.10.23.07.47.02;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	7I8FKGdkajlxKrEv;

4.5
date	2011.10.20.20.36.03;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	YJZPZatOdKOo68Ev;

4.4
date	2011.10.20.20.23.07;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	xmwir195eiLF18Ev;

4.3
date	2011.06.29.09.21.52;	author rgriffin;	state Exp;
branches;
next	4.2;
commitid	OcnnyIVQ9uPd0ypv;

4.2
date	97.05.01.17.47.35;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.39;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.39;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.28.17;	author nturton;	state Exp;
branches
	4.1.3.1.2.1;
next	4.1.3.2;

4.1.3.2
date	97.05.01.14.25.43;	author kbracey;	state Exp;
branches;
next	;

4.1.3.1.2.1
date	97.04.30.10.31.40;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.18.25;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.17.02;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Fix to work with files > 2G.
A good rake over the code to change filesizes to be uint32_t not ints.
Change makefile to use StdTools.
Shuffle icon clipping in the templates to allow for maximal numbers by moving the text a bit to the right, still fits even in system font.
A couple more ints swapped for BOOLs.
The memmanage code is largely unchanged and makes extensive use of signed numbers, partly because the wimpslot setting API does. This will all fall over in a big mess if the wimpslot ever gets >2G, but then the API would need changing for that to happen anyway.
Function count_objects_in_dir swapped to use os_gbpb.
Structure search_nest_level gains a 'counted' flag rather than signalling counting is needed by setting the filesize to -1.
Should now be good for up to 4 billion files each of 4 billion bytes.

Version 0.54. Tagged as 'FilerAct-0_54'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
     This header describes the interface to the listing of a selection
     of files.

     All the routines can be retried later if an error is returned.

Revision History:

0.00  02-Jun-89  JSR  Created when routines separated from c.actionwind.
*/

typedef struct search_context *search_handle;

/*
     Allocates and initialises a search context, placing the handle in
     the location specified. The char * is the root directory for the
     search, then first int is the recursive flag, and the second is the
     directories_too flag
*/
extern os_error *create_search_context( search_handle * );

/*
     informs that next node has been deleted
*/
void deleted_next_node( search_handle, char * );

/*
     Sets whether the search is recursive or not
*/
extern void recurse_search_context( search_handle, BOOL );

/*
     Sets whether directories should be returned before their contents.
     This is relevant only when recursing.
*/
extern void return_directories_first( search_handle, BOOL );

/*
     Sets whether directories should be returned after their contents.
     This is relevant only when recursing.
*/
extern void return_directories_last( search_handle, BOOL );

/*
     Sets whether partitions should be treated the same as directories or not.
     This is relevant only when recursing.
*/
extern void treat_partitions_as_directories( search_handle, BOOL );

/*
     Changes the directory throught which the search will take place
*/
os_error *set_directory( search_handle, char *directory );

/*
     Clears out a whole selection
*/
void clear_selection( search_handle );

/*
     Add a selected object to the search context. Selections are passed
     back in the order they where added.
*/
extern os_error *add_selection( search_handle, char *, int );

/*
     Junk a search context neatly
*/
extern void dispose_search_context( search_handle );

/*
     Return the next full object name found. Returns NULL in the pointer
     if none found (end of search). Malloc fails etc return an error
*/
extern os_error *next_nodename( search_handle, char ** );

/*
     Return a summary of the selection left to do
*/
extern os_error *selection_summary( search_handle handle, char **summary );

/*
     Reads parameters of next node - use this for updating oneself after
     an error
*/
extern void read_next_node_parameters( search_handle );

/*
     Returns the size in bytes of the next node:
     No node   -1
     Other     that given by filing system
*/
extern uint32_t size_of_next_node( search_handle );

/*
     Returns the reload address of the next node:
     No node   -1
     Other     that given by filing system
*/
extern int reload_of_next_node( search_handle );

/*
     Returns the execution address of the next node:
     No node   -1
     Other     that given by filing system
*/
extern int execute_of_next_node( search_handle );

/*
     Returns the attriibutes of the next node:
     No node   -1
     Other     that given by filing system
*/
extern int attributes_of_next_node( search_handle );

/*
     Returns the object type of the next node:
     No node   ObjectType_NotFound
     Other     that given by filing system
*/
extern int objecttype_of_next_node( search_handle );

/*
     Returns the name of the next node:
     No node   NULL
     Other     that given by filing system
*/
extern char *name_of_next_node( search_handle );

/*
        Assuming a directory has just been found, return whether this return
        of this directory was before or after its contents.
*/
extern BOOL directory_is_after_contents( search_handle );

/*
     returns non-0 if another node to come
     returns 0 if no more nodes
*/
extern BOOL another_node( search_handle );

/*
        When finding a selection fails call this to skip it.
*/
extern void skip_failed_selection( search_handle );

/*
        Will skip file/directory (and its contents)
*/
extern void skip_list_file( search_handle );

/*
     Step to the next node for return by next_filename.
*/
extern os_error *step_to_next_node( search_handle, uint32_t *progress );

#ifdef USE_PROGRESS_BAR
extern uint32_t progress_of_next_node( search_handle );
extern void **chain_ref_ptr_of_next_node( search_handle );
extern void listfiles_convert_to_copymove( search_handle handle );
#endif
@


4.6
log
@Swap magic constants for defines from headers.
OS_FSControl, OS_File, OS_GBPB, OS_Args, OS_Find now use HighFSI.h.
Indentation made more consistent.
Variety of DEBUG macros changed to allow them to be enabled and disabled on a per-file basis.
Put USE_RED_ERROR box switch into options.h (undefined though).
Functionally equivalent to 0.52, but lots of diffs.

Version 0.53. Tagged as 'FilerAct-0_53'
@
text
@d107 1
a107 1
extern unsigned int size_of_next_node( search_handle );
d114 1
a114 1
extern unsigned int reload_of_next_node( search_handle );
d121 1
a121 1
extern unsigned int execute_of_next_node( search_handle );
d128 1
a128 1
extern unsigned int attributes_of_next_node( search_handle );
d135 1
a135 1
extern unsigned int objecttype_of_next_node( search_handle );
d148 1
a148 1
extern unsigned int directory_is_after_contents( search_handle );
d154 1
a154 1
extern unsigned int another_node( search_handle );
d169 1
a169 1
extern os_error *step_to_next_node( search_handle, unsigned int *progress );
d172 2
a173 2
extern unsigned int progress_of_next_node( search_handle );
extern unsigned int chain_ref_ptr_of_next_node( search_handle );
@


4.5
log
@More BOOLs and things changed to C99 types.
Basically the same as version 0.51 otherwise.

Version 0.52. Tagged as 'FilerAct-0_52'
@
text
@a25 6
#define ObjectType_NotFound   0
#define ObjectType_File       1
#define ObjectType_Directory  2

#define PROGRESS_MAX          (0x7fffffff)

a165 1

a170 1

@


4.4
log
@Didn't compile with PROGRESS_BAR turned off.
Rationalised all the switches a bit.
Not tagged.
@
text
@d50 1
a50 1
extern void recurse_search_context( search_handle, int );
d56 1
a56 1
extern void return_directories_first( search_handle, int );
d62 1
a62 1
extern void return_directories_last( search_handle, int );
d68 1
a68 1
extern void treat_partitions_as_directories( search_handle, int );
d182 1
a182 1
extern void listfiles_convert_to_copymove(search_handle handle);
@


4.3
log
@Redesigned window to show more of path.
Added progress bar.
Performance improvements, especially in 'slower' mode.
Fixed 'count summary' bug.
Fixed various compiler warnings.

Version 0.49. Tagged as 'FilerAct-0_49'
@
text
@a25 4
#ifndef __os_h
#include "os.h"
#endif

d30 1
a30 3
#ifdef PROGRESS_BAR
  #define PROGRESS_MAX	(0x7fffffff)
#endif
d179 1
a179 1
#ifdef PROGRESS_BAR
@


4.2
log
@Version RO_3_71 merged
@
text
@d34 4
d182 1
a182 1
extern os_error *step_to_next_node( search_handle );
d184 6
@


4.1
log
@Initial revision
@
text
@d115 1
a115 1
extern int size_of_next_node( search_handle );
d122 1
a122 1
extern int reload_of_next_node( search_handle );
d129 1
a129 1
extern int execute_of_next_node( search_handle );
d136 1
a136 1
extern int attributes_of_next_node( search_handle );
d143 1
a143 1
extern int objecttype_of_next_node( search_handle );
d156 1
a156 1
extern int directory_is_after_contents( search_handle );
d162 1
a162 1
extern int another_node( search_handle );
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.3.2
log
@Version RO_3_71 taken
@
text
@d115 1
a115 1
extern unsigned int size_of_next_node( search_handle );
d122 1
a122 1
extern unsigned int reload_of_next_node( search_handle );
d129 1
a129 1
extern unsigned int execute_of_next_node( search_handle );
d136 1
a136 1
extern unsigned int attributes_of_next_node( search_handle );
d143 1
a143 1
extern unsigned int objecttype_of_next_node( search_handle );
d156 1
a156 1
extern unsigned int directory_is_after_contents( search_handle );
d162 1
a162 1
extern unsigned int another_node( search_handle );
@


4.1.3.1.2.1
log
@Merged from 3.71 CD
@
text
@d115 1
a115 1
extern unsigned int size_of_next_node( search_handle );
d122 1
a122 1
extern unsigned int reload_of_next_node( search_handle );
d129 1
a129 1
extern unsigned int execute_of_next_node( search_handle );
d136 1
a136 1
extern unsigned int attributes_of_next_node( search_handle );
d143 1
a143 1
extern unsigned int objecttype_of_next_node( search_handle );
d156 1
a156 1
extern unsigned int directory_is_after_contents( search_handle );
d162 1
a162 1
extern unsigned int another_node( search_handle );
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
