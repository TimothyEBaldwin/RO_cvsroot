head	4.7;
access;
symbols
	FilerAct-0_62:4.7
	FilerAct-0_61:4.7
	FilerAct-0_60:4.7
	FilerAct-0_59:4.7
	FilerAct-0_58:4.7
	FilerAct-0_57:4.7
	FilerAct-0_55:4.7
	FilerAct-0_54:4.7
	FilerAct-0_53:4.6
	FilerAct-0_52:4.6
	FilerAct-0_51:4.6
	FilerAct-0_50:4.4
	FilerAct-0_49:4.4
	FilerAct-0_48:4.3
	RO_5_07:4.3
	FilerAct-0_47:4.3
	FilerAct-0_46:4.3
	FilerAct-0_45:4.2
	dellis_autobuild_BaseSW:4.2
	FilerAct-0_44:4.2
	FilerAct-0_43:4.1
	sbrodie_sedwards_16Mar2000:4.1
	FilerAct-0_42:4.1
	Ursula_merge:4.1
	dcotton_autobuild_BaseSW:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_FilerAct_0_39:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	hsimons_BOCA-1_2-Release:4.1.7.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rleggett_FilerAct-0_42:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.7
date	2011.10.23.07.55.57;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	xuMPqvl0RQswNrEv;

4.6
date	2011.10.20.20.32.49;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	DXWFsDOPRJsd58Ev;

4.5
date	2011.10.20.20.23.07;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	xmwir195eiLF18Ev;

4.4
date	2011.06.29.09.21.52;	author rgriffin;	state Exp;
branches;
next	4.3;
commitid	OcnnyIVQ9uPd0ypv;

4.3
date	2002.09.23.18.25.36;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	2000.05.16.09.32.50;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.29.38;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.29.38;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.23.28.11;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.18.13;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.16.57;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Fix to work with files > 2G.
A good rake over the code to change filesizes to be uint32_t not ints.
Change makefile to use StdTools.
Shuffle icon clipping in the templates to allow for maximal numbers by moving the text a bit to the right, still fits even in system font.
A couple more ints swapped for BOOLs.
The memmanage code is largely unchanged and makes extensive use of signed numbers, partly because the wimpslot setting API does. This will all fall over in a big mess if the wimpslot ever gets >2G, but then the API would need changing for that to happen anyway.
Function count_objects_in_dir swapped to use os_gbpb.
Structure search_nest_level gains a 'counted' flag rather than signalling counting is needed by setting the filesize to -1.
Should now be good for up to 4 billion files each of 4 billion bytes.

Version 0.54. Tagged as 'FilerAct-0_54'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
        Declare action_environment as being file global in scope
*/
struct  action_environment;

typedef enum
{
        Action_Copying = 0,
        Action_Moving = 1,
        Action_Deleting = 2,
        Action_Setting_Access = 3,
        Action_Setting_Type = 4,
        Action_Counting = 5,
        Action_CopyMoving = 6,
        Action_CopyLocal = 7,
        Action_Stamping = 8,
        Action_Finding = 9
}       actions_possible;

typedef enum
{
        Abort_Operation,
        Next_File,
        Test_Add_To_Read_List,
        Add_To_Read_List,
        Check_Full_Reading,
        Check_Empty_Writing,
        Attempt_1st_Rename,
        Attempt_2nd_Rename,
        Convert_To_CopyMove,
        Convert_To_CopyMove_After_Unlock,
        Attempt_Delete,
        Attempt_Delete_Dir_For_CopyMove,
        Attempt_Set_Access,
        Attempt_Set_Type,
        Attempt_Unlock,
        Attempt_Relock,
        Attempt_Stamp
}       next_action_state;

typedef void (*button_function)( struct action_environment * );

typedef struct
{
        int             requires_interaction:1;
        button_function abort_action;
        button_function no_skip_action;
        button_function yes_retry_action;
        button_function misc_action;
        button_function skip_action;
        char            *button_helps[ 5 ];
}       button_actions;

typedef struct
{
        char *abort_text;
        char *no_skip_text;
        char *yes_retry_text;
        char *misc_text;
        char *skip_text;
}       button_texts;

typedef struct
{
        button_actions actions;
        button_texts   texts;
}       button_set;

typedef struct action_environment
{
    /* Current position in list of files in */
    search_handle           test_search;

    /* wimplib handle onto the dialogue box */
    dbox                    status_box;

    /* wimp handle of the window */
    int                     window_handle;

    /* handle onto menu */
    menu                    option_menu;

    /* information regarding showing/hiding box in a delayed fashion */
    clock_t                 time_to_boxchange;
    int                     boxchange_direction;

    /* numeric quantities for progress lines */
    uint64_t                top_progress;
    uint64_t                bottom_progress;
    #ifdef USE_PROGRESS_BAR
    uint32_t                progress;
    #endif

    /* current overall operation (copying/counting/deleting etc) */
    actions_possible        operation;

    /* next thing to try: next file; read some; set type of file etc */
    next_action_state       action;

    /* new parameters for files (only used when relevant) */
    int                     new_access;
    int                     new_type;

    /* Things to happen when user presses a button */
    button_actions          button_actions;

    /* text on top line of info box */
    char                    *current_info;
    char                    *current_info_token;

    /* used when counting finishes */
    char                    *selection_summary;

    /* infomation for copying files */
    char                    *destination_name;
    int                     source_directory_name_length;

    /* Record of locked files not deleted */
    uint32_t                locked_not_deleted;

    /* Mask to use when setting access on directories for NetFS (KLUDGE) */
    uint32_t                directory_access_setting_mask;

    /* these indicate which switches apply */
    int                     verbose:1;
    int                     confirm:1;
    int                     force:1;
    int                     access:1;
    int                     looknewer:1;
    int                     faster:1;
    int                     faster_stuff_hidden:1;

    /* indicates an error state */
    int                     in_error:1;

    /* this flags that flexing memory has started */
    int                     flex_memory:1;

    /* this flags that flexible memory is not needed */
    int                     disable_flex:1;

    /* this flags that a disc full error has already been notified */
    int                     disc_full_already:1;

    /* this flags that we are ignoring CVS files in Copy and CopyLocal */
    int                     auto_skip_cvs:1;
} action_environment;

BOOL message_event_handler( wimp_eventstr *event, void *environment );
void option_menu_handler( action_environment *env, char *hit );
BOOL idle_event_handler(dbox db, void *event, void *handle);
void switch_dbox_on_off( action_environment *env, int direction, int delay );
void switch_to_reading( action_environment * );
void switch_to_writing( action_environment * );
void show_faster_stuff( action_environment *env );
void toggle_faster( action_environment *env );
extern void set_top_info_field_with_current_info(action_environment *env, char *token1, char *token2);

extern const char *last_top_info_field;
extern action_environment env;
extern int __root_stack_size;


/*
     Delays for displaying verbose box and removing non-verbose box
     in 1/100ths of a second
*/
#define Display_Delay 0
#define Remove_Delay  200


/*
     Dialogue box fields
*/
#define   Bottom_Info_Path      2
#define   Top_Progress_Field    3
#define   Bottom_Progress_Field 4
#define   Top_Progress_Line     5
#define   Bottom_Progress_Line  6
#define   Abort_Button          7
#define   No_Skip_Button        8
#define   Yes_Retry_Button      9
#define   Misc_Button           10
#define   Skip_Button           11
#define   Error_Field           12

#define   Progress_Bar          16
#define   Progress_Bar_BBox     15

/* 1 less than the space allocated for the icon's indirected string */
#define Top_Info_Field_Length   79

/*
        Window names
*/
#define MAIN_TEMPLATE_NAME      "FCount"
#define QUERY_TEMPLATE_NAME     "query"
@


4.6
log
@Fix display of bytes-to-go when there are > 2G left.
Was doing a widening cast of a signed number to 64 bits, so showed 16 trillion bytes remaining.
Fix templates to not say "stuff" by default in the name, as this was left on screen if an error occured before processing began.
Things that read from clock() now use clock_t.
Uncurled some "} else {" to match all the other files.
Deleted the USE_LONG_LONG switch, it's been needed ever since harddiscs got bigger than 4G anyway.
Anything assigned 'Yes' or 'No' changed to type BOOL.
Variable 'source_of_finished_file' was signalling that a directory had been copied by setting the length to a -ve number. This has been refactored to use a BOOL instead, so files can have top bit set sizes.
Fix bug in stack grab in count_objects_in_dir(), was grabbing an array of 2048 pointers (=8k) not 2048 bytes.
Functions bytes_left_to_read() and bytes_left_to_write() reprototyped to return uint32_t not signed numbers.
Still falls over copying files > 2G, but at least it gets the display right!

Version 0.51. Tagged as 'FilerAct-0_51'
@
text
@d105 1
a105 1
    unsigned int            progress;
d133 1
a133 1
    int                     locked_not_deleted;
d136 1
a136 1
    unsigned int            directory_access_setting_mask;
d183 1
a183 1
#define Remove_Delay 200
a188 1
//#define   Top_Info_Field        15
a199 1
//#define   Bottom_Info_Leaf      15
d204 3
d210 2
a211 4
#define Main_Window     "FCount"

/* 1 less than the space allocated for the icon's indirected string	*/
#define Top_Info_Field_Length 79
@


4.5
log
@Didn't compile with PROGRESS_BAR turned off.
Rationalised all the switches a bit.
Not tagged.
@
text
@d91 2
a92 2
    /* wimp handle of the window	*/
    int			window_handle;
d98 1
a98 1
    int                     time_to_boxchange;
d102 2
a103 7
    #ifdef USE_LONG_LONG
    uintmax_t               top_progress;
    uintmax_t               bottom_progress;
    #else
    unsigned int            top_progress;
    unsigned int            bottom_progress;
    #endif
d105 1
a105 1
    unsigned int		progress;
d107 1
@


4.4
log
@Redesigned window to show more of path.
Added progress bar.
Performance improvements, especially in 'slower' mode.
Fixed 'count summary' bug.
Fixed various compiler warnings.

Version 0.49. Tagged as 'FilerAct-0_49'
@
text
@d109 1
a109 1
    #ifdef PROGRESS_BAR
d208 1
a208 1
#define   Progress_Bar_BBox	15
a216 4

//#define Leaf_Field_Length 32

#define IGNORE(x) (void)(x)
@


4.3
log
@Added functionality from RISC OS 4.02 (Faster button, 64-bit display, number
separators). This implementation does not use the Netscape libraries, and
looks up the number separation scheme from the current territory.

Now copies directory datestamps, as per the command-line *Copy.

Version 0.46. Tagged as 'FilerAct-0_46'
@
text
@d85 2
a86 2
        /* Current position in list of files in */
        search_handle           test_search;
d88 2
a89 2
        /* wimplib handle onto the dialogue box */
        dbox                    status_box;
d91 2
a92 2
        /* handle onto menu */
        menu                    option_menu;
d94 72
a165 67
        /* information regarding showing/hiding box in a delayed fashion */
        int                     time_to_boxchange;
        int                     boxchange_direction;

        /* numeric quantities for progress lines */
#ifdef USE_LONG_LONG
        uintmax_t               top_progress;
        uintmax_t               bottom_progress;
#else
        unsigned int            top_progress;
        unsigned int            bottom_progress;
#endif

        /* current overall operation (copying/counting/deleting etc) */
        actions_possible        operation;

        /* next thing to try: next file; read some; set type of file etc */
        next_action_state       action;

        /* new parameters for files (only used when relevant) */
        int                     new_access;
        int                     new_type;

        /* Things to happen when user presses a button */
        button_actions          button_actions;

        /* text on top line of info box */
        char                    *current_info;
        char                    *current_info_token;

        /* used when counting finishes */
        char                    *selection_summary;

        /* infomation for copying files */
        char                    *destination_name;
        int                     source_directory_name_length;

        /* Record of locked files not deleted */
        int                     locked_not_deleted;

        /* Mask to use when setting access on directories for NetFS (KLUDGE) */
        int                     directory_access_setting_mask;

        /* these indicate which switches apply */
        int                     verbose:1;
        int                     confirm:1;
        int                     force:1;
        int                     access:1;
        int                     looknewer:1;
        int                     faster:1;
        int                     faster_stuff_hidden:1;

        /* indicates an error state */
        int                     in_error:1;

        /* this flags that flexing memory has started */
        int                     flex_memory:1;

        /* this flags that flexible memory is not needed */
        int                     disable_flex:1;

        /* this flags that a disc full error has already been notified */
        int                     disc_full_already:1;

        /* this flags that we are ignoring CVS files in Copy and CopyLocal */
        int                     auto_skip_cvs:1;
}       action_environment;
d175 1
d177 1
a177 1
extern char *last_top_info_field;
d181 1
d193 1
a193 1
#define   Top_Info_Field        1
d205 4
a208 1
#define   Bottom_Info_Leaf      15
d215 6
a220 1
#define Info_Field_Length 64
@


4.2
log
@  Minor improvement to enable optional skipping of objects during copies.
Detail:
  If the system variable Filer_Action$Skip is set (to anything - even the
    null string), then during a Copy operation, Filer_Action will skip
    directories called "CVS" and files called "/cvstag".  Variable is read
    whenever Filer_Action desktop task starts (ie. at the start of each
    copy).  This dramatically reduces the time it takes to copy a checkout
    tree from NFS->RISC OS.
Admin:
  Tested in desktop build.

Version 0.44. Tagged as 'FilerAct-0_44'
@
text
@d99 7
a105 2
        int                     top_progress;
        int                     bottom_progress;
d134 1
a134 1
        /* Mask to use when setting access on directories for NetFS (CLUDGE) */
d169 1
@


4.1
log
@Initial revision
@
text
@d152 3
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
