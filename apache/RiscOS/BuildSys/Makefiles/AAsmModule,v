head	1.19;
access;
symbols
	BuildSys-7_30:1.19
	BuildSys-7_29:1.19
	BuildSys-7_28:1.19
	BuildSys-7_27:1.19
	BuildSys-7_26:1.19
	BuildSys-7_25:1.19
	BuildSys-7_24:1.18
	BuildSys-7_23:1.17
	BuildSys-7_22:1.17
	BuildSys-7_21:1.17
	BuildSys-7_20:1.16
	BuildSys-7_19:1.16
	BuildSys-7_18:1.16
	BuildSys-7_17:1.16
	BuildSys-7_16:1.16
	BuildSys-7_15:1.16
	BuildSys-7_14:1.16
	BuildSys-7_13:1.16
	BuildSys-7_12:1.16
	BuildSys-7_11:1.16
	BuildSys-7_10:1.16
	BuildSys-7_09:1.16
	BuildSys-6_00-1_142_2_10:1.7.2.4
	BuildSys-7_08:1.16
	BuildSys-7_07:1.16
	BuildSys-7_06:1.16
	BuildSys-7_05:1.16
	BuildSys-6_00-1_142_2_9:1.7.2.4
	BuildSys-7_04:1.16
	BuildSys-7_03:1.16
	BuildSys-7_02:1.16
	BuildSys-7_01:1.16
	BuildSys-7_00:1.16
	BuildSys-6_99:1.16
	BuildSys-6_98:1.16
	BuildSys-6_97:1.16
	BuildSys-6_96:1.16
	BuildSys-6_95:1.16
	BuildSys-6_94:1.16
	BuildSys-6_93:1.16
	BuildSys-6_92:1.16
	BuildSys-6_91:1.16
	BuildSys-6_90:1.15
	BuildSys-6_89:1.15
	BuildSys-6_81-1:1.15
	BuildSys-6_88:1.15
	BuildSys-6_87:1.15
	BuildSys-6_86:1.15
	BuildSys-6_85:1.15
	BuildSys-6_84:1.15
	BuildSys-6_83:1.15
	BuildSys-6_82:1.15
	BuildSys-6_81:1.15
	BuildSys-6_80:1.15
	BuildSys-6_79:1.15
	BuildSys-6_78:1.15
	BuildSys-6_77:1.15
	BuildSys-6_76:1.15
	BuildSys-6_75:1.15
	BuildSys-6_74:1.15
	BuildSys-6_73:1.15
	BuildSys-6_72:1.15
	BuildSys-6_71:1.15
	BuildSys-6_70:1.15
	BuildSys-6_69:1.15
	BuildSys-6_68:1.15
	BuildSys-6_67:1.15
	BuildSys-6_66-1:1.15
	BuildSys-6_66:1.15
	BuildSys-6_65:1.15
	BuildSys-6_00-1_142_2_8:1.7.2.3
	BuildSys-6_00-1_142_2_7:1.7.2.3
	BuildSys-6_00-1_142_2_6:1.7.2.3
	BuildSys-6_64:1.15
	BuildSys-6_63:1.15
	BuildSys-6_62:1.15
	BuildSys-6_61:1.15
	BuildSys-6_60:1.15
	BuildSys-6_59:1.15
	BuildSys-6_58:1.15
	BuildSys-6_57:1.15
	BuildSys-6_56:1.15
	BuildSys-6_55:1.15
	BuildSys-6_54:1.15
	BuildSys-6_53:1.15
	BuildSys-6_00-1_142_2_5:1.7.2.2
	BuildSys-6_52:1.15
	BuildSys-6_51:1.15
	BuildSys-6_50:1.14
	BuildSys-6_49:1.12
	BuildSys-6_48:1.11
	BuildSys-6_47:1.10
	BuildSys-6_46:1.10
	BuildSys-6_45:1.10
	BuildSys-6_44:1.9
	BuildSys-6_43:1.9
	BuildSys-6_42:1.9
	BuildSys-6_41:1.9
	BuildSys-6_40:1.9
	BuildSys-6_39:1.9
	BuildSys-6_38:1.9
	BuildSys-6_00-1_142_2_4:1.7.2.1
	BuildSys-6_37:1.9
	BuildSys-6_36:1.9
	BuildSys-6_35:1.9
	BuildSys-6_34:1.9
	BuildSys-6_33:1.9
	BuildSys-6_32:1.9
	BuildSys-6_31:1.9
	BuildSys-6_30:1.8
	BuildSys-6_29:1.8
	BuildSys-6_28:1.8
	BuildSys-6_27:1.8
	BuildSys-6_26:1.8
	BuildSys-6_25:1.8
	BuildSys-6_24:1.8
	BuildSys-6_23:1.8
	BuildSys-6_22:1.8
	BuildSys-6_21:1.8
	BuildSys-6_20:1.8
	BuildSys-6_00-1_142_2_3:1.7
	BuildSys-6_19:1.7
	BuildSys-6_18:1.7
	BuildSys-6_17:1.7
	BuildSys-6_16:1.7
	BuildSys-6_15:1.7
	BuildSys-6_14:1.7
	BuildSys-6_13:1.7
	BuildSys-6_12:1.7
	BuildSys-6_00-1_142_2_2:1.7
	BuildSys-6_11:1.7
	BuildSys-6_10:1.7
	BuildSys-6_09:1.7
	BuildSys-6_08:1.7
	BuildSys-6_07:1.7
	BuildSys-6_06:1.7
	BuildSys-6_05:1.7
	BuildSys-6_04:1.7
	BuildSys-6_03:1.7
	BuildSys-6_02:1.7
	BuildSys-6_01:1.7
	BuildSys-6_00-1_142_2_1:1.7
	RPiFreeze:1.7.0.2
	BuildSys-6_00:1.7
	BuildSys-5_99:1.7
	BuildSys-5_98:1.7
	BuildSys-5_97:1.7
	BuildSys-5_96:1.7
	BuildSys-5_95:1.7
	BuildSys-5_94:1.7
	BuildSys-5_93:1.7
	BuildSys-5_92:1.7
	BuildSys-5_91:1.7
	BuildSys-5_90:1.7
	BuildSys-5_89:1.7
	BuildSys-5_88:1.7
	BuildSys-5_87:1.7
	BuildSys-5_86:1.6
	BuildSys-5_85:1.6
	BuildSys-5_84:1.6
	BuildSys-5_83:1.6
	BuildSys-5_82:1.6
	BuildSys-5_81:1.6
	BuildSys-5_80:1.6
	BuildSys-5_79:1.6
	BuildSys-5_78:1.6
	BuildSys-5_77:1.6
	BuildSys-5_76:1.5
	BuildSys-5_75:1.5
	BuildSys-5_74:1.5
	BuildSys-5_73:1.5
	BuildSys-5_72:1.5
	BuildSys-5_71:1.5
	BuildSys-5_70:1.5
	BuildSys-5_69:1.5
	BuildSys-5_68:1.5
	BuildSys-5_67:1.5
	BuildSys-5_66:1.5
	BuildSys-5_65:1.5
	BuildSys-5_64:1.5
	BuildSys-5_63:1.5
	BuildSys-5_62:1.5
	BuildSys-5_61:1.5
	BuildSys-5_60:1.5
	BuildSys-5_59:1.5
	BuildSys-5_58:1.5
	BuildSys-5_57:1.5
	BuildSys-5_56:1.5
	BuildSys-5_55:1.5
	BuildSys-5_54:1.5
	BuildSys-5_53:1.5
	BuildSys-5_52:1.5
	BuildSys-5_51:1.5
	BuildSys-5_50:1.5
	BuildSys-5_49:1.5
	BuildSys-5_48:1.5
	BuildSys-5_47:1.5
	BuildSys-5_46:1.5
	BuildSys-5_45:1.5
	BuildSys-5_44:1.5
	BuildSys-5_43:1.5
	BuildSys-5_42:1.5
	BuildSys-5_41:1.4
	BuildSys-5_40:1.4
	BuildSys-5_39:1.4
	BuildSys-5_38:1.4
	BuildSys-5_37:1.4
	BuildSys-5_36:1.4
	BuildSys-5_35:1.4
	BuildSys-5_34:1.3
	BuildSys-5_33:1.3
	BuildSys-5_32:1.2
	BuildSys-5_31:1.2
	BuildSys-5_30:1.2
	BuildSys-5_29:1.2
	BuildSys-5_28:1.2
	BuildSys-5_27:1.2
	BuildSys-5_26:1.2
	BuildSys-5_25:1.2
	BuildSys-5_24:1.2
	BuildSys-5_23:1.2
	BuildSys-5_22:1.2
	BuildSys-5_21:1.2
	BuildSys-5_20:1.2
	BuildSys-5_19:1.2
	BuildSys-5_18:1.2
	BuildSys-5_17:1.2
	BuildSys-5_16:1.2
	BuildSys-5_15:1.2
	BuildSys-5_14:1.2
	BuildSys-5_13:1.2
	BuildSys-5_12:1.2
	BuildSys-5_11:1.1
	BuildSys-5_10:1.1
	BuildSys-5_09:1.1
	BuildSys-5_08:1.1
	BuildSys-5_07:1.1
	BuildSys-5_06:1.1
	BuildSys-5_05:1.1
	BuildSys-5_04:1.1
	BuildSys-5_03:1.1
	BuildSys-5_02:1.1
	BuildSys-5_01:1.1
	BuildSys-5_00:1.1
	BuildSys-4_99:1.1
	BuildSys-4_98:1.1
	BuildSys-4_97:1.1
	BuildSys-4_96:1.1
	BuildSys-4_95:1.1
	BuildSys-4_94:1.1
	BuildSys-4_93:1.1
	BuildSys-4_92:1.1
	BuildSys-4_91:1.1
	BuildSys-4_90:1.1
	BuildSys-4_89:1.1
	BuildSys-4_88:1.1
	BuildSys-4_87:1.1
	BuildSys-4_86:1.1
	BuildSys-4_85:1.1
	BuildSys-4_84:1.1
	BuildSys-4_83:1.1
	BuildSys-4_82:1.1
	BuildSys-4_81:1.1
	BuildSys-4_80:1.1
	BuildSys-4_79:1.1
	BuildSys-4_78:1.1
	BuildSys-4_77:1.1
	BuildSys-4_76:1.1
	BuildSys-4_75:1.1
	BuildSys-4_74:1.1
	BuildSys-4_73:1.1
	BuildSys-4_72:1.1
	BuildSys-4_71:1.1
	BuildSys-4_70:1.1
	BuildSys-4_69:1.1
	BuildSys-4_68:1.1
	BuildSys-4_67:1.1
	BuildSys-4_66:1.1
	BuildSys-4_65:1.1
	BuildSys-4_64:1.1
	BuildSys-4_63:1.1
	BuildSys-4_62:1.1
	Batch4:1.1;
locks; strict;
comment	@# @;


1.19
date	2018.04.14.01.06.54;	author bavison;	state Exp;
branches;
next	1.18;
commitid	bZvAjS04et77wlyA;

1.18
date	2018.04.11.23.21.12;	author bavison;	state Exp;
branches;
next	1.17;
commitid	IH1EokSuAjoQZ4yA;

1.17
date	2018.03.12.21.44.42;	author bavison;	state Exp;
branches;
next	1.16;
commitid	k1x0Nm0F4RqwqduA;

1.16
date	2016.05.29.13.34.41;	author rsprowson;	state Exp;
branches;
next	1.15;
commitid	0r01XPH2sBMOFn8z;

1.15
date	2014.10.01.00.15.42;	author jlee;	state Exp;
branches;
next	1.14;
commitid	4A6uXS2L62XpJqSx;

1.14
date	2014.09.27.09.51.17;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	uwRe5gX3cYxE1YRx;

1.13
date	2014.09.24.20.24.12;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	DA9s1M3numtWDDRx;

1.12
date	2014.09.24.20.02.58;	author bavison;	state Exp;
branches;
next	1.11;
commitid	Vk7HFgZiKmEEwDRx;

1.11
date	2014.09.18.08.04.44;	author rsprowson;	state Exp;
branches;
next	1.10;
commitid	fHAY8yIhojRdKNQx;

1.10
date	2014.06.28.09.16.49;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	h6kwrLh88XGnMgGx;

1.9
date	2013.11.09.17.57.22;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	9gEYAgB7KEUi5Dcx;

1.8
date	2013.07.15.19.29.12;	author rsprowson;	state Exp;
branches;
next	1.7;
commitid	GNr5gJlFE3iZlBXw;

1.7
date	2012.09.01.11.03.02;	author jlee;	state Exp;
branches
	1.7.2.1;
next	1.6;
commitid	fZ0T28vScda6KOiw;

1.6
date	2012.08.11.20.46.22;	author rsprowson;	state Exp;
branches;
next	1.5;
commitid	jnxC49Kj6O73Eagw;

1.5
date	2012.02.05.09.13.25;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	XCR9w41JK8TYQWRv;

1.4
date	2012.01.12.22.26.15;	author rsprowson;	state Exp;
branches;
next	1.3;
commitid	MA2Eo3eDqo6N0WOv;

1.3
date	2011.12.19.16.22.23;	author jlee;	state Exp;
branches;
next	1.2;
commitid	wAdqy8zwtkFKLOLv;

1.2
date	2011.03.31.00.04.06;	author bavison;	state Exp;
branches;
next	1.1;
commitid	BfewXnm4kl3lOVdv;

1.1
date	2008.10.14.21.29.37;	author bavison;	state Exp;
branches;
next	;

1.7.2.1
date	2014.02.20.21.02.46;	author rsprowson;	state Exp;
branches;
next	1.7.2.2;
commitid	HvOFwLQ3c6PzNSpx;

1.7.2.2
date	2014.10.12.10.36.29;	author rsprowson;	state Exp;
branches;
next	1.7.2.3;
commitid	tHT6hsrmkNpoOTTx;

1.7.2.3
date	2015.02.12.20.30.56;	author rsprowson;	state Exp;
branches;
next	1.7.2.4;
commitid	joerV7rvwrTd9L9y;

1.7.2.4
date	2017.02.21.08.36.59;	author rsprowson;	state Exp;
branches;
next	;
commitid	yeUPZ9XHdm2zpNGz;


desc
@@


1.19
log
@  Makefile bugfixes
Detail:
  Makefiles/AAsmModule:
  * This was the odd-one out amongst top-level shared makefiles in that it
    still required the master makefile to include StdTools explicitly - even
    the GNU version of this makefile did so. Now changed for consistency.
  GNUmakefiles/AAsmModule:
  * Fixed typo in renaming of MERGEDMDIR to MERGEDRDIR.
Admin:
  Fixes build error in latest FPEmulator


Version 7.25. Tagged as 'BuildSys-7_25'
@
text
@# Copyright 2008 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile fragment for assembler modules, previously built using AAsm but now using objasm
# Such modules are characterised by the use of position-independent code
# and multiple source files (if applicable) linked at the assembly stage
# (using LNK and GET directives) rather than at the link stage.

INCLUDED_AASMMODULE = YES

#
# $Id: AAsmModule,v 1.18 2018/04/11 23:21:12 bavison Exp $
#
# This makefile provides the following phony targets:
#
#    all     rom           install_rom   resources
#    export  export_libs   export_hdrs   standalone         install
#    clean   debug         gpa_debug
#
#
# This fragment uses the following macros set by the master makefile.
#
#
# COMPONENT             (the name of the component)
# TARGET          (opt) (the leafname of the module - otherwise ${COMPONENT})
# ROM_MODULE      (opt) (output filename - otherwise rm.${MACHINE}.${TARGET})
# ROM_OBJECT      (opt) (object file for romming - otherwise o.${MACHINE}.${TARGET})
# ROM_LIBS        (opt) (libraries to link again ROM_OBJECT to generate ROM_MODULE)
# ROM_DEPEND      (opt) (any extra dependency to assert on ROM_MODULE)
# DBG_MODULE      (opt) (output filename for debug - otherwise rm.${MACHINE}.${TARGET}D
# DBG_OBJECT      (opt) (object file for debug - otherwise o.${MACHINE}.${TARGET}D
# DBG_LIBS        (opt) (libraries to link against DBG_OBJECT to generate DBG_MODULE - otherwise ${ROM_LIBS})
# SA_MODULE       (opt) (output filename for softload - otherwise rm.${MACHINE}.${TARGET}SA
# SA_OBJECT       (opt) (object file for softload - otherwise o.${MACHINE}.${TARGET}SA
# SA_LIBS         (opt) (libraries to link against SA_OBJECT to generate SA_MODULE - otherwise ${ROM_LIBS})
# SA_DEPEND       (opt) (any extra dependency to assert on SA_MODULE and DBG_MODULE)
# DIRS            (opt) (magic target to ensure object directories are present - otherwise o._dirs)
# HEADER[1-3]     (opt) (leafname of file in hdr to copy to <export$dir> on export_hdrs)
# ASMCHEADER[1-3] (opt) (C-from-assembly auto-generated header files to export, no Hdr. prefix - otherwise none)
# CHEADER[1-3]    (opt) (C header files to export - otherwise none)
# C_EXP_HDR       (opt) (C header target directory - otherwise <cexport$dir>.Interface.h)
# EXP_HDR         (opt) (directory for exported assembler interface headers)
# INSTRES_FILES   (opt) (extra resource files in addition to Messages - use InstRes specification rules)
# INSTRAM_FILES   (opt) (RAM build specific resources - otherwise ${INSTRES_FILES})
# INSTROM_FILES   (opt) (ROM build specific resources - otherwise ${INSTRES_FILES})
# INSTR??_DEPENDS (opt) (any extra dependency to assert on INSTRES/INSTRAM/INSTROM_FILES)
# INSTRES_VERSION (opt) (if set to "Messages", automatically insert version into Messages file during resources phase)
# MERGEDMSGS      (r/o) (leafname of generated Messages file)
# RESFSDIR        (opt) (actual directory to export resources to - otherwise ${RESDIR}.${TARGET})
# CUSTOMEXP       (opt) (set to "custom" to override the export rules)
# CUSTOMRES       (opt) (set to "custom" to override the resources rules, or "no" for no resources)
# CUSTOMROM       (opt) (set to "custom" to override the rom rules)
# CUSTOMSA        (opt) (set to "custom" to override the standalone rules)
# CUSTOMDBG       (opt) (set to "custom" to override the debug rules)
# CUSTOMGPA       (opt) (set to "custom" to override the GPA rules)
#
#
# It relies on the following from the build system:
#
#
# INSTDIR          (installation directory for ROM_MODULE or disc install)
# <Install$Dir>    (if INSTDIR was not specified by the build system)
# RESDIR           (installation directory for resources - cf. RESFSDIR)
# <Export$Dir>     (export directory for assembler interface headers)
# <CExport$Dir>    (export directory for C interface headers)
# CMDHELP          (optional, set to None to exclude syntax errors from Messages)
# PHASE            (export phase discriminator)
# INSERTVERSION    (awk script to substitute from VersionNum)
#
#
# It relies on the following generic tool macros from the Tools makefile
#
# CP + CPFLAGS     (copy, cp etc.)
# AS + ASFLAGS     (assembler)
# MKDIR            (cdir/mkdir -p)
# RM + WIPE        (deletions)
# ECHO
# LD               (linker)
#
#

TARGET     ?= ${COMPONENT}
INSTDIR    ?= <Install$Dir>
ROM_MODULE ?= rm.${MACHINE}.${TARGET}
ROM_SOURCE ?= s.${TARGET}
ROM_OBJECT ?= o.${MACHINE}.${TARGET}
DIRS       ?= o._dirs
EXP_HDR    ?= <export$dir>
C_EXP_HDR  ?= <cexport$dir>.Interface.h
SA_MODULE  ?= rm.${MACHINE}.${TARGET}SA
SA_OBJECT  ?= o.${MACHINE}.${TARGET}SA
INSTRAM_FILES   ?= ${INSTRES_FILES}
INSTRAM_DEPENDS ?= ${INSTRES_DEPENDS}
INSTROM_FILES   ?= ${INSTRES_FILES}
INSTROM_DEPENDS ?= ${INSTRES_DEPENDS}
MERGEDRDIR   ?= o._ResData_
MERGEDMSGS   ?= ${MERGEDRDIR}.${TARGET}.Messages
RESFSDIR   ?= ${RESDIR}.${TARGET}
RESAPPDIR  ?= ${RESDIR}.^.Apps.${APP}
ifeq (${CMDHELP},None)
SA_FLAGS   ?= -PD "standalone SETL {TRUE}" -PD "MergedMsgs SETS \"${MERGEDMSGS}\"" -PD "international_help SETL {FALSE}"
else
SA_FLAGS   ?= -PD "standalone SETL {TRUE}" -PD "MergedMsgs SETS \"${MERGEDMSGS}\""
endif
SA_LIBS    ?= ${ROM_LIBS}

DBG_MODULE ?= rm.${MACHINE}.${TARGET}D
DBG_OBJECT ?= o.${MACHINE}.${TARGET}D
DBG_LIBS   ?= ${ROM_LIBS}

GPA_FILE   ?= gpa.${MACHINE}.${TARGET}
GPA_AIF    ?= aif.${MACHINE}.${TARGET}

TOKENS     ?= Hdr:Tokens

TOKENSOURCE ?= s.TokHelpSrc

ifneq (${RESOURCES},)
CUSTOMRES   = ${RESOURCES} # The old name for CUSTOMRES
endif

ifeq ($(filter rom%,${MAKECMDGOALS}),)
RES_FILES_    = ${INSTRAM_FILES}
RES_DEPENDS_  = ${INSTRAM_DEPENDS}
else
RES_FILES_    = ${INSTROM_FILES}
RES_DEPENDS_  = ${INSTROM_DEPENDS}
endif

#
# Exported headers
#

# Need these to stop complaints about the rules below
ASMCHEADER1 ?= _!_x_!_
ASMCHEADER2 ?= _!_x_!_
ASMCHEADER3 ?= _!_x_!_
ASMCHEADER4 ?= _!_x_!_
ASMCHEADER5 ?= _!_x_!_
ASMCHEADER6 ?= _!_x_!_
ASMCHEADER7 ?= _!_x_!_
ASMCHEADER8 ?= _!_x_!_
CHEADER1    ?= _!_x_!_
CHEADER2    ?= _!_x_!_
CHEADER3    ?= _!_x_!_


ifeq ("${INCLUDED_STDTOOLS}","")
include StdTools
endif


all: rom debug standalone

${DIRS} ::
        ${MKDIR} o.${MACHINE}
        ${MKDIR} rm.${MACHINE}
        ${TOUCH} $@@

#
# ROM build rules
#
rom${CUSTOMROM}: ${ROM_MODULE}
        @@${ECHO} ${COMPONENT}: rom module built

install_rom${CUSTOMROM}: ${ROM_MODULE}
        ${CP} ${ROM_MODULE} ${INSTDIR}.${TARGET} ${CPFLAGS}
        ${CP} ${ROM_MODULE}_gpa ${INSTDIR}.${TARGET}_gpa ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: rom module installed

${ROM_MODULE}: ${ROM_OBJECT} ${ROM_LIBS} ${DIRS} ${ROM_DEPEND}
        ${LD} -rmf -o $@@ ${ROM_OBJECT} ${ROM_LIBS}
        ${LD} -aif -bin -d -Entry 0 -o ${ROM_MODULE}_aif ${ROM_OBJECT} ${ROM_LIBS}
        ${TOGPA} -s ${ROM_MODULE}_aif ${ROM_MODULE}_gpa

${ROM_OBJECT}: ${ROM_SOURCE} ${TOKHELPSRC} ${DIRS}
        ${AS} ${ASFLAGS} -g -o $@@ ${ROM_SOURCE}

#
# Standalone builds
#
standalone${CUSTOMSA}: ${SA_MODULE}
        @@${ECHO} ${COMPONENT}: standalone module built

${SA_MODULE}: ${SA_OBJECT} ${SA_LIBS} ${DIRS} ${SA_DEPEND}
        ${LD} -rmf -o $@@ ${SA_OBJECT} ${SA_LIBS}
        ${MODSQZ} -f ${MODSQZFLAGS} $@@
        ${CHMOD} -R a+rx rm

${SA_OBJECT}: ${ROM_SOURCE} ${MERGEDMSGS} ${TOKHELPSRC} ${DIRS}
        ${AS} ${ASFLAGS} -o $@@ ${ROM_SOURCE} ${SA_FLAGS}

ifeq ($(filter no custom,${CUSTOMRES}),)
${MERGEDMSGS}:
        ${MKDIR} ${MERGEDRDIR}.${TARGET}
        ${TOKENCHECK} LocalRes:Messages
        IfThere LocalRes:CmdHelp Then ${TOKENCHECK} LocalRes:CmdHelp
        IfThere LocalRes:CmdHelp Then ${FAPPEND} $@@ LocalRes:Messages LocalRes:CmdHelp Else IfThere LocalRes:Messages Then ${CP} LocalRes:Messages $@@ ${CPFLAGS}
else
${MERGEDMSGS}::
        @@${NOP}
endif

install${CUSTOMSA}: ${SA_MODULE}
        ${MKDIR} ${INSTDIR}
        ${CP} ${SA_MODULE} ${INSTDIR}.${TARGET} ${CPFLAGS}
        ${CHMOD} a=rx $@@
        @@${ECHO} ${COMPONENT}: standalone module installed

debug${CUSTOMDBG}: ${DBG_MODULE}
        @@${ECHO} ${COMPONENT}: standalone debug module built

${DBG_MODULE}: ${DBG_OBJECT} ${DBG_LIBS} ${DIRS} ${SA_DEPEND}
        ${LD} -rmf -o $@@ ${DBG_OBJECT} ${DBG_LIBS}

${DBG_OBJECT}: ${ROM_SOURCE} ${MERGEDMSGS} ${TOKHELPSRC} ${DIRS}
        ${AS} ${ASFLAGS} ${ASDFLAGS} -g -pd "debugging SETL {TRUE}" -o $@@ ${ROM_SOURCE} ${SA_FLAGS}

gpa_debug${CUSTOMGPA}: ${GPA_FILE}
        @@${ECHO} ${COMPONENT}: GPA debug listing generated

${GPA_FILE}: ${GPA_AIF}
        ${MKDIR} gpa.${MACHINE}
        ${TOGPA} -s ${GPA_AIF} ${GPA_FILE}

${GPA_AIF}: ${DBG_OBJECT}
        ${MKDIR} aif.${MACHINE}
        ${LD} -aif -bin -d -o ${GPA_AIF} ${DBG_OBJECT}

#
# Clean the module
#
clean ::
        @@IfThere rm.${MACHINE} Then ${ECHO} ${WIPE} rm.${MACHINE} ${WFLAGS}
        @@IfThere rm.${MACHINE} Then ${WIPE} rm.${MACHINE} ${WFLAGS}
        @@-IfThere rm.* Then Else IfThere rm Then ${ECHO} ${WIPE} rm ${WFLAGS}
        @@-IfThere rm.* Then Else IfThere rm Then ${WIPE} rm ${WFLAGS}
        @@IfThere o Then ${ECHO} ${WIPE} o ${WFLAGS}
        @@IfThere o Then ${WIPE} o ${WFLAGS}
        @@IfThere aif.${MACHINE} Then ${ECHO} ${WIPE} aif.${MACHINE} ${WFLAGS}
        @@IfThere aif.${MACHINE} Then ${WIPE} aif.${MACHINE} ${WFLAGS}
        @@-IfThere aif.* Then Else IfThere aif Then ${ECHO} ${WIPE} aif ${WFLAGS}
        @@-IfThere aif.* Then Else IfThere aif Then ${WIPE} aif ${WFLAGS}
        @@IfThere gpa Then ${ECHO} ${WIPE} gpa ${WFLAGS}
        @@IfThere gpa Then ${WIPE} gpa ${WFLAGS}
        @@-${RM} ${TOKENSOURCE}
        @@${ECHO} ${COMPONENT}: cleaned

#
# Export phases
#
export_hdrs: ${EXPORTS}
        @@If "${HEADER1}"<>"" Then ${ECHO} ${CP} hdr.${HEADER1} ${EXP_HDR}.${HEADER1} ${CPFLAGS}
        @@If "${HEADER1}"<>"" Then ${CP} hdr.${HEADER1} ${EXP_HDR}.${HEADER1} ${CPFLAGS}
        @@If "${HEADER2}"<>"" Then ${ECHO} ${CP} hdr.${HEADER2} ${EXP_HDR}.${HEADER2} ${CPFLAGS}
        @@If "${HEADER2}"<>"" Then ${CP} hdr.${HEADER2} ${EXP_HDR}.${HEADER2} ${CPFLAGS}
        @@If "${HEADER3}"<>"" Then ${ECHO} ${CP} hdr.${HEADER3} ${EXP_HDR}.${HEADER3} ${CPFLAGS}
        @@If "${HEADER3}"<>"" Then ${CP} hdr.${HEADER3} ${EXP_HDR}.${HEADER3} ${CPFLAGS}
        @@If "${HEADER4}"<>"" Then ${ECHO} ${CP} hdr.${HEADER4} ${EXP_HDR}.${HEADER4} ${CPFLAGS}
        @@If "${HEADER4}"<>"" Then ${CP} hdr.${HEADER4} ${EXP_HDR}.${HEADER4} ${CPFLAGS}
        @@If "${HEADER5}"<>"" Then ${ECHO} ${CP} hdr.${HEADER5} ${EXP_HDR}.${HEADER5} ${CPFLAGS}
        @@If "${HEADER5}"<>"" Then ${CP} hdr.${HEADER5} ${EXP_HDR}.${HEADER5} ${CPFLAGS}
        @@If "${HEADER6}"<>"" Then ${ECHO} ${CP} hdr.${HEADER6} ${EXP_HDR}.${HEADER6} ${CPFLAGS}
        @@If "${HEADER6}"<>"" Then ${CP} hdr.${HEADER6} ${EXP_HDR}.${HEADER6} ${CPFLAGS}
        @@If "${HEADER7}"<>"" Then ${ECHO} ${CP} hdr.${HEADER7} ${EXP_HDR}.${HEADER7} ${CPFLAGS}
        @@If "${HEADER7}"<>"" Then ${CP} hdr.${HEADER7} ${EXP_HDR}.${HEADER7} ${CPFLAGS}
        @@If "${HEADER8}"<>"" Then ${ECHO} ${CP} hdr.${HEADER8} ${EXP_HDR}.${HEADER8} ${CPFLAGS}
        @@If "${HEADER8}"<>"" Then ${CP} hdr.${HEADER8} ${EXP_HDR}.${HEADER8} ${CPFLAGS}
        @@If "${HEADER9}"<>"" Then ${ECHO} ${CP} hdr.${HEADER9} ${EXP_HDR}.${HEADER9} ${CPFLAGS}
        @@If "${HEADER9}"<>"" Then ${CP} hdr.${HEADER9} ${EXP_HDR}.${HEADER9} ${CPFLAGS}
        @@If "${HEADER10}"<>"" Then ${ECHO} ${CP} hdr.${HEADER10} ${EXP_HDR}.${HEADER10} ${CPFLAGS}
        @@If "${HEADER10}"<>"" Then ${CP} hdr.${HEADER10} ${EXP_HDR}.${HEADER10} ${CPFLAGS}
        @@If "${HEADER11}"<>"" Then ${ECHO} ${CP} hdr.${HEADER11} ${EXP_HDR}.${HEADER11} ${CPFLAGS}
        @@If "${HEADER11}"<>"" Then ${CP} hdr.${HEADER11} ${EXP_HDR}.${HEADER11} ${CPFLAGS}
        @@If "${HEADER12}"<>"" Then ${ECHO} ${CP} hdr.${HEADER12} ${EXP_HDR}.${HEADER12} ${CPFLAGS}
        @@If "${HEADER12}"<>"" Then ${CP} hdr.${HEADER12} ${EXP_HDR}.${HEADER12} ${CPFLAGS}
        @@If "${HEADER13}"<>"" Then ${ECHO} ${CP} hdr.${HEADER13} ${EXP_HDR}.${HEADER13} ${CPFLAGS}
        @@If "${HEADER13}"<>"" Then ${CP} hdr.${HEADER13} ${EXP_HDR}.${HEADER13} ${CPFLAGS}
        @@If "${HEADER14}"<>"" Then ${ECHO} ${CP} hdr.${HEADER14} ${EXP_HDR}.${HEADER14} ${CPFLAGS}
        @@If "${HEADER14}"<>"" Then ${CP} hdr.${HEADER14} ${EXP_HDR}.${HEADER14} ${CPFLAGS}
        @@If "${HEADER15}"<>"" Then ${ECHO} ${CP} hdr.${HEADER15} ${EXP_HDR}.${HEADER15} ${CPFLAGS}
        @@If "${HEADER15}"<>"" Then ${CP} hdr.${HEADER15} ${EXP_HDR}.${HEADER15} ${CPFLAGS}
        @@If "${HEADER16}"<>"" Then ${ECHO} ${CP} hdr.${HEADER16} ${EXP_HDR}.${HEADER16} ${CPFLAGS}
        @@If "${HEADER16}"<>"" Then ${CP} hdr.${HEADER16} ${EXP_HDR}.${HEADER16} ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: header export complete

export_libs:
        @@${ECHO} ${COMPONENT}: library export complete

export${CUSTOMEXP}: export_${PHASE}
        @@${NOP}
        
export_:: export_libs export_hdrs
        @@${NOP}

${C_EXP_HDR}.${ASMCHEADER1} :: hdr.${ASMCHEADER1}
        ${HDR2H} hdr.${ASMCHEADER1} $@@

${C_EXP_HDR}.${ASMCHEADER2} :: hdr.${ASMCHEADER2}
        ${HDR2H} hdr.${ASMCHEADER2} $@@

${C_EXP_HDR}.${ASMCHEADER3} :: hdr.${ASMCHEADER3}
        ${HDR2H} hdr.${ASMCHEADER3} $@@

${C_EXP_HDR}.${ASMCHEADER4} :: hdr.${ASMCHEADER4}
        ${HDR2H} hdr.${ASMCHEADER4} $@@

${C_EXP_HDR}.${ASMCHEADER5} :: hdr.${ASMCHEADER5}
        ${HDR2H} hdr.${ASMCHEADER5} $@@

${C_EXP_HDR}.${ASMCHEADER6} :: hdr.${ASMCHEADER6}
        ${HDR2H} hdr.${ASMCHEADER6} $@@

${C_EXP_HDR}.${ASMCHEADER7} :: hdr.${ASMCHEADER7}
        ${HDR2H} hdr.${ASMCHEADER7} $@@

${C_EXP_HDR}.${ASMCHEADER8} :: hdr.${ASMCHEADER8}
        ${HDR2H} hdr.${ASMCHEADER8} $@@

${C_EXP_HDR}.${CHEADER1} :: h.${CHEADER1}
        ${CP} h.${CHEADER1} $@@ ${CPFLAGS}

${C_EXP_HDR}.${CHEADER2} :: h.${CHEADER2}
        ${CP} h.${CHEADER2} $@@ ${CPFLAGS}

${C_EXP_HDR}.${CHEADER3} :: h.${CHEADER3}
        ${CP} h.${CHEADER3} $@@ ${CPFLAGS}

#
# Resources rules
#
resources${CUSTOMRES}:: resources-${CMDHELP}
        @@${ECHO} ${COMPONENT}: resources copied to Messages module

ifeq (${CUSTOMRES},no)
resources:
        @@${ECHO} ${COMPONENT}: no resources to export
endif        

resources_extra: ${RES_DEPENDS_}
ifneq (${RES_FILES_},)
        ${INSTRES} -I Resources.${USERIF}.${LOCALE},Resources.${USERIF}.UK,Resources.${LOCALE},Resources.UK,Resources ${RESFSDIR} ${RES_FILES_}
endif
ifneq (,$(filter Messages,${INSTRES_VERSION}))
        ${INSERTVERSION} ${RESFSDIR}.Messages > ${RESFSDIR}._Awk_
        ${CP} ${RESFSDIR}._Awk_ ${RESFSDIR}.Messages ${CPFLAGS}
        ${RM} ${RESFSDIR}._Awk_
endif
        @@${NOP}

resources_common:
        ${MKDIR} ${RESFSDIR}
        ${TOKENCHECK} LocalRes:Messages
        ${CP} LocalRes:Messages ${RESFSDIR}.Messages ${CPFLAGS}

resources_cmdhelp:
        IfThere LocalRes:CmdHelp Then ${TOKENCHECK} LocalRes:CmdHelp
        IfThere LocalRes:CmdHelp Then ${FAPPEND} ${RESFSDIR}.Messages LocalRes:Messages LocalRes:CmdHelp

resources-None: resources_extra resources_common
        @@${NOP}

resources-: resources_extra resources_cmdhelp resources_common
        @@${NOP}

#
# Build the help tokens
#
${TOKENSOURCE}: ${HELPSRC} ${TOKENS}
        ${TOKENISE} ${TOKENS} ${HELPSRC} $@@

EOFSTDMAKEFILE=$Id: AAsmModule,v 1.18 2018/04/11 23:21:12 bavison Exp $
# EOF
@


1.18
log
@  Incremental step in cross-compilation support
Detail:
  ModuleDB:
  * Correct capitalisation of resgen's TARGET to match its main source file
  GNUmakefiles/AAsmModule:
  * Targets now given ,ffa filetype suffix
  * Support source directory layouts s/<subdir>/<leaf> as used by the
    kernel and printer drivers - define SYMLINK_EXT_FIRST to enable
  * Prevent relinking when running make on an up-to-date component due to
    a difference between amu and GNU make's handling of double-colon rules
  * Support linking with GNU toolchain
  * Fix installation rule (mixup between MERGEDMDIR and MERGEDRDIR)
  * Support up to 16 assembler and 8 C-from-assembler headers, up from 3
    of each (here's looking at you, kernel) - long-term, it might be worth
    changing this to a scheme like that used by CModule to remove any
    limits
  * Fix C-from-assembler exports to have .h suffix
  GNUmakefiles/AppLibs:
  * Define INCLUDE_OSLIB to permit OSLib header search paths to be
    specified in an OS-agnostic way
  GNUmakefiles/CApp:
  * Prevent relinking when running make on an up-to-date component due to
    a difference between amu and GNU make's handling of double-colon rules
  GNUmakefiles/CLibrary:
  * Prevent rearchiving when running make on an up-to-date component due
    to a difference between amu and GNU make's handling of double-colon
    rules
  * Don't use .hdr suffix on exported assembler header files
  * Correct order of dependencies for export_libs phony target
  GNUmakefiles/StdTools:
  * Definition for the module filetype suffix
  * Add LDBIN tool for GNU/Norcroft-agnostic binary link, useful for
    linking position-independent binary code, such as relocatable modules
    (i.e. ones that don't require the linker to create a __RelocCode
    function)
  * FAPPEND function now works if the same file is used for the
    destination as for one of the sources (this is used by CModule)
  GNUmakefiles/CModule, ModStdRule, ModuleLibs:
  * Finally created cross-compilation versions of the last major shared
    makefiles! Warning: these have received limited testing to date.
  Makefiles/AAsmModule:
  * Support up to 16 assembler and 8 C-from-assembler headers
  Makefiles/AppLibs, ModuleLibs:
  * Define INCLUDE_OSLIB
  Makefiles/StdTools:
  * Add LDBIN tool


Version 7.24. Tagged as 'BuildSys-7_24'
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.17 2018/03/12 21:44:42 bavison Exp $
d159 5
d383 1
a383 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.17 2018/03/12 21:44:42 bavison Exp $
@


1.17
log
@  Changes to keep GNUmakefiles and Makefiles compatible
Detail:
  GNUmakefiles/AAsmModule:
  * Adopt same extensible syntax for describing resources phase files as CModule (see BuildSys 6.91)
  GNUmakefiles/AppLibs:
  * Don't permit CALLXLIB to be used for application builds (see BuildSys 6.61)
  * Reflect MODMALLOCLIB leafname change (see BuildSys 6.61)
  * Add TBOXINTLIB, TBOXINTDBGLIB, PDEBUGLIB, PRISMLIB, REMOTEDBLIB, TRACELIB, UNICODELIB and include more libs in DEBUGLIBS (see BuildSys 6.63)
  GNUmakefiles/CApp:
  * Add install_debug_app rule for debug app installations (see BuildSys 6.53)
  GNUmakefiles/CLibrary:
  * Allow additional dependencies to be specified using LIB_DEPENDS (see BuildSys 6.63)
  * Gains install target (see BuildSys 7.15)
  GNUmakefiles/StdTools:
  * Add shell implementation of FAppend (see BuildSys 6.45) - compatible except for the fact that the destination is given current timestamp
  * ${NOP} no longer implicitly includes the silent-command prefix character @@ (see BuildSys 6.50)
  * Add CPVFLAGS (see BuildSys 6.53) although it can't achieve anything as a suffix to the command
  * Add shell implementation of EraseCVS (see BuildSys 6.53)
  * Add InstViaRG tool (see BuildSys 6.70)


Version 7.21. Tagged as 'BuildSys-7_21'
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.16 2016/05/29 13:34:41 rsprowson Exp $
d149 5
d265 26
d311 15
d378 1
a378 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.16 2016/05/29 13:34:41 rsprowson Exp $
@


1.16
log
@Use the same optional resources syntax for AAsmModule as for CModule
Copy over the rules that use platform agnostic InstRes to copy their extra resources (for those modules wanting more than just the default Messages+CmdHelp).
Copy over the logic that allows INSERTVERSION to be run on Messages files (from CApp shared makefile) so modules which have a front end can get their dates from Messages.
Add INSERTVERSION facility to CModule too.

Version 6.91. Tagged as 'BuildSys-6_91'
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.15 2014/10/01 00:15:42 jlee Exp $
d58 1
d332 1
a332 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.15 2014/10/01 00:15:42 jlee Exp $
@


1.15
log
@Fix some Disc build errors
Detail:
  Makefiles/AAsmModule - Reintroduce IfThere check of LocalRes:Messages, so that components which don't have any messages file will build correctly once again
  Makefiles/CApp - Ensure ${INSERTVERSION}'d files are writable; fixes errors when performing repeated Disc builds of components which mark their install directory tree as readonly.
Admin:
  Fixes issue reported on forums with DDEUtils not being present in recent disc images:
  https://www.riscosopen.org/forum/forums/11/topics/2848


Version 6.51. Tagged as 'BuildSys-6_51'
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.14 2014/09/27 09:51:17 rsprowson Exp $
a36 1
# RESFSDIR        (opt) (actual directory to export resources to - otherwise ${RESDIR}.${TARGET})
d54 6
d78 1
a98 2
RESFSDIR   ?= ${RESDIR}.${TARGET}
RESAPPDIR  ?= ${RESDIR}.^.Apps.${APP}
a99 1

d102 8
a109 2
MERGEDMDIR ?= o.${MACHINE}._Messages_
MERGEDMSGS ?= ${MERGEDMDIR}.${TARGET}
d132 8
d193 3
a195 2
${MERGEDMSGS}${PRIVATEMSGS}:
        ${MKDIR} ${MERGEDMDIR}
d199 4
d291 1
a291 1
resources${CUSTOMRES}:: ${RESOURCEEXTRA} resources-${CMDHELP}
d299 12
a310 1
resources_common::
d315 5
a319 1
resources-None: resources_common
d322 2
a323 12
resources-: resources_common
        IfThere LocalRes:CmdHelp Then ${TOKENCHECK} LocalRes:CmdHelp
        IfThere LocalRes:CmdHelp Then ${CAT} LocalRes:CmdHelp { >> ${RESFSDIR}.Messages }
        
resources_res::
        ${CP} LocalRes:Res ${RESFSDIR}.Res ${CPFLAGS}
        
resources_sprites::
        ${INSTRES} -I LocalUserIFRes:,LocalRes:,Resources ${RESFSDIR} Sprites [Sprites11] [Sprites22]

resources_templates::
        ${CP} LocalRes:Templates ${RESFSDIR}.Templates ${CPFLAGS}
d331 1
a331 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.14 2014/09/27 09:51:17 rsprowson Exp $
@


1.14
log
@Change less useful resources_messages for resources_sprites
GNU/AAsmModule:
 Swap round ${RESOURCEEXTRA} to come later, since otherwise the ${RESDIR} hasn't been created
AAsmModule & CModule:
 Recemtly added resources_messages was a bit pointless as resources_common did the same thing, instead add resources_sprites.
ModuleLibs:
 Debug library for internal Toolbox objects added.
Retagged as BuildSys-6_50.
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.13 2014/09/24 20:24:12 rsprowson Exp $
d180 1
a180 1
        IfThere LocalRes:CmdHelp Then ${FAPPEND} $@@ LocalRes:Messages LocalRes:CmdHelp Else ${CP} LocalRes:Messages $@@ ${CPFLAGS}
d304 1
a304 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.13 2014/09/24 20:24:12 rsprowson Exp $
@


1.13
log
@Make debug builds a bit simpler
AAsmModule:
 Remove SA_DEBUG override, instead use ASDFLAGS like CModule does.
CModule:
 If the target is 'debug' allow CMHGDFLAGS to pass extra defines into CMHG, this avoids the common problem of having to have 2 CMHG files and select between them.

Other - sync the messages token check/copying, use ${NOP} and ${FAPPEND} and ${DO}, and od.${RES_OBJ} isn't dependent on ${DIRS} since it already has that when creating o.${RES_OBJ}.

Version 6.50. Tagged as 'BuildSys-6_50'
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.12 2014/09/24 20:02:58 bavison Exp $
d292 2
a293 2
resources_messages::
        ${CP} LocalRes:Messages ${RESFSDIR}.Messages ${CPFLAGS}
d304 1
a304 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.12 2014/09/24 20:02:58 bavison Exp $
@


1.12
log
@  Improvements to AAsmModule shared makefile
Detail:
  * Corrected and added documentation at head of file
  * Now defines an "all" target
  * DIRS now has a default value (i.e. behaviour now matches the other shared
    makefiles) freeing the master makefile from needing to specify platform-
    specific paths
  * Added cross-compilation version
Admin:
  Tested by cross-compiling the BASIC module


Version 6.49. Tagged as 'BuildSys-6_49'
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.11 2014/09/18 08:04:44 rsprowson Exp $
a109 1
SA_DEBUG   ?= -g -PreDefine "debugging SETL {TRUE}"
a145 1

d178 1
a178 2
        ${TOUCH} $@@
        IfThere LocalRes:Messages Then ${CP} LocalRes:Messages $@@ ${CPFLAGS}
d180 1
a180 1
        IfThere LocalRes:CmdHelp Then ${CAT} LocalRes:CmdHelp { >> $@@ }
d195 1
a195 1
        ${AS} ${ASFLAGS} -o $@@ ${ROM_SOURCE} ${SA_FLAGS} ${SA_DEBUG}
d243 1
a243 1
        @@|
d246 1
a246 1
        @@|
d283 1
a283 1
        @@|
d304 1
a304 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.11 2014/09/18 08:04:44 rsprowson Exp $
@


1.11
log
@Improvements to resources phase rules
AAsmModule:
The preferred override is now 'CUSTOMRES' to match CModule, though the former 'RESOURCES' is still accepted as a transitional step.
The internal phoney targets (like resources-None) can no longer be augmented with :: since that doesn't make sense.
Copied some block comments from CModule so they're easier to compare.
Fixed the resourcesno/resourcesNo never appearing, this is because when CUSTOMRES=no you end up with two rules called resourcesno and no rule called resources.
CModule:
Added resources_res and resources_messages and resources_templates as well as RESOURCEEXTRA support (from AAsmModule).
Copied some block comments from AAsmModule so they're easier to compare.

Tested in an IOMD ROM resources phase.

Version 6.48. Tagged as 'BuildSys-6_48'
@
text
@d16 3
d23 1
a23 1
# $Id: AAsmModule,v 1.10 2014/06/28 09:16:49 rsprowson Exp $
d27 1
a27 1
#    rom     install_rom   resources     resources_common   resources-None
d37 13
a49 5
# RESFSDIR        (opt) (actual directory to export resources to)
# ROM_MODULE      (opt) (output filename - otherwise rm.${TARGET})
# ROM_OBJS        (opt) (component's object files for romming)
# ROM_LIBS        (opt) (libraries to link again ROM_OBJS to generate ROM_MODULE)
# DIRS            (opt) (magic target to ensure object directories are present)
d52 1
a54 2
# ROM_DEPEND      (opt) (any extra dependency to assert on ROM_TARGET)
# SA_DEPEND       (opt) (any extra dependency to assert on SA_TARGET and DBG_TARGET)
d70 1
d91 1
d137 7
d147 1
a156 1
        ${MKDIR} rm.${MACHINE}
a161 1
        ${MKDIR} o.${MACHINE}
a170 1
        ${MKDIR} rm.${MACHINE}
a175 1
        ${MKDIR} o.${MACHINE}
a194 1
        ${MKDIR} rm.${MACHINE}
a197 1
        ${MKDIR} o.${MACHINE}
d307 1
a307 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.10 2014/06/28 09:16:49 rsprowson Exp $
@


1.10
log
@Revise BBE target
BootCommands 1.39 and later allow 1k command lines with *DO so there's no need to override the definition of ${PERL} any more.
Also, add comments to AAsmModule about the various CUSTOM overrides possible.

Version 6.45. Tagged as 'BuildSys-6_45'
@
text
@d15 1
a15 2
# Makefile fragment for assembler modules targetted at ROMming, previously built
# using AAsm but now using objasm.
d20 1
a20 1
# $Id: AAsmModule,v 1.9 2013/11/09 17:57:22 rsprowson Exp $
d46 1
d108 3
d126 1
a126 1
# RISC OS ROM build rules:
a135 3
#
# Actually make the linked ROM target 
#
a196 1

d256 1
a256 1
# Resources
d258 7
d270 2
a271 2
        
resources-None:: resources_common
d274 1
a274 1
resources-:: resources_common
d278 1
a278 4
resources${RESOURCES} :: ${RESOURCEEXTRA} resources-${CMDHELP}
        @@${ECHO} ${COMPONENT}: resources copied to Messages module
        
resources_res ::
d281 1
a281 1
resources_messages ::
d284 1
a284 1
resources_templates ::
a285 3
        
resourcesno resourcesNo ::
        @@${ECHO} ${COMPONENT}: no resources to export
d293 1
a293 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.9 2013/11/09 17:57:22 rsprowson Exp $
@


1.9
log
@Copy over SA_DEPEND and ROM_DEPEND feature from CModule to AAsmModule
Revert change to Disc component revision 1.59, there's no point providing just the CLib in 310/Modules since it needs CallASWI and FPEmulator which also aren't here. See Components/PlingSystem and the ReadMe improvement in ABRelease-0_56.

Version 6.31. Tagged as 'BuildSys-6_31'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.8 2013/07/15 19:29:12 rsprowson Exp $
d46 5
d293 1
a293 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.8 2013/07/15 19:29:12 rsprowson Exp $
@


1.8
log
@Shared makefile enhancements
AAsmModule:
 Comments sync'd with implementation
ModuleLibs/AppLibs:
 Add the RMVersion library
CApp:
 Now APP_OBJS and APP_DBG_OBJS don't need the '.o' suffix in common with OBJS and DBG_OBJS
 Changed insertion of version numbers to be common for Messages/Obey/Desc files through new 'INSTAPP_VERSION' dummy rule
 INSTALLAPP_DEPEND renamed to INSTAPP_DEPENDS to match other INSTAPP_stuff
CUtil:
 Use addprefix'd APP_OBJS
StdTools:
 Default SQUISHFLAGS now set
 Added INSERTVERSION


Version 6.20. Tagged as 'BuildSys-6_20'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.7 2012/09/01 11:03:02 jlee Exp $
d44 2
d131 1
a131 1
${ROM_MODULE}: ${ROM_OBJECT} ${ROM_LIBS} ${DIRS}
a136 1

d147 1
a147 1
${SA_MODULE}: ${SA_OBJECT} ${SA_LIBS} ${DIRS}
a152 1

d173 1
a173 1
${DBG_MODULE}: ${DBG_OBJECT} ${DBG_LIBS} ${DIRS}
d288 1
a288 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.7 2012/09/01 11:03:02 jlee Exp $
@


1.7
log
@Modify makefile fragments to generate GPA & symbol files when building ROM modules. Add HangWatch to ModuleDB.
Detail:
  Makefiles/AAsmModule, Makefiles/CModule - Modified to generate GPA (for assembler) and symbols (for C) files when building ROM modules. These files are copied into the install folder, allowing them to easily be picked up by debugging tools.
  ModuleDB - Added entry for HangWatch module
Admin:
  Makefile changes tested with BCM2835, OMAP3, and Disc builds


Version 5.87. Tagged as 'BuildSys-5_87'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.6 2012/08/11 20:46:22 rsprowson Exp $
d33 11
a43 10
# COMPONENT        (the name of the component)
#
# RESFSDIR (opt)   (actual directory to export resources to)
# ROM_MODULE(opt)  (output filename - otherwise rm.${TARGET})
# ROM_OBJS (opt)   (component's object files for romming)
# ROM_LIBS (opt)   (libraries to link again ROM_OBJS to generate ROM_MODULE)
# DIRS     (opt)   (magic target to ensure object directories are present)
# HEADER1  (opt)   (leafname of file in hdr to copy to <export$dir> on export_hdrs)
# HEADER2  (opt)   (leafname of file in hdr to copy to <export$dir> on export_hdrs)
# EXP_HDR  (opt)   (directory for exported assembler interface headers)
d288 1
a288 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.6 2012/08/11 20:46:22 rsprowson Exp $
@


1.7.2.1
log
@Merge of trunk BuildSys-6_34 to branch RPiFreeze

Version 6.00, 1.142.2.4. Tagged as 'BuildSys-6_00-1_142_2_4'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.9 2013/11/09 17:57:22 rsprowson Exp $
d33 10
a42 13
# COMPONENT             (the name of the component)
# TARGET          (opt) (the leafname of the module - otherwise ${COMPONENT})
# RESFSDIR        (opt) (actual directory to export resources to)
# ROM_MODULE      (opt) (output filename - otherwise rm.${TARGET})
# ROM_OBJS        (opt) (component's object files for romming)
# ROM_LIBS        (opt) (libraries to link again ROM_OBJS to generate ROM_MODULE)
# DIRS            (opt) (magic target to ensure object directories are present)
# HEADER[1-3]     (opt) (leafname of file in hdr to copy to <export$dir> on export_hdrs)
# ASMCHEADER[1-3] (opt) (C-from-assembly auto-generated header files to export, no Hdr. prefix - otherwise none)
# C_EXP_HDR       (opt) (C header target directory - otherwise <cexport$dir>.Interface.h)
# EXP_HDR         (opt) (directory for exported assembler interface headers)
# ROM_DEPEND      (opt) (any extra dependency to assert on ROM_TARGET)
# SA_DEPEND       (opt) (any extra dependency to assert on SA_TARGET and DBG_TARGET)
d128 1
a128 1
${ROM_MODULE}: ${ROM_OBJECT} ${ROM_LIBS} ${DIRS} ${ROM_DEPEND}
d134 1
d145 1
a145 1
${SA_MODULE}: ${SA_OBJECT} ${SA_LIBS} ${DIRS} ${SA_DEPEND}
d151 1
d172 1
a172 1
${DBG_MODULE}: ${DBG_OBJECT} ${DBG_LIBS} ${DIRS} ${SA_DEPEND}
d287 1
a287 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.9 2013/11/09 17:57:22 rsprowson Exp $
@


1.7.2.2
log
@Merge of BuildSys-6_52 to branch

Version 6.00, 1.142.2.5. Tagged as 'BuildSys-6_00-1_142_2_5'
@
text
@d15 2
a16 4
# Makefile fragment for assembler modules, previously built using AAsm but now using objasm
# Such modules are characterised by the use of position-independent code
# and multiple source files (if applicable) linked at the assembly stage
# (using LNK and GET directives) rather than at the link stage.
d21 1
a21 1
# $Id: AAsmModule,v 1.15 2014/10/01 00:15:42 jlee Exp $
d25 1
a25 1
#    all     rom           install_rom   resources
d35 5
a39 13
# RESFSDIR        (opt) (actual directory to export resources to - otherwise ${RESDIR}.${TARGET})
# ROM_MODULE      (opt) (output filename - otherwise rm.${MACHINE}.${TARGET})
# ROM_OBJECT      (opt) (object file for romming - otherwise o.${MACHINE}.${TARGET})
# ROM_LIBS        (opt) (libraries to link again ROM_OBJECT to generate ROM_MODULE)
# ROM_DEPEND      (opt) (any extra dependency to assert on ROM_MODULE)
# DBG_MODULE      (opt) (output filename for debug - otherwise rm.${MACHINE}.${TARGET}D
# DBG_OBJECT      (opt) (object file for debug - otherwise o.${MACHINE}.${TARGET}D
# DBG_LIBS        (opt) (libraries to link against DBG_OBJECT to generate DBG_MODULE - otherwise ${ROM_LIBS})
# SA_MODULE       (opt) (output filename for softload - otherwise rm.${MACHINE}.${TARGET}SA
# SA_OBJECT       (opt) (object file for softload - otherwise o.${MACHINE}.${TARGET}SA
# SA_LIBS         (opt) (libraries to link against SA_OBJECT to generate SA_MODULE - otherwise ${ROM_LIBS})
# SA_DEPEND       (opt) (any extra dependency to assert on SA_MODULE and DBG_MODULE)
# DIRS            (opt) (magic target to ensure object directories are present - otherwise o._dirs)
a41 1
# CHEADER[1-3]    (opt) (C header files to export - otherwise none)
d44 2
a45 6
# CUSTOMEXP       (opt) (set to "custom" to override the export rules)
# CUSTOMRES       (opt) (set to "custom" to override the resources rules, or "no" for no resources)
# CUSTOMROM       (opt) (set to "custom" to override the rom rules)
# CUSTOMSA        (opt) (set to "custom" to override the standalone rules)
# CUSTOMDBG       (opt) (set to "custom" to override the debug rules)
# CUSTOMGPA       (opt) (set to "custom" to override the GPA rules)
a54 1
# <CExport$Dir>    (export directory for C interface headers)
a74 1
DIRS       ?= o._dirs
d93 1
a102 3
ifneq (${RESOURCES},)
CUSTOMRES   = ${RESOURCES} # The old name for CUSTOMRES
endif
a116 7
all: rom debug standalone

${DIRS} ::
        ${MKDIR} o.${MACHINE}
        ${MKDIR} rm.${MACHINE}
        ${TOUCH} $@@

d118 1
a118 1
# ROM build rules
d128 3
d132 1
d138 1
d148 1
d154 1
d159 2
a160 1
        ${TOKENCHECK} LocalRes:Messages
d162 1
a162 1
        IfThere LocalRes:CmdHelp Then ${FAPPEND} $@@ LocalRes:Messages LocalRes:CmdHelp Else IfThere LocalRes:Messages Then ${CP} LocalRes:Messages $@@ ${CPFLAGS}
d174 1
d178 2
a179 1
        ${AS} ${ASFLAGS} ${ASDFLAGS} -g -pd "debugging SETL {TRUE}" -o $@@ ${ROM_SOURCE} ${SA_FLAGS}
d192 1
d228 1
a228 1
        @@${NOP}
d231 1
a231 1
        @@${NOP}
d252 1
a252 1
# Resources rules
a253 7
resources${CUSTOMRES}:: ${RESOURCEEXTRA} resources-${CMDHELP}
        @@${ECHO} ${COMPONENT}: resources copied to Messages module

ifeq (${CUSTOMRES},no)
resources:
        @@${ECHO} ${COMPONENT}: no resources to export
endif        
d259 3
d263 1
a263 4
resources-None: resources_common
        @@${NOP}

resources-: resources_common
d267 4
a270 1
resources_res::
d273 2
a274 2
resources_sprites::
        ${INSTRES} -I LocalUserIFRes:,LocalRes:,Resources ${RESFSDIR} Sprites [Sprites11] [Sprites22]
d276 1
a276 1
resources_templates::
d278 3
d288 1
a288 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.15 2014/10/01 00:15:42 jlee Exp $
@


1.7.2.3
log
@Merge of BuildSys-6_64 to branch

Version 6.00, 1.142.2.6. Tagged as 'BuildSys-6_00-1_142_2_6'
@
text
@@


1.7.2.4
log
@Merge of BuildSys-7_04 to branch

Version 6.00, 1.142.2.9. Tagged as 'BuildSys-6_00-1_142_2_9'
@
text
@d23 1
a23 1
# $Id: AAsmModule,v 1.16 2016/05/29 13:34:41 rsprowson Exp $
d37 1
a54 6
# INSTRES_FILES   (opt) (extra resource files in addition to Messages - use InstRes specification rules)
# INSTRAM_FILES   (opt) (RAM build specific resources - otherwise ${INSTRES_FILES})
# INSTROM_FILES   (opt) (ROM build specific resources - otherwise ${INSTRES_FILES})
# INSTR??_DEPENDS (opt) (any extra dependency to assert on INSTRES/INSTRAM/INSTROM_FILES)
# MERGEDMSGS      (r/o) (leafname of generated Messages file)
# RESFSDIR        (opt) (actual directory to export resources to - otherwise ${RESDIR}.${TARGET})
a72 1
# INSERTVERSION    (awk script to substitute from VersionNum)
d93 2
d96 1
d99 2
a100 8
INSTRAM_FILES   ?= ${INSTRES_FILES}
INSTRAM_DEPENDS ?= ${INSTRES_DEPENDS}
INSTROM_FILES   ?= ${INSTRES_FILES}
INSTROM_DEPENDS ?= ${INSTRES_DEPENDS}
MERGEDRDIR   ?= o._ResData_
MERGEDMSGS   ?= ${MERGEDRDIR}.${TARGET}.Messages
RESFSDIR   ?= ${RESDIR}.${TARGET}
RESAPPDIR  ?= ${RESDIR}.^.Apps.${APP}
a122 8
ifeq ($(filter rom%,${MAKECMDGOALS}),)
RES_FILES_    = ${INSTRAM_FILES}
RES_DEPENDS_  = ${INSTRAM_DEPENDS}
else
RES_FILES_    = ${INSTROM_FILES}
RES_DEPENDS_  = ${INSTROM_DEPENDS}
endif

d176 2
a177 3
ifeq ($(filter no custom,${CUSTOMRES}),)
${MERGEDMSGS}:
        ${MKDIR} ${MERGEDRDIR}.${TARGET}
a180 4
else
${MERGEDMSGS}::
        @@${NOP}
endif
d269 1
a269 1
resources${CUSTOMRES}:: resources-${CMDHELP}
d277 1
a277 12
resources_extra: ${RES_DEPENDS_}
ifneq (${RES_FILES_},)
        ${INSTRES} -I Resources.${USERIF}.${LOCALE},Resources.${USERIF}.UK,Resources.${LOCALE},Resources.UK,Resources ${RESFSDIR} ${RES_FILES_}
endif
ifneq (,$(filter Messages,${INSTRES_VERSION}))
        ${INSERTVERSION} ${RESFSDIR}.Messages > ${RESFSDIR}._Awk_
        ${CP} ${RESFSDIR}._Awk_ ${RESFSDIR}.Messages ${CPFLAGS}
        ${RM} ${RESFSDIR}._Awk_
endif
        @@${NOP}

resources_common:
d282 4
a285 1
resources_cmdhelp:
d287 7
a293 1
        IfThere LocalRes:CmdHelp Then ${FAPPEND} ${RESFSDIR}.Messages LocalRes:Messages LocalRes:CmdHelp
d295 2
a296 5
resources-None: resources_extra resources_common
        @@${NOP}

resources-: resources_extra resources_cmdhelp resources_common
        @@${NOP}
d304 1
a304 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.16 2016/05/29 13:34:41 rsprowson Exp $
@


1.6
log
@Add ability to override rom/standalone/install/export/debug/gpa rules in AasmModule
Mirrors variables used in CModule. Note ${EXPORT} has changed to $CUSTOMEXP}, but nothing seemed to be using the former anyway.
ThemeDefs added to module database.
Replace useof ResApp with ThemeDefs in the disc image.


Version 5.77. Tagged as 'BuildSys-5_77'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.5 2012/02/05 09:13:25 rsprowson Exp $
d122 1
d131 2
d137 1
a137 1
        ${AS} ${ASFLAGS} -o $@@ ${ROM_SOURCE}
d287 1
a287 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.5 2012/02/05 09:13:25 rsprowson Exp $
@


1.5
log
@Change back to overridable clean and dirs steps.
The CLEAN_DEPEND intermediate was added because GNU make didn't support '::' notation, but GNU nake 3.81 (possibly earlier) does as described at
  http://www.gnu.org/software/make/manual/make.html#Double_002dColon
verified with two test makefiles
# This is 'makefile'
include ./other.mk
clean::
	@@echo 1
	@@echo 2
# This is 'other.mk'
CLEANALIAS = clean
${CLEANALIAS}::
	@@echo 3
	@@echo 4
which did what was required.

Version 5.42. Tagged as 'BuildSys-5_42'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.4 2012/01/12 22:26:15 rsprowson Exp $
d117 1
a117 1
rom: ${ROM_MODULE}
d120 1
a120 1
install_rom: ${ROM_MODULE}
d139 1
a139 1
standalone: ${SA_MODULE}
d160 1
a160 1
install: ${SA_MODULE}
d166 1
a166 1
debug: ${DBG_MODULE}
d177 1
a177 1
gpa_debug: ${GPA_FILE}
d223 1
a223 1
export${EXPORT}: export_${PHASE}
d284 1
a284 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.4 2012/01/12 22:26:15 rsprowson Exp $
@


1.4
log
@Various changes
* Added components file to generate a !System
* Binaries/Browse/BuildEnv/Disc/IOMD32/OMAP4/Printers/Tungsten add heading blocks and line stuff up
* OMAP3 remove unused switch from FPEmulator
* SysMap add mapping from Sovereign to 'V'
* CTools extra qualifiers on some modules to get help right for modules in the 310 directory
* AAsmModule when CMDHELP=None is in force you can infer that no international help is desired, therefore pass this as a switch to the module to allow it to remove the tokens from its help table (based on how the 'standalone' switch is done)

Version 5.35. Tagged as 'BuildSys-5_35'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.3 2011/12/19 16:22:23 jlee Exp $
a42 1
# CLEAN_DEPEND (opt) (phony target for additional clean actions)
d192 1
a192 1
clean${CLEAN} :: ${CLEAN_DEPEND}
d284 1
a284 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.3 2011/12/19 16:22:23 jlee Exp $
@


1.3
log
@Add CLEAN_DEPEND support to AAsmModule makefile fragment. Disable VFP/NEON assembler for Tungsten ROM versions of BASIC.
Detail:
  Makefiles/AAsmModule - Added ${CLEAN_DEPEND} as a dependency to the 'clean' rule, to allow components to extend the default rule. This is the same functionality that the CApp fragment offers.
  Components/ROOL/Tungsten - Disable VFP/NEON support in the BASIC assembler, due to lack of ROM space.
Admin:
  Required changes for BASIC 1.49


Version 5.33. Tagged as 'BuildSys-5_33'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.2 2011/03/31 00:04:06 bavison Exp $
d82 3
d86 1
d285 1
a285 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.2 2011/03/31 00:04:06 bavison Exp $
@


1.2
log
@  Improvements to shared makefiles
Detail:
  * Some subtle bugs can be caused by including shared makefiles in the
    wrong order. To try to prevent further problems, and simplify main
    makefiles at the same time, CApp, CLibrary and CModule now include the
    makefiles they depend upon themselves, in the correct order: generally
    speaking, all macro (re)definitions should be before rule definitions.
  * Added sentry macro definitions to each makefile. These can be used to
    avoid repeated inclusion of makefiles - particularly important now that
    CApp, CLibrary and CModule do additional includes. This removes the
    majority of cases where amu produced warnings about multiple inclusion;
    a few components remain where this is still the case, but these
    warnings are harmless. If they bother you, simply remove the
    now-superfluous include statements from the relevant main makefile.
  * Created a CUtil shared makefile, for building transient utilities. The
    'C' in the name is more for consistency with CApp/CLibrary/CModule than
    anything to do with the 'C' language, since all of these makefiles work
    equally well for assembler and 'C' - the 'C' is for historic reasons.
  * Tweaked the debug rules in CApp to avoid harmless but annoying linker
    warnings about stubs being included twice.
  * Added several new default switches to ASFLAGS. These enable us to start
    making assembler source files work under a cross-assembler, because
    statements like
        GET  Hdr:Macros
        GET  Hdr:Machine.<Machine>
    are not portable, and tweaking the cross-assembler to understand these
    types of constructs would not be pretty. Instead, with the extra
    command line switches now introduced, you can use
        GET  Macros
        GET  Machine/$Machine
Admin:
  Tested in a ROM build

Version 5.12. Tagged as 'BuildSys-5_12'
@
text
@d21 1
a21 1
# $Id: AAsmModule,v 1.1 2008/10/14 21:29:37 bavison Exp $
d43 1
d189 1
a189 1
clean${CLEAN} ::
d281 1
a281 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.1 2008/10/14 21:29:37 bavison Exp $
@


1.1
log
@Clean reimport of the build environment directories.
This represents the version released in the Batch 4 "bbe" tarfiles.
Tagged as 'Batch4'
@
text
@d17 3
d21 1
a21 1
# $Id: AAsmModule,v 1.10 2002/12/13 18:15:15 bavison Exp $
d280 1
a280 1
EOFSTDMAKEFILE=$Id: AAsmModule,v 1.10 2002/12/13 18:15:15 bavison Exp $
@

