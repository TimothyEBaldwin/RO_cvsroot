head	1.17;
access;
symbols
	BuildSys-7_30:1.17
	BuildSys-7_29:1.17
	BuildSys-7_28:1.17
	BuildSys-7_27:1.17
	BuildSys-7_26:1.17
	BuildSys-7_25:1.17
	BuildSys-7_24:1.17
	BuildSys-7_23:1.16
	BuildSys-7_22:1.16
	BuildSys-7_21:1.16
	BuildSys-7_20:1.16
	BuildSys-7_19:1.16
	BuildSys-7_18:1.16
	BuildSys-7_17:1.16
	BuildSys-7_16:1.16
	BuildSys-7_15:1.16
	BuildSys-7_14:1.16
	BuildSys-7_13:1.16
	BuildSys-7_12:1.16
	BuildSys-7_11:1.16
	BuildSys-7_10:1.16
	BuildSys-7_09:1.16
	BuildSys-6_00-1_142_2_10:1.6.2.6
	BuildSys-7_08:1.16
	BuildSys-7_07:1.16
	BuildSys-7_06:1.16
	BuildSys-7_05:1.16
	BuildSys-6_00-1_142_2_9:1.6.2.6
	BuildSys-7_04:1.16
	BuildSys-7_03:1.16
	BuildSys-7_02:1.16
	BuildSys-7_01:1.16
	BuildSys-7_00:1.16
	BuildSys-6_99:1.16
	BuildSys-6_98:1.16
	BuildSys-6_97:1.16
	BuildSys-6_96:1.16
	BuildSys-6_95:1.16
	BuildSys-6_94:1.16
	BuildSys-6_93:1.16
	BuildSys-6_92:1.16
	BuildSys-6_91:1.16
	BuildSys-6_90:1.16
	BuildSys-6_89:1.16
	BuildSys-6_81-1:1.16
	BuildSys-6_88:1.16
	BuildSys-6_87:1.16
	BuildSys-6_86:1.16
	BuildSys-6_85:1.16
	BuildSys-6_84:1.16
	BuildSys-6_83:1.16
	BuildSys-6_82:1.16
	BuildSys-6_81:1.16
	BuildSys-6_80:1.16
	BuildSys-6_79:1.16
	BuildSys-6_78:1.16
	BuildSys-6_77:1.16
	BuildSys-6_76:1.16
	BuildSys-6_75:1.16
	BuildSys-6_74:1.16
	BuildSys-6_73:1.16
	BuildSys-6_72:1.16
	BuildSys-6_71:1.16
	BuildSys-6_70:1.16
	BuildSys-6_69:1.15
	BuildSys-6_68:1.15
	BuildSys-6_67:1.15
	BuildSys-6_66-1:1.15
	BuildSys-6_66:1.15
	BuildSys-6_65:1.15
	BuildSys-6_00-1_142_2_8:1.6.2.5
	BuildSys-6_00-1_142_2_7:1.6.2.5
	BuildSys-6_00-1_142_2_6:1.6.2.5
	BuildSys-6_64:1.15
	BuildSys-6_63:1.15
	BuildSys-6_62:1.15
	BuildSys-6_61:1.15
	BuildSys-6_60:1.15
	BuildSys-6_59:1.15
	BuildSys-6_58:1.15
	BuildSys-6_57:1.15
	BuildSys-6_56:1.15
	BuildSys-6_55:1.15
	BuildSys-6_54:1.15
	BuildSys-6_53:1.15
	BuildSys-6_00-1_142_2_5:1.6.2.4
	BuildSys-6_52:1.14
	BuildSys-6_51:1.14
	BuildSys-6_50:1.14
	BuildSys-6_49:1.13
	BuildSys-6_48:1.13
	BuildSys-6_47:1.13
	BuildSys-6_46:1.13
	BuildSys-6_45:1.12
	BuildSys-6_44:1.11
	BuildSys-6_43:1.11
	BuildSys-6_42:1.11
	BuildSys-6_41:1.11
	BuildSys-6_40:1.11
	BuildSys-6_39:1.11
	BuildSys-6_38:1.11
	BuildSys-6_00-1_142_2_4:1.6.2.3
	BuildSys-6_37:1.11
	BuildSys-6_36:1.11
	BuildSys-6_35:1.11
	BuildSys-6_34:1.11
	BuildSys-6_33:1.11
	BuildSys-6_32:1.11
	BuildSys-6_31:1.10
	BuildSys-6_30:1.10
	BuildSys-6_29:1.10
	BuildSys-6_28:1.10
	BuildSys-6_27:1.10
	BuildSys-6_26:1.10
	BuildSys-6_25:1.10
	BuildSys-6_24:1.10
	BuildSys-6_23:1.10
	BuildSys-6_22:1.10
	BuildSys-6_21:1.10
	BuildSys-6_20:1.10
	BuildSys-6_00-1_142_2_3:1.6.2.2
	BuildSys-6_19:1.9
	BuildSys-6_18:1.9
	BuildSys-6_17:1.8
	BuildSys-6_16:1.8
	BuildSys-6_15:1.8
	BuildSys-6_14:1.8
	BuildSys-6_13:1.8
	BuildSys-6_12:1.8
	BuildSys-6_00-1_142_2_2:1.6.2.1
	BuildSys-6_11:1.8
	BuildSys-6_10:1.8
	BuildSys-6_09:1.8
	BuildSys-6_08:1.8
	BuildSys-6_07:1.8
	BuildSys-6_06:1.8
	BuildSys-6_05:1.8
	BuildSys-6_04:1.7
	BuildSys-6_03:1.7
	BuildSys-6_02:1.6
	BuildSys-6_01:1.6
	BuildSys-6_00-1_142_2_1:1.6
	RPiFreeze:1.6.0.2
	BuildSys-6_00:1.6
	BuildSys-5_99:1.6
	BuildSys-5_98:1.6
	BuildSys-5_97:1.6
	BuildSys-5_96:1.6
	BuildSys-5_95:1.6
	BuildSys-5_94:1.6
	BuildSys-5_93:1.6
	BuildSys-5_92:1.6
	BuildSys-5_91:1.6
	BuildSys-5_90:1.6
	BuildSys-5_89:1.6
	BuildSys-5_88:1.6
	BuildSys-5_87:1.6
	BuildSys-5_86:1.6
	BuildSys-5_85:1.6
	BuildSys-5_84:1.6
	BuildSys-5_83:1.6
	BuildSys-5_82:1.6
	BuildSys-5_81:1.6
	BuildSys-5_80:1.6
	BuildSys-5_79:1.6
	BuildSys-5_78:1.6
	BuildSys-5_77:1.6
	BuildSys-5_76:1.6
	BuildSys-5_75:1.6
	BuildSys-5_74:1.6
	BuildSys-5_73:1.6
	BuildSys-5_72:1.6
	BuildSys-5_71:1.6
	BuildSys-5_70:1.6
	BuildSys-5_69:1.6
	BuildSys-5_68:1.6
	BuildSys-5_67:1.6
	BuildSys-5_66:1.6
	BuildSys-5_65:1.6
	BuildSys-5_64:1.6
	BuildSys-5_63:1.6
	BuildSys-5_62:1.6
	BuildSys-5_61:1.6
	BuildSys-5_60:1.6
	BuildSys-5_59:1.6
	BuildSys-5_58:1.6
	BuildSys-5_57:1.6
	BuildSys-5_56:1.6
	BuildSys-5_55:1.6
	BuildSys-5_54:1.6
	BuildSys-5_53:1.6
	BuildSys-5_52:1.6
	BuildSys-5_51:1.6
	BuildSys-5_50:1.6
	BuildSys-5_49:1.6
	BuildSys-5_48:1.6
	BuildSys-5_47:1.6
	BuildSys-5_46:1.6
	BuildSys-5_45:1.6
	BuildSys-5_44:1.6
	BuildSys-5_43:1.6
	BuildSys-5_42:1.6
	BuildSys-5_41:1.6
	BuildSys-5_40:1.6
	BuildSys-5_39:1.6
	BuildSys-5_38:1.6
	BuildSys-5_37:1.6
	BuildSys-5_36:1.6
	BuildSys-5_35:1.5
	BuildSys-5_34:1.5
	BuildSys-5_33:1.5
	BuildSys-5_32:1.5
	BuildSys-5_31:1.5
	BuildSys-5_30:1.5
	BuildSys-5_29:1.5
	BuildSys-5_28:1.5
	BuildSys-5_27:1.5
	BuildSys-5_26:1.5
	BuildSys-5_25:1.5
	BuildSys-5_24:1.5
	BuildSys-5_23:1.5
	BuildSys-5_22:1.5
	BuildSys-5_21:1.5
	BuildSys-5_20:1.5
	BuildSys-5_19:1.5
	BuildSys-5_18:1.5
	BuildSys-5_17:1.5
	BuildSys-5_16:1.5
	BuildSys-5_15:1.5
	BuildSys-5_14:1.5
	BuildSys-5_13:1.5
	BuildSys-5_12:1.5
	BuildSys-5_11:1.4
	BuildSys-5_10:1.4
	BuildSys-5_09:1.4
	BuildSys-5_08:1.4
	BuildSys-5_07:1.4
	BuildSys-5_06:1.4
	BuildSys-5_05:1.4
	BuildSys-5_04:1.4
	BuildSys-5_03:1.4
	BuildSys-5_02:1.4
	BuildSys-5_01:1.4
	BuildSys-5_00:1.3
	BuildSys-4_99:1.3
	BuildSys-4_98:1.3
	BuildSys-4_97:1.3
	BuildSys-4_96:1.3
	BuildSys-4_95:1.3
	BuildSys-4_94:1.3
	BuildSys-4_93:1.3
	BuildSys-4_92:1.3
	BuildSys-4_91:1.3
	BuildSys-4_90:1.3
	BuildSys-4_89:1.3
	BuildSys-4_88:1.3
	BuildSys-4_87:1.3
	BuildSys-4_86:1.3
	BuildSys-4_85:1.3
	BuildSys-4_84:1.3
	BuildSys-4_83:1.3
	BuildSys-4_82:1.3
	BuildSys-4_81:1.3
	BuildSys-4_80:1.2
	BuildSys-4_79:1.2
	BuildSys-4_78:1.2
	BuildSys-4_77:1.2
	BuildSys-4_76:1.2
	BuildSys-4_75:1.2
	BuildSys-4_74:1.2
	BuildSys-4_73:1.2
	BuildSys-4_72:1.1
	BuildSys-4_71:1.1
	BuildSys-4_70:1.1
	BuildSys-4_69:1.1
	BuildSys-4_68:1.1
	BuildSys-4_67:1.1
	BuildSys-4_66:1.1
	BuildSys-4_65:1.1
	BuildSys-4_64:1.1
	BuildSys-4_63:1.1
	BuildSys-4_62:1.1
	Batch4:1.1;
locks; strict;
comment	@# @;


1.17
date	2018.04.11.23.21.12;	author bavison;	state Exp;
branches;
next	1.16;
commitid	IH1EokSuAjoQZ4yA;

1.16
date	2015.08.02.08.29.13;	author rsprowson;	state Exp;
branches;
next	1.15;
commitid	prvQ7foCHkhNEFvy;

1.15
date	2014.10.12.13.46.47;	author srevill;	state Exp;
branches;
next	1.14;
commitid	2xVUVkYMczzJRUTx;

1.14
date	2014.09.24.20.24.13;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	DA9s1M3numtWDDRx;

1.13
date	2014.07.19.16.07.30;	author rsprowson;	state Exp;
branches;
next	1.12;
commitid	nA0HBUmfswSon0Jx;

1.12
date	2014.06.29.06.55.48;	author rsprowson;	state Exp;
branches;
next	1.11;
commitid	AK1iU4b1KkFXXnGx;

1.11
date	2013.11.11.00.50.38;	author bavison;	state Exp;
branches;
next	1.10;
commitid	Tr3fHk0Gie15lNcx;

1.10
date	2013.07.15.19.29.13;	author rsprowson;	state Exp;
branches;
next	1.9;
commitid	GNr5gJlFE3iZlBXw;

1.9
date	2013.05.27.09.10.49;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	xoePF7C9F0VovfRw;

1.8
date	2012.11.27.15.44.43;	author srevill;	state Exp;
branches;
next	1.7;
commitid	VABfCuXSohhlv1uw;

1.7
date	2012.10.26.21.43.45;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	MKEPbij6czWhwWpw;

1.6
date	2012.01.16.00.19.36;	author srevill;	state Exp;
branches
	1.6.2.1;
next	1.5;
commitid	JypabUYzIuCJxkPv;

1.5
date	2011.03.31.00.04.06;	author bavison;	state Exp;
branches;
next	1.4;
commitid	BfewXnm4kl3lOVdv;

1.4
date	2010.05.19.14.47.58;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2009.07.19.16.40.06;	author rool;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.07.17.03.15;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.14.21.29.37;	author bavison;	state Exp;
branches;
next	;

1.6.2.1
date	2013.03.07.08.54.45;	author rsprowson;	state Exp;
branches;
next	1.6.2.2;
commitid	KOrNts4OY6bm1QGw;

1.6.2.2
date	2013.07.08.14.20.42;	author rsprowson;	state Exp;
branches;
next	1.6.2.3;
commitid	SgreJIaxMRe5SFWw;

1.6.2.3
date	2014.02.20.21.02.50;	author rsprowson;	state Exp;
branches;
next	1.6.2.4;
commitid	HvOFwLQ3c6PzNSpx;

1.6.2.4
date	2014.10.12.10.36.31;	author rsprowson;	state Exp;
branches;
next	1.6.2.5;
commitid	tHT6hsrmkNpoOTTx;

1.6.2.5
date	2015.02.12.20.30.56;	author rsprowson;	state Exp;
branches;
next	1.6.2.6;
commitid	joerV7rvwrTd9L9y;

1.6.2.6
date	2017.02.21.08.37.00;	author rsprowson;	state Exp;
branches;
next	;
commitid	yeUPZ9XHdm2zpNGz;


desc
@@


1.17
log
@  Incremental step in cross-compilation support
Detail:
  ModuleDB:
  * Correct capitalisation of resgen's TARGET to match its main source file
  GNUmakefiles/AAsmModule:
  * Targets now given ,ffa filetype suffix
  * Support source directory layouts s/<subdir>/<leaf> as used by the
    kernel and printer drivers - define SYMLINK_EXT_FIRST to enable
  * Prevent relinking when running make on an up-to-date component due to
    a difference between amu and GNU make's handling of double-colon rules
  * Support linking with GNU toolchain
  * Fix installation rule (mixup between MERGEDMDIR and MERGEDRDIR)
  * Support up to 16 assembler and 8 C-from-assembler headers, up from 3
    of each (here's looking at you, kernel) - long-term, it might be worth
    changing this to a scheme like that used by CModule to remove any
    limits
  * Fix C-from-assembler exports to have .h suffix
  GNUmakefiles/AppLibs:
  * Define INCLUDE_OSLIB to permit OSLib header search paths to be
    specified in an OS-agnostic way
  GNUmakefiles/CApp:
  * Prevent relinking when running make on an up-to-date component due to
    a difference between amu and GNU make's handling of double-colon rules
  GNUmakefiles/CLibrary:
  * Prevent rearchiving when running make on an up-to-date component due
    to a difference between amu and GNU make's handling of double-colon
    rules
  * Don't use .hdr suffix on exported assembler header files
  * Correct order of dependencies for export_libs phony target
  GNUmakefiles/StdTools:
  * Definition for the module filetype suffix
  * Add LDBIN tool for GNU/Norcroft-agnostic binary link, useful for
    linking position-independent binary code, such as relocatable modules
    (i.e. ones that don't require the linker to create a __RelocCode
    function)
  * FAPPEND function now works if the same file is used for the
    destination as for one of the sources (this is used by CModule)
  GNUmakefiles/CModule, ModStdRule, ModuleLibs:
  * Finally created cross-compilation versions of the last major shared
    makefiles! Warning: these have received limited testing to date.
  Makefiles/AAsmModule:
  * Support up to 16 assembler and 8 C-from-assembler headers
  Makefiles/AppLibs, ModuleLibs:
  * Define INCLUDE_OSLIB
  Makefiles/StdTools:
  * Add LDBIN tool


Version 7.24. Tagged as 'BuildSys-7_24'
@
text
@# Copyright 2008 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile fragment for defining the various tools and their options

INCLUDED_STDTOOLS = YES

#
# $Id: StdTools,v 1.16 2015/08/02 08:29:13 rsprowson Exp $
#
#
# These are the tool definitions for RISC OS hosted builds.
#
#
STDMAKEKFILE=$Id: StdTools,v 1.16 2015/08/02 08:29:13 rsprowson Exp $

#
# Core toolset.
#
AOFASM          = objasm
AR              = libfile
AS              = objasm
BINAOF          = binaof
CAT             = print
CC              = cc
C++             = c++
CMHG            = cmhg
CPREPRO         = cc -C++ -E
DATA2AOF        = datatoaof
DEFMOD          = defmod
DO              = do
ECHO            = echo
ERASECVS        = EraseCVS
FAPPEND         = FAppend
FILTERCOMP      = ${PERL} Build:FilterComp
FILTERCOMP2     = ${PERL} Build:FilterComp2
GETVERSION      = ${PERL} Build:GetVersion
HDR2H           = ${PERL} Build:Hdr2H
INSTRES         = <Perl$Dir>.perl Build:InstRes
INSTVIARG       = <Perl$Dir>.perl Build:InstViaRG
INSERTVERSION   = ${AWK} -f Build:AwkVers
ifeq (C++,${LINK_TYPE})
LD              = link -c++
else
LD              = link
endif
LDBIN           = link -bin -o
MAKE            = amu
MODGEN          = modgen
MODSQZ          = modsqz
NOP             = |
NUMBER          = ${DO} RUN Build:Number
PERL            = ${DO} <Perl$Dir>.perl
RESGEN          = resgen
RM              = remove
SETTYPE         = settype
SQUASH          = squash
SQUISH          = squish
SQZ             = squeeze
STRIPDEPEND     = stripdepnd
TOGPA           = ToGPA
TOKENCHECK      = tokencheck
TOKENISE        = tokenise
TOUCH           = create
TRANSLATE       = translate
UNMODSQZ        = unmodsqz

#
#  UNIX "ports"
#
AWK             = GNU.gawk
CD              = dir
CHMOD           = Unix.chmod
DF              = Unix.df
DIFF            = GNU.diff
EGREP           = Unix.egrep
FIND            = GNU.find
GAWK            = GNU.gawk
IDENT           = GNU.ident
LEX             = GNU.flex
LS              = Unix.ls
MKDIR           = ${DO} mkdir -p
PWD             = Unix.pwd
RPCGEN          = rpcgen
SED             = sed
WC              = Unix.wc
YACC            = GNU.bison
ZIP             = ${DO} zip -9qr
UNZIP           = unzip

#
# Standard options.  These can be added to or overridden in the
# including makefile.
#
STDTOOLOPTIONS = -depend !Depend ${THROWBACK}

ARFLAGS += -c -o
ASFLAGS += ${STDTOOLOPTIONS} ${ASMDEFINES} ${ASMINCLUDES}
ASFLAGS += -ihdr -i<Hdr$Dir>.Global -i<Hdr$Dir>.Interface -i<Hdr$Dir>.Interface2
ASFLAGS += -pd "APCS SETS \"${APCS}\"" -pd "Machine SETS \"${MACHINE}\"" -pd "UserIF SETS \"${USERIF}\""
CFLAGS  += -c ${STDTOOLOPTIONS} ${CDEFINES} ${CINCLUDES} ${C_NO_FNAMES} ${C_WARNINGS}
C++INCLUDES += -ICPP:
C++FLAGS += -c ${STDTOOLOPTIONS} ${C++DEFINES} ${C++INCLUDES}
CMHGFLAGS +=  -p ${STDTOOLOPTIONS} ${CMHGDEFINES} ${CMHGINCLUDES}
SQUISHFLAGS += -nolist

C_WARNINGS  := -fah
C_OPTSIZE   := -Ospace
C_OPTSPEED  := -Otime
C_NO_ZI     := -zz100000
C_NO_STKCHK := -zps1
C_STKCHK    := -zps0
C_NO_FNAMES := -ff
C_MODULE    := -zM

#
# Recursive forced copying options.
#
#  CPFLAGS go after the arguments
#  CPPREFLAGS go before the arguments
#
CPFLAGS    = FR~C~V~N
CPVFLAGS   = FR~CV~N
CPPREFLAGS =

CP         = copy ${CPPREFLAGS}

#
# Recursive forced deletion with no errors (except file not found!).
#
#  WFLAGS go after the arguments
#  WPREFLAGS go before the arguments
#
WFLAGS    = FR~C~V
WPREFLAGS =

# A version of wipe that suppresses all errors
XWIPE     = x wipe ${WPREFLAGS}

# Required for legacy components
WIPE      = ${XWIPE}

# Directory separator character
SEP       = .


# EOF
@


1.16
log
@Update known tools
Tagged as BuildSys-6_70.
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.15 2014/10/12 13:46:47 srevill Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.15 2014/10/12 13:46:47 srevill Exp $
d58 1
@


1.15
log
@Various updates generally associated with CTools builds.

Components (ROOL CTools):
  * Added new components (ITable, BlendTable, RTC) for exports
  * Switch to using Install: rather than <Install$Dir> to help CLX
  * Replace CToolsCD component with DDE component
ModuleDB tweaks:
  * Added the (closed source) DDE resources component
  * Added a component for BuildSys itself (so DDE can get the Makefiles)
Shared makefile tweadded ERASECVS to the standard tools
  * Added a verbose copy flags CPVFLAGS for big copy operations
  * Added "install" rule for debug app builds (amu install INSTTYPE=debug)

Version 6.53. Tagged as 'BuildSys-6_53'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.14 2014/09/24 20:24:13 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.14 2014/09/24 20:24:13 rsprowson Exp $
d51 1
@


1.14
log
@Make debug builds a bit simpler
AAsmModule:
 Remove SA_DEBUG override, instead use ASDFLAGS like CModule does.
CModule:
 If the target is 'debug' allow CMHGDFLAGS to pass extra defines into CMHG, this avoids the common problem of having to have 2 CMHG files and select between them.

Other - sync the messages token check/copying, use ${NOP} and ${FAPPEND} and ${DO}, and od.${RES_OBJ} isn't dependent on ${DIRS} since it already has that when creating o.${RES_OBJ}.

Version 6.50. Tagged as 'BuildSys-6_50'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.13 2014/07/19 16:07:30 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.13 2014/07/19 16:07:30 rsprowson Exp $
d44 1
d132 1
@


1.13
log
@Drop 2 tools
tlink - a long since abandoned special tool used to link the toolbox modules against TinyStubs around RISC OS 3.50 era, no 32 bit version has ever been made, so by implication it's not being used
aasm - the sources were lost some time in the 1990's, and hasn't been supplied as part of the DDE for over a decade
Documentation updated to reflect current tools.

Version 6.46. Tagged as 'BuildSys-6_46'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.12 2014/06/29 06:55:48 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.12 2014/06/29 06:55:48 rsprowson Exp $
d59 1
a59 1
NOP             = @@|
d106 1
a106 1
ASFLAGS +=  -Stamp -quit ${STDTOOLOPTIONS} ${ASMDEFINES} ${ASMINCLUDES}
d109 1
a109 1
CFLAGS +=  -c ${STDTOOLOPTIONS} ${CDEFINES} ${CINCLUDES} ${C_NO_FNAMES} ${C_WARNINGS}
@


1.12
log
@Add FAppend as a standard tool
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.11 2013/11/11 00:50:38 bavison Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.11 2013/11/11 00:50:38 bavison Exp $
a30 1
AASM            = aasm
a68 1
TLINK           = tlink
a104 1
AASMFLAGS += -Stamp -quit ${STDTOOLOPTIONS} ${AASMDEFINES} ${AASMINCLUDES}
@


1.11
log
@  Changes to keep GNUmakefiles and Makefiles compatible
Detail:
  Makefiles/CApp:
  * Naming of object file variables rationalised in line with CModule
  * Noted that INSTAPP_VERSION files must also be present in INSTAPP_FILES for
    compatibility with GNUmakefiles - requires changes to individual top-level
    makefiles, but not BuildSys
  Makefiles/CLibrary:
  * Naming of object file variables rationalised in line with CModule
  Makefiles/CModule:
  * Removed unused variable OBJS_
  Makefiles/StdTools:
  * Retired TIDYDESC
  GNUmakefiles/AppLibs:
  * Add CONLIB, RMVSN, SYNCLIB
  GNUmakefiles/CApp:
  * Default definition of INSTAPP
  * Naming of object file variables rationalised in line with CModule
  * CLEAN_DEPEND removed, clean made a double-colon rule (it's worth noting
    that such additional clean rules are now only executed from the component's
    top-level directory: this was not true for the old extra_clean rules that
    this replaces, in the GNUmakefiles case)
  * Rename of INSTALLAPPFILES to INSTAPP_FILES
  * Rename of INSTALLAPP_DEPEND to INSTAPP_DEPENDS
  * Insertion of component version into Desc files now done using AwkVers
    script rather than the C preprocessor (note, will require editing of Desc
    files to comply). Also supports versions in Messages and !Run files,
    controlled by new variable INSTAPP_VERSION
  GNUmakefiles/CLibrary:
  * Naming of object file variables rationalised in line with CModule
  * clean rules now only executed from the component's top-level directory, as
    with CApp
  GNUmakefiles/StdTools:
  * Added INSERTVERSION (AwkVers), retired TIDYDESC
  * Perl scripts now explicitly passed to perl - no need to chmod +x the
    scripts in RiscOS/Library
  * asasm/objasm include paths and APCS/Machine/UserIF predefines set to match
    Makefiles
Admin:
  Tested in a CTools build

Version 6.32. Tagged as 'BuildSys-6_32'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.10 2013/07/15 19:29:13 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.10 2013/07/15 19:29:13 rsprowson Exp $
d45 1
@


1.10
log
@Shared makefile enhancements
AAsmModule:
 Comments sync'd with implementation
ModuleLibs/AppLibs:
 Add the RMVersion library
CApp:
 Now APP_OBJS and APP_DBG_OBJS don't need the '.o' suffix in common with OBJS and DBG_OBJS
 Changed insertion of version numbers to be common for Messages/Obey/Desc files through new 'INSTAPP_VERSION' dummy rule
 INSTALLAPP_DEPEND renamed to INSTAPP_DEPENDS to match other INSTAPP_stuff
CUtil:
 Use addprefix'd APP_OBJS
StdTools:
 Default SQUISHFLAGS now set
 Added INSERTVERSION


Version 6.20. Tagged as 'BuildSys-6_20'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.9 2013/05/27 09:10:49 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.9 2013/05/27 09:10:49 rsprowson Exp $
a68 1
TIDYDESC        = ${PERL} Build:TidyDesc
@


1.9
log
@Turn off verbose mode for INSTRES
Not tagged.
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.8 2012/11/27 15:44:43 srevill Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.8 2012/11/27 15:44:43 srevill Exp $
d50 1
d108 1
d116 1
a116 1
ARFLAGS += -c -o
@


1.8
log
@Temporary change to make InstRes run in very verbose mode.

I'm hoping to get to the bottom of the (very tricky to reproduce in a
sensible amount of time) crashes during Disc and DiscDev builds.

Version 6.04. Not tagged
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.7 2012/10/26 21:43:45 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.7 2012/10/26 21:43:45 rsprowson Exp $
d49 1
a49 1
INSTRES         = <Perl$Dir>.perl Build:InstRes -v -v
@


1.7
log
@Add ${SQUISH} and ${NUMBER} to known tool aliases

Version 6.03. Tagged as 'BuildSys-6_03'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.6 2012/01/16 00:19:36 srevill Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.6 2012/01/16 00:19:36 srevill Exp $
d49 1
a49 1
INSTRES         = <Perl$Dir>.perl Build:InstRes
@


1.6
log
@Changed definition of WIPE macro in shared makefiles.

WIPE is now the same as XWIPE, rather than the annoying "-wipe".

Version 5.36. Tagged as 'BuildSys-5_36'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.5 2011/03/31 00:04:06 bavison Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.5 2011/03/31 00:04:06 bavison Exp $
d59 1
d65 1
@


1.6.2.1
log
@Branch RPiFreeze sync'd from BuildSys-6_11

Version 6.00, 1.142.2.2. Tagged as 'BuildSys-6_00-1_142_2_2'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.8 2012/11/27 15:44:43 srevill Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.8 2012/11/27 15:44:43 srevill Exp $
d49 1
a49 1
INSTRES         = <Perl$Dir>.perl Build:InstRes -v -v
a58 1
NUMBER          = ${DO} RUN Build:Number
a63 1
SQUISH          = squish
@


1.6.2.2
log
@Merge of trunch BuildSys-6_19 to branch RPiFreeze

Version 6.00, 1.142.2.3. Tagged as 'BuildSys-6_00-1_142_2_3'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.9 2013/05/27 09:10:49 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.9 2013/05/27 09:10:49 rsprowson Exp $
d49 1
a49 1
INSTRES         = <Perl$Dir>.perl Build:InstRes
@


1.6.2.3
log
@Merge of trunk BuildSys-6_34 to branch RPiFreeze

Version 6.00, 1.142.2.4. Tagged as 'BuildSys-6_00-1_142_2_4'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.11 2013/11/11 00:50:38 bavison Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.11 2013/11/11 00:50:38 bavison Exp $
a49 1
INSERTVERSION   = ${AWK} -f Build:AwkVers
d68 1
a106 1
ARFLAGS += -c -o
d114 1
a114 1
SQUISHFLAGS += -nolist
@


1.6.2.4
log
@Merge of BuildSys-6_52 to branch

Version 6.00, 1.142.2.5. Tagged as 'BuildSys-6_00-1_142_2_5'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.14 2014/09/24 20:24:13 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.14 2014/09/24 20:24:13 rsprowson Exp $
d31 1
a44 1
FAPPEND         = FAppend
d59 1
a59 1
NOP             = |
d69 1
d106 1
d108 1
a108 1
ASFLAGS += ${STDTOOLOPTIONS} ${ASMDEFINES} ${ASMINCLUDES}
d111 1
a111 1
CFLAGS  += -c ${STDTOOLOPTIONS} ${CDEFINES} ${CINCLUDES} ${C_NO_FNAMES} ${C_WARNINGS}
@


1.6.2.5
log
@Merge of BuildSys-6_64 to branch

Version 6.00, 1.142.2.6. Tagged as 'BuildSys-6_00-1_142_2_6'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.15 2014/10/12 13:46:47 srevill Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.15 2014/10/12 13:46:47 srevill Exp $
a43 1
ERASECVS        = EraseCVS
a130 1
CPVFLAGS   = FR~CV~N
@


1.6.2.6
log
@Merge of BuildSys-7_04 to branch

Version 6.00, 1.142.2.9. Tagged as 'BuildSys-6_00-1_142_2_9'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.16 2015/08/02 08:29:13 rsprowson Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.16 2015/08/02 08:29:13 rsprowson Exp $
a50 1
INSTVIARG       = <Perl$Dir>.perl Build:InstViaRG
@


1.5
log
@  Improvements to shared makefiles
Detail:
  * Some subtle bugs can be caused by including shared makefiles in the
    wrong order. To try to prevent further problems, and simplify main
    makefiles at the same time, CApp, CLibrary and CModule now include the
    makefiles they depend upon themselves, in the correct order: generally
    speaking, all macro (re)definitions should be before rule definitions.
  * Added sentry macro definitions to each makefile. These can be used to
    avoid repeated inclusion of makefiles - particularly important now that
    CApp, CLibrary and CModule do additional includes. This removes the
    majority of cases where amu produced warnings about multiple inclusion;
    a few components remain where this is still the case, but these
    warnings are harmless. If they bother you, simply remove the
    now-superfluous include statements from the relevant main makefile.
  * Created a CUtil shared makefile, for building transient utilities. The
    'C' in the name is more for consistency with CApp/CLibrary/CModule than
    anything to do with the 'C' language, since all of these makefiles work
    equally well for assembler and 'C' - the 'C' is for historic reasons.
  * Tweaked the debug rules in CApp to avoid harmless but annoying linker
    warnings about stubs being included twice.
  * Added several new default switches to ASFLAGS. These enable us to start
    making assembler source files work under a cross-assembler, because
    statements like
        GET  Hdr:Macros
        GET  Hdr:Machine.<Machine>
    are not portable, and tweaking the cross-assembler to understand these
    types of constructs would not be pretty. Instead, with the extra
    command line switches now introduced, you can use
        GET  Macros
        GET  Machine/$Machine
Admin:
  Tested in a ROM build

Version 5.12. Tagged as 'BuildSys-5_12'
@
text
@d20 1
a20 1
# $Id: StdTools,v 1.4 2010/05/19 14:47:58 bavison Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.4 2010/05/19 14:47:58 bavison Exp $
a142 2
WIPE      = -wipe ${WPREFLAGS}

d146 2
@


1.4
log
@  Changes to facilitate platform independence.

Detail:
 CApp:
  * New variable CLEAN_DEPEND is now the preferred way to specify additional
    clean actions because GNU make doesn't have an equivalent to amu's :: rules
  * Can now indicate preference to use C++ linker options using LINK_TYPE
  * Gains install phase support:
    + INSTALLAPPFILES lists the files to be copied, effectively specified
      relative to LocalRes$Path
    + Adopted INSTTYPE concept from DDE makefiles for cases where executable
      and support files need to be installed to different locations
    + Unusual cases can override this implementation using CUSTOMINSTALLAPP
      and/or CUSTOMINSTALLTOOL

  CLibrary:
  * New variable CLEAN_DEPEND is now the preferred way to specify additional
    clean actions because GNU make doesn't have an equivalent to amu's :: rules
  * -o is no longer a mandatory argument to libfile - now in ARFLAGS rather
    than used explicitly

  DbgRules / StdRules:
  * Macroised some Norcroft-specific features

  HostTools:
  * Clean phase support was incomplete

  StdTools:
  * A few additional tool definitions
  * Added macro definitions for common C options
  * C's enable-warnings and suppress-function-name-embedding options now on by
    default because they're usually (maybe even universally?) used - it won't
    hurt if they're specified again by existing makefiles
  * C++ now has equivalent INCLUDES and DEFINES variables, and the standard C++
    headers are on the default include path
  * SEP is defined as the directory separator character and can be used from
    top-level makefiles in a platform-independent way

  Functionally equivalent versions of the following makefile fragments
  have been developed so far for executing on a Posix build host:
    AppLibs, CApp, CLibrary, DbgRules, HostTools, StdRules, StdTools
  These suport native compilers (when APCS=Host) and cross-compilers,
  and GCC (when TOOLCHAIN=GNU) and Norcroft toolchains - typically these
  environment variables would be selected by running an Env file.

Admin:
  Tested by building as many as possible of the DDE components on RISC OS
  and on Linux, using native and cross compilers, and using Norcroft and
  GNU toolchains.

Version 5.01. Tagged as 'BuildSys-5_01'
@
text
@d16 3
d20 1
a20 1
# $Id: StdTools,v 1.3 2009/07/19 16:40:06 rool Exp $
d26 1
a26 1
STDMAKEKFILE=$Id: StdTools,v 1.3 2009/07/19 16:40:06 rool Exp $
d106 2
@


1.3
log
@Spotted ZIP is already in the shared makefiles.

Fixed to point at the (new) location of the zip tool and added some useful
parameters - this is safe because nothing in the build tree was using
this definition of ZIP anyway.

Version 4.81. Tagged as 'BuildSys-4_81'
@
text
@d17 1
a17 1
# $Id: StdTools,v 1.2 2009-06-07 17:03:15 bavison Exp $
d23 1
a23 1
STDMAKEKFILE=$Id: StdTools,v 1.2 2009-06-07 17:03:15 bavison Exp $
d29 1
d37 1
a38 1
DECAOF          = decaof
d46 4
d51 1
d103 3
a105 1
CFLAGS +=  -c ${STDTOOLOPTIONS} ${CDEFINES} ${CINCLUDES}
d107 1
d109 8
a116 1
ARFLAGS += -c
d144 4
@


1.2
log
@  Build fix
Detail:
  Some users reported problems building the sources if they had other
  installations of perl on their build machine. The build system was using a
  mixture of "perl" and "<Perl$Dir>.perl" to invoke the interpreter, and
  sometimes but not always using "do" to expand system variables on the
  command line. This has now been standardised to use "do <Perl$Dir>.perl in
  all cases, and where possible, to use the makefile macro ${PERL}.
Admin:
  Checked that a Tungsten build still works on a build machine with no other
  perl installation. "perl" was aliased to an error to ensure it wasn't used.

Version 4.73. Tagged as 'BuildSys-4_73'
@
text
@d17 1
a17 1
# $Id: StdTools,v 1.1 2008/10/14 21:29:37 bavison Exp $
d23 1
a23 1
STDMAKEKFILE=$Id: StdTools,v 1.1 2008/10/14 21:29:37 bavison Exp $
d86 2
a87 2
ZIP             = Unix.zip
UNZIP           = Unix.unzip
@


1.1
log
@Clean reimport of the build environment directories.
This represents the version released in the Batch 4 "bbe" tarfiles.
Tagged as 'Batch4'
@
text
@d17 1
a17 1
# $Id: StdTools,v 1.17 2004/11/15 20:17:45 bavison Exp $
d23 1
a23 1
STDMAKEKFILE=$Id: StdTools,v 1.17 2004/11/15 20:17:45 bavison Exp $
d44 1
a44 1
HDR2H           = perl Build:Hdr2H
d50 1
a50 1
PERL            = ${DO} perl
@

