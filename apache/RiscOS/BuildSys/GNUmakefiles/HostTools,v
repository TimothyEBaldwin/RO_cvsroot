head	1.2;
access;
symbols
	BuildSys-7_30:1.2
	BuildSys-7_29:1.2
	BuildSys-7_28:1.2
	BuildSys-7_27:1.2
	BuildSys-7_26:1.2
	BuildSys-7_25:1.2
	BuildSys-7_24:1.2
	BuildSys-7_23:1.2
	BuildSys-7_22:1.2
	BuildSys-7_21:1.2
	BuildSys-7_20:1.2
	BuildSys-7_19:1.2
	BuildSys-7_18:1.2
	BuildSys-7_17:1.2
	BuildSys-7_16:1.2
	BuildSys-7_15:1.2
	BuildSys-7_14:1.2
	BuildSys-7_13:1.2
	BuildSys-7_12:1.2
	BuildSys-7_11:1.2
	BuildSys-7_10:1.2
	BuildSys-7_09:1.2
	BuildSys-6_00-1_142_2_10:1.2
	BuildSys-7_08:1.2
	BuildSys-7_07:1.2
	BuildSys-7_06:1.2
	BuildSys-7_05:1.2
	BuildSys-6_00-1_142_2_9:1.2
	BuildSys-7_04:1.2
	BuildSys-7_03:1.2
	BuildSys-7_02:1.2
	BuildSys-7_01:1.2
	BuildSys-7_00:1.2
	BuildSys-6_99:1.2
	BuildSys-6_98:1.2
	BuildSys-6_97:1.2
	BuildSys-6_96:1.2
	BuildSys-6_95:1.2
	BuildSys-6_94:1.2
	BuildSys-6_93:1.2
	BuildSys-6_92:1.2
	BuildSys-6_91:1.2
	BuildSys-6_90:1.2
	BuildSys-6_89:1.2
	BuildSys-6_81-1:1.2
	BuildSys-6_88:1.2
	BuildSys-6_87:1.2
	BuildSys-6_86:1.2
	BuildSys-6_85:1.2
	BuildSys-6_84:1.2
	BuildSys-6_83:1.2
	BuildSys-6_82:1.2
	BuildSys-6_81:1.2
	BuildSys-6_80:1.2
	BuildSys-6_79:1.2
	BuildSys-6_78:1.2
	BuildSys-6_77:1.2
	BuildSys-6_76:1.2
	BuildSys-6_75:1.2
	BuildSys-6_74:1.2
	BuildSys-6_73:1.2
	BuildSys-6_72:1.2
	BuildSys-6_71:1.2
	BuildSys-6_70:1.2
	BuildSys-6_69:1.2
	BuildSys-6_68:1.2
	BuildSys-6_67:1.2
	BuildSys-6_66-1:1.2
	BuildSys-6_66:1.2
	BuildSys-6_65:1.2
	BuildSys-6_00-1_142_2_8:1.2
	BuildSys-6_00-1_142_2_7:1.2
	BuildSys-6_00-1_142_2_6:1.2
	BuildSys-6_64:1.2
	BuildSys-6_63:1.2
	BuildSys-6_62:1.2
	BuildSys-6_61:1.2
	BuildSys-6_60:1.2
	BuildSys-6_59:1.2
	BuildSys-6_58:1.2
	BuildSys-6_57:1.2
	BuildSys-6_56:1.2
	BuildSys-6_55:1.2
	BuildSys-6_54:1.2
	BuildSys-6_53:1.2
	BuildSys-6_00-1_142_2_5:1.2
	BuildSys-6_52:1.2
	BuildSys-6_51:1.2
	BuildSys-6_50:1.2
	BuildSys-6_49:1.2
	BuildSys-6_48:1.2
	BuildSys-6_47:1.2
	BuildSys-6_46:1.2
	BuildSys-6_45:1.2
	BuildSys-6_44:1.2
	BuildSys-6_43:1.2
	BuildSys-6_42:1.2
	BuildSys-6_41:1.2
	BuildSys-6_40:1.2
	BuildSys-6_39:1.2
	BuildSys-6_38:1.2
	BuildSys-6_00-1_142_2_4:1.2
	BuildSys-6_37:1.2
	BuildSys-6_36:1.2
	BuildSys-6_35:1.2
	BuildSys-6_34:1.2
	BuildSys-6_33:1.2
	BuildSys-6_32:1.2
	BuildSys-6_31:1.2
	BuildSys-6_30:1.2
	BuildSys-6_29:1.2
	BuildSys-6_28:1.2
	BuildSys-6_27:1.2
	BuildSys-6_26:1.2
	BuildSys-6_25:1.2
	BuildSys-6_24:1.2
	BuildSys-6_23:1.2
	BuildSys-6_22:1.2
	BuildSys-6_21:1.2
	BuildSys-6_20:1.2
	BuildSys-6_00-1_142_2_3:1.2
	BuildSys-6_19:1.2
	BuildSys-6_18:1.2
	BuildSys-6_17:1.2
	BuildSys-6_16:1.2
	BuildSys-6_15:1.2
	BuildSys-6_14:1.2
	BuildSys-6_13:1.2
	BuildSys-6_12:1.2
	BuildSys-6_00-1_142_2_2:1.2
	BuildSys-6_11:1.2
	BuildSys-6_10:1.2
	BuildSys-6_09:1.2
	BuildSys-6_08:1.2
	BuildSys-6_07:1.2
	BuildSys-6_06:1.2
	BuildSys-6_05:1.2
	BuildSys-6_04:1.2
	BuildSys-6_03:1.2
	BuildSys-6_02:1.2
	BuildSys-6_01:1.2
	BuildSys-6_00-1_142_2_1:1.2
	RPiFreeze:1.2.0.2
	BuildSys-6_00:1.2
	BuildSys-5_99:1.2
	BuildSys-5_98:1.2
	BuildSys-5_97:1.2
	BuildSys-5_96:1.2
	BuildSys-5_95:1.2
	BuildSys-5_94:1.2
	BuildSys-5_93:1.2
	BuildSys-5_92:1.2
	BuildSys-5_91:1.2
	BuildSys-5_90:1.2
	BuildSys-5_89:1.2
	BuildSys-5_88:1.2
	BuildSys-5_87:1.2
	BuildSys-5_86:1.2
	BuildSys-5_85:1.2
	BuildSys-5_84:1.2
	BuildSys-5_83:1.2
	BuildSys-5_82:1.2
	BuildSys-5_81:1.2
	BuildSys-5_80:1.2
	BuildSys-5_79:1.2
	BuildSys-5_78:1.2
	BuildSys-5_77:1.2
	BuildSys-5_76:1.2
	BuildSys-5_75:1.2
	BuildSys-5_74:1.2
	BuildSys-5_73:1.2
	BuildSys-5_72:1.2
	BuildSys-5_71:1.2
	BuildSys-5_70:1.2
	BuildSys-5_69:1.2
	BuildSys-5_68:1.2
	BuildSys-5_67:1.2
	BuildSys-5_66:1.2
	BuildSys-5_65:1.2
	BuildSys-5_64:1.2
	BuildSys-5_63:1.2
	BuildSys-5_62:1.2
	BuildSys-5_61:1.2
	BuildSys-5_60:1.2
	BuildSys-5_59:1.2
	BuildSys-5_58:1.2
	BuildSys-5_57:1.2
	BuildSys-5_56:1.2
	BuildSys-5_55:1.2
	BuildSys-5_54:1.2
	BuildSys-5_53:1.2
	BuildSys-5_52:1.2
	BuildSys-5_51:1.2
	BuildSys-5_50:1.2
	BuildSys-5_49:1.2
	BuildSys-5_48:1.2
	BuildSys-5_47:1.2
	BuildSys-5_46:1.2
	BuildSys-5_45:1.2
	BuildSys-5_44:1.2
	BuildSys-5_43:1.2
	BuildSys-5_42:1.2
	BuildSys-5_41:1.2
	BuildSys-5_40:1.2
	BuildSys-5_39:1.2
	BuildSys-5_38:1.2
	BuildSys-5_37:1.2
	BuildSys-5_36:1.2
	BuildSys-5_35:1.2
	BuildSys-5_34:1.2
	BuildSys-5_33:1.2
	BuildSys-5_32:1.2
	BuildSys-5_31:1.2
	BuildSys-5_30:1.2
	BuildSys-5_29:1.2
	BuildSys-5_28:1.2
	BuildSys-5_27:1.2
	BuildSys-5_26:1.2
	BuildSys-5_25:1.2
	BuildSys-5_24:1.2
	BuildSys-5_23:1.2
	BuildSys-5_22:1.2
	BuildSys-5_21:1.2
	BuildSys-5_20:1.1
	BuildSys-5_19:1.1
	BuildSys-5_18:1.1
	BuildSys-5_17:1.1
	BuildSys-5_16:1.1
	BuildSys-5_15:1.1
	BuildSys-5_14:1.1
	BuildSys-5_13:1.1
	BuildSys-5_12:1.1
	BuildSys-5_11:1.1
	BuildSys-5_10:1.1
	BuildSys-5_09:1.1
	BuildSys-5_08:1.1
	BuildSys-5_07:1.1
	BuildSys-5_06:1.1
	BuildSys-5_05:1.1
	BuildSys-5_04:1.1
	BuildSys-5_03:1.1
	BuildSys-5_02:1.1
	BuildSys-5_01:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.09.12.23.00.47;	author bavison;	state Exp;
branches;
next	1.1;
commitid	mwF3dZUt3oUN7gzv;

1.1
date	2010.05.19.14.47.57;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Fixes to shared makefiles
Detail:
  The change which permitted top-level makefiles to include only CApp,
  CModule etc accidentally broke makefiles which included HostTools (StdTools
  got included instead and overwrote the HostTools settings). Amazingly, we
  seem to have got away with this so far - but fixed now. Also, brought the
  GNUmakefiles versions in line with updates to the amu Makefiles in this
  and other respects.
Admin:
  Tested in a RISC OS ROM build, and for building cross-compiling versions
  of the tools.

Version 5.21. Tagged as 'BuildSys-5_21'
@
text
@# Makefile fragment for C applications that run on the build host but which
# are built during the main build

INCLUDED_HOSTTOOLS = YES

#
# These are the tool definitions for the GNU toolchain in a POSIX environment, targetting the build host.
#

#
# Tool definitions.
#
CC              = gcc
DO              = 
ECHO            = echo
LD              = g++
MAKE            = make
MKDIR           = mkdir -p
SED             = sed
SQZ             = @@echo > /dev/null
STRIP           = strip
TOUCH           = touch

#
# Options.
#
STDTOOLOPTIONS = ${THROWBACK}

C_WARNINGS  := -Wall -Wextra
C_OPTSIZE   := -Os
C_OPTSPEED  := -O3
CFLAGS      += -c ${STDTOOLOPTIONS} ${CDEFINES} ${CINCLUDES} ${C_WARNINGS} -I. -O2 -std=c99


# EOF
@


1.1
log
@  Changes to facilitate platform independence.

Detail:
 CApp:
  * New variable CLEAN_DEPEND is now the preferred way to specify additional
    clean actions because GNU make doesn't have an equivalent to amu's :: rules
  * Can now indicate preference to use C++ linker options using LINK_TYPE
  * Gains install phase support:
    + INSTALLAPPFILES lists the files to be copied, effectively specified
      relative to LocalRes$Path
    + Adopted INSTTYPE concept from DDE makefiles for cases where executable
      and support files need to be installed to different locations
    + Unusual cases can override this implementation using CUSTOMINSTALLAPP
      and/or CUSTOMINSTALLTOOL

  CLibrary:
  * New variable CLEAN_DEPEND is now the preferred way to specify additional
    clean actions because GNU make doesn't have an equivalent to amu's :: rules
  * -o is no longer a mandatory argument to libfile - now in ARFLAGS rather
    than used explicitly

  DbgRules / StdRules:
  * Macroised some Norcroft-specific features

  HostTools:
  * Clean phase support was incomplete

  StdTools:
  * A few additional tool definitions
  * Added macro definitions for common C options
  * C's enable-warnings and suppress-function-name-embedding options now on by
    default because they're usually (maybe even universally?) used - it won't
    hurt if they're specified again by existing makefiles
  * C++ now has equivalent INCLUDES and DEFINES variables, and the standard C++
    headers are on the default include path
  * SEP is defined as the directory separator character and can be used from
    top-level makefiles in a platform-independent way

  Functionally equivalent versions of the following makefile fragments
  have been developed so far for executing on a Posix build host:
    AppLibs, CApp, CLibrary, DbgRules, HostTools, StdRules, StdTools
  These suport native compilers (when APCS=Host) and cross-compilers,
  and GCC (when TOOLCHAIN=GNU) and Norcroft toolchains - typically these
  environment variables would be selected by running an Env file.

Admin:
  Tested by building as many as possible of the DDE components on RISC OS
  and on Linux, using native and cross compilers, and using Norcroft and
  GNU toolchains.

Version 5.01. Tagged as 'BuildSys-5_01'
@
text
@d3 3
d7 1
a7 3
#
# These are the tool definitions for Posix hosted builds.
#
@

