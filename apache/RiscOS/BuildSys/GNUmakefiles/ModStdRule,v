head	1.1;
access;
symbols
	BuildSys-7_30:1.1
	BuildSys-7_29:1.1
	BuildSys-7_28:1.1
	BuildSys-7_27:1.1
	BuildSys-7_26:1.1
	BuildSys-7_25:1.1
	BuildSys-7_24:1.1;
locks; strict;
comment	@# @;


1.1
date	2018.04.11.23.21.09;	author bavison;	state Exp;
branches;
next	;
commitid	IH1EokSuAjoQZ4yA;


desc
@@


1.1
log
@  Incremental step in cross-compilation support
Detail:
  ModuleDB:
  * Correct capitalisation of resgen's TARGET to match its main source file
  GNUmakefiles/AAsmModule:
  * Targets now given ,ffa filetype suffix
  * Support source directory layouts s/<subdir>/<leaf> as used by the
    kernel and printer drivers - define SYMLINK_EXT_FIRST to enable
  * Prevent relinking when running make on an up-to-date component due to
    a difference between amu and GNU make's handling of double-colon rules
  * Support linking with GNU toolchain
  * Fix installation rule (mixup between MERGEDMDIR and MERGEDRDIR)
  * Support up to 16 assembler and 8 C-from-assembler headers, up from 3
    of each (here's looking at you, kernel) - long-term, it might be worth
    changing this to a scheme like that used by CModule to remove any
    limits
  * Fix C-from-assembler exports to have .h suffix
  GNUmakefiles/AppLibs:
  * Define INCLUDE_OSLIB to permit OSLib header search paths to be
    specified in an OS-agnostic way
  GNUmakefiles/CApp:
  * Prevent relinking when running make on an up-to-date component due to
    a difference between amu and GNU make's handling of double-colon rules
  GNUmakefiles/CLibrary:
  * Prevent rearchiving when running make on an up-to-date component due
    to a difference between amu and GNU make's handling of double-colon
    rules
  * Don't use .hdr suffix on exported assembler header files
  * Correct order of dependencies for export_libs phony target
  GNUmakefiles/StdTools:
  * Definition for the module filetype suffix
  * Add LDBIN tool for GNU/Norcroft-agnostic binary link, useful for
    linking position-independent binary code, such as relocatable modules
    (i.e. ones that don't require the linker to create a __RelocCode
    function)
  * FAPPEND function now works if the same file is used for the
    destination as for one of the sources (this is used by CModule)
  GNUmakefiles/CModule, ModStdRule, ModuleLibs:
  * Finally created cross-compilation versions of the last major shared
    makefiles! Warning: these have received limited testing to date.
  Makefiles/AAsmModule:
  * Support up to 16 assembler and 8 C-from-assembler headers
  Makefiles/AppLibs, ModuleLibs:
  * Define INCLUDE_OSLIB
  Makefiles/StdTools:
  * Add LDBIN tool


Version 7.24. Tagged as 'BuildSys-7_24'
@
text
@# Makefile fragment for defining standard rules for various tools
# when building modules

INCLUDED_MODSTDRULE = YES

# Get the generic rules first
ifeq ("${INCLUDED_STDRULES}","")
include StdRules
endif

.SUFFIXES: .cmhg .od

# Generate C header definitions from CMHG source file
.cmhg.h:;       ${CMHG} ${CINCLUDES} ${CMHGFLAGS} -d $@@ $<

# CMHG source files -> object file
.cmhg.o:;       ${CMHG} ${CINCLUDES} ${CMHGFLAGS} -o $@@ $<
.cmhg.od:;      ${CMHG} ${CINCLUDES} ${CMHGFLAGS} -o $@@ $<

# EOF
@
