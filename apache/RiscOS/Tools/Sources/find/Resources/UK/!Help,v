head	1.1;
branch	1.1.1;
access;
symbols
	find-5_06:1.1.1.1
	find-5_05-2:1.1.1.1
	find-5_05:1.1.1.1
	find-5_04-2:1.1.1.1
	find-5_04:1.1.1.1
	find-5_03:1.1.1.1
	find-5_02:1.1.1.1
	find-5_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	99.11.09.14.06.25;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.09.14.06.25;	author sbrodie;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@   Find
   ~~~~
   Purpose:  Find patterns in names and contents of sets of files

   Setup:
      Icon                    Action/Meaning                       Default
      ----                    --------------                       -------
      Patterns                Patterns to be searched for.           nil 
      Files                   Name(s) of file(s) to do the           nil
                              searching in (typed or dragged).
      Line count only         Print only a count of the number       off
                              of lines matching from each file.
      Filenames only          List only the names of files           off
                              matching patterns.
      Case insensitive        Ignore the case of letters when        off
                              making comparisons.
      Verbose                 List the name of each file             off
                              before searching it for matches.
      Throwback               Produce throwback to the editor for    on
                              each matching line.

      File Wildcards:
        #   matches any file name character except '.'.
        *   matches 0 or more file name characters other than '.';
            all other characters except '{', ',' and '}' match as is.
        ... is equivalent to .(*.) ie look in all sub-directories.
        A,B matches any file name matched by A or B.
        {A} matches any file name matched by A, but limits the scope of
            a ','.
        (A) matches any file name matched by 0 or more A's.        
       
      Pattern Wildcards:
        .   matches any single character.
        $   matches end of line.
        @@   matches any 'identifier' character (A-Z, a-z, 0-9 or _).
        #   matches any digit.
        |c  if '@@' <= c <= '_', |c matches CTRL+c; |? matches DEL
            |! shifts the next character or control character by 128.
        \c  matches char c even if c is special.
        [abc] matches any one of a, b or c; within a CLASS only $ @@ # \ and |
            retain their special meanings and c1-c2 matches any single char
            between c1 and c2 (inclusive) in ASCII order.
        ~x  if x is any of the above 'simple' character patterns then ~x
            matches any char not matching x (e.g. ~|c matches any but
            CTRL+C).
        *y  if y is any of the above 'simple' character patterns then *y
            matches 0 or more y's (e.g. *[a-z] matches >= 0 lower case
            letters).
        ^y  like *y but matches one or more y's (e.g. ^[a-z] matches any
            lower case 'word'.
        Any other single character matches that character.
      
   Menu:
      Entry                   Action/Meaning                       Default
      -----                   --------------                       -------
      Allow '-'     =>        Allow the following pattern            nil
                              argument to begin with a '-'.
      Grep Style              Accept Unix grep/egrep-style patterns. off
@


1.1.1.1
log
@Initial Import of tool frontend resources.

@
text
@@
