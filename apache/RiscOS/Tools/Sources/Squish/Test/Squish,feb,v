head	1.1;
access;
symbols
	Squish-1_15:1.1
	Squish-1_14:1.1
	Squish-1_13:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.08.27.23.36.32;	author jlee;	state Exp;
branches;
next	;
commitid	eLCgpu2g4h3z4fiw;


desc
@@


1.1
log
@Reconstruct Squish sources by un-squishing the v1.12 binary
Detail:
  This is some reconstructed sources for the Squish tool, formed by running the 1.12 binary through Beebug's/ProAction's !BasFormat, and then fixing up a few extra bits by hand.
  Most of FNs and PROCs have had meaningful names applied to them, making the sources more readable. However only a couple of the variables have been renamed.
  The test script (Test/Squish,feb) was used to verify that this new squish (after being re-squished) produces identical output to the original binary.
  Note that squishing these sources won't produce a binary identical to the original, as the original appears to have been modified post-squishing in order to add PROCknockoutkept.
Admin:
  Tested against original Squish binary for Disc & BCM2835 builds
  Version number is currently hardcoded in sources; build procedure needs updating to take it from VersionNum


Version 1.13. Tagged as 'Squish-1_13'
@
text
@| Copyright 2012 Castle Technology Ltd
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
| Script to test if two different versions of Squish produce the same output
| Rename existing Library.Build.Squish to OldSquish, copy in your new version
| as NewSquish, and add this script as Squish.
| Note - errors probably won't halt the build, so it's best to check the log
| manually rather than relying on the build failing.
unset squish$output
set squish$temp x%1
if "<squish$temp>"="x-to" then set squish$output copy %2
set squish$temp x%2
if "<squish$temp>"="x-to" then set squish$output copy %3
set squish$temp x%3
if "<squish$temp>"="x-to" then set squish$output copy %4
set squish$temp x%4
if "<squish$temp>"="x-to" then set squish$output copy %5
set squish$temp x%5
if "<squish$temp>"="x-to" then set squish$output copy %6
set squish$temp x%6
if "<squish$temp>"="x-to" then set squish$output copy %7
set squish$temp x%7
if "<squish$temp>"="x-to" then set squish$output copy %8
set squish$temp x%8
if "<squish$temp>"="x-to" then set squish$output copy %9
if "<squish$output>"="" then error Unable to find output file
echo newsquish %*1
newsquish %*1 { > <wimp$scrapdir>.newsquishout }
do <squish$output> <wimp$scrapdir>.newsquish ~CFR~V
echo oldsquish %*1
oldsquish %*1 { > <wimp$scrapdir>.oldsquishout }
do <squish$output> <wimp$scrapdir>.oldsquish ~CFR~V 
gnu.diff -q <wimp$scrapdir>.oldsquish <wimp$scrapdir>.newsquish
if "<sys$returncode>"<>"0" then error Squished output differs
@
