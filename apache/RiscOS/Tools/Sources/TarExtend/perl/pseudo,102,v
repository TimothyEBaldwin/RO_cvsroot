head	1.1;
branch	1.1.1;
access;
symbols
	TarExtend-0_06:1.1.1.1
	TarExtend-0_05:1.1.1.1
	TarExtend-0_04:1.1.1.1
	TarExtend-0_03:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	99.02.23.10.17.37;	author dcotton;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.02.23.10.17.37;	author dcotton;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@# Copyright 1999 Element 14 Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
###########################################################################
# File:        filecmp (pseudo)
# Description: Compares two files, reporting entries which exist in
#              one file, but not in the other.  The check works both ways, 
#              on both files.  
# Assumptions: a) Typical file format as follows:
#                 a 03-08.!Builder.!Boot, 55 bytes, 1 block
#                 a 03-08.!Builder.!Help, 2080 bytes, 5 blocks
#                 x 03-08.!Builder.!Boot, 55 bytes, 1 block
#              b) Single file does not contain duplicate entries.
#              c) Files do not contain blank lines.
#              d) Files are extracted in the same order that they were
#                 archived, although of course, files may be missing.
# ToDo:        a) If the files being compared are radically different from
#                 each other, we'll eventually run out of memory.  Handle
#                 this cleanly.  
# History:     10-Feb-1999  SR  Created.
#              11-Feb-1999  SR  Algorithm verified against test cases.
###########################################################################

do
{
   Read a line from file1;
   Read a line from file2;
   flag = 1;
   
   if (line from file1 ne line from file2)
   {
       while (line from file1 exists in listB)
       {
              Remove that line from listB;
              Read a line from file1;
              flag = 0;
       }
       
       if (flag == 0) && (line from file1 ne line from file2)
       {
           Store line from file1 in listA;
       }
       
       while (line from file2 exists in listA)
       {
              Remove that line from listA;
              Read a line from file2;
              flag = 0;
       }
       
       if (flag == 0) && (line from file2 ne line from file1)
       {
           Store line from file2 in listB;
       }
       
       if (flag)
       {
           Store line from file1 in listA;
           Store line from file2 in listB;
       }
   }
} until (line from file1 eq "" && line from file2 eq "");

Anything left in listA is missing from file2.
Anything left in listB is missing from file1.
    
   @


1.1.1.1
log
@Initial import of TarExtend from no previous source control.
@
text
@@
