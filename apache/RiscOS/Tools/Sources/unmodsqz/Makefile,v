head	1.8;
access;
symbols
	unmodsqz-0_06:1.8
	unmodsqz-0_05:1.8
	unmodsqz-0_04-2:1.6
	unmodsqz-0_04:1.5
	unmodsqz-0_03:1.3
	unmodsqz-0_02:1.2
	unmodsqz-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2013.11.11.01.20.02;	author bavison;	state Exp;
branches;
next	1.7;
commitid	WkS6F1z22jg3vNcx;

1.7
date	2013.07.15.19.40.26;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	JCjA8j9whFDRpBXw;

1.6
date	2010.05.19.16.30.33;	author bavison;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.26.13.19.30;	author bavison;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.16.20.11.51;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.02.13.57.57;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.19.14.38.22;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	98.11.05.16.40.35;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.11.05.16.40.35;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.8
log
@  Build fixes for cross-compilation
Detail:
  * Reinstated Desc to INSTAPP_FILES
  * Changed path to Env directory, assuming source trees are no longer merged

Retagged as 'unmodsqz-0_05'
@
text
@# Makefile for unmodsqz

COMPONENT ?= unmodsqz
INSTAPP = ${INSTDIR}${SEP}!UnModSqz

OBJS = unsqueezec unmodsqz
LIBS = ${CLXLIB}
INSTAPP_FILES = !Boot !Help !Run !Sprites [!Sprites11] !Sprites22 Desc Messages Templates
INSTAPP_VERSION = Desc

include CApp

# Dynamic dependencies:
@


1.7
log
@Makefile updated for BuildSys-6_20

Version 0.05. Tagged as 'unmodsqz-0_05'
@
text
@d8 1
a8 1
INSTAPP_FILES = !Boot !Help !Run !Sprites [!Sprites11] !Sprites22 Messages Templates
@


1.6
log
@  Changes to facilitate platform independence.
Detail:
  * Added shell-script make wrapper
  * Uses shared makefile fragments and one master makefile for all variants
  * #includes use CLX path explicitly
Admin:
   No functional change, so version not incremented

Tagged as 'unmodsqz-0_04-2'

Version 0.04. Not tagged
@
text
@d8 2
a9 1
INSTALLAPPFILES = !Boot !Help !Run !Sprites [!Sprites11] !Sprites22 Desc Messages Templates
a10 4
include StdTools
include StdRules
include DbgRules
include AppLibs
@


1.5
log
@  Build fixes
Detail:
  Gave Components file more power to install the executable and frontend in
  different places. Iyonix-themed application directory sprites are now
  available in addition to the old Morris4 ones, and are selected based upon
  the UserIF build variable.
Admin:
  Checked frontend installs correctly.

Retagged as 'unmodsqz-0_04'
@
text
@a0 14
# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
a1 8
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 01-Mar-01  SNB          Created
#
d3 2
a4 5
#
# Paths
#
COMPONENT = unmodsqz
TARGET    = unmodsqz
d6 9
a14 74
CFLAGS    = -Wpc -ffah -IC:CLX -DTARGET_IS_RISCOS
DIRS      = o._dirs

INSTAPP   = ${INSTDIR}.!UnModSqz

#
# Program specific options:
#
OBJS       = unsqueezec.o unmodsqz.o
LIBS       = ${CLXLIB} ${CLIB}

include Makefiles:StdTools
include Makefiles:AppLibs
include Makefiles:AppStdRule

#
# build a the library:
#
all:    ${TARGET}

#
# RISC OS ROM build rules:
#
rom:
        @@echo ${COMPONENT}: rom module built

export: export_${PHASE}

install_rom:
        @@echo ${COMPONENT}: rom module installed
        
install: install_${INSTTYPE}

install_tool: ${TARGET}
	${MKDIR} ${INSTDIR}
	${CP} ${TARGET} ${INSTDIR}.${TARGET} ${CPFLAGS}
	@@echo ${COMPONENT}: tool installed in library

install_app:
	${MKDIR} ${INSTAPP}
	${CP} LocalRes:!Boot            ${INSTAPP}.!Boot      ${CPFLAGS}
	${CP} LocalRes:!Run             ${INSTAPP}.!Run       ${CPFLAGS}
	${CP} LocalRes:!Help            ${INSTAPP}.!Help      ${CPFLAGS}
	${CP} LocalUserIFRes:!Sprites   ${INSTAPP}.!Sprites   ${CPFLAGS}
	IfThere LocalUserIFRes:!Sprites11 then ${CP} LocalUserIFRes:!Sprites11 ${INSTAPP}.!Sprites11 ${CPFLAGS}
	${CP} LocalUserIFRes:!Sprites22 ${INSTAPP}.!Sprites22 ${CPFLAGS}
	${CP} LocalRes:Messages         ${INSTAPP}.Messages   ${CPFLAGS}
	${CP} LocalRes:Templates        ${INSTAPP}.Templates  ${CPFLAGS}
	${CC} -C++ -E >${INSTAPP}.Desc LocalRes:Desc
	${TIDYDESC}  ${INSTAPP}.Desc ${INSTAPP}.Desc
	@@echo ${COMPONENT}: FrontEnd app install in '${INSTAPP}'

clean:
        ${WIPE} o ${WFLAGS}
        ${RM} ${COMPONENT}
        @@echo ${COMPONENT}: cleaned

export_hdrs: 
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: 
        @@echo ${COMPONENT}: export complete (libs)

${DIRS}:
	${MKDIR} o
	${TOUCH} $@@

#
# Final link
#
${TARGET}: ${OBJS} ${LIBS} ${DIRS}
        ${LD} ${LDFLAGS} -o ${COMPONENT} ${OBJS} ${LIBS}
        ${SQZ} ${SQZFLAGS} $@@
        ${CHMOD} a+rx $@@
@


1.4
log
@Fixed install rule. Retagged.
@
text
@d34 1
a34 1
INSTAPP   = ${INSTDIR}.^.AcornC/C++.Tools.!UnModSqz
d65 1
a65 1
	${MKDIR} ${INSTDIR}.Docs
d69 1
a69 1
install_: install_tool
d71 8
a78 7
	${CP} LocalRes:!Boot ${INSTAPP}.!Boot ${CPFLAGS}
	${CP} LocalRes:!Run ${INSTAPP}.!Run ${CPFLAGS}
	${CP} LocalRes:!Help ${INSTAPP}.!Help ${CPFLAGS}
	${CP} LocalRes:!Sprites ${INSTAPP}.!Sprites ${CPFLAGS}
	${CP} LocalRes:!Sprites22 ${INSTAPP}.!Sprites22 ${CPFLAGS}
	${CP} LocalRes:Messages ${INSTAPP}.Messages ${CPFLAGS}
	${CP} LocalRes:Templates ${INSTAPP}.Templates ${CPFLAGS}
@


1.3
log
@  Update to Makefile to tidy up the exported Desc file.
  Updated !Run file to ensure the latest modules.
Admin:
  Requires BuildSys 3.01 or later.
  Co-dependent with Library 0.67 or later

Version 0.03. Tagged as 'unmodsqz-0_03'
@
text
@d34 1
a34 2
INSTAPP   = ${INSTDIR}.Apps.!UnModSqz
LIBDIR    = ${INSTDIR}.Library.Acorn
d54 1
a54 1
rom: ${TARGET}
d59 1
a59 1
install_rom: ${TARGET}
d62 2
d65 2
a66 2
	${MKDIR} ${LIBDIR}.Docs
	${CP} ${TARGET} ${LIBDIR}.${TARGET} ${CPFLAGS}
d69 1
a69 4
install: install_resources install_tool
	@@echo ${COMPONENT}: install complete

install_resources:
@


1.2
log
@  Completely rewritten version of unmodsqz.
Detail:
  Rewritten the main desqueeze code in C so that this tool can
    be used on Solaris (required for STB-400 baseline)
  The new unsqueezec.c file was reverse engineered from the
    old assembler code.
Admin:
  Tested on RISC OS, x86 Solaris and SPARC Solaris.

Version 0.02. Tagged as 'unmodsqz-0_02'
@
text
@d22 2
a23 4
# 03-Nov-98  SNB          Created

COMPONENT = unmodsqz
RAM_MODULE = aif.${COMPONENT}
d28 2
a29 1
EXP_HDR = <export$dir>
d31 5
a35 5
#
# Export Paths for Messages module
#
RESDIR = <resource$dir>.Resources2.${COMPONENT}
RESFSDIR   = Resources.${COMPONENT}
d38 1
a38 1
# Generic options:
d40 2
a41 12
MKDIR   = cdir
AS      = objasm
CC      = cc
CMHG    = cmhg
CP      = copy
LD      = link
RM      = remove
MODSQZ  = modsqz
SQUEEZE = squeeze
WIPE    = -wipe
CD	= dir
TOUCH	= stamp
d43 3
a45 3
CPFLAGS = ~cfr~v
WFLAGS = ~c~v
SQZFLAGS = -f
d48 1
a48 1
# Include files
d50 1
a50 1
INCLUDES=	-IC: -IC:CLX
d53 1
a53 1
# Libraries
d55 2
a56 4
CLIB		= Clib:o.Stubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.AbsSym
CLXLIB          = C:CLX.o.CLXlib
d58 1
a58 4
DEPEND		= -depend !Depend
ASFLAGS		= ${DEPEND} ${THROWBACK}
CFLAGS		= -c -ffah ${INCLUDES} ${DEPEND} ${THROWBACK}
LDFLAGS		= -aif
d60 7
a66 1
RAM_OBJS	= o.unsqueezec o.unmodsqz
d68 2
a69 5
#
# Rule patterns
#
.c.o:;		${CC} ${CFLAGS} -DTARGET_IS_RISCOS -o $@@ $<
.s.o:;		${AS} ${ASFLAGS} -o $@@ $<
d71 12
a82 6
#
# Main rules:
#
#
all: ${RAM_MODULE} o.dirs
        @@echo ${COMPONENT}: Application built
d86 1
a86 1
        ${WIPE} aif ${WFLAGS}
d89 7
a95 1
o.dirs:
d97 1
a97 4
	create $@@

export:
        @@echo ${COMPONENT}: export complete
d100 1
a100 1
# Targets
d102 4
a105 5
${RAM_MODULE}:	${RAM_OBJS} ${CLIB}
	${MKDIR} aif
	${LD} ${LDFLAGS} -o $@@ ${RAM_OBJS} ${CLXLIB} ${CLIB}
	${SQUEEZE} ${SQZFLAGS} $@@
        Access $@@ RW/R
@


1.1
log
@Initial revision
@
text
@d61 1
a61 1
INCLUDES=	-IC:
d69 1
d76 1
a76 1
RAM_OBJS	= o.UnSqueeze o.unmodsqz
d81 1
a81 1
.c.o:;		${CC} ${CFLAGS} -o $@@ $<
d108 1
a108 1
	${LD} ${LDFLAGS} -o $@@ ${RAM_OBJS} ${CLIB}
@


1.1.1.1
log
@
Import of new tool "unmodsqz".  This tool contains the module unsqueeze
code, shamelessly lifted from the kernel sources, together with a small
C wrapper to enable you to reverse the effects of modsqz.

@
text
@@
