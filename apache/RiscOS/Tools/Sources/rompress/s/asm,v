head	1.2;
access;
symbols
	rompress-0_04:1.2
	rompress-0_03:1.2
	rompress-0_02:1.2
	rompress-0_01:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.02.25.17.36.01;	author jlee;	state Exp;
branches;
next	1.1;
commitid	wIBsgVNCSMcxZyUv;

1.1
date	2012.02.04.21.43.21;	author jlee;	state Exp;
branches;
next	;
commitid	rebjpVdUVMZc2TRv;


desc
@@


1.2
log
@Multiple improvements
Detail:
  Makefile - Ensure additional files get cleaned now that CLEAN_DEPEND is no longer supported
  s/patchable, Makefile, c/rompress - Add new option -p/--patchable for creating patchable compressed ROMs. Currently it's impossible for a ROM patching tool (e.g. the Iyonix softload or ROM flash tools) to update the negative checksum of the uncompressed image, because the ROM footer will have been compressed. As a workaround for this, asking rompress to produce a patchable ROM will cause it to append a small section of code that manually recalculates the uncompressed image negative checksum and writes it to the ROM footer once decompression is complete.
  c/romcrc, c/rompress, h/romcrc - Update romcrc code to allow reading/writing of the extended ROM footer. This is used to insert the new 'compressed ROM softload hint' tag into the footer of the compressed ROM, to allow the softload tool to easily identify compressed ROMs and locate the OS header.
  c/rompress - Add new option -s/--size for specifying that the compressed ROM must be an exact size. E.g. for padding Tungsten ROMs to 4MB.
  c/zlib, zinflate/s/zinflate - Update zlib decompression stub to only copy the necessary amount of data to the decompression workspace, instead of blindly copying everything up to the end of the image. Remove broken, over-optimised memcpy implementation and replace with a simple loop, since memcpy is rarely (if ever) used.
  s/asm - Don't rely on OS_LeaveOS for returning to user mode.
Admin:
  Tested with compressing/decompressing OMAP3, OMAP3Live, IOMD & Tungsten ROMs
  Tool should now be ready for use, and will build from source if you have Kernel-5_35-4_79_2_138 or newer


Version 0.02. Tagged as 'rompress-0_02'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     ListOpts
        GET     Macros
        GET     System
        GET     OSEntries

        AREA    |asm$$Code|, CODE, READONLY

        EXPORT  IMBFunc
        EXPORT  asm_decompress

IMBFunc Push    "lr"
        SWI     XOS_SynchroniseCodeAreas
        Pull    "pc"

asm_decompress
        ; R0 = OS hdr
        ; R1 = IMBFunc
        ; R2 = workspace ptr
        ; Switch to SVC mode to stop clib throwing a hissy fit if an event
        ; occurs and it tries to unwind the stack
        SWI     OS_EnterOS
        ; Call the decompression code
        LDR     R3,[R0,#OSHdr_DecompressHdr]
        ADD     R3,R3,R0
        LDR     R12,[R3,#OSDecompHdr_Code]
        MOV     LR,PC
        ADD     PC,R12,R3
        ; Switch back to user mode
        MRS     R0,CPSR
        BIC     R0,R0,#&F
        MSR     CPSR_c,R0
        MOV     pc,lr

        END
@


1.1
log
@Add initial version of ROM compression tool
Detail:
  Tool to compress & decompress RISC OS 5 ROM images.
  Currently images can be compressed using either the squeeze or zlib algorithms, but more algorithms can easily be added in the future
  When decompressing images the decompression stub that was appended to the image will be executed directly; this may need changing in future if CPU compatability issues arise.
  Can only be used with ROM images that have the 'supports compression' flag set in their OS header
  Currently uses lots of memory when compressing images (especially with zlib) due to everything being done in RAM
Admin:
  Tested with compressing/decompressing OMAP3 & OMAP3Live images
  Note: Won't build until the kernel changes are checked in


Version 0.01. Tagged as 'rompress-0_01'
@
text
@d44 3
a46 1
        SWI     OS_LeaveOS
@

