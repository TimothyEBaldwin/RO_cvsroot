head	1.3;
access;
symbols
	squeeze-5_14:1.2
	squeeze-5_13:1.2
	squeeze-5_12:1.2
	squeeze-5_11:1.2
	squeeze-5_10:1.2
	squeeze-5_09-2:1.2
	squeeze-5_09:1.2
	squeeze-5_08:1.2
	squeeze-5_07:1.2
	squeeze-5_06:1.2
	squeeze-5_05:1.2
	squeeze-5_04:1.2
	squeeze-5_03:1.2
	squeeze-5_02:1.1.1.1
	squeeze-5_01:1.1.1.1
	squeeze-5_00:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2015.03.27.08.28.14;	author rsprowson;	state dead;
branches;
next	1.2;
commitid	CAzM7w844tGBLdfy;

1.2
date	99.12.10.14.42.30;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	99.02.10.12.55.24;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.02.10.12.55.24;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Separate out the xpand tool
Xpand becomes a tool in its own right, since it only shared a header file with squeeze.

Version 5.15. Tagged as 'squeeze-5_15'
@
text
@; Copyright 1999 Element 14 Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; > s.asmcall RCC 24-Mar-88
;
; This makes it possible to call code which scribbles on all the
; registers with a standard ARM procedure call, e.g. from C.
;
; If the code called also scribbles on lk, you must regain control
; by forcing it to branch to asmcall_exit.
;
; NB it relies on scribbling on memory addressed pc-relative, so it
; won't work if the code area is not writable.
;

r0  RN	0
r1  RN	1
r2  RN	2
r3  RN	3
r4  RN	4
ip  RN 12
lk  RN 14
pc  RN 15

    AREA |C$$code|, CODE, READONLY
    EXPORT  asmcall_call
    EXPORT  asmcall_exit

asmcall_savedregs
	DCD	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ; 11 words for registers
asmcall_call
	;  Enter with r0: thing to call
	;	      r1, r2, r3: parameters for it

	ADR	ip, asmcall_savedregs
	STMIA	ip, {r4-lk}
	MOV	ip, r0
	MOV	r0, r1
	MOV	r1, r2
	MOV	r2, r3
	MOV	lk, pc
	MOV	pc, ip
asmcall_exit
	NOP		; 2 spurious instructions here in case the caller
	NOP		; forgets to allow for prefetch ...
	ADR	ip, asmcall_savedregs
	LDMIA	ip, {r4-lk}
	MOV	pc, lk
    END
@


1.2
log
@  Squeeze code adjusted to be StrongARM compatible.
Detail:
  The code inserted by squeeze into an application to perform
    unsqueezing is now StrongARM compatible and no longer relies
    on the presence of the UnsqueezeAIF module.  Since it has
    better information on what it's been updating, it can actually
    make a superior call to OS_SynchroniseCodeAreas marking the
    exact area of memory that it has updated.
Admin:
  Tested on Risc PC with UnsqueezeAIF unplugged.

Version 5.03. Tagged as 'squeeze-5_03'
@
text
@@


1.1
log
@Initial revision
@
text
@d53 1
a53 1
	MOVS	pc, ip
d59 1
a59 1
	MOVS	pc, lk
@


1.1.1.1
log
@  Import of sources to squeeze tool from Aquarius.
  Also contains sources to xpand tool.
Detail:
  Updated to take version numbers and dates from VersionNum
    but otherwise unchanged.
Admin:
  Changed to use srccommit.
  Initial VersionNum file faked to represent current version.

Tagged as squeeze-5_00

@
text
@@
