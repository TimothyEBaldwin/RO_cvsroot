head	1.14;
access;
symbols
	Library-1_93:1.14
	Library-1_92:1.14
	Library-1_91:1.14
	Library-1_90:1.13
	Library-1_89:1.13
	Library-1_88:1.13
	Library-1_87:1.13
	Library-1_86:1.12
	Library-1_85:1.12
	Library-1_84:1.12
	Library-1_83:1.12
	Library-1_82:1.12
	Library-1_81:1.10
	Library-1_80:1.10
	Library-1_79:1.10
	Library-1_78:1.10
	Library-1_77:1.10
	Library-1_76:1.10
	Library-1_75:1.9
	Library-1_74:1.9
	Library-1_73:1.9
	Library-1_72:1.9
	Library-1_71:1.9
	Library-1_70:1.9
	Library-1_69:1.9
	Library-1_68:1.9
	Library-1_67:1.9
	Library-1_66:1.9
	Library-1_65:1.9
	Library-1_64:1.9
	Library-1_63:1.9
	Library-1_62:1.9
	Library-1_61:1.9
	Library-1_60:1.9
	Library-1_59:1.9
	Library-1_58:1.9
	Library-1_57:1.9
	Library-1_56:1.9
	Library-1_55:1.9
	Library-1_54:1.8
	Library-1_53:1.8
	Library-1_52:1.8
	Library-1_51:1.8
	Library-1_50:1.8
	Library-1_49:1.8
	Library-1_48:1.7
	Library-1_47:1.6
	Library-1_46:1.5
	Library-1_45:1.4
	Library-1_44:1.4
	Library-1_43:1.3
	Library-1_42:1.3
	Library-1_41:1.3
	Library-1_40:1.3
	Library-1_39:1.3
	Library-1_38:1.3
	Library-1_37:1.3
	Library-1_36:1.3
	Library-1_35:1.3
	Library-1_34:1.3
	Library-1_33:1.2
	Library-1_32:1.1
	Batch5:1.1
	Batch4:1.1;
locks; strict;
comment	@# @;


1.14
date	2017.06.03.22.15.30;	author jlee;	state Exp;
branches;
next	1.13;
commitid	gAOxVOc5YtY5FYTz;

1.13
date	2016.05.28.18.34.15;	author jlee;	state Exp;
branches;
next	1.12;
commitid	FyQsypHORJkAmh8z;

1.12
date	2015.11.08.10.45.53;	author rool;	state Exp;
branches;
next	1.11;
commitid	FsqFziT6jHSNfhIy;

1.11
date	2015.11.04.21.45.23;	author rool;	state Exp;
branches;
next	1.10;
commitid	WrRVbeQ7yWUE2PHy;

1.10
date	2015.02.02.11.25.08;	author bavison;	state Exp;
branches;
next	1.9;
commitid	noSjhBIhzC2Xrq8y;

1.9
date	2012.05.10.17.07.02;	author bavison;	state Exp;
branches;
next	1.8;
commitid	8cpdjj0ujb5aqc4w;

1.8
date	2011.09.14.20.27.33;	author jlee;	state Exp;
branches;
next	1.7;
commitid	N99rVrij2kLfdvzv;

1.7
date	2011.09.12.22.51.42;	author bavison;	state Exp;
branches;
next	1.6;
commitid	OaFBHDJvdcZG4gzv;

1.6
date	2011.09.12.16.56.11;	author bavison;	state Exp;
branches;
next	1.5;
commitid	MzD5sSyBWtmJ6ezv;

1.5
date	2011.09.12.16.44.16;	author bavison;	state Exp;
branches;
next	1.4;
commitid	TO6CUOXWVFSC2ezv;

1.4
date	2011.06.04.16.03.35;	author jlee;	state Exp;
branches;
next	1.3;
commitid	oKMUPOw2EEUX1nmv;

1.3
date	2009.06.16.01.27.17;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.03.45.17;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.14.21.30.31;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Tweak objasm alias setup
Detail:
  ToolOptions/APCS-32,feb - Add a new objasm alias, ObjAsmVFP, for assembling code that requires VFP word ordering for DCFD (objasm will complain if it sees conflicting -APCS fp options on the command line, so we can't just use "-APCS /vfp" with the existing alias)
  To keep things simple, drop support for old versions of objasm
Admin:
  Tested with Raspberry Pi ROM build


Version 1.91. Tagged as 'Library-1_91'
@
text
@| Copyright 2008 Castle Technology Ltd
|
| Licensed under the Apache License, Version 2.0 (the "License");
| you may not use this file except in compliance with the License.
| You may obtain a copy of the License at
|
|     http://www.apache.org/licenses/LICENSE-2.0
|
| Unless required by applicable law or agreed to in writing, software
| distributed under the License is distributed on an "AS IS" BASIS,
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
| See the License for the specific language governing permissions and
| limitations under the License.
|
| Tool options for APCS-32
|

                                 Set Alias$CC %%CC -APCS 3/32bit/fpe3 -memaccess -L22-S22-L41 %%*0
If "<Machine>"="Archimedes" then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -memaccess -L22-S22+L41 %%*0
If "<Machine>"="All32"      then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 3 -memaccess -L22-S22-L41 %%*0
If "<Machine>"="26"         then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -memaccess -L22-S22+L41 %%*0
If "<Machine>"="32"         then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 3 -memaccess -L22-S22+L41 %%*0
If "<Machine>"="Tungsten"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 5TE -memaccess +L22+S22+L41 %%*0
If "<Machine>"="ARM11ZF"    then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 6 -memaccess +L22+S22-L41 %%*0
If "<Machine>"="RPi"        then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 6 -memaccess +L22+S22-L41 %%*0
If "<Machine>"="CortexA8"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 7 -memaccess +L22+S22-L41 %%*0
If "<Machine>"="CortexA9"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 7 -memaccess +L22+S22-L41 %%*0
If "<Machine>"="CortexA7"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 7 -memaccess +L22+S22-L41 %%*0
Unset Build$ObjAsmCPU
if "<Machine>"="All32"      then Set Build$ObjAsmCPU -cpu 3
if "<Machine>"="32"         then Set Build$ObjAsmCPU -cpu 3
if "<Machine>"="Tungsten"   then Set Build$ObjAsmCPU -cpu 5TE
if "<Machine>"="ARM11ZF"    then Set Build$ObjAsmCPU -cpu 6Z --fpu VFPv2
if "<Machine>"="RPi"        then Set Build$ObjAsmCPU -cpu 6Z --fpu VFPv2
if "<Machine>"="CortexA8"   then Set Build$ObjAsmCPU -cpu Cortex-A8
if "<Machine>"="CortexA9"   then Set Build$ObjAsmCPU -cpu Cortex-A9
if "<Machine>"="CortexA7"   then Set Build$ObjAsmCPU -cpu Cortex-A7
Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 <Build$ObjAsmCPU> %%*0
| Declare an alias for VFP APCS variants (necessary to get the correct word ordering with DCFD)
Set Alias$ObjAsmVFP %%ObjAsm -APCS 3/32bit/vfp <Build$ObjAsmCPU> %%*0
Set Alias$CMHG %%CMHG -32bit %%*0
Set Alias$ResGen %%ResGen -32bit %%*0
Set Alias$DefMod %%DefMod.!Run -32bit %%*0
Set Alias$-Wipe X Wipe %%*0
@


1.13
log
@Add support for "26" machine
Detail:
  ToolOptions/APCS-32,feb - Add support for the new "26" machine
Admin:
  Tested with PlingSystem build


Version 1.87. Tagged as 'Library-1_87'
@
text
@d29 12
a40 17
                                 Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit %%*0
if "<Machine>"="All32"      then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 3 %%*0
if "<Machine>"="32"         then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 3 %%*0
if "<Machine>"="Tungsten"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 5TE %%*0
if "<Machine>"="ARM11ZF"    then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 -cpu 6Z --fpu VFPv2 %%*0
if "<Machine>"="RPi"        then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 -cpu 6Z --fpu VFPv2 %%*0
if "<Machine>"="CortexA8"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 -cpu Cortex-A8 %%*0
if "<Machine>"="CortexA9"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 -cpu Cortex-A9 %%*0
if "<Machine>"="CortexA7"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 -cpu Cortex-A7 %%*0
| Fall back to -cpu 5TEJ for older versions of objasm
objasm -h { > <Wimp$ScrapDir>.ToolOptions }
| 1 will be returned for unrecognised parameters, e.g. -fpu
if "<Sys$ReturnCode>"="1"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 5TEJ %%*0
| 0 will be returned for unrecognised -cpu options, so check any warning output
grep -F "Target cpu not recognised" <Wimp$ScrapDir>.ToolOptions { > null: }
if "<Sys$ReturnCode>"="0"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 5TEJ %%*0
remove <Wimp$ScrapDir>.ToolOptions 
@


1.12
log
@Machine selection changes
Detail:
  Since code wise and arch wise A7=A15=A17, the machines in HdrSrc have been made common on A7.
Admin:
  Requires HdrSrc-2_55.
  Retagged as Library-1_82.
@
text
@d21 1
@


1.11
log
@Extra ToolOptions
Detail:
  Added Cortex-A15 as a known machine.
  Set the -cpu option for Cortex-A8 and -A9 to ARMv7.
Admin:
  Submission from Willi Theiss.

Version 1.82. Tagged as 'Library-1_82'
@
text
@d27 1
a27 1
If "<Machine>"="CortexA15"  then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 7 -memaccess +L22+S22-L41 %%*0
d36 1
a36 1
if "<Machine>"="CortexA15"  then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 -cpu Cortex-A15 %%*0
@


1.10
log
@  Add Raspberry Pi 2 support
Detail:
  The Raspberry Pi ROM now joins the IOMD ROM in supporting multiple
  architectures, in this case ARMv6 and ARMv7. This has been achieved by
  creating a new machine type specific for Raspberry Pi. The old ARM11ZF
  machine type remains for builds that are ARM11-only.

Version 1.76. Tagged as 'Library-1_76'
@
text
@d25 3
a27 2
If "<Machine>"="CortexA8"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 6 -memaccess +L22+S22-L41 %%*0
If "<Machine>"="CortexA9"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 6 -memaccess +L22+S22-L41 %%*0
d36 1
@


1.9
log
@  Fixed command lines options for objasm in ARMv6 builds
Detail:
  --fpu is an RVDS-era command line option, so it needs *two* dashes. There is
  no short (single-dash) form of the option. The ToolOptions file previously
  included only a single dash, and so incorrectly deduced that objasm 4 didn't
  support ARMv6 options and dropped back to ARMv5 mode.
Admin:
  No longer produces additional warnings when builing the Kernel, for one.
  This will reinstate pseudo-instruction substitutions like LDR= -> MOVW in
  ARMv6 builds as ARMv7 builds have enjoyed for some time now.

Version 1.55. Tagged as 'Library-1_55'
@
text
@d24 1
d32 1
@


1.8
log
@Fix ToolOptions to detect old versions of objasm properly
Detail:
  ToolOptions/APCS-32,feb - Apart from checking the 'objasm -h' return code, the script now also does a grep of the output to look for 'Target cpu not recognised' errors, since those don't seem to cause a non-zero return code to be set
Admin:
  Fixes wrong options being used with objasm 3.32.
  I haven't actually tested a full build yet, but I'm guessing it'll work now.


Version 1.49. Tagged as 'Library-1_49'
@
text
@d30 1
a30 1
if "<Machine>"="ARM11ZF"    then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit/fpe3 -cpu 6Z -fpu VFPv2 %%*0
@


1.7
log
@  Fix to earlier commit
Detail:
  To avoid lots of link warnings, we need to explicitly set the APCS calling
  standard to a FPA variant when specifying a CPU with a VFP - at the moment,
  the C compiler is only able to output FPA code, which then conflicts with
  the ObjAsm object files.
Admin:
  Tested in an OMAP3 ROM build

Version 1.48. Tagged as 'Library-1_48'
@
text
@d34 2
a35 1
objasm -h { > null: }
d37 4
@


1.6
log
@  Workaround for ROL OS versions
Detail:
  It seems that RISC OS 4.39, 4.42 and 6.x have a bug/misfeature that they
  can't execute directories.
Admin:
  Fix provided by Willi Theiß

Version 1.47. Tagged as 'Library-1_47'
@
text
@d30 3
a32 3
if "<Machine>"="ARM11ZF"    then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 6Z -fpu VFPv2 %%*0
if "<Machine>"="CortexA8"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu Cortex-A8 %%*0
if "<Machine>"="CortexA9"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu Cortex-A9 %%*0
@


1.5
log
@  Updates to ToolOptions file
Detail:
  * Alias for objasm sets correct -cpu and -fpu flags for v6/v7 architecture
    builds if you're using a version of objasm (>= 4.00) that supports them
  * Corrected Machine Any32 to All32 to match HdrSrc
Admin:
  Tested with objasm 3 and 4

Version 1.46. Tagged as 'Library-1_46'
@
text
@d38 1
a38 1
Set Alias$DefMod %%DefMod -32bit %%*0
@


1.4
log
@Fix ToolOptions to set correct ARM11ZF compiler options
Detail:
  ToolOptions/APCS-32,feb - Now detects ARM11ZF builds and sets the correct compiler options for CPU arch & unaligned accesses
Admin:
  Tested with S3C6410 ROM build. Untested at runtime.


Version 1.44. Tagged as 'Library-1_44'
@
text
@d20 1
a20 1
If "<Machine>"="Any32"      then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 3 -memaccess -L22-S22-L41 %%*0
d23 1
a25 1
If "<Machine>"="ARM11ZF"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 6 -memaccess +L22+S22-L41 %%*0
d27 1
a27 1
if "<Machine>"="Any32"      then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 3 %%*0
d30 6
a35 3
if "<Machine>"="CortexA8"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 5TEJ %%*0
if "<Machine>"="CortexA9"   then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 5TEJ %%*0
if "<Machine>"="ARM11ZF"    then Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit -cpu 5TEJ %%*0
@


1.3
log
@  CC options for OMAP3 builds now at ARMv6
Detail:
  Now that SpriteExtend has been fiddled to accept the necessary ARMv6
  instructions, set the CC architecture option to the maximum supported.
Admin:
  Tested - seems to still work.

Version 1.34. Tagged as 'Library-1_34'
@
text
@d25 1
d32 1
@


1.2
log
@  CC/objasm options now customised for ROM builds
Detail:
  The pièce de résistance of the last few commits - the default CC and objasm
  options are now set appropriately for the target platform. For C code, this
  should mean better code (uses LDRH, UMULL etc) and for OMAP3 builds means
  that there should be no more reliance on pre-v6 unaligned load behaviour
  (except for a few components that are held in the repository in binary or
  object form). Sadly, the effect is blunted a little by the fact that we
  can't turn CC up to its highest level (v6) because in some cases it is used
  for its assembler output which is then fed through objasm - but objasm
  doesn't know v6 instructions like SBFX yet. At least it proves that the
  v6 disassembly new in CC 5.67 is working...
Admin:
  Tested in an OMAP3 ROM build. Appears to still work on a rev B7 beagleboard
  (as far as it can reasonably be tested without a working USB system).

Version 1.33. Tagged as 'Library-1_33'
@
text
@d22 2
a23 2
If "<Machine>"="Tungsten"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 5 -memaccess +L22+S22+L41 %%*0
If "<Machine>"="CortexA8"   then Set Alias$CC %%CC -APCS 3/32bit/fpe3 -cpu 5 -memaccess +L22+S22-L41 %%*0
@


1.1
log
@Clean reimport of the build environment directories.
This represents the version released in the Batch 4 "bbe" tarfiles.
Tagged as 'Batch4'
@
text
@d18 13
a30 2
Set Alias$CC %%CC -APCS 3/32bit/fpe3 %%*0
Set Alias$ObjAsm %%ObjAsm -APCS 3/32bit %%*0
@

