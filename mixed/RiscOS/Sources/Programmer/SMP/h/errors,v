head	1.2;
access;
symbols
	SMP-0_04:1.2
	SMP-0_03:1.2
	SMP-0_02:1.1.1.1
	SMP-0_01:1.1.1.1
	initial:1.1.1.1
	trunk:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.09.10.11.35.03;	author jlee;	state Exp;
branches;
next	1.1;
commitid	S8sagIWiJum5WD6A;

1.1
date	2017.07.29.16.58.15;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	dsMOIfOFqnvf691A;

1.1.1.1
date	2017.07.29.16.58.15;	author jlee;	state Exp;
branches;
next	;
commitid	dsMOIfOFqnvf691A;


desc
@@


1.2
log
@Minor tweaks
Detail:
  c/errors, h/errors, c/init - Add a timeout to launch_core to make it easier to debug when things go wrong
  h/halcalls - Fix typo
  s/CPUInfo - Disable logging of some CP15 registers which aren't implemented on all CPUs
Admin:
  Tested on Raspberry Pi 3


Version 0.03. Tagged as 'SMP-0_03'
@
text
@/*
 * Copyright (c) 2017, RISC OS Open Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef SMP_ERRORS_H
#define SMP_ERRORS_H

typedef enum {
	Error_BadCoreCount,
	Error_NoDoorbell,
	Error_NoKill,
	Error_CantSleep,
	Error_CantYield,
	Error_TooManySWIs,
	Error_NoSWIHandler,
	Error_UnsafeSWI,
	Error_BadThreadID,
	Error_BadAffinity,
	Error_BadProcMode,
	Error_TooManyThreads,
	Error_ThreadNotComplete,
	Error_BadContext,
	Error_TerminateFailed,
	Error_Timeout,

	Error_MAX,
} Error;

_kernel_oserror *geterror(Error e);

#define ERROR(X) (geterror(Error_ ## X))

#endif
@


1.1
log
@Initial revision
@
text
@d47 1
@


1.1.1.1
log
@Import of SMP module
This is still very much alpha status, so don't expect any form of API stability yet
@
text
@@
