head	4.8;
access;
symbols
	TCPIPLibs-5_66:4.8
	TCPIPLibs-5_65:4.8
	TCPIPLibs-5_64:4.7
	TCPIPLibs-5_63:4.7
	TCPIPLibs-5_62:4.7
	TCPIPLibs-5_61:4.7
	TCPIPLibs-5_60:4.7
	TCPIPLibs-5_59:4.7
	TCPIPLibs-5_58:4.6
	TCPIPLibs-5_57:4.6
	TCPIPLibs-5_56:4.6
	TCPIPLibs-5_55:4.6
	TCPIPLibs-5_54:4.6
	TCPIPLibs-5_53:4.6
	TCPIPLibs-5_52:4.5
	TCPIPLibs-5_51:4.5
	TCPIPLibs-5_50:4.4
	TCPIPLibs-5_49:4.3
	RO_5_07:4.3
	TCPIPLibs-5_48:4.3
	TCPIPLibs-5_47:4.2
	TCPIPLibs-5_46:4.2
	TCPIPLibs-5_45:4.2
	TCPIPLibs-5_44:4.2
	TCPIPLibs-5_43:4.2
	TCPIPLibs-5_42:4.2
	TCPIPLibs-5_41:4.2
	TCPIPLibs-5_40:4.2
	TCPIPLibs-5_39:4.2
	dellis_autobuild_BaseSW:4.2
	TCPIPLibs-5_38:4.2
	TCPIPLibs-5_37:4.2
	TCPIPLibs-5_36:4.2
	sbrodie_sedwards_16Mar2000:4.2
	TCPIPLibs-5_35:4.2
	TCPIPLibs-5_34:4.2
	TCPIPLibs-5_33:4.2
	TCPIPLibs-5_32:4.2
	TCPIPLibs-5_31:4.2
	dcotton_autobuild_BaseSW:4.2
	TCPIPLibs-5_30:4.2
	TCPIPLibs-5_29:4.2
	TCPIPLibs-5_28:4.2
	TCPIPLibs-5_27:4.2
	TCPIPLibs-5_26:4.2
	TCPIPLibs-5_25:4.2
	TCPIPLibs-5_24:4.2
	TCPIPLibs-5_23:4.2
	TCPIPLibs-5_22:4.2
	TCPIPLibs-5_21:4.2
	TCPIPLibs-5_20:4.2
	TCPIPLibs-5_19:4.2
	TCPIPLibs-5_18:4.2
	TCPIPLibs-5_17:4.2
	TCPIPLibs-5_16:4.2
	TCPIPLibs-5_15:4.2
	TCPIPLibs-5_14:4.2
	TCPIPLibs-5_13:4.2
	TCPIPLibs-5_12:4.2
	TCPIPLibs-5_11:4.2
	TCPIPLibs-5_10:4.2
	TCPIPLibs-5_09:4.2
	TCPIPLibs-5_08:4.2
	TCPIPLibs-5_07:4.2
	TCPIPLibs-5_06:4.2
	TCPIPLibs-5_05:4.2
	TCPIPLibs-5_04:4.2
	TCPIPLibs-5_03:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	TCPIPLibs-5_02:4.1
	TCPIPLibs-5_01:4.1
	nicke_TCPIPLibs_25-9-98:4.1
	TCPIPLibs-5_00:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	Spinner:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_19May1998_bp:4.1
	Ursula_19May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.8
date	2018.05.19.09.36.51;	author rool;	state Exp;
branches;
next	4.7;
commitid	7uBh0ROj7DZkdTCA;

4.7
date	2014.06.28.08.48.09;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	eDGcJK3sMdAxCgGx;

4.6
date	2012.03.08.01.17.39;	author jlee;	state Exp;
branches;
next	4.5;
commitid	h86MyDqJDdY0c1Wv;

4.5
date	2012.01.14.18.37.44;	author srevill;	state Exp;
branches;
next	4.4;
commitid	YmziHNybUI1rGaPv;

4.4
date	2009.06.13.23.36.42;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	2004.07.01.15.31.43;	author srevill;	state Exp;
branches;
next	4.2;

4.2
date	98.10.22.16.52.08;	author nturton;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.27.56;	author rbuckley;	state Exp;
branches
	4.1.4.1
	4.1.7.1;
next	;

4.1.4.1
date	97.05.20.13.42.25;	author kbracey;	state Exp;
branches;
next	;

4.1.7.1
date	97.03.06.14.27.56;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.8
log
@Fix to socklib error return handling
Detail:
  copyerror - the highest error is now ENEEDAUTH (81) but socklib was clamping everything above EREMOTE (71).
  mkveneers/InetSWIs - use centrally held Hdr for OS SWI definitions.
  socklib.h/LibraryDoc - remove internal function _makecall() which is no longer used.
Admin:
  Submission for TCP/IP bounty.

Version 5.65. Tagged as 'TCPIPLibs-5_65'
@
text
@# Copyright 1997 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
#
# Makefile for socklib.a
#

include StdTools

COMPONENT=	socklib
LIBDIR=		<Lib$Dir>
INCLUDES=	TCPIPLibs:,C:
DIRS=		o._dirs

CFLAGS=		-depend !Depend ${THROWBACK} -pcc -zps0 -I${INCLUDES} -fah -Fn -DINET
CFLAGSZM=	-depend !Depend ${THROWBACK} -pcc -zps1 -I${INCLUDES} -ffah -DINET -zM
ASFLAGS=	-depend !Depend ${THROWBACK}
ASFLAGSZM=	-depend !Depend ${THROWBACK} -predefine "module SETL {TRUE}"

OFILES4=	accept.o bind.o connect.o copyerror.o getpeernam.o \
		getsocknam.o getsockopt.o getstabsiz.o listen.o \
		recv.o recvfrom.o recvmsg.o select.o send.o sendmsg.o \
		sendto.o setsockopt.o shutdown.o sockclose.o socket.o \
		socketstat.o sockioctl.o sockread.o sockreadv.o sockwrite.o \
		sockwritev.o sendtosm.o sysctl.o naccept.o nrecvfrom.o \
		nrecvmsg.o nsendmsg.o ngetpeerna.o ngetsockna.o kvm_nlist.o \
		sockver.o _inet_err.o

ZFILES4=	z.accept z.bind z.connect z.copyerror z.getpeernam \
		z.getsocknam z.getsockopt z.getstabsiz z.listen \
		z.recv z.recvfrom z.recvmsg z.select z.send z.sendmsg \
		z.sendto z.setsockopt z.shutdown z.sockclose z.socket \
		z.socketstat z.sockioctl z.sockread z.sockreadv z.sockwrite \
		z.sockwritev z.sendtosm z.sysctl z.naccept z.nrecvfrom \
		z.nrecvmsg z.nsendmsg z.ngetpeerna z.ngetsockna z.kvm_nlist \
		z.sockver z._inet_err

OFILES5=	accept5.o bind.o connect.o copyerror.o getpeerna5.o \
		getsockna5.o getsockopt.o getstabsiz.o listen.o \
		recv5.o recvfrom5.o recvmsg5.o select.o send5.o sendmsg5.o \
		sendto.o setsockopt.o shutdown.o sockclose.o socket.o \
		socketstat.o sockioctl.o sockread.o sockreadv.o sockwrite.o \
		sockwritev.o sendtosm.o sysctl.o \
		oaccept.o ogetpeerna.o ogetsockna.o orecvmsg.o osendmsg.o \
		orecvfrom.o kvm_nlist.o sockver.o _inet_err.o

ZFILES5=	z.accept5 z.bind z.connect z.copyerror z.getpeerna5 \
		z.getsockna5 z.getsockopt z.getstabsiz z.listen \
		z.recv5 z.recvfrom5 z.recvmsg5 z.select z.send5 z.sendmsg5 \
		z.sendto z.setsockopt z.shutdown z.sockclose z.socket \
		z.socketstat z.sockioctl z.sockread z.sockreadv z.sockwrite \
		z.sockwritev z.sendtosm z.sysctl \
		z.oaccept z.ogetpeerna z.ogetsockna z.orecvmsg z.osendmsg \
		z.orecvfrom z.kvm_nlist z.sockver z._inet_err

.SUFFIXES:	.z .o .s .sz .sn .c

.c.z:;		${CC} ${CFLAGSZM} -c -o $@@ $<
.c.o:;		${CC} ${CFLAGS} -c -o $@@ $<
.s.z:;		${AS} ${ASFLAGSZM} $< $@@
.sz.z:;		${AS} ${ASFLAGSZM} $< $@@
.s.o:;		${AS} ${ASFLAGS} $< $@@
.sn.o:;		${AS} ${ASFLAGS} $< $@@

all:		veneers socklib socklibzm socklib5 socklib5zm

${OFILES4}:	veneers
${ZFILES4}:	veneers
${OFILES5}:	veneers
${ZFILES5}:	veneers

socklib: ${OFILES4} ${DIRS}
	${AR} -c socklib ${OFILES4}
	${AR} -o socklib

socklibzm: ${ZFILES4} ${DIRS}
	${AR} -c socklibzm ${ZFILES4}
	${AR} -o socklibzm

socklib5: ${OFILES5} ${DIRS}
	${AR} -c socklib5 ${OFILES5}
	${AR} -o socklib5

socklib5zm: ${ZFILES5} ${DIRS}
	${AR} -c socklib5zm ${ZFILES5}
	${AR} -o socklib5zm

veneers: mkveneers Prototypes
	${PERL}  mkveneers Prototypes
	${TOUCH} veneers

export: export_${PHASE}

export_hdrs:
	${CP} h.socklib TCPIPLibs:h.socklib ${CPFLAGS}
	@@${ECHO} ${COMPONENT}: header export complete

export_libs: socklib socklibzm socklib5 socklib5zm
	${MKDIR} ${LIBDIR}
	${MKDIR} ${LIBDIR}.TCPIPLibs
	${MKDIR} ${LIBDIR}.TCPIPLibs.o
	${CP} socklib	 TCPIPLibs:o.socklib	${CPFLAGS}
	${CP} socklibzm	 TCPIPLibs:o.socklibzm	${CPFLAGS}
	${CP} socklib5	 TCPIPLibs:o.socklib5	${CPFLAGS}
	${CP} socklib5zm TCPIPLibs:o.socklib5zm	${CPFLAGS}
	@@${ECHO} ${COMPONENT}: library export complete

o._dirs:
	${MKDIR} o
	${MKDIR} z
	${MKDIR} sn
	${MKDIR} sz
	${TOUCH} $@@

clean:
	${WIPE} o  ${WFLAGS}
	${WIPE} z  ${WFLAGS}
	${WIPE} sn ${WFLAGS}
	${WIPE} sz ${WFLAGS}
	${RM} veneers
	${RM} socklib
	${RM} socklibzm
	${RM} socklib5
	${RM} socklib5zm

# Dynamic dependencies:
@


4.7
log
@Make use of StdTools
Use ${TOUCH} instead of *Create.
Tested exports of header and library, no issues seen.

Version 5.59. Tagged as 'TCPIPLibs-5_59'
@
text
@d33 1
a33 1
		getsocknam.o getsockopt.o getstabsiz.o listen.o makecall.o \
d42 1
a42 1
		z.getsocknam z.getsockopt z.getstabsiz z.listen z.makecall \
d51 1
a51 1
		getsockna5.o getsockopt.o getstabsiz.o listen.o makecall.o \
d60 1
a60 1
		z.getsockna5 z.getsockopt z.getstabsiz z.listen z.makecall \
@


4.6
log
@Replace mkveneers build tool with Perl version
Detail:
  socklib/mkveeners,102 - New Perl version of mkveneers tool, to workaround 26/32bit clib issues when building PlingSystem on 32bit hosts
  socklib/mkveeners.mk, socklib/c/mkveneers - Removed old C version
  socklib/Makefile, socklib/!MkClean,fd7 - Updated to use Perl version
Admin:
  Tested briefly; produces identical output files to the C version (ignoring date string differences!)


Version 5.53. Tagged as 'TCPIPLibs-5_53'
@
text
@a18 47
# Makefile,v
# Revision 1.6  96/03/19  13:14:02  kbracey
# A major shake-up. All veneers are now in assembler. The assembler
# veneers are automatically generated by a C program mkveneers.
# _makecall is no longer used, but included in the library for
# compatibility. A new function _copyerror does much of the work
# of _makecall.
#
# Revision 1.5  95/08/17  18:39:36  kwelton
# The _makecall() routine has been rewritten in assembler to get round
# a race condition that previously existed in the "standard" (i.e.
# not -zM) version where the Internet module's internal error block could
# be modified between _makecall() discovering an error and copying out
# the error block into _inet_error.
#
# Revision 1.4  95/04/20  17:44:09  kwelton
# Function prototypes altered to match the genuine functionality, not
# whatever random argument types were used in the original library.
# Remade dependencies.
#
# Revision 1.3  95/04/20  13:44:32  kwelton
# All library functions are now prototyped in socklib.h.
#
# Revision 1.2  95/04/18  15:32:12  kwelton
# Files renamed to fit RISC OS 10-char filename limit
#
# Revision 1.1  95/03/08  11:38:13  kwelton
# Initial revision
#
#
LIBDIR = <Lib$Dir>

#
# Generic options:
#
MKDIR   = do mkdir -p
WIPE    = x wipe
RM      = x remove
CP      = copy
CC	= cc
AS	= objasm
LD	= link
LIB	= libfile
CMHG	= cmhg
TOUCH   = create
DO      = do
PERL    = ${DO} <Perl$Dir>.perl
d20 1
a20 2
WFLAGS  = ~c~v
CPFLAGS = ~cflnr~v
d22 2
d25 1
a31 3
CCZM=		${CC} ${CFLAGSZM}
ASZM=		${AS} ${ASFLAGSZM}

a67 1

d70 1
a70 1
.c.z:;		${CCZM} -c -o $@@ $<
d72 2
a73 2
.s.z:;		${ASZM} $< $@@
.sz.z:;		${ASZM} $< $@@
a76 3
COMPONENT = socklib
LIBDIR = <Lib$Dir>

d84 19
a102 19
socklib:	${OFILES4} o._dirs
	${LIB} -c socklib ${OFILES4}
	${LIB} -o socklib

socklibzm:	${ZFILES4} o._dirs
	${LIB} -c socklibzm ${ZFILES4}
	${LIB} -o socklibzm

socklib5:	${OFILES5} o._dirs
	${LIB} -c socklib5 ${OFILES5}
	${LIB} -o socklib5

socklib5zm:	${ZFILES5} o._dirs
	${LIB} -c socklib5zm ${ZFILES5}
	${LIB} -o socklib5zm

veneers:	mkveneers Prototypes
	${PERL} mkveneers Prototypes
	Create veneers
d107 2
a108 2
	${CP} h.socklib	 TCPIPLibs:h.socklib	${CPFLAGS}
        @@echo ${COMPONENT}: export complete (hdrs)
d110 4
a113 1
export_libs: socklib socklibzm socklib5 socklib5zm dirs
d118 1
a118 5

dirs:
	${MKDIR} $(LIBDIR)
	${MKDIR} $(LIBDIR).TCPIPLibs
	${MKDIR} $(LIBDIR).TCPIPLibs.o
d121 2
a122 2
        ${MKDIR} o
        ${MKDIR} z
d126 1
d128 4
a131 4
	${WIPE} o.* ${WFLAGS}
	${WIPE} z.* ${WFLAGS}
	${WIPE} sn.* ${WFLAGS}
	${WIPE} sz.* ${WFLAGS}
@


4.5
log
@Makefile fixes.

Version 5.51. Tagged as 'TCPIPLibs-5_51'
@
text
@d64 2
d153 1
a153 1
	${RUN}mkveneers Prototypes
a155 3
mkveneers:	c.mkveneers
        ${MAKE} -f mkveneers/mk COMPONENT=mkveneers THROWBACK=${THROWBACK}

a183 1
	${RM} mkveneers
@


4.4
log
@  Build fix
Detail:
  The build utility socklib.mkveneers, compiled at build time, is now built
  using the HostTools shared makefile, and so will execute on any RISC OS build
  host even if the default compiler options are to target an incompatible ARM
  architecture. Socklib's makefile didn't have dynamic dependency support: this
  has been added. Also now sets the throwback flag when doing builds via the
  !Make and !MkExport obey files.
Admin:
  Tested using an APCS-R build on an Iyonix.

Version 5.49. Not tagged
@
text
@d55 2
a56 2
WIPE    = -wipe
RM      = -remove
@


4.3
log
@  Build changes
Detail:
  socklib now builds on 32-bit machines with a 26-bit environment.
  socklib also creates install directory with mkdir -p rather than cdir
Admin:
  Works in STB Baseline build.

Version 5.48. Tagged as 'TCPIPLibs-5_48'
@
text
@a58 1
CC_HOST	= %cc
d63 1
d70 4
a73 3
CFLAGS=		-pcc -zps0 -I${INCLUDES} -fah -Fn -DINET
CFLAGSZM=	-pcc -zps1 -I${INCLUDES} -ffah -DINET -zM
ASFLAGSZM=	-predefine "module SETL {TRUE}"
d121 2
a122 2
.s.o:;		${AS} $< $@@
.sn.o:;		${AS} $< $@@
d134 1
a134 1
socklib:	${OFILES4} local_dirs
d138 1
a138 1
socklibzm:	${ZFILES4} local_dirs
d142 1
a142 1
socklib5:	${OFILES5} local_dirs
d146 1
a146 1
socklib5zm:	${ZFILES5} local_dirs
d151 1
a151 1
	mkveneers Prototypes
d155 1
a155 1
	${CC_HOST} mkveneers -LC:o.Stubs
d174 1
a174 1
local_dirs:
d179 1
d192 1
a192 1

@


4.2
log
@Socklib doesn't build itself every time now...

Version 5.02. Not tagged
@
text
@d54 1
a54 1
MKDIR   = cdir
d59 1
d154 1
a154 1
	cc mkveneers -LC:o.Stubs
@


4.1
log
@Initial revision
@
text
@d148 1
a148 1
veneers:	mkveneers Prototypes local_dirs
d152 1
a152 1
mkveneers:	c.mkveneers local_dirs
@


4.1.4.1
log
@Fixed dependencies
@
text
@a176 2
	Create   local_dirs
	
a183 1
	${RM} local_dirs
@


4.1.7.1
log
@Imported from Babel
@
text
@@
