head	4.3;
access;
symbols
	TCPIPLibs-5_66:4.3
	TCPIPLibs-5_65:4.3
	TCPIPLibs-5_64:4.2
	TCPIPLibs-5_63:4.2
	TCPIPLibs-5_62:4.2
	TCPIPLibs-5_61:4.2
	TCPIPLibs-5_60:4.2
	TCPIPLibs-5_59:4.2
	TCPIPLibs-5_58:4.2
	TCPIPLibs-5_57:4.2
	TCPIPLibs-5_56:4.2
	TCPIPLibs-5_55:4.2
	TCPIPLibs-5_54:4.2
	TCPIPLibs-5_53:4.2
	TCPIPLibs-5_52:4.2
	TCPIPLibs-5_51:4.2
	TCPIPLibs-5_50:4.2
	TCPIPLibs-5_49:4.2
	RO_5_07:4.2
	TCPIPLibs-5_48:4.2
	TCPIPLibs-5_47:4.2
	TCPIPLibs-5_46:4.2
	TCPIPLibs-5_45:4.2
	TCPIPLibs-5_44:4.2
	TCPIPLibs-5_43:4.2
	TCPIPLibs-5_42:4.2
	TCPIPLibs-5_41:4.2
	TCPIPLibs-5_40:4.2
	TCPIPLibs-5_39:4.1
	dellis_autobuild_BaseSW:4.1
	TCPIPLibs-5_38:4.1
	TCPIPLibs-5_37:4.1
	TCPIPLibs-5_36:4.1
	sbrodie_sedwards_16Mar2000:4.1
	TCPIPLibs-5_35:4.1
	TCPIPLibs-5_34:4.1
	TCPIPLibs-5_33:4.1
	TCPIPLibs-5_32:4.1
	TCPIPLibs-5_31:4.1
	dcotton_autobuild_BaseSW:4.2
	TCPIPLibs-5_30:4.1
	TCPIPLibs-5_29:4.1
	TCPIPLibs-5_28:4.1
	TCPIPLibs-5_27:4.1
	TCPIPLibs-5_26:4.1
	TCPIPLibs-5_25:4.1
	TCPIPLibs-5_24:4.1
	TCPIPLibs-5_23:4.1
	TCPIPLibs-5_22:4.1
	TCPIPLibs-5_21:4.1
	TCPIPLibs-5_20:4.1
	TCPIPLibs-5_19:4.1
	TCPIPLibs-5_18:4.1
	TCPIPLibs-5_17:4.1
	TCPIPLibs-5_16:4.1
	TCPIPLibs-5_15:4.1
	TCPIPLibs-5_14:4.1
	TCPIPLibs-5_13:4.1
	TCPIPLibs-5_12:4.1
	TCPIPLibs-5_11:4.1
	TCPIPLibs-5_10:4.1
	TCPIPLibs-5_09:4.1
	TCPIPLibs-5_08:4.1
	TCPIPLibs-5_07:4.1
	TCPIPLibs-5_06:4.1
	TCPIPLibs-5_05:4.1
	TCPIPLibs-5_04:4.1
	TCPIPLibs-5_03:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	TCPIPLibs-5_02:4.1
	TCPIPLibs-5_01:4.1
	nicke_TCPIPLibs_25-9-98:4.1
	TCPIPLibs-5_00:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	Spinner:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_19May1998_bp:4.1
	Ursula_19May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.3
date	2018.05.19.09.36.54;	author rool;	state Exp;
branches;
next	4.2;
commitid	7uBh0ROj7DZkdTCA;

4.2
date	2001.06.12.15.46.44;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.27.57;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.27.57;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Fix to socklib error return handling
Detail:
  copyerror - the highest error is now ENEEDAUTH (81) but socklib was clamping everything above EREMOTE (71).
  mkveneers/InetSWIs - use centrally held Hdr for OS SWI definitions.
  socklib.h/LibraryDoc - remove internal function _makecall() which is no longer used.
Admin:
  Submission for TCP/IP bounty.

Version 5.65. Tagged as 'TCPIPLibs-5_65'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the Internet library for writing network applications in C. It may be    *
 * used freely in the creation of programs for Archimedes or Risc PC. It    *
 * should be used with Acorn's C Compiler Release 5 or later.               *
 *                                                                          *
 *                                                                          *
 * Copyright © Acorn Computers Ltd, 1996                                    *
 *                                                                          *
 ***************************************************************************/

/*
 * File:    socklib.h
 * Purpose: Socket library calls
 * Author:  K Bracey
 * History: 26-Nov-96: KJB: Internet 5 release
 */

#include "sys/types.h"
#include "sys/socket.h"
#include "sys/stat.h"
#include "sys/time.h"
#include "sys/uio.h"

#include "kernel.h"

/*
 * variable declarations
 */
#ifndef errno
#define errno __errno
extern int errno;
#endif
extern _kernel_oserror _inet_error;

struct sockaddr_in;
struct nlist;

#ifndef kvm_t
#define kvm_t void
#endif

/*
 * function prototypes
 */
extern int accept(int s, struct sockaddr *addr, int *addrlen);

extern int bind(int s, const struct sockaddr *name, int namelen);

extern int connect(int s, const struct sockaddr *name, int namelen);

extern int getpeername(int s, struct sockaddr *name, int *namelen);
extern int getsockname(int s, struct sockaddr *name, int *namelen);
extern int getsockopt(int s, int level, int optname,
		      void *optval, int *optlen);
extern int getstablesize(void);

extern int kvm_nlist(kvm_t *kd, struct nlist *nl);

extern int listen(int s, int backlog);

extern int recv(int s, void *buf, size_t len, int flags);
extern int recvfrom(int s, void *buf, size_t len, int flags,
		    struct sockaddr *from, int *fromlenaddr);
extern int recvmsg(int s, struct msghdr *msg, int flags);

extern int select(int nfds, fd_set *rfds, fd_set *wfds, fd_set *efds,
		  struct timeval *tv);
extern int send(int s, const void *msg, size_t len, int flags);
extern int sendmsg(int s, const struct msghdr *msg, int flags);
extern int sendto(int s, const void *msg, size_t len, int flags,
		  const struct sockaddr *to, int tolen);
extern int setsockopt(int s, int level, int optname, const void *optval, int optlen);
extern int shutdown(int s, int how);
extern int socketclose(int d);
extern int socket(int domain, int type, int protocol);
extern int socketstat(int s, struct stat *buf);
extern int socketioctl(int s, unsigned long cmd, ...);
extern int socketread(int s, void *buf, unsigned int len);
extern int socketreadv(int s, const struct iovec *iov, int iovcnt);
extern int socketwrite(int s, const void *buf, unsigned int len);
extern int socketwritev(int s, const struct iovec *iov, int iovcnt);
extern int socketversion(void);
extern int sysctl(int *name, unsigned int namelen, void *oldp, size_t *oldlenp,
                  void *newp, size_t newlen);

#ifdef COMPAT_INET4
extern int naccept(int s, struct nsockaddr *addr, int *addrlen);
extern int ngetpeername(int s, struct nsockaddr *name, int *namelen);
extern int ngetsockname(int s, struct nsockaddr *name, int *namelen);
extern int nrecvfrom(int s, void *buf, size_t len, int flags,
                     struct nsockaddr *from, int *fromlenaddr);
extern int nrecvmsg(int s, struct nmsghdr *msg, int flags);
extern int nsendmsg(int s, struct nmsghdr *msg, int flags);
extern int sendtosm(int s, const void *buf, size_t len,
                    const void *buf1, size_t len1, struct sockaddr_in *to);
#else
extern int oaccept(int s, struct osockaddr *addr, int *addrlen);
extern int ogetpeername(int s, struct osockaddr *name, int *namelen);
extern int ogetsockname(int s, struct osockaddr *name, int *namelen);
extern int orecvfrom(int s, void *buf, size_t len, int flags,
                     struct osockaddr *from, int *fromlenaddr);
extern int orecvmsg(int s, struct omsghdr *msg, int flags);
extern int osendmsg(int s, struct omsghdr *msg, int flags);
extern int sendtosm(int s, const void *buf, size_t len,
                    const void *buf1, size_t len1, struct osockaddr_in *to);
#endif

/*
 * auxiliary functions
 */
extern int _copyerror(_kernel_oserror *e);
extern char *_inet_err(void);

/* EOF socklib.h */
@


4.2
log
@  Added a missing declaration to socklib.h
  Added EINTR detection in UDP RPC clients.
Admin:
  NFS module seems to work OK still when you press ESCAPE.


Version 5.40. Tagged as 'TCPIPLibs-5_40'
@
text
@a127 1
extern int _makecall(int swinum, _kernel_swi_regs *in, _kernel_swi_regs *out);
@


4.1
log
@Initial revision
@
text
@d51 1
@


4.1.7.1
log
@Imported from Babel
@
text
@@
