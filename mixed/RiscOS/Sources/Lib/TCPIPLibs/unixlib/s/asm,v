head	1.5;
access;
symbols
	TCPIPLibs-5_66:1.5
	TCPIPLibs-5_65:1.5
	TCPIPLibs-5_64:1.5
	TCPIPLibs-5_63:1.5
	TCPIPLibs-5_62:1.5
	TCPIPLibs-5_61:1.5
	TCPIPLibs-5_60:1.5
	TCPIPLibs-5_59:1.5
	TCPIPLibs-5_58:1.5
	TCPIPLibs-5_57:1.5
	TCPIPLibs-5_56:1.5
	TCPIPLibs-5_55:1.5
	TCPIPLibs-5_54:1.5
	TCPIPLibs-5_53:1.5
	TCPIPLibs-5_52:1.5
	TCPIPLibs-5_51:1.5
	TCPIPLibs-5_50:1.5
	TCPIPLibs-5_49:1.5
	RO_5_07:1.5
	TCPIPLibs-5_48:1.5
	TCPIPLibs-5_47:1.5
	TCPIPLibs-5_46:1.5
	TCPIPLibs-5_45:1.5
	TCPIPLibs-5_44:1.4
	TCPIPLibs-5_43:1.4
	TCPIPLibs-5_42:1.4
	TCPIPLibs-5_41:1.4
	TCPIPLibs-5_40:1.4
	TCPIPLibs-5_39:1.4
	dellis_autobuild_BaseSW:1.4
	TCPIPLibs-5_38:1.4
	TCPIPLibs-5_37:1.4
	TCPIPLibs-5_36:1.4
	sbrodie_sedwards_16Mar2000:1.4
	TCPIPLibs-5_35:1.4
	TCPIPLibs-5_34:1.4
	TCPIPLibs-5_33:1.3
	TCPIPLibs-5_32:1.3
	TCPIPLibs-5_31:1.2
	dcotton_autobuild_BaseSW:1.4
	TCPIPLibs-5_30:1.2
	TCPIPLibs-5_29:1.2
	TCPIPLibs-5_28:1.2
	TCPIPLibs-5_27:1.1;
locks; strict;
comment	@# @;


1.5
date	2003.01.07.18.58.26;	author kbracey;	state Exp;
branches;
next	1.4;

1.4
date	99.12.02.13.42.04;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	99.11.29.12.39.11;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	99.07.21.12.10.44;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	99.07.19.12.40.36;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Addition of 1000 base T and fibre magic constant to DCI spec.
Addition of support for HAL timers
Removed a lingering __P in the resolver header file (and while we're
at it all the others).
Added missing open bracket to vn_opn,reported by D.Ellis.

Version 5.45. Tagged as 'TCPIPLibs-5_45'
@
text
@; Copyright 1999 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:APCS.<APCS>

        EXPORT  _get_t0_count
        EXPORT  _get_hal_t0_count

        AREA    |Asm$$Code|, CODE, READONLY

sb      RN      9
SB      RN      9

_get_t0_count
        MOV     ip, lr
        [ {CONFIG}<>26
        MRS     r2, CPSR
        ]
        SWI     XOS_EnterOS             ; Must be in SVC mode to peek IOC/IOMD
        MOV     r3,#IOC
; Shut off interrupts (briefly) to ensure an atomic read of these
; silly hardware registers.
        [ {CONFIG}=26
        TEQP    pc,#I_bit :OR: SVC_mode
        |
        MRS     r0, CPSR
        ORR     r0, r0, #I32_bit
        MSR     CPSR_c, r0              ; Disable interrupts
        ]
        STRB    r3,[r3,#Timer0LR]
        LDRB    r1,[r3,#Timer0CL]
        LDRB    r0,[r3,#Timer0CH]
        ORR     r0,r1,r0,LSL #8
        [ {CONFIG}<>26
        MSR     CPSR_c, r2              ; Restore entry mode and irq state
        ]
        Return  ,LinkNotStacked,,ip

; unsigned long _get_hal_t0_count(uint32_t hal_sb, void * hal_fn_ptr);
;
; Call HAL_TimerReadCountdown to get current Timer 0 countdown value.
;
;   Static base value in a1
;   Pointer to HAL_TimerReadCountdown routine in a2

_get_hal_t0_count   ROUT
; Are we in USR mode?
        [ {CONFIG} = 26
        TST     lr, #3                  ; Is mode USR26?
        |
        MRS     a3, CPSR
        TST     a3, #3                  ; Is mode USR26 or USR32?
        ]
        BEQ     %FT50

; We are in SVC mode already
        FunctionEntry   sb
        MOV     sb, a1
        MOV     a1, #0                  ; We want to read timer 0
        ADR     lr, %FT01
        MOV     pc, a2                  ; Call HAL
01
        Return  sb

50
; We are in USR mode
        [ {CONFIG} = 26
        MOV     ip, lr
        ]
        SWI     XOS_EnterOS             ; Enter SVC mode
        [ {CONFIG} = 26
        STMFD   sp!,{sb, ip}
        |
        STMFD   sp!,{a3, sb}
        ]
        MOV     sb, a1
        MOV     a1, #0                  ; We want to read timer 0
        ADR     lr, %FT51
        MOV     pc, a2                  ; Call HAL
51      
        [ {CONFIG} = 26
        Return  sb                      ; Return and restore entry mode
        |
        LDMFD   sp!,{a3, sb}
        MSR     CPSR_c, a3              ; Restore entry mode
        Return  ,LinkNotStacked
        ]

        END
@


1.4
log
@  Fix to unixlib.s.asm
Detail:
  Return address was being pulled from the wrong stack!
Admin:
  Tested.

Version 5.34. Tagged as 'TCPIPLibs-5_34'
@
text
@d21 1
d24 4
d53 49
@


1.3
log
@  32-bit compatibility added.
  Makefile (for headers) exports LibraryDoc and VersionNum
Detail:
  mkveneers uses {CONFIG} to generate veneers that objasm will
    then build appropriately.
  callback code in rpclib extracted, now requires AsmUtils instead.
Admin:
  Built.

Version 5.32. Tagged as 'TCPIPLibs-5_32'
@
text
@d24 1
a24 1
        FunctionEntry "r4"
d35 3
a37 3
        MRS     r4, CPSR
        ORR     r4, r4, #I32_bit
        MSR     CPSR_c, r4              ; Disable interrupts
d44 1
a44 1
        MSR     CPSR_cf, r2             ; Restore entry mode and irq state
d46 1
a46 1
        Return  "v1"
@


1.2
log
@Disabled interrupts around peek of timer 0.

Version 5.28. Tagged as 'TCPIPLibs-5_28'
@
text
@d18 1
d24 4
a27 1
        MOV     r12,lr
d32 1
d34 5
d43 5
a47 1
        MOVS    pc,r12                  ; Will restore mode and interrupt status
@


1.1
log
@Modified gettimeofday() to return microsecond accuracy, as long as it's
running on an IOC or IOMD system.

Version 5.27. Tagged as 'TCPIPLibs-5_27'
@
text
@d24 1
a24 1
        SWI     XOS_EnterOS
d26 3
d33 1
a33 1
        MOVS    pc,r12
@
