head	4.5;
access;
symbols
	TCPIPLibs-5_66:4.5
	TCPIPLibs-5_65:4.5
	TCPIPLibs-5_64:4.5
	TCPIPLibs-5_63:4.5
	TCPIPLibs-5_62:4.5
	TCPIPLibs-5_61:4.4
	TCPIPLibs-5_60:4.4
	TCPIPLibs-5_59:4.4
	TCPIPLibs-5_58:4.4
	TCPIPLibs-5_57:4.4
	TCPIPLibs-5_56:4.4
	TCPIPLibs-5_55:4.4
	TCPIPLibs-5_54:4.4
	TCPIPLibs-5_53:4.4
	TCPIPLibs-5_52:4.4
	TCPIPLibs-5_51:4.4
	TCPIPLibs-5_50:4.4
	TCPIPLibs-5_49:4.4
	RO_5_07:4.4
	TCPIPLibs-5_48:4.4
	TCPIPLibs-5_47:4.3
	TCPIPLibs-5_46:4.3
	TCPIPLibs-5_45:4.3
	TCPIPLibs-5_44:4.3
	TCPIPLibs-5_43:4.3
	TCPIPLibs-5_42:4.3
	TCPIPLibs-5_41:4.3
	TCPIPLibs-5_40:4.3
	TCPIPLibs-5_39:4.3
	dellis_autobuild_BaseSW:4.3
	TCPIPLibs-5_38:4.3
	TCPIPLibs-5_37:4.3
	TCPIPLibs-5_36:4.3
	sbrodie_sedwards_16Mar2000:4.3
	TCPIPLibs-5_35:4.3
	TCPIPLibs-5_34:4.3
	TCPIPLibs-5_33:4.3
	TCPIPLibs-5_32:4.3
	TCPIPLibs-5_31:4.3
	dcotton_autobuild_BaseSW:4.3
	TCPIPLibs-5_30:4.3
	TCPIPLibs-5_29:4.3
	TCPIPLibs-5_28:4.3
	TCPIPLibs-5_27:4.3
	TCPIPLibs-5_26:4.3
	TCPIPLibs-5_25:4.2
	TCPIPLibs-5_24:4.1
	TCPIPLibs-5_23:4.1
	TCPIPLibs-5_22:4.1
	TCPIPLibs-5_21:4.1
	TCPIPLibs-5_20:4.1
	TCPIPLibs-5_19:4.1
	TCPIPLibs-5_18:4.1
	TCPIPLibs-5_17:4.1
	TCPIPLibs-5_16:4.1
	TCPIPLibs-5_15:4.1
	TCPIPLibs-5_14:4.1
	TCPIPLibs-5_13:4.1
	TCPIPLibs-5_12:4.1
	TCPIPLibs-5_11:4.1
	TCPIPLibs-5_10:4.1
	TCPIPLibs-5_09:4.1
	TCPIPLibs-5_08:4.1
	TCPIPLibs-5_07:4.1
	TCPIPLibs-5_06:4.1
	TCPIPLibs-5_05:4.1
	TCPIPLibs-5_04:4.1
	TCPIPLibs-5_03:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	TCPIPLibs-5_02:4.1
	TCPIPLibs-5_01:4.1
	nicke_TCPIPLibs_25-9-98:4.1
	TCPIPLibs-5_00:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	Spinner:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_19May1998_bp:4.1
	Ursula_19May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.5
date	2017.06.23.19.36.39;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	c4mD2KTyX8KE8xWz;

4.4
date	2004.07.01.18.28.06;	author bavison;	state Exp;
branches;
next	4.3;

4.3
date	99.07.15.17.26.44;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	99.07.13.10.46.43;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.28.02;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.28.02;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.5
log
@TCPIP header updates
protocols/routed.h updated from FreeBSD revision 32545, circa 1998 as is Internet 5.xx, to replace the 1993 copy that seemed to be missed in the last update.
LibraryDoc & dcistructs.h typos.
filestat.c and unixlib.h function prototype of filestat corrected to reduce warnings.

Version 5.62. Tagged as 'TCPIPLibs-5_62'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the Internet library for writing network applications in C. It may be    *
 * used freely in the creation of programs for Archimedes or Risc PC. It    *
 * should be used with Acorn's C Compiler Release 5 or later.               *
 *                                                                          *
 *                                                                          *
 * Copyright © Acorn Computers Ltd, 1996                                    *
 *                                                                          *
 ***************************************************************************/

/*
 * File:    unixlib.h
 * Purpose: Unix-like support calls to ease porting of Unix utilities
 * Author:  K Bracey
 * History: 26-Nov-96: KJB: Internet 5 release
 *          29-Jan-97: KJB: KVM functions added to header
 *          30-Mar-04: KJB: getifaddrs added
 */


/*
 * variable declarations
 */
extern const char *const sys_errlist[];
extern const int   sys_nerr;
extern char *optarg;
extern int   optind;
extern int   optopt;
extern int   opterr;
extern int   optreset;

struct ifaddrs;
struct iovec;
struct stat;
struct timeval;
struct timezone;

#ifndef kvm_t
#define kvm_t void
#endif

#include <stdio.h>  /* For __va_list */

/*
 * function prototypes
 */
extern int access(const char *path, int mode);

extern int bcmp(const void *s1, const void *s2, unsigned int length);
extern void bcopy(const void *src, void *dst, unsigned int length);
extern void bzero(void *s, unsigned int length);

extern int chdir(const char *dir);
extern int chmod(const char *path, unsigned short mode);
extern int close(int s);

extern void endpwent(void);
extern void err(int eval, const char *fmt, ...);
extern void errx(int eval, const char *fmt, ...);
extern void err_set_exit(void (*ef)(int));
extern void err_set_file(void *fp);
extern void err_set_silent(int silent);

extern int ffs(int value);
extern int filestat(const char *fname, char *type);
extern void flushinput(void);
extern void freeifaddrs(struct ifaddrs *ifa);
extern int fstat(int s, struct stat *buf);

extern int getdtablesize(void);
extern unsigned long getegid(void);
extern unsigned long geteuid(void);
extern int getgroups(int ngrps, unsigned long grparray[]);
extern int gethostname(char *name, int max_namelen);
extern int getifaddrs(struct ifaddrs **ifap);
extern char *getlogin(void);
extern int getopt(int nargc, char *const *nargv, const char *ostr);
extern char *getpass(const char *prompt);
extern long getpid(void);
extern struct passwd *getpwent(void);
extern struct passwd *getpwnam(const char *name);
extern struct passwd *getpwuid(unsigned long uid);
extern int gettimeofday(struct timeval *tv, struct timezone *tzp);
extern unsigned long getuid(void);
extern char *getvarhostname(void);
extern char *getvarusername(void);
extern char *getwd(char *buf);

extern void herror(const char *c);

extern char *index(const char *s, int c);
extern int ioctl(int s, unsigned long cmd, ...);

extern void killfile(const char *name);
extern int kvm_close(kvm_t *kd);
extern kvm_t *kvm_open(const char *uf, const char *mf, const char *sf,
                       int flag, const char *errout);
extern kvm_t *kvm_openfiles(const char *uf, const char *mf, const char *sf,
                       int flag, char *errout);
extern int kvm_read(kvm_t *kd, unsigned long kva, void *buf, size_t len);
extern char *kvm_geterr(kvm_t *kd);

extern long lseek(int d, long offset, int whence);

extern int osreadc(void);

extern int read(int s, void *buf, unsigned int nbytes);
extern int readdir(const char *path, char *buf, int len, const char *name, int offset);
extern int readv(int s, const struct iovec *iov, int iovcnt);
extern char *rindex(const char *s, int c);

extern int setpwent(void);
extern unsigned int sleep(unsigned int seconds);
extern int strcasecmp(const char *a, const char *b);
extern char *strdup(const char *s);
extern int strncasecmp(const char *a, const char *b, size_t n);
extern char *strsep(char **stringp, const char *delim);

extern int unlink(const char *path);

#ifdef __STDC__
extern void verr(int eval, const char *fmt, __va_list);
extern void verrx(int eval, const char *fmt, __va_list);
extern void vwarn(const char *fmt, __va_list);
extern void vwarnx(const char *fmt, __va_list);
#else
extern void verr(int eval, const char *fmt, int);
extern void verrx(int eval, const char *fmt, int);
extern void vwarn(const char *fmt, int);
extern void vwarnx(const char *fmt, int);
#endif

extern void warn(const char *fmt, ...);
extern void warnx(const char *fmt, ...);
extern int write(int s, const void *buf, unsigned int nbytes);
extern int writev(int s, const struct iovec *iov, int iovcnt);

extern char *xgets(char *buf);
extern void xperror(const char *s);
extern char xputchar(char ch);
extern char *xstrerror(int num);

/* EOF unixlib.h */
@


4.4
log
@  Merged in changes from Kevin's hard disc.
Detail:
  * Added remaining 1000baseT interface type #defines
  * Added getifaddrs() from newer BSD sources
Admin:
  Kevin says getifaddrs() may not be fully debugged

Retagged as 'TCPIPLibs-5_48'
@
text
@d80 1
a80 1
extern int filestat(char *fname, char *type);
@


4.3
log
@Added <bitstring.h>, a funky bitfield manipulation set of macros.
Added ffs() and sleep() to unixlib.
Added ALIGN() to <machine/param.h> - this allows CMSG_NXTHDR() to work.

Version 5.26. Tagged as 'TCPIPLibs-5_26'
@
text
@d32 1
d47 1
d82 1
d90 1
@


4.2
log
@Added err_set_silent() to unixlib err() functions.
Added strdup() to unixlib.
Added sysctlbyname() to inetlib.
All the header file changes for Internet 5.31.

Version 5.25. Tagged as 'TCPIPLibs-5_25'
@
text
@d77 1
d124 1
@


4.1
log
@Initial revision
@
text
@d75 1
d124 2
a125 1
extern int strncasecmp(const char *a, const char *b, unsigned int n);
@


4.1.7.1
log
@Imported from Babel
@
text
@@
