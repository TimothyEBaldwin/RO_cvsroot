head	4.4;
access;
symbols
	TCPIPLibs-5_66:4.4
	TCPIPLibs-5_65:4.4
	TCPIPLibs-5_64:4.4
	TCPIPLibs-5_63:4.4
	TCPIPLibs-5_62:4.4
	TCPIPLibs-5_61:4.4
	TCPIPLibs-5_60:4.4
	TCPIPLibs-5_59:4.4
	TCPIPLibs-5_58:4.4
	TCPIPLibs-5_57:4.4
	TCPIPLibs-5_56:4.4
	TCPIPLibs-5_55:4.4
	TCPIPLibs-5_54:4.4
	TCPIPLibs-5_53:4.4
	TCPIPLibs-5_52:4.4
	TCPIPLibs-5_51:4.4
	TCPIPLibs-5_50:4.4
	TCPIPLibs-5_49:4.4
	RO_5_07:4.4
	TCPIPLibs-5_48:4.4
	TCPIPLibs-5_47:4.4
	TCPIPLibs-5_46:4.4
	TCPIPLibs-5_45:4.4
	TCPIPLibs-5_44:4.4
	TCPIPLibs-5_43:4.4
	TCPIPLibs-5_42:4.4
	TCPIPLibs-5_41:4.4
	TCPIPLibs-5_40:4.4
	TCPIPLibs-5_39:4.4
	dellis_autobuild_BaseSW:4.4
	TCPIPLibs-5_38:4.4
	TCPIPLibs-5_37:4.4
	TCPIPLibs-5_36:4.4
	sbrodie_sedwards_16Mar2000:4.4
	TCPIPLibs-5_35:4.4
	TCPIPLibs-5_34:4.4
	TCPIPLibs-5_33:4.4
	TCPIPLibs-5_32:4.4
	TCPIPLibs-5_31:4.4
	dcotton_autobuild_BaseSW:4.4
	TCPIPLibs-5_30:4.4
	TCPIPLibs-5_29:4.4
	TCPIPLibs-5_28:4.4
	TCPIPLibs-5_27:4.4
	TCPIPLibs-5_26:4.4
	TCPIPLibs-5_25:4.4
	TCPIPLibs-5_24:4.4
	TCPIPLibs-5_23:4.4
	TCPIPLibs-5_22:4.3
	TCPIPLibs-5_21:4.3
	TCPIPLibs-5_20:4.3
	TCPIPLibs-5_19:4.3
	TCPIPLibs-5_18:4.3
	TCPIPLibs-5_17:4.3
	TCPIPLibs-5_16:4.3
	TCPIPLibs-5_15:4.3
	TCPIPLibs-5_14:4.3
	TCPIPLibs-5_13:4.3
	TCPIPLibs-5_12:4.3
	TCPIPLibs-5_11:4.3
	TCPIPLibs-5_10:4.3
	TCPIPLibs-5_09:4.3
	TCPIPLibs-5_08:4.3
	TCPIPLibs-5_07:4.3
	TCPIPLibs-5_06:4.3
	TCPIPLibs-5_05:4.3
	TCPIPLibs-5_04:4.3
	TCPIPLibs-5_03:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.3
	Ursula_RiscPC:4.3.0.4
	TCPIPLibs-5_02:4.3
	TCPIPLibs-5_01:4.3
	nicke_TCPIPLibs_25-9-98:4.3
	TCPIPLibs-5_00:4.3
	rthornb_UrsulaBuild-19Aug1998:4.3
	UrsulaBuild_FinalSoftload:4.3
	rthornb_UrsulaBuild-12Aug1998:4.3
	aglover_UrsulaBuild-05Aug1998:4.3
	rthornb_UrsulaBuild-29Jul1998:4.3
	rthornb_UrsulaBuild-22Jul1998:4.3
	Spinner:4.3
	Internet_5_07:4.3
	rthornb_UrsulaBuild-15Jul1998:4.3
	rthornb_UrsulaBuild-07Jul1998:4.3
	rthornb_UrsulaBuild-17Jun1998:4.3
	rthornb_UrsulaBuild-03Jun1998:4.3
	rthornb_UrsulaBuild-27May1998:4.3
	rthornb_UrsulaBuild-21May1998:4.3
	Ursula_bp:4.3
	Ursula:4.3.0.2
	Ursula_19May1998_bp:4.2
	Ursula_19May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	celkins_Internet_506:4.3
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Internet_505:4.3
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.4
date	99.07.08.15.10.37;	author kbracey;	state Exp;
branches;
next	4.3;

4.3
date	98.03.24.17.12.14;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.05.21.03.16.47;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.27.40;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.27.40;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Assorted changes from FreeBSD. Might be some slight compatibility hiccoughs
with some sources - might need to #include a bit more before <net/if.h>.

Version 5.23. Tagged as 'TCPIPLibs-5_23'
@
text
@/*
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ip.h	8.2 (Berkeley) 6/1/94
 */

#ifndef _NETINET_IP_H_
#define _NETINET_IP_H_

/*
 * Definitions for internet protocol version 4.
 * Per RFC 791, September 1981.
 */
#define IPVERSION       4

/*
 * Structure of an internet header, naked of options.
 *
 * We declare ip_len and ip_off to be short, rather than u_short
 * pragmatically since otherwise unsigned comparisons can result
 * against negative integers quite easily, and fail in subtle ways.
 */
struct ip {
#ifdef _IP_VHL
	u_int	ip_vhl	:8;		/* version << 4 | header length >> 2 */
#else
        u_int   ip_hl	:4;              /* header length */
        u_int   ip_v	:4;              /* version */
#endif
        u_int	ip_ds	:8;		/* differentiated service */
        s_int	ip_len	:16;		/* total length */
        u_short ip_id;                  /* identification */
        short   ip_off;                 /* fragment offset field */
#define IP_DF 0x4000                    /* dont fragment flag */
#define IP_MF 0x2000                    /* more fragments flag */
#define	IP_OFFMASK 0x1fff		/* mask for fragmenting bits */
        u_char  ip_ttl;                 /* time to live */
        u_char  ip_p;                   /* protocol */
        u_short ip_sum;                 /* checksum */
        struct  in_addr ip_src,ip_dst;  /* source and dest address */
};

#define ip_tos ip_ds

#ifdef _IP_VHL
#define	IP_MAKE_VHL(v, hl)	((v) << 4 | (hl))
#define	IP_VHL_HL(vhl)		((vhl) & 0x0f)
#define	IP_VHL_V(vhl)		((vhl) >> 4)
#define	IP_VHL_BORING		0x45
#endif

#define IP_MAXPACKET    65535           /* maximum packet size */

/*
 * Definitions for IP type of service (ip_tos)
 */
#define	IPTOS_LOWDELAY		0x10
#define	IPTOS_THROUGHPUT	0x08
#define	IPTOS_RELIABILITY	0x04
#define	IPTOS_MINCOST		0x02

/*
 * Definitions for IP precedence (also in ip_tos) (hopefully unused)
 */
#define	IPTOS_PREC_NETCONTROL		0xe0
#define	IPTOS_PREC_INTERNETCONTROL	0xc0
#define	IPTOS_PREC_CRITIC_ECP		0xa0
#define	IPTOS_PREC_FLASHOVERRIDE	0x80
#define	IPTOS_PREC_FLASH		0x60
#define	IPTOS_PREC_IMMEDIATE		0x40
#define	IPTOS_PREC_PRIORITY		0x20
#define	IPTOS_PREC_ROUTINE		0x00

/*
 * New Differentiated Services field values (RFC 2474 et al)
 */
#define	IPDS_CS0		0x00	/* Class Selector (RFC 2474) */
#define	IPDS_CS1		0x20
#define	IPDS_CS2		0x40
#define	IPDS_CS3		0x60
#define	IPDS_CS4		0x80
#define	IPDS_CS5		0xa0
#define	IPDS_CS6		0xc0
#define	IPDS_CS7		0xe0
#define	IPDS_AF11		0x28	/* Assured Forwarding (RFC 2597) */
#define	IPDS_AF12		0x30
#define	IPDS_AF13		0x38
#define	IPDS_AF21		0x48
#define	IPDS_AF22		0x50
#define	IPDS_AF23		0x58
#define	IPDS_AF31		0x68
#define	IPDS_AF32		0x70
#define	IPDS_AF33		0x78
#define	IPDS_AF41		0x88
#define	IPDS_AF42		0x90
#define	IPDS_AF43		0x98
#define	IPDS_EF			0xb8	/* Expedited Forwarding (RFC 2598) */

#define IPDS_DSCP(o)		((o)&0xfc)

/*
 * Definitions for options.
 */
#define IPOPT_COPIED(o)         ((o)&0x80)
#define IPOPT_CLASS(o)          ((o)&0x60)
#define IPOPT_NUMBER(o)         ((o)&0x1f)

#define IPOPT_CONTROL           0x00
#define IPOPT_RESERVED1         0x20
#define IPOPT_DEBMEAS           0x40
#define IPOPT_RESERVED2         0x60

#define IPOPT_EOL               0               /* end of option list */
#define IPOPT_NOP               1               /* no operation */

#define IPOPT_RR                7               /* record packet route */
#define IPOPT_TS                68              /* timestamp */
#define IPOPT_SECURITY          130             /* provide s,c,h,tcc */
#define IPOPT_LSRR              131             /* loose source route */
#define IPOPT_SATID             136             /* satnet id */
#define IPOPT_SSRR              137             /* strict source route */
#define IPOPT_RA		148		/* router alert */

/*
 * Offsets to fields in options other than EOL and NOP.
 */
#define IPOPT_OPTVAL            0               /* option ID */
#define IPOPT_OLEN              1               /* option length */
#define IPOPT_OFFSET            2               /* offset within option */
#define IPOPT_MINOFF            4               /* min value of above */

/*
 * Time stamp option structure.
 */
struct  ip_timestamp {
        u_int   ipt_code:8;             /* IPOPT_TS */
        u_int   ipt_len :8;             /* size of structure (variable) */
        u_int   ipt_ptr :8;             /* index of current entry */
        u_int   ipt_flg :4;             /* flags, see below */
        u_int   ipt_oflw:4;             /* overflow counter */
        union ipt_timestamp {
                n_long  ipt_time[1];
                struct  ipt_ta {
                        struct in_addr ipt_addr;
                        n_long ipt_time;
                } ipt_ta[1];
        } ipt_timestamp;
};

/* flag bits for ipt_flg */
#define IPOPT_TS_TSONLY         0               /* timestamps only */
#define IPOPT_TS_TSANDADDR      1               /* timestamps and addresses */
#define IPOPT_TS_PRESPEC        3               /* specified modules only */

/* bits for security (not byte swapped) */
#define IPOPT_SECUR_UNCLASS     0x0000
#define IPOPT_SECUR_CONFID      0xf135
#define IPOPT_SECUR_EFTO        0x789a
#define IPOPT_SECUR_MMMM        0xbc4d
#define IPOPT_SECUR_RESTR       0xaf13
#define IPOPT_SECUR_SECRET      0xd788
#define IPOPT_SECUR_TOPSECRET   0x6bc5

/*
 * Internet implementation parameters.
 */
#define MAXTTL          255             /* maximum time to live (seconds) */
#define	IPDEFTTL	64		/* default ttl, from RFC 1340 */
#define IPFRAGTTL       60              /* time to live for frags, slowhz */
#define IPTTLDEC        1               /* subtracted when forwarding */

#define IP_MSS          576             /* default maximum segment size */

#endif
@


4.3
log
@Updated for Internet 5.05 (IGMP updates and increased SB_MAX)
@
text
@d59 1
a59 1
        u_int	ip_tos	:8;		/* type of service */
d72 2
d102 27
@


4.2
log
@Spinner branch merged.
$Id, $Source and $Header markers removed.
@
text
@d122 1
@


4.1
log
@Initial revision
@
text
@a33 1
 *	$Id: ip.h,v 1.9 1996/04/18 15:42:50 wollman Exp $
@


4.1.7.1
log
@Imported from Babel
@
text
@@
