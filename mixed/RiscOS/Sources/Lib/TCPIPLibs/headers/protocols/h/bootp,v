head	4.4;
access;
symbols
	TCPIPLibs-5_66:4.4
	TCPIPLibs-5_65:4.4
	TCPIPLibs-5_64:4.4
	TCPIPLibs-5_63:4.4
	TCPIPLibs-5_62:4.4
	TCPIPLibs-5_61:4.4
	TCPIPLibs-5_60:4.4
	TCPIPLibs-5_59:4.4
	TCPIPLibs-5_58:4.4
	TCPIPLibs-5_57:4.4
	TCPIPLibs-5_56:4.4
	TCPIPLibs-5_55:4.4
	TCPIPLibs-5_54:4.4
	TCPIPLibs-5_53:4.4
	TCPIPLibs-5_52:4.4
	TCPIPLibs-5_51:4.4
	TCPIPLibs-5_50:4.4
	TCPIPLibs-5_49:4.4
	RO_5_07:4.4
	TCPIPLibs-5_48:4.4
	TCPIPLibs-5_47:4.4
	TCPIPLibs-5_46:4.4
	TCPIPLibs-5_45:4.4
	TCPIPLibs-5_44:4.4
	TCPIPLibs-5_43:4.4
	TCPIPLibs-5_42:4.4
	TCPIPLibs-5_41:4.4
	TCPIPLibs-5_40:4.4
	TCPIPLibs-5_39:4.4
	dellis_autobuild_BaseSW:4.4
	TCPIPLibs-5_38:4.4
	TCPIPLibs-5_37:4.4
	TCPIPLibs-5_36:4.4
	sbrodie_sedwards_16Mar2000:4.4
	TCPIPLibs-5_35:4.4
	TCPIPLibs-5_34:4.4
	TCPIPLibs-5_33:4.4
	TCPIPLibs-5_32:4.4
	TCPIPLibs-5_31:4.4
	dcotton_autobuild_BaseSW:4.4
	TCPIPLibs-5_30:4.4
	TCPIPLibs-5_29:4.4
	TCPIPLibs-5_28:4.4
	TCPIPLibs-5_27:4.4
	TCPIPLibs-5_26:4.4
	TCPIPLibs-5_25:4.4
	TCPIPLibs-5_24:4.4
	TCPIPLibs-5_23:4.4
	TCPIPLibs-5_22:4.4
	TCPIPLibs-5_21:4.4
	TCPIPLibs-5_20:4.4
	TCPIPLibs-5_19:4.4
	TCPIPLibs-5_18:4.4
	TCPIPLibs-5_17:4.4
	TCPIPLibs-5_16:4.4
	TCPIPLibs-5_15:4.4
	TCPIPLibs-5_14:4.4
	TCPIPLibs-5_13:4.4
	TCPIPLibs-5_12:4.4
	TCPIPLibs-5_11:4.4
	TCPIPLibs-5_10:4.4
	TCPIPLibs-5_09:4.4
	TCPIPLibs-5_08:4.4
	TCPIPLibs-5_07:4.4
	TCPIPLibs-5_06:4.4
	TCPIPLibs-5_05:4.4
	TCPIPLibs-5_04:4.4
	TCPIPLibs-5_03:4.4
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.6
	TCPIPLibs-5_02:4.4
	TCPIPLibs-5_01:4.3
	nicke_TCPIPLibs_25-9-98:4.2
	TCPIPLibs-5_00:4.3
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	Spinner:4.2
	Internet_5_07:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.4
	Ursula_19May1998_bp:4.2
	Ursula_19May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	celkins_Internet_506:4.2
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Internet_505:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.4
date	98.10.15.14.21.22;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	98.08.21.16.51.27;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.05.21.03.16.58;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.27.41;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.27.41;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Comments about cookie macro amended to be more accurate.
Fixed macro names in DHCP header file.

Version 5.02. Tagged as 'TCPIPLibs-5_02'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Copyright (c) 1989 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.1  95/01/11  10:18:56  kwelton
 * Initial revision
 *
 * Revision 1.1  89/10/03  17:21:33  keith
 * Added BOOTP diskless identity, and improved net mask request
 *
 */

/*
 * This describes an implementation of the BOOTP (RFC951) protocol
 * for internet bootstrapping.
 *
 * There is only one UDP packet format, used by both client and server.
 * The client should zero all unused entries.
 */

#define CHADDR_MAX      16
#define SNAME_MAX       64
#define FILE_MAX        128
#define VEND_MAX        64

typedef struct { /* C = Must be set by client,  c = may be set by client */
                 /* S = Must be set by server,  s = may be set by server */
                 /* G = Must be set by gateway, g = may be set by gateway*/
  u_char  op,                 /* C S - BOOTREQUEST or BOOTREPLY */
          htype,              /* C   - Hardware type */
          hlen,               /* C   - Length of hardware address */
          hops;               /*  g  - Hop count (used by gateways) */
  u_long  xid;                /* C   - Transaction id */
  u_short secs,               /* C   - Seconds elapsed since start of boot */
          unused;
  u_long  ciaddr,             /* c   - Client  IP address (if known by client) */
          yiaddr,             /*   S - Client  IP address */
          siaddr,             /*   S - Server  IP address */
          giaddr;             /*  gs - Gateway IP address */
  u_char  chaddr[CHADDR_MAX]; /* C   - Client hardware address */
  u_char  sname[SNAME_MAX];   /* c S - Server hostname name */
  u_char  file[FILE_MAX];     /* c S - File name to boot */
  u_char  vend[VEND_MAX];     /* c s - vendor specific */
} BOOTP;

#define BOOTREQUEST     1
#define BOOTREPLY       2

#define ETHERNET_TYPE   1       /* ethernet hardware type */
#define ETHERNET_LEN    6       /* ethernet hardware byte length */

/* 19980821: sbrodie: The comment used to say "network byte order" but
 * this is wrong.  The value stated here is in HOST byte order.
 * This "confused" the Internet 5.0x modules' vendor block validation code.
 * See TCP/IP Illus. for docs.  Fake IP address is 99.130.83.99
 */
#define VENDOR_COOKIE	0x63825363 /* host byte order */

#define VENDOR_PAD		0	/* Length=0 */
#define VENDOR_NETMASK  	1	/* Length=4 */
#define VENDOR_TIMEOFFSET	2	/* Length=4 */
#define VENDOR_GATEWAY		3
#define VENDOR_TIMESERVER	4
#define VENDOR_IEN116SERVER	5
#define VENDOR_NAMESERVER	6
#define VENDOR_LOGSERVER	7
#define VENDOR_QUOTESERVER	8
#define VENDOR_LPRSERVER	9
#define VENDOR_IMPRESSSERVER	10
#define VENDOR_RLPSERVER	11
#define VENDOR_HOSTNAME		12
#define VENDOR_BOOTFILESIZE	13
#define VENDOR_END		255

/* EOF bootp.h */
@


4.3
log
@  Incorrect comment regarding bytesex of VENDOR_COOKIE macro fixed.
Detail:
  The comment used to claim the macro was in  "network byte order" but
  this is wrong.  The value stated here is in HOST byte order for
  little-endian configurations.  This "confuses" the Internet 5
  module's bootp vendor block cookie validation code.
Admin:
  This change has no implications for software using this header as
  no declarations have changed - only the comment correction.
@
text
@d67 2
a68 3
 * this is wrong.  The value stated here is in HOST byte order for
 * little-endian configurations.  This "confuses" the Internet 5
 * module's bootp vendor block validation code.
d70 1
a70 1
 */ 
@


4.2
log
@Spinner branch merged.
$Id, $Source and $Header markers removed.
@
text
@d66 7
a72 1
#define VENDOR_COOKIE	0x63825363 /* network byte order */
@


4.1
log
@Initial revision
@
text
@a15 3
 * $Header: /ax/networking:include/sys/bootp.h:networking  1.1  $
 * $Source: /ax/networking:include/sys/bootp.h: $
 *
@


4.1.7.1
log
@Imported from Babel
@
text
@@
