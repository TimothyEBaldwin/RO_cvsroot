head	4.7;
access;
symbols
	TCPIPLibs-5_66:4.7
	TCPIPLibs-5_65:4.7
	TCPIPLibs-5_64:4.7
	TCPIPLibs-5_63:4.7
	TCPIPLibs-5_62:4.7
	TCPIPLibs-5_61:4.7
	TCPIPLibs-5_60:4.7
	TCPIPLibs-5_59:4.7
	TCPIPLibs-5_58:4.7
	TCPIPLibs-5_57:4.7
	TCPIPLibs-5_56:4.7
	TCPIPLibs-5_55:4.7
	TCPIPLibs-5_54:4.7
	TCPIPLibs-5_53:4.7
	TCPIPLibs-5_52:4.7
	TCPIPLibs-5_51:4.7
	TCPIPLibs-5_50:4.7
	TCPIPLibs-5_49:4.7
	RO_5_07:4.7
	TCPIPLibs-5_48:4.7
	TCPIPLibs-5_47:4.7
	TCPIPLibs-5_46:4.7
	TCPIPLibs-5_45:4.7
	TCPIPLibs-5_44:4.7
	TCPIPLibs-5_43:4.7
	TCPIPLibs-5_42:4.7
	TCPIPLibs-5_41:4.7
	TCPIPLibs-5_40:4.7
	TCPIPLibs-5_39:4.7
	dellis_autobuild_BaseSW:4.7
	TCPIPLibs-5_38:4.7
	TCPIPLibs-5_37:4.7
	TCPIPLibs-5_36:4.7
	sbrodie_sedwards_16Mar2000:4.7
	TCPIPLibs-5_35:4.7
	TCPIPLibs-5_34:4.7
	TCPIPLibs-5_33:4.7
	TCPIPLibs-5_32:4.7
	TCPIPLibs-5_31:4.7
	dcotton_autobuild_BaseSW:4.7
	TCPIPLibs-5_30:4.7
	TCPIPLibs-5_29:4.7
	TCPIPLibs-5_28:4.7
	TCPIPLibs-5_27:4.7
	TCPIPLibs-5_26:4.7
	TCPIPLibs-5_25:4.7
	TCPIPLibs-5_24:4.7
	TCPIPLibs-5_23:4.7
	TCPIPLibs-5_22:4.7
	TCPIPLibs-5_21:4.6
	TCPIPLibs-5_20:4.6
	TCPIPLibs-5_19:4.6
	TCPIPLibs-5_18:4.6
	TCPIPLibs-5_17:4.6
	TCPIPLibs-5_16:4.6
	TCPIPLibs-5_15:4.6
	TCPIPLibs-5_14:4.6
	TCPIPLibs-5_13:4.6
	TCPIPLibs-5_12:4.6
	TCPIPLibs-5_11:4.6
	TCPIPLibs-5_10:4.5
	TCPIPLibs-5_09:4.5
	TCPIPLibs-5_08:4.3
	TCPIPLibs-5_07:4.3
	TCPIPLibs-5_06:4.3
	TCPIPLibs-5_05:4.3
	TCPIPLibs-5_04:4.3
	TCPIPLibs-5_03:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	TCPIPLibs-5_02:4.3
	TCPIPLibs-5_01:4.2
	nicke_TCPIPLibs_25-9-98:4.1
	TCPIPLibs-5_00:4.2
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	Spinner:4.1
	Internet_5_07:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.4
	Ursula_19May1998_bp:4.1
	Ursula_19May1998:4.1.0.8
	rthornb_UrsulaBuild_01May1998:4.1
	celkins_Internet_506:4.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Internet_505:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.7
date	99.07.05.11.39.07;	author kbracey;	state Exp;
branches;
next	4.6;

4.6
date	99.03.30.11.12.04;	author sbrodie;	state Exp;
branches;
next	4.5;

4.5
date	99.03.25.14.36.49;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	99.03.23.11.28.45;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	98.10.15.14.21.22;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	98.09.04.15.57.19;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.27.42;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.27.42;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.7
log
@Lots of options added to <protocols/dhcp.h>

Version 5.22. Tagged as 'TCPIPLibs-5_22'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This describes an implementation of the DHCP (RFC2131, RFC2132) protocol
 * for internet bootstrapping.
 *
 * There is only one UDP packet format, used by both client and server.
 * The client should zero all unused entries.
 */

#define DHCP_server     67
#define DHCP_client     68

#define CHADDR_MAX      16
#define SNAME_MAX       64
#define FILE_MAX        128
#define OPTIONS_MAX     312

typedef struct { /* C = Must be set by client,  c = may be set by client */
                 /* S = Must be set by server,  s = may be set by server */
                 /* G = Must be set by gateway, g = may be set by gateway*/
  u_char  op,                 /* C S - BOOTREQUEST or BOOTREPLY */
          htype,              /* C   - Hardware type */
          hlen,               /* C   - Length of hardware address */
          hops;               /*  g  - Hop count (used by gateways) */
  u_long  xid;                /* C   - Transaction id */
  u_short secs,               /* C   - Seconds elapsed since start of boot */
          flags;
  u_long  ciaddr,             /* c   - Client  IP address (if known by client) */
          yiaddr,             /*   S - Client  IP address */
          siaddr,             /*   S - Server  IP address */
          giaddr;             /*  gs - Gateway IP address */
  u_char  chaddr[CHADDR_MAX]; /* C   - Client hardware address */
  u_char  sname[SNAME_MAX];   /* c S - Server hostname name */
  u_char  file[FILE_MAX];     /* c S - File name to boot */
  u_char  options[OPTIONS_MAX]; /* c s - optional parameters */
} BOOTP;

/* This structure is the parameter for the SIOCGWHOIAMD ioctl */
typedef struct ifdhcpreq {
  struct ifreq ifr;
  BOOTP packet;
} ifdhcpreq;

#define BOOTREQUEST     1
#define BOOTREPLY       2

#define DHCPDISCOVER    1
#define DHCPOFFER       2
#define DHCPREQUEST     3
#define DHCPDECLINE     4
#define DHCPACK         5
#define DHCPNAK         6
#define DHCPRELEASE     7
#define DHCPINFORM      8

#define ETHERNET_TYPE   1       /* ethernet hardware type */
#define TOKENRING_TYPE  4       /* token ring hardware type */
#define IEEE802_TYPE    6       /* IEEE 802 hardware type */
#define SERIAL_TYPE     20      /* serial line hardware type */

#define ETHERNET_LEN    6       /* ethernet hardware byte length */

/* 19980821: sbrodie: The comment used to say "network byte order" but
 * this is wrong.  The value stated here is in HOST byte order.
 * This "confused" the Internet 5.0x modules' vendor block validation code.
 * See TCP/IP Illus. for docs.  Fake IP address is 99.130.83.99
 */
#define OPTIONS_COOKIE	0x63825363 /* host byte order */

/* RFC 1497 Vendor Extensions */
#define OPTION_PAD		0	/* Pad Option */
#define OPTION_NETMASK  	1       /* Subnet Mask */
#define OPTION_TIMEOFFSET	2       /* Time Offset */
#define OPTION_ROUTER		3       /* Router Option */
#define OPTION_TIMESERVER	4       /* Time Server Option */
#define OPTION_IEN116SERVER	5       /* Name Server Option */
#define OPTION_NAMESERVER	6       /* Domain Name Server Option */
#define OPTION_LOGSERVER	7       /* Log Server Option */
#define OPTION_COOKIESERVER	8       /* Cookie Server Option */
#define OPTION_LPRSERVER	9       /* LPR Server Option */
#define OPTION_IMPRESSSERVER	10      /* Impress Server Option */
#define OPTION_RESOURCESERVER	11      /* Resource Location Server Option */
#define OPTION_HOSTNAME		12      /* Host Name Option */
#define OPTION_BOOTFILESIZE	13      /* Boot File Size Option */
#define OPTION_MERITDUMPFILE    14      /* Merit Dump File */
#define OPTION_DOMAINNAME       15      /* Domain Name */
#define OPTION_SWAPSERVER       16      /* Swap Server */
#define OPTION_ROOTPATH         17      /* Root Path */
#define OPTION_EXTENSIONSPATH   18      /* Extensions Path */

/* IP Layer Parameters per Host */
#define OPTION_IPFORWARDING     19      /* IP Forwarding Enable/Disable Option */
#define OPTION_SOURCEROUTING    20      /* Non-Local Source Routing Enable/Disable Option */
#define OPTION_POLICYFILTER     21      /* Policy Filter Option */
#define OPTION_REASSEMBLYSIZE   22      /* Maximum Datagram Reassembly Size */
#define OPTION_IPTTL            23      /* Default IP Time-to-live */
#define OPTION_PATHMTUTIMEOUT   24      /* Path MTU Aging Timeout Option */
#define OPTION_PATHMTUTABLE     25      /* Path MTU Plateau Table Option */

/* IP Layer Parameters per Interface */
#define OPTION_INTERFACEMTU     26      /* Interface MTU Option */
#define OPTION_SUBNETSARELOCAL  27      /* All Subnets are Local Option */
#define OPTION_BROADCASTADDRESS 28      /* Broadcast Address Option */
#define OPTION_ICMPMASKDISCOVERY 29     /* Perform Mask Discovery Option */
#define OPTION_ICMPMASKSUPPLIER 30      /* Mask Supplier Option */
#define OPTION_ROUTERDISCOVERY  31      /* Perform Router Discovery Option */
#define OPTION_ROUTERSOLADDRESS 32      /* Router Solicitation Address Option */
#define OPTION_STATICROUTE      33      /* Static Route Option */

/* Link Layer Parameters per Interface */
#define OPTION_TRAILERENCAP     34      /* Trailer Encapsulation Option */
#define OPTION_ARPTIMEOUT       35      /* ARP Cache Timeout Option */
#define OPTION_ETHERNETENCAP    36      /* Ethernet Encapsulation Option */

/* TCP Parameters */
#define OPTION_TCPTTL           37      /* TCP Default TTL Option */
#define OPTION_TCPKEEPALIVE     38      /* TCP Keepalive Interval Option */
#define OPTION_TCPKEEPALIVEGRBG 39      /* TCP Keepalive Garbage Option */

/* Application and Service Parameters */
#define OPTION_NISDOMAIN        40      /* Network Information Service Domain Option */
#define OPTION_NISSERVERS       41      /* Network Information Servers Option */
#define OPTION_NTPSERVERS       42      /* Network Time Protocol Servers Option */
#define OPTION_VENDORSPECIFIC   43      /* Vendor Specific Information */
#define OPTION_NBNSSERVERS      44      /* NetBIOS over TCP/IP Name Server Option */
#define OPTION_NBDDSERVERS      45      /* NetBIOS over TCP/IP Datagram Distribution Server Option */
#define OPTION_NBNODETYPE       46      /* NetBIOS over TCP/IP Node Type Option */
#define OPTION_NBSCOPE          47      /* NetBIOS over TCP/IP Scope Option */
#define OPTION_XFONTSERVERS     48      /* X Window System Font Server Option */
#define OPTION_XDISPLAYMANAGERS 49      /* X Window System Display Manager Option */

/* DHCP Extensions */
#define OPTION_REQUESTEDIPADDR  50      /* Requested IP Address */
#define OPTION_IPADDRLEASETIME  51      /* IP Address Lease Time */
#define OPTION_OPTIONOVERLOAD   52      /* Option Overload */
#define OPTION_DHCPMESSAGETYPE  53      /* DHCP Message Type */
#define OPTION_SERVERIDENTIFIER 54      /* Server Identifier */
#define OPTION_PARAMETERREQLIST 55      /* Parameter Request List */
#define OPTION_MESSAGE          56      /* Message */
#define OPTION_MAXDHCPLENGTH    57      /* Maximum DHCP Message Size */
#define OPTION_RENEWALTIME      58      /* Renewal (T1) Time Value */
#define OPTION_REBINDINGTIME    59      /* Rebinding (T2) Time Value */
#define OPTION_CLASSIDENTIFIER  60      /* Vendor class identifier */
#define OPTION_CLIENTIDENTIFER  61      /* Client-identifier */

/* More application and Service Parameters (RFC2132) */
#define OPTION_NISPLUSDOMAIN    64      /* Client's NIS+ domain */
#define OPTION_NISPLUSSERVERS   65      /* Available NIS+ servers */
#define OPTION_TFTPSERVER       66      /* Used when sname field is overloaded */
#define OPTION_BOOTFILENAME     67      /* Used when file field is overloaded */
#define OPTION_MOBILEHOMEAGENT  68      /* Mobile IP Home Agent (list of IP addresses) */
#define OPTION_SMTPSERVERS      69      /* SMTP servers (list of IP addresses) */
#define OPTION_POP3SERVER       70      /* POP3 servers */
#define OPTION_NNTPSERVER       71      /* News servers */
#define OPTION_WWWSERVER        72      /* Web servers */
#define OPTION_FINGERSERVER     73      /* Finger servers */
#define OPTION_IRCSERVER        74      /* IRC server */
#define OPTION_STREETTALK       75      /* StreetTalk servers */
#define OPTION_STREETTALKDIR    76      /* StreetTalk directory assistance server */

/* More options added since RFC 2132 */
#define OPTION_USERCLASS	77	/* User Class Information */
#define OPTION_DIRECTORYAGENT	78	/* Directory Agent */
#define OPTION_SERVICESCOPE	79	/* Service Scope */
#define OPTION_NAMINGAUTHORITY	80	/* Naming Authority */
#define OPTION_CLIENTFQDN	81	/* Client FQDN (Fully Qualified Domain Name) */
#define OPTION_AGENTCIRCUITID	82	/* Agent Circuit ID */
#define OPTION_AGENTREMOTEID	83	/* Agent Remote ID */
#define OPTION_AGENTSUBNETMASK	84	/* Agent Subnet Mask */
#define OPTION_NDSSERVERS	85	/* NDS Servers (Novell Directory Services - RFC2241) */
#define OPTION_NDSTREENAME	86	/* NDS Tree Name */
#define OPTION_NDSCONTEXT	87	/* NDS Context */
#define OPTION_POSIXTIMEZONE	88	/* IEEE 1003.1 POSIX Timezone */
#define OPTION_FQDN		89	/* FQDNs instead of IP addresses in other options */
#define OPTION_AUTHENTICATION	90	/* DHCP authentication */
#define OPTION_VINESSERVERS	91	/* VINES TCP/IP servers */
#define OPTION_SERVERPRIORITY	92	/* DHCP Server Selection */
#define OPTION_SYSTEMARCH	93	/* Client System Architecture */
#define OPTION_NETWORKDEVICE	94	/* Client Network Device Interface */
#define OPTION_LDAPSERVERS	95	/* LDAP server URLs */
#define OPTION_IPV6ROUTERS	96	/* IPv6 Router 6over4 Address */
#define OPTION_GUID		97	/* Net PC 128-bit GUID */
#define OPTION_UAPSERVERS	98	/* User Authentication Protocol server URLs */
#define OPTION_PRINTERNAMES	100	/* Printer names */
#define OPTION_MDHCPSERVER	101	/* MDHCP Server Multicast Address */
#define OPTION_IPXCOMPATIBILITY	110	/* IPX Compatibility Sub-Options */
#define OPTION_NETINFOSERVER	112	/* NetInfo Parent Server Address */
#define OPTION_NETINFOSERVERTAG	113	/* NetInfo Parent Server Tag */
#define OPTION_URL		114	/* URL */
#define OPTION_FAILOVER		115	/* DHCP Failover protocol */
#define OPTION_AUTOCONFIGURE	116	/* Stateless Auto-Configuration (RFC 2563) */

/* Extended options */
#define OPTION_EXTENSIONREQLIST	126	/* Extended option code parameter request list */
#define OPTION_EXTENSION	127	/* Extended two-octet option code */

#define OPTION_END		255	/* End Option */

/* EOF dhcp.h */
@


4.6
log
@  Migrated some option definitions frmo Internet module.
  Added remaining options from RFC2132.
Detail:
  The Internet module contained the DHCP option numbers for various
    extensions defined in RFC2132.  The protocols/dhcp.h header file
    now holds those, plus the remaining missing ones from the RFC.
Admin:
  Built Internet 5.21 against new header file to verify it still works.
@
text
@d156 1
a156 1
#define OPTION_CLASSIDENTIFIER  60      /* Class-identifier */
d173 36
@


4.5
log
@  Support for DHCP module.
Detail:
  Added a new ioctl (SIOCGWHOIAMD) for the private use of the
    DHCP module.
  Defined structure for ioctl data in protocols/dhcp.h.  The
    "ifr_flags" field is the union part that is used to pass
    action flags to Internet.
  Updated comment that protocol is defined by RFC2131 & RFC2132.
Admin:
  Software which includes protocols/dhcp.h may need modification
    to ensure that net/if.h is included too, as it requires a
    definition of struct ifreq.  No software in Renaissance is
    believed to be affected currently.
  Required by Internet 5.20
    (Internet-5_20 in RiscOS/Sources/Networking/AUN/Internet)
  Required by DHCP 0.00
    (DHCP-0_00 in RiscOS/Sources/Networking/DHCP)


Version 5.09. Tagged as 'TCPIPLibs-5_09'
@
text
@d159 15
d176 1
a176 1
/* EOF bootp.h */
@


4.4
log
@  Added extra DHCP message type.
  Correct spelling of macro
Detail:
  OPTION_DHCPMESSAGETYPE now spelt correctly! (not "DCHP")
  DHCPINFORM message type added for completeness as per RFC2131.
Admin:
  Not tagged yet.
@
text
@d16 1
a16 1
 * This describes an implementation of the DHCP (RFC1531) protocol
d50 6
@


4.3
log
@Comments about cookie macro amended to be more accurate.
Fixed macro names in DHCP header file.

Version 5.02. Tagged as 'TCPIPLibs-5_02'
@
text
@d61 1
d143 1
a143 1
#define OPTION_DCHPMESSAGETYPE  53      /* DHCP Message Type */
@


4.2
log
@Fixed broken macro definitions & broken comments and added the same comment
about byte-order of the magic cookie as was previously put in bootp.h.
@
text
@d29 1
a29 1
#define VEND_MAX        312
d70 2
a71 3
 * this is wrong.  The value stated here is in HOST byte order for
 * little-endian configurations.  This "confuses" the Internet 5
 * module's dhcp options block validation code.
@


4.1
log
@Initial revision
@
text
@d69 7
a75 1
#define OPTIONS_COOKIE	0x63825363 /* network byte order */
@


4.1.7.1
log
@Imported from Babel
@
text
@@
