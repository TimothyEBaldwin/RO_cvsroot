head	4.15;
access;
symbols
	TCPIPLibs-5_66:4.15
	TCPIPLibs-5_65:4.15
	TCPIPLibs-5_64:4.15
	TCPIPLibs-5_63:4.15
	TCPIPLibs-5_62:4.15
	TCPIPLibs-5_61:4.14
	TCPIPLibs-5_60:4.14
	TCPIPLibs-5_59:4.13
	TCPIPLibs-5_58:4.13
	TCPIPLibs-5_57:4.13
	TCPIPLibs-5_56:4.13
	TCPIPLibs-5_55:4.13
	TCPIPLibs-5_54:4.12
	TCPIPLibs-5_53:4.11
	TCPIPLibs-5_52:4.11
	TCPIPLibs-5_51:4.11
	TCPIPLibs-5_50:4.11
	TCPIPLibs-5_49:4.11
	RO_5_07:4.11
	TCPIPLibs-5_48:4.11
	TCPIPLibs-5_47:4.10
	TCPIPLibs-5_46:4.10
	TCPIPLibs-5_45:4.10
	TCPIPLibs-5_44:4.9
	TCPIPLibs-5_43:4.8
	TCPIPLibs-5_42:4.8
	TCPIPLibs-5_41:4.8
	TCPIPLibs-5_40:4.8
	TCPIPLibs-5_39:4.8
	dellis_autobuild_BaseSW:4.8
	TCPIPLibs-5_38:4.8
	TCPIPLibs-5_37:4.8
	TCPIPLibs-5_36:4.8
	sbrodie_sedwards_16Mar2000:4.8
	TCPIPLibs-5_35:4.8
	TCPIPLibs-5_34:4.8
	TCPIPLibs-5_33:4.8
	TCPIPLibs-5_32:4.8
	TCPIPLibs-5_31:4.8
	dcotton_autobuild_BaseSW:4.8
	TCPIPLibs-5_30:4.8
	TCPIPLibs-5_29:4.8
	TCPIPLibs-5_28:4.8
	TCPIPLibs-5_27:4.8
	TCPIPLibs-5_26:4.8
	TCPIPLibs-5_25:4.8
	TCPIPLibs-5_24:4.8
	TCPIPLibs-5_23:4.8
	TCPIPLibs-5_22:4.8
	TCPIPLibs-5_21:4.8
	TCPIPLibs-5_20:4.8
	TCPIPLibs-5_19:4.8
	TCPIPLibs-5_18:4.7
	TCPIPLibs-5_17:4.6
	TCPIPLibs-5_16:4.6
	TCPIPLibs-5_15:4.6
	TCPIPLibs-5_14:4.6
	TCPIPLibs-5_13:4.6
	TCPIPLibs-5_12:4.6
	TCPIPLibs-5_11:4.6
	TCPIPLibs-5_10:4.6
	TCPIPLibs-5_09:4.4
	TCPIPLibs-5_08:4.4
	TCPIPLibs-5_07:4.4
	TCPIPLibs-5_06:4.4
	TCPIPLibs-5_05:4.3
	TCPIPLibs-5_04:4.3
	TCPIPLibs-5_03:4.3
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.6
	TCPIPLibs-5_02:4.3
	TCPIPLibs-5_01:4.3
	nicke_TCPIPLibs_25-9-98:4.2
	TCPIPLibs-5_00:4.2
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	Spinner:4.2
	Internet_5_07:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.4
	Ursula_19May1998_bp:4.2
	Ursula_19May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	celkins_Internet_506:4.2
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Internet_505:4.2
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Spin_merge:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.15
date	2017.06.23.19.36.30;	author rsprowson;	state Exp;
branches;
next	4.14;
commitid	c4mD2KTyX8KE8xWz;

4.14
date	2014.11.06.21.32.53;	author rsprowson;	state Exp;
branches;
next	4.13;
commitid	6qTlSascKJSNDaXx;

4.13
date	2012.05.18.19.42.21;	author rsprowson;	state Exp;
branches;
next	4.12;
commitid	pzTWF1f7YDku1f5w;

4.12
date	2012.05.09.18.25.25;	author rsprowson;	state Exp;
branches;
next	4.11;
commitid	OIMPvU5fhOn2T44w;

4.11
date	2004.07.01.18.28.03;	author bavison;	state Exp;
branches;
next	4.10;

4.10
date	2003.01.07.18.58.23;	author kbracey;	state Exp;
branches;
next	4.9;

4.9
date	2002.09.30.14.00.14;	author kbracey;	state Exp;
branches;
next	4.8;

4.8
date	99.06.25.09.27.24;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	99.06.23.12.57.05;	author sbrodie;	state Exp;
branches;
next	4.6;

4.6
date	99.03.29.10.45.33;	author sbrodie;	state Exp;
branches;
next	4.5;

4.5
date	99.03.26.16.00.37;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	99.02.12.14.48.32;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	98.10.12.13.20.16;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	97.05.21.03.17.17;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.27.43;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.27.43;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.15
log
@TCPIP header updates
protocols/routed.h updated from FreeBSD revision 32545, circa 1998 as is Internet 5.xx, to replace the 1993 copy that seemed to be missed in the last update.
LibraryDoc & dcistructs.h typos.
filestat.c and unixlib.h function prototype of filestat corrected to reduce warnings.

Version 5.62. Tagged as 'TCPIPLibs-5_62'
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-C-*-
 *
 * dcistructs.h - data structures used in the DCI interface
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.11  95/10/11  12:17:56  pwain
 * Removed st_net_error from the stats structure.
 * This should have been removed a while back
 * according to Borris.
 *
 * Revision 1.10  95/09/18  13:24:06  kwelton
 * Added definitions for st_link_status (in stats structure) bits.
 *
 * Revision 1.9  95/09/07  13:00:16  kwelton
 * Added two new flags for virtual interfaces.
 *
 * Revision 1.8  95/03/21  14:10:46  kwelton
 * Added copy of Inquire flags to struct dib.  DCI version is now 4.03.
 *
 * Revision 1.7  95/03/16  14:19:39  kwelton
 * Added details of new InternetStatus service call.
 *
 * Revision 1.6  95/03/14  14:44:19  kwelton
 * DCI version is now 4.02
 *
 * Revision 1.5  95/03/01  12:12:31  kwelton
 * A few minor changes, plus the definition of the "standard" stats.
 * structure.
 *
 * Revision 1.4  95/02/03  15:27:47  kwelton
 * Added a new error number: INETERR_FILTERGONE, used by the Filter SWI
 * when a given frame type has already been claimed.
 *
 * Revision 1.3  95/01/24  16:32:26  kwelton
 * Fixed the definition of GETDCI4ERRNO, which should now cope with all
 * errors returned from a SWI.
 *
 * Revision 1.2  95/01/12  21:53:53  kwelton
 * The original scheme of returning UNIX style errors numbers as
 * an offset within an error block broke any application that was
 * looking for specific errors which effectively used to be offset
 * from zero.
 *
 * Revision 1.1  95/01/11  10:19:03  kwelton
 * Initial revision
 *
 */

#if !defined(__sys_dcistructs_h)
#define __sys_dcistructs_h

#define DCIVERSION	407

/*
 * DCI 4 service calls
 */
#ifndef Service_EnumerateNetworkDrivers
#define Service_EnumerateNetworkDrivers	0x9b
#endif
#ifndef Service_DCIDriverStatus
#define Service_DCIDriverStatus		0x9d
#endif
#ifndef Service_DCIFrameTypeFree
#define Service_DCIFrameTypeFree	0x9e
#endif
#ifndef Service_DCIProtocolStatus
#define Service_DCIProtocolStatus	0x9f
#endif

/*
 * Internet specific service calls and reason codes
 */
#ifndef Service_InternetStatus
#define Service_InternetStatus		0xb0
#endif
#ifndef InternetStatus_AddressChanged
#define InternetStatus_AddressChanged	0x00
#endif
#ifndef InternetStatus_NetMapChanged
#define InternetStatus_NetMapChanged    0x01
#endif
#ifndef InternetStatus_InterfaceUpDown
#define InternetStatus_InterfaceUpDown  0x02
#endif
#ifndef InternetStatus_DynamicBootStart
#define InternetStatus_DynamicBootStart 0x03
#endif
#ifndef InternetStatus_DynamicBootReply
#define InternetStatus_DynamicBootReply 0x04
#endif
#ifndef InternetStatus_DynamicBootOffer
#define InternetStatus_DynamicBootOffer 0x05
#endif
#ifndef InternetStatus_DynamicBootRequest
#define InternetStatus_DynamicBootRequest 0x06
#endif
#ifndef InternetStatus_DynamicBootInform
#define InternetStatus_DynamicBootInform 0x07
#endif
#ifndef InternetStatus_DuplicateIPAddress
#define InternetStatus_DuplicateIPAddress 0x08
#endif

/*
 * official DCI4 error block.
 *
 * the bottom 128 numbers are used to hold UNIX style error
 * numbers, e.g. 12 = ENOMEM, 65 = EHOSTUNREACH.  the top
 * 128 numbers hold various special error numbers
 *
 * 950112 KWelton
 *
 * Of course, the problem with this scheme is that applications
 * are used to the old (pre-DCI4) internet modules which returned
 * a limited set of error numbers, offset from zero.  For the time
 * being, SETDCI4ERRNO should also offset numbers from zero,
 * GETDCI4ERRNO can already cope with both offsets.
 *
 * In addition, GETDCI4ERRNO should not convert Internet specific
 * errors to UNIX style error numbers.
 */
#define DCI4ERRORBLOCK		(0x20e00)
#define SPECIFICOFFSET		(0x80)
#define SPECIFICERRORBASE	(DCI4ERRORBLOCK + SPECIFICOFFSET)

#if 1
# define SETDCI4ERRNO(x, y)	((x) = DCI4ERRORBLOCK + ((y) & 0x7f))
# define REALLYSETDCI4ERRNO(x, y) ((x) = DCI4ERRORBLOCK + ((y) & 0x7f))
#else
# define SETDCI4ERRNO(x, y)	((x) = ((y) & 0x7f))
# define REALLYSETDCI4ERRNO(x, y) ((x) = DCI4ERRORBLOCK + ((y) & 0x7f))
#endif

#define GETDCI4ERRNO(x)		((((x) & ~0xff) != DCI4ERRORBLOCK) ? \
				 (x) : \
				 (((x) & 0xff) < SPECIFICOFFSET) ? \
				 ((x) & 0x7f) : (x))

/*
 * define Internet specific errors
 */
#define INETERR_IFBAD		(SPECIFICERRORBASE + 0)
#define INETERR_MMBAD		(SPECIFICERRORBASE + 1)
#define INETERR_NOMM		(SPECIFICERRORBASE + 2)
#define INETERR_PANICED		(SPECIFICERRORBASE + 3)
#define INETERR_BADCLI		(SPECIFICERRORBASE + 4)
#define INETERR_MLCFAIL		(SPECIFICERRORBASE + 5)
#define INETERR_TXBLOCKED	(SPECIFICERRORBASE + 6)
#define INETERR_FILTERGONE	(SPECIFICERRORBASE + 7)

/*
 * offsets into driver's SWI chunk
 */
#define DCI4Version		0
#define DCI4Inquire		1
#define DCI4GetNetworkMTU	2
#define DCI4SetNetworkMTU	3
#define DCI4Transmit		4
#define DCI4Filter		5
#define DCI4Stats		6
#define DCI4MulticastRequest	7

/*
 * network slot for Service_EnumerateNetworkDrivers
 */
typedef struct slot
{
    unsigned int sl_slotid:8,
                 sl_minor:8,
                 sl_pcmciaslot:5,
                 sl_mbz:11;
#define DIB_SLOT_PODULE(n)    (0 +((n) & 0xF))	/* Podules = 0-7 and NIC = 8 */
#define DIB_SLOT_PCI(n)       (16+((n) & 0xF))
#define DIB_SLOT_USB_BUS(n)   (32+((n) & 0xF))	/* sl_minor = device number on that bus */
#define DIB_SLOT_PARALLEL     128		/* IEE1284, sl_minor = 0's based port */
#define DIB_SLOT_SERIAL       129		/* EIA232, sl_minor = 0's based port */
#define DIB_SLOT_ECONET       130
#define DIB_SLOT_PCMCIA       131		/* sl_pcmciaslot = function on that interface */
#define DIB_SLOT_SDIO         132		/* sl_pcmciaslot = function on that interface */
#define DIB_SLOT_SYS_BUS      133		/* sl_minor = bits 16-23 of HAL device locn */
#define DIB_SLOT_PERI_BUS     134		/* sl_minor = bits 16-23 of HAL device locn */
} Slot, *SlotRef;

/*
 * Driver Information Block
 */
typedef struct dib
{
    unsigned int   dib_swibase;		/* base of driver's SWI chunk */
    unsigned char *dib_name;		/* pointer to name of driver */
    unsigned int   dib_unit;		/* unit number */
    unsigned char *dib_address;		/* interface's h/w address */
    unsigned char *dib_module;		/* title of driver module */
    unsigned char *dib_location;	/* description of interface position */
    Slot           dib_slot;		/* physical location of interface */
    unsigned int   dib_inquire;		/* copy of flags from Inquire SWI */
} Dib, *DibRef;

/*
 * struct to chain Driver Information Blocks
 */
typedef struct chaindib
{
    struct chaindib *chd_next;
    struct dib      *chd_dib;
} ChDib, *ChDibRef;

/*
 * reasons to driver and protocol status service calls
 */
#define DCIDRIVER_STARTING	0
#define DCIDRIVER_DYING		1
#define DCIPROTOCOL_STARTING	0
#define DCIPROTOCOL_DYING	1

/*
 * structure of header passed into Rx frame handler
 */
typedef struct
{
    void          *rx_ptr;
    unsigned int   rx_tag;
    unsigned char  rx_src_addr[6], _spad[2];
    unsigned char  rx_dst_addr[6], _dpad[2];
    unsigned int   rx_frame_type;
    unsigned int   rx_error_level;
    unsigned int   rx_cksum;
} RxHdr, *RxHdrRef;

/*
 * returned flag bits for Inquire SWI
 */
#define INQ_MULTICAST	(1 << 0)	/* multicast reception supported */
#define INQ_PROMISCUOUS	(1 << 1)	/* promiscuous reception supported */
#define INQ_CANREFLECT	(1 << 2)	/* i/f receives its own packets */
#define INQ_STATIONNO	(1 << 3)	/* station number is required */
#define INQ_RXERRORS	(1 << 4)	/* i/f can receive erroneous packets */
#define INQ_HWADDRVALID	(1 << 5)	/* i/f has a hardware address */
#define INQ_SOFTHWADDR	(1 << 6)	/* i/f can alter hardware address */
#define INQ_POINTOPOINT (1 << 7)	/* i/f is a point to point link */
#define INQ_HASSTATS	(1 << 8)	/* i/f supplies standard statistics */
#define INQ_HASESTATS	(1 << 9)	/* i/f supplies extended statistics */
#define INQ_VIRTUAL	(1 << 10)	/* this is a virtual i/f */
#define INQ_SWVIRTUAL	(1 << 11)	/* this is a software virtual i/f */
#define INQ_FILTERMCAST	(1 << 12)	/* i/f filters multicasts */
#define INQ_FASTIPSUM	(1 << 13)	/* i/f can IP checksum in hardware */
#define INQ_1STRESERVED	(1 << 14)	/* 1st reserved flag bit */

/*
 * flags for Transmit SWI
 */
#define TX_OWNSOURCE	(0 << 0)	/* use default MAC address */
#define TX_FAKESOURCE	(1 << 0)	/* use user supplied MAC address */
#define TX_DRIVERSDATA	(0 << 1)	/* driver gains ownership of mbufs */
#define TX_PROTOSDATA	(1 << 1)	/* protocol retains mbuf ownership */
#define TX_1STRESERVED	(1 << 2)	/* 1st reserved flag bit */

/*
 * levels for Filter SWI
 */
#define FRMLVL_E2SPECIFIC	1
#define FRMLVL_E2SINK		2
#define FRMLVL_E2MONITOR	3
#define FRMLVL_IEEE		4

#define ADDRLVL_SPECIFIC	0
#define ADDRLVL_NORMAL		1
#define ADDRLVL_MULTICAST	2
#define ADDRLVL_PROMISCUOUS	3

#define ERRLVL_NO_ERRORS	0
#define ERRLVL_ERRORS		1

/*
 * macros for manipulating subfields within frame type
 */
#define GET_FRAMETYPE(x)	((x) & 0xffff)
#define SET_FRAMETYPE(x, y)	((x) = ((x) & 0xffff0000) | ((y) & 0xffff))
#define GET_FRAMELEVEL(x)	(((unsigned int)(x)) >> 16)
#define SET_FRAMELEVEL(x, y)	((x) = ((x) & 0x0000ffff) | ((y) << 16))

/*
 * flags for MulticastRequest SWI
 */
#define MULTICAST_ADDR_REQ	(0 << 0)
#define MULTICAST_ADDR_REL	(1 << 0)
#define MULTICAST_SPECIFIC_ADDR	(0 << 1)
#define MULTICAST_ALL_ADDR	(1 << 1)
#define MULTICAST_1STRESERVED	(1 << 2)

/*
 * flags for Filter SWI
 */
#define FILTER_CLAIM		(0 << 0)
#define FILTER_RELEASE		(1 << 0)
#define FILTER_UNSAFE_OK	(0 << 1)
#define FILTER_NO_UNSAFE	(1 << 1)
#define FILTER_ALL_MCAST	(0 << 2)
#define FILTER_SPECIFIC_MCAST	(1 << 2)
#define FILTER_IPSUM_NOT_REQD	(0 << 3)
#define FILTER_IPSUM_IN_RXHDR	(1 << 3)
#define FILTER_1STRESERVED	(1 << 4)

/*
 * definitions for stats interface types
 */
#define ST_TYPE_10BASE5			1
#define ST_TYPE_10BASE2			2
#define ST_TYPE_10BASET			3
#define ST_TYPE_10BASE5N2		4
#define ST_TYPE_10BASE2NT		5
#define ST_TYPE_RSQUELCH10BASET		6
#define ST_TYPE_ACORNECONET		7
#define ST_TYPE_SERIAL			8
#define ST_TYPE_PARALLEL		9
#define ST_TYPE_10BASE5N2NT		10
#define ST_TYPE_10BASEFX		11
#define ST_TYPE_100BASETX		12
#define ST_TYPE_100BASEVG		13
#define ST_TYPE_100BASET4		14
#define ST_TYPE_100BASEFX		15
#define ST_TYPE_ATM25_6			16
#define ST_TYPE_ATM155			17
#define ST_TYPE_ATMPLUSRELAY		18
#define ST_TYPE_ATMFLANE		19
#define ST_TYPE_1000BASESX		20 /* 1000BaseSX Multi-mode Fibre */
#define ST_TYPE_1000BASET		21 /* 1000BaseT 4 pair cat 5 */
#define ST_TYPE_1000BASELX		22 /* 1000BaseLX Fibre */
#define ST_TYPE_1000BASECX		23 /* 1000BaseCX Short-Haul Copper */

/*
 * stats. link status bits
 */
#define ST_STATUS_OK			(1 << 0)
#define ST_STATUS_ACTIVE		(1 << 1)
#define ST_STATUS_RXMASK		(3 << 2)
#define ST_STATUS_DIRECT		(0 << 2)
#define ST_STATUS_BROADCAST		(1 << 2)
#define ST_STATUS_MULTICAST		(2 << 2)
#define ST_STATUS_PROMISCUOUS		(3 << 2)
#define ST_STATUS_HALF_DUPLEX		(0 << 4)
#define ST_STATUS_FULL_DUPLEX		(1 << 4)

/*
 * stats. link polarity bits
 */
#define ST_LINK_POLARITY_INCORRECT	(0 << 0)
#define ST_LINK_POLARITY_CORRECT	(1 << 0)

/*
 * structure for returning device driver statistics
 */
struct stats
{
    /*
     * general information
     */
    unsigned char st_interface_type;
    unsigned char st_link_status;
    unsigned char st_link_polarity;
    unsigned char st_blank1;
    unsigned long st_link_failures;
    unsigned long st_network_collisions;

    /*
     * transmit statistics
     */
    unsigned long st_collisions;
    unsigned long st_excess_collisions;
    unsigned long st_heartbeat_failures;
    unsigned long st_not_listening;
#if 0
    unsigned long st_net_error;
#endif
    unsigned long st_tx_frames;
    unsigned long st_tx_bytes;
    unsigned long st_tx_general_errors;
    unsigned char st_last_dest_addr[8];

    /*
     * receive statistics
     */
    unsigned long st_crc_failures;
    unsigned long st_frame_alignment_errors;
    unsigned long st_dropped_frames;
    unsigned long st_runt_frames;
    unsigned long st_overlong_frames;
    unsigned long st_jabbers;
    unsigned long st_late_events;
    unsigned long st_unwanted_frames;
    unsigned long st_rx_frames;
    unsigned long st_rx_bytes;
    unsigned long st_rx_general_errors;
    unsigned char st_last_src_addr[8];
};

#endif /* !defined(__sys_dci4structs_h) */

/* EOF dcistructs.h */
@


4.14
log
@Some extra DCI4 definitions
Define slot types for SDIO (for ethernet via SDIODriver) and the HAL system and peripheral buses (for ethernet via MACs on board the SOC).
Bump DCI revision to 4.07.

Version 5.60. Tagged as 'TCPIPLibs-5_60'
@
text
@d130 1
a130 1
 * are used to the old (pre-DI4) internet modules which returned
@


4.13
log
@Set aside Dib slot numbers for up to 16 USB buses.
Remove definition of "Bad SWI" (0x1E6) since it's not a TCPIPLib error.
Add defines for the protocol & driver starting/dying service calls.
This corresponds to DCI 4.06.

Version 5.55. Tagged as 'TCPIPLibs-5_55'
@
text
@d68 1
a68 1
#define DCIVERSION	406
d180 1
a180 1
 * network slot for Service_FindNetworkDriver
d191 2
a192 2
#define DIB_SLOT_PARALLEL     128
#define DIB_SLOT_SERIAL       129
d194 4
a197 1
#define DIB_SLOT_PCMCIA       131		/* sl_pcmciaslot = slot on that interface */
d257 2
a258 2
#define INQ_HASSTATS	(1 << 8)	/* i/f supplys standard statistics */
#define INQ_HASESTATS	(1 << 9)	/* i/f supplys extended statistics */
@


4.12
log
@Add IP checksumming flag bits from DCI 4.05.
Not actually implemented yet, but allocated.
Also trimmed out 2x service call definitions nothing to do with TCP/IP.

Version 5.54. Tagged as 'TCPIPLibs-5_54'
@
text
@d68 1
a68 1
#define DCIVERSION	405
d123 1
a123 1
 * the bottom 128 bytes are used to hold UNIX style error
d125 1
a125 1
 * 128 bytes hold various special error numbers
a165 1
#define INETERR_INVALIDSWI	0x1e6
d188 7
d222 8
@


4.11
log
@  Merged in changes from Kevin's hard disc.
Detail:
  * Added remaining 1000baseT interface type #defines
  * Added getifaddrs() from newer BSD sources
Admin:
  Kevin says getifaddrs() may not be fully debugged

Retagged as 'TCPIPLibs-5_48'
@
text
@a119 8
#ifndef Service_PreReset
# define Service_PreReset		0x45
#endif

#ifndef Service_MessageFileClosed
# define Service_MessageFileClosed	0x5e
#endif

d186 3
a188 3
		 sl_minor:8,
		 sl_pcmciaslot:5,
		 sl_mbz:11;
d245 2
d255 1
a255 1
#define TX_1STRESERVED	(2 << 1)	/* 1st reserved flag bit */
d299 3
a301 1
#define FILTER_1STRESERVED	(1 << 3)
d323 6
a328 6
#define ST_TYPE_ATMPLUSRELAY            18
#define ST_TYPE_ATMFLANE                19
#define ST_TYPE_1000BASESX              20 /* 1000BaseSX Multi-mode Fibre */
#define ST_TYPE_1000BASET               21 /* 1000BaseT 4 pair cat 5 */
#define ST_TYPE_1000BASELX              22 /* 1000BaseLX Fibre */
#define ST_TYPE_1000BASECX              23 /* 1000BaseCX Short-Haul Copper */
@


4.10
log
@Addition of 1000 base T and fibre magic constant to DCI spec.
Addition of support for HAL timers
Removed a lingering __P in the resolver header file (and while we're
at it all the others).
Added missing open bracket to vn_opn,reported by D.Ellis.

Version 5.45. Tagged as 'TCPIPLibs-5_45'
@
text
@d331 2
@


4.9
log
@Adjustments to machine/types.h and sys/proc.h for new compiler.
rx_cksum added to struct rx_hdr as per DCI 4.05.
1000Mb/s network types added for EtherK - need to check allocations.

Version 5.44. Tagged as 'TCPIPLibs-5_44'
@
text
@d68 1
a68 1
#define DCIVERSION	404
d150 1
a150 1
#if 0
d329 2
a330 2
#define ST_TYPE_1000BASET		20
#define ST_TYPE_1000BASESX		21
@


4.8
log
@Added #define for service call InternetStatus_DuplicateIPAddress.
See LibraryDoc for details.

Version 5.19. Tagged as 'TCPIPLibs-5_19'
@
text
@d234 1
d329 2
@


4.7
log
@  Added new service call sub-reason code.
Detail:
  Service_InternetStatus/DHCPInform is issued whenever a response to a
    DHCPINFORM is received.
  Modules which claim sub-reason code 3 (DynamicBootStart) can now alter
    R2 (if they claim the reason code) to contain the return value for
    the Internet module's ioctl handler.  Previously, the Internet module
    always returned EADDRUNAVAIL if the service call was claimed, which
    meant that callers had to use other means to determine whether the
    dynamic boot had completed (eg. by querying the DHCP module directly)
Admin:
  Documentation file LibraryDoc updated with details.
  Required by Internet 5.25 and later.
  Required by DHCP 0.05 and later.

Version 5.18. Tagged as 'TCPIPLibs-5_18'
@
text
@a112 1

d115 3
@


4.6
log
@Added new subreason code definition for InternetStatus service call.
@
text
@d114 4
@


4.5
log
@Added details of Service_InternetStatus 5
@
text
@d110 3
@


4.4
log
@  Update of TCPIPLibs for rpc/tcp and to define service call reason codes.
  New InternetStatus service call reason codes added and documented.
Detail:
  clnt_tcp.c added and TCP support recompiled in to other parts of RPC
    library.  Requested by third party.
  New macro definitions for InternetStatus_DynamicBootStart and
    InternetStatus_DynamicBootReply added to sys/dcistructs.h
  Documentation for new service calls added to LibraryDoc.
Admin:
  rusers application built against new RPC library to prove rpc/tcp
    support is present and correct.
  Required by Internet 5.19 and later.
    (CVS: RiscOS/Sources/Networking/AUN/Internet (tag: Internet-5_19)
  Required by IPConfig 0.09 and later.
    (CVS: RiscOS/Sources/Networking/IPConfig (tag: IPConfig-0_09)
  Required by development builds of LanManFS 2.00 and later.
    (CVS: RiscOS/Sources/Networking/Omni/Protocols/LanManFS;
          earliest tag: LanManFS-1_87_1_1_1_1_2_12 or LanManFS-2_00)


Version 5.06. Tagged as 'TCPIPLibs-5_06'
@
text
@d73 1
d75 2
d78 2
d81 2
d84 1
d89 1
d91 2
d94 2
d97 2
d100 2
d103 2
d106 4
d317 2
@


4.3
log
@Brought DCI header up to date with respect to the latest version of the
specification (0284,036/FS; ECO 4112).  Changes are:
* DCIVERSION incremented to 404
* MulticastRequest SWI number added
* Flags for MulticastRequest SWI added
* Selective multicast bit added to Inquire SWI flags
* Multicast filter capability flags added to Filter SWI flags
* Added new types to the stats interface type list
* Added half/full duplex bits to link status bits list
* Created link polarity bits list

Version 5.01. Tagged as 'TCPIPLibs-5_01'
@
text
@d85 2
@


4.2
log
@Spinner branch merged.
$Id, $Source and $Header markers removed.
@
text
@d68 1
a68 1
#define DCIVERSION	403
d152 1
d217 1
d253 9
d268 3
a270 1
#define FILTER_1STRESERVED	(2 << 1)
d285 7
d303 8
@


4.1
log
@Initial revision
@
text
@a16 3
 * $Header: /ax/networking:include/sys/dcistructs.h:networking  1.11  $
 * $Source: /ax/networking:include/sys/dcistructs.h: $
 *
@


4.1.7.1
log
@Imported from Babel
@
text
@@
