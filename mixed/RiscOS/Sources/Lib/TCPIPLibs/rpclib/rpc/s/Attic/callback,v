head	4.2;
access;
symbols
	RO_5_07:4.2
	sbrodie_sedwards_16Mar2000:4.1
	TCPIPLibs-5_31:4.1
	dcotton_autobuild_BaseSW:4.1
	TCPIPLibs-5_30:4.1
	TCPIPLibs-5_29:4.1
	TCPIPLibs-5_28:4.1
	TCPIPLibs-5_27:4.1
	TCPIPLibs-5_26:4.1
	TCPIPLibs-5_25:4.1
	TCPIPLibs-5_24:4.1
	TCPIPLibs-5_23:4.1
	TCPIPLibs-5_22:4.1
	TCPIPLibs-5_21:4.1
	TCPIPLibs-5_20:4.1
	TCPIPLibs-5_19:4.1
	TCPIPLibs-5_18:4.1
	TCPIPLibs-5_17:4.1
	TCPIPLibs-5_16:4.1
	TCPIPLibs-5_15:4.1
	TCPIPLibs-5_14:4.1
	TCPIPLibs-5_13:4.1
	TCPIPLibs-5_12:4.1
	TCPIPLibs-5_11:4.1
	TCPIPLibs-5_10:4.1
	TCPIPLibs-5_09:4.1
	TCPIPLibs-5_08:4.1
	TCPIPLibs-5_07:4.1
	TCPIPLibs-5_06:4.1
	TCPIPLibs-5_05:4.1
	TCPIPLibs-5_04:4.1
	TCPIPLibs-5_03:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	TCPIPLibs-5_02:4.1
	TCPIPLibs-5_01:4.1
	nicke_TCPIPLibs_25-9-98:4.1
	TCPIPLibs-5_00:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	Spinner:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_19May1998_bp:4.1
	Ursula_19May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.2
date	99.11.29.12.39.10;	author sbrodie;	state dead;
branches;
next	4.1;

4.1
date	97.03.06.14.27.54;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.27.54;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  32-bit compatibility added.
  Makefile (for headers) exports LibraryDoc and VersionNum
Detail:
  mkveneers uses {CONFIG} to generate veneers that objasm will
    then build appropriately.
  callback code in rpclib extracted, now requires AsmUtils instead.
Admin:
  Built.

Version 5.32. Tagged as 'TCPIPLibs-5_32'
@
text
@; Copyright 1997 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Assembler function to get callback

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:EnvNumbers
        GET     Hdr:ModHand

        EXPORT  getcallback

        AREA    callback,PIC,CODE,READONLY,REL

        ALIGN


; This callback handler simple defers the callback until later
defer_callback
        SWI XOS_SetCallBack             ; Defer callback
        MOV r14, r12                    ; Register block
        LDMIA r14, {r0-r14}^            ; Loads USR r13,r14
        NOP                             ; NOOP after accessing user
                                        ; registers before accessing banked
                                        ; register.
        LDR r14, [r14, #15*4]           ; Loads user PC into SVC r14
        MOVS pc, r14                    ; Drop back to USR mode



; os_error *getcallback();
getcallback ROUT

        Push "r0-r3, lr"
        SUB sp, sp, #&40                ; Make space on stack for reg dump

        ; Update callback handler atomically in case an event occurs
        ; between reading the old handler and writing the new handler
        MOV r0, #CallBackHandler
        ADR r1, defer_callback
        MOV r2, sp                      ; R12 in defer_callback = reg ptr
        MOV r3, sp                      ; Reg save area on stack
        SWI XOS_ChangeEnvironment
        Push "r1-r3"                    ; Save old handler

        ; Now execute a SWI in user mode to trigger callbacks
        TEQP pc, #0                     ; To user mode
        MOV r0, #0
        MOV r1, #1
        SWI XOS_Byte                    ; Read OS version
        SWI XOS_EnterOS                 ; Back to SVC mode

        ; Restore old callback handler
        MOV r0, #CallBackHandler
        Pull "r1-r3"
        SWI XOS_ChangeEnvironment

        ADD sp, sp, #&40
        Pull "r0-r3, pc",,^


        END

@


4.1
log
@Initial revision
@
text
@@


4.1.7.1
log
@Imported from Babel
@
text
@@
