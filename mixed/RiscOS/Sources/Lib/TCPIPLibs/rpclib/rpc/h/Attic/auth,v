head	4.3;
access;
symbols
	RO_5_07:4.3
	TCPIPLibs-5_03:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	TCPIPLibs-5_02:4.2
	TCPIPLibs-5_01:4.2
	nicke_TCPIPLibs_25-9-98:4.2
	TCPIPLibs-5_00:4.2
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	Spinner:4.2
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_19May1998_bp:4.1
	Ursula_19May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	afrost_Funai01-33:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.4
	RCA:4.1.0.2
	import:4.1.7.1;
locks; strict;
comment	@# @;


4.3
date	98.11.27.15.40.21;	author sbrodie;	state dead;
branches;
next	4.2;

4.2
date	98.07.21.13.17.13;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	97.03.06.14.27.53;	author rbuckley;	state Exp;
branches
	4.1.7.1;
next	;

4.1.7.1
date	97.03.06.14.27.53;	author rbuckley;	state Exp;
branches;
next	;


desc
@@


4.3
log
@  Prototypes upgraded to ANSI-style.  This is required so that C++ source code
    can include them (third party needs this)
  Removed duplicate headers from inside rpclib - now uses the exported headers
    which should avoid inconsistencies developing.
  No longer uses cc400 during builds.
Detail:
  Nearly every header is changed.  Parameter prototypes cross-checked against
    actual source code, Solaris 2.6 headers, and comments in the rpclib headers.
  Build improvement: no longer uses "cc400" to compile clnt_udp.c.  Previously
    this was done because newer compilers were alleged to generate broken code.
    The example quoted was the NFS module's free display.  The fault actually
    lies in the NFS module passing the wrong parameters to xdr_string!  Future
    builds of NFS will require TCPIPLibs-5_04 or later.
Admin:
  Built.  Tested by building NFS against it.  Verified free space display works
    properly (needs NFS 2.36).  Tested inclusion of all RPC headers from C++
    source file worked without warnings or errors.

Version 5.04. Tagged as 'TCPIPLibs-5_04'
@
text
@/* -*-C-*-
 *
 * $Header: /home/renaissa/cvsroot/RiscOS/Sources/Lib/TCPIPLibs/rpclib/rpc/h/auth,v 4.2 1998/07/21 13:17:13 kbracey Exp $
 * $Source: /home/renaissa/cvsroot/RiscOS/Sources/Lib/TCPIPLibs/rpclib/rpc/h/auth,v $
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.1  95/01/11  10:18:25  kwelton
 * Initial revision
 * 
 */

/* @@(#)auth.h   2.3 88/08/07 4.0 RPCSRC; from 1.17 88/02/08 SMI */
/*
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user.
 * 
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
 * 
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
 * 
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 * 
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 * 
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
 */

/*
 * auth.h, Authentication interface.
 *
 * Copyright (C) 1984, Sun Microsystems, Inc.
 *
 * The data structures are completely opaque to the client.  The client
 * is required to pass a AUTH * to routines that create rpc
 * "sessions".
 */


#define MAX_AUTH_BYTES  400
#define MAXNETNAMELEN   255     /* maximum length of network user's name */

/*
 * Status returned from authentication check
 */
enum auth_stat {
        AUTH_OK=0,
        /*
         * failed at remote end
         */
        AUTH_BADCRED=1,                 /* bogus credentials (seal broken) */
        AUTH_REJECTEDCRED=2,            /* client should begin new session */
        AUTH_BADVERF=3,                 /* bogus verifier (seal broken) */
        AUTH_REJECTEDVERF=4,            /* verifier expired or was replayed */
        AUTH_TOOWEAK=5,                 /* rejected due to security reasons */
        /*
         * failed locally
        */
        AUTH_INVALIDRESP=6,             /* bogus response verifier */
        AUTH_FAILED=7                   /* some unknown reason */
};

typedef u_long u_int32; /* 32-bit unsigned integers */

union des_block {
        struct {
                u_int32 high;
                u_int32 low;
        } key;
        char c[8];
};
typedef union des_block des_block;
extern bool_t xdr_des_block();

/*
 * Authentication info.  Opaque to client.
 */
struct opaque_auth {
        enum_t  oa_flavor;              /* flavor of auth */
        caddr_t oa_base;                /* address of more auth stuff */
        u_int   oa_length;              /* not to exceed MAX_AUTH_BYTES */
};


/*
 * Auth handle, interface to client side authenticators.
 */
typedef struct {
        struct  opaque_auth     ah_cred;
        struct  opaque_auth     ah_verf;
        union   des_block       ah_key;
        struct auth_ops {
                void    (*ah_nextverf)();
                int     (*ah_marshal)();        /* nextverf & serialize */
                int     (*ah_validate)();       /* validate varifier */
                int     (*ah_refresh)();        /* refresh credentials */
                void    (*ah_destroy)();        /* destroy this structure */
        } *ah_ops;
        caddr_t ah_private;
} AUTH;


/*
 * Authentication ops.
 * The ops and the auth handle provide the interface to the authenticators.
 *
 * AUTH *auth;
 * XDR  *xdrs;
 * struct opaque_auth verf;
 */
#define AUTH_NEXTVERF(auth)             \
                ((*((auth)->ah_ops->ah_nextverf))(auth))
#define auth_nextverf(auth)             \
                ((*((auth)->ah_ops->ah_nextverf))(auth))

#define AUTH_MARSHALL(auth, xdrs)       \
                ((*((auth)->ah_ops->ah_marshal))(auth, xdrs))
#define auth_marshall(auth, xdrs)       \
                ((*((auth)->ah_ops->ah_marshal))(auth, xdrs))

#define AUTH_VALIDATE(auth, verfp)      \
                ((*((auth)->ah_ops->ah_validate))((auth), verfp))
#define auth_validate(auth, verfp)      \
                ((*((auth)->ah_ops->ah_validate))((auth), verfp))

#define AUTH_REFRESH(auth)              \
                ((*((auth)->ah_ops->ah_refresh))(auth))
#define auth_refresh(auth)              \
                ((*((auth)->ah_ops->ah_refresh))(auth))

#define AUTH_DESTROY(auth)              \
                ((*((auth)->ah_ops->ah_destroy))(auth))
#define auth_destroy(auth)              \
                ((*((auth)->ah_ops->ah_destroy))(auth))


extern struct opaque_auth _null_auth;


/*
 * These are the various implementations of client side authenticators.
 */

/*
 * Unix style authentication
 * AUTH *authunix_create(machname, uid, gid, len, aup_gids)
 *      char *machname;
 *      int uid;
 *      int gid;
 *      int len;
 *      int *aup_gids;
 */
extern AUTH *authunix_create();
extern AUTH *authunix_create_default(); /* takes no parameters */
extern AUTH *authnone_create();         /* takes no parameters */
extern AUTH *authdes_create();

#define AUTH_NONE       0               /* no authentication */
#define AUTH_NULL       0               /* backward compatibility */
#define AUTH_UNIX       1               /* unix style (uid, gids) */
#define AUTH_SHORT      2               /* short hand unix style */
#define AUTH_DES        3               /* des style (encrypted timestamps) */

/* EOF auth.h */
@


4.2
log
@Spinner branch merged
@
text
@d3 2
a4 2
 * $Header: /projects2/renaissa/cvsroot/RiscOS/Sources/Lib/TCPIPLibs/rpclib/rpc/h/auth,v 4.1.7.1 1997/03/06 14:27:53 rbuckley Exp $
 * $Source: /projects2/renaissa/cvsroot/RiscOS/Sources/Lib/TCPIPLibs/rpclib/rpc/h/auth,v $
@


4.1
log
@Initial revision
@
text
@d3 2
a4 2
 * $Header: /ax/networking:include/rpc/auth.h:networking  1.1  $
 * $Source: /ax/networking:include/rpc/auth.h: $
@


4.1.7.1
log
@Imported from Babel
@
text
@@
