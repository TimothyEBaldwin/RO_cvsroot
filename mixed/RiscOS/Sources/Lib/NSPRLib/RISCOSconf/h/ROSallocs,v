head	1.2;
access;
symbols
	NSPRLib-0_03:1.2
	NSPRLib-0_02:1.2
	NSPRLib-0_01:1.2
	dcotton_autobuild_BaseSW:1.1
	ahodgkin_207release:1.1;
locks; strict;
comment	@# @;


1.2
date	2001.06.13.14.03.15;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	98.09.10.12.07.18;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Brought under srccommit control.
Detail:
  ROSallocs.h now defines rosallocs_version to get the local build
  version (as opposed to NSPRLib library version, not that such an
  entity specifically exists) from Module_HelpVersion in the VersionNum
  file. !MkClean uses the build tools StripDepnd so the BASIC one in
  Utils has been removed, along with the Utils directory itself since it
  is now empty.
Admin:
  Checked !MkClean still worked properly (it does) and rebuilt from
  clean. Operation of rosallocs_version not tested.

Version 0.01. Tagged as 'NSPRLib-0_01'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * File   : ROSallocs.h
 * Purpose: Register memory allocation functions to be
 *          used by NSPRLib to replace the malloc family
 *          (these being the default functions), via.
 *          redefinitions in RISCOSconf.h.prcpucfg.
 * Authors: ADH
 * History: 09-Sep-1998: Created
 *          13-Jun-2001: Added rosallocs_version to get
 *                       hold of VersionNum version info.
 */

/* Structure to hold pointers to the above functions */

typedef struct rosallocs_allocs
{
  void   (*rosallocs_free)    (void * ptr);
  void * (*rosallocs_malloc)  (size_t size);
  void * (*rosallocs_calloc)  (size_t n, size_t size);
  void * (*rosallocs_realloc) (void * ptr, size_t size);
}
rosallocs_allocs;

/*
 * rosallocs_register()
 *
 * Register functions to use for malloc(), free()
 * etc. - use NULL for any field to not change the
 * existing settings. The stdlib.h malloc() family
 * is used by default.
 *
 */

void rosallocs_register(rosallocs_allocs * r);

/*
 * rosallocs_version()
 *
 * Return the Module_HelpVersion string from the VersionNum
 * file - i.e. give an idea of this build version (which is
 * loosely related to actual NSPRLib version).
 *
 */

const char * rosallocs_version(void);

/*
 * rosallocs_free(), rosallocs_malloc(),
 * rosallocs_calloc(), rosallocs_realloc()
 *
 * Call instead of free(), malloc(), calloc() and
 * realloc() respectively to use the registered
 * functions.
 *
 */

void   rosallocs_free    (void * ptr);
void * rosallocs_malloc  (size_t size);
void * rosallocs_calloc  (size_t n, size_t size);
void * rosallocs_realloc (void * ptr, size_t size);
@


1.1
log
@Can now be built either to use the malloc() family for memory allocations
or a set of functions allowing run-time replacement of those functions,
though malloc() etc. are still used by default. See !!ReadMe for more info.
@
text
@d23 2
d49 11
@

