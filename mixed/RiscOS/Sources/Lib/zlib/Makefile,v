head	1.4;
access;
symbols
	zlib-1_20:1.4
	zlib-1_19:1.4
	zlib-1_18:1.3
	zlib-1_17:1.2
	zlib-1_16:1.2
	zlib-1_15:1.2
	zlib-1_14:1.2
	dellis_autobuild_BaseSW:1.2
	dcotton_autobuild_BaseSW:1.2
	zlib-1_13:1.2
	ahodgkin_207release:1.2
	nicke_Zlib_24-9-98:1.2
	ahodgkin_204release:1.1;
locks; strict;
comment	@# @;


1.4
date	2012.02.04.21.01.52;	author jlee;	state Exp;
branches;
next	1.3;
commitid	B097BkcmarS2OSRv;

1.3
date	2012.01.14.23.08.50;	author srevill;	state Exp;
branches;
next	1.2;
commitid	PW7zgWhG4qQsbcPv;

1.2
date	98.05.13.09.23.48;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	98.03.30.12.11.06;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to zlib 1.2.5, plus modifications
Detail:
  zlib 1.2.5 update:
  - README, c/*, h/* - Updated to zlib 1.2.5
  - algorithm - Deleted; updated doc now in 'doc' folder
  - doc/* - Added docs for zlib 1.2.5
  Changes compared to the official zlib distribution:
  - h/zutil - Use OS_CODE of 0x0d for RISC OS, as decreed by rfc1952
  - c/gzlib, c/gzread, c/gzwrite, h/zconf, h/zlib - Reintroduced ability to use ISO file access functions instead of POSIX ones, to allow the library to be easily used with Norcroft. Added gzgetheader() and gzputheader() functions to allow easy read/write of gzip file headers via the gzip file interface
  Other changes:
  - Makefile - Makefile rewritten. Now supports building of two components: zlib for the main zlib libraries (in application, module and utility/relocatable forms), and zlibmodlib, a library that wraps the ZLib module SWIs to provide a drop-in replacement for static linking against zlib (only builds application & module configs)
  - c/modlib - Main zlibmodlib source
Admin:
  Main deflate/inflate code tested somewhat
  gzip code modifications and zlibmodlib currently untested


Version 1.19. Tagged as 'zlib-1_19'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for zlib and zlibmodlib libraries
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 30-Mar-98  KJB          Created.
#

COMPONENT ?= zlib
HDRS = zlib zconf
CFLAGS += -Wnp # Kill some of the warnings

ifeq (${COMPONENT},zlib)

# zlib rules
OBJS = \
 adler32 \
 compress \
 crc32 \
 deflate \
 gzclose \
 gzlib \
 gzread \
 gzwrite \
 infback \
 inffast \
 inflate \
 inftrees \
 trees \
 uncompr \
 zutil

# Add in an extra target suitable for utilities
LIBRARIES = zlib zlibzm zlibu
UTIL_OBJS = $(addprefix ou.,${OBJS})
CLEAN_DEPEND = cleanutil

else

# zlibmodlib rules
OBJS = modlib compress uncompr

endif

include CLibrary

# Utility build rules
.SUFFIXES: .ou

.c.ou:; ${CC} ${CFLAGS} ${C_NO_ZI} ${C_NO_STKCHK} -o $@@ $<

${LIBEXT}.zlibu: ${UTIL_OBJS} ou.extradir ${DIRS}
        ${AR} ${ARFLAGS} ${LIBEXT}.zlibu ${UTIL_OBJS}

ou.extradir::
        ${MKDIR} ou
        ${TOUCH} $@@

cleanutil:
        @@IfThere ou        Then ${ECHO} ${WIPE} ou ${WFLAGS}
        @@IfThere ou        Then ${WIPE} ou ${WFLAGS}


# Dynamic dependencies:
@


1.3
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 1.18. Tagged as 'zlib-1_18'
@
text
@d15 1
a15 1
# Makefile for zlib
d25 3
a27 25
#
# Paths
#
EXP_HDR = <export$dir>
LIBDIR = <Lib$Dir>
ZLIBDIR = ${LIBDIR}.zlib
#
# Generic options:
#
MKDIR   = cdir
AS      = objasm
CP      = copy
CC      = cc
CM      = cmhg
RM      = remove
LD      = link
LB      = libfile
TOUCH   = create
WIPE    = x wipe

CCFLAGS = -c -depend !Depend ${INCLUDES} ${DFLAGS} ${THROWBACK}
ASFLAGS = -depend !Depend -Stamp -quit
CPFLAGS = ~cfr~v
LBFLAGS = -c
WFLAGS  = ~CFR~V
d29 1
a29 25
#
# Libraries
#
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
RSTUBS    = RISCOSLIB:o.rstubs
ROMSTUBS  = RISCOSLIB:o.romstubs
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.AbsSym

#
# Include files
#
INCLUDES  =
DFLAGS    = -DRISCOS

#
# Program specific options:
#
COMPONENT  = zlib
COMPONENTZ = zlibzm
TARGET     = ${COMPONENT}
TARGETZ    = ${COMPONENTZ}
SOURCE     = 
EXPORTS    = 
d31 1
d33 45
a77 99
 o.adler32 \
 o.compress \
 o.crc32 \
 o.gzio \
 o.uncompr \
 o.deflate \
 o.trees \
 o.zutil \
 o.inflate \
 o.infblock \
 o.inftrees \
 o.infcodes \
 o.infutil \
 o.inffast

OBJSZ = \
 oz.adler32 \
 oz.compress \
 oz.crc32 \
 oz.gzio \
 oz.uncompr \
 oz.deflate \
 oz.trees \
 oz.zutil \
 oz.inflate \
 oz.infblock \
 oz.inftrees \
 oz.infcodes \
 oz.infutil \
 oz.inffast

HDRS = zlib.h zconf.h

LIBS = ${TARGET} ${TARGETZ} 

#
# Rule patterns
#
.SUFFIXES: .o .oz .od .c .h .s
.c.o:;     ${CC} ${CCFLAGS} -ff     -o $@@ $<
.c.oz:;    ${CC} ${CCFLAGS} -ff -zM -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<
.cmhg.o:;  ${CM} ${CMFLAGS} -o $@@ $<
.cmhg.h:;  ${CM} ${CMFLAGS} -d $@@ $<

#
# build the library:
#
all:	${LIBS}

#
# RISC OS ROM build rules:
#
rom: ${TARGET}
        @@echo ${COMPONENT}: rom module built

export: export_${PHASE}

install_rom: ${TARGET}
        @@echo ${COMPONENT}: rom module installed

clean:
        ${WIPE} o ${WFLAGS}
        ${WIPE} oz ${WFLAGS}
        ${RM} ${COMPONENT}
        ${RM} ${COMPONENTZ}
        @@echo ${COMPONENT}: cleaned

export_hdrs: ${HDRS} dirs
	${CP} h.zlib  ${ZLIBDIR}.h.* ${CPFLAGS}
	${CP} h.zconf ${ZLIBDIR}.h.* ${CPFLAGS}
	@@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${LIBS} dirs
	${CP} ${TARGET}  ${ZLIBDIR}.o.* ${CPFLAGS}
	${CP} ${TARGETZ} ${ZLIBDIR}.o.* ${CPFLAGS}
        @@echo ${COMPONENT}: export complete (libs)


o.local_dirs:
	${MKDIR} o
	${MKDIR} oz
	${TOUCH} o.local_dirs

dirs:
        ${MKDIR} ${LIBDIR}
        ${MKDIR} ${ZLIBDIR}
        ${MKDIR} ${ZLIBDIR}.h
        ${MKDIR} ${ZLIBDIR}.o

links:
	./mklinks
	echo Made links

#
# Final link
#
${TARGET}: ${OBJS} o.local_dirs
        ${LB} ${LBFLAGS} -o ${COMPONENT} ${OBJS}
a78 2
${TARGETZ}: ${OBJSZ} o.local_dirs
	${LB} ${LBFLAGS} -o ${COMPONENTZ} ${OBJSZ}
@


1.2
log
@Was accidentally building a debug version
@
text
@d43 1
a43 1
WIPE    = -wipe
@


1.1
log
@Makefile etc added, warnings reduced.
@
text
@d117 2
a118 2
.c.o:;     ${CC} ${CCFLAGS} -DDEBUG=0 -ff     -o $@@ $<
.c.oz:;    ${CC} ${CCFLAGS} -DDEBUG=0 -ff -zM -o $@@ $<
a181 152
o.adler32:	c.adler32
o.adler32:	h.zlib
o.adler32:	h.zconf
o.compress:	c.compress
o.compress:	h.zlib
o.compress:	h.zconf
o.crc32:	c.crc32
o.crc32:	h.zlib
o.crc32:	h.zconf
o.uncompr:	c.uncompr
o.uncompr:	h.zlib
o.uncompr:	h.zconf
oz.adler32:	c.adler32
oz.adler32:	h.zlib
oz.adler32:	h.zconf
oz.compress:	c.compress
oz.compress:	h.zlib
oz.compress:	h.zconf
oz.crc32:	c.crc32
oz.crc32:	h.zlib
oz.crc32:	h.zconf
oz.uncompr:	c.uncompr
oz.uncompr:	h.zlib
oz.uncompr:	h.zconf
o.gzio:	c.gzio
o.gzio:	h.zutil
o.gzio:	h.zlib
o.gzio:	h.zconf
o.deflate:	c.deflate
o.deflate:	h.deflate
o.deflate:	h.zutil
o.deflate:	h.zlib
o.deflate:	h.zconf
o.trees:	c.trees
o.trees:	h.deflate
o.trees:	h.zutil
o.trees:	h.zlib
o.trees:	h.zconf
o.trees:	h.trees
o.zutil:	c.zutil
o.zutil:	h.zutil
o.zutil:	h.zlib
o.zutil:	h.zconf
o.inflate:	c.inflate
o.inflate:	h.zutil
o.inflate:	h.zlib
o.inflate:	h.zconf
o.inflate:	h.infblock
o.infblock:	c.infblock
o.infblock:	h.zutil
o.infblock:	h.zlib
o.infblock:	h.zconf
o.infblock:	h.infblock
o.infblock:	h.inftrees
o.infblock:	h.infcodes
o.infblock:	h.infutil
o.inftrees:	c.inftrees
o.inftrees:	h.zutil
o.inftrees:	h.zlib
o.inftrees:	h.zconf
o.inftrees:	h.inftrees
o.inftrees:	h.inffixed
o.infcodes:	c.infcodes
o.infcodes:	h.zutil
o.infcodes:	h.zlib
o.infcodes:	h.zconf
o.infcodes:	h.inftrees
o.infcodes:	h.infblock
o.infcodes:	h.infcodes
o.infcodes:	h.infutil
o.infcodes:	h.inffast
o.infutil:	c.infutil
o.infutil:	h.zutil
o.infutil:	h.zlib
o.infutil:	h.zconf
o.infutil:	h.infblock
o.infutil:	h.inftrees
o.infutil:	h.infcodes
o.infutil:	h.infutil
o.inffast:	c.inffast
o.inffast:	h.zutil
o.inffast:	h.zlib
o.inffast:	h.zconf
o.inffast:	h.inftrees
o.inffast:	h.infblock
o.inffast:	h.infcodes
o.inffast:	h.infutil
o.inffast:	h.inffast
oz.gzio:	c.gzio
oz.gzio:	h.zutil
oz.gzio:	h.zlib
oz.gzio:	h.zconf
oz.deflate:	c.deflate
oz.deflate:	h.deflate
oz.deflate:	h.zutil
oz.deflate:	h.zlib
oz.deflate:	h.zconf
oz.trees:	c.trees
oz.trees:	h.deflate
oz.trees:	h.zutil
oz.trees:	h.zlib
oz.trees:	h.zconf
oz.trees:	h.trees
oz.zutil:	c.zutil
oz.zutil:	h.zutil
oz.zutil:	h.zlib
oz.zutil:	h.zconf
oz.inflate:	c.inflate
oz.inflate:	h.zutil
oz.inflate:	h.zlib
oz.inflate:	h.zconf
oz.inflate:	h.infblock
oz.infblock:	c.infblock
oz.infblock:	h.zutil
oz.infblock:	h.zlib
oz.infblock:	h.zconf
oz.infblock:	h.infblock
oz.infblock:	h.inftrees
oz.infblock:	h.infcodes
oz.infblock:	h.infutil
oz.inftrees:	c.inftrees
oz.inftrees:	h.zutil
oz.inftrees:	h.zlib
oz.inftrees:	h.zconf
oz.inftrees:	h.inftrees
oz.inftrees:	h.inffixed
oz.infcodes:	c.infcodes
oz.infcodes:	h.zutil
oz.infcodes:	h.zlib
oz.infcodes:	h.zconf
oz.infcodes:	h.inftrees
oz.infcodes:	h.infblock
oz.infcodes:	h.infcodes
oz.infcodes:	h.infutil
oz.infcodes:	h.inffast
oz.infutil:	c.infutil
oz.infutil:	h.zutil
oz.infutil:	h.zlib
oz.infutil:	h.zconf
oz.infutil:	h.infblock
oz.infutil:	h.inftrees
oz.infutil:	h.infcodes
oz.infutil:	h.infutil
oz.inffast:	c.inffast
oz.inffast:	h.zutil
oz.inffast:	h.zlib
oz.inffast:	h.zconf
oz.inffast:	h.inftrees
oz.inffast:	h.infblock
oz.inffast:	h.infcodes
oz.inffast:	h.infutil
oz.inffast:	h.inffast
@
