head	1.4;
access;
symbols
	JSLib-0_07:1.4
	JSLib-0_06:1.3
	JSLib-0_05:1.2
	JSLib-0_04:1.2
	dcotton_autobuild_BaseSW:1.2
	JSLib-0_03:1.2
	JSLib-0_02:1.2
	sbrodie_32bit_compat:1.2
	ahodgkin_207release:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2012.01.14.23.07.41;	author srevill;	state Exp;
branches;
next	1.3;
commitid	BJWDf23NGjh3bcPv;

1.3
date	2007.01.27.02.15.59;	author srevill;	state Exp;
branches;
next	1.2;

1.2
date	98.09.10.12.37.17;	author ahodgkin;	state Exp;
branches;
next	1.1;

1.1
date	98.04.28.16.27.55;	author ahodgkin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.04.28.16.27.55;	author ahodgkin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.07. Tagged as 'JSLib-0_07'
@
text
@# Copyright 1998 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for JavaScript test application
# ========================================
#

# -----------------------------------------------------------------------------
# Change List
#

# Date		Name	Description
# ====		====	===========
# 28-Apr-98	ADH	Created.
# 02-Jun-98	ADH	Added USEMEMLIB option to DFLAGS and DDFLAGS
#			to fit in with similar useage in JSLib and
#			NSPRLib themselves.
# 10-Sep-1998	ADH	Updated DFLAGS and DDFLAGS fit with new NSPRLib
#			USE_NSPRLIB_ALLOC_REGISTRATION option. MEMLIB
#			added to libraries list now that it won't be part
#			of NSPRLib or JSLib and this test program does
#			reregister malloc() etc. to MemLib versions.

# -----------------------------------------------------------------------------
# Paths
#

EXP_HDR		= <export$dir>
LIBDIR		= <Lib$Dir>

# -----------------------------------------------------------------------------
# Generic options:
#

MKDIR		= cdir
AS		= objasm
CP		= copy
CC		= cc
CM		= cmhg
RM		= remove
LD		= link
LB		= libfile
TOUCH		= create
WIPE		= x wipe

CCFLAGS		= -c -depend !Depend -ffah -throwback -Wp ${INCLUDES} ${UFLAGS}
ASFLAGS		= -depend !Depend -Stamp -quit
CPFLAGS		= ~cfr~v
LBFLAGS		= -c
WFLAGS		= ~CFR~V

# -----------------------------------------------------------------------------
# Libraries
#

CLIB		= CLIB:o.stubs
INETLIB		= TCPIPLibs:o.inetlib
RLIB		= RISCOSLIB:o.risc_oslib
RSTUBS		= RISCOSLIB:o.rstubs
ROMSTUBS	= RISCOSLIB:o.romstubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.AbsSym
JSLIB		= C:JSLib.o.JSLib
NSPRLIB		= C:NSPRLib.o.NSPRLib
MEMLIB		= C:MemLib.o.MemLib

LIBS = \
 ${INETLIB} \
 ${JSLIB} \
 ${NSPRLIB} \
 ${MEMLIB} \
 ${CLIB}

LIBSD = \
 ${INETLIB} \
 ${JSLIB} \
 ${NSPRLIB} \
 ${MEMLIB} \
 ${CLIB}

# -----------------------------------------------------------------------------
# Include files
#

INCLUDES	= -IC:,TCPIPLibs:,C:NSPRLib,C:JSLib

# -----------------------------------------------------------------------------
# Compile-time options
#

UFLAGS		= -UXP_UNIX  -UXP_OS2  -UXP_MAC
DFLAGS		= -DCOMPAT_INET4  -DRISCOS  -DNSPR20  -DJSFILE  -DUSE_NSPRLIB_ALLOC_REGISTRATION
DDFLAGS		= -DCOMPAT_INET4  -DRISCOS  -DNSPR20  -DJSFILE  -DUSE_NSPRLIB_ALLOC_REGISTRATION  -DTRACE

# -----------------------------------------------------------------------------
# Program specific options:
#

COMPONENT	= !TstImage
COMPONENTD	= !TstImageD
SOURCE		= ...
TARGET		= ${COMPONENT}
TARGETD		= ${COMPONENTD}

OBJS = \
 o.JSTests

OBJSD = \
 od.svcprint \
 od.JSTests

# -----------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES: .o .od .s .c

.c.o:;		@@echo
		@@echo Compiling $<
		@@echo ${DFLAGS}
		@@${CC} ${CCFLAGS} ${DFLAGS} -o $@@ $<

.c.od:;		@@echo
		@@echo Compiling $<
		@@echo ${DDFLAGS}
		@@${CC} ${CCFLAGS} ${DDFLAGS} -g -o $@@ $<

.s.o:;		@@echo
		@@echo Assembling $<
		@@echo ${ASFLAGS}
		@@${AS} ${ASFLAGS} -o $@@ $<

# -----------------------------------------------------------------------------
# Build the application:
#

all:	${TARGET} dirs
	@@echo ${COMPONENT}: Application built (disc, non-debug)

all_d:	${TARGETD} dirs
	@@echo ${COMPONENTD}: Application built (disc, debug)

# -----------------------------------------------------------------------------
# Build rules:
#

clean:
	${WIPE} o  ${WFLAGS}
	${WIPE} od ${WFLAGS}
	${RM} ${TARGET}
	${RM} ${TARGETD}
	${RM} local_dirs
	@@echo
	@@echo ${COMPONENT}: Cleaned

local_dirs:
	${MKDIR} o
	${MKDIR} od
	${TOUCH} local_dirs

dirs:
	${MKDIR} o
	${MKDIR} od

# -----------------------------------------------------------------------------
# Final link
#

${TARGET}: ${OBJS} local_dirs
	@@echo
	${LD} -o ${COMPONENT} ${OBJS} ${LIBS}

${TARGETD}: ${OBJSD} local_dirs
	@@echo
	${LD} -debug -o ${COMPONENTD} ${OBJSD} ${LIBSD}

# -----------------------------------------------------------------------------
# Dynamic dependencies:
@


1.3
log
@  Lots of new bits required for the latest Browse build
Detail:
  Some tweaks and lots of header files added to support the latest Browse
  build.
Admin:
  Yet to be tested fully in a ROOL-Browse build

Version 0.06. Tagged as 'JSLib-0_06'
@
text
@d55 1
a55 1
WIPE		= -wipe
@


1.2
log
@Updated to use NSPRLib's reregisterable memory allocation functions. Test
script runner and interactive interpreter both replace the malloc() family
with MemLib equivalents.
@
text
@a78 1
 ${CLIB} \
d82 2
a83 1
 ${MEMLIB}
a85 1
 ${CLIB} \
d89 2
a90 1
 ${MEMLIB}
@


1.1
log
@Initial revision
@
text
@d26 8
d76 1
d82 2
a83 1
 ${NSPRLIB}
d89 2
a90 1
 ${NSPRLIB}
d103 2
a104 2
DFLAGS		= -DCOMPAT_INET4  -DRISCOS  -DNSPR20  -DJSFILE
DDFLAGS		= -DCOMPAT_INET4  -DRISCOS  -DNSPR20  -DJSFILE  -DTRACE
@


1.1.1.1
log
@
First attempt at a port of the NSPR (Netscape Portable Runtime), with just
enough in it to support JavaScript.

@
text
@@
