head	1.3;
access;
symbols
	ImageLib-0_09:1.3
	ImageLib-0_08:1.3
	ImageLib-0_07:1.3
	ImageLib-0_06:1.3
	ImageLib-0_05:1.3
	ImageLib-0_04:1.3
	ImageLib-0_03:1.3
	ImageLib-0_02:1.3
	ImageLib-0_01:1.3
	dcotton_autobuild_BaseSW:1.3
	ahodgkin_207release:1.3
	ahodgkin_206release:1.3
	ahodgkin_205release:1.3
	ahodgkin_133beta:1.3
	kbracey_126beta:1.2
	kbracey_AW97patch:1.2
	ahodgkin_AW97:1.2;
locks; strict;
comment	@# @;


1.3
date	97.11.06.18.00.59;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	97.09.12.14.07.56;	author rleggett;	state Exp;
branches;
next	1.1;

1.1
date	97.07.21.12.25.01;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@More optimisations - in particular background GIFs are now converted into
the current mode and palette.
Sprite plotter (used for backgrounds) sped up.
Background chunk now read correctly and gamma corrected in PNGs (for
sprite output and use as page backgrounds).
Support for PNG pHYS chunk added.
<8bpp greyscale PNGs where no gamma correction was done didn't work.
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
typedef struct sprite_loaddata
{
    int bytesloaded;
    int memory;
    int readptr;
    int bpp;
    int palsize;
    unsigned int paloffset;
    int xeig, yeig;
    char name[12];
} Spriteloaddata;

extern int NewSprite(Image *im);
extern _kernel_oserror *RenderSprite(Image *this, int x, int y, int scale, int x_size, int y_size);
extern _kernel_oserror *ModeChangeSprite(Image *this);
extern _kernel_oserror *DumpToCacheSprite(Image *this, const char *filename, int *justuseorig);
extern _kernel_oserror *StartExportSprite(Image *this, int *size);
_kernel_oserror *DeleteSprite(Image *this);
_kernel_oserror *SpriteDumpSprite(Image *this, const char *filename, int maxbpp);
@


1.2
log
@Problems with DumpSprite for IMAGE_FAST images corrected.
@
text
@d21 2
a22 1
    int pal;
@


1.1
log
@First commit to CVS
@
text
@d32 1
@
