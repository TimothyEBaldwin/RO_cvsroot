head	1.2;
access;
symbols
	ImageLib-0_09:1.2
	ImageLib-0_08:1.2
	ImageLib-0_07:1.2
	ImageLib-0_06:1.2
	ImageLib-0_05:1.2
	ImageLib-0_04:1.2
	ImageLib-0_03:1.2
	ImageLib-0_02:1.2
	ImageLib-0_01:1.2
	dcotton_autobuild_BaseSW:1.2
	ahodgkin_207release:1.2
	ahodgkin_206release:1.2
	ahodgkin_205release:1.2
	ahodgkin_133beta:1.2
	kbracey_126beta:1.2
	kbracey_AW97patch:1.2
	ahodgkin_AW97:1.1;
locks; strict;
comment	@# @;


1.2
date	97.10.21.15.47.46;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.07.21.12.24.56;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Stripped down lzw_[de]comp into a lean, mean compressing machine.
Converted it to 11-bit LZW to save memory in compression tables.
Fixed lots of redraw errors in the GIF code.
Stopped PNG code attempting to do alpha processing on RISC OS 3.1 (we
don't have a ColourTrans to supply the inverse table).
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* lzw_decomp.h - interface to LZW decompressor */

  /* type for procedure, provided by user, which provides batch of input
     bytes to decompressor on request; when infiller_proc is called:
       inbuff     = pointer to start of buffer to fill
       inbuffsize = maximum bytes to provide (minimum is 2, except at end)
       handle     = arbitrary user pointer, given to LZW_decompress_start
     infiller_proc should return number of bytes filled; <2 implies end */
typedef int (*infiller_proc)(uint8 *inbuff, int inbuffsize, void *handle);

extern _kernel_oserror* LZW_decompress_start(uint8 *data);
  /* Begin LZW decompression sequence */

#ifdef TRACE
extern _kernel_oserror* LZW_decompress_next(uint8 *buffer, int buffer_size, uint8 *indata, int* bytes_out);
#else
extern _kernel_oserror* LZW_decompress_next(uint8 *buffer, int buffer_size, uint8 *indata);
#endif
  /* decompress next batch, writing up to 'buffer_size' output bytes to
     buffer; returns actual number of bytes written (less than buffer_size
     means user infiller procedure has finished supplying decompressor) */

extern void LZW_decompress_end(void);
  /* free memory used by LZW decompressor */

@


1.1
log
@First commit to CVS
@
text
@d25 2
a26 8
extern _kernel_oserror* LZW_decompress_start(infiller_proc infiller, char client_id,
                                 int data_bits, void *handle, uint8 *data);
  /* Begin LZW decompression sequence, registering infiller function provided
       by client which will, on request, provide a batch of bytes to be
       decompressed.
     client_id is 'G' for GIF images, 'T' for TIFF images
     data_bits is nominal bits per decoded data item (2..8)
     handle is arbitrary client pointer which will be passed to infiller */
d28 1
d30 3
@
