head	1.4;
access;
symbols
	ImageLib-0_09:1.4
	ImageLib-0_08:1.4
	ImageLib-0_07:1.4
	ImageLib-0_06:1.4
	ImageLib-0_05:1.4
	ImageLib-0_04:1.4
	ImageLib-0_03:1.4
	ImageLib-0_02:1.4
	ImageLib-0_01:1.4
	dcotton_autobuild_BaseSW:1.4
	ahodgkin_207release:1.4
	ahodgkin_206release:1.4
	ahodgkin_205release:1.4
	ahodgkin_133beta:1.4
	kbracey_126beta:1.4
	kbracey_AW97patch:1.3
	ahodgkin_AW97:1.3;
locks; strict;
comment	@# @;


1.4
date	97.10.27.18.14.46;	author kbracey;	state Exp;
branches;
next	1.3;

1.3
date	97.10.15.12.54.49;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	97.10.14.17.46.01;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.07.21.12.24.53;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Rendering in filler functions in non-EX1 EY1 modes should now work.
PNG background images with alpha now handled properly.
@
text
@/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
extern _kernel_oserror *imgtrnsError(const char *s);
extern _kernel_oserror *StartExport(flex_ptr source, int len, int offset);
extern _kernel_oserror *Export(Image *this, char *buffer, int *len);
extern _kernel_oserror *EndExport(Image *this);
extern _kernel_oserror *BGCol(void *spr_ptr, int *bgcol);
extern _kernel_oserror *BGColSimple(Image *this, int *bgcol, int dontoverride);
extern int SpriteAreaSize(void *mode, int w, int h);

extern _kernel_oserror *MakeBufferSprite(void *mode, int w, int h, int **palette);
extern _kernel_oserror *SwitchToBufferSprite(void);
extern _kernel_oserror *SwitchFromBufferSprite(void);
extern _kernel_oserror *FreeBufferSprite(void);
extern _kernel_oserror *BufferSprite_TableSize(int *bufsize);
extern _kernel_oserror *BufferSprite_GenerateTable(void *table);
extern _kernel_oserror *BufferSprite_PlotScaled(int x, int y, int flags, int *fac, void *table);

#define SprExtendBonus 16

#define NOT_USED(a) {a=a}
@


1.3
log
@Made png.c alloc a bit more to avoid SpriteExtend bug
@
text
@d20 1
a20 1
extern _kernel_oserror *BGColSimple(Image *this, int *bgcol);
d22 8
@


1.2
log
@Implemented background colour determination for JPEGs and GIFs.
Made basic BGCol routine work on 16 and 32 bpp sprites.
@
text
@d23 2
@


1.1
log
@First commit to CVS
@
text
@d19 1
a19 1
extern _kernel_oserror *BGCol(void *spr_ptr, int bpp, int *bgcol);
@
