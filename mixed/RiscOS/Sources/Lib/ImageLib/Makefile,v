head	1.15;
access;
symbols
	ImageLib-0_09:1.15
	ImageLib-0_08:1.15
	ImageLib-0_07:1.14
	ImageLib-0_06:1.14
	ImageLib-0_05:1.13
	ImageLib-0_04:1.12
	ImageLib-0_03:1.12
	ImageLib-0_02:1.12
	ImageLib-0_01:1.11
	dcotton_autobuild_BaseSW:1.12
	ahodgkin_207release:1.8
	ahodgkin_206release:1.8
	ahodgkin_205release:1.7
	ahodgkin_133beta:1.3
	kbracey_126beta:1.2
	kbracey_AW97patch:1.1
	ahodgkin_AW97:1.1;
locks; strict;
comment	@# @;


1.15
date	2014.09.08.08.45.32;	author rsprowson;	state Exp;
branches;
next	1.14;
commitid	rdiUcSTBx1vaiwPx;

1.14
date	2007.10.19.21.22.27;	author srevill;	state Exp;
branches;
next	1.13;

1.13
date	2007.01.22.20.38.48;	author srevill;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.13.13.36.44;	author ahodgkin;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.04.14.40.01;	author sbrodie;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.30.14.07.32;	author ahodgkin;	state Exp;
branches;
next	1.9;

1.9
date	99.03.09.15.08.52;	author ahodgkin;	state Exp;
branches;
next	1.8;

1.8
date	98.07.03.10.19.05;	author dbrown;	state Exp;
branches;
next	1.7;

1.7
date	98.03.30.13.14.19;	author kbracey;	state Exp;
branches;
next	1.6;

1.6
date	98.03.24.14.37.21;	author kbracey;	state Exp;
branches;
next	1.5;

1.5
date	98.03.23.13.29.16;	author kbracey;	state Exp;
branches;
next	1.4;

1.4
date	98.03.03.11.30.42;	author kbracey;	state Exp;
branches;
next	1.3;

1.3
date	97.11.04.15.27.32;	author kbracey;	state Exp;
branches;
next	1.2;

1.2
date	97.10.30.16.25.39;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	97.07.21.12.22.57;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Default disable throwback
Makefile -throwback changed to ${THROWBACK}.

Version 0.08. Tagged as 'ImageLib-0_08'
@
text
@# Copyright 1997 Acorn Computers Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for ImageLib
#
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date       Name         Description
# ----       ----         -----------
# 1997-06-25 BAL          Created.
# 1999-03-09 ADH          'ImageLib:' changed to '${LIBDIR}.ImageLib.'.
# 2001-06-13 ADH          Wipes o and z directories as well as contents.
#

#
# Paths
#
EXP_HDR = <export$dir>
LIBDIR = <Lib$Dir>

#
# Generic options:
#
MKDIR   = cdir
AS      = objasm
CP      = copy
CC      = cc
CM      = cmhg
RM      = remove
LD      = link
LB      = libfile
WIPE    = x wipe

CCFLAGS = -c -depend !Depend -ff ${THROWBACK} ${INCLUDES} ${DFLAGS}
ASFLAGS = -depend !Depend -Stamp -quit
CPFLAGS = ~cfr~v
LBFLAGS = -c
WFLAGS  = ~CFR~V

#
# Libraries
#
CLIB      = CLIB:o.stubs
RLIB      = RISCOSLIB:o.risc_oslib
RSTUBS    = RISCOSLIB:o.rstubs
ROMSTUBS  = RISCOSLIB:o.romstubs
ROMCSTUBS = RISCOSLIB:o.romcstubs
ABSSYM    = RISC_OSLib:o.AbsSym
PNGLIB    = PNG.o.libpng-lib
PNGLIBZ   = PNG.o.libpng-lzm
ZLIB      = C:zlib.o.zlib
ZLIBZ     = C:zlib.o.zlibzm
JPEGLIB   = JPEG.o.libjpeg
LIBS      = ${PNGLIB} ${PNGLIBZ} ${ZLIB} ${ZLIBZ} ${JPEGLIB}

#
# Include files
#
INCLUDES = -Itbox:,C:,PNG,C:zlib,JPEG
DFLAGS    = -DRISCOS -DPNG_DEBUG=0

#
# Program specific options:
#
COMPONENT  = ImageLib
COMPONENTZ = ImageLibzm
SOURCE     = ...
TARGET     = o.${COMPONENT}
TARGETZ    = o.${COMPONENTZ}
EXPORTS    = ${EXP_HDR}.${COMPONENT}

OBJS =\
 o.cfsi\
 o.draw\
 o.gif\
 o.gif_stream\
 o.imagetrans\
 o.jpeg\
 o.jpeg_int\
 o.jpeg_parse\
 o.lzw_comp\
 o.lzw_decomp\
 o.png\
 o.render\
 o.rml_misc\
 o.sprite\
 o.xbm

OBJSZ =\
 z.cfsi\
 z.draw\
 z.gif\
 z.gif_stream\
 z.imagetrans\
 z.jpeg\
 z.jpeg_int\
 z.jpeg_parse\
 z.lzw_comp\
 z.lzw_decomp\
 z.png\
 z.render\
 z.rml_misc\
 z.sprite\
 z.xbm

#
# Rule patterns
#
.SUFFIXES: .o .s .h .cmhg .c .z
.c.o:;     ${CC} ${CCFLAGS} -o $@@ $<
.c.z:;     ${CC} ${CCFLAGS} -zM -o $@@ $<
.s.o:;     ${AS} ${ASFLAGS} -o $@@ $<
.cmhg.o:;  ${CM} ${CMFLAGS} -o $@@ $<
.cmhg.h:;  ${CM} ${CMFLAGS} -d $@@ $<

#
# build a the library:
#
all:	${TARGET} ${TARGETZ} ${LIBS}

${PNGLIB}:
	dir PNG
	amu ${MFLAGS} ${MAKECMDGOALS}
	back

${PNGLIBZ}:
	dir PNG
	amu ${MFLAGS} ${MAKECMDGOALS}
	back

${JPEGLIB}:
	dir JPEG
	amu ${MFLAGS} ${MAKECMDGOALS}
	back

#
# RISC OS ROM build rules:
#
export: export_${PHASE}

clean:
        ${WIPE}		o		${WFLAGS}
        ${WIPE}		z		${WFLAGS}
        @@echo ${COMPONENT}: cleaned

clean_all:
	Dir		PNG
	amu		clean
	back
	Dir		JPEG
	amu		clean
	back
        @@echo ${COMPONENT}: cleaned
        ${WIPE}		o		${WFLAGS}
        ${WIPE}		z		${WFLAGS}

export_hdrs: h.imagetrans o.dirs
	${CP} h.imagetrans	${LIBDIR}.ImageLib.h.imagetrans	~CFLNR~V
        @@echo ${COMPONENT}: export complete (hdrs)

export_libs: ${TARGET} ${TARGETZ} o.dirs
	${CP}	${TARGET}	${LIBDIR}.ImageLib.${TARGET}	~CFLNR~V
	${CP}	${TARGETZ}	${LIBDIR}.ImageLib.${TARGETZ}	~CFLNR~V
	${CP}	${PNGLIB}	${LIBDIR}.ImageLib.o.libpng-lib	~CFLNR~V
	${CP}	${PNGLIBZ}	${LIBDIR}.ImageLib.o.libpng-lzm	~CFLNR~V
	${CP}	${JPEGLIB}	${LIBDIR}.ImageLib.o.libjpeg	~CFLNR~V
        @@echo ${COMPONENT}: export complete (libs)

install: export_libs export_hdrs
	@@echo ${COMPONENT}: installed (exported)

o.local_dirs:
	${MKDIR} o
	${MKDIR} z
	Create o.local_dirs
	
o.dirs: o.local_dirs
        ${MKDIR} ${LIBDIR}
        ${MKDIR} ${LIBDIR}.ImageLib
        ${MKDIR} ${LIBDIR}.ImageLib.h
        ${MKDIR} ${LIBDIR}.ImageLib.o
 	Create o.dirs

#
# Final link
#
${TARGET}: ${OBJS} o.local_dirs
        ${LB} ${LBFLAGS} -o o.${COMPONENT} ${OBJS}

${TARGETZ}: ${OBJSZ} o.local_dirs
	${LB} ${LBFLAGS} -o o.${COMPONENTZ} ${OBJSZ}

${EXP_HDR}.${COMPONENT}: hdr.${COMPONENT}
        ${CP} hdr.${COMPONENT} $@@ ${CPFLAGS}

# Dynamic dependencies:
@


1.14
log
@Fixed so that it exports correctly with !Builder. No runtime checking.

Version 0.06. Tagged as 'ImageLib-0_06'
@
text
@d46 1
a46 1
CCFLAGS = -c -depend !Depend -ff -throwback ${INCLUDES} ${DFLAGS}
@


1.13
log
@  Minor tweaks to build and install correctly.
Detail:
  Some changes were required in order for this component to build and install
  correctly. These changes are required for the ROOL 'Browse' build.
Admin:
  Tested in Iyonix 'Browse' build using ROOL 'BuildEnv' build environment

Version 0.05. Tagged as 'ImageLib-0_05'
@
text
@d181 3
@


1.12
log
@  Dependencies stripped. Delete o and z directories. New function.
Detail:
  All cleaning-related TaskObey files run StripDepnd on the relevant
  Makefile now. The o and z directories are wiped for ImageLib, libjpeg
  and libpng since there are dirs rules to create them (previously the
  clean rules only wiped the contents). A new function, ImageLib_Version,
  returns the Module_HelpVersion string from VersionNum.
Admin:
  Tested improved clean rules and rebuilt from clean. Operation of
  ImageLib_Version not tested.

Version 0.02. Tagged as 'ImageLib-0_02'
@
text
@d44 1
a44 1
WIPE    = wipe
@


1.11
log
@Passes MAKECMDGOALS as well as MFLAGS to sub-make calls

Version 0.01. Tagged as 'ImageLib-0_01'
@
text
@d23 2
a24 1
# 1999-03-09 ADH          'ImageLib:' changed to '${LIBDIR}.ImageLib.'
d154 2
a155 2
        ${WIPE}		o.*		${WFLAGS}
        ${WIPE}		z.*		${WFLAGS}
d166 2
a167 2
        ${WIPE}		o.*		${WFLAGS}
        ${WIPE}		z.*		${WFLAGS}
@


1.10
log
@  Added missing dependency.
Detail:
  When building from a pruned checkout, the Makefile assumed an "o"
  directory was present due to a missing dependency on local_dirs.
Admin:
  Checked that it builds from clean.
@
text
@d134 1
a134 1
	amu ${MFLAGS}
d139 1
a139 1
	amu ${MFLAGS}
d144 1
a144 1
	amu ${MFLAGS}
@


1.9
log
@Makefile updated to work in current build environment
@
text
@d185 1
a185 1
o.dirs:
@


1.8
log
@Added drawfile support.
@
text
@d23 1
d99 1
a99 1
 
d169 1
a169 1
	${CP} h.imagetrans	ImageLib:h.imagetrans	~CFLNR~V
d173 5
a177 5
	${CP}	${TARGET}	ImageLib:${TARGET}	~CFLNR~V
	${CP}	${TARGETZ}	ImageLib:${TARGETZ}	~CFLNR~V
	${CP}	${PNGLIB}	ImageLib:o.libpng-lib	~CFLNR~V
	${CP}	${PNGLIBZ}	ImageLib:o.libpng-lzm	~CFLNR~V
	${CP}	${JPEGLIB}	ImageLib:o.libjpeg	~CFLNR~V
d188 2
a189 2
        ${MKDIR} ImageLib:h
        ${MKDIR} ImageLib:o
d191 1
a191 1
       
@


1.7
log
@Removed zlib. Imagelib now uses zlib exported from Sources.Lib
@
text
@d84 1
d101 1
@


1.6
log
@Fixed JPEG decompression in <=4bpp modes.
Added simple dithering to decompression in 16bpp modes.
Made SpriteExtend JPEG code switch to internal code when it spots that
a JPEG is too hard for SpriteExtend.
@
text
@d61 2
a62 2
ZLIB      = ZLib.o.zlib_lib
ZLIBZ     = ZLib.o.zlib_libzm
d69 1
a69 1
INCLUDES = -Itbox:,C:,PNG,ZLib,JPEG
a138 10
${ZLIB}:
	dir ZLib
	amu ${MFLAGS}
	back

${ZLIBZ}:
	dir ZLib
	amu ${MFLAGS}
	back

a157 3
	Dir		ZLIB
	amu		clean
	back
a173 2
	${CP}	${ZLIB}		ImageLib:o.zlib_lib	~CFLNR~V
	${CP}	${ZLIBZ}	ImageLib:o.zlib_libzm	~CFLNR~V
@


1.5
log
@Now links in IJG 6a code - can either use SpriteExtend or do it itself
@
text
@d89 1
d105 1
@


1.4
log
@Updated to libpng-0.99e and zlib-1.1.1
@
text
@d63 2
a64 1
LIBS      = ${PNGLIB} ${PNGLIBZ} ${ZLIB} ${ZLIBZ}
d69 1
a69 1
INCLUDES = -Itbox:,C:,PNG,ZLib
d78 2
a79 2
TARGET     = ${COMPONENT}
TARGETZ    = ${COMPONENTZ}
d88 1
d103 1
d125 1
a125 1
all:	${COMPONENT} ${COMPONENTZ} ${LIBS}
d147 5
a159 2
        ${RM}		${TARGET}
	${RM}		${TARGETZ}	
d169 3
a174 2
        ${RM}		${TARGET}
	${RM}		${TARGETZ}
d176 1
a176 1
export_hdrs: h.imagetrans dirs
d180 3
a182 3
export_libs: ${TARGET} ${TARGETZ} dirs
	${CP}	o.${TARGET}	ImageLib:o.${TARGET}	~CFLNR~V
	${CP}	o.${TARGETZ}	ImageLib:o.${TARGETZ}	~CFLNR~V
d187 1
d190 1
a190 1
local_dirs:
d193 1
d195 1
a195 1
dirs:
d200 2
a201 1
        
d205 1
a205 1
${TARGET}: ${OBJS} local_dirs
d208 1
a208 1
${TARGETZ}: ${OBJSZ} local_dirs
@


1.3
log
@Removed lots of compilation warnings in PNG stuff.
Added some "fast plot without translation" optimisations.
Convert RGB PNGs with <=5 significant bits on every channel into 16bpp sprites.
Fixed a few RGB/greyscale tRNS anomalies.
Made sure no gamma correction occurs if no gAMA chunk in PNG.
Ensured that values 0 and 255 in alpha blending gamma tables are correct.
Made < 8bpp paletted PNGs with complex transparency work.
Made n bpp paletted PNGs with <n^(1/2) palette entries work. (eg 8bpp images
with 8 palette entries (yuck)).
Ensured spare palette entries in PNGs cleared.
Added support for saving paletted transparent PNGs as sprites composited onto the PNG
background colour.
Added support for alpha blending in < 8bpp modes.
@
text
@d68 1
a68 1
INCLUDES = -Itbox:,C:
@


1.2
log
@Did major sorting out of 24 bit PNG images on RISC OS 3.1.
Implemented alpha blending on RISC OS 3.1.
@
text
@d69 1
a69 1
DFLAGS    = -DRISCOS
@


1.1
log
@First commit to CVS
@
text
@a90 1
 o.riscospal\
a104 1
 z.riscospal\
a204 264
o.cfsi:	c.cfsi
o.cfsi:	C:h.swis
o.cfsi:	C:h.kernel
o.cfsi:	h.imagetrans
o.cfsi:	tbox:h.flex
o.cfsi:	h.internal
o.cfsi:	h.cfsi
o.gif:	c.gif
o.gif:	C:h.swis
o.gif:	C:h.kernel
o.gif:	h.defines
o.gif:	h.imagetrans
o.gif:	tbox:h.flex
o.gif:	h.datastruct
o.gif:	h.gif
o.gif:	h.gif_stream
o.gif:	h.render
o.gif:	h.rml_misc
o.gif_stream:	c.gif_stream
o.gif_stream:	C:h.kernel
o.gif_stream:	C:h.swis
o.gif_stream:	tbox:h.wimp
o.gif_stream:	h.imagetrans
o.gif_stream:	tbox:h.flex
o.gif_stream:	h.internal
o.gif_stream:	h.defines
o.gif_stream:	h.datastruct
o.gif_stream:	h.gif_stream
o.gif_stream:	h.sprite
o.gif_stream:	tbox:h.flex
o.gif_stream:	h.lzw_comp
o.gif_stream:	h.lzw_decomp
o.gif_stream:	h.render
o.gif_stream:	h.rml_misc
o.imagetrans:	c.imagetrans
o.imagetrans:	C:h.swis
o.imagetrans:	C:h.kernel
o.imagetrans:	h.imagetrans
o.imagetrans:	tbox:h.flex
o.imagetrans:	h.internal
o.imagetrans:	h.defines
o.imagetrans:	h.datastruct
o.imagetrans:	h.gif
o.imagetrans:	h.cfsi
o.imagetrans:	h.jpeg
o.imagetrans:	h.xbm
o.imagetrans:	h.png
o.imagetrans:	h.sprite
o.imagetrans:	PNG.h.png
o.imagetrans:	PNG.h.zlib
o.imagetrans:	PNG.h.zconf
o.imagetrans:	PNG.h.pngconf
o.jpeg:	c.jpeg
o.jpeg:	C:h.swis
o.jpeg:	C:h.kernel
o.jpeg:	h.imagetrans
o.jpeg:	tbox:h.flex
o.jpeg:	h.internal
o.jpeg:	h.jpeg
o.jpeg:	h.sprite
o.lzw_comp:	c.lzw_comp
o.lzw_comp:	C:h.swis
o.lzw_comp:	C:h.kernel
o.lzw_comp:	tbox:h.flex
o.lzw_comp:	h.defines
o.lzw_comp:	h.lzw_comp
o.lzw_comp:	h.imagetrans
o.lzw_comp:	h.datastruct
o.lzw_comp:	h.render
o.lzw_comp:	h.rml_misc
o.lzw_decomp:	c.lzw_decomp
o.lzw_decomp:	C:h.swis
o.lzw_decomp:	C:h.kernel
o.lzw_decomp:	tbox:h.flex
o.lzw_decomp:	h.defines
o.lzw_decomp:	h.lzw_decomp
o.png:	c.png
o.png:	C:h.swis
o.png:	C:h.kernel
o.png:	h.imagetrans
o.png:	tbox:h.flex
o.png:	h.internal
o.png:	h.png
o.png:	h.sprite
o.png:	PNG.h.png
o.png:	PNG.h.zlib
o.png:	PNG.h.zconf
o.png:	PNG.h.pngconf
o.png:	h.riscospal
o.render:	c.render
o.render:	C:h.swis
o.render:	C:h.kernel
o.render:	tbox:h.flex
o.render:	h.defines
o.render:	tbox:h.wimp
o.render:	h.imagetrans
o.render:	h.datastruct
o.render:	h.render
o.render:	h.lzw_comp
o.render:	h.lzw_decomp
o.render:	h.rml_misc
o.riscospal:	c.riscospal
o.riscospal:	PNG.h.png
o.riscospal:	PNG.h.zlib
o.riscospal:	PNG.h.zconf
o.riscospal:	PNG.h.pngconf
o.riscospal:	h.riscospal
o.rml_misc:	c.rml_misc
o.rml_misc:	C:h.swis
o.rml_misc:	C:h.kernel
o.rml_misc:	h.rml_misc
o.rml_misc:	h.defines
o.sprite:	c.sprite
o.sprite:	C:h.swis
o.sprite:	C:h.kernel
o.sprite:	tbox:h.flex
o.sprite:	h.imagetrans
o.sprite:	h.internal
o.sprite:	h.sprite
o.sprite:	h.defines
o.sprite:	h.datastruct
o.sprite:	h.gif
o.xbm:	c.xbm
o.xbm:	C:h.swis
o.xbm:	C:h.kernel
o.xbm:	tbox:h.flex
o.xbm:	h.imagetrans
o.xbm:	h.internal
o.xbm:	h.xbm
o.xbm:	h.defines
o.xbm:	h.datastruct
o.xbm:	h.gif
z.cfsi:	c.cfsi
z.cfsi:	C:h.swis
z.cfsi:	C:h.kernel
z.cfsi:	h.imagetrans
z.cfsi:	tbox:h.flex
z.cfsi:	h.internal
z.cfsi:	h.cfsi
z.gif:	c.gif
z.gif:	C:h.swis
z.gif:	C:h.kernel
z.gif:	h.defines
z.gif:	h.imagetrans
z.gif:	tbox:h.flex
z.gif:	h.datastruct
z.gif:	h.gif
z.gif:	h.gif_stream
z.gif:	h.render
z.gif:	h.rml_misc
z.gif_stream:	c.gif_stream
z.gif_stream:	C:h.kernel
z.gif_stream:	C:h.swis
z.gif_stream:	tbox:h.wimp
z.gif_stream:	h.imagetrans
z.gif_stream:	tbox:h.flex
z.gif_stream:	h.internal
z.gif_stream:	h.defines
z.gif_stream:	h.datastruct
z.gif_stream:	h.gif_stream
z.gif_stream:	h.sprite
z.gif_stream:	tbox:h.flex
z.gif_stream:	h.lzw_comp
z.gif_stream:	h.lzw_decomp
z.gif_stream:	h.render
z.gif_stream:	h.rml_misc
z.imagetrans:	c.imagetrans
z.imagetrans:	C:h.swis
z.imagetrans:	C:h.kernel
z.imagetrans:	h.imagetrans
z.imagetrans:	tbox:h.flex
z.imagetrans:	h.internal
z.imagetrans:	h.defines
z.imagetrans:	h.datastruct
z.imagetrans:	h.gif
z.imagetrans:	h.cfsi
z.imagetrans:	h.jpeg
z.imagetrans:	h.xbm
z.imagetrans:	h.png
z.imagetrans:	h.sprite
z.imagetrans:	PNG.h.png
z.imagetrans:	PNG.h.zlib
z.imagetrans:	PNG.h.zconf
z.imagetrans:	PNG.h.pngconf
z.jpeg:	c.jpeg
z.jpeg:	C:h.swis
z.jpeg:	C:h.kernel
z.jpeg:	h.imagetrans
z.jpeg:	tbox:h.flex
z.jpeg:	h.internal
z.jpeg:	h.jpeg
z.jpeg:	h.sprite
z.lzw_comp:	c.lzw_comp
z.lzw_comp:	C:h.swis
z.lzw_comp:	C:h.kernel
z.lzw_comp:	tbox:h.flex
z.lzw_comp:	h.defines
z.lzw_comp:	h.lzw_comp
z.lzw_comp:	h.imagetrans
z.lzw_comp:	h.datastruct
z.lzw_comp:	h.render
z.lzw_comp:	h.rml_misc
z.lzw_decomp:	c.lzw_decomp
z.lzw_decomp:	C:h.swis
z.lzw_decomp:	C:h.kernel
z.lzw_decomp:	tbox:h.flex
z.lzw_decomp:	h.defines
z.lzw_decomp:	h.lzw_decomp
z.png:	c.png
z.png:	C:h.swis
z.png:	C:h.kernel
z.png:	h.imagetrans
z.png:	tbox:h.flex
z.png:	h.internal
z.png:	h.png
z.png:	h.sprite
z.png:	PNG.h.png
z.png:	PNG.h.zlib
z.png:	PNG.h.zconf
z.png:	PNG.h.pngconf
z.png:	h.riscospal
z.render:	c.render
z.render:	C:h.swis
z.render:	C:h.kernel
z.render:	tbox:h.flex
z.render:	h.defines
z.render:	tbox:h.wimp
z.render:	h.imagetrans
z.render:	h.datastruct
z.render:	h.render
z.render:	h.lzw_comp
z.render:	h.lzw_decomp
z.render:	h.rml_misc
z.riscospal:	c.riscospal
z.riscospal:	PNG.h.png
z.riscospal:	PNG.h.zlib
z.riscospal:	PNG.h.zconf
z.riscospal:	PNG.h.pngconf
z.riscospal:	h.riscospal
z.rml_misc:	c.rml_misc
z.rml_misc:	C:h.swis
z.rml_misc:	C:h.kernel
z.rml_misc:	h.rml_misc
z.rml_misc:	h.defines
z.sprite:	c.sprite
z.sprite:	C:h.swis
z.sprite:	C:h.kernel
z.sprite:	tbox:h.flex
z.sprite:	h.imagetrans
z.sprite:	h.internal
z.sprite:	h.sprite
z.sprite:	h.defines
z.sprite:	h.datastruct
z.sprite:	h.gif
z.xbm:	c.xbm
z.xbm:	C:h.swis
z.xbm:	C:h.kernel
z.xbm:	tbox:h.flex
z.xbm:	h.imagetrans
z.xbm:	h.internal
z.xbm:	h.xbm
z.xbm:	h.defines
z.xbm:	h.datastruct
z.xbm:	h.gif
@
