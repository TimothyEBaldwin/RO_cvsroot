head	1.3;
access;
symbols
	Internet-5_66:1.3
	Internet-5_65:1.3
	Internet-5_64:1.3
	Internet-5_63:1.3
	Internet-5_62:1.3
	Internet-5_61:1.3
	Internet-5_60:1.2
	Internet-5_59:1.2
	Internet-5_58:1.2
	Internet-5_57:1.2
	Internet-5_56:1.2
	Internet-5_55:1.2
	Internet-5_54:1.2
	Internet-5_53:1.2
	Internet-5_52:1.2
	Internet-5_51:1.2
	Internet-5_50:1.2
	Internet-5_49:1.2
	Internet-5_48:1.2
	Internet-5_47:1.2
	Internet-5_46:1.2
	RO_5_07:1.2
	Internet-5_45:1.2
	Internet-5_44:1.2
	Internet-5_43b:1.2
	Internet-5_43a:1.2
	Internet-5_43:1.2
	Internet-5_42:1.1.1.1
	Internet-5_41:1.1.1.1
	Internet-5_40:1.1.1.1
	Internet-5_39:1.1.1.1
	Internet-5_38:1.1.1.1
	Internet-5_37:1.1.1.1
	Internet-5_36:1.1.1.1
	Internet-5_35:1.1.1.1
	Internet-5_34:1.1.1.1
	Internet-5_33:1.1.1.1
	Internet-5_32:1.1.1.1
	Internet-5_31:1.1.1.1
	Internet-5_30:1.1.1.1
	kbracey_Internet_000204:1.1.1.1
	nbingham_Internet_991119:1.1.1.1
	nbingham_Internet_991007:1.1.1.1
	nturton_Internet-0_00:1.1.1.1
	mstphens_UrsulaRiscPCBuild_20Nov98:1.1.1.1
	Ursula_RiscPC:1.1.1.1.0.4
	rthornb_UrsulaBuild-19Aug1998:1.1.1.1
	UrsulaBuild_FinalSoftload:1.1.1.1
	Ursula:1.1.1.1.0.2
	Ursula_bp:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2018.03.23.22.25.07;	author rsprowson;	state Exp;
branches;
next	1.2;
commitid	0KXR3UzruywliDvA;

1.2
date	2003.12.03.18.17.19;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	98.07.06.13.39.04;	author sbrodie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.07.06.13.39.04;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fixes from static analysis
Ref https://www.riscosopen.org/forum/forums/4/topics/9503#posts-72595 and subsequent offline checks.

arp: missing return from non-void delete() (from FreeBSD 13977)
ifconfig: undefined variable m (from FreeBSD revision 13145)
          correct return types to void for xxx_getaddr() (from FreeBSD revision 19914)
inetstat: dead array variable buf2[] removed
ipvars: missing return value from main()
map-mbone: missing va_end (from NetBSD revision 1.8)
md5: file handle leak on error (from FreeBSD revision 292955)
mrinfo: missing va_end (from NetBSD revision 1.12)
mtrace: missing va_end (from NetBSD revision 1.18)
newfiler: add comment for apparent missing return
sysctl: fix QUAD variable type (from FreeBSD revision 88696)
        though academic since Internet doesn't have any quad_t variables explicit function return types added in PathConf.c
BootNet: change RMIfThere alias to use temporary variable from its own namespace

Version 5.61. Tagged as 'Internet-5_61'
@
text
@/* Copyright 1998 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * NewFiler 0.01 - reconstructed from binary by KJB
 */

#include <stdlib.h>
#include <string.h>

#include "kernel.h"
#include "swis.h"

#define Service_StartFiler 0x4B
#define Service_StartedFiler 0x4C

static const struct
{
    int errnum;
    char errmess[14];
}
outofmem_err = {0, "Out of memory"};

static const struct
{
    int errnum;
    char errmess[21];
}
nofiler_err = {0, "Filer task not found"};

char block[256];

const char *filer_taskname(void)
{
    int mfd[4];
    void *msgbuf;
    int size;

    size=_swi(MessageTrans_FileInfo, _IN(1)|_RETURN(2),
                                     "Resources:$.Resources.Filer.Messages");

    msgbuf=malloc(size);
    if (!msgbuf)
        _kernel_raise_error((_kernel_oserror *) &outofmem_err);

    _swi(MessageTrans_OpenFile, _INR(0,2),
                                mfd,
                                "Resources:$.Resources.Filer.Messages",
                                msgbuf);

    _swi(MessageTrans_Lookup, _INR(0,7),
                               mfd, "TskName",
                               block, sizeof block,
                               0, 0, 0, 0);

    _swi(MessageTrans_CloseFile, _IN(0), mfd);

    return block;
}

typedef struct
{
    int handle;
    char *name;
    int memory;
    int flags;
} TaskInfo;

int filer_task(void)
{
    static TaskInfo taskbuf[16];
    TaskInfo *ptr=taskbuf, *endptr;
    int count=0;
    const char *name=filer_taskname();

    while (count>=0)
    {
        count=_swi(TaskManager_EnumerateTasks, _INR(0,2)|_OUT(1)|_RETURN(0),
                                         count, taskbuf, sizeof taskbuf,
                                         &endptr);

        for (ptr=taskbuf; ptr < endptr; ptr++)
            if (strcmp(ptr->name, name)==0)
                return ptr->handle;
    }

    _kernel_raise_error((_kernel_oserror *) &nofiler_err);
    /* NOTREACHED */
}

void startfilers(void)
{
    int task=filer_task();
    int s;
    const char *cmd;

    for (;;)
    {
        cmd=(char *)_swi(OS_ServiceCall, _INR(0,1)|_OUT(1)|_RETURN(0),
                                          task, Service_StartFiler, &s);
        if (s != 0)
            break;

        _swi(Wimp_StartTask, _IN(0), cmd);
    }

    _swi(OS_ServiceCall, _IN(1), Service_StartedFiler);
}

int main(void)
{
    static int mlist[]={0};
    int event_code;
    int task;

    /* If not in desktop, return. */
    if (_swi(Wimp_ReadSysInfo, _IN(0)|_RETURN(0), 0) == 0)
        return 0;

    task=_swi(Wimp_Initialise, _INR(0,3)|_RETURN(1), 310, 0x4B534154, "Warm Start", mlist);

    do
    {
        event_code=_swi(Wimp_Poll, _INR(0,1), 0, block);
    }
    while (event_code!=0);

    startfilers();

    _swi(Wimp_CloseDown, _INR(0,1), task, 0x4B534154);

    return 0;
}
@


1.2
log
@ANSIized.

Version 5.43. Tagged as 'Internet-5_43'
@
text
@d99 1
@


1.1
log
@Initial revision
@
text
@d120 1
a120 1
int main()
@


1.1.1.1
log
@Import of source code for Internet support binaries and utilities.
@
text
@@
