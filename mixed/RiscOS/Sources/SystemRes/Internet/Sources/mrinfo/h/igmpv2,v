head	1.1;
access;
symbols
	Internet-5_66:1.1
	Internet-5_65:1.1
	Internet-5_64:1.1
	Internet-5_63:1.1
	Internet-5_62:1.1
	Internet-5_61:1.1
	Internet-5_60:1.1
	Internet-5_59:1.1
	Internet-5_58:1.1
	Internet-5_57:1.1
	Internet-5_56:1.1
	Internet-5_55:1.1
	Internet-5_54:1.1
	Internet-5_53:1.1
	Internet-5_52:1.1
	Internet-5_51:1.1
	Internet-5_50:1.1
	Internet-5_49:1.1
	Internet-5_48:1.1
	Internet-5_47:1.1
	Internet-5_46:1.1
	RO_5_07:1.1
	Internet-5_45:1.1
	Internet-5_44:1.1
	Internet-5_43b:1.1
	Internet-5_43a:1.1
	Internet-5_43:1.1
	Internet-5_42:1.1
	Internet-5_41:1.1
	Internet-5_40:1.1
	Internet-5_39:1.1
	Internet-5_38:1.1
	Internet-5_37:1.1
	Internet-5_36:1.1
	Internet-5_35:1.1
	Internet-5_34:1.1
	Internet-5_33:1.1
	Internet-5_32:1.1
	Internet-5_31:1.1
	Internet-5_30:1.1
	kbracey_Internet_000204:1.1
	nbingham_Internet_991119:1.1
	nbingham_Internet_991007:1.1;
locks; strict;
comment	@# @;


1.1
date	99.07.22.16.49.53;	author kbracey;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Added MRInfo.
MTrace would occasionally close someone else's socket.
@
text
@/* Copyright 1999 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * The mrouted program is covered by the license in the accompanying file
 * named "LICENSE".  Use of the mrouted program represents acceptance of
 * the terms and conditions listed in that file.
 *
 * The mrouted program is COPYRIGHT 1989 by The Board of Trustees of
 * Leland Stanford Junior University.
 *
 *
 * igmpv2.h,v 3.8.4.1 1997/11/18 23:25:58 fenner Exp
 */

/*
 * Constants for IGMP Version 2.  Several of these, especially the
 * robustness variable, should be variables and not constants.
 */
#define	IGMP_ROBUSTNESS_VARIABLE		2
#define	IGMP_QUERY_INTERVAL			125
#define	IGMP_QUERY_RESPONSE_INTERVAL		10
#define	IGMP_GROUP_MEMBERSHIP_INTERVAL		(IGMP_ROBUSTNESS_VARIABLE * \
					IGMP_QUERY_INTERVAL + \
					IGMP_QUERY_RESPONSE_INTERVAL)
#define	IGMP_OTHER_QUERIER_PRESENT_INTERVAL	(IGMP_ROBUSTNESS_VARIABLE * \
					IGMP_QUERY_INTERVAL + \
					IGMP_QUERY_RESPONSE_INTERVAL / 2)
						/* Round to the nearest TIMER_INTERVAL */
#define	IGMP_STARTUP_QUERY_INTERVAL		(((IGMP_QUERY_INTERVAL / 4) \
							/ TIMER_INTERVAL) * TIMER_INTERVAL)
#define	IGMP_STARTUP_QUERY_COUNT		IGMP_ROBUSTNESS_VARIABLE
#define	IGMP_LAST_MEMBER_QUERY_INTERVAL		1
#define	IGMP_LAST_MEMBER_QUERY_COUNT		IGMP_ROBUSTNESS_VARIABLE

/*
 * OLD_AGE_THRESHOLD is the number of IGMP_QUERY_INTERVAL's to remember the
 * presence of an IGMPv1 group member.  According to the IGMPv2 specification,
 * routers remember this presence for [Robustness Variable] * [Query Interval] +
 * [Query Response Interval].  However, OLD_AGE_THRESHOLD is in units of
 * [Query Interval], so doesn't have sufficient resolution to represent
 * [Query Response Interval].  When the timer mechanism gets an efficient
 * method of refreshing timers, this should get fixed.
 */
#define OLD_AGE_THRESHOLD		IGMP_ROBUSTNESS_VARIABLE
@
