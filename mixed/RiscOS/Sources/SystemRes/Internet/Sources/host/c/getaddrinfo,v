head	1.1;
access;
symbols
	Internet-5_66:1.1
	Internet-5_65:1.1
	Internet-5_64:1.1
	Internet-5_63:1.1
	Internet-5_62:1.1
	Internet-5_61:1.1
	Internet-5_60:1.1
	Internet-5_59:1.1
	Internet-5_58:1.1
	Internet-5_57:1.1
	Internet-5_56:1.1
	Internet-5_55:1.1
	Internet-5_54:1.1
	Internet-5_53:1.1
	Internet-5_52:1.1
	Internet-5_51:1.1
	Internet-5_50:1.1
	Internet-5_49:1.1
	Internet-5_48:1.1
	Internet-5_47:1.1
	Internet-5_46:1.1
	RO_5_07:1.1
	Internet-5_45:1.1
	Internet-5_44:1.1
	Internet-5_43b:1.1
	Internet-5_43a:1.1
	Internet-5_43:1.1
	Internet-5_42:1.1
	Internet-5_41:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.10.03.15.19.58;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Finally got sick of changing the version number in !Boot and !Run and AunMap
so now only !Help tells you the version.
Added lots of "-Dlint"s as previously the (un)lucky developer who checked
the source out got their name stamped in the released binaries.
#if'd out a bum switch which only makes sense for FreeBSD.
A bit more of 'host' imported,probably not worth finishing.

Version 5.41. Tagged as 'Internet-5_41'
@
text
@/* Copyright 2003 Tematic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Get address info */

#include "sys/types.h"
#include "sys/param.h"
#include "sys/socket.h"

#include "netinet/in.h"
#include "arpa/inet.h"
#include "arpa/nameser.h"

#include "ctype.h"
#include "netdb.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "unistd.h"

#include "memory.h"
#include "sys/errno.h"
#include "sys/stat.h"
#include "dst.h"

#include "resolv.h"

#include "port_after.h"

#define SUCCESS 0

int h_errno;
extern struct hostent *gethostbyname(const char *);

void
freeaddrinfo(ai)
        struct addrinfo *ai;
{
        struct addrinfo *next;

        do {
                next = ai->ai_next;
                if (ai->ai_canonname)
                        free(ai->ai_canonname);
                /* no need to free(ai->ai_addr) */
                free(ai);
                ai = next;
        } while (ai);
}

/* 1 unfinished */

int
getaddrinfo(hostname, servname, hints, res)
        const char *hostname, *servname;
        const struct addrinfo *hints;
        struct addrinfo **res;
{

/* Sweeping assumption: as Host only ever calls this with servname set to
   NULL this might as well be a gethostbyname if we ignore the hints it passes */

   struct hostent  *host;
   struct addrinfo sentinel;


   if (hostname == NULL && servname == NULL)
      return EAI_NONAME;

   host = gethostbyname(hostname);

   if (h_errno != NETDB_SUCCESS)
      {
      /* Unsuccessful */
      if (sentinel.ai_next) freeaddrinfo(sentinel.ai_next);
      *res = NULL;
      return h_errno;
      }
   else
      {
      /* Successful */
      if (sentinel.ai_next) 
         {
         sentinel.ai_flags =  0;
         sentinel.ai_family = 0;
         sentinel.ai_socktype = 0;
         sentinel.ai_protocol = 0;
         sentinel.ai_addrlen = (size_t)host->h_length;
         sentinel.ai_canonname = host->h_name;
         sentinel.ai_addr = 0;
         *res = sentinel.ai_next;
         return SUCCESS;
         }
      else
         {
         /* But no more */
         *res = NULL;
         return EAI_FAIL;
         }
      }

return h_errno;
}


@
