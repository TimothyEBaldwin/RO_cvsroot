head	1.2;
access;
symbols
	ChangeFSI-1_62:1.2
	ChangeFSI-1_61:1.2
	ChangeFSI-1_60:1.2
	ChangeFSI-1_59:1.2
	ChangeFSI-1_58:1.2
	ChangeFSI-1_57:1.2
	ChangeFSI-Import-IJG8d:1.2
	ChangeFSI-1_56:1.2
	ChangeFSI-1_55:1.2
	ChangeFSI-1_54:1.2
	ChangeFSI-1_53:1.2
	ChangeFSI-1_52:1.2
	ChangeFSI-1_51:1.2
	ChangeFSI-1_50:1.2
	ChangeFSI-1_49:1.2
	ChangeFSI-1_48:1.2
	ChangeFSI-1_47:1.2
	ChangeFSI-1_46:1.2
	ChangeFSI-1_45:1.2
	ChangeFSI-1_44:1.2
	ChangeFSI-1_43:1.2
	ChangeFSI-1_42:1.2
	ChangeFSI-1_41:1.2
	ChangeFSI-1_40:1.2
	ChangeFSI-1_39:1.2
	ChangeFSI-1_38:1.2
	ChangeFSI-1_37:1.2
	ChangeFSI-1_36:1.2
	ChangeFSI-1_35:1.2
	ChangeFSI-1_34:1.2
	ChangeFSI-1_33:1.2
	ChangeFSI-1_32:1.2
	ChangeFSI-1_31:1.2
	ChangeFSI-1_30:1.2
	ChangeFSI-1_29:1.2
	ChangeFSI-1_28:1.2
	ChangeFSI-1_27:1.2
	ChangeFSI-1_26:1.2
	ChangeFSI-1_25:1.2
	ChangeFSI-1_24:1.2
	ChangeFSI-1_23:1.1
	ChangeFSI-1_22:1.1
	ChangeFSI-1_21:1.1
	ChangeFSI-1_20:1.1
	ChangeFSI-1_19:1.1;
locks; strict;
comment	@# @;


1.2
date	2007.01.22.17.06.13;	author srevill;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.12.15.32.28;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Minor tweaks to build and install correctly.
Detail:
  Some changes were required in order for this component to build and install
  correctly with the newer cc.
Admin:
  Tested in Iyonix 'Disc' build using ROOL 'BuildEnv' build environment

Version 1.24. Tagged as 'ChangeFSI-1_24'
@
text
@/* pbmplus.h - header file for PBM, PGM, PPM, and PNM
**
** Copyright (C) 1988, 1989, 1991 by Jef Poskanzer.
**
** Permission to use, copy, modify, and distribute this software and its
** documentation for any purpose and without fee is hereby granted, provided
** that the above copyright notice appear in all copies and that both that
** copyright notice and this permission notice appear in supporting
** documentation.  This software is provided "as is" without express or
** implied warranty.
*/

#ifndef _PBMPLUS_H_
#define _PBMPLUS_H_

#ifndef RISCOS_TWEAK
/* Not required */
 #include <sys/types.h>
/* Not required */
#endif
#include <ctype.h>
#include <stdio.h>

#if defined(USG) || defined(SVR4)
#define SYSV
#endif
#if ! ( defined(BSD) || defined(SYSV) || defined(MSDOS) )
/* CONFIGURE: If your system is >= 4.2BSD, set the BSD option; if you're a
** System V site, set the SYSV option; and if you're IBM-compatible, set
** MSDOS.  If your compiler is ANSI C, you're probably better off setting
** SYSV - all it affects is string handling.
*/
#define BSD
/* #define SYSV */
/* #define MSDOS */
#endif

/* CONFIGURE: If you want to enable writing "raw" files, set this option.
** "Raw" files are smaller, and much faster to read and write, but you
** must have a filesystem that allows all 256 ASCII characters to be read
** and written.  You will no longer be able to mail P?M files without
** using uuencode or the equivalent, or running the files through pnmnoraw.
** Note that reading "raw" files works whether writing is enabled or not.
*/
#define PBMPLUS_RAWBITS

/* CONFIGURE: PGM can store gray values as either bytes or shorts.  For most
** applications, bytes will be big enough, and the memory savings can be
** substantial.  However, if you need more than 8 bits of grayscale resolution,
** then define this symbol.
*/
/* #define PGM_BIGGRAYS */

/* CONFIGURE: Normally, PPM handles a pixel as a struct of three grays.
** If grays are stored in bytes, that's 24 bits per color pixel; if
** grays are stored as shorts, that's 48 bits per color pixel.  PPM
** can also be configured to pack the three grays into a single longword,
** 10 bits each, 30 bits per pixel.
**
** If you have configured PGM with the PGM_BIGGRAYS option, AND you don't
** need more than 10 bits for each color component, AND you care more about
** memory use than speed, then this option might be a win.  Under these
** circumstances it will make some of the programs use 1.5 times less space,
** but all of the programs will run about 1.4 times slower.
**
** If you are not using PGM_BIGGRAYS, then this option is useless -- it
** doesn't save any space, but it still slows things down.
*/
/* #define PPM_PACKCOLORS */

/* CONFIGURE: uncomment this to enable debugging checks. */
/* #define DEBUG */

#ifdef SYSV

#include <string.h>
#define index(s,c) strchr(s,c)
#define rindex(s,c) strrchr(s,c)
#define srandom(s) srand(s)
#define random rand
#define bzero(dst,len) memset(dst,0,len)
#define bcopy(src,dst,len) memcpy(dst,src,len)
#define bcmp memcmp
extern void srand();
extern int rand();

#else /*SYSV*/

#include <string.h>
extern void srandom();
extern long random();

#endif /*SYSV*/

extern int atoi();
extern void exit();
extern long time();
extern int write();

/* CONFIGURE: On some systems, malloc.h doesn't declare these, so we have
** to do it.  On other systems, for example HP/UX, it declares them
** incompatibly.  And some systems, for example Dynix, don't have a
** malloc.h at all.  A sad situation.  If you have compilation problems
** that point here, feel free to tweak or remove these declarations.
*/
// #include <malloc.h>
// extern char* malloc();
// extern char* realloc();
// extern char* calloc();
#include <stdlib.h>

/* CONFIGURE: Some systems don't have vfprintf(), which we need for the
** error-reporting routines.  If you compile and get a link error about
** this routine, uncomment the first define, which gives you a vfprintf
** that uses the theoretically non-portable but fairly common routine
** _doprnt().  If you then get a link error about _doprnt, or
** message-printing doesn't look like it's working, try the second
** define instead.
*/
/* #define NEED_VFPRINTF1 */
/* #define NEED_VFPRINTF2 */

/* End of configurable definitions. */


#undef max
#define max(a,b) ((a) > (b) ? (a) : (b))
#undef min
#define min(a,b) ((a) < (b) ? (a) : (b))
#undef abs
#define abs(a) ((a) >= 0 ? (a) : -(a))
#undef odd
#define odd(n) ((n) & 1)


/* Definitions to make PBMPLUS work with either ANSI C or C Classic. */

#if __STDC__
#define ARGS(alist) alist
#else /*__STDC__*/
#define ARGS(alist) ()
#define const
#endif /*__STDC__*/


/* Initialization. */

void pm_init ARGS(( int* argcP, char* argv[] ));


/* Variable-sized arrays definitions. */

char** pm_allocarray ARGS(( int cols, int rows, int size ));
char* pm_allocrow ARGS(( int cols, int size ));
void pm_freearray ARGS(( char** its, int rows ));
void pm_freerow ARGS(( char* itrow ));


/* Case-insensitive keyword matcher. */

int pm_keymatch ARGS(( char* str, char* keyword, int minchars ));


/* Log base two hacks. */

int pm_maxvaltobits ARGS(( int maxval ));
int pm_bitstomaxval ARGS(( int bits ));


/* Error handling definitions. */

void pm_message ARGS(( char*, ... ));
void pm_error ARGS(( char*, ... ));			/* doesn't return */
void pm_perror ARGS(( char* reason ));			/* doesn't return */
void pm_usage ARGS(( char* usage ));			/* doesn't return */


/* File open/close that handles "-" as stdin and checks errors. */

FILE* pm_openr ARGS(( char* name ));
FILE* pm_openw ARGS(( char* name ));
void pm_close ARGS(( FILE* f ));


/* Endian I/O. */

int pm_readbigshort ARGS(( FILE* in, short* sP ));
int pm_writebigshort ARGS(( FILE* out, short s ));
int pm_readbiglong ARGS(( FILE* in, long* lP ));
int pm_writebiglong ARGS(( FILE* out, long l ));
int pm_readlittleshort ARGS(( FILE* in, short* sP ));
int pm_writelittleshort ARGS(( FILE* out, short s ));
int pm_readlittlelong ARGS(( FILE* in, long* lP ));
int pm_writelittlelong ARGS(( FILE* out, long l ));


#endif /*_PBMPLUS_H_*/
@


1.1
log
@Nuked a BICEQS in the shell code that got missed.
Choices now stored in choices$write not locally.
pcdtemp spool file now put in wimp$scrapdir not locally.
Removed binary stored hpcdtoppm (now built from sources).
Added tests directory which contain some useful test images for Changefsi
Port of newer "hpcdtoppm",the bits changed from the original are all
demarked by "RISCOS_TWEAK".

Version 1.19. Tagged as 'ChangeFSI-1_19'
@
text
@d41 1
a41 1
** and written.  You will no longer be able to mail P?M files without 
d89 1
a89 1
#include <strings.h>
@

