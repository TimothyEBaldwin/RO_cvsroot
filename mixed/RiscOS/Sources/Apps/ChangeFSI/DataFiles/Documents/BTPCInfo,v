head	4.1;
access;
symbols
	ChangeFSI-1_63:4.1
	ChangeFSI-1_62:4.1
	ChangeFSI-1_61:4.1
	ChangeFSI-1_60:4.1
	ChangeFSI-1_59:4.1
	ChangeFSI-1_58:4.1
	ChangeFSI-1_57:4.1
	ChangeFSI-Import-IJG8d:4.1
	ChangeFSI-1_56:4.1
	ChangeFSI-1_55:4.1
	ChangeFSI-1_54:4.1
	ChangeFSI-1_53:4.1
	ChangeFSI-1_52:4.1
	ChangeFSI-1_51:4.1
	ChangeFSI-1_50:4.1
	ChangeFSI-1_49:4.1
	ChangeFSI-1_48:4.1
	ChangeFSI-1_47:4.1
	ChangeFSI-1_46:4.1
	ChangeFSI-1_45:4.1
	ChangeFSI-1_44:4.1
	ChangeFSI-1_43:4.1
	ChangeFSI-1_42:4.1
	ChangeFSI-1_41:4.1
	ChangeFSI-1_40:4.1
	ChangeFSI-1_39:4.1
	ChangeFSI-1_38:4.1
	ChangeFSI-1_37:4.1
	ChangeFSI-1_36:4.1
	ChangeFSI-1_35:4.1
	ChangeFSI-1_34:4.1
	ChangeFSI-1_33:4.1
	ChangeFSI-1_32:4.1
	ChangeFSI-1_31:4.1
	ChangeFSI-1_30:4.1
	ChangeFSI-1_29:4.1
	ChangeFSI-1_28:4.1
	ChangeFSI-1_27:4.1
	ChangeFSI-1_26:4.1
	ChangeFSI-1_25:4.1
	ChangeFSI-1_24:4.1
	ChangeFSI-1_23:4.1
	ChangeFSI-1_22:4.1
	ChangeFSI-1_21:4.1
	ChangeFSI-1_20:4.1;
locks; strict;
comment	@# @;


4.1
date	2003.01.20.10.21.50;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


4.1
log
@Added btpc 4.1 support,though the detection in the main program has
always been there the binary vanished sometime round 1995.
Added abridged info on BTPC to the appropriate docs,plus docs updates
to reflect interesting information which seems to have been
progressively removed with time.
Yucky sprites added,Sprites23 deleted.
The output window now remembers where it was last opened instead of
always jumping to the middle of the screen.
You no longer need to be in a specific screen depth for any operation,
before (particularly using special mode "r") it needed to read the
palette in a particular mode - now if it realises it cannot it will look
for a default palette in its Palettes directory and only then give an
error.
Reinstated 256 colour special mode "t",this has always been missing the
4096 colour lookup table and most of the support for it was removed in
about 1992 though the assembler remained leading to a "No such variable"
error when trying to use it.GenCFSIict produces the table.

Version 1.20. Tagged as 'ChangeFSI-1_20'
@
text
@============================================================================
              Binary Tree Predictive Coding (BTPC), Version 4.1
============================================================================

What is BTPC?
=============

BTPC is a general-purpose image coding method for lossless or lossy 
compression of photographs and graphics. It is well suited for coding 
multimedia images which combine text, graphics and photographs, and 
is also appropriate as a general-purpose method when the image type
is not known in advance. 

As a lossy compressor, BTPC is slightly superior to JPEG for photographic 
images and much superior for graphics.  Visually-transparent coding of 
color graphics is usually possible at the rate used by GIF. Against a 
state-of-the-art lossy scheme (Said and Pearlman's modified zerotree 
coder), it is inferior for photographs but superior for graphics, mixed 
and multimedia images.  Moreover (see below), BTPC is much faster.

When applied losslessly, BTPC has good performance on both natural images
and graphics.  Against a state-of-the-art lossless scheme (Wu's CALIC), it 
is usually inferior for photographs and about the same for graphics. Again,
BTPC is much faster.

BTPC uses a binary pyramid, predictive coding and Huffman coding. No part of
it is covered by patents.  C++ source code is available and may be freely used. 
BTPC is inherently progressive, and a straightforward modification of the 
decoder to write directly to an on-screen picture buffer allows simple, 
progressive, image recovery.

Where to find it
================

BTPC is documented in:
  J A Robinson, "Efficient General-Purpose Image Compression with Binary Tree
  Predictive Coding", IEEE Transactions on Image Processing, Vol 6, No 4,
  April 1997, pp 601-607.
and, in more detail, at
  http://www.elec.york.ac.uk/visual/jar11/btpc/btpc.html

Patents and Copyright
=====================

The BTPC method is patent-free. In particular, no use is made of arithmetic
coding. The source code is copyright (c) 1994, 1995, 1997 John A. Robinson, 
except for portions of the file colmap.C which are the work of the Independent 
JPEG group and therefore copyright (C) 1991, 1992, 1993, 1994, 1995 
Thomas G. Lane. 

You may freely use all the BTPC code on exactly the same terms as the 
Independent JPEG group allows use of their code. Following their pattern, and
adapting their README file (see READMEJ for the original), here is how it works:

I welcome the use of this software as a component of commercial products.
No royalty is required, but I do ask for an acknowledgement in product
documentation, as described below.

In plain English:

1. I don't promise that this software works.  (But if you find any bugs,
   please let me know!)
2. You can use this software for whatever you want.  You don't have to pay me.
3. You may not pretend that you wrote this software.  If you use it in a
   program, you must acknowledge somewhere in your documentation that
   you've used the BTPC Version 4 code.

In legalese:

The author makes NO WARRANTY or representation, either express or implied,
with respect to this software, its quality, accuracy, merchantability, or
fitness for a particular purpose.  This software is provided "AS IS", and you,
its user, assume the entire risk as to its quality and accuracy.

This software, excluding the file colmap.C, is 
copyright (C) 1994, 1995, 1997 John A. Robinson,
All Rights Reserved except as specified below.

Permission is hereby granted to use, copy, modify, and distribute this
software (or portions thereof) for any purpose, without fee, subject to these
conditions:
(1) If any part of the source code for this software is distributed, then this
"Patents and Copyright" section of the README file must be included, with 
this copyright and no-warranty notice unaltered; and any additions, deletions, 
or changes to the original files must be clearly indicated in accompanying 
documentation.
(2) If only executable code is distributed, then the accompanying
documentation must state that "this software is based in part on Binary Tree
Predictive Coding Version 4, implemented by J. A. Robinson".
(3) Permission for use of this software is granted only if the user accepts
full responsibility for any undesirable consequences; the author accepts
NO LIABILITY for damages of any kind.

@
