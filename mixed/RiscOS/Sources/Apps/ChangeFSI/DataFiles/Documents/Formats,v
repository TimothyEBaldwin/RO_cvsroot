head	4.16;
access;
symbols
	ChangeFSI-1_63:4.16
	ChangeFSI-1_62:4.16
	ChangeFSI-1_61:4.15
	ChangeFSI-1_60:4.14
	ChangeFSI-1_59:4.14
	ChangeFSI-1_58:4.14
	ChangeFSI-1_57:4.14
	ChangeFSI-Import-IJG8d:4.14
	ChangeFSI-1_56:4.14
	ChangeFSI-1_55:4.13
	ChangeFSI-1_54:4.12
	ChangeFSI-1_53:4.12
	ChangeFSI-1_52:4.11
	ChangeFSI-1_51:4.11
	ChangeFSI-1_50:4.10
	ChangeFSI-1_49:4.9
	ChangeFSI-1_48:4.8
	ChangeFSI-1_47:4.7
	ChangeFSI-1_46:4.7
	ChangeFSI-1_45:4.7
	ChangeFSI-1_44:4.6
	ChangeFSI-1_43:4.5
	ChangeFSI-1_42:4.4
	ChangeFSI-1_41:4.4
	ChangeFSI-1_40:4.3
	ChangeFSI-1_39:4.3
	ChangeFSI-1_38:4.3
	ChangeFSI-1_37:4.3
	ChangeFSI-1_36:4.3
	ChangeFSI-1_35:4.3
	ChangeFSI-1_34:4.3
	ChangeFSI-1_33:4.3
	ChangeFSI-1_32:4.3
	ChangeFSI-1_31:4.3
	ChangeFSI-1_30:4.3
	ChangeFSI-1_29:4.3
	ChangeFSI-1_28:4.3
	ChangeFSI-1_27:4.3
	ChangeFSI-1_26:4.3
	ChangeFSI-1_25:4.3
	ChangeFSI-1_24:4.3
	ChangeFSI-1_23:4.3
	ChangeFSI-1_22:4.3
	ChangeFSI-1_21:4.3
	ChangeFSI-1_20:4.3
	ChangeFSI-1_19:4.2
	ChangeFSI-1_18:4.2
	ChangeFSI-1_12:4.1.1.1
	RO_3_71:4.1.3.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.16
date	2018.09.30.18.06.42;	author rsprowson;	state Exp;
branches;
next	4.15;
commitid	6OJyeQNOntxlG9UA;

4.15
date	2018.02.24.16.48.32;	author rool;	state Exp;
branches;
next	4.14;
commitid	590WFAbuJEBPi8sA;

4.14
date	2015.10.06.20.38.21;	author rsprowson;	state Exp;
branches;
next	4.13;
commitid	zgAq71HDHoPrB5Ey;

4.13
date	2015.10.06.20.20.54;	author rsprowson;	state Exp;
branches;
next	4.12;
commitid	oATqD6JLTMssv5Ey;

4.12
date	2015.06.13.10.41.52;	author rsprowson;	state Exp;
branches;
next	4.11;
commitid	5LhfZprcvVC10gpy;

4.11
date	2014.09.02.20.49.32;	author rsprowson;	state Exp;
branches;
next	4.10;
commitid	tCd6CUyYlRvtuOOx;

4.10
date	2014.08.08.19.57.29;	author rsprowson;	state Exp;
branches;
next	4.9;
commitid	WCDQFIkJ5RJr0BLx;

4.9
date	2014.08.04.08.12.30;	author rsprowson;	state Exp;
branches;
next	4.8;
commitid	My0KecZWQCqAe1Lx;

4.8
date	2014.08.02.19.37.15;	author rsprowson;	state Exp;
branches;
next	4.7;
commitid	QcKPQoivLUls5PKx;

4.7
date	2014.01.11.14.47.09;	author rsprowson;	state Exp;
branches;
next	4.6;
commitid	OuS2nRzv0nku0Ikx;

4.6
date	2014.01.08.22.48.10;	author rsprowson;	state Exp;
branches;
next	4.5;
commitid	XXndlCw6MVZuLmkx;

4.5
date	2014.01.08.21.53.45;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	TtTWoORPrzGPsmkx;

4.4
date	2013.12.08.09.21.30;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	FsEEpJFeopPmijgx;

4.3
date	2003.01.20.10.21.51;	author rsprowson;	state Exp;
branches;
next	4.2;

4.2
date	2002.11.05.19.01.54;	author rsprowson;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.18.08;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1;
next	;

4.1.1.1
date	96.11.05.09.18.08;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.19.16.35;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.16
log
@Further docs improvements
Output formats were only partially described, and supported
* Mention IRLAM output format switch in the CmdBasUse docs, add an example to the tests
* Explain what 'p15' is in CmdBasUse (was only explained in the input formats docs)
* Prefer S15 to S16

Delete support for C15 output. This appears to have been experimental as the resulting output had an embedded comment saying YUV but the data that followed was identical to a P15 RGB image. Also, ChangeFSI refused to load the C15 image it just wrote.
Delete support for S24 output switch. This was an undocumented alias for S32.
Add S15 as a possible output mode and prefer its use for 32k sprites - freeing up S16 for future 64k sprite support (and, logically S12 for 4k sprites).

Retagged as 'ChangeFSI-1_62'
@
text
@============================================================================
                           ChangeFSI file formats
============================================================================


This file lists the file formats that ChangeFSI uses, and then gives more
detail on each one. This is then followed by a table summarising the formats.


Summary of formats
==================

Input formats
-------------
RISC OS sprites 1, 2, 4, 8 bits per pixel -
   and new format 12, 15, 16, 32 bits per pixel
ArVis 15-bit HIP + LOP sprites
Watford digitiser pictures, 512О256, 64 greys -
   and triple red, green, blue separations
ProArtisan compressed pictures, 640О256, 256 colours
JPEG 'JFIF' files
Kodak PhotoCD images
TimeStep satellite images, 800О800, 256 greys
PC TGA images
MTV 24-bit PIC images
QRT 24-bit RAW images
ZSoft .PCX files
Degas PI1, PI2, PI3 images
!Translator Clear format files
CCIR 601 4:2:2 PAL images
!RayShade 'RGB' images
TimeStep satellite images, 128О256, 256 greys -
   and triple red, green, blue separations
AIM/Wild Vision Hawk V10, 256О256, 256 greys
Wild Vision Hawk V12, 512О512, 256 greys
Wild Vision/Hawk V9, 256О256, 24 bit triple image
Wild Vision Hawk V9, 512О256, 12-bit colour
Wild Vision Hawk V9 Mk II, 16-bit colour
Pineapple 16 bit per pixel images
FITS astronomical format images
Irlam Instruments YUV 411 files
Irlam Instruments 24-bit files
Windows 3 and OS/2 BMP files -
   and BMP embedded in ICO (icon) and CUR (cursor) files
CompuServe's GIF files up to 8 bit per pixel
.PIC 8 bit per pixel files
Sun 'pixrect' raster files
GEM IMG images
Apollo GPR 16-colour images
RIX Softworks ColoRIX 8 bit per pixel files
TechnoI video digitiser
TIFF pictures
UNIX rle format files
Portable Bit Map (pbm) binary encoded formats
ChangeFSI packed portable bitmaps
PocketBook I and II PIC format files
Electronic Art's IFF ILBM pictures
MILLIPEDE PRISMA, 768О576, 8-bit colour images
MacPaint files, 576О720, 1 bit per pixel
Mac PICT2 v2 8 and 24/32 bit per pixel
RT 24-bit run length coded IMAGE files
PC EGA .DSP images, 640О350, 16 colours
Alpiar 36 bit per pixel
Alpiar 48 bit per pixel
Kodak RGB images, 24 bits per pixel
BTPC 4.1 images 
Portable network graphics 1, 2, 4, 8, 16, 24, 48 bits per pixel
   interlaced or non interlaced image ordering
Wireless application protocol bitmaps   

Output formats
--------------
RISC OS sprites
AIM/Wild Vision Hawk V10, 256О256, 256 greys
Irlam Instruments 24-bit
JPEG 'JFIF' files
Portable Bit Map (pbm) ASCII and binary encoded formats
ChangeFSI packed portable bitmaps


Details of formats
==================

RISC OS sprites
---------------
The old RISC OS sprite format
иииииииииииииииииииииииииииии
Contains 1, 2, 4 or 8 bits per pixel with a modification palette of up to
16 entries; any number of pixels wide and high uncompressed. Details are in
the RISC OS Programmer's Reference Manual.

Ј Recognised by file type FF9.

Ј Details of how many bits per pixel and the pixel size are obtained from
  the operating system (rather than being in the file) from the "MODE"
  number. Mode extensions can result in a source image containing a MODE
  number which your computer does not understand.

Ј Mask information ignored.

Ј Lefthand wastage ignored.

The new RISC OS sprite format
иииииииииииииииииииииииииииии
Contains 1, 2, 4, 8, 12, 15, 16 or 32 bits per pixel.

Ј Recognised by file type FF9.

Ј No problem with mode extensions: information is coded into the format.

Ј Mask and alpha channel information ignored.

ArVis 15-bit HIP + LOP sprites
------------------------------
Contains 5 bits of red, green and blue information encoded into two RISC OS
sprites "HIP.<filename>" and "LOP.<filename>" comprising a 640 pixel wide
and 256 line tall image with pixels sized 1:2. Details from ArVis
Multimedia.

Ј Recognised by file type FF9, and the file is beneath a directory named
  HIP, and a corresponding LOP file exists.

Ј Uncompressed (indeed represents 16 bits instead of 15).

Watford digitiser pictures
--------------------------
Contains a run length encoded 64 grey level 512 pixel wide, 256 line image,
with pixels sized 1:2. Details from Watford Electronics Ltd.

Ј Recognised by file type DFA (a small grey picture of Stevie Nicks).

Ј Warning: don't forget to save the pictures in *un-dithered* state!

When used with a colour converter, ChangeFSI can read three colour
separations stored in a directory of separate "red", "green" and "blue"
files of file type DFA. Beware of auto-gain/contrast when using such
information!

ProArtisan compressed pictures
------------------------------
Contains a (mildly) compressed MODE 15 (640 by 256 by 256 colours) picture.
Details from Clares.

Ј Recognised by file type DE2 (a beige monitor in a grey surround).

JPEG 'JFIF' files
-----------------
The JPEG File Interchange Format contains up to 24 bits R,G,B, compressed by
the JPEG compression system.

Ј Recognised by file type C85 (an eye), or by JFIF at offset 6 in the file.
  (You may have to cut headers off files, particularly if they are from
  Macs).

Ј Often highly compressed.

Ј If ChangeFSI$Cache is large enough (i.e. bigger than the file), then high
  speed routines are used to decompress. Otherwise:

Ј ChangeFSI calls a djpeg routine. This can be on the Run$Path, implemented
  as an Alias (in which case it *must* use WimpTask to start) or found
  inside ChangeFSI$Dir if all else fails. cjpeg (the compressor) is also
  available inside ChangeFSI$Dir - you will need to convert the image to P6
  format before it can be compressed. Djpeg and cjpeg are by the PD JPEG
  groupї

Ј ї and therefore slow. Needs a lot of space in <Wimp$Scrap>.

Ј No resolution specified; equal to mode 27 assumed.

Kodak PhotoCD images
--------------------
24 bit per pixel images at various resolutions.

Ј Recognised by file type BE8, or the file's name ends /PCD.

Ј Set ChangeFSI$PCDIndex to read resolutions other than base (=3).

TimeStep satellite images, 800О800
----------------------------------
This gives an uncompressed 800 by 800 with 256 grey levels.

Ј Recognised by file type 7A0 (icon never seen).

Ј No resolution specified; equal to mode 27 assumed.

Ј Documentation never seen. An extra header file <name>! is not understood
  at all.

PC TGA images
-------------
This 'Targa' format is used by TrueVision for Vista boards. Up to 32 bits
per pixel.

Ј Recognised by file type 69D, or the file's name ends with TGA or VDA.

Ј Uncompressed (types 1-3) and RLE compressed (types 9-11) are readable.

Ј Resolution information in the extension fields, if any, are ignored; equal
  to mode 27 assumed.

Ј Compatible with Truevision TGA specification version 1.0 and 2.0, a key
  difference being that RLE compressed lines are not allowed to span rows
  in the 2.0 specification whereas they could previously.

MTV 24-bit PIC images
---------------------
Output from Mark Terrence VandeWettering public domain ray tracer: arbitrary
size in 2^24 colours, uncompressed. Documentation part of MTV. Also used by
"RayShade".

Ј Recognised by file type 699, or the file is beneath a directory named PIC.

Ј No resolution specified; equal to mode 27 assumed.

QRT 24-bit RAW images
---------------------
Output from Steve Koren's public domain ray tracer: arbitrary size in 2^24
colours, uncompressed. Documentation part of QRT.

Ј Recognised by file type 698, or the file's name is RAW.

Ј No resolution specified; equal to mode 27 assumed.

ZSoft .PCX files
----------------
Used by PC Paintbrush. Usually a 4 bit per pixel image (CGA, EGA, VGA), but
can be 1-8 or 24 bits per pixel.

Ј Recognised by file type 697, or &0A,&00|02|03|04|05,&01 at the start of
  the file, or the file is beneath a directory named PCX, or the file's name
  ends /PCX.

Ј True colour variants exist with version 5 headers with 8 bits per component
  and either 3 or 4 planes.

Ј Intelligent check for resolution of the DACs on the PC card. Use -info to
  find out what ChangeFSI thinks it is.

Ј Pixel size information read. You may need to stop the scaling with
  -nosize, since it's often wrong.

Degas PI1, PI2, PI3 images
--------------------------
The Atari ST "Degas" format contains 1, 2 or 4 bits per pixel, clear or run
length encoded. RISC OS file type by John Kortink of !Translator.

Ј Recognised by file type 691.

Ј No documentation, and only 5 images read.

Ј No resolution specified; equal to mode 27 assumed.

!Translator Clear format files
------------------------------
This provides 1, 2, 4, 8 and 24 bits per pixel.

Ј Recognised by file type 690.

Ј Uncompressed - especially for <8 bits per pixel, which is recorded at one
  byte per pixel.

Ј No resolution specified; equal to mode 27 assumed.

CCIR 601 4:2:2 images
---------------------
Contain 720 pixels by 288 rows (PAL) (243 rows NTSC), YUV coded, with pixels
sized 1:2.

Ј Recognised by file type 601.

Ј One field only.

!RayShade 'RGB' images
----------------------
Ј Recognised by file type 371.

TimeStep satellite images, 128О256
----------------------------------
Giving an uncompressed 128 pixels wide by 256 lines with 256 grey levels,
pixels sized 2:1. Used by TimeStep's !ImProcess application.

Ј Recognised by file type 300 (an "i" in a document frame).

Ј Documentation never seen.

Ј A bit coarse.

The grey levels represent intensity in various different wave bands. By
naming files of type 300 "red", "green" and "blue", and handing ChangeFSI the
directory, you can produce a false colour image. Hours of experimentation
can produce an almost reasonable pictureї

Wild Vision Hawk V12
--------------------
This provides an uncompressed 512 by 512 image with 256 grey levels.

Ј Recognised by file type 006.

Ј No resolution specified; equal to mode 27 assumed.

AIM/Wild Vision Hawk V10
------------------------
This provides an uncompressed 256 by 256 image with 256 grey levels. Details
from Delft University of Technology and ECD Computers Delft B.V.

Ј Recognised by file type 004 (a picture of 'Trui' with "TU" in blue).

Ј No resolution specified; equal to mode 27 assumed.

Ј The associated file <name>+ (file type 010) which contains additional
  information is ignored by ChangeFSI. The grey levels may represent
  intensity in various different wave bands. By naming files "red", "green"
  and "blue" and handing ChangeFSI the directory (see Wild Vision/Hawk V9 24
  bit triple image below), you can produce a false colour image. Hours of
  experimentation can produce an almost reasonable pictureї

Ј As a special feature, ChangeFSI will also write out files in this
  format if you specify the mode string as "AIM". You should use the "="
  operation to restrict the picture to 256x256y, otherwise it will be the
  same size as the input.

Wild Vision/Hawk V9 24 bit triple image
---------------------------------------
Three files, resolution 256 by 256, giving a 24-bit image.

Ј Recognised by a directory holding type 004 files named RED, GREEN and
  BLUE.

Wild Vision Hawk V9 12-bit colour
---------------------------------
This provides an uncompressed 512 by 256 image with 4 bits of red, green and
blue, pixels sized 1:2. Also used by SnapShot.

Ј Recognised by 'MercSoft' or 'SnapShot' at the start of the file.

Wild Vision Hawk V9 Mk II, 16-bit colour
----------------------------------------
Ј Recognised by 'MercSof1' at the start of the file.

Pineapple 16 bit per pixel images
---------------------------------
Pineapple Software's colour digitiser format contains 6 bits of green, 5
bits of red and blue information filed as a single data file starting
"FSIfile" comprising a 512 pixel wide and 256 line tall image with pixels
sized 1:2.

Ј Recognised by 'FSIFile' at the start of the file.

Ј Uncompressed.

FITS astronomical format images
-------------------------------
The "Flexible Image Transport System" (FITS) format is used for astronomical
data. The start of the file comprises human readable text such as which
equipment took the image and at what wavelength.

Ј Recognised by 'SIMPLE  ' at the start of the file.

Ј Only 8, 16, 32 bit per pixel component formats tested, those images stored
  in IEEE floating point format (BITPIX -32 and BITPIX -64) will be faulted.

Ј Scientific data from far away galaxies suffer from using only a small fraction
  of the dynamic range, so 16 and 32 bit per pixel images often appear almost
  entirely black. An 8 bit per pixel image maps well into 256 greys.

Ј No resolution specified; equal to mode 27 assumed.

Irlam Instruments YUV 411 files
-------------------------------
7 bits Y, up to 7 bits U and V.

Ј Recognised by 'IRLAM YUV 411' at the start of the file.

Ј No resolution specified; equal to mode 27 assumed.

Irlam Instruments 24-bit files
------------------------------
24 bit per pixel from colour scanner, 3 planes of 8 bits.

Ј Recognised by 'Irlam' at the start of the file.

Ј No resolution specified; equal to mode 27 assumed.

Ј May need gamma correction.

Ј As a special feature, ChangeFSI will also write out files in this
  format if you specify the mode string as "IRLAM".

Windows 3 and OS/2 BMP files
----------------------------
Used by MicroSoft in Windows 3 and PaintBrush for Windows 3. Provides an
arbitrary sized image with 1, 2, 4, 8, 24 or 32 bits per pixel.

Ј Recognised by 'BM' at the start of the file; or 'RIFF' at the start of the
  file, and 'RDIBdata' at offset 8 and 'BM' at offset 20 in file.

Ј Device independent bitmaps are also used for icons (.ICO) and cursors (.CUR)
  - Icons recognised by &00010000 at the start of file and file type 132
  - Cursors recognised by &00020000 at the start of file and file type 6A5
  in each case only the first bitmap in the container will be displayed.

Ј Generally uncompressed, but can use RLE4 or RLE8 when fewer than 8bpp.

Ј 2bpp variant occurs on the Windows CE platform.

Ј Resolution derived from pixels-per-metre value in Windows 3 header.
  No resolution specified in OS/2 header; equal to mode 27 assumed.

CompuServe's GIF files up to 8 bit per pixel
--------------------------------------------
Used for wide area network transfer of images. It provides an LZW compressed
up to 256 colours from 2^24 arbitrary sized image. Details from CompuServe
(USA), or usenet.

Ј Recognised by 'GIF8' at the start of the file.

Ј LZW compression is efficient even for dithered images.

Ј ChangeFSI can decompress LZW quickly.

Ј No resolution specified; equal to mode 27 assumed.

Ј Many low quality images around from PCs.

.PIC 8 bit per pixel files
--------------------------
Used for some VGA demos, the format provides an uncompressed 320 by 200 by
256 colour (from 2^24) VGA screen dump.

Ј Recognised by 'AV_VO' at the start of the file.

Ј Documentation never seen.

Ј Pixel size assumed the same as MODE 13 (45 pixels per inch).

Sun 'pixrect' raster files
--------------------------
Used under SunOS and also under X11. Eight header fields precede an optional
palette (not for 24 and 32bpp, which are true colour) followed by image data.
Possible to encounter 1, 4, 8, 24, 32 bits per pixel variants.

Ј Recognised by &956AA659 at the start of the file.

Ј No resolution specified; equal to mode 27 assumed.

Ј Can optionally be RLE compressed.

Ј Sun didn't specify the pixel ordering of 24 & 32 bit per pixel images: many
  assume RGB when it was actually BGR. Change byte &17 in the Sun rasterfile
  between 1 and 3 if you have a problem, type 2 (RLE compressed) always
  assumes BGR ordering.

GEM IMG images
--------------
Used by Digital Research's GEM (and GEM Paint) on both PC and Atari ST.
Provides an arbitrary sized image and number of bits per pixel (though it's
only usually used with up to 5 bits per pixel) and pixel size. Compressed by
run length encoding and line repeats.

Ј Recognised by &08000100 at the start of the file ("version 1, header
  length 8"), or the file is beneath a directory named IMG , or the file's
  name ends /IMG.

Ј Planar file format slow to read.

Ј Palette not specified: ChangeFSI assumes linear shades of grey. You might
  need to use -invert if the image is a negative.

Ј The size of a pixel is specified in microns. The standard RISC OS 90
  pixels per inch translates to (1/90О2.54О10,000) microns - 282. (Use -info
  to get information about the scaling, -nosize to stop it.)

Ј Documentation from the "ST World" magazine's clinic.

Apollo GPR 16-colour images
---------------------------
Ј Recognised by &01000100 at the start of the file.

RIX Softworks ColoRIX 8 bit per pixel files
-------------------------------------------
Used by VGA Paint, image extension .SCE ї .SCX. 4 or 8 bits per pixel.

Ј Recognised by 'RIX3' at the start of the file.

Ј Documentation never seen.

Ј Only 5 files read; ChangeFSI checks to see if the header is the same as
  these files, and complains otherwise.

Ј No resolution specified; equal to mode 27 assumed.

TIFF pictures
-------------
Frequently used by scanners, the Aldus/MicroSoft TIFF format is a common
interchange format for graphics images on the Mac and PC (particularly DTP
and Windows). It provides an arbitrary number of bits per pixel, size etc
using a numeric tag scheme allowing new information to be introduced without
upsetting existing programs. The format may be compressed (in 5 different
ways at present). Details from Aldus UK, MicroSoft, Hewlett Packardї

Ј Recognised by 'II' plus the 16 bit number 42 at the start of the file for
  little endian machines (ix86, ARM, VAXї)

Ј Recognised by 'MM' plus the 16 bit number 42 at the start of the file for
  big endian machines (M680x0ї)

Ј Can read PackBits images and LZW compressed forms (at least the 3 it's
  seen so farї).

Ј Cannot read predictor compressed LZW images.

Ј So far ChangeFSI has only done 1, 4, 8 and 24 bit images. It can't read
  "planar" images or CCITT compressed forms.

Ј Some TIFF images have incorrect pixel sizes: use -nosize if this is true.
  If no pixel size is specified, ChangeFSI assumes mode 27 size.

Ј TIFF is a trademark of Aldus Corporation

Ј Assigned RISC OS file type FF0; correctly typed files are recognised more
  quickly.

UNIX rle format files
---------------------
Used by a program called "svfb" to save the contents of large frame buffers;
checked with four images at 24 bits per pixel.

Ј Recognised by &CC52 at the start of the file.

Ј No resolution specified; equal to mode 27 assumed.

Portable Bit Map (pbm) binary encoded formats

The "pbm" 'portable bitmap' file format
---------------------------------------
Used by the "PBM-PLUS" toolkit (mainly Unix) by Jef Poskanzer. 1-24 bits
per pixel (more can be specified in the format but ChangeFSI cannot read
them). There are 3 types of format: black/white ('pbm'), grey ('pgm'), and
colour ('ppm'); there are ASCII and binary encodings of each. ChangeFSI can
read only the binary encoded formats (which use big-endian bytes), but for
portability to other machines it can write the binary and ASCII encoded
formats.

Ј Recognised by 'P4', 'P5' or 'P6' at the start of the file.

Ј Writable by ChangeFSI - first characters of file are:

                  Binary  ASCII (output only)
  black/white     P4      P1
  grey            P5      P2
  true colour     P6      P3

Ј No resolution specified; equal to mode 27 assumed.

Files can be read with Jef Poskanzer's portable toolkit on other machines. The
p2 format is easily convertible by programmers; it consists of:

P2
# comment line
xsize ysize
maximum_value
pixel_value <whitespace> pixel_value

where all the numbers are in decimal (ASCII). 0 means black, maximum_value
(=15) means white. The p3 format is similar with r, g, b triples for each
pixel value. The number of bits per component (default 8) can be set from
the command line with, for example, "p3,4" for 4 bits per component.

ChangeFSI packed portable bitmaps
---------------------------------
Ј Recognised by 'P15' at the start of the file.

Ј Special packed output format. Binary pixel values, 5 bits per component,
  little endian RGB order packed into 16 bits. Header information as the
  other p formats.

PocketBook I and II PIC format files
------------------------------------
Ј Recognised by 'PIC' at the start of the file.

Electronic Art's IFF ILBM pictures
----------------------------------
Provides an arbitrary sized image with up to 4096 colours, sometimes run
length encoded. ChangeFSI understands the generic format and also the
special Amiga format for "HAM" and "Half-bright" images.

Ј Recognised by 'FORM' at the start of the file and 'ILBM' at offset 8 in
  file.

Ј Only pixel aspect ratio specified, not its size (and then sometimes
  incorrectly): use -nosize *and* a size change (a:b) if it's wrong.

Ј Images often small.

Ј Doesn't understand Amiga "hires".

Ј Can't convert HAM pictures directly to monochrome.

MILLIPEDE PRISMA 8-bit colour images
------------------------------------
The Millipede Prisma 3 is a 768 pixels wide by 574 line interlaced display
board for the Archimedes and BBC Microcomputer. It allows use of 256 colours
from 2^24. Files may be stored uncompressed (432KBytes!) or run length
encoded. This format is also used by CadSoft. More details from CadSoft or
Millipede Electronic Graphics.

Ј Recognised by 'MILLIPEDE' at offset 16 in file.

Ј No resolution specified; equal to mode 27 assumed.

Ј Slowish to read the compressed formats.

Ј Scaling the picture using = can be poor, since 574 lines don't relate very
  well to 512 or 256. Use -info to display the scale ratios.

MacPaint files
--------------
Provides a 576 by 720 bitmap, run length coded by the Mac's "PackBits"
algorithm (repeated bytes).

Ј Recognised by 'PNTG' at offset 65 or 196 in the file. The former may only
  relate to files which have been through a program called "MacFix". Data
  assumed to start at position 128 in the file. Header ignored.

Ј No resolution specified; equal to mode 25 assumed.

MacPICT2 v2 8 and 24/32 bit per pixel)
----------------------------------------------
The PICT extended version 2 format provides an arbitary size packed picture,
run length coded by the Mac's "PackBits" algorithm (repeated bytes).

Ј Recognised by &00,&11,&02,&FF,&0C,&00,&FF,&FE (the PICT header) at offset
  522 in the file.

Ј Documentation available but mostly useless (it assumes you are about to
  call QuickDraw routines - "Note: for maximum safety and convenience, let
  QuickDraw generate and interpret your pictures." Apple fail to describe
  the PackBits algorithm in Inside Macї)

Ј PICT is the loose equivalent of RISC OS Draw file format, but without the
  explicit sizing of objects - for PICT, if there is an object that you
  don't understand, there's no way of skipping it (whereas for Draw, the
  size of the object is specified in an object indep. way). Apple present a
  large table of the sizes of the objects (0000 - FFFF) which is not in
  ChangeFSI. Consequently, if ChangeFSI finds an object it doesn't know
  about before the picture, it stopsї

Ј Only PackBitsRect (0098) (8bpp) and DirectBitsRect (009A) (24/32 bpp) are
  allowed.

Ј ChangeFSI tries to skip a Clip (0001) region if it encounters it, since it
  is hard to get the Mac OS to make PICT files without a clip opcode in
  them.

Ј Size of pixel specified.

Ј Only 3 pictures read - since the format is very complicated (e.g. the size
  of things change if >250 rows in the picture!) this is no guarantee that
  anything else will be right.

RT 24-bit run length coded IMAGE files
--------------------------------------
Output from "RT", a private ray tracer by Brian D Watt(?). Arbitrary size in
2^24 colours, run length encoded.

Ј Recognised by file being beneath a directory named IMAGE.

Ј No resolution specified; equal to mode 27 assumed.

PC EGA .DSP images
------------------
Experimentally determined that it holds a 640 by 350 EGA picture at 4 bits
per pixel. ChangeFSI "knows" the default EGA palette (from IBM literature).

Ј Recognised by file being beneath a directory named DSP, or the file's name
  ends /DSP.

Ј Documentation never seen.

Ј No resolution specified; equal to mode 27 assumed.

Ј Only two examples read.

Kodak RGB images, 24 bits per pixel
-----------------------------------
Ј Recognised by the file's name ending /RGB.

BTPC 4.1 images
---------------
Ј Recognised by "btpc 4." at the start of the file.
  Binary tree predictive coding is used to achieve a signal to noise ratio
  better than that achieved with a JPEG algorithm, and in less time too.

Portable network graphics
-------------------------
Ј Recognised by unique 8 byte signature at the start of the file.
   
Ј The reader is based on the PNG 1.2 specification, and supports all of
  the critical chunks described in the specification. All defined filter types
  and interlacing schemes are also supported.

Ј The ancilliary chunks, such as gamma correction and histogram, are ignored
  as on the whole ChangeFSI already has a means to manipulate these parameters.
  Some chunks are for information only (such as the various supplementary text
  and date stamp information).

Wireless application protocol bitmaps
-------------------------------------
Ј Recognised by file type F8F and first two bytes of file are 0

Ј TypeField 0 (monochrome) and FixHeaderField 0 (no extentions) are the
  only type of WBMP defined in the WAP WAE Specification version 1.1

Ј These uncompressed images originate from mobile telephone services for
  handsets with black and white displays

Table summarising the formats
=============================

RISC OS sprites 1, 2, 4, 8 bits per pixel     [file type FF9]
   and new format 12, 15, 16, 32 bits per pixel
ArVis 15 bit HIP.+LOP. sprites                [file type FF9 named HIP.]
Watford digitiser pictures 512x256y64g        [file type DFA]
   and triple red, green, blue seperations    [directory of r,g,b DFA]
ProArtisan compressed pictures 640x256y256c   [file type DE2]
JPEG "JFIF" file                              [JFIF in file OR file type C85]
Kodak PhotoCD images                          [file type BE8 OR named /PCD]
TimeStep satellite image 800x800y256g         [file type 7A0]
PC TGA images                                 [file type 69D OR named /TGA OR /VDA]
MTV 24 bit pic. images                        [file type 699 OR named pic.]
QRT 24 bit .raw images                        [file type 698 OR named .raw]
ZSoft .PCX files                              [10,1-5,1 in file OR file type 697
                                                            OR named pcx. OR /PCX]
Degas PI1, PI2, PI3 images                    [file type 691]
!Translator Clear format                      [file type 690]
CCIR 601 4:2:2 PAL image                      [file type 601]
!RayShade 'RGB' image                         [file type 371]
TimeStep satellite image 128x256y256g         [file type 300]
   and triple red, green, blue seperations    [directory of r,g,b 300]
AIM/Wild Vision Hawk V10 files 256x256y256g   [file type 004]
Wild Vision Hawk V12 512x512y256g             [file type 006]
Wild Vision Hawk V9 512x256y 12 bit colour    [MercSoft OR SnapShot in file]
Wild Vision Hawk V9 Mk II, 16-bit colour      [MercSof1 in file]
Pineapple 16 bit per pixel image              [FSIfile in file]
FITS astronomical format                      [SIMPLE in file]
Irlam Instruments YUV 411 files               [IRLAM YUV 411 in file]
Irlam Instruments 24 bit files                [Irlam in file]
Windows 3 and OS/2 BMP files                  [BM in file]
   and RIFF files                             [RIFF AND RDIBdata AND BM in file]
   and ICO files                              [0,0,1,0 in file AND (file type 132
                                                                    OR named /ICO)]
   and CUR files                              [0,0,2,0 in file AND (file type 6A5
                                                                    OR named /CUR)]
CompuServe's GIF files up to 8 bit per pixel  [GIF87a in file]
.PIC 8 bit per pixel files                    [AV_VO in file]
Sun 'pixrect' Raster Files                    [&956AA659 in file]
GEM IMG. images                               [0,8,0,1 in file OR named img. OR /IMG]
Apollo GPR 16 colour image                    [0,1,0,1 in file]
RIX Softworks ColoRIX 8 bit per pixel files   [RIX3 in file]
TechnoI video digitiser                       [T-I in file (OR file type CBE)]
TIFF pictures                                 [II* OR MM* in file (OR file type FF0)]
UNIX rle format                               [&CC52 in file]
Portable bit map                              [P1,P2,P3,P4,P5 OR P6 at start of file]
ChangeFSI packed portable bitmap              [P15 at start of file]
PocketBook I and II PIC format                [PIC at start of file]
Electronic Art's IFF ILBM pictures            [FORM ILBM in file]
MILLIPEDE PRISMA 768x576y 8 bit colour images [MILLIPEDE in file]
MacPaint files 576x720y 1 bit per pixel       [PNTG in file]
MacPICT2 v2 8 and 24/32 bits per pixel        [00 11 02 FF 0C 00 FF FE in file]
RT 24 bit run length coded image. files       [named image.]
PC EGA .DSP images 640x350y16c                [named dsp. OR /DSP]
Alpiar 36 bit per pixel                       [ALPIAR12 at start of file]
Alpiar 48 bit per pixel                       [ALPIAR16 at start of file]
Kodak RGB images, 24 bits per pixel           [named /RGB]
BTPC file                                     [bptc 4. at start of file]
Portable network graphics                     [8 byte signature at start of file]
Wireless application protocol bitmap          [0,0 in file AND (file type F8F
                                                                OR named /WBMP)]
@


4.15
log
@Docs update
Detail:
  Compuserve->CompuServe
Admin:
  From User Guide feedback.

Version 1.61. Tagged as 'ChangeFSI-1_61'
@
text
@d75 1
a308 4
Ј ChangeFSI can write to this format; specify the output mode as "AIM", and
  specify "=" in the sizing to get a 256 by 256 output (otherwise it will be
  the same size as the source image).

d319 1
a319 1
  format if you specify the mode string as "AIM". You should use the =
d379 1
a379 1
24 bit per pixel from colour scanner.
d387 2
a388 1
Ј Can be written.
@


4.14
log
@Add support for type 15 (extended type) and 16 (4k colour) sprites
Sprite type 16 is now accepted as an input format, by defining the appropriate 4:4:4 colour lookup tables.
Type 15 class RGB is handled too with 1/2/4/8/12/15/16/32bpp sprites with and without RGB/BGR reversal.
Other changes:
Tighten up the check for BTPC files, it turns out BTPC 5 also exists but has an incompatible format, so rather than trying to decode them and fail, fail early.
Mention the return code in Documents/CmdBasUse.
Change real variable 'rgb' to integer since it's only holding a flag.

Tested with a variety of special sprites, and a BTPC 5 file.

Version 1.56. Tagged as 'ChangeFSI-1_56'
@
text
@d45 1
a45 1
Compuserve's GIF files up to 8 bit per pixel
d412 1
a412 1
Compuserve's GIF files up to 8 bit per pixel
d729 1
a729 1
JPEG "JFIF" file                              [JFIF in file]
d733 2
a734 2
MTV 24 bit pic. images                        [named pic.]
QRT 24 bit .raw images                        [named .raw]
d745 1
a745 2
Wild Vision Hawk V9 512x256y 12 bit colour    [MercSoft in file]
Wild Vision Hawk V9 512x256y 12 bit colour    [SnapShot in file]
d757 1
a757 1
Compuserve's GIF files up to 8 bit per pixel  [GIF87a in file]
@


4.13
log
@Add support for type 10 (64k colour) sprites and those with wide masks
Sprite type 10 is now accepted as an input format, by defining the appropriate 5:6:5 colour lookup tables.
Sprites with wide masks (8b alpha channels) are now also accepted, though like binary masks the mask is simply ignored. Previously these fell into a signed < 256 trap and were being mistaken for numbered modes which the OS then choked on.
When showing the mode number in the "About this image" dialogue the number is now given in hex if it's not a numbered mode (0-255), this is fractionally more useful than decimal.
Enlarged the "About this image" display fields per the Style Guide.
Corrected the comments in the colour mapping code (lines 6551-6552, 7043-7044).

Version 1.55. Tagged as 'ChangeFSI-1_55'
@
text
@d16 1
a16 1
   and new format 15, 16, 32 bits per pixel
d104 1
a104 1
Contains 1, 2, 4, 8, 15, 16 or 32 bits per pixel.
d693 1
a693 1
Ј Recognised by "btpc" at the start of the file.
d724 1
a724 1
   and new format 15, 16, 32 bits per pixel
d779 1
a779 1
BTPC file                                     [bptc at start of file]
@


4.12
log
@Add support for 24 (and 32) bpp PCX files
ChangeFSI's slightly lapse check of >= 8bpp header vetting for PCX meant it would try to load such files and fail with an EOF error.
* Change header parsing to correctly deduce a 24 or 32bpp PCX is being handled, select the appropriate decoder
* Add a sample 4 plane 8 bit PCX to the tests directory, created with ImageMagick
* Docs updated
Note that is seems highly unlikely from inspection of the code that 5/6/7bpp PCX files will come out the right colour since the PCX file format header only has space for 16 palette entries but ChangeFSI will continue reading off the end of the table into the start of the image data. However, no examples of 5/6/7bpp images could be found in the wild, so let sleeping dogs lie.

Version 1.53. Tagged as 'ChangeFSI-1_53'
@
text
@d15 2
a16 2
RISC OS sprites 1, 2, 4, 8bpp -
   and 15 and 24 (32 bits) sprites
d91 1
a91 1
Ј Recognised by file type FF9 (a paint brush and house icon).
d104 1
a104 1
Contains 1, 2, 4, 8, 16 or 32 bits per pixel.
d110 1
a110 1
Ј Mask information ignored.
d723 2
a724 2
RISC OS 1, 2, 4 and 8 bit per pixel sprites   [file type FF9]
   and 15 and 24 (32 bits) sprites
@


4.11
log
@Add support for Windows icon and cursor import
Windows 3 style ICO and CUR files are internally very similar to BMP files, so much of the hard work already existed.
As with other multi-frame formats (GIF and Sprite for example) ChangeFSI simply picks the first one it finds in a file, even if there are several offered.
In modifying the BMP importer, ChangeFSI no longer reads off the end of the palette for bitmaps which don't use all 2^bpp entries.
Tested with a variety of icons and bitmaps up to the maximum size allowed 256x256 pixels.
Documents updated.

Version 1.51. Tagged as 'ChangeFSI-1_51'
@
text
@d227 1
a227 1
can be 1-8 bits per pixel.
d233 3
d735 2
a736 1
ZSoft .PCX files                              [10,1-5,1 in file OR named pcx. OR /PCX]
@


4.10
log
@Add support for 2bpp BMP files and those with flipped scan order
Fix import of OS/2 BMP files

WinCE is documented on MSDN as creating and displaying 2bpp bitmaps, so we might as well support them.
Also, MSDN states that when the BITMAPINFOHEADER is in use the height is a signed number, with -ve values meaning the scan order is reversed (top down).

Relatedly, the width and height in an OS/2 bitmap are only 16 (unsigned) bits, whereas ChangeFSI was reading in 32 bit values leading to grossly wrong dimensions, plus it uses packed 24 bit palette values not 32 bit like Windows.
Docs updated and info fields made more verbose to report whether it's a Windows or OS/2 BMP.

Now successfully opens all the 'good' bitmaps in BMP Suite http://entropymine.com/jason/bmpsuite/

Version 1.50. Tagged as 'ChangeFSI-1_50'
@
text
@d43 2
a44 1
Windows 3 and OS/2 BMP files
d397 5
d749 5
@


4.9
log
@Add support for version 1.0 RLE compressed targa images
Fix RLE decompression of 15bpp targa images

In spec 1.0 RLE compressed data was allowed to span multiple scan lines, whereas spec 2.0 said the exact opposite (so that fast lookup tables into scan lines became possible). However, ChangeFSI could only handle RLE decompression where the data exactly decompressed to one line long, otherwise getting stuck in a REPEAT UNTIL loop until overrunning the end of the line buffer.
A new PROCtarga (since it's common to all 5 possible pixel depths) loads lines, and optionally suspends decompression once one line has been fetched to allow continuation on the next line.

A truncating divide when calculating 'step24' meant that 15bpp TGA's only got allocated half the memory they needed, leading to a data abort. Now, 8/15/16/24/32bpp get the right allocation.
Docs updated.

Version 1.49. Not tagged
@
text
@d43 1
a43 1
Windows 3 .BMP files
d388 2
a389 2
Windows 3 .BMP files
--------------------
d391 1
a391 1
arbitrary sized image and 1, 4 or 8 bits per pixel. Uncompressed.
d396 3
a398 1
Ј No resolution specified; equal to mode 27 assumed.
d400 2
a401 1
Ј Documentation never seen - 7 files examined and intelligent guesses made!
d742 1
a742 1
Windows 3 .BMP files                          [BM in file]
@


4.8
log
@Add support for 32bpp Sun raster files
Fix support for 24bpp RLE compressed Sun raster files

The former is merely 24b data on 32b boundaries (the format doesn't support transparency), so this need not be rejected by ChangeFSI.
The latter caused a data abort because the decoder assumed all RLE data could be handled by FN1100 but in the 24bpp case there's 3 times more data than expected so you fall off the end of memory.
Test image for type 3 Sun rasters produced as these seem hard to find.
Now correctly decodes all the sample images at
  http://samples.libav.org/image-samples/sunrast/
Docs updated.

Version 1.48. Tagged as 'ChangeFSI-1_48'
@
text
@d195 1
a195 1
Ј Only uncompressed formats readable.
d197 6
a202 1
Ј Only 8 and 16 bit per pixel formats tested.
d720 1
a720 1
PC TGA images                                 [name ends in /TGA OR /VDA]
@


4.7
log
@Minor fixes
Having selected JPEG output format, you'd get an error clicking on one of the radio icons on the sprite output format window.
Look for BZERO and BSCALE in FITS astronomical image files, rather than subtracting a hardwired 0x8000 - this tended to result in any 16bpp images coming out solid green.
Mirror the FITS image output in the X axis so they're the right way up.

Version 1.45. Tagged as 'ChangeFSI-1_45'
@
text
@d424 3
a426 2
Used under SunOS and also under X11. Commonly 1 or 8 bits per pixel, but up
to 24 bits per pixel can be found (see the Sun NeWS release tape!).
d432 3
a434 1
Ј Sun didn't specify the pixel ordering of 24 bit per pixel images: many
d436 2
a437 1
  between 1 and 3 if you have a problem.
d644 1
a644 1
  of things change if >250 rows in the picture!) this is no guarentee that
@


4.6
log
@Add WBMP reading ability
From reading WAP WAE 1.1 spec, tested with some sample images from the internet.
Test image added to 'tests' directory for reference.

Version 1.44. Tagged as 'ChangeFSI-1_44'
@
text
@d349 2
a350 1
data. Up to 16 bits per pixel component.
d354 2
a355 1
Ј Only 8 and 16 bit per pixel component formats tested.
d357 3
a359 1
Ј Only two files ever seen!
@


4.5
log
@Add PNG reading ability
Also increased the minimum work area of the uutput window so the up/down adjusters don't get squashed with very small images.

Tested with 174 test PNGs from the PNG test suite.

Version 1.43. Tagged as 'ChangeFSI-1_43'
@
text
@d68 1
d685 10
d699 1
a699 1
   and 15 and 24 (32 bits) sprites            [file type FF9]
d707 1
a707 1
PC TGA images                                 [name ends in TGA or VDA]
d733 2
a734 2
TechnoI video digitiser                       [T-I in file (or filetype CBE)]
TIFF pictures                                 [II* or MM* in file (or filetype FF0)]
d736 1
a736 1
Portable bit map                              [P1,P2,P3,P4,P5 or P6 at start of file]
d750 2
@


4.4
log
@Documentation updates
Not all of the formats listed and supported were in the tables.
@
text
@d66 2
d671 13
d738 1
@


4.3
log
@Added btpc 4.1 support,though the detection in the main program has
always been there the binary vanished sometime round 1995.
Added abridged info on BTPC to the appropriate docs,plus docs updates
to reflect interesting information which seems to have been
progressively removed with time.
Yucky sprites added,Sprites23 deleted.
The output window now remembers where it was last opened instead of
always jumping to the middle of the screen.
You no longer need to be in a specific screen depth for any operation,
before (particularly using special mode "r") it needed to read the
palette in a particular mode - now if it realises it cannot it will look
for a default palette in its Palettes directory and only then give an
error.
Reinstated 256 colour special mode "t",this has always been missing the
4096 colour lookup table and most of the support for it was removed in
about 1992 though the assembler remained leading to a "No such variable"
error when trying to use it.GenCFSIict produces the table.

Version 1.20. Tagged as 'ChangeFSI-1_20'
@
text
@d7 1
a7 1
detail on each one.This is then followed by a table summarising the formats.
d15 2
a16 1
RISC OS sprites
d30 1
a30 1
CCIR 601 4:2:2 images
d34 1
a35 1
AIM/Wild Vision Hawk V10, 256О256, 256 greys
d50 1
d62 2
a142 1

d673 2
a674 1
RISC OS 15 and 24 (32 bits) sprites           [file type FF9]
d678 2
d681 4
d687 1
a687 1
CCIR 601 PAL image                            [file type 601]
d695 12
d709 4
a713 3
Sun 'pixrect' Raster Files                    [&956AA659 in file]
.PIC 8 bit per pixel files                    [AV_VO in file]
RIX Softworks ColoRIX 8 bit per pixel files   [RIX3 in file]
a714 1
Compuserve's GIF files up to 8 bit per pixel  [GIF87a in file]
a716 14
ZSoft .PCX files                              [10,1-5,1 in file OR pcx. OR/PCX]
Windows 3 .BMP files                          [BM in file]
ArVis 15 bit HIP.+LOP. sprites                [file type FF9 named HIP.]
Pineapple 16 bit per pixel image              [FSIfile in file]
FITS astronomical format                      [SIMPLE in file]
GEM IMG. images                               [0,8,0,1 in file OR named img. OR/IMG]
UNIX rle format                               [&CC52 in file]
Apollo GPR 16 colour image                    [0,1,0,1 in file]
PC EGA .DSP images 640x350y16c                [named dsp. or /DSP]
PC TGA images                                 [name ends in TGA or VDA]
Irlam Instruments 24 bit files                [Irlam in file]
Irlam Instruments YUV 411 files               [IRLAM YUV 411 in file]
MTV 24 bit pic. images                        [named pic.]
QRT 24 bit .raw images                        [named .raw]
d718 2
a719 4
JPEG "JFIF" file                              [JFIF in file]
Portable bit map                              [P1,P2,P3,P4,P5 or P6 at start of file]
ChangeFSI packed portable bitmap              [P15 at start of file]
lpiar 36 bit per pixel                        [ALPIAR12 at start of file]
d721 1
@


4.2
log
@Lost the sources to 1.15 somewhere,and RISC OS 4 came with 1.17.
Output template reworked
Zoom template swiped from !Paint
Infobox and saveas box swiped from !Edit
Improved error messages for unsupported formats
Hyphenated the date (also now derived at build time from the VersionNum
file)
Assembler stamped on to remove 26 bit code (uses MRS and MSR,hence ARM6
or later,but the RMEnsure of Utility module catches this).
Rejigged a few ADRs which were no longer in range due to the above.
Added ChangeFSI alias to !Boot file,it's always been documented as being
available...
Took 6b of the IJG jpeg code,and updated the JPEGinfo file accordingly
3dtemplate renamed as Template3d
Eliminated some dead documentation which never went on the disc image
anyway
Bug fix for CLI use when output is an S16 sprite,no default x dpi or y dpi
was assumed leading to an infinitely narrow infinitely tall sprite.
REM'd out the sketchy support for S24,a mythical 24 bpp packed sprite and
tweaked the docs to read S32 which you can actually generate!
Now handles progressive JPEGs (merged from a patched CFSI from RComp's
webpages).
Adds TechnoI video digitiser reading (untested)
Adds P8 reading (untested)
Merged the useful bits from RISC OS Ltd's sources,which seem to be
pretty unchanged from V1.15.
 * Missing hpcdtoppm sources,so no 32 bit there
 * Missing btpc sources,so no 32 bit there

Version 1.18. Tagged as 'ChangeFSI-1_18'
@
text
@d61 1
a61 1

d81 1
a81 1
Acorn's Programmer's Reference Manual.
d660 6
d715 1
a715 1
bptc file                                     [bptc at start of file]
@


4.1
log
@Initial revision
@
text
@d7 1
a7 1
detail on each one.
a76 1

d659 51
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
