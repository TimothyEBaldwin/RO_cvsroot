head	1.3;
access;
symbols
	EtherTH-0_35:1.3
	EtherTH-0_34:1.2
	EtherTH-0_33:1.2
	EtherTH-0_32:1.2
	EtherTH-0_31:1.2
	EtherTH-0_30:1.2
	EtherTH-0_29:1.2
	EtherTH-0_28:1.1
	EtherTH-0_27:1.1
	EtherTH-0_26:1.1;
locks; strict;
comment	@# @;


1.3
date	2018.07.20.21.58.39;	author jballance;	state Exp;
branches;
next	1.2;
commitid	U2FQ2bXuMtkfkVKA;

1.2
date	2017.07.18.13.02.59;	author jballance;	state Exp;
branches;
next	1.1;
commitid	rYeLOeF2Jp1S9IZz;

1.1
date	2017.03.11.00.12.54;	author jballance;	state Exp;
branches;
next	;
commitid	EKCvCR7DacKJ24Jz;


desc
@@


1.3
log
@  Make aware of new phy address propagation mechanism
Detail:

Admin:
  tested on iMx6

Version 0.35. Tagged as 'EtherTH-0_35'
@
text
@/*
 * Copyright (c) 2017, Colin Granville
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * The name Colin Granville may not be used to endorse or promote
 *       products derived from this software without specific prior written
 *       permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */


#ifndef HALETHERDEVICE_H
#define HALETHERDEVICE_H

#include <stdint.h>
#include "Global/HalDevice.h"

// keep this synchronised with Hdr.EtherDevice 
typedef struct HalEtherDevice_t
{
        struct device   base;
        struct
        {
                uint32_t                devicenumber;                                   /* for  OS_ClaimDeviceVector */
                void (*enable)(int on, void* hal_pw);                                   /* enable irq. 1 on, 0 off */
                int (*test)(int unused, void* hal_pw);                                  /* returns 1 if irq present */
                void (*clear)(int unused, void* hal_pw);
                volatile uint32_t*      irqRegAddr;                                     /* phy irq test address */
                uint32_t                irqBitMask;                                     /* phy irq test active bit mask */
                void *                  HAL_WS;
                uint32_t                clock;
                void (*PwrRst)(int bits, void* hal_pw);
                int*                    PhyAddress;
        } phy;

} HalEtherDevice_t;
//Bit values to use with the PwrRst call above
#define  PhyPwrOn  1
#define  PhyHWRst  2

#endif
@


1.2
log
@  Made revD1 compatible (AR8035 aware, and Phy power and reset pin aware)
Detail:
  RevD1 introduces the AR8035 Phy replacing the AR8031, and provides
  a power switch for it. Code for this installed, together with a fix
  to allow hardware reset of the Phy when available.
Admin:
  tested on revC2 and revD1

Version 0.29. Tagged as 'EtherTH-0_29'
@
text
@d36 1
d51 1
@


1.1
log
@    Convert to C based component with import of re-written module form Colin Granville
Detail:
Admin:
    tested in iMx6

Version 0.26. Tagged as 'EtherTH-0_26'
@
text
@d42 1
a42 1
                void (*enable)(int on, void* hal_pw);                                  /* enable irq. 1 on, 0 off */
d47 1
a47 1
                uint32_t                specialField;
d49 1
d53 3
a55 1

@

