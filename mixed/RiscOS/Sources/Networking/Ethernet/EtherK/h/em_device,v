head	1.6;
access;
symbols
	EtherK-0_25:1.6
	EtherK-0_24:1.6
	EtherK-0_23:1.6
	EtherK-0_22:1.6
	EtherK-0_21:1.6
	EtherK-0_20:1.6
	EtherK-0_19:1.6
	EtherK-0_18:1.6
	EtherK-0_17:1.6
	EtherK-0_16:1.6
	EtherK-0_15:1.6
	EtherK-0_14:1.6
	RO_5_07:1.6
	EtherK-0_13:1.6
	EtherK-0_12:1.6
	EtherK-0_11:1.6
	EtherK-0_10:1.6
	EtherK-0_09:1.6
	EtherK-0_08:1.5
	EtherK-0_07:1.5
	EtherK-0_06:1.4
	EtherK-0_05:1.3
	EtherK-0_04:1.2
	EtherK-0_03:1.2
	EtherK-0_02:1.2
	EtherK-0_01:1.1.1.1
	EtherK-0_00:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2002.12.20.16.04.07;	author jbyrne;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.13.17.55.55;	author jbyrne;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.11.19.14.05;	author jbyrne;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.04.16.19.11;	author rsprowson;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.09.19.54.05;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.09.19.21.37;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.09.19.21.37;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Adds reentrancy checks to the transmit routine.
Change to spl macros to disable *all* interrupts rather than just the
line relating to the device vector number.
User guide tweak.

Version 0.09. Tagged as 'EtherK-0_09'
@
text
@/* Copyright 2002 Tematic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef EtherK_em_device_h
#define EtherK_em_device_h

/*
 * The device structure is the main device driver control block, one
 * per unit. It contains all the information needed to access the
 * ethernet card hardware.
 */

struct device
{
    void          * module_wsp;             /* Must be first word of structure - used by em_irq_trampoline */
    device_t        next;                   /* Pointer to next structure in list */
                    
    struct adapter  adapter;                /* Device driver control block for Intel driver code */
    Dib             dib;                    /* DCI4 Device Information Block */
    struct stats    stats;                  /* DCI4 Statistics structure */

    uint32_t        function_handle;        /* PCI function handle */                    
    uint32_t        pci_id;                 /* PCI vendor and device ID as returned from PCI_ReadID in R0 */
    uint32_t        pci_sub_id;             /* PCI subsystem vendor and ID as returned from PCI_ReadID in R1 */
    uint32_t        device_vector;          /* Device Vector number for OS_ClaimDeviceVector */                    

    FilterSingleRef ieeefilter;             /* IEEE frame class filtering information */
    FilterSingleRef e2monitor;              /* Ethernet 2.0 Monitor frame level filtering information */
    FilterSingleRef e2sink;                 /* Ethernet 2.0 Sink frame level filtering information */
    FilterChainRef  e2specific;             /* Ethernet 2.0 Specific frame level filtering information */

    AddressFilter   address_filter;         /* Pointer to address filtering function for current hardware address level */

    MessageLog      log;                    /* Message log */

    uint32_t        nvram_addr;             /* Address of NVRAM for device */
    uint32_t        nvram_size;             /* Size of NVRAM for device */
    ConfigLink      link_setting;           /* Speed setting of '*Configure EKLink' */
    uint8_t         link_mdix;              /* MDI setting of '*Configure EKLink' */
    uint8_t         advertise;              /* Setting of '*Configure EKAdvertise' */
    em_fc_type      flow_control;           /* Setting of '*Configure EKFlowControl' */

    bool            initialised;            /* Set if device correctly initialised */
    bool            no_eeprom;              /* Set if device has no EEPROM */
    bool            dupclaimexpected;       /* Set if duplicate filter claims allowed */
    bool            localtimerset;          /* Set if em_local_timer is to be called */
    bool            dev_vector_claimed;     /* Set if Device Vector has been claimed */
    bool            irq_handler_entered;    /* Set if processing an interrupt */
    bool            tx_handler_entered;     /* Set when in transmit routine */
    bool            ignore_irqs;            /* Set if interrupts are to be ignored */
};

/* Macros faking FreeBSD functions using the device structure */

#define pci_get_vendor(dev) ((dev->pci_id) & 0xffff)
#define pci_get_device(dev) ((dev->pci_id) >> 16)
#define pci_get_subvendor(dev) ((dev->pci_sub_id) & 0xffff)
#define pci_get_subdevice(dev) ((dev->pci_sub_id) >> 16)

#define device_get_softc(dev) (&dev->adapter)
#define device_get_unit(dev) (dev->dib.dib_unit)

#endif
@


1.5
log
@Interrupt handling got broken in 0.06 so although packets were being
received noone ever saw them.
Change to DCI flags.
Addition of new Configure keywords (EkAdvertise and EkFlowControl).
Improvement to the interrupt handler so interrupts are turned off for
slightly less time.

Version 0.07. Tagged as 'EtherK-0_07'
@
text
@d60 1
@


1.4
log
@Merge in changes from the latest BSD driver. EtherK is now based on
version 1.4.7 of the FreeBSD 'em' device driver.
Merge in changes from the latest BSD driver. EtherK is now based on version

Version 0.06. Tagged as 'EtherK-0_06'
@
text
@d49 4
a52 1
    ConfigLink      link_setting;           /* Setting of '*Configure EKLink' */
d54 7
a60 7
    unsigned        initialised:1;          /* Non-zero if device correctly initialised */
    unsigned        no_eeprom:1;            /* Non-zero if device has no EEPROM */
    unsigned        dupclaimexpected:1;     /* Non-zero if duplicate filter claims allowed */
    unsigned        localtimerset:1;        /* Non-zero if em_local_timer is to be called */
    unsigned        dev_vector_claimed:1;   /* Non-zero if Device Vector has been claimed */
    unsigned        irq_handler_entered:1;  /* Non-zero if processing an interrupt */
    unsigned        testing:1;              /* Non-zero if running diagnostic tests */
@


1.3
log
@Addition of support for *CONFIGURE eklink to allow forceable setting of speed
Fix to link list handler so multiple 82540's are supported at once

Version 0.05. Tagged as 'EtherK-0_05'
@
text
@d57 1
@


1.2
log
@Messages placed in messages file
Improvements to shared interrupt handling
Makefile updated
Tidied logging

Version 0.02. Tagged as 'EtherK-0_02'
@
text
@d47 4
@


1.1
log
@Initial revision
@
text
@d45 1
a45 2
    _kernel_oserror last_error;             /* Last RISC OS error */
    char            last_message[64];       /* Last message */
@


1.1.1.1
log
@Initial import from James Byrne

@
text
@@
