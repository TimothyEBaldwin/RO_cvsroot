head	1.3;
access;
symbols
	EtherK-0_25:1.3
	EtherK-0_24:1.3
	EtherK-0_23:1.3
	EtherK-0_22:1.3
	EtherK-0_21:1.3
	EtherK-0_20:1.3
	EtherK-0_19:1.3
	EtherK-0_18:1.3
	EtherK-0_17:1.3
	EtherK-0_16:1.3
	EtherK-0_15:1.3
	EtherK-0_14:1.3
	RO_5_07:1.3
	EtherK-0_13:1.3
	EtherK-0_12:1.2
	EtherK-0_11:1.2
	EtherK-0_10:1.2
	EtherK-0_09:1.2
	EtherK-0_08:1.2
	EtherK-0_07:1.1
	EtherK-0_06:1.1;
locks; strict;
comment	@# @;


1.3
date	2004.09.06.13.27.25;	author jbyrne;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.18.19.20.52;	author jbyrne;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.11.19.14.05;	author jbyrne;	state Exp;
branches;
next	;


desc
@@


1.3
log
@  Update BSD-derived code to version 1.7.35 of the FreeBSD driver sources.
  Rewrite and improve test code.
Detail:
  if_em.c, if_em_hw.c, if_em.h, if_em_hw.h and if_em_osdep.h have all
  been updated to version 1.7.35 of the FreeBSD sources. This version of
  the FreeBSD source tarball is now in the Original directory and earlier
  ones have been removed. The main effect of the changes is to add support
  for later Intel controllers. Note that workaround code required to
  support the 82544 when running on a PCIX bus, and to support the 82547EI
  has not been included to remove unnecessary complication. If support for
  these controllers is ever required (unlikely), this would need to be
  added back in.
  The test code has been rewritten and is now in a new file, test.c.
  Loopback code from the Linux driver is located in the loopback.c file
  and can optionally be compiled in by changing the #define at the top of
  test.c, but since this is GPL code it cannot be included in any
  distributed module. Also, although the test will work, it does not
  restore everything correctly so the link stays down afterwards until the
  module is reinitialised.
  AutoSense/EtherK has been updated to recognise all supported cards.
  doc/UserGuide has been updated.
Admin:
  Basic testing has been carried out, but more testing is required.
  Note that the updated AutoSense and UserGuide files need to be
  included in future distributions including this module.


Version 0.13. Tagged as 'EtherK-0_13'
@
text
@EtherK notes

The chip can detect crossover cables automatically (MDI/MDI-X) but only when auto-negotiation is enabled. If the link speed is forced this does not work. It should be possible to force MDI-X mode when the speed is forced (and the *Configure EKLink command accepts an extra undocumented parameter 'MDI-X' to allow you to do this), but it doesn't seem to work. Forcing MDI/MDI-X mode only seems to work when auto-negotiation is enabled, which seems a bit pointless.

When the duplex setting is forced, hubs may not detect the setting correctly(?)
Happens with the Windows driver too. I think the answer is that you need instead to use auto-negotiation, but restrict the advertised duplex setting to the one you want using *Configure EKAdvertise.

The loopback code seems to work, but after running it the link won't go up again unless the module is reinitialised.

Workaround code to support the the 82544 running on PCIX and the 82547EI has been left out to simplify things.
@


1.2
log
@Tidy up syntax messages
Addition of user guide
Rearrange ekinfo output
Function names stripped to save ROM space
Add link failures and polarity statistics

Version 0.08. Tagged as 'EtherK-0_08'
@
text
@d8 3
@


1.1
log
@Merge in changes from the latest BSD driver. EtherK is now based on
version 1.4.7 of the FreeBSD 'em' device driver.
Merge in changes from the latest BSD driver. EtherK is now based on version

Version 0.06. Tagged as 'EtherK-0_06'
@
text
@d3 1
a3 1
The chip can detect crossover cables automatically (MDI/MDI-X) but only when auto-negotiation is enabled. If the link speed is forced this does not work.
d6 1
a6 1
Happens with Windows driver too.
@

