head	1.17;
access;
symbols
	EtherK-0_25:1.17
	EtherK-0_24:1.17
	EtherK-0_23:1.17
	EtherK-0_22:1.17
	EtherK-0_21:1.16
	EtherK-0_20:1.15
	EtherK-0_19:1.15
	EtherK-0_18:1.14
	EtherK-0_17:1.14
	EtherK-0_16:1.14
	EtherK-0_15:1.13
	EtherK-0_14:1.13
	RO_5_07:1.12
	EtherK-0_13:1.12
	EtherK-0_12:1.11
	EtherK-0_11:1.10
	EtherK-0_10:1.9
	EtherK-0_09:1.9
	EtherK-0_08:1.8
	EtherK-0_07:1.7
	EtherK-0_06:1.7
	EtherK-0_05:1.6
	EtherK-0_04:1.5
	EtherK-0_03:1.4
	EtherK-0_02:1.3
	EtherK-0_01:1.2
	EtherK-0_00:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.17
date	2012.02.04.10.50.13;	author rsprowson;	state Exp;
branches;
next	1.16;
commitid	mkEp0XgpnHicqPRv;

1.16
date	2009.10.25.02.12.18;	author jlee;	state Exp;
branches;
next	1.15;

1.15
date	2006.02.10.16.00.30;	author jbyrne;	state Exp;
branches;
next	1.14;

1.14
date	2005.09.06.09.26.39;	author jballance;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.09.18.23.14;	author bavison;	state Exp;
branches;
next	1.12;

1.12
date	2004.09.06.13.27.18;	author jbyrne;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.02.19.08.18;	author jbyrne;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.02.17.21.28;	author bavison;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.20.16.04.05;	author jbyrne;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.18.19.20.51;	author jbyrne;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.11.19.13.59;	author jbyrne;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.04.16.19.09;	author rsprowson;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.21.08.37.48;	author rsprowson;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.14.23.17.19;	author rsprowson;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.09.19.54.03;	author rsprowson;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.09.19.38.09;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.09.19.21.37;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.09.19.21.37;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Change to use CModule shared makefile.
Compiles, install & resources behave as expected, but not functionally tested

Version 0.22. Tagged as 'EtherK-0_22'
@
text
@# Copyright 2002 Tematic Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for EtherK
#

COMPONENT   = EtherK
TARGET     ?= EtherK
OBJS        = em_asm em_riscos if_em if_em_hw msgs \
              info log mbuf generic filter test ekmodule
CMHGFILE    = EKHdr
CMHGDEPENDS = ekmodule msgs
ROMCDEFINES = -DROM
RES_AREA    = messages_file
CUSTOMSA    = custom
HDRS        =
CINCLUDES   = -ITCPIPLibs:,C:

include CModule

#
# Description of extra compilation options:
# DBG_STATS  Gather extra driver statistics for debugging such as the time
#            used in the IRQ handler and the transmit routine.
#
DFLAGS      = -DRISCOS -DDBG=0 -DINET -DKERNEL
CFLAGS     += ${DFLAGS} ${OPTIONS} -Wp 
CDFLAGS    += -fn -DDEBUGLIB
LIBS       += ${ASMUTILS} ${CALLXLIB} ${INETLIB} ${UNIXLIB}
DBG_LIBS   += ${SOCK5LIB}

#
# Specials for install (and standalone because they use the same override)
#
standalone: rm.${SA_TARGET}
        @@${ECHO} ${COMPONENT}: ram module built

install: install_${TARGET}; @@

install_EtherK: rm.${SA_TARGET}
        ${MKDIR} ${INSTDIR}
        ${CP} rm.${SA_TARGET} ${INSTDIR}.${TARGET} ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: ram module installed

install_AutoSense: AutoSense.${COMPONENT}
        ${CP} AutoSense.${COMPONENT} ${INSTDIR}.${COMPONENT} ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: AutoSense file installed

# Dynamic dependencies:
@


1.16
log
@Modify EtherK makefile to allow AutoSense file to be installed when building disc image

Version 0.20. Not tagged
@
text
@a16 23
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date         Name    Description
# ----         ----    -----------
# 19-Aug-2002  JRB     Created.
# 14-Oct-2002  JRB     Updated to do ROM builds properly.

COMPONENT  = EtherK
TARGET    ?= EtherK
RESFSDIR   = ${RESDIR}.${TARGET}

OBJS       = o.EKHdr o.em_asm o.ekmodule o.em_riscos o.if_em o.if_em_hw \
 o.info o.log o.mbuf o.generic o.filter o.test
MSGSF_OBJ  = o.messages
RAM_OBJS   = ${OBJS} o.msgs ${MSGSF_OBJ}
ROM_OBJS   = ${OBJS} o_rom.msgs
DBG_OBJS   = o.EKHdr o.em_asm \
 o_dbg.ekmodule o_dbg.em_riscos o_dbg.if_em o_dbg.if_em_hw \
 o_dbg.info o_dbg.log o_dbg.mbuf o_dbg.generic o_dbg.filter o_dbg.test \
 o_dbg.msgs ${MSGSF_OBJ}
RAM_MODULE ?= rm.${TARGET}
RAM_LIBS   ?= ${LIBS}
d18 11
a28 2
DIRS       = o._dirs_
MERGEDMSGS = o._messages_
d30 1
a30 3
# Description of extra compilation options:
# DBG_STATS	Gather extra driver statistics for debugging such as the time
#		used in the IRQ handler and the transmit routine.
d33 3
a35 32
# Build options
#
CINCLUDES  = -ITCPIPLibs:,C:
CDEFINES   = -DRISCOS -DDBG=0 -DINET -DKERNEL ${OPTIONS}
CFLAGS     = -Wp -ffah -zM -zps1

#
# Libraries
#
include Makefiles:ModuleLibs
LIBS       = $(ASMUTILS) $(CALLXLIB) $(INETLIB) $(UNIXLIB)
DBG_LIBS   = $(DEBUGLIBS) $(LIBS) $(SOCK5LIB)
ABSSYM     = $(C_ABSSYM)

#
# Include standard rules and macros
#
include Makefiles:StdTools
include Makefiles:ModStdRule
include Makefiles:ROMCModule

#
# Extra rule patterns
#
.SUFFIXES: .o_rom .o_dbg
.c.o_rom:;      ${CC} ${CFLAGS} -DROM -o $@@ $<
#.c.o_dbg:;      ${CC} ${CFLAGS} -fn -DDEBUGLIB -DDBG_STATS -o $@@ $<
.c.o_dbg:;      ${CC} ${CFLAGS} -fn -DDEBUGLIB -o $@@ $<

#
# Rule for actually making the linked RAM debug target
# (based on rule for RAM_MODULE from Makefiles:RAMCModule)
d37 5
a41 5
DBG_MODULE = rm.${TARGET}-dbg
${DBG_MODULE}: ${DBG_OBJS} ${DBG_LIBS} ${CLIB} ${DIRS}
        ${MKDIR} rm
        ${LD} ${LDFLAGS} ${LDRAMFLAGS} -o $@@ -rmf ${DBG_OBJS} ${DBG_LIBS} ${CLIB}
        ${CHMOD} -R a+rx rm
d44 1
a44 2
# Rule for non-debug RAM target
# (since we can't include Makefiles:RAMCModule any more)
d46 1
a46 36
${RAM_MODULE}: ${RAM_OBJS} ${RAM_LIBS} ${CLIB} ${DIRS} ${RAM_DEPEND}
        ${MKDIR} rm
        ${LD} ${LDFLAGS} ${LDRAMFLAGS} -o $@@ -rmf ${RAM_OBJS} ${RAM_LIBS} ${CLIB}
        ${MODSQZ} ${MODSQZFLAGS} $@@
        ${CHMOD} -R a+rx rm

#
# Resources
#

# Rule to generate merged messages file for RAM builds
${MERGEDMSGS}: LocalRes:Messages LocalRes:CmdHelp ${DIRS}
        ${MKDIR} o
        ${CP} LocalRes:Messages ${MERGEDMSGS} ${CPFLAGS}
        ${CAT} LocalRes:CmdHelp { >> ${MERGEDMSGS} }

# Target to generate merged messages file when exporting resources
messages-: LocalRes:Messages LocalRes:CmdHelp ${DIRS}
        ${MKDIR} o
        ${CP} LocalRes:Messages ${MERGEDMSGS} ${CPFLAGS}
        ${CAT} LocalRes:CmdHelp { >> ${MERGEDMSGS} }

# Target to generate messages file without command help when exporting resources
messages-None: LocalRes:Messages ${DIRS}
        ${MKDIR} o
        ${CP} LocalRes:Messages ${MERGEDMSGS} ${CPFLAGS}

# Rule to generate messages object file for RAM builds
${MSGSF_OBJ}: ${MERGEDMSGS}
        resgen messages_file ${MSGSF_OBJ} ${MERGEDMSGS} Resources.${COMPONENT}.Messages

#
# Targets
#

all: ${RAM_MODULE}
a48 30
# Target to create object directories
${DIRS}:
        ${MKDIR} o
        ${MKDIR} o_rom
        ${MKDIR} o_dbg
        ${TOUCH} ${DIRS}

# Target to clean component
clean:
        ${RM} h.EKHdr
        ${XWIPE} o ${WFLAGS}
        ${XWIPE} o_rom ${WFLAGS}
        ${XWIPE} o_dbg ${WFLAGS}
        ${XWIPE} rm ${WFLAGS}
        ${XWIPE} aof ${WFLAGS}
        ${XWIPE} linked ${WFLAGS}
        @@echo ${COMPONENT}: cleaned

# Target to build debug RAM module
debug: ${DBG_MODULE}
        @@${ECHO} ${COMPONENT}: debug ram module built

# Target to export resources
resources: messages-${CMDHELP}
        ${MKDIR} ${RESFSDIR}
        ${TOKENCHECK} ${MERGEDMSGS}
        ${CP} ${MERGEDMSGS} ${RESFSDIR}.Messages ${CPFLAGS}
        ${RM} ${MERGEDMSGS}
        @@echo ${COMPONENT}: Resource files copied

d51 1
a51 1
install_EtherK: ${RAM_MODULE}
d53 1
a53 1
        ${CP} ${RAM_MODULE} ${INSTDIR}.${TARGET} ${CPFLAGS}
d58 1
a58 11
        @@${ECHO} ${COMPONENT: AutoSense file installed

#
# Dependencies for and on EKHdr.h need to be defined explicitly as it is
# generated by cmhg.
#

h.EKHdr: cmhg.EKHdr VersionNum

o.ekmodule: h.EKHdr
o.msgs o_rom.msgs o_dbg.msgs: h.EKHdr
@


1.15
log
@  Fix a potential hole in em_disable_intr()
Detail:
  if_em.c - Add E1000_WRITE_FLUSH after clearing the interrupt mask bits
  in em_disable_intr(). The lack of this could potentially leave a small
  window of time in which interrupts were enabled and the Ethernet
  controller was capable of generating a new interrupt while already
  in the interrupt handler - something the code assumes cannot happen.
  If this did happen the interrupt handler to be re-entered and ignore
  the interrupt, which would lead to the interrupt line being disabled
  and Ethernet packet reception would stop (as would anything else
  sharing the same interrupt line).

  ekmodule.c - Tidy up a bit by merging multiple calls to PCI_ReadInfo
  during ek_initialise() into a single one.

  Makefile - Add a dependency for EKHdr.h on the CMHG file.
Admin:
  Confirmed working but not thoroughly tested.


Version 0.19. Tagged as 'EtherK-0_19'
@
text
@d38 2
a67 1
include Makefiles:RAMCModule
d89 10
d127 3
d160 11
@


1.14
log
@	build version of EtherK that ignores a (possibly) faulty
	motherboard device
Detail:
	added new target and a couple if ifndefs to avoid the 82540em
	device used on the motherboard.  needed for some failed out of
	warranty motherboards.
Admin:  tested at castle.. does as expected
	Castle added IP


Version 0.16. Tagged as 'EtherK-0_16'
@
text
@d151 1
a151 1
h.EKHdr: VersionNum
@


1.13
log
@Added a forced creation of the o directory in a few places - only matters for
BBE builds where the o directory is only used for merging the messages file.

Retagged since this won't affect code generation for existing builds.
@
text
@d26 1
d50 1
a50 1
CDEFINES   = -DRISCOS -DDBG=0 -DINET -DKERNEL
@


1.12
log
@  Update BSD-derived code to version 1.7.35 of the FreeBSD driver sources.
  Rewrite and improve test code.
Detail:
  if_em.c, if_em_hw.c, if_em.h, if_em_hw.h and if_em_osdep.h have all
  been updated to version 1.7.35 of the FreeBSD sources. This version of
  the FreeBSD source tarball is now in the Original directory and earlier
  ones have been removed. The main effect of the changes is to add support
  for later Intel controllers. Note that workaround code required to
  support the 82544 when running on a PCIX bus, and to support the 82547EI
  has not been included to remove unnecessary complication. If support for
  these controllers is ever required (unlikely), this would need to be
  added back in.
  The test code has been rewritten and is now in a new file, test.c.
  Loopback code from the Linux driver is located in the loopback.c file
  and can optionally be compiled in by changing the #define at the top of
  test.c, but since this is GPL code it cannot be included in any
  distributed module. Also, although the test will work, it does not
  restore everything correctly so the link stays down afterwards until the
  module is reinitialised.
  AutoSense/EtherK has been updated to recognise all supported cards.
  doc/UserGuide has been updated.
Admin:
  Basic testing has been carried out, but more testing is required.
  Note that the updated AutoSense and UserGuide files need to be
  included in future distributions including this module.


Version 0.13. Tagged as 'EtherK-0_13'
@
text
@d92 1
d98 1
d104 1
@


1.11
log
@  Restructure and tidy up.
Detail:
  This version has no functional changes, but has been considerably
  tidied up to improve commenting and modularity. In particular the
  information printing routines, filtering routines and message
  logging routines have been split out into separate source files.
  The filtering routines have also been re-worked to be more
  comprehensible. Hopefully this will provide a useful base for
  developing future network drivers.
Admin:
  Requires an up-to-date version of BuildSys to build all variants.
  Basic testing indicates it still works, but more long term testing
  to confirm that nothing has been accidentally broken is required.


Version 0.12. Tagged as 'EtherK-0_12'
@
text
@d29 1
a29 1
 o.info o.log o.mbuf o.generic o.filter o.e1000_idiag
d35 1
a35 1
 o_dbg.info o_dbg.log o_dbg.mbuf o_dbg.generic o_dbg.filter o_dbg.e1000_idiag \
@


1.10
log
@Needs to create the o directory st the start of the resources phase.
@
text
@a25 1
TARGET     = ${COMPONENT}
d29 1
a29 1
 o.mbuf o.e1000_idiag
d33 4
a36 2
DBG_OBJS   = o.EKHdr o.em_asm o_dbg.ekmodule o_dbg.em_riscos o_dbg.if_em \
 o_dbg.if_em_hw o_dbg.e1000_idiag o_dbg.mbuf o_dbg.msgs ${MSGSF_OBJ}
a43 1
# NOPCI_HACK	Allows module to be initialised on Risc PC, without PCI module
d49 1
a49 1
CDEFINES   = -DRISCOS -DDBG=0 -DINET -DKERNEL -UNOPCI_HACK
d57 1
a57 1
DBG_LIBS   = $(DEBUGLIB) $(LIBS) $(SOCK5LIB)
d91 1
a91 1
${MERGEDMSGS}: LocalRes:Messages LocalRes:CmdHelp
d96 1
a96 1
messages-: LocalRes:Messages LocalRes:CmdHelp
d101 1
a101 1
messages-None: LocalRes:Messages
d135 1
a135 1
resources: messages-${CMDHELP} ${DIRS}
d143 1
a143 1
# Dependencies on EKHdr.h need to be defined explicitly as it is
d146 3
d150 1
a150 3
o.msgs: h.EKHdr
o_rom.msgs: h.EKHdr
o_dbg.msgs: h.EKHdr
@


1.9
log
@Adds reentrancy checks to the transmit routine.
Change to spl macros to disable *all* interrupts rather than just the
line relating to the device vector number.
User guide tweak.

Version 0.09. Tagged as 'EtherK-0_09'
@
text
@d135 1
a135 1
resources: messages-${CMDHELP}
@


1.8
log
@Tidy up syntax messages
Addition of user guide
Rearrange ekinfo output
Function names stripped to save ROM space
Add link failures and polarity statistics

Version 0.08. Tagged as 'EtherK-0_08'
@
text
@d73 2
a74 1
.c.o_dbg:;      ${CC} ${CFLAGS} -fn -DDEBUGLIB -DDBG_STATS -o $@@ $<
@


1.7
log
@Merge in changes from the latest BSD driver. EtherK is now based on
version 1.4.7 of the FreeBSD 'em' device driver.
Merge in changes from the latest BSD driver. EtherK is now based on version

Version 0.06. Tagged as 'EtherK-0_06'
@
text
@d50 1
a50 2
#CFLAGS     = -Wp -ffah -zM -zps1
CFLAGS     = -Wp -fa -zM -zps1
d95 1
a95 1
messages-:
d100 1
a100 1
messages-None:
@


1.6
log
@Addition of support for *CONFIGURE eklink to allow forceable setting of speed
Fix to link list handler so multiple 82540's are supported at once

Version 0.05. Tagged as 'EtherK-0_05'
@
text
@d29 2
a30 1
OBJS       = o.EKHdr o.em_asm o.ekmodule o.em_riscos o.if_em o.if_em_hw o.mbuf
d35 1
a35 1
 o_dbg.if_em_hw o_dbg.mbuf o_dbg.msgs ${MSGSF_OBJ}
d57 1
a57 1
LIBS       = $(ASMUTILS) $(INETLIB) $(UNIXLIB)
@


1.5
log
@New code drop from James
Adds AutoSense program to integrate with !Configure
Debugging support added to IRQ handlers
Messages tweaked to allow better compression in ROM

Version 0.04. Tagged as 'EtherK-0_04'
@
text
@d39 5
d73 1
a73 1
.c.o_dbg:;      ${CC} ${CFLAGS} -fn -DDEBUGLIB -DIRQ_STATS -o $@@ $<
d79 1
a79 1
DBG_MODULE = rm_dbg.${TARGET}
d81 1
a81 1
        ${MKDIR} rm_dbg
a124 1
        ${XWIPE} rm_dbg ${WFLAGS}
@


1.4
log
@New drop from James Byrne
Resources capable of being ROMmed and tokenised
Makefile changes
Fix for declaring the wrong MAC address which confused some switches

Version 0.03. Tagged as 'EtherK-0_03'
@
text
@d43 1
a43 1
CDEFINES   = -DRISCOS -DDBG=0 -DINET -DKERNEL
d53 1
a53 1
ABSSYM     = ${C_ABSSYM}
d68 1
a68 1
.c.o_dbg:;      ${CC} ${CFLAGS} -fn -DDEBUGLIB -o $@@ $<
@


1.3
log
@Messages placed in messages file
Improvements to shared interrupt handling
Makefile updated
Tidied logging

Version 0.02. Tagged as 'EtherK-0_02'
@
text
@d23 1
a23 14
# 02-Oct-2002  KJB     Now uses messages file where required

COMPONENT = EtherK
TARGET    = ${COMPONENT}
OBJS      = o.EKHdr o.ekmodule o.em_riscos o.if_em o.if_em_hw o.em_asm o.msgs o.mbuf
LIBS      = $(ASMUTILS) $(DEBUGLIB) $(INETLIB) $(SOCK5LIB) $(UNIXLIB)
DIRS      = local_dirs
CINCLUDES = -ITCPIPLibs:,C:
CDEFINES  = -DRISCOS -DDBG=0 -DINET -DKERNEL -DJRBHACK -UDEBUGLIB
#CFLAGS    = -Wp -ffah -zM -zps1
CFLAGS    = -Wp -fa -zM -zps1

MSGSF     = o.messages
RAM_OBJS  = ${OBJS} ${MSGSF}
d25 33
a58 1
include Makefiles:ModuleLibs
d61 1
d63 34
a96 4
# Dependencies on EKHdr.h need to be defined explicitly as it is
# generated by cmhg.
o.ekmodule: h.EKHdr
o.msgs: h.EKHdr
d99 6
a104 2
${MSGSF}: LocalRes:Messages
        resgen messages_file ${MSGSF} LocalRes:Messages Resources.${COMPONENT}.Messages
d107 1
a107 1
local_dirs:
d109 3
d116 7
a122 2
        ${WIPE} o ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
d125 4
d130 5
a134 5
resources: LocalRes:Messages
        @@echo
        ${MKDIR} ${RESDIR}.${COMPONENT}
        ${CP} LocalRes:Messages ${RESDIR}.${COMPONENT}.Messages ${CPFLAGS}
        @@echo
d136 9
@


1.2
log
@em_disable_intr fudged to disable ALL interrupts
PreReset attempt

Version 0.01. Tagged as 'EtherK-0_01'
@
text
@d23 1
d27 1
a27 1
OBJS      = o.EKHdr o.ekmodule o.em_riscos o.if_em o.if_em_hw o.em_asm o.mbuf
d31 1
a31 1
CDEFINES  = -DRISCOS -DDBG=0 -DINET -DKERNEL -DJRBHACK #-DDEBUGLIB
d35 3
a40 1
include Makefiles:ROMCModule
d43 8
a50 4
# This rule needs to be defined explicitly for the dependency between
# cmhg.EKHdr and h.EKHdr to work.
ekmodule.o: ekmodule.c EKHdr.h
        ${CC} ${CFLAGS} -o $@@ ekmodule.c
d52 1
d56 1
d62 8
@


1.1
log
@Initial revision
@
text
@d37 1
@


1.1.1.1
log
@Initial import from James Byrne

@
text
@@
