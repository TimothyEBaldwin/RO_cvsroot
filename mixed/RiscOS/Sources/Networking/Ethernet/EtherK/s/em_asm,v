head	1.3;
access;
symbols
	EtherK-0_25:1.3
	EtherK-0_24:1.3
	EtherK-0_23:1.3
	EtherK-0_22:1.3
	EtherK-0_21:1.3
	EtherK-0_20:1.3
	EtherK-0_19:1.3
	EtherK-0_18:1.3
	EtherK-0_17:1.3
	EtherK-0_16:1.3
	EtherK-0_15:1.3
	EtherK-0_14:1.3
	RO_5_07:1.3
	EtherK-0_13:1.3
	EtherK-0_12:1.3
	EtherK-0_11:1.3
	EtherK-0_10:1.3
	EtherK-0_09:1.3
	EtherK-0_08:1.3
	EtherK-0_07:1.3
	EtherK-0_06:1.3
	EtherK-0_05:1.3
	EtherK-0_04:1.3
	EtherK-0_03:1.3
	EtherK-0_02:1.3
	EtherK-0_01:1.2
	EtherK-0_00:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2002.10.09.19.54.06;	author rsprowson;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.09.19.38.11;	author rsprowson;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.09.19.21.38;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.09.19.21.38;	author rsprowson;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Messages placed in messages file
Improvements to shared interrupt handling
Makefile updated
Tidied logging

Version 0.02. Tagged as 'EtherK-0_02'
@
text
@; Copyright 2002 Tematic Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System

        AREA    AsmCode, PIC, CODE, READONLY

        IMPORT  ek_ro_irq_entry

        EXPORT  em_asm_irq_trampoline
        EXPORT  em_asm_callproto

;void em_asm_irq_trampoline (void)
;   This veneer is attached using OS_ClaimDeviceVector with the workspace
;   pointer set to point to the relevant struct device. It puts the device
;   structure pointer in R1, retrieves the module workspace pointer from the
;   first word in the device structure and puts it in R12, then jumps to the
;   standard CMHG vector handler veneer.

em_asm_irq_trampoline
        MOV     r1,r12
        LDR     r12,[r12]
        B       ek_ro_irq_entry

;void em_asm_callproto (DibRef dib, struct mbuf * frames,
;                           void (*fs_handler)(), uint32_t fs_pwptr)
;   This routine is used to call a protocol module's Received Frame Handler.

em_asm_callproto
        MOV     r12,r3  ; Put private word pointer in R12
        MOV     pc,r2   ; Jump to handler

        END
@


1.2
log
@em_disable_intr fudged to disable ALL interrupts
PreReset attempt

Version 0.01. Tagged as 'EtherK-0_01'
@
text
@d29 1
a29 1
;   structure pointer in R0, retrieves the module workspace pointer from the
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
        MOV     r0,r12
@


1.1.1.1
log
@Initial import from James Byrne

@
text
@@
