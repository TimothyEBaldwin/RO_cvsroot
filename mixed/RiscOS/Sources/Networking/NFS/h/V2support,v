head	4.1;
access;
symbols
	NFS-3_27:4.1
	NFS-3_26:4.1
	NFS-3_25:4.1
	NFS-3_24:4.1
	NFS-3_23:4.1
	NFS-3_22:4.1
	NFS-3_21:4.1
	NFS-3_20:4.1
	NFS-3_19:4.1
	sbrodie_NFS_dev_merge:4.1
	NFS-3_18-4_22_2_4:4.1
	NFS-3_18-4_22_2_3:4.1
	NFS-3_18-4_22_2_2:4.1
	NFS-3_18-4_22_2_1:4.1
	sbrodie_NFS_dev:4.1.0.2
	sbrodie_NFS_dev_bp:4.1
	NFS-3_18:4.1
	NFS-3_17:4.1
	NFS-3_16:4.1
	NFS-3_15:4.1
	NFS-3_14:4.1
	NFS-3_13:4.1
	NFS-3_12:4.1
	NFS-3_11:4.1
	NFS-3_10:4.1
	NFS-3_09:4.1
	NFS-3_08:4.1
	NFS-3_07:4.1
	NFS-3_06:4.1
	NFS-3_05:4.1
	NFS-3_04:4.1
	NFS-3_02:4.1
	NFS-3_01:4.1
	NFS-3_00:4.1;
locks; strict;
comment	@# @;


4.1
date	99.05.14.12.42.32;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.1
log
@  Now supports NFS version 3.
Detail:
  All client-server calls now use the superior NFS3 protocol.
  This particularly benefits directory enumeration and *NFSInfo
    is now reporting 80%+ cache hit rates which is a significant
    improvement (over 5% better - some hosts report 85%+)
  Hashing algorithms improved to increase cache hits (the cache
    algorithm doesn't use parts of names after a comma, so that
    the hash value for !Run is the same as the hash value for
    !Run,feb - which helps the cache hit rate a lot).   Directory
    browsing on the desktop appears noticably faster too.
  The module now has the original protocol (.x) files defining
    the RPC protocols being used (NFS, mount, pcnfs, rquota)
    and uses them to generate header files, XDR implementations,
    and client stubs automatically, instead of having hand
    written versions.
  NFS workspace comes from a dynamic area where possible.
Admin:
  Supporting documentation:
    Acorn NFS Software Functional Specification (1215,250/FS)
    RFC1014, RFC1057, RFC1094, RFC1813
  Tested in several desktop machines for everyday use against
    both NFS2 and NFS3 servers.
  Requires rpcgen 0.01 or later
    (CVS source: Tools/Sources/rpcgen  tag: rpcgen-0_01 or later)
    (CVS binary: RiscOS/Library  tag: Library-0_19 or later)
  Requires TCPIPLibs 5.13 or later
    (CVS: RiscOS/Sources/Lib/TCPIPLibs  tag: TCPIPLibs-5_13)

Version 3.00. Tagged as 'NFS-3_00'
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*	H.V2support

Purpose : Structures and functions for downcasting and upcasting NFS2<>NFS3

History :
Date	   Who    Comments
-----------------------------------------------------------------------------
17/04/99   SNB    Initial version
****************************************************************************/

#ifndef _NFSV2SUPPORT_H
#define _NFSV2SUPPORT_H

/* Copied manually from nfs_prot.h changing nfsproc3_ to nfs2_em_ */

#ifdef __cplusplus
extern "C" {
#endif

extern  void * nfs2_em_null_3(void *, CLIENT *);
extern  GETATTR3res * nfs2_em_getattr_3(GETATTR3args *, CLIENT *);
extern  SETATTR3res * nfs2_em_setattr_3(SETATTR3args *, CLIENT *);
extern  LOOKUP3res * nfs2_em_lookup_3(LOOKUP3args *, CLIENT *);
extern  ACCESS3res * nfs2_em_access_3(ACCESS3args *, CLIENT *);
extern  READLINK3res * nfs2_em_readlink_3(READLINK3args *, CLIENT *);
extern  READ3res * nfs2_em_read_3(READ3args *, CLIENT *);
extern  WRITE3res * nfs2_em_write_3(WRITE3args *, CLIENT *);
extern  CREATE3res * nfs2_em_create_3(CREATE3args *, CLIENT *);
extern  MKDIR3res * nfs2_em_mkdir_3(MKDIR3args *, CLIENT *);
extern  SYMLINK3res * nfs2_em_symlink_3(SYMLINK3args *, CLIENT *);
extern  MKNOD3res * nfs2_em_mknod_3(MKNOD3args *, CLIENT *);
extern  REMOVE3res * nfs2_em_remove_3(REMOVE3args *, CLIENT *);
extern  RMDIR3res * nfs2_em_rmdir_3(RMDIR3args *, CLIENT *);
extern  RENAME3res * nfs2_em_rename_3(RENAME3args *, CLIENT *);
extern  LINK3res * nfs2_em_link_3(LINK3args *, CLIENT *);
extern  READDIR3res * nfs2_em_readdir_3(READDIR3args *, CLIENT *);
extern  READDIRPLUS3res * nfs2_em_readdirplus_3(READDIRPLUS3args *, CLIENT *);
extern  FSSTAT3res * nfs2_em_fsstat_3(FSSTAT3args *, CLIENT *);
extern  FSINFO3res * nfs2_em_fsinfo_3(FSINFO3args *, CLIENT *);
extern  PATHCONF3res * nfs2_em_pathconf_3(PATHCONF3args *, CLIENT *);
extern  COMMIT3res * nfs2_em_commit_3(COMMIT3args *, CLIENT *);

/* And the "manual" ones */
extern  WRITE3res * nfs2_em_write_with_appendum_3(WRITE3args_with_appendum *, CLIENT *);
extern  READ3res *nfs2_em_read_3_direct(READ3args *, CLIENT *, READ3res *);

/* An upcast function for nfsrw */
extern void upcast_fattr(fattr3 *, const fattr *);


#ifdef __cplusplus
}
#endif

#endif /* !_NFSV2SUPPORT_H */
@
