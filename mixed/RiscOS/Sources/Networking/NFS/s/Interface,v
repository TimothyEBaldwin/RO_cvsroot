head	4.5;
access;
symbols
	NFS-3_27:4.5
	NFS-3_26:4.5
	NFS-3_25:4.5
	NFS-3_24:4.5
	NFS-3_23:4.5
	NFS-3_22:4.5
	NFS-3_21:4.4
	NFS-3_20:4.4
	NFS-3_19:4.4
	sbrodie_NFS_dev_merge:4.4
	NFS-3_18-4_22_2_4:4.4
	NFS-3_18-4_22_2_3:4.4
	NFS-3_18-4_22_2_2:4.4
	NFS-3_18-4_22_2_1:4.4
	sbrodie_NFS_dev:4.4.0.2
	sbrodie_NFS_dev_bp:4.4
	NFS-3_18:4.4
	NFS-3_17:4.4
	NFS-3_16:4.4
	NFS-3_15:4.4
	NFS-3_14:4.4
	NFS-3_13:4.4
	NFS-3_12:4.4
	NFS-3_11:4.4
	NFS-3_10:4.4
	NFS-3_09:4.4
	NFS-3_08:4.4
	NFS-3_07:4.4
	NFS-3_06:4.4
	NFS-3_05:4.4
	NFS-3_04:4.4
	kbracey_32bit:4.2.0.2
	NFS-3_02:4.2
	NFS-3_01:4.2
	NFS-3_00:4.2
	NFS-2_37:4.1
	NFS-2_36:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	NFS-2_35:4.1
	Spin_merge:4.1.7.1
	Spinner_23Sep1998_destend:4.1
	Spinner_23Sep1998_srcend:4.1.7.1
	Spinner_23Sep1998_srcbegin:4.1.7.1
	Spinner_23Sep1998_destbegin:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_13May1998_bp:4.1
	Ursula_13May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	pwombwel_2_32:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.5
date	2018.01.29.21.25.22;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	m4PdBzvfqs9AFOoA;

4.4
date	99.11.30.10.49.33;	author sbrodie;	state Exp;
branches;
next	4.3;

4.3
date	99.11.29.13.39.39;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.05.14.12.42.40;	author sbrodie;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.22.14.49.43;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	99.11.20.17.32.29;	author sbrodie;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.22.14.49.43;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.07.56;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Makefile recreated from fragments
Use Push/Pull macros in the assembler to reduce single reg warnings.
Fix up headers from AsmUtils.

Version 3.22. Tagged as 'NFS-3_22'
@
text
@; Copyright 1996 Acorn Computers Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
        SUBT    NFS<->FileSwitch interface code

        GET   Hdr:ListOpts
        GET   Hdr:Macros
        GET   Hdr:System
        GET   Hdr:Machine.<Machine>
        GET   Hdr:APCS.<APCS>

        GBLL    ProfileIt
ProfileIt       SETL    {FALSE}

        IMPORT  |Image$$RO$$Base|
        IMPORT  |_Lib$Reloc$Off$DP|
        IMPORT  fsentry_open
        IMPORT  fsentry_getbytes
        IMPORT  fsentry_putbytes
        IMPORT  fsentry_args
        IMPORT  fsentry_close
        IMPORT  fsentry_file
        IMPORT  fsentry_func
        IMPORT  fsentry_gbpb

        EXPORT  veneer_fsentry_open
        EXPORT  veneer_fsentry_getbytes
        EXPORT  veneer_fsentry_putbytes
        EXPORT  veneer_fsentry_args
        EXPORT  veneer_fsentry_close
        EXPORT  veneer_fsentry_file
        EXPORT  veneer_fsentry_func
        EXPORT  veneer_fsentry_gbpb

        AREA    FSEntry_Interfaces,REL,CODE,READONLY

        LTORG

veneer_fsentry_open
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*0
        B       fsentry_common
veneer_fsentry_getbytes
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*1
        B       fsentry_common
veneer_fsentry_putbytes
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*2
        B       fsentry_common
veneer_fsentry_args
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*3
        B       fsentry_common
veneer_fsentry_close
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*4
        B       fsentry_common
veneer_fsentry_file
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*5
        B       fsentry_common
veneer_fsentry_func
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*6
        B       fsentry_common
veneer_fsentry_gbpb
        Push    "r8"
        MOV     r8, #fsentry_branchtable - %F10 + 4*7
        B       fsentry_common

fsentry_common  ; os_error *fsentry_common( Parameter_Block * )

        ; Store the input registers onto the stack
        Push    "r0-r7, sl, fp, ip, lr"

        MOV     sl, sp, LSR #20
        MOV     sl, sl, LSL #20         ; SP_LWM
        LDMIA   sl, {v1, v2}            ; save old reloc modifiers over fn call
        LDR     r12, [r12]              ; private word pointer
        LDMIB   r12, {fp, r12}          ; new relocation modifiers
        STMIA   sl,  {fp, r12}          ; set by module init
        MOV     fp, #0                  ; halt C backtrace here!

        ; This is equivalent of 'ADD r10, r10, #0' + |_Lib$Reloc$Off$DP|
        DCD     |_Lib$Reloc$Off$DP| + &E28AA000

        ; Pass a pointer to the structure on the stack
        MOV     a1, sp

 [ ProfileIt
        Push    "r0,r1"
        MOV     r1, #1          ; In
        SWI     &c0103          ; Profiler_SetIndex
        Pull    "r0,r1"
 ]

        ; BL    fsentry_branchtable[r8]
        MOV     lr, pc
        ADD     pc, pc, r8

        ; This is equivalent of 'SUB r10, r10, #0' + |_Lib$Reloc$Off$DP|
        DCD     |_Lib$Reloc$Off$DP| + &E24AA000

10      ; This label must be the 2nd instructions past the above ADD pc, pc, r8

 [ ProfileIt
        Push    "r0,r1"
        MOV     r1, #0          ; Out
        SWI     &c0103          ; Profiler_SetIndex
        Pull    "r0,r1"
 ]

        STMIA   sl, {v1, v2}            ; restore old reloc modifiers

        ; Save the returned value in r8
        MOVS    r8, r0
        ; Get the stuff off the stack
        Pull    "r0-r7, sl, fp, ip, lr"
        ; If returned value indicates an error, then set the overflow and put it back in r0
        MOVNE   r0, r8

        ; Mess about with the flag bits in R8
        [ :LNOT: No32bitCode
        ; If we're allowed to use 32-bit code, it all falls out really nicely
        MOVNE   R8, #V_bit              ; R8 == 0 if Z, V set if !Z
        |
        MOV     R8, pc
        BIC     R8, R8, #C_bit + V_bit
        ORRNE   R8, R8, #V_bit          ; V = err != 0
        ]
        TST     r1, r1                  ; C = r1 == 0
        ORREQ   R8, R8, #C_bit

        ; Move the flag bits into psr
        [ :LNOT: No32bitCode
        MSR     CPSR_f, r8
        |
        TEQP    R8, #0
        NOP
        ]

        Pull    "r8"

        MOV     pc, lr

fsentry_branchtable
        B       fsentry_open
        B       fsentry_getbytes
        B       fsentry_putbytes
        B       fsentry_args
        B       fsentry_close
        B       fsentry_file
        B       fsentry_func
        B       fsentry_gbpb

        END
@


4.4
log
@  Interface.s was omitted from previous checkin by mistake.
Detail:
  Interface.s wouldn't actually build (missing GETs).
Admin:
  Tag NFS-3_03 *deleted* - it was not a useful version.
  Tested on desktop machine.
  Requires AsmUtils 0.03 or later.

Version 3.04. Tagged as 'NFS-3_04'
@
text
@d51 1
a51 1
        STMFD   sp!, {r8}
d55 1
a55 1
        STMFD   sp!, {r8}
d59 1
a59 1
        STMFD   sp!, {r8}
d63 1
a63 1
        STMFD   sp!, {r8}
d67 1
a67 1
        STMFD   sp!, {r8}
d71 1
a71 1
        STMFD   sp!, {r8}
d75 1
a75 1
        STMFD   sp!, {r8}
d79 1
a79 1
        STMFD   sp!, {r8}
d86 1
a86 1
        STMFD   sp!,{r0-r7, sl, fp, ip, lr}
d103 1
a103 1
        STMFD   sp!, {r0,r1}
d106 1
a106 1
        LDMFD   sp!, {r0,r1}
d119 1
a119 1
        STMFD   sp!, {r0,r1}
d122 1
a122 1
        LDMFD   sp!, {r0,r1}
d130 1
a130 1
        LDMFD   sp!, {r0-r7, sl, fp, ip, lr}
d154 1
a154 1
        LDMFD   sp!, {r8}
@


4.3
log
@  32-bit compatibility added.
  Removed obsolete assembler sources
Detail:
  Now imports assembler stuff from AsmUtils.
Admin:
  Built RAM build.
  Requires AsmUtils 0.02 or later.

Version 3.03. Tagged as 'NFS-3_03'
@
text
@d15 8
a25 39
r0      RN      0
r1      RN      1
r2      RN      2
r3      RN      3
r4      RN      4
r5      RN      5
r6      RN      6
r7      RN      7
r8      RN      8
r9      RN      9
r10     RN     10
r11     RN     11
r12     RN     12
r13     RN     13
r14     RN     14
r15     RN     15

a1      RN      0
a2      RN      1
a3      RN      2
a4      RN      3

v1      RN      4
v2      RN      5
v3      RN      6
v4      RN      7
v5      RN      8
v6      RN      9

sl      RN     10
fp      RN     11
ip      RN     12
sp      RN     13
lr      RN     14
pc      RN     15

C_bit   *       1 :SHL: 29
V_bit   *       1 :SHL: 28

d134 1
d136 2
a137 1
        SavePSR r8
d139 3
a141 1
        MOV     r8, pc
a142 3
        ; Mess about with the flag bits in r8
        BIC     r8, r8, #C_bit + V_bit
        ORRNE   r8, r8, #V_bit          ; V = err != 0
d144 1
a144 1
        ORREQ   r8, r8, #C_bit
d148 1
a148 1
        somemsr ,CPSR, r8, #C_bit+V_bit
d150 2
a151 2
        TEQP    r8, #0
	NOP
@


4.2
log
@  Now supports NFS version 3.
Detail:
  All client-server calls now use the superior NFS3 protocol.
  This particularly benefits directory enumeration and *NFSInfo
    is now reporting 80%+ cache hit rates which is a significant
    improvement (over 5% better - some hosts report 85%+)
  Hashing algorithms improved to increase cache hits (the cache
    algorithm doesn't use parts of names after a comma, so that
    the hash value for !Run is the same as the hash value for
    !Run,feb - which helps the cache hit rate a lot).   Directory
    browsing on the desktop appears noticably faster too.
  The module now has the original protocol (.x) files defining
    the RPC protocols being used (NFS, mount, pcnfs, rquota)
    and uses them to generate header files, XDR implementations,
    and client stubs automatically, instead of having hand
    written versions.
  NFS workspace comes from a dynamic area where possible.
Admin:
  Supporting documentation:
    Acorn NFS Software Functional Specification (1215,250/FS)
    RFC1014, RFC1057, RFC1094, RFC1813
  Tested in several desktop machines for everyday use against
    both NFS2 and NFS3 servers.
  Requires rpcgen 0.01 or later
    (CVS source: Tools/Sources/rpcgen  tag: rpcgen-0_01 or later)
    (CVS binary: RiscOS/Library  tag: Library-0_19 or later)
  Requires TCPIPLibs 5.13 or later
    (CVS: RiscOS/Sources/Lib/TCPIPLibs  tag: TCPIPLibs-5_13)

Version 3.00. Tagged as 'NFS-3_00'
@
text
@d165 5
a170 1
        MOV     r8, pc
d177 3
d182 1
@


4.2.2.1
log
@Detail:
  Interface file is now 32-bit compliant.
  Removed files now imported from AsmUtils
Admin:
  Intermediate version.  Do not use.
@
text
@d15 2
a16 1
        SUBT    NFS<->FileSwitch interface code
d18 35
a52 5
        GET   Hdr:ListOpts
        GET   Hdr:Macros
        GET   Hdr:System
        GET   Hdr:Machine.<Machine>
        GET   Hdr:APCS.<APCS>
d54 2
a55 2
        GBLL    ProfileIt
ProfileIt       SETL    {FALSE}
d165 4
a168 9
        ; Mess about with the flag bits in R8
        [ :LNOT: No32bitCode
        ; If we're allowed to use 32-bit code, it all falls out really nicely
        MOVNE   R8, #V_bit              ; R8 == 0 if Z, V set if !Z
        |
        MOV     R8, pc
        BIC     R8, R8, #C_bit + V_bit
        ORRNE   R8, R8, #V_bit          ; V = err != 0
        ]
d170 1
a170 1
        ORREQ   R8, R8, #C_bit
d173 2
a174 6
        [ :LNOT: No32bitCode
        MSR     CPSR_f, r8
        |
        TEQP    R8, #0
        NOP
        ]
@


4.1
log
@Initial revision
@
text
@d174 1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
