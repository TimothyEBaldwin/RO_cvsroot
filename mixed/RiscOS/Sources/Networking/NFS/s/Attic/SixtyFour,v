head	4.2;
access;
symbols
	kbracey_32bit:4.1.0.2
	NFS-3_02:4.1
	NFS-3_01:4.1
	NFS-3_00:4.1;
locks; strict;
comment	@# @;


4.2
date	99.11.29.13.39.40;	author sbrodie;	state dead;
branches;
next	4.1;

4.1
date	99.05.14.12.42.41;	author sbrodie;	state Exp;
branches
	4.1.2.1;
next	;

4.1.2.1
date	99.11.20.17.32.30;	author sbrodie;	state dead;
branches;
next	;


desc
@@


4.2
log
@  32-bit compatibility added.
  Removed obsolete assembler sources
Detail:
  Now imports assembler stuff from AsmUtils.
Admin:
  Built RAM build.
  Requires AsmUtils 0.02 or later.

Version 3.03. Tagged as 'NFS-3_03'
@
text
@; Copyright 1999 Element 14 Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

	AREA	|C$$Code|, CODE, READONLY, PIC

; Long multiplier ----------------------------------------
; Taken from Acorn Assembler manual.
; extern u_int64_t *ui64_multiply_uu(u_int64_t *, unsigned, unsigned);
	EXPORT ui64_multiply_uu

ui64_multiply_uu
	STMFD	sp!, {lr}
	MOVS	lr, a2, LSR #16
	BIC	a2, a2, lr, LSL #16
	MOV	ip, a3, LSR #16
	BIC	a3, a3, ip, LSL #16
	MUL	a4, a2, a3
	MUL	a3, lr, a3
	MUL	a2, ip, a2
	MULNE	lr, ip, lr
	ADDS	a2, a2, a3
	ADDCS	lr, lr, #&10000
	ADDS	a4, a4, a2, LSL #16
	ADC	lr, lr, a2, LSR #16
	STMIA	a1, {a4, lr}
	LDMFD	sp!, {pc}^

; extern u_int64_t *ui64_multiply_u64u64(u_int64_t *res, u_int64_t *a, u_int64_t *b);
	EXPORT ui64_multiply_u64u64

res_lo	RN	v1
res_hi	RN	v2
a_lo	RN	v3
a_hi	RN	v4
b_lo	RN	v5
b_hi	RN	ip
zero    RN      a4
tmp     RN      lr

ui64_multiply_u64u64
	STMFD	sp!, {v1-v5, lr}
	LDMIA	a2, {a_lo, a_hi}
	LDMIA	a3, {b_lo, b_hi}
	MOV     res_lo, #0
	MOV	res_hi, #0
	MOV	zero, #0
10
	MOVS	b_hi, b_hi, LSR #1
	MOVS    b_lo, b_lo, RRX
	BCC	%FT20
	ADDS	res_lo, res_lo, a_lo
	ADC	res_hi, res_hi, a_hi
20
	MOVS	a_lo, a_lo, LSL #1
	ADCS	a_hi, zero, a_hi, LSL #1
	TEQEQ	a_lo, zero
	ORRNES	tmp, b_hi, b_lo
	BNE	%BT10
	STMIA	a1, {res_lo, res_hi}
	LDMFD	sp!, {v1-v5, pc}^

; extern u_int64_t *ui64_subtract_u64u64(u_int64_t *, const u_int64_t *, const u_int64_t *);
	EXPORT ui64_subtract_u64u64
ui64_subtract_u64u64
	LDMIA	a3, {a4, ip}
	LDMIA	a2, {a2, a3}
	SUBS	a2, a2, a4
	SBC	a3, a3, ip
	STMIA	a1, {a2, a3}
	MOVS	pc, lr

; extern u_int64_t *ui64_add_u64u64(u_int64_t *, const u_int64_t *, const u_int64_t *);
	EXPORT ui64_add_u64u64
ui64_add_u64u64
	LDMIA	a3, {a4, ip}
	LDMIA	a2, {a2, a3}
	ADDS	a2, a2, a4
	ADC	a3, a3, ip
	STMIA	a1, {a2, a3}
	MOVS	pc, lr

; extern u_int64_t *ui64_add(u_int64_t *, unsigned long);
	EXPORT	ui64_add
ui64_add
	LDMIA	a1, {a3, a4}
	ADDS	a3, a3, a2
	ADC	a4, a4, #0
	STMIA	a1, {a3, a4}
	MOVS	pc, lr


; extern u_int64_t *ui64_create2(u_int64_t *, unsigned long, unsigned long);
	EXPORT ui64_create2
ui64_create2
	STMIA	a1, {a2, a3}
	MOVS	pc, lr

; extern u_int64_t *ui64_create(u_int64_t *, unsigned long);
	EXPORT	ui64_create
ui64_create
	MOV	a3, #0
	STMIA	a1, {a2, a3}
	MOVS	pc, lr

; extern u_int64_t *ui64_shift_right(u_int64_t *, unsigned);
	EXPORT	ui64_shift_right
ui64_shift_right
	LDMIA	a1, {a3, a4}
	RSB	ip, a2, #32
	MOV	a4, a4, LSR a2
	ORR	a4, a4, a3, LSL ip
	MOV	a3, a3, LSR a2
	STMIA	a1, {a3, a4}
	MOVS	pc, lr

; extern unsigned long ui64_value(const u_int64_t *);
	EXPORT	ui64_value
ui64_value
	LDR	a1, [a1, #0]
	MOVS	pc, lr

        END
@


4.1
log
@  Now supports NFS version 3.
Detail:
  All client-server calls now use the superior NFS3 protocol.
  This particularly benefits directory enumeration and *NFSInfo
    is now reporting 80%+ cache hit rates which is a significant
    improvement (over 5% better - some hosts report 85%+)
  Hashing algorithms improved to increase cache hits (the cache
    algorithm doesn't use parts of names after a comma, so that
    the hash value for !Run is the same as the hash value for
    !Run,feb - which helps the cache hit rate a lot).   Directory
    browsing on the desktop appears noticably faster too.
  The module now has the original protocol (.x) files defining
    the RPC protocols being used (NFS, mount, pcnfs, rquota)
    and uses them to generate header files, XDR implementations,
    and client stubs automatically, instead of having hand
    written versions.
  NFS workspace comes from a dynamic area where possible.
Admin:
  Supporting documentation:
    Acorn NFS Software Functional Specification (1215,250/FS)
    RFC1014, RFC1057, RFC1094, RFC1813
  Tested in several desktop machines for everyday use against
    both NFS2 and NFS3 servers.
  Requires rpcgen 0.01 or later
    (CVS source: Tools/Sources/rpcgen  tag: rpcgen-0_01 or later)
    (CVS binary: RiscOS/Library  tag: Library-0_19 or later)
  Requires TCPIPLibs 5.13 or later
    (CVS: RiscOS/Sources/Lib/TCPIPLibs  tag: TCPIPLibs-5_13)

Version 3.00. Tagged as 'NFS-3_00'
@
text
@@


4.1.2.1
log
@Detail:
  Interface file is now 32-bit compliant.
  Removed files now imported from AsmUtils
Admin:
  Intermediate version.  Do not use.
@
text
@@

