head	4.2;
access;
symbols
	NFS-3_27:4.2
	NFS-3_26:4.2
	NFS-3_25:4.2
	NFS-3_24:4.2
	NFS-3_23:4.2
	NFS-3_22:4.2
	NFS-3_21:4.2
	NFS-3_20:4.2
	NFS-3_19:4.2
	sbrodie_NFS_dev_merge:4.2
	NFS-3_18-4_22_2_4:4.2
	NFS-3_18-4_22_2_3:4.2
	NFS-3_18-4_22_2_2:4.2
	NFS-3_18-4_22_2_1:4.2
	sbrodie_NFS_dev:4.2.0.2
	sbrodie_NFS_dev_bp:4.2
	NFS-3_18:4.2
	NFS-3_17:4.2
	NFS-3_16:4.2
	NFS-3_15:4.2
	NFS-3_14:4.2
	NFS-3_13:4.2
	NFS-3_12:4.2
	NFS-3_11:4.2
	NFS-3_10:4.2
	NFS-3_09:4.2
	NFS-3_08:4.2
	NFS-3_07:4.2
	NFS-3_06:4.2
	NFS-3_05:4.2
	NFS-3_04:4.2
	NFS-3_02:4.2
	NFS-3_01:4.2
	NFS-3_00:4.1;
locks; strict;
comment	@# @;


4.2
date	99.10.13.09.53.59;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	99.05.14.12.42.17;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.2
log
@  Attribute cacheing preload bug fixed.
  Debugging all switched to DebugLib-style.
Detail:
  The attribute cache preloading was failing to take effect because
    the hash value generation was giving the attribute cache preload
    function different answers to those it gave any other functions.
    This has now been fixed.
  Debugging support replaced completely by DebugLib support.
  The automatically generated RPC veneers do not contain any debugging
    (although it could be added by rpcgen - a beta version of rpcgen
    exists that writes DebugLib veneers into the stubs to note all RPC
    calls made via the stubs.  These functions do not, however, unpack
    the parameters and return structures yet.  That would be a massive
    job, requiring changes to all hand-written XDR functions - rpcgen
    could arrange to generate appropriate stuff for anything it writes,
    though)
  Removed obsolete db.c and db.h files.
  TaskObey script added to build the debugging version of the module.
Admin:
  This module has been tested on desktop machines for several months.
    The massive speedup expected from the use of NFS protocol version 3
    is now being noticed on directory operations,

Version 3.01. Tagged as 'NFS-3_01'
@
text
@/* Copyright 1999 Element 14 Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*      C.FH3

Purpose : Support for translating into RO_nfs_fh3 structures to avoid
          memory leakage

History :
Date	   Who    Comments
-----------------------------------------------------------------------------
16/03/1999 SNB    Created
****************************************************************************/

#include <string.h>
#include "Consts.h"
#include "Types.h"

int fh3cmp(const RO_nfs_fh3 *s1, const RO_nfs_fh3 *s2)
{
        size_t larger = s1->fh3.data.data_len;
        if (larger != s2->fh3.data.data_len) return 1;
	return memcmp(s1->fh3.data.data_val, s2->fh3.data.data_val, larger);
}

RO_nfs_fh3 *fh3cpy(RO_nfs_fh3 *s1, const RO_nfs_fh3 *s2)
{
	return fh3cpy_from_xdr(s1, &s2->fh3);
}

RO_nfs_fh3 *fh3cpy_from_xdr(RO_nfs_fh3 *fh, const nfs_fh3 *xdrfh)
{
        fh->fh3.data.data_len = xdrfh->data.data_len;
        fh->fh3.data.data_val = fh->opaque;
        memcpy(fh->opaque, xdrfh->data.data_val, fh->fh3.data.data_len);
        return fh;
}

/* The following need to use nfs_fh3 directly, because downcast.c does
 * not have access to RO_nfs_fh3 structures at its level of working.  The
 * next level up will upcast to RO_nfs_fh3 when necessary.
 */
nfs_fh3 *fh3cpy_from_fhandle(nfs_fh3 *fh, const nfs_fh *nfs2_fh)
{
        fh->data.data_len = NFS_FHSIZE;
        fh->data.data_val = (char *) &nfs2_fh->data[0];
        return fh;
}

nfs_fh *fh2cpy_from_fh3(nfs_fh *fh, const nfs_fh3 *nfs3_fh)
{
        return memcpy(fh, nfs3_fh->data.data_val, NFS_FHSIZE);
}
@


4.1
log
@  Now supports NFS version 3.
Detail:
  All client-server calls now use the superior NFS3 protocol.
  This particularly benefits directory enumeration and *NFSInfo
    is now reporting 80%+ cache hit rates which is a significant
    improvement (over 5% better - some hosts report 85%+)
  Hashing algorithms improved to increase cache hits (the cache
    algorithm doesn't use parts of names after a comma, so that
    the hash value for !Run is the same as the hash value for
    !Run,feb - which helps the cache hit rate a lot).   Directory
    browsing on the desktop appears noticably faster too.
  The module now has the original protocol (.x) files defining
    the RPC protocols being used (NFS, mount, pcnfs, rquota)
    and uses them to generate header files, XDR implementations,
    and client stubs automatically, instead of having hand
    written versions.
  NFS workspace comes from a dynamic area where possible.
Admin:
  Supporting documentation:
    Acorn NFS Software Functional Specification (1215,250/FS)
    RFC1014, RFC1057, RFC1094, RFC1813
  Tested in several desktop machines for everyday use against
    both NFS2 and NFS3 servers.
  Requires rpcgen 0.01 or later
    (CVS source: Tools/Sources/rpcgen  tag: rpcgen-0_01 or later)
    (CVS binary: RiscOS/Library  tag: Library-0_19 or later)
  Requires TCPIPLibs 5.13 or later
    (CVS: RiscOS/Sources/Lib/TCPIPLibs  tag: TCPIPLibs-5_13)

Version 3.00. Tagged as 'NFS-3_00'
@
text
@d32 1
a32 1
        size_t larger =s1->fh3.data.data_len;
d44 2
a45 1
        fh->fh3 = *xdrfh;
a46 1
        fh->fh3.data.data_val = fh->opaque;
@
