head	4.5;
access;
symbols
	NFS-3_27:4.5
	NFS-3_26:4.4
	NFS-3_25:4.4
	NFS-3_24:4.4
	NFS-3_23:4.4
	NFS-3_22:4.3
	NFS-3_21:4.3
	NFS-3_20:4.3
	NFS-3_19:4.3
	sbrodie_NFS_dev_merge:4.3
	NFS-3_18-4_22_2_4:4.3
	NFS-3_18-4_22_2_3:4.3
	NFS-3_18-4_22_2_2:4.3
	NFS-3_18-4_22_2_1:4.3
	sbrodie_NFS_dev:4.3.0.2
	sbrodie_NFS_dev_bp:4.3
	NFS-3_18:4.3
	NFS-3_17:4.3
	NFS-3_16:4.3
	NFS-3_15:4.3
	NFS-3_14:4.3
	NFS-3_13:4.3
	NFS-3_12:4.3
	NFS-3_11:4.3
	NFS-3_10:4.3
	NFS-3_09:4.3
	NFS-3_08:4.3
	NFS-3_07:4.3
	NFS-3_06:4.3
	NFS-3_05:4.3
	NFS-3_04:4.2
	NFS-3_02:4.2
	NFS-3_01:4.2
	NFS-3_00:4.2
	NFS-2_37:4.1
	NFS-2_36:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	NFS-2_35:4.1
	Spin_merge:4.1.7.1
	Spinner_23Sep1998_destend:4.1
	Spinner_23Sep1998_srcend:4.1.7.1
	Spinner_23Sep1998_srcbegin:4.1.7.1
	Spinner_23Sep1998_destbegin:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_13May1998_bp:4.1
	Ursula_13May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	pwombwel_2_32:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.5
date	2018.08.11.15.19.58;	author rsprowson;	state Exp;
branches;
next	4.4;
commitid	PqgMwO4OkSjEpINA;

4.4
date	2018.01.29.21.30.19;	author rsprowson;	state Exp;
branches;
next	4.3;
commitid	7TGUL0NEVVbjHOoA;

4.3
date	99.12.06.15.58.04;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	99.05.14.12.42.10;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	96.11.22.14.49.31;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.22.14.49.31;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.06.56;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.5
log
@Guard against potential NULL pointer read
Commands.c: Adjust logic so strchr() is only called with a valid pointer.
Found by cppcheck static analysis.
_Close.C: Tighten up sloppy check of load address to include exec address.

Version 3.27. Tagged as 'NFS-3_27'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef __NFSNFS_H
#include "nfsheaders.h"
#endif

_kernel_oserror *fsentry_close( FSEntry_Close_Parameter *parm )
{
        _kernel_oserror *err = NULL;
        OpenFile *of = (OpenFile *)parm->handle;
        unused_client *pcnfsd_client;
        char machname[ MAX_MACHINE_NAME+1 ];
        pr_start_args ps_args;
        pr_start_results *ps_res;
        int spooling_access;

        hourglass_on();

#ifdef SHOWCALLS
        printf(
                "_Close( %s, %#010x, %#010x )\n",
                of->nfs_fd.desc.name,
                (int)parm->info.load_exec.load_address,
                (int)parm->info.load_exec.execute_address );
#endif

        /*
                Stamp the file if necessary
        */
        if ( !of->read_only
          && (parm->info.load_exec.execute_address || parm->info.load_exec.load_address) )
        {
                err = change_info_given_file(
                        &of->nfs_fd,
                        (unsigned long *)&parm->info.load_exec.load_address,
                        (unsigned long *)&parm->info.load_exec.execute_address,
                        NULL );
        }

        if ( !err && of->spool_details )
        {
                if ( gethostname( machname, MAX_MACHINE_NAME ) == -1 )
                {
                        err = mb_machname_too_big;
                }

                /*
                        Change access to R/r for the spooler
                */
                if ( !err )
                {
                        spooling_access = FileAccess_OwnerRead | FileAccess_PublicRead;
                        err = change_info_given_file(
                                &of->nfs_fd,
                                NULL,
                                NULL,
                                &spooling_access );
                }

                if ( !err )
                        err = get_pcnfsd_client_for_host( &pcnfsd_client, of->nfs_fd.mp->host, PCNFSDVERS );

                ps_args.system = machname;
                ps_args.pn = of->spool_details->printername;
                ps_args.user = of->spool_details->username;
                ps_args.file = of->nfs_fd.desc.name;
                ps_args.opts = of->spool_details->options;

                if ( !err )
                {
                        ps_res = pcnfsd_pr_start_1( &ps_args, pcnfsd_client->client );
                        err = rpcpcnfsd_ps_to_riscos_err( ps_res, pcnfsd_client->client, of->nfs_fd.mp->mount_point_name );
                        release_client( pcnfsd_client );
                }
        }

        remove_link( &of->link );

        if ( of->spool_details )
        {
                /*
                        Dismount unused spool mount
                */
                if ( of->nfs_fd.mp->open_files.forwards->forwards == NULL )
                {
                        if ( !err )
                        {
                                err = nfs_dismount( of->nfs_fd.mp );
                        }
                        else
                        {
                                (void)nfs_dismount( of->nfs_fd.mp );
                        }
                }

                free( of->spool_details->printername );
                free( of->spool_details->username );
                free( of->spool_details->options );
                free( of->spool_details );
        }

        free( of->nfs_fd.desc.name );
        free( of );

        hourglass_off();

        return err;
}
@


4.4
log
@Export our own SWIs as a header
Use the shared makefiles to export Interface/NFS.h and Hdr:NFS.
Remove local copy NFS.h which confuses the dependency checking, now called nfsheaders.h instead.
Delete unused UID/GID pair.
Tested on a mount from FreeBSD 11.1-RELEASE-p4.

Version 3.23. Tagged as 'NFS-3_23'
@
text
@d44 1
a44 1
          && (parm->info.load_exec.load_address != 0) )
@


4.3
log
@  Now uses PCNFS version 2 to authenticate.
Detail:
  Group-writable directories should now be writable to.
  setgid directories should cause created objects to take on
    the directory group ownership instead of the user's primary
    GIF
  *NFSInfo output enhanced to list all the additional group IDs
    and the default umask being applied to each authentication.
Admin:
  Tested on normal home mount and on TWC mount.

Version 3.05. Tagged as 'NFS-3_05'
@
text
@d17 1
a17 1
#include "NFS.h"
@


4.2
log
@  Now supports NFS version 3.
Detail:
  All client-server calls now use the superior NFS3 protocol.
  This particularly benefits directory enumeration and *NFSInfo
    is now reporting 80%+ cache hit rates which is a significant
    improvement (over 5% better - some hosts report 85%+)
  Hashing algorithms improved to increase cache hits (the cache
    algorithm doesn't use parts of names after a comma, so that
    the hash value for !Run is the same as the hash value for
    !Run,feb - which helps the cache hit rate a lot).   Directory
    browsing on the desktop appears noticably faster too.
  The module now has the original protocol (.x) files defining
    the RPC protocols being used (NFS, mount, pcnfs, rquota)
    and uses them to generate header files, XDR implementations,
    and client stubs automatically, instead of having hand
    written versions.
  NFS workspace comes from a dynamic area where possible.
Admin:
  Supporting documentation:
    Acorn NFS Software Functional Specification (1215,250/FS)
    RFC1014, RFC1057, RFC1094, RFC1813
  Tested in several desktop machines for everyday use against
    both NFS2 and NFS3 servers.
  Requires rpcgen 0.01 or later
    (CVS source: Tools/Sources/rpcgen  tag: rpcgen-0_01 or later)
    (CVS binary: RiscOS/Library  tag: Library-0_19 or later)
  Requires TCPIPLibs 5.13 or later
    (CVS: RiscOS/Sources/Lib/TCPIPLibs  tag: TCPIPLibs-5_13)

Version 3.00. Tagged as 'NFS-3_00'
@
text
@d74 1
a74 1
                        err = get_pcnfsd_client_for_host( &pcnfsd_client, of->nfs_fd.mp->host );
@


4.1
log
@Initial revision
@
text
@d48 2
a49 2
                        (int *)&parm->info.load_exec.load_address,
                        (int *)&parm->info.load_exec.execute_address,
d76 5
a80 5
                ps_args.psa_client = machname;
                ps_args.psa_printername = of->spool_details->printername;
                ps_args.psa_username = of->spool_details->username;
                ps_args.psa_filename = of->nfs_fd.desc.name;
                ps_args.psa_options = of->spool_details->options;
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
