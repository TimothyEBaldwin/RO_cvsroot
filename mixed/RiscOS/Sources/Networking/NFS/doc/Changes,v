head	4.1;
access;
symbols
	NFS-3_27:4.1
	NFS-3_26:4.1
	NFS-3_25:4.1
	NFS-3_24:4.1
	NFS-3_23:4.1
	NFS-3_22:4.1
	NFS-3_21:4.1
	NFS-3_20:4.1
	NFS-3_19:4.1
	sbrodie_NFS_dev_merge:4.1
	NFS-3_18-4_22_2_4:4.1
	NFS-3_18-4_22_2_3:4.1
	NFS-3_18-4_22_2_2:4.1
	NFS-3_18-4_22_2_1:4.1
	sbrodie_NFS_dev:4.1.0.12
	sbrodie_NFS_dev_bp:4.1
	NFS-3_18:4.1
	NFS-3_17:4.1
	NFS-3_16:4.1
	NFS-3_15:4.1
	NFS-3_14:4.1
	NFS-3_13:4.1
	NFS-3_12:4.1
	NFS-3_11:4.1
	NFS-3_10:4.1
	NFS-3_09:4.1
	NFS-3_08:4.1
	NFS-3_07:4.1
	NFS-3_06:4.1
	NFS-3_05:4.1
	NFS-3_04:4.1
	NFS-3_02:4.1
	NFS-3_01:4.1
	NFS-3_00:4.1
	NFS-2_37:4.1
	NFS-2_36:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.10
	NFS-2_35:4.1
	Spin_merge:4.1.7.1
	Spinner_23Sep1998_destend:4.1
	Spinner_23Sep1998_srcend:4.1.7.1
	Spinner_23Sep1998_srcbegin:4.1.7.1
	Spinner_23Sep1998_destbegin:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	Ursula_bp:4.1
	Ursula:4.1.0.8
	Ursula_13May1998_bp:4.1
	Ursula_13May1998:4.1.0.4
	rthornb_UrsulaBuild_01May1998:4.1
	pwombwel_2_32:4.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Spinner_B7:4.1.7.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	MergeFiles:4.1.7.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1;
locks; strict;
comment	@# @;


4.1
date	96.11.22.14.49.33;	author nturton;	state Exp;
branches
	4.1.5.1
	4.1.7.1;
next	;

4.1.5.1
date	96.11.22.14.49.33;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.07.06;	author nturton;	state Exp;
branches;
next	;


desc
@@



4.1
log
@Initial revision
@
text
@RISC OS NFS 2.27
================

2.26 broke unpreserved filename extensions. Now fixed!
Now issues Service_DiscDismounted when a dismount occurs.


RISC OS NFS 2.26
================

Merging of main NFS tree with Online Media's NFSSTB - see below

*NFSBoot now returns an error if !NFSBoot cannot be found.

Removed unnecessary XOS_Bits from various places

Fixed preserved filename extensions. (ie it is now possible to have
a file fred.html on an NFS fileserver presented to RISC OS as
fred/html with filetype &FAF, and RISC OS files called jim/html
with filetype &FAF will map back to jim.html on the server. This
behaviour has always been documented, and always been broken, as
far as I can tell).

NFS->RISC OS filename conversion now strips out nasty characters
(replaces them with _).

Timeout configurable via *Timeout and NFS$Timeout.

Cache size configurable via *CacheSize and NFS$CacheSize. Default
cache size upped to 53 entries.

RISC OS 2 compatibility removed:

*Back, *Bye, *NoDir, *NoLib, *NoURD, *URD commands removed.
Various defunct FSEntry_Func calls removed.
Now relies on FileSwitch to track current directory, etc.
Relies on FileSwitch to canonicalise filenames.
*TimeOffset removed - irrelevant as RISC OS 3 now works in UTC.
Routines to do *Cat, *Ex, *FileInfo removed (never called under RISC OS 3).

Some of NFS's behaviour (unsetting CSD if on a dismounted mount) was
broken by RISC OS 3. Such behaviour, where applicable, has been
reimplemented using the new FileSwitch calls.

Image filing systems now operate correctly on NFS (it was not returning
the necessary error codes).

Caselessness now internationalised.

Errors now reported directly from Internet module where possible
(=> slightly improved internationalisation, but less meaningful errors
if used with Internet 2.xx).

Various memory savings mean approx 20K less memory used than NFS 2.11

*CacheTime now reports the current time if issued with no parameters
(it used to set the expiry time to 0!).

*NFSInfo no longer reports CSD etc (these have never been meaningful
with RISC OS 3).

Help text improved, and case of * Commands sorted out.

To do: Full file system bashing - in particular check all post-RISC OS 2
       OS_FSControls.
       Full internationalisation of error messages and displays.
       Check cache resizing.
       Do we want to build with NFSSTB's network access counter?
       
       
STBNFS version 1.03
-------------------
Changed module title string to NFSSTB.

Re-enabled case-insensitivity code.  Porting current applications to be case
sensitive is proving to be difficult, since many problems lie in absolute
files.  Therefore, for now the NFS will be case-tolerant (with the network
traffic overhead incurred by incorrect names).  However, all future
applications for the trial should assume case-sensitivity.

STBNFS version 1.02
-------------------
If the extensions file cannot be opened for any reason, STBNFS no longer
reports an error.  It copes with the situation. (see extensions.c).


STBNFS version 1.01
-------------------
'Oops, file no longer exists but I don't care' Bug fixed.

A check is now made in nfsrw_readmany(...) (well, schedule(...), actually) to
check if NFS return value is valid (ie. NFS_OK).  Previously, only a check on
the RPC return value was being made.  The RPC could be successful, but not
the NFS call...


STBNFS version 1.00 
-------------------
Overview of changes from v2.11 NFS code

Removed case tolerance code.

If you don't get a filename exactly right, it isn't recognised any more. 
This is because the searching for a 'nearly matching' name does not use the
cache, and requires complete searches of the directory across NFS every time
it is used (even in a pathname !).  This does not affect desktop operation,
since it uses NFS-supplied (ie case-correct) filenames.  It may cause errors
with CLI commands, though.

Using the correct case gives an enormous improvement in network traffic
because of this (a factor of 10 improvement...).  This is also true for 
v2.11.

Changed the way that directory listing requests are handled. 

If the request from FileSwitch wants to start from the beginning of a
directory, then the directory data is reloaded across the network.  If the
request is for entries beyond the beginning of a directory (for example,
subsequent _Func 15 calls), then an attempt is made to use the data already
resident in the RPC buffer.  This gives a 10% (roughly) further improvement
in network traffic when navigating directory structures.

Increased size of cache

The cache now has 50 entries, and has pushed the cache hit rate up from
around 70% to nearer 75% in average use.

For systems with large numbers of entries on directory branches (ie. > 50),
it would be advantageous to extend this further.  There may be a case to make
this user-defineable ?  (GUI front end for fine-tuning perhaps ?).

CP
22/2/95

NFS version 2.23
----------------
Overview of changes from v2.22 code

Added the ability to boot from NFS as the configured filesystem, for Om 
set-top box use.

The effective sequence of operations is

    mount -host <Inet$BootServer> nfsboot <Inet$MountPath>
    run nfs::nfsboot.$.!NFSBoot

If Inet$BootServer is not set then the boot sequence is aborted.
If Inet$MountPath is not set then the default"/nfsboot" is tried.

KSR
23/2/95
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@
