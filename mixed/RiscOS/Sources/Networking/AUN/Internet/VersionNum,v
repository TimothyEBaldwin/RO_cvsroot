head	4.56;
access;
symbols
	Internet-5_65:4.56
	Internet-5_64:4.55
	Internet-5_63:4.54
	Internet-5_62:4.53
	Internet-5_61:4.52
	Internet-5_60:4.51
	Internet-5_59:4.50
	Internet-5_58:4.49
	Internet-5_57:4.48
	Internet-5_56:4.47
	Internet-5_55:4.46
	Internet-5_54:4.45
	Internet-5_53:4.44
	Internet-5_52:4.43
	Internet-5_51:4.42
	Internet-5_50:4.41
	RO_5_07:4.40
	Internet-5_49:4.40
	Internet-5_48:4.39
	Internet-5_47:4.38
	Internet-5_46:4.37
	Internet-5_45:4.36
	Internet-5_44:4.34
	Internet-5_43:4.33
	Internet-5_42:4.32
	Internet-5_41:4.31
	Internet-5_40:4.30
	Internet-5_39:4.29
	Internet-5_38:4.28
	Internet-5_37:4.27
	Internet-5_36:4.26
	Internet-5_35:4.25
	Internet-5_34:4.24
	Internet-5_33:4.23
	Internet-5_32:4.22
	Internet-5_31:4.21
	Internet-5_30:4.20
	Internet-5_29:4.19
	Internet-5_27:4.18
	Internet-5_26:4.17
	Internet-5_25:4.16
	Internet-5_24:4.15
	Internet-5_23:4.14
	Internet-5_22:4.13
	Internet-5_21:4.12
	Internet-5_20:4.11
	Internet-5_19:4.10
	Internet-5_18:4.9
	Internet-5_17:4.8
	Internet-5_16:4.7
	Internet-5_15:4.6
	Internet-5_14:4.5
	Internet-5_13:4.4
	Internet-5_12:4.3
	Internet-5_11:4.2;
locks; strict;
comment	@# @;


4.56
date	2018.09.15.15.59.50;	author rsprowson;	state Exp;
branches;
next	4.55;
commitid	OWW4LiTujwQzvdSA;

4.55
date	2018.04.28.09.24.40;	author rool;	state Exp;
branches;
next	4.54;
commitid	aNg1jDrc1Dm1PbAA;

4.54
date	2018.01.06.21.44.15;	author jlee;	state Exp;
branches;
next	4.53;
commitid	EZkgEPf3bTXWvRlA;

4.53
date	2017.06.07.20.36.34;	author rsprowson;	state Exp;
branches;
next	4.52;
commitid	xgif914dBX0dZtUz;

4.52
date	2015.06.17.22.13.42;	author rsprowson;	state Exp;
branches;
next	4.51;
commitid	BrpcmgDoEfJnHPpy;

4.51
date	2015.01.04.10.35.40;	author rsprowson;	state Exp;
branches;
next	4.50;
commitid	IoIXaBIux4YM6H4y;

4.50
date	2013.11.20.21.59.03;	author rsprowson;	state Exp;
branches;
next	4.49;
commitid	XW8tvC0YFL9k44ex;

4.49
date	2013.09.29.08.22.33;	author rsprowson;	state Exp;
branches;
next	4.48;
commitid	NEUcUdhWgmAQdj7x;

4.48
date	2012.08.26.19.53.14;	author jlee;	state Exp;
branches;
next	4.47;
commitid	WbuxJGoZAqKXR5iw;

4.47
date	2012.05.18.19.47.35;	author rsprowson;	state Exp;
branches;
next	4.46;
commitid	BtYbu9tZVKZi3f5w;

4.46
date	2012.05.10.07.30.24;	author rsprowson;	state Exp;
branches;
next	4.45;
commitid	lytr3Y0VnjYle94w;

4.45
date	2012.01.14.23.08.56;	author srevill;	state Exp;
branches;
next	4.44;
commitid	btQ2MSzuqHfvbcPv;

4.44
date	2011.12.15.22.19.55;	author rsprowson;	state Exp;
branches;
next	4.43;
commitid	TVCPLXal0LzsSkLv;

4.43
date	2008.12.22.02.15.36;	author bavison;	state Exp;
branches;
next	4.42;

4.42
date	2007.02.24.22.10.45;	author jballance;	state Exp;
branches;
next	4.41;

4.41
date	2005.02.18.12.51.24;	author kbracey;	state Exp;
branches;
next	4.40;

4.40
date	2004.08.05.11.29.07;	author kbracey;	state Exp;
branches;
next	4.39;

4.39
date	2004.07.22.17.25.02;	author kbracey;	state Exp;
branches;
next	4.38;

4.38
date	2004.07.02.15.12.46;	author bavison;	state Exp;
branches;
next	4.37;

4.37
date	2003.11.13.18.02.10;	author bavison;	state Exp;
branches;
next	4.36;

4.36
date	2001.09.06.14.19.38;	author kbracey;	state Exp;
branches;
next	4.35;

4.35
date	2000.08.07.10.44.33;	author srevill;	state Exp;
branches;
next	4.34;

4.34
date	2000.07.13.10.39.41;	author ahodgkin;	state Exp;
branches;
next	4.33;

4.33
date	2000.07.05.14.48.26;	author kbracey;	state Exp;
branches;
next	4.32;

4.32
date	2000.06.27.15.00.50;	author sbrodie;	state Exp;
branches;
next	4.31;

4.31
date	2000.05.12.11.49.02;	author kbracey;	state Exp;
branches;
next	4.30;

4.30
date	2000.03.06.16.48.03;	author kbracey;	state Exp;
branches;
next	4.29;

4.29
date	2000.02.22.11.01.52;	author kbracey;	state Exp;
branches;
next	4.28;

4.28
date	99.11.11.15.18.57;	author kbracey;	state Exp;
branches;
next	4.27;

4.27
date	99.10.14.14.42.43;	author kbracey;	state Exp;
branches;
next	4.26;

4.26
date	99.08.27.17.02.38;	author kbracey;	state Exp;
branches;
next	4.25;

4.25
date	99.08.10.15.06.08;	author sbrodie;	state Exp;
branches;
next	4.24;

4.24
date	99.07.28.12.00.02;	author kbracey;	state Exp;
branches;
next	4.23;

4.23
date	99.07.22.08.37.13;	author kbracey;	state Exp;
branches;
next	4.22;

4.22
date	99.07.21.10.47.15;	author kbracey;	state Exp;
branches;
next	4.21;

4.21
date	99.07.13.11.12.29;	author kbracey;	state Exp;
branches;
next	4.20;

4.20
date	99.07.08.16.36.51;	author kbracey;	state Exp;
branches;
next	4.19;

4.19
date	99.07.08.15.25.23;	author kbracey;	state Exp;
branches;
next	4.18;

4.18
date	99.06.30.13.15.25;	author kbracey;	state Exp;
branches;
next	4.17;

4.17
date	99.06.25.13.40.07;	author kbracey;	state Exp;
branches;
next	4.16;

4.16
date	99.06.23.13.10.25;	author sbrodie;	state Exp;
branches;
next	4.15;

4.15
date	99.06.23.11.57.58;	author kbracey;	state Exp;
branches;
next	4.14;

4.14
date	99.06.07.10.47.50;	author kbracey;	state Exp;
branches;
next	4.13;

4.13
date	99.06.03.12.38.00;	author sbrodie;	state Exp;
branches;
next	4.12;

4.12
date	99.03.30.12.10.25;	author sbrodie;	state Exp;
branches;
next	4.11;

4.11
date	99.03.25.14.45.29;	author sbrodie;	state Exp;
branches;
next	4.10;

4.10
date	99.02.12.14.57.12;	author sbrodie;	state Exp;
branches;
next	4.9;

4.9
date	98.11.28.20.43.04;	author celkins;	state Exp;
branches;
next	4.8;

4.8
date	98.11.27.14.48.58;	author kbracey;	state Exp;
branches;
next	4.7;

4.7
date	98.11.27.05.07.22;	author celkins;	state Exp;
branches;
next	4.6;

4.6
date	98.11.13.13.03.40;	author celkins;	state Exp;
branches;
next	4.5;

4.5
date	98.11.04.21.05.49;	author celkins;	state Exp;
branches;
next	4.4;

4.4
date	98.10.30.18.22.48;	author celkins;	state Exp;
branches;
next	4.3;

4.3
date	98.10.22.14.26.13;	author sbrodie;	state Exp;
branches;
next	4.2;

4.2
date	98.10.05.14.25.40;	author sbrodie;	state Exp;
branches;
next	4.1;

4.1
date	98.10.05.14.08.45;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


4.56
log
@Fix to SO_SNDTIMEO and SO_RCVTIMEO options being ignored
The TCPIPLibs library docs remind us that a socket can be modified via setsockopt() to have a non-default timeout for receive (SO_RCVTIMEO) and send (SO_SNDTIMEO) operations, however neither of these options were honoured if set. Instead, a default timeout of ~60s was given.
This is because although the Internet module stores and propagates (via sbwait()) the timeouts correctly, the underlying tsleep() function is non compliant: it makes no distinction between returning due to a timeout and returning due to being awoken by an event. See
  https://www.freebsd.org/cgi/man.cgi?query=tsleep&sektion=9&manpath=FreeBSD+4.4-RELEASE

for details.

lib/unixenv.c: differentiate between timing out and being awoken, and return EWOULDBLOCK for timeouts.

Aside: select() worked because when tsleep() returned with 0 for a timeout this caused a retry attempt, and the retry loop happens to include its own timer compare, causing select() to return. Now that tsleep() returns EWOULDBLOCK in a timeout situation no retry occurs and the function returns directly.

Tested with a deliberately timing out receive operation, see TCPIPLibs/test/timeo.c
Tested on RISC OS and FreeBSD 11.1-RELEASE-p4 with both an unset timeout (~60s) and 10s timeout, both behave identically in terms of return value and setting errno appropriately.

Version 5.65. Tagged as 'Internet-5_65'
@
text
@/* (5.65)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        5.65
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                15 Sep 2018

#define Module_MajorVersion             "5.65"
#define Module_Version                  565
#define Module_MinorVersion             ""
#define Module_Date                     "15 Sep 2018"

#define Module_ApplicationDate          "15-Sep-18"

#define Module_ComponentName            "Internet"
#define Module_ComponentPath            "mixed/RiscOS/Sources/Networking/AUN/Internet"

#define Module_FullVersion              "5.65"
#define Module_HelpVersion              "5.65 (15 Sep 2018)"
#define Module_LibraryVersionInfo       "5:65"
@


4.55
log
@Strip out insecure T/TCP support
Detail:
  RFC6247 moved T/TCP to historic status due to security concerns, this change actively removes the code (where previously we disabled it through sysctl).

  tcp_subr.c: remove T/TCP support (per FreeBSD revision 137139).
  tcp_input.c: remove T/TCP support (per FreeBSD revision 137139).
  tcp_usrreq.c: remove T/TCP support (per FreeBSD revision 137139).
  tcp_output.c: remove T/TCP support (per FreeBSD revision 137139).
Admin:
  Requires TCPIPLibs-5_64.
  Submission for TCP/IP bounty.

Version 5.64. Tagged as 'Internet-5_64'
@
text
@d1 1
a1 1
/* (5.64)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.64
d9 1
a9 1
#define Module_Date_CMHG                28 Apr 2018
d11 2
a12 2
#define Module_MajorVersion             "5.64"
#define Module_Version                  564
d14 1
a14 1
#define Module_Date                     "28 Apr 2018"
d16 1
a16 1
#define Module_ApplicationDate          "28-Apr-18"
d21 3
a23 3
#define Module_FullVersion              "5.64"
#define Module_HelpVersion              "5.64 (28 Apr 2018)"
#define Module_LibraryVersionInfo       "5:64"
@


4.54
log
@Remove Service_PreReset handler
Detail:
  build/cmhg/InetHdr, riscos/c/module - Internet's PreReset handler leaves the module in a dangerous state; if another module attempts to access a previously-valid socket after Internet has completed its PreReset (or even during it, since the code explicitly triggers callbacks) then it will typically result in a crash due to the mbuf session having been closed.
  Since Internet isn't a hardware driver, it shouldn't need to do anything for Service_PreReset, so let's just remove the handler and leave the NIC drivers to deal with any reset handling (which they already appear to do correctly)
  Also, change InetHdr to use service call number #defines instead of magic numbers.
Admin:
  Tested on Iyonix, iMx6
  Fixes crashes seen on shutdown/reset when software is using sockets from callbacks (e.g. if a VNC server is running)


Version 5.63. Tagged as 'Internet-5_63'
@
text
@d1 1
a1 1
/* (5.63)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.63
d9 1
a9 1
#define Module_Date_CMHG                06 Jan 2018
d11 2
a12 2
#define Module_MajorVersion             "5.63"
#define Module_Version                  563
d14 1
a14 1
#define Module_Date                     "06 Jan 2018"
d16 1
a16 1
#define Module_ApplicationDate          "06-Jan-18"
d21 3
a23 3
#define Module_FullVersion              "5.63"
#define Module_HelpVersion              "5.63 (06 Jan 2018)"
#define Module_LibraryVersionInfo       "5:63"
@


4.53
log
@Get Internet event numbers from Hdr:RISCOS and a microoptimisation
unixenv.c/whoami.c: don't define event numbers locally, use headers.
tick_entry.s: if available use the REV instruction for htonl().

Requires Kernel-5_81 for event numbers.

Version 5.62. Tagged as 'Internet-5_62'
@
text
@d1 1
a1 1
/* (5.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.62
d9 1
a9 1
#define Module_Date_CMHG                07 Jun 2017
d11 2
a12 2
#define Module_MajorVersion             "5.62"
#define Module_Version                  562
d14 1
a14 1
#define Module_Date                     "07 Jun 2017"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jun-17"
d21 3
a23 3
#define Module_FullVersion              "5.62"
#define Module_HelpVersion              "5.62 (07 Jun 2017)"
#define Module_LibraryVersionInfo       "5:62"
@


4.52
log
@Have Internet look after its own messages
Remove faulty logic for Service_MessageFileClosed, MessageTrans reopens the file, so no need to do it again locally.
Usual register/deregister/reregister code for ResourceFS.
Sort the SWI veneers into order, add veneers for ResourceFS in the RAM case.

Version 5.61. Tagged as 'Internet-5_61'
@
text
@d1 1
a1 1
/* (5.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.61
d9 1
a9 1
#define Module_Date_CMHG                17 Jun 2015
d11 2
a12 2
#define Module_MajorVersion             "5.61"
#define Module_Version                  561
d14 1
a14 1
#define Module_Date                     "17 Jun 2015"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jun-15"
d21 3
a23 3
#define Module_FullVersion              "5.61"
#define Module_HelpVersion              "5.61 (17 Jun 2015)"
#define Module_LibraryVersionInfo       "5:61"
@


4.51
log
@Fixes to InetGateway InetInfo InetDebug CLI handling
With CMHG 5.43 and later the 'help:' keyword actually does something useful, in that it is possible to distinguish between the command being run and help on that command. The Internet module made various assumptions about CMHG command numbers (not including the autogenerated header) which are no longer true as the help keyword renumbers the command numbers that the command handler receives.
cmhg/InetHdr:
Ammend the syntax string to match other OS commands. Remove the comment on yucky CMHG messing as that's no longer required.
riscos/module.c:
Use the CMHG generated header, correcting function prototypes where needed - this exposed a sin where the Internet module wrote into the user's command buffer when it should not (eg. if the command originated in a read only memory region).
Simplify the despatch to a switch/case statement.
Simplify all the command decoding by using OS_ReadArgs.
Constify lookup_tag().
Delete OLDMBUFSTATS from pre MbufManager era.
Internationalised the strings in *InetInfo.
Fix bug where "NoIf" was printed when no interfaces exist - should have been looked up in the messages file.

Tested briefly in an OMAP4 ROM build. Requires a few more messages in the messages file.

Version 5.60. Tagged as 'Internet-5_60'
@
text
@d1 1
a1 1
/* (5.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.60
d9 1
a9 1
#define Module_Date_CMHG                04 Jan 2015
d11 2
a12 2
#define Module_MajorVersion             "5.60"
#define Module_Version                  560
d14 1
a14 1
#define Module_Date                     "04 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jan-15"
d21 3
a23 3
#define Module_FullVersion              "5.60"
#define Module_HelpVersion              "5.60 (04 Jan 2015)"
#define Module_LibraryVersionInfo       "5:60"
@


4.50
log
@Don't send an Acorn private option with a DHCP request
Per RFC3942 the public range of DHCP option numbers has been extended to reassign previously private option 164.
While renumbering into the new site specific range (224-254) was an option, it's also defined that site specific options shouldn't be baked into products, hence support for Inet$PrivateData has been removed.

Version 5.59. Tagged as 'Internet-5_59'
@
text
@d1 1
a1 1
/* (5.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.59
d9 1
a9 1
#define Module_Date_CMHG                20 Nov 2013
d11 2
a12 2
#define Module_MajorVersion             "5.59"
#define Module_Version                  559
d14 1
a14 1
#define Module_Date                     "20 Nov 2013"
d16 1
a16 1
#define Module_ApplicationDate          "20-Nov-13"
d21 3
a23 3
#define Module_FullVersion              "5.59"
#define Module_HelpVersion              "5.59 (20 Nov 2013)"
#define Module_LibraryVersionInfo       "5:59"
@


4.49
log
@Correction to swiveneers for {CONFIG}=26
The LDMRet macro had an extra comma before the circumflex, but since these are also defined as macros in the APCS headers, change to using those instead.
Tested on a Risc PC with RISC OS 4.02 in {CONFIG}=26.

Version 5.58. Tagged as 'Internet-5_58'
@
text
@d1 1
a1 1
/* (5.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.58
d9 1
a9 1
#define Module_Date_CMHG                29 Sep 2013
d11 2
a12 2
#define Module_MajorVersion             "5.58"
#define Module_Version                  558
d14 1
a14 1
#define Module_Date                     "29 Sep 2013"
d16 1
a16 1
#define Module_ApplicationDate          "29-Sep-13"
d21 3
a23 3
#define Module_FullVersion              "5.58"
#define Module_HelpVersion              "5.58 (29 Sep 2013)"
#define Module_LibraryVersionInfo       "5:58"
@


4.48
log
@Fix routes not being cleaned up properly when an interface changes its address
Detail:
  This is the Internet-side part of the fix, incorporating the following changes from FreeBSD:
  net/c/route - http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/net/route.c.diff?r1=1.59.2.1;r2=1.59.2.2;f=h
  netinet/c/in - http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/netinet/in.c.diff?r1=1.44.2.2;r2=1.44.2.3;f=h
  netinet/c/in_rmx - http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/netinet/in_rmx.c.diff?r1=1.37;r2=1.37.2.1;f=h
  netinet/c/raw_ip - http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/netinet/raw_ip.c.diff?r1=1.64.2.4;r2=1.64.2.5;f=h
  net/c/if - http://www.freebsd.org/cgi/cvsweb.cgi/src/sys/net/if.c.diff?r1=1.43;r2=1.44;f=h
  This provides us with the fix for this bug:
  http://www.freebsd.org/cgi/query-pr.cgi?pr=20785
  Other required changes:
  netiniet/c/in_proto - Hooked up rip_ctlinput to appropriate handlers
  Also fixed build/Makefile to count the module as a dependency for rom_link phase
Admin:
  Tested on Raspberry Pi
  Requires TCPIPLibs-5_56
  Fixes issue reported on forums with ShareFS not always working:
  http://www.riscosopen.org/forum/forums/5/topics/1193


Version 5.57. Tagged as 'Internet-5_57'
@
text
@d1 1
a1 1
/* (5.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.57
d9 1
a9 1
#define Module_Date_CMHG                26 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "5.57"
#define Module_Version                  557
d14 1
a14 1
#define Module_Date                     "26 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "26-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "5.57"
#define Module_HelpVersion              "5.57 (26 Aug 2012)"
#define Module_LibraryVersionInfo       "5:57"
@


4.47
log
@Update to work with TCPIPLibs-5_55.
Also fix a warning from the compiler about m_copyback.

Version 5.56. Tagged as 'Internet-5_56'
@
text
@d1 1
a1 1
/* (5.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.56
d9 1
a9 1
#define Module_Date_CMHG                18 May 2012
d11 2
a12 2
#define Module_MajorVersion             "5.56"
#define Module_Version                  556
d14 1
a14 1
#define Module_Date                     "18 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-May-12"
d21 3
a23 3
#define Module_FullVersion              "5.56"
#define Module_HelpVersion              "5.56 (18 May 2012)"
#define Module_LibraryVersionInfo       "5:56"
@


4.46
log
@Build fix to work with TCPIPLibs-5_54.

Version 5.55. Tagged as 'Internet-5_55'
@
text
@d1 1
a1 1
/* (5.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.55
d9 1
a9 1
#define Module_Date_CMHG                10 May 2012
d11 2
a12 2
#define Module_MajorVersion             "5.55"
#define Module_Version                  555
d14 1
a14 1
#define Module_Date                     "10 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-May-12"
d21 3
a23 3
#define Module_FullVersion              "5.55"
#define Module_HelpVersion              "5.55 (10 May 2012)"
#define Module_LibraryVersionInfo       "5:55"
@


4.45
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 5.54. Tagged as 'Internet-5_54'
@
text
@d1 1
a1 1
/* (5.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.54
d9 1
a9 1
#define Module_Date_CMHG                14 Jan 2012
d11 2
a12 2
#define Module_MajorVersion             "5.54"
#define Module_Version                  554
d14 1
a14 1
#define Module_Date                     "14 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jan-12"
d21 3
a23 3
#define Module_FullVersion              "5.54"
#define Module_HelpVersion              "5.54 (14 Jan 2012)"
#define Module_LibraryVersionInfo       "5:54"
@


4.44
log
@Delete local user_mode_donothing() and replace with usermode_donothing() from AsmUtils.
Makefilse uses ModuleLibs too.
Lots of STM/LDM replaced with Push and Pull macros.
Local definitions in 'swiveneers' replaced with header files.

Version 5.53. Tagged as 'Internet-5_53'
@
text
@d1 1
a1 1
/* (5.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.53
d9 1
a9 1
#define Module_Date_CMHG                15 Dec 2011
d11 2
a12 2
#define Module_MajorVersion             "5.53"
#define Module_Version                  553
d14 1
a14 1
#define Module_Date                     "15 Dec 2011"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-11"
d21 3
a23 3
#define Module_FullVersion              "5.53"
#define Module_HelpVersion              "5.53 (15 Dec 2011)"
#define Module_LibraryVersionInfo       "5:53"
@


4.43
log
@  HALised microtime()
Detail:
  microtime(), which reads the current time into a struct timeval (seconds
  and microseconds) looked for an IOMD, and if not then dropped back to
  centisecond accuracy. This hadn't been noticed before, but upon trying the
  module on a 32-bit IOMD build, its attempt to access IOMD at its 26-bit
  address aborted. Now changed to use the HAL if possible, so all HAL machines
  now have a nice accurate microtime().
Admin:
  Tested to the extent that it doesn't abort any more - precise checking of
  microtime() values has not been done, nor any analysis of the effect of
  the increased accuracy.

Version 5.52. Tagged as 'Internet-5_52'
@
text
@d1 1
a1 1
/* (5.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.52
d9 1
a9 1
#define Module_Date_CMHG                22 Dec 2008
d11 2
a12 2
#define Module_MajorVersion             "5.52"
#define Module_Version                  552
d14 1
a14 1
#define Module_Date                     "22 Dec 2008"
d16 1
a16 1
#define Module_ApplicationDate          "22-Dec-08"
d21 3
a23 3
#define Module_FullVersion              "5.52"
#define Module_HelpVersion              "5.52 (22 Dec 2008)"
#define Module_LibraryVersionInfo       "5:52"
@


4.42
log
@	removed a possible null pointer effect at route.c rtfree() start
Detail:
	if attempting to rtfree() a null rt pointer the null pointer was used to get
	initialisation for a register array before aborting. now it is only
	used if non null
Admin:


Version 5.51. Tagged as 'Internet-5_51'
@
text
@d1 1
a1 1
/* (5.51)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.51
d9 1
a9 1
#define Module_Date_CMHG                24 Feb 2007
d11 2
a12 2
#define Module_MajorVersion             "5.51"
#define Module_Version                  551
d14 1
a14 1
#define Module_Date                     "24 Feb 2007"
d16 1
a16 1
#define Module_ApplicationDate          "24-Feb-07"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Networking/AUN/Internet"
d21 3
a23 3
#define Module_FullVersion              "5.51"
#define Module_HelpVersion              "5.51 (24 Feb 2007)"
#define Module_LibraryVersionInfo       "5:51"
@


4.41
log
@Fixed some dodgy unaligned pointer casting which invokes undefined behaviour;
the old code no longer has the expected behaviour with cc 5.58, so older
versions of the module don't work unless compiled with cc 5.57 or earlier.

Version 5.50. Tagged as 'Internet-5_50'
@
text
@d1 1
a1 1
/* (5.50)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.50
d9 1
a9 1
#define Module_Date_CMHG                18 Feb 2005
d11 2
a12 2
#define Module_MajorVersion             "5.50"
#define Module_Version                  550
d14 1
a14 1
#define Module_Date                     "18 Feb 2005"
d16 1
a16 1
#define Module_ApplicationDate          "18-Feb-05"
d21 3
a23 3
#define Module_FullVersion              "5.50"
#define Module_HelpVersion              "5.50 (18 Feb 2005)"
#define Module_LibraryVersionInfo       "5:50"
@


4.40
log
@IFF_NEED_IPADDR flag now cleared whenever a BOOTP/DHCP response is processed;
previously this only happened if the address was set. This ensures correct
behaviour following the first DHCPREQUEST in the REBOOTING state, where the
address isn't changed.

Version 5.49. Tagged as 'Internet-5_49'
@
text
@d1 1
a1 1
/* (5.49)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.49
d9 1
a9 1
#define Module_Date_CMHG                05 Aug 2004
d11 2
a12 2
#define Module_MajorVersion             "5.49"
#define Module_Version                  549
d14 1
a14 1
#define Module_Date                     "05 Aug 2004"
d16 1
a16 1
#define Module_ApplicationDate          "05-Aug-04"
d21 3
a23 3
#define Module_FullVersion              "5.49"
#define Module_HelpVersion              "5.49 (05 Aug 2004)"
#define Module_LibraryVersionInfo       "5:49"
@


4.39
log
@DHCP packets sent out through ioctl(SIOCGWHOIAMD) had their source address
in the IP header reversed - this was visible for packets the DHCP client
sent out in the REBINDING state.

Version 5.48. Tagged as 'Internet-5_48'
@
text
@d1 1
a1 1
/* (5.48)
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.48
d9 1
a9 1
#define Module_Date_CMHG                22 Jul 2004
d11 2
a12 2
#define Module_MajorVersion             "5.48"
#define Module_Version                  548
d14 1
a14 1
#define Module_Date                     "22 Jul 2004"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jul-04"
d21 3
a23 3
#define Module_FullVersion              "5.48"
#define Module_HelpVersion              "5.48 (22 Jul 2004)"
#define Module_LibraryVersionInfo       "5:48"
@


4.38
log
@A small amount of ANSIisation, to satisfy modern compilers.

Version 5.47. Tagged as 'Internet-5_47'
@
text
@d1 1
a1 1
/* (5.47)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.47
d9 1
a9 1
#define Module_Date_CMHG                02 Jul 2004
d11 2
a12 2
#define Module_MajorVersion             "5.47"
#define Module_Version                  547
d14 1
a14 1
#define Module_Date                     "02 Jul 2004"
d16 1
a16 1
#define Module_ApplicationDate          "02-Jul-04"
d21 3
a23 3
#define Module_FullVersion              "5.47"
#define Module_HelpVersion              "5.47 (02 Jul 2004)"
#define Module_LibraryVersionInfo       "5:47"
@


4.37
log
@Commit of two years' worth of changes.
Upped version number, because it's about time it was.

Version 5.46. Tagged as 'Internet-5_46'
@
text
@d1 1
a1 1
/* (5.46)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.46
d9 1
a9 1
#define Module_Date_CMHG                13 Nov 2003
d11 2
a12 2
#define Module_MajorVersion             "5.46"
#define Module_Version                  546
d14 1
a14 1
#define Module_Date                     "13 Nov 2003"
d16 1
a16 1
#define Module_ApplicationDate          "13-Nov-03"
d21 3
a23 3
#define Module_FullVersion              "5.46"
#define Module_HelpVersion              "5.46 (13 Nov 2003)"
#define Module_LibraryVersionInfo       "5:46"
@


4.36
log
@Removed escape acknowledgement again.

This was a bad solution to the problem - acknowledging the escape says that
the module has dealt with it and the calling environment shouldn't take
escape actions. The C library is broken in that when the escape condition
is cleared/acknowledged, it still proceeds to call its SIGINT handler.
Compare this to the correct behaviour of the BASIC run-time; the problem
was originally noticed when calling *Debug, which you have to press Escape
to exit, and it acknowledges that escape, but C still throws SIGINT. When
the C library is fixed (as it shortly will be), if the Internet module
acknowledges escapes, socket calls will return EINTR but not actually
generate SIGINT.

The change was originally made for NFS, whose central code (in common with
most Unix code) retried calls returning EINTR. The problem was that the
escape condition remained unacknowledged so it got stuck in an infinite
loop. The correct fix will be to make sure that any supervisor mode code
such as NFS making blocking socket calls takes appropriate action when EINTR
is returned, or ensures that escape is disabled. Until it is fixed, NFS will
show lock-up symptoms again with this module. Applications will function as
expected, as the C run-time will call the SIGINT handler on exit from the
socket SWI (and acknowledge the escape) - if the signal handler returns the
foreground code can retry the call.

Version 5.45. Tagged as 'Internet-5_45'
@
text
@d1 1
a1 1
/* (5.45)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        5.45
d9 1
a9 1
#define Module_Date_CMHG                06 Sep 2001
d11 2
a12 2
#define Module_MajorVersion             "5.45"
#define Module_Version                  545
d14 1
a14 1
#define Module_Date                     "06 Sep 2001"
d16 1
a16 2
#define Module_ApplicationDate2         "06-Sep-01"
#define Module_ApplicationDate4         "06-Sep-2001"
d21 3
a23 3
#define Module_FullVersion              "5.45"
#define Module_HelpVersion              "5.45 (06 Sep 2001)"
#define Module_LibraryVersionInfo       "5:45"
@


4.35
log
@  Modified build.Makefile to add an Install (RAM) phase.
Detail:
  When building an image for the Ethernet flash, we need an install
  (ram) phase. Added.
Admin:
  Tested on RiscPC.

Version 5.44. Not tagged
@
text
@d1 1
a1 1
/* (5.44)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.44
d8 1
a8 1
#define Module_Date_CMHG                07 Aug 2000
d10 2
a11 2
#define Module_MajorVersion             "5.44"
#define Module_Version                  544
d13 1
a13 1
#define Module_Date                     "07 Aug 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "07-Aug-00"
#define Module_ApplicationDate4         "07-Aug-2000"
d18 6
a23 1
#define Module_FullVersion              "5.44"
@


4.34
log
@  Econet_InetRxDirect interface extended.
Detail:
  Previously, the SWI didn't care about any return values. The Internet
  module would either free the MBuf passed or send it on to the socket,
  depending on the value of m_len on exit from the SWI. This still works,
  but SWI handlers can now set R1 to zero on exit to claim ownership of
  the MBuf. In this case, the item is neither freed nor passed on to the
  socket, and the new owner must be very careful to make sure that they
  do an appropriate m_free later.
Admin:
  This change was implemented to allow UDPV to point the MPEG system
  directly to the data in the MBuf chains it was passed rather than taking
  a local copy. It has been tested with both new and old UDPV versions and
  both work as expected. Note that any module using the new interface will
  absolutely require it to be present (new UDPV modules built to use the
  interface extension will refuse to start if Internet is too old).

Version 5.44. Tagged as 'Internet-5_44'
@
text
@d8 1
a8 1
#define Module_Date_CMHG                13 Jul 2000
d13 1
a13 1
#define Module_Date                     "13 Jul 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "13-Jul-00"
#define Module_ApplicationDate4         "13-Jul-2000"
@


4.33
log
@Restored DELAY_EVENTS functionality.

Detail:
VideoControl was having a nasty reentrancy problem inside its event handler;
we've been sending out events at points where a BSD Unix system wouldn't and
exposing a number of potential problems. Fixed by restoring the delayed event
scheme used in earlier versions of Internet 5, but with an extra event send
inside the packet input loop which should alleviate the high load problems
seen with the NEC video client.

Seems to work fine, but we've been unable to get the NEC video client to
work at all, let alone test it on this Internet module. Doesn't matter for
now because we're not shipping it :)

Version 5.43. Tagged as 'Internet-5_43'
@
text
@d1 1
a1 1
/* (5.43)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.43
d8 1
a8 1
#define Module_Date_CMHG                05 Jul 2000
d10 2
a11 2
#define Module_MajorVersion             "5.43"
#define Module_Version                  543
d13 1
a13 1
#define Module_Date                     "05 Jul 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "05-Jul-00"
#define Module_ApplicationDate4         "05-Jul-2000"
d18 1
a18 1
#define Module_FullVersion              "5.43"
@


4.32
log
@  Escape handling improved.
Detail:
  Attempts by the Internet module to return from a SWI call with an errno
    value of EINTR are now trapped and the escape condition acknowledged
    to prevent S/W that believes a return value of EINTR means "make the
    system call again" from getting stuck in infinite loops.  This fix
    also stops the Escape being returned by the next SWI to be called by
    the application/module that called the Internet SWI.
Admin:
  Behavioural change dependent on the ACKNOWLEDGE_ESCAPE macro definition.
  This macro is defined by the Makefile in this version.
  Tested on desktop machine.

Version 5.42. Tagged as 'Internet-5_42'
@
text
@d1 1
a1 1
/* (5.42)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.42
d8 1
a8 1
#define Module_Date_CMHG                27 Jun 2000
d10 2
a11 2
#define Module_MajorVersion             "5.42"
#define Module_Version                  542
d13 1
a13 1
#define Module_Date                     "27 Jun 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "27-Jun-00"
#define Module_ApplicationDate4         "27-Jun-2000"
d18 1
a18 1
#define Module_FullVersion              "5.42"
@


4.31
log
@32-bit code modified to use new macros, plus a couple of fixes.
A (tiny) checksumming speed-up, courtesy of David Seal.

Version 5.41. Tagged as 'Internet-5_41'
@
text
@d1 1
a1 1
/* (5.41)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.41
d8 1
a8 1
#define Module_Date_CMHG                12 May 2000
d10 2
a11 2
#define Module_MajorVersion             "5.41"
#define Module_Version                  541
d13 1
a13 1
#define Module_Date                     "12 May 2000"
d15 4
a18 1
#define Module_FullVersion              "5.41"
@


4.30
log
@  Fixed a 144-byte RMA leak occurring on every socket creation.
Detail:
  Bug was introduced by a faulty merge of new FreeBSD stuff in version
  5.31 (13 Jul 1999).

Version 5.40. Tagged as 'Internet-5_40'
@
text
@d1 1
a1 1
/* (5.40)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.40
d8 1
a8 1
#define Module_Date_CMHG                06 Mar 2000
d10 2
a11 2
#define Module_MajorVersion             "5.40"
#define Module_Version                  540
d13 1
a13 1
#define Module_Date                     "06 Mar 2000"
d15 1
a15 1
#define Module_FullVersion              "5.40"
@


4.29
log
@Fixed TCP "window probe deadlock" bug (see RFC 2525 section 2.12).

Version 5.39. Tagged as 'Internet-5_39'
@
text
@d1 1
a1 1
/* (5.39)
d6 1
a6 1
#define Module_MajorVersion_CMHG        5.39
d8 1
a8 1
#define Module_Date_CMHG                22 Feb 2000
d10 2
a11 2
#define Module_MajorVersion             "5.39"
#define Module_Version                  539
d13 1
a13 1
#define Module_Date                     "22 Feb 2000"
d15 1
a15 1
#define Module_FullVersion              "5.39"
@


4.28
log
@Now 32-bit compatible, in a suitable build environment. In the standard
26-bit build environment it is unchanged, except for a fix in the "Module
Internet cannot be RAM loaded" checker.

Version 5.38. Tagged as 'Internet-5_38'
@
text
@d1 1
a1 1
/* (5.38)
d6 3
a8 3
#define Module_MajorVersion_CMHG     	5.38
#define Module_MinorVersion_CMHG	
#define Module_Date_CMHG      		11 Nov 1999
d10 4
a13 4
#define Module_MajorVersion     	"5.38"
#define Module_Version                  538
#define Module_MinorVersion		""
#define Module_Date      		"11 Nov 1999"
d15 1
a15 1
#define Module_FullVersion              "5.38"
@


4.27
log
@Added power-saving - calls Portable_Idle when waiting for a network operation
to complete.

Version 5.37. Tagged as 'Internet-5_37'
@
text
@d1 1
a1 1
/* (5.37)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.37
d8 1
a8 1
#define Module_Date_CMHG      		14 Oct 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.37"
#define Module_Version                  537
d13 1
a13 1
#define Module_Date      		"14 Oct 1999"
d15 1
a15 1
#define Module_FullVersion              "5.37"
@


4.26
log
@Gawd this version number's creeping up.
Attempts to free some mbufs on receipt of MbufManagerStatus_Scavenge.
Extracts DHCP NTP servers setting to Inet$NTPServer.

Version 5.36. Tagged as 'Internet-5_36'
@
text
@d1 1
a1 1
/* (5.36)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.36
d8 1
a8 1
#define Module_Date_CMHG      		27 Aug 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.36"
#define Module_Version                  536
d13 1
a13 1
#define Module_Date      		"27 Aug 1999"
d15 1
a15 1
#define Module_FullVersion              "5.36"
@


4.25
log
@  Updated to use new linker set capability of the linker.
Detail:
  Earlier versions "borrowed" the C++ global constructor mechanism to
    collect linker sets together resulting in some bizarre looking
    requirements (-c++ options passed to cc and link).  These are now
    solved properly.
Admin:
  Requires link 5.14 or later (and will refuse to link without it)
  This is contained in Library 0.28 and later (Library-0_28)
  With cc 5.14 and later (in Library 0.28 too), warnings about __link
    symbols will be automatically suppressed.

Version 5.35. Tagged as 'Internet-5_35'
@
text
@d1 1
a1 1
/* (5.35)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.35
d8 1
a8 1
#define Module_Date_CMHG      		10 Aug 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.35"
#define Module_Version                  535
d13 1
a13 1
#define Module_Date      		"10 Aug 1999"
d15 1
a15 1
#define Module_FullVersion              "5.35"
@


4.24
log
@microtime() now returns microsecond accuracy.
Random number generator now seeded from microtime(), machine ID and
hardware addresses of DCI drivers.
Some previously untested debugging code fixed to compile.

Version 5.34. Tagged as 'Internet-5_34'
@
text
@d1 1
a1 1
/* (5.34)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.34
d8 1
a8 1
#define Module_Date_CMHG      		28 Jul 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.34"
#define Module_Version                  534
d13 1
a13 1
#define Module_Date      		"28 Jul 1999"
d15 1
a15 1
#define Module_FullVersion              "5.34"
@


4.23
log
@* Used to send fragmented multicasts to the wrong link-level address. This
  is fixed by MbufManager 0.23, but a work-around has been incorporated
  into the Internet module.
* Ability to debug using PDebug instead of TML added.
* Various compilation hiccoughs when DEBUG defined fixed.

Version 5.33. Tagged as 'Internet-5_33'
@
text
@d1 1
a1 1
/* (5.33)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.33
d8 1
a8 1
#define Module_Date_CMHG      		22 Jul 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.33"
#define Module_Version                  533
d13 1
a13 1
#define Module_Date      		"22 Jul 1999"
d15 1
a15 1
#define Module_FullVersion              "5.33"
@


4.22
log
@* Removed some unused routines in the sysctl code.
* Now keeps track of interface multicast claims, even if the DCI driver is
  not capable of multicast filtering. This is necessary in case the user
  loads a multicast filtering capable driver later.
* Small tweak to ip_output(): multicast packets with specified interfaces
  don't need a route. This was spotted when we saw a machine failing to send
  IGMP reports because it had no default route set up.

Version 5.32. Tagged as 'Internet-5_32'
@
text
@d1 1
a1 1
/* (5.32)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.32
d8 1
a8 1
#define Module_Date_CMHG      		21 Jul 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.32"
#define Module_Version                  532
d13 1
a13 1
#define Module_Date      		"21 Jul 1999"
d15 1
a15 1
#define Module_FullVersion              "5.32"
@


4.21
log
@Added new FreeBSD sysctl handling using linker magic.
A few new sysctls added as a result.
SO_TIMESTAMP now gives real time, not Internet's internal time.
DHCP/BOOTP parsing picks up URL option and pops it into Inet$URL.
Requires TCPIPLibs 5.25 and link 5.12.

Version 5.31. Tagged as 'Internet-5_31'
@
text
@d1 1
a1 1
/* (5.31)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.31
d8 1
a8 1
#define Module_Date_CMHG      		13 Jul 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.31"
#define Module_Version                  531
d13 1
a13 1
#define Module_Date      		"13 Jul 1999"
d15 1
a15 1
#define Module_FullVersion              "5.31"
@


4.20
log
@The horrible ac_ipaddr member of struct arpcom exorcised once and for all.

Version 5.30. Tagged as 'Internet-5_30'
@
text
@d1 1
a1 1
/* (5.30)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.30
d8 1
a8 1
#define Module_Date_CMHG      		08 Jul 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.30"
#define Module_Version                  530
d13 1
a13 1
#define Module_Date      		"08 Jul 1999"
d15 1
a15 1
#define Module_FullVersion              "5.30"
@


4.19
log
@* Dynamic ports now assigned in range 49152-65535.
* IP_RECVDSTADDR works for non-unicast packets.
* SO_TIMESTAMP added.
* IP_RECVIF added.
* Various other internal changes merged in from FreeBSD sources.

Version 5.29. Tagged as 'Internet-5_29'
@
text
@d1 1
a1 1
/* (5.29)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.29
d10 2
a11 2
#define Module_MajorVersion     	"5.29"
#define Module_Version                  529
d15 1
a15 1
#define Module_FullVersion              "5.29"
@


4.18
log
@* Fixed bug introduced by tentative ARP probe - a typo made arp_ifinit() fail to
  set up the interface route structure properly.
* Divide-by-zero when an IGMP membership query with a time of 1 received fixed
  (from FreeBSD).
* IGMP messages now sent with TOS set to "maximum reliability".
* tcp_output.c updated from FreeBSD - in particular path_mtu_discovery sysctl
  now available.
* A few other FreeBSD structural changes and bug fixes integrated.
* Put UDP checksum in BOOTP packets.
* Null pointer dereferencing fixed in whoami.c. Address setting now done with
  SIOCDIFADDR and SIOCAIFADDR. Don't set the netmask if asked not to.
* Output BOOTP packets with the source address in ciaddr
Note that various structural changes mean that the support tools (in particular
InetStat) will need to be recompiled.
Requires TCPIPLibs 5.20

Version 5.27. Tagged as 'Internet-5_27'
@
text
@d1 1
a1 1
/* (5.27)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.27
d8 1
a8 1
#define Module_Date_CMHG      		30 Jun 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.27"
#define Module_Version                  527
d13 1
a13 1
#define Module_Date      		"30 Jun 1999"
d15 1
a15 1
#define Module_FullVersion              "5.27"
@


4.17
log
@Added Service_InternetStatus_DuplicateIPAddress to allow graceful behaviour
in the event of a DHCP address clash.
When configuring an interface as a result of DHCP/BOOTP - do a two stage
ARP transmission - first a "gentle" probe from 0.0.0.0 to check, then a
broadcast ARP reply to update everyone's ARP caches if there is no response.
If the probe shows a duplicate, the DHCP module can catch the service call
and send a DHCPDECLINE.
Changed to not respond to ICMP or ARP packets on an interface in the process
of DHCP/BOOTP/RevARP booting. Solves problem of DHCP server probing the
address it wants to give us and having us respond, making it think it's in
use.

Version 5.26. Tagged as 'Internet-5_26'
@
text
@d1 1
a1 1
/* (5.26)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.26
d8 1
a8 1
#define Module_Date_CMHG      		25 Jun 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.26"
#define Module_Version                  526
d13 1
a13 1
#define Module_Date      		"25 Jun 1999"
d15 1
a15 1
#define Module_FullVersion              "5.26"
@


4.16
log
@  Added new service call sub-reason code and support for DHCPINFORM.
  Bug fix for packet pointers.
Detail:
  A new flag has been introduced in the DHCP private ioctl interface
    to request that the Internet module does not fiddle with the
    addresses of interfaces but only sets the system variables in
    response to the content of the DHCPACK message.  The DHCP module
    will pass the DHCPACK message if and when it gets a response to
    an earlier DHCPINFORM that it originated.
  When the bootp_udp_input routine was split into two, the packet
    was passed as a pointer to the packet parser and one reference to
    &pkt hadn't been replaced with just pkt, hence completely wrong
    values were being passed around in the DynamicBootReply service
    call.
  The DynamicBootStart sub-reason code has also been modified to support
    claimers setting R2 to be the errno to be returned to the ioctl
    caller.  This means that modules such as DHCP can return errno
    values back via the Internet module instead of requiring clients to
    know to read the interface status from the DHCP module.
Admin:
  Requires TCPIPLibs 5.18 and later.
  Required by DHCP 0.05 and later.
  Required by IPConfig 0.19 and later.
  TCPIPLibs 5.18's LibraryDoc contains details of the service call.

Version 5.25. Tagged as 'Internet-5_25'
@
text
@d1 1
a1 1
/* (5.25)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.25
d8 1
a8 1
#define Module_Date_CMHG      		23 Jun 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.25"
#define Module_Version                  525
d13 1
a13 1
#define Module_Date      		"23 Jun 1999"
d15 1
a15 1
#define Module_FullVersion              "5.25"
@


4.15
log
@Modified to keep track of multicast claims on interfaces. It will no longer
lose multicast claims if a replacement driver module is loaded, or if an
interface is configured down.
Now passes correct frame type to MulticastRequest (used to pass a zero frame
level).
No longer asks for multicast ARP or Reverse ARP packets.

Version 5.24. Tagged as 'Internet-5_24'
@
text
@d1 1
a1 1
/* (5.24)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.24
d10 2
a11 2
#define Module_MajorVersion     	"5.24"
#define Module_Version                  524
d15 1
a15 1
#define Module_FullVersion              "5.24"
@


4.14
log
@IP timestamps and TCP sequence numbers now generated from system real-time
clock, rather than local monotonic copy. This gives a better chance of
uniqueness between reboots, as we should have found time from a server
at some stage.
Local clock initialised from system clock with centisecond accuracy.
IP firewalling and multicast routing disabled by default - specify them in
components file if really wanted.

Version 5.23. Tagged as 'Internet-5_23'
@
text
@d1 1
a1 1
/* (5.23)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.23
d8 1
a8 1
#define Module_Date_CMHG      		07 Jun 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.23"
#define Module_Version                  523
d13 1
a13 1
#define Module_Date      		"07 Jun 1999"
d15 1
a15 1
#define Module_FullVersion              "5.23"
@


4.13
log
@  Fixed TCP ISN generation.
Detail:
  When a device does not contain a real-time clock (eg. STB3) the
    generation of pseudo-random initial sequence numbers (ISNs) is not
    good enough to prevent confusion arising if a reconnection is
    attempted using the same 4-tuple socket address at the same time
    after machine is powered up. Commonly, this affects any application
    run by or immediately after the baseline boot system.  This results
    in attempts to connect a stream socket failing (the TCP code
    follows the TCP specification and ignores the server ACKs waiting
    for a SYN ACK to arrive)  A new function has been introduced to
    generate ISNs and the results are based on a monotonically
    increasing counter combined with the centisecond timer value.
Admin:
  Requires TCPIPLibs 5.14 or later.
    (CVS: RiscOS/Sources/Lib/TCPIPLibs  tag: TCPIPLibs-5_14 or later)

Version 5.22. Tagged as 'Internet-5_22'
@
text
@d1 1
a1 1
/* (5.22)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.22
d8 1
a8 1
#define Module_Date_CMHG      		03 Jun 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.22"
#define Module_Version                  522
d13 1
a13 1
#define Module_Date      		"03 Jun 1999"
d15 1
a15 1
#define Module_FullVersion              "5.22"
@


4.12
log
@  Improved DHCP support.
  Added more ATM interface type support.
Detail:
  RFC2132 DHCP options migrated out of Internet module into TCPIPLibs
    header file protocols/dhcp.h where they belong.
  whoami.c:vend_find_code() now knows about DHCP field overloading and
    will extract options correctly - both normal options and the
    ones extracted from the overloaded field.
  Internet now knows about broadcast-capable ATM (ST_TYPE_ATMPLUSRELAY)
    and LANE (ST_TYPE_ATMFLANE) as interface types, and treats them
    appropriately.
Admin:
  Built and tested in STB22 NEC.
  Requires header file exported by DHCP 0.01
    (CVS: RiscOS/Sources/Networking/DHCP   tag: DHCP-0_01 or later)
  Requires TCPIPLibs 5.10 or later.
    (CVS: RiscOS/Sources/Libs/TCPIPLibs    tag: TCPIPLibs-5_10 or later)

Version 5.21. Tagged as 'Internet-5_21'
@
text
@d1 1
a1 1
/* (5.21)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.21
d8 1
a8 1
#define Module_Date_CMHG      		30 Mar 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.21"
#define Module_Version                  521
d13 1
a13 1
#define Module_Date      		"30 Mar 1999"
d15 1
@


4.11
log
@  Support for DHCP module added.
Detail:
  Support for the new ioctl (SIOCGWHOIAMD) added.
  BOOTP client code re-organised so that DHCP module can
    trigger particular things to be done for it such as
    sending a packet on an interface, interpreting a
    "BOOTP response" - ie. a DHCPACK message.  This allows
    the DHCP module to usurp the BOOTP behaviour of the
    Internet module and replace it without Internet module
    clients like IPConfig ever being aware that it is now
    using DHCP and not BOOTP.
Admin:
  Tested in general usage in desktop machine.
  Requires TCPIPLibs 5.09
    (RiscOS/Sources/Lib/TCPIPLibs tag: TCPIPLibs-5_09 or later)
  Required by DHCP 0.00
    (RiscOS/Sources/Networking/DHCP tag: DHCP-0_00 or later)

Version 5.20. Tagged as 'Internet-5_20'
@
text
@d1 1
a1 1
/* (5.20)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.20
d8 1
a8 1
#define Module_Date_CMHG      		25 Mar 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.20"
#define Module_Version                  520
d13 1
a13 1
#define Module_Date      		"25 Mar 1999"
@


4.10
log
@  New service calls at the point of BOOTP requests and replies to allow
    external software to add things to requests and to extract answers
    from replies.
Detail:
  Prior to sending a request, InternetStatus_DynamicBootStart is issued.
    If this call is claimed, then the request is not placed on the network.
    When the reply comes back, Internet processes it as normal, sets the
    system variables it usually sets and then issues the service call
    InternetStatus_DynamicBootReply to allow other modules to extract any
    configuration that they want but that Internet does not know about.
    If the service call is claimed, Internet reprocesses the packet.
    RiscOS/Sources/Lib/TCPIPLibs/LibraryDoc contains full details.
Admin:
  Requires TCPIPLibs 5.06 or later
    (CVS: RiscOS/Sources/Lib/TCPIPLibs   tag: TCPIPLibs-5_06)

Version 5.19. Tagged as 'Internet-5_19'
@
text
@d1 1
a1 1
/* (5.19)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.19
d8 1
a8 1
#define Module_Date_CMHG      		12 Feb 1999
d10 2
a11 2
#define Module_MajorVersion     	"5.19"
#define Module_Version                  519
d13 1
a13 1
#define Module_Date      		"12 Feb 1999"
@


4.9
log
@Enabled usage of interrupt queue maxlen variable as a high water mark
counter on the interrupt/callback buffer queue, so as to enable
monitoring of whether this is the cause of possible mbuf exhaustions,
given that this queue length is now limited only by the case of system
resource depletion.

Version 5.18. Tagged as 'Internet-5_18'
@
text
@d1 1
a1 1
/* (5.18)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.18
d8 1
a8 1
#define Module_Date_CMHG      		28 Nov 1998
d10 2
a11 2
#define Module_MajorVersion     	"5.18"
#define Module_Version                  518
d13 1
a13 1
#define Module_Date      		"28 Nov 1998"
@


4.8
log
@Removed limitation on length of IP interrupt queue, and made psignal
generate events immediately, rather than at the end of callbacks.
In both respects, the behaviour is restored to that of Internet 4. This
fixes some performance problems with data streaming near the limit of the
machine's capability.

Version 5.17. Tagged as 'Internet-5_17'
@
text
@d1 1
a1 1
/* (5.17)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.17
d8 1
a8 1
#define Module_Date_CMHG      		27 Nov 1998
d10 2
a11 2
#define Module_MajorVersion     	"5.17"
#define Module_Version                  517
d13 1
a13 1
#define Module_Date      		"27 Nov 1998"
@


4.7
log
@Makefile: added *access command to end of build sequence.
riscos/module.c: closed a free then dereference hole.
netinet/ip_input.c: added additional stats collection and ability to change
                    size of interrupt process receive queue limit.
This must be built against a set of TCPIPLibs of 5.03 or later, otherwise
the added stats collection will fault.

Version 5.16. Tagged as 'Internet-5_16'
@
text
@d1 1
a1 1
/* (5.16)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.16
d10 2
a11 2
#define Module_MajorVersion     	"5.16"
#define Module_Version                  516
@


4.6
log
@Fixed a single character typo (well, cut & paste) error in the previous
version : it was harmless, but prevented correct operation of the
ALT+ALT BOOTP abort during the retry wait period in whoami.c

Version 5.15. Tagged as 'Internet-5_15'
@
text
@d1 1
a1 1
/* (5.15)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.15
d8 1
a8 1
#define Module_Date_CMHG      		13 Nov 1998
d10 2
a11 2
#define Module_MajorVersion     	"5.15"
#define Module_Version                  515
d13 1
a13 1
#define Module_Date      		"13 Nov 1998"
@


4.5
log
@Modified the interface flag handling logic inside of whoami.c, since
the existing logic was not consistant in its handling of the flags
IFF_UP and IFF_RUNNING - IFF_UP obviously indicates that the interface
is up ie useable, whereas IFF_RUNNING indicates that resources (in this
case FRAMES) have been claimed for the interface. This was not used
consistantly, which caused problems for the BOOTP client code.

Version 5.14. Tagged as 'Internet-5_14'
@
text
@d1 1
a1 1
/* (5.14)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.14
d8 1
a8 1
#define Module_Date_CMHG      		04 Nov 1998
d10 2
a11 2
#define Module_MajorVersion     	"5.14"
#define Module_Version                  514
d13 1
a13 1
#define Module_Date      		"04 Nov 1998"
@


4.4
log
@Modified flags for ATM interfaces again, since currently they internally
fake ARP, and don't work at all if they're not given the opportunity to do so.
Also modified the behaviour of the BOOTP/DHCP client code to ensure
that correct routing information is generated for the interface, and
to request and pick up an additional server name (so that this can be
used by LanManFS over IP to determine where its next stage boot server
is (an IP address isn't much good to it).

Version 5.13. Not tagged
@
text
@d1 1
a1 1
/* (5.13)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.13
d8 1
a8 1
#define Module_Date_CMHG      		30 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"5.13"
#define Module_Version                  513
d13 1
a13 1
#define Module_Date      		"30 Oct 1998"
@


4.3
log
@  Added multicast filtering support to Internet module
  More boot variables recognised in BOOTP/DHCP responses.
Detail:
  net/if_module.c:
    Interprets multicast ioctl requests and construct SWI parameters
    for passing to riscos/module.c for a call to MulticastRequest SWI.
  riscos/module.c:
    Wrapper for calling above SWI.  Sets appropriate flag bit on
    DCI4 Filter SWI to indicate our support for multicast filtering
    when Inquire SWI indicated that the driver supports it too.
  build/module.h:
    Prototype for dci4_mc_request() wrapper added.
  whoami/whoami.c:
    More variables are now known to the response handler.
    Multiple IP address options are handled (useful for Inet$Resolvers)
    Interoperability workaround for Microsoft DHCP servers added.
Admin:
  Requires RiscOS/Sources/Lib/TCPIPLibs version 5.02 or later.
    (tag: TCPIPLibs-5_02 or later)
  Supporting documentation: DCI4 Functional Specification
    (Drawing number 0284,036/FS; ECO 4112)
  BOOTP client tested against Microsoft DHCP server and standard server.
  Multicast filtering tested against new EtherH driver from I-cubed.
  Multicast filtering tested against old EtherM driver to verify the
    changes do not break older non-DCI 4.04 compliant drivers.

Version 5.12. Tagged as 'Internet-5_12'
@
text
@d1 1
a1 1
/* (5.12)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.12
d8 1
a8 1
#define Module_Date_CMHG      		22 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"5.12"
#define Module_Version                  512
d13 1
a13 1
#define Module_Date      		"22 Oct 1998"
@


4.2
log
@* Changed to use srccommit.
* Removed obsolete caveats on always having to keep version numbers
  between riscos/c/socket_swi and build/cmhg/InetHdr synchronised:
  the former now relies on the CMHG generated header file which, in
  turn, relies on the VersionNum file.

Version 5.11. Tagged as 'Internet-5_11'
@
text
@d1 1
a1 1
/* (5.11)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.11
d8 1
a8 1
#define Module_Date_CMHG      		05 Oct 1998
d10 2
a11 2
#define Module_MajorVersion     	"5.11"
#define Module_Version                  511
d13 1
a13 1
#define Module_Date      		"05 Oct 1998"
@


4.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (5.10)
d6 1
a6 1
#define Module_MajorVersion_CMHG     	5.10
d10 2
a11 2
#define Module_MajorVersion     	"5.10"
#define Module_Version                  510
@
