head	4.3;
access;
symbols
	Internet-5_65:4.3
	Internet-5_64:4.3
	Internet-5_63:4.3
	Internet-5_62:4.3
	Internet-5_61:4.3
	Internet-5_60:4.3
	Internet-5_59:4.3
	Internet-5_58:4.3
	Internet-5_57:4.3
	Internet-5_56:4.3
	Internet-5_55:4.3
	Internet-5_54:4.3
	Internet-5_53:4.3
	Internet-5_52:4.3
	Internet-5_51:4.3
	Internet-5_50:4.3
	RO_5_07:4.3
	Internet-5_49:4.3
	Internet-5_48:4.3
	Internet-5_47:4.3
	Internet-5_46:4.3
	Internet-5_45:4.3
	Internet-5_44:4.3
	Internet-5_43:4.3
	Internet-5_42:4.3
	Internet-5_41:4.3
	Internet-5_40:4.3
	Internet-5_39:4.3
	Internet-5_38:4.3
	Internet-5_37:4.3
	Internet-5_36:4.2
	Internet-5_35:4.2
	Internet-5_34:4.2
	Internet-5_33:4.2
	Internet-5_32:4.2
	Internet-5_31:4.2
	Internet-5_30:4.2
	Internet-5_29:4.2
	Internet-5_27:4.2
	Internet-5_26:4.2
	Internet-5_25:4.2
	Internet-5_24:4.2
	Internet-5_23:4.2
	Internet-5_22:4.2
	Internet-5_21:4.2
	Internet-5_20:4.2
	Internet-5_19:4.2
	Internet-5_18:4.2
	Internet-5_17:4.2
	Internet-5_16:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	Internet-5_15:4.2
	Internet-5_14:4.2
	Internet-5_13:4.2
	sforrest_daytona_appflash-0_31:4.2
	Internet-5_12:4.2
	Internet-5_11:4.2
	celkins_Internet-5_10:4.2
	nicke_Internat_25-9-98:4.2
	Internet-5_09:4.2
	blaughto_daytona_appflash-0_30:4.2
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rwarren_Internet-5_08:4.2
	Spinner:4.2
	Internet_5_07:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.6
	Ursula_13May1998_bp:4.2
	Ursula_13May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	celkins_Internet_506:4.2
	afrost_NC2_Generic:4.1.4.1
	afrost_Funai01-33:4.1.4.1
	Internet_505:4.2
	Spin_old:4.1.7
	Spinner_RCA116:4.1.4.1
	Spinner_B20_2:4.1.4.1
	Spinner_19_3:4.1.4.1
	Spinner_B18:4.1.4.1
	Spinner_B17:4.1.4.1
	Spinner_B15:4.1.4.1
	Spinner_B14:4.1.4.1
	Spinner_B13:4.1.4.1
	Spinner_B12:4.1.4.1
	Spinner_B10:4.1.4.1
	Daytona:4.2.0.4
	Daytona_bp:4.2
	Spin_merge_12May97:4.1.7.2
	Spinner_B7:4.1.4.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	nturton_inet_4_9:4.1.7.3
	nturton_inet_4_8:4.1.7.2
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	ARTtmp:4.1.7.2.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.4.1
	MergeFiles:4.1.3.2
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.3
date	99.10.14.14.42.48;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.05.12.22.59.04;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.28.10;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.28.10;	author nturton;	state Exp;
branches;
next	4.1.1.2;

4.1.1.2
date	96.11.05.16.20.23;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.22.30.36;	author nturton;	state Exp;
branches;
next	4.1.3.2;

4.1.3.2
date	96.11.08.17.23.19;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.04.11.10.07.03;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.22.14.56.35;	author nturton;	state Exp;
branches;
next	4.1.5.2;

4.1.5.2
date	96.11.25.15.07.01;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.59.47;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	96.12.02.20.38.48;	author nturton;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.04.09.15.27.28;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.3
log
@Added power-saving - calls Portable_Idle when waiting for a network operation
to complete.

Version 5.37. Tagged as 'Internet-5_37'
@
text
@/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Copyright(c) 1994 Acorn Computers Ltd., Cambridge, England
 *
 */
#include "sys/param.h"
#include "sys/socket.h"
#include "sys/domain.h"
#include "sys/mbuf.h"
#include "sys/kernel.h"

#include "net/route.h"
#include "net/if.h"
#include "net/raw_cb.h"

#include "debug.h"
#include "module.h"


struct	ifnet *ifnet;

struct rawcb rawcb;
struct	rtstat	rtstat;
struct	radix_node_head *rt_tables[AF_MAX+1];
struct  route_cb route_cb;

/* setsoft */
int callbackflag;
int callbackerr;
int netisr;

/* something not relevant here - it's 4.4ish */
int	max_linkhdr;			/* largest link-level header */
int	max_protohdr;			/* largest protocol header */
int	max_hdr;			/* largest link+protocol header */
int	max_datalen;			/* MHLEN - max_hdr */

/* timing variables */
int hz = 100;
int tick = 1000000 / 100;
volatile struct timeval time;

/* only call Portable module SWIs if available */
unsigned int portable_features;

/* debug control */
#ifdef DEBUG
int debugctrl;
#endif

#ifdef __riscos
/* whoami.whoami.c */
/* whether a Net module variant is using us */
int AUN_state = AUN_INACTIVE;

struct callback_record callbacks[NCALLBACKS];
_kernel_oserror errtunnel;
#endif

/* EOF globdata.c */
@


4.2
log
@Version Spinner_B7 taken
@
text
@d56 3
@


4.1
log
@Initial revision
@
text
@d15 1
a15 5
/* -*-C-*-
 *
 * $Header: /ax/networking:Internet/riscos/globdata.c:networking  1.3  $
 * $Source: /ax/networking:Internet/riscos/globdata.c: $
 *
a17 11
 * $Log:	globdata.c,v $
 * Revision 1.3  95/03/31  11:57:32  kwelton
 * Debugging control is now done via CMOS RAM, therefore it is no longer
 * necessary to initialise debugctrl.
 * 
 * Revision 1.2  95/03/01  10:06:13  kwelton
 * Added declaration and initialiser of struct ipstat.
 * 
 * Revision 1.1  94/12/02  11:38:13  kwelton
 * Initial revision
 * 
a18 2
#include "debug.h"

d23 1
a23 1
#include "sys/msgbuf.h"
a26 1
#include "net/af.h"
d29 10
a38 36
#include "netinet/in_systm.h"
#include "netinet/in.h"
#include "netinet/in_var.h"
#include "netinet/ip.h"
#include "netinet/ip_var.h"
#include "netinet/ip_icmp.h"
#include "netinet/icmp_var.h"
#include "netinet/in_pcb.h"
#include "netinet/tcp.h"
#include "netinet/tcpip.h"
#include "netinet/tcp_timer.h"
#include "netinet/tcp_var.h"
#include "netinet/udp.h"
#include "netinet/udp_var.h"

struct	domain *domains = 0;
struct	icmpstat icmpstat = { 0 };
struct	ifqueue rawintrq = { 0 };
struct	ifnet *ifnet = 0;
struct	in_ifaddr *in_ifaddr = 0;
struct	in_addr zeroin_addr = { 0 };
struct	ifqueue ipintrq = { 0 };

struct  ipstat ipstat = { 0 };

int	m_want = 0;
struct rawcb rawcb = { 0 };
tcp_seq tcp_iss = 0;
struct	inpcb tcb = { 0 };
struct	tcpstat tcpstat = { 0 };
struct	tcpiphdr tcp_saveti = { 0 };
struct	inpcb udb = { 0 };
struct	udpstat udpstat = { 0 };
struct	mbuf *rthost[RTHASHSIZ] = { 0 };
struct	mbuf *rtnet[RTHASHSIZ] = { 0 };
struct	rtstat rtstat = { 0 };
d41 14
a54 6
int callbackflag = 0;
int callbackerr = 0;
int netisr = 0;

/* net.if_loop */
struct	ifnet loif = { 0 };
d58 10
a67 1
int debugctrl = 0;
@


4.1.4.1
log
@Internet 5.04 merged from Internet 5.03 on Networking source tree with
Internet 4.08 BOOTP extensions from Spinner.
@
text
@d15 5
a19 1
/*
d22 11
d34 2
d40 1
a40 1
#include "sys/kernel.h"
d44 1
d47 36
a82 2
#include "debug.h"
#include "module.h"
d84 4
d89 2
a90 22
struct	ifnet *ifnet;

struct rawcb rawcb;
struct	rtstat	rtstat;
struct	radix_node_head *rt_tables[AF_MAX+1];
struct  route_cb route_cb;

/* setsoft */
int callbackflag;
int callbackerr;
int netisr;

/* something not relevant here - it's 4.4ish */
int	max_linkhdr;			/* largest link-level header */
int	max_protohdr;			/* largest protocol header */
int	max_hdr;			/* largest link+protocol header */
int	max_datalen;			/* MHLEN - max_hdr */

/* timing variables */
int hz = 100;
int tick = 1000000 / 100;
volatile struct timeval time;
d94 1
a94 10
int debugctrl;
#endif

#ifdef __riscos
/* whoami.whoami.c */
/* whether a Net module variant is using us */
int AUN_state = AUN_INACTIVE;

struct callback_record callbacks[NCALLBACKS];
_kernel_oserror errtunnel;
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@d17 1
a17 1
 * $Header: /ax/networking:Internet/riscos/globdata.c:networking  1.4  $
a22 5
 * Revision 1.4  95/11/14  12:07:55  pwain
 * Check in for JDavies@@csd
 * 
 * Added AUN_state flag to control AUN REVARP behaviour.
 *
a94 6
#endif

#ifdef __riscos
/* whoami.whoami.c */
/* whether a Net module variant is using us */
int AUN_state = AUN_INACTIVE;
@


4.1.7.2
log
@RCS log keyword removed
@
text
@d22 1
a22 1
 * :RCS Log discontinued:
@


4.1.7.3
log
@BootP patch incorporated
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@d17 1
a17 1
 * $Header: /ax/networking:Internet/riscos/globdata.c:networking  1.4  $
a22 5
 * Revision 1.4  95/11/14  12:07:55  pwain
 * Check in for JDavies@@csd
 * 
 * Added AUN_state flag to control AUN REVARP behaviour.
 *
a94 6
#endif

#ifdef __riscos
/* whoami.whoami.c */
/* whether a Net module variant is using us */
int AUN_state = AUN_INACTIVE;
@


4.1.5.2
log
@RCS Log keyword removed
@
text
@d22 1
a22 1
 * :RCS Log discontinued:
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@d17 1
a17 1
 * $Header: /ax/networking:Internet/riscos/globdata.c:networking  1.4  $
a22 5
 * Revision 1.4  95/11/14  12:07:55  pwain
 * Check in for JDavies@@csd
 *
 * Added AUN_state flag to control AUN REVARP behaviour.
 *
d26 1
a26 1
 *
d29 1
a29 1
 *
d32 1
a32 1
 *
d40 1
a40 1
#include "sys/kernel.h"
d44 1
d62 21
a82 1
struct	ifnet *ifnet;
d84 4
a87 8
struct rawcb rawcb;
struct  inpcbhead tcb;
struct  inpcbinfo tcbinfo;
struct	tcpstat tcpstat;
struct	udpstat udpstat;
struct	rtstat	rtstat;
struct	radix_node_head *rt_tables[AF_MAX+1];
struct  route_cb route_cb;
d89 2
a90 16
/* setsoft */
int callbackflag;
int callbackerr;
int netisr;

/* something not relevant here - it's 4.4ish */
int	max_linkhdr;			/* largest link-level header */
int	max_protohdr;			/* largest protocol header */
int	max_hdr;			/* largest link+protocol header */
int	max_datalen;			/* MHLEN - max_hdr */
struct socket *ip_mrouter;

/* timing variables */
int hz = 100;
int tick = 1000000 / 100;
volatile struct timeval time;
d94 1
a94 7
int debugctrl;
#endif

#ifdef __riscos
/* whoami.whoami.c */
/* whether a Net module variant is using us */
int AUN_state = AUN_INACTIVE;
@


4.1.3.2
log
@RCS Log keyword removed
@
text
@d22 1
a22 1
 * :RCS Log discontinued:
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@


4.1.1.2
log
@Log keyword removed
@
text
@d22 1
a22 1
 * :RCS Log discontinued:
@
