head	4.2;
access;
symbols
	Internet-5_65:4.2
	Internet-5_64:4.2
	Internet-5_63:4.2
	Internet-5_62:4.2
	Internet-5_61:4.2
	Internet-5_60:4.2
	Internet-5_59:4.2
	Internet-5_58:4.2
	Internet-5_57:4.2
	Internet-5_56:4.2
	Internet-5_55:4.2
	Internet-5_54:4.2
	Internet-5_53:4.2
	Internet-5_52:4.2
	Internet-5_51:4.2
	Internet-5_50:4.2
	RO_5_07:4.2
	Internet-5_49:4.2
	Internet-5_48:4.2
	Internet-5_47:4.2
	Internet-5_46:4.2
	Internet-5_45:4.2
	Internet-5_44:4.2
	Internet-5_43:4.2
	Internet-5_42:4.2
	Internet-5_41:4.2
	Internet-5_40:4.2
	Internet-5_39:4.2
	Internet-5_38:4.2
	Internet-5_37:4.2
	Internet-5_36:4.2
	Internet-5_35:4.2
	Internet-5_34:4.2
	Internet-5_33:4.2
	Internet-5_32:4.2
	Internet-5_31:4.2
	Internet-5_30:4.2
	Internet-5_29:4.2
	Internet-5_27:4.2
	Internet-5_26:4.2
	Internet-5_25:4.2
	Internet-5_24:4.2
	Internet-5_23:4.2
	Internet-5_22:4.2
	Internet-5_21:4.2
	Internet-5_20:4.2
	Internet-5_19:4.2
	Internet-5_18:4.2
	Internet-5_17:4.2
	Internet-5_16:4.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2
	Ursula_RiscPC:4.2.0.8
	Internet-5_15:4.2
	Internet-5_14:4.2
	Internet-5_13:4.2
	sforrest_daytona_appflash-0_31:4.2
	Internet-5_12:4.2
	Internet-5_11:4.2
	celkins_Internet-5_10:4.2
	nicke_Internat_25-9-98:4.2
	Internet-5_09:4.2
	blaughto_daytona_appflash-0_30:4.2
	rthornb_UrsulaBuild-19Aug1998:4.2
	UrsulaBuild_FinalSoftload:4.2
	rthornb_UrsulaBuild-12Aug1998:4.2
	aglover_UrsulaBuild-05Aug1998:4.2
	rthornb_UrsulaBuild-29Jul1998:4.2
	rthornb_UrsulaBuild-22Jul1998:4.2
	rwarren_Internet-5_08:4.2
	Spinner:4.2
	Internet_5_07:4.2
	rthornb_UrsulaBuild-15Jul1998:4.2
	rthornb_UrsulaBuild-07Jul1998:4.2
	rthornb_UrsulaBuild-17Jun1998:4.2
	rthornb_UrsulaBuild-03Jun1998:4.2
	rthornb_UrsulaBuild-27May1998:4.2
	rthornb_UrsulaBuild-21May1998:4.2
	Ursula_bp:4.2
	Ursula:4.2.0.6
	Ursula_13May1998_bp:4.2
	Ursula_13May1998:4.2.0.2
	rthornb_UrsulaBuild_01May1998:4.2
	celkins_Internet_506:4.2
	afrost_NC2_Generic:4.1.4.1
	afrost_Funai01-33:4.1.4.1
	Internet_505:4.2
	Spin_old:4.1.7
	Spinner_RCA116:4.1.4.1
	Spinner_B20_2:4.1.4.1
	Spinner_19_3:4.1.4.1
	Spinner_B18:4.1.4.1
	Spinner_B17:4.1.4.1
	Spinner_B15:4.1.4.1
	Spinner_B14:4.1.4.1
	Spinner_B13:4.1.4.1
	Spinner_B12:4.1.4.1
	Spinner_B10:4.1.4.1
	Daytona:4.2.0.4
	Daytona_bp:4.2
	Spin_merge_12May97:4.1.7.2
	Spinner_B7:4.1.4.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.2
	nturton_inet_4_9:4.1.7.3
	nturton_inet_4_8:4.1.7.2
	Spin_3Apr97:4.1.7.2
	RCA_bp:4.1
	ARTtmp:4.1.7.2.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.4.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.2
date	97.05.12.22.58.43;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.28.07;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.28.07;	author nturton;	state Exp;
branches;
next	4.1.1.2;

4.1.1.2
date	96.11.05.16.19.58;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.05.22.27.46;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	97.04.11.10.06.42;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.22.14.56.16;	author nturton;	state Exp;
branches;
next	4.1.5.2;

4.1.5.2
date	96.11.25.15.06.35;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.19.59.29;	author nturton;	state Exp;
branches;
next	4.1.7.2;

4.1.7.2
date	96.12.02.20.38.21;	author nturton;	state Exp;
branches;
next	4.1.7.3;

4.1.7.3
date	97.04.09.15.27.17;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.2
log
@Version Spinner_B7 taken
@
text
@/*
 * Copyright (c) 1983, 1986 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 */
#include "sys/param.h"
#include "sys/types.h"
#include "sys/mbuf.h"

#include "netinet/in.h"
#include "netinet/in_systm.h"

/*
 * Checksum routine for Internet Protocol family headers.
 *
 * This routine is very heavily used in the network
 * code and should be modified for each CPU to be as fast as possible.
 */

/*
 * There is a high-speed assembler simple-case IP header checksum
 * routine, in_cksum_hdr(), in poduleirq.s.
 *
 * Also, in_cksum() has been replaced with a much swifter assembler
 * routine, also in poduleirq.s.
 */

#if 0
/* C version - Problems caused because the ARM cannot read a word
 * from an 8bit boundary the way other machines can.
 * Version #3:
 * The internet header checksum is the 16 bit one's complement of the one's
 * complement sum of all 16 bit words in the header
 * Here we compute this as the sum of all the bit0-7 and all the bits8-15 in
 * two separate registers, then combine them at the end.
 */

int
in_cksum(m, len)
	register struct mbuf *m;
	int len;
{
	register int mlen = 0;
	register unsigned lo = 0, hi = 0;
	register u_char *lobp = mtod(m, u_char *);
	register u_char *hibp = lobp + 1;
	unsigned sum;

	for (;;) {
		/*
		 * Each trip around loop adds in
		 * word from one mbuf segment.
		 */
		mlen = m->m_len;
		m = m->m_next;
		if (len < mlen)
			mlen = len;
		len -= mlen;
		while ((mlen -= 2) >= 0) {
			lo += *lobp;
			hi += *hibp;
			lobp += 2;
			hibp += 2;
		}
		if (mlen & 1) {
			if (lobp < hibp)
				lo += *lobp;
			else {
				hi += *hibp;
			}
		}
		if (len == 0)
			break;
		for (;;) {
			if (m == 0) { /* out of data */
				goto done;
			}
			if (m->m_len)
				break;
			m = m->m_next;
		}
/* Now we have to decide the lo/hi sequence for this next packet
**							    oddlen   H/L   new
** a)  ...] [L H ... L H]     was Lo/Hi, even => [L H ...      F      F	    L/H
** b)  ...] [H L ... H L]     was Hi/Lo, even => [H L ...      F      T	    H/L
** c)  ...] [L H ... L H L]   was Lo/Hi, odd  => [H L ...      T      F	    H/L
** d)  ...] [H L ... H L H]   was Hi/Lo, odd  => [L H ...      T      T	    L/H
**
*/
		if (mlen & 1 ? lobp < hibp : hibp < lobp) {
			/* Then the first byte of next mbuf is for the
			 **   high half of the checksum.
			 */
			hibp = mtod(m, u_char *);
			lobp = hibp + 1;
		} else {
			lobp = mtod(m, u_char *);
			hibp = lobp + 1;
		}

	}
	/*
	 * Add together high and low parts of sum
	 */
done:
	sum = (hi << 8) + lo;
	while (sum >= 0x10000)
		sum = (sum >> 16) + (sum & 0xffff);
	/* one's complement of sum */
	sum ^= 0xffff;
	return (sum);
}
#endif
@


4.1
log
@Initial revision
@
text
@a0 17
/* -*-C-*-
 *
 * $Header: /ax/networking:Internet/netinet/in_cksum.c:networking  1.2  $
 * $Source: /ax/networking:Internet/netinet/in_cksum.c: $
 *
 * Copyright(c) 1994 Acorn Computers Ltd., Cambridge, England
 *
 * $Log:	in_cksum.c,v $
 * Revision 1.2  95/02/21  21:15:03  kwelton
 * Added "sys/param.h" as an include file - this contains the all important
 * definition of BSD which is used to control lots of nastily subtle
 * variations.
 * 
 * Revision 1.1  94/12/02  11:07:58  kwelton
 * Initial revision
 * 
 */
d32 9
d50 1
d125 1
a125 2

/* EOF in_cksum.c */
@


4.1.4.1
log
@Internet 5.04 merged from Internet 5.03 on Networking source tree with
Internet 4.08 BOOTP extensions from Spinner.
@
text
@d1 17
a48 9
/*
 * There is a high-speed assembler simple-case IP header checksum
 * routine, in_cksum_hdr(), in poduleirq.s.
 *
 * Also, in_cksum() has been replaced with a much swifter assembler
 * routine, also in poduleirq.s.
 */

#if 0
a57 1
int
d132 2
a133 1
#endif
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.7.2
log
@RCS log keyword removed
@
text
@d8 1
a8 1
 * :RCS Log discontinued:
@


4.1.7.3
log
@BootP patch incorporated
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.5.2
log
@RCS Log keyword removed
@
text
@d8 1
a8 1
 * :RCS Log discontinued:
@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@d1 17
a48 9
/*
 * There is a high-speed assembler simple-case IP header checksum
 * routine, in_cksum_hdr(), in poduleirq.s.
 *
 * Also, in_cksum() has been replaced with a much swifter assembler
 * routine, also in poduleirq.s.
 */

#if 0
a57 1
int
d132 2
a133 1
#endif
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@


4.1.1.2
log
@Log keyword removed
@
text
@d8 1
a8 1
 * :RCS Log discontinued:
@
