head	1.80;
access;
symbols
	SprExtend-1_83:1.80
	SprExtend-1_82:1.79
	SprExtend-1_81:1.78
	SprExtend-1_80:1.77
	SprExtend-1_79:1.76
	SprExtend-1_78:1.75
	SprExtend-1_77:1.74
	SprExtend-1_76:1.73
	SprExtend-1_75:1.72
	SprExtend-1_74:1.71
	SprExtend-1_73:1.70
	SprExtend-1_72:1.69
	SprExtend-1_71-nocfsi:1.68
	SprExtend-1_71:1.68
	SprExtend-1_70-tracef:1.67
	SprExtend-1_70-headers:1.67
	SprExtend-1_70:1.67
	SprExtend-1_69:1.66
	SprExtend-1_68:1.65
	SprExtend-1_67:1.64
	SprExtend-1_66:1.63
	SprExtend-1_65:1.62
	SprExtend-1_64:1.61
	SprExtend-1_63:1.60
	SprExtend-1_62:1.59
	SprExtend-1_61:1.58
	SprExtend-1_60:1.57
	SprExtend-1_59:1.56
	SprExtend-1_58:1.55
	SprExtend-1_57:1.54
	SprExtend-1_56:1.53
	SprExtend-1_55:1.52
	SprExtend-1_54:1.51
	SprExtend-1_53:1.50
	SprExtend-1_52:1.49
	SprExtend-1_51:1.48
	SprExtend-1_50:1.47
	SprExtend-1_38-1_35_2_16:1.35.2.16
	SprExtend-1_49:1.46
	SprExtend-1_48:1.45
	SprExtend-1_47:1.44
	SprExtend-1_38-1_35_2_15:1.35.2.15
	SprExtend-1_46:1.43
	SprExtend-1_45:1.42
	SprExtend-1_44:1.41
	SprExtend-1_43:1.40
	SprExtend-1_42:1.39
	SprExtend-1_41:1.38
	SprExtend-1_38-1_35_2_14:1.35.2.14
	SprExtend-1_40:1.37
	SprExtend-1_38-1_35_2_13:1.35.2.13
	SprExtend-1_38-1_35_2_12:1.35.2.12
	SprExtend-1_38-1_35_2_11:1.35.2.11
	SprExtend-1_38-1_35_2_10:1.35.2.10
	SprExtend-1_38-1_35_2_9:1.35.2.9
	SprExtend-1_38-1_35_2_8:1.35.2.8
	SprExtend-1_39:1.36
	SprExtend-1_38-1_35_2_7:1.35.2.7
	SprExtend-1_38-1_35_2_6:1.35.2.6
	SprExtend-1_38-1_35_2_5:1.35.2.5
	SprExtend-1_38-1_35_2_4:1.35.2.4
	SprExtend-1_38-1_35_2_3:1.35.2.3
	SprExtend-1_38-1_35_2_2:1.35.2.2
	SprExtend-1_38-1_35_2_1:1.35.2.1
	MigrateIJG8b:1.35.0.2
	SprExtend-1_38:1.35
	SprExtend-1_37:1.34
	SprExtend-1_36:1.33
	SprExtend-1_35:1.32
	SprExtend-1_34:1.31
	SprExtend-1_33:1.30
	SprExtend-1_32:1.29
	SprExtend-1_31:1.28
	SprExtend-1_30:1.27
	SprExtend-1_29:1.26
	SprExtend-1_28:1.25
	SprExtend-1_27:1.24
	SprExtend-1_26:1.23
	SprExtend-1_25:1.22
	SprExtend-1_24:1.21
	SprExtend-1_23:1.20
	SprExtend-1_22:1.19
	SprExtend-1_21:1.18
	SprExtend-1_20:1.15
	SprExtend-1_19:1.14
	SprExtend-1_18:1.13
	SprExtend-1_17:1.12
	RO_5_07:1.11
	SprExtend-1_16:1.11
	SprExtend-1_15:1.10
	SprExtend-1_14:1.9
	SprExtend-1_13:1.8
	SprExtend-1_12:1.7
	SprExtend-1_11:1.6
	SprExtend-1_10:1.5
	SprExtend-1_09:1.4
	SprExtend-1_08:1.3
	dellis_autobuild_BaseSW:1.2
	dcotton_autobuild_BaseSW:1.5
	SprExtend-1_07:1.2;
locks; strict;
comment	@# @;


1.80
date	2018.07.03.21.24.44;	author rsprowson;	state Exp;
branches;
next	1.79;
commitid	NXPBA1NubxmwGJIA;

1.79
date	2018.02.11.20.22.21;	author rsprowson;	state Exp;
branches;
next	1.78;
commitid	RLkDTc5eKEj6UtqA;

1.78
date	2017.11.09.20.26.48;	author rsprowson;	state Exp;
branches;
next	1.77;
commitid	dkWps59QLr5YWoeA;

1.77
date	2017.10.22.20.10.11;	author rsprowson;	state Exp;
branches;
next	1.76;
commitid	ejKApez9PLy8r5cA;

1.76
date	2017.02.28.23.06.22;	author rsprowson;	state Exp;
branches;
next	1.75;
commitid	MQfaLocMT9fUZLHz;

1.75
date	2016.12.17.18.49.58;	author jlee;	state Exp;
branches;
next	1.74;
commitid	6ZYEX0h1aDsqVmyz;

1.74
date	2016.09.30.22.28.02;	author jballance;	state Exp;
branches;
next	1.73;
commitid	pqLInHhXmDrGDmoz;

1.73
date	2016.05.21.14.16.30;	author rool;	state Exp;
branches;
next	1.72;
commitid	xdjBCBYna4x7am7z;

1.72
date	2016.05.21.14.13.12;	author rool;	state Exp;
branches;
next	1.71;
commitid	2yhdQIv5WwwZ8m7z;

1.71
date	2016.05.21.14.10.11;	author rool;	state Exp;
branches;
next	1.70;
commitid	RAjaHu2jGaPW7m7z;

1.70
date	2016.05.21.14.07.26;	author rool;	state Exp;
branches;
next	1.69;
commitid	rlMVSSOn1jz07m7z;

1.69
date	2016.05.21.14.03.38;	author rool;	state Exp;
branches;
next	1.68;
commitid	4BquZHousteH5m7z;

1.68
date	2016.05.21.13.44.27;	author rool;	state Exp;
branches;
next	1.67;
commitid	ZDqmsyNiMhv6Zl7z;

1.67
date	2016.03.12.10.24.59;	author rool;	state Exp;
branches;
next	1.66;
commitid	cdOKhcORM5Eb8lYy;

1.66
date	2016.01.11.21.13.05;	author rsprowson;	state Exp;
branches;
next	1.65;
commitid	9u3DBFHppwA6GyQy;

1.65
date	2015.09.26.14.36.56;	author jlee;	state Exp;
branches;
next	1.64;
commitid	hX8EOuiVXwurVLCy;

1.64
date	2015.09.08.21.53.21;	author jlee;	state Exp;
branches;
next	1.63;
commitid	J8865goQD2q1VuAy;

1.63
date	2015.06.25.22.19.55;	author jlee;	state Exp;
branches;
next	1.62;
commitid	H3G7oogaq7kBtRqy;

1.62
date	2015.01.30.08.58.51;	author rsprowson;	state Exp;
branches;
next	1.61;
commitid	THgb9qDlN8jLJ18y;

1.61
date	2014.12.06.08.51.23;	author rsprowson;	state Exp;
branches;
next	1.60;
commitid	En1PFGHfLo2OsX0y;

1.60
date	2014.03.28.00.02.13;	author jlee;	state Exp;
branches;
next	1.59;
commitid	XiGrdO28VnttFoux;

1.59
date	2014.03.09.17.30.34;	author jlee;	state Exp;
branches;
next	1.58;
commitid	kMmPd1A5kacZ43sx;

1.58
date	2014.03.04.20.45.01;	author jlee;	state Exp;
branches;
next	1.57;
commitid	6KWofF44yd1Fjqrx;

1.57
date	2013.10.25.20.31.21;	author jlee;	state Exp;
branches;
next	1.56;
commitid	cSPorALl6Vf2qIax;

1.56
date	2013.10.14.22.11.31;	author jlee;	state Exp;
branches;
next	1.55;
commitid	3gyTBoWfzDEkkj9x;

1.55
date	2013.10.13.18.05.36;	author jlee;	state Exp;
branches;
next	1.54;
commitid	suOAAEfKbqUXZ99x;

1.54
date	2013.10.13.15.40.26;	author jlee;	state Exp;
branches;
next	1.53;
commitid	sXDj93HaCpcac99x;

1.53
date	2013.10.07.22.07.26;	author jlee;	state Exp;
branches;
next	1.52;
commitid	6QGbPOS9AUVSwp8x;

1.52
date	2013.10.07.00.39.04;	author jlee;	state Exp;
branches;
next	1.51;
commitid	HcUKy3PafwqToi8x;

1.51
date	2013.09.10.23.18.31;	author jlee;	state Exp;
branches;
next	1.50;
commitid	rBPHyiuHG965NW4x;

1.50
date	2013.08.10.23.33.12;	author jlee;	state Exp;
branches;
next	1.49;
commitid	OXu01iAJkWrTRX0x;

1.49
date	2013.08.06.23.16.15;	author jlee;	state Exp;
branches;
next	1.48;
commitid	z9XOph7zDZQ2Ur0x;

1.48
date	2012.08.10.21.21.55;	author rsprowson;	state Exp;
branches;
next	1.47;
commitid	2YHsqEnypOzgS2gw;

1.47
date	2012.07.28.15.23.35;	author rsprowson;	state Exp;
branches;
next	1.46;
commitid	b5jdybqzJ3Wdjlew;

1.46
date	2012.04.22.17.56.47;	author rsprowson;	state Exp;
branches;
next	1.45;
commitid	7ojX3R0MZJ67hT1w;

1.45
date	2012.01.14.18.38.19;	author srevill;	state Exp;
branches;
next	1.44;
commitid	lsBMLVy01s0FGaPv;

1.44
date	2011.10.03.20.35.11;	author rsprowson;	state Exp;
branches;
next	1.43;
commitid	jlqGNWSdKaK0EWBv;

1.43
date	2011.08.05.00.17.40;	author jlee;	state Exp;
branches;
next	1.42;
commitid	M4NYP50KHXLUNfuv;

1.42
date	2011.07.20.08.15.23;	author rsprowson;	state Exp;
branches;
next	1.41;
commitid	Aux2MFhoCLTGXesv;

1.41
date	2011.07.10.10.07.58;	author rsprowson;	state Exp;
branches;
next	1.40;
commitid	OPrPsD1BKiXeUXqv;

1.40
date	2011.06.25.23.02.04;	author jlee;	state Exp;
branches;
next	1.39;
commitid	hUTXxU53IjkHF6pv;

1.39
date	2011.04.14.14.36.01;	author bavison;	state Exp;
branches;
next	1.38;
commitid	FiLHJPypIj9AbOfv;

1.38
date	2011.03.14.23.29.59;	author srevill;	state Exp;
branches;
next	1.37;
commitid	liob2Sw1t7Hx8Sbv;

1.37
date	2011.02.13.17.40.37;	author rsprowson;	state Exp;
branches;
next	1.36;

1.36
date	2011.01.11.08.10.53;	author rsprowson;	state Exp;
branches;
next	1.35;

1.35
date	2010.12.23.09.00.52;	author rsprowson;	state Exp;
branches
	1.35.2.1;
next	1.34;

1.34
date	2010.12.22.08.22.23;	author rsprowson;	state Exp;
branches;
next	1.33;

1.33
date	2010.11.14.14.51.54;	author rsprowson;	state Exp;
branches;
next	1.32;

1.32
date	2010.11.14.10.42.29;	author rsprowson;	state Exp;
branches;
next	1.31;

1.31
date	2010.11.06.17.29.29;	author rsprowson;	state Exp;
branches;
next	1.30;

1.30
date	2010.10.17.09.01.27;	author rsprowson;	state Exp;
branches;
next	1.29;

1.29
date	2010.10.13.20.26.10;	author rsprowson;	state Exp;
branches;
next	1.28;

1.28
date	2010.10.07.20.10.59;	author rsprowson;	state Exp;
branches;
next	1.27;

1.27
date	2010.09.29.21.05.20;	author rsprowson;	state Exp;
branches;
next	1.26;

1.26
date	2010.09.25.15.20.37;	author rsprowson;	state Exp;
branches;
next	1.25;

1.25
date	2010.09.25.12.19.13;	author rsprowson;	state Exp;
branches;
next	1.24;

1.24
date	2010.09.19.09.11.12;	author rsprowson;	state Exp;
branches;
next	1.23;

1.23
date	2010.09.17.22.15.30;	author rsprowson;	state Exp;
branches;
next	1.22;

1.22
date	2010.09.17.21.07.18;	author rsprowson;	state Exp;
branches;
next	1.21;

1.21
date	2010.09.01.20.48.45;	author rsprowson;	state Exp;
branches;
next	1.20;

1.20
date	2010.08.29.08.36.01;	author rsprowson;	state Exp;
branches;
next	1.19;

1.19
date	2010.08.26.07.46.49;	author rsprowson;	state Exp;
branches;
next	1.18;

1.18
date	2010.01.19.16.36.41;	author rool;	state Exp;
branches;
next	1.17;

1.17
date	2009.06.13.23.26.22;	author bavison;	state Exp;
branches;
next	1.16;

1.16
date	2009.06.11.22.12.53;	author bavison;	state Exp;
branches;
next	1.15;

1.15
date	2009.05.10.14.19.05;	author bavison;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.24.00.48.32;	author srevill;	state Exp;
branches;
next	1.13;

1.13
date	2008.10.17.13.19.21;	author srevill;	state Exp;
branches;
next	1.12;

1.12
date	2004.12.07.15.46.54;	author jbyrne;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.03.14.45.52;	author kbracey;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.08.21.19.08;	author rsprowson;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.19.18.53.14;	author kbracey;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.02.20.35.36;	author bavison;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.02.20.28.58;	author bavison;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.06.13.20.28;	author kbracey;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.02.11.21.11;	author sbrodie;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.17.12.59.35;	author sbrodie;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.15.10.56.58;	author sbrodie;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.27.13.58.01;	author jfletche;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.27.13.43.27;	author jfletche;	state Exp;
branches;
next	;

1.35.2.1
date	2011.01.04.21.23.40;	author rsprowson;	state Exp;
branches;
next	1.35.2.2;

1.35.2.2
date	2011.01.04.21.28.32;	author rsprowson;	state Exp;
branches;
next	1.35.2.3;

1.35.2.3
date	2011.01.04.21.36.52;	author rsprowson;	state Exp;
branches;
next	1.35.2.4;

1.35.2.4
date	2011.01.04.21.45.22;	author rsprowson;	state Exp;
branches;
next	1.35.2.5;

1.35.2.5
date	2011.01.04.22.13.01;	author rsprowson;	state Exp;
branches;
next	1.35.2.6;

1.35.2.6
date	2011.01.09.10.42.50;	author rsprowson;	state Exp;
branches;
next	1.35.2.7;

1.35.2.7
date	2011.01.09.10.56.36;	author rsprowson;	state Exp;
branches;
next	1.35.2.8;

1.35.2.8
date	2011.01.13.21.12.07;	author rsprowson;	state Exp;
branches;
next	1.35.2.9;

1.35.2.9
date	2011.01.22.17.58.18;	author rsprowson;	state Exp;
branches;
next	1.35.2.10;

1.35.2.10
date	2011.01.22.18.01.42;	author rsprowson;	state Exp;
branches;
next	1.35.2.11;

1.35.2.11
date	2011.01.29.10.03.30;	author rsprowson;	state Exp;
branches;
next	1.35.2.12;

1.35.2.12
date	2011.01.29.10.05.48;	author rsprowson;	state Exp;
branches;
next	1.35.2.13;

1.35.2.13
date	2011.02.05.09.56.45;	author rsprowson;	state Exp;
branches;
next	1.35.2.14;

1.35.2.14
date	2011.02.15.20.57.54;	author rsprowson;	state Exp;
branches;
next	1.35.2.15;

1.35.2.15
date	2011.08.06.10.44.25;	author rsprowson;	state Exp;
branches;
next	1.35.2.16;
commitid	gAycmEnWp5AVeruv;

1.35.2.16
date	2012.07.28.14.42.45;	author rsprowson;	state Exp;
branches;
next	;
commitid	Ny6vV3CHXwee5lew;


desc
@@


1.80
log
@Tile using steam power during printing
If there's a print job active, break down TileSpriteScaled into composite SpriteOps rather than using OS_Plot copy/move block. OS_Plot copy/move isn't supported by the printing system.

Version 1.83. Tagged as 'SprExtend-1_83'
@
text
@/* (1.83)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        1.83
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                03 Jul 2018

#define Module_MajorVersion             "1.83"
#define Module_Version                  183
#define Module_MinorVersion             ""
#define Module_Date                     "03 Jul 2018"

#define Module_ApplicationDate          "03-Jul-18"

#define Module_ComponentName            "SprExtend"
#define Module_ComponentPath            "mixed/RiscOS/Sources/Video/Render/SprExtend"

#define Module_FullVersion              "1.83"
#define Module_HelpVersion              "1.83 (03 Jul 2018)"
#define Module_LibraryVersionInfo       "1:83"
@


1.79
log
@Fixes from static analysis
asmcore.c: fix to align16() function to align as advertised due to operator precedence, and potential buffer overrun of userregs[].
Test/bigtest.c: correct some always false if's and printf() formatters
Ref: https://www.riscosopen.org/forum/forums/4/topics/9503#posts-72595

Unrelated, Sources/SprExtend and Sources/SprOp: use symbolic name for sprite name size.

Version 1.82. Tagged as 'SprExtend-1_82'
@
text
@d1 1
a1 1
/* (1.82)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.82
d9 1
a9 1
#define Module_Date_CMHG                11 Feb 2018
d11 2
a12 2
#define Module_MajorVersion             "1.82"
#define Module_Version                  182
d14 1
a14 1
#define Module_Date                     "11 Feb 2018"
d16 1
a16 1
#define Module_ApplicationDate          "11-Feb-18"
d21 3
a23 3
#define Module_FullVersion              "1.82"
#define Module_HelpVersion              "1.82 (11 Feb 2018)"
#define Module_LibraryVersionInfo       "1:82"
@


1.78
log
@Fix for CVE-2013-6629 and CVE-2013-6630
Merged from IJG release 8d1.

Version 1.81. Tagged as 'SprExtend-1_81'
@
text
@d1 1
a1 1
/* (1.81)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.81
d9 1
a9 1
#define Module_Date_CMHG                09 Nov 2017
d11 2
a12 2
#define Module_MajorVersion             "1.81"
#define Module_Version                  181
d14 1
a14 1
#define Module_Date                     "09 Nov 2017"
d16 1
a16 1
#define Module_ApplicationDate          "09-Nov-17"
d21 3
a23 3
#define Module_FullVersion              "1.81"
#define Module_HelpVersion              "1.81 (09 Nov 2017)"
#define Module_LibraryVersionInfo       "1:81"
@


1.77
log
@Fix for access outside array bounds
Can't allocate PC, so loop can stop at R14.
Ref https://www.riscosopen.org/forum/forums/4/topics/9503

Version 1.80. Tagged as 'SprExtend-1_80'
@
text
@d1 1
a1 1
/* (1.80)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.80
d9 1
a9 1
#define Module_Date_CMHG                22 Oct 2017
d11 2
a12 2
#define Module_MajorVersion             "1.80"
#define Module_Version                  180
d14 1
a14 1
#define Module_Date                     "22 Oct 2017"
d16 1
a16 1
#define Module_ApplicationDate          "22-Oct-17"
d21 3
a23 3
#define Module_FullVersion              "1.80"
#define Module_HelpVersion              "1.80 (22 Oct 2017)"
#define Module_LibraryVersionInfo       "1:80"
@


1.76
log
@Fix to dpcm calculation leading to divide by zero in !Draw
For JPEGs specified in dots-per-cm some dodgy looking bytewise fractions and missing brackets meant the x and y densities always came out as zero, leading to an abort in !Draw when it asks JPEG_[File]Info for this to convert to internal units.
Correct the calculation and split it onto 2 lines for readability.

Tested with a sample JPEG at 37dpcm (~93dpi).

Version 1.79. Tagged as 'SprExtend-1_79'
@
text
@d1 1
a1 1
/* (1.79)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.79
d9 1
a9 1
#define Module_Date_CMHG                28 Feb 2017
d11 2
a12 2
#define Module_MajorVersion             "1.79"
#define Module_Version                  179
d14 1
a14 1
#define Module_Date                     "28 Feb 2017"
d16 1
a16 1
#define Module_ApplicationDate          "28-Feb-17"
d21 3
a23 3
#define Module_FullVersion              "1.79"
#define Module_HelpVersion              "1.79 (28 Feb 2017)"
#define Module_LibraryVersionInfo       "1:79"
@


1.75
log
@Fix quality loss for some alpha blending ops. Perform dynamic CPU feature detection.
Detail:
  c/asmcore - Fix loss of quality for some alpha blending, e.g. 4K LARGB sprite being rendered into a 16M colour mode. All three channels were being expanded to 8 bit, but then two were being erroneously truncated to 4 bit.
  Sources/SprExtend - Make use of OS_PlatformFeatures + OS_ReadSysInfo to detect CPU features at runtime instead of relying on a hardcoded value. Should allow for better code generation with softload versions or Raspberry Pi 2/3 ROM versions.
Admin:
  Tested on Raspberry Pi 1, 3, Iyonix


Version 1.78. Tagged as 'SprExtend-1_78'
@
text
@d1 1
a1 1
/* (1.78)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.78
d9 1
a9 1
#define Module_Date_CMHG                17 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "1.78"
#define Module_Version                  178
d14 1
a14 1
#define Module_Date                     "17 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "17-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "1.78"
#define Module_HelpVersion              "1.78 (17 Dec 2016)"
#define Module_LibraryVersionInfo       "1:78"
@


1.74
log
@  Repair ROM build
Detail:
  Amend asmcore static dependency to create an o directory, so rom build target works
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 1.77. Tagged as 'SprExtend-1_77'
@
text
@d1 1
a1 1
/* (1.77)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.77
d9 1
a9 1
#define Module_Date_CMHG                30 Sep 2016
d11 2
a12 2
#define Module_MajorVersion             "1.77"
#define Module_Version                  177
d14 1
a14 1
#define Module_Date                     "30 Sep 2016"
d16 1
a16 1
#define Module_ApplicationDate          "30-Sep-16"
d21 3
a23 3
#define Module_FullVersion              "1.77"
#define Module_HelpVersion              "1.77 (30 Sep 2016)"
#define Module_LibraryVersionInfo       "1:77"
@


1.73
log
@Lazy MCU decoding
Detail:
  Only colour convert from the left clipping border (rounded down) to the right (rounding up).
  Only entropy decode the DC component for blocks likewise, skipping AC and IDCT steps.
Admin:
  Submission for the JPEG bounty.

Version 1.76. Tagged as 'SprExtend-1_76'
@
text
@d1 1
a1 1
/* (1.76)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.76
d9 1
a9 1
#define Module_Date_CMHG                21 May 2016
d11 2
a12 2
#define Module_MajorVersion             "1.76"
#define Module_Version                  176
d14 1
a14 1
#define Module_Date                     "21 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "21-May-16"
d21 3
a23 3
#define Module_FullVersion              "1.76"
#define Module_HelpVersion              "1.76 (21 May 2016)"
#define Module_LibraryVersionInfo       "1:76"
@


1.72
log
@Add lossless JPEG support
Detail:
  Update scanning, diffusing, line fetching to handle 1x1 DCTs.
  For transcoding, skip the jcmaster check on block_size having to generate optimal huffman tables - for a 1x1 DCT we don't need a huffman table at all and the defaults will suffice.
  For diffusing, rather that write out longhand another specialised diffuser to handle the 1x1 case, just overallocate one line in the band buffer and let it diffuse a line of garbage.
  Implement integer fast 1x1 DCT routine (to avoid having to drag in 25k of generic IDCT_ISLOW code).
Admin:
  Submission for the JPEG bounty.

Version 1.75. Tagged as 'SprExtend-1_75'
@
text
@d1 1
a1 1
/* (1.75)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.75
d11 2
a12 2
#define Module_MajorVersion             "1.75"
#define Module_Version                  175
d21 3
a23 3
#define Module_FullVersion              "1.75"
#define Module_HelpVersion              "1.75 (21 May 2016)"
#define Module_LibraryVersionInfo       "1:75"
@


1.71
log
@Bug fixes
Detail:
  Remove the unused gray (sic) output colour space support. Remove the patches to set output colour space to RGB, this can be overridden in code per the design intent of the library. Only decode luma for grey output.
  Fix bug rendering test image monorose2x4 - this was caused by the huffman pointer saving not decoding enough MCUs when the source image is monochrome hence an MCU outputs 8x8 rather than hsamp x vsamp pixels. Also removed the setting of insufficient_data in the entropy decoder, this meant that any error at the end of the image (eg. truncated) would cause the rest of the image to not render because JPEGs are stored top down but RISC OS plots them bottom up.
  Fix endless failure to match previously cached JPEG, especially at 16bpp, when the source JPEG doesn't meet the fast colour conversion criteria (eg. not 2x2 subsampling). The flags test was checking the requested flags against the filtered flags, which never matched (because the unmet options get cleared). Now, keep the original flags prior to filtering and compare those on the basis that the conversion decision will be consistent; simply ANDing out those modifiable flags doesn't help because then you can't spot when they genuinely change (eg. a mode change) as the filtered flags determine what format the blitter is expecting back.
  Fix bug causing aborts when the user manually resizes (down) the JPEG workspace DA. The calculation of new_size in jpeg_find_image_dims() had at some point lost the height multiplier on the band buffer, so when auto resizing back up again the buffer was too small to convert a whole band into.
Admin:
  Submission for the JPEG bounty.

Version 1.74. Tagged as 'SprExtend-1_74'
@
text
@d1 1
a1 1
/* (1.74)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.74
d11 2
a12 2
#define Module_MajorVersion             "1.74"
#define Module_Version                  174
d21 3
a23 3
#define Module_FullVersion              "1.74"
#define Module_HelpVersion              "1.74 (21 May 2016)"
#define Module_LibraryVersionInfo       "1:74"
@


1.70
log
@Transcode progressives
Detail:
  Enable the Huffman and arithmetic progressive code paths, these are handled much like arithmetic: undo the entropy part of the encoding process into a dynamic area full of raw coefficients, recompress as a baseline image, copy the image into the JPEG workspace for real time redraw.
Admin:
  Submission for the JPEG bounty.

Version 1.73. Tagged as 'SprExtend-1_73'
@
text
@d1 1
a1 1
/* (1.73)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.73
d11 2
a12 2
#define Module_MajorVersion             "1.73"
#define Module_Version                  173
d21 3
a23 3
#define Module_FullVersion              "1.73"
#define Module_HelpVersion              "1.73 (21 May 2016)"
#define Module_LibraryVersionInfo       "1:73"
@


1.69
log
@Transcode arithmetics
Detail:
  Import of the raw coefficient Huffman entropy compressor elements of the IJG8d library.
  We don't need a full compressor (ala JCompMod) since there's never a need to go all the way through IDCT/upsampling/colour conversion only to reverse the whole process; it's sufficient only to collect up the raw coefficients and recompress them as a baseline JPEG.
  Two extra (temporary) dynamic areas are introduced, once to hold the raw coefficients and the other to act as a scratch file to make the JPEG in. See Doc/JPEGMmgr.
Admin:
  Submission for the JPEG bounty.

Version 1.72. Tagged as 'SprExtend-1_72'
@
text
@d1 1
a1 1
/* (1.72)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.72
d11 2
a12 2
#define Module_MajorVersion             "1.72"
#define Module_Version                  172
d21 3
a23 3
#define Module_FullVersion              "1.72"
#define Module_HelpVersion              "1.72 (21 May 2016)"
#define Module_LibraryVersionInfo       "1:72"
@


1.68
log
@Import of IJG8d library sources
Detail:
  Using the decoder in "example.c" as a starting point, we try to follow that sequence more closely even if in our embedded implementation some of the functions don't do much.
  Uses the default colour backend for 32bpp BGR output for most of the unusual cases.
  The most common 2x2 subsampling case uses a custom merged upsampler and colour converter, with colour output directly in RISC OS format for the respective screen mode.
Admin:
  Submission for the JPEG bounty.

Version 1.71. Tagged as 'SprExtend-1_71'
@
text
@d1 1
a1 1
/* (1.71)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.71
d11 2
a12 2
#define Module_MajorVersion             "1.71"
#define Module_Version                  171
d21 3
a23 3
#define Module_FullVersion              "1.71"
#define Module_HelpVersion              "1.71 (21 May 2016)"
#define Module_LibraryVersionInfo       "1:71"
@


1.67
log
@Rewrite of find_image_dims
Detail:
  Now handles 0xFF padding, previously acceptable encoded images including padding were incorrectly rejected.
  Calculate the workspace for greyscale images correctly, the itype flags included the density (and latterly the SOF) flags, but the workspace calculation assumed it only contained 1 or 3 (for colour components).
  Exit cases now made common and propagate file errors correctly.
  Minor changes to the assembler that uses find_image_dims to handle 4 colour component return (now a 3 bit return value).
  Merge the other M_THING enum from IJG8d so we don't need our own copy.
  Fix signed pointer comparison.
  Use symbolic defines from Global & Interface headers where possible.
  The jdata pointer arg is now treated as const.
Admin:
  Submission for the JPEG bounty.

Version 1.70. Tagged as 'SprExtend-1_70'
@
text
@d1 1
a1 1
/* (1.70)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.70
d9 1
a9 1
#define Module_Date_CMHG                12 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "1.70"
#define Module_Version                  170
d14 1
a14 1
#define Module_Date                     "12 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "12-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "1.70"
#define Module_HelpVersion              "1.70 (12 Mar 2016)"
#define Module_LibraryVersionInfo       "1:70"
@


1.66
log
@Fix corrupt R0 during JPEG plot
The JPEG_PlotScaled SWI (and friends) was pulling R0 at the wrong moment, so corrupting it. This manifested as "Incomplete or corrupt JPEG" when trying to plot a JPEG via the PostScript driver for example (which expects R0 preserved for no error).
Looks like ~5 year old bug, presumably not many people printing JPEGs to PostScript, or all suffering in silence.
Tested on a Risc PC - printed a picture from !Draw to postscript, then PDF'd it.

Version 1.69. Tagged as 'SprExtend-1_69'
@
text
@d1 1
a1 1
/* (1.69)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.69
d9 1
a9 1
#define Module_Date_CMHG                11 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "1.69"
#define Module_Version                  169
d14 1
a14 1
#define Module_Date                     "11 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "1.69"
#define Module_HelpVersion              "1.69 (11 Jan 2016)"
#define Module_LibraryVersionInfo       "1:69"
@


1.65
log
@Fix deleting columns from alpha masked sprites
Detail:
  Sources/SprAdjSize - Fix a load of an unused register clobbering the register that was being used to work out whether a sprite has an alpha mask or not, with the end result being that mask data would be shuffled incorrectly when deleting columns from alpha masked sprites
Admin:
  Tested on Raspberry Pi
  Fixes issue reported on forums with alpha-masked sprite data becoming corrupt when deleting columns in Paint: https://www.riscosopen.org/forum/forums/4/topics/3610


Version 1.68. Tagged as 'SprExtend-1_68'
@
text
@d1 1
a1 1
/* (1.68)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.68
d9 1
a9 1
#define Module_Date_CMHG                26 Sep 2015
d11 2
a12 2
#define Module_MajorVersion             "1.68"
#define Module_Version                  168
d14 1
a14 1
#define Module_Date                     "26 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "26-Sep-15"
d21 3
a23 3
#define Module_FullVersion              "1.68"
#define Module_HelpVersion              "1.68 (26 Sep 2015)"
#define Module_LibraryVersionInfo       "1:68"
@


1.64
log
@Fix orphaned dynamic area
Detail:
  Sources/SprExtend - Only initialise the JPEG workspace pointer + DA number the first time Init is called. This prevents the dynamic area from being orphaned if a JPEG operation is performed during the ROM boot (prior to Service_Reset), as is the case with BootFX on the Raspberry Pi.
Admin:
  Tested on Raspberry Pi
  Task manager now shows one JPEG workspace DA, whereas before there were two.


Version 1.67. Tagged as 'SprExtend-1_67'
@
text
@d1 1
a1 1
/* (1.67)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.67
d9 1
a9 1
#define Module_Date_CMHG                08 Sep 2015
d11 2
a12 2
#define Module_MajorVersion             "1.67"
#define Module_Version                  167
d14 1
a14 1
#define Module_Date                     "08 Sep 2015"
d16 1
a16 1
#define Module_ApplicationDate          "08-Sep-15"
d21 3
a23 3
#define Module_FullVersion              "1.67"
#define Module_HelpVersion              "1.67 (08 Sep 2015)"
#define Module_LibraryVersionInfo       "1:67"
@


1.63
log
@Fix rendering of sprites with garbage in the top bits of each pixel
Detail:
  Sources/PutScaled - Correct the hints in the pixel format table to not flag a component as being at the highest position in the colour if it doesn't actually touch the highest bit in the colour. Otherwise, the "We can merely shift this down into place" optimisation in convert_pixel() may be used, resulting in garbage data from the top bits of the source pixel being placed into the output.
Admin:
  Tested on Iyonix
  32bpp TBGR sprite with garbage in top byte of each pixel, now displays correctly in 15/16bpp TRGB modes
  Issue reported by Rob Sprowson


Version 1.66. Tagged as 'SprExtend-1_66'
@
text
@d1 1
a1 1
/* (1.66)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.66
d9 1
a9 1
#define Module_Date_CMHG                25 Jun 2015
d11 2
a12 2
#define Module_MajorVersion             "1.66"
#define Module_Version                  166
d14 1
a14 1
#define Module_Date                     "25 Jun 2015"
d16 1
a16 1
#define Module_ApplicationDate          "25-Jun-15"
d21 3
a23 3
#define Module_FullVersion              "1.66"
#define Module_HelpVersion              "1.66 (25 Jun 2015)"
#define Module_LibraryVersionInfo       "1:66"
@


1.62
log
@Obscure case null pointer dereference fix
If ColourTrans is too old to have wide translation table support for JPEG plotting, module Init would detect this, but fail to clear the V flag and report oflaoflaofla.

Version 1.65. Tagged as 'SprExtend-1_65'
@
text
@d1 1
a1 1
/* (1.65)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.65
d9 1
a9 1
#define Module_Date_CMHG                30 Jan 2015
d11 2
a12 2
#define Module_MajorVersion             "1.65"
#define Module_Version                  165
d14 1
a14 1
#define Module_Date                     "30 Jan 2015"
d16 1
a16 1
#define Module_ApplicationDate          "30-Jan-15"
d21 3
a23 3
#define Module_FullVersion              "1.65"
#define Module_HelpVersion              "1.65 (30 Jan 2015)"
#define Module_LibraryVersionInfo       "1:65"
@


1.61
log
@Fix for stack imbalance
In revision 4.17 the extra argument in R5 changed the stack frame, but the 'file not found' error exit was missed.
Submission from Rick Murray. Fixes ticket #398.

Version 1.64. Tagged as 'SprExtend-1_64'
@
text
@d1 1
a1 1
/* (1.64)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.64
d9 1
a9 1
#define Module_Date_CMHG                06 Dec 2014
d11 2
a12 2
#define Module_MajorVersion             "1.64"
#define Module_Version                  164
d14 1
a14 1
#define Module_Date                     "06 Dec 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-Dec-14"
d21 3
a23 3
#define Module_FullVersion              "1.64"
#define Module_HelpVersion              "1.64 (06 Dec 2014)"
#define Module_LibraryVersionInfo       "1:64"
@


1.60
log
@Fix a few long-standing mask ECF rendering bugs
Detail:
  c/PutScaled - Fix the tail end of loop_y() to update the ECF pointer when simple_y_scale() is true. Without this, unscaled sprites (which didn't fall through to the kernel routine) would have repeated the same ECF row over the whole image instead of displaying the pattern correctly
  Sources/SprOp, c/PutScaled - Rewrite calculation of initial ECF pointer, both to simplify the code and to fix the calculation of the offset to work with ECF patterns that are 8 rows tall (was previously masking off the top bit of the row number, restricting the pattern to within the first 4 rows). Also the resulting address was off by one row, so even if you had a pattern 4 rows tall then it would still be misaligned when compared to the kernel's vector graphics.
Admin:
  Tested on BB-xM
  OS_SpriteOp 49, 50, 55 and kernel vector graphics now all seem to be in agreement for how ECF patterns should be rendered, in a variety of modes


Version 1.63. Tagged as 'SprExtend-1_63'
@
text
@d1 1
a1 1
/* (1.63)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.63
d9 1
a9 1
#define Module_Date_CMHG                27 Mar 2014
d11 2
a12 2
#define Module_MajorVersion             "1.63"
#define Module_Version                  163
d14 1
a14 1
#define Module_Date                     "27 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "27-Mar-14"
d21 3
a23 3
#define Module_FullVersion              "1.63"
#define Module_HelpVersion              "1.63 (27 Mar 2014)"
#define Module_LibraryVersionInfo       "1:63"
@


1.59
log
@Add OS_SpriteOp 65 implementation. Tweak OS_SpriteOp 52 logic for passing the request on to the kernel.
Detail:
  Sources/SprExtend - GET Hdr:GraphicsV, add debug switch for sprite tiling
  Sources/SprOp - Add OS_SpriteOp 65 (TileSpriteScaled) implementation. Will use OS_Plot to perform hardware-accelerated copies of tiles if no special plot actions are in effect (masking, blending) and the driver indicates copies are fast. For other situations OS_SpriteOp 52 is issued in a simple loop. Also tweak OS_SpriteOp 52 implementation to pass unmasked, true colour sprites to the kernel for rendering - contrary to the old source comment, the kernel is significantly faster at this than SpriteExtend.
Admin:
  Tested on Iyonix, BB-xM
  Requires HdrSrc-2_42


Version 1.62. Tagged as 'SprExtend-1_62'
@
text
@d1 1
a1 1
/* (1.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.62
d9 1
a9 1
#define Module_Date_CMHG                09 Mar 2014
d11 2
a12 2
#define Module_MajorVersion             "1.62"
#define Module_Version                  162
d14 1
a14 1
#define Module_Date                     "09 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "09-Mar-14"
d21 3
a23 3
#define Module_FullVersion              "1.62"
#define Module_HelpVersion              "1.62 (09 Mar 2014)"
#define Module_LibraryVersionInfo       "1:62"
@


1.58
log
@Update to work with new "32K+" colour translation tables
Detail:
  Sources/SWIs, Sources/SprExtend, Sources/SprOp, c/PutScaled, c/sprtrans, h/putscaled - Cache the sprite NColour value in the save_* workspace
  Sources/SprOp - Update preparettr to perform extra validation on 32K-style translation tables (old "32K." or new "32K+"). Although we could potentially accept any format table, to cut down on the number of plotter combinations we currently require that the table matches the format that ColourTrans will create when given the source sprite.
  c/PutScaled, c/sprtrans - Update comments relating to determining input format of TTRType_32K tables
Admin:
  Tested on BB-xM
  Requires Colours-1_89


Version 1.61. Tagged as 'SprExtend-1_61'
@
text
@d1 1
a1 1
/* (1.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.61
d9 1
a9 1
#define Module_Date_CMHG                04 Mar 2014
d11 2
a12 2
#define Module_MajorVersion             "1.61"
#define Module_Version                  161
d14 1
a14 1
#define Module_Date                     "04 Mar 2014"
d16 1
a16 1
#define Module_ApplicationDate          "04-Mar-14"
d21 3
a23 3
#define Module_FullVersion              "1.61"
#define Module_HelpVersion              "1.61 (04 Mar 2014)"
#define Module_LibraryVersionInfo       "1:61"
@


1.57
log
@Fix some sprite rendering issues. Add a new test app.
Detail:
  Bug fixes:
  - Sources/SprOp: Fixed a bug with PlotMask of old-format sprites not working correctly if the sprite is off the left edge of the screen. Fixed Log2bpp/Log2bpc confusion when plotting to double-pixel modes, caused by double pixel bodge being disabled.
  - Sources/SprTrans: Fixed transformed plotting of sprites with lefthand wastage drawing the sprite offset if a transformation matrix is used
  - c/PutScaled: Fixed another double pixel bodge related bug, when plotting double pixel sprites at certain offsets and with the two-at-a-time plotting code
  Test code:
  - Test/c/bigtest: A fairly comprehensive test app that generates lots of random sprites in every supported mode, and plots them using all APIs and options into all supported destination modes. Output is redirected to sprites (so the capabilities of the host video hardware are irrelevant), and checked against a model of what the expected output should look like. Also features some JPEG tests. A fast computer is recommended when running the tests!
  - Test/mkbigtest,fd7: Helper script to build bigtest
  - Test/bigtest2,ffb: Helper BASIC program to allow easy re-testing of failure cases
  - Test/JPEGs/*: Test JPEGs and reference sprites which are used by the JPEG test. JPEGs chosen to exercise all the output formats the JPEG code supports.
Admin:
  Tested on BB-xM


Version 1.60. Tagged as 'SprExtend-1_60'
@
text
@d1 1
a1 1
/* (1.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.60
d9 1
a9 1
#define Module_Date_CMHG                25 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "1.60"
#define Module_Version                  160
d14 1
a14 1
#define Module_Date                     "25 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "25-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "1.60"
#define Module_HelpVersion              "1.60 (25 Oct 2013)"
#define Module_LibraryVersionInfo       "1:60"
@


1.56
log
@Fix plots of Y-scaled masks
Detail:
  c/PutScaled - Update r_pixel so that it's available in the Y-loop bank if a Y-scaled mask is being drawn. In this case r_pixel is used as a temp register to help update the ECF pointer.
Admin:
  Tested on BB-xM
  Fixes issue reported on forums with !Wget application sprite not rendering when dragging-and-dropping it via the filer:
  https://www.riscosopen.org/forum/forums/4/topics/2141


Version 1.59. Tagged as 'SprExtend-1_59'
@
text
@d1 1
a1 1
/* (1.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.59
d9 1
a9 1
#define Module_Date_CMHG                14 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "1.59"
#define Module_Version                  159
d14 1
a14 1
#define Module_Date                     "14 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "14-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "1.59"
#define Module_HelpVersion              "1.59 (14 Oct 2013)"
#define Module_LibraryVersionInfo       "1:59"
@


1.55
log
@OS_SpriteOp 38 fixes & improvements
Detail:
  Sources/SprOp:
  - OS_SpriteOp 38 implementation improved so that it will (almost) always attempt to simplify the sprite mode word (even if not performing any transformation on the data)
  - Also fixed/improved it to evaluate bit 8 of R3 with respect to the output data, not the input. So reducing from 8bpp to 1bpp with bit 8 set will now cause the mask to be discarded if all the source pixels were above the cutoff, instead of the old behaviour which would have only discarded the mask if all source pixels were 255.
  - Fixed bug in ExamineAlpha which meant that the 8bpp mask flag was always being cleared - resulting in problems for most conversions (or if the mask was to be left intact)
Admin:
  Tested on BB-xM


Version 1.58. Tagged as 'SprExtend-1_58'
@
text
@d1 1
a1 1
/* (1.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.58
d9 1
a9 1
#define Module_Date_CMHG                13 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "1.58"
#define Module_Version                  158
d14 1
a14 1
#define Module_Date                     "13 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "1.58"
#define Module_HelpVersion              "1.58 (13 Oct 2013)"
#define Module_LibraryVersionInfo       "1:58"
@


1.54
log
@Add OS_SpriteOp 38 (CreateRemoveAlpha) implementation. Fix FindMaskWidth.
Detail:
  Sources/SprOp:
  - Implemented OS_SpriteOp 38. For RISC OS 3.5 sprite types it's effectively the same as ROL's version, allowing conversion to/from alpha masks.
  - When given a sprite with a RISC OS 5 alpha channel, it will use that as the source of the alpha/mask data, allowing RISC OS 5 alpha channels to be converted to RISC OS 3.5 1bpp masks or Select alpha masks (including converting to a RISC OS 3.5 mode word where possible)
  - An extra flag (bit 30) has also been added; settings bits 30 & 31 will attempt to convert any existing 1bpp/8bpp mask to a RISC OS 5 alpha channel (or create a default alpha channel if the sprite has no mask). The conversion will fail if the colour depth is such that no alpha channel is possible.
  - Also fixed regression in FindMaskWidth; when converting from the Kernel version it looks like I missed a couple of lines, and all RISC OS 3.5/RISC OS 5 type mode words would have handled incorrectly
  Resources/UK/Messages:
  - Add InvalidSpriteMode error message, for use by OS_SpriteOp 38
Admin:
  Tested on BB-xM converting various sprites & masks to/from the different formats


Version 1.57. Tagged as 'SprExtend-1_57'
@
text
@d1 1
a1 1
/* (1.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.57
d11 2
a12 2
#define Module_MajorVersion             "1.57"
#define Module_Version                  157
d21 3
a23 3
#define Module_FullVersion              "1.57"
#define Module_HelpVersion              "1.57 (13 Oct 2013)"
#define Module_LibraryVersionInfo       "1:57"
@


1.53
log
@Fix rendering of alpha masked sprites when left edge is obscured
Detail:
  Sources/SprOp - Fixed the input address/offset calculation in Go_PutSpriteScaled to store the mask width (in bits) seperately from the image width (in pixels), to avoid image width being incorrectly multiplied by 8 when an alpha masked sprite is encountered
Admin:
  Tested on BB-xM
  Fixes issue reported on forums with alpha-masked netsurf icons rendering incorrectly:
  https://www.riscosopen.org/forum/forums/3/topics/309?page=4#posts-25995


Version 1.56. Tagged as 'SprExtend-1_56'
@
text
@d1 1
a1 1
/* (1.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.56
d9 1
a9 1
#define Module_Date_CMHG                07 Oct 2013
d11 2
a12 2
#define Module_MajorVersion             "1.56"
#define Module_Version                  156
d14 1
a14 1
#define Module_Date                     "07 Oct 2013"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-13"
d21 3
a23 3
#define Module_FullVersion              "1.56"
#define Module_HelpVersion              "1.56 (07 Oct 2013)"
#define Module_LibraryVersionInfo       "1:56"
@


1.52
log
@Add support for blended sprite & JPEG rendering - alpha masks, alpha channels, and translucency
Detail:
  This big set of changes adds support for the following user-facing APIs, as per ROL's specs:
  - OS_SpriteOp 52 (PutSpriteScaled) colour mapping, translucency blending, and alpha mask/alpha channel blending
  - OS_SpriteOp 56 (PutSpriteTransformed) colour mapping, translucency blending, and alpha mask/alpha channel blending
  - JPEG_Plot[File]Scaled colourmapping & translucency blending
  - JPEG_Plot[File]Transformed colourmapping & translucency blending
  Sources/CFSI-JPEG, Sources/PutScaled:
  - Added exit_oserror exit routine for use by C code.
  - For SpriteExtend this allows the C code to cause OS_SpriteOp to exit with a given OS error block.
  - For CFSI-JPEG the error block is returned and ERROR_FATAL is returned to ChangeFSI.
  Sources/CSupport:
  - Add definitions for some error codes (matches existing definitions from h/commondefs)
  Sources/PutScaled:
  - Stripped out code to look for identity translation tables; now handled by preparettr routine in Sources/SprOp
  Sources/SWIs, Hdr/SprExtend:
  - JPEG SWIs updated to add support for alpha-blended and colour mapped JPEG rendering, following ROL's APIs
  Sources/SprExtend:
  - Stripped out lots of old build flags which haven't been touched in years.
  - Strip out assembler SprTrans code generator.
  - Add new definitions needed for blending & colour mapping.
  Sources/SprOp:
  - Updated PutScaled frontend to deal with blending and colour mapping.
  - Disabled code which was bodging coordinates when dealing with double-pixel modes - it seems to cause a few issues, and the code generator mostly had proper double-pixel support anyway.
  - Translation table verification and fiddling code rewritten and consolidated into the preparettr routine. C code is now explicitly told what table type is in use and whether it can safely be ignored in favour of using the sprite palette.
  - Removed code from CheckSpriteArea which was deliberately throwing an error upon seeing alpha-masked sprites; I think the bug that was hiding has been fixed now
  Sources/SprTrans
  - Removed the assembler version of the code generator.
  - Updated to add support for blending and colour mapping
  c/PutScaled:
  - Old test code removed.
  - Updated to add support for blending & colour mapping
  - Assorted bugs fixed.
  - A few extra architecture-specific optimisations added.
  - Some workspace setup code moved to c/asmcore to allow sharing with SprTrans.
  c/asmcore:
  - Register allocation code rewritten. Instead of allocating on a first-come, first-served basis, the code now builds a list of which logical registers are needed (and which 'banks' they fall into) and then attempts to allocate them in a more intelligent manner. It still has some failings (e.g. reusing R12 as a general purpose register is currently impossible) but it's a lot more flexible and reliable than the old code.
  - Core pixel transformation code updated to add support for blending & colour mapping
  - Added some extra architecture-specific optimisations
  c/rojpeg:
  - JPEG option handling updated to avoid trashing any colour mapping descriptor that may have been passed in
  c/sprtrans:
  - Updated to add support for blending & colour mapping
  c/tracing:
  - Debug assert messages now show filename as well as line number
  h/commondefs:
  - Removed old #define's that related to old assembler switches.
  h/putscaled:
  - Workspace definition updated to match assembler version.
  - SprTrans stack workspace structure moved here from c/sprtrans
Admin:
  Tested on BB-xM plotting all major sprite & JPEG types into all modes with all major options


Version 1.55. Tagged as 'SprExtend-1_55'
@
text
@d1 1
a1 1
/* (1.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.55
d11 2
a12 2
#define Module_MajorVersion             "1.55"
#define Module_Version                  155
d21 3
a23 3
#define Module_FullVersion              "1.55"
#define Module_HelpVersion              "1.55 (07 Oct 2013)"
#define Module_LibraryVersionInfo       "1:55"
@


1.51
log
@Fix crash when directly producing 16bpp output from JPEGs
Detail:
  c/rojpeg - The init_workspace() function called from jpeg_scan_file() was trashing the YUV -> 16bpp decode function pointer that had been set earlier, causing a nice crash if 16bpp output was actually being used. Now fixed to preserve the pointer when resetting workspace.
Admin:
  Tested on BB-xM
  Fixes issue reported on forums with Phoenix and JPEG viewers crashing in 16bpp modes:
  https://www.riscosopen.org/forum/forums/4/topics/2094


Version 1.54. Tagged as 'SprExtend-1_54'
@
text
@d1 1
a1 1
/* (1.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.54
d9 1
a9 1
#define Module_Date_CMHG                11 Sep 2013
d11 2
a12 2
#define Module_MajorVersion             "1.54"
#define Module_Version                  154
d14 1
a14 1
#define Module_Date                     "11 Sep 2013"
d16 1
a16 1
#define Module_ApplicationDate          "11-Sep-13"
d21 3
a23 3
#define Module_FullVersion              "1.54"
#define Module_HelpVersion              "1.54 (11 Sep 2013)"
#define Module_LibraryVersionInfo       "1:54"
@


1.50
log
@Make SpriteReason_CheckSpriteArea fault alpha masks
Detail:
  Sources/SprOp - CheckSpriteArea now faults any sprite area containing alpha mask sprites. This is probably the best approach for us to take until they're fully supported.
Admin:
  Tested in Iyonix ROM softload
  Fixes stripey netsurf icon, should hopefully fix reported crashes too.


Version 1.53. Tagged as 'SprExtend-1_53'
@
text
@d1 1
a1 1
/* (1.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.53
d9 1
a9 1
#define Module_Date_CMHG                11 Aug 2013
d11 2
a12 2
#define Module_MajorVersion             "1.53"
#define Module_Version                  153
d14 1
a14 1
#define Module_Date                     "11 Aug 2013"
d16 1
a16 1
#define Module_ApplicationDate          "11-Aug-13"
d21 3
a23 3
#define Module_FullVersion              "1.53"
#define Module_HelpVersion              "1.53 (11 Aug 2013)"
#define Module_LibraryVersionInfo       "1:53"
@


1.49
log
@Add support for new sprite types & screen modes
Detail:
  Makefile - Updated to fix a couple of dependency issues and to make c/asmcore the main C file, not c/putscaled
  Sources/PutScaled - Add a utility routine that's used by the C code to get information about pixel formats
  Sources/SprAdjSize - Add support for wide masks & RISC OS 5 style sprite mode words
  Sources/SprExtend - Tidy up workspace by removing lots of unused bits and moving other bits within sight of the C code. Add flag to control whether C or assembler version of SprTrans is used. Query kernel for ECFYOffset/ECHShift locations instead of using hardcoded values in putscaled code. Add fix for garbage debug strings in softloaded debug versions of the module.
  Sources/SprOp - Add support for wide masks & RISC OS 5 style sprite mode words. Update makepalette16bpp to cope with all the new 16bpp modes. Flag_* -> ModeFlag_* renaming. Move some translation table handling code into a new routine, 'preparettr'. Update checktrans/converttrans to deal with new pixel formats.
  Sources/SprTrans - If the C version of SprTrans is enabled, disable all of these assembler bits except for the outer loop which steps over each row of the screen
  Sources/jdcolor - Updated to deal with new pixel formats. 16bpp conversion code split off into new file, Sources/jdcolor16.
  Sources/jdcolor16 - New file containing the guts of the YUV -> 16bpp conversion code. Gets included multiple times with different options to generate the different conversion routines (code is too big for a macro).
  c/asmcore - New file containing lots of common code ripped out of c/PutScaled - e.g. workspace definition, main functions for register assignment & instruction generation, and code for pixel format conversion. Pixel format conversion code rewritten to cope with new pixel formats, and code buffer key word generation rewritten to fix a couple of bugs (e.g. some issues with dithering options were observed)
  c/PutScaled - Ripped out lots of code that's now in c/asmcore. Now just deals with things that are PutScaled-specific, e.g. main plotter loop containing pixel read/write code. Code extended to cope with new pixel formats
  c/rojpeg, h/jinclude, h/jpegdata - Code extended to cope with new 16bpp conversion routines
  c/sprtrans - New C implementation of the core per-row transformed sprite plotting code generator. Allows reuse of the extensive pixel conversion code in c/asmcore, and allows for better code generation than the assembler original.
  h/putscaled - Worksapce definition updated to match assembler version
Admin:
  Tested on BB-xM, plotting lots of different sprites in lots of different modes
  Plotting of wide mask sprites not supported yet
  C version of YUV -> 16bpp code currently only deals with traditional &BGR 555 pixel format - code is aware of this and will do conversion to desired format if applicable (although quality may be reduced)
  Part of an implementation of the Extended Framebuffer Format spec:
  http://www.riscosopen.org/wiki/documentation/show/Extended%20Framebuffer%20Format%20Specification


Version 1.52. Tagged as 'SprExtend-1_52'
@
text
@d1 1
a1 1
/* (1.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.52
d9 1
a9 1
#define Module_Date_CMHG                06 Aug 2013
d11 2
a12 2
#define Module_MajorVersion             "1.52"
#define Module_Version                  152
d14 1
a14 1
#define Module_Date                     "06 Aug 2013"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-13"
d21 3
a23 3
#define Module_FullVersion              "1.52"
#define Module_HelpVersion              "1.52 (06 Aug 2013)"
#define Module_LibraryVersionInfo       "1:52"
@


1.48
log
@Add support for self registered resources (standalone)
* Listen for ResourceFS starting service call
* De/Register files appropriately
* Refactor makefile to have two possible install targets
* Simplify the ColourTrans RMEnsure

Version 1.51. Tagged as 'SprExtend-1_51'
@
text
@d1 1
a1 1
/* (1.51)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.51
d9 1
a9 1
#define Module_Date_CMHG                10 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "1.51"
#define Module_Version                  151
d14 1
a14 1
#define Module_Date                     "10 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "1.51"
#define Module_HelpVersion              "1.51 (10 Aug 2012)"
#define Module_LibraryVersionInfo       "1:51"
@


1.47
log
@Adopt colour conversions from MigrateIJG8b branch
Now for every colour conversion there is a corresponding C function, allowing swapping between them for test purposes.
Here, 'ASMCOLOR' is selected and the C functions not even referenced in the makefile, see branch for use.
Permits use of USAT, for a small 1.5% speedup and smaller code.
Some other typedefs and comment shuffling copied over - should be harmless.

Version 1.50. Tagged as 'SprExtend-1_50'
@
text
@d1 1
a1 1
/* (1.50)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.50
d9 1
a9 1
#define Module_Date_CMHG                28 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "1.50"
#define Module_Version                  150
d14 1
a14 1
#define Module_Date                     "28 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "28-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "1.50"
#define Module_HelpVersion              "1.50 (28 Jul 2012)"
#define Module_LibraryVersionInfo       "1:50"
@


1.46
log
@Fix for append SpriteOp producing invalid sprite areas.
Detective work from Martin Avison, now correctly joins the following combinations
* New format + New format (no mask) H or V
* Old format + Old format (no mask) H or V
* New format + New format (masked) H or V
* Old format + Old format (masked) H or V

Version 1.49. Tagged as 'SprExtend-1_49'
@
text
@d1 1
a1 1
/* (1.49)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.49
d9 1
a9 1
#define Module_Date_CMHG                22 Apr 2012
d11 2
a12 2
#define Module_MajorVersion             "1.49"
#define Module_Version                  149
d14 1
a14 1
#define Module_Date                     "22 Apr 2012"
d16 1
a16 1
#define Module_ApplicationDate          "22-Apr-12"
d21 3
a23 3
#define Module_FullVersion              "1.49"
#define Module_HelpVersion              "1.49 (22 Apr 2012)"
#define Module_LibraryVersionInfo       "1:49"
@


1.45
log
@Makefile fixes.

Version 1.48. Tagged as 'SprExtend-1_48'
@
text
@d1 1
a1 1
/* (1.48)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.48
d9 1
a9 1
#define Module_Date_CMHG                14 Jan 2012
d11 2
a12 2
#define Module_MajorVersion             "1.48"
#define Module_Version                  148
d14 1
a14 1
#define Module_Date                     "14 Jan 2012"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jan-12"
d21 3
a23 3
#define Module_FullVersion              "1.48"
#define Module_HelpVersion              "1.48 (14 Jan 2012)"
#define Module_LibraryVersionInfo       "1:48"
@


1.44
log
@Fix up some warnings from the assembler.
Transformed sprites tested briefly & still work.

Version 1.47. Tagged as 'SprExtend-1_47'
@
text
@d1 1
a1 1
/* (1.47)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.47
d9 1
a9 1
#define Module_Date_CMHG                03 Oct 2011
d11 2
a12 2
#define Module_MajorVersion             "1.47"
#define Module_Version                  147
d14 1
a14 1
#define Module_Date                     "03 Oct 2011"
d16 1
a16 1
#define Module_ApplicationDate          "03-Oct-11"
d21 3
a23 3
#define Module_FullVersion              "1.47"
#define Module_HelpVersion              "1.47 (03 Oct 2011)"
#define Module_LibraryVersionInfo       "1:47"
@


1.43
log
@Update to work with zero page relocation
Detail:
  Sources/SprExtend - Try using OS_ReadSysInfo 6 to get ECF block addresses before falling back on legacy addresses. Store pointers in module workspace for speedy access.
  Sources/SprOp, Sources/SprTrans - Use workspace ECF block pointers
  c/rojpeg - Fix null pointer access (actually an unused variable)
Admin:
  Tested on rev A2 BB-xM


Version 1.46. Tagged as 'SprExtend-1_46'
@
text
@d1 1
a1 1
/* (1.46)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.46
d9 1
a9 1
#define Module_Date_CMHG                05 Aug 2011
d11 2
a12 2
#define Module_MajorVersion             "1.46"
#define Module_Version                  146
d14 1
a14 1
#define Module_Date                     "05 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "05-Aug-11"
d21 3
a23 3
#define Module_FullVersion              "1.46"
#define Module_HelpVersion              "1.46 (05 Aug 2011)"
#define Module_LibraryVersionInfo       "1:46"
@


1.42
log
@Revise strictness of sprite area checking.
Those SpriteOps that modify the sprite input now
* R0=&0-&FF R1=don't care R2=mustn't be too low down
* R0=&100-&1FF R1=must be valid R2=mustn't be too low down
* R0=&200-&2FF R1=must be valid R2=must be valid
Those SpriteOps that just display but don't modify the input sprite
* R0=&0-&FF R1=don't care R2=mustn't be too low down
* R0=&100-&1FF R1=must be valid R2=mustn't be too low down
* R0=&200-&2FF R1=don't care R2=must be valid
In this context, valid means word aligned and not too low down.
In this context, too low down is anything below &100.

Version 1.45. Tagged as 'SprExtend-1_45'
@
text
@d1 1
a1 1
/* (1.45)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.45
d9 1
a9 1
#define Module_Date_CMHG                20 Jul 2011
d11 2
a12 2
#define Module_MajorVersion             "1.45"
#define Module_Version                  145
d14 1
a14 1
#define Module_Date                     "20 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jul-11"
d21 3
a23 3
#define Module_FullVersion              "1.45"
#define Module_HelpVersion              "1.45 (20 Jul 2011)"
#define Module_LibraryVersionInfo       "1:45"
@


1.41
log
@Small optimisation to mask twiddling in 24bpp case, the code was emitting 3 instructions because it didn't use LSR#32 which is a documented instruction.
Changed an unaligned load in the 16bpp case to use LDRH when possible.
Lined up some stuff, changed R15 to PC.

Version 1.44. Tagged as 'SprExtend-1_44'
@
text
@d1 1
a1 1
/* (1.44)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.44
d9 1
a9 1
#define Module_Date_CMHG                10 Jul 2011
d11 2
a12 2
#define Module_MajorVersion             "1.44"
#define Module_Version                  144
d14 1
a14 1
#define Module_Date                     "10 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "10-Jul-11"
d21 3
a23 3
#define Module_FullVersion              "1.44"
#define Module_HelpVersion              "1.44 (10 Jul 2011)"
#define Module_LibraryVersionInfo       "1:44"
@


1.40
log
@Make SpriteExtend perform sanity checks on sprite/area pointers
Detail:
  Sources/SprExtend - Added new CheckAlignedAndSensible macro to make it easy to check pointers. Pointers which aren't word aligned or are less than 256 are considered bad.
  Sources/SprOp - Update findsprite, getspritename and getspriteaddr to check sprite/area/name pointers for validity. Sprite names are the only ones that are allowed to not be word aligned.
Admin:
  Tested on rev A2 BB-xM.


Version 1.43. Tagged as 'SprExtend-1_43'
@
text
@d1 1
a1 1
/* (1.43)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.43
d9 1
a9 1
#define Module_Date_CMHG                25 Jun 2011
d11 2
a12 2
#define Module_MajorVersion             "1.43"
#define Module_Version                  143
d14 1
a14 1
#define Module_Date                     "25 Jun 2011"
d16 1
a16 1
#define Module_ApplicationDate          "25-Jun-11"
d21 3
a23 3
#define Module_FullVersion              "1.43"
#define Module_HelpVersion              "1.43 (25 Jun 2011)"
#define Module_LibraryVersionInfo       "1:43"
@


1.39
log
@  Fixed set active coord from mask in OS_SpriteOp 36 (set pointer shape)
Detail:
  Page 33 of the RiscOS 3 volume 3 Programmers manual states that the
  active point can be set from the sprite's mask. This was never
  implemented but it is very useful as it means that the active point
  is no longer hardwired into programs but dependant on the sprite
  used.

  The obvious problem is ptr_write. At present the active point is at
  the top left. If you run !ptr_test and run the pointer over the
  'standard active point position' writable icons from the bottom you
  will see that the pointer changes to an I with its top at the bottom
  of the writable icon. If you move the pointer until the top of the I
  is just inside the upper writable icon of the 2 and click, the focus
  goes into the upper writable - not what you'd expect.

  Similarly it's difficult to place the caret between the 2 lls in
  will. The bottom two icons shows the difference with the active
  point in the correct position in the I beam.

  You could change the wimp to put the caret in the correct position
  like I have in the bottom 2 writables of !Ptr_test however this
  would have the wrong active point position if the mode had
  rectangular y pixels and it wouldn't fix all instances where
  programmers had set ther own values.

  It also means that themes can change the pointer active point as
  well as the shape.

  The routine added copes with old and new type sprites of any bit depth though
  OS_SpriteOp 36 has a 8bit limit.
Admin:
  Tested on Iyonix 5.17.
Author:
  Colin Granville

Version 1.42. Tagged as 'SprExtend-1_42'
@
text
@d1 1
a1 1
/* (1.42)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.42
d9 1
a9 1
#define Module_Date_CMHG                14 Apr 2011
d11 2
a12 2
#define Module_MajorVersion             "1.42"
#define Module_Version                  142
d14 1
a14 1
#define Module_Date                     "14 Apr 2011"
d16 1
a16 1
#define Module_ApplicationDate          "14-Apr-11"
d21 3
a23 3
#define Module_FullVersion              "1.42"
#define Module_HelpVersion              "1.42 (14 Apr 2011)"
#define Module_LibraryVersionInfo       "1:42"
@


1.38
log
@Made safe to build with newer ARM instruction support in objasm.

Replaced use of LSL (et al) macros with the new myLSL macros to avoid
potential clash with new pseudo-opcodes

Admin: requires HdrSrc 1.79 or later.

Version 1.41. Tagged as 'SprExtend-1_41'
@
text
@d1 1
a1 1
/* (1.41)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.41
d9 1
a9 1
#define Module_Date_CMHG                14 Mar 2011
d11 2
a12 2
#define Module_MajorVersion             "1.41"
#define Module_Version                  141
d14 1
a14 1
#define Module_Date                     "14 Mar 2011"
d16 1
a16 1
#define Module_ApplicationDate          "14-Mar-11"
d21 3
a23 3
#define Module_FullVersion              "1.41"
#define Module_HelpVersion              "1.41 (14 Mar 2011)"
#define Module_LibraryVersionInfo       "1:41"
@


1.37
log
@Fix rendering of monochrome JPEGs at a scale of less than 1/6.
The normalisation was wrong, leading to very dark images.
There was no code to deal with the 8bpp grey modes, leading to corruption.
This is the monochrome version of the same bug fixed for colour in 1.32.

Version 1.40. Tagged as 'SprExtend-1_40'
@
text
@d1 1
a1 1
/* (1.40)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.40
d9 1
a9 1
#define Module_Date_CMHG                13 Feb 2011
d11 2
a12 2
#define Module_MajorVersion             "1.40"
#define Module_Version                  140
d14 1
a14 1
#define Module_Date                     "13 Feb 2011"
d16 1
a16 1
#define Module_ApplicationDate          "13-Feb-11"
d21 3
a23 3
#define Module_FullVersion              "1.40"
#define Module_HelpVersion              "1.40 (13 Feb 2011)"
#define Module_LibraryVersionInfo       "1:40"
@


1.36
log
@Fix bug in JPEG vetting, tag 0xC4 was being taken as an SOF and quitting the tag scanning loop, which in turn rejected the JPEG as 0xC4 isn't a supported SOF type. In fact, it's not even an SOF type at all. See new IS_AN_SOF macro.
Fix bug leaving JPEG file handle open when unknown SOF or entropy encoding encountered (spotted testing the above).

Version 1.39. Tagged as 'SprExtend-1_39'
@
text
@d1 1
a1 1
/* (1.39)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.39
d9 1
a9 1
#define Module_Date_CMHG                11 Jan 2011
d11 2
a12 2
#define Module_MajorVersion             "1.39"
#define Module_Version                  139
d14 1
a14 1
#define Module_Date                     "11 Jan 2011"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jan-11"
d21 3
a23 3
#define Module_FullVersion              "1.39"
#define Module_HelpVersion              "1.39 (11 Jan 2011)"
#define Module_LibraryVersionInfo       "1:39"
@


1.35
log
@Retire unused IJG version 4 files.
Fold RISC OS specific colour conversion routines into rojpeg.
Remove jcconv, this also highlighted there were some more unused functions.
Should make move to IJG version 8 even easier.

Version 1.38. Tagged as 'SprExtend-1_38'
@
text
@d1 1
a1 1
/* (1.38)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.38
d9 1
a9 1
#define Module_Date_CMHG                23 Dec 2010
d11 2
a12 2
#define Module_MajorVersion             "1.38"
#define Module_Version                  138
d14 1
a14 1
#define Module_Date                     "23 Dec 2010"
d16 1
a16 1
#define Module_ApplicationDate          "23-Dec-10"
d21 3
a23 3
#define Module_FullVersion              "1.38"
#define Module_HelpVersion              "1.38 (23 Dec 2010)"
#define Module_LibraryVersionInfo       "1:38"
@


1.35.2.1
log
@Bulk search & replace to use 8b headers.
Highlighted that last_dc_val should have been a JCOEF * not an int *.
Still works - amazing!

Version 1.38, 1.35.2.1. Tagged as 'SprExtend-1_38-1_35_2_1'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.1
#define Module_Date_CMHG                04 Jan 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.1"
#define Module_Date                     "04 Jan 2011"
d16 1
a16 1
#define Module_ApplicationDate          "04-Jan-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.1)"
#define Module_HelpVersion              "1.38 (04 Jan 2011) 1.35.2.1"
@


1.35.2.2
log
@Missed the header files out of the last commit. Try again.

Version 1.38, 1.35.2.2. Tagged as 'SprExtend-1_38-1_35_2_2'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.35.2.2
d13 1
a13 1
#define Module_MinorVersion             "1.35.2.2"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.2)"
#define Module_HelpVersion              "1.38 (04 Jan 2011) 1.35.2.2"
@


1.35.2.3
log
@Reinstate C code version of jdhuff.
In huff_decode_blocks the block pointer wasn't being incremented, as it was in the assembler.
Useful for speed comparisons.

Version 1.38, 1.35.2.3. Tagged as 'SprExtend-1_38-1_35_2_3'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.35.2.3
d13 1
a13 1
#define Module_MinorVersion             "1.35.2.3"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.3)"
#define Module_HelpVersion              "1.38 (04 Jan 2011) 1.35.2.3"
@


1.35.2.4
log
@Reinstate jrevdct4 option to use C code IDCT (switch "ASMIDCT").
Name inverse DCT to match IJG 8b integer fast implementation.
Remove -DEMBED option and collapse switches.
Useful for speed comparisons.

Version 1.38, 1.35.2.4. Tagged as 'SprExtend-1_38-1_35_2_4'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.35.2.4
d13 1
a13 1
#define Module_MinorVersion             "1.35.2.4"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.4)"
#define Module_HelpVersion              "1.38 (04 Jan 2011) 1.35.2.4"
@


1.35.2.5
log
@Fix CFSIjpeg due to earlier rename of jidctfst
Rename remaining files to match IJG 8b.

Version 1.38, 1.35.2.5. Tagged as 'SprExtend-1_38-1_35_2_5'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.35.2.5
d13 1
a13 1
#define Module_MinorVersion             "1.35.2.5"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.5)"
#define Module_HelpVersion              "1.38 (04 Jan 2011) 1.35.2.5"
@


1.35.2.6
log
@Create assembler equivalents of C colour conversions, approx 10% speed up.
Add new switch ASMCOLOR to select which to use, C or assembler.
Remove FILE_ exit trace concept, just use __FILE__ instead in exit_erl.
Add some comments to exit_erl and friends.
A few bits of cinfo setup moved into start_pass_huff_decoder() or eliminated.
Bumped up the precision of SCALE_BITS in the C colour handling so FIX() uses more bits of an int.
Deleted the unused remenants of light dithering in the 8bpp colour converter - saves a few cycles.
colour_convert_8 and colour_convert_16 no longer save entry registers the C compiler doesn't care about.
Update genyuvtabs to EXPORT the table bases.
Split out the compilation of IJG files as separate objects in the make file, rather than including them from within rojpeg, which is itself included from putscaled.

Version 1.38, 1.35.2.6. Tagged as 'SprExtend-1_38-1_35_2_6'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.6
#define Module_Date_CMHG                09 Jan 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.6"
#define Module_Date                     "09 Jan 2011"
d16 1
a16 1
#define Module_ApplicationDate          "09-Jan-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.6)"
#define Module_HelpVersion              "1.38 (09 Jan 2011) 1.35.2.6"
@


1.35.2.7
log
@For completeness, implement the 2x2->8bpp and 2x2->16bpp colour conversions in C too.
While slower than their assembler equivalents it makes the whacky address generation a bit easier to follow.
Fix MakeFile to not stop when trying to deleted an empty directory.

Version 1.38, 1.35.2.7. Tagged as 'SprExtend-1_38-1_35_2_7'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.35.2.7
d13 1
a13 1
#define Module_MinorVersion             "1.35.2.7"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.7)"
#define Module_HelpVersion              "1.38 (09 Jan 2011) 1.35.2.7"
@


1.35.2.8
log
@Use USAT in 150 occurrences of colour clamping for ARMv6 and later.
Some IDCT renaming.
Shock addition of some documentation on how it all works.
Mirror fix from 1.39 on the trunk.
Debug
 Made DEBUG version compile again, earlier header shuffling was preventing it.
 Replaced the ' _ ' method of variadic macro emulation with more familiar double brackets for tracef().
 Eliminated IFDEBUG macro and just used #ifdef DEBUG/#endif or tracef() directly.
 Don't bother passing the line number and file name to exit() when in the non DEBUG case.

Version 1.38, 1.35.2.8. Tagged as 'SprExtend-1_38-1_35_2_8'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.8
#define Module_Date_CMHG                13 Jan 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.8"
#define Module_Date                     "13 Jan 2011"
d16 1
a16 1
#define Module_ApplicationDate          "13-Jan-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.8)"
#define Module_HelpVersion              "1.38 (13 Jan 2011) 1.35.2.8"
@


1.35.2.9
log
@New jerror.h taken from IJG8b.
Swap to using JERR_ numbers, deleted E_ numbers.
Modify genjhdr to pass some defines to the assembler code, so jdcolor can clarify use of DCTSIZE and DCTSIZE2.
Added chart of possible subsampling ratios to documentation.

Version 1.38, 1.35.2.9. Tagged as 'SprExtend-1_38-1_35_2_9'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.9
#define Module_Date_CMHG                22 Jan 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.9"
#define Module_Date                     "22 Jan 2011"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jan-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.9)"
#define Module_HelpVersion              "1.38 (22 Jan 2011) 1.35.2.9"
@


1.35.2.10
log
@Huffman decode adjusted to accept quantisation tables of 16 or 32 bit values (though use of LDAH macro).
IJG 8b uses UINT16 values now, but there's no measurable speed difference despite one/two extra instructions per AC component.

Version 1.38, 1.35.2.10. Tagged as 'SprExtend-1_38-1_35_2_10'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.35.2.10
d13 1
a13 1
#define Module_MinorVersion             "1.35.2.10"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.10)"
#define Module_HelpVersion              "1.38 (22 Jan 2011) 1.35.2.10"
@


1.35.2.11
log
@Remap return results for CFSI-JPEG to match new cinfo structure.
Tested with a handful of JPEGs and !ChangeFSI.

Version 1.38, 1.35.2.11. Tagged as 'SprExtend-1_38-1_35_2_11'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.11
#define Module_Date_CMHG                29 Jan 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.11"
#define Module_Date                     "29 Jan 2011"
d16 1
a16 1
#define Module_ApplicationDate          "29-Jan-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.11)"
#define Module_HelpVersion              "1.38 (29 Jan 2011) 1.35.2.11"
@


1.35.2.12
log
@Migrate to jdmarker from IJG 8b.
ERREXIT's in jdhuff now use JERR_ numbers (missed earlier because it's switched out by default).

Version 1.38, 1.35.2.12. Tagged as 'SprExtend-1_38-1_35_2_12'
@
text
@d8 1
a8 1
#define Module_MinorVersion_CMHG        1.35.2.12
d13 1
a13 1
#define Module_MinorVersion             "1.35.2.12"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.12)"
#define Module_HelpVersion              "1.38 (29 Jan 2011) 1.35.2.12"
@


1.35.2.13
log
@Reorganise data input.
Fill in INPUT_VARS and INPUT_SYNC so it uses register variables.
Make use of data source manager (cinfo->src).
Calculate bytes_in_buffer when restoring the huffman position.
Swap process_restart() for the one now in jdmarker.

Version 1.38, 1.35.2.13. Tagged as 'SprExtend-1_38-1_35_2_13'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.13
#define Module_Date_CMHG                05 Feb 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.13"
#define Module_Date                     "05 Feb 2011"
d16 1
a16 1
#define Module_ApplicationDate          "05-Feb-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.13)"
#define Module_HelpVersion              "1.38 (05 Feb 2011) 1.35.2.13"
@


1.35.2.14
log
@Abstract entropy decoding.
Currently still only support Huffman, but now agnostic, there are two functions 'decode_mcu()' which does the full DC+AC decode of a full MCU worth of data, and 'skip_mcu()' which just does DC and consumes but discards the AC coefficients.
Apply fix from 1.40 trunk version for monochrome output in a 8bpp greyscale mode.
Restore name of DCTFIX() macro to FIX(), no longer needed now the constituent parts are compiled seperately rather than #included.
Fix CFSIjpeg to assemble even though it doesn't have a module base (the recently added 'relocatefn()' was breaking it).

Version 1.38, 1.35.2.14. Tagged as 'SprExtend-1_38-1_35_2_14'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.14
#define Module_Date_CMHG                15 Feb 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.14"
#define Module_Date                     "15 Feb 2011"
d16 1
a16 1
#define Module_ApplicationDate          "15-Feb-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.14)"
#define Module_HelpVersion              "1.38 (15 Feb 2011) 1.35.2.14"
@


1.35.2.15
log
@Push recent changes on the trunk to the IJG8b branch.
Tested briefly, still works.

Version 1.38, 1.35.2.15. Tagged as 'SprExtend-1_38-1_35_2_15'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.15
#define Module_Date_CMHG                06 Aug 2011
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.15"
#define Module_Date                     "06 Aug 2011"
d16 1
a16 1
#define Module_ApplicationDate          "06-Aug-11"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.15)"
#define Module_HelpVersion              "1.38 (06 Aug 2011) 1.35.2.15"
@


1.35.2.16
log
@Sync with trunk
Sources/SprOp - revision 4.10 copied
Sources/SprTrans - revision 4.16 copied
Sources/jdhuff - revision 4.7 copied
Also:
 DCI changed to instruction mnemonic for objasm 4
 Makefile excess '-c' removed
 Util.mk double inclusion of rules removed

Version 1.38, 1.35.2.16. Tagged as 'SprExtend-1_38-1_35_2_16'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.35.2.16
#define Module_Date_CMHG                28 Jul 2012
d13 2
a14 2
#define Module_MinorVersion             "1.35.2.16"
#define Module_Date                     "28 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "28-Jul-12"
d21 2
a22 2
#define Module_FullVersion              "1.38 (1.35.2.16)"
#define Module_HelpVersion              "1.38 (28 Jul 2012) 1.35.2.16"
@


1.34
log
@Reorganise rojpeg.
Aside from moving blocks around and adding comments, decisions about numcomponents use switch/case statements to allow CMYK support in the future.
Split out (some of the) Huffman decoding to allow arithmetic support in the future.
Moved memcpy() and memset() into CSupport.
Tested in all colour depths with 1x1; 1x2; 2x1; 2x2 sampling & ChangeFSI.
Tighten up check on cinfo being NULL (was previously only checked in the colour decoder, not the monochrome).

Version 1.37. Tagged as 'SprExtend-1_37'
@
text
@d1 1
a1 1
/* (1.37)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.37
d9 1
a9 1
#define Module_Date_CMHG                22 Dec 2010
d11 2
a12 2
#define Module_MajorVersion             "1.37"
#define Module_Version                  137
d14 1
a14 1
#define Module_Date                     "22 Dec 2010"
d16 1
a16 1
#define Module_ApplicationDate          "22-Dec-10"
d21 3
a23 3
#define Module_FullVersion              "1.37"
#define Module_HelpVersion              "1.37 (22 Dec 2010)"
#define Module_LibraryVersionInfo       "1:37"
@


1.33
log
@Obey bit 0 of JPEG_[File]Info flags.
When clear, r2 and r3 are preserved per PRM documentation.
Also BIC'd out bits 7-10 of r0 on return so they can be reused in future, previous version would always have returned &C in those bits.

Version 1.36. Tagged as 'SprExtend-1_36'
@
text
@d1 1
a1 1
/* (1.36)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.36
d9 1
a9 1
#define Module_Date_CMHG                14 Nov 2010
d11 2
a12 2
#define Module_MajorVersion             "1.36"
#define Module_Version                  136
d14 1
a14 1
#define Module_Date                     "14 Nov 2010"
d16 1
a16 1
#define Module_ApplicationDate          "14-Nov-10"
d21 3
a23 3
#define Module_FullVersion              "1.36"
#define Module_HelpVersion              "1.36 (14 Nov 2010)"
#define Module_LibraryVersionInfo       "1:36"
@


1.32
log
@API enhancement and space saving refactoring.
Setting bit 1 of r0 in JPEG_FileInfo and JPEG_Info will now return the SOF type of the JPEG in question in bits 3-6 of the info flags in r0 on exit.
Took this opportunity to refactor find_image_dims to take a structure pointer rather than lots of individual pointers (CFSI-JPEG ammended to match). Untangled the return codes a bit so it is only necessary to inspect r0 on exit from C to determine the outcome. Values of 1 & 2 are translated in the assembler code into more specific error messages than just "Incomplete or corrupt JPEG".
Fix bug where unknown density marker would leave the file open in JPEG_FileInfo.
Don't bother ADRL'ing r1 for error messages that don't have a %0 in them.
Added all the input & output flag definitions to the exported header file so other callers can use them too.
More functionality, fewer bugs, about 200 bytes smaller too.

Version 1.35. Tagged as 'SprExtend-1_35'
@
text
@d1 1
a1 1
/* (1.35)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.35
d11 2
a12 2
#define Module_MajorVersion             "1.35"
#define Module_Version                  135
d21 3
a23 3
#define Module_FullVersion              "1.35"
#define Module_HelpVersion              "1.35 (14 Nov 2010)"
#define Module_LibraryVersionInfo       "1:35"
@


1.31
log
@Fix infinite loop when unrecognised entropy encoding encountered.
In find_image_dims() the while loop is only exited when SOF0 or SOF1 (the two supported ones) is encountered, the other 14 possible combinations got stuck in a loop because OS_GBPB doesn't return an error at EOF.
Check added for OS_GBPB returning nothing, plus an exit when a SOS or EOI tag is hit for the memory only check (it's not possible to know where the end truly is in that case.
jcconv: warning supressed.
SWIs: comment corrected.
Tested with a bogus SOF, now gives an error message instead.

Version 1.34. Tagged as 'SprExtend-1_34'
@
text
@d1 1
a1 1
/* (1.34)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.34
d9 1
a9 1
#define Module_Date_CMHG                06 Nov 2010
d11 2
a12 2
#define Module_MajorVersion             "1.34"
#define Module_Version                  134
d14 1
a14 1
#define Module_Date                     "06 Nov 2010"
d16 1
a16 1
#define Module_ApplicationDate          "06-Nov-10"
d21 3
a23 3
#define Module_FullVersion              "1.34"
#define Module_HelpVersion              "1.34 (06 Nov 2010)"
#define Module_LibraryVersionInfo       "1:34"
@


1.30
log
@Change memory management strategy.
There's no need for the C code to know which pool of memory it's using, so simplify it to just use malloc() and realloc(), the assembler implementation can then select whether the RMA or a dynamic area is in use based on the 'dynamicarea' switch.
Be more careful about area_number when it is zero, since we use that to denote the area is not yet set up but area zero is a valid dynamic area number!
Trim out some unused workspace.
Variable ccompiler_errptr had '# 0' bytes assigned, resulting in writes off the end of the workspace.
Retire DUMPVAL[N]() macro.
Remove M_SOF9 as one of the SOF markers accepted - this is allocated to arithmetic JPEGs which aren't currently supported.
Save a few words by: changing arbitrary constants (eg. safety margins) to be a power of two so they can be register immediates; numerous loads and stores of R12 relative variables changed to not use ADRL; jpeg_fetchroutine similarly simplified.

Version 1.33. Tagged as 'SprExtend-1_33'
@
text
@d1 1
a1 1
/* (1.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.33
d9 1
a9 1
#define Module_Date_CMHG                17 Oct 2010
d11 2
a12 2
#define Module_MajorVersion             "1.33"
#define Module_Version                  133
d14 1
a14 1
#define Module_Date                     "17 Oct 2010"
d16 1
a16 1
#define Module_ApplicationDate          "17-Oct-10"
d21 3
a23 3
#define Module_FullVersion              "1.33"
#define Module_HelpVersion              "1.33 (17 Oct 2010)"
#define Module_LibraryVersionInfo       "1:33"
@


1.29
log
@Paper and fill some JPEG cracks.
The exit_c function was repeatedly being called with the line number argument and error code the wrong way round and since only bits 0-2 of the error code are inspected on exit any fatal exits from the ported JPEG library code would either report the wrong error or fail silently (depending on the line number) - example a 12 bits per sample JPEG would be rendered without fault into a screen full of random memory garbage.
Assembling/compiling with the 'jpeg' switch off didn't work, fixed, and also now zeros out the SWI decode values in the module header.
Moved include of 'yuvtabs.s' into the colour conversion code.
Deleted panic_exit, it did nothing useful but trace a value then exit, so it now just calls exit() like everyone else.
Removed excess call to find_image_dims(), this was needed just to get the workspace requirements when the JPEG had already been sized up by asm_find_image_dims() earlier. Side effect of removing the pilot JPEG code earlier is that this call can now only get to the JPEG code from a JPEG_ SWI. Changed to just pass the workspace requirements into 'c.PutScaled' and save a duplicate scan.
Fatal exits from the assembler huffman decoder now report a sensible error.
Trimmed out all the JPEG assessment code from 'c.PutScaled' and moved it into 'c.rojpeg' so the put scaled is only concerned with putting things scaled.
Sanitised the #includes a bit.
Fixed on last check of wp->save_mode looking at the wrong bits for the mode number.
Resolved all the warning in the genhdr/genyuvtabs/genpalette utilities by casting a bit harder.[A[B
Added new more descriptive error messages to the messages file (not currently used), and made the 'not supported by' ones consistent so the tokeniser might crunch the file a bit more.
In looks_like_jpeg() changed a bitwise to logical or.
Fixed longstanding problem of not being able to render JPEGs at a scale of less than 1/6 in any greyscale mode, because, err, there was no code to do it - only the colour case was checked for. Implemented for 8bpp grey and 32bpp grey (which gets dithered for other lower modes) by just converting the luma channel into an equally weighted RGB value or replicating it for 256 greys.
Tested in all 8 colour depths on a Risc PC using sampling ratios of 1x1; 2x1; 1x2; 2x2 of the IJG test image scaled in !Draw by 0.16.

Version 1.32. Tagged as 'SprExtend-1_32'
@
text
@d1 1
a1 1
/* (1.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.32
d9 1
a9 1
#define Module_Date_CMHG                13 Oct 2010
d11 2
a12 2
#define Module_MajorVersion             "1.32"
#define Module_Version                  132
d14 1
a14 1
#define Module_Date                     "13 Oct 2010"
d16 1
a16 1
#define Module_ApplicationDate          "13-Oct-10"
d21 3
a23 3
#define Module_FullVersion              "1.32"
#define Module_HelpVersion              "1.32 (13 Oct 2010)"
#define Module_LibraryVersionInfo       "1:32"
@


1.28
log
@Get scaled/transformed JPEG widths right
Function asm_get_image_dims returns width in r2, was using r0, so version 1.30 would leave shadows in !Draw. Changed to use r2.

Version 1.31. Tagged as 'SprExtend-1_31'
@
text
@d1 1
a1 1
/* (1.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.31
d9 1
a9 1
#define Module_Date_CMHG                07 Oct 2010
d11 2
a12 2
#define Module_MajorVersion             "1.31"
#define Module_Version                  131
d14 1
a14 1
#define Module_Date                     "07 Oct 2010"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-10"
d21 3
a23 3
#define Module_FullVersion              "1.31"
#define Module_HelpVersion              "1.31 (07 Oct 2010)"
#define Module_LibraryVersionInfo       "1:31"
@


1.27
log
@Remove pilot JPEG code.
During the original development (referred to in the docs as Sprite Extend 2) JPEG data was briefly wrapped inside a sprite file before the JPEG_ swis were introduced. Within SpriteExtend some code still remained to fake a mode 20 sprite header with the JPEG output sized adjusted as though it was 4bpp, then later undo the faking by checking for a mode 20 sprite with is_it_jpeg set.
This version removes all of the code looking out for pilot JPEGs, and rationalises the fake sprite header to just report the true X/Y size.
Fix bug where r4 would be corrupted on exit from JPEG_PlotScaled if an error occurred, and generally rationalised the exit cases a bit more sensibly.
Made the JPEG_ swi despatch a bit more simple to follow.
Corrected a comment in the NSM_bpptable.
Deleted unused 'ecfspace' from the workspace.
Hid the 'macroword' from the C code as it's now an assembler only value.
Cut the initial comments from c/putscaled and placed in Docs.
Cut the debug tracing code (a notable %age) from c/putscaled and placed in tracing support file.
Simplified the entry to putscaled_compiler() now we don't have to look out for pilot format JPEGs within sprites any more.
Sprinkled in some block comments to make navigating the c/putscaled file a bit easier.

Version 1.30. Tagged as 'SprExtend-1_30'
@
text
@d1 1
a1 1
/* (1.30)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.30
d9 1
a9 1
#define Module_Date_CMHG                29 Sep 2010
d11 2
a12 2
#define Module_MajorVersion             "1.30"
#define Module_Version                  130
d14 1
a14 1
#define Module_Date                     "29 Sep 2010"
d16 1
a16 1
#define Module_ApplicationDate          "29-Sep-10"
d21 3
a23 3
#define Module_FullVersion              "1.30"
#define Module_HelpVersion              "1.30 (29 Sep 2010)"
#define Module_LibraryVersionInfo       "1:30"
@


1.26
log
@Reinstate mungeGCOL8to32.
Had erroneously been switched out in version 1.27 clean up, when it is needed. Comment added to denote it's a fall through of the table above it.

Version 1.29. Tagged as 'SprExtend-1_29'
@
text
@d1 1
a1 1
/* (1.29)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.29
d9 1
a9 1
#define Module_Date_CMHG                25 Sep 2010
d11 2
a12 2
#define Module_MajorVersion             "1.29"
#define Module_Version                  129
d14 1
a14 1
#define Module_Date                     "25 Sep 2010"
d16 1
a16 1
#define Module_ApplicationDate          "25-Sep-10"
d21 3
a23 3
#define Module_FullVersion              "1.29"
#define Module_HelpVersion              "1.29 (25 Sep 2010)"
#define Module_LibraryVersionInfo       "1:29"
@


1.25
log
@Remove postprocessing step of C code.
Since 2001 this module has been using objasm, but still using the C compiler to output (via -S) assembly code which is then passed through 'sed' and included via GET into the assembler code.
Changed to compile the C code into object files, and use the linker to patch up the unresolved references - this has required some reordering of the C code to make sure static functions now appear in the object file, and some reordering of the header files to ensure both the module and the CFSI version still compile without conflicts.
Minor fix to 'swiv2', the label was in the wrong place for _swi() though it's not used in this module so didn't affect the _swix() case.
Makefile cut down a bit. Unixify some path names.
Test code moved to 'Test/c' directory.
Tested in both debug and non debug cases via softloaded module. Oddly, it's 4 bytes longer than the previous version.

Version 1.28. Tagged as 'SprExtend-1_28'
@
text
@d1 1
a1 1
/* (1.28)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.28
d11 2
a12 2
#define Module_MajorVersion             "1.28"
#define Module_Version                  128
d21 3
a23 3
#define Module_FullVersion              "1.28"
#define Module_HelpVersion              "1.28 (25 Sep 2010)"
#define Module_LibraryVersionInfo       "1:28"
@


1.24
log
@Panel beat with hammer of sanity.
Deleted c.SpriteOp to untangle it from c.rojpeg to draw boundary around JPEG code.
Moved all the OS_SpriteOp code out of SprExtend into a new file SprOp, so the main file just contains the usual macros/includes/module heading.
Added new 'debugso' switch for debugging SpriteOps, was previously using 'debuggs' which is supposed to be for JPEG leading to reams of confusing debug.
TestForMaskAtDepth was rejecting 8bpp sprites with masks due to testing against log2bpp (4) instead of sprite type (5).
NSM_bpptable re-encoded in bytes rather than words, accesses ammended accordingly.
Took fresh copy of swiv2 from RISCOS_Lib revision 4.7.
SpriteV interception made a bit simpler (& faster).
Fixes to validate sprite (SpriteOp 17):
 Was looking at the wrong bits of the mode word to test for old mode words.
 Added new test for DPI values being non zero.
 Algorithm more closely follows PRM.

Version 1.27. Tagged as 'SprExtend-1_27'
@
text
@d1 1
a1 1
/* (1.27)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.27
d9 1
a9 1
#define Module_Date_CMHG                19 Sep 2010
d11 2
a12 2
#define Module_MajorVersion             "1.27"
#define Module_Version                  127
d14 1
a14 1
#define Module_Date                     "19 Sep 2010"
d16 1
a16 1
#define Module_ApplicationDate          "19-Sep-10"
d21 3
a23 3
#define Module_FullVersion              "1.27"
#define Module_HelpVersion              "1.27 (19 Sep 2010)"
#define Module_LibraryVersionInfo       "1:27"
@


1.23
log
@Retire old compiler.
2000 lines of unloved code from 1993 deleted, binary still the same afterwards, so should be same as 1.25.

Version 1.26. Tagged as 'SprExtend-1_26'
@
text
@d1 1
a1 1
/* (1.26)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.26
d9 1
a9 1
#define Module_Date_CMHG                17 Sep 2010
d11 2
a12 2
#define Module_MajorVersion             "1.26"
#define Module_Version                  126
d14 1
a14 1
#define Module_Date                     "17 Sep 2010"
d16 1
a16 1
#define Module_ApplicationDate          "17-Sep-10"
d21 3
a23 3
#define Module_FullVersion              "1.26"
#define Module_HelpVersion              "1.26 (17 Sep 2010)"
#define Module_LibraryVersionInfo       "1:26"
@


1.22
log
@Fix two bugs causing aborts on corner cases.
1 pixel wide JPEGs:
The diffuse dithering code considers all lines as 1-N-1 where N can be zero and the first and last pixel are dealt with specially because there's no data to scatter beyond the edge.
With a 1 pixel wide JPEG the dithering code ended up with a -ve number in the X counter and wandered off the end of memory. Fix just moves a SUB up a few lines and turns it into a SUBS so that the 1 wide case becomes 0-N-1 with N=0.
1 pixel high sprites:
With output switched to a 1 pixel high sprite an abort would quickly follow because the read of mode variables had a backdoor check to workaround a bug in RISC OS 2.00 which returned a duff value for YWindLimit in MODE 22. As the definition of MODE 22 got changed to 768x288 in RISC OS 3.xx (and the YWindLimit bug fixed) this code now just falsely reported a 1 pixel high sprite as being 1024 high and the blitter splattered all over memory it shouldn't.
Result:
Loss of RISC OS 2.00 compatibility, but can now load JPEGs of Xx1 or 1xY and even 1x1.

Version 1.25. Tagged as 'SprExtend-1_25'
@
text
@d1 1
a1 1
/* (1.25)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.25
d11 2
a12 2
#define Module_MajorVersion             "1.25"
#define Module_Version                  125
d21 3
a23 3
#define Module_FullVersion              "1.25"
#define Module_HelpVersion              "1.25 (17 Sep 2010)"
#define Module_LibraryVersionInfo       "1:25"
@


1.21
log
@Clean up pass.
Trim 200+ lines of changes dating back to 1987, combine with non duplicates in the 'BlackLog'.
Use 'offsetof' macro in genjhdr to avoid warnings about uninitialised variables, rename from makejhdr so all the utils are clearly demarked.
Add throwback to MkCFSI-j.
Replace reason codes passed to SWIs with textual equivalents from the respective header files.
Speed up SWI despatch a bit by making the first few debug instructions depend on 'debuggs'.
Qualify all of the debug switches with the global 'debug' one.
Eliminate single use of 'pullx' macro.
Make do_branch() take an unsigned opcode so 50% of the branches don't result in implied cast warnings.
Added an UNUSED() macro to reduce a few of the legitimate warnings (the remainder are either in the original JPEG code or ones that it is worth checking the logic of.
Unixify one last filename.

Version 1.24. Tagged as 'SprExtend-1_24'
@
text
@d1 1
a1 1
/* (1.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.24
d9 1
a9 1
#define Module_Date_CMHG                01 Sep 2010
d11 2
a12 2
#define Module_MajorVersion             "1.24"
#define Module_Version                  124
d14 1
a14 1
#define Module_Date                     "01 Sep 2010"
d16 1
a16 1
#define Module_ApplicationDate          "01-Sep-10"
d21 3
a23 3
#define Module_FullVersion              "1.24"
#define Module_HelpVersion              "1.24 (01 Sep 2010)"
#define Module_LibraryVersionInfo       "1:24"
@


1.20
log
@A few small fixes.
Sources/PutScaled:
 Sync comment with C code.
Sources/SprExtend:
 Debug switch 'debuggs' had been left on, which left in some unnecessary code, but turning it off pulled in code with a stack imbalance. Now off.
 Ensured a terminator at the end of the RMEnsure.
 Colour translation tables passed to SetPointerShape that were in top bit set addresses were being interpreted as though no tt was supplied. Now tested against zero to match docs.
Sources/SprTrans:
 Switches pre 0.60 collapsed.
Sources/diffuse:
 The C code was corrupting r12 workspace pointer so the check of the flag 'ctrans_recent' sometimes failed leading to a duff table lookup.
 Small optimisation to checking of guard word.
c/PutScaled:
 Change paths to be Unix friendly.
rojpeg:
 Put assembler_panic in the header file to shut the compiler up.
3x unused files deleted.

Version 1.23. Tagged as 'SprExtend-1_23'
@
text
@d1 1
a1 1
/* (1.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.23
d9 1
a9 1
#define Module_Date_CMHG                29 Aug 2010
d11 2
a12 2
#define Module_MajorVersion             "1.23"
#define Module_Version                  123
d14 1
a14 1
#define Module_Date                     "29 Aug 2010"
d16 1
a16 1
#define Module_ApplicationDate          "29-Aug-10"
d21 3
a23 3
#define Module_FullVersion              "1.23"
#define Module_HelpVersion              "1.23 (29 Aug 2010)"
#define Module_LibraryVersionInfo       "1:23"
@


1.19
log
@Code generator improvements for ARMv5T and later.
The code generator could output TST instructions with immediate constants not generated in the ARM approved way, while this isn't currently a problem the generator is changed to encode constants less than 256 as an immediate with no shift.
Use of LDR rn, Rd,[Rn] would produce
       LDR Rd,[Rn],#0
which is unpredictable when Rd=Rn. Swapped use of OFFSET0 to OFFSET(0) so
an indexed load is used instead.
Removed the explicit 'S' from TST use, since the TST macro includes 'S' already.
Delete h/swis (held centrally).
Delete h/kernel (held centrally).
Delete hdr/Modes (not used).

Version 1.22. Tagged as 'SprExtend-1_22'
@
text
@d1 1
a1 1
/* (1.22)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.22
d9 1
a9 1
#define Module_Date_CMHG                26 Aug 2010
d11 2
a12 2
#define Module_MajorVersion             "1.22"
#define Module_Version                  122
d14 1
a14 1
#define Module_Date                     "26 Aug 2010"
d16 1
a16 1
#define Module_ApplicationDate          "26-Aug-10"
d21 3
a23 3
#define Module_FullVersion              "1.22"
#define Module_HelpVersion              "1.22 (26 Aug 2010)"
#define Module_LibraryVersionInfo       "1:22"
@


1.18
log
@Incremented version number, no other change.
Previous changes were untagged, but incrementing the version number gives
us a tag we can associate with the official RISC OS 5.16 release.

Version 1.21. Tagged as 'SprExtend-1_21'
@
text
@d1 1
a1 1
/* (1.21)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.21
d9 1
a9 1
#define Module_Date_CMHG                19 Jan 2010
d11 2
a12 2
#define Module_MajorVersion             "1.21"
#define Module_Version                  121
d14 1
a14 1
#define Module_Date                     "19 Jan 2010"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jan-10"
d21 3
a23 3
#define Module_FullVersion              "1.21"
#define Module_HelpVersion              "1.21 (19 Jan 2010)"
#define Module_LibraryVersionInfo       "1:21"
@


1.17
log
@  Build fix
Detail:
  The build utilities utils.makejhdr, utils.genpalette and utils.genyuvtabs,
  compiled at build time, are now built using the HostTools shared makefile,
  and so will execute on any RISC OS build host even if the default compiler
  options are to target an incompatible ARM architecture. Also now sets the
  throwback flag when doing builds via the Mk obey file.
Admin:
  Tested using an APCS-R build on an Iyonix.

Version 1.20. Not tagged
@
text
@d1 1
a1 1
/* (1.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.20
d9 1
a9 1
#define Module_Date_CMHG                14 Jun 2009
d11 2
a12 2
#define Module_MajorVersion             "1.20"
#define Module_Version                  120
d14 1
a14 1
#define Module_Date                     "14 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jun-09"
d21 3
a23 3
#define Module_FullVersion              "1.20"
#define Module_HelpVersion              "1.20 (14 Jun 2009)"
#define Module_LibraryVersionInfo       "1:20"
@


1.16
log
@  GET file pathnames changed
Detail:
  Uses suffixed file extensions for compatiblity with both objasm and asasm.
Admin:
  Supplied by Peter Naulls, tested at ROOL

Version 1.20. Not tagged
@
text
@d9 1
a9 1
#define Module_Date_CMHG                11 Jun 2009
d14 1
a14 1
#define Module_Date                     "11 Jun 2009"
d16 1
a16 1
#define Module_ApplicationDate          "11-Jun-09"
d22 1
a22 1
#define Module_HelpVersion              "1.20 (11 Jun 2009)"
@


1.15
log
@  Now safe to use in IOMD builds again.
Detail:
  The use of ARMv4 SMULL instructions is now switched based upon the
  Hdr:CPU.Arch header file. This means that in IOMD ROM builds, only pre-v4
  instructions are used, so it will function on all required target platforms.
  Tungsten and OMAP3 builds will continue to use SMULL.
Admin:
  Inspected binary to ensure correct behaviour. Requires HdrSrc 1.67 or
  1.62/4.162.2.4.

Version 1.20. Tagged as 'SprExtend-1_20'
@
text
@d9 1
a9 1
#define Module_Date_CMHG                10 May 2009
d14 1
a14 1
#define Module_Date                     "10 May 2009"
d16 1
a16 1
#define Module_ApplicationDate          "10-May-09"
d22 1
a22 1
#define Module_HelpVersion              "1.20 (10 May 2009)"
@


1.14
log
@Performance improvement and code tidy-up.

Removed local definition of XOS_CLI and XColourTrans_SelectTable, replaced
with header file.

Delete swiv2_old (moved to _old directory)

Changed to use {TRUE} and {FALSE} built in objasm variables.

Label dividebyzero fall through had code in the way for debug = {TRUE}.

Trimmed some dead code and definitions.

Stopped thrashing OS_CLI every time a JPEG plot is required to check
ColourTrans version, this is now done once at startup and a flag kept
instead.

Author: Rob Sprowson

Version 1.19. Tagged as 'SprExtend-1_19'
@
text
@d1 1
a1 1
/* (1.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.19
d9 1
a9 1
#define Module_Date_CMHG                24 Apr 2009
d11 2
a12 2
#define Module_MajorVersion             "1.19"
#define Module_Version                  119
d14 1
a14 1
#define Module_Date                     "24 Apr 2009"
d16 1
a16 1
#define Module_ApplicationDate          "24-Apr-09"
d21 3
a23 3
#define Module_FullVersion              "1.19"
#define Module_HelpVersion              "1.19 (24 Apr 2009)"
#define Module_LibraryVersionInfo       "1:19"
@


1.13
log
@  Small makefile tweak
Detail:
  Creates install directories if not already present before doing the
  copy operation.
Admin:
  Will work.

Version 1.18. Tagged as 'SprExtend-1_18'
@
text
@d1 1
a1 1
/* (1.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.18
d9 1
a9 1
#define Module_Date_CMHG                17 Oct 2008
d11 2
a12 2
#define Module_MajorVersion             "1.18"
#define Module_Version                  118
d14 1
a14 1
#define Module_Date                     "17 Oct 2008"
d16 1
a16 1
#define Module_ApplicationDate          "17-Oct-08"
d21 3
a23 3
#define Module_FullVersion              "1.18"
#define Module_HelpVersion              "1.18 (17 Oct 2008)"
#define Module_LibraryVersionInfo       "1:18"
@


1.12
log
@  Fix bug where "Sprite doesn't exist" error message was being truncated.
Detail:
  cache_sprite_doesnt_exist_error routine in MsgCode failed to take into
  account the fact that the messages file might be tokenised. Calling
  MessageTrans_Lookup with R2=0 gives you the length of the unexpanded
  message in R3. Now fixed to work in a better way.
  Also rename fp to r11 in swiv2 file to avoid assembler warnings.
Admin:
  Soft-loaded module tested. Problem seems to be solved.


Version 1.17. Tagged as 'SprExtend-1_17'
@
text
@d1 1
a1 1
/* (1.17)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.17
d9 1
a9 1
#define Module_Date_CMHG                07 Dec 2004
d11 2
a12 2
#define Module_MajorVersion             "1.17"
#define Module_Version                  117
d14 1
a14 1
#define Module_Date                     "07 Dec 2004"
d16 1
a16 1
#define Module_ApplicationDate          "07-Dec-04"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/Video/Render/SprExtend"
d21 3
a23 3
#define Module_FullVersion              "1.17"
#define Module_HelpVersion              "1.17 (07 Dec 2004)"
#define Module_LibraryVersionInfo       "1:17"
@


1.11
log
@Added __rt_udiv to Sources.CSupport. This is needed when built with a newer
C compiler that spots signed divisions of known-positive quantities (eg in
this case (<char>*254)/100), and does them as unsigned instead.

Version 1.16. Tagged as 'SprExtend-1_16'
@
text
@d1 1
a1 1
/* (1.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.16
d9 1
a9 1
#define Module_Date_CMHG                03 Mar 2004
d11 2
a12 2
#define Module_MajorVersion             "1.16"
#define Module_Version                  116
d14 1
a14 1
#define Module_Date                     "03 Mar 2004"
d16 1
a16 1
#define Module_ApplicationDate          "03-Mar-04"
d21 3
a23 3
#define Module_FullVersion              "1.16"
#define Module_HelpVersion              "1.16 (03 Mar 2004)"
#define Module_LibraryVersionInfo       "1:16"
@


1.10
log
@Change to file vetting (only affects SpriteExtend module).
First pass check now only looks for a SOI tag,not bothering looking
for the "JFIF" text: this lets both JFIF and EXIF files through the
first gate.
Next,improvements to the find_image_dimensions routine to properly
look for tags rather than assuming tag APP0 is always at the start of
the file as it is in ".jpg" files.Again - EXIF files are now understood
as a side effect,plus a nice speed up for when skipping unknown tags.So
rather than loading lots of unused 1k blocks it just sets the file
pointer forwards to the required point.
Tested with a handful of specially contrived EXIF files plus some frommy
Panasonic camera,plus retested the JPEGs in the ChangeFSI test directory
to check that progressive JPEGs are still correctly faulted.
Yay - !Paint and !Draw can now load digital camera piccies!

Version 1.15. Tagged as 'SprExtend-1_15'
@
text
@d1 1
a1 1
/* (1.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.15
d9 1
a9 1
#define Module_Date_CMHG                08 Apr 2003
d11 2
a12 2
#define Module_MajorVersion             "1.15"
#define Module_Version                  115
d14 1
a14 1
#define Module_Date                     "08 Apr 2003"
d16 1
a16 1
#define Module_ApplicationDate          "08-Apr-03"
d21 3
a23 3
#define Module_FullVersion              "1.15"
#define Module_HelpVersion              "1.15 (08 Apr 2003)"
#define Module_LibraryVersionInfo       "1:15"
@


1.9
log
@* Transformed sprite plotting did not use the translation table if its
  address had the top bit set.
* Transformed sprite plotting optimised to not read the screen memory when
  it could be simply avoided - greatly enhances performance on Iyonix.
* Decoding of 1x2 sampled JPEGs fixed.

Version 1.14. Tagged as 'SprExtend-1_14'
@
text
@d1 1
a1 1
/* (1.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.14
d9 1
a9 1
#define Module_Date_CMHG                19 Dec 2002
d11 2
a12 2
#define Module_MajorVersion             "1.14"
#define Module_Version                  114
d14 1
a14 1
#define Module_Date                     "19 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "19-Dec-02"
d21 3
a23 3
#define Module_FullVersion              "1.14"
#define Module_HelpVersion              "1.14 (19 Dec 2002)"
#define Module_LibraryVersionInfo       "1:14"
@


1.8
log
@Replaced a couple of STMs in error recovery code with code sequences that
don't use UNPREDICTABLE (and XScale-unsafe) instructions.

Version 1.13. Tagged as 'SprExtend-1_13'
@
text
@d1 1
a1 1
/* (1.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.13
d9 1
a9 1
#define Module_Date_CMHG                02 Dec 2002
d11 2
a12 2
#define Module_MajorVersion             "1.13"
#define Module_Version                  113
d14 1
a14 1
#define Module_Date                     "02 Dec 2002"
d16 1
a16 1
#define Module_ApplicationDate          "02-Dec-02"
d21 3
a23 3
#define Module_FullVersion              "1.13"
#define Module_HelpVersion              "1.13 (02 Dec 2002)"
#define Module_LibraryVersionInfo       "1:13"
@


1.7
log
@New version from Kevin: OS_SpriteOp 55 and 56 can take top-bit-set
translation table pointers, at the expense of the condition for no
translation table being tightened to either 0 or -1 (previously documented
as <= 0). This is the version included in release 5.00 of the OS.

Version 1.12. Tagged as 'SprExtend-1_12'
@
text
@d1 1
a1 1
/* (1.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.12
d11 2
a12 2
#define Module_MajorVersion             "1.12"
#define Module_Version                  112
d21 3
a23 3
#define Module_FullVersion              "1.12"
#define Module_HelpVersion              "1.12 (02 Dec 2002)"
#define Module_LibraryVersionInfo       "1:12"
@


1.6
log
@A couple of 32-bit fixes.
Used to interpret negative translation table pointers as "none"; now just 0
as per documentation.
Plotting 16bpp sprites into 32bpp modes now correctly sets the 3 least
significant bits of each channel - used to be set to 0 due to a typo.
Build option (currently set to on) to use SMULL instructions.

Version 1.11. Tagged as 'SprExtend-1_11'
@
text
@d1 1
a1 1
/* (1.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.11
d9 1
a9 1
#define Module_Date_CMHG                06 Nov 2002
d11 2
a12 2
#define Module_MajorVersion             "1.11"
#define Module_Version                  111
d14 1
a14 1
#define Module_Date                     "06 Nov 2002"
d16 1
a16 1
#define Module_ApplicationDate          "06-Nov-02"
d21 3
a23 3
#define Module_FullVersion              "1.11"
#define Module_HelpVersion              "1.11 (06 Nov 2002)"
#define Module_LibraryVersionInfo       "1:11"
@


1.5
log
@  Moved the includes further down the Makefile.
Detail:
  Don't know why - probably didn't work with where they were?
Admin:
  Made this change months ago - can't remember anything else about it.


Version 1.10. Tagged as 'SprExtend-1_10'
@
text
@d1 1
a1 1
/* (1.10)
d4 1
d7 1
a7 1
#define Module_MajorVersion_CMHG        1.10
d9 1
a9 1
#define Module_Date_CMHG                02 Jul 2001
d11 2
a12 2
#define Module_MajorVersion             "1.10"
#define Module_Version                  110
d14 1
a14 1
#define Module_Date                     "02 Jul 2001"
d16 1
a16 2
#define Module_ApplicationDate2         "02-Jul-01"
#define Module_ApplicationDate4         "02-Jul-2001"
d21 3
a23 2
#define Module_FullVersion              "1.10"
#define Module_HelpVersion              "1.10 (02 Jul 2001)"
@


1.4
log
@  Oops - I'd put semicolons in the sed script.
Detail:
  This doesn't work because amu will (correctly) say that the semicolon
    is a command separator.  This is now fixed by passing each pattern
    separately with -e.
Admin:
  Not tested.


Version 1.09. Tagged as 'SprExtend-1_09'
@
text
@d1 1
a1 1
/* (1.09)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.09
d8 1
a8 1
#define Module_Date_CMHG                17 May 2001
d10 2
a11 2
#define Module_MajorVersion             "1.09"
#define Module_Version                  109
d13 1
a13 1
#define Module_Date                     "17 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "17-May-01"
#define Module_ApplicationDate4         "17-May-2001"
d21 2
a22 2
#define Module_FullVersion              "1.09"
#define Module_HelpVersion              "1.09 (17 May 2001)"
@


1.3
log
@  Now uses objasm throughout instead of aasm.
Detail:
  The build structure for this module is not nice - I've sanitised it a
    bit, but it's still not nice.
Admin:
   Built and tested with the test program briefly - the test sprite seems
     to scale and rotate properly.  ChangeFSI not tested.


Version 1.08. Tagged as 'SprExtend-1_08'
@
text
@d1 1
a1 1
/* (1.08)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.08
d8 1
a8 1
#define Module_Date_CMHG                15 May 2001
d10 2
a11 2
#define Module_MajorVersion             "1.08"
#define Module_Version                  108
d13 1
a13 1
#define Module_Date                     "15 May 2001"
d15 2
a16 2
#define Module_ApplicationDate2         "15-May-01"
#define Module_ApplicationDate4         "15-May-2001"
d21 2
a22 2
#define Module_FullVersion              "1.08"
#define Module_HelpVersion              "1.08 (15 May 2001)"
@


1.2
log
@  Removal of empty debug loop.
  Addition of srccommit files.
Detail:
  * c.jrdjfif, get_dqt had an empty debug loop when debug was disabled.
    This is no longer compiled when debugging is not enabled.
  * VersionNum and VersionASM files added, and Sources.SprExtend modified
    to use symbols exported from there rather than from Version.
Admin:
  Ran on my machine. Previously tested in ROL builds.
  In future, might like to merge Exif support from ROL builds, but don't
  want to do that until I've re-read the specs on Exif format again.

Version 1.07. Tagged as 'SprExtend-1_07'
@
text
@d1 1
a1 1
/* (1.07)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.07
d8 1
a8 1
#define Module_Date_CMHG                27 Jun 2000
d10 2
a11 2
#define Module_MajorVersion             "1.07"
#define Module_Version                  107
d13 1
a13 1
#define Module_Date                     "27 Jun 2000"
d15 2
a16 2
#define Module_ApplicationDate2         "27-Jun-00"
#define Module_ApplicationDate4         "27-Jun-2000"
d18 5
a22 1
#define Module_FullVersion              "1.07"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (1.06)
d6 1
a6 1
#define Module_MajorVersion_CMHG        1.06
d10 2
a11 2
#define Module_MajorVersion             "1.06"
#define Module_Version                  106
d18 1
a18 1
#define Module_FullVersion              "1.06"
@

