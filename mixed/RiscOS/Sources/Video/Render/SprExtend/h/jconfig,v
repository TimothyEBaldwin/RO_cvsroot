head	4.4;
access;
symbols
	SprExtend-1_83:4.4
	SprExtend-1_82:4.4
	SprExtend-1_81:4.4
	SprExtend-1_80:4.4
	SprExtend-1_79:4.4
	SprExtend-1_78:4.4
	SprExtend-1_77:4.4
	SprExtend-1_76:4.4
	SprExtend-1_75:4.4
	SprExtend-1_74:4.4
	SprExtend-1_73:4.4
	SprExtend-1_72:4.4
	SprExtend-1_71-nocfsi:4.4
	SprExtend-1_71:4.4
	SprExtend-1_70-tracef:4.4
	SprExtend-1_70-headers:4.4
	SprExtend-1_70:4.3
	SprExtend-1_69:4.3
	SprExtend-1_68:4.3
	SprExtend-1_67:4.3
	SprExtend-1_66:4.3
	SprExtend-1_65:4.3
	SprExtend-1_64:4.3
	SprExtend-1_63:4.3
	SprExtend-1_62:4.3
	SprExtend-1_61:4.3
	SprExtend-1_60:4.3
	SprExtend-1_59:4.3
	SprExtend-1_58:4.3
	SprExtend-1_57:4.3
	SprExtend-1_56:4.3
	SprExtend-1_55:4.3
	SprExtend-1_54:4.3
	SprExtend-1_53:4.3
	SprExtend-1_52:4.3
	SprExtend-1_51:4.3
	SprExtend-1_50:4.3
	SprExtend-1_38-1_35_2_16:4.2.2.2
	SprExtend-1_49:4.2
	SprExtend-1_48:4.2
	SprExtend-1_47:4.2
	SprExtend-1_38-1_35_2_15:4.2.2.2
	SprExtend-1_46:4.2
	SprExtend-1_45:4.2
	SprExtend-1_44:4.2
	SprExtend-1_43:4.2
	SprExtend-1_42:4.2
	SprExtend-1_41:4.2
	SprExtend-1_38-1_35_2_14:4.2.2.2
	SprExtend-1_40:4.2
	SprExtend-1_38-1_35_2_13:4.2.2.2
	SprExtend-1_38-1_35_2_12:4.2.2.2
	SprExtend-1_38-1_35_2_11:4.2.2.2
	SprExtend-1_38-1_35_2_10:4.2.2.2
	SprExtend-1_38-1_35_2_9:4.2.2.2
	SprExtend-1_38-1_35_2_8:4.2.2.2
	SprExtend-1_39:4.2
	SprExtend-1_38-1_35_2_7:4.2.2.2
	SprExtend-1_38-1_35_2_6:4.2.2.2
	SprExtend-1_38-1_35_2_5:4.2.2.1
	SprExtend-1_38-1_35_2_4:4.2.2.1
	SprExtend-1_38-1_35_2_3:4.2.2.1
	SprExtend-1_38-1_35_2_2:4.2.2.1
	SprExtend-1_38-1_35_2_1:4.2.2.1
	MigrateIJG8b:4.2.0.2
	SprExtend-1_38:4.2
	SprExtend-1_37:4.2
	SprExtend-1_36:4.2
	SprExtend-1_35:4.2
	SprExtend-1_34:4.2
	SprExtend-1_33:4.2
	SprExtend-1_32:4.2
	SprExtend-1_31:4.2
	SprExtend-1_30:4.2
	SprExtend-1_29:4.2
	SprExtend-1_28:4.2
	SprExtend-1_27:4.1
	SprExtend-1_26:4.1
	SprExtend-1_25:4.1
	SprExtend-1_24:4.1
	SprExtend-1_23:4.1
	SprExtend-1_22:4.1
	SprExtend-1_21:4.1
	SprExtend-1_20:4.1
	SprExtend-1_19:4.1
	SprExtend-1_18:4.1
	SprExtend-1_17:4.1
	RO_5_07:4.1
	SprExtend-1_16:4.1
	SprExtend-1_15:4.1
	SprExtend-1_14:4.1
	SprExtend-1_13:4.1
	SprExtend-1_12:4.1
	SprExtend-1_11:4.1
	SprExtend-1_10:4.1
	SprExtend-1_09:4.1
	SprExtend-1_08:4.1
	dellis_autobuild_BaseSW:4.1
	SprExtend-1_07:4.1
	SprExtend-1_06:4.1
	sbrodie_sedwards_16Mar2000:4.1
	dcotton_autobuild_BaseSW:4.1
	SprExtend-1_05:4.1
	Ursula_merge:4.1
	nturton_SprExtend-1_04:4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1
	Ursula_RiscPC:4.1.0.8
	nicke_SprExtend-0_99:4.1.7.1
	rthornb_UrsulaBuild-19Aug1998:4.1
	UrsulaBuild_FinalSoftload:4.1
	rthornb_UrsulaBuild-12Aug1998:4.1
	aglover_UrsulaBuild-05Aug1998:4.1
	rthornb_UrsulaBuild-29Jul1998:4.1
	rthornb_UrsulaBuild-22Jul1998:4.1
	rthornb_UrsulaBuild-15Jul1998:4.1
	rthornb_UrsulaBuild-07Jul1998:4.1
	rthornb_UrsulaBuild-17Jun1998:4.1
	rthornb_UrsulaBuild-03Jun1998:4.1
	rthornb_UrsulaBuild-27May1998:4.1
	rthornb_UrsulaBuild-21May1998:4.1
	rthornb_UrsulaBuild_01May1998:4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	ARTtmp:4.1.7.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2016.05.21.13.32.23;	author rool;	state Exp;
branches;
next	4.3;
commitid	yTqS85yKh7k8Ul7z;

4.3
date	2012.07.28.15.23.44;	author rsprowson;	state Exp;
branches;
next	4.2;
commitid	b5jdybqzJ3Wdjlew;

4.2
date	2010.09.25.12.19.26;	author rsprowson;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.45.08;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.2.2.1
date	2011.01.04.20.52.07;	author rsprowson;	state Exp;
branches;
next	4.2.2.2;

4.2.2.2
date	2011.01.09.10.43.03;	author rsprowson;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.45.08;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.02.41.37;	author nturton;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.12.57.50;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.21.20.29;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Update headers to stock copy
Detail:
  Added headers jerror, jmorecfg, jpegint from IJG8d. Removed jpegdata header.
  Bulk rename of structure members to match newer headers, some RISCOS-isms wrapped in #ifdef RISCOS, retained for the time being.
  Assembler code now gets cinfo member offsets from jhdr.s derived from the C header rather than keeping its own dangerous copy of the offsets.
Admin
  Note: this has broken CFSI-jpeg as it expects the error values to be at the top of cinfo.
  Submission for the JPEG bounty.
  Tagged as SprExtend-1_70-headers.
@
text
@/*
 * jconfig.h
 *
 * Copyright (C) 1991-1994, Thomas G. Lane.
 * This file is part of the Independent JPEG Group's software.
 * For conditions of distribution and use, see the accompanying README file.
 *
 */


/*
 * These symbols indicate the properties of your machine or compiler.
 * #define the symbol if yes, #undef it if no.
 */

/* Does your compiler support function prototypes?
 * (If not, you also need to use ansi2knr, see install.txt)
 */
#define HAVE_PROTOTYPES

/* Does your compiler support the declaration "unsigned char" ?
 * How about "unsigned short" ?
 */
#define HAVE_UNSIGNED_CHAR
#define HAVE_UNSIGNED_SHORT

/* Define "void" as "char" if your compiler doesn't know about type void.
 * NOTE: be sure to define void such that "void *" represents the most general
 * pointer type, e.g., that returned by malloc().
 */
/* #define void char */

/* Define "const" as empty if your compiler doesn't know the "const" keyword.
 */
/* #define const */

/* Define this if an ordinary "char" type is unsigned.
 * If you're not sure, leaving it undefined will work at some cost in speed.
 * If you defined HAVE_UNSIGNED_CHAR then the speed difference is minimal.
 */
#undef CHAR_IS_UNSIGNED

/* Define this if your system has an ANSI-conforming <stddef.h> file.
 */
#define HAVE_STDDEF_H

/* Define this if your system has an ANSI-conforming <stdlib.h> file.
 */
#define HAVE_STDLIB_H

/* Define this if your system does not have an ANSI/SysV <string.h>,
 * but does have a BSD-style <strings.h>.
 */
#undef NEED_BSD_STRINGS

/* Define this if your system does not provide typedef size_t in any of the
 * ANSI-standard places (stddef.h, stdlib.h, or stdio.h), but places it in
 * <sys/types.h> instead.
 */
#undef NEED_SYS_TYPES_H

/* For 80x86 machines, you need to define NEED_FAR_POINTERS,
 * unless you are using a large-data memory model or 80386 flat-memory mode.
 * On less brain-damaged CPUs this symbol must not be defined.
 * (Defining this symbol causes large data structures to be referenced through
 * "far" pointers and to be allocated with a special version of malloc.)
 */
#undef NEED_FAR_POINTERS

/* Define this if your linker needs global names to be unique in less
 * than the first 15 characters.
 */
#undef NEED_SHORT_EXTERNAL_NAMES

/* Although a real ANSI C compiler can deal perfectly well with pointers to
 * unspecified structures (see "incomplete types" in the spec), a few pre-ANSI
 * and pseudo-ANSI compilers get confused.  To keep one of these bozos happy,
 * define INCOMPLETE_TYPES_BROKEN.  This is not recommended unless you
 * actually get "missing structure definition" warnings or errors while
 * compiling the JPEG code.
 */
#undef INCOMPLETE_TYPES_BROKEN

/* Define "boolean" as unsigned char, not int, on Windows systems.
 */
#ifdef _WIN32
#ifndef __RPCNDR_H__		/* don't conflict if rpcndr.h already read */
typedef unsigned char boolean;
#endif
#define HAVE_BOOLEAN		/* prevent jmorecfg.h from redefining it */
#endif


/*
 * The following options affect code selection within the JPEG library,
 * but they don't need to be visible to applications using the library.
 * To minimize application namespace pollution, the symbols won't be
 * defined unless JPEG_INTERNALS has been defined.
 */

#ifdef JPEG_INTERNALS

/* Define this if your compiler implements ">>" on signed values as a logical
 * (unsigned) shift; leave it undefined if ">>" is a signed (arithmetic) shift,
 * which is the normal and rational definition.
 */
#undef RIGHT_SHIFT_IS_UNSIGNED


#endif /* JPEG_INTERNALS */


/*
 * The remaining options do not affect the JPEG library proper,
 * but only the sample applications cjpeg/djpeg (see cjpeg.c, djpeg.c).
 * Other applications can ignore these.
 */

#ifdef JPEG_CJPEG_DJPEG

/* These defines indicate which image (non-JPEG) file formats are allowed. */

#define BMP_SUPPORTED		/* BMP image file format */
#define GIF_SUPPORTED		/* GIF image file format */
#define PPM_SUPPORTED		/* PBMPLUS PPM/PGM image file format */
#undef RLE_SUPPORTED		/* Utah RLE image file format */
#define TARGA_SUPPORTED		/* Targa image file format */

/* Define this if you want to name both input and output files on the command
 * line, rather than using stdout and optionally stdin.  You MUST do this if
 * your system can't cope with binary I/O to stdin/stdout.  See comments at
 * head of cjpeg.c or djpeg.c.
 */
#undef TWO_FILE_COMMANDLINE

/* Define this if your system needs explicit cleanup of temporary files.
 * This is crucial under MS-DOS, where the temporary "files" may be areas
 * of extended memory; on most other systems it's not as important.
 */
#undef NEED_SIGNAL_CATCHER

/* By default, we open image files with fopen(...,"rb") or fopen(...,"wb").
 * This is necessary on systems that distinguish text files from binary files,
 * and is harmless on most systems that don't.  If you have one of the rare
 * systems that complains about the "b" spec, define this symbol.
 */
#undef DONT_USE_B_MODE

/* Define this if you want percent-done progress reports from cjpeg/djpeg.
 */
#undef PROGRESS_REPORT


#endif /* JPEG_CJPEG_DJPEG */
@


4.3
log
@Adopt colour conversions from MigrateIJG8b branch
Now for every colour conversion there is a corresponding C function, allowing swapping between them for test purposes.
Here, 'ASMCOLOR' is selected and the C functions not even referenced in the makefile, see branch for use.
Permits use of USAT, for a small 1.5% speedup and smaller code.
Some other typedefs and comment shuffling copied over - should be harmless.

Version 1.50. Tagged as 'SprExtend-1_50'
@
text
@d4 1
a4 1
 * Copyright (C) 1991, 1992, Thomas G. Lane.
a7 1
 * Seriously updated for use deep within RISC OS.
a9 3
#ifdef __STDC__                 /* if compiler claims to be ANSI, believe it */
#define HAVE_STDC
#endif
d11 4
a14 2
/* Does your compiler support function prototypes? */
/* (If not, you also need to use ansi2knr, see SETUP) */
d16 4
a19 7
#ifdef HAVE_STDC                /* ANSI C compilers always have prototypes */
#define PROTO
#else
#ifdef __cplusplus              /* So do C++ compilers */
#define PROTO
#endif
#endif
d21 3
a23 4
/* Does your compiler support the declaration "unsigned char" ? */
/* How about "unsigned short" ? */

#ifdef HAVE_STDC                /* ANSI C compilers must support both */
a25 1
#endif
d27 5
a31 1
typedef int boolean;
d33 3
a35 1
/* These symbols determine the JPEG functionality supported. */
d37 5
a41 1
#define JFIF_SUPPORTED          /* JFIF or "raw JPEG" files */
d43 3
a45 3
#define EIGHT_BIT_SAMPLES
#undef  TWELVE_BIT_SAMPLES
#undef  SIXTEEN_BIT_SAMPLES
d47 1
a47 6
/*
 * The remaining definitions don't need to be hand-edited in most cases.
 * You may need to change these if you have a machine with unusual data
 * types; for example, "char" not 8 bits, "short" not 16 bits,
 * or "long" not 32 bits.  We don't care whether "int" is 16 or 32 bits,
 * but it had better be at least 16.
d49 1
d51 4
a54 1
/* First define the representation of a single pixel element value. */
d56 3
a58 5
#ifdef EIGHT_BIT_SAMPLES
/* JSAMPLE should be the smallest type that will hold the values 0..255.
 * You can use a signed char by having GETJSAMPLE mask it with 0xFF.
 * If you have only signed chars, and you are more worried about speed than
 * memory usage, it might be a win to make JSAMPLE be short.
d60 1
d62 7
a68 1
#ifdef HAVE_UNSIGNED_CHAR
d70 4
a73 2
typedef unsigned char JSAMPLE;
#define GETJSAMPLE(value)  (value)
d75 8
a82 2
#else /* not HAVE_UNSIGNED_CHAR */
#ifdef CHAR_IS_UNSIGNED
d84 8
a91 2
typedef char JSAMPLE;
#define GETJSAMPLE(value)  (value)
a92 1
#else /* not CHAR_IS_UNSIGNED */
d94 6
a99 2
typedef char JSAMPLE;
#define GETJSAMPLE(value)  ((value) & 0xFF)
d101 1
a101 2
#endif /* CHAR_IS_UNSIGNED */
#endif /* HAVE_UNSIGNED_CHAR */
d103 5
a107 3
#define BITS_IN_JSAMPLE   8
#define MAXJSAMPLE      255
#define CENTERJSAMPLE   128
a108 1
#endif /* EIGHT_BIT_SAMPLES */
d110 1
a111 12
#ifdef TWELVE_BIT_SAMPLES
/* JSAMPLE should be the smallest type that will hold the values 0..4095. */
/* On nearly all machines "short" will do nicely. */

typedef short JSAMPLE;
#define GETJSAMPLE(value)  (value)

#define BITS_IN_JSAMPLE   12
#define MAXJSAMPLE      4095
#define CENTERJSAMPLE   2048

#endif /* TWELVE_BIT_SAMPLES */
d113 5
d119 1
a119 2
#ifdef SIXTEEN_BIT_SAMPLES
/* JSAMPLE should be the smallest type that will hold the values 0..65535. */
d121 1
a121 1
#ifdef HAVE_UNSIGNED_SHORT
d123 5
a127 2
typedef unsigned short JSAMPLE;
#define GETJSAMPLE(value)  (value)
d129 4
a132 5
#else /* not HAVE_UNSIGNED_SHORT */

/* If int is 32 bits this'll be horrendously inefficient storage-wise.
 * But since we don't actually support 16-bit samples (ie lossless coding) yet,
 * I'm not going to worry about making a smarter definition ...
d134 1
a134 8
typedef unsigned int JSAMPLE;
#define GETJSAMPLE(value)  (value)

#endif /* HAVE_UNSIGNED_SHORT */

#define BITS_IN_JSAMPLE    16
#define MAXJSAMPLE      65535
#define CENTERJSAMPLE   32768
d136 3
a138 7
#endif /* SIXTEEN_BIT_SAMPLES */


/* Here we define the representation of a DCT frequency coefficient.
 * This should be a signed 16-bit value; "short" is usually right.
 * It's important that this be exactly 16 bits, no more and no less;
 * more will cost you a BIG hit of memory, less will give wrong answers.
d140 1
d142 4
a145 11
#ifdef RISCOS
typedef int JCOEF;
#else
typedef short JCOEF;
#endif


/* Compressed datastreams are represented as arrays of JOCTET.
 * These must be EXACTLY 8 bits wide, at least once they are written to
 * external storage.  Note that when using the stdio data source/destination
 * managers, this is also the data type passed to fread/fwrite.
d147 1
d149 1
a149 22
#ifdef HAVE_UNSIGNED_CHAR

typedef unsigned char JOCTET;
#define GETJOCTET(value)  (value)

#else /* not HAVE_UNSIGNED_CHAR */

typedef char JOCTET;
#ifdef CHAR_IS_UNSIGNED
#define GETJOCTET(value)  (value)
#else
#define GETJOCTET(value)  ((value) & 0xFF)
#endif /* CHAR_IS_UNSIGNED */

#endif /* HAVE_UNSIGNED_CHAR */


/* The remaining typedefs are used for various table entries and so forth.
 * They must be at least as wide as specified; but making them too big
 * won't cost a huge amount of memory, so we don't provide special
 * extraction code like we did for JSAMPLE.  (In other words, these
 * typedefs live at a different point on the speed/space tradeoff curve.)
d151 1
a152 13
/* UINT8 must hold at least the values 0..255. */

#ifdef HAVE_UNSIGNED_CHAR
typedef unsigned char UINT8;
#else /* not HAVE_UNSIGNED_CHAR */
#ifdef CHAR_IS_UNSIGNED
typedef char UINT8;
#else /* not CHAR_IS_UNSIGNED */
typedef short UINT8;
#endif /* CHAR_IS_UNSIGNED */
#endif /* HAVE_UNSIGNED_CHAR */

/* UINT16 must hold at least the values 0..65535. */
d154 1
a154 23
#ifdef HAVE_UNSIGNED_SHORT
typedef unsigned short UINT16;
#else /* not HAVE_UNSIGNED_SHORT */
typedef unsigned int UINT16;
#endif /* HAVE_UNSIGNED_SHORT */

/* INT16 must hold at least the values -32768..32767. */

#ifndef XMD_H                   /* X11/xmd.h correctly defines INT16 */
typedef short INT16;
#endif

/* INT32 must hold signed 32-bit values; if your machine happens */
/* to have 64-bit longs, you might want to change this. */

#ifdef RISCOS
typedef int INT32;
typedef unsigned int UINT32;
#else
  #ifndef XMD_H                 /* X11/xmd.h correctly defines INT32 */
  typedef long INT32;
  #endif
#endif
@


4.2
log
@Remove postprocessing step of C code.
Since 2001 this module has been using objasm, but still using the C compiler to output (via -S) assembly code which is then passed through 'sed' and included via GET into the assembler code.
Changed to compile the C code into object files, and use the linker to patch up the unresolved references - this has required some reordering of the C code to make sure static functions now appear in the object file, and some reordering of the header files to ensure both the module and the CFSI version still compile without conflicts.
Minor fix to 'swiv2', the label was in the wrong place for _swi() though it's not used in this module so didn't affect the _swix() case.
Makefile cut down a bit. Unixify some path names.
Test code moved to 'Test/c' directory.
Tested in both debug and non debug cases via softloaded module. Oddly, it's 4 bytes longer than the previous version.

Version 1.28. Tagged as 'SprExtend-1_28'
@
text
@d139 24
@


4.2.2.1
log
@Import of IJG 8b headers.
Note: this version will not compile, it's just here to serve as a basis
for diffs.
@
text
@d4 1
a4 1
 * Copyright (C) 1991-1994, Thomas G. Lane.
d8 1
a8 2
 * This file documents the configuration options that are required to
 * customize the JPEG software for a particular system.
d11 6
d18 7
a24 4
/*
 * These symbols indicate the properties of your machine or compiler.
 * #define the symbol if yes, #undef it if no.
 */
d26 2
a27 4
/* Does your compiler support function prototypes?
 * (If not, you also need to use ansi2knr, see install.txt)
 */
#define HAVE_PROTOTYPES
d29 1
a29 3
/* Does your compiler support the declaration "unsigned char" ?
 * How about "unsigned short" ?
 */
d32 3
d36 14
a49 3
/* Define "void" as "char" if your compiler doesn't know about type void.
 * NOTE: be sure to define void such that "void *" represents the most general
 * pointer type, e.g., that returned by malloc().
a50 1
/* #define void char */
d52 7
a58 1
/* Define "const" as empty if your compiler doesn't know the "const" keyword.
a59 1
/* #define const */
d61 10
a70 5
/* Define this if an ordinary "char" type is unsigned.
 * If you're not sure, leaving it undefined will work at some cost in speed.
 * If you defined HAVE_UNSIGNED_CHAR then the speed difference is minimal.
 */
#undef CHAR_IS_UNSIGNED
d72 1
a72 3
/* Define this if your system has an ANSI-conforming <stddef.h> file.
 */
#define HAVE_STDDEF_H
d74 2
a75 3
/* Define this if your system has an ANSI-conforming <stdlib.h> file.
 */
#define HAVE_STDLIB_H
d77 2
a78 4
/* Define this if your system does not have an ANSI/SysV <string.h>,
 * but does have a BSD-style <strings.h>.
 */
#undef NEED_BSD_STRINGS
d80 3
a82 5
/* Define this if your system does not provide typedef size_t in any of the
 * ANSI-standard places (stddef.h, stdlib.h, or stdio.h), but places it in
 * <sys/types.h> instead.
 */
#undef NEED_SYS_TYPES_H
d84 1
a84 7
/* For 80x86 machines, you need to define NEED_FAR_POINTERS,
 * unless you are using a large-data memory model or 80386 flat-memory mode.
 * On less brain-damaged CPUs this symbol must not be defined.
 * (Defining this symbol causes large data structures to be referenced through
 * "far" pointers and to be allocated with a special version of malloc.)
 */
#undef NEED_FAR_POINTERS
a85 4
/* Define this if your linker needs global names to be unique in less
 * than the first 15 characters.
 */
#undef NEED_SHORT_EXTERNAL_NAMES
d87 3
a89 8
/* Although a real ANSI C compiler can deal perfectly well with pointers to
 * unspecified structures (see "incomplete types" in the spec), a few pre-ANSI
 * and pseudo-ANSI compilers get confused.  To keep one of these bozos happy,
 * define INCOMPLETE_TYPES_BROKEN.  This is not recommended unless you
 * actually get "missing structure definition" warnings or errors while
 * compiling the JPEG code.
 */
#undef INCOMPLETE_TYPES_BROKEN
d91 2
a92 8
/* Define "boolean" as unsigned char, not int, on Windows systems.
 */
#ifdef _WIN32
#ifndef __RPCNDR_H__		/* don't conflict if rpcndr.h already read */
typedef unsigned char boolean;
#endif
#define HAVE_BOOLEAN		/* prevent jmorecfg.h from redefining it */
#endif
d94 3
d98 1
a98 6
/*
 * The following options affect code selection within the JPEG library,
 * but they don't need to be visible to applications using the library.
 * To minimize application namespace pollution, the symbols won't be
 * defined unless JPEG_INTERNALS has been defined.
 */
a99 1
#ifdef JPEG_INTERNALS
d101 2
a102 5
/* Define this if your compiler implements ">>" on signed values as a logical
 * (unsigned) shift; leave it undefined if ">>" is a signed (arithmetic) shift,
 * which is the normal and rational definition.
 */
#undef RIGHT_SHIFT_IS_UNSIGNED
d104 1
d106 2
a107 1
#endif /* JPEG_INTERNALS */
d109 1
d111 3
a113 4
/*
 * The remaining options do not affect the JPEG library proper,
 * but only the sample applications cjpeg/djpeg (see cjpeg.c, djpeg.c).
 * Other applications can ignore these.
d115 4
d120 3
a122 1
#ifdef JPEG_CJPEG_DJPEG
d124 1
a124 1
/* These defines indicate which image (non-JPEG) file formats are allowed. */
a125 5
#define BMP_SUPPORTED		/* BMP image file format */
#define GIF_SUPPORTED		/* GIF image file format */
#define PPM_SUPPORTED		/* PBMPLUS PPM/PGM image file format */
#undef RLE_SUPPORTED		/* Utah RLE image file format */
#define TARGA_SUPPORTED		/* Targa image file format */
d127 4
a130 4
/* Define this if you want to name both input and output files on the command
 * line, rather than using stdout and optionally stdin.  You MUST do this if
 * your system can't cope with binary I/O to stdin/stdout.  See comments at
 * head of cjpeg.c or djpeg.c.
a131 1
#undef TWO_FILE_COMMANDLINE
d133 32
a164 5
/* Define this if your system needs explicit cleanup of temporary files.
 * This is crucial under MS-DOS, where the temporary "files" may be areas
 * of extended memory; on most other systems it's not as important.
 */
#undef NEED_SIGNAL_CATCHER
d166 1
a166 6
/* By default, we open image files with fopen(...,"rb") or fopen(...,"wb").
 * This is necessary on systems that distinguish text files from binary files,
 * and is harmless on most systems that don't.  If you have one of the rare
 * systems that complains about the "b" spec, define this symbol.
 */
#undef DONT_USE_B_MODE
d168 3
a170 3
/* Define this if you want percent-done progress reports from cjpeg/djpeg.
 */
#undef PROGRESS_REPORT
d172 2
d175 8
a182 1
#endif /* JPEG_CJPEG_DJPEG */
@


4.2.2.2
log
@Create assembler equivalents of C colour conversions, approx 10% speed up.
Add new switch ASMCOLOR to select which to use, C or assembler.
Remove FILE_ exit trace concept, just use __FILE__ instead in exit_erl.
Add some comments to exit_erl and friends.
A few bits of cinfo setup moved into start_pass_huff_decoder() or eliminated.
Bumped up the precision of SCALE_BITS in the C colour handling so FIX() uses more bits of an int.
Deleted the unused remenants of light dithering in the 8bpp colour converter - saves a few cycles.
colour_convert_8 and colour_convert_16 no longer save entry registers the C compiler doesn't care about.
Update genyuvtabs to EXPORT the table bases.
Split out the compilation of IJG files as separate objects in the make file, rather than including them from within rojpeg, which is itself included from putscaled.

Version 1.38, 1.35.2.6. Tagged as 'SprExtend-1_38-1_35_2_6'
@
text
@a93 3
#ifdef RISCOS
#include "commondefs.h"
#endif
@


4.1
log
@Initial revision
@
text
@a34 7
#ifndef BOOL
  #define BOOL int
#endif
#undef FALSE                    /* in case these macros already exist */
#undef TRUE
#define FALSE   0               /* values of boolean */
#define TRUE    1
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
