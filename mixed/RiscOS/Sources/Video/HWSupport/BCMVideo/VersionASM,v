head	1.53;
access;
symbols
	BCMVideo-0_53:1.53
	BCMVideo-0_52:1.52
	BCMVideo-0_51:1.51
	BCMVideo-0_50-1_50_2_1:1.50.2.1
	RPiFreeze:1.50.0.2
	BCMVideo-0_50:1.50
	BCMVideo-0_49:1.49
	BCMVideo-0_48:1.48
	BCMVideo-0_47:1.47
	BCMVideo-0_46:1.46
	BCMVideo-0_45:1.45
	BCMVideo-0_44:1.44
	BCMVideo-0_43:1.43
	BCMVideo-0_42:1.42
	BCMVideo-0_41:1.41
	BCMVideo-0_40:1.40
	BCMVideo-0_39:1.39
	BCMVideo-0_38:1.38
	BCMVideo-0_37:1.37
	BCMVideo-0_36:1.36
	BCMVideo-0_35:1.35
	BCMVideo-0_34:1.34
	BCMVideo-0_33:1.33
	BCMVideo-0_32:1.32
	BCMVideo-0_31:1.31
	BCMVideo-0_30:1.30
	BCMVideo-0_29:1.29
	BCMVideo-0_28:1.28
	BCMVideo-0_27:1.27
	BCMVideo-0_26:1.26
	BCMVideo-0_25:1.25
	BCMVideo-0_24:1.24
	BCMVideo-0_23:1.23
	BCMVideo-0_22:1.22
	BCMVideo-0_21:1.21
	BCMVideo-0_20:1.20
	BCMVideo-0_19:1.19
	BCMVideo-0_18:1.18
	BCMVideo-0_17:1.17
	BCMVideo-0_16:1.16
	BCMVideo-0_15:1.15
	BCMVideo-0_14:1.14
	BCMVideo-0_13:1.13
	BCMVideo-0_12:1.12
	BCMVideo-0_11:1.11
	BCMVideo-0_10:1.10
	BCMVideo-0_09:1.9
	BCMVideo-0_08:1.8
	BCMVideo-0_07:1.7
	BCMVideo-0_06:1.6
	BCMVideo-0_05:1.5
	BCMVideo-0_04:1.4
	BCMVideo-0_03:1.3
	BCMVideo-0_02:1.2
	BCMVideo-0_01:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.53
date	2018.08.14.21.23.01;	author jlee;	state Exp;
branches;
next	1.52;
commitid	QMrZlOU8om3ek8OA;

1.52
date	2018.08.13.21.29.37;	author jlee;	state Exp;
branches;
next	1.51;
commitid	hr033TNSWKBuo0OA;

1.51
date	2018.07.01.12.32.37;	author jlee;	state Exp;
branches;
next	1.50;
commitid	SZDeyIEUJXdXNqIA;

1.50
date	2018.04.06.23.01.14;	author jlee;	state Exp;
branches
	1.50.2.1;
next	1.49;
commitid	SXoBJ1pI9Xh03rxA;

1.49
date	2018.02.02.20.37.31;	author jlee;	state Exp;
branches;
next	1.48;
commitid	aDAuPtQqF7MfhkpA;

1.48
date	2017.07.11.20.38.19;	author jlee;	state Exp;
branches;
next	1.47;
commitid	b7YZJl5wsCF3UQYz;

1.47
date	2017.06.07.21.33.43;	author jlee;	state Exp;
branches;
next	1.46;
commitid	j2SoIQlTVE0PiuUz;

1.46
date	2017.04.30.15.39.12;	author rsprowson;	state Exp;
branches;
next	1.45;
commitid	AQXY4ZBPc4TVyzPz;

1.45
date	2017.04.13.20.32.15;	author jlee;	state Exp;
branches;
next	1.44;
commitid	qbk5tk8H0BClJpNz;

1.44
date	2017.02.21.08.42.48;	author rsprowson;	state Exp;
branches;
next	1.43;
commitid	MJJy3FseaofBrNGz;

1.43
date	2017.01.28.18.24.01;	author jlee;	state Exp;
branches;
next	1.42;
commitid	W7YZg72dWBjPqLDz;

1.42
date	2016.12.17.18.39.03;	author jlee;	state Exp;
branches;
next	1.41;
commitid	orkqjr7mp7qGRmyz;

1.41
date	2016.12.15.19.43.54;	author jlee;	state Exp;
branches;
next	1.40;
commitid	AAbMoLgplY7Vh7yz;

1.40
date	2016.12.10.17.01.49;	author jlee;	state Exp;
branches;
next	1.39;
commitid	zybtuuARus1hysxz;

1.39
date	2016.08.20.15.39.16;	author jlee;	state Exp;
branches;
next	1.38;
commitid	GMSaVWQj6G1aH3jz;

1.38
date	2016.03.26.21.17.26;	author jlee;	state Exp;
branches;
next	1.37;
commitid	c5oBNUnis9z7ic0z;

1.37
date	2016.03.25.20.15.16;	author jlee;	state Exp;
branches;
next	1.36;
commitid	65QlxlgxPV3NY30z;

1.36
date	2016.03.01.23.10.10;	author jlee;	state Exp;
branches;
next	1.35;
commitid	k7925edZelBCIZWy;

1.35
date	2015.11.14.17.19.12;	author jlee;	state Exp;
branches;
next	1.34;
commitid	txd4YVNYLLqsf5Jy;

1.34
date	2015.08.05.22.07.09;	author jlee;	state Exp;
branches;
next	1.33;
commitid	fl8ky4krrFkw58wy;

1.33
date	2015.08.03.07.19.33;	author rsprowson;	state Exp;
branches;
next	1.32;
commitid	q0i6lcLJlus0fNvy;

1.32
date	2015.07.15.21.13.01;	author jlee;	state Exp;
branches;
next	1.31;
commitid	xe6OASzNiPkNsqty;

1.31
date	2015.07.10.20.33.39;	author jlee;	state Exp;
branches;
next	1.30;
commitid	gEvIKFBh5s2gpMsy;

1.30
date	2015.02.02.15.36.45;	author bavison;	state Exp;
branches;
next	1.29;
commitid	dsG4rJhYyVQhQr8y;

1.29
date	2014.11.02.17.24.52;	author jlee;	state Exp;
branches;
next	1.28;
commitid	ASl9I4vLOoLIoDWx;

1.28
date	2014.08.04.19.22.49;	author jlee;	state Exp;
branches;
next	1.27;
commitid	V4JFdZTE3n8yW4Lx;

1.27
date	2014.07.20.14.46.38;	author jlee;	state Exp;
branches;
next	1.26;
commitid	qYItZW3qfipHT7Jx;

1.26
date	2014.06.26.20.43.36;	author jlee;	state Exp;
branches;
next	1.25;
commitid	AAbshADtMl3ZD4Gx;

1.25
date	2014.06.19.21.38.57;	author jlee;	state Exp;
branches;
next	1.24;
commitid	liIkzQDSHQtVabFx;

1.24
date	2014.05.03.08.19.17;	author rsprowson;	state Exp;
branches;
next	1.23;
commitid	Z1gL56lqEpOfg4zx;

1.23
date	2014.04.18.14.27.39;	author jlee;	state Exp;
branches;
next	1.22;
commitid	uRziBlqK8ezwMaxx;

1.22
date	2014.04.16.21.02.02;	author jlee;	state Exp;
branches;
next	1.21;
commitid	wYCRGB3p48VN1Xwx;

1.21
date	2014.04.07.20.51.58;	author jlee;	state Exp;
branches;
next	1.20;
commitid	8RkD9LAg1kJhgNvx;

1.20
date	2014.03.09.17.51.59;	author jlee;	state Exp;
branches;
next	1.19;
commitid	VsKBoAR8ZORkc3sx;

1.19
date	2014.02.19.21.25.29;	author jlee;	state Exp;
branches;
next	1.18;
commitid	VOdJLv4tprtsXKpx;

1.18
date	2014.01.19.18.50.33;	author jlee;	state Exp;
branches;
next	1.17;
commitid	U0h0iQgArKb56Llx;

1.17
date	2014.01.19.17.26.16;	author jlee;	state Exp;
branches;
next	1.16;
commitid	IgO3YUZfWktaDKlx;

1.16
date	2014.01.01.16.38.10;	author jlee;	state Exp;
branches;
next	1.15;
commitid	hv7JxPX2J7fxWqjx;

1.15
date	2013.12.19.22.49.20;	author jlee;	state Exp;
branches;
next	1.14;
commitid	t3YFuwm7k1CMpNhx;

1.14
date	2013.12.15.22.21.38;	author jlee;	state Exp;
branches;
next	1.13;
commitid	bwYuPhPuWChfohhx;

1.13
date	2013.04.14.14.39.28;	author jlee;	state Exp;
branches;
next	1.12;
commitid	a1V39UmGJTFXHKLw;

1.12
date	2013.03.03.20.26.44;	author jlee;	state Exp;
branches;
next	1.11;
commitid	JslUsC5BVloNYnGw;

1.11
date	2012.12.05.02.12.22;	author jlee;	state Exp;
branches;
next	1.10;
commitid	7zvxcLwjvUAJKYuw;

1.10
date	2012.11.25.22.29.51;	author jlee;	state Exp;
branches;
next	1.9;
commitid	KA5Rb3NW1StkONtw;

1.9
date	2012.10.16.23.46.52;	author jlee;	state Exp;
branches;
next	1.8;
commitid	oKsn0n3zdXitwFow;

1.8
date	2012.10.04.11.50.39;	author srevill;	state Exp;
branches;
next	1.7;
commitid	8zxYA76BRn8GW3nw;

1.7
date	2012.09.18.13.55.44;	author jlee;	state Exp;
branches;
next	1.6;
commitid	Apt88JppQEvt91lw;

1.6
date	2012.09.08.15.02.01;	author jlee;	state Exp;
branches;
next	1.5;
commitid	TZX98tKZGlo9QJjw;

1.5
date	2012.09.07.01.05.02;	author jlee;	state Exp;
branches;
next	1.4;
commitid	sA7cjtQbUOm0fxjw;

1.4
date	2012.09.03.18.17.27;	author jlee;	state Exp;
branches;
next	1.3;
commitid	1L1YnMpXkWl957jw;

1.3
date	2012.09.02.20.13.28;	author jlee;	state Exp;
branches;
next	1.2;
commitid	Eobp7iVtciTWKZiw;

1.2
date	2012.07.23.09.31.39;	author jballance;	state Exp;
branches;
next	1.1;
commitid	xBCTlHsHqcFtwFdw;

1.1
date	2012.07.22.13.15.48;	author jballance;	state Exp;
branches
	1.1.1.1;
next	;
commitid	CVhEuMVXjStaNydw;

1.50.2.1
date	2018.04.18.20.07.12;	author rsprowson;	state Exp;
branches;
next	;
commitid	0r2NY7C77CXnHXyA;

1.1.1.1
date	2012.07.22.13.15.48;	author jballance;	state Exp;
branches;
next	;
commitid	CVhEuMVXjStaNydw;


desc
@@


1.53
log
@Fix incorrect overlay pixel format selection, buffer mapping
Detail:
  s/GVOverlay:
  - Fix register mixup in GV_MapOverlayBuffer which would cause too little memory to be mapped in for YUV overlays.
  - Fix OverlayCreateVetCommon using a wrong default mode flags value, causing 32K LTBGR to be erroneously detected as a valid format if the mode selector block didn't explicitly specify the mode flags.
  - Add explicit failure check to CreateOverlayBuffer (for e.g. out of memory), previously failure was only being detected as a side-effect of the mailbox GetDispmanxMemhandle message failing
Admin:
  Tested on Rasbperry Pi 3
  Fixes a couple of issues raised in this thread:
  https://www.riscosopen.org/forum/forums/3/topics/11504


Version 0.53. Tagged as 'BCMVideo-0_53'
@
text
@;
; This file is automatically maintained by srccommit, do not edit manually.
; Last processed by srccommit version: 1.1.
;
                        GBLS    Module_MajorVersion
                        GBLA    Module_Version
                        GBLS    Module_MinorVersion
                        GBLS    Module_Date
                        GBLS    Module_FullVersion
                        GBLS    Module_ApplicationDate
                        GBLS    Module_HelpVersion
                        GBLS    Module_ComponentName
                        GBLS    Module_ComponentPath
Module_MajorVersion     SETS    "0.53"
Module_Version          SETA    53
Module_MinorVersion     SETS    ""
Module_Date             SETS    "14 Aug 2018"
Module_ApplicationDate  SETS    "14-Aug-18"
Module_ComponentName    SETS    "BCMVideo"
Module_ComponentPath    SETS    "mixed/RiscOS/Sources/Video/HWSupport/BCMVideo"
Module_FullVersion      SETS    "0.53"
Module_HelpVersion      SETS    "0.53 (14 Aug 2018)"
                        END
@


1.52
log
@Fix null pointer dereference
Detail:
  s/GVOverlay - R11 is the correct register for the overlay struct, not R0.
Admin:
  Tested on Raspberry Pi 3B
  Fixes issue reported on forums:
  https://www.riscosopen.org/forum/forums/3/topics/11504?page=1#posts-82292


Version 0.52. Tagged as 'BCMVideo-0_52'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.52"
Module_Version          SETA    52
d17 2
a18 2
Module_Date             SETS    "13 Aug 2018"
Module_ApplicationDate  SETS    "13-Aug-18"
d21 2
a22 2
Module_FullVersion      SETS    "0.52"
Module_HelpVersion      SETS    "0.52 (13 Aug 2018)"
@


1.51
log
@Add support for the GraphicsV overlay API and alpha-blended screen modes. Allow gamma table use to be disabled via adding 'disable_gamma' to cmdline.txt
Detail:
  s/BCMVideo - Update workspace for the new features. On startup, check to see if 'disable_gamma' is included in the firmware-managed kernel command line (i.e. from cmdline.txt in the bootloader partition), and if so disable all use of the hardware gamma tables. Update mode vet & set to allow alpha-blending in 32bpp modes.
  s/Dispmanx, s/HWPointer - Move the dispmanx-related routines out of s/HWPointer and into their own file, for re-use by the GraphicsV overlay code
  s/GPUMode - Move the command line scanning code into s/BCMVideo so it's still available if the GPUMode build switch is disabled
  s/GenCmd - Tweak how GenCmd_GetConfigInt returns values so that zero-value variables can be distinguished from errors. Check the framebuffer_ignore_alpha variable to determine if the GPU will pay attention to the FBSetAlphaMode property tag.
  s/GraphicsV - Hook up the GraphicsV overlay entries. Fix determination of whether hardware pointer is fully supported to also check the screen height.
  s/GVOverlay - Initial support for the GraphicsV hardware overlay API. It's best used in 32bpp alpha-blended screen modes, so that the overlays can be placed behind the desktop. Rotated/flipped overlays aren't supported yet.
Admin:
  Tested on Raspberry Pi 1 & 3
  Requires BCMSupport-0_08
  disable_gamma should allow people who are frequently affected by https://www.riscosopen.org/forum/forums/11/topics/10346 to use their systems, pending a proper fix once the root cause has been determined.
  Note that options in cmdline.txt should be space-separated, so to disable both GPU mode changes & gamma table use you'll want 'disable_gamma disable_mode_changes'.


Version 0.51. Tagged as 'BCMVideo-0_51'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.51"
Module_Version          SETA    51
d17 2
a18 2
Module_Date             SETS    "01 Jul 2018"
Module_ApplicationDate  SETS    "01-Jul-18"
d21 2
a22 2
Module_FullVersion      SETS    "0.51"
Module_HelpVersion      SETS    "0.51 (01 Jul 2018)"
@


1.50
log
@Avoid redundant GPU mode changes
Detail:
  s/BCMVideo - Reserve some workspace for storing the last hdmi_timings command
  s/GPUMode - Avoid changing the GPU mode if the last hdmi_timings we configured are identical to the new ones. Push hardware pointer shutdown to later in the mode change sequence as well, to avoid situations where that could be redundantly shut down.
Admin:
  Tested on Raspberry Pi 1


Version 0.50. Tagged as 'BCMVideo-0_50'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.50"
Module_Version          SETA    50
d17 2
a18 2
Module_Date             SETS    "06 Apr 2018"
Module_ApplicationDate  SETS    "06-Apr-18"
d21 2
a22 2
Module_FullVersion      SETS    "0.50"
Module_HelpVersion      SETS    "0.50 (06 Apr 2018)"
@


1.50.2.1
log
@Take out gamma enable
While investigations continue on the trunk, simply disable it for now.

Version 0.50, 1.50.2.1. Tagged as 'BCMVideo-0_50-1_50_2_1'
@
text
@d16 3
a18 3
Module_MinorVersion     SETS    "1.50.2.1"
Module_Date             SETS    "18 Apr 2018"
Module_ApplicationDate  SETS    "18-Apr-18"
d21 2
a22 2
Module_FullVersion      SETS    "0.50 (1.50.2.1)"
Module_HelpVersion      SETS    "0.50 (18 Apr 2018) 1.50.2.1"
@


1.49
log
@Implement gamma support for true-colour modes
Detail:
  hdr/BCM2835reg - Add some HVS / scaler register addresses. Remove unused FlushDataCache macros.
  s/BCMVideo - Add code for programming the HVS gamma table
  s/GraphicsV - Hook up gamma programming to GraphicsV palette handlers
Admin:
  Tested on Raspberry Pi 1 & 3, TV & HDMI output


Version 0.49. Tagged as 'BCMVideo-0_49'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.49"
Module_Version          SETA    49
d17 2
a18 2
Module_Date             SETS    "02 Feb 2018"
Module_ApplicationDate  SETS    "02-Feb-18"
d21 2
a22 2
Module_FullVersion      SETS    "0.49"
Module_HelpVersion      SETS    "0.49 (02 Feb 2018)"
@


1.48
log
@Make GraphicsV_IICOp more consistent with other drivers
Detail:
  s/GraphicsV - If an EDID read fails, return with IICStatus_NoACK. This ensures that any situation in which the return R2 value is non-zero, an error code is also reported in R0.
Admin:
  Tested on Raspberry Pi 3
  Reading EDID with a detached monitor now returns IICStatus_NoACK and all bytes not transferred, which is consistent with the NVidia/OMAPVideo/IMXVideo/UDLVideo drivers


Version 0.48. Tagged as 'BCMVideo-0_48'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.48"
Module_Version          SETA    48
d17 2
a18 2
Module_Date             SETS    "11 Jul 2017"
Module_ApplicationDate  SETS    "11-Jul-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.48"
Module_HelpVersion      SETS    "0.48 (11 Jul 2017)"
@


1.47
log
@Implement GraphicsV_VetMode2 and proper support for the ExtraBytes control list item
Detail:
  s/BCMVideo - Update SetModeFromVIDCList to support the ExtraBytes control list item. Update VetModeFromVIDCList so that it will suggest a new ExtraBytes value if the original wasn't satisfactory. Also, adjust padding logic - it looks like the framebuffer will always get padded out to a multiple of 16 pixels (not just for rotated framebuffers)
  s/GraphicsV - Make both GraphicsV_VetMode and GraphicsV_VetMode2 rely on VetModeFromVIDCList, but translate the results to the appropriate form.
Admin:
  Tested on Raspberry Pi 3
  720-width modes (amongst others) now work in 8bpp, and 360-width modes now work in <32bpp and are no longer garbled in 32bpp (width is only a multiple of 8 pixels)
  Requires HdrSrc-2_71 to build, ScreenModes-0_65 + Kernel-5_82 to reap the rewards


Version 0.47. Tagged as 'BCMVideo-0_47'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.47"
Module_Version          SETA    47
d17 2
a18 2
Module_Date             SETS    "07 Jun 2017"
Module_ApplicationDate  SETS    "07-Jun-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.47"
Module_HelpVersion      SETS    "0.47 (07 Jun 2017)"
@


1.46
log
@Capitalise the command table to match CmdHelp syntax
Have *Help report VCGenCmd in its summary.

Version 0.46. Tagged as 'BCMVideo-0_46'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.46"
Module_Version          SETA    46
d17 2
a18 2
Module_Date             SETS    "30 Apr 2017"
Module_ApplicationDate  SETS    "30-Apr-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.46"
Module_HelpVersion      SETS    "0.46 (30 Apr 2017)"
@


1.45
log
@Fix GPU mode changes with hdmi_group=1
Detail:
  s/GPUMode - If config.txt specifies hdmi_group=1, the custom mode created via hdmi_timings will be added as group 1 mode 65 instead of the usual group 2 mode 87. Make sure we use the appropriate settings when selecting the mode.
  s/BCMVideo, s/GenCmd - Add hdmi_group to the list of settings to read during startup
Admin:
  Tested on Raspberry Pi 1
  Fixes hang on boot when GPU mode changes are enabled and hdmi_group=1 is specified in config.txt


Version 0.45. Tagged as 'BCMVideo-0_45'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.45"
Module_Version          SETA    45
d17 2
a18 2
Module_Date             SETS    "13 Apr 2017"
Module_ApplicationDate  SETS    "13-Apr-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.45"
Module_HelpVersion      SETS    "0.45 (13 Apr 2017)"
@


1.44
log
@Allow GenCmd to be overridden from Makefile
Also, change GETs to Unix style 'thing.s' instead of 's.thing'.

Version 0.44. Tagged as 'BCMVideo-0_44'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.44"
Module_Version          SETA    44
d17 2
a18 2
Module_Date             SETS    "21 Feb 2017"
Module_ApplicationDate  SETS    "21-Feb-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.44"
Module_HelpVersion      SETS    "0.44 (21 Feb 2017)"
@


1.43
log
@Fix compatibility with latest firmware, and revise calculation for number of screen banks to allocate
Detail:
  Some recent discussion on the Raspberry Pi forums has revealed the logic that the firmware uses to limit the virtual framebuffer size (and in turn, the number of screen banks we can allocate):
  https://www.raspberrypi.org/forums/viewtopic.php?f=28&t=5851&start=475#p1105321
  So rip out the dodgy logic that we were using previously and replace it with the same basic logic the GPU uses
  (With the addition of a max memory limit, for setups where GPU memory has been artificially limited in config.txt)
  s/BCMVideo - Update CalcScreenSize to use new logic, as discussed above
Admin:
  Tested on Raspberry Pi 1 + 3 with latest firmware
  Required for correct operation with Jan 28 2017 firmware and newer (old screen bank logic only worked due to a firmware bug which has now been fixed)


Version 0.43. Tagged as 'BCMVideo-0_43'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.43"
Module_Version          SETA    43
d17 2
a18 2
Module_Date             SETS    "28 Jan 2017"
Module_ApplicationDate  SETS    "28-Jan-17"
d21 2
a22 2
Module_FullVersion      SETS    "0.43"
Module_HelpVersion      SETS    "0.43 (28 Jan 2017)"
@


1.42
log
@Disable hardware pointer if the display is rotated
Detail:
  s/HWPointer - The GPU seems to struggle when dealing with a rotated hardware pointer, and there seem to be a couple of bugs for if we supply the pointer at the correct rotation, so make things easier and just fall back to a software pointer if there's any rotation going on.
  s/BCMVideo - Initialise VCGenCmd prior to the hardware pointer so HWP_Init can detect rotated displays
Admin:
  Tested on Raspberry Pi


Version 0.42. Tagged as 'BCMVideo-0_42'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.42"
Module_Version          SETA    42
d17 2
a18 2
Module_Date             SETS    "17 Dec 2016"
Module_ApplicationDate  SETS    "17-Dec-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.42"
Module_HelpVersion      SETS    "0.42 (17 Dec 2016)"
@


1.41
log
@Allow GPU mode change support to be disabled via the 'kernel' command line
Detail:
  s/GPUMode - If there's a 'disable_mode_changes' string in the command line provided by the firmware (i.e. cmdline.txt file), disable GPU mode changes
  s/BCMVideo - Fix to GPUMode {FALSE} rejecting all screen modes. Reduce max screen bank count again, after seeing an issue with 720x576x16bpp.
Admin:
  Tested on Raspberry Pi
  Should give Pi-Top users a solution for GPU mode changes breaking things:
  https://www.riscosopen.org/forum/forums/4/topics/6792


Version 0.41. Tagged as 'BCMVideo-0_41'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.41"
Module_Version          SETA    41
d17 2
a18 2
Module_Date             SETS    "15 Dec 2016"
Module_ApplicationDate  SETS    "15-Dec-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.41"
Module_HelpVersion      SETS    "0.41 (15 Dec 2016)"
@


1.40
log
@Add support for GPU mode changes, vcgencmd implementation, and fix some issues with rotated displays
Detail:
  With recent firmware (~Aug 10th and newer) it's possible to issue a hdmi_timings command via vcgencmd to define custom mode timings on the fly. Make use of this feature (if available) to allow the OS to feed mode timings to the GPU instead of relying on the GPU to scale the framebuffer to the mode that was selected at boot.
  As an off-shoot of this we also get a vcgencmd *-command that's roughly equivalent to the vcgencmd command that's available under Linux
  File changes:
  - Makefile, Resources/UK/CmdHelp - *vcgencmd help text
  - s/BCMVideo - Add a few option switches to control the new behaviour. Add some generic code for interacting with VCHIQ services. Fix some issues with rotated displays (mainly 90 / 270 degree rotation)
  - s/Debug - Fix debug routines corrupting some registers
  - s/GraphicsV - Disable GraphicsV_StartupMode implementation if the builtin MDF is disabled (-> GPU mode changes are enabled)
  - s/HWPointer - Update to use the generic VCHIQ service code from s/BCMVideo
  - s/GenCmd - vcgencmd implementation. On initialisation, use it to read some of the GPU state & limits.
  - s/TVService - basic TV service implementation; enough to read the GPU state and perform mode changes
  - s/GPUMode - GPU mode change handling.
Admin:
  Tested on Raspberry Pi 1, 2, 3 with old & new firmware


Version 0.40. Tagged as 'BCMVideo-0_40'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.40"
Module_Version          SETA    40
d17 2
a18 2
Module_Date             SETS    "10 Dec 2016"
Module_ApplicationDate  SETS    "10-Dec-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.40"
Module_HelpVersion      SETS    "0.40 (10 Dec 2016)"
@


1.39
log
@Explicitly release old framebuffer when changing mode
Detail:
  s/BCMVideo - Explicitly release the old framebuffer when changing mode. This appears to fix some issues relating to situations where the old framebuffer is reused, e.g. screen corruption caused by the stride not matching what the OS is expecting
Admin:
  Tested on Raspberry Pi 3
  Fixes problems reported on forums with screen corruption when changing directly to 1360 wide mode at boot (i.e. from 1920 wide mode):
  https://www.riscosopen.org/forum/forums/4/topics/6400


Version 0.39. Tagged as 'BCMVideo-0_39'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.39"
Module_Version          SETA    39
d17 2
a18 2
Module_Date             SETS    "20 Aug 2016"
Module_ApplicationDate  SETS    "20-Aug-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.39"
Module_HelpVersion      SETS    "0.39 (20 Aug 2016)"
@


1.38
log
@Fix hang/crash if hardware pointer fails to initialise
Detail:
  s/GraphicsV - Fix bug that would cause GV_UpdatePointer to fall through to GV_SetDMAAddress if hardware pointer support is compiled in but the pointer code failed to initialise (e.g. VCHIQ or RTSupport unavailable)
Admin:
  Tested on Pi 3B


Version 0.38. Tagged as 'BCMVideo-0_38'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.38"
Module_Version          SETA    38
d17 2
a18 2
Module_Date             SETS    "26 Mar 2016"
Module_ApplicationDate  SETS    "26-Mar-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.38"
Module_HelpVersion      SETS    "0.38 (26 Mar 2016)"
@


1.37
log
@Use BCMSupport for mailbox access
Detail:
  hdr/BCM2835reg - Remove mailbox definitions which are now exported by BCMSupport in its header
  s/BCMVideo, s/GraphicsV - Remove manual mailbox access and replace with equivalent calls to BCMSupport. Some tag buffer definitons moved in order to allow Entry macro to reference their size.
Admin:
  Tested on Raspberry Pi 1B, 2B, 3B
  Requires BCMSupport 0.03


Version 0.37. Tagged as 'BCMVideo-0_37'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.37"
Module_Version          SETA    37
d17 2
a18 2
Module_Date             SETS    "25 Mar 2016"
Module_ApplicationDate  SETS    "25-Mar-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.37"
Module_HelpVersion      SETS    "0.37 (25 Mar 2016)"
@


1.36
log
@Fix pointer coordinate space scale calculation when overscan in use
Detail:
  s/HWPointer - Fix logic for calculating framebuffer <-> display coordinate transformation to match that which contemporary firmware appears to be using (Since an asymmetric overscan fix from 13th May 2015?)
Admin:
  Tested on Raspberry Pi 1 with assorted overscan settings
  Fixes pointer positioning when using overscan with firmware from the last ~12 months


Version 0.36. Tagged as 'BCMVideo-0_36'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.36"
Module_Version          SETA    36
d17 2
a18 2
Module_Date             SETS    "01 Mar 2016"
Module_ApplicationDate  SETS    "01-Mar-16"
d21 2
a22 2
Module_FullVersion      SETS    "0.36"
Module_HelpVersion      SETS    "0.36 (01 Mar 2016)"
@


1.35
log
@Unblank screen on mode change
Detail:
  s/BCMVideo - Adjust the set of tags used on mode change to specify that the screen should unblank (RISC OS assumes this is the case, although current docs don't mention it)
Admin:
  Tested on Raspberry Pi


Version 0.35. Tagged as 'BCMVideo-0_35'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.35"
Module_Version          SETA    35
d17 2
a18 2
Module_Date             SETS    "14 Nov 2015"
Module_ApplicationDate  SETS    "14-Nov-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.35"
Module_HelpVersion      SETS    "0.35 (14 Nov 2015)"
@


1.34
log
@Don't map in VC memory
Detail:
  s/BCMVideo - Now that the kernel handles the software pointer for us, there's no need for us to manually map in any of the VC's memory
Admin:
  Tested on Raspberry Pi


Version 0.34. Tagged as 'BCMVideo-0_34'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.34"
Module_Version          SETA    34
d17 2
a18 2
Module_Date             SETS    "05 Aug 2015"
Module_ApplicationDate  SETS    "05-Aug-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.34"
Module_HelpVersion      SETS    "0.34 (05 Aug 2015)"
@


1.33
log
@Build fix
Don't set RES_OBJ to an empty string.

Version 0.33. Tagged as 'BCMVideo-0_33'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.33"
Module_Version          SETA    33
d17 2
a18 2
Module_Date             SETS    "03 Aug 2015"
Module_ApplicationDate  SETS    "03-Aug-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.33"
Module_HelpVersion      SETS    "0.33 (03 Aug 2015)"
@


1.32
log
@Fix black display on recent firmware
Detail:
  s/BCMVideo - Apparently the long-standing behaviour of the mailbox property interface returning an ARM physical address for the framebuffer is a bug (https://github.com/raspberrypi/linux/pull/1026#issuecomment-114263464), and so recent firmwares have been changed to return a GPU address instead. We want an ARM address, so detect what type we're given and offset appropriately.
Admin:
  Tested on Raspberry Pi 1 & 2, on old (February) and new (today) firmware


Version 0.32. Tagged as 'BCMVideo-0_32'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.32"
Module_Version          SETA    32
d17 2
a18 2
Module_Date             SETS    "15 Jul 2015"
Module_ApplicationDate  SETS    "15-Jul-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.32"
Module_HelpVersion      SETS    "0.32 (15 Jul 2015)"
@


1.31
log
@Remove manual software pointer support. Fix hardware pointer vanishing at X >= 2048 by falling back to kernel software pointer.
Detail:
  s/BCMVideo, s/SWPointer, s/GraphicsV - Remove manual software pointer code. Update GraphicsV code to deal with indicating when kernel software pointer is/isn't needed.
  s/HWPointer - Turn off hardware pointer and return with GraphicsV_UpdatePointer unclaimed if the pointer GPU X coord is >= 2048
Admin:
  Tested on Raspberry Pi
  Fixes pointer vanishing at X >= 2048


Version 0.31. Tagged as 'BCMVideo-0_31'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.31"
Module_Version          SETA    31
d17 2
a18 2
Module_Date             SETS    "10 Jul 2015"
Module_ApplicationDate  SETS    "10-Jul-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.31"
Module_HelpVersion      SETS    "0.31 (10 Jul 2015)"
@


1.30
log
@  Add Raspberry Pi 2 support
Detail:
  BCMVideo isn't a good citizen in the sense that it has hard-coded knowledge
  of the physical address space rather than asking the HAL, so equivalent
  checks for wether we're running on a Pi 1 or Pi 2 were needed here. There
  was also a significant bug in that BCMVideo wasn't translating ARM physical
  addresses to GPU physical addresses before programming the DMA controller.
  It seems we "got away with it" on Pi 1 at the expense of hammering the
  GPU's L1 cache, but with the different attachment of L2 caches on Pi 2
  due to the presence of the Cortex-A7 CPU, there were major cache coherency
  problems leading to failure to do tiled plots or block-moves.
Admin:
  Tested on Pi 1 and 2.

Version 0.30. Tagged as 'BCMVideo-0_30'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.30"
Module_Version          SETA    30
d17 2
a18 2
Module_Date             SETS    "02 Feb 2015"
Module_ApplicationDate  SETS    "02-Feb-15"
d21 2
a22 2
Module_FullVersion      SETS    "0.30"
Module_HelpVersion      SETS    "0.30 (02 Feb 2015)"
@


1.29
log
@Prepare for new Aemulor version
Detail:
  s/BCMVideo, s/GraphicsV - Adjust the AemulorSupport code so that it only activates the compatibility hacks if it detects a version of Aemulor <= 2.34; the plan is for the next released version to contain proper support for the new GraphicsV calls
Admin:
  Tested on Raspberry Pi


Version 0.29. Tagged as 'BCMVideo-0_29'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.29"
Module_Version          SETA    29
d17 2
a18 2
Module_Date             SETS    "02 Nov 2014"
Module_ApplicationDate  SETS    "02-Nov-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.29"
Module_HelpVersion      SETS    "0.29 (02 Nov 2014)"
@


1.28
log
@Add GraphicsV_ReadInfo implementation
Detail:
  s/GraphicsV - Added GraphicsV_ReadInfo implementation.
  s/BCMVideo - Keep a pointer to the HAL device so that its name can be returned for GVReadInfo_HardwareName
Admin:
  Tested on Raspberry Pi


Version 0.28. Tagged as 'BCMVideo-0_28'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.28"
Module_Version          SETA    28
d17 2
a18 2
Module_Date             SETS    "04 Aug 2014"
Module_ApplicationDate  SETS    "04-Aug-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.28"
Module_HelpVersion      SETS    "0.28 (04 Aug 2014)"
@


1.27
log
@Handle interlace control list item
Detail:
  s/BCMVideo - Update mode set & vet to take into account the interlace control list item. When interlace is specified we must make sure to double VertiDisplaySize to get the required framebuffer height.
Admin:
  Tested on Raspberry Pi


Version 0.27. Tagged as 'BCMVideo-0_27'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.27"
Module_Version          SETA    27
d17 2
a18 2
Module_Date             SETS    "20 Jul 2014"
Module_ApplicationDate  SETS    "20-Jul-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.27"
Module_HelpVersion      SETS    "0.27 (20 Jul 2014)"
@


1.26
log
@Fix calculation of cursor position when using off-center overscan settings
Detail:
  s/HWPointer - Corrected the logic in HWP_CalcDisplayScaleOffset for calculating the offset to be applied to the cursor position. The old code worked fine for regular overscan, but would get the offset wrong when dealing with off-center settings (e.g. different overscan_left and overscan_right values)
Admin:
  Tested on Raspberry Pi with latest firmware
  Should fix overscan issue reported on forums:
  https://www.riscosopen.org/forum/forums/9/topics/997?page=25#posts-33987


Version 0.26. Tagged as 'BCMVideo-0_26'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.26"
Module_Version          SETA    26
d17 2
a18 2
Module_Date             SETS    "26 Jun 2014"
Module_ApplicationDate  SETS    "26-Jun-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.26"
Module_HelpVersion      SETS    "0.26 (26 Jun 2014)"
@


1.25
log
@Add missing memory barrier
Detail:
  s/BCMVideo - Update VSync_Test to perform a memory barrier before the first (and only) write to the SMI
Admin:
  Tested on Raspberry Pi


Version 0.25. Tagged as 'BCMVideo-0_25'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.25"
Module_Version          SETA    25
d17 2
a18 2
Module_Date             SETS    "19 Jun 2014"
Module_ApplicationDate  SETS    "19-Jun-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.25"
Module_HelpVersion      SETS    "0.25 (19 Jun 2014)"
@


1.24
log
@A tab too many
*HELP Modules didn't line up.

Version 0.24. Tagged as 'BCMVideo-0_24'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.24"
Module_Version          SETA    24
d17 2
a18 2
Module_Date             SETS    "03 May 2014"
Module_ApplicationDate  SETS    "03-May-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.24"
Module_HelpVersion      SETS    "0.24 (03 May 2014)"
@


1.23
log
@Remove CMOS check code from GraphicsV_StartupMode
Detail:
  s/BCMVideo, s/GraphicsV - Remove CMOS configured mode check code from GraphicsV_StartupMode. Kernel-5_35-4_79_2_220 now does this check for us.
Admin:
  Tested on Raspberry Pi


Version 0.23. Tagged as 'BCMVideo-0_23'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.23"
Module_Version          SETA    23
d17 2
a18 2
Module_Date             SETS    "18 Apr 2014"
Module_ApplicationDate  SETS    "18-Apr-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.23"
Module_HelpVersion      SETS    "0.23 (18 Apr 2014)"
@


1.22
log
@Only override startup mode if configured mode is set to 'auto'
Detail:
  s/GraphicsV - Only override the startup mode if the CMOS configured mode is 'auto', to allow custom modes set in CMOS to be used
  s/BCMVideo - Remove unnecessary hardware mode change on startup
Admin:
  Tested on Raspberry Pi


Version 0.22. Tagged as 'BCMVideo-0_22'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.22"
Module_Version          SETA    22
d17 2
a18 2
Module_Date             SETS    "16 Apr 2014"
Module_ApplicationDate  SETS    "16-Apr-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.22"
Module_HelpVersion      SETS    "0.22 (16 Apr 2014)"
@


1.21
log
@Fix hardware pointer issues with latest firmware
Detail:
  s/HWPointer - Disable the cursor overlay if it's completely off-screen
Admin:
  Tested on Raspberry Pi
  Fixes bug/feature with latest firmware (around 30 Mar 2014) where cursor overlay will display incorrectly (large cursor filling screen or large square of colours) if moved completely off the top or left edge of the screen


Version 0.21. Tagged as 'BCMVideo-0_21'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.21"
Module_Version          SETA    21
d17 2
a18 2
Module_Date             SETS    "07 Apr 2014"
Module_ApplicationDate  SETS    "07-Apr-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.21"
Module_HelpVersion      SETS    "0.21 (07 Apr 2014)"
@


1.20
log
@Advertise GVRender_CopyRectangle as being fast
Detail:
  s/GraphicsV - Update GraphicsV_DisplayFeatures implementation to flag that CopyRectangle is fast, so that OS_SpriteOp 65 will prefer to use it over rendering all the sprite tiles manually
Admin:
  Untested, but will be soon
  Requires Kernel-5_35-4_79_2_210


Version 0.20. Tagged as 'BCMVideo-0_20'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.20"
Module_Version          SETA    20
d17 2
a18 2
Module_Date             SETS    "09 Mar 2014"
Module_ApplicationDate  SETS    "09-Mar-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.20"
Module_HelpVersion      SETS    "0.20 (09 Mar 2014)"
@


1.19
log
@Improve screen bank and palette handling
Detail:
  This change removes support for the BCMVideo$ScreenBanksEnabled system variable and replaces it with a new, single scheme for handling screen banks and palette updates
  Under the new scheme, screen bank and palette changes are deferred until somewhere halfway through the frame, at which point a single message sequence is sent to the GPU to update both the screen bank/display offset and the palette.
  Merging the screen bank and palette updates into one message sequence avoids the GPU taking two frames to process them (as it seems it has a habit of processing only one message sequence per frame), and sending the messages halfway through the frame ensures they're acted on before the start of the next frame (sending them when we receive a VSync interrupt is too late).
  The ARM timer is used to generate the interrupt that occurs halfway through the frame; this leaves HAL timer 1 free for other code. The required timer countdown value is recalculated each frame, so it should be mostly immune to any problems caused by the source clock frequency changing.
  File changes:
  - hdr/BCM2835reg - Added definitions for the ARM timer registers
  - s/BCMVideo - Remove ScreenBanksEnabled code. Disable the software pointer, as we're now guaranteed to have VCHIQ in ROM. Implement new screen bank & palette update code.
Admin:
  Tested on Raspberry Pi
  Test program shows palette updates are now in sync with screen bank changes, and if code follows the standard "wait for VSync, flip buffers" approach then there's only 1 frame of lag with no blocking, unlike the old code which could block and cut the system to half framerate or have 2+ frames of lag.


Version 0.19. Tagged as 'BCMVideo-0_19'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.19"
Module_Version          SETA    19
d17 2
a18 2
Module_Date             SETS    "19 Feb 2014"
Module_ApplicationDate  SETS    "19-Feb-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.19"
Module_HelpVersion      SETS    "0.19 (19 Feb 2014)"
@


1.18
log
@Fix potential for stack imbalance in palette set code
Detail:
  s/BCMVideo - Fix SetPalette to use BL to call PaletteTicker instead of B should the OS_CallAfter fail
Admin:
  Issue spotted by Jonathan Abbott


Version 0.18. Tagged as 'BCMVideo-0_18'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.18"
Module_Version          SETA    18
d17 2
a18 2
Module_Date             SETS    "19 Jan 2014"
Module_ApplicationDate  SETS    "19-Jan-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.18"
Module_HelpVersion      SETS    "0.18 (19 Jan 2014)"
@


1.17
log
@Misc fixes
Detail:
  s/BCMVideo - Fix bad pointer being passed to SetModeFromVIDCList on startup, potentially causing a hang on startup. Add extra LTORG needed when debugging enabled, and strip some useless debug output.
  s/HWPointer - Fix potential crash when shutting down hardware pointer due to pointer being passed in wrong register
Admin:
  Tested on Raspberry Pi


Version 0.17. Tagged as 'BCMVideo-0_17'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.17"
Module_Version          SETA    17
d21 2
a22 2
Module_FullVersion      SETS    "0.17"
Module_HelpVersion      SETS    "0.17 (19 Jan 2014)"
@


1.16
log
@Add support for GraphicsV_IICOp (EDID reading only)
Detail:
  hdr/BCM2835reg, s/BCMVideo - Add definition for the EDID read messagebox tag
  s/GraphicsV - Add an implementation of GraphicsV_IICOp which uses the message box interface to request EDID blocks from the GPU as required
Admin:
  Tested on Raspberry Pi


Version 0.16. Tagged as 'BCMVideo-0_16'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.16"
Module_Version          SETA    16
d17 2
a18 2
Module_Date             SETS    "01 Jan 2014"
Module_ApplicationDate  SETS    "01-Jan-14"
d21 2
a22 2
Module_FullVersion      SETS    "0.16"
Module_HelpVersion      SETS    "0.16 (01 Jan 2014)"
@


1.15
log
@Add compatibility code for Aemulor's low colour mode emulation
Detail:
  s/BCMVideo, s/GraphicsV - Add a compatibility hack to detect if Aemulor is intercepting our GraphicsV calls, and if so, include 1-4bpp in the list of pixel formats we claim we support. This is enough to get the low colour mode emulation of existing Aemulor versions working again with the recent GraphicsV changes. The code can easily be disabled in the future once it's no longer needed.
Admin:
  Tested on Raspberry Pi with and without Aemulor Pro 2.34 loaded
  Some issues with mode changes still remain - e.g. switching to 1920x1080x8bpp then back to 1920x1080x32bpp causes screen to be offset and wrapped. Other mode change problems have also been observed without Aemulor loaded - to be investigated.


Version 0.15. Tagged as 'BCMVideo-0_15'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.15"
Module_Version          SETA    15
d17 2
a18 2
Module_Date             SETS    "19 Dec 2013"
Module_ApplicationDate  SETS    "19-Dec-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.15"
Module_HelpVersion      SETS    "0.15 (19 Dec 2013)"
@


1.14
log
@Update to use new GraphicsV registration process. Add 64K colour mode support.
Detail:
  s/BCMVideo - Remove unnecessary 'modedefbuf' in workspace. Use new GraphicsV driver registration process. Remove local defintion of VIDC list structure, use Hdr:VIDCList instead. Improve mode vetting to check list type, pixel format, and ExtraBytes control list entry.
  s/GraphicsV - Only respond to our driver number. Implement StartupMode call (previously in HAL). Implement PixelFormats call so that we can advertise support for 64K colour modes.
  s/SWPointer - Update 16bpp software pointer handling to assume 64K instead of 32K mode
Admin:
  Tested in BCM2835 ROM
  Requires HdrSrc-2_38 and Kernel-5_35-4_79_2_203


Version 0.14. Tagged as 'BCMVideo-0_14'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.14"
Module_Version          SETA    14
d17 2
a18 2
Module_Date             SETS    "15 Dec 2013"
Module_ApplicationDate  SETS    "15-Dec-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.14"
Module_HelpVersion      SETS    "0.14 (15 Dec 2013)"
@


1.13
log
@Rewrite message box handling to allow multiple messages to be outstanding
Detail:
  s/BCMVideo - Rewritten message box handling. The buffer in which the messages are stored is now treated as a circular buffer, allowing multiple messages to be outstanding and awaiting processing by the GPU. This means the system only needs to block waiting for a response if the sender requires a response or the buffer becomes full. In practice, this means that setting BCMVideo$ScreenBanksEnabled to 2 to disable waiting for Vinit changes will allow software to use multiple screen banks and palette updates without any blocking occuring (assuming the software doesn't generate so many messages that the buffer overflows)
  s/Debug, s/BCMVideo - Added option for debug code to use DADebug instead of HAL_DebugTX
Admin:
  Tested on Raspberry Pi


Version 0.13. Tagged as 'BCMVideo-0_13'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.13"
Module_Version          SETA    13
d17 2
a18 2
Module_Date             SETS    "14 Apr 2013"
Module_ApplicationDate  SETS    "14-Apr-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.13"
Module_HelpVersion      SETS    "0.13 (14 Apr 2013)"
@


1.12
log
@Update to work with latest version of VCHIQ module
Detail:
  s/HWPointer - Specify dispmanx service version when connecting to it
  s/BCMVideo - Fixed compile error when hardware pointer disabled
Admin:
  Tested on Raspberry Pi
  Requires VCHIQ-0_05


Version 0.12. Tagged as 'BCMVideo-0_12'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.12"
Module_Version          SETA    12
d17 2
a18 2
Module_Date             SETS    "03 Mar 2013"
Module_ApplicationDate  SETS    "03-Mar-13"
d21 2
a22 2
Module_FullVersion      SETS    "0.12"
Module_HelpVersion      SETS    "0.12 (03 Mar 2013)"
@


1.11
log
@Tweak the code to get mode 7 working. Add a way to disable the wait for the GPU when switching screen banks.
Detail:
  s/BCMVideo - Decreased ScreenBankMax to get mode 7 to display properly. Update SetVinit to cope with being called from IRQ mode (as happens in mode 7), and to skip waiting for the GPU response when (a) called from IRQ mode or (b) BCMVideo$ScreenBanksEnabled is '2'.
  Resources/RPIMon - Added a 640x500 mode definition, for mode 7.
Admin:
  Tested on Raspberry Pi
  Requires HdrSrc-2_21 for the kernel to use a compatible version of its mode 7 code.


Version 0.11. Tagged as 'BCMVideo-0_11'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.11"
Module_Version          SETA    11
d17 2
a18 2
Module_Date             SETS    "05 Dec 2012"
Module_ApplicationDate  SETS    "05-Dec-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.11"
Module_HelpVersion      SETS    "0.11 (05 Dec 2012)"
@


1.10
log
@Add support for multiple screen banks. Improve mailbox handling to allow IRQs to be enabled while waiting for response.
Detail:
  s/BCMVideo:
  - Reworked mailbox handling to allow IRQs to be enabled while waiting for a response. If an attempt is made to send another message while still waiting for the first, the code will detect that a message is currently outstanding and will wait for the first to complete before claiming use of the shared message buffer. This has had a big impact on our IRQ latency, as it looks like the GPU waits until the end of each frame until processing framebuffer mailbox messages.
  - Added support for multiple screen banks. The GPU allows us to allocate a framebuffer which is larger than the area which is displayed on screen, and specify the X,Y offset of the displayed area. However because it works in texel coordinates instead of byte offsets, it means we're limited to vertical scrolling only, unlike the (potentially partial) horizontal scrolling support on other platforms. Several constraints are used to decide how many screen banks to try and allocate.
  - Added a BCMVideo$ScreenBanksEnabled system variable. If set to '0' it will disable screen banks on the next mode change. Any other value (including unset) enables them. This is a (potentially temporary) compatability option for use with old games; the fact that switching screen bank requires the driver to wait until the next VSync (while waiting for the GPU response) means that having screen banks enabled may have a significant framerate impact
  s/GraphicsV:
  - Screen bank support.
  - Allow GraphicsV_Render debug output to be turned off seperately of main debug switch.
  s/SWPointer:
  - Modified to work properly with screen banks.
Admin:
  Tested on Raspberry Pi
  Fixes flickering HUD in Star Fighter 3000
  Mailbox handling changes fix keyboard dying in Zool, however slow operation of screen bank switching means that you'll want screen banks disabled to be able to run at full frame rate.


Version 0.10. Tagged as 'BCMVideo-0_10'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.10"
Module_Version          SETA    10
d17 2
a18 2
Module_Date             SETS    "25 Nov 2012"
Module_ApplicationDate  SETS    "25-Nov-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.10"
Module_HelpVersion      SETS    "0.10 (25 Nov 2012)"
@


1.9
log
@Adjust hardware pointer code to take into account overscan
Detail:
  s/BCMVideo, s/HWPointer - Hardware pointer code now takes into account overscan when calculating the scale and offset values required to convert RISC OS screen pixels to hardware/dispmanx pixels
Admin:
  Tested on Raspberry Pi


Version 0.09. Tagged as 'BCMVideo-0_09'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.09"
Module_Version          SETA    9
d17 2
a18 2
Module_Date             SETS    "17 Oct 2012"
Module_ApplicationDate  SETS    "17-Oct-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.09"
Module_HelpVersion      SETS    "0.09 (17 Oct 2012)"
@


1.8
log
@Added a mode change to the initialisation sequence so we can get some VDU output.
This means we can see DebugROMInit and co in development ROMs again.

Version 0.08. Tagged as 'BCMVideo-0_08'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.08"
Module_Version          SETA    8
d17 2
a18 2
Module_Date             SETS    "04 Oct 2012"
Module_ApplicationDate  SETS    "04-Oct-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.08"
Module_HelpVersion      SETS    "0.08 (04 Oct 2012)"
@


1.7
log
@Add GraphicsV_Render implementation. Allow utilisation of new fake_vsync_isr config.txt option for generating VSync interrupts.
Detail:
  hdr/DMA, s/BCMVideo, s/GraphicsV - Added GraphicsV_Render implementation. Uses one of the 2D-capable DMA channels to accelerate block copies/moves. Rectangle fill acceleration currently not supported.
  hdr/BCM2835reg, s/BCMVideo, s/GraphicsV - Add code to detect whether the new fake_vsync_isr firmware option (https://github.com/raspberrypi/firmware/issues/67) is enabled and if so, use it as our VSync IRQ source.
  s/HWPointer - Add toggle for hardware pointer debug to reduce debug spam
Admin:
  Tested on Raspberry Pi with high processor vectors & various firmware versions


Version 0.07. Tagged as 'BCMVideo-0_07'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.07"
Module_Version          SETA    7
d17 2
a18 2
Module_Date             SETS    "18 Sep 2012"
Module_ApplicationDate  SETS    "18-Sep-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.07"
Module_HelpVersion      SETS    "0.07 (18 Sep 2012)"
@


1.6
log
@Add support for GraphicsV_SetBlank
Detail:
  s/BCMVideo, s/GraphicsV - Added support for GraphicsV_SetBlank, via simple mailbox message
Admin:
  Tested on Raspberry Pi


Version 0.06. Tagged as 'BCMVideo-0_06'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.06"
Module_Version          SETA    6
d17 2
a18 2
Module_Date             SETS    "08 Sep 2012"
Module_ApplicationDate  SETS    "08-Sep-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.06"
Module_HelpVersion      SETS    "0.06 (08 Sep 2012)"
@


1.5
log
@Add hardware pointer support
Detail:
  s/HWPointer, s/BCMVideo, s/GraphicsV - Added hardware pointer support, using VCHIQ to talk to the VC-side dispmanx service. Software pointer will automatically disable itself once the hardware pointer is activated by VCHIQ being loaded.
  s/SWPointer, s/BCMVideo - Renamed software pointer routines & variables to have 'SWP' prefix to more easily differentiate them from the 'HWP' hardware pointer routines/variables
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.05. Tagged as 'BCMVideo-0_05'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.05"
Module_Version          SETA    5
d17 2
a18 2
Module_Date             SETS    "07 Sep 2012"
Module_ApplicationDate  SETS    "07-Sep-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.05"
Module_HelpVersion      SETS    "0.05 (07 Sep 2012)"
@


1.4
log
@Add missing header file
Detail:
  hdr/BCM2835reg - New header file missing from previous commit
Admin:
  Should now build properly!


Version 0.04. Tagged as 'BCMVideo-0_04'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.04"
Module_Version          SETA    4
d17 2
a18 2
Module_Date             SETS    "03 Sep 2012"
Module_ApplicationDate  SETS    "03-Sep-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.04"
Module_HelpVersion      SETS    "0.04 (03 Sep 2012)"
@


1.3
log
@First working version of video driver
Detail:
  This version of the driver supports 8bpp & 32bpp screen modes, and uses a software mouse pointer.
  Startup mode is forced to 1080p, 32bpp (via code in the HAL). After that, RISC OS is free to do as it pleases.
  Makefile, s/BCMVideo - Added Castle licence text
  Resources/RPIMon - Simple MDF that gets loaded on startup. Contains simple 1080p & 720p mode definitions, plus copies of definitions for numbered modes from AKF50 MDF (to ensure RISC OS doesn't freak out due to not having any fallback modes available)
  s/BCMVideo - Main bulk of video driver
  s/Debug - Debug routines
  s/GraphicsV - GraphicsV handler
  s/SWPointer - Basic software mouse pointer implementation
Admin:
  Tested on Raspberry Pi with high processor vectors
  Still a few rough edges to iron out, but code seems stable enough


Version 0.03. Tagged as 'BCMVideo-0_03'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.03"
Module_Version          SETA    3
d17 2
a18 2
Module_Date             SETS    "02 Sep 2012"
Module_ApplicationDate  SETS    "02-Sep-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.03"
Module_HelpVersion      SETS    "0.03 (02 Sep 2012)"
@


1.2
log
@Detail: corrected build issue in makefile
Admin:


Version 0.02. Tagged as 'BCMVideo-0_02'
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.02"
Module_Version          SETA    2
d17 2
a18 2
Module_Date             SETS    "23 Jul 2012"
Module_ApplicationDate  SETS    "23-Jul-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.02"
Module_HelpVersion      SETS    "0.02 (23 Jul 2012)"
@


1.1
log
@Initial revision
@
text
@d14 2
a15 2
Module_MajorVersion     SETS    "0.01"
Module_Version          SETA    01
d17 2
a18 2
Module_Date             SETS    "19 Jul 2012"
Module_ApplicationDate  SETS    "19-Jul-12"
d21 2
a22 2
Module_FullVersion      SETS    "0.01"
Module_HelpVersion      SETS    "0.10 (19 Jul 2012)"
@


1.1.1.1
log
@Initial import of stub for BCMVideo module


@
text
@@
