head	1.2;
access;
symbols
	Connector-1_09:1.2
	Connector-1_08:1.2
	Connector-1_07:1.2
	Connector-1_06:1.2
	Connector-1_05:1.2
	Connector-1_04:1.1.1.1
	Connector-1_03-compiles:1.1.1.1
	Connector-1_03:1.1.1.1
	azieringer:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.01.17.10.46.32;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	svon2sz0mEO21hRy;

1.1
date	2016.01.17.10.23.16;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cLFakeidZ3ZCRgRy;

1.1.1.1
date	2016.01.17.10.23.16;	author rsprowson;	state Exp;
branches;
next	;
commitid	cLFakeidZ3ZCRgRy;


desc
@@


1.2
log
@Various changes
MOVS pc,lr -> MOV pc,lr and no need to stack R12 for an APCS function.
Lokales echo -> Local echo in UK templates.
Menu capitalisation made Style Guide compliant.
Access serial blockdrivers from SerialDev: rather than <SerialDev$Path>.
Fix get_screen_address() to not overwrite a word of stack by asking for 2 variables but only allowing 1 returned.
Move 'logfile' writes to Wimp$ScrapDir.
Changed hardwired 256 buffers to use MAX_PATHLENGTH (but still set to 256).
Include paths changed from "Desk.Thing.h" to Unix style "Desk/Thing.h"
Added Internal32 to the checks for magic Internal & InternalPC block driver names.
Configs are now read from Choices: and written through <Choices$Write>, with the defaults being held inside the application until the choices are first written out.
Changed default choice of download dir to RamFS.
When reading the *DOSMAP settings, use <Wimp$Scrap>. Should really be changed to use the MimeMap - an exercise for the reader.
Spool files are now held in <Wimp$ScrapDir>.

Version 1.05. Tagged as 'Connector-1_05'
@
text
@;
; Copyright (c) 1995, Andreas Zieringer
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;

	AREA	|C$$code|, CODE, READONLY
	GET	Hdr:ListOpts
	GET	Hdr:Macros

	EXPORT	plotspace1
	EXPORT	plotspace2
	EXPORT	plotspace4
	EXPORT	plotspace8
	EXPORT	plotspace16
	EXPORT	plotspace32

	EXPORT	plotsprite16
	EXPORT	plotsprite4

plotspace1
	CMP	a3,#9
	BEQ	small1
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
small1
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1],#80
	STRB	a2,[a1]
	MOV	pc,lr

plotspace2
	CMP	a3,#9
	BEQ	small2
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
small2
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1],#159
	STRB	a2,[a1],#1
	STRB	a2,[a1]
	MOV	pc,lr

plotspace4
	CMP	a3,#9
	BEQ	small4
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
small4
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1],#320
	STR	a2,[a1]
	MOV	pc,lr

plotspace8
	MOV	a4,a2
	CMP	a3,#9
	BEQ	small8
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
small8
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	ADD	a1,a1,#640
	STMIA	a1,{a2,a4}
	MOV	pc,lr

plotspace16
	MOV	a4,a2
	MOV	ip,a2
	CMP	a3,#9
	BEQ	small16
	MOV	a3,a2
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
small16
	MOV	a3,a2
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	ADD	a1,a1,#1280
	STMIA	a1,{a2,a3,a4,ip}
	MOV	pc,lr

plotspace32
	MOV	a4,a2
	MOV	ip,a2
	CMP	a3,#9
	BEQ	small16
	MOV	a3,a2
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528

small32
	MOV	a3,a2
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	ADD	a1,a1,#2528
	STMIA	a1!,{a2,a3,a4,ip}
	STMIA	a1!,{a2,a3,a4,ip}
	MOV	pc,lr


plotsprite16
	; r0=screenaddress
	; r1=sprite
	; r2=xsize in bytes

	Push	"r4-r11"

	SUB	r2,r2,#1280
	MOV	r11,#16
loop161
	MOV	r12,#40
loop162
	LDMIA	r1!,{r3-r10}
	STMIA	r0!,{r3-r10}
	SUBS	r12,r12,#1
	BNE	loop162
	SUBS	r11,r11,#1
	ADD	r0,r0,r2
	BNE	loop161

	Pull	"r4-r11"
	MOV	pc,lr

plotsprite4
	; r0=screenaddress
	; r1=sprite
	; r2=xsize in bytes

	Push	"r4-r11"

	SUB	r2,r2,#320
	MOV	r11,#16
loop41
	MOV	r12,#10
loop42
	LDMIA	r1!,{r3-r10}
        STMIA	r0!,{r3-r10}
	SUBS	r12,r12,#1
	BNE	loop42
	SUBS	r11,r11,#1
	ADD	r0,r0,r2
	BNE	loop41

	Pull	"r4-r11"
	MOV	pc,lr

	END
@


1.1
log
@Initial revision
@
text
@d29 10
a38 12
        AREA |C$$code|, CODE, READONLY
	EXPORT plotspace1
	EXPORT plotspace2
	EXPORT plotspace4
	EXPORT plotspace8
        EXPORT plotspace16
        EXPORT plotspace32

	EXPORT plotsprite16
	EXPORT plotsprite4

|x$codeseg|
d40 2
d63 1
a63 1
	MOVS	pc,lr
d101 1
a101 1
	MOVS	pc,lr
d125 1
a125 1
	MOVS     pc,lr
d167 1
a167 1
	MOVS	pc,lr
a169 2

	;MOV 	a3,a2
d174 1
a174 1
	MOV 	a3,a2
d177 1
a177 1
        STMIA	a1,{a2,a3,a4,ip}
d192 1
a192 1
	MOV 	a3,a2
d208 1
a208 1
        MOVS	pc,lr
a210 1

d215 1
a215 1
	MOV 	a3,a2
d242 1
a242 1
	MOV 	a3,a2
d266 1
a266 1
	MOVS	pc,lr
d274 1
a274 1
	STMFD	sp!,{r3-r12}
d279 1
a279 1
	MOV 	r12,#40
d282 1
a282 1
        STMIA	r0!,{r3-r10}
d289 2
a290 2
	LDMFD	sp!,{r3-r12}
	MOVS	pc,lr
d297 1
a297 1
	STMFD	sp!,{r3-r12}
d302 1
a302 1
	MOV 	r12,#10
d312 2
a313 2
	LDMFD	sp!,{r3-r12}
	MOVS	pc,lr
@


1.1.1.1
log
@Import of Connector terminal application
Special thanks to Andreas Zieringer for permission to publish his sources, and to Dr HIRANO Satoshi for the portions of HTerm that !Connector uses.
Also thanks to Hugo Fiennes and (the late) Chuck Forsberg for the RISC OS block drivers and ZModem protocol respectively.
Note that files
  attrib.h
  control.h
  font.h
  protocol.h
  rawfont.c
  xfont.c
  layer6.c
differ from the originals in Andreas' sources only in that they're using a conventionally worded BSD licence. The full source to the XCept application can be found
  http://src.gnu-darwin.org/ports/comms/xcept/works/XCept-2.1.2/xcept
The bitmap data files 'ibmfonts' and 'isofonts' are AOF objects currently (source lost).
The single function in TIMING.c has been rewritten to rationalise on 1 licence.
Unlikely to build.
@
text
@@
