head	1.2;
access;
symbols
	Connector-1_09:1.2
	Connector-1_08:1.2
	Connector-1_07:1.2
	Connector-1_06:1.2
	Connector-1_05:1.2
	Connector-1_04:1.2
	Connector-1_03-compiles:1.2
	Connector-1_03:1.1.1.1
	azieringer:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.01.17.10.32.51;	author rsprowson;	state Exp;
branches;
next	1.1;
commitid	I4fSWpIcqio5WgRy;

1.1
date	2016.01.17.10.23.15;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cLFakeidZ3ZCRgRy;

1.1.1.1
date	2016.01.17.10.23.15;	author rsprowson;	state Exp;
branches;
next	;
commitid	cLFakeidZ3ZCRgRy;


desc
@@


1.2
log
@Makefile recreated from fragments
Reconstructed IBM & ISO fonts from the AOF files using objasm
Renamed 'buffer.h' to 'serialbuff.h" to avoid name clash with 'buffer.h' on the OSLib search path.
Many minor fixups for missing function prototypes and implicit function types (now considered an error by the compiler).
Reimplemented Desk_Pane2_RemovePane(), based on what it probably should do as it's not in mainline !Desk.
Now builds and runs, if the Resources are copied in from an old binary distribution of !Connector.
Tagged as Connector-1_03-compiles
@
text
@/*
 * Copyright (c) 1995, Andreas Zieringer
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
extern void quit_prg(int t);
extern void start_send(void);
extern void set_configure_icons(void);
extern void set_smartbuttons(void);
extern void create_pane_icons(void);
extern void open_haupt_window(int where);
extern void open_banner_window(void);
extern void set_driver_info_window(char *di,int dv,char *dc,int mpn,int s);

extern Desk_bool Quit(Desk_event_pollblock *poll_block, void *reference);

extern Desk_bool Open_spool_window(void);

extern Desk_bool CloseWindow(Desk_event_pollblock *event, void *reference);
extern Desk_bool Close_haupt_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Close_dir_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Close_send_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Close_spool_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Close_status_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Close_dial_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Close_config_window(Desk_event_pollblock *event, void *reference);

extern Desk_bool Open_haupt_window(Desk_event_pollblock *event, void *reference);

extern Desk_bool Redraw_haupt_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Redraw_spool_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Redraw_filetrans_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Redraw_unten_window(Desk_event_pollblock *event, void *reference);

extern Desk_bool leave_haupt_window(Desk_event_pollblock *e, void *r);
extern Desk_bool enter_haupt_window(Desk_event_pollblock *e, void *r);

extern Desk_bool Click_baricon(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_haupt_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_tools_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_unten_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_configure_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_banner_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_fkeys_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_fkeys2_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_sbedit_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_sbedit2_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_smartbutton_window(Desk_event_pollblock *event, void *reference);
//extern Desk_bool Click_config_window(Desk_event_pollblock *event, void *reference);
//extern Desk_bool Click_config_pane_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_ansi_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_vt100_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_configure_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_cmodem_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_cterminal_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_cserial_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_cfiletr_window(Desk_event_pollblock *event, void *reference);

extern Desk_bool Click_receive_window(Desk_event_pollblock *event, void *reference);
//extern Desk_bool Click_dial_window(event_pollblock *event, void *reference);
extern Desk_bool Click_colours_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_dir_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_pane_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_edit_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_eterminal_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_elogon_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_spool_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_filetrans_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_exportdata_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_exporttext_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_xmodem_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_ymodem_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_zmodem_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_ascii_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool Click_send_window(Desk_event_pollblock *event, void *reference);
extern Desk_bool zmodem_warn(Desk_event_pollblock *event, void *reference);
extern Desk_bool ascii_warn(Desk_event_pollblock *event, void *reference);


extern Desk_bool MenuChoice_baricon_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_haupt_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_driver_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_flow_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_terminal_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_baud_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_data_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_transfertype_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_special_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_ascii_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_logon_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_import_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_status_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_dial_menu(Desk_event_pollblock *event, void *reference);
extern Desk_bool MenuChoice_send_menu(Desk_event_pollblock *event, void *reference);

//extern void Import_handler(message_dataload *data, void *reference);
extern Desk_bool load_file(Desk_event_pollblock *event, void *reference);

extern Desk_bool savetext(char *name,void *ref);

extern Desk_bool Gain_caret(Desk_event_pollblock *event, void *reference);
extern Desk_bool Lose_caret(Desk_event_pollblock *event, void *reference);

extern Desk_bool null(Desk_event_pollblock *event, void *reference);
extern Desk_bool input_haupt_window(Desk_event_pollblock *event, void *reference);


@


1.1
log
@Initial revision
@
text
@d29 1
d39 2
a121 1
extern Desk_bool savedata(char *name,void *ref);
@


1.1.1.1
log
@Import of Connector terminal application
Special thanks to Andreas Zieringer for permission to publish his sources, and to Dr HIRANO Satoshi for the portions of HTerm that !Connector uses.
Also thanks to Hugo Fiennes and (the late) Chuck Forsberg for the RISC OS block drivers and ZModem protocol respectively.
Note that files
  attrib.h
  control.h
  font.h
  protocol.h
  rawfont.c
  xfont.c
  layer6.c
differ from the originals in Andreas' sources only in that they're using a conventionally worded BSD licence. The full source to the XCept application can be found
  http://src.gnu-darwin.org/ports/comms/xcept/works/XCept-2.1.2/xcept
The bitmap data files 'ibmfonts' and 'isofonts' are AOF objects currently (source lost).
The single function in TIMING.c has been rewritten to rationalise on 1 licence.
Unlikely to build.
@
text
@@
