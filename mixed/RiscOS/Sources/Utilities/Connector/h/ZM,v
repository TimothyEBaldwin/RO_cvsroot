head	1.1;
branch	1.1.1;
access;
symbols
	Connector-1_09:1.1.1.1
	Connector-1_08:1.1.1.1
	Connector-1_07:1.1.1.1
	Connector-1_06:1.1.1.1
	Connector-1_05:1.1.1.1
	Connector-1_04:1.1.1.1
	Connector-1_03-compiles:1.1.1.1
	Connector-1_03:1.1.1.1
	azieringer:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.01.17.10.23.15;	author rsprowson;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cLFakeidZ3ZCRgRy;

1.1.1.1
date	2016.01.17.10.23.15;	author rsprowson;	state Exp;
branches;
next	;
commitid	cLFakeidZ3ZCRgRy;


desc
@@



1.1
log
@Initial revision
@
text
@/*
 *   Z M . H
 *    ZMODEM protocol primitives
 *    05-09-88  Chuck Forsberg Omen Technology Inc
 */

extern int Rxtimeout;		/* Tenths of seconds to wait for something */

/* Globals used by ZMODEM functions */

extern int Rxframeind;		/* ZBIN ZBIN32, or ZHEX type of frame received */
extern int Rxtype;		/* Type of header received */
extern int Rxcount;		/* Count of data bytes received */
extern char Rxhdr[];		/* Received header */
extern char Txhdr[];		/* Transmitted header */
extern long Rxpos;		/* Received file position */
extern long Txpos;		/* Transmitted file position */
extern int Txfcs32;		/* TURE means send binary frames with 32 bit FCS */
extern int Crc32t;		/* Display flag indicating 32 bit CRC being sent */
extern int Crc32;		/* Display flag indicating 32 bit CRC being received */
extern int Znulls;		/* Number of nulls to send at beginning of ZDATA hdr */
extern char Attn[];	/* Attention string rx sends to tx on err */


extern void zsbhdr(int type,register char * hdr);
extern void zshhdr(int type,register char * hdr);
extern void zsdata(register char *buf,int length,int frameend);
extern int zrdata(register char *buf,int length);
extern int zgethdr(char *hdr,int eflag);
extern void stohdr(long pos);
extern long rclhdr(register char *hdr);


/* End of zm.h */
@


1.1.1.1
log
@Import of Connector terminal application
Special thanks to Andreas Zieringer for permission to publish his sources, and to Dr HIRANO Satoshi for the portions of HTerm that !Connector uses.
Also thanks to Hugo Fiennes and (the late) Chuck Forsberg for the RISC OS block drivers and ZModem protocol respectively.
Note that files
  attrib.h
  control.h
  font.h
  protocol.h
  rawfont.c
  xfont.c
  layer6.c
differ from the originals in Andreas' sources only in that they're using a conventionally worded BSD licence. The full source to the XCept application can be found
  http://src.gnu-darwin.org/ports/comms/xcept/works/XCept-2.1.2/xcept
The bitmap data files 'ibmfonts' and 'isofonts' are AOF objects currently (source lost).
The single function in TIMING.c has been rewritten to rationalise on 1 licence.
Unlikely to build.
@
text
@@
