head	1.2;
access;
symbols
	BCMSupport-0_02:1.1.1.1
	BCMSupport-0_01:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.03.25.20.10.49;	author jlee;	state dead;
branches;
next	1.1;
commitid	sX9Z7lEzyKL7X30z;

1.1
date	2012.07.22.13.14.16;	author jballance;	state Exp;
branches
	1.1.1.1;
next	;
commitid	CrUF5FuCmHPFMydw;

1.1.1.1
date	2012.07.22.13.14.16;	author jballance;	state Exp;
branches;
next	;
commitid	CrUF5FuCmHPFMydw;


desc
@@


1.2
log
@Implement BCMSupport module
Detail:
  The BCMSupport module provides the following functionality:
  * A SWI interface which allows multiple clients to send and receive messages via the ARM<->GPU mailbox
  * A higher-level SWI interface to make dealing with the mailbox property interface easier
  * A CPU clock device for controlling the ARM clock rate and measuring the SoC temperature
  The implementation is mostly in C and aims to be thread/multicore safe
Admin:
  Tested on Raspberry Pi 1B/2B/3B


Version 0.03. Tagged as 'BCMSupport-0_03'
@
text
@
        ; You'll often see these prefixed with Hdr: for historic reasons.
        ; This is no longer necessary, and in fact omitting them makes it
        ; possible to cross-compile your source code.
        GET     ListOpts
        GET     Macros
        GET     System
        GET     ModHand
        
        ; Assembler modules are conventionally, but not necessarily,
        ; position-independent code. Area name |!| is guaranteed to appear
        ; first in link order, whatever your other areas are named.
        AREA    |!|, CODE, READONLY, PIC
        
        ENTRY
        
        DCD     0 ; Start
        DCD     Init - |!|
        DCD     Final - |!|
        DCD     0; Service call handler
        DCD     Title - |!|
        DCD     Help - |!|
        DCD     0 ; Keyword table
        DCD     0 ; SWI chunk
        DCD     0 ; SWI handler
        DCD     0 ; SWI table
        DCD     0 ; SWI decoder
        DCD     0 ; Messages
        DCD     Flags - |!|
        
Title   =       "BCMSupport", 0
Help    =       "BCMSupport", 9, 9, "0.00 (01 Jan 2000)", 0
        ALIGN
Flags   &       ModuleFlag_32bit
        
Init    ROUT
        Push    "lr"
;        SWI     XOS_WriteI+7
        Pull    "pc"
        
Final   ROUT
        MOV     pc, lr
        
        END
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial import of stub for BCMSupport module

@
text
@@
