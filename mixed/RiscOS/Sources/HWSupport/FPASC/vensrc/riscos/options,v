head	4.12;
access;
symbols
	FPASC-4_36:4.11
	FPASC-4_35:4.11
	FPASC-4_34:4.11
	FPASC-4_33-1:4.11
	FPASC-4_33:4.11
	FPASC-4_32:4.11
	FPASC-4_31:4.11
	FPASC-4_30:4.11
	FPASC-4_29:4.11
	FPASC-4_28-2:4.10
	FPASC-4_28:4.10
	FPASC-4_27:4.10
	FPASC-4_26:4.10
	FPASC-4_25:4.10
	FPASC-4_24:4.10
	FPASC-4_23:4.10
	RO_5_07:4.10
	FPASC-4_22:4.10
	FPASC-4_21:4.10
	FPASC-4_20:4.9
	FPASC-4_19:4.8
	FPASC-4_18:4.7
	FPASC-4_17:4.7
	FPASC-4_16:4.7
	FPASC-4_15:4.7
	FPASC-4_14:4.7
	dellis_autobuild_BaseSW:4.6
	FPASC-4_13:4.6
	FPASC-4_12:4.6
	sbrodie_sedwards_16Mar2000:4.5
	kbracey_32bit_merge:4.4.2.1
	FPASC-4_11:4.5
	FPASC-4_10-4_3_2_1:4.4.2.1
	kbracey_32bit:4.4.0.2
	dcotton_autobuild_BaseSW:4.7
	FPASC-4_10:4.4
	Ursula_merge:4.2.2.2
	mstphens_UrsulaRiscPCBuild_20Nov98:4.2.2.1.2.1
	Ursula_RiscPC:4.2.2.1.0.2
	nicke_FPASC-4_05:4.1.7.1
	FPASC-4_09:4.3
	rthornb_UrsulaBuild-19Aug1998:4.2.2.1
	UrsulaBuild_FinalSoftload:4.2.2.1
	rthornb_UrsulaBuild-12Aug1998:4.2.2.1
	aglover_UrsulaBuild-05Aug1998:4.2.2.1
	rthornb_UrsulaBuild-29Jul1998:4.2.2.1
	rthornb_UrsulaBuild-22Jul1998:4.2.2.1
	rthornb_UrsulaBuild-15Jul1998:4.2.2.1
	rthornb_UrsulaBuild-07Jul1998:4.2.2.1
	rthornb_UrsulaBuild-17Jun1998:4.2.2.1
	rthornb_UrsulaBuild-03Jun1998:4.2.2.1
	rthornb_UrsulaBuild-27May1998:4.2.2.1
	rthornb_UrsulaBuild-21May1998:4.2.2.1
	rthornb_UrsulaBuild_01May1998:4.2.2.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.2.0.4
	Daytona_bp:4.2
	Ursula:4.2.0.2
	Ursula_bp:4.2
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.2
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.12
date	2018.04.12.01.01.39;	author bavison;	state Exp;
branches;
next	4.11;
commitid	g5vTCT2S9rhiy5yA;

4.11
date	2011.08.06.20.20.21;	author jlee;	state Exp;
branches;
next	4.10;
commitid	RGwDCySu9G6uquuv;

4.10
date	2004.01.26.17.29.19;	author kbracey;	state Exp;
branches;
next	4.9;

4.9
date	2003.02.21.14.35.25;	author kbracey;	state Exp;
branches;
next	4.8;

4.8
date	2002.04.12.13.42.17;	author srevill;	state Exp;
branches;
next	4.7;

4.7
date	2000.10.02.16.02.01;	author kbracey;	state Exp;
branches;
next	4.6;

4.6
date	2000.03.24.10.53.17;	author kbracey;	state Exp;
branches;
next	4.5;

4.5
date	99.11.26.14.37.35;	author sbrodie;	state Exp;
branches;
next	4.4;

4.4
date	99.08.03.17.57.02;	author kbracey;	state Exp;
branches
	4.4.2.1;
next	4.3;

4.3
date	98.09.21.12.36.57;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	97.05.02.09.52.10;	author kbracey;	state Exp;
branches
	4.2.2.1;
next	4.1;

4.1
date	96.11.05.09.35.56;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.5.1
	4.1.7.1;
next	;

4.4.2.1
date	99.11.23.17.19.17;	author kbracey;	state Exp;
branches;
next	;

4.2.2.1
date	98.03.27.10.35.20;	author mstphens;	state Exp;
branches
	4.2.2.1.2.1;
next	4.2.2.2;

4.2.2.2
date	98.11.13.14.40.08;	author mstphens;	state Exp;
branches;
next	;

4.2.2.1.2.1
date	98.11.23.15.01.32;	author mstphens;	state Exp;
branches;
next	;

4.1.1.1
date	96.11.05.09.35.56;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.25.15;	author nturton;	state Exp;
branches
	4.1.3.1.2.1;
next	4.1.3.2;

4.1.3.2
date	97.05.01.14.35.59;	author kbracey;	state Exp;
branches;
next	;

4.1.3.1.2.1
date	97.04.30.12.28.19;	author kbracey;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.52.05;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.46.49;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.12
log
@  Updated to build using shared makefiles
Detail:
  Makefile rewritten. All the changes elsewhere reflect the fact that
  CoreDir, VeneerDir and FileExt are now passed in from the makefile,
  since that has visibility of filespec differences between OSes.


Version 4.36. Not tagged
@
text
@; >riscos.options
;
; Copyright (c) 1993 Acorn Computers Ltd., Cambridge, England.
;
; Assembler source for FPA support code and emulator
; ==================================================
; Assembly time option variables
;

;
; cope with Hdr:Proc
;
                GBLL    False
False           SETL    {FALSE}

;
; Cannot include Hdr:System since it breaks the core, so
; add definitions here
;
XMessageTrans_OpenFile          *       &61501
XMessageTrans_CloseFile         *       &61504
XMessageTrans_ErrorLookup       *       &61506

;
; Include header files
;
                GET     ListOpts
                GET     Macros
                GET     Services
                GET     ModHand
                GET     EnvNumbers
                GET     $VeneerDir.FPEMacros$FileExt
                GET     VersionASM
                GET     PublicWS
                GET     OSRSI6

    [   Arm600
;
; selected highlights from Hdr2:ARM6Macros
;

ARM_CC_Mask     *       &FC000003

; New positions of I and F bits in 32-bit PSR

I32_bit *       1 :SHL: 7
F32_bit *       1 :SHL: 6
IF32_26Shift *  26-6

; Processor mode numbers

USR26_mode      *       2_00000
FIQ26_mode      *       2_00001
IRQ26_mode      *       2_00010
SVC26_mode      *       2_00011
USR32_mode      *       2_10000
FIQ32_mode      *       2_10001
IRQ32_mode      *       2_10010
SVC32_mode      *       2_10011
ABT32_mode      *       2_10111
UND32_mode      *       2_11011
SYS32_mode      *       2_11111

; New register names
r13_irq         RN      13

r13_svc         RN      13

r13_abort       RN      13
r14_abort       RN      14
lr_abort        RN      14

r13_undef       RN      13
r14_undef       RN      14
lr_undef        RN      14

; SetMode newmode, reg1, regoldpsr
;
; Sets processor mode to constant value newmode
; using register reg1 as a temporary.
; If regoldpsr is specified, then this register
; on exit holds the old PSR before the mode change
; reg1 on exit always holds the new PSR after the mode change

        MACRO
        SetMode $newmode, $reg1, $regoldpsr
      [ "$regoldpsr"=""
        MRS     $reg1, CPSR
        BIC     $reg1, $reg1, #&1F
        ORR     $reg1, $reg1, #$newmode
        MSR     CPSR_c, $reg1
      |
        MRS     $regoldpsr, CPSR
        BIC     $reg1, $regoldpsr, #&1F
        ORR     $reg1, $reg1, #$newmode
        MSR     CPSR_c, $reg1
      ]
        MEND

;
; a couple of useful files to GET
;
        GET     SWIs
        GET     RISCOS

    |

;
; SWIs defined in Hdr2:RISCOS for Arm600 builds, but in
; Hdr:System (i.e. a non-included file) for other builds
;
XOS_Byte                        *       &20006
XOS_Module                      *       &2001e
OS_GenerateError                *       &2b
XOS_ChangeEnvironment           *       &20040

    ]


;
; Definition from Hdr:NewErrors
;
ErrorBase_FloatingPoint         *       &80000200

;
; Definition from Hdr:PublicWS
;
SVCSTK                          *       &01C02000


;
; Debug control
;
                GBLA    debug
debug                   SETA    0

        [       debug > 0

                GET     HostFS
                GET     Debug

Host_Debug      SETL    False
Debug_MaybeIRQ  SETL    False

        ]

;
; first deal with variables that need to be declared and set
;
                GBLL            FPASCWanted

                GBLL            FPEWanted

    [ Flavour = "Both"
FPASCWanted             SETL    {TRUE}
FPEWanted               SETL    {TRUE}
    ]

    [ Flavour = "SoftOnly"
FPASCWanted             SETL    {FALSE}
FPEWanted               SETL    {TRUE}
    ]

    [ Flavour = "HardOnly"
FPASCWanted             SETL    {TRUE}
FPEWanted               SETL    {FALSE}
    ]

                GBLL            ARM2Safe
ARM2Safe                SETL    :LNOT: Arm600

                GBLS            UndefHandlerConvention
UndefHandlerConvention  SETS    "StandAlone"

                GBLL            MultipleContexts
MultipleContexts        SETL    {TRUE}

    [ :LNOT: :DEF: EnableInterrupts
                GBLL            EnableInterrupts
EnableInterrupts        SETL    {TRUE}
    ]

    [ :LNOT: :DEF: Use64bitMultiply
                GBLL            Use64bitMultiply
Use64bitMultiply        SETL    {FALSE}
    ]

    [ :LNOT: :DEF: UseCLZ
                GBLL            UseCLZ
UseCLZ                  SETL    {FALSE}
    ]

                GBLL            SASTMhatbroken
SASTMhatbroken          SETL    {TRUE}

                GBLL            UseAbortStack
UseAbortStack           SETL    {FALSE}

                GBLA            FPSRInitValue
FPSRInitValue           SETA    &70000

                GBLS            FPRegInitValue
FPRegInitValue          SETS    "Zero"

                GBLA            ExpectsCoreVersion
ExpectsCoreVersion      SETA    1

                GBLL            FixUFLonMove
FixUFLonMove            SETL    {TRUE}

;
; now deal with variables that the veneers are only expected to modify
;
TrapsCanReturn          SETL    {FALSE}
FPE4WordsPerReg         SETL    {TRUE}
DoIntegerPowers         SETL    {TRUE}
ZeroToTheZero           SETS    "One"
FPEChecksNextInstr      SETL    {TRUE}
NoTranscendentals       SETL    {FALSE}
NoPacked                SETL    {FALSE}
DynamicRounding         SETL    {FALSE}


; FPEAnchorType can either be 'Low', 'High' or 'Local'
; 'Low' is for builds with zero page present
; 'High' is for builds with zero page relocated to &FFFF0000
; 'Local' is for RAM builds with unknown zero page location. Instead of storing our workspace pointer in zero page we'll store it inside the module.

 [ FPEAnchorType = "Low"
FPEAnchor         * Legacy_FPEAnchor
 |
   [ FPEAnchorType = "High"
FPEAnchor         * &ffff0000 + Legacy_FPEAnchor
   |
     ASSERT FPEAnchorType = "Local"
   ]
 ]

        END

;
; EOF riscos.options
;
@


4.11
log
@Update to work with zero page relocation
Detail:
  Unlike most modules which can just store the zero page pointers in their workspace, FPEmulator is a bit trickier since the zero page pointers are needed from within abort handlers and other places where the module workspace pointer is hard to come by (in fact, FPEmulator uses FPEAnchor to store the module workspace pointer)
  So rather than break/rework lots of perfectly good code, there are now three different FPEmulator builds available, selected via the new FPEAnchorType option:
  * FPEAnchorType=Low will select a build suitable for machines with FPEAnchor at its original location in zero page. This is the default for ROM builds.
  * FPEAnchorType=High will select a build suitable for the FPEAnchor location (&ffff0ff4) that's used with zero page relocation. Machines with relocated zero page must specify this option in their components file.
  * FPEAnchorType=Local will select a build suitable for softloading. Rather than rely on using a zero page location for storing the workspace pointer, the module just stores it within itself. This option is selected automatically for RAM builds and can't be overriden via the components file.
  File changes:
  riscos/Makefile - Reworked makefile to support the new options
  riscos/FPEMacros - Updated AdrWS macro to work with FPEAnchorType=Local
  riscos/options - For non-local builds, declare the appropriate value for FPEAnchor
  riscos/start - Use appropriate FPEAnchor initialisation code
Admin:
  All 3 configs tested (ROM builds on BB-xM, RAM softload on Iyonix)


Version 4.29. Tagged as 'FPASC-4_29'
@
text
@d32 2
a33 2
                GET     $VeneerDir.FPEMacros
                GET     $VeneerDir.^.^.VersionASM
@


4.10
log
@* Denormalised numbers now held consistently in their nominal precision.
  MVF/MNF/ABS of a denormalised number without a change of precision
  treated specially, much like signalling NaNs. This prevents spurious
  underflow traps if they're enabled. Previously

       ; Underflow traps on
       LDFS    F0,DenormalisedSingle
       MVFS    F0,F0

  or

       ; Underflow traps off
       LDFD    F0,SmallestNormalDouble
       MUFD    F0,F0,#0.5
       ; Turn underflow traps on
       STFD    F0,xxx

  would have generated traps.

* LDFP/STFP rearrangement of NaN significands reinstated, as DDT
  can now make use of it.

* Typos in over/underflow code for LDFP corrected.

* Makefile changed to build in rm.${SYSTEM} instead of rm.${MACHINE}.

* Experimental dynamic rounding controls added to FPSR (for emulator
  only). Currently disabled; does not affect LDFP or STFP yet.

Version 4.21. Tagged as 'FPASC-4_21'
@
text
@d34 2
a125 5
; Definition from Hdr:NewSpace
;
FPEAnchor                       *       &ff4

;
d223 16
@


4.9
log
@Bug fix in STFP - minor error at bottom of word.
New switch to allow use of CLZ.
Added Docs.

Version 4.20. Tagged as 'FPASC-4_20'
@
text
@d211 2
d224 1
@


4.8
log
@  * Fixed install phase;
  * Moved stripdepnd out of Makefile;
  * Variants passed on amu command line.
Detail:
  * You can now specify the precise build variant of the FPEmulator by passing
    System=... and FPE_APCS=... on the amu command line. There are now more
    files in riscos.s to set the options for various types (as per Wimp).
    The default FPE as was is now built with: System="RO380" FPE_APCS="3/32bit"
Admin:
  Builds.
Version 4.19. Tagged as 'FPASC-4_19'
@
text
@d191 5
@


4.7
log
@* Fixes to allow correct builds for 26-bit systems (RISC OS 3.1) and 32-bit
  systems using the 32-bit core (RISC OS 3.5-3.7).

Version 4.14. Tagged as 'FPASC-4_14'
@
text
@d181 1
d184 1
d186 1
d189 1
@


4.6
log
@  Multiple context version of FP emulator and FPA support code - FP in
  callbacks and interrupts can now be yours.

  Exception dumps now available (integer and FP).

Detail:
* Changed to multiple-context version of the core. This will allow floating-
  point to be used safely in callbacks and interrupt routines (as long as
  you call the appropriate context changing SWIs). This activates the
  dormant SWIs FPEmulator_ChangeContext, FPEmulator_ContextLength and
  FPEmulator_InitContext. FPEmulator_DeactivateContext and
  FPEmulator_ActivateContext now have full functionality.

* Added new SWI interfaces to core: FPEmulator_Abort, FPEmulator_LoadContext
  and FPEmulator_SaveContext.

* On FP exceptions, integer registers are copied into the exception dump area.
  (TO DO: registers are USR mode ones - should take pains to figure out
  SVC or IRQ ones as required).

* The FPEmulator now has an exception dump area for floating point registers -
  a suitable version of Debugger will show these with *ShowFPRegs.

* FPEmulator_ChangeContext and FPEmulator_DeactivateContext now return -1
  for the default context.

* Run time detection of SVC stack position added.

* No longer creates a MessageTrans descriptor on the stack.

* Removed broken STM^ fudge from the FPA veneer, as the only StrongARMs that
  need it can't use the FPA.

* Fixed a typo in core_abort.

* Stopped continuous emulation runs crossing 4K page boundaries, with a view
  to improving abort handling.

* Use of DREG debugging macros fixed (line endings were being inserted in the
  wrong place).

* Prototype code to catch aborts inside the emulator and change the registers
  to make it look like the emulated instruction aborted. This is cute, but
  causes problems with anything like Ursula's lazy task-swapping. Really this
  needs to be done only on fatal aborts. Compiled out for now.

Version 4.12. Tagged as 'FPASC-4_12'
@
text
@d110 1
d113 1
@


4.5
log
@  Merge of FPEmulator which uses the new macros in HdrSrc 0.63
Detail:
  Now 32-bit module compatible.
Admin:
  Tested the 26-bit build in the Customer F5 build.
  32-bit build tested on prototype 32-bit RISC OS.


Version 4.11. Tagged as 'FPASC-4_11'
@
text
@d31 1
d129 1
a129 1
SVCSTK                          *       &01C08000 ;32k stack for Ursula
d143 1
a143 1
Host_Debug      SETL    True
d177 1
a177 1
MultipleContexts        SETL    {FALSE}
d187 3
@


4.4
log
@Ursula branch merged. This contains:
  Use of UMULL (compiled out).
  Service call table.
  Runs in UND32 mode (requires latest Kernel), giving a speed boost.

Version 4.10. Tagged as 'FPASC-4_10'
@
text
@a28 1
                GET     Proc
d85 1
a85 1
        MRS     $reg1, CPSR_all
d88 1
a88 1
        MSR     CPSR_all, $reg1
d90 1
a90 1
        MRS     $regoldpsr, CPSR_all
d93 1
a93 1
        MSR     CPSR_all, $reg1
@


4.4.2.1
log
@ObjASM 3.12 syntax warning fixes.
32-bit compatible, hopefully.
Requires HdrSrc.

Version 4.10, 4.3.2.1. Tagged as 'FPASC-4_10-4_3_2_1'
@
text
@d29 1
d86 1
a86 1
        MRS     $reg1, CPSR
d89 1
a89 1
        MSR     CPSR_c, $reg1
d91 1
a91 1
        MRS     $regoldpsr, CPSR
d94 1
a94 1
        MSR     CPSR_c, $reg1
@


4.3
log
@Makefile modified to use LocalRes$Path.
Changed to use srccommit.
German resources added.

Version 4.09. Tagged as 'FPASC-4_09'
@
text
@d13 2
a14 2
		GBLL	False
False		SETL	{FALSE}
d20 3
a22 3
XMessageTrans_OpenFile		*	&61501
XMessageTrans_CloseFile		*	&61504
XMessageTrans_ErrorLookup	*	&61506
d27 7
a33 7
		GET	ListOpts
		GET	Macros
		GET	Proc
		GET	Services
		GET	ModHand
		GET	$VeneerDir.FPEMacros
		GET	$VeneerDir.^.^.VersionASM
d35 1
a35 1
    [	Arm600
d40 2
d60 1
d63 1
a63 1
r13_irq		RN	13
d65 1
a65 1
r13_svc		RN	13
d101 2
a102 2
	GET	SWIs
	GET	RISCOS
d110 2
a111 2
XOS_Module			*	&2001e
OS_GenerateError		*	&2b
d119 1
a119 1
ErrorBase_FloatingPoint		*	&80000200
d124 7
a130 1
FPEAnchor			*	&ff4
d135 2
a136 2
		GBLA	debug
debug			SETA	0
d138 1
a138 8
	[	debug > 0
XOS_WriteC			*	&20000
XOS_WriteS			*	&20001
XOS_Write0			*	&20002
XOS_NewLine			*	&20003
XOS_WriteN			*	&20046
XOS_ConvertInteger4		*	&200dc
XOS_WriteI			*	&20100
d140 2
a141 1
stack				RN	sp
d143 4
a146 2
		GET	Debug
	]
d151 1
a151 1
		GBLL		FPASCWanted
d153 1
a153 1
		GBLL		FPEWanted
d156 2
a157 2
FPASCWanted		SETL	{TRUE}
FPEWanted		SETL	{TRUE}
d161 2
a162 2
FPASCWanted		SETL	{FALSE}
FPEWanted		SETL	{TRUE}
d166 2
a167 2
FPASCWanted		SETL	{TRUE}
FPEWanted		SETL	{FALSE}
d170 11
a180 2
		GBLL		ARM2Safe
ARM2Safe		SETL	:LNOT: Arm600
d182 2
a183 2
		GBLS		UndefHandlerConvention
UndefHandlerConvention	SETS	"StandAlone"
d185 2
a186 2
		GBLL		MultipleContexts
MultipleContexts	SETL	{FALSE}
d188 2
a189 2
		GBLL		EnableInterrupts
EnableInterrupts	SETL	{TRUE}
d191 2
a192 2
		GBLA		FPSRInitValue
FPSRInitValue		SETA	&70000
d194 2
a195 2
		GBLS		FPRegInitValue
FPRegInitValue		SETS	"Zero"
a196 2
		GBLA		ExpectsCoreVersion
ExpectsCoreVersion	SETA	1
d201 7
a207 7
TrapsCanReturn		SETL	{FALSE}
FPE4WordsPerReg		SETL	{TRUE}
DoIntegerPowers		SETL	{TRUE}
ZeroToTheZero		SETS	"One"
FPEChecksNextInstr	SETL	{TRUE}
NoTranscendentals	SETL	{FALSE}
NoPacked		SETL	{FALSE}
d209 1
a209 1
	END
@


4.2
log
@Version RO_3_71 merged
@
text
@d33 1
a33 1
		GET	$VeneerDir.Version
@


4.2.2.1
log
@incorporate KBracey changes:
  Use long multiply (assumes long multiply; won't work on ARM 610,710)
  Compile with 32-bit APCS for better efficiency (requires Ursula kernel)
  Also compile for soft FP only (suit SA110)
update module format to Ursula service handler table
@
text
@d13 2
a14 2
                GBLL    False
False           SETL    {FALSE}
d20 3
a22 3
XMessageTrans_OpenFile          *       &61501
XMessageTrans_CloseFile         *       &61504
XMessageTrans_ErrorLookup       *       &61506
d27 7
a33 7
                GET     ListOpts
                GET     Macros
                GET     Proc
                GET     Services
                GET     ModHand
                GET     $VeneerDir.FPEMacros
                GET     $VeneerDir.Version
d35 1
a35 1
    [   Arm600
a39 2
ARM_CC_Mask     *       &FC000003

a57 1
SYS32_mode      *       2_11111
d60 1
a60 1
r13_irq         RN      13
d62 1
a62 1
r13_svc         RN      13
d98 2
a99 2
        GET     SWIs
        GET     RISCOS
d107 2
a108 2
XOS_Module                      *       &2001e
OS_GenerateError                *       &2b
d116 1
a116 1
ErrorBase_FloatingPoint         *       &80000200
d121 1
a121 7
FPEAnchor                       *       &ff4

;
; Definition from Hdr:PublicWS
;
SVCSTK                          *       &01C08000 ;32k stack for Ursula

d126 2
a127 2
                GBLA    debug
debug                   SETA    0
d129 8
a136 1
        [       debug > 0
d138 1
a138 2
                GET     HostFS
                GET     Debug
d140 2
a141 4
Host_Debug      SETL    True
Debug_MaybeIRQ  SETL    False

        ]
d146 1
a146 1
                GBLL            FPASCWanted
d148 1
a148 1
                GBLL            FPEWanted
d151 2
a152 2
FPASCWanted             SETL    {TRUE}
FPEWanted               SETL    {TRUE}
d156 2
a157 2
FPASCWanted             SETL    {FALSE}
FPEWanted               SETL    {TRUE}
d161 2
a162 2
FPASCWanted             SETL    {TRUE}
FPEWanted               SETL    {FALSE}
d165 2
a166 11
                GBLL            ARM2Safe
ARM2Safe                SETL    :LNOT: Arm600

                GBLS            UndefHandlerConvention
UndefHandlerConvention  SETS    "StandAlone"

                GBLL            MultipleContexts
MultipleContexts        SETL    {FALSE}

                GBLL            EnableInterrupts
EnableInterrupts        SETL    {TRUE}
d168 2
a169 2
                GBLL            Use64bitMultiply
Use64bitMultiply        SETL    {TRUE}
d171 2
a172 2
                GBLL            SASTMhatbroken
SASTMhatbroken          SETL    {TRUE}
d174 2
a175 2
                GBLA            FPSRInitValue
FPSRInitValue           SETA    &70000
d177 2
a178 2
                GBLS            FPRegInitValue
FPRegInitValue          SETS    "Zero"
d180 2
a181 2
                GBLA            ExpectsCoreVersion
ExpectsCoreVersion      SETA    1
d183 2
d189 7
a195 7
TrapsCanReturn          SETL    {FALSE}
FPE4WordsPerReg         SETL    {TRUE}
DoIntegerPowers         SETL    {TRUE}
ZeroToTheZero           SETS    "One"
FPEChecksNextInstr      SETL    {TRUE}
NoTranscendentals       SETL    {FALSE}
NoPacked                SETL    {FALSE}
d197 1
a197 1
        END
@


4.2.2.1.2.1
log
@Change switches, for Ursula on RPC and A7000(+), as follows:
  vensrc.riscos.options
    Use64bitMultiply set FALSE (for 610,710,7500)
  riscos.s.fpemedusa
    Flavour changed from SoftOnly to Both (for 7500FE)
This is the same as my last commit to the Ursula branch
@
text
@d183 1
a183 1
Use64bitMultiply        SETL    {FALSE}
@


4.2.2.2
log
@Change switches, for Ursula on RPC and A7000(+), as follows:
  vensrc.riscos.options
    Use64bitMultiply set FALSE (for 610,710,7500)
  riscos.s.fpemedusa
    Flavour changed from SoftOnly to Both (for 7500FE)
@
text
@d183 1
a183 1
Use64bitMultiply        SETL    {FALSE}
@


4.1
log
@Initial revision
@
text
@d166 1
a166 1
ARM2Safe		SETL	{TRUE}
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.3.2
log
@Version RO_3_71 taken
@
text
@d166 1
a166 1
ARM2Safe		SETL	:LNOT: Arm600
@


4.1.3.1.2.1
log
@Merged from 3.71 CD
@
text
@d166 1
a166 1
ARM2Safe		SETL	:LNOT: Arm600
@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
