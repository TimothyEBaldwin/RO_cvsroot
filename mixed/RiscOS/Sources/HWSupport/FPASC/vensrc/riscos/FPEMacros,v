head	4.4;
access;
symbols
	FPASC-4_36:4.4
	FPASC-4_35:4.4
	FPASC-4_34:4.4
	FPASC-4_33-1:4.4
	FPASC-4_33:4.4
	FPASC-4_32:4.4
	FPASC-4_31:4.4
	FPASC-4_30:4.4
	FPASC-4_29:4.4
	FPASC-4_28-2:4.3
	FPASC-4_28:4.3
	FPASC-4_27:4.3
	FPASC-4_26:4.3
	FPASC-4_25:4.3
	FPASC-4_24:4.3
	FPASC-4_23:4.3
	RO_5_07:4.3
	FPASC-4_22:4.3
	FPASC-4_21:4.3
	FPASC-4_20:4.3
	FPASC-4_19:4.3
	FPASC-4_18:4.3
	FPASC-4_17:4.3
	FPASC-4_16:4.3
	FPASC-4_15:4.3
	FPASC-4_14:4.3
	dellis_autobuild_BaseSW:4.3
	FPASC-4_13:4.3
	FPASC-4_12:4.3
	sbrodie_sedwards_16Mar2000:4.2
	kbracey_32bit_merge:4.2
	FPASC-4_11:4.2
	FPASC-4_10-4_3_2_1:4.2
	kbracey_32bit:4.2.0.2
	dcotton_autobuild_BaseSW:4.3
	FPASC-4_10:4.2
	Ursula_merge:4.1.4.1
	mstphens_UrsulaRiscPCBuild_20Nov98:4.1.4.1
	Ursula_RiscPC:4.1.4.1.0.2
	nicke_FPASC-4_05:4.1.7.1
	FPASC-4_09:4.1
	rthornb_UrsulaBuild-19Aug1998:4.1.4.1
	UrsulaBuild_FinalSoftload:4.1.4.1
	rthornb_UrsulaBuild-12Aug1998:4.1.4.1
	aglover_UrsulaBuild-05Aug1998:4.1.4.1
	rthornb_UrsulaBuild-29Jul1998:4.1.4.1
	rthornb_UrsulaBuild-22Jul1998:4.1.4.1
	rthornb_UrsulaBuild-15Jul1998:4.1.4.1
	rthornb_UrsulaBuild-07Jul1998:4.1.4.1
	rthornb_UrsulaBuild-17Jun1998:4.1.4.1
	rthornb_UrsulaBuild-03Jun1998:4.1.4.1
	rthornb_UrsulaBuild-27May1998:4.1.4.1
	rthornb_UrsulaBuild-21May1998:4.1.4.1
	rthornb_UrsulaBuild_01May1998:4.1.4.1
	afrost_NC2_Generic:4.1.7.1
	Spinner_RCA116:4.1.7.1
	Spinner_B20_2:4.1.7.1
	Spinner_19_3:4.1.7.1
	Spinner_B18:4.1.7.1
	Spinner_B17:4.1.7.1
	Spinner_B15:4.1.7.1
	Spinner_B14:4.1.7.1
	Spinner_B13:4.1.7.1
	Spinner_B12:4.1.7.1
	Spinner_B10:4.1.7.1
	Daytona:4.1.0.6
	Daytona_bp:4.1
	Ursula:4.1.0.4
	Ursula_bp:4.1
	Spinner_B7:4.1.7.1
	RO_3_71:4.1.3.1
	ARTtmp_merge:4.1.7.1
	Spin_3Apr97:4.1.7.1
	RCA_bp:4.1
	ARTtmp:4.1.7.1.0.2
	RCA:4.1.0.2
	Spin_merge:4.1.7.1
	MergeFiles:4.1.3.1
	RO_3_70:4.1.3.1
	NC_1_06:4.1.7.1
	Spinner:4.1.7
	Spin_xx:4.1.5
	NC_xx:4.1.5.1
	RO_3_60:4.1.1.1
	StrongARM:4.1.3
	Black:4.1.1;
locks; strict;
comment	@# @;


4.4
date	2011.08.06.20.20.21;	author jlee;	state Exp;
branches;
next	4.3;
commitid	RGwDCySu9G6uquuv;

4.3
date	2000.03.24.10.53.17;	author kbracey;	state Exp;
branches;
next	4.2;

4.2
date	99.08.03.17.56.59;	author kbracey;	state Exp;
branches;
next	4.1;

4.1
date	96.11.05.09.35.55;	author nturton;	state Exp;
branches
	4.1.1.1
	4.1.3.1
	4.1.4.1
	4.1.5.1
	4.1.7.1;
next	;

4.1.1.1
date	96.11.05.09.35.55;	author nturton;	state Exp;
branches;
next	;

4.1.3.1
date	96.11.06.01.25.10;	author nturton;	state Exp;
branches;
next	;

4.1.4.1
date	98.03.27.10.35.16;	author mstphens;	state Exp;
branches;
next	;

4.1.5.1
date	96.11.21.11.51.59;	author nturton;	state Exp;
branches;
next	;

4.1.7.1
date	96.11.29.20.46.47;	author nturton;	state Exp;
branches;
next	;


desc
@@


4.4
log
@Update to work with zero page relocation
Detail:
  Unlike most modules which can just store the zero page pointers in their workspace, FPEmulator is a bit trickier since the zero page pointers are needed from within abort handlers and other places where the module workspace pointer is hard to come by (in fact, FPEmulator uses FPEAnchor to store the module workspace pointer)
  So rather than break/rework lots of perfectly good code, there are now three different FPEmulator builds available, selected via the new FPEAnchorType option:
  * FPEAnchorType=Low will select a build suitable for machines with FPEAnchor at its original location in zero page. This is the default for ROM builds.
  * FPEAnchorType=High will select a build suitable for the FPEAnchor location (&ffff0ff4) that's used with zero page relocation. Machines with relocated zero page must specify this option in their components file.
  * FPEAnchorType=Local will select a build suitable for softloading. Rather than rely on using a zero page location for storing the workspace pointer, the module just stores it within itself. This option is selected automatically for RAM builds and can't be overriden via the components file.
  File changes:
  riscos/Makefile - Reworked makefile to support the new options
  riscos/FPEMacros - Updated AdrWS macro to work with FPEAnchorType=Local
  riscos/options - For non-local builds, declare the appropriate value for FPEAnchor
  riscos/start - Use appropriate FPEAnchor initialisation code
Admin:
  All 3 configs tested (ROM builds on BB-xM, RAM softload on Iyonix)


Version 4.29. Tagged as 'FPASC-4_29'
@
text
@; >riscos.FPEMacros
;
; Copyright (c) 1993 Acorn Computers Ltd., Cambridge, England.
;
; Assembler source for FPA support code and emulator
; ==================================================
; Macro definitions
;

;
; **********************************************************************
;
;
; AdrWS - address module workspace
;
	MACRO
$label	AdrWS	$reg
 [ FPEAnchorType = "Local"
	ADRL	$reg, FPEAnchor
	LDR	$reg, [$reg]
 |
   [ FPEAnchor > &1000
$label	LDR	$reg, =FPEAnchor
	LDR	$reg, [$reg]
   |
$label	MOV	$reg, #0
	LDR	$reg, [$reg, #FPEAnchor]
   ]
 ]
   	MEND

;
; **********************************************************************
;
;
; FPInstrDone - perform any post-processing of a floating point instruction
;
        MACRO
$label  FPInstrDone     $opt

;
; no post-processing, but we do want to stop the thing crossing page
; boundaries, as our abort handler won't be expecting this.
;
        [ "$opt" <> ""
        MOVS    r0, r9, LSL #20         ; sets EQ if crossing 4K boundary
        ]

        MEND

;
; **********************************************************************
;
; Macros for core debugging
;

	MACRO
$label	Debug0	$message
$label  DLINE	"$message"
	MEND

	MACRO
$label	Debug1	$message,$reg
$label	DREG	$reg,"$message "
	MEND

	MACRO
$label	Debug2	$message,$reg1,$reg2
$label	DREG	$reg1,"$message ",cc
	DREG	$reg2
	MEND

	MACRO
$label	Debug3	$message,$reg1,$reg2,$reg3
$label	DREG	$reg1,"$message ",cc
	DREG	$reg2," ",cc
	DREG	$reg3
	MEND

	MACRO
$label	Debug4	$message,$reg1,$reg2,$reg3,$reg4
$label	DREG	$reg1,"$message "
	DREG	$reg2
	DREG	$reg3
	DREG	$reg4,,cc
	MEND

;
; **********************************************************************
;

	END

;
; EOF riscos.FPEMacros
;
@


4.3
log
@  Multiple context version of FP emulator and FPA support code - FP in
  callbacks and interrupts can now be yours.

  Exception dumps now available (integer and FP).

Detail:
* Changed to multiple-context version of the core. This will allow floating-
  point to be used safely in callbacks and interrupt routines (as long as
  you call the appropriate context changing SWIs). This activates the
  dormant SWIs FPEmulator_ChangeContext, FPEmulator_ContextLength and
  FPEmulator_InitContext. FPEmulator_DeactivateContext and
  FPEmulator_ActivateContext now have full functionality.

* Added new SWI interfaces to core: FPEmulator_Abort, FPEmulator_LoadContext
  and FPEmulator_SaveContext.

* On FP exceptions, integer registers are copied into the exception dump area.
  (TO DO: registers are USR mode ones - should take pains to figure out
  SVC or IRQ ones as required).

* The FPEmulator now has an exception dump area for floating point registers -
  a suitable version of Debugger will show these with *ShowFPRegs.

* FPEmulator_ChangeContext and FPEmulator_DeactivateContext now return -1
  for the default context.

* Run time detection of SVC stack position added.

* No longer creates a MessageTrans descriptor on the stack.

* Removed broken STM^ fudge from the FPA veneer, as the only StrongARMs that
  need it can't use the FPA.

* Fixed a typo in core_abort.

* Stopped continuous emulation runs crossing 4K page boundaries, with a view
  to improving abort handling.

* Use of DREG debugging macros fixed (line endings were being inserted in the
  wrong place).

* Prototype code to catch aborts inside the emulator and change the registers
  to make it look like the emulated instruction aborted. This is cute, but
  causes problems with anything like Ursula's lazy task-swapping. Really this
  needs to be done only on fatal aborts. Compiled out for now.

Version 4.12. Tagged as 'FPASC-4_12'
@
text
@d18 4
d29 1
@


4.2
log
@Ursula branch merged. This contains:
  Use of UMULL (compiled out).
  Service call table.
  Runs in UND32 mode (requires latest Kernel), giving a speed boost.

Version 4.10. Tagged as 'FPASC-4_10'
@
text
@d33 2
a34 2
	MACRO
$label	FPInstrDone	$opt
d37 2
a38 3
; all riscos needs to do is clear the Z flag indicating that the core
; should peek at the next instruction.  this is only necessary if opt
; is a non-null string
d40 5
a44 4
	[ "$opt" <> ""
	CMP	sp, #0				; sp will never be zero
	]
	MEND
d59 1
a59 1
$label	DREG	$reg,"$message ",cc
d64 2
a65 2
$label	DREG	$reg1,"$message "
	DREG	$reg2,,cc
d70 3
a72 3
$label	DREG	$reg1,"$message "
	DREG	$reg2
	DREG	$reg3,,cc
@


4.1
log
@Initial revision
@
text
@d18 1
d21 5
a25 1
	MEND
d49 1
a49 1
; Register definitions
d51 31
a81 37
R0	RN	0
R1	RN	1
R2	RN	2
R3	RN	3
R4	RN	4
R5	RN	5
R6	RN	6
R7	RN	7
R8	RN	8
R9	RN	9
R10	RN	10
R11	RN	11
R12	RN	12
R13	RN	13
R14	RN	14
R15	RN	15

r0	RN	0
r1	RN	1
r2	RN	2
r3	RN	3
r4	RN	4
r5	RN	5
r6	RN	6
r7	RN	7
r8	RN	8
r9	RN	9
r10	RN	10
r11	RN	11
r12	RN	12
r13	RN	13
r14	RN	14
r15	RN	15

sp	RN	r13
lr	RN	r14
pc	RN	r15
@


4.1.4.1
log
@incorporate KBracey changes:
  Use long multiply (assumes long multiply; won't work on ARM 610,710)
  Compile with 32-bit APCS for better efficiency (requires Ursula kernel)
  Also compile for soft FP only (suit SA110)
update module format to Ursula service handler table
@
text
@a17 1
   [ FPEAnchor > &1000
d20 1
a20 5
   |
$label	MOV	$reg, #0
	LDR	$reg, [$reg, #FPEAnchor]
   ]
   	MEND
d44 1
a44 1
; Macros for core debugging
d46 37
a82 31

	MACRO
$label	Debug0	$message
$label  DLINE	"$message"
	MEND

	MACRO
$label	Debug1	$message,$reg
$label	DREG	$reg,"$message ",cc
	MEND

	MACRO
$label	Debug2	$message,$reg1,$reg2
$label	DREG	$reg1,"$message "
	DREG	$reg2,,cc
	MEND

	MACRO
$label	Debug3	$message,$reg1,$reg2,$reg3
$label	DREG	$reg1,"$message "
	DREG	$reg2
	DREG	$reg3,,cc
	MEND

	MACRO
$label	Debug4	$message,$reg1,$reg2,$reg3,$reg4
$label	DREG	$reg1,"$message "
	DREG	$reg2
	DREG	$reg3
	DREG	$reg4,,cc
	MEND
@


4.1.7.1
log
@NCOS 1.06 Imported from Zip drive
@
text
@@


4.1.5.1
log
@Import from SrcFiler
@
text
@@


4.1.3.1
log
@Import from cleaned 370 CD
@
text
@@


4.1.1.1
log
@Import from cleaned 360 CD
@
text
@@
