head	1.5;
access;
symbols
	SCSISoftUSB-0_25-1:1.5
	SCSISoftUSB-0_25:1.5
	SCSISoftUSB-0_24:1.5
	SCSISoftUSB-0_23:1.5
	SCSISoftUSB-0_22:1.5
	SCSISoftUSB-0_21:1.5
	SCSISoftUSB-0_20:1.4
	SCSISoftUSB-0_19:1.4
	SCSISoftUSB-0_18:1.4
	SCSISoftUSB-0_17:1.4
	SCSISoftUSB-0_16:1.4
	SCSISoftUSB-0_15:1.4
	SCSISoftUSB-0_14:1.3
	SCSISoftUSB-0_13:1.3
	SCSISoftUSB-0_12:1.3
	SCSISoftUSB-0_11:1.2
	SCSISoftUSB-0_10:1.2
	SCSISoftUSB-0_09:1.2
	SCSISoftUSB-0_08:1.2
	SCSISoftUSB-0_07:1.2
	SCSISoftUSB-0_06:1.2
	SCSISoftUSB-0_05:1.1.1.1
	SCSISoftUSB-0_04:1.1.1.1
	SCSISoftUSB-0_03:1.1.1.1
	SCSISoftUSB-0_02:1.1.1.1
	SCSISoftUSB-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.03.10.18.32.04;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	9jlTGWa4XBWgT7Yy;

1.4
date	2011.11.27.18.16.05;	author jlee;	state Exp;
branches;
next	1.3;
commitid	x66KzEa2j2aH60Jv;

1.3
date	2010.04.22.20.25.16;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.05.00.44.42;	author jballance;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.14.16.49.27;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.14.16.49.27;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Correct case sensitive compare never matching
In the module post init service call handler SCSIdriver -> SCSIDriver. While a caseless compare would also solve this, the only disc loading copy in RO5x0Hook loads the disc based SCSIDriver first anyway, so there's always a matched set there (as in ROM). Remove unused module post final service call handler too.
module.c: adjust case, remove unused code
modhdr.cmhg: remove unused service call table entry
glue.c: adjust case (of debug/comments)
Makefile: simplified given recent shared makefile improvements, notably the debug flags are now picked up from CDFLAGS/CMHGDFLAGS based on the target
!MkDebug/!MkRam: pass in the target for which the obey file relates rather than 'all'

Version 0.21. Tagged as 'SCSISoftUSB-0_21'
@
text
@# Copyright 2003 Tematic Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for SCSISoftUSB
#

COMPONENT   = SCSISoftUSB
TARGET     ?= SCSISoftUSB
OBJS        = global glue module umass umass_quirks asm
HDRS        =
CINCLUDES   = -ITCPIPLibs:,C:USB
CFLAGS     += -wp -wc -we -DDISABLE_PACKED -D_KERNEL
CMHGFILE    = modhdr
CMHGDEPENDS = glue module
RAMCDEFINES = -DSTANDALONE
CDFLAGS    += -DDEBUGLIB -DUMASS_DEBUG -DUSB_DEBUG
CMHGDFLAGS += -DDEBUGLIB -DUMASS_DEBUG -DUSB_DEBUG
RES_OBJ     = resmess
RES_AREA    = resmess_ResourcesFiles

include CModule

DBG_LIBS   += ${SOCK5LIB} ${INETLIB}

# Dynamic dependencies:
@


1.4
log
@Tidy source a bit
Detail:
  Makefile, !MkDebug,fd7 - Rewritten to use makefile fragments
  c/svcprint, h/debug - Removed obsolete svcprint code
  c/module - Collapse MESSAGES option. Use STANDALONE #define instead of ROM_MODULE to decide whether resources are embedded or not.
Admin:
  Tested in softload on Iyonix


Version 0.15. Tagged as 'SCSISoftUSB-0_15'
@
text
@a16 14
# ***********************************
# ***    C h a n g e   L i s t    ***
# ***********************************
# Date         Name    Description
# ----         ----    -----------
# 29-Apr-2003  BJGA    Created.

DEBUG ?= FALSE

ifeq ($(DEBUG),TRUE)
CFLAGS += -DDEBUGLIB -DUMASS_DEBUG -DUSB_DEBUG
CMHGFLAGS += -DDEBUGLIB -DUMASS_DEBUG -DUSB_DEBUG
LIBS = ${DEBUGLIBS} ${NET5LIBS}
endif
d19 1
a19 1
TARGET      = SCSISoftUSB
a20 1
CMHGFILE    = modhdr
a21 1

d23 2
a24 1
CFLAGS      += -ffah -wp -wc -we -zM -zps1 -DDISABLE_PACKED -D_KERNEL
d27 4
d32 1
a32 2
RES_OBJ = resmess
RES_AREA = resmess_ResourcesFiles
d34 1
a34 5
include StdTools
include ModStdRule
include ModuleLibs
include DbgRules
include CModule
@


1.3
log
@Make SCSISoftUSB's 'PopUpDelay' configurable, improve robustness of device registration
Detail:
  c/global, c/module, cmhg/header, h/global - The new command *SCSISoftUSB_PopUpDelay can now be used to control the popup delay value. Additionally, no delay is used if outside the desktop.
  Makefile, Resources/UK/Messages - Added resources file containing text for the new * command
  c/module, cmhg/header - Devices are now registered with SCSISwitch from a callback instead of from a ticker event. This ensures the registration won't fail due to insufficient RMA space (e.g. as is often the case for devices detected during OMAP ROM initialisation)
Admin:
  Tested in ROM on rev C2 beagleboard, and in RAM on Iyonix.
  Messages file needs translating!


Version 0.12. Tagged as 'SCSISoftUSB-0_12'
@
text
@d24 27
a50 92
COMPONENT = SCSISoftUSB
TARGET    = SCSISoftUSB
DIRS      = local_dirs
CFLAGS    = -ffah -wp -wc -we -zM -zps1 -ITCPIPLibs:,C:USB -DDISABLE_PACKED -D_KERNEL ${DEFINES}
RAM_OBJS  = o.module ${OBJS} o.resmess
ROM_OBJS  = o.moduleROM ${OBJS}
OBJS      =            o.svcprint  o.glue  o.umass  o.umass_quirks  o.global o.asm o.modhdr #o.resmess
DBG_OBJS  = do.module do.svcprint do.glue do.umass do.umass_quirks do.global o.asm o.modhdr #o.resmess
LIBDIR    = <Lib$Dir>
LIBS      = 
DBG_LIBS  = ${DEBUGLIB} ${LIBS} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS} ${LIBDIR}.DebugLib.o.debuglibzm TCPIPLibs:o.socklib5zm TCPIPLibs:o.inetlibzm
DBG_MODULE = drm.${TARGET}
EXPORTS   = 
#MERGEDMDIR = o.${MACHINE}._Messages_
#MERGEDMSGS = ${MERGEDMDIR}.${TARGET}
RESDIR    = <resource$dir>.Resources2.SCSISoftUSB

include Makefiles:StdTools
include Makefiles:ModuleLibs
include Makefiles:ModStdRule
include Makefiles:RAMCModule
include Makefiles:ROMCModule

.SUFFIXES: .do
.c.do:; ${CC} ${CFLAGS} -DDEBUGLIB -DUMASS_DEBUG -o $@@ $<

local_dirs:
        ${MKDIR} gpa
        ${MKDIR} aif
        ${MKDIR} do
        ${MKDIR} o

export: ${EXPORTS}
        @@${ECHO} ${COMPONENT}: export complete

${EXPORTS}: 

#resources: Messages${CMDHELP}
#        ${MKDIR} ${RESDIR}.${COMPONENT}
#        ${CP} Messages${CMDHELP} ${RESDIR}.${COMPONENT}.Messages ${CPFLAGS}
#        ${RM} Messages${CMDHELP}
#        @@${ECHO} ${COMPONENT}: resource files copied

aif.${COMPONENT}: ${RAM_OBJS} ${RAM_LIBS} ${CLIB} ${DIRS}
        link -base 0 -aif -bin -d -o $@@ ${RAM_OBJS} ${RAM_LIBS} ${CLIB}

gpa.${COMPONENT}: aif.${COMPONENT}
        togpa -s aif.${COMPONENT} $@@



clean:
        ${RM} Messages
        ${RM} h.modhdr
        ifthere linked then wipe linked ${WFLAGS}
        ifthere aof    then wipe aof    ${WFLAGS}
        ifthere aif    then wipe aif    ${WFLAGS}
        ifthere gpa    then wipe gpa    ${WFLAGS}
        ifthere drm    then wipe drm    ${WFLAGS}
        ifthere do     then wipe do     ${WFLAGS}
        ifthere rm     then wipe rm     ${WFLAGS}
        ifthere o      then wipe o      ${WFLAGS}
        @@${ECHO} ${COMPONENT}: cleaned

debug: ${DBG_MODULE}
        @@${ECHO} ${COMPONENT}: debug module built

${DBG_MODULE}: ${DBG_OBJS} ${DBG_LIBS} ${CLIB} ${DIRS}
        ${MKDIR} drm
        ${LD} ${LDFLAGS} -o $@@ -rmf ${DBG_OBJS} ${DBG_LIBS} ${CLIB}
        ${CHMOD} -R a+rx drm

o.module: modhdr.h
do.module: modhdr.h
o.glue: modhdr.h
do.glue: modhdr.h

moduleROM.o: module.c modhdr.h
        ${CC} ${CFLAGS} -DROM_MODULE -o moduleROM.o module.c

resources:
        ${MKDIR} ${RESDIR}
        ${CP} LocalRes:Messages  ${RESDIR}.Messages  ${CPFLAGS}
        @@echo SCSISoftUSB: Resources copied to Messages module

resmess.o: ${MERGEDMSGS}
	ResGen resmess_ResourcesFiles o.resmess LocalRes:Messages Resources.SCSISoftUSB.Messages

#${MERGEDMSGS}:
#        ${MKDIR} ${MERGEDMDIR}
#        IfThere LocalRes:Messages Then ${CP} LocalRes:Messages $@@ ${CPFLAGS} Else Create $@@
#        IfThere LocalRes:CmdHelp Then FAppend $@@ $@@ LocalRes:CmdHelp
@


1.2
log
@   	Numerous updates to improve working.
	Re-synced with NetBSD mass storage
	Added part sector fill/ignore needed by SCSIFS

Detail:
Admin:  tested at castle.. to go to beta site.. Castle added IP


Version 0.06. Tagged as 'SCSISoftUSB-0_06'
@
text
@d28 1
a28 1
RAM_OBJS  = o.module ${OBJS}
d39 1
d104 8
a111 3
#resmess.o: ${MERGEDMSGS}
#	ResGen resmess_ResourcesFiles o.resmess ${MERGEDMSGS} Resources.SCSISoftUSB.Messages
#
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
CFLAGS    = -ffah -wp -wc -we -zM -zps1 -ITCPIPLibs:,C:USB -DDISABLE_PACKED ${DEFINES}
d34 1
a34 1
DBG_LIBS  = ${LIBS} ${LIBDIR}.DebugLib.o.debuglibzm TCPIPLibs:o.socklib5zm TCPIPLibs:o.inetlibzm
d47 1
a47 1
.c.do:; ${CC} ${CFLAGS} -DDEBUGLIB -o $@@ $<
d50 2
d66 8
d79 2
@


1.1.1.1
log
@Initial import of SCSISoftUSB, a driver for USB mass storage devices that
use a SCSI command set over bulk-only or control-bulk-interrupt protocols.
@
text
@@
