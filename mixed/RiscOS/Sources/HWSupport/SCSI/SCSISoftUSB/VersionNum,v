head	1.26;
access;
symbols
	SCSISoftUSB-0_25-1:1.26
	SCSISoftUSB-0_25:1.26
	SCSISoftUSB-0_24:1.25
	SCSISoftUSB-0_23:1.24
	SCSISoftUSB-0_22:1.23
	SCSISoftUSB-0_21:1.22
	SCSISoftUSB-0_20:1.21
	SCSISoftUSB-0_19:1.20
	SCSISoftUSB-0_18:1.19
	SCSISoftUSB-0_17:1.18
	SCSISoftUSB-0_16:1.17
	SCSISoftUSB-0_15:1.16
	SCSISoftUSB-0_14:1.15
	SCSISoftUSB-0_13:1.14
	SCSISoftUSB-0_12:1.13
	SCSISoftUSB-0_11:1.12
	SCSISoftUSB-0_10:1.11
	SCSISoftUSB-0_09:1.10
	SCSISoftUSB-0_08:1.9
	SCSISoftUSB-0_07:1.8
	SCSISoftUSB-0_06:1.7
	SCSISoftUSB-0_05:1.6
	SCSISoftUSB-0_04:1.5
	SCSISoftUSB-0_03:1.4
	SCSISoftUSB-0_02:1.3
	SCSISoftUSB-0_01:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.26
date	2018.07.13.22.31.09;	author jballance;	state Exp;
branches;
next	1.25;
commitid	sXRoV4QbdosnJ1KA;

1.25
date	2018.07.01.15.10.24;	author jballance;	state Exp;
branches;
next	1.24;
commitid	ZD5QQ5eGMub5GrIA;

1.24
date	2018.06.30.23.56.55;	author jballance;	state Exp;
branches;
next	1.23;
commitid	bWX9hbyb73JHCmIA;

1.23
date	2018.05.29.16.22.35;	author rsprowson;	state Exp;
branches;
next	1.22;
commitid	rqiqbAKkFEZB8dEA;

1.22
date	2016.03.10.18.32.04;	author rsprowson;	state Exp;
branches;
next	1.21;
commitid	9jlTGWa4XBWgT7Yy;

1.21
date	2016.01.30.09.16.24;	author rool;	state Exp;
branches;
next	1.20;
commitid	ZGOCAbZY0dSm6WSy;

1.20
date	2014.08.12.18.56.50;	author jlee;	state Exp;
branches;
next	1.19;
commitid	Z3rtnR0QMQ6Hx6Mx;

1.19
date	2013.07.13.17.24.39;	author rsprowson;	state Exp;
branches;
next	1.18;
commitid	pN6JUCoe2amgJkXw;

1.18
date	2013.06.26.17.48.05;	author rsprowson;	state Exp;
branches;
next	1.17;
commitid	ddGMfc8XaC8bp9Vw;

1.17
date	2012.06.03.14.25.53;	author jlee;	state Exp;
branches;
next	1.16;
commitid	tugyl8mcBbH3Lg7w;

1.16
date	2011.11.27.18.16.05;	author jlee;	state Exp;
branches;
next	1.15;
commitid	x66KzEa2j2aH60Jv;

1.15
date	2011.07.24.22.09.27;	author jlee;	state Exp;
branches;
next	1.14;
commitid	hW9XzNMbX8MQrPsv;

1.14
date	2010.11.23.22.51.02;	author jlee;	state Exp;
branches;
next	1.13;

1.13
date	2010.04.22.20.25.16;	author jlee;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.22.01.19.53;	author jlee;	state Exp;
branches;
next	1.11;

1.11
date	2005.09.20.12.06.57;	author jballance;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.10.23.22.50;	author jballance;	state Exp;
branches;
next	1.9;

1.9
date	2005.06.27.21.27.45;	author jballance;	state Exp;
branches;
next	1.8;

1.8
date	2005.06.24.21.03.12;	author jballance;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.05.00.44.42;	author jballance;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.16.14.05.26;	author bavison;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.13.12.37.36;	author bavison;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.10.46.36;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.23.18.37.55;	author bavison;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.14.16.50.31;	author bavison;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.14.16.49.27;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.14.16.49.27;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.26
log
@  Resolved a couple of obscure null pointer errors
Detail:
  A misbehaving USB SDcard adaptor caused unexpected duplication of some
  structure free calls. Ensured this is protected
Admin:
  tested on iMx6

Version 0.25. Tagged as 'SCSISoftUSB-0_25'
@
text
@/* (0.25)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.25
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                13 Jul 2018

#define Module_MajorVersion             "0.25"
#define Module_Version                  25
#define Module_MinorVersion             ""
#define Module_Date                     "13 Jul 2018"

#define Module_ApplicationDate          "13-Jul-18"

#define Module_ComponentName            "SCSISoftUSB"
#define Module_ComponentPath            "mixed/RiscOS/Sources/HWSupport/SCSI/SCSISoftUSB"

#define Module_FullVersion              "0.25"
#define Module_HelpVersion              "0.25 (13 Jul 2018)"
#define Module_LibraryVersionInfo       "0:25"
@


1.25
log
@  Tuned previous commit and resolved potential interlock issue
Detail:
  More precise detection of sense status error condition, and blocked
  reentrancy possible condition at start of Glue_Tick().
  Previous fix didn't always fix offending device.
Admin:
  Tested on iMx6

Version 0.24. Tagged as 'SCSISoftUSB-0_24'
@
text
@d1 1
a1 1
/* (0.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.24
d9 1
a9 1
#define Module_Date_CMHG                01 Jul 2018
d11 2
a12 2
#define Module_MajorVersion             "0.24"
#define Module_Version                  24
d14 1
a14 1
#define Module_Date                     "01 Jul 2018"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jul-18"
d21 3
a23 3
#define Module_FullVersion              "0.24"
#define Module_HelpVersion              "0.24 (01 Jul 2018)"
#define Module_LibraryVersionInfo       "0:24"
@


1.24
log
@  Bugfix to flush any bytes left in the pipe buffer once read is completed
Detail:
  In certain circumstances the Sense Status command can be sent more bytes
  than it requested. When this happened the system stalled until the device
  was unplugged. (The transfer was not completed because the system said
  there were still bytes to be read, though the command had read all it
  required.)
Admin:
  Tested on iMx6

Version 0.23. Tagged as 'SCSISoftUSB-0_23'
@
text
@d1 1
a1 1
/* (0.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.23
d11 2
a12 2
#define Module_MajorVersion             "0.23"
#define Module_Version                  23
d21 3
a23 3
#define Module_FullVersion              "0.23"
#define Module_HelpVersion              "0.23 (01 Jul 2018)"
#define Module_LibraryVersionInfo       "0:23"
@


1.23
log
@Update quirks table a bit
It looks like the table came from NetBSD revision 1.39 (despite the claim it was 1.37, perhaps that line wasn't updated?).
Go up to 1.45, which is the last revision before code changes to umass.c are needed (which ultimately obsolete many of the quirks).
Add back the EASYDISK quirk, this was commented out in SCSISoftUSB-0_06 because the vendor was renamed in usbdevs 1.364, via a define to its new vendor name.

Version 0.22. Tagged as 'SCSISoftUSB-0_22'
@
text
@d1 1
a1 1
/* (0.22)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.22
d9 1
a9 1
#define Module_Date_CMHG                29 May 2018
d11 2
a12 2
#define Module_MajorVersion             "0.22"
#define Module_Version                  22
d14 1
a14 1
#define Module_Date                     "29 May 2018"
d16 1
a16 1
#define Module_ApplicationDate          "29-May-18"
d21 3
a23 3
#define Module_FullVersion              "0.22"
#define Module_HelpVersion              "0.22 (29 May 2018)"
#define Module_LibraryVersionInfo       "0:22"
@


1.22
log
@Correct case sensitive compare never matching
In the module post init service call handler SCSIdriver -> SCSIDriver. While a caseless compare would also solve this, the only disc loading copy in RO5x0Hook loads the disc based SCSIDriver first anyway, so there's always a matched set there (as in ROM). Remove unused module post final service call handler too.
module.c: adjust case, remove unused code
modhdr.cmhg: remove unused service call table entry
glue.c: adjust case (of debug/comments)
Makefile: simplified given recent shared makefile improvements, notably the debug flags are now picked up from CDFLAGS/CMHGDFLAGS based on the target
!MkDebug/!MkRam: pass in the target for which the obey file relates rather than 'all'

Version 0.21. Tagged as 'SCSISoftUSB-0_21'
@
text
@d1 1
a1 1
/* (0.21)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.21
d9 1
a9 1
#define Module_Date_CMHG                10 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "0.21"
#define Module_Version                  21
d14 1
a14 1
#define Module_Date                     "10 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "10-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "0.21"
#define Module_HelpVersion              "0.21 (10 Mar 2016)"
#define Module_LibraryVersionInfo       "0:21"
@


1.21
log
@Invert IRQ restore logic
Detail:
  If IRQs were not off, reenable them on exit. This is an academic fix as the CMHG veneers would reenable them when the CPSR is restored, but now self consistent with the other exits in this file.
Admin:
  Spotted by Colin Granville. Not tested here.

Version 0.20. Tagged as 'SCSISoftUSB-0_20'
@
text
@d1 1
a1 1
/* (0.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.20
d9 1
a9 1
#define Module_Date_CMHG                30 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "0.20"
#define Module_Version                  20
d14 1
a14 1
#define Module_Date                     "30 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "30-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "0.20"
#define Module_HelpVersion              "0.20 (30 Jan 2016)"
#define Module_LibraryVersionInfo       "0:20"
@


1.20
log
@Fixes and improvements to SCSI request padding
Detail:
  In order to keep block-based SCSI devices happy, the data transfer length must be a multiple of the block size. Unfortunately the RISC OS SCSI API considers the act of padding requests out to the correct size to be a driver problem rather than a client problem, and the USB SCSI spec doesn't provide a guaranteed way for a host to determine the correct transfer length for a command which has failed.
  To cope with this SCSISoftUSB contains some code to pad block read/write transfer lengths out to a multiple of the USB packet size. For high-speed USB devices using standard 512 byte sector sizes this works fine, but for low-speed devices or devices with less common block sizes it falls short.
  To rectify this SCSISoftUSB now listens out for any CAPACITY commands which are sent to the device and peeks at the result to determine the correct block size to use. Except for rare cases where the client takes a random guess at the block size this should allow SCSISoftUSB to get the correct block size itself without having to implement lots of extra logic to deal with devices being slow to initialise, etc.
  Additionally the padding code has been rewritten to ensure writes are padded with nulls (previously would read off the end of the supplied source data), and excess read bytes are discarded (previously would write off the end of the destination buffer)
  File changes: c/glue, h/global
Admin:
  Tested on Raspberry Pi
  USB2 devices forced to run at USB1 speed now behave themselves during non-sector sized filecore ops


Version 0.19. Tagged as 'SCSISoftUSB-0_19'
@
text
@d1 1
a1 1
/* (0.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.19
d9 1
a9 1
#define Module_Date_CMHG                12 Aug 2014
d11 2
a12 2
#define Module_MajorVersion             "0.19"
#define Module_Version                  19
d14 1
a14 1
#define Module_Date                     "12 Aug 2014"
d16 1
a16 1
#define Module_ApplicationDate          "12-Aug-14"
d21 3
a23 3
#define Module_FullVersion              "0.19"
#define Module_HelpVersion              "0.19 (12 Aug 2014)"
#define Module_LibraryVersionInfo       "0:19"
@


1.19
log
@Open and finish fixes
Reorder the open pipe special fields to match those in the USB driver to side step the DeviceFS parsing problem prior to DeviceFS-0_69
Make the upcall handler robust to device streams being shut, see
  http://www.riscosopen.org/forum/forums/3/topics/1970
for the gritty details.

Version 0.18. Tagged as 'SCSISoftUSB-0_18'
@
text
@d1 1
a1 1
/* (0.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.18
d9 1
a9 1
#define Module_Date_CMHG                13 Jul 2013
d11 2
a12 2
#define Module_MajorVersion             "0.18"
#define Module_Version                  18
d14 1
a14 1
#define Module_Date                     "13 Jul 2013"
d16 1
a16 1
#define Module_ApplicationDate          "13-Jul-13"
d21 3
a23 3
#define Module_FullVersion              "0.18"
#define Module_HelpVersion              "0.18 (13 Jul 2013)"
#define Module_LibraryVersionInfo       "0:18"
@


1.18
log
@Revert interface/alternate muddle
In glue.c revision 1.4 the interface and alternate were swapped round when generating the USB device special string. Presumably this was to work around DeviceFS not parsing them properly? DeviceFS does now, so this was tripping up any mass storage devices whose interface and alternate weren't the same.

Version 0.17. Tagged as 'SCSISoftUSB-0_17'
@
text
@d1 1
a1 1
/* (0.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.17
d9 1
a9 1
#define Module_Date_CMHG                26 Jun 2013
d11 2
a12 2
#define Module_MajorVersion             "0.17"
#define Module_Version                  17
d14 1
a14 1
#define Module_Date                     "26 Jun 2013"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jun-13"
d21 3
a23 3
#define Module_FullVersion              "0.17"
#define Module_HelpVersion              "0.17 (26 Jun 2013)"
#define Module_LibraryVersionInfo       "0:17"
@


1.17
log
@Fix temporary RMA corruption while inside RTSupport routine
Detail:
  Previously the RTSupport routine would execute in SYS mode, and use assembler veneers to make direct calls to the buffer manager.
  Despite being against the buffer manager spec (only IRQ or SVC should be used, according to PRM 5a), the buffer manager was coping with SYS mode calls fine. However the buffer manager would call DeviceFS, and DeviceFS would then call USBDriver, entering the module via one of CMHG's generic veneers.
  These veneers attempt to switch to SVC mode on entry, but they do so by only interacting with the bottom two bits of the PSR - so the CPU was remaining in SYS mode.
  Although this isn't a problem in and of itself, immediately after the mode change comes some code to set up the static relocation offsets at the SVC stack limit.
  This is done by aligning the stack pointer to a MB boundary. If we were in SVC mode this would be fine, but since we're still in SYS mode we're using a stack that was allocated by SCSISoftUSB and isn't aligned to a boundary at all; thus resulting in two words of RMA being swapped out with something completely different while the USBDriver code executes.
  With RTSupport in ROM this will most likely end up being the first two words of the heap - which is enough to stop OS_Module from manipulating the heap (the heap manager will see it as corrupt), but without causing any lasting damage.
  To solve this issue we now run the entire routine in SVC mode, using the MB-aligned SVC stack that RTSupport provides for us.
  File changes:
  c/global, c/cmodule, h/global - Get rid of the SYS mode stack since we no longer need it
  c/glue, h/glue - Extern RTSupportWrapper so it can be called from the assembler veneer. Tweak RT_Register parameters to pass in the relocation offsets (and no SYS stack)
  s/asm, h/asm - Added asm_RTSupportWrapper to get us into and out of SVC mode around the call to RTSupportWrapper. Also sets up our stack limit & relocation offsets within the SVC stack.
Admin:
  Tested in BCM2835 ROM


Version 0.16. Tagged as 'SCSISoftUSB-0_16'
@
text
@d1 1
a1 1
/* (0.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.16
d9 1
a9 1
#define Module_Date_CMHG                03 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.16"
#define Module_Version                  16
d14 1
a14 1
#define Module_Date                     "03 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (03 Jun 2012)"
#define Module_LibraryVersionInfo       "0:16"
@


1.16
log
@Tidy source a bit
Detail:
  Makefile, !MkDebug,fd7 - Rewritten to use makefile fragments
  c/svcprint, h/debug - Removed obsolete svcprint code
  c/module - Collapse MESSAGES option. Use STANDALONE #define instead of ROM_MODULE to decide whether resources are embedded or not.
Admin:
  Tested in softload on Iyonix


Version 0.15. Tagged as 'SCSISoftUSB-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d9 1
a9 1
#define Module_Date_CMHG                27 Nov 2011
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d14 1
a14 1
#define Module_Date                     "27 Nov 2011"
d16 1
a16 1
#define Module_ApplicationDate          "27-Nov-11"
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (27 Nov 2011)"
#define Module_LibraryVersionInfo       "0:15"
@


1.15
log
@Fix null pointer access
Detail:
  c/glue - Not all operations make use of device->current_pipe, but glue_DoCommand was accessing the pipe pointer regardless of whether the maxpacket value was needed or not. This causes the code to fail if zero page is relocated.
  c/global, c/glue, c/module, c/umass, c/umass_quirks, cmhg/modhdr, h/asm, h/global, h/glue, h/resmess, h/umass_quirks, h/umassvar, s/asm - CVS has decided to update all the $Name$ tags. Not entirely sure why, but it probably won't hurt.
Admin:
  Tested on rev C2 BB.


Version 0.14. Tagged as 'SCSISoftUSB-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d9 1
a9 1
#define Module_Date_CMHG                24 Jul 2011
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d14 1
a14 1
#define Module_Date                     "24 Jul 2011"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jul-11"
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (24 Jul 2011)"
#define Module_LibraryVersionInfo       "0:14"
@


1.14
log
@Improve SCSISoftUSB debugging output
Detail:
  c/glue, c/umass - tweaked a few debug output messages and converted some disabled printf() calls to DPRINTF() to make SCSISoftUSB's debugging output much more useful.
Admin:
  Tested in ROM on rev C2 beagleboard.
  Changes shouldn't affect non-debug builds.


Version 0.13. Tagged as 'SCSISoftUSB-0_13'
@
text
@d1 1
a1 1
/* (0.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.13
d9 1
a9 1
#define Module_Date_CMHG                23 Nov 2010
d11 2
a12 2
#define Module_MajorVersion             "0.13"
#define Module_Version                  13
d14 1
a14 1
#define Module_Date                     "23 Nov 2010"
d16 1
a16 1
#define Module_ApplicationDate          "23-Nov-10"
d21 3
a23 3
#define Module_FullVersion              "0.13"
#define Module_HelpVersion              "0.13 (23 Nov 2010)"
#define Module_LibraryVersionInfo       "0:13"
@


1.13
log
@Make SCSISoftUSB's 'PopUpDelay' configurable, improve robustness of device registration
Detail:
  c/global, c/module, cmhg/header, h/global - The new command *SCSISoftUSB_PopUpDelay can now be used to control the popup delay value. Additionally, no delay is used if outside the desktop.
  Makefile, Resources/UK/Messages - Added resources file containing text for the new * command
  c/module, cmhg/header - Devices are now registered with SCSISwitch from a callback instead of from a ticker event. This ensures the registration won't fail due to insufficient RMA space (e.g. as is often the case for devices detected during OMAP ROM initialisation)
Admin:
  Tested in ROM on rev C2 beagleboard, and in RAM on Iyonix.
  Messages file needs translating!


Version 0.12. Tagged as 'SCSISoftUSB-0_12'
@
text
@d1 1
a1 1
/* (0.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.12
d9 1
a9 1
#define Module_Date_CMHG                22 Apr 2010
d11 2
a12 2
#define Module_MajorVersion             "0.12"
#define Module_Version                  12
d14 1
a14 1
#define Module_Date                     "22 Apr 2010"
d16 1
a16 1
#define Module_ApplicationDate          "22-Apr-10"
d21 3
a23 3
#define Module_FullVersion              "0.12"
#define Module_HelpVersion              "0.12 (22 Apr 2010)"
#define Module_LibraryVersionInfo       "0:12"
@


1.12
log
@Update SCSISoftUSB to use RTSupport where possible, for much better USB performance
Detail:
  On initialisation SCSISoftUSB now checks if a suitable version of the RTSupport module is loaded (0.05 or above), and if so, will use RTSupport in preference to TickerV to schedule USB transfers. When combined with tweaked DeviceFS buffer thresholds and some extra code to listen out for buffer filling/emptying upcalls, this allows for significant performance improvements for USB 2.0 devices.
  If at any point RTSupport becomes unavailable or the RT_Register SWI fails (or if a suitable version of RTSupport is not present) the code will (potentially temporarily) fall back to using TickerV to ensure the filesystem remains functional.
Admin:
  Tested on RISC OS 5.15 rev C2 beagleboard & RISC OS 5.12 Iyonix with & without RTSupport 0.05.


Version 0.11. Tagged as 'SCSISoftUSB-0_11'
@
text
@d1 1
a1 1
/* (0.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.11
d9 1
a9 1
#define Module_Date_CMHG                22 Oct 2009
d11 2
a12 2
#define Module_MajorVersion             "0.11"
#define Module_Version                  11
d14 1
a14 1
#define Module_Date                     "22 Oct 2009"
d16 1
a16 1
#define Module_ApplicationDate          "22-Oct-09"
d21 3
a23 3
#define Module_FullVersion              "0.11"
#define Module_HelpVersion              "0.11 (22 Oct 2009)"
#define Module_LibraryVersionInfo       "0:11"
@


1.11
log
@	tidy up of happenings around pre-reset and shutdown.
Detail:
        some combinations of card readers were causing an abort late in the
	shutdown sequence. this cleans things up
Admin:
        Tested at Castle .. Castle added IP


Version 0.10. Tagged as 'SCSISoftUSB-0_10'
@
text
@d1 1
a1 1
/* (0.10)
d4 1
a4 1
 * Last processed by srccommit version: 1.2.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.10
d9 1
a9 1
#define Module_Date_CMHG                20 Sep 2005
d11 2
a12 2
#define Module_MajorVersion             "0.10"
#define Module_Version                  10
d14 1
a14 1
#define Module_Date                     "20 Sep 2005"
d16 1
a16 1
#define Module_ApplicationDate          "20-Sep-05"
d19 1
a19 1
#define Module_ComponentPath            "RiscOS/Sources/HWSupport/SCSI/SCSISoftUSB"
d21 3
a23 3
#define Module_FullVersion              "0.10"
#define Module_HelpVersion              "0.10 (20 Sep 2005)"
#define Module_LibraryVersionInfo       "0:10"
@


1.10
log
@	Added Service_PreReset action to ensure module 'silenced'
Detail:
Admin: in test at CTL


Version 0.09. Tagged as 'SCSISoftUSB-0_09'
@
text
@d1 1
a1 1
/* (0.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.09
d9 1
a9 1
#define Module_Date_CMHG                11 Aug 2005
d11 2
a12 2
#define Module_MajorVersion             "0.09"
#define Module_Version                  9
d14 1
a14 1
#define Module_Date                     "11 Aug 2005"
d16 1
a16 1
#define Module_ApplicationDate          "11-Aug-05"
d21 3
a23 3
#define Module_FullVersion              "0.09"
#define Module_HelpVersion              "0.09 (11 Aug 2005)"
#define Module_LibraryVersionInfo       "0:9"
@


1.9
log
@	increase delay prior to scsi register from 2 secs to 4 secs
	as a result of beta site feedback.. certain devices not appearing
	if connected at reboot. (was seen occasionally in local test too).
Detail:
Admin:


Version 0.08. Tagged as 'SCSISoftUSB-0_08'
@
text
@d1 1
a1 1
/* (0.08)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.08
d9 1
a9 1
#define Module_Date_CMHG                27 Jun 2005
d11 2
a12 2
#define Module_MajorVersion             "0.08"
#define Module_Version                  8
d14 1
a14 1
#define Module_Date                     "27 Jun 2005"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jun-05"
d21 3
a23 3
#define Module_FullVersion              "0.08"
#define Module_HelpVersion              "0.08 (27 Jun 2005)"
#define Module_LibraryVersionInfo       "0:8"
@


1.8
log
@	Extend device coverage and better startup
Detail:
	now checks any mass storage device for usability .. nolonger
	restricts to types 8-5 and 8-6
	delays scsi registration for 2 seconds beyond point where
	module has finished initialising (overcomes issue seen with some
	devices that fail an inquiry command if sent immediately after
	device is enabled)
Admin:
	castle added IP. tested locally. now a release candidate to
	be checked via the beta software site.


Version 0.07. Tagged as 'SCSISoftUSB-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.07
d9 1
a9 1
#define Module_Date_CMHG                24 Jun 2005
d11 2
a12 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d14 1
a14 1
#define Module_Date                     "24 Jun 2005"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jun-05"
d21 3
a23 3
#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (24 Jun 2005)"
#define Module_LibraryVersionInfo       "0:7"
@


1.7
log
@   	Numerous updates to improve working.
	Re-synced with NetBSD mass storage
	Added part sector fill/ignore needed by SCSIFS

Detail:
Admin:  tested at castle.. to go to beta site.. Castle added IP


Version 0.06. Tagged as 'SCSISoftUSB-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                05 Mar 2005
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "05 Mar 2005"
d16 1
a16 1
#define Module_ApplicationDate          "05-Mar-05"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (05 Mar 2005)"
#define Module_LibraryVersionInfo       "0:6"
@


1.6
log
@Updated the quirks list from the latest BSD sources.

Version 0.05. Tagged as 'SCSISoftUSB-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d4 1
a4 1
 * Last processed by srccommit version: 1.68.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d9 1
a9 1
#define Module_Date_CMHG                16 Jun 2003
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d14 1
a14 1
#define Module_Date                     "16 Jun 2003"
d16 1
a16 1
#define Module_ApplicationDate          "16-Jun-03"
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (16 Jun 2003)"
#define Module_LibraryVersionInfo       "0:5"
@


1.5
log
@Added a missing break that was leading to aborts when Service_USB was issued.

Version 0.04. Tagged as 'SCSISoftUSB-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                13 Jun 2003
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "13 Jun 2003"
d16 1
a16 1
#define Module_ApplicationDate          "13-Jun-03"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (13 Jun 2003)"
#define Module_LibraryVersionInfo       "0:4"
@


1.4
log
@  Brought into line with latest version of SCSISoft spec.
Detail:
  * Returns separate error numbers for the different "cancel background
    operation" reasons
  * Reports that it supports scatter lists
  * Debugging output is LF-CR terminated, not CR-LF
Admin:
  Tested briefly.

Version 0.03. Tagged as 'SCSISoftUSB-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                03 Jun 2003
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "03 Jun 2003"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jun-03"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (03 Jun 2003)"
#define Module_LibraryVersionInfo       "0:3"
@


1.3
log
@  Various changes to get it up to a releasable standard.
Detail:
  * Unplugging of devices is now reliable.
  * Stall handling now works (requires USBDriver 0.17).
  * We now do max LUN checking, since devices don't seem to do it reliably
    themselves.
  * Unknown SCSI driver handler reason codes now return an error.
  * Scatter list handling improvements - eg individual transfers can now be
    bigger than the DeviceFS buffer size (accounting for the last.
Admin:
  Tested with various mass storage devices.

Version 0.02. Tagged as 'SCSISoftUSB-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                23 May 2003
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "23 May 2003"
d16 1
a16 1
#define Module_ApplicationDate          "23-May-03"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (23 May 2003)"
#define Module_LibraryVersionInfo       "0:2"
@


1.2
log
@Set version number to 0.01.

Version 0.01. Tagged as 'SCSISoftUSB-0_01'
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                14 May 2003
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "14 May 2003"
d16 1
a16 1
#define Module_ApplicationDate          "14-May-03"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (14 May 2003)"
#define Module_LibraryVersionInfo       "0:1"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* (0.00)
d4 1
a4 1
 * Last processed by srccommit version: 1.67.
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.00
d9 1
a9 1
#define Module_Date_CMHG                28 Apr 2803
d11 2
a12 2
#define Module_MajorVersion             "0.00"
#define Module_Version                  0
d14 1
a14 1
#define Module_Date                     "28 Apr 2803"
d16 1
a16 2
#define Module_ApplicationDate2         "28-Apr-03"
#define Module_ApplicationDate4         "28-Apr-2803"
d21 3
a23 3
#define Module_FullVersion              "0.00"
#define Module_HelpVersion              "0.00 (28 Apr 2803)"
#define Module_LibraryVersionInfo       "0:00"
@


1.1.1.1
log
@Initial import of SCSISoftUSB, a driver for USB mass storage devices that
use a SCSI command set over bulk-only or control-bulk-interrupt protocols.
@
text
@@
