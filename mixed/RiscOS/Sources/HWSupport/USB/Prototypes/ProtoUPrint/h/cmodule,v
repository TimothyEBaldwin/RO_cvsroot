head	1.1;
branch	1.1.1;
access;
symbols
	ProtoUPrint-0_03:1.1.1.1
	intitial:1.1.1.1
	Pace:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2001.05.02.14.51.41;	author dellis;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.02.14.51.41;	author dellis;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Copyright 2001 Pace Micro Technology plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "swis.h"

#define BM_InsertByte      0
#define BM_InsertBlock     1
#define BM_RemoveByte      2
#define BM_RemoveBlock     3
#define BM_ExamineByte     4
#define BM_ExamineBlock    5
#define BM_UsedSpace       6
#define BM_FreeSpace       7
#define BM_PurgeBuffer     8
#define BM_NextFilledBlock 9


/*
 * State information for each stream
 */
typedef struct Stream
{
    unsigned int devicefs_stream;
    unsigned int fileswitch_handle;
    unsigned int buffersize;
    unsigned int bufferthreshold;
    unsigned int buffer;
    unsigned int buffer_privid;
    char*       buffer_start;
    uint32_t    buffer_insertion;
    OHCI_ED*    ed;
    OHCI_TD*    td;
    uintptr_t   tda;
} Stream;

extern void (*BuffManService)(void);
extern void *BuffManWS;
extern Stream InputStream, OutputStream;

extern unsigned int call_buffermanager(_kernel_swi_regs *r, void (*addr)(void), void *pw);

#define CallBufMan(r) call_buffermanager(r, BuffManService, BuffManWS)

/* callbacks */
extern _kernel_oserror* reset_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* new_device_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* remove_device_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* set_address_cb (_kernel_swi_regs* r, void* pw, void* data);
extern _kernel_oserror* set_config_cb (_kernel_swi_regs* r, void* pw, void* data);

@


1.1.1.1
log
@Initial import of prototype usb printer driver.
@
text
@@
