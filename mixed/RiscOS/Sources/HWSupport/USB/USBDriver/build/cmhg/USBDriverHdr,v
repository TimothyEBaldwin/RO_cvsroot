head	1.1;
access;
symbols
	USBDriver-1_29:1.1
	USBDriver-1_28:1.1
	USBDriver-1_27:1.1
	USBDriver-1_26:1.1
	USBDriver-1_25:1.1
	USBDriver-1_24:1.1
	USBDriver-1_23:1.1
	USBDriver-1_22:1.1
	USBDriver-1_21:1.1
	USBDriver-1_20:1.1;
locks; strict;
comment	@# @;


1.1
date	2017.07.30.11.37.16;	author rool;	state Exp;
branches;
next	;
commitid	0fHS8wSWQgNvif1A;


desc
@@


1.1
log
@Remove OHCIDriver & EHCIDriver as targets
Detail:
  Makefile and !Mk* updated, and corresponding unused files put in the attic.
  Add an interim OHCIHALLib and EHCIHALLib target so that the HAL library variant still builds.
  Split messages into CmdHelp and Messages per a normal C component.
  Remove unused wsconsio/wsmousevar porting headers, no longer used.
Admin:
  Submission for USB bounty.
  Note, the version number of the resulting module will jump to match the top level VersionNum file.

Version 1.20. Tagged as 'USBDriver-1_20'
@
text
@; Copyright 2017 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
#include "Global/Services.h"
#include "../VersionNum"

initialisation-code:    module_init

finalisation-code:      module_final

service-call-handler:   module_services Service_ResourceFSStarting,
                                        Service_DeviceFSStarting,
                                        Service_DeviceFSDying,
                                        Service_USB,
                                        Service_PreReset
title-string:           USBDriver

help-string:            USBDriver Module_MajorVersion_CMHG

date-string:            Module_Date_CMHG

international-help-file: "Resources:$.Resources.USBDriver.Messages"

command-keyword-table:  module_commands

#ifdef USB_DEBUG
USBDebug(       min-args:1, max-args:3,
                help-text:     "*USBDebug sets the debug level for general usb, hub and mouse output.",
                invalid-syntax:"*USBDebug <usb> [<hub> [<mouse>]]"),
#endif

USBBuses(       min-args:0, max-args:0,
                international:,help-text:"HUSBBUS",invalid-syntax:"SUSBBUS"),

USBDevices(     min-args:0, max-args:0,
                international:,help-text:"HUSBDEV",invalid-syntax:"SUSBDEV"),

USBDevInfo(     min-args:1, max-args:1,
                international:,help-text:"HUSBDIN",invalid-syntax:"SUSBDIN"),

USBConfInfo(    min-args:1, max-args:1,
                international:,help-text:"HUSBCIN",invalid-syntax:"SUSBCIN"),

USBSetConfig(   min-args:2, max-args:2,
                international:,help-text:"HUSBCON",invalid-syntax:"SUSBCON"),

USBSetInterface(min-args:3, max-args:3,
                international:,help-text:"HUSBINT",invalid-syntax:"SUSBINT"),

#ifdef USB_DEBUG
USBDiscover(    min-args:0, max-args:0,
                help-text:     "*USBDiscover forces a search for new devices on all buses.",
                invalid-syntax:"Syntax: *USBDiscover"),
#endif

USBReset(       min-args:1, max-args:1,
                international:,help-text:"HUSBRES",invalid-syntax:"SUSBRES"),

USBQuirk(       min-args:1, max-args:5,
                international:,help-text:"HUSBQRK",invalid-syntax:"SUSBQRK")

swi-chunk-base-number:  0x54a40

swi-handler-code:       module_swis

swi-decoding-table:     USBDriver,
                        RegisterBus,
                        DeregisterBus,
                        InsertTransfer,
                        TransferComplete,
                        ScheduleSoftInterrupt,
                        Version

generic-veneers:        driver_entry/driver

vector-handlers:        pointerv_entry/pointerv,
                        keyv_entry/keyv,
                        softintr_entry/softintr
@
