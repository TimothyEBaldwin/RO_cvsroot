head	1.31;
access;
symbols
	USBDriver-1_29:1.31
	USBDriver-1_28:1.31
	USBDriver-1_27:1.31
	USBDriver-1_26:1.31
	USBDriver-1_25:1.31
	USBDriver-1_24:1.31
	USBDriver-1_23:1.31
	USBDriver-1_22:1.30
	USBDriver-1_21:1.30
	USBDriver-1_20:1.29
	USBDriver-1_19:1.28
	NetBSD-1_19:1.28
	NetBSD-1_18:1.28
	NetBSD-1_17:1.27
	NetBSD-1_16:1.27
	NetBSD-1_15:1.27
	NetBSD-1_14:1.27
	NetBSD-1_13:1.27
	NetBSD-1_12:1.27
	NetBSD-1_09-1:1.27
	NetBSD-1_11:1.27
	NetBSD-1_10:1.27
	NetBSD-1_09:1.27
	NetBSD-1_08:1.27
	NetBSD-1_07:1.27
	NetBSD-1_06:1.27
	NetBSD-1_05:1.26
	NetBSD-1_04:1.26
	NetBSD-1_03:1.26
	NetBSD-1_02:1.26
	NetBSD-1_01:1.25
	NetBSD-1_00:1.24
	NetBSD-0_99:1.24
	NetBSD-0_98:1.24
	NetBSD-0_97:1.23
	NetBSD-0_96:1.23
	NetBSD-0_95:1.22
	NetBSD-0_94:1.22
	NetBSD-0_93:1.22
	NetBSD-0_92:1.22
	NetBSD-0_91:1.22
	NetBSD-0_90:1.22
	NetBSD-0_89:1.22
	NetBSD-0_88:1.22
	NetBSD-0_87:1.22
	NetBSD-0_86:1.22
	NetBSD-0_85:1.22
	NetBSD-0_84:1.21
	NetBSD-0_83:1.21
	NetBSD-0_82:1.21
	NetBSD-0_81:1.21
	NetBSD-0_80:1.21
	NetBSD-0_79:1.21
	NetBSD-0_78:1.21
	NetBSD-0_77:1.21
	NetBSD-0_76:1.21
	NetBSD-0_75:1.21
	NetBSD-0_74:1.21
	NetBSD-0_73:1.21
	NetBSD-0_72:1.21
	NetBSD-0_71:1.21
	NetBSD-0_70:1.20
	NetBSD-0_69:1.20
	NetBSD-0_68:1.20
	NetBSD-0_67:1.20
	NetBSD-0_66:1.19
	NetBSD-0_65:1.18
	NetBSD-0_64:1.18
	NetBSD-0_63:1.18
	NetBSD-0_62:1.18
	NetBSD-0_61:1.18
	NetBSD-0_60:1.18
	NetBSD-0_59:1.18
	NetBSD-0_58:1.17
	NetBSD-0_57:1.16
	NetBSD-0_56:1.16
	NetBSD-0_55:1.16
	NetBSD-0_54:1.16
	NetBSD-0_53:1.16
	NetBSD-0_52:1.16
	NetBSD-0_51:1.16
	NetBSD-0_50:1.16
	NetBSD-0_49:1.15
	NetBSD-0_48:1.15
	NetBSD-0_47:1.14
	NetBSD-0_46:1.14
	NetBSD-0_45:1.14
	NetBSD-0_44:1.14
	NetBSD-0_43:1.14
	NetBSD-0_42:1.14
	NetBSD-0_41:1.14
	NetBSD-0_40:1.14
	NetBSD-0_39:1.14
	NetBSD-0_38:1.14
	NetBSD-0_37:1.14
	NetBSD-0_36:1.14
	NetBSD-0_35:1.14
	NetBSD-0_34:1.14
	NetBSD-0_33:1.14
	NetBSD-0_32:1.14
	NetBSD-0_31:1.14
	NetBSD-0_30:1.13
	NetBSD-0_29:1.13
	NetBSD-0_28:1.12
	RO_5_07:1.11
	NetBSD-0_27:1.11
	NetBSD-0_26:1.11
	NetBSD-0_25:1.11
	NetBSD-0_24:1.10
	NetBSD-0_23:1.10
	NetBSD-0_21-1_22_2_1:1.8
	NetBSD-0_22:1.9
	USB1:1.8.0.2
	NetBSD-0_21:1.8
	NetBSD-0_20:1.8
	NetBSD-0_19:1.8
	NetBSD-0_18:1.8
	NetBSD-0_17:1.8
	NetBSD-0_16:1.8
	NetBSD-0_15:1.7
	NetBSD-0_14:1.7
	NetBSD-0_13:1.6
	NetBSD-0_12:1.5
	NetBSD-0_11:1.5
	NetBSD-0_10:1.4
	NetBSD-0_09:1.4
	NetBSD-0_08:1.4
	NetBSD-0_07:1.4
	NetBSD-0_06:1.3
	NetBSD-0_05:1.3
	NetBSD-0_04:1.2
	NetBSD-0_03:1.2
	NetBSD-0_02:1.2
	NetBSD-0_01:1.1;
locks; strict;
comment	@# @;


1.31
date	2017.10.07.09.08.36;	author rool;	state Exp;
branches;
next	1.30;
commitid	Qzw5gnXY6CB2g6aA;

1.30
date	2017.08.19.14.39.21;	author rool;	state Exp;
branches;
next	1.29;
commitid	N0fa5xCfC1haFP3A;

1.29
date	2017.07.30.11.37.07;	author rool;	state Exp;
branches;
next	1.28;
commitid	0fHS8wSWQgNvif1A;

1.28
date	2016.12.17.10.12.52;	author rool;	state Exp;
branches;
next	1.27;
commitid	yws6HYEy6os04kyz;

1.27
date	2015.11.09.02.56.56;	author bavison;	state Exp;
branches;
next	1.26;
commitid	FHc9TaQL9YzzDmIy;

1.26
date	2015.08.24.20.42.49;	author jballance;	state Exp;
branches;
next	1.25;
commitid	OLhV7J4PBFRG0zyy;

1.25
date	2015.08.23.19.56.48;	author rsprowson;	state Exp;
branches;
next	1.24;
commitid	jz50RI8Q8cAyMqyy;

1.24
date	2015.08.21.19.59.41;	author rsprowson;	state Exp;
branches;
next	1.23;
commitid	lkGgBHyZsFbSRayy;

1.23
date	2015.08.02.08.40.04;	author rsprowson;	state Exp;
branches;
next	1.22;
commitid	CoYKyUwxzPaBIFvy;

1.22
date	2014.06.01.13.51.37;	author jlee;	state Exp;
branches;
next	1.21;
commitid	Vazl1SQGmZpsaPCx;

1.21
date	2012.06.07.00.11.01;	author jlee;	state Exp;
branches;
next	1.20;
commitid	LkYeKFZjKWlNTH7w;

1.20
date	2012.02.05.09.00.22;	author rsprowson;	state Exp;
branches;
next	1.19;
commitid	GjZYU9ee7HIwMWRv;

1.19
date	2012.02.04.21.06.42;	author rsprowson;	state Exp;
branches;
next	1.18;
commitid	L0w6MFCZgiZGPSRv;

1.18
date	2011.05.22.20.22.27;	author jlee;	state Exp;
branches;
next	1.17;
commitid	Ye1jVWDlKivFSIkv;

1.17
date	2011.04.14.20.03.50;	author bavison;	state Exp;
branches;
next	1.16;
commitid	q54VHNXbaCA10Qfv;

1.16
date	2010.01.30.17.37.52;	author jlee;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.13.23.20.26;	author bavison;	state Exp;
branches;
next	1.14;

1.14
date	2004.12.30.02.34.15;	author jballance;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.12.16.40.32;	author bavison;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.09.18.51.29;	author bavison;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.06.15.50.21;	author bavison;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.16.15.43.49;	author kbracey;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.21.20.49.14;	author bavison;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.14.16.43.47;	author bavison;	state Exp;
branches;
next	1.7;

1.7
date	2003.04.15.12.22.15;	author rsprowson;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.12.12.57.35;	author rsprowson;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.10.14.07.17;	author kbracey;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.22.11.38.35;	author kbracey;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.07.22.29.44;	author dellis;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.28.10.25.50;	author dellis;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.28.09.55.13;	author dellis;	state Exp;
branches;
next	;


desc
@@


1.31
log
@Clear up duplicate/unused OHCI/EHCI source files
Detail:
  Remove the (now) unused sources from when this component produced multiple targets. See Controllers/OHCIDriver & Controllers/EHCIDriver for the live copies.
  Remove unset USBHAL defines.
  Simplify the Makefile and !Mk* scripts.
  No longer export usbroothub_subr.h.
  Add a porting type "device_t" to usb_port.h.
Admin:
  Submission for USB bounty.

Version 1.23. Tagged as 'USBDriver-1_23'
@
text
@# Copyright 2003 Tematic Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for USBDriver
# 

COMPONENT       = USBDriver
UNAME           = "RISC_OS"
VPATH           = ^.build ^.dev.usb
EXPLIBDIR       = <Lib$Dir>.USB
DEVICELIST      = Resources.<Locale>.USBDevs
CUSTOMEXP       = custom
CINCLUDES       = -Itbox:,TCPIPLibs:,^.,OS:,C:USB
CDEFINES       += ${CDEBUG} -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED
RES_AREA        = resource_files
LIBS            = ${CALLXLIB} ${ASMUTILS}
CMHGDEPENDS     = usbmouse usbmodule usbkboard
INSTRES_FILES   = USBDevs
INSTRES_DEPENDS = ${DEVICELIST}
OBJS            = usbmodule port usb usbdi usb_subr \
                  usbdi_util usb_quirks uhub usbmouse usbkboard \
                  hid bufman triggercbs call_veneer

#
# Debug switch
#
DEBUG ?= FALSE
ifeq (${DEBUG},TRUE)
CFLAGS         += -DUSB_DEBUG -DDEBUGLIB
CMHGDEFINES    += -DUSB_DEBUG
LIBS           += ${DEBUGLIBS} ${NET5LIBS}
endif

include CModule

CFLAGS         += -wp -wc

#
# Produce the devices list
#
makedevs: c.makedevs ${DIRS}
        ${MAKE} -f makedevs/mk COMPONENT=makedevs THROWBACK=${THROWBACK}

${DEVICELIST}: makedevs ^.dev.usb.h.usbdevs ^.dev.usb.h.usbdevs_data
        ${RUN}makedevs > $@@

#
# Supplemented or overridden targets
#
clean::
        ${RM} ${DEVICELIST}
        ${RM} makedevs
        ${RM} ^.dev.usb.h.usbdevs
        ${RM} ^.dev.usb.h.usbdevs_data

export: export_${PHASE}
        @@${NOP}

export_hdrs: h.${CMHGFILE} ^.dev.usb.h.usbdevs
        ${MKDIR} o
        ${MKDIR} ${EXPLIBDIR}.dev.usb.h
        ${MKDIR} ${EXPLIBDIR}.sys.h
        ${MKDIR} ${EXPLIBDIR}.machine.h
        ${MKDIR} ${EXPLIBDIR}.h
        ${MKDIR} ${EXPLIBDIR}.Hdr
        # DeviceFS/Service call interface
        ${CP} h.USBDevFS           ${EXPLIBDIR}.h.USBDevFS         ${CPFLAGS}
        # Host driver interface
        ${CP} ^.dev.usb.h.usb      ${EXPLIBDIR}.dev.usb.h.usb      ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbdi    ${EXPLIBDIR}.dev.usb.h.usbdi    ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbdivar ${EXPLIBDIR}.dev.usb.h.usbdivar ${CPFLAGS}
        ${CP} ^.dev.usb.h.usb_port ${EXPLIBDIR}.dev.usb.h.usb_port ${CPFLAGS}
        ${CP} ^.sys.h.device       ${EXPLIBDIR}.sys.h.device       ${CPFLAGS}
        ${CP} ^.machine.h.bus      ${EXPLIBDIR}.machine.h.bus      ${CPFLAGS}
        ${CP} ^.VersionNum         ${EXPLIBDIR}.LibVersion         ${CPFLAGS}
        # Conversion of the USB device database
        ${CP} ^.dev.usb.h.usbdevs  ${EXPLIBDIR}.dev.usb.h.usbdevs  ${CPFLAGS}
        # Equivalent of ASMHDRS and ASMCHDRS and CMHGAUTOHDR
        ${CP} Hdr.USBDriver        ${EXP_HDR}.USBDriver            ${CPFLAGS}
        ${HDR2H} Hdr.USBDriver ${C_EXP_HDR}.USBDriver
        ${DO} ${AWK} -- "/.ifndef ${CMHGFILE_SWIPREFIX}/,/endif/" h.${CMHGFILE} > o._h_USBDriver
        ${FAPPEND} ${C_EXP_HDR}.USBDriver ${C_EXP_HDR}.USBDriver o._h_USBDriver
        @@${ECHO} ${COMPONENT}: header export complete

export_libs:
        @@${ECHO} ${COMPONENT}: no exported libraries

#
# Static dependencies
#
^.dev.usb.h.usbdevs ^.dev.usb.h.usbdevs_data: ^.dev.usb.usbdevs ^.dev.usb.devlist2h/awk
        ${GAWK} -v os="${UNAME} -s" -f ^.dev.usb.devlist2h/awk ^.dev.usb.usbdevs

# Dynamic dependencies:
@


1.30
log
@Changes to header exports
Detail:
  Export usbroothub_subr.h, for those HC's that might need it.
  Export C version of usbhal.h, in addition to the assembler Hdr version, for MUSBDriver.
  Eliminate the dependency on opt_usbverbose.h - an empty header file - by merging the change from usb_subr.c revision 1.186 from NetBSD which guards it with internal _KERNEL_OPT (unset).
Admin:
  Submission for USB bounty.

Version 1.21. Tagged as 'USBDriver-1_21'
@
text
@d18 1
a18 1
COMPONENT      ?= USBDriver
d21 1
d28 6
d40 2
a41 2
CFLAGS         += -DDEBUGLIB -DUSB_DEBUG -DOHCI_DEBUG -DEHCI_DEBUG
CMHGDEFINES    += -DUSB_DEBUG -DOHCI_DEBUG -DEHCI_DEBUG
a44 27
#
# Generate USBDriver and the controller drivers by choosing the list of objects
#
ifeq ("${COMPONENT}","EHCIHALLib")
OBJS            = ehcimodule ehci port call_veneer \
                  triggercbs usbroothub_subr
OBJS_HAL        = o_hal.ehci o_hal.usbroothub_subr o_hal.ehcihal o_hal.ehcihalasm
endif

ifeq ("${COMPONENT}","OHCIHALLib")
OBJS            = ohcimodule ohci port call_veneer \
                  triggercbs
OBJS_HAL        = o_hal.ohci
endif

ifeq ("${COMPONENT}","USBDriver")
CMHGDEPENDS     = usbmouse usbmodule usbkboard
INSTRES_FILES   = USBDevs
INSTRES_DEPENDS = ${DEVICELIST}
OBJS            = usbmodule port usb usbdi usb_subr \
                  usbdi_util usb_quirks uhub usbmouse usbkboard \
                  hid bufman triggercbs call_veneer
OBJS_HAL        = o_hal.usb o_hal.usbdi o_hal.usb_subr o_hal.usbdi_util \
                  o_hal.usb_quirks o_hal.uhub o_hal.porthal o_hal.halheap \
                  o_hal.usbhal
endif

a47 10
LDFLAGS        += -LIST maps.${TARGET} -MAP -Xref -Symbols rm.sym${TARGET}
DBG_LIBS       += ${NET5LIBS}
EXPLIBDIR       = <Lib$Dir>.USB

#
# HAL library rules
#
.SUFFIXES: .o_hal
.c.o_hal:; ${CC} -APCS 3/nofp/noswst -wp -ff -DUSBHAL -c -depend !Depend -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED ${CINCLUDES} ${THROWBACK} -o $@@ $<
.s.o_hal:; ${AS} ${ASFLAGS} -APCS 3/nofp/noswst -o $@@ $<
d52 1
a52 1
bin.makedevs: c.makedevs ${DIRS}
d55 2
a56 2
${DEVICELIST}: bin.makedevs ^.dev.usb.h.usbdevs ^.dev.usb.h.usbdevs_data
        ${RUN}bin.makedevs > $@@
d62 4
a65 11
        ${XWIPE} o_hal ${WFLAGS}
        ${XWIPE} maps  ${WFLAGS}
        ${XWIPE} bin   ${WFLAGS}
        ${RM}    ${DEVICELIST}
        ${RM}    ^.dev.usb.h.usbdevs
        ${RM}    ^.dev.usb.h.usbdevs_data

${DIRS}::
        ${MKDIR} o_hal
        ${MKDIR} maps
        ${MKDIR} bin
d67 1
a67 1
export: export_${PHASE}_${COMPONENT}
d70 1
a70 4
export_libs_${COMPONENT}: ${EXPLIBDIR}.o.${COMPONENT}
        @@${ECHO} ${COMPONENT}: library export complete

export_hdrs_USBDriver: h.${CMHGFILE} ^.dev.usb.h.usbdevs
a83 1
        ${CP} ^.dev.usb.h.usbroothub_subr ${EXPLIBDIR}.dev.usb.h.usbroothub_subr ${CPFLAGS}
a86 3
        # Workspace size for HAL allocation (only)
        ${CP} Hdr.usbhal           ${EXPLIBDIR}.Hdr.usbhal         ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbhal   ${EXPLIBDIR}.dev.usb.h.usbhal   ${CPFLAGS}
d96 2
a97 2
export_hdrs_EHCIHALLib export_hdrs_OHCIHALLib:
        @@${ECHO} ${COMPONENT}: header export complete
a104 4
${EXPLIBDIR}.o.${COMPONENT}: ${OBJS_HAL} ${DIRS}
        ${MKDIR} ${EXPLIBDIR}.o
        ${AR} ${ARFLAGS} $@@ ${OBJS_HAL}

@


1.29
log
@Remove OHCIDriver & EHCIDriver as targets
Detail:
  Makefile and !Mk* updated, and corresponding unused files put in the attic.
  Add an interim OHCIHALLib and EHCIHALLib target so that the HAL library variant still builds.
  Split messages into CmdHelp and Messages per a normal C component.
  Remove unused wsconsio/wsmousevar porting headers, no longer used.
Admin:
  Submission for USB bounty.
  Note, the version number of the resulting module will jump to match the top level VersionNum file.

Version 1.20. Tagged as 'USBDriver-1_20'
@
text
@d15 1
a15 1
# Make file for RISC OS port of NetBSD USB code
d18 1
a22 1
COMPONENT      ?= NetBSD
d124 1
d130 1
@


1.28
log
@Messages fixes, internationalisation, minor clean ups
Detail:
  USBDriver was performing unnecessary messages file reopening on Service_ResourceFSStarted (MessageTrans does this itself), remove this.
  Internationalised USBDriver, in particular its *Commands.
  Fixed standalone builds to output the messages file objects in the right place (Makefile mistake).
  Changed OHCIDriver and EHCIDriver to use allocated error bases rather than 0.
  Sync'd, where possible, the OHCIDriver and EHCIDriver sources which share a common heritage. Tentative shared interrupt support fixes for non-PCI attached controllers. Comment blocks & indentation improved.
  Export min() macro in usb_port.h.
  CMHG updated to not listen for unwanted services.
Admin:
  Submission for USB bounty.
  Tested on Pandaboard and Pi 2. OHCIDriver untested but low risk.

Version 1.18. Tagged as 'NetBSD-1_18'
@
text
@a20 1
CUSTOMRES       = custom
d41 1
a41 5
ifeq ("${COMPONENT}","EHCIDriver")
CMHGFILE        = ehcimodhead
CMHGDEPENDS     = ehcimodule
MSGS_ORIGIN     = LocalRes:EHCIMessages
MSGS_DEST       = Resources.EHCIDriver.Messages
d47 1
a47 5
ifeq ("${COMPONENT}","OHCIDriver")
CMHGFILE        = ohcimodhead
CMHGDEPENDS     = ohcimodule
MSGS_ORIGIN     = LocalRes:OHCIMessages
MSGS_DEST       = Resources.OHCIDriver.Messages
a53 1
CMHGFILE        = usbmodhead
d55 2
a56 2
MSGS_ORIGIN     = LocalRes:USBMessages
MSGS_DEST       = Resources.USBDriver.Messages
a64 3
SA_OBJS         = ${OBJS} ${COMPONENT}Res
DBG_OBJS        = ${OBJS} ${COMPONENT}Res

a94 3
        ${RM}    h.ehcimodhead
        ${RM}    h.ohcimodhead
        ${RM}    h.usbmodhead
d138 1
a138 1
export_hdrs_EHCIDriver export_hdrs_OHCIDriver:
a140 21
resources: resources_${COMPONENT}

resources_OHCIDriver: LocalRes:OHCIMessages
        ${MKDIR} ${RESFSDIR}
        ${TOKENCHECK} LocalRes:OHCIMessages
        ${CP} LocalRes:OHCIMessages ${RESFSDIR}.Messages ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: resources copied to Messages module

resources_EHCIDriver: LocalRes:EHCIMessages
        ${MKDIR} ${RESFSDIR}
        ${TOKENCHECK} LocalRes:EHCIMessages
        ${CP} LocalRes:EHCIMessages ${RESFSDIR}.Messages ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: resources copied to Messages module

resources_USBDriver: LocalRes:USBDriver ${DEVICELIST}
        ${MKDIR} ${RESFSDIR}
        ${TOKENCHECK} LocalRes:USBMessages
        ${CP} LocalRes:USBMessages ${RESFSDIR}.Messages ${CPFLAGS}
        ${CP} ${DEVICELIST} ${RESFSDIR}.USBDevs ${CPFLAGS}
        @@${ECHO} ${COMPONENT}: resources copied to Messages module

a150 8
${MERGEDRDIR}.${COMPONENT}Msgs: ${MSGS_ORIGIN}
        ${MKDIR} ${MERGEDRDIR}
        ${TOKENCHECK} ${MSGS_ORIGIN}
        ${CP} ${MSGS_ORIGIN} $@@ ${CPFLAGS}

o.${COMPONENT}Res od.${COMPONENT}Res: ${MERGEDRDIR}.${COMPONENT}Msgs ${DIRS}
        ${RESGEN} ${RES_AREA} $@@ ${MERGEDRDIR}.${COMPONENT}Msgs ${MSGS_DEST}

@


1.27
log
@  Fix HAL breakages caused by HAL_USBPortPower calls
Detail:
  In version 1.05, the USB library which is exported for the use of the HAL
  keyboard scan code unconditionally required the HAL_USBPortPower symbol.
  Not all HALs provide that entry point; for those that didn't, they would
  no longer link. Fixed by use of a bit of magic assembler.
Admin:
  Verified that OMAP3 ROM now builds again.

Version 1.06. Tagged as 'NetBSD-1_06'
@
text
@d46 1
d56 1
d66 1
d194 1
a194 1
        ${RESGEN} ${RES_AREA} $@@ ${MERGEDRDIR}.${COMPONENT}Msgs ${RES_PATH}
@


1.26
log
@  Minor makefile correction to enable o_hal component creation,
  and change to !MkExport to export EHCI and OHCI elements as well
Detail:
Admin:
  tested in iMx6 build


Version 1.02. Tagged as 'NetBSD-1_02'
@
text
@d48 1
a48 1
OBJS_HAL        = o_hal.ehci o_hal.usbroothub_subr o_hal.ehcihal
@


1.25
log
@Build fix
In products using OHCIDriver/EHCIDriver when they came to do a header export would overwrite the USBDriver header with an empty one.
@
text
@d120 1
a120 1
export_libs: ${EXPLIBDIR}.o.${COMPONENT}
@


1.24
log
@Export USBDriver definitions to normal location
USBDriver was not exporting its SWI (and other) definitions to the export directory like other modules do, meaning the host controller drivers all have to reach into this component to get their hands on it.
Makefile:
  Export an assembler header, conversion to C, and SWI definitions from CMHG.
  Rationalise the dev/usb/h/* headers which are exported in addition to those that are pertinent to host controllers (was missing usbdivar, and was exporting unused usbdi_util).
  Export machine/h/bus too.
  As it's unusual for a CModule to output both a library and module and headers, the EXPDIR has been divided into EXPLIBDIR for those things in C:USB, and EXPDIR for the others.
ehcimodule.c/ohcimodule.c:
  Use the exported USBDriver.h

Version 0.98. Tagged as 'NetBSD-0_98'
@
text
@d117 1
a117 1
export: export_${PHASE}
d121 1
a121 1
        @@echo ${COMPONENT}: library export complete
d123 1
a123 1
export_hdrs: h.${CMHGFILE} ^.dev.usb.h.usbdevs
d149 4
a152 1
        @@echo ${COMPONENT}: header export complete
d160 1
a160 1
        @@echo ${COMPONENT}: resources copied to Messages module
d166 1
a166 1
        @@echo ${COMPONENT}: resources copied to Messages module
d173 1
a173 1
        @@echo ${COMPONENT}: resources copied to Messages module
@


1.23
log
@Build fix
Don't set RES_OBJ to an empty string.
Rename merged messages variable to be merged resources dir (even though not used in that manner here).

Version 0.96. Tagged as 'NetBSD-0_96'
@
text
@d80 1
a80 1
EXPDIR          = <Lib$Dir>.USB
d120 1
a120 1
export_libs: ${EXPDIR}.o.${COMPONENT}
d123 26
a148 14
export_hdrs:   ^.dev.usb.h.usbdevs
        ${MKDIR} ${EXPDIR}.dev.usb.h
        ${MKDIR} ${EXPDIR}.h
        ${MKDIR} ${EXPDIR}.sys.h
        ${MKDIR} ${EXPDIR}.Hdr
        ${CP} ^.dev.usb.h.usb      ${EXPDIR}.dev.usb.h.usb      ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbdevs  ${EXPDIR}.dev.usb.h.usbdevs  ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbdi    ${EXPDIR}.dev.usb.h.usbdi    ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbdi_util ${EXPDIR}.dev.usb.h.usbdi_util ${CPFLAGS}
        ${CP} ^.dev.usb.h.usb_port ${EXPDIR}.dev.usb.h.usb_port ${CPFLAGS}
        ${CP} h.USBDevFS           ${EXPDIR}.h.USBDevFS         ${CPFLAGS}
        ${CP} ^.sys.h.device       ${EXPDIR}.sys.h.device       ${CPFLAGS}
        ${CP} ^.VersionNum         ${EXPDIR}.LibVersion         ${CPFLAGS}
        ${CP} Hdr.usbhal           ${EXPDIR}.Hdr.usbhal         ${CPFLAGS}
d178 2
a179 2
${EXPDIR}.o.${COMPONENT}: ${OBJS_HAL} ${DIRS}
        ${MKDIR} ${EXPDIR}.o
a189 1

@


1.22
log
@Tidy up exported USBDevFS.h
Detail:
  build/h/USBDevFS - Added extra #ifdef guard to allow USBDevFS.h to be safely included by software that uses the BSD USB headers. Add the DeviceFS_CallDevice codes that USBDriver uses.
  build/h/service - Removed redundant secondary definition of the service call structures which the drivers were using internally
  build/c/ehcihal - Removed redundant #includes
  build/c/ehcidriver, build/c/ohcidriver - Use USBDevFS.h instead of service.h
  build/c/usbmodule - Use USBDevFS.h instead of service.h. Get rid of local DeviceCall definitions and use the ones which are now in USBDevFS.h. Also switched over to using Interface/DevicsFS.h for the main DevicsFS call reason codes, to match the naming convention used by USBDevFS.h (as opposed to the OSLib naming convention that was used previously). Stripped the unused OBSOLETE_SERVICE_CALLS code.
  build/Makefile - Add usbdi_util.h to the header exports
Admin:
  Tested with building OMAP3, Tungsten & BCM2835 ROMs
  Builds to binary-identical modules as previous version.


Version 0.85. Tagged as 'NetBSD-0_85'
@
text
@a25 1
RES_OBJ         =
d170 2
a171 2
${MERGEDMDIR}.${COMPONENT}Msgs: ${MSGS_ORIGIN}
        ${MKDIR} ${MERGEDMDIR}
d175 2
a176 2
o.${COMPONENT}Res od.${COMPONENT}Res: ${MERGEDMDIR}.${COMPONENT}Msgs ${DIRS}
        ${RESGEN} ${RES_AREA} $@@ ${MERGEDMDIR}.${COMPONENT}Msgs ${RES_PATH}
@


1.21
log
@Make RHENIUM build switch go away. Misc housekeeping
Detail:
  build/Makefile, build/!MkDebug,fd7 - Debug versions of the modules can now be built just by passing "DEBUG=TRUE" to amu
  build/!MkRhenium,fd7 - Deleted obsolete file
  build/Version - Increased version numbers
  build/c/ehcihal, build/c/ehcimodule, build/c/ohcimodule - Only accept USB controllers if HAL_USBControllerInfo says the struct size is an exact match with what we expect. Rework USB controller enumeration to allow modules to properly support both PCI and HAL controllers being available on the same machine, and without RHENIUM switch (module sources only).
  build/c/ehcimodule - Get rid of remaining RHENIUM bits; RHENIUM flag no longer needed for 32bit wide register reads/writes to be supported
  build/c/ohcimodule, build/cmhg/ohcimodhead, dev/usb/c/ohci - Get rid of remaining RHENIUM bits; RHENIUM flag no longer needed for HAL port power controls to be supported.
  build/c/usbhal, build/c/usbmodule, dev/usb/c/uhub, dev/usb/h/usb_port - Get rid of empty riscos_failed_device function
  build/s/call_veneer, build/s/triggercbs - Use Entry/EXIT macros to avoid single-reg LDM/STM performance warnings. Convert tabs to spaces.
  dev/usb/h/usb - Get rid of RHENIUM switch on USB_PORT_RESET_DELAY. Now always uses non-RHENIUM value of 100ms.
Admin:
  Tested on rev A2 BB-xM, Iyonix, Raspberry Pi


Version 0.71. Tagged as 'NetBSD-0_71'
@
text
@d132 1
@


1.20
log
@Small makefile simplification.
Two rules into one.

Version 0.67. Tagged as 'NetBSD-0_67'
@
text
@d31 10
@


1.19
log
@Change to use CModule shared makefile.
Remove some of the proliferation of !Mk[stuff] files due to lack of
relevance.
Combined the OBJ[target] listings into the main makefile with a switch.
Remove a spurious # from the EHCIMessages.

Version 0.66. Tagged as 'NetBSD-0_66'
@
text
@a20 1
CLEAN_DEPEND    = clean-extras
a70 1
DIRS            = o.dirs
d90 1
a90 1
# Overridden targets
d92 1
a92 1
clean-extras:
d103 5
a167 11
o.dirs:
        ${MKDIR} o
        ${MKDIR} o_hal
        ${MKDIR} aif
        ${MKDIR} aof
        ${MKDIR} rm
        ${MKDIR} i
        ${MKDIR} maps
        ${MKDIR} gpa
        ${MKDIR} bin
        ${TOUCH} $@@
@


1.18
log
@Add the ability to build the USB drivers as HAL-compatible static libraries
Detail:
  build/Makefile, build/OBJEHCIDriver, build/OBJOHCIDriver, build/OBJUSBDriver - Modified makefiles to build the HAL libs during the export libs phase
  build/!MkHAL,fd7 - Handy script for building the HAL libs
  build/Hdr/usbhal - Header containing definitions for the assembler code. Also gets exported so that HALs know how much workspace to reserve.
  build/c/usbhal - HAL version of usbmodule.c & port.c. Also contains the keyboard scan code, adapted from the code in the Tungsten HAL.
  build/s/porthal - Assembler versions of some port.c routines that were easier to do in assembler than C
  build/s/halheap - OS_Heap code that's been adapted for use in the HAL. Could easily be changed into a standalone library instead of being part of the HAL USB libs. Supports memory-efficient allocation of aligned blocks.
  build/c/ehcihal - HAL version of ehcimodule.c. Currently only supports EHCI controllers exposed via HAL_USBControllerInfo (i.e. no PCI support)
  build/c/ehcimodule, build/c/ohcimodule, build/c/port - Moved riscos_irq_clear into port.c. Removed unused microtime() function.
  build/c/usbmouse - Strip out some debug-related code in non-debug builds
  build/Version - Updated version numbers
  dev/usb/c/ehci, dev/usb/h/ehcivar - Adapted to add support for the HAL build. Apart from the base changes, the code has also been tweaked to significantly reduce the amount of memory used at runtime by the HAL version of the driver.
  dev/usb/c/hid, dev/usb/c/uhub, dev/usb/c/usb, dev/usb/c/usb_quirks, dev/usb/c/usb_subr, dev/usb/c/usbdi, dev/usb/c/usbdi_util, dev/usb/c/usbroothub_subr - Changes to support HAL builds. Mainly disabling bits that won't work in the HAL or disabling bits for RISC OS in general if they weren't being used in the first place.
  dev/usb/c/ohci, dev/usb/h/ohcivar - Basic changes to support HAL builds. However HAL OHCI support is still incomplete.
  dev/usb/h/usb_port - Added support for the HAL build. Also tweaked logprintf definition to get rid of logprintf calls entirely in non-debug builds.
  dev/usb/h/usbdivar - Added support for the HAL build.
  dev/usb/h/usbhal - New header used by the HAL build. Gets included by every C file to ensure the compiler doesn't use sb, and contains structs/macros to allow access to the shared workspace.
Admin:
  HAL & non-HAL builds tested on rev C2 BB, rev A2 BB-xM, rev C1 TouchBook.
  Non-HAL builds tested with Iyonix ROM softload.
  Needs latest Kernel source for OSEntries.h export.


Version 0.59. Tagged as 'NetBSD-0_59'
@
text
@a16 2
# This makefile generates the main USBDriver and the controller drivers
# by including the relevant object file.
d18 2
a19 3
TARGET          = ${COMPONENT}
DIRS            = o._dirs
MSGLOC          = Resources.${COMPONENT}.Messages
d21 60
a80 24
#LIBS		= ${DEBUGLIB} ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
LIBS            = ${DEBUGLIB} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB}  ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
RDIR            = ${RESDIR}.${COMPONENT}
USBDIR          = <Lib$Dir>.USB

CINCLUDES       = -Itbox:,TCPIPLibs:,^.,OS:
CDEFINES        += ${CDEBUG} -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED
CMHGINCLUDES    = ${CINCLUDES}
CMHGDEFINES     = ${CDEBUG}
CFLAGS          += -ff -wp -wc -zm -zps1
LDFLAGS         = -LIST maps.${TARGET} -MAP -Xref -Symbols rm.sym${TARGET}

VPATH = ^.build ^.dev.usb

include OBJ${COMPONENT}

include StdTools
include ModStdRule
#MODSQZ = echo not squeezing... 
include ModuleLibs
include RAMCModule
include ROMCModule

UNAME=	"RISC_OS"
d82 5
d88 2
d91 13
a103 19
clean:
        ${WIPE} o      ${WFLAGS}
        ${WIPE} o_hal  ${WFLAGS}
        ${WIPE} aif    ${WFLAGS}
        ${WIPE} aof    ${WFLAGS}
        ${WIPE} rm     ${WFLAGS}
        ${WIPE} i      ${WFLAGS}
        ${WIPE} maps   ${WFLAGS}
        ${WIPE} gpa    ${WFLAGS}
        ${WIPE} bin    ${WFLAGS}
        ${WIPE} linked ${WFLAGS}
        ${RM}   h.ehcimodhead
        ${RM}   h.ohcimodhead
        ${RM}   h.usbmodhead
        ${RM}   Resources.<Locale>.USBDevs
        ${RM}   ^.dev.usb.h.usbdevs
        ${RM}   ^.dev.usb.h.usbdevs_data
        
all: o._dirs
d106 1
d108 2
a109 2
export_libs: ${USBDIR}.o.${COMPONENT}
        @@echo ${COMPONENT}: export complete (libs)
d112 13
a124 13
        ${MKDIR} ${USBDIR}.dev.usb.h
        ${MKDIR} ${USBDIR}.h
        ${MKDIR} ${USBDIR}.sys.h
        ${MKDIR} ${USBDIR}.Hdr
        ${CP} ^.dev.usb.h.usb      ${USBDIR}.dev.usb.h.usb      ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbdevs  ${USBDIR}.dev.usb.h.usbdevs  ${CPFLAGS}
        ${CP} ^.dev.usb.h.usbdi    ${USBDIR}.dev.usb.h.usbdi    ${CPFLAGS}
        ${CP} ^.dev.usb.h.usb_port ${USBDIR}.dev.usb.h.usb_port ${CPFLAGS}
        ${CP} h.USBDevFS           ${USBDIR}.h.USBDevFS         ${CPFLAGS}
        ${CP} ^.sys.h.device       ${USBDIR}.sys.h.device       ${CPFLAGS}
        ${CP} ^.VersionNum         ${USBDIR}.NetBSDVersion      ${CPFLAGS}
        ${CP} Hdr.usbhal           ${USBDIR}.Hdr.usbhal         ${CPFLAGS}
        @@echo ${COMPONENT}: export complete (hdrs)
d129 4
a132 3
        ${MKDIR} ${RDIR}
        ${CP} LocalRes:OHCIMessages ${RDIR}.Messages ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied
d135 4
a138 3
        ${MKDIR} ${RDIR}
        ${CP} LocalRes:EHCIMessages ${RDIR}.Messages ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied
d141 23
a163 4
        ${MKDIR} ${RDIR}
        ${CP} LocalRes:USBMessages ${RDIR}.Messages ${CPFLAGS}
        ${CP} ${DEVICELIST} ${RDIR}.USBDevs ${CPFLAGS}
        @@echo ${COMPONENT}: resource files copied
d165 1
a165 1
o._dirs:
d175 1
a175 60
        ${TOUCH} o._dirs

ehcimodule.o:   ehcimodhead.h
ohcimodule.o:   ohcimodhead.h USBDriver.h
usbmodule.o usbkboard.o:        usbmodhead.h

^.dev.usb.h.usbdevs ^.dev.usb.h.usbdevs_data: ^.dev.usb.usbdevs ^.dev.usb.devlist2h/awk
	${GAWK} -v os="${UNAME} -s" -f ^.dev.usb.devlist2h/awk ^.dev.usb.usbdevs

Resources.<Locale>.USBDevs: bin.makedevs ^.dev.usb.h.usbdevs ^.dev.usb.h.usbdevs_data
        ${RUN}bin.makedevs > Resources.<Locale>.USBDevs

USBDriver.h: usbmodhead.h
        ${SED} -n "/define USBDriver_/p" h.usbmodhead > h.USBDriver

bin.makedevs: c.makedevs ${CLIB} ${DIRS}
        ${MAKE} -f makedevs/mk COMPONENT=makedevs THROWBACK=${THROWBACK}

usbmsgs.o: Resources.<Locale>.USBMessages Resources.<Locale>.USBDevs
        resgen resource_files o.usbmsgs Resources.<Locale>.USBMessages ${MSGLOC} Resources.<Locale>.USBDevs Resources.USBDriver.USBDevs

ohcimsgs.o: Resources.<Locale>.OHCIMessages
        resgen resource_files o.ohcimsgs Resources.<Locale>.OHCIMessages ${MSGLOC}

ehcimsgs.o: Resources.<Locale>.EHCIMessages
        resgen resource_files o.ehcimsgs Resources.<Locale>.EHCIMessages ${MSGLOC}

# HAL libraries:
.SUFFIXES: .o_hal
.c.o_hal:; ${CC} -APCS 3/nofp/noswst -wp -ff -DUSBHAL -c -depend !Depend -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED ${CINCLUDES} ${THROWBACK} -o $@@ $<
.s.o_hal:; ${AS} ${ASFLAGS} -APCS 3/nofp/noswst -o $@@ $<

${USBDIR}.o.${COMPONENT}: ${OBJS_HAL} ${DIRS}
        ${MKDIR} ${USBDIR}.o
        ${AR} ${ARFLAGS} ${USBDIR}.o.${COMPONENT} ${OBJS_HAL}

# RISC OS debug:
aif.${COMPONENT}: ${RAM_OBJS} ${RAM_LIBS} ${CLIB} ${DIRS}
        link -base 0 -aif -bin -d -o $@@ ${RAM_OBJS} ${RAM_LIBS} ${CLIB}

gpa.${COMPONENT}: aif.${COMPONENT}
        togpa -s aif.${COMPONENT} $@@

debug: gpa.${COMPONENT} ${DIRS}

.SUFFIXES: .i

.c.i:;  ${CC} -E ${CFLAGS} $< > $@@

listing: i.ohci i.ohcimodule i.usb i.usbdi i.usbdi_util i.usb_subr i.ugen i.usbmodule i.ehcimodule

BBETYPE = usb
bbe-usb: bbe-generic
        ${MKDIR} ${BBEDIR}.aof
        BBE_Export_File aof.${TARGET}
        ${CP} rom_link_v.${TARGET} ${VERBATIMROMLINK} ${CPFLAGS}
        BBE_Export_File ^.VersionNum

# Static dependencies:
o.makedevs o.usbmouse: ^.dev.usb.h.usbdevs
@


1.17
log
@  Build fix
Detail:
  A couple of source files now have a dependency on an auto-generated
  header file, dev/usb/usbdevs.h. Normally you get away with this, because
  it's created during the export_hdrs phase. But if the first build you do
  on a freshly checked-out build tree includes a rom phase, then srcbuild
  cleans the component between the export_hdrs and rom phases, so the rom
  phase fails. Fixed by adding a couple of static dependencies to Makefile.
Admin:
  Tested manually.

Version 0.58. Tagged as 'NetBSD-0_58'
@
text
@d53 1
d73 1
a73 1
export_libs:
d80 1
d88 1
d111 1
d146 9
@


1.16
log
@Rework USB driver makefile & cmhg files to avoid constant rebuilds of USBDriver.h
Detail:
  Limitations in the way CMHG was being told which message file to use meant that the makefile was constructed in a way that would automatically delete usbmodhead.h/.o after they were built, to protect against OHCIDriver or EHCIDriver causing the file to be built referencing the wrong messages file.
  However since each component uses a unique messages filename, and each component has its own CMHG file, there was absolutely no need for this - all that was needed was to update the CMHG files to reference the correct messages file directly.
  ROM builds are now a minute or two faster because of this, which is quite welcome since I can often find myself doing 30+ builds a day.
Admin:
  Tested by building Tungsten ROM and diffing new modules against old; no differences detected.
  Not tagged.


Version 0.49. Not tagged
@
text
@d164 2
@


1.15
log
@  Build fix
Detail:
  The build utility makedevs, compiled at build time, is now built using the
  HostTools shared makefile, and so will execute on any RISC OS build host
  even if the default compiler options are to target an incompatible ARM
  architecture.
Admin:
  Tested using an APCS-R build on an Iyonix.

Version 0.47. Not tagged
@
text
@d32 1
a32 1
CMHGDEFINES     = -DMSGLOC=${MSGLOC} ${CDEBUG}
a126 2
# Remove the usbmodhead after creating the SWI table because if OHCIDriver
# makes it then it has the wrong messages file in it
a128 2
        ${RM}   h.usbmodhead
        ${RM}   o.usbmodhead
@


1.14
log
@        Update of EHCIDriver to current NetBSD, together with needed changes
        in both OHCIDriver and USBDriver.


Detail:
        Code may change before formal release .. will be beta released
        ... Entered to CVS to get new version numbers, and for
        the record.
Admin:
        Castle/netbsd added IP .. will be tested more fully before
        formal release. Still to be verified on Rhenium.


Version 0.31. Tagged as 'NetBSD-0_31'
@
text
@d125 1
a125 1
        bin.makedevs > Resources.<Locale>.USBDevs
d134 2
a135 2
bin.makedevs: o.makedevs ${CLIB} ${DIRS}
        ${LD} -o $@@ o.makedevs ${CLIB}
@


1.13
log
@  BBE tidying.
Detail:
  Exports VersionNum to BBE.
Admin:
  Tested in a Tungsten BBE build.

Retagged, since this won't affect existing builds.
@
text
@d47 4
d65 3
a67 1

d75 1
a75 1
export_hdrs:
d121 4
a124 1
Resources.<Locale>.USBDevs: bin.makedevs
@


1.12
log
@BBE-related change:
Added verbatim rom_link rules for each of USBDriver, OHCIDriver and
EHCIDriver, because the fact that source files are re-built in the rom_link
phase breaks srcbuild's automatic rom_link rule generation.

Retagged since this won't affect code generation for existing builds.
@
text
@d157 1
@


1.11
log
@  New versions from John.
Detail:
  * All modules will now rmkill/rmload more reliably
  * Keyboard driver disables kernel debounce on new enough kernels, needed
    for many PS2-USB adaptors, bar code scanners etc
  * Mouse driver will scroll wheel scroll any windows that do respond to
    scroll events, otherwise it issues PointerReason_WheelChange (9) to an
    external WimpScroll module
  * Several bugs and an interrupt hole resolved
Admin:
  Tested at Framlingham.

Version 0.25. Tagged as 'NetBSD-0_25'
@
text
@d152 6
@


1.10
log
@Fixes from John Ballance:

Version 0.23. Tagged as 'NetBSD-0_23'
@
text
@d34 1
a34 1
LDFLAGS         = -LIST maps.${TARGET} -MAP -Xref
a153 551
o.usb:	^.dev.usb.c.usb
o.usb:	TCPIPLibs:sys.h.cdefs
o.usb:	TCPIPLibs:sys.h.param
o.usb:	TCPIPLibs:sys.h.types
o.usb:	TCPIPLibs:sys.h.cdefs
o.usb:	TCPIPLibs:machine.h.endian
o.usb:	TCPIPLibs:machine.h.ansi
o.usb:	TCPIPLibs:machine.h.types
o.usb:	TCPIPLibs:sys.h.syslimits
o.usb:	TCPIPLibs:sys.h.cdefs
o.usb:	TCPIPLibs:sys.h.errno
o.usb:	TCPIPLibs:sys.h.time
o.usb:	TCPIPLibs:sys.h.resource
o.usb:	TCPIPLibs:sys.h.types
o.usb:	TCPIPLibs:sys.h.ucred
o.usb:	TCPIPLibs:sys.h.uio
o.usb:	TCPIPLibs:sys.h.rtprio
o.usb:	TCPIPLibs:sys.h.signal
o.usb:	TCPIPLibs:machine.h.signal
o.usb:	TCPIPLibs:machine.h.param
o.usb:	TCPIPLibs:machine.h.limits
o.usb:	TCPIPLibs:sys.h.systm
o.usb:	TCPIPLibs:machine.h.cpufunc
o.usb:	TCPIPLibs:machine.h.stdarg
o.usb:	TCPIPLibs:sys.h.callout
o.usb:	TCPIPLibs:sys.h.queue
o.usb:	TCPIPLibs:sys.h.kernel
o.usb:	TCPIPLibs:sys.h.linker_set
o.usb:	TCPIPLibs:sys.h.malloc
o.usb:	^.sys.h.device
o.usb:	TCPIPLibs:sys.h.queue
o.usb:	TCPIPLibs:sys.h.proc
o.usb:	TCPIPLibs:machine.h.proc
o.usb:	TCPIPLibs:sys.h.queue
o.usb:	TCPIPLibs:sys.h.rtprio
o.usb:	TCPIPLibs:sys.h.select
o.usb:	TCPIPLibs:sys.h.time
o.usb:	TCPIPLibs:sys.h.conf
o.usb:	TCPIPLibs:sys.h.fcntl
o.usb:	^.sys.h.poll
o.usb:	TCPIPLibs:sys.h.select
o.usb:	TCPIPLibs:sys.h.vnode
o.usb:	TCPIPLibs:sys.h.queue
o.usb:	TCPIPLibs:sys.h.signalvar
o.usb:	^.dev.usb.h.usb
o.usb:	TCPIPLibs:sys.h.types
o.usb:	TCPIPLibs:sys.h.time
o.usb:	^.dev.usb.h.usb_port
o.usb:	h.opt_usbverbose
o.usb:	^.sys.h.device
o.usb:	TCPIPLibs:h.errno
o.usb:	TCPIPLibs:sys.h.ioccom
o.usb:	^.dev.usb.h.usbdi
o.usb:	^.dev.usb.h.usbdi_util
o.usb:	^.machine.h.bus
o.usb:	TCPIPLibs:sys.h.types
o.usb:	^.dev.usb.h.usbdivar
o.usb:	^.dev.usb.h.usb_quirks
o.usbdi:	^.dev.usb.c.usbdi
o.usbdi:	TCPIPLibs:sys.h.cdefs
o.usbdi:	TCPIPLibs:sys.h.param
o.usbdi:	TCPIPLibs:sys.h.types
o.usbdi:	TCPIPLibs:sys.h.cdefs
o.usbdi:	TCPIPLibs:machine.h.endian
o.usbdi:	TCPIPLibs:machine.h.ansi
o.usbdi:	TCPIPLibs:machine.h.types
o.usbdi:	TCPIPLibs:sys.h.syslimits
o.usbdi:	TCPIPLibs:sys.h.cdefs
o.usbdi:	TCPIPLibs:sys.h.errno
o.usbdi:	TCPIPLibs:sys.h.time
o.usbdi:	TCPIPLibs:sys.h.resource
o.usbdi:	TCPIPLibs:sys.h.types
o.usbdi:	TCPIPLibs:sys.h.ucred
o.usbdi:	TCPIPLibs:sys.h.uio
o.usbdi:	TCPIPLibs:sys.h.rtprio
o.usbdi:	TCPIPLibs:sys.h.signal
o.usbdi:	TCPIPLibs:machine.h.signal
o.usbdi:	TCPIPLibs:machine.h.param
o.usbdi:	TCPIPLibs:machine.h.limits
o.usbdi:	TCPIPLibs:sys.h.systm
o.usbdi:	TCPIPLibs:machine.h.cpufunc
o.usbdi:	TCPIPLibs:machine.h.stdarg
o.usbdi:	TCPIPLibs:sys.h.callout
o.usbdi:	TCPIPLibs:sys.h.queue
o.usbdi:	TCPIPLibs:sys.h.malloc
o.usbdi:	TCPIPLibs:sys.h.proc
o.usbdi:	TCPIPLibs:machine.h.proc
o.usbdi:	TCPIPLibs:sys.h.queue
o.usbdi:	TCPIPLibs:sys.h.rtprio
o.usbdi:	TCPIPLibs:sys.h.select
o.usbdi:	TCPIPLibs:sys.h.time
o.usbdi:	^.machine.h.bus
o.usbdi:	TCPIPLibs:sys.h.types
o.usbdi:	^.dev.usb.h.usb
o.usbdi:	TCPIPLibs:sys.h.types
o.usbdi:	TCPIPLibs:sys.h.time
o.usbdi:	^.dev.usb.h.usb_port
o.usbdi:	h.opt_usbverbose
o.usbdi:	^.sys.h.device
o.usbdi:	TCPIPLibs:sys.h.queue
o.usbdi:	TCPIPLibs:h.errno
o.usbdi:	TCPIPLibs:sys.h.ioccom
o.usbdi:	^.dev.usb.h.usbdi
o.usbdi:	^.dev.usb.h.usbdi_util
o.usbdi:	^.dev.usb.h.usbdivar
o.usbdi:	^.dev.usb.h.usb_mem
o.usb_subr:	^.dev.usb.c.usb_subr
o.usb_subr:	TCPIPLibs:sys.h.cdefs
o.usb_subr:	TCPIPLibs:sys.h.param
o.usb_subr:	TCPIPLibs:sys.h.types
o.usb_subr:	TCPIPLibs:sys.h.cdefs
o.usb_subr:	TCPIPLibs:machine.h.endian
o.usb_subr:	TCPIPLibs:machine.h.ansi
o.usb_subr:	TCPIPLibs:machine.h.types
o.usb_subr:	TCPIPLibs:sys.h.syslimits
o.usb_subr:	TCPIPLibs:sys.h.cdefs
o.usb_subr:	TCPIPLibs:sys.h.errno
o.usb_subr:	TCPIPLibs:sys.h.time
o.usb_subr:	TCPIPLibs:sys.h.resource
o.usb_subr:	TCPIPLibs:sys.h.types
o.usb_subr:	TCPIPLibs:sys.h.ucred
o.usb_subr:	TCPIPLibs:sys.h.uio
o.usb_subr:	TCPIPLibs:sys.h.rtprio
o.usb_subr:	TCPIPLibs:sys.h.signal
o.usb_subr:	TCPIPLibs:machine.h.signal
o.usb_subr:	TCPIPLibs:machine.h.param
o.usb_subr:	TCPIPLibs:machine.h.limits
o.usb_subr:	TCPIPLibs:sys.h.systm
o.usb_subr:	TCPIPLibs:machine.h.cpufunc
o.usb_subr:	TCPIPLibs:machine.h.stdarg
o.usb_subr:	TCPIPLibs:sys.h.callout
o.usb_subr:	TCPIPLibs:sys.h.queue
o.usb_subr:	TCPIPLibs:sys.h.kernel
o.usb_subr:	TCPIPLibs:sys.h.linker_set
o.usb_subr:	TCPIPLibs:sys.h.malloc
o.usb_subr:	TCPIPLibs:sys.h.proc
o.usb_subr:	TCPIPLibs:machine.h.proc
o.usb_subr:	TCPIPLibs:sys.h.queue
o.usb_subr:	TCPIPLibs:sys.h.rtprio
o.usb_subr:	TCPIPLibs:sys.h.select
o.usb_subr:	TCPIPLibs:sys.h.time
o.usb_subr:	^.machine.h.bus
o.usb_subr:	TCPIPLibs:sys.h.types
o.usb_subr:	^.dev.usb.h.usb
o.usb_subr:	TCPIPLibs:sys.h.types
o.usb_subr:	TCPIPLibs:sys.h.time
o.usb_subr:	^.dev.usb.h.usb_port
o.usb_subr:	h.opt_usbverbose
o.usb_subr:	^.sys.h.device
o.usb_subr:	TCPIPLibs:sys.h.queue
o.usb_subr:	TCPIPLibs:h.errno
o.usb_subr:	TCPIPLibs:sys.h.ioccom
o.usb_subr:	^.dev.usb.h.usbdi
o.usb_subr:	^.dev.usb.h.usbdi_util
o.usb_subr:	^.dev.usb.h.usbdivar
o.usb_subr:	^.dev.usb.h.usbdevs
o.usb_subr:	^.dev.usb.h.usb_quirks
o.usbdi_util:	^.dev.usb.c.usbdi_util
o.usbdi_util:	TCPIPLibs:sys.h.cdefs
o.usbdi_util:	TCPIPLibs:sys.h.param
o.usbdi_util:	TCPIPLibs:sys.h.types
o.usbdi_util:	TCPIPLibs:sys.h.cdefs
o.usbdi_util:	TCPIPLibs:machine.h.endian
o.usbdi_util:	TCPIPLibs:machine.h.ansi
o.usbdi_util:	TCPIPLibs:machine.h.types
o.usbdi_util:	TCPIPLibs:sys.h.syslimits
o.usbdi_util:	TCPIPLibs:sys.h.cdefs
o.usbdi_util:	TCPIPLibs:sys.h.errno
o.usbdi_util:	TCPIPLibs:sys.h.time
o.usbdi_util:	TCPIPLibs:sys.h.resource
o.usbdi_util:	TCPIPLibs:sys.h.types
o.usbdi_util:	TCPIPLibs:sys.h.ucred
o.usbdi_util:	TCPIPLibs:sys.h.uio
o.usbdi_util:	TCPIPLibs:sys.h.rtprio
o.usbdi_util:	TCPIPLibs:sys.h.signal
o.usbdi_util:	TCPIPLibs:machine.h.signal
o.usbdi_util:	TCPIPLibs:machine.h.param
o.usbdi_util:	TCPIPLibs:machine.h.limits
o.usbdi_util:	TCPIPLibs:sys.h.systm
o.usbdi_util:	TCPIPLibs:machine.h.cpufunc
o.usbdi_util:	TCPIPLibs:machine.h.stdarg
o.usbdi_util:	TCPIPLibs:sys.h.callout
o.usbdi_util:	TCPIPLibs:sys.h.queue
o.usbdi_util:	TCPIPLibs:sys.h.kernel
o.usbdi_util:	TCPIPLibs:sys.h.linker_set
o.usbdi_util:	TCPIPLibs:sys.h.malloc
o.usbdi_util:	TCPIPLibs:sys.h.proc
o.usbdi_util:	TCPIPLibs:machine.h.proc
o.usbdi_util:	TCPIPLibs:sys.h.queue
o.usbdi_util:	TCPIPLibs:sys.h.rtprio
o.usbdi_util:	TCPIPLibs:sys.h.select
o.usbdi_util:	TCPIPLibs:sys.h.time
o.usbdi_util:	^.sys.h.device
o.usbdi_util:	TCPIPLibs:sys.h.queue
o.usbdi_util:	^.dev.usb.h.usb
o.usbdi_util:	TCPIPLibs:sys.h.types
o.usbdi_util:	TCPIPLibs:sys.h.time
o.usbdi_util:	^.dev.usb.h.usb_port
o.usbdi_util:	h.opt_usbverbose
o.usbdi_util:	^.sys.h.device
o.usbdi_util:	TCPIPLibs:h.errno
o.usbdi_util:	TCPIPLibs:sys.h.ioccom
o.usbdi_util:	^.dev.usb.h.usbhid
o.usbdi_util:	^.dev.usb.h.usbdi
o.usbdi_util:	^.dev.usb.h.usbdi_util
o.uhub:	^.dev.usb.c.uhub
o.uhub:	TCPIPLibs:sys.h.cdefs
o.uhub:	TCPIPLibs:sys.h.param
o.uhub:	TCPIPLibs:sys.h.types
o.uhub:	TCPIPLibs:sys.h.cdefs
o.uhub:	TCPIPLibs:machine.h.endian
o.uhub:	TCPIPLibs:machine.h.ansi
o.uhub:	TCPIPLibs:machine.h.types
o.uhub:	TCPIPLibs:sys.h.syslimits
o.uhub:	TCPIPLibs:sys.h.cdefs
o.uhub:	TCPIPLibs:sys.h.errno
o.uhub:	TCPIPLibs:sys.h.time
o.uhub:	TCPIPLibs:sys.h.resource
o.uhub:	TCPIPLibs:sys.h.types
o.uhub:	TCPIPLibs:sys.h.ucred
o.uhub:	TCPIPLibs:sys.h.uio
o.uhub:	TCPIPLibs:sys.h.rtprio
o.uhub:	TCPIPLibs:sys.h.signal
o.uhub:	TCPIPLibs:machine.h.signal
o.uhub:	TCPIPLibs:machine.h.param
o.uhub:	TCPIPLibs:machine.h.limits
o.uhub:	TCPIPLibs:sys.h.systm
o.uhub:	TCPIPLibs:machine.h.cpufunc
o.uhub:	TCPIPLibs:machine.h.stdarg
o.uhub:	TCPIPLibs:sys.h.callout
o.uhub:	TCPIPLibs:sys.h.queue
o.uhub:	TCPIPLibs:sys.h.kernel
o.uhub:	TCPIPLibs:sys.h.linker_set
o.uhub:	TCPIPLibs:sys.h.malloc
o.uhub:	^.machine.h.bus
o.uhub:	TCPIPLibs:sys.h.types
o.uhub:	^.dev.usb.h.usb
o.uhub:	TCPIPLibs:sys.h.types
o.uhub:	TCPIPLibs:sys.h.time
o.uhub:	^.dev.usb.h.usb_port
o.uhub:	h.opt_usbverbose
o.uhub:	^.sys.h.device
o.uhub:	TCPIPLibs:sys.h.queue
o.uhub:	TCPIPLibs:h.errno
o.uhub:	TCPIPLibs:sys.h.ioccom
o.uhub:	^.dev.usb.h.usbdi
o.uhub:	^.dev.usb.h.usbdi_util
o.uhub:	^.dev.usb.h.usbdivar
o.usbmodhead:	cmhg.usbmodhead
o.usbmodhead:	C:Global.h.Services
o.usbmodhead:	cmhg.^.Version
o.ohcimodhead:	cmhg.ohcimodhead
o.ohcimodhead:	C:Global.h.RISCOS
o.ohcimodhead:	C:Global.h.Services
o.ohcimodhead:	cmhg.^.Version
o.ohci:	^.dev.usb.c.ohci
o.ohci:	TCPIPLibs:sys.h.cdefs
o.ohci:	TCPIPLibs:sys.h.param
o.ohci:	TCPIPLibs:sys.h.types
o.ohci:	TCPIPLibs:sys.h.cdefs
o.ohci:	TCPIPLibs:machine.h.endian
o.ohci:	TCPIPLibs:machine.h.ansi
o.ohci:	TCPIPLibs:machine.h.types
o.ohci:	TCPIPLibs:sys.h.syslimits
o.ohci:	TCPIPLibs:sys.h.cdefs
o.ohci:	TCPIPLibs:sys.h.errno
o.ohci:	TCPIPLibs:sys.h.time
o.ohci:	TCPIPLibs:sys.h.resource
o.ohci:	TCPIPLibs:sys.h.types
o.ohci:	TCPIPLibs:sys.h.ucred
o.ohci:	TCPIPLibs:sys.h.uio
o.ohci:	TCPIPLibs:sys.h.rtprio
o.ohci:	TCPIPLibs:sys.h.signal
o.ohci:	TCPIPLibs:machine.h.signal
o.ohci:	TCPIPLibs:machine.h.param
o.ohci:	TCPIPLibs:machine.h.limits
o.ohci:	TCPIPLibs:sys.h.systm
o.ohci:	TCPIPLibs:machine.h.cpufunc
o.ohci:	TCPIPLibs:machine.h.stdarg
o.ohci:	TCPIPLibs:sys.h.callout
o.ohci:	TCPIPLibs:sys.h.queue
o.ohci:	TCPIPLibs:sys.h.malloc
o.ohci:	TCPIPLibs:sys.h.proc
o.ohci:	TCPIPLibs:machine.h.proc
o.ohci:	TCPIPLibs:sys.h.queue
o.ohci:	TCPIPLibs:sys.h.rtprio
o.ohci:	TCPIPLibs:sys.h.select
o.ohci:	TCPIPLibs:sys.h.time
o.ohci:	TCPIPLibs:sys.h.queue
o.ohci:	^.machine.h.bus
o.ohci:	TCPIPLibs:sys.h.types
o.ohci:	TCPIPLibs:machine.h.endian
o.ohci:	^.dev.usb.h.usb
o.ohci:	TCPIPLibs:sys.h.types
o.ohci:	TCPIPLibs:sys.h.time
o.ohci:	^.dev.usb.h.usb_port
o.ohci:	h.opt_usbverbose
o.ohci:	^.sys.h.device
o.ohci:	TCPIPLibs:sys.h.queue
o.ohci:	TCPIPLibs:h.errno
o.ohci:	TCPIPLibs:sys.h.ioccom
o.ohci:	^.dev.usb.h.usbdi
o.ohci:	^.dev.usb.h.usbdivar
o.ohci:	^.dev.usb.h.usb_mem
o.ohci:	^.dev.usb.h.usb_quirks
o.ohci:	^.dev.usb.h.ohcireg
o.ohci:	^.dev.usb.h.ohcivar
o.call_veneer: s.call_veneer
o.call_veneer: Hdr:ListOpts
o.call_veneer: Hdr:Macros
o.call_veneer: Hdr:System
o.call_veneer: Hdr:SWIs
o.call_veneer: Hdr:CPU.Generic26
o.call_veneer: Hdr:Machine.<Machine>
o.call_veneer: Hdr:Machine.Machine
o.call_veneer: Hdr:CPU.Generic32
o.call_veneer: Hdr:IO.GenericIO
o.call_veneer: Hdr:RISCOS
o.ehci:	^.dev.usb.c.ehci
o.ehci:	TCPIPLibs:sys.h.cdefs
o.ehci:	TCPIPLibs:sys.h.param
o.ehci:	TCPIPLibs:sys.h.types
o.ehci:	TCPIPLibs:sys.h.cdefs
o.ehci:	TCPIPLibs:machine.h.endian
o.ehci:	TCPIPLibs:machine.h.ansi
o.ehci:	TCPIPLibs:machine.h.types
o.ehci:	TCPIPLibs:sys.h.syslimits
o.ehci:	TCPIPLibs:sys.h.cdefs
o.ehci:	TCPIPLibs:sys.h.errno
o.ehci:	TCPIPLibs:sys.h.time
o.ehci:	TCPIPLibs:sys.h.resource
o.ehci:	TCPIPLibs:sys.h.types
o.ehci:	TCPIPLibs:sys.h.ucred
o.ehci:	TCPIPLibs:sys.h.uio
o.ehci:	TCPIPLibs:sys.h.rtprio
o.ehci:	TCPIPLibs:sys.h.signal
o.ehci:	TCPIPLibs:machine.h.signal
o.ehci:	TCPIPLibs:machine.h.param
o.ehci:	TCPIPLibs:machine.h.limits
o.ehci:	TCPIPLibs:sys.h.systm
o.ehci:	TCPIPLibs:machine.h.cpufunc
o.ehci:	TCPIPLibs:machine.h.stdarg
o.ehci:	TCPIPLibs:sys.h.callout
o.ehci:	TCPIPLibs:sys.h.queue
o.ehci:	TCPIPLibs:sys.h.kernel
o.ehci:	TCPIPLibs:sys.h.linker_set
o.ehci:	TCPIPLibs:sys.h.malloc
o.ehci:	^.sys.h.device
o.ehci:	TCPIPLibs:sys.h.queue
o.ehci:	TCPIPLibs:sys.h.select
o.ehci:	TCPIPLibs:sys.h.proc
o.ehci:	TCPIPLibs:machine.h.proc
o.ehci:	TCPIPLibs:sys.h.queue
o.ehci:	TCPIPLibs:sys.h.rtprio
o.ehci:	TCPIPLibs:sys.h.select
o.ehci:	TCPIPLibs:sys.h.time
o.ehci:	TCPIPLibs:sys.h.queue
o.ehci:	^.machine.h.bus
o.ehci:	TCPIPLibs:sys.h.types
o.ehci:	TCPIPLibs:machine.h.endian
o.ehci:	^.dev.usb.h.usb
o.ehci:	TCPIPLibs:sys.h.types
o.ehci:	TCPIPLibs:sys.h.time
o.ehci:	^.dev.usb.h.usb_port
o.ehci:	h.opt_usbverbose
o.ehci:	^.sys.h.device
o.ehci:	TCPIPLibs:h.errno
o.ehci:	TCPIPLibs:sys.h.ioccom
o.ehci:	^.dev.usb.h.usbdi
o.ehci:	^.dev.usb.h.usbdivar
o.ehci:	^.dev.usb.h.usb_mem
o.ehci:	^.dev.usb.h.usb_quirks
o.ehci:	^.dev.usb.h.ehcireg
o.ehci:	^.dev.usb.h.ehcivar
o.usbmodule:	c.usbmodule
o.usbmodule:	h.usbmodhead
o.usbmodule:	C:h.kernel
o.usbmodule:	h.bufman
o.usbmodule:	C:h.kernel
o.usbmodule:	C:Global.h.RISCOS
o.usbmodule:	C:Global.h.Services
o.usbmodule:	TCPIPLibs:sys.h.callout
o.usbmodule:	TCPIPLibs:sys.h.queue
o.usbmodule:	TCPIPLibs:sys.h.ioctl
o.usbmodule:	TCPIPLibs:sys.h.ttycom
o.usbmodule:	TCPIPLibs:sys.h.ioccom
o.usbmodule:	TCPIPLibs:sys.h.ioccom
o.usbmodule:	TCPIPLibs:sys.h.filio
o.usbmodule:	TCPIPLibs:sys.h.ioccom
o.usbmodule:	TCPIPLibs:sys.h.sockio
o.usbmodule:	TCPIPLibs:sys.h.ioccom
o.usbmodule:	TCPIPLibs:sys.h.time
o.usbmodule:	^.dev.usb.h.usb
o.usbmodule:	TCPIPLibs:sys.h.types
o.usbmodule:	TCPIPLibs:sys.h.cdefs
o.usbmodule:	TCPIPLibs:machine.h.endian
o.usbmodule:	TCPIPLibs:machine.h.ansi
o.usbmodule:	TCPIPLibs:machine.h.types
o.usbmodule:	TCPIPLibs:sys.h.time
o.usbmodule:	^.dev.usb.h.usb_port
o.usbmodule:	h.opt_usbverbose
o.usbmodule:	^.sys.h.device
o.usbmodule:	TCPIPLibs:sys.h.queue
o.usbmodule:	TCPIPLibs:h.errno
o.usbmodule:	TCPIPLibs:sys.h.errno
o.usbmodule:	TCPIPLibs:sys.h.ioccom
o.usbmodule:	^.dev.usb.h.usbdi
o.usbmodule:	^.dev.usb.h.usbdi_util
o.usbmodule:	^.dev.usb.h.usbdivar
o.usbmodule:	^.dev.usb.h.usbhid
o.usbmodule:	C:h.swis
o.usbmodule:	C:debuglib.h.debuglib
o.usbmodule:	C:callx.h.callx
o.usbmodule:	C:h.kernel
o.usbmodule:	OS:oslib.h.devicefs
o.usbmodule:	OS:oslib.h.types
o.usbmodule:	OS:oslib.h.os
o.usbmodule:	OS:oslib.h.buffer
o.usbmodule:	tbox:h.toolbox
o.usbmodule:	tbox:h.wimp
o.usbmodule:	h.usbmouse
o.usbmodule:	h.usbkboard
o.usbmodule:	h.service
o.usbmodule:	^.dev.usb.h.usb
o.usbkboard:	c.usbkboard
o.usbkboard:	C:Global.h.RISCOS
o.usbkboard:	C:Global.h.Keyboard
o.usbkboard:	C:Global.h.Pointer
o.usbkboard:	C:callx.h.callx
o.usbkboard:	C:h.kernel
o.usbkboard:	h.usbmodhead
o.usbkboard:	C:h.swis
o.usbkboard:	C:debuglib.h.debuglib
o.usbkboard:	TCPIPLibs:sys.h.callout
o.usbkboard:	TCPIPLibs:sys.h.queue
o.usbkboard:	TCPIPLibs:sys.h.ioctl
o.usbkboard:	TCPIPLibs:sys.h.ttycom
o.usbkboard:	TCPIPLibs:sys.h.ioccom
o.usbkboard:	TCPIPLibs:sys.h.ioccom
o.usbkboard:	TCPIPLibs:sys.h.filio
o.usbkboard:	TCPIPLibs:sys.h.ioccom
o.usbkboard:	TCPIPLibs:sys.h.sockio
o.usbkboard:	TCPIPLibs:sys.h.ioccom
o.usbkboard:	^.dev.usb.h.usb
o.usbkboard:	TCPIPLibs:sys.h.types
o.usbkboard:	TCPIPLibs:sys.h.cdefs
o.usbkboard:	TCPIPLibs:machine.h.endian
o.usbkboard:	TCPIPLibs:machine.h.ansi
o.usbkboard:	TCPIPLibs:machine.h.types
o.usbkboard:	TCPIPLibs:sys.h.time
o.usbkboard:	^.dev.usb.h.usb_port
o.usbkboard:	h.opt_usbverbose
o.usbkboard:	^.sys.h.device
o.usbkboard:	TCPIPLibs:sys.h.queue
o.usbkboard:	TCPIPLibs:h.errno
o.usbkboard:	TCPIPLibs:sys.h.errno
o.usbkboard:	TCPIPLibs:sys.h.ioccom
o.usbkboard:	^.dev.usb.h.usbdi
o.usbkboard:	^.dev.usb.h.usbdi_util
o.usbkboard:	^.dev.usb.h.usbdivar
o.usbkboard:	^.dev.usb.h.usbhid
o.usbkboard:	h.usbkboard
o.usbkboard:	tbox:h.wimplib
o.usbkboard:	tbox:h.wimp
o.ohcimodule:	c.ohcimodule
o.ohcimodule:	h.ohcimodhead
o.ohcimodule:	C:h.kernel
o.ohcimodule:	h.USBDriver
o.ohcimodule:	C:h.swis
o.ohcimodule:	^.machine.h.bus
o.ohcimodule:	TCPIPLibs:sys.h.types
o.ohcimodule:	TCPIPLibs:sys.h.cdefs
o.ohcimodule:	TCPIPLibs:machine.h.endian
o.ohcimodule:	TCPIPLibs:machine.h.ansi
o.ohcimodule:	TCPIPLibs:machine.h.types
o.ohcimodule:	TCPIPLibs:sys.h.queue
o.ohcimodule:	TCPIPLibs:sys.h.types
o.ohcimodule:	TCPIPLibs:sys.h.systm
o.ohcimodule:	TCPIPLibs:machine.h.cpufunc
o.ohcimodule:	TCPIPLibs:machine.h.stdarg
o.ohcimodule:	TCPIPLibs:sys.h.callout
o.ohcimodule:	TCPIPLibs:sys.h.queue
o.ohcimodule:	^.dev.usb.h.usb
o.ohcimodule:	TCPIPLibs:sys.h.types
o.ohcimodule:	TCPIPLibs:sys.h.time
o.ohcimodule:	^.dev.usb.h.usb_port
o.ohcimodule:	h.opt_usbverbose
o.ohcimodule:	^.sys.h.device
o.ohcimodule:	TCPIPLibs:sys.h.queue
o.ohcimodule:	TCPIPLibs:h.errno
o.ohcimodule:	TCPIPLibs:sys.h.errno
o.ohcimodule:	TCPIPLibs:sys.h.ioccom
o.ohcimodule:	^.dev.usb.h.usbdi
o.ohcimodule:	^.dev.usb.h.usbdivar
o.ohcimodule:	^.dev.usb.h.ohcireg
o.ohcimodule:	^.dev.usb.h.ohcivar
o.ohcimodule:	C:Global.h.RISCOS
o.ohcimodule:	C:Global.h.Services
o.ohcimodule:	C:Global.h.HALEntries
o.ohcimodule:	C:Interface.h.PCI
o.ohcimodule:	C:callx.h.callx
o.ohcimodule:	C:h.kernel
o.ohcimodule:	tbox:h.toolbox
o.ohcimodule:	tbox:h.wimp
o.ohcimodule:	C:DebugLib.h.DebugLib
o.ohcimodule:	h.service
o.ohcimodule:	^.dev.usb.h.usb
o.ehcimodule:	c.ehcimodule
o.ehcimodule:	h.ehcimodhead
o.ehcimodule:	C:h.kernel
o.ehcimodule:	h.USBDriver
o.ehcimodule:	C:h.swis
o.ehcimodule:	^.machine.h.bus
o.ehcimodule:	TCPIPLibs:sys.h.types
o.ehcimodule:	TCPIPLibs:sys.h.cdefs
o.ehcimodule:	TCPIPLibs:machine.h.endian
o.ehcimodule:	TCPIPLibs:machine.h.ansi
o.ehcimodule:	TCPIPLibs:machine.h.types
o.ehcimodule:	TCPIPLibs:sys.h.queue
o.ehcimodule:	TCPIPLibs:sys.h.types
o.ehcimodule:	TCPIPLibs:sys.h.systm
o.ehcimodule:	TCPIPLibs:machine.h.cpufunc
o.ehcimodule:	TCPIPLibs:machine.h.stdarg
o.ehcimodule:	TCPIPLibs:sys.h.callout
o.ehcimodule:	TCPIPLibs:sys.h.queue
o.ehcimodule:	^.dev.usb.h.usb
o.ehcimodule:	TCPIPLibs:sys.h.types
o.ehcimodule:	TCPIPLibs:sys.h.time
o.ehcimodule:	^.dev.usb.h.usb_port
o.ehcimodule:	h.opt_usbverbose
o.ehcimodule:	^.sys.h.device
o.ehcimodule:	TCPIPLibs:sys.h.queue
o.ehcimodule:	TCPIPLibs:h.errno
o.ehcimodule:	TCPIPLibs:sys.h.errno
o.ehcimodule:	TCPIPLibs:sys.h.ioccom
o.ehcimodule:	^.dev.usb.h.usbdi
o.ehcimodule:	^.dev.usb.h.usbdivar
o.ehcimodule:	^.dev.usb.h.ehcireg
o.ehcimodule:	^.dev.usb.h.ehcivar
o.ehcimodule:	C:Global.h.RISCOS
o.ehcimodule:	C:Global.h.HALEntries
o.ehcimodule:	C:Interface.h.PCI
o.ehcimodule:	C:callx.h.callx
o.ehcimodule:	C:h.kernel
o.ehcimodule:	C:DebugLib.h.DebugLib
o.ehcimodule:	h.service
o.ehcimodule:	^.dev.usb.h.usb
o.ehcimodule:	OS:oslib.h.devicefs
o.ehcimodule:	OS:oslib.h.types
o.ehcimodule:	OS:oslib.h.os
o.ehcimodule:	OS:oslib.h.buffer
@


1.9
log
@Merge of Dan Ellis's USB2 sources.

Version 0.22. Tagged as 'NetBSD-0_22'
@
text
@d24 2
a25 1
LIBS            = ${DEBUGLIB} ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
d154 551
@


1.8
log
@  Support for SCSISoftUSB, and some tidying up.
Detail:
  * Errors now use the allocated error number base, &819000, instead of a
    base in the private range, &50000000. "USB transfer failed" errors now
    have use a sub-range of error numbers from &819020; the original BSD
    error number can be retrieved from the bottom 5 bits of the RISC OS
    error number.
  * Service_USB 1 now returns the list in the order in which the devices,
    rather than in the reverse order as previous versions of the module did.
  * A little tweaking of h/usb_port to reduce compiler warnings.
  * Some compiler-satisfying changes to allow use of packed structures.
    (However, the compiler doesn't seem to work correctly yet, so this is
    currently switched out using -DDISABLE_PACKED on the command line.)
  * Added full stops to end of star command help strings for consistency
    with rest of OS.
  * New exports: USBDevFS (moved here from ^.h) and a few files in dev/usb/h
    and sys/h.
Admin:
  Error number overhaul and new exports are both required by SCSISoftUSB.

Version 0.16. Tagged as 'NetBSD-0_16'
@
text
@d29 1
a29 1
CDEFINES        += ${CDEBUG} -DKERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED
d56 1
d88 5
d110 1
d133 3
d149 1
a149 1
listing: i.ohci i.ohcimodule i.usb i.usbdi i.usbdi_util i.usb_subr i.ugen i.usbmodule
@


1.7
log
@Removed a debugging delay from dev.c.ohci which was breaking everything.
Null vendor names no longer say oflaofla.

Version 0.14. Tagged as 'NetBSD-0_14'
@
text
@d26 1
d29 1
a29 1
CDEFINES        += ${CDEBUG} -DKERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE
d61 18
@


1.6
log
@Change to makefile so it remembers to compile "makedevs" first
before trying to make the device list (required after a clean).

Version 0.13. Tagged as 'NetBSD-0_13'
@
text
@d57 1
a57 1
        ${RM}   Resources.UK.USBDevs
d89 1
a89 1
        bin.makedevs > Resources.UK.USBDevs
d101 2
a102 2
usbmsgs.o: Resources.UK.USBMessages Resources.UK.USBDevs
        resgen resource_files o.usbmsgs Resources.UK.USBMessages ${MSGLOC} Resources.UK.USBDevs Resources.USBDriver.USBDevs
d104 2
a105 2
ohcimsgs.o: Resources.UK.OHCIMessages
        resgen resource_files o.ohcimsgs Resources.UK.OHCIMessages ${MSGLOC}
@


1.5
log
@Fix for erratic behaviour after having unplugged hubs: TAILQ was
being given an entry which wasn't on its list, and the behaviour was to
break the list and poke a zero into the reset vector!
Also, some extra IFDEF's so that debug builds will work again.
A few typos/spelling errors changed.

Version 0.11. Tagged as 'NetBSD-0_11'
@
text
@d23 1
d68 1
a68 1
resources_USBDriver: LocalRes:USBDriver LocalRes:USBDevs
d71 1
a71 1
        ${CP} LocalRes:USBDevs ${RDIR}.USBDevs ${CPFLAGS}
d88 1
a88 1
Resources.UK.USBDevs: bin.makedevs
d98 1
a98 1
bin.makedevs: o.makedevs ${CLIB}
@


1.4
log
@Fix to extern char * thingy which was causing hardware vector 0 to be
scrambled.
Makefile now zaps the linked directory too.

Version 0.07. Tagged as 'NetBSD-0_07'
@
text
@d22 1
a22 1
MESSAGELOCATION = Resources.${COMPONENT}.Messages
d29 1
a29 1
CMHGDEFINES     = -DMESSAGELOCATION=${MESSAGELOCATION} ${CDEBUG}
d101 1
a101 1
        resgen resource_files o.usbmsgs Resources.UK.USBMessages ${MESSAGELOCATION} Resources.UK.USBDevs Resources.USBDriver.USBDevs
d104 1
a104 1
        resgen resource_files o.ohcimsgs Resources.UK.OHCIMessages ${MESSAGELOCATION}
@


1.3
log
@Another fix to the previous buffer overrun fix,such that this time the
command aliases actually get executed now.
Timing code changed to work round HAL call not returning the right value
so temporarily wired to 2000000.
Change to Makefile so ROM builds don't have annoying throwback windows
popping up,this is now in the !Mk file.Also "-ff" function names away.

Version 0.05. Tagged as 'NetBSD-0_05'
@
text
@d45 9
a53 8
        ${WIPE} o    ${WFLAGS}
        ${WIPE} aif  ${WFLAGS}
        ${WIPE} aof  ${WFLAGS}
        ${WIPE} rm   ${WFLAGS}
        ${WIPE} i    ${WFLAGS}
        ${WIPE} maps ${WFLAGS}
        ${WIPE} gpa  ${WFLAGS}
        ${WIPE} bin  ${WFLAGS}
@


1.2
log
@Fix to interrupt hole in mouse driver.
Version number now got from Version file,not hand tweaked CMHG file.
Timer was a factor 10 out in previous version due to typo.

Version 0.02. Tagged as 'NetBSD-0_02'
@
text
@d21 1
a21 1
DIRS		= o._dirs
d23 2
a24 2
LIBS		= ${DEBUGLIB} ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
RDIR      	= ${RESDIR}.${COMPONENT}
d26 3
a28 3
CINCLUDES	= -Itbox:,TCPIPLibs:,^.,OS:
CDEFINES	+= ${CDEBUG} -DKERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE
CMHGINCLUDES	= ${CINCLUDES}
d30 2
a31 2
CFLAGS		+= -throwback -wp -wc -zm -zps1
LDFLAGS		= -LIST maps.${TARGET} -MAP -Xref
d45 11
a55 11
	${WIPE}	o    ${WFLAGS}
	${WIPE} aif  ${WFLAGS}
	${WIPE} aof  ${WFLAGS}
	${WIPE} rm   ${WFLAGS}
	${WIPE} i    ${WFLAGS}
	${WIPE} maps ${WFLAGS}
	${WIPE} gpa  ${WFLAGS}
	${WIPE} bin  ${WFLAGS}
	${RM}	h.ohcimodhead
	${RM}   h.usbmodhead
	${RM}   Resources.UK.USBDevs
d73 9
a81 9
	${MKDIR} o
	${MKDIR} aif
	${MKDIR} aof
	${MKDIR} rm
	${MKDIR} i
	${MKDIR} maps
	${MKDIR} gpa
	${MKDIR} bin
	${TOUCH} o._dirs
d83 2
a84 2
ohcimodule.o:	ohcimodhead.h USBDriver.h
usbmodule.o usbkboard.o:	usbmodhead.h
d87 1
a87 1
	bin.makedevs > Resources.UK.USBDevs
d92 3
a94 3
	${SED} -n "/define USBDriver_/p" h.usbmodhead > h.USBDriver
	${RM}   h.usbmodhead
	${RM}   o.usbmodhead
d97 1
a97 1
	${LD} -o $@@ o.makedevs ${CLIB}
d116 1
a116 1
.c.i:;	${CC} -E ${CFLAGS} $< > $@@
@


1.1
log
@Import of USB driver suitable for generic PCI based OHCI controllers.
Correction of spelling of busses to buses (noun plural).
OHCIdriver only responds to PCI service call to lookup vendor name when
the device is of class OHCI controller.

Version 0.01. Tagged as 'NetBSD-0_01'
@
text
@d97 1
a97 1
	${LD} ${LDFLAGS} -o $@@ o.makedevs ${CLIB}
@

