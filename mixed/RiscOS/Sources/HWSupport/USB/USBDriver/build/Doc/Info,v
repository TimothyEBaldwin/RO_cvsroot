head	1.1;
access;
symbols
	USBDriver-1_29:1.1
	USBDriver-1_28:1.1
	USBDriver-1_27:1.1
	USBDriver-1_26:1.1
	USBDriver-1_25:1.1
	USBDriver-1_24:1.1
	USBDriver-1_23:1.1
	USBDriver-1_22:1.1
	USBDriver-1_21:1.1
	USBDriver-1_20:1.1
	USBDriver-1_19:1.1
	NetBSD-1_19:1.1
	NetBSD-1_18:1.1
	NetBSD-1_17:1.1
	NetBSD-1_16:1.1
	NetBSD-1_15:1.1
	NetBSD-1_14:1.1
	NetBSD-1_13:1.1
	NetBSD-1_12:1.1
	NetBSD-1_09-1:1.1
	NetBSD-1_11:1.1
	NetBSD-1_10:1.1
	NetBSD-1_09:1.1
	NetBSD-1_08:1.1
	NetBSD-1_07:1.1
	NetBSD-1_06:1.1
	NetBSD-1_05:1.1
	NetBSD-1_04:1.1
	NetBSD-1_03:1.1
	NetBSD-1_02:1.1
	NetBSD-1_01:1.1
	NetBSD-1_00:1.1
	NetBSD-0_99:1.1
	NetBSD-0_98:1.1
	NetBSD-0_97:1.1
	NetBSD-0_96:1.1
	NetBSD-0_95:1.1
	NetBSD-0_94:1.1
	NetBSD-0_93:1.1
	NetBSD-0_92:1.1
	NetBSD-0_91:1.1
	NetBSD-0_90:1.1
	NetBSD-0_89:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.10.25.18.43.34;	author rsprowson;	state Exp;
branches;
next	;
commitid	SYXBVhhWAW5D5CVx;


desc
@@


1.1
log
@Update to use rationalised power and overcurrent API
OHCIDriver (only) had sketchy support for a HAL based scheme for controlling the port power and monitor overcurrent. However the implementation was limited to supporting the single port required for an embedded product (aka Rhenium in the CVS history). The change makes it follow a model much more akin to the HAL_TimerDevice/HAL_TimerIRQStatus/HAL_TimerIRQClear set of functions.
Version:
  Bumped OHCIDriver and USBDriver version numbers.
ohcimodule.c:
  Use some defines from OsBytes.h.
  Group the debug variables within the OHCI_DEBUG define so they go away in the release case.
  Allow for up to 15 ports to be controlled via the revised HAL API, and pass something other than a hardwired controller of 0 when controlling/monitoring power.
  Enumerate the device numbers for overcurrent monitoring on startup.
  Deal with the possibility of one (or more) of the device numbers being shared interrupts.
  Squash a few trivial compiler warnings.
ohcimodhead.cmhg:
  rename the handler/entry to reflect their use for overcurrent
ohci.c:
  Allow for up to 15 ports to be controlled by passing in the port index where needed.
usb_subr.c/usbdivar.h:
  Remove a RISC OS-ism in datatoggle, to converge with NetBSD a bit.
ehcivar.h/usb_port.h:
  Relocate the overrides for mutex_ functions here since this is the only controller using them. Previously when in "usb_port.h" they would indirectly get dragged in ia the nested include in "usb.h". The could in fact now be implemented using SyncLib, an exercise left to the reader.
usb.h
  Merge some of the device classes and other allocations from NetBSD.

While it's not been possible to test the revised API, due to not having sight of the original platform on which it was implemented, none of the actively maintained HALs currently use the HAL based power and overcurrent scheme anyway, so the new code never gets called. In that respect, it's no more broken then the previous single port-single controller version.

Version 0.89. Tagged as 'NetBSD-0_89'
@
text
@Various user setable VarVals with which to tune proceedings:

USB$PowerDownTime      default 200(ms)   Min power down time for a device to
                                         correctly reset device

USB$PortPowerUpDelay   default 300(ms)   Min time to wait whilst device powers
                                         up

USB$PortResetDelay     default 100(ms)   Min delay whilst a device is being
                                         reset

USB$PortStartupDelay   default 100(ms)   Delay after port fully powered up, and
                                         after issuing port reset command@
