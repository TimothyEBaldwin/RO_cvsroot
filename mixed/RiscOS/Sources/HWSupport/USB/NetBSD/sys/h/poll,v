head	1.1;
access;
symbols
	NetBSD-1_19:1.1
	NetBSD-1_18:1.1
	NetBSD-1_17:1.1
	NetBSD-1_16:1.1
	NetBSD-1_15:1.1
	NetBSD-1_14:1.1
	NetBSD-1_13:1.1
	NetBSD-1_12:1.1
	NetBSD-1_09-1:1.1
	NetBSD-1_11:1.1
	NetBSD-1_10:1.1
	NetBSD-1_09:1.1
	NetBSD-1_08:1.1
	NetBSD-1_07:1.1
	NetBSD-1_06:1.1
	NetBSD-1_05:1.1
	NetBSD-1_04:1.1
	NetBSD-1_03:1.1
	NetBSD-1_02:1.1
	NetBSD-1_01:1.1
	NetBSD-1_00:1.1
	NetBSD-0_99:1.1
	NetBSD-0_98:1.1
	NetBSD-0_97:1.1
	NetBSD-0_96:1.1
	NetBSD-0_95:1.1
	NetBSD-0_94:1.1
	NetBSD-0_93:1.1
	NetBSD-0_92:1.1
	NetBSD-0_91:1.1
	NetBSD-0_90:1.1
	NetBSD-0_89:1.1
	NetBSD-0_88:1.1
	NetBSD-0_87:1.1
	NetBSD-0_86:1.1
	NetBSD-0_85:1.1
	NetBSD-0_84:1.1
	NetBSD-0_83:1.1
	NetBSD-0_82:1.1
	NetBSD-0_81:1.1
	NetBSD-0_80:1.1
	NetBSD-0_79:1.1
	NetBSD-0_78:1.1
	NetBSD-0_77:1.1
	NetBSD-0_76:1.1
	NetBSD-0_75:1.1
	NetBSD-0_74:1.1
	NetBSD-0_73:1.1
	NetBSD-0_72:1.1
	NetBSD-0_71:1.1
	NetBSD-0_70:1.1
	NetBSD-0_69:1.1
	NetBSD-0_68:1.1
	NetBSD-0_67:1.1
	NetBSD-0_66:1.1
	NetBSD-0_65:1.1
	NetBSD-0_64:1.1
	NetBSD-0_63:1.1
	NetBSD-0_62:1.1
	NetBSD-0_61:1.1
	NetBSD-0_60:1.1
	NetBSD-0_59:1.1
	NetBSD-0_58:1.1
	NetBSD-0_57:1.1
	NetBSD-0_56:1.1
	NetBSD-0_55:1.1
	NetBSD-0_54:1.1
	NetBSD-0_53:1.1
	NetBSD-0_52:1.1
	NetBSD-0_51:1.1
	NetBSD-0_50:1.1
	NetBSD-0_49:1.1
	NetBSD-0_48:1.1
	NetBSD-0_47:1.1
	NetBSD-0_46:1.1
	NetBSD-0_45:1.1
	NetBSD-0_44:1.1
	NetBSD-0_43:1.1
	NetBSD-0_42:1.1
	NetBSD-0_41:1.1
	NetBSD-0_40:1.1
	NetBSD-0_39:1.1
	NetBSD-0_38:1.1
	NetBSD-0_37:1.1
	NetBSD-0_36:1.1
	NetBSD-0_35:1.1
	NetBSD-0_34:1.1
	NetBSD-0_33:1.1
	NetBSD-0_32:1.1
	NetBSD-0_31:1.1
	NetBSD-0_30:1.1
	NetBSD-0_29:1.1
	RO_5_07:1.1
	NetBSD-0_28:1.1
	NetBSD-0_27:1.1
	NetBSD-0_26:1.1
	NetBSD-0_25:1.1
	NetBSD-0_24:1.1
	NetBSD-0_23:1.1
	NetBSD-0_21-1_22_2_1:1.1
	NetBSD-0_22:1.1
	USB1:1.1.0.2
	NetBSD-0_21:1.1
	NetBSD-0_20:1.1
	NetBSD-0_19:1.1
	NetBSD-0_18:1.1
	NetBSD-0_17:1.1
	NetBSD-0_16:1.1
	NetBSD-0_15:1.1
	NetBSD-0_14:1.1
	NetBSD-0_13:1.1
	NetBSD-0_12:1.1
	NetBSD-0_11:1.1
	NetBSD-0_10:1.1
	NetBSD-0_09:1.1
	NetBSD-0_08:1.1
	NetBSD-0_07:1.1
	NetBSD-0_06:1.1
	NetBSD-0_05:1.1
	NetBSD-0_04:1.1
	NetBSD-0_03:1.1
	NetBSD-0_02:1.1
	NetBSD-0_01:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.01.28.09.55.20;	author dellis;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Import of USB driver suitable for generic PCI based OHCI controllers.
Correction of spelling of busses to buses (noun plural).
OHCIdriver only responds to PCI service call to lookup vendor name when
the device is of class OHCI controller.

Version 0.01. Tagged as 'NetBSD-0_01'
@
text
@/*-
 * Copyright (c) 1997 Peter Wemm <peter@@freebsd.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: src/sys/sys/poll.h,v 1.6.2.1 2000/08/21 12:25:58 sheldonh Exp $
 */

#ifndef _SYS_POLL_H_
#define	_SYS_POLL_H_

/*
 * This file is intended to be compatable with the traditional poll.h.
 */

/*
 * This structure is passed as an array to poll(2).
 */
struct pollfd {
	int	fd;		/* which file descriptor to poll */
	short	events;		/* events we are interested in */
	short	revents;	/* events found on return */
};

/*
 * Requestable events.  If poll(2) finds any of these set, they are
 * copied to revents on return.
 * XXX Note that FreeBSD doesn't make much distinction between POLLPRI
 * and POLLRDBAND since none of the file types have distinct priority
 * bands - and only some have an urgent "mode".
 * XXX Note POLLIN isn't really supported in true SVSV terms.  Under SYSV
 * POLLIN includes all of normal, band and urgent data.  Most poll handlers
 * on FreeBSD only treat it as "normal" data.
 */
#define	POLLIN		0x0001		/* any readable data available */
#define	POLLPRI		0x0002		/* OOB/Urgent readable data */
#define	POLLOUT		0x0004		/* file descriptor is writeable */
#define	POLLRDNORM	0x0040		/* non-OOB/URG data available */
#define	POLLWRNORM	POLLOUT		/* no write type differentiation */
#define	POLLRDBAND	0x0080		/* OOB/Urgent readable data */
#define	POLLWRBAND	0x0100		/* OOB/Urgent data can be written */

/*
 * FreeBSD extensions: polling on a regular file might return one
 * of these events (currently only supported on UFS).
 */
#define	POLLEXTEND	0x0200		/* file may have been extended */
#define	POLLATTRIB	0x0400		/* file attributes may have changed */
#define	POLLNLINK	0x0800		/* (un)link/rename may have happened */
#define	POLLWRITE	0x1000		/* file's contents may have changed */

/*
 * These events are set if they occur regardless of whether they were
 * requested.
 */
#define	POLLERR		0x0008		/* some poll error occurred */
#define	POLLHUP		0x0010		/* file descriptor was "hung up" */
#define	POLLNVAL	0x0020		/* requested events "invalid" */

#define	POLLSTANDARD	(POLLIN|POLLPRI|POLLOUT|POLLRDNORM|POLLRDBAND|\
			 POLLWRBAND|POLLERR|POLLHUP|POLLNVAL)

/*
 * Request that poll() wait forever.
 * XXX in SYSV, this is defined in stropts.h, which is not included
 * by poll.h.
 */
#define	INFTIM		(-1)

#ifndef _KERNEL

#include <sys/cdefs.h>

__BEGIN_DECLS
/*
 * XXX logically, poll() should be declared in <poll.h>, but SVR4 at
 * least has it here in <sys/poll.h>.
 * XXX poll() has "unsigned long" nfds on SVR4, not unsigned as on the
 * other BSDs.
 */
int	poll __P((struct pollfd *_pfd, unsigned int _nfds, int _timeout));
__END_DECLS

#endif /* !_KERNEL */

#endif /* !_SYS_POLL_H_ */
@
