head	1.3;
access;
symbols
	NetBSD-0_88:1.2
	NetBSD-0_87:1.2
	NetBSD-0_86:1.2
	NetBSD-0_85:1.2
	NetBSD-0_84:1.2
	NetBSD-0_83:1.2
	NetBSD-0_82:1.2
	NetBSD-0_81:1.2
	NetBSD-0_80:1.2
	NetBSD-0_79:1.2
	NetBSD-0_78:1.2
	NetBSD-0_77:1.2
	NetBSD-0_76:1.2
	NetBSD-0_75:1.2
	NetBSD-0_74:1.2
	NetBSD-0_73:1.2
	NetBSD-0_72:1.2
	NetBSD-0_71:1.2
	NetBSD-0_70:1.2
	NetBSD-0_69:1.2
	NetBSD-0_68:1.2
	NetBSD-0_67:1.2
	NetBSD-0_66:1.2
	NetBSD-0_65:1.2
	NetBSD-0_64:1.2
	NetBSD-0_63:1.2
	NetBSD-0_62:1.2
	NetBSD-0_61:1.2
	NetBSD-0_60:1.2
	NetBSD-0_59:1.2
	NetBSD-0_58:1.2
	NetBSD-0_57:1.2
	NetBSD-0_56:1.2
	NetBSD-0_55:1.2
	NetBSD-0_54:1.2
	NetBSD-0_53:1.2
	NetBSD-0_52:1.2
	NetBSD-0_51:1.2
	NetBSD-0_50:1.2
	NetBSD-0_49:1.2
	NetBSD-0_48:1.2
	NetBSD-0_47:1.2
	NetBSD-0_46:1.2
	NetBSD-0_45:1.2
	NetBSD-0_44:1.2
	NetBSD-0_43:1.2
	NetBSD-0_42:1.2
	NetBSD-0_41:1.2
	NetBSD-0_40:1.2
	NetBSD-0_39:1.2
	NetBSD-0_38:1.2
	NetBSD-0_37:1.2
	NetBSD-0_36:1.2
	NetBSD-0_35:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.10.25.18.43.31;	author rsprowson;	state dead;
branches;
next	1.2;
commitid	SYXBVhhWAW5D5CVx;

1.2
date	2005.02.23.00.01.58;	author jballance;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.18.00.35.56;	author jballance;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to use rationalised power and overcurrent API
OHCIDriver (only) had sketchy support for a HAL based scheme for controlling the port power and monitor overcurrent. However the implementation was limited to supporting the single port required for an embedded product (aka Rhenium in the CVS history). The change makes it follow a model much more akin to the HAL_TimerDevice/HAL_TimerIRQStatus/HAL_TimerIRQClear set of functions.
Version:
  Bumped OHCIDriver and USBDriver version numbers.
ohcimodule.c:
  Use some defines from OsBytes.h.
  Group the debug variables within the OHCI_DEBUG define so they go away in the release case.
  Allow for up to 15 ports to be controlled via the revised HAL API, and pass something other than a hardwired controller of 0 when controlling/monitoring power.
  Enumerate the device numbers for overcurrent monitoring on startup.
  Deal with the possibility of one (or more) of the device numbers being shared interrupts.
  Squash a few trivial compiler warnings.
ohcimodhead.cmhg:
  rename the handler/entry to reflect their use for overcurrent
ohci.c:
  Allow for up to 15 ports to be controlled by passing in the port index where needed.
usb_subr.c/usbdivar.h:
  Remove a RISC OS-ism in datatoggle, to converge with NetBSD a bit.
ehcivar.h/usb_port.h:
  Relocate the overrides for mutex_ functions here since this is the only controller using them. Previously when in "usb_port.h" they would indirectly get dragged in ia the nested include in "usb.h". The could in fact now be implemented using SyncLib, an exercise left to the reader.
usb.h
  Merge some of the device classes and other allocations from NetBSD.

While it's not been possible to test the revised API, due to not having sight of the original platform on which it was implemented, none of the actively maintained HALs currently use the HAL based power and overcurrent scheme anyway, so the new code never gets called. In that respect, it's no more broken then the previous single port-single controller version.

Version 0.89. Tagged as 'NetBSD-0_89'
@
text
@Various user setable VarVals with which to tune proceedings:

USB$PowerDownTime      default 200(ms)   Min power down time for a device to
                                         correctly reset device

USB$PortPowerUpDelay   default 300(ms)   Min time to wait whilst device powers
                                         up

USB$PortResetDelay     default 100(ms)   Min delay whilst a device is being
                                         reset

USB$PortStartupDelay   default 100(ms)   Delay after port fully powered up, and
                                         after issuing port reset command@


1.2
log
@        An increased delay caused havoc with chicony keyboards in the field
Detail:
        USB_PORT_RESET_DELAY had been increased from 100 to 200ms in previous
        version. This was OK for most devices, and beneficial for some, BUT
        killed the Chicony keyboards shipped with many iyonix.. Delay has
        been reverted to 100ms, and is now run time alterable via the
        USB$PortResetDelay sysvar. This problem did not show up in beta testing!

Admin:  tested by JB with chicony.. delays up to around 160ms work with
        the chicony.
        Castle added IP

Version 0.36. Tagged as 'NetBSD-0_36'
@
text
@@


1.1
log
@         changes and bug fixes that came to light following USB2 launch.
Detail:
         - VarVal launching.. string length was incorrectly calculated.
         - USB VarVals now correctly cleared if device failed during
           enumeration, after first SetVarVal call.
         - Triggercbs() modified to check interrupt context and be
           refuse (quietly) to trigger callbacks if interrupts threaded
           (result of possible issue .. but perhaps wise)
         - Added third QueryDelay variable, and an Info file to describe
           what does what.
Admin:
         checked at Castle.. due for extended check via beta test site
         before formal release.

         Castle + D Ellis added IP


Version 0.35. Tagged as 'NetBSD-0_35'
@
text
@d9 3
@

