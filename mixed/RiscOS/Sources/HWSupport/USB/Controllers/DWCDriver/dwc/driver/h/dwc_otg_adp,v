head	1.2;
access;
symbols
	DWCDriver-0_35:1.2
	DWCDriver-0_34:1.2
	DWCDriver-0_33:1.2
	DWCDriver-0_32:1.2
	DWCDriver-0_31:1.2
	DWCDriver-0_30:1.2
	DWCDriver-0_29:1.2
	DWCDriver-0_28:1.2
	DWCDriver-0_27:1.2
	DWCDriver-0_26:1.2
	DWCDriver-0_24-1:1.2
	DWCDriver-0_25:1.2
	DWCDriver-0_24:1.2
	DWCDriver-0_23:1.2
	DWCDriver-0_22:1.2
	DWCDriver-0_21:1.2
	DWCDriver-0_20:1.1
	DWCDriver-0_19:1.1
	DWCDriver-0_18:1.1
	DWCDriver-0_17:1.1
	DWCDriver-0_16:1.1
	DWCDriver-0_15:1.1
	DWCDriver-0_14:1.1
	DWCDriver-0_13:1.1
	DWCDriver-0_12:1.1
	DWCDriver-0_11:1.1
	DWCDriver-0_10:1.1
	DWCDriver-0_09:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.10.07.21.00.03;	author jlee;	state Exp;
branches;
next	1.1;
commitid	qck3WWYzKpNMGdEy;

1.1
date	2012.09.17.16.34.41;	author jlee;	state Exp;
branches;
next	;
commitid	DXVFy2WJjyak3Ukw;


desc
@@


1.2
log
@Update to 'FIQ FSM' USB driver
Detail:
  Makefile, dwc/* - Updated to latest-ish code from Raspberry Pi github (rev c8baa9702c). Includes the 'FIQ FSM' USB driver, which replaces the older 'FIQ fix'. Note that many files appear to have no functional changes - just trailing whitespace removal to keep things in sync with github.
  Makefile - add DEBUGLIBS back into the debug libs listing to fix debug builds
  c/cmodule - Update to work with new FIQ FSM flags
  c/dwc_otg_riscos - Update to work with new FIQ FSM flags. Update initialisation procedure. Change IRQ handling to try both the HCD & CIL interrupt handlers (HCD can claim interrupt is handled when there's still a CIL interrupt pending). Disable support for falling back to IRQ if the FIQ vector is claimed by someone else - will need new implementation to cope with starting & stopping the FIQ FSM.
  s/regaccess - Update FIQ veneer & install routine to allow operation with either the dwc_otg_fiq_fsm or dwc_otg_fiq_nop functions.
Admin:
  Tested on Raspberry Pi 1 & 2


Version 0.21. Tagged as 'DWCDriver-0_21'
@
text
@/* ==========================================================================
 * $File: //dwh/usb_iip/dev/software/otg/linux/drivers/dwc_otg_adp.h $
 * $Revision: #7 $
 * $Date: 2011/10/24 $
 * $Change: 1871159 $
 *
 * Synopsys HS OTG Linux Software Driver and documentation (hereinafter,
 * "Software") is an Unsupported proprietary work of Synopsys, Inc. unless
 * otherwise expressly agreed to in writing between Synopsys and you.
 *
 * The Software IS NOT an item of Licensed Software or Licensed Product under
 * any End User Software License Agreement or Agreement for Licensed Product
 * with Synopsys or any supplement thereto. You are permitted to use and
 * redistribute this Software in source and binary forms, with or without
 * modification, provided that redistributions of source code must retain this
 * notice. You may not view, use, disclose, copy or distribute this file or
 * any information contained herein except pursuant to this license grant from
 * Synopsys. If you do not agree with this notice, including the disclaimer
 * below, then you are not authorized to use the Software.
 *
 * THIS SOFTWARE IS BEING DISTRIBUTED BY SYNOPSYS SOLELY ON AN "AS IS" BASIS
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE HEREBY DISCLAIMED. IN NO EVENT SHALL SYNOPSYS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 * ========================================================================== */

#ifndef __DWC_OTG_ADP_H__
#define __DWC_OTG_ADP_H__

/**
 * @@file
 *
 * This file contains the Attach Detect Protocol interfaces and defines
 * (functions) and structures for Linux.
 *
 */

#define DWC_OTG_ADP_UNATTACHED	0
#define DWC_OTG_ADP_ATTACHED	1
#define DWC_OTG_ADP_UNKOWN	2

typedef struct dwc_otg_adp {
	uint32_t adp_started;
	uint32_t initial_probe;
	int32_t probe_timer_values[2];
	uint32_t probe_enabled;
	uint32_t sense_enabled;
	dwc_timer_t *sense_timer;
	uint32_t sense_timer_started;
	dwc_timer_t *vbuson_timer;
	uint32_t vbuson_timer_started;
	uint32_t attached;
	uint32_t probe_counter;
	uint32_t gpwrdn;
} dwc_otg_adp_t;

/**
 * Attach Detect Protocol functions
 */

extern void dwc_otg_adp_write_reg(dwc_otg_core_if_t * core_if, uint32_t value);
extern uint32_t dwc_otg_adp_read_reg(dwc_otg_core_if_t * core_if);
extern uint32_t dwc_otg_adp_probe_start(dwc_otg_core_if_t * core_if);
extern uint32_t dwc_otg_adp_sense_start(dwc_otg_core_if_t * core_if);
extern uint32_t dwc_otg_adp_probe_stop(dwc_otg_core_if_t * core_if);
extern uint32_t dwc_otg_adp_sense_stop(dwc_otg_core_if_t * core_if);
extern void dwc_otg_adp_start(dwc_otg_core_if_t * core_if, uint8_t is_host);
extern void dwc_otg_adp_init(dwc_otg_core_if_t * core_if);
extern void dwc_otg_adp_remove(dwc_otg_core_if_t * core_if);
extern int32_t dwc_otg_adp_handle_intr(dwc_otg_core_if_t * core_if);
extern int32_t dwc_otg_adp_handle_srp_intr(dwc_otg_core_if_t * core_if);

#endif //__DWC_OTG_ADP_H__
@


1.1
log
@Update to version 3.00 of DWC_otg
Detail:
  This big batch of changes brings us in line with rev 70428950df of the Raspberry Pi Linux github.
  Briefly:
  * Deleted HTML docs as they're a waste of space
  * Dropped the SOF fix (which we never used anyway)
  * Dropped our implementation of the microframe scheduling patch, in favour of their implementation
  * Updated to version 3.00 of the DWC sources. Hard to tell what useful changes this brings, due to API tweaks resulting in pretty much every file being littered with changes.
Admin:
  Tested on Raspberry Pi with high processor vectors
  This new version seems like it might be a bit more sensitive to insufficient power supplies. Beware!


Version 0.09. Tagged as 'DWCDriver-0_09'
@
text
@d50 1
a50 1
	uint32_t adp_started;	
@

