head	1.2;
access;
symbols
	DWCDriver-0_08:1.1
	DWCDriver-0_07:1.1
	DWCDriver-0_06:1.1
	DWCDriver-0_05:1.1
	DWCDriver-0_04:1.1
	DWCDriver-0_03:1.1
	DWCDriver-0_02:1.1
	DWCDriver-0_01:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.09.17.16.34.28;	author jlee;	state dead;
branches;
next	1.1;
commitid	DXVFy2WJjyak3Ukw;

1.1
date	2012.06.03.15.14.00;	author jlee;	state Exp;
branches;
next	;
commitid	ZZ9X1FvMWAU11h7w;


desc
@@


1.2
log
@Update to version 3.00 of DWC_otg
Detail:
  This big batch of changes brings us in line with rev 70428950df of the Raspberry Pi Linux github.
  Briefly:
  * Deleted HTML docs as they're a waste of space
  * Dropped the SOF fix (which we never used anyway)
  * Dropped our implementation of the microframe scheduling patch, in favour of their implementation
  * Updated to version 3.00 of the DWC sources. Hard to tell what useful changes this brings, due to API tweaks resulting in pretty much every file being littered with changes.
Admin:
  Tested on Raspberry Pi with high processor vectors
  This new version seems like it might be a bit more sensitive to insufficient power supplies. Beware!


Version 0.09. Tagged as 'DWCDriver-0_09'
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>DesignWare USB 2.0 OTG Controller (DWC_otg) Device Driver: glpmctl_data Union Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="files.html"><span>Files</span></a></li>
    <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="functions.html"><span>Data&nbsp;Fields</span></a></li>
  </ul></div>
<h1>glpmctl_data Union Reference</h1><!-- doxytag: class="glpmctl_data" -->This union represents the bit fields of the Core LPM Configuration Register (GLPMCFG).  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="dwc__otg__regs_8h-source.html">dwc_otg_regs.h</a>&gt;</code>
<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Data Fields</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cd41461734ff898209bfb64057ef2eb8"></a><!-- doxytag: member="glpmctl_data::d32" ref="cd41461734ff898209bfb64057ef2eb8" args="" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionglpmctl__data.html#cd41461734ff898209bfb64057ef2eb8">d32</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">raw register data <br></td></tr>
<tr><td class="memItemLeft" nowrap><a class="anchor" name="bd3cc34c338226ff1cd89448f7590ff1"></a><!-- doxytag: member="glpmctl_data::b" ref="bd3cc34c338226ff1cd89448f7590ff1" args="" -->
struct {</td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#cf0a4cfcd158e41eb3811048e723890f">lpm_cap_en</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">LPM-Capable (LPMCap) (Device and Host) The application uses this bit to control the DWC_otg core LPM capabilities. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#1898203022af680f08036de89e86e4b0">appl_resp</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">LPM response programmed by application (AppL1Res) (Device) Handshake response to LPM token pre-programmed by device application software. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#176b788935d1952606f523f2718b3512">hird</a>:4</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Host Initiated Resume Duration (HIRD) (Device and Host) In Host mode this field indicates the value of HIRD to be sent in an LPM transaction.  <a href="#84f99e6824e244a528210f671a0889e8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#60a9c2e233e3ee15a80ae80b27d09f8b">rem_wkup_en</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">RemoteWakeEnable (bRemoteWake) (Device and Host) In Host mode this bit indicates the value of remote wake up to be sent in wIndex field of LPM transaction.  <a href="#e47b43fe162aa51e6dc6940f9689308c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#63e912a05b8d29872b92263ca616fec8">en_utmi_sleep</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enable utmi_sleep_n (EnblSlpM) (Device and Host) The application uses this bit to control the utmi_sleep_n assertion to the PHY when in L1 state. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#e2ceea4bfe468c7b3c800235d7ffd5d2">hird_thres</a>:5</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">HIRD Threshold (HIRD_Thres) (Device and Host). <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#752c00118919fce173804931b058c5a8">lpm_resp</a>:2</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">LPM Response (CoreL1Res) (Device and Host) In Host mode this bit contains handsake response to LPM transaction.  <a href="#0ca5be418312e033a5efe1e463ce895c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#241ff25a215f16ac29b3bb6d9f4943ed">prt_sleep_sts</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Port Sleep Status (SlpSts) (Device and Host) This bit is set as long as a Sleep condition is present on the USB bus. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#3b87473445c87d173f350828a60cacd8">sleep_state_resumeok</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sleep State Resume OK (L1ResumeOK) (Device and Host) Indicates that the application or host can start resume from Sleep state. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#7e6bb2a40d4e0bdfed6f868b1f670235">lpm_chan_index</a>:4</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">LPM channel Index (LPM_Chnl_Indx) (Host) The channel number on which the LPM transaction has to be applied while sending an LPM transaction to the local device. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#be75ed525bcfe231cd9bda6a1b8594f6">retry_count</a>:3</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">LPM Retry Count (LPM_Retry_Cnt) (Host) Number host retries that would be performed if the device response was not valid response. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#0651e486c5502489b2cac633bb00c78e">send_lpm</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Send LPM Transaction (SndLPM) (Host) When set by application software, an LPM transaction containing two tokens is sent. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#67ddd4b3576e04a06d5fff707c8bbf18">retry_count_sts</a>:3</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">LPM Retry status (LPM_RetryCnt_Sts) (Host) Number of LPM Host Retries still remaining to be transmitted for the current LPM sequence. <br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#b0b1d669c4161e9ffb1454d85bd243d2">reserved28_29</a>:2</td></tr>

<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#76c64ead46647c39aa76edebf2f63444">hsic_connect</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">In host mode once this bit is set, the host configures to drive the HSIC Idle state on the bus.  <a href="#15102bf1c6f3725c7bd6ec19d5fb6593"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap>&nbsp;&nbsp;&nbsp;unsigned&nbsp;&nbsp;&nbsp;<a class="el" href="unionglpmctl__data.html#f664636955d9476647937d13d48f068e">inv_sel_hsic</a>:1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This bit overrides and functionally inverts the if_select_hsic input port signal. <br></td></tr>
<tr><td class="memItemLeft" nowrap valign="top">}&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionglpmctl__data.html#bd3cc34c338226ff1cd89448f7590ff1">b</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">register bits <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This union represents the bit fields of the Core LPM Configuration Register (GLPMCFG). 
<p>
Set the bits using bit fields then write the <em>d32</em> value to the register. 
<p>

<p>
Definition at line <a class="el" href="dwc__otg__regs_8h-source.html#l00283">283</a> of file <a class="el" href="dwc__otg__regs_8h-source.html">dwc_otg_regs.h</a>.<hr><h2>Field Documentation</h2>
<a class="anchor" name="176b788935d1952606f523f2718b3512"></a><!-- doxytag: member="glpmctl_data::hird" ref="176b788935d1952606f523f2718b3512" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="unionglpmctl__data.html#176b788935d1952606f523f2718b3512">glpmctl_data::hird</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Host Initiated Resume Duration (HIRD) (Device and Host) In Host mode this field indicates the value of HIRD to be sent in an LPM transaction. 
<p>
In Device mode this field is updated with the Received LPM Token HIRD bmAttribute when an ACK/NYET/STALL response is sent to an LPM transaction. 
<p>
Definition at line <a class="el" href="dwc__otg__regs_8h-source.html#l00306">306</a> of file <a class="el" href="dwc__otg__regs_8h-source.html">dwc_otg_regs.h</a>.
</div>
</div><p>
<a class="anchor" name="60a9c2e233e3ee15a80ae80b27d09f8b"></a><!-- doxytag: member="glpmctl_data::rem_wkup_en" ref="60a9c2e233e3ee15a80ae80b27d09f8b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="unionglpmctl__data.html#60a9c2e233e3ee15a80ae80b27d09f8b">glpmctl_data::rem_wkup_en</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
RemoteWakeEnable (bRemoteWake) (Device and Host) In Host mode this bit indicates the value of remote wake up to be sent in wIndex field of LPM transaction. 
<p>
In Device mode this field is updated with the Received LPM Token bRemoteWake bmAttribute when an ACK/NYET/STALL response is sent to an LPM transaction. 
<p>
Definition at line <a class="el" href="dwc__otg__regs_8h-source.html#l00315">315</a> of file <a class="el" href="dwc__otg__regs_8h-source.html">dwc_otg_regs.h</a>.
</div>
</div><p>
<a class="anchor" name="752c00118919fce173804931b058c5a8"></a><!-- doxytag: member="glpmctl_data::lpm_resp" ref="752c00118919fce173804931b058c5a8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="unionglpmctl__data.html#752c00118919fce173804931b058c5a8">glpmctl_data::lpm_resp</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
LPM Response (CoreL1Res) (Device and Host) In Host mode this bit contains handsake response to LPM transaction. 
<p>
In Device mode the response of the core to LPM transaction received is reflected in these two bits.<ul>
<li>0x0 : ERROR (No handshake response)</li><li>0x1 : STALL</li><li>0x2 : NYET</li><li>0x3 : ACK </li></ul>

<p>
Definition at line <a class="el" href="dwc__otg__regs_8h-source.html#l00334">334</a> of file <a class="el" href="dwc__otg__regs_8h-source.html">dwc_otg_regs.h</a>.
</div>
</div><p>
<a class="anchor" name="76c64ead46647c39aa76edebf2f63444"></a><!-- doxytag: member="glpmctl_data::hsic_connect" ref="76c64ead46647c39aa76edebf2f63444" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="unionglpmctl__data.html#76c64ead46647c39aa76edebf2f63444">glpmctl_data::hsic_connect</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
In host mode once this bit is set, the host configures to drive the HSIC Idle state on the bus. 
<p>
It then waits for the device to initiate the Connect sequence. In device mode once this bit is set, the device waits for the HSIC Idle line state on the bus. Upon receving the Idle line state, it initiates the HSIC Connect sequence. 
<p>
Definition at line <a class="el" href="dwc__otg__regs_8h-source.html#l00375">375</a> of file <a class="el" href="dwc__otg__regs_8h-source.html">dwc_otg_regs.h</a>.
</div>
</div><p>
<hr>The documentation for this union was generated from the following file:<ul>
<li><a class="el" href="dwc__otg__regs_8h-source.html">dwc_otg_regs.h</a></ul>
<hr size="1"><address style="align: right;"><small>Generated on Tue May 5 02:22:49 2009 for DesignWare USB 2.0 OTG Controller (DWC_otg) Device Driver by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7 </small></address>
</body>
</html>
@


1.1
log
@Add initial version of DWCDriver - USB driver for Synopsys DWC OTG controllers
Detail:
  A fairly simple wrapper for Synopsys's open source "DWC_otg" Linux driver, based around a GPL-free version of the DWC_otg 2.90a sources received from the Raspberry Pi foundation.
  Instead of interfacing with the Linux USB stack a new host interface layer has been implemented to allow it to talk to the standard BSD-derived RISC OS stack.
  RTSupport is used to provide the threading functionality that the DWC driver relies upon.
  Interesting files:
  - c/cmodule, h/cmodule - Main module frontend
  - c/dwc_common_riscos, h/dwc_common_riscos - Implementation of the OS support layer required by the DWC driver
  - c/dwc_otg_riscos, h/dwc_otg_riscos - Core code for the BSD driver implementation, driver init/shutdown, and for handling calls from the DWC host driver to us
  - c/port - Some support functions required by BSD-style code inherited from the other USB drivers
  - c/softc_device - Code to handle requests from the BSD layer to attached USB devices
  - c/softc_root - Code to handle requests from the BSD layer to the controller root hub
  - dwc/doc/* - Original Synopsys release notes & user guide pdfs
  - dwc/driver/*, dwc/dwc_common_port/* - Synopsys code and documentation. A few tweaks were required to allow it to compile under Norcroft, but otherwise it's functionally equivalent to the original sources.
Admin:
  Tested in BCM2835 ROM
  There are a few loose ends still to tidy up (search for "DWCTODO"), mainly regarding implementation of Isochronous support, but otherwise the driver seems stable enough for daily use.


Version 0.01. Tagged as 'DWCDriver-0_01'
@
text
@@

