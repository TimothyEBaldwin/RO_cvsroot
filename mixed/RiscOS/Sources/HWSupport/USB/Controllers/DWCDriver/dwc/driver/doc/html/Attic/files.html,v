head	1.2;
access;
symbols
	DWCDriver-0_08:1.1
	DWCDriver-0_07:1.1
	DWCDriver-0_06:1.1
	DWCDriver-0_05:1.1
	DWCDriver-0_04:1.1
	DWCDriver-0_03:1.1
	DWCDriver-0_02:1.1
	DWCDriver-0_01:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.09.17.16.33.23;	author jlee;	state dead;
branches;
next	1.1;
commitid	DXVFy2WJjyak3Ukw;

1.1
date	2012.06.03.15.13.26;	author jlee;	state Exp;
branches;
next	;
commitid	ZZ9X1FvMWAU11h7w;


desc
@@


1.2
log
@Update to version 3.00 of DWC_otg
Detail:
  This big batch of changes brings us in line with rev 70428950df of the Raspberry Pi Linux github.
  Briefly:
  * Deleted HTML docs as they're a waste of space
  * Dropped the SOF fix (which we never used anyway)
  * Dropped our implementation of the microframe scheduling patch, in favour of their implementation
  * Updated to version 3.00 of the DWC sources. Hard to tell what useful changes this brings, due to API tweaks resulting in pretty much every file being littered with changes.
Admin:
  Tested on Raspberry Pi with high processor vectors
  This new version seems like it might be a bit more sensitive to insufficient power supplies. Beware!


Version 0.09. Tagged as 'DWCDriver-0_09'
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>DesignWare USB 2.0 OTG Controller (DWC_otg) Device Driver: File Index</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
    <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li id="current"><a href="files.html"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.html"><span>Globals</span></a></li>
  </ul></div>
<h1>DesignWare USB 2.0 OTG Controller (DWC_otg) Device Driver File List</h1>Here is a list of all documented files with brief descriptions:<table>
  <tr><td class="indexkey"><b>dummy_audio.c</b> <a href="dummy__audio_8c-source.html">[code]</a></td><td class="indexvalue"></td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__cfi__common_8h.html">dwc_cfi_common.h</a> <a href="dwc__cfi__common_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the CFI specific common constants, interfaces (functions and macros) and structures for Linux </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__attr_8c.html">dwc_otg_attr.c</a> <a href="dwc__otg__attr_8c-source.html">[code]</a></td><td class="indexvalue">The diagnostic interface will provide access to the controller for bringing up the hardware and testing </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__attr_8h.html">dwc_otg_attr.h</a> <a href="dwc__otg__attr_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the interface to the Linux device attributes </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__cfi_8c.html">dwc_otg_cfi.c</a> <a href="dwc__otg__cfi_8c-source.html">[code]</a></td><td class="indexvalue">This file contains the most of the CFI implementation for the OTG </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__cfi_8h.html">dwc_otg_cfi.h</a> <a href="dwc__otg__cfi_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the CFI related OTG PCD specific common constants, interfaces (functions and macros) and data structures </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__cil_8c.html">dwc_otg_cil.c</a> <a href="dwc__otg__cil_8c-source.html">[code]</a></td><td class="indexvalue">The Core Interface Layer provides basic services for accessing and managing the DWC_otg hardware </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__cil_8h.html">dwc_otg_cil.h</a> <a href="dwc__otg__cil_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the interface to the Core Interface Layer </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__cil__intr_8c.html">dwc_otg_cil_intr.c</a> <a href="dwc__otg__cil__intr_8c-source.html">[code]</a></td><td class="indexvalue">The Core Interface Layer provides basic services for accessing and managing the DWC_otg hardware </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__core__if_8h.html">dwc_otg_core_if.h</a> <a href="dwc__otg__core__if_8h-source.html">[code]</a></td><td class="indexvalue">This file defines DWC_OTG Core API </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__dbg_8h.html">dwc_otg_dbg.h</a> <a href="dwc__otg__dbg_8h-source.html">[code]</a></td><td class="indexvalue">This file defines debug levels </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__driver_8c.html">dwc_otg_driver.c</a> <a href="dwc__otg__driver_8c-source.html">[code]</a></td><td class="indexvalue">The dwc_otg_driver module provides the initialization and cleanup entry points for the DWC_otg driver </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__driver_8h.html">dwc_otg_driver.h</a> <a href="dwc__otg__driver_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the interface to the Linux driver </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__hcd_8c.html">dwc_otg_hcd.c</a> <a href="dwc__otg__hcd_8c-source.html">[code]</a></td><td class="indexvalue">This file implements HCD Core </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__hcd_8h.html">dwc_otg_hcd.h</a> <a href="dwc__otg__hcd_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the structures, constants, and interfaces for the Host Contoller Driver (HCD) </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__hcd__ddma_8c.html">dwc_otg_hcd_ddma.c</a> <a href="dwc__otg__hcd__ddma_8c-source.html">[code]</a></td><td class="indexvalue">This file contains Descriptor DMA support implementation for host mode </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__hcd__if_8h.html">dwc_otg_hcd_if.h</a> <a href="dwc__otg__hcd__if_8h-source.html">[code]</a></td><td class="indexvalue">This file defines DWC_OTG HCD Core API </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__hcd__intr_8c.html">dwc_otg_hcd_intr.c</a> <a href="dwc__otg__hcd__intr_8c-source.html">[code]</a></td><td class="indexvalue">This file contains the implementation of the HCD Interrupt handlers </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__hcd__linux_8c.html">dwc_otg_hcd_linux.c</a> <a href="dwc__otg__hcd__linux_8c-source.html">[code]</a></td><td class="indexvalue">This file contains the implementation of the HCD </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__hcd__queue_8c.html">dwc_otg_hcd_queue.c</a> <a href="dwc__otg__hcd__queue_8c-source.html">[code]</a></td><td class="indexvalue">This file contains the functions to manage Queue Heads and Queue Transfer Descriptors </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__pcd_8c.html">dwc_otg_pcd.c</a> <a href="dwc__otg__pcd_8c-source.html">[code]</a></td><td class="indexvalue">This file implements PCD Core </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__pcd_8h.html">dwc_otg_pcd.h</a> <a href="dwc__otg__pcd_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the structures, constants, and interfaces for the Perpherial Contoller Driver (PCD) </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__pcd__if_8h.html">dwc_otg_pcd_if.h</a> <a href="dwc__otg__pcd__if_8h-source.html">[code]</a></td><td class="indexvalue">This file defines DWC_OTG PCD Core API </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__pcd__intr_8c.html">dwc_otg_pcd_intr.c</a> <a href="dwc__otg__pcd__intr_8c-source.html">[code]</a></td><td class="indexvalue">This file contains the implementation of the PCD Interrupt handlers </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__pcd__linux_8c.html">dwc_otg_pcd_linux.c</a> <a href="dwc__otg__pcd__linux_8c-source.html">[code]</a></td><td class="indexvalue">This file implements the Peripheral Controller Driver </td></tr>
  <tr><td class="indexkey"><a class="el" href="dwc__otg__regs_8h.html">dwc_otg_regs.h</a> <a href="dwc__otg__regs_8h-source.html">[code]</a></td><td class="indexvalue">This file contains the data structures for accessing the DWC_otg core registers </td></tr>
</table>
<hr size="1"><address style="align: right;"><small>Generated on Tue May 5 02:22:49 2009 for DesignWare USB 2.0 OTG Controller (DWC_otg) Device Driver by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7 </small></address>
</body>
</html>
@


1.1
log
@Add initial version of DWCDriver - USB driver for Synopsys DWC OTG controllers
Detail:
  A fairly simple wrapper for Synopsys's open source "DWC_otg" Linux driver, based around a GPL-free version of the DWC_otg 2.90a sources received from the Raspberry Pi foundation.
  Instead of interfacing with the Linux USB stack a new host interface layer has been implemented to allow it to talk to the standard BSD-derived RISC OS stack.
  RTSupport is used to provide the threading functionality that the DWC driver relies upon.
  Interesting files:
  - c/cmodule, h/cmodule - Main module frontend
  - c/dwc_common_riscos, h/dwc_common_riscos - Implementation of the OS support layer required by the DWC driver
  - c/dwc_otg_riscos, h/dwc_otg_riscos - Core code for the BSD driver implementation, driver init/shutdown, and for handling calls from the DWC host driver to us
  - c/port - Some support functions required by BSD-style code inherited from the other USB drivers
  - c/softc_device - Code to handle requests from the BSD layer to attached USB devices
  - c/softc_root - Code to handle requests from the BSD layer to the controller root hub
  - dwc/doc/* - Original Synopsys release notes & user guide pdfs
  - dwc/driver/*, dwc/dwc_common_port/* - Synopsys code and documentation. A few tweaks were required to allow it to compile under Norcroft, but otherwise it's functionally equivalent to the original sources.
Admin:
  Tested in BCM2835 ROM
  There are a few loose ends still to tidy up (search for "DWCTODO"), mainly regarding implementation of Isochronous support, but otherwise the driver seems stable enough for daily use.


Version 0.01. Tagged as 'DWCDriver-0_01'
@
text
@@

