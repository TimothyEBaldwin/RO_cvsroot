head	1.2;
access;
symbols
	DWCDriver-0_08:1.1
	DWCDriver-0_07:1.1
	DWCDriver-0_06:1.1
	DWCDriver-0_05:1.1
	DWCDriver-0_04:1.1
	DWCDriver-0_03:1.1
	DWCDriver-0_02:1.1
	DWCDriver-0_01:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.09.17.16.34.06;	author jlee;	state dead;
branches;
next	1.1;
commitid	DXVFy2WJjyak3Ukw;

1.1
date	2012.06.03.15.13.51;	author jlee;	state Exp;
branches;
next	;
commitid	ZZ9X1FvMWAU11h7w;


desc
@@


1.2
log
@Update to version 3.00 of DWC_otg
Detail:
  This big batch of changes brings us in line with rev 70428950df of the Raspberry Pi Linux github.
  Briefly:
  * Deleted HTML docs as they're a waste of space
  * Dropped the SOF fix (which we never used anyway)
  * Dropped our implementation of the microframe scheduling patch, in favour of their implementation
  * Updated to version 3.00 of the DWC sources. Hard to tell what useful changes this brings, due to API tweaks resulting in pretty much every file being littered with changes.
Admin:
  Tested on Raspberry Pi with high processor vectors
  This new version seems like it might be a bit more sensitive to insufficient power supplies. Beware!


Version 0.09. Tagged as 'DWCDriver-0_09'
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>DesignWare USB 2.0 OTG Controller (DWC_otg) Device Driver: dwc_otg_core_params Struct Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="files.html"><span>Files</span></a></li>
    <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="functions.html"><span>Data&nbsp;Fields</span></a></li>
  </ul></div>
<h1>dwc_otg_core_params Struct Reference</h1><!-- doxytag: class="dwc_otg_core_params" -->The following parameters may be specified when starting the module.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>&gt;</code>
<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Data Fields</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6d67db1b1152d788bf2fc7fdc6363f78"></a><!-- doxytag: member="dwc_otg_core_params::opt" ref="6d67db1b1152d788bf2fc7fdc6363f78" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#6d67db1b1152d788bf2fc7fdc6363f78">opt</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#b6960c28e9c7d82dca37645726c8f7ce">otg_cap</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies the OTG capabilities.  <a href="#b6960c28e9c7d82dca37645726c8f7ce"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#3c791cb4898379d156acc47c5b9a84fc">dma_enable</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies whether to use slave or DMA mode for accessing the data FIFOs.  <a href="#3c791cb4898379d156acc47c5b9a84fc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#36c5bcf00d0f776b5c9e84e5d8ae408d">dma_desc_enable</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">When DMA mode is enabled specifies whether to use address DMA or DMA Descritor mode for accessing the data FIFOs in device mode.  <a href="#36c5bcf00d0f776b5c9e84e5d8ae408d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#f9d2a8cd9b36d24de89121d19f693ccb">dma_burst_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The DMA Burst size (applicable only for External DMA Mode).  <a href="#f9d2a8cd9b36d24de89121d19f693ccb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#d2c4f622f1c14f68c6e60e2603acd09d">speed</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies the maximum speed of operation in host and device mode.  <a href="#d2c4f622f1c14f68c6e60e2603acd09d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#85cad588a450b8497347af9cf166bfde">host_support_fs_ls_low_power</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies whether low power mode is supported when attached to a Full Speed or Low Speed device in host mode.  <a href="#85cad588a450b8497347af9cf166bfde"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#98f413798f20dc40036a2ec527935a7d">host_ls_low_power_phy_clk</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies the PHY clock rate in low power mode when connected to a Low Speed device in host mode.  <a href="#98f413798f20dc40036a2ec527935a7d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8c169633d4a6f28e964cef9f597c6e03"></a><!-- doxytag: member="dwc_otg_core_params::enable_dynamic_fifo" ref="8c169633d4a6f28e964cef9f597c6e03" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#8c169633d4a6f28e964cef9f597c6e03">enable_dynamic_fifo</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">0 - Use cC FIFO size parameters 1 - Allow dynamic FIFO sizing (default) <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#3d8dc206f54165f52c7f8599731d0f95">data_fifo_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Total number of 4-byte words in the data FIFO memory.  <a href="#3d8dc206f54165f52c7f8599731d0f95"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#24ea6f9329f64ac0ad2d31dafe0d1d8c">dev_rx_fifo_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Number of 4-byte words in the Rx FIFO in device mode when dynamic FIFO sizing is enabled.  <a href="#24ea6f9329f64ac0ad2d31dafe0d1d8c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#d08d9aee1fb4e6508089415d6150176e">dev_nperio_tx_fifo_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Number of 4-byte words in the non-periodic Tx FIFO in device mode when dynamic FIFO sizing is enabled.  <a href="#d08d9aee1fb4e6508089415d6150176e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#2958d325289f4a77b6435cda729e5f6e">dev_perio_tx_fifo_size</a> [MAX_PERIO_FIFOS]</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Number of 4-byte words in each of the periodic Tx FIFOs in device mode when dynamic FIFO sizing is enabled.  <a href="#2958d325289f4a77b6435cda729e5f6e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#2b2ab9c2fe16db70b136515b2e981f6b">host_rx_fifo_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Number of 4-byte words in the Rx FIFO in host mode when dynamic FIFO sizing is enabled.  <a href="#2b2ab9c2fe16db70b136515b2e981f6b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#6ff00857d99f72c0cfd6198cbcfab9a7">host_nperio_tx_fifo_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Number of 4-byte words in the non-periodic Tx FIFO in host mode when Dynamic FIFO sizing is enabled in the core.  <a href="#6ff00857d99f72c0cfd6198cbcfab9a7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#5bc3cac5c81fd8d6fd291ca4b7de3e28">host_perio_tx_fifo_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Number of 4-byte words in the host periodic Tx FIFO when dynamic FIFO sizing is enabled.  <a href="#5bc3cac5c81fd8d6fd291ca4b7de3e28"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#e614d1d2ee740cd972ca76ed0dffec74">max_transfer_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The maximum transfer size supported in bytes.  <a href="#e614d1d2ee740cd972ca76ed0dffec74"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#e17230afa013a15beda38565d19fa933">max_packet_count</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The maximum number of packets in a transfer.  <a href="#e17230afa013a15beda38565d19fa933"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#c1b433c6965aa7d48f6ca6818c592039">host_channels</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of host channel registers to use.  <a href="#c1b433c6965aa7d48f6ca6818c592039"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#17d0dda7fe2cd51726cd1dd34c57b94a">dev_endpoints</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The number of endpoints in addition to EP0 available for device mode operations.  <a href="#17d0dda7fe2cd51726cd1dd34c57b94a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#8b5d4e0c98c46d0d4e80b6faf66daf72">phy_type</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies the type of PHY interface to use.  <a href="#8b5d4e0c98c46d0d4e80b6faf66daf72"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#41f5a03ab1b68564b240e03f33a09dde">phy_utmi_width</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies the UTMI+ Data Width.  <a href="#41f5a03ab1b68564b240e03f33a09dde"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#6fc9a3fbe3c36cbbc231f1642ee96cfe">phy_ulpi_ddr</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies whether the ULPI operates at double or single data rate.  <a href="#6fc9a3fbe3c36cbbc231f1642ee96cfe"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3b6fa0a7fe7d7f87326894fdbe0aa375"></a><!-- doxytag: member="dwc_otg_core_params::phy_ulpi_ext_vbus" ref="3b6fa0a7fe7d7f87326894fdbe0aa375" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#3b6fa0a7fe7d7f87326894fdbe0aa375">phy_ulpi_ext_vbus</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies whether to use the internal or external supply to drive the vbus with a ULPI phy. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#6b0a0ab15284a541ae079beecaf3e617">i2c_enable</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies whether to use the I2Cinterface for full speed PHY.  <a href="#6b0a0ab15284a541ae079beecaf3e617"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3d7cfc3c416010102b2c671dfaa828d5"></a><!-- doxytag: member="dwc_otg_core_params::ulpi_fs_ls" ref="3d7cfc3c416010102b2c671dfaa828d5" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#3d7cfc3c416010102b2c671dfaa828d5">ulpi_fs_ls</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="879afefd6e13233a78d74ee71d3ee75e"></a><!-- doxytag: member="dwc_otg_core_params::ts_dline" ref="879afefd6e13233a78d74ee71d3ee75e" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#879afefd6e13233a78d74ee71d3ee75e">ts_dline</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d61279dcea66973b2915e335efb07fe3"></a><!-- doxytag: member="dwc_otg_core_params::en_multiple_tx_fifo" ref="d61279dcea66973b2915e335efb07fe3" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#d61279dcea66973b2915e335efb07fe3">en_multiple_tx_fifo</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies whether dedicated transmit FIFOs are enabled for non periodic IN endpoints in device mode 0 - No 1 - Yes. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#6e0c5d06467fbf3458f11f7eb8153a8b">dev_tx_fifo_size</a> [MAX_TX_FIFOS]</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Number of 4-byte words in each of the Tx FIFOs in device mode when dynamic FIFO sizing is enabled.  <a href="#6e0c5d06467fbf3458f11f7eb8153a8b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1610a4b28bea581c46f251d995bf4a51"></a><!-- doxytag: member="dwc_otg_core_params::thr_ctl" ref="1610a4b28bea581c46f251d995bf4a51" args="" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#1610a4b28bea581c46f251d995bf4a51">thr_ctl</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Thresholding enable flag- bit 0 - enable non-ISO Tx thresholding bit 1 - enable ISO Tx thresholding bit 2 - enable Rx thresholding. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c92fc907d503f9b8bb3600164c520b0e"></a><!-- doxytag: member="dwc_otg_core_params::tx_thr_length" ref="c92fc907d503f9b8bb3600164c520b0e" args="" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#c92fc907d503f9b8bb3600164c520b0e">tx_thr_length</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Thresholding length for Tx FIFOs in 32 bit DWORDs. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2cb1f83013e357828fbf55ac91971d44"></a><!-- doxytag: member="dwc_otg_core_params::rx_thr_length" ref="2cb1f83013e357828fbf55ac91971d44" args="" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#2cb1f83013e357828fbf55ac91971d44">rx_thr_length</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Thresholding length for Rx FIFOs in 32 bit DWORDs. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8b906ba765a10dd9fcfa1c02dbc0184e"></a><!-- doxytag: member="dwc_otg_core_params::lpm_enable" ref="8b906ba765a10dd9fcfa1c02dbc0184e" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#8b906ba765a10dd9fcfa1c02dbc0184e">lpm_enable</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specifies whether LPM (Link Power Management) support is enabled. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b601fde03b371b74deab1205e1329a7d"></a><!-- doxytag: member="dwc_otg_core_params::pti_enable" ref="b601fde03b371b74deab1205e1329a7d" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#b601fde03b371b74deab1205e1329a7d">pti_enable</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Per Transfer Interrupt mode enable flag 1 - Enabled 0 - Disabled. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="740e50199a75b3877b7db630d49c36aa"></a><!-- doxytag: member="dwc_otg_core_params::mpi_enable" ref="740e50199a75b3877b7db630d49c36aa" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#740e50199a75b3877b7db630d49c36aa">mpi_enable</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Multi Processor Interrupt mode enable flag 1 - Enabled 0 - Disabled. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="359a3cb3a7b4800a0c32750005c9fd1b"></a><!-- doxytag: member="dwc_otg_core_params::ic_usb_cap" ref="359a3cb3a7b4800a0c32750005c9fd1b" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#359a3cb3a7b4800a0c32750005c9fd1b">ic_usb_cap</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">IS_USB Capability 1 - Enabled 0 - Disabled. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8787af52f8d70a9100ab1fa2b0f69bfb"></a><!-- doxytag: member="dwc_otg_core_params::ahb_thr_ratio" ref="8787af52f8d70a9100ab1fa2b0f69bfb" args="" -->
int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdwc__otg__core__params.html#8787af52f8d70a9100ab1fa2b0f69bfb">ahb_thr_ratio</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">AHB Threshold Ratio 2'b00 AHB Threshold = MAC Threshold 2'b01 AHB Threshold = 1/2 MAC Threshold 2'b10 AHB Threshold = 1/4 MAC Threshold 2'b11 AHB Threshold = 1/8 MAC Threshold. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The following parameters may be specified when starting the module. 
<p>
These parameters define how the DWC_otg controller should be configured. 
<p>

<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00401">401</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.<hr><h2>Field Documentation</h2>
<a class="anchor" name="b6960c28e9c7d82dca37645726c8f7ce"></a><!-- doxytag: member="dwc_otg_core_params::otg_cap" ref="b6960c28e9c7d82dca37645726c8f7ce" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#b6960c28e9c7d82dca37645726c8f7ce">dwc_otg_core_params::otg_cap</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies the OTG capabilities. 
<p>
The driver will automatically detect the value for this parameter if none is specified. 0 - HNP and SRP capable (default) 1 - SRP Only capable 2 - No HNP/SRP capable 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00411">411</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="3c791cb4898379d156acc47c5b9a84fc"></a><!-- doxytag: member="dwc_otg_core_params::dma_enable" ref="3c791cb4898379d156acc47c5b9a84fc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#3c791cb4898379d156acc47c5b9a84fc">dwc_otg_core_params::dma_enable</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies whether to use slave or DMA mode for accessing the data FIFOs. 
<p>
The driver will automatically detect the value for this parameter if none is specified. 0 - Slave 1 - DMA (default, if available) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00420">420</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="36c5bcf00d0f776b5c9e84e5d8ae408d"></a><!-- doxytag: member="dwc_otg_core_params::dma_desc_enable" ref="36c5bcf00d0f776b5c9e84e5d8ae408d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#36c5bcf00d0f776b5c9e84e5d8ae408d">dwc_otg_core_params::dma_desc_enable</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
When DMA mode is enabled specifies whether to use address DMA or DMA Descritor mode for accessing the data FIFOs in device mode. 
<p>
The driver will automatically detect the value for this parameter if none is specified. 0 - address DMA 1 - DMA Descriptor(default, if available) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00429">429</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="f9d2a8cd9b36d24de89121d19f693ccb"></a><!-- doxytag: member="dwc_otg_core_params::dma_burst_size" ref="f9d2a8cd9b36d24de89121d19f693ccb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#f9d2a8cd9b36d24de89121d19f693ccb">dwc_otg_core_params::dma_burst_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The DMA Burst size (applicable only for External DMA Mode). 
<p>
1, 4, 8 16, 32, 64, 128, 256 (default 32) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00433">433</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="d2c4f622f1c14f68c6e60e2603acd09d"></a><!-- doxytag: member="dwc_otg_core_params::speed" ref="d2c4f622f1c14f68c6e60e2603acd09d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#d2c4f622f1c14f68c6e60e2603acd09d">dwc_otg_core_params::speed</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies the maximum speed of operation in host and device mode. 
<p>
The actual speed depends on the speed of the attached device and the value of phy_type. The actual speed depends on the speed of the attached device. 0 - High Speed (default) 1 - Full Speed 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00443">443</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="85cad588a450b8497347af9cf166bfde"></a><!-- doxytag: member="dwc_otg_core_params::host_support_fs_ls_low_power" ref="85cad588a450b8497347af9cf166bfde" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#85cad588a450b8497347af9cf166bfde">dwc_otg_core_params::host_support_fs_ls_low_power</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies whether low power mode is supported when attached to a Full Speed or Low Speed device in host mode. 
<p>
0 - Don't support low power mode (default) 1 - Support low power mode 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00449">449</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="98f413798f20dc40036a2ec527935a7d"></a><!-- doxytag: member="dwc_otg_core_params::host_ls_low_power_phy_clk" ref="98f413798f20dc40036a2ec527935a7d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#98f413798f20dc40036a2ec527935a7d">dwc_otg_core_params::host_ls_low_power_phy_clk</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies the PHY clock rate in low power mode when connected to a Low Speed device in host mode. 
<p>
This parameter is applicable only if HOST_SUPPORT_FS_LS_LOW_POWER is enabled. If PHY_TYPE is set to FS then defaults to 6 MHZ otherwise 48 MHZ.<p>
0 - 48 MHz 1 - 6 MHz 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00459">459</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="3d8dc206f54165f52c7f8599731d0f95"></a><!-- doxytag: member="dwc_otg_core_params::data_fifo_size" ref="3d8dc206f54165f52c7f8599731d0f95" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#3d8dc206f54165f52c7f8599731d0f95">dwc_otg_core_params::data_fifo_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Total number of 4-byte words in the data FIFO memory. 
<p>
This memory includes the Rx FIFO, non-periodic Tx FIFO, and periodic Tx FIFOs. 32 to 32768 (default 8192) Note: The total FIFO memory depth in the FPGA configuration is 8192. 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00473">473</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="24ea6f9329f64ac0ad2d31dafe0d1d8c"></a><!-- doxytag: member="dwc_otg_core_params::dev_rx_fifo_size" ref="24ea6f9329f64ac0ad2d31dafe0d1d8c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#24ea6f9329f64ac0ad2d31dafe0d1d8c">dwc_otg_core_params::dev_rx_fifo_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Number of 4-byte words in the Rx FIFO in device mode when dynamic FIFO sizing is enabled. 
<p>
16 to 32768 (default 1064) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00479">479</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="d08d9aee1fb4e6508089415d6150176e"></a><!-- doxytag: member="dwc_otg_core_params::dev_nperio_tx_fifo_size" ref="d08d9aee1fb4e6508089415d6150176e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#d08d9aee1fb4e6508089415d6150176e">dwc_otg_core_params::dev_nperio_tx_fifo_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Number of 4-byte words in the non-periodic Tx FIFO in device mode when dynamic FIFO sizing is enabled. 
<p>
16 to 32768 (default 1024) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00485">485</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="2958d325289f4a77b6435cda729e5f6e"></a><!-- doxytag: member="dwc_otg_core_params::dev_perio_tx_fifo_size" ref="2958d325289f4a77b6435cda729e5f6e" args="[MAX_PERIO_FIFOS]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t <a class="el" href="structdwc__otg__core__params.html#2958d325289f4a77b6435cda729e5f6e">dwc_otg_core_params::dev_perio_tx_fifo_size</a>[MAX_PERIO_FIFOS]          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Number of 4-byte words in each of the periodic Tx FIFOs in device mode when dynamic FIFO sizing is enabled. 
<p>
4 to 768 (default 256) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00491">491</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="2b2ab9c2fe16db70b136515b2e981f6b"></a><!-- doxytag: member="dwc_otg_core_params::host_rx_fifo_size" ref="2b2ab9c2fe16db70b136515b2e981f6b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#2b2ab9c2fe16db70b136515b2e981f6b">dwc_otg_core_params::host_rx_fifo_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Number of 4-byte words in the Rx FIFO in host mode when dynamic FIFO sizing is enabled. 
<p>
16 to 32768 (default 1024) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00497">497</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="6ff00857d99f72c0cfd6198cbcfab9a7"></a><!-- doxytag: member="dwc_otg_core_params::host_nperio_tx_fifo_size" ref="6ff00857d99f72c0cfd6198cbcfab9a7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#6ff00857d99f72c0cfd6198cbcfab9a7">dwc_otg_core_params::host_nperio_tx_fifo_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Number of 4-byte words in the non-periodic Tx FIFO in host mode when Dynamic FIFO sizing is enabled in the core. 
<p>
16 to 32768 (default 1024) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00503">503</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="5bc3cac5c81fd8d6fd291ca4b7de3e28"></a><!-- doxytag: member="dwc_otg_core_params::host_perio_tx_fifo_size" ref="5bc3cac5c81fd8d6fd291ca4b7de3e28" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#5bc3cac5c81fd8d6fd291ca4b7de3e28">dwc_otg_core_params::host_perio_tx_fifo_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Number of 4-byte words in the host periodic Tx FIFO when dynamic FIFO sizing is enabled. 
<p>
16 to 32768 (default 1024) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00509">509</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="e614d1d2ee740cd972ca76ed0dffec74"></a><!-- doxytag: member="dwc_otg_core_params::max_transfer_size" ref="e614d1d2ee740cd972ca76ed0dffec74" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#e614d1d2ee740cd972ca76ed0dffec74">dwc_otg_core_params::max_transfer_size</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The maximum transfer size supported in bytes. 
<p>
2047 to 65,535 (default 65,535) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00514">514</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="e17230afa013a15beda38565d19fa933"></a><!-- doxytag: member="dwc_otg_core_params::max_packet_count" ref="e17230afa013a15beda38565d19fa933" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#e17230afa013a15beda38565d19fa933">dwc_otg_core_params::max_packet_count</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The maximum number of packets in a transfer. 
<p>
15 to 511 (default 511) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00519">519</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="c1b433c6965aa7d48f6ca6818c592039"></a><!-- doxytag: member="dwc_otg_core_params::host_channels" ref="c1b433c6965aa7d48f6ca6818c592039" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#c1b433c6965aa7d48f6ca6818c592039">dwc_otg_core_params::host_channels</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of host channel registers to use. 
<p>
1 to 16 (default 12) Note: The FPGA configuration supports a maximum of 12 host channels. 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00525">525</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="17d0dda7fe2cd51726cd1dd34c57b94a"></a><!-- doxytag: member="dwc_otg_core_params::dev_endpoints" ref="17d0dda7fe2cd51726cd1dd34c57b94a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#17d0dda7fe2cd51726cd1dd34c57b94a">dwc_otg_core_params::dev_endpoints</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The number of endpoints in addition to EP0 available for device mode operations. 
<p>
1 to 15 (default 6 IN and OUT) Note: The FPGA configuration supports a maximum of 6 IN and OUT endpoints in addition to EP0. 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00533">533</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="8b5d4e0c98c46d0d4e80b6faf66daf72"></a><!-- doxytag: member="dwc_otg_core_params::phy_type" ref="8b5d4e0c98c46d0d4e80b6faf66daf72" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#8b5d4e0c98c46d0d4e80b6faf66daf72">dwc_otg_core_params::phy_type</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies the type of PHY interface to use. 
<p>
By default, the driver will automatically detect the phy_type.<p>
0 - Full Speed PHY 1 - UTMI+ (default) 2 - ULPI 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00543">543</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="41f5a03ab1b68564b240e03f33a09dde"></a><!-- doxytag: member="dwc_otg_core_params::phy_utmi_width" ref="41f5a03ab1b68564b240e03f33a09dde" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#41f5a03ab1b68564b240e03f33a09dde">dwc_otg_core_params::phy_utmi_width</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies the UTMI+ Data Width. 
<p>
This parameter is applicable for a PHY_TYPE of UTMI+ or ULPI. (For a ULPI PHY_TYPE, this parameter indicates the data width between the MAC and the ULPI Wrapper.) Also, this parameter is applicable only if the OTG_HSPHY_WIDTH cC parameter was set to "8 and 16 bits", meaning that the core has been configured to work at either data path width.<p>
8 or 16 bits (default 16) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00556">556</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="6fc9a3fbe3c36cbbc231f1642ee96cfe"></a><!-- doxytag: member="dwc_otg_core_params::phy_ulpi_ddr" ref="6fc9a3fbe3c36cbbc231f1642ee96cfe" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#6fc9a3fbe3c36cbbc231f1642ee96cfe">dwc_otg_core_params::phy_ulpi_ddr</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies whether the ULPI operates at double or single data rate. 
<p>
This parameter is only applicable if PHY_TYPE is ULPI.<p>
0 - single data rate ULPI interface with 8 bit wide data bus (default) 1 - double data rate ULPI interface with 4 bit wide data bus 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00568">568</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="6b0a0ab15284a541ae079beecaf3e617"></a><!-- doxytag: member="dwc_otg_core_params::i2c_enable" ref="6b0a0ab15284a541ae079beecaf3e617" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t <a class="el" href="structdwc__otg__core__params.html#6b0a0ab15284a541ae079beecaf3e617">dwc_otg_core_params::i2c_enable</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Specifies whether to use the I2Cinterface for full speed PHY. 
<p>
This parameter is only applicable if PHY_TYPE is FS. 0 - No (default) 1 - Yes 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00582">582</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<a class="anchor" name="6e0c5d06467fbf3458f11f7eb8153a8b"></a><!-- doxytag: member="dwc_otg_core_params::dev_tx_fifo_size" ref="6e0c5d06467fbf3458f11f7eb8153a8b" args="[MAX_TX_FIFOS]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t <a class="el" href="structdwc__otg__core__params.html#6e0c5d06467fbf3458f11f7eb8153a8b">dwc_otg_core_params::dev_tx_fifo_size</a>[MAX_TX_FIFOS]          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Number of 4-byte words in each of the Tx FIFOs in device mode when dynamic FIFO sizing is enabled. 
<p>
4 to 768 (default 256) 
<p>
Definition at line <a class="el" href="dwc__otg__cil_8h-source.html#l00600">600</a> of file <a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a>.
</div>
</div><p>
<hr>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="dwc__otg__cil_8h-source.html">dwc_otg_cil.h</a></ul>
<hr size="1"><address style="align: right;"><small>Generated on Tue May 5 02:22:49 2009 for DesignWare USB 2.0 OTG Controller (DWC_otg) Device Driver by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7 </small></address>
</body>
</html>
@


1.1
log
@Add initial version of DWCDriver - USB driver for Synopsys DWC OTG controllers
Detail:
  A fairly simple wrapper for Synopsys's open source "DWC_otg" Linux driver, based around a GPL-free version of the DWC_otg 2.90a sources received from the Raspberry Pi foundation.
  Instead of interfacing with the Linux USB stack a new host interface layer has been implemented to allow it to talk to the standard BSD-derived RISC OS stack.
  RTSupport is used to provide the threading functionality that the DWC driver relies upon.
  Interesting files:
  - c/cmodule, h/cmodule - Main module frontend
  - c/dwc_common_riscos, h/dwc_common_riscos - Implementation of the OS support layer required by the DWC driver
  - c/dwc_otg_riscos, h/dwc_otg_riscos - Core code for the BSD driver implementation, driver init/shutdown, and for handling calls from the DWC host driver to us
  - c/port - Some support functions required by BSD-style code inherited from the other USB drivers
  - c/softc_device - Code to handle requests from the BSD layer to attached USB devices
  - c/softc_root - Code to handle requests from the BSD layer to the controller root hub
  - dwc/doc/* - Original Synopsys release notes & user guide pdfs
  - dwc/driver/*, dwc/dwc_common_port/* - Synopsys code and documentation. A few tweaks were required to allow it to compile under Norcroft, but otherwise it's functionally equivalent to the original sources.
Admin:
  Tested in BCM2835 ROM
  There are a few loose ends still to tidy up (search for "DWCTODO"), mainly regarding implementation of Isochronous support, but otherwise the driver seems stable enough for daily use.


Version 0.01. Tagged as 'DWCDriver-0_01'
@
text
@@

