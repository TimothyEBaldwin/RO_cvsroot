head	1.36;
access;
symbols
	DWCDriver-0_35:1.36
	DWCDriver-0_34:1.35
	DWCDriver-0_33:1.34
	DWCDriver-0_32:1.33
	DWCDriver-0_31:1.32
	DWCDriver-0_30:1.31
	DWCDriver-0_29:1.30
	DWCDriver-0_28:1.29
	DWCDriver-0_27:1.28
	DWCDriver-0_26:1.27
	DWCDriver-0_24-1:1.27
	DWCDriver-0_25:1.26
	DWCDriver-0_24:1.25
	DWCDriver-0_23:1.24
	DWCDriver-0_22:1.23
	DWCDriver-0_21:1.22
	DWCDriver-0_20:1.21
	DWCDriver-0_19:1.20
	DWCDriver-0_18:1.19
	DWCDriver-0_17:1.18
	DWCDriver-0_16:1.17
	DWCDriver-0_15:1.16
	DWCDriver-0_14:1.15
	DWCDriver-0_13:1.14
	DWCDriver-0_12:1.13
	DWCDriver-0_11:1.12
	DWCDriver-0_10:1.11
	DWCDriver-0_09:1.10
	DWCDriver-0_08:1.9
	DWCDriver-0_07:1.8
	DWCDriver-0_06:1.7
	DWCDriver-0_05:1.6
	DWCDriver-0_04:1.5
	DWCDriver-0_03:1.4
	DWCDriver-0_02:1.3
	DWCDriver-0_01:1.2;
locks; strict;
comment	@# @;


1.36
date	2018.06.02.12.03.07;	author rool;	state Exp;
branches;
next	1.35;
commitid	aN4UymGTnkYCzHEA;

1.35
date	2018.01.27.09.36.11;	author rool;	state Exp;
branches;
next	1.34;
commitid	YqmCwqmeVvmkOuoA;

1.34
date	2017.11.25.09.49.28;	author rool;	state Exp;
branches;
next	1.33;
commitid	krukx1U3qlvrUogA;

1.33
date	2017.09.19.20.28.38;	author rool;	state Exp;
branches;
next	1.32;
commitid	wjT6lLDJh1HeBQ7A;

1.32
date	2017.08.19.14.44.00;	author rool;	state Exp;
branches;
next	1.31;
commitid	x9oSeOeS3LFMGP3A;

1.31
date	2017.07.15.09.08.15;	author rool;	state Exp;
branches;
next	1.30;
commitid	QvTf5FFso5wmXiZz;

1.30
date	2016.12.17.10.22.11;	author rool;	state Exp;
branches;
next	1.29;
commitid	cEIxPCqCTT2e7kyz;

1.29
date	2016.06.15.19.37.02;	author jlee;	state Exp;
branches;
next	1.28;
commitid	o8vHBAzzm6eg8Baz;

1.28
date	2016.05.02.19.09.20;	author rsprowson;	state Exp;
branches;
next	1.27;
commitid	HgGXVysKiaWroW4z;

1.27
date	2016.03.27.01.45.57;	author jlee;	state Exp;
branches;
next	1.26;
commitid	atwIU5aT5hgfMd0z;

1.26
date	2016.03.27.01.42.43;	author jlee;	state Exp;
branches;
next	1.25;
commitid	KtaNubiJaxH8Ld0z;

1.25
date	2015.12.11.19.37.38;	author jlee;	state Exp;
branches;
next	1.24;
commitid	X4aO1nkzzYS79zMy;

1.24
date	2015.11.18.22.45.40;	author rsprowson;	state Exp;
branches;
next	1.23;
commitid	daIXdDYiDc7uVCJy;

1.23
date	2015.11.15.10.05.55;	author rool;	state Exp;
branches;
next	1.22;
commitid	7p3alkDZr6jPOaJy;

1.22
date	2015.10.07.20.59.43;	author jlee;	state Exp;
branches;
next	1.21;
commitid	qck3WWYzKpNMGdEy;

1.21
date	2015.08.21.20.05.19;	author rsprowson;	state Exp;
branches;
next	1.20;
commitid	LQa6fu9V2RLPTayy;

1.20
date	2015.03.28.20.48.26;	author jlee;	state Exp;
branches;
next	1.19;
commitid	ILCg2z4T1KyAPpfy;

1.19
date	2014.10.31.10.04.13;	author rsprowson;	state Exp;
branches;
next	1.18;
commitid	pgkWmZhUKLFx1lWx;

1.18
date	2014.10.18.19.32.25;	author jlee;	state Exp;
branches;
next	1.17;
commitid	f21NzmxAoXunAIUx;

1.17
date	2014.07.08.22.17.32;	author jlee;	state Exp;
branches;
next	1.16;
commitid	Dy0m80d21vUhMCHx;

1.16
date	2014.06.19.21.30.59;	author jlee;	state Exp;
branches;
next	1.15;
commitid	Q5Tr8KszgORb8bFx;

1.15
date	2014.06.01.14.01.45;	author jlee;	state Exp;
branches;
next	1.14;
commitid	W2L9CKguSZ7XdPCx;

1.14
date	2014.05.06.20.32.35;	author rsprowson;	state Exp;
branches;
next	1.13;
commitid	8io8KmS4EHAQdwzx;

1.13
date	2014.04.29.13.14.11;	author bavison;	state Exp;
branches;
next	1.12;
commitid	Csp8Zk53w6vo1Ayx;

1.12
date	2014.04.26.18.17.55;	author jlee;	state Exp;
branches;
next	1.11;
commitid	3PdzN60cJJ3zNdyx;

1.11
date	2013.03.30.23.35.34;	author jlee;	state Exp;
branches;
next	1.10;
commitid	p5nj8B3j62iL9SJw;

1.10
date	2012.09.17.16.32.47;	author jlee;	state Exp;
branches;
next	1.9;
commitid	DXVFy2WJjyak3Ukw;

1.9
date	2012.08.04.14.31.20;	author jlee;	state Exp;
branches;
next	1.8;
commitid	znlbEiHiIsNmNefw;

1.8
date	2012.08.02.00.49.30;	author jlee;	state Exp;
branches;
next	1.7;
commitid	JikpcJFANfgqjUew;

1.7
date	2012.07.22.00.08.48;	author jlee;	state Exp;
branches;
next	1.6;
commitid	m2n7BnxI1winrudw;

1.6
date	2012.07.21.19.22.45;	author jlee;	state Exp;
branches;
next	1.5;
commitid	5Kpl2qWWr4efRsdw;

1.5
date	2012.06.24.21.41.44;	author jlee;	state Exp;
branches;
next	1.4;
commitid	7BXP9gA386QIu0aw;

1.4
date	2012.06.15.00.09.05;	author jlee;	state Exp;
branches;
next	1.3;
commitid	5whdJrlaDMQcDJ8w;

1.3
date	2012.06.06.23.46.45;	author jlee;	state Exp;
branches;
next	1.2;
commitid	BGSuwmc37QAuLH7w;

1.2
date	2012.06.03.15.12.46;	author jlee;	state Exp;
branches;
next	1.1;
commitid	ZZ9X1FvMWAU11h7w;

1.1
date	2012.06.03.14.40.56;	author jlee;	state Exp;
branches;
next	;
commitid	tUI1KAu36l6eQg7w;


desc
@@


1.36
log
@Enable split interrupt transactions
Detail:
  Reflects change made here
    https://github.com/raspberrypi/linux/commit/7956536a3d78ba0ef8ec990651b315664ed70f90
  after wider testing by the Linux community.
Admin:
  Submission from Colin Granville.

Version 0.35. Tagged as 'DWCDriver-0_35'
@
text
@/* (0.35)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.35
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                02 Jun 2018

#define Module_MajorVersion             "0.35"
#define Module_Version                  35
#define Module_MinorVersion             ""
#define Module_Date                     "02 Jun 2018"

#define Module_ApplicationDate          "02-Jun-18"

#define Module_ComponentName            "DWCDriver"
#define Module_ComponentPath            "mixed/RiscOS/Sources/HWSupport/USB/Controllers/DWCDriver"

#define Module_FullVersion              "0.35"
#define Module_HelpVersion              "0.35 (02 Jun 2018)"
#define Module_LibraryVersionInfo       "0:35"
@


1.35
log
@Improve response USBDriver finalisation
Detail:
  Listen for Service_USB_USBDriverDead then shut down the driver, rather than Service_ModulePostFinal.
  Ensure the returned status is defined if USBDriver_InsertTransfer fails (because USBDriver has gone).
Admin:
  Submission from Colin Granville.

Version 0.34. Tagged as 'DWCDriver-0_34'
@
text
@d1 1
a1 1
/* (0.34)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.34
d9 1
a9 1
#define Module_Date_CMHG                27 Jan 2018
d11 2
a12 2
#define Module_MajorVersion             "0.34"
#define Module_Version                  34
d14 1
a14 1
#define Module_Date                     "27 Jan 2018"
d16 1
a16 1
#define Module_ApplicationDate          "27-Jan-18"
d21 3
a23 3
#define Module_FullVersion              "0.34"
#define Module_HelpVersion              "0.34 (27 Jan 2018)"
#define Module_LibraryVersionInfo       "0:34"
@


1.34
log
@Fix to device descriptor interval handling
Detail:
  For high speed interrupt endpoints, and full/high speed isochronous, the bInterval value is held in log2 form. Take this into account.
  Correct the built in root hub device descriptor similarly - 255 is not valid for a HSHUBSTT (USB 2.0 errata 07-Dec-2000 corrected the mistake on page 412 of the USB 2.0 spec).
Admin:
  Based on a submission from Colin Granville, with edits.

Version 0.33. Tagged as 'DWCDriver-0_33'
@
text
@d1 1
a1 1
/* (0.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.33
d9 1
a9 1
#define Module_Date_CMHG                25 Nov 2017
d11 2
a12 2
#define Module_MajorVersion             "0.33"
#define Module_Version                  33
d14 1
a14 1
#define Module_Date                     "25 Nov 2017"
d16 1
a16 1
#define Module_ApplicationDate          "25-Nov-17"
d21 3
a23 3
#define Module_FullVersion              "0.33"
#define Module_HelpVersion              "0.33 (25 Nov 2017)"
#define Module_LibraryVersionInfo       "0:33"
@


1.33
log
@Remove some part finished HAL support
Detail:
  A few sections of code guarded by USBHAL defines carried over from MUSBDriver, but were never finished due to the complexity of DWCDriver.
  These are no longer needed now the kernel scans for keys, so remove them.
Admin:
  Couple of warnings in cmodule.c also attended to.
  Submission for USB bounty.

Version 0.32. Tagged as 'DWCDriver-0_32'
@
text
@d1 1
a1 1
/* (0.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.32
d9 1
a9 1
#define Module_Date_CMHG                19 Sep 2017
d11 2
a12 2
#define Module_MajorVersion             "0.32"
#define Module_Version                  32
d14 1
a14 1
#define Module_Date                     "19 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "19-Sep-17"
d21 3
a23 3
#define Module_FullVersion              "0.32"
#define Module_HelpVersion              "0.32 (19 Sep 2017)"
#define Module_LibraryVersionInfo       "0:32"
@


1.32
log
@Changes to header imports
Detail:
  Use those in C:USB rather than reaching inside the adjacent USBDriver.
Admin:
  Requires USBDriver-1_21.

Version 0.31. Tagged as 'DWCDriver-0_31'
@
text
@d1 1
a1 1
/* (0.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.31
d9 1
a9 1
#define Module_Date_CMHG                19 Aug 2017
d11 2
a12 2
#define Module_MajorVersion             "0.31"
#define Module_Version                  31
d14 1
a14 1
#define Module_Date                     "19 Aug 2017"
d16 1
a16 1
#define Module_ApplicationDate          "19-Aug-17"
d21 3
a23 3
#define Module_FullVersion              "0.31"
#define Module_HelpVersion              "0.31 (19 Aug 2017)"
#define Module_LibraryVersionInfo       "0:31"
@


1.31
log
@Repoint include path
Admin:
  Reach into USBDriver rather than NetBSD.

Version 0.30. Tagged as 'DWCDriver-0_30'
@
text
@d1 1
a1 1
/* (0.30)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.30
d9 1
a9 1
#define Module_Date_CMHG                15 Jul 2017
d11 2
a12 2
#define Module_MajorVersion             "0.30"
#define Module_Version                  30
d14 1
a14 1
#define Module_Date                     "15 Jul 2017"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jul-17"
d21 3
a23 3
#define Module_FullVersion              "0.30"
#define Module_HelpVersion              "0.30 (15 Jul 2017)"
#define Module_LibraryVersionInfo       "0:30"
@


1.30
log
@Internationalised
Detail:
  Add support for standalone messages registration, and actually use the messages rather than just exporting them in ROM builds.
  Changed to use allocated error bases rather than 0.
  Sync controller hunting loop with other HC for ease of comparison.
Admin:
  Submission for USB bounty.
  Tested on a Pi 2.

Version 0.29. Tagged as 'DWCDriver-0_29'
@
text
@d1 1
a1 1
/* (0.29)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.29
d9 1
a9 1
#define Module_Date_CMHG                17 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "0.29"
#define Module_Version                  29
d14 1
a14 1
#define Module_Date                     "17 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "17-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "0.29"
#define Module_HelpVersion              "0.29 (17 Dec 2016)"
#define Module_LibraryVersionInfo       "0:29"
@


1.29
log
@Issue CLREX on return from the FIQ handler
Detail:
  s/regaccess - Issue CLREX on return from the FIQ handler, just in case we start using exclusive access instructions from within the handler. Update PSR manipulation code to use CPS in preference to MSR.
Admin:
  Tested on Raspberry Pi


Version 0.28. Tagged as 'DWCDriver-0_28'
@
text
@d1 1
a1 1
/* (0.28)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.28
d9 1
a9 1
#define Module_Date_CMHG                15 Jun 2016
d11 2
a12 2
#define Module_MajorVersion             "0.28"
#define Module_Version                  28
d14 1
a14 1
#define Module_Date                     "15 Jun 2016"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jun-16"
d21 3
a23 3
#define Module_FullVersion              "0.28"
#define Module_HelpVersion              "0.28 (15 Jun 2016)"
#define Module_LibraryVersionInfo       "0:28"
@


1.28
log
@Fix for too short a memset
From a tip off in https://www.riscosopen.org/forum/forums/4/topics/3990

Version 0.27. Tagged as 'DWCDriver-0_27'
@
text
@d1 1
a1 1
/* (0.27)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.27
d9 1
a9 1
#define Module_Date_CMHG                02 May 2016
d11 2
a12 2
#define Module_MajorVersion             "0.27"
#define Module_Version                  27
d14 1
a14 1
#define Module_Date                     "02 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "02-May-16"
d21 3
a23 3
#define Module_FullVersion              "0.27"
#define Module_HelpVersion              "0.27 (02 May 2016)"
#define Module_LibraryVersionInfo       "0:27"
@


1.27
log
@Fix tagging mess with the reverted changes - move tag for current version beyond 0_26


Version 0.26. Tagged as 'DWCDriver-0_26'
@
text
@d1 1
a1 1
/* (0.26)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.26
d9 1
a9 1
#define Module_Date_CMHG                27 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "0.26"
#define Module_Version                  26
d14 1
a14 1
#define Module_Date                     "27 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "27-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "0.26"
#define Module_HelpVersion              "0.26 (27 Mar 2016)"
#define Module_LibraryVersionInfo       "0:26"
@


1.26
log
@Don't pretend to mess with cacheability of pages
Detail:
  c/port - Fix vtophys requesting that pages are made uncacheable. They're already uncacheable (all allocated via PCI_RAMAlloc), and once we're done with the pages we never do a 'make cacheable' call to balance it out
Admin:
  Tested on Pi 2B


Version 0.25. Tagged as 'DWCDriver-0_25'
@
text
@d1 1
a1 1
/* (0.25)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.25
d11 2
a12 2
#define Module_MajorVersion             "0.25"
#define Module_Version                  25
d21 3
a23 3
#define Module_FullVersion              "0.25"
#define Module_HelpVersion              "0.25 (27 Mar 2016)"
#define Module_LibraryVersionInfo       "0:25"
@


1.25
log
@Force controller to run in host mode
Detail:
  dwc/driver/c/dwc_otg_cil - Set the force_host_mode bit to make the controller ignore the ID pin for devices with OTG ports (e.g. Pi Zero).
  This matches a recent change to the Linux version of the driver (https://www.raspberrypi.org/forums/viewtopic.php?f=63&t=127003&start=50#p850028) and allows a plethora of non-OTG cables to be successfully used with the Pi Zero.
Admin:
  Tested on Raspberry Pi B, Pi Zero
  Changes supplied by Colin Granville/Chris Evans


Version 0.24. Tagged as 'DWCDriver-0_24'
@
text
@d1 1
a1 1
/* (0.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.24
d9 1
a9 1
#define Module_Date_CMHG                11 Dec 2015
d11 2
a12 2
#define Module_MajorVersion             "0.24"
#define Module_Version                  24
d14 1
a14 1
#define Module_Date                     "11 Dec 2015"
d16 1
a16 1
#define Module_ApplicationDate          "11-Dec-15"
d21 3
a23 3
#define Module_FullVersion              "0.24"
#define Module_HelpVersion              "0.24 (11 Dec 2015)"
#define Module_LibraryVersionInfo       "0:24"
@


1.24
log
@Don't build a veneer that points to nothing
Copy of the change in NetBSD-1_09.

Version 0.23. Tagged as 'DWCDriver-0_23'
@
text
@d1 1
a1 1
/* (0.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.23
d9 1
a9 1
#define Module_Date_CMHG                18 Nov 2015
d11 2
a12 2
#define Module_MajorVersion             "0.23"
#define Module_Version                  23
d14 1
a14 1
#define Module_Date                     "18 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "18-Nov-15"
d21 3
a23 3
#define Module_FullVersion              "0.23"
#define Module_HelpVersion              "0.23 (18 Nov 2015)"
#define Module_LibraryVersionInfo       "0:23"
@


1.23
log
@Init structures for DWCDriver unused members
Detail:
  Play safe, put NULLs in for the unused HC overrides


Version 0.22. Tagged as 'DWCDriver-0_22'
@
text
@d1 1
a1 1
/* (0.22)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.22
d9 1
a9 1
#define Module_Date_CMHG                15 Nov 2015
d11 2
a12 2
#define Module_MajorVersion             "0.22"
#define Module_Version                  22
d14 1
a14 1
#define Module_Date                     "15 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "15-Nov-15"
d21 3
a23 3
#define Module_FullVersion              "0.22"
#define Module_HelpVersion              "0.22 (15 Nov 2015)"
#define Module_LibraryVersionInfo       "0:22"
@


1.22
log
@Update to 'FIQ FSM' USB driver
Detail:
  Makefile, dwc/* - Updated to latest-ish code from Raspberry Pi github (rev c8baa9702c). Includes the 'FIQ FSM' USB driver, which replaces the older 'FIQ fix'. Note that many files appear to have no functional changes - just trailing whitespace removal to keep things in sync with github.
  Makefile - add DEBUGLIBS back into the debug libs listing to fix debug builds
  c/cmodule - Update to work with new FIQ FSM flags
  c/dwc_otg_riscos - Update to work with new FIQ FSM flags. Update initialisation procedure. Change IRQ handling to try both the HCD & CIL interrupt handlers (HCD can claim interrupt is handled when there's still a CIL interrupt pending). Disable support for falling back to IRQ if the FIQ vector is claimed by someone else - will need new implementation to cope with starting & stopping the FIQ FSM.
  s/regaccess - Update FIQ veneer & install routine to allow operation with either the dwc_otg_fiq_fsm or dwc_otg_fiq_nop functions.
Admin:
  Tested on Raspberry Pi 1 & 2


Version 0.21. Tagged as 'DWCDriver-0_21'
@
text
@d1 1
a1 1
/* (0.21)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.21
d9 1
a9 1
#define Module_Date_CMHG                07 Oct 2015
d11 2
a12 2
#define Module_MajorVersion             "0.21"
#define Module_Version                  21
d14 1
a14 1
#define Module_Date                     "07 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "07-Oct-15"
d21 3
a23 3
#define Module_FullVersion              "0.21"
#define Module_HelpVersion              "0.21 (07 Oct 2015)"
#define Module_LibraryVersionInfo       "0:21"
@


1.21
log
@Don't reach into USBDriver's back pocket
cmodule.c:
  Use USBDriver.h from interface exports
Makefile:
  Remove duplicated libs from debug build
  Remove relative reference to NetBSD component from VPATH
!MkDebug:
  Select debug target so the right compiler switches are used
Built, but not tested.

Version 0.20. Tagged as 'DWCDriver-0_20'
@
text
@d1 1
a1 1
/* (0.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.20
d9 1
a9 1
#define Module_Date_CMHG                21 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "0.20"
#define Module_Version                  20
d14 1
a14 1
#define Module_Date                     "21 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "21-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "0.20"
#define Module_HelpVersion              "0.20 (21 Aug 2015)"
#define Module_LibraryVersionInfo       "0:20"
@


1.20
log
@Fix error handling when transfers fail to start
Detail:
  c/softc_device - Fix softc_device_start() to call usb_transfer_complete() with the appropriate status code if a transfer fails to start - returning the status to the caller isn't enough. Also tweak debug output and add extra safety checks to timeout cancellation.
Admin:
  Tested on Raspberry Pi


Version 0.19. Tagged as 'DWCDriver-0_19'
@
text
@d1 1
a1 1
/* (0.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.19
d9 1
a9 1
#define Module_Date_CMHG                28 Mar 2015
d11 2
a12 2
#define Module_MajorVersion             "0.19"
#define Module_Version                  19
d14 1
a14 1
#define Module_Date                     "28 Mar 2015"
d16 1
a16 1
#define Module_ApplicationDate          "28-Mar-15"
d21 3
a23 3
#define Module_FullVersion              "0.19"
#define Module_HelpVersion              "0.19 (28 Mar 2015)"
#define Module_LibraryVersionInfo       "0:19"
@


1.19
log
@Build fix
Having updated the central 'usb.h' to include some of the more recent definitions this has created a clash here.
UHF_PORT_L1 isn't 5 according to the USB 2.0 spec, but since the only use of it in DWCDriver is wrapped in CONFIG_USB_DWC_OTG_LPM which isn't enabled in this port, just delete it.
UHF_C_PORT_L1 is now defined in 'usb.h', delete local copy.
UHF_PORT_HIGH_SPEED remains. In fact, it looks like the ported driver got confused when responding to GET_PORT_STATUS as it builds the status word out of bitmasks defined for hub feature manipulation (UHF) not port status (UPS) which are different number spaces. Oops.

Version 0.18. Tagged as 'DWCDriver-0_18'
@
text
@d1 1
a1 1
/* (0.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.18
d9 1
a9 1
#define Module_Date_CMHG                31 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.18"
#define Module_Version                  18
d14 1
a14 1
#define Module_Date                     "31 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "31-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.18"
#define Module_HelpVersion              "0.18 (31 Oct 2014)"
#define Module_LibraryVersionInfo       "0:18"
@


1.18
log
@Fix memory corruption caused by longer than expected IN packets
Detail:
  c/dwc_otg_riscos - Round all IO buffers out to a multiple of 512 bytes. This is a workaround for the way dwc_otg_hc_start_transfer rounds IN transfer request sizes up to a multiple of the max packet size (due to hardware limitations?). Without this workaround, we can easily get memory corruption if a device sends a short packet which is longer than we're expecting.
Admin:
  Tested on Raspberry Pi
  Believed to fix crashes seen when using some keyboards/mice:
  https://www.riscosopen.org/forum/forums/4/topics/2383?page=3#posts-33881


Version 0.17. Tagged as 'DWCDriver-0_17'
@
text
@d1 1
a1 1
/* (0.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.17
d9 1
a9 1
#define Module_Date_CMHG                18 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.17"
#define Module_Version                  17
d14 1
a14 1
#define Module_Date                     "18 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "18-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.17"
#define Module_HelpVersion              "0.17 (18 Oct 2014)"
#define Module_LibraryVersionInfo       "0:17"
@


1.17
log
@Enable part two of the FIQ fix
Detail:
  This enables support for the code which handles split transactions in the FIQ handler. This requires some extra logic to allow the FIQ handler to gracefully terminate its state machine when we need to release our hold on the FIQ vector.
  c/dwc_otg_riscos - Update FIQ claim/release functions to initialise and terminate fiq_split_enable. Make FIQ usage bools static const as nothing needs to change them at runtime.
  h/dwc_otg_riscos - Remove unused use_fiq_fix extern
  dwc/driver/c/dwc_otg_hcd_intr - Modify fiq_hcintr_handle() to allow for graceful termination - when terminating, suppress adding new xfers to the schedule and instead force the IRQ handler to deal with them
Admin:
  Tested on Raspberry Pi
  Thrashing Service_ClaimFIQ/Service_ReleaseFIQ didn't result in any obvious problems while split xfers were occuring


Version 0.16. Tagged as 'DWCDriver-0_16'
@
text
@d1 1
a1 1
/* (0.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.16
d9 1
a9 1
#define Module_Date_CMHG                08 Jul 2014
d11 2
a12 2
#define Module_MajorVersion             "0.16"
#define Module_Version                  16
d14 1
a14 1
#define Module_Date                     "08 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "08-Jul-14"
d21 3
a23 3
#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (08 Jul 2014)"
#define Module_LibraryVersionInfo       "0:16"
@


1.16
log
@Enable part one of the FIQ fix
Detail:
  This change enables the basic 'FIQ fix', where SOF interrupts are handled by a FIQ handler and all other interrupts are delegated to IRQ.
  During testing it was observed that when the FIQ fix was enabled, what appears to be the host-side VCHIQ process would randomly die. It could take anywhere from several seconds (including during ROM init) or several hours for this to happen.
  After much investigation it looks like the cause was the use of the MPHI peripheral as a mechanism to trigger an IRQ from the FIQ handler. Changing the code in dwc_otg_hcd_handle_intr() so that it 'flushes' MPHI more often (after every interrupt instead of after every 60) seemed to reduce the problem, while changing the IRQ generation mechanism to use a different IRQ source (e.g. timer) made the crash go away entirely
  In the end I've settled on the compromise of using the MPHI peripheral, but in a way in which we only need to poke it once on startup, instead of once for every desired IRQ. Once we have it generating an IRQ we then rely on masking/unmasking the IRQ in the interrupt controller to get the desired effect of downgrading FIQs to IRQs. See the RISCOS_FIQ_DOWNGRADE #define.
  Changed files:
  - c/cmodule - Use symbolic constant for the USB controller ID instead of a magic number. Get the MPHI details from HAL_USBControllerInfo. Pay attention to Service_ClaimFIQ/Service_ReleaseFIQ and enable/disable the FIQ fix as appropriate.
  - c/dwc_common_riscos - Disable some debug functions which were accidentally left in non-debug builds. Change work queue/tasklet thread initialisation to fix a deadlock issue seen on reboot.
  - c/dwc_otg_riscos - Set up the MPHI and enable/disable the FIQ handler as required
  - cmhg/modhead - Pay attention to Service_ClaimFIQ/Service_ReleaseFIQ
  - dwc/driver/c/dwc_otg_hcd_intr, dwc/driver/h/dwc_otg_mphi_fix - RISCOS_FIQ_DOWNGRADE code
  - dwc/dwc_common_port/h/dwc_os - Make sure __DWC_WARN, __DWC_ERROR, DWC_EXCEPTION are compiled out in non-debug builds
  - h/dwc_otg_riscos - declare extra functions/variables related to FIQ fix
  - s/regaccess - Routine to install the FIQ handler on the FIQ vector, and simple HAL call wrapper
Admin:
  Tested on Raspberry Pi
  Requires Kernel-5_35-4_79_2_227, BCM2835-0_34


Version 0.15. Tagged as 'DWCDriver-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d9 1
a9 1
#define Module_Date_CMHG                19 Jun 2014
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d14 1
a14 1
#define Module_Date                     "19 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jun-14"
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (19 Jun 2014)"
#define Module_LibraryVersionInfo       "0:15"
@


1.15
log
@Fix to allow building against NetBSD-0_85
Detail:
  c/cmodule - Don't use NetBSD/build/service.h, it no longer exists. Use the exported USB/USBDevFS.h instead. Fix service call reason codes to use USBDevFS names.
Admin:
  Tested in BCM2835 ROM build
  Build output is binary-identical to previous version
  Requires NetBSD-0_85


Version 0.14. Tagged as 'DWCDriver-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d9 1
a9 1
#define Module_Date_CMHG                01 Jun 2014
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d14 1
a14 1
#define Module_Date                     "01 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jun-14"
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (01 Jun 2014)"
#define Module_LibraryVersionInfo       "0:14"
@


1.14
log
@Missing va_end()'s added

Version 0.13. Tagged as 'DWCDriver-0_13'
@
text
@d1 1
a1 1
/* (0.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.13
d9 1
a9 1
#define Module_Date_CMHG                06 May 2014
d11 2
a12 2
#define Module_MajorVersion             "0.13"
#define Module_Version                  13
d14 1
a14 1
#define Module_Date                     "06 May 2014"
d16 1
a16 1
#define Module_ApplicationDate          "06-May-14"
d21 3
a23 3
#define Module_FullVersion              "0.13"
#define Module_HelpVersion              "0.13 (06 May 2014)"
#define Module_LibraryVersionInfo       "0:13"
@


1.13
log
@Remove unnecessary build dependence upon tboxlibint

Version 0.12. Tagged as 'DWCDriver-0_12'
@
text
@d1 1
a1 1
/* (0.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.12
d9 1
a9 1
#define Module_Date_CMHG                29 Apr 2014
d11 2
a12 2
#define Module_MajorVersion             "0.12"
#define Module_Version                  12
d14 1
a14 1
#define Module_Date                     "29 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "29-Apr-14"
d21 3
a23 3
#define Module_FullVersion              "0.12"
#define Module_HelpVersion              "0.12 (29 Apr 2014)"
#define Module_LibraryVersionInfo       "0:12"
@


1.12
log
@Update to latest code from Raspberry Pi github
Detail:
  Makefile, dwc/* - Updated to latest code from Raspberry Pi github (rev e0001dd59d). Includes the fabled 'FIQ fix' code, although the code isn't yet enabled in the RISC OS version of the driver.
  c/cmodule - Add extra flags for controlling driver behaviour, as required by the new core code
  c/dwc_otg_riscos - Add some missing driver parameters (although we leave them at default). Handle DWC_E_SHUTDOWN xfer errors, which will now be produced when the driver is shutting down
  c/softc_device - Disable interrupts around dwc_otg_hcd_urb_enqueue, to mirror behaviour of Linux code (previously, it was the responsibility of the DWC code to disable interrupts for the appropriate part of the operation)
  s/regaccess - Add some extra IRQ/memory barrier functions required by the new code (mainly the FIQ fix). Make DWC_MODIFY_REG32 operate atomicly (mirrors change in Linux version)
Admin:
  Tested on Raspberry Pi


Version 0.11. Tagged as 'DWCDriver-0_11'
@
text
@d1 1
a1 1
/* (0.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.11
d9 1
a9 1
#define Module_Date_CMHG                26 Apr 2014
d11 2
a12 2
#define Module_MajorVersion             "0.11"
#define Module_Version                  11
d14 1
a14 1
#define Module_Date                     "26 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "26-Apr-14"
d21 3
a23 3
#define Module_FullVersion              "0.11"
#define Module_HelpVersion              "0.11 (26 Apr 2014)"
#define Module_LibraryVersionInfo       "0:11"
@


1.11
log
@Fix hang on boot
Detail:
  c/cmodule - Add a re-entrancy check to USB driver initialisation; due to recent kernel changes we're now getting the "USBDriver has started" service call during the middle of our call to USBDriver_Register (called from our own initialisation callback). Without the re-entrancy check the system was getting confused and sending a duff transfer request to DWCDriver, resulting in a hang somewhere in the driver logic.
Admin:
  Tested on Raspberry Pi
  Machine no longer stops after "mod init done" is displayed


Version 0.10. Tagged as 'DWCDriver-0_10'
@
text
@d1 1
a1 1
/* (0.10)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.10
d9 1
a9 1
#define Module_Date_CMHG                30 Mar 2013
d11 2
a12 2
#define Module_MajorVersion             "0.10"
#define Module_Version                  10
d14 1
a14 1
#define Module_Date                     "30 Mar 2013"
d16 1
a16 1
#define Module_ApplicationDate          "30-Mar-13"
d21 3
a23 3
#define Module_FullVersion              "0.10"
#define Module_HelpVersion              "0.10 (30 Mar 2013)"
#define Module_LibraryVersionInfo       "0:10"
@


1.10
log
@Update to version 3.00 of DWC_otg
Detail:
  This big batch of changes brings us in line with rev 70428950df of the Raspberry Pi Linux github.
  Briefly:
  * Deleted HTML docs as they're a waste of space
  * Dropped the SOF fix (which we never used anyway)
  * Dropped our implementation of the microframe scheduling patch, in favour of their implementation
  * Updated to version 3.00 of the DWC sources. Hard to tell what useful changes this brings, due to API tweaks resulting in pretty much every file being littered with changes.
Admin:
  Tested on Raspberry Pi with high processor vectors
  This new version seems like it might be a bit more sensitive to insufficient power supplies. Beware!


Version 0.09. Tagged as 'DWCDriver-0_09'
@
text
@d1 1
a1 1
/* (0.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.09
d9 1
a9 1
#define Module_Date_CMHG                17 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.09"
#define Module_Version                  9
d14 1
a14 1
#define Module_Date                     "17 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "17-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.09"
#define Module_HelpVersion              "0.09 (17 Sep 2012)"
#define Module_LibraryVersionInfo       "0:9"
@


1.9
log
@Fix aborts on reset/*rmkill USBDriver
Detail:
  c/cmodule, cmhg/modhead - Don't shutdown DWC layer during Service_USBDriver_Dying. Instead, only do it during Service_ModulePostFinal/Service_PreReset(/module finialisation). Also during Service_PreReset, deregister with USBDriver. This ensures we're deregistered with USBDriver before we shut down the DWC layer, and so don't have to worry about receiving events from USBDriver after the DWC layer is shut down.
  c/dwc_common_riscos, c/dwc_otg_riscos, h/dwc_common_riscos - Improve handling of DWC endpoint disable callbacks. The memory block for the endpoint now has a flag set in its header when a callback is pending, allowing us to avoid double-free situations if both ourselves and the DWC layer decide to free the endpoint.
  c/softc_root - Correct some debug messages
  dwc/driver/c/dwc_otg_hcd - Fix qh_list_free to use DWC_LIST_FOREACH_SAFE (as dwc_otg_hcd_qh_remove_and_free will remove entries from the list) - fixes potential double-free if a non-empty list is being freed
  dwc/driver/c/dwc_otg_hcd_intr - Fix building of debug builds
Admin:
  Tested in Pi ROM with high processor vectors
  Resets and killing/reiniting USBDriver now works properly


Version 0.08. Tagged as 'DWCDriver-0_08'
@
text
@d1 1
a1 1
/* (0.08)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.08
d9 1
a9 1
#define Module_Date_CMHG                04 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.08"
#define Module_Version                  8
d14 1
a14 1
#define Module_Date                     "04 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "04-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.08"
#define Module_HelpVersion              "0.08 (04 Aug 2012)"
#define Module_LibraryVersionInfo       "0:8"
@


1.8
log
@Fix mutex implementation
Detail:
  c/dwc_common_riscos - Mutex lock/trylock functions had defective logic that would have resulted in them ignoring the lock state of the mutex and claiming it while it was still in use by another thread.
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.07. Tagged as 'DWCDriver-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.07
d9 1
a9 1
#define Module_Date_CMHG                02 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d14 1
a14 1
#define Module_Date                     "02 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (02 Aug 2012)"
#define Module_LibraryVersionInfo       "0:7"
@


1.7
log
@Incorporate patch to add support for scheduling of transfers on a per-microframe basis
Detail:
  Makefile, dwc/driver/c/dwc_otg_hcd, dwc/driver/c/dwc_otg_hcd_intr, dwc/driver/c/dwc_otg_hcd_queue, dwc/driver/h/dwc_otg_hcd - Adapted the microframe scheduling patch at http://git.denx.de/?p=linux-denx.git;a=commit;h=9796e39e7a513d8a4acde759ec5d0023645143d8 to work with our newer version of the DWC driver. Enabled by SCHEDULE_PATCH #define.
  dwc/driver/c/dwc_otg_hcd_ddma - Fix up descriptor DMA support to compile (but not run properly) when the scheduling patch is active
  dwc/dwc_common_port/h/dwc_os - Provide local_irq_save() and local_irq_restore() implementations, as used by the scheduling patch
Admin:
  Tested on Raspberry Pi with high processor vectors
  Appears to fix problems with devices becoming unresponsive once too many periodic transfers are active (e.g. too many interrupt pipes open)


Version 0.06. Tagged as 'DWCDriver-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                22 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "22 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (22 Jul 2012)"
#define Module_LibraryVersionInfo       "0:6"
@


1.6
log
@Track latest developments on Raspberry Pi github
Detail:
  Makefile, c/cmodule, h/module, dwc/driver/c/dwc_otg_driver, dwc/driver/c/dwc_otg_hcd, dwc/driver/c/dwc_otg_hcd_ddma, dwc/driver/c/dwc_otg_hcd_intr, dwc/driver/c/dwc_otg_hcd_linex, dwc/driver/h/dwc_otg_hcd, dwc/dwc_common_port/c/dwc_common_linux - Track latest developments on Raspberry Pi github. Includes fixes for buffer overruns when unexpectedly receiving too much data, and changes to allow SOF interrupt spam to be reduced.
  c/dwc_common_riscos - Make sure we always round up delay values when converting from msec to csec. Avoids issues with high frequency timers (e.g. SOF re-enable timer) hogging all the CPU time. May be the cause of some other bad behaviour that I've experienced in the past?
Admin:
  Tested on Raspberry Pi with high processor vectors
  Note - SOF fix is currently disabled, as it was causing too many interrupt packets (e.g. mouse clicks) to be lost. Probable cause is that we're running the SOF re-enable timer at 100Hz instead of 1kHz. May be worth investigating moving all timer/thread scheduling over to a HAL timer which can provide us a 1kHz ticker interrupt.


Version 0.05. Tagged as 'DWCDriver-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d9 1
a9 1
#define Module_Date_CMHG                21 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d14 1
a14 1
#define Module_Date                     "21 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "21-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (21 Jul 2012)"
#define Module_LibraryVersionInfo       "0:5"
@


1.5
log
@Update to latest code from Raspberry Pi github. Improve debugging. Fix race condition that could lead to timeout callbacks inappropriately firing.
Detail:
  Makefile, dwc/* - Updated to latest code from Raspberry Pi github. Tweaks specific to Broadcom hardware have been placed in BCM2835 #ifdef's to allow them to easily be identified/controlled if we need the driver to support different SoCs in future
  c/cmodule, c/dwc_common_riscos, c/port, c/softc_device, h/cmodule - Improved debugging code
  c/softc_device - Schedule timeout before starting transfer instead of after. Fixes issue where a transfer that completes inbetween dwc_otg_hcd_urb_enqueue() and callout_reset() would result in the timeout being enabled even though the transfer is already complete
  s/triggercbs - Synced with latest USBDriver version for consistency
Admin:
  Tested on Raspberry Pi with high processor vectors
  Fixes some, if not all, stability issues


Version 0.04. Tagged as 'DWCDriver-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                24 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "24 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (24 Jun 2012)"
#define Module_LibraryVersionInfo       "0:4"
@


1.4
log
@Add memory barriers to register reads/writes. Reduce frequency of memory allocations.
Detail:
  s/regaccess - New file containing assembler register access routines, with memory barriers to protect against the BCM2835 AXI bus returning device loads out-of-order
  Makefile, dwc/dwc_common_port/h/dwc_os - Updated to use register access functions instead of inline code
  c/dwc_common_riscos - Added a simple bucket-and-chain data structure to dwc_alloc/dwc_free, to collect free memory blocks and allow them to be reused later, to reduce the load on the heap manager.
Admin:
  Tested in BCM2835 ROM


Version 0.03. Tagged as 'DWCDriver-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d9 1
a9 1
#define Module_Date_CMHG                15 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d14 1
a14 1
#define Module_Date                     "15 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (15 Jun 2012)"
#define Module_LibraryVersionInfo       "0:3"
@


1.3
log
@Misc housekeeping
Detail:
  Makefile, !MkDebug,fd7 - Debug version of module can now be built just be passing "DEBUG=TRUE" to amu
  c/cmodule - Only accept USB controllers if HAL_USBControllerInfo says the struct size is an exact match with what we expect
  c/dwc_otg_riscos - Remove incorrect comment; both dwc_dma_alloc and malloc_contig zero memory
  s/bufman - Delete unused file
  s/call_veneer, s/triggercbs - Use Entry/EXIT macros to avoid single-reg LDM/STM performance warnings. Convert tabs to spaces.
Admin:
  Tested in BCM2835 ROM


Version 0.02. Tagged as 'DWCDriver-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                07 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "07 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (07 Jun 2012)"
#define Module_LibraryVersionInfo       "0:2"
@


1.2
log
@Add initial version of DWCDriver - USB driver for Synopsys DWC OTG controllers
Detail:
  A fairly simple wrapper for Synopsys's open source "DWC_otg" Linux driver, based around a GPL-free version of the DWC_otg 2.90a sources received from the Raspberry Pi foundation.
  Instead of interfacing with the Linux USB stack a new host interface layer has been implemented to allow it to talk to the standard BSD-derived RISC OS stack.
  RTSupport is used to provide the threading functionality that the DWC driver relies upon.
  Interesting files:
  - c/cmodule, h/cmodule - Main module frontend
  - c/dwc_common_riscos, h/dwc_common_riscos - Implementation of the OS support layer required by the DWC driver
  - c/dwc_otg_riscos, h/dwc_otg_riscos - Core code for the BSD driver implementation, driver init/shutdown, and for handling calls from the DWC host driver to us
  - c/port - Some support functions required by BSD-style code inherited from the other USB drivers
  - c/softc_device - Code to handle requests from the BSD layer to attached USB devices
  - c/softc_root - Code to handle requests from the BSD layer to the controller root hub
  - dwc/doc/* - Original Synopsys release notes & user guide pdfs
  - dwc/driver/*, dwc/dwc_common_port/* - Synopsys code and documentation. A few tweaks were required to allow it to compile under Norcroft, but otherwise it's functionally equivalent to the original sources.
Admin:
  Tested in BCM2835 ROM
  There are a few loose ends still to tidy up (search for "DWCTODO"), mainly regarding implementation of Isochronous support, but otherwise the driver seems stable enough for daily use.


Version 0.01. Tagged as 'DWCDriver-0_01'
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                03 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "03 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (03 Jun 2012)"
#define Module_LibraryVersionInfo       "0:1"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.00)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.00
d11 2
a12 2
#define Module_MajorVersion             "0.00"
#define Module_Version                  0
d21 3
a23 3
#define Module_FullVersion              "0.00"
#define Module_HelpVersion              "0.00 (03 Jun 2012)"
#define Module_LibraryVersionInfo       "0:0"
@

