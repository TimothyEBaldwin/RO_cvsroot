head	1.3;
access;
symbols
	DWCDriver-0_35:1.3
	DWCDriver-0_34:1.3
	DWCDriver-0_33:1.3
	DWCDriver-0_32:1.3
	DWCDriver-0_31:1.3
	DWCDriver-0_30:1.3
	DWCDriver-0_29:1.3
	DWCDriver-0_28:1.3
	DWCDriver-0_27:1.3
	DWCDriver-0_26:1.3
	DWCDriver-0_24-1:1.3
	DWCDriver-0_25:1.3
	DWCDriver-0_24:1.3
	DWCDriver-0_23:1.3
	DWCDriver-0_22:1.3
	DWCDriver-0_21:1.3
	DWCDriver-0_20:1.3
	DWCDriver-0_19:1.3
	DWCDriver-0_18:1.3
	DWCDriver-0_17:1.3
	DWCDriver-0_16:1.3
	DWCDriver-0_15:1.3
	DWCDriver-0_14:1.3
	DWCDriver-0_13:1.3
	DWCDriver-0_12:1.3
	DWCDriver-0_11:1.3
	DWCDriver-0_10:1.3
	DWCDriver-0_09:1.3
	DWCDriver-0_08:1.3
	DWCDriver-0_07:1.3
	DWCDriver-0_06:1.3
	DWCDriver-0_05:1.3
	DWCDriver-0_04:1.3
	DWCDriver-0_03:1.2
	DWCDriver-0_02:1.2
	DWCDriver-0_01:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.06.24.21.42.07;	author jlee;	state Exp;
branches;
next	1.2;
commitid	7BXP9gA386QIu0aw;

1.2
date	2012.06.06.23.46.51;	author jlee;	state Exp;
branches;
next	1.1;
commitid	BGSuwmc37QAuLH7w;

1.1
date	2012.06.03.15.14.41;	author jlee;	state Exp;
branches;
next	;
commitid	ZZ9X1FvMWAU11h7w;


desc
@@


1.3
log
@Update to latest code from Raspberry Pi github. Improve debugging. Fix race condition that could lead to timeout callbacks inappropriately firing.
Detail:
  Makefile, dwc/* - Updated to latest code from Raspberry Pi github. Tweaks specific to Broadcom hardware have been placed in BCM2835 #ifdef's to allow them to easily be identified/controlled if we need the driver to support different SoCs in future
  c/cmodule, c/dwc_common_riscos, c/port, c/softc_device, h/cmodule - Improved debugging code
  c/softc_device - Schedule timeout before starting transfer instead of after. Fixes issue where a transfer that completes inbetween dwc_otg_hcd_urb_enqueue() and callout_reset() would result in the timeout being enabled even though the transfer is already complete
  s/triggercbs - Synced with latest USBDriver version for consistency
Admin:
  Tested on Raspberry Pi with high processor vectors
  Fixes some, if not all, stability issues


Version 0.04. Tagged as 'DWCDriver-0_04'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

; trigger callbacks by calling OS_LeaveOS and OS_EnterOS

        GET     Hdr:ListOpts
        OPT     OptNoList
        GET     Hdr:PublicWS
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:OSRSI6
        GET     Hdr:Proc

        AREA    |C$$data|, DATA
ptr_IRQsema
        DCD     0   ; Cached IRQsema ptr

        AREA    |C$$code|, CODE, READONLY

        EXPORT  get_ptr_IRQsema
get_ptr_IRQsema
        LDR     r1, [sl,#-536]       ; Get relocation
        LDR     r3, =ptr_IRQsema
        LDR     r0, [r3, r1]!
        CMP     r0, #0
        MOVNE   pc, lr
        MOV     r0, #6
        MOV     r1, #0
        MOV     r2, #OSRSI6_IRQsema
        MOV     ip, lr
        SWI     XOS_ReadSysInfo
        MOVVS   r2, #0
        MOVS    r0, r2
        MOVEQ   r0, #Legacy_IRQsema
        STR     r0, [r3]
        MOV     pc, ip

        EXPORT  triggercbs
triggercbs
        Entry
        BL      get_ptr_IRQsema
        LDR     lr, [r0]
        MOVS    lr, lr
        EXIT    NE                   ; NZ is within IRQ.. so no CB allowed
        SWI     OS_LeaveOS
        SWI     OS_EnterOS
        EXIT

        LTORG

        END
@


1.2
log
@Misc housekeeping
Detail:
  Makefile, !MkDebug,fd7 - Debug version of module can now be built just be passing "DEBUG=TRUE" to amu
  c/cmodule - Only accept USB controllers if HAL_USBControllerInfo says the struct size is an exact match with what we expect
  c/dwc_otg_riscos - Remove incorrect comment; both dwc_dma_alloc and malloc_contig zero memory
  s/bufman - Delete unused file
  s/call_veneer, s/triggercbs - Use Entry/EXIT macros to avoid single-reg LDM/STM performance warnings. Convert tabs to spaces.
Admin:
  Tested in BCM2835 ROM


Version 0.02. Tagged as 'DWCDriver-0_02'
@
text
@d32 3
a34 3
        EXPORT  triggercbs
triggercbs
        Entry
d36 3
a38 5
        LDR     r1, [sl,#-536]       ; Get relocation
        ADD     r3, r3, r1
        LDR     r2, [r3]
        CMP     r2, #0
        BNE     %FT10
d42 1
d45 10
a54 5
        CMP     r2, #0
        MOVEQ   r2, #Legacy_IRQsema
        STR     r2, [r3]
10
        LDR     lr, [r2]
@


1.1
log
@Add initial version of DWCDriver - USB driver for Synopsys DWC OTG controllers
Detail:
  A fairly simple wrapper for Synopsys's open source "DWC_otg" Linux driver, based around a GPL-free version of the DWC_otg 2.90a sources received from the Raspberry Pi foundation.
  Instead of interfacing with the Linux USB stack a new host interface layer has been implemented to allow it to talk to the standard BSD-derived RISC OS stack.
  RTSupport is used to provide the threading functionality that the DWC driver relies upon.
  Interesting files:
  - c/cmodule, h/cmodule - Main module frontend
  - c/dwc_common_riscos, h/dwc_common_riscos - Implementation of the OS support layer required by the DWC driver
  - c/dwc_otg_riscos, h/dwc_otg_riscos - Core code for the BSD driver implementation, driver init/shutdown, and for handling calls from the DWC host driver to us
  - c/port - Some support functions required by BSD-style code inherited from the other USB drivers
  - c/softc_device - Code to handle requests from the BSD layer to attached USB devices
  - c/softc_root - Code to handle requests from the BSD layer to the controller root hub
  - dwc/doc/* - Original Synopsys release notes & user guide pdfs
  - dwc/driver/*, dwc/dwc_common_port/* - Synopsys code and documentation. A few tweaks were required to allow it to compile under Norcroft, but otherwise it's functionally equivalent to the original sources.
Admin:
  Tested in BCM2835 ROM
  There are a few loose ends still to tidy up (search for "DWCTODO"), mainly regarding implementation of Isochronous support, but otherwise the driver seems stable enough for daily use.


Version 0.01. Tagged as 'DWCDriver-0_01'
@
text
@d24 1
d34 1
a34 1
        stmfd   r13!, {lr}
d52 1
a52 1
        LDMNEFD r13!,{pc}            ; NZ is within IRQ.. so no CB allowed
d55 1
a55 1
        ldmfd   r13!,{pc}
@

