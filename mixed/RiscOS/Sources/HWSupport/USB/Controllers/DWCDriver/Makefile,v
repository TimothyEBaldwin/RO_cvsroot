head	1.14;
access;
symbols
	DWCDriver-0_35:1.14
	DWCDriver-0_34:1.14
	DWCDriver-0_33:1.14
	DWCDriver-0_32:1.14
	DWCDriver-0_31:1.13
	DWCDriver-0_30:1.12
	DWCDriver-0_29:1.11
	DWCDriver-0_28:1.10
	DWCDriver-0_27:1.10
	DWCDriver-0_26:1.10
	DWCDriver-0_24-1:1.10
	DWCDriver-0_25:1.10
	DWCDriver-0_24:1.10
	DWCDriver-0_23:1.10
	DWCDriver-0_22:1.10
	DWCDriver-0_21:1.10
	DWCDriver-0_20:1.9
	DWCDriver-0_19:1.8
	DWCDriver-0_18:1.8
	DWCDriver-0_17:1.8
	DWCDriver-0_16:1.8
	DWCDriver-0_15:1.8
	DWCDriver-0_14:1.8
	DWCDriver-0_13:1.8
	DWCDriver-0_12:1.8
	DWCDriver-0_11:1.8
	DWCDriver-0_10:1.7
	DWCDriver-0_09:1.7
	DWCDriver-0_08:1.6
	DWCDriver-0_07:1.6
	DWCDriver-0_06:1.6
	DWCDriver-0_05:1.5
	DWCDriver-0_04:1.4
	DWCDriver-0_03:1.3
	DWCDriver-0_02:1.2
	DWCDriver-0_01:1.1;
locks; strict;
comment	@# @;


1.14
date	2017.09.19.20.28.38;	author rool;	state Exp;
branches;
next	1.13;
commitid	wjT6lLDJh1HeBQ7A;

1.13
date	2017.08.19.14.44.00;	author rool;	state Exp;
branches;
next	1.12;
commitid	x9oSeOeS3LFMGP3A;

1.12
date	2017.07.15.09.08.15;	author rool;	state Exp;
branches;
next	1.11;
commitid	QvTf5FFso5wmXiZz;

1.11
date	2016.12.17.10.22.11;	author rool;	state Exp;
branches;
next	1.10;
commitid	cEIxPCqCTT2e7kyz;

1.10
date	2015.10.07.20.59.43;	author jlee;	state Exp;
branches;
next	1.9;
commitid	qck3WWYzKpNMGdEy;

1.9
date	2015.08.21.20.05.19;	author rsprowson;	state Exp;
branches;
next	1.8;
commitid	LQa6fu9V2RLPTayy;

1.8
date	2014.04.26.18.17.55;	author jlee;	state Exp;
branches;
next	1.7;
commitid	3PdzN60cJJ3zNdyx;

1.7
date	2012.09.17.16.32.46;	author jlee;	state Exp;
branches;
next	1.6;
commitid	DXVFy2WJjyak3Ukw;

1.6
date	2012.07.22.00.08.48;	author jlee;	state Exp;
branches;
next	1.5;
commitid	m2n7BnxI1winrudw;

1.5
date	2012.07.21.19.22.45;	author jlee;	state Exp;
branches;
next	1.4;
commitid	5Kpl2qWWr4efRsdw;

1.4
date	2012.06.24.21.41.44;	author jlee;	state Exp;
branches;
next	1.3;
commitid	7BXP9gA386QIu0aw;

1.3
date	2012.06.15.00.09.05;	author jlee;	state Exp;
branches;
next	1.2;
commitid	5whdJrlaDMQcDJ8w;

1.2
date	2012.06.06.23.46.45;	author jlee;	state Exp;
branches;
next	1.1;
commitid	BGSuwmc37QAuLH7w;

1.1
date	2012.06.03.15.12.46;	author jlee;	state Exp;
branches;
next	;
commitid	ZZ9X1FvMWAU11h7w;


desc
@@


1.14
log
@Remove some part finished HAL support
Detail:
  A few sections of code guarded by USBHAL defines carried over from MUSBDriver, but were never finished due to the complexity of DWCDriver.
  These are no longer needed now the kernel scans for keys, so remove them.
Admin:
  Couple of warnings in cmodule.c also attended to.
  Submission for USB bounty.

Version 0.32. Tagged as 'DWCDriver-0_32'
@
text
@# Copyright 2012 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for Synopsys DWC driver
#
# $Id: Makefile,v 1.12 2017/07/15 09:08:15 rool Exp $

COMPONENT       = DWCDriver
RES_AREA        = resource_files
OBJS            = cmodule call_veneer triggercbs dwc_common_riscos dwc_otg_riscos softc_root softc_device port regaccess
LIBS            = ${CALLXLIB} ${ASMUTILS} ${TBOXINTLIB}
CMHGFILE        = modhead
HDRS            =

#
# Debug switch
#
DEBUG ?= FALSE
ifeq (${DEBUG},TRUE)
CFLAGS         += -DDEBUGLIB -DDWCDRIVER_DEBUG -DDEBUG -DUSB_DEBUG
CMHGDEFINES    += -DDWCDRIVER_DEBUG
LIBS           += ${DEBUGLIBS} ${NET5LIBS}
endif

CFLAGS          += -wp -wc
CDEFINES        += -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED
ROMCDEFINES     = -DROM
CINCLUDES       = -ITCPIPLibs:,C:USB,OS:
CMHGDEPENDS     = cmodule dwc_otg_riscos softc_root softc_device

VPATH = dwc.driver dwc.dwc_common_port

# DWC bits
CFLAGS += -DDWC_EN_ISOC -Idwc.dwc_common_port -DDWC_HOST_ONLY
CFLAGS += -Dnotrace= -Dnoinline=
OBJS += dwc_otg_cil dwc_otg_cil_intr dwc_otg_hcd dwc_otg_hcd_intr dwc_otg_hcd_queue dwc_otg_hcd_ddma dwc_otg_adp dwc_otg_fiq_fsm
# OBJS += dwc_cc dwc_modpow dwc_notifier dwc_mem

# Use this flag to enable Broadcom SoC/BCM2835-specific changes
CFLAGS += -DBCM2835

include CModule

# Dynamic dependencies:
@


1.13
log
@Changes to header imports
Detail:
  Use those in C:USB rather than reaching inside the adjacent USBDriver.
Admin:
  Requires USBDriver-1_21.

Version 0.31. Tagged as 'DWCDriver-0_31'
@
text
@a21 1
OBJS_HAL        = o_hal.musb o_hal.musb_peri o_hal.musb_root o_hal.musb_usb o_hal.musb_util o_hal.tps o_hal.musb_hal
a24 2
USBDIR          = <Lib$Dir>.USB
CUSTOMEXP       = custom
a39 1
CMHGDEFINES    += -DCOMPONENT=${COMPONENT}
a40 1
LDFLAGS         = -Symbols rm.sym${TARGET}
a54 24
${DIRS}::
        ${MKDIR} o_hal

clean::
        @@IfThere o_hal  Then ${ECHO} ${WIPE} o_hal ${WFLAGS}
        @@IfThere o_hal  Then ${WIPE} o_hal ${WFLAGS}

export: export_${PHASE}

export_hdrs:
        @@${NOP}

export_libs: ${USBDIR}.o.${COMPONENT}
        @@echo ${COMPONENT}: export complete (libs)

# HAL libraries:
.SUFFIXES: .o_hal
.c.o_hal:; ${CC} -APCS 3/nofp/noswst -wp -ff -DUSBHAL -c -depend !Depend -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED ${CINCLUDES} ${THROWBACK} -o $@@ $<
.s.o_hal:; ${AS} ${ASFLAGS} -APCS 3/nofp/noswst -o $@@ $<

${USBDIR}.o.${COMPONENT}: ${OBJS_HAL} ${DIRS}
        ${MKDIR} ${USBDIR}.o
        ${AR} ${ARFLAGS} ${USBDIR}.o.${COMPONENT} ${OBJS_HAL}

@


1.12
log
@Repoint include path
Admin:
  Reach into USBDriver rather than NetBSD.

Version 0.30. Tagged as 'DWCDriver-0_30'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.11 2016/12/17 10:22:11 rool Exp $
d42 1
a42 1
CINCLUDES       = -ITCPIPLibs:,^.^.USBDriver.,OS:
@


1.11
log
@Internationalised
Detail:
  Add support for standalone messages registration, and actually use the messages rather than just exporting them in ROM builds.
  Changed to use allocated error bases rather than 0.
  Sync controller hunting loop with other HC for ease of comparison.
Admin:
  Submission for USB bounty.
  Tested on a Pi 2.

Version 0.29. Tagged as 'DWCDriver-0_29'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.10 2015/10/07 20:59:43 jlee Exp $
d42 1
a42 1
CINCLUDES       = -ITCPIPLibs:,^.^.NetBSD.,OS:
@


1.10
log
@Update to 'FIQ FSM' USB driver
Detail:
  Makefile, dwc/* - Updated to latest-ish code from Raspberry Pi github (rev c8baa9702c). Includes the 'FIQ FSM' USB driver, which replaces the older 'FIQ fix'. Note that many files appear to have no functional changes - just trailing whitespace removal to keep things in sync with github.
  Makefile - add DEBUGLIBS back into the debug libs listing to fix debug builds
  c/cmodule - Update to work with new FIQ FSM flags
  c/dwc_otg_riscos - Update to work with new FIQ FSM flags. Update initialisation procedure. Change IRQ handling to try both the HCD & CIL interrupt handlers (HCD can claim interrupt is handled when there's still a CIL interrupt pending). Disable support for falling back to IRQ if the FIQ vector is claimed by someone else - will need new implementation to cope with starting & stopping the FIQ FSM.
  s/regaccess - Update FIQ veneer & install routine to allow operation with either the dwc_otg_fiq_fsm or dwc_otg_fiq_nop functions.
Admin:
  Tested on Raspberry Pi 1 & 2


Version 0.21. Tagged as 'DWCDriver-0_21'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.9 2015/08/21 20:05:19 rsprowson Exp $
d20 1
a20 1
RES_OBJ         = msgs
d23 1
a23 1
LIBS            = ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
d41 2
a42 1
CINCLUDES       = -Itbox:,TCPIPLibs:,^.^.NetBSD.,OS:
@


1.9
log
@Don't reach into USBDriver's back pocket
cmodule.c:
  Use USBDriver.h from interface exports
Makefile:
  Remove duplicated libs from debug build
  Remove relative reference to NetBSD component from VPATH
!MkDebug:
  Select debug target so the right compiler switches are used
Built, but not tested.

Version 0.20. Tagged as 'DWCDriver-0_20'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.8 2014/04/26 18:17:55 jlee Exp $
d36 1
a36 1
LIBS           += ${NET5LIBS}
d50 2
a51 2
CFLAGS += -Dnotrace=
OBJS += dwc_otg_cil dwc_otg_cil_intr dwc_otg_hcd dwc_otg_hcd_intr dwc_otg_hcd_queue dwc_otg_hcd_ddma dwc_otg_adp
@


1.8
log
@Update to latest code from Raspberry Pi github
Detail:
  Makefile, dwc/* - Updated to latest code from Raspberry Pi github (rev e0001dd59d). Includes the fabled 'FIQ fix' code, although the code isn't yet enabled in the RISC OS version of the driver.
  c/cmodule - Add extra flags for controlling driver behaviour, as required by the new core code
  c/dwc_otg_riscos - Add some missing driver parameters (although we leave them at default). Handle DWC_E_SHUTDOWN xfer errors, which will now be produced when the driver is shutting down
  c/softc_device - Disable interrupts around dwc_otg_hcd_urb_enqueue, to mirror behaviour of Linux code (previously, it was the responsibility of the DWC code to disable interrupts for the appropriate part of the operation)
  s/regaccess - Add some extra IRQ/memory barrier functions required by the new code (mainly the FIQ fix). Make DWC_MODIFY_REG32 operate atomicly (mirrors change in Linux version)
Admin:
  Tested on Raspberry Pi


Version 0.11. Tagged as 'DWCDriver-0_11'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.7 2012/09/17 16:32:46 jlee Exp $
d36 1
a36 1
LIBS           += ${DEBUGLIBS} ${NET5LIBS}
d46 1
a46 1
VPATH = ^.^.build ^.^.dev.usb dwc.driver dwc.dwc_common_port
@


1.7
log
@Update to version 3.00 of DWC_otg
Detail:
  This big batch of changes brings us in line with rev 70428950df of the Raspberry Pi Linux github.
  Briefly:
  * Deleted HTML docs as they're a waste of space
  * Dropped the SOF fix (which we never used anyway)
  * Dropped our implementation of the microframe scheduling patch, in favour of their implementation
  * Updated to version 3.00 of the DWC sources. Hard to tell what useful changes this brings, due to API tweaks resulting in pretty much every file being littered with changes.
Admin:
  Tested on Raspberry Pi with high processor vectors
  This new version seems like it might be a bit more sensitive to insufficient power supplies. Beware!


Version 0.09. Tagged as 'DWCDriver-0_09'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.6 2012/07/22 00:08:48 jlee Exp $
d50 1
@


1.6
log
@Incorporate patch to add support for scheduling of transfers on a per-microframe basis
Detail:
  Makefile, dwc/driver/c/dwc_otg_hcd, dwc/driver/c/dwc_otg_hcd_intr, dwc/driver/c/dwc_otg_hcd_queue, dwc/driver/h/dwc_otg_hcd - Adapted the microframe scheduling patch at http://git.denx.de/?p=linux-denx.git;a=commit;h=9796e39e7a513d8a4acde759ec5d0023645143d8 to work with our newer version of the DWC driver. Enabled by SCHEDULE_PATCH #define.
  dwc/driver/c/dwc_otg_hcd_ddma - Fix up descriptor DMA support to compile (but not run properly) when the scheduling patch is active
  dwc/dwc_common_port/h/dwc_os - Provide local_irq_save() and local_irq_restore() implementations, as used by the scheduling patch
Admin:
  Tested on Raspberry Pi with high processor vectors
  Appears to fix problems with devices becoming unresponsive once too many periodic transfers are active (e.g. too many interrupt pipes open)


Version 0.06. Tagged as 'DWCDriver-0_06'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.5 2012/07/21 19:22:45 jlee Exp $
d50 2
a51 2
OBJS += dwc_otg_cil dwc_otg_cil_intr dwc_otg_hcd dwc_otg_hcd_intr dwc_otg_hcd_queue dwc_otg_hcd_ddma
OBJS += dwc_cc dwc_modpow dwc_notifier dwc_mem
a55 6
# Use this flag to reduce SOF interrupt service overhead
#CFLAGS += -DSOF_FIX

# Use this flag to enable the microframe scheduling patch. Note - will break controllers that use descriptor DMA
CFLAGS += -DSCHEDULE_PATCH 

@


1.5
log
@Track latest developments on Raspberry Pi github
Detail:
  Makefile, c/cmodule, h/module, dwc/driver/c/dwc_otg_driver, dwc/driver/c/dwc_otg_hcd, dwc/driver/c/dwc_otg_hcd_ddma, dwc/driver/c/dwc_otg_hcd_intr, dwc/driver/c/dwc_otg_hcd_linex, dwc/driver/h/dwc_otg_hcd, dwc/dwc_common_port/c/dwc_common_linux - Track latest developments on Raspberry Pi github. Includes fixes for buffer overruns when unexpectedly receiving too much data, and changes to allow SOF interrupt spam to be reduced.
  c/dwc_common_riscos - Make sure we always round up delay values when converting from msec to csec. Avoids issues with high frequency timers (e.g. SOF re-enable timer) hogging all the CPU time. May be the cause of some other bad behaviour that I've experienced in the past?
Admin:
  Tested on Raspberry Pi with high processor vectors
  Note - SOF fix is currently disabled, as it was causing too many interrupt packets (e.g. mouse clicks) to be lost. Probable cause is that we're running the SOF re-enable timer at 100Hz instead of 1kHz. May be worth investigating moving all timer/thread scheduling over to a HAL timer which can provide us a 1kHz ticker interrupt.


Version 0.05. Tagged as 'DWCDriver-0_05'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.4 2012/06/24 21:41:44 jlee Exp $
d49 1
a49 1
CFLAGS += -DDWC_EN_ISOC -Idwc.dwc_common_port -DDWC_HOST_ONLY -DBCM2835
d53 3
d59 3
@


1.4
log
@Update to latest code from Raspberry Pi github. Improve debugging. Fix race condition that could lead to timeout callbacks inappropriately firing.
Detail:
  Makefile, dwc/* - Updated to latest code from Raspberry Pi github. Tweaks specific to Broadcom hardware have been placed in BCM2835 #ifdef's to allow them to easily be identified/controlled if we need the driver to support different SoCs in future
  c/cmodule, c/dwc_common_riscos, c/port, c/softc_device, h/cmodule - Improved debugging code
  c/softc_device - Schedule timeout before starting transfer instead of after. Fixes issue where a transfer that completes inbetween dwc_otg_hcd_urb_enqueue() and callout_reset() would result in the timeout being enabled even though the transfer is already complete
  s/triggercbs - Synced with latest USBDriver version for consistency
Admin:
  Tested on Raspberry Pi with high processor vectors
  Fixes some, if not all, stability issues


Version 0.04. Tagged as 'DWCDriver-0_04'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.3 2012/06/15 00:09:05 jlee Exp $
d53 3
@


1.3
log
@Add memory barriers to register reads/writes. Reduce frequency of memory allocations.
Detail:
  s/regaccess - New file containing assembler register access routines, with memory barriers to protect against the BCM2835 AXI bus returning device loads out-of-order
  Makefile, dwc/dwc_common_port/h/dwc_os - Updated to use register access functions instead of inline code
  c/dwc_common_riscos - Added a simple bucket-and-chain data structure to dwc_alloc/dwc_free, to collect free memory blocks and allow them to be reused later, to reduce the load on the heap manager.
Admin:
  Tested in BCM2835 ROM


Version 0.03. Tagged as 'DWCDriver-0_03'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.1 2012/06/03 15:12:46 jlee Exp $
d34 1
a34 1
CFLAGS         += -DDEBUGLIB -DDWCDRIVER_DEBUG -DDEBUG
d49 1
a49 1
CFLAGS += -DDWC_EN_ISOC -Idwc.dwc_common_port -DDWC_HOST_ONLY
@


1.2
log
@Misc housekeeping
Detail:
  Makefile, !MkDebug,fd7 - Debug version of module can now be built just be passing "DEBUG=TRUE" to amu
  c/cmodule - Only accept USB controllers if HAL_USBControllerInfo says the struct size is an exact match with what we expect
  c/dwc_otg_riscos - Remove incorrect comment; both dwc_dma_alloc and malloc_contig zero memory
  s/bufman - Delete unused file
  s/call_veneer, s/triggercbs - Use Entry/EXIT macros to avoid single-reg LDM/STM performance warnings. Convert tabs to spaces.
Admin:
  Tested in BCM2835 ROM


Version 0.02. Tagged as 'DWCDriver-0_02'
@
text
@d21 1
a21 1
OBJS            = cmodule call_veneer triggercbs dwc_common_riscos dwc_otg_riscos softc_root softc_device port
@


1.1
log
@Add initial version of DWCDriver - USB driver for Synopsys DWC OTG controllers
Detail:
  A fairly simple wrapper for Synopsys's open source "DWC_otg" Linux driver, based around a GPL-free version of the DWC_otg 2.90a sources received from the Raspberry Pi foundation.
  Instead of interfacing with the Linux USB stack a new host interface layer has been implemented to allow it to talk to the standard BSD-derived RISC OS stack.
  RTSupport is used to provide the threading functionality that the DWC driver relies upon.
  Interesting files:
  - c/cmodule, h/cmodule - Main module frontend
  - c/dwc_common_riscos, h/dwc_common_riscos - Implementation of the OS support layer required by the DWC driver
  - c/dwc_otg_riscos, h/dwc_otg_riscos - Core code for the BSD driver implementation, driver init/shutdown, and for handling calls from the DWC host driver to us
  - c/port - Some support functions required by BSD-style code inherited from the other USB drivers
  - c/softc_device - Code to handle requests from the BSD layer to attached USB devices
  - c/softc_root - Code to handle requests from the BSD layer to the controller root hub
  - dwc/doc/* - Original Synopsys release notes & user guide pdfs
  - dwc/driver/*, dwc/dwc_common_port/* - Synopsys code and documentation. A few tweaks were required to allow it to compile under Norcroft, but otherwise it's functionally equivalent to the original sources.
Admin:
  Tested in BCM2835 ROM
  There are a few loose ends still to tidy up (search for "DWCTODO"), mainly regarding implementation of Isochronous support, but otherwise the driver seems stable enough for daily use.


Version 0.01. Tagged as 'DWCDriver-0_01'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.9 2011/05/22 20:32:24 jlee Exp $
d23 1
a23 1
LIBS            = ${DEBUGLIBS} ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
d29 10
d40 1
a40 1
CDEFINES        += ${CDEBUG} -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED
d42 1
a42 1
CMHGDEFINES     = -DCOMPONENT=${COMPONENT} ${CDEBUG}
a52 4
include StdTools
include ModStdRule
include ModuleLibs
include DbgRules
@

