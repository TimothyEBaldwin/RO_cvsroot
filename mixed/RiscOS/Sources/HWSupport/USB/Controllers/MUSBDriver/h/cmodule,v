head	1.5;
access;
symbols
	MUSBDriver-0_35:1.5
	MUSBDriver-0_34:1.5
	MUSBDriver-0_33:1.5
	MUSBDriver-0_32:1.5
	MUSBDriver-0_31:1.4
	MUSBDriver-0_30:1.4
	MUSBDriver-0_29:1.4
	MUSBDriver-0_28:1.4
	MUSBDriver-0_27:1.3
	MUSBDriver-0_26:1.3
	MUSBDriver-0_25:1.3
	MUSBDriver-0_24:1.3
	MUSBDriver-0_23:1.3
	MUSBDriver-0_22:1.3
	MUSBDriver-0_21:1.3
	MUSBDriver-0_20:1.3
	MUSBDriver-0_19:1.3
	MUSBDriver-0_18:1.3
	MUSBDriver-0_17:1.3
	MUSBDriver-0_16:1.3
	MUSBDriver-0_15:1.3
	MUSBDriver-0_14:1.3
	MUSBDriver-0_13:1.3
	MUSBDriver-0_12:1.3
	MUSBDriver-0_11:1.2
	MUSBDriver-0_10:1.1
	MUSBDriver-0_09:1.1
	MUSBDriver-0_08:1.1
	MUSBDriver-0_07:1.1
	MUSBDriver-0_06:1.1
	MUSBDriver-0_05:1.1
	MUSBDriver-0_04:1.1
	MUSBDriver-0_03:1.1
	MUSBDriver-0_02:1.1;
locks; strict;
comment	@# @;


1.5
date	2017.09.23.09.01.59;	author rool;	state Exp;
branches;
next	1.4;
commitid	6rXidvVzktBEFi8A;

1.4
date	2016.12.17.10.42.25;	author rool;	state Exp;
branches;
next	1.3;
commitid	CYGmihDmIHN6ekyz;

1.3
date	2011.05.22.20.32.31;	author jlee;	state Exp;
branches;
next	1.2;
commitid	ojDCXEOv6C57WIkv;

1.2
date	2011.04.11.23.25.39;	author jlee;	state Exp;
branches;
next	1.1;
commitid	6pcEoJPvdLzddtfv;

1.1
date	2009.07.02.20.15.49;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove HAL library variant
Detail:
  Simplify the makefile by not building a HAL variant.
  cmodule.c: 2 fewer warnings
  musb.c/musb_debug.c/musb_peri.c/musb_root.c/musb_util.c/tps.c: remove usbhal.h include
  cmodule.h/musb_usb.c: USBHAL is no longer defined
  CMHG file changed to make Makefile
Admin:
  Submission for USB bounty.

Version 0.32. Tagged as 'MUSBDriver-0_32'
@
text
@/* Copyright 2009 Castle Technology Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef MUSBDRIVER_CMODULE_H
#define MUSBDRIVER_CMODULE_H

#define NOTUSED(V) ((V)=(V))

#define ErrorBase_MUSBDriver 0x820A80
#define ErrorNumber_MUSB_NoReinit    (ErrorBase_MUSBDriver+0)
#define ErrorNumber_MUSB_NoMUSB      (ErrorBase_MUSBDriver+1)
#define ErrorNumber_MUSB_ClaimVeneer (ErrorBase_MUSBDriver+2)
#define ErrorNumber_MUSB_USBTooOld   (ErrorBase_MUSBDriver+3)

extern void* private_word;
extern void build_veneer (int* vn, int* st, size_t sz);

typedef struct iic_transfer
{
	unsigned addr:8;
	unsigned :21;
	unsigned retry:1;
	unsigned checksumonly:1;
	unsigned nostart:1;
	union {
		unsigned checksum;
		void *data;
	} d;
	unsigned len;
} iic_transfer;

extern int do_iicop(iic_transfer *tran,int count); /* Returns nonzero on success */


extern void riscos_cancel_abort_pipe (void* v);

#endif
@


1.4
log
@Internationalised
Detail:
  Add support for standalone messages registration, and actually use the messages rather than just exporting them in ROM builds.
  Changed to use allocated error bases rather than 0.
  Sync with other HC for ease of comparison where possible.
Admin:
  Submission for USB bounty.
  Tested on a BBxM.

Version 0.28. Tagged as 'MUSBDriver-0_28'
@
text
@a25 1
#ifndef USBHAL
a27 1
#endif
a45 9
#ifdef USBHAL
/* HAL interface */
extern void USBHAL_MUSBDriver_Init(void);
extern void abort_pipe(void *addr);
#define riscos_abort_pipe(ADDR) USBHAL_AddCallback(abort_pipe,ADDR)
#define riscos_cancel_abort_pipe(ADDR) USBHAL_RemoveCallback(abort_pipe,ADDR)
extern int usbhal_musb_do_intr(struct usbd_bus *,int irqdevno);
extern void usbhal_musb_shutdown(struct usbd_bus *);
#else
a46 1
#endif
@


1.3
log
@Add support for HAL builds of MUSBDriver
Detail:
  Makefile - Now builds a HAL-compatible static library during the export libs phase
  !MkHAL,fd7 - Handy script for building the HAL lib
  c/musb_hal - HAL version of cmodule.c
  c/musb, c/musb_debug, c/musb_peri, c/musb_root, c/musb_usb, c/musb_util, c/tps, h/cmodule, h/musb, h/musb_util, h/tps - Changed to support the HAL build. Biggest change was getting rid of all global vars; everything is now done via the bus ptr instead.
  c/port - Removed microtime and moved riscos_irq_clear here, to match change made in main USB drivers
Admin:
  HAL & non-HAL versions tested on rev C2 BB, rev A2 BB-xM, rev C1 TouchBook
  Needs latest Kernel & NetBSD USB drivers


Version 0.12. Tagged as 'MUSBDriver-0_12'
@
text
@d20 6
@


1.2
log
@Restructure MUSBDriver source code, rework host mode endpoint handling, plus other misc changes
Detail:
  c/musb_debug - New file containing debug code.
  c/musb_peri - Contains the code for handling peripheral mode, taken from c/musb
  c/musb_root - Contains the code for handling the USBDriver-required 'soft' hub, taken from c/musb
  c/musb_usb - Contains initialisation code and other misc USBDriver-related code, mostly taken from c/musb
  c/musb_util - Misc utility functions from c/musb
  h/musb_util, h/musb_usb - A couple of new header files to help with breaking things up. Might make sense to break h/musb_usb down further (or just consolidate everything back into h/musb)
  c/musb - Stripped out pretty much everything except code related to host-mode endpoint and interrupt handling. Instances of the new musb_multiplexer struct are used to handle endpoint allocation, and allocation is now performed on a per-usbd_xfer basis instead of on a per-pipe basis. This should allow the code to cope better with situations where the number of pipes is greater than the number of physical endpoints, although much work is still required.
  c/cmodule, c/port, c/tps, h/cmodule, h/musb - Misc tweaks and changes
Admin:
  Tested on rev A2 BB-xM.


Version 0.11. Tagged as 'MUSBDriver-0_11'
@
text
@d20 1
d22 29
d52 1
a52 1
extern void build_veneer (int* vn, int* st, size_t sz);
@


1.1
log
@Add initial version of MUSBDriver module

- Interfaces with main USBDriver module and implements software part of root hub
- Interfaces with Mentor MUSBMHDRC USB OTG controller, providing basic peripheral-mode support
@
text
@d20 4
@

