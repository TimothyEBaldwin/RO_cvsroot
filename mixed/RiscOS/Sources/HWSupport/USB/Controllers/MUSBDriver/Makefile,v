head	1.18;
access;
symbols
	MUSBDriver-0_35:1.18
	MUSBDriver-0_34:1.18
	MUSBDriver-0_33:1.18
	MUSBDriver-0_32:1.17
	MUSBDriver-0_31:1.15
	MUSBDriver-0_30:1.14
	MUSBDriver-0_29:1.13
	MUSBDriver-0_28:1.13
	MUSBDriver-0_27:1.12
	MUSBDriver-0_26:1.12
	MUSBDriver-0_25:1.12
	MUSBDriver-0_24:1.12
	MUSBDriver-0_23:1.12
	MUSBDriver-0_22:1.11
	MUSBDriver-0_21:1.11
	MUSBDriver-0_20:1.10
	MUSBDriver-0_19:1.10
	MUSBDriver-0_18:1.10
	MUSBDriver-0_17:1.10
	MUSBDriver-0_16:1.9
	MUSBDriver-0_15:1.9
	MUSBDriver-0_14:1.9
	MUSBDriver-0_13:1.9
	MUSBDriver-0_12:1.9
	MUSBDriver-0_11:1.8
	MUSBDriver-0_10:1.7
	MUSBDriver-0_09:1.6
	MUSBDriver-0_08:1.5
	MUSBDriver-0_07:1.4
	MUSBDriver-0_06:1.4
	MUSBDriver-0_05:1.4
	MUSBDriver-0_04:1.4
	MUSBDriver-0_03:1.4
	MUSBDriver-0_02:1.3;
locks; strict;
comment	@# @;


1.18
date	2017.11.18.10.26.24;	author rool;	state Exp;
branches;
next	1.17;
commitid	yU4Q13DwEA04lvfA;

1.17
date	2017.09.23.09.01.52;	author rool;	state Exp;
branches;
next	1.16;
commitid	6rXidvVzktBEFi8A;

1.16
date	2017.09.23.08.54.53;	author rool;	state Exp;
branches;
next	1.15;
commitid	qcGeJbCDtonLCi8A;

1.15
date	2017.08.19.14.50.41;	author rool;	state Exp;
branches;
next	1.14;
commitid	Rrk2EN8kMom5JP3A;

1.14
date	2017.07.15.09.05.02;	author rool;	state Exp;
branches;
next	1.13;
commitid	wbbi1NJtGQWfWiZz;

1.13
date	2016.12.17.10.42.15;	author rool;	state Exp;
branches;
next	1.12;
commitid	CYGmihDmIHN6ekyz;

1.12
date	2015.08.21.20.09.31;	author rsprowson;	state Exp;
branches;
next	1.11;
commitid	AR6BOUEtVfUgVayy;

1.11
date	2014.05.27.19.19.36;	author jlee;	state Exp;
branches;
next	1.10;
commitid	WoQoyE1NXx3X8dCx;

1.10
date	2012.06.06.23.53.30;	author jlee;	state Exp;
branches;
next	1.9;
commitid	CFvOhB5lkQSNNH7w;

1.9
date	2011.05.22.20.32.24;	author jlee;	state Exp;
branches;
next	1.8;
commitid	ojDCXEOv6C57WIkv;

1.8
date	2011.04.11.23.25.32;	author jlee;	state Exp;
branches;
next	1.7;
commitid	6pcEoJPvdLzddtfv;

1.7
date	2011.02.08.10.40.50;	author srevill;	state Exp;
branches;
next	1.6;

1.6
date	2010.09.14.20.59.59;	author jlee;	state Exp;
branches;
next	1.5;

1.5
date	2010.08.14.21.41.49;	author jlee;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.28.18.59.52;	author jlee;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.20.51.00;	author jlee;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.07.21.36.04;	author jlee;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.02.20.15.41;	author jlee;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Debug build fix
Detail:
  Add missing logprintf().
Admin:
  Submission for USB bounty.

Version 0.33. Tagged as 'MUSBDriver-0_33'
@
text
@# Copyright 2009 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Makefile for MUSB driver
#
# $Id: Makefile,v 1.14 2017/07/15 09:05:02 rool Exp $

COMPONENT       = MUSBDriver
RES_AREA        = resource_files
OBJS            = cmodule call_veneer musb musb_debug musb_peri musb_root musb_usb musb_util bsd_fns triggercbs tps
LIBS            = ${CALLXLIB} ${ASMUTILS} ${TBOXINTLIB}
CMHGFILE        = modhead
HDRS            =
CMHGDEPENDS     = cmodule musb tps
ROMCDEFINES     = -DROM
CINCLUDES       = -ITCPIPLibs:,C:USB,OS:
CFLAGS         += -wp -wc
CDEFINES       += -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED

#
# Debug switch
#
DEBUG          ?= FALSE
ifeq (${DEBUG},TRUE)
CFLAGS         += -DDEBUGLIB -DMUSB_DEBUG -DUSB_DEBUG
CMHGDEFINES    += -DMUSB_DEBUG
LIBS           += ${NET5LIBS}
endif

include CModule

# Dynamic dependencies:
@


1.17
log
@Remove HAL library variant
Detail:
  Simplify the makefile by not building a HAL variant.
  cmodule.c: 2 fewer warnings
  musb.c/musb_debug.c/musb_peri.c/musb_root.c/musb_util.c/tps.c: remove usbhal.h include
  cmodule.h/musb_usb.c: USBHAL is no longer defined
  CMHG file changed to make Makefile
Admin:
  Submission for USB bounty.

Version 0.32. Tagged as 'MUSBDriver-0_32'
@
text
@d36 1
a36 1
CFLAGS         += -DDEBUGLIB -DMUSB_DEBUG
@


1.16
log
@Common up NetBSD supporting functions
Detail:
  port.c -> bsd_fns.c, and use the copy from EHCI/OHCI driver, minus the bus access functions not needed here.
Admin:
  Submission for USB bounty.
  Not tagged, part 2 follows shortly.
@
text
@a21 1
OBJS_HAL        = o_hal.musb o_hal.musb_peri o_hal.musb_root o_hal.musb_usb o_hal.musb_util o_hal.tps o_hal.musb_hal
d25 5
a29 2
USBDIR          = <Lib$Dir>.USB
CUSTOMEXP       = custom
d34 1
a34 1
DEBUG ?= FALSE
d36 1
a36 1
CFLAGS         += -DDEBUGLIB -DMUSB_DEBUG -DUSB_DEBUG
a40 8
CFLAGS          += -wp -wc
CDEFINES        += -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED
ROMCDEFINES     = -DROM
CINCLUDES       = -ITCPIPLibs:,C:USB,OS:
CMHGDEFINES    += -DCOMPONENT=${COMPONENT}
CMHGDEPENDS     = cmodule musb tps
LDFLAGS         = -Symbols rm.sym${TARGET}

a42 24
${DIRS}::
        ${MKDIR} o_hal

clean::
        @@IfThere o_hal  Then ${ECHO} ${WIPE} o_hal ${WFLAGS}
        @@IfThere o_hal  Then ${WIPE} o_hal ${WFLAGS}

export: export_${PHASE}

export_hdrs:
        @@${NOP}

export_libs: ${USBDIR}.o.${COMPONENT}
        @@echo ${COMPONENT}: export complete (libs)

# HAL libraries:
.SUFFIXES: .o_hal
.c.o_hal:; ${CC} -APCS 3/nofp/noswst -wp -ff -DUSBHAL -c -depend !Depend -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED ${CINCLUDES} ${THROWBACK} -o $@@ $<
.s.o_hal:; ${AS} ${ASFLAGS} -APCS 3/nofp/noswst -o $@@ $<

${USBDIR}.o.${COMPONENT}: ${OBJS_HAL} ${DIRS}
        ${MKDIR} ${USBDIR}.o
        ${AR} ${ARFLAGS} ${USBDIR}.o.${COMPONENT} ${OBJS_HAL}

@


1.15
log
@Changes to header imports
Detail:
  Use those in C:USB rather than reaching inside the adjacent USBDriver.
Admin:
  Requires USBDriver-1_21.

Version 0.31. Tagged as 'MUSBDriver-0_31'
@
text
@d21 1
a21 1
OBJS            = cmodule call_veneer musb musb_debug musb_peri musb_root musb_usb musb_util port triggercbs tps
@


1.14
log
@Repoint include path
Admin:
  Reach into USBDriver rather than NetBSD.

Version 0.30. Tagged as 'MUSBDriver-0_30'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.13 2016/12/17 10:42:15 rool Exp $
d42 1
a42 1
CINCLUDES       = -ITCPIPLibs:,^.^.USBDriver.,OS:
@


1.13
log
@Internationalised
Detail:
  Add support for standalone messages registration, and actually use the messages rather than just exporting them in ROM builds.
  Changed to use allocated error bases rather than 0.
  Sync with other HC for ease of comparison where possible.
Admin:
  Submission for USB bounty.
  Tested on a BBxM.

Version 0.28. Tagged as 'MUSBDriver-0_28'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.12 2015/08/21 20:09:31 rsprowson Exp $
d42 1
a42 1
CINCLUDES       = -ITCPIPLibs:,^.^.NetBSD.,OS:
@


1.12
log
@Don't reach into USBDriver's back pocket
cmodule.c:
  Use USBDriver.h from interface exports
Makefile:
  Remove duplicated libs from debug build
  Remove relative reference to NetBSD component from VPATH
!MkDebug:
  Select debug target so the right compiler switches are used
musb.c/musb_debug.c/musb_peri.c/musb_root.c/musb_usb.c/musb_util.c/tps.c:
  Unused reference to USBDriver.h removed
Built, but not tested.

Version 0.23. Tagged as 'MUSBDriver-0_23'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.11 2014/05/27 19:19:36 jlee Exp $
d20 1
a20 1
RES_OBJ         = msgs
d23 1
a23 1
LIBS            = ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
d41 2
a42 1
CINCLUDES       = -Itbox:,TCPIPLibs:,^.^.NetBSD.,OS:
@


1.11
log
@Fix handling of short control transfers
Detail:
  c/musb - Updated musb_ep0_host() to treat a short control packet as the end of the transfer, as mandated by the USB spec. Also updated a few other pieces of code to ensure the transfer length is reported correctly if an error occurs.
  c/cmodule - Fix potential null pointer dereference when debugging enabled
  Makefile - Fix lack of DPRINTF() debug output in debug builds due to USB_DEBUG not being defined
Admin:
  Tested on BB-xM with high processor vectors
  Fixes 99% of connected devices failing to initialise following the change to the device initialisation logic made to USBDriver in NetBSD-0_82 (initial device descriptor requests now request more data than is likely to be available, triggering a short packet/xfer response)


Version 0.21. Tagged as 'MUSBDriver-0_21'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.10 2012/06/06 23:53:30 jlee Exp $
d36 1
a36 1
LIBS           += ${DEBUGLIBS} ${NET5LIBS}
a45 2
VPATH = ^.^.build ^.^.dev.usb

@


1.10
log
@Misc housekeeping
Detail:
  Makefile, !MkDebug,fd7 - Debug version of module can now be built just by passing "DEBUG=TRUE" to amu
  c/cmodule, c/musb_hal - Only accept USB controllers if HAL_USBControllerInfo says the struct size is an exact match with what we expect
  s/bufman - Delete unused file
  s/call_veneer, s/triggercbs - Use Entry/EXIT macros to avoid single-reg LDM/STM performance warnings. Convert tabs to spaces.
Admin:
  Tested on rev A2 BB-xM


Version 0.17. Tagged as 'MUSBDriver-0_17'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.9 2011/05/22 20:32:24 jlee Exp $
d34 1
a34 1
CFLAGS         += -DDEBUGLIB -DMUSB_DEBUG
@


1.9
log
@Add support for HAL builds of MUSBDriver
Detail:
  Makefile - Now builds a HAL-compatible static library during the export libs phase
  !MkHAL,fd7 - Handy script for building the HAL lib
  c/musb_hal - HAL version of cmodule.c
  c/musb, c/musb_debug, c/musb_peri, c/musb_root, c/musb_usb, c/musb_util, c/tps, h/cmodule, h/musb, h/musb_util, h/tps - Changed to support the HAL build. Biggest change was getting rid of all global vars; everything is now done via the bus ptr instead.
  c/port - Removed microtime and moved riscos_irq_clear here, to match change made in main USB drivers
Admin:
  HAL & non-HAL versions tested on rev C2 BB, rev A2 BB-xM, rev C1 TouchBook
  Needs latest Kernel & NetBSD USB drivers


Version 0.12. Tagged as 'MUSBDriver-0_12'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.8 2011/04/11 23:25:32 jlee Exp $
d23 1
a23 1
LIBS            = ${DEBUGLIBS} ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
d29 12
a40 2
CFLAGS          += -ff -wp -wc
CDEFINES        += ${CDEBUG} -DKERNEL -D_KERNEL -Dpaddr_t=int -D__P(A)=A -DKLD_MODULE -DDISABLE_PACKED
d42 1
a42 1
CMHGDEFINES     = -DCOMPONENT=${COMPONENT} ${CDEBUG}
a47 4
include StdTools
include ModStdRule
include ModuleLibs
include DbgRules
@


1.8
log
@Restructure MUSBDriver source code, rework host mode endpoint handling, plus other misc changes
Detail:
  c/musb_debug - New file containing debug code.
  c/musb_peri - Contains the code for handling peripheral mode, taken from c/musb
  c/musb_root - Contains the code for handling the USBDriver-required 'soft' hub, taken from c/musb
  c/musb_usb - Contains initialisation code and other misc USBDriver-related code, mostly taken from c/musb
  c/musb_util - Misc utility functions from c/musb
  h/musb_util, h/musb_usb - A couple of new header files to help with breaking things up. Might make sense to break h/musb_usb down further (or just consolidate everything back into h/musb)
  c/musb - Stripped out pretty much everything except code related to host-mode endpoint and interrupt handling. Instances of the new musb_multiplexer struct are used to handle endpoint allocation, and allocation is now performed on a per-usbd_xfer basis instead of on a per-pipe basis. This should allow the code to cope better with situations where the number of pipes is greater than the number of physical endpoints, although much work is still required.
  c/cmodule, c/port, c/tps, h/cmodule, h/musb - Misc tweaks and changes
Admin:
  Tested on rev A2 BB-xM.


Version 0.11. Tagged as 'MUSBDriver-0_11'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.7 2011/02/08 10:40:50 srevill Exp $
d22 1
d26 2
d44 24
@


1.7
log
@Makefile tweak to fix export_hdrs phase.

This component doesn't have any exported headers so this change will stop
build errors during the header export phase.

Version 0.10. Tagged as 'MUSBDriver-0_10'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.6 2010/09/14 20:59:59 jlee Exp $
d21 1
a21 1
OBJS            = cmodule call_veneer musb port triggercbs tps
@


1.6
log
@Add DEBUGLIBS to makefile so debug versions will build again

Version 0.09. Tagged as 'MUSBDriver-0_09'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.5 2010/08/14 21:41:49 jlee Exp $
d24 1
@


1.5
log
@Add timeout handling to MUSBDriver, tidy code a bit
Detail:
  Makefile - rewritten to use CModule fragment instead of deprecated RAMCModule & ROMCModule fragments. Link stage also outputs symbol table to aid in debugging.
  c/cmodule, c/musb, h/musb - Add code to handle transfer timeouts
  c/musb - Fix a couple of compiler warnings, including a bug in root hub handling
Admin:
  Tested on rev C2 beagleboard.
  Machine no longer hangs on boot with hub + keyboard connected to OTG port, but keyboard often fails to initialise and needs to be *USBReset or re-plugged.


Version 0.08. Tagged as 'MUSBDriver-0_08'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.4 2009/09/28 18:59:52 jlee Exp $
d22 1
a22 1
LIBS            = ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
@


1.4
log
@MUSBDriver makefile fix for building from clean

Version 0.02. Not tagged
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.3 2009/09/06 20:51:00 jlee Exp $
d20 4
a23 6
TARGET          = ${COMPONENT}
DIRS            = o._dirs
RAMMESSAGES     = o.msgs
MESSAGELOCATION = Resources.${COMPONENT}.Messages
OBJS    = o.modhead o.cmodule o.call_veneer o.musb o.port o.triggercbs o.tps ${RAMMESSAGES}
LIBS            = ${DEBUGLIB} ${MODMALLOCLIB} ${WILDLIB} ${DDTLIB} ${DESKLIB}  ${NET5LIBS} ${CALLXLIB} ${ASMUTILS} ${TBOXLIBS}
d25 1
a25 1
CFLAGS          += -ff -wp -wc -zm -zps1
d29 2
d37 2
a38 29
include RAMCModule
include ROMCModule

aif.${COMPONENT}: ${RAM_OBJS} ${RAM_LIBS} ${CLIB}  o._dirs
        link -base 0 -aif -bin -d -o $@@ ${RAM_OBJS} ${RAM_LIBS} ${CLIB}

gpa.${COMPONENT}: aif.${COMPONENT}
        togpa aif.${COMPONENT} $@@

clean:
        ${WIPE} o ${WFLAGS}
        ${WIPE} rm ${WFLAGS}
        ${WIPE} gpa ${WFLAGS}
        ${WIPE} aif ${WFLAGS}
        ${RM}   h.modhead

o._dirs:
        ${MKDIR} o
        ${MKDIR} c
        ${MKDIR} gpa
        ${MKDIR} aif
        ${TOUCH} o._dirs

o.cmodule o.usbd o.musb o.tps:       h.modhead

# Static dependancies

${RAMMESSAGES}: Resources.UK.Messages
        resgen resource_files ${RAMMESSAGES} Resources.UK.Messages ${MESSAGELOCATION}
@


1.3
log
@Initial version of USB host support for MUSBDriver
Detail:
  c/tps, h/tps, Makefile - Some rather rough code to wake up the MUSB controller and cause it to enter host mode when the OTG cable is detected. Needs some tidying up and improvement to deal with any other drivers that need to interact with the TWL/TPS.
  c/musb, h/musb - Initial host-mode support for MUSBDriver. Control, bulk & interrupt endpoints are implemented. Isochronous is not. Lots of bits need improving, but it's stable enough for owners of rev B beagleboards to make use of.
  cmhg/modhead, c/cmodule - Improved debugging code
Admin:
  Tested on rev C2 beagleboard


Version 0.02. Tagged as 'MUSBDriver-0_02'
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.2 2009/07/07 21:36:04 jlee Exp $
d29 1
a29 1
CINCLUDES       = -Itbox:,TCPIPLibs:,^.^.NetBSD,OS:
d60 1
a60 1
o.cmodule o.usbd o.musb:       h.modhead
@


1.2
log
@Makefile dependency fix so MUSBDriver builds properly from clean
Detail:
  Makefile - updated so o.musb depends upon h.modhead
Admin:
  Tested on rev C2 beagleboard following clean OMAP3 ROM build


Version 0.01. Not tagged
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.1 2009/07/02 20:15:41 jlee Exp $
d24 1
a24 1
OBJS    = o.modhead o.cmodule o.call_veneer o.musb o.port o.triggercbs ${RAMMESSAGES}
@


1.1
log
@Add initial version of MUSBDriver module

- Interfaces with main USBDriver module and implements software part of root hub
- Interfaces with Mentor MUSBMHDRC USB OTG controller, providing basic peripheral-mode support
@
text
@d17 1
a17 1
# $Id: Makefile,v 1.1.1.1 2001/05/29 17:50:48 dellis Exp $
d60 1
a60 1
o.cmodule o.usbd:       h.modhead
@

