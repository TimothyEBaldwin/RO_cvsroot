head	1.2;
access;
symbols
	OHCIDriver-0_54:1.2
	OHCIDriver-0_53:1.2
	OHCIDriver-0_52:1.2
	OHCIDriver-0_51:1.1.1.1
	OHCIDriver-0_50:1.1.1.1
	OHCIDriver-0_49:1.1.1.1
	OHCIDriver-0_48:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.11.18.10.34.12;	author rool;	state Exp;
branches;
next	1.1;
commitid	shY6Uq6jlbMHnvfA;

1.1
date	2017.07.30.10.02.33;	author rool;	state Exp;
branches
	1.1.1.1;
next	;
commitid	CaJHISky5mPJJe1A;

1.1.1.1
date	2017.07.30.10.02.33;	author rool;	state Exp;
branches;
next	;
commitid	CaJHISky5mPJJe1A;


desc
@@


1.2
log
@Updates from NetBSD
Detail:
  ohcivar.h sync'd with NetBSD revision 1.36.
  ohcireg.h already at NetBSD revision 1.20.
  ohci.c minor changes from NetBSD revision 1.158, being careful with interrupt outpoint handling. Many of the changes are restoring the original indentation (best viewed ignoring white space).
  Debug build fix, adding missing logprintf() function.
Admin:
  Tested on an Iyonix.
  Submission for USB bounty.

Version 0.52. Tagged as 'OHCIDriver-0_52'
@
text
@/*	$NetBSD: ohcivar.h,v 1.36 2005/03/11 19:25:22 mycroft Exp $	*/
/*	$FreeBSD: src/sys/dev/usb/ohcivar.h,v 1.13 1999/11/17 22:33:41 n_hibma Exp $	*/

/*
 * Copyright (c) 1998 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Lennart Augustsson (lennart@@augustsson.net) at
 * Carlstedt Research & Technology.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

typedef struct ohci_soft_ed {
	ohci_ed_t ed;
	struct ohci_soft_ed *next;
	ohci_physaddr_t physaddr;
} ohci_soft_ed_t;
#define OHCI_SED_SIZE ((sizeof (struct ohci_soft_ed) + OHCI_ED_ALIGN - 1) / OHCI_ED_ALIGN * OHCI_ED_ALIGN)
#define OHCI_SED_CHUNK 128


typedef struct ohci_soft_td {
	ohci_td_t td;
	struct ohci_soft_td *nexttd; /* mirrors nexttd in TD */
	struct ohci_soft_td *dnext; /* next in done list */
	ohci_physaddr_t physaddr;
	LIST_ENTRY(ohci_soft_td) hnext;
	usbd_xfer_handle xfer;
	u_int16_t len;
	u_int16_t flags;
#define OHCI_CALL_DONE	0x0001
#define OHCI_ADD_LEN	0x0002
} ohci_soft_td_t;
#define OHCI_STD_SIZE ((sizeof (struct ohci_soft_td) + OHCI_TD_ALIGN - 1) / OHCI_TD_ALIGN * OHCI_TD_ALIGN)
#define OHCI_STD_CHUNK 128


typedef struct ohci_soft_itd {
	ohci_itd_t itd;
	struct ohci_soft_itd *nextitd; /* mirrors nexttd in ITD */
	struct ohci_soft_itd *dnext; /* next in done list */
	ohci_physaddr_t physaddr;
	LIST_ENTRY(ohci_soft_itd) hnext;
	usbd_xfer_handle xfer;
	u_int16_t flags;
#ifdef DIAGNOSTIC
	char isdone;
#endif
} ohci_soft_itd_t;
#define OHCI_SITD_SIZE ((sizeof (struct ohci_soft_itd) + OHCI_ITD_ALIGN - 1) / OHCI_ITD_ALIGN * OHCI_ITD_ALIGN)
#define OHCI_SITD_CHUNK 64


#define OHCI_NO_EDS (2*OHCI_NO_INTRS-1)

#define OHCI_HASH_SIZE 128

typedef struct ohci_softc {
	struct usbd_bus sc_bus;		/* base device */
	bus_space_tag_t iot;
	bus_space_handle_t ioh;
	bus_size_t sc_size;

	usb_dma_t sc_hccadma;
	struct ohci_hcca *sc_hcca;
	ohci_soft_ed_t *sc_eds[OHCI_NO_EDS];
	u_int sc_bws[OHCI_NO_INTRS];

	u_int32_t sc_eintrs;
	ohci_soft_ed_t *sc_isoc_head;
	ohci_soft_ed_t *sc_ctrl_head;
	ohci_soft_ed_t *sc_bulk_head;

	LIST_HEAD(, ohci_soft_td)  sc_hash_tds[OHCI_HASH_SIZE];
	LIST_HEAD(, ohci_soft_itd) sc_hash_itds[OHCI_HASH_SIZE];

	int sc_noport;
	u_int8_t sc_addr;		/* device address */
	u_int8_t sc_conf;		/* device configuration */

#ifdef USB_USE_SOFTINTR
	char sc_softwake;
#endif /* USB_USE_SOFTINTR */

#ifdef __riscos
	ohci_soft_ed_t *sc_reclaimeds;
	ohci_soft_ed_t *sc_pausededs;
#endif
	ohci_soft_ed_t *sc_freeeds;
	ohci_soft_td_t *sc_freetds;
	ohci_soft_itd_t *sc_freeitds;

	SIMPLEQ_HEAD(, usbd_xfer) sc_free_xfers; /* free xfers */

	usbd_xfer_handle sc_intrxfer;

	char sc_vendor[16];
	int sc_id_vendor;

#if defined(__NetBSD__) || defined(__OpenBSD__)
	void *sc_powerhook;		/* cookie from power hook */
	void *sc_shutdownhook;		/* cookie from shutdown hook */
#endif
	u_int32_t sc_control;		/* Preserved during suspend/standby */
	u_int32_t sc_intre;

	u_int sc_overrun_cnt;
	struct timeval sc_overrun_ntc;

	usb_callout_t sc_tmo_rhsc;
#if defined(__NetBSD__) || defined(__OpenBSD__) || defined(__riscos)
	device_ptr_t sc_child;
#endif
	char sc_dying;
#ifdef __NetBSD__
	struct usb_dma_reserve sc_dma_reserve;
#endif

#ifdef __riscos
	int sc_irqdevno; /* IRQ device number */
#endif
} ohci_softc_t;

struct ohci_xfer {
	struct usbd_xfer xfer;
	struct usb_task	abort_task;
};

#ifdef __riscos
#define OXFER(xfer) ((struct ehci_xfer *)(xfer))
#endif

usbd_status	ohci_init(ohci_softc_t *);
int		ohci_intr(void *);
#ifdef __riscos
void		ohci_softintr(void *);
#endif
#if defined(__NetBSD__) || defined(__OpenBSD__)
int		ohci_detach(ohci_softc_t *, int);
int		ohci_activate(device_ptr_t, enum devact);
#endif

#ifdef __riscos
#define MS_TO_TICKS(ms) ((ms) * hz / 1000)
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*      $NetBSD: ohcivar.h,v 1.35 2005/01/11 07:45:34 imp Exp $ */
d114 2
a115 2
        ohci_soft_ed_t *sc_reclaimeds;
        ohci_soft_ed_t *sc_pausededs;
a124 3
	ohci_soft_itd_t *sc_sidone;
	ohci_soft_td_t  *sc_sdone;

d144 1
a144 1
        struct usb_dma_reserve sc_dma_reserve;
@


1.1.1.1
log
@Split OHCIDriver into a distinct component
Admin:
  Reference tag was USBDriver-1_19.
  ohci.c revision 1.26
  ohcimodule.c revision 1.29
  cmhg/OHCIDriverHdr revision 1.9 (previously named ohcimodhead)
  ohcireg.h revision 1.2
  ohcivar.h revision 1.5
  Resources/UK/Messages revision 1.5 (previously named OHCIMessages)
  call_veneer.s revision 1.6
@
text
@@
