head	1.2;
access;
symbols
	VFPSupport-0_13:1.2
	VFPSupport-0_12:1.2
	VFPSupport-0_11:1.2
	VFPSupport-0_10:1.2
	VFPSupport-0_09:1.2
	VFPSupport-0_08:1.2
	VFPSupport-0_07:1.2
	VFPSupport-0_06:1.2
	VFPSupport-0_05:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.02.08.15.27.26;	author jlee;	state Exp;
branches;
next	1.1;
commitid	x9VDVmUDNhCwkjox;

1.1
date	2014.02.08.14.50.41;	author jlee;	state Exp;
branches;
next	;
commitid	K7Sd3I9WjpbR7jox;


desc
@@


1.2
log
@Add VFPv2 support code
Detail:
  This update adds the support code necessary to allow the VFPv2 coprocessor in the Raspberry Pi to be used in its full IEEE-compliant mode, and to add support for the generation of errors on VFP match exceptions (division by zero, etc.)
  SoftFloat Release 2b (http://www.jhauser.us/arithmetic/SoftFloat.html) is used to perform the floating point calculations in software, ensuring their accuracy.
  As with FPEmulator, the support code will only be included on machines which require it; at the moment this decision is handled by the makefile, based around the target machine type.
  Note that the current version of the support code does not implement default NaN or flush-to-zero mode, so it is not a fully accurate emulation of the hardware.
  Also added a new SWI, VFPSupport_ExceptionDump, for creating and reading a VFP context exception dump, and a new reason code to VFPSupport_Features to query which exception enable bits are supported
  File changes:
  - Makefile - Rewritten to use the CModule fragment, and to add the necessary rules for (optionally) building the support code.
  - Licences - File summarising the different licences used by different portions of the code
  - Test/test2c,ffb, Test/test3,ffb, Test/test4,ffb, Test/test5,ffb, Test/test6src,ffb - Several test programs for validating behaviour of the support code, mainly focused around unusual causes of exceptions and validating instruction decoding and short vector support
  - actions/ARMv7_VFP, arctions/common, c/head, cache/classify - decgen files for building the instruction decoder. This decoder is only used for synchronous exceptions, to determine whether the instruction is or isn't a valid VFP instruction. Asynchronous exceptions utilise a simpler, hand-crafted decoder in the assembler sources.
  - h/classify - Header for the decgen decoder
  - hdr/shared - Header with some definitions shared between the C and assembler sources (will be Hdr2H'd to generate the C header)
  - hdr/VFPSupport - Updated with new error numbers, SWI definitions
  - s/CSupport - Math support functions from the C library sources, required by SoftFloat
  - s/Errors - Added new error definitions
  - s/GetAll - Include support code if necessary. Add debug switch, plus optimisation switch for machines with 16 D registers
  - s/Instructions - Core data processing instruction emulation code. This file is included twice, once for single precision and once for double precision. The code calls through to the SoftFloat routines to perform the calculations.
  - s/Module - Adjust handling of undefined instruction vector to allow the support code to be installed instead of OldHandler if necessary. Initialise the support code as necessary. Add new SWIs & reason codes.
  - s/SupportCode - Undefined instruction handler which controls the rest of the support code. Also raises RISC OS errors as necessary (division by zero, etc.)
  - softfloat/* - The SoftFloat library sources. It's been tweaked in a few places for integration with the assembler support code, but otherwise no changes to the core logic were necessary.
  - Resources/UK/Messages - Updated with new error text
Admin:
  Tested on Raspberry Pi & BB-xM
  Support code tested using the supplied test routines and the TestFloat tool (http://www.jhauser.us/arithmetic/TestFloat.html)


Version 0.06. Tagged as 'VFPSupport-0_06'
@
text
@#{DictTokens}
# Regular errors
E00:No VFP/NEON hardware present
E01:Unsupported VFP/NEON version
E02:A requested VFP/NEON feature is unavailable
E03:Bad VFP context
E04:Bad VFPSupport_Features reason code
E06:Only one instance of VFPSupport can be active at a time
E07:Invalid flags passed to VFPSupport SWI
# Serious errors from support code
S00:No VFP context active
S01:VFP coprocessor not enabled
S02:VFP coprocessor enable state mismatch
S03:Unexpected VFP instruction
S04:Divide by zero in VFP suppport code
S05:Unknown VFP exception requested
# Actual floating point exception errors
IO:Vector floating point exception: invalid operation
DZ:Vector floating point exception: division by zero
OF:Vector floating point exception: overflow
UF:Vector floating point exception: underflow
IX:Vector floating point exception: inexact operation
ID:Vector floating point exception: input subnormal
@


1.1
log
@Move VFPSupport to 'mixed' folder
Detail:
  This is a copy of VFPSupport-0_05 from bsd/RiscOS/Sources/HWSupport
  It's being moved to the 'mixed' folder as the next version will contain sources using several different licences
Admin:
  Untested


Version 0.05. Retagged as 'VFPSupport-0_05'
@
text
@d2 1
d9 15
@

