head	1.76;
access;
symbols
	BCM2835-0_75-1:1.75
	BCM2835-0_76:1.76
	BCM2835-0_75-1_70_2_4:1.70.2.4
	BCM2835-0_75:1.75
	BCM2835-0_74:1.74
	BCM2835-0_73-1_70_2_3:1.70.2.3
	BCM2835-0_73:1.73
	BCM2835-0_72:1.72
	BCM2835-0_71-1_70_2_2:1.70.2.2
	BCM2835-0_71:1.71
	BCM2835-0_70-1_70_2_1:1.70.2.1
	SMP:1.70.0.2
	SMP_bp:1.70
	BCM2835-0_70:1.70
	BCM2835-0_69:1.69
	BCM2835-0_68:1.68
	BCM2835-0_67:1.67
	BCM2835-0_66:1.66
	BCM2835-0_65:1.65
	BCM2835-0_64:1.64
	BCM2835-0_63:1.63
	BCM2835-0_62:1.62
	BCM2835-0_61:1.61
	BCM2835-0_60:1.60
	BCM2835-0_59:1.59
	BCM2835-0_58:1.58
	BCM2835-0_57:1.57
	BCM2835-0_56:1.56
	BCM2835-0_55:1.55
	BCM2835-0_53:1.53
	BCM2835-0_52:1.52
	BCM2835-0_51:1.51
	BCM2835-0_50:1.50
	BCM2835-0_49:1.49
	BCM2835-0_48:1.48
	BCM2835-0_47:1.47
	BCM2835-0_46:1.46
	BCM2835-0_45:1.45
	BCM2835-0_44:1.44
	BCM2835-0_43:1.43
	BCM2835-0_42:1.42
	BCM2835-0_41:1.41
	BCM2835-0_40:1.40
	BCM2835-0_39:1.39
	BCM2835-0_38:1.38
	BCM2835-0_37:1.37
	BCM2835-0_36:1.36
	BCM2835-0_35:1.35
	BCM2835-0_34:1.34
	BCM2835-0_33:1.33
	BCM2835-0_32:1.32
	BCM2835-0_31:1.31
	BCM2835-0_30:1.30
	BCM2835-0_29:1.29
	BCM2835-0_28:1.28
	BCM2835-0_27:1.27
	BCM2835-0_26:1.26
	BCM2835-0_25:1.25
	BCM2835-0_24:1.24
	BCM2835-0_23:1.23
	BCM2835-0_22:1.22
	BCM2835-0_21:1.21
	BCM2835-0_20:1.20
	BCM2835-0_19:1.19
	BCM2835-0_18:1.18
	BCM2835-0_17:1.17
	BCM2835-0_16:1.16
	BCM2835-0_15:1.15
	BCM2835-0_14:1.14
	BCM2835-0_13:1.13
	BCM2835-0_12:1.12
	BCM2835-0_11:1.11
	BCM2835-0_10:1.10
	BCM2835-0_09:1.9
	BCM2835-0_08:1.8
	BCM2835-0_07:1.7
	BCM2835-0_06:1.6
	BCM2835-0_05:1.5
	BCM2835-0_04:1.4
	BCM2835-0_03:1.3
	BCM2835-0_02:1.2
	BCM2835-0_01:1.1;
locks; strict;
comment	@# @;


1.76
date	2018.07.07.14.26.18;	author jlee;	state Exp;
branches;
next	1.75;
commitid	VQCRRsJLbDt0fdJA;

1.75
date	2018.03.21.20.59.40;	author rsprowson;	state Exp;
branches;
next	1.74;
commitid	dMUGJ50rw57bTmvA;

1.74
date	2018.03.19.21.03.10;	author jlee;	state Exp;
branches;
next	1.73;
commitid	DXJIfpAlz3WmY6vA;

1.73
date	2017.09.09.23.22.32;	author jlee;	state Exp;
branches;
next	1.72;
commitid	gAUk2nRHrU1PSz6A;

1.72
date	2017.09.09.11.03.31;	author rool;	state Exp;
branches;
next	1.71;
commitid	APWc8oJjayEiNv6A;

1.71
date	2017.07.31.22.09.48;	author jlee;	state Exp;
branches;
next	1.70;
commitid	xk6viwRsoGpALq1A;

1.70
date	2017.05.14.08.17.40;	author rsprowson;	state Exp;
branches
	1.70.2.1;
next	1.69;
commitid	gi5N3Yaapd9zFkRz;

1.69
date	2017.02.21.22.10.51;	author rsprowson;	state Exp;
branches;
next	1.68;
commitid	vR1YulJPaRxOURGz;

1.68
date	2017.02.21.22.00.25;	author rsprowson;	state Exp;
branches;
next	1.67;
commitid	5uukDnnvmsVeRRGz;

1.67
date	2017.02.11.15.29.53;	author rool;	state Exp;
branches;
next	1.66;
commitid	zDDt6chYlHWb1yFz;

1.66
date	2017.01.20.22.11.28;	author jlee;	state Exp;
branches;
next	1.65;
commitid	XiXvH3kRV0JNWKCz;

1.65
date	2016.12.12.16.52.08;	author jlee;	state Exp;
branches;
next	1.64;
commitid	eiCssmFhjOiYqIxz;

1.64
date	2016.12.10.13.03.36;	author rool;	state Exp;
branches;
next	1.63;
commitid	K8noJk4vvPEyerxz;

1.63
date	2016.10.25.19.39.17;	author jlee;	state Exp;
branches;
next	1.62;
commitid	cFYOyj70DkBYTyrz;

1.62
date	2016.10.22.20.17.58;	author rool;	state Exp;
branches;
next	1.61;
commitid	vT6sSPcBGcAddbrz;

1.61
date	2016.10.15.14.30.21;	author rsprowson;	state Exp;
branches;
next	1.60;
commitid	bv5F1PmPdmWUvfqz;

1.60
date	2016.10.15.14.05.02;	author rsprowson;	state Exp;
branches;
next	1.59;
commitid	YmZHhYYljHDenfqz;

1.59
date	2016.10.09.12.23.44;	author jlee;	state Exp;
branches;
next	1.58;
commitid	AegGZ5wtYn4r0tpz;

1.58
date	2016.05.09.23.02.10;	author jlee;	state Exp;
branches;
next	1.57;
commitid	dPZR6UQHZXpnsR5z;

1.57
date	2016.04.04.20.52.27;	author jlee;	state Exp;
branches;
next	1.56;
commitid	Lp7avkv10vvCRl1z;

1.56
date	2016.03.29.19.17.41;	author jlee;	state Exp;
branches;
next	1.55;
commitid	8ywpPKB7TjU3xz0z;

1.55
date	2016.03.28.00.58.58;	author jlee;	state Exp;
branches;
next	1.54;
commitid	5C4DqTbsLnd8ul0z;

1.54
date	2016.03.26.21.29.23;	author jlee;	state Exp;
branches;
next	1.53;
commitid	R20Od6NioP8emc0z;

1.53
date	2016.03.26.16.43.07;	author jlee;	state Exp;
branches;
next	1.52;
commitid	1qjVUY4fFt21Ma0z;

1.52
date	2016.03.25.19.59.07;	author jlee;	state Exp;
branches;
next	1.51;
commitid	ZKDMXPRZKhDfT30z;

1.51
date	2016.01.08.21.37.38;	author jlee;	state Exp;
branches;
next	1.50;
commitid	7xtchPkzB0cvUaQy;

1.50
date	2015.11.15.00.09.48;	author jlee;	state Exp;
branches;
next	1.49;
commitid	oJ6rSmtkg3Ajw7Jy;

1.49
date	2015.11.08.17.56.15;	author bavison;	state Exp;
branches;
next	1.48;
commitid	TjPJn9AS0Ro7EjIy;

1.48
date	2015.10.29.20.19.33;	author rsprowson;	state Exp;
branches;
next	1.47;
commitid	1iNPdqltdm6dL2Hy;

1.47
date	2015.08.14.22.29.09;	author jlee;	state Exp;
branches;
next	1.46;
commitid	BZOMVZkX7Va8Vhxy;

1.46
date	2015.08.05.22.00.10;	author jlee;	state Exp;
branches;
next	1.45;
commitid	tfiAygPuGDQ738wy;

1.45
date	2015.07.26.18.57.56;	author jlee;	state Exp;
branches;
next	1.44;
commitid	n3kZvFwWGn3xmPuy;

1.44
date	2015.02.16.20.06.53;	author rsprowson;	state Exp;
branches;
next	1.43;
commitid	QOtNRBLzpUD3Tgay;

1.43
date	2015.02.07.02.16.46;	author jlee;	state Exp;
branches;
next	1.42;
commitid	FIaMdabVR7wSf19y;

1.42
date	2015.02.03.19.16.51;	author bavison;	state Exp;
branches;
next	1.41;
commitid	2aTRhX3DBFvN1B8y;

1.41
date	2015.02.02.20.12.23;	author bavison;	state Exp;
branches;
next	1.40;
commitid	EsDjinl6FelQmt8y;

1.40
date	2015.02.02.13.28.26;	author bavison;	state Exp;
branches;
next	1.39;
commitid	ElEkWbWLEdDg8r8y;

1.39
date	2014.10.30.11.41.23;	author bavison;	state Exp;
branches;
next	1.38;
commitid	6KqMqJ497wNRAdWx;

1.38
date	2014.10.25.17.57.02;	author rsprowson;	state Exp;
branches;
next	1.37;
commitid	6bl3CCF7UbUHPBVx;

1.37
date	2014.10.09.07.14.14;	author rsprowson;	state Exp;
branches;
next	1.36;
commitid	2ULTXIlzcLC4NuTx;

1.36
date	2014.09.17.07.56.54;	author rsprowson;	state Exp;
branches;
next	1.35;
commitid	dVnNSpZ6v2ryJFQx;

1.35
date	2014.07.14.09.12.47;	author bavison;	state Exp;
branches;
next	1.34;
commitid	LsZUP34QhmC7fkIx;

1.34
date	2014.06.19.21.03.13;	author jlee;	state Exp;
branches;
next	1.33;
commitid	EcK8j6AjJmkFYaFx;

1.33
date	2014.04.29.13.11.39;	author bavison;	state Exp;
branches;
next	1.32;
commitid	XTukLgbliNPw0Ayx;

1.32
date	2014.04.13.09.04.20;	author rsprowson;	state Exp;
branches;
next	1.31;
commitid	Xh6TDzI29rgz9vwx;

1.31
date	2013.12.19.01.29.10;	author jlee;	state Exp;
branches;
next	1.30;
commitid	9aIOPJd7daoBkGhx;

1.30
date	2013.12.15.22.16.04;	author jlee;	state Exp;
branches;
next	1.29;
commitid	T2h6gFw85uUkmhhx;

1.29
date	2013.01.22.23.28.46;	author jlee;	state Exp;
branches;
next	1.28;
commitid	rTORMrQfEY7XggBw;

1.28
date	2013.01.20.12.22.54;	author rsprowson;	state Exp;
branches;
next	1.27;
commitid	to9W7DXiNcFvEWAw;

1.27
date	2012.09.18.20.00.15;	author rsprowson;	state Exp;
branches;
next	1.26;
commitid	t3AxX2bIshWwa3lw;

1.26
date	2012.09.18.15.56.16;	author jlee;	state Exp;
branches;
next	1.25;
commitid	Q7RFVaT25YGPO1lw;

1.25
date	2012.09.18.13.49.12;	author jlee;	state Exp;
branches;
next	1.24;
commitid	kPVw3k71agHe71lw;

1.24
date	2012.09.10.21.32.43;	author jlee;	state Exp;
branches;
next	1.23;
commitid	L45O4zI0nGicW1kw;

1.23
date	2012.09.08.23.39.44;	author jlee;	state Exp;
branches;
next	1.22;
commitid	5mzVM9Zii5AKHMjw;

1.22
date	2012.09.08.12.46.08;	author jlee;	state Exp;
branches;
next	1.21;
commitid	B5V3jq9teWHw5Jjw;

1.21
date	2012.09.02.20.03.39;	author jlee;	state Exp;
branches;
next	1.20;
commitid	FetF3i2OxxUzHZiw;

1.20
date	2012.08.28.23.12.39;	author bavison;	state Exp;
branches;
next	1.19;
commitid	BMUpqstey7aoUmiw;

1.19
date	2012.08.24.19.12.53;	author jballance;	state Exp;
branches;
next	1.18;
commitid	S2rvE3qMgEc6IPhw;

1.18
date	2012.08.08.22.51.09;	author jlee;	state Exp;
branches;
next	1.17;
commitid	FaqKbVzpT5yRqNfw;

1.17
date	2012.08.02.00.43.27;	author jlee;	state Exp;
branches;
next	1.16;
commitid	p73b1WEma91lhUew;

1.16
date	2012.07.23.23.06.48;	author jballance;	state Exp;
branches;
next	1.15;
commitid	iPi94JlBTrB72Kdw;

1.15
date	2012.07.22.22.32.49;	author jballance;	state Exp;
branches;
next	1.14;
commitid	6IVuPWq7pOksSBdw;

1.14
date	2012.07.19.10.29.20;	author jballance;	state Exp;
branches;
next	1.13;
commitid	7w2Uohftp8BdY9dw;

1.13
date	2012.07.16.23.30.40;	author jlee;	state Exp;
branches;
next	1.12;
commitid	iGPaMrXamo0goQcw;

1.12
date	2012.07.15.12.00.52;	author bavison;	state Exp;
branches;
next	1.11;
commitid	MovUER9fG0yBBEcw;

1.11
date	2012.07.07.19.46.20;	author jlee;	state Exp;
branches;
next	1.10;
commitid	qeOmpWpRzmnerFbw;

1.10
date	2012.07.01.20.26.35;	author bavison;	state Exp;
branches;
next	1.9;
commitid	WH7Fa39f5fh0RTaw;

1.9
date	2012.06.15.14.40.13;	author bavison;	state Exp;
branches;
next	1.8;
commitid	GozidpkBTrLSrO8w;

1.8
date	2012.06.06.23.34.47;	author jlee;	state Exp;
branches;
next	1.7;
commitid	K3wKcUWWf47oHH7w;

1.7
date	2012.06.03.14.03.36;	author jlee;	state Exp;
branches;
next	1.6;
commitid	xDMdy452l0MpDg7w;

1.6
date	2012.05.24.11.30.03;	author bavison;	state Exp;
branches;
next	1.5;
commitid	ktC5TlFk2flF6Y5w;

1.5
date	2012.05.24.07.18.21;	author jballance;	state Exp;
branches;
next	1.4;
commitid	VRHTZUnHjfOjIW5w;

1.4
date	2012.05.23.21.45.04;	author bavison;	state Exp;
branches;
next	1.3;
commitid	dyGUTwLbAf3ExT5w;

1.3
date	2012.05.22.23.56.15;	author jballance;	state Exp;
branches;
next	1.2;
commitid	9zrOo5VjFU0EiM5w;

1.2
date	2012.05.20.20.52.45;	author jballance;	state Exp;
branches;
next	1.1;
commitid	2BhE7hfsP23Glv5w;

1.1
date	2012.05.10.14.55.21;	author bavison;	state Exp;
branches;
next	;
commitid	cq3yF2R3c630Hb4w;

1.70.2.1
date	2017.07.29.11.37.38;	author jlee;	state Exp;
branches;
next	1.70.2.2;
commitid	leIbdlwVfACHk71A;

1.70.2.2
date	2017.07.31.22.18.12;	author jlee;	state Exp;
branches;
next	1.70.2.3;
commitid	VmVokWQ7fiZsOq1A;

1.70.2.3
date	2017.09.10.11.28.53;	author jlee;	state Exp;
branches;
next	1.70.2.4;
commitid	4Ldk9lS2jPl0UD6A;

1.70.2.4
date	2018.07.07.14.12.52;	author jlee;	state Exp;
branches;
next	;
commitid	rGMJuwVBIwKoadJA;


desc
@@


1.76
log
@Merge SMP branch to trunk
Detail:
  hdr/StaticWS - Reserve workspace for QA7 peripheral address, HAL-wide spinlock, and doorbell device
  Makefile, s/DBell - Add doorbell device implementation
  hdr/BCM2835 - Clean up dead macros, add new macros for spinlock claim/release and basic CPU detection. Define new IRQ numbers for the "QA7" peripheral.
  hdr/CastleMacros, s/Top - Generate two HAL descriptors and entry point tables: One for single-core machines and one for multi-core machines. This avoids some MP-related overheads on ARM11 models of Pi. Implement SMP HAL entry points.
  s/Interrupts - Add support for the QA7 interrupts. Although some interrupts can be flexibly routed to different cores, we currently stick with a static scheme.
  s/Messaging - Use CPUDetect macro
Admin:
  Untested
  Requires Kernel-6_09


Version 0.76. Tagged as 'BCM2835-0_76'
@
text
@/* (0.76)
 *
 * This file is automatically maintained by srccommit, do not edit manually.
 * Last processed by srccommit version: 1.1.
 *
 */
#define Module_MajorVersion_CMHG        0.76
#define Module_MinorVersion_CMHG        
#define Module_Date_CMHG                07 Jul 2018

#define Module_MajorVersion             "0.76"
#define Module_Version                  76
#define Module_MinorVersion             ""
#define Module_Date                     "07 Jul 2018"

#define Module_ApplicationDate          "07-Jul-18"

#define Module_ComponentName            "BCM2835"
#define Module_ComponentPath            "mixed/RiscOS/Sources/HAL/BCM2835"

#define Module_FullVersion              "0.76"
#define Module_HelpVersion              "0.76 (07 Jul 2018)"
#define Module_LibraryVersionInfo       "0:76"
@


1.75
log
@Safe GPIO pins table updates
Add Pi3 B+ and Zero W.
Split out CM3 from CM1, since the CM3 reuses some high GPIO lines as bit bashed SMPSU IIC bus, so we can't offer those for GPIO like on CM1.

Version 0.75. Tagged as 'BCM2835-0_75'
@
text
@d1 1
a1 1
/* (0.75)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.75
d9 1
a9 1
#define Module_Date_CMHG                21 Mar 2018
d11 2
a12 2
#define Module_MajorVersion             "0.75"
#define Module_Version                  75
d14 1
a14 1
#define Module_Date                     "21 Mar 2018"
d16 1
a16 1
#define Module_ApplicationDate          "21-Mar-18"
d21 3
a23 3
#define Module_FullVersion              "0.75"
#define Module_HelpVersion              "0.75 (21 Mar 2018)"
#define Module_LibraryVersionInfo       "0:75"
@


1.74
log
@Fix SD activity LED on 3B+
Detail:
  hdr/BCM2835 - Add some new board revision values
  s/SDIO - Treat the 3B+ the same as the 3B when handling the activity LED. Also detect the Embest-manufactured CM1 and treat it the same as the Sony one.
Admin:
  Tested on Raspberry Pi 3B+


Version 0.74. Tagged as 'BCM2835-0_74'
@
text
@d1 1
a1 1
/* (0.74)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.74
d9 1
a9 1
#define Module_Date_CMHG                19 Mar 2018
d11 2
a12 2
#define Module_MajorVersion             "0.74"
#define Module_Version                  74
d14 1
a14 1
#define Module_Date                     "19 Mar 2018"
d16 1
a16 1
#define Module_ApplicationDate          "19-Mar-18"
d21 3
a23 3
#define Module_FullVersion              "0.74"
#define Module_HelpVersion              "0.74 (19 Mar 2018)"
#define Module_LibraryVersionInfo       "0:74"
@


1.73
log
@Fix keyboard scan dependencies
Detail:
  s/KbdScan - Add RTSupport to the list of modules (dependency of DWCDriver)
Admin:
  Tested on Raspberry Pi 3


Version 0.73. Tagged as 'BCM2835-0_73'
@
text
@d1 1
a1 1
/* (0.73)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.73
d9 1
a9 1
#define Module_Date_CMHG                10 Sep 2017
d11 2
a12 2
#define Module_MajorVersion             "0.73"
#define Module_Version                  73
d14 1
a14 1
#define Module_Date                     "10 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "10-Sep-17"
d21 3
a23 3
#define Module_FullVersion              "0.73"
#define Module_HelpVersion              "0.73 (10 Sep 2017)"
#define Module_LibraryVersionInfo       "0:73"
@


1.72
log
@Participate in keyboard scan dependencies
Detail:
  Add keyboard scan code with list of modules that the kernel needs to do the same.
  Reorder the HALEntries to match Kernel-5_89.
  Remove unused stub functions (now KbdScan exists).
Admin:
  Submission for USB bounty.

Version 0.72. Tagged as 'BCM2835-0_72'
@
text
@d1 1
a1 1
/* (0.72)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.72
d9 1
a9 1
#define Module_Date_CMHG                09 Sep 2017
d11 2
a12 2
#define Module_MajorVersion             "0.72"
#define Module_Version                  72
d14 1
a14 1
#define Module_Date                     "09 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "09-Sep-17"
d21 3
a23 3
#define Module_FullVersion              "0.72"
#define Module_HelpVersion              "0.72 (09 Sep 2017)"
#define Module_LibraryVersionInfo       "0:72"
@


1.71
log
@Fix compatibility with latest firmware
Detail:
  Firmware as of 28th July will allow the GPU to make use of the top 16MB of RAM in 1GB machines. This overlaps the ARM's IO space, essentially making that area of memory inaccessible to us.
  This causes problems because we rely on a couple of buffers which are located in VC memory (virtual GPIO buffer & FT5406 touchscreen buffer)
  At some point extra mailbox messages were added to allow the ARM to dictate the location of these buffers; so make use of those messages wherever possible.
  File changes:
  s/Messaging - Remove VirtGPIOBuf and TouchBuf related tags from the initialisation tag sequence. Add new GetVCBuffer function that can be called post-MMU init to deal with getting/setting the buffer addresses.
  s/Top - Use GetVCBuffer to initialise VirtGPIOBuf
  s/Touch - Use GetVCBuffer to get touchscreen buffer
  hdr/StaticWS - Remove TouchBuf from workspace, no longer needed
Admin:
  Tested on Raspberry Pi 3 with firmware from March 2016 (Set commands not supported), 21st July 2017 (set commands supported, but upper 16MB not used), 28th July 2017 (set commands supported and necessary)


Version 0.71. Tagged as 'BCM2835-0_71'
@
text
@d1 1
a1 1
/* (0.71)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.71
d9 1
a9 1
#define Module_Date_CMHG                31 Jul 2017
d11 2
a12 2
#define Module_MajorVersion             "0.71"
#define Module_Version                  71
d14 1
a14 1
#define Module_Date                     "31 Jul 2017"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jul-17"
d21 3
a23 3
#define Module_FullVersion              "0.71"
#define Module_HelpVersion              "0.71 (31 Jul 2017)"
#define Module_LibraryVersionInfo       "0:71"
@


1.70
log
@Add new scheme ids for A+ and B+ to id table
Apparently there are some A+ 1.1 and B+ 1.2's in the wild not built with their former id's (0x12 and 0x13) but using the newer 24 bit id scheme. Add aliases for these.

Version 0.70. Tagged as 'BCM2835-0_70'
@
text
@d1 1
a1 1
/* (0.70)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.70
d9 1
a9 1
#define Module_Date_CMHG                14 May 2017
d11 2
a12 2
#define Module_MajorVersion             "0.70"
#define Module_Version                  70
d14 1
a14 1
#define Module_Date                     "14 May 2017"
d16 1
a16 1
#define Module_ApplicationDate          "14-May-17"
d21 3
a23 3
#define Module_FullVersion              "0.70"
#define Module_HelpVersion              "0.70 (14 May 2017)"
#define Module_LibraryVersionInfo       "0:70"
@


1.70.2.1
log
@Initial SMP support
Detail:
  hdr/BCM2835 - Delete unused timer macros. Add basic spinlock claim/release macros. Add CPUDetect macro to encapsulate ARM11 vs. A7/A53 detection. Add definitions for the "QA7" interrupts.
  Makefile, s/DBell - Add doorbell device driver
  hdr/StaticWS - Reserve workspace for doorbell device, QA7 interrupt controller ptr, spinlock
  s/Top, hdr/CastleMacros - Generate two HAL entry point tables, one for ARM11, one for A7/A53. Use CPUDetect macro. Implement new SMP-related HAL entry points.
  s/Interrupts - Implement support for the QA7 interrupt controller and the new IRQ-related HAL entry points
  s/Messaging - Use CPUDetect macro
Admin:
  Tested on Raspberry Pi 1, 2, 3


Version 0.70, 1.70.2.1. Tagged as 'BCM2835-0_70-1_70_2_1'
@
text
@d8 2
a9 2
#define Module_MinorVersion_CMHG        1.70.2.1
#define Module_Date_CMHG                29 Jul 2017
d13 2
a14 2
#define Module_MinorVersion             "1.70.2.1"
#define Module_Date                     "29 Jul 2017"
d16 1
a16 1
#define Module_ApplicationDate          "29-Jul-17"
d21 2
a22 2
#define Module_FullVersion              "0.70 (1.70.2.1)"
#define Module_HelpVersion              "0.70 (29 Jul 2017) 1.70.2.1"
@


1.70.2.2
log
@Merge in latest HEAD
Detail:
  Merge in changes since BCM2835-0_70 to keep SMP branch up to date
Admin:
  Untested


Version 0.71, 1.70.2.2. Tagged as 'BCM2835-0_71-1_70_2_2'
@
text
@d1 1
a1 1
/* (0.71)
d7 3
a9 3
#define Module_MajorVersion_CMHG        0.71
#define Module_MinorVersion_CMHG        1.70.2.2
#define Module_Date_CMHG                31 Jul 2017
d11 4
a14 4
#define Module_MajorVersion             "0.71"
#define Module_Version                  71
#define Module_MinorVersion             "1.70.2.2"
#define Module_Date                     "31 Jul 2017"
d16 1
a16 1
#define Module_ApplicationDate          "31-Jul-17"
d21 3
a23 3
#define Module_FullVersion              "0.71 (1.70.2.2)"
#define Module_HelpVersion              "0.71 (31 Jul 2017) 1.70.2.2"
#define Module_LibraryVersionInfo       "0:71"
@


1.70.2.3
log
@Merge latest changes from main branch

Version 0.73, 1.70.2.3. Tagged as 'BCM2835-0_73-1_70_2_3'
@
text
@d1 1
a1 1
/* (0.73)
d7 3
a9 3
#define Module_MajorVersion_CMHG        0.73
#define Module_MinorVersion_CMHG        1.70.2.3
#define Module_Date_CMHG                10 Sep 2017
d11 4
a14 4
#define Module_MajorVersion             "0.73"
#define Module_Version                  73
#define Module_MinorVersion             "1.70.2.3"
#define Module_Date                     "10 Sep 2017"
d16 1
a16 1
#define Module_ApplicationDate          "10-Sep-17"
d21 3
a23 3
#define Module_FullVersion              "0.73 (1.70.2.3)"
#define Module_HelpVersion              "0.73 (10 Sep 2017) 1.70.2.3"
#define Module_LibraryVersionInfo       "0:73"
@


1.70.2.4
log
@Merge latest changes from HEAD

Version 0.75, 1.70.2.4. Tagged as 'BCM2835-0_75-1_70_2_4'
@
text
@d1 1
a1 1
/* (0.75)
d7 3
a9 3
#define Module_MajorVersion_CMHG        0.75
#define Module_MinorVersion_CMHG        1.70.2.4
#define Module_Date_CMHG                07 Jul 2018
d11 4
a14 4
#define Module_MajorVersion             "0.75"
#define Module_Version                  75
#define Module_MinorVersion             "1.70.2.4"
#define Module_Date                     "07 Jul 2018"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jul-18"
d21 3
a23 3
#define Module_FullVersion              "0.75 (1.70.2.4)"
#define Module_HelpVersion              "0.75 (07 Jul 2018) 1.70.2.4"
#define Module_LibraryVersionInfo       "0:75"
@


1.69
log
@Add support for CM3 and CM3L with or without eMMC
The SDIO HAL device reports when it is sure fixed disc media is attached (ie. eMMC soldered on the same PCB) which causes SDFS to report this to FileCore as a fixed disc, skipping the removable safety checks.
However, CM3 and CM3L both return the same board id so we can't work out which is which. Additionally, someone could attach an external eMMC in theory on a custom expansion board (instead of an SD card socket like the CMIO has).
To resolve this, we assign IO expander line 6 of U8 to be a safety catch. If that line is held low, it signifies this is definitely a CM3 - in effect this is a "definitely has eMMC" or "maybe has eMMC" switch.

Tested on CM1, CM3, CM3L, and a suitably modified CM3 with the help of Chris Hall.

Version 0.69. Tagged as 'BCM2835-0_69'
@
text
@d1 1
a1 1
/* (0.69)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.69
d9 1
a9 1
#define Module_Date_CMHG                21 Feb 2017
d11 2
a12 2
#define Module_MajorVersion             "0.69"
#define Module_Version                  69
d14 1
a14 1
#define Module_Date                     "21 Feb 2017"
d16 1
a16 1
#define Module_ApplicationDate          "21-Feb-17"
d21 3
a23 3
#define Module_FullVersion              "0.69"
#define Module_HelpVersion              "0.69 (21 Feb 2017)"
#define Module_LibraryVersionInfo       "0:69"
@


1.68
log
@Refactor early GPU queries
Remove the baffling double indirection of RamAd (and unused exports SerNo and MacAdd), and treat these the same as the other pre-HAL_Init query results.
This means the scope of the tagbuffer is limited to Messaging.s, rather than having to be kept preserved globally.
Use memcpy() to copy tag list to tagbuffer for clarity.
Tested on a Pi 3.

Version 0.68. Tagged as 'BCM2835-0_68'
@
text
@d1 1
a1 1
/* (0.68)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.68
d11 2
a12 2
#define Module_MajorVersion             "0.68"
#define Module_Version                  68
d21 3
a23 3
#define Module_FullVersion              "0.68"
#define Module_HelpVersion              "0.68 (21 Feb 2017)"
#define Module_LibraryVersionInfo       "0:68"
@


1.67
log
@Transition Pi HAL to GPIO API 1.00
Detail:
  Move the register accesses for GPIO to the HAL, since they are hardware specific.
  Add recognition of board types for Pi 3, Compute module 3, rev 3 Pi 0's, and the newer Pi 2's with BCM2837 on them.
Admin:
  Based in part on a submission from Tank.
  Tested on a Pi 2. Requires corresponding GPIO module (tag GPIO-1_00-1_11_2_1 or later).

Version 0.67. Tagged as 'BCM2835-0_67'
@
text
@d1 1
a1 1
/* (0.67)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.67
d9 1
a9 1
#define Module_Date_CMHG                11 Feb 2017
d11 2
a12 2
#define Module_MajorVersion             "0.67"
#define Module_Version                  67
d14 1
a14 1
#define Module_Date                     "11 Feb 2017"
d16 1
a16 1
#define Module_ApplicationDate          "11-Feb-17"
d21 3
a23 3
#define Module_FullVersion              "0.67"
#define Module_HelpVersion              "0.67 (11 Feb 2017)"
#define Module_LibraryVersionInfo       "0:67"
@


1.66
log
@Add JTAG debugging support
Detail:
  hdr/BCM2835 - Add switch to allow GPIOs 22-27 to be reconfigured for ARM JTAG access
  s/Top - Configure GPIOs for JTAG if switch enabled
  s/GPIO - Disable GPIO HAL device if JTAG enabled (try and avoid any software messing with the pins)
Admin:
  Tested on Raspberry Pi 1 B, B+


Version 0.66. Tagged as 'BCM2835-0_66'
@
text
@d1 1
a1 1
/* (0.66)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.66
d9 1
a9 1
#define Module_Date_CMHG                20 Jan 2017
d11 2
a12 2
#define Module_MajorVersion             "0.66"
#define Module_Version                  66
d14 1
a14 1
#define Module_Date                     "20 Jan 2017"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jan-17"
d21 3
a23 3
#define Module_FullVersion              "0.66"
#define Module_HelpVersion              "0.66 (20 Jan 2017)"
#define Module_LibraryVersionInfo       "0:66"
@


1.65
log
@Fix crash with HALDebug {TRUE}
Detail:
  s/Top - Update internal HAL debug functions to preserve all the required registers; the new HAL_Debug / UART function implementations corrupt more of the caller-save registers than the old ones did
Admin:
  Tested on Raspberry Pi


Version 0.65. Tagged as 'BCM2835-0_65'
@
text
@d1 1
a1 1
/* (0.65)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.65
d9 1
a9 1
#define Module_Date_CMHG                12 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "0.65"
#define Module_Version                  65
d14 1
a14 1
#define Module_Date                     "12 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "12-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "0.65"
#define Module_HelpVersion              "0.65 (12 Dec 2016)"
#define Module_LibraryVersionInfo       "0:65"
@


1.64
log
@Report POR flag to the kernel
Detail:
  Look at the reset status register and use the HADPOR flag to influence the OSStartFlag_POR value.
  Fixes problem of OS_Byte 253 always reporting a hard reset, never a power on reset.
Admin:
  Tested on a Pi 2.
  Submission for USB bounty.

Version 0.64. Tagged as 'BCM2835-0_64'
@
text
@d1 1
a1 1
/* (0.64)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.64
d9 1
a9 1
#define Module_Date_CMHG                10 Dec 2016
d11 2
a12 2
#define Module_MajorVersion             "0.64"
#define Module_Version                  64
d14 1
a14 1
#define Module_Date                     "10 Dec 2016"
d16 1
a16 1
#define Module_ApplicationDate          "10-Dec-16"
d21 3
a23 3
#define Module_FullVersion              "0.64"
#define Module_HelpVersion              "0.64 (10 Dec 2016)"
#define Module_LibraryVersionInfo       "0:64"
@


1.63
log
@Fix UART error IRQs not being cleared
Detail:
  s/UART - Update HAL_UARTReceiveByte to clear error IRQs when the FIFO is believed to be empty. Disable IRQs in some complex routines to prevent any re-entrancy issues, and also clear the RX threshold IRQ when flushing the FIFOs or adjusting the threshold level.
Admin:
  Tested on Raspberry Pi 1
  Resolves ticket #429


Version 0.63. Tagged as 'BCM2835-0_63'
@
text
@d1 1
a1 1
/* (0.63)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.63
d9 1
a9 1
#define Module_Date_CMHG                25 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "0.63"
#define Module_Version                  63
d14 1
a14 1
#define Module_Date                     "25 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "25-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "0.63"
#define Module_HelpVersion              "0.63 (25 Oct 2016)"
#define Module_LibraryVersionInfo       "0:63"
@


1.62
log
@Move the board rev definitions into hdr
Detail:
  Useful if not just SDIO can see the definitions.

Version 0.62. Tagged as 'BCM2835-0_62'
@
text
@d1 1
a1 1
/* (0.62)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.62
d9 1
a9 1
#define Module_Date_CMHG                22 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "0.62"
#define Module_Version                  62
d14 1
a14 1
#define Module_Date                     "22 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "22-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "0.62"
#define Module_HelpVersion              "0.62 (22 Oct 2016)"
#define Module_LibraryVersionInfo       "0:62"
@


1.61
log
@Move CMOS settings out of riscos.img
The Pi is unusual in self modifying the ROM image when a CMOS setting was changed (due to there being none on the PCB), with the potential of ending up with a corrupt OS image on disc.
Remove this code and emulate the CMOS using normal RAM, and using the Pi firmware to load the CMOS file in for us (like fatload does on OMAP based designs) by using its ability to load a second arbitrary file at an address, intended in the Linux world to load a disc image.

To use this you will need to add
  ramfsfile=CMOS
  ramfsaddr=0x508000
to config.txt which loads it 5MB (ie. ImageSize) above the default load address (&8000), though as noted in the changes to BCM2835-0_60 we don't really need to load at offset &8000 but generally do since that's the Pi firmware's default.

hdr/StaticWS:
New workspace to hold our CMOS copy.
CMOS.s:
Remove the 2k magic block, add a simple bytewise copy loop implementation.
SDIO.s:
Extend ADR range.
Top.s:
Copy what the Pi firmware loads somewhere safe until the MMU is on, then copy it back (converting from logical to physical order along the way).
Change other values recovered from pre-MMU times using advanced post indexed addressing technology (TM) rather than switching around sb a lot.

Tested on a Pi 3, with and without an initial CMOS file present.

Version 0.61. Tagged as 'BCM2835-0_61'
@
text
@d1 1
a1 1
/* (0.61)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.61
d9 1
a9 1
#define Module_Date_CMHG                15 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "0.61"
#define Module_Version                  61
d14 1
a14 1
#define Module_Date                     "15 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "15-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "0.61"
#define Module_HelpVersion              "0.61 (15 Oct 2016)"
#define Module_LibraryVersionInfo       "0:61"
@


1.60
log
@Groundwork
IIC.s/Stubs.s:
Don't import workspace when it's not used
Top.s:
Move the dead loops to just after the vectors. In practice these are ineffectual because the firmware (now) loads the image at &8000 to please Linux, so we're mostly wasting our time producing ROM images with vectors at the start.
Pad image to &8000 so it can be loaded at 0 (using Kernel_Old=1 in config.txt) or &8000 (default).
Line up/capitalise a few stray mnemonics, use APCS register naming.
Call HAL_DebugTXStrInline for "HAL Init completed" rather than an inline loop, since earlier in the same function we called HAL_DebugTXStrInline happily.

Version 0.60. Tagged as 'BCM2835-0_60'
@
text
@d1 1
a1 1
/* (0.60)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.60
d11 2
a12 2
#define Module_MajorVersion             "0.60"
#define Module_Version                  60
d21 3
a23 3
#define Module_FullVersion              "0.60"
#define Module_HelpVersion              "0.60 (15 Oct 2016)"
#define Module_LibraryVersionInfo       "0:60"
@


1.59
log
@Implement HAL UART API. Tidy up debug output.
Detail:
  hdr/BCM2835, hdr/StaticWS, s/Debug, s/Top, s/Video - Fix up the two serial debug switches to work correctly. Disable debug by default.
  s/UART, hdr/UART - Implement HAL UART API, for the PL011 UART.
Admin:
  Tested on Raspberry Pi 1 B
  Requires DualSerial 0.25 to work correctly


Version 0.59. Tagged as 'BCM2835-0_59'
@
text
@d1 1
a1 1
/* (0.59)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.59
d9 1
a9 1
#define Module_Date_CMHG                09 Oct 2016
d11 2
a12 2
#define Module_MajorVersion             "0.59"
#define Module_Version                  59
d14 1
a14 1
#define Module_Date                     "09 Oct 2016"
d16 1
a16 1
#define Module_ApplicationDate          "09-Oct-16"
d21 3
a23 3
#define Module_FullVersion              "0.59"
#define Module_HelpVersion              "0.59 (09 Oct 2016)"
#define Module_LibraryVersionInfo       "0:59"
@


1.58
log
@GET Hdr:CPU.Arch
Detail:
  s/SDIO - Add a GET of Hdr:CPU.Arch, as it's now required for use of the DivRem macro
Admin:
  Tested on Raspberry Pi


Version 0.58. Tagged as 'BCM2835-0_58'
@
text
@d1 1
a1 1
/* (0.58)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.58
d9 1
a9 1
#define Module_Date_CMHG                10 May 2016
d11 2
a12 2
#define Module_MajorVersion             "0.58"
#define Module_Version                  58
d14 1
a14 1
#define Module_Date                     "10 May 2016"
d16 1
a16 1
#define Module_ApplicationDate          "10-May-16"
d21 3
a23 3
#define Module_FullVersion              "0.58"
#define Module_HelpVersion              "0.58 (10 May 2016)"
#define Module_LibraryVersionInfo       "0:58"
@


1.57
log
@Fix sticky SD activity LED on Pi 3 B
Detail:
  s/SDIO - Signed counter wrap-around once &80007fff was reached was causing the code to think the activity LED was permanently off, resulting in the code only making "turn on" requests. Calculating the difference as a (signed) 16bit value solves the problem.
Admin:
  Tested on Pi 3 B
  Fixes SD activity LED being stuck on after e.g. letting Verify run for a few seconds.


Version 0.57. Tagged as 'BCM2835-0_57'
@
text
@d1 1
a1 1
/* (0.57)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.57
d9 1
a9 1
#define Module_Date_CMHG                04 Apr 2016
d11 2
a12 2
#define Module_MajorVersion             "0.57"
#define Module_Version                  57
d14 1
a14 1
#define Module_Date                     "04 Apr 2016"
d16 1
a16 1
#define Module_ApplicationDate          "04-Apr-16"
d21 3
a23 3
#define Module_FullVersion              "0.57"
#define Module_HelpVersion              "0.57 (04 Apr 2016)"
#define Module_LibraryVersionInfo       "0:57"
@


1.56
log
@Fix waiting on wrong mailbox address
Detail:
  s/Top - Fix cores sat in the holding pattern waiting on a write to the wrong address. Also, set up lr so we can return to the holding pattern if desired.
Admin:
  Tested on Pi 3 B
  Now possible to launch simple code sequences on the other cores


Version 0.56. Tagged as 'BCM2835-0_56'
@
text
@d1 1
a1 1
/* (0.56)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.56
d9 1
a9 1
#define Module_Date_CMHG                29 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "0.56"
#define Module_Version                  56
d14 1
a14 1
#define Module_Date                     "29 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "29-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "0.56"
#define Module_HelpVersion              "0.56 (29 Mar 2016)"
#define Module_LibraryVersionInfo       "0:56"
@


1.55
log
@Put the other cores into a holding pattern
Detail:
  s/Top - On multi-core chips, the ARM boot stub has the other cores sat waiting in a loop near &0. Clearing RAM will inadvertantly break them out of this and most likely cause random crashes later on, so inbetween relocating the ROM and clearing RAM make sure we put the cores into a sleep loop in the HAL. Further mailbox writes can then be used to break them out of this loop, using a similar scheme to that used to break them out of the boot stub loop.
  hdr/BCM2835 - Add some register definitions from the BCM2836 docs
Admin:
  Tested on Pi 2B, 3B
  Not currently dealing with kernel_old=1 case where all cores enter the ROM on startup


Version 0.55. Tagged as 'BCM2835-0_55'
@
text
@d1 1
a1 1
/* (0.55)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.55
d9 1
a9 1
#define Module_Date_CMHG                28 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "0.55"
#define Module_Version                  55
d14 1
a14 1
#define Module_Date                     "28 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "28-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "0.55"
#define Module_HelpVersion              "0.55 (28 Mar 2016)"
#define Module_LibraryVersionInfo       "0:55"
@


1.54
log
@Fix SD card activity LED on Pi 3B
Detail:
  hdr/BCM2835 - Remove mailbox definitions - use the ones exported by BCMSupport to avoid needless duplication
  hdr/StaticWS, s/Messaging, s/Top - Use the mailbox property interface to request & map in the virtual GPIO buffer (if present)
  s/SDIO - On the Pi 3B, the GPIO that was used for the SD activity GPIO is now used for a different purpose. To control the activity LED we need to go via an I2C attached GPIO extender, which itself is exposed to the ARM via the new "virtual GPIO" buffer
  s/VCHIQ - Update to use BCMSupport mailbox definitions
Admin:
  Tested on Pi 1B, 3B


Version 0.54. Tagged as 'BCM2835-0_54'
@
text
@d1 1
a1 1
/* (0.54)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.54
d9 1
a9 1
#define Module_Date_CMHG                26 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "0.54"
#define Module_Version                  54
d14 1
a14 1
#define Module_Date                     "26 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "26-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "0.54"
#define Module_HelpVersion              "0.54 (26 Mar 2016)"
#define Module_LibraryVersionInfo       "0:54"
@


1.53
log
@Fix constant under-voltage warnings on Pi 3
Detail:
  s/IIC - Only adjust the pin mux settings for the pins + IIC controller which we're using, the other pins/controllers might be being used for another purpose (on Pi 3 GPIO0/SDA0 seems related to power control/under-voltage detection)
Admin:
  Tested on Pi 3
  Fixes constant rainbow square (under-volt warning) shown by firmware and inability to scale clock speed above default


Version 0.53. Tagged as 'BCM2835-0_53'
@
text
@d1 1
a1 1
/* (0.53)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.53
d11 2
a12 2
#define Module_MajorVersion             "0.53"
#define Module_Version                  53
d21 3
a23 3
#define Module_FullVersion              "0.53"
#define Module_HelpVersion              "0.53 (26 Mar 2016)"
#define Module_LibraryVersionInfo       "0:53"
@


1.52
log
@Fix Pi 3 UART clock rate. Add HAL device for the GPU mailboxes.
Detail:
  s/Messaging - Ensure the PL011 UART module clock is set to 3MHz on startup, in order to allow the debug terminal to work
  hdr/StaticWS, s/Top - Add a basic HAL device to expose the GPU mailboxes
Admin:
  Tested on Raspberry Pi 1B/2B/3B
  Fixes garbled debug terminal input/output on Pi 3


Version 0.52. Tagged as 'BCM2835-0_52'
@
text
@d1 1
a1 1
/* (0.52)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.52
d9 1
a9 1
#define Module_Date_CMHG                25 Mar 2016
d11 2
a12 2
#define Module_MajorVersion             "0.52"
#define Module_Version                  52
d14 1
a14 1
#define Module_Date                     "25 Mar 2016"
d16 1
a16 1
#define Module_ApplicationDate          "25-Mar-16"
d21 3
a23 3
#define Module_FullVersion              "0.52"
#define Module_HelpVersion              "0.52 (25 Mar 2016)"
#define Module_LibraryVersionInfo       "0:52"
@


1.51
log
@Fix build error. Add HAL_PlatformName implementation.
Detail:
  s/Stubs, s/Top - Remove references to deleted HAL ATA calls
  s/GPIO, s/Top - Add implementation of HAL_PlatformName. Located in s/GPIO to allow easy re-use of the board revision table.
Admin:
  Tested on Pi 2 Model B


Version 0.51. Tagged as 'BCM2835-0_51'
@
text
@d1 1
a1 1
/* (0.51)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.51
d9 1
a9 1
#define Module_Date_CMHG                08 Jan 2016
d11 2
a12 2
#define Module_MajorVersion             "0.51"
#define Module_Version                  51
d14 1
a14 1
#define Module_Date                     "08 Jan 2016"
d16 1
a16 1
#define Module_ApplicationDate          "08-Jan-16"
d21 3
a23 3
#define Module_FullVersion              "0.51"
#define Module_HelpVersion              "0.51 (08 Jan 2016)"
#define Module_LibraryVersionInfo       "0:51"
@


1.50
log
@Add basic HAL device for the official DSI display/touchscreen. Delete superfluous code.
Detail:
  Makefile, s/Touch - Basic HAL device for the official touchscreen, which just exposes the address of the buffer which the GPU periodically fills with a register dump of the touchscreen controller.
  hdr/BCM2835 - Remove old comment. Add new tag for getting the touchscreen buffer address.
  hdr/StaticWS - Remove old workspace entries. Add new entries for touchscreen.
  s/Messaging - Remove the messagebox tags which set a screen mode on startup (BCMVideo will handle that for us), and just blank the screen instead (to stop the GPU displaying a coloured square). Add tag to get the touchscreen buffer address.
  s/Top - Register touchscreen HAL device during HAL_InitDevices. Remove more old code.
Admin:
  Tested on Raspberry Pi 1 B


Version 0.50. Tagged as 'BCM2835-0_50'
@
text
@d1 1
a1 1
/* (0.50)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.50
d9 1
a9 1
#define Module_Date_CMHG                14 Nov 2015
d11 2
a12 2
#define Module_MajorVersion             "0.50"
#define Module_Version                  50
d14 1
a14 1
#define Module_Date                     "14 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "14-Nov-15"
d21 3
a23 3
#define Module_FullVersion              "0.50"
#define Module_HelpVersion              "0.50 (14 Nov 2015)"
#define Module_LibraryVersionInfo       "0:50"
@


1.49
log
@  Compatibility with latest Pi firmware
Detail:
  * Recent versions of the firmware call the ROM's entry point in HYP mode
    (except for ARM11 boards which don't have it). Detect this eventuality
    and drop into SVC mode safely if so.
  * Whilst testing this fix, I discovered that occasionally, secondary CPUs
    seem to be being woken up, and start executing the ROM entry point also.
    This shouldn't be happening, but for safety's sake, I'm detecting this
    eventuality and putting any secondary CPUs into a sleep loop.
Admin:
  Tested on Pi 1 and 2. Requires HdrSrc 2.56.

Version 0.49. Tagged as 'BCM2835-0_49'
@
text
@d1 1
a1 1
/* (0.49)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.49
d9 1
a9 1
#define Module_Date_CMHG                08 Nov 2015
d11 2
a12 2
#define Module_MajorVersion             "0.49"
#define Module_Version                  49
d14 1
a14 1
#define Module_Date                     "08 Nov 2015"
d16 1
a16 1
#define Module_ApplicationDate          "08-Nov-15"
d21 3
a23 3
#define Module_FullVersion              "0.49"
#define Module_HelpVersion              "0.49 (08 Nov 2015)"
#define Module_LibraryVersionInfo       "0:49"
@


1.48
log
@Build fix
Hdr:GPIODevice is already included via StaticWS.

Version 0.48. Tagged as 'BCM2835-0_48'
@
text
@d1 1
a1 1
/* (0.48)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.48
d9 1
a9 1
#define Module_Date_CMHG                29 Oct 2015
d11 2
a12 2
#define Module_MajorVersion             "0.48"
#define Module_Version                  48
d14 1
a14 1
#define Module_Date                     "29 Oct 2015"
d16 1
a16 1
#define Module_ApplicationDate          "29-Oct-15"
d21 3
a23 3
#define Module_FullVersion              "0.48"
#define Module_HelpVersion              "0.48 (29 Oct 2015)"
#define Module_LibraryVersionInfo       "0:48"
@


1.47
log
@Add extra memory barrier
Detail:
  s/DMA - Although there are already plenty of memory barriers present to deal with the BCM2835's dodgy peripheral interface, code examination suggests one extra barrier is needed to make sure things will work correctly once the default NCB cache policy is Normal, non-cacheable rather than Device.
Admin:
  Tested on Raspberry Pi 1


Version 0.47. Tagged as 'BCM2835-0_47'
@
text
@d1 1
a1 1
/* (0.47)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.47
d9 1
a9 1
#define Module_Date_CMHG                14 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "0.47"
#define Module_Version                  47
d14 1
a14 1
#define Module_Date                     "14 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "14-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "0.47"
#define Module_HelpVersion              "0.47 (14 Aug 2015)"
#define Module_LibraryVersionInfo       "0:47"
@


1.46
log
@Don't map in VC memory
Detail:
  hdr/StaticWS, s/Top - Removed code to map in all of VC memory. Currently nothing needs it, and the code was broken anyway (debug output would corrupt a1 value given to OS_MapInIO)
Admin:
  Tested on Raspberry Pi


Version 0.46. Tagged as 'BCM2835-0_46'
@
text
@d1 1
a1 1
/* (0.46)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.46
d9 1
a9 1
#define Module_Date_CMHG                05 Aug 2015
d11 2
a12 2
#define Module_MajorVersion             "0.46"
#define Module_Version                  46
d14 1
a14 1
#define Module_Date                     "05 Aug 2015"
d16 1
a16 1
#define Module_ApplicationDate          "05-Aug-15"
d21 3
a23 3
#define Module_FullVersion              "0.46"
#define Module_HelpVersion              "0.46 (05 Aug 2015)"
#define Module_LibraryVersionInfo       "0:46"
@


1.45
log
@Add basic HAL devices for the SPI controllers
Detail:
  s/SPI - Basic HAL devices for the 3 SPI controllers. These expose the register addresses & IRQ numbers, and (for SPI1 & SPI2) deal with enabling/disabling the hardware and the shared IRQ line. GPIO mapping currently isn't dealt with - we don't know which pin group to use (SPI0 can use two different sets on the compute) or how many chip select lines are desired.
  Makefile - Add SPI source
  hdr/BCM2835 - Add aux SPI registers
  hdr/StaticWS - Reserve workspace for the HAL devices
  s/Top - Register new devices in HAL_InitDevices
Admin:
  Tested on Raspberry Pi B & 2 B


Version 0.45. Tagged as 'BCM2835-0_45'
@
text
@d1 1
a1 1
/* (0.45)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.45
d9 1
a9 1
#define Module_Date_CMHG                26 Jul 2015
d11 2
a12 2
#define Module_MajorVersion             "0.45"
#define Module_Version                  45
d14 1
a14 1
#define Module_Date                     "26 Jul 2015"
d16 1
a16 1
#define Module_ApplicationDate          "26-Jul-15"
d21 3
a23 3
#define Module_FullVersion              "0.45"
#define Module_HelpVersion              "0.45 (26 Jul 2015)"
#define Module_LibraryVersionInfo       "0:45"
@


1.44
log
@Extend the GPIO table to include A+ and Mk2 model B
Note, this scheme remains non future proof as any later model numbers released will be miscategorised as the last table entry.

Version 0.44. Tagged as 'BCM2835-0_44'
@
text
@d1 1
a1 1
/* (0.44)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.44
d9 1
a9 1
#define Module_Date_CMHG                16 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.44"
#define Module_Version                  44
d14 1
a14 1
#define Module_Date                     "16 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "16-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.44"
#define Module_HelpVersion              "0.44 (16 Feb 2015)"
#define Module_LibraryVersionInfo       "0:44"
@


1.43
log
@Add workaround for Cortex-A7 errata 814220
Detail:
  hdr/BCM2835 - Errata 814220 states that the Cortex-A7 set/way cache maintenance operations violate the usual operation ordering rules, such that an L2 maintenance operation which is started after an L1 operation may actually complete before it, causing data corruption if the L1 data was to be evicted to the L2 entry. Implement the suggested workaround of performing a DSB when switching cache levels, rather than just at the end of the combined L1+L2 group of operations.
  Also, fix missing 99 label that would have caused a stack imbalance in the unlikely event of encountering a processor with fully coherent caches
Admin:
  Tested on Raspberry Pi 2


Version 0.43. Tagged as 'BCM2835-0_43'
@
text
@d1 1
a1 1
/* (0.43)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.43
d9 1
a9 1
#define Module_Date_CMHG                07 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.43"
#define Module_Version                  43
d14 1
a14 1
#define Module_Date                     "07 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "07-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.43"
#define Module_HelpVersion              "0.43 (07 Feb 2015)"
#define Module_LibraryVersionInfo       "0:43"
@


1.42
log
@  Properly supports new board revision scheme for SD source file
Detail:
  Parses the revision ID bitfield for new-style revisions - should provide
  some level of forward compatibility at last. The equivalent code in s.GPIO
  hasn't been tackled yet, mainly because it requires some thought about how
  best to handle the Compute module (given that the daughter card can be
  plugged into any number of devices, each of which will use GPIO differently).
Admin:
  Tested on Compute module and Pi 2 with latest firmware.

Version 0.42. Tagged as 'BCM2835-0_42'
@
text
@d1 1
a1 1
/* (0.42)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.42
d9 1
a9 1
#define Module_Date_CMHG                03 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.42"
#define Module_Version                  42
d14 1
a14 1
#define Module_Date                     "03 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "03-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.42"
#define Module_HelpVersion              "0.42 (03 Feb 2015)"
#define Module_LibraryVersionInfo       "0:42"
@


1.41
log
@  Adapt to release version of Raspberry Pi 2 firmware
Detail:
  The board revision scheme has changed since pre-release firmware, so the
  previous version of the SD code would have misidentified a Pi 2 (as well
  as the model A+) as a Compute module. It looks like in future, board
  revisions could be a more meaningful bitfield rather than the order-of-
  release index that's been used up to now, but at this point we can still
  manage with a cunning combination of CMP and TEQ tests. Note that the GPIO
  part of the HAL hasn't yet been updated to be aware of the new board
  revisions.


Version 0.41. Tagged as 'BCM2835-0_41'
@
text
@d1 1
a1 1
/* (0.41)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.41
d9 1
a9 1
#define Module_Date_CMHG                02 Feb 2015
d11 2
a12 2
#define Module_MajorVersion             "0.41"
#define Module_Version                  41
d14 1
a14 1
#define Module_Date                     "02 Feb 2015"
d16 1
a16 1
#define Module_ApplicationDate          "02-Feb-15"
d21 3
a23 3
#define Module_FullVersion              "0.41"
#define Module_HelpVersion              "0.41 (02 Feb 2015)"
#define Module_LibraryVersionInfo       "0:41"
@


1.40
log
@  Add support for Raspberry Pi Compute module and Raspberry Pi 2
Detail:
  * Compute module support consists of eMMC support in the SDHCI driver. The
    eMMC chip on the Compute module only works reliably if under-clocked to
    25 MHz.
  * Pi 1 vs Pi 2 differences are selected at runtime by checking the CPU ID,
    so a single ROM image will work with both boards.
  * Added ARMv7 cache maintenance routine for use on Pi 2.
  * The physical address of the peripherals has moved in Pi 2 to make space
    for the 1 GB of RAM.
  * The ARM physical address space is mapped differently onto the GPU
    address space in Pi 2 because the ARM now uses the L2 cache that comes
    with the Cortex-A7 instead of the GPU's L2 cache.
  * Still waiting for confirmation on the board revision ID that will be
    used for Pi 2, so may require further tweaks for production releases.


Version 0.40. Tagged as 'BCM2835-0_40'
@
text
@d1 1
a1 1
/* (0.40)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.40
d11 2
a12 2
#define Module_MajorVersion             "0.40"
#define Module_Version                  40
d21 3
a23 3
#define Module_FullVersion              "0.40"
#define Module_HelpVersion              "0.40 (02 Feb 2015)"
#define Module_LibraryVersionInfo       "0:40"
@


1.39
log
@Permit HALDevice_SDHCISize to grow in future

Version 0.39. Tagged as 'BCM2835-0_39'
@
text
@d1 1
a1 1
/* (0.39)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.39
d9 1
a9 1
#define Module_Date_CMHG                30 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.39"
#define Module_Version                  39
d14 1
a14 1
#define Module_Date                     "30 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "30-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.39"
#define Module_HelpVersion              "0.39 (30 Oct 2014)"
#define Module_LibraryVersionInfo       "0:39"
@


1.38
log
@Don't bother providing even dummy implementations of USB port and overcurrent functions
As the flag bit in HAL_USBControllerInfo isn't set, no need to provide them.
Use symbols from Hdr:HALEntries when building the USB info.
Built, but not tested.


Version 0.38. Tagged as 'BCM2835-0_38'
@
text
@d1 1
a1 1
/* (0.38)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.38
d9 1
a9 1
#define Module_Date_CMHG                25 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.38"
#define Module_Version                  38
d14 1
a14 1
#define Module_Date                     "25 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "25-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.38"
#define Module_HelpVersion              "0.38 (25 Oct 2014)"
#define Module_LibraryVersionInfo       "0:38"
@


1.37
log
@Add entry to boardtypes for GPIO for Compute module
There doesn't seem to be a pattern emerging for the allocation of board types, so it's likely that this table will need revisiting again in future as moving the catch all "-1" entry along was identifying a Compute module as a B+.
Submission from TankStage.

Version 0.37. Tagged as 'BCM2835-0_37'
@
text
@d1 1
a1 1
/* (0.37)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.37
d9 1
a9 1
#define Module_Date_CMHG                09 Oct 2014
d11 2
a12 2
#define Module_MajorVersion             "0.37"
#define Module_Version                  37
d14 1
a14 1
#define Module_Date                     "09 Oct 2014"
d16 1
a16 1
#define Module_ApplicationDate          "09-Oct-14"
d21 3
a23 3
#define Module_FullVersion              "0.37"
#define Module_HelpVersion              "0.37 (09 Oct 2014)"
#define Module_LibraryVersionInfo       "0:37"
@


1.36
log
@Propagate fix from IOMD-0_31
Got the IIC transfer data offset wrong, harmless in this HAL since the stack already had to have space for 2 complete transfers.
Not tested.

Version 0.36. Tagged as 'BCM2835-0_36'
@
text
@d1 1
a1 1
/* (0.36)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.36
d9 1
a9 1
#define Module_Date_CMHG                17 Sep 2014
d11 2
a12 2
#define Module_MajorVersion             "0.36"
#define Module_Version                  36
d14 1
a14 1
#define Module_Date                     "17 Sep 2014"
d16 1
a16 1
#define Module_ApplicationDate          "17-Sep-14"
d21 3
a23 3
#define Module_FullVersion              "0.36"
#define Module_HelpVersion              "0.36 (17 Sep 2014)"
#define Module_LibraryVersionInfo       "0:36"
@


1.35
log
@  Support the Raspberry Pi model B+
Detail:
  The activity GPIO pin has been reassigned and its sense is inverted,
  compared to earlier boards. More importantly, the SD card detect pin has
  been removed entirely, so we need to signal to the SD stack to use its
  new timeout-based state machine (rather than polling for card presence).
Admin:
  Already in use in RC12a.

Version 0.35. Tagged as 'BCM2835-0_35'
@
text
@d1 1
a1 1
/* (0.35)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.35
d9 1
a9 1
#define Module_Date_CMHG                14 Jul 2014
d11 2
a12 2
#define Module_MajorVersion             "0.35"
#define Module_Version                  35
d14 1
a14 1
#define Module_Date                     "14 Jul 2014"
d16 1
a16 1
#define Module_ApplicationDate          "14-Jul-14"
d21 3
a23 3
#define Module_FullVersion              "0.35"
#define Module_HelpVersion              "0.35 (14 Jul 2014)"
#define Module_LibraryVersionInfo       "0:35"
@


1.34
log
@Add support code required for DWCDriver 'FIQ fix'
Detail:
  hdr/BCM2835, hdr/USB, s/USB - Update HAL_USBControllerInfo to return the MPHI address & IRQ number
  s/Interrupts - Add some missing memory barriers. Change FIQ enable/disable calls to not alter IRQ masking of the interrupt - simplifies the code and avoids any ordering issues with code that switches interrupts between IRQ & FIQ
  s/Timers - Add missing memory barrier
Admin:
  Tested on Raspberry Pi
  Requires Kernel-5_35-4_79_2_227 to build


Version 0.34. Tagged as 'BCM2835-0_34'
@
text
@d1 1
a1 1
/* (0.34)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.34
d9 1
a9 1
#define Module_Date_CMHG                19 Jun 2014
d11 2
a12 2
#define Module_MajorVersion             "0.34"
#define Module_Version                  34
d14 1
a14 1
#define Module_Date                     "19 Jun 2014"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jun-14"
d21 3
a23 3
#define Module_FullVersion              "0.34"
#define Module_HelpVersion              "0.34 (19 Jun 2014)"
#define Module_LibraryVersionInfo       "0:34"
@


1.33
log
@  Make HAL report keyboard present during boot
Detail:
  Given the complexity of the USB system on the BCM2835, it seems unlikely
  that the HAL keyboard scan will ever be implemented. Not only does this
  mean it doesn't honour any of the CMOS reset or monitor configuration keys,
  but it means the kernel will always attempt to boot the configured
  filing system and drive, irrespective of the *Configure [No]Boot setting,
  after printing "No keyboard present - autobooting". By changing the HAL
  to report a keyboard present but with no keys held down, we at least get
  the [No]Boot option honoured again (even if the Shift key can't be used
  to invert its sense), and have the message suppressed.
Admin:
  Tested on a Raspberry Pi.

Version 0.33. Tagged as 'BCM2835-0_33'
@
text
@d1 1
a1 1
/* (0.33)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.33
d9 1
a9 1
#define Module_Date_CMHG                29 Apr 2014
d11 2
a12 2
#define Module_MajorVersion             "0.33"
#define Module_Version                  33
d14 1
a14 1
#define Module_Date                     "29 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "29-Apr-14"
d21 3
a23 3
#define Module_FullVersion              "0.33"
#define Module_HelpVersion              "0.33 (29 Apr 2014)"
#define Module_LibraryVersionInfo       "0:33"
@


1.32
log
@Use IIC status definitions from HALEntries header
Mark HAL_IICDevice as a null entry, since bit 4 of the flags says we don't support that mode of operation anyway.

Version 0.32. Tagged as 'BCM2835-0_32'
@
text
@d1 1
a1 1
/* (0.32)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.32
d9 1
a9 1
#define Module_Date_CMHG                13 Apr 2014
d11 2
a12 2
#define Module_MajorVersion             "0.32"
#define Module_Version                  32
d14 1
a14 1
#define Module_Date                     "13 Apr 2014"
d16 1
a16 1
#define Module_ApplicationDate          "13-Apr-14"
d21 3
a23 3
#define Module_FullVersion              "0.32"
#define Module_HelpVersion              "0.32 (13 Apr 2014)"
#define Module_LibraryVersionInfo       "0:32"
@


1.31
log
@Add RTC HAL device
Detail:
  CJE's RTC module uses a DS1307-compatible RTC chip similar to the one used in the Iyonix. Previously the kernel handled talking to it, but now that low-level RTC handling has been moved out of the kernel we need an RTC HAL device in the BCM2835 HAL instead.
  s/RTC - A copy of s.RTC from the Tungsten HAL, relicensed as BSD with permission from Rob Sprowson
  Makefile, hdr/StaticWS, s/Top - Additional changes needed to hook the code into the HAL
Admin:
  Tested on Raspberry Pi, but without an RTC module fitted
  However the similarity of the clock chip to the one in the Iyonix should mean there's little chance of this code failing to work correctly when an RTC is fitted


Version 0.31. Tagged as 'BCM2835-0_31'
@
text
@d1 1
a1 1
/* (0.31)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.31
d9 1
a9 1
#define Module_Date_CMHG                19 Dec 2013
d11 2
a12 2
#define Module_MajorVersion             "0.31"
#define Module_Version                  31
d14 1
a14 1
#define Module_Date                     "19 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "19-Dec-13"
d21 3
a23 3
#define Module_FullVersion              "0.31"
#define Module_HelpVersion              "0.31 (19 Dec 2013)"
#define Module_LibraryVersionInfo       "0:31"
@


1.30
log
@Remove obsolete stub HAL video API implementation
Detail:
  s/Top, s/Video - Removed obsolete HAL video API implementation. A stub implementation is no longer required for systems that have a GraphicsV driver in a module, and can even cause problems if the OS decides to use the HAL implementation instead of the module one.
Admin:
  Tested in BCM2835 ROM
  Requires Kernel-5_35-4_79_2_203


Version 0.30. Tagged as 'BCM2835-0_30'
@
text
@d1 1
a1 1
/* (0.30)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.30
d9 1
a9 1
#define Module_Date_CMHG                15 Dec 2013
d11 2
a12 2
#define Module_MajorVersion             "0.30"
#define Module_Version                  30
d14 1
a14 1
#define Module_Date                     "15 Dec 2013"
d16 1
a16 1
#define Module_ApplicationDate          "15-Dec-13"
d21 3
a23 3
#define Module_FullVersion              "0.30"
#define Module_HelpVersion              "0.30 (15 Dec 2013)"
#define Module_LibraryVersionInfo       "0:30"
@


1.29
log
@Implement HAL_IRQMax
Detail:
  hdr/BCM2835 - Add definition for highest IRQ number
  s/Boot, s/Interrupts - Added HAL_IRQMax implementation, to ensure correct functionality with latest Kernel
Admin:
  Tested on 256MB Pi model B
  Requires Kernel-5_35-4_79_2_182


Version 0.29. Tagged as 'BCM2835-0_29'
@
text
@d1 1
a1 1
/* (0.29)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.29
d9 1
a9 1
#define Module_Date_CMHG                22 Jan 2013
d11 2
a12 2
#define Module_MajorVersion             "0.29"
#define Module_Version                  29
d14 1
a14 1
#define Module_Date                     "22 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jan-13"
d21 3
a23 3
#define Module_FullVersion              "0.29"
#define Module_HelpVersion              "0.29 (22 Jan 2013)"
#define Module_LibraryVersionInfo       "0:29"
@


1.28
log
@Add NoInitIRQ to list type controller declarations
Flag not previously inspected by DMA-0_19, but is in DMA-0_20. API cleanup for API version 1.0 since this is the only list type NoInitIRQ HAL in existance.

Version 0.28. Tagged as 'BCM2835-0_28'
@
text
@d1 1
a1 1
/* (0.28)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.28
d9 1
a9 1
#define Module_Date_CMHG                20 Jan 2013
d11 2
a12 2
#define Module_MajorVersion             "0.28"
#define Module_Version                  28
d14 1
a14 1
#define Module_Date                     "20 Jan 2013"
d16 1
a16 1
#define Module_ApplicationDate          "20-Jan-13"
d21 3
a23 3
#define Module_FullVersion              "0.28"
#define Module_HelpVersion              "0.28 (20 Jan 2013)"
#define Module_LibraryVersionInfo       "0:28"
@


1.27
log
@Reserve 5 bytes for timestamping
Also, swap magic numbers for defines.

Version 0.27. Tagged as 'BCM2835-0_27'
@
text
@d1 1
a1 1
/* (0.27)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.27
d9 1
a9 1
#define Module_Date_CMHG                18 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.27"
#define Module_Version                  27
d14 1
a14 1
#define Module_Date                     "18 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "18-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.27"
#define Module_HelpVersion              "0.27 (18 Sep 2012)"
#define Module_LibraryVersionInfo       "0:27"
@


1.26
log
@Fix building with latest kernel
Detail:
  s/Top, s/Video - Renamed HAL_Video entries to match naming convention used by latest kernel
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.26. Tagged as 'BCM2835-0_26'
@
text
@d1 1
a1 1
/* (0.26)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.26
d11 2
a12 2
#define Module_MajorVersion             "0.26"
#define Module_Version                  26
d21 3
a23 3
#define Module_FullVersion              "0.26"
#define Module_HelpVersion              "0.26 (18 Sep 2012)"
#define Module_LibraryVersionInfo       "0:26"
@


1.25
log
@Add a video HAL device to allow BCMVideo to determine which DMA channel it can use for render ops
Detail:
  hdr/StaticWS, s/Top, s/Video - Added a simple VDU HAL device that exposes a DMA channel to BCMVideo for use with GraphicsV_Render
  hdr/BCM2835 - Don't allow DMA channel 12 to be used; latest firmware seems to have a bug which claims its free when in reality it isn't.
  s/Messaging, s/DMA - Adjust DMA init to allow the video device to claim a DMA channel before the DMA devices are initialised
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.25. Tagged as 'BCM2835-0_25'
@
text
@d1 1
a1 1
/* (0.25)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.25
d11 2
a12 2
#define Module_MajorVersion             "0.25"
#define Module_Version                  25
d21 3
a23 3
#define Module_FullVersion              "0.25"
#define Module_HelpVersion              "0.25 (18 Sep 2012)"
#define Module_LibraryVersionInfo       "0:25"
@


1.24
log
@Use BCS1 instead of BCS0 for IIC when running on rev 2 boards
Detail:
  hdr/BCM2835, hdr/StaticWS, s/IIC - On rev 2 boards the usage of BSC0 and BSC1 have been swapped, such that BSC1 is now sent to the expansion header instead of BSC0.
  To allow RISC OS to continue to work with clock chips and other hardware fitted to the header, expose BSC1 to RISC OS if on a rev 2 board, or BSC0 if on a rev 1.
Admin:
  Changes received from Dave Higton
  Tested by Dave on rev 1 & rev 2 boards, with IIC devices
  Tested by me on rev 1 board (with no IIC devices fitted)


Version 0.24. Tagged as 'BCM2835-0_24'
@
text
@d1 1
a1 1
/* (0.24)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.24
d9 1
a9 1
#define Module_Date_CMHG                10 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.24"
#define Module_Version                  24
d14 1
a14 1
#define Module_Date                     "10 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.24"
#define Module_HelpVersion              "0.24 (10 Sep 2012)"
#define Module_LibraryVersionInfo       "0:24"
@


1.23
log
@Implement HAL_PhysInfo. Other misc tweaks.
Detail:
  s/Top - Added HAL_PhysInfo implementation. Tweaked HAL_Reset to reduce chances of failure.
  s/Stubs - Removed obsolete, unused UART stubs. Use KbdFlag_Done instead of magic number.
Admin:
  Tested on Raspberry Pi


Version 0.23. Tagged as 'BCM2835-0_23'
@
text
@d1 1
a1 1
/* (0.23)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.23
d9 1
a9 1
#define Module_Date_CMHG                09 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.23"
#define Module_Version                  23
d14 1
a14 1
#define Module_Date                     "09 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "09-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.23"
#define Module_HelpVersion              "0.23 (09 Sep 2012)"
#define Module_LibraryVersionInfo       "0:23"
@


1.22
log
@Read board model, revision, and available DMA channels from messaging channel. Report board revision via GPIO HAL device. Recover lost ROM relocation code.
Detail:
  hdr/StaticWS, s/Messaging, s/Top - Now reads board model, revision and available DMA channels from messaging channel
  hdr/StaticWS, s/GPIO - Updated GPIO HAL device to report board revision instead of a generic response of 'unknown'
  s/Top - Recovered ROM relocation code that got lost during a merge. End of ROM image no longer being corrupted, and RISC OS now sees correct amount of RAM.
  s/DMA - Ditch old code to read available DMA channels and use value read by HAL_QueryPlatform instead.
Admin:
  Tested on Raspberry Pi (B rev 1) with various start.elf sizes & versions
  DMA channel reporting only available with latest firmware (i.e. 8th Sep)
  Board revision number read by messaging channel seems to match that returned by /proc/cpuinfo on Linux


Version 0.22. Tagged as 'BCM2835-0_22'
@
text
@d1 1
a1 1
/* (0.22)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.22
d9 1
a9 1
#define Module_Date_CMHG                08 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.22"
#define Module_Version                  22
d14 1
a14 1
#define Module_Date                     "08 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "08-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.22"
#define Module_HelpVersion              "0.22 (08 Sep 2012)"
#define Module_LibraryVersionInfo       "0:22"
@


1.21
log
@Strip out video code & on-screen debug
Detail:
  Makefile, s/Display - Deleted on-screen debug code
  hdr/BCM2835, hdr/StaticWS, s/IIC, s/Messaging, s/Stubs, s/Top, s/UART - Strip out calls to on-screen debug code, and a few bits of video code
  s/Video - Video code removed and replaced with stub functions similar to other HALs. Only remaining useful code is HAL_Video_StartupMode, which in time should probably be moved to BCMVideo as well.
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.21. Tagged as 'BCM2835-0_21'
@
text
@d1 1
a1 1
/* (0.21)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.21
d9 1
a9 1
#define Module_Date_CMHG                02 Sep 2012
d11 2
a12 2
#define Module_MajorVersion             "0.21"
#define Module_Version                  21
d14 1
a14 1
#define Module_Date                     "02 Sep 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Sep-12"
d21 3
a23 3
#define Module_FullVersion              "0.21"
#define Module_HelpVersion              "0.21 (02 Sep 2012)"
#define Module_LibraryVersionInfo       "0:21"
@


1.20
log
@  Addition of I2C support
Detail:
  Implementation of the high-level HAL IIC interface provided by Dave Higton.
Admin:
  Checked it builds and runs at ROOL.

Version 0.20. Tagged as 'BCM2835-0_20'
@
text
@d1 1
a1 1
/* (0.20)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.20
d9 1
a9 1
#define Module_Date_CMHG                29 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.20"
#define Module_Version                  20
d14 1
a14 1
#define Module_Date                     "29 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "29-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.20"
#define Module_HelpVersion              "0.20 (29 Aug 2012)"
#define Module_LibraryVersionInfo       "0:20"
@


1.19
log
@Detail:
	changed HAL_ExtMachineID return value to 0 so kernel then calls
	HAL_MachineID and fetches the MAC address correctly

Admin:


Version 0.19. Tagged as 'BCM2835-0_19'
@
text
@d1 1
a1 1
/* (0.19)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.19
d9 1
a9 1
#define Module_Date_CMHG                24 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.19"
#define Module_Version                  19
d14 1
a14 1
#define Module_Date                     "24 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.19"
#define Module_HelpVersion              "0.19 (24 Aug 2012)"
#define Module_LibraryVersionInfo       "0:19"
@


1.18
log
@Don't claim that we support soft-off
Detail:
  s/Top - Fix HAL_PlatformInfo to not claim that we support soft-off
Admin:
  Tested in Pi ROM
  Fixes machine restarting after shutdown


Version 0.18. Tagged as 'BCM2835-0_18'
@
text
@d1 1
a1 1
/* (0.18)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.18
d9 1
a9 1
#define Module_Date_CMHG                08 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.18"
#define Module_Version                  18
d14 1
a14 1
#define Module_Date                     "08 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "08-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.18"
#define Module_HelpVersion              "0.18 (08 Aug 2012)"
#define Module_LibraryVersionInfo       "0:18"
@


1.17
log
@Add GPIO & VCHIQ HAL devices. Fix FlushDataCache macro to perform a clean & invalidate instead of just an invalidate.
Detail:
  s/GPIO - Basic implementation of the GPIO HAL device to allow the GPIO module to detect the board type
  s/VCHIQ, hdr/StaticWS - New VCHIQ HAL device which exposes the functionality required by the work-in-progress VCHIQ driver.
  Makefile, s/Top - Hook up the new files/devices
  hdr/BCM2835 - Make the FlushDataCache macro perform a clean & invalidate, to match the behaviour of FlushDataCacheRange
Admin:
  Tested on Raspberry Pi with high processor vectors


Version 0.17. Tagged as 'BCM2835-0_17'
@
text
@d1 1
a1 1
/* (0.17)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.17
d9 1
a9 1
#define Module_Date_CMHG                02 Aug 2012
d11 2
a12 2
#define Module_MajorVersion             "0.17"
#define Module_Version                  17
d14 1
a14 1
#define Module_Date                     "02 Aug 2012"
d16 1
a16 1
#define Module_ApplicationDate          "02-Aug-12"
d21 3
a23 3
#define Module_FullVersion              "0.17"
#define Module_HelpVersion              "0.17 (02 Aug 2012)"
#define Module_LibraryVersionInfo       "0:17"
@


1.16
log
@Detail: removed a flaw that crept in the last commit which prevented
        correct screen display.
	Now expects a start.elf released 24/7/2012 or later for correct
	display initialisation
Admin:


Version 0.16. Tagged as 'BCM2835-0_16'
@
text
@d1 1
a1 1
/* (0.16)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.16
d9 1
a9 1
#define Module_Date_CMHG                24 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.16"
#define Module_Version                  16
d14 1
a14 1
#define Module_Date                     "24 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.16"
#define Module_HelpVersion              "0.16 (24 Jul 2012)"
#define Module_LibraryVersionInfo       "0:16"
@


1.15
log
@Detail:  Frame buffer allocation via message channel almost complete. working
        HAL_MachineID functioning correctly
Admin:


Version 0.15. Tagged as 'BCM2835-0_15'
@
text
@d1 1
a1 1
/* (0.15)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.15
d9 1
a9 1
#define Module_Date_CMHG                22 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.15"
#define Module_Version                  15
d14 1
a14 1
#define Module_Date                     "22 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "22-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.15"
#define Module_HelpVersion              "0.15 (22 Jul 2012)"
#define Module_LibraryVersionInfo       "0:15"
@


1.14
log
@
	Various updates to do with the messaging channel, HAL_MachineID, and HAL_Reset

Detail:
	HAL_Reset now causes a complete reboot of the machiine. It isnt yet properly called from
	the kernel.. I've not investigated why yet. Behaviour tested using OS_Hardware call

	HAL_MachineID, with the github start.elf from 18 July 2012 will provide a valid MAC address ..
	i.e. that specific to this machine. The a1 value in HAL_ExtendedID needs to be set 0 for this to be reported
	by OS_ReadSysInfo .. unfortunately, again at this stage, it stalls the boot when set 0, so just for now
	the committed value for a1 in HAL_ExtendedID is not 0 .

	centralised messaging routine added. This is used a fair bit in acquiring the operating environment
	Not yet used in the DMA stuff. probably ought to be. At present the messaging channel this mainly
	handles is not complete, so information from this code is still WIP

Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 0.14. Tagged as 'BCM2835-0_14'
@
text
@d1 1
a1 1
/* (0.14)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.14
d9 1
a9 1
#define Module_Date_CMHG                19 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.14"
#define Module_Version                  14
d14 1
a14 1
#define Module_Date                     "19 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "19-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.14"
#define Module_HelpVersion              "0.14 (19 Jul 2012)"
#define Module_LibraryVersionInfo       "0:14"
@


1.13
log
@Improve RAM detection/setup code. Update mailbox code in DMA driver.
Detail:
  s/Top - Improved RAM detection/setup to not assume that the OS image is at &0000 (current start.elf seems to place it at &8000). New code correctly supports compressed ROMs, and has some basic code implemented to read the RAM setup from the mailbox property interface (currently disabled, pending official firmware rollout + final testing)
  s/DMA - Updated mailbox property interface code to adhere to the current spec. Still needs testing with release firmware (the start.elf I'm using seems to report no DMA channels as being available)
Admin:
  Tested with a release start.elf (July 9th, or thereabouts) as well as a more recent test version containing initial mailbox property interface implementation
  Fixes issue with last 32K of ROM being wiped on startup


Version 0.13. Tagged as 'BCM2835-0_13'
@
text
@d1 1
a1 1
/* (0.13)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.13
d9 1
a9 1
#define Module_Date_CMHG                17 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.13"
#define Module_Version                  13
d14 1
a14 1
#define Module_Date                     "17 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "17-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.13"
#define Module_HelpVersion              "0.13 (17 Jul 2012)"
#define Module_LibraryVersionInfo       "0:13"
@


1.12
log
@  Support for reading (fake) CMOS
Detail:
  * Moved the NVMemory entries out of s.Stubs into s.CMOS.
  * Removed default list of CMOS contents and replaced with a block of zeros.
    It was never in physical address order and wasn't being used anyway.
    Default CMOS belongs in the kernel in any case.
  * Reports NVMemory type 3 (HAL calls) rather than 0 (no CMOS).
  * No longer reports a Delete power-on (CMOS reset) on every boot.
Admin:
  Tested on Raspberry Pi

Version 0.12. Tagged as 'BCM2835-0_12'
@
text
@d1 1
a1 1
/* (0.12)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.12
d9 1
a9 1
#define Module_Date_CMHG                15 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.12"
#define Module_Version                  12
d14 1
a14 1
#define Module_Date                     "15 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.12"
#define Module_HelpVersion              "0.12 (15 Jul 2012)"
#define Module_LibraryVersionInfo       "0:12"
@


1.11
log
@Add DMA driver
Detail:
  s/DMA, hdr/DMA, Makefile - DMA driver, as an implementation of the DMA controller and list type DMA channel HAL devices
  hdr/StaticWS - Added DMA workspace definition
  hdr/BCM2835 - Removed DMA control block definition (now in hdr/DMA). Add definitions for the mailbox property interface, which should be supported by the GPU firmware sometime soon.
  s/Top - Export a couple of the debug functions. Store logical & physical address of NCNB workspace instead of hackily getting phys addr of the (cacheable) HAL workspace. Call DMA_InitDevices in HAL_InitDevices.
Admin:
  Tested in BCM2835 ROM
  DMA driver hasn't received large amounts of testing, lacks support for finite-length circular transfers, and currently only has one DMA channel enabled
  More DMA channels should be available once the mailbox property interface is functional and we know which channels the GPU does and doesn't use.


Version 0.11. Tagged as 'BCM2835-0_11'
@
text
@d1 1
a1 1
/* (0.11)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.11
d9 1
a9 1
#define Module_Date_CMHG                07 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.11"
#define Module_Version                  11
d14 1
a14 1
#define Module_Date                     "07 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.11"
#define Module_HelpVersion              "0.11 (07 Jul 2012)"
#define Module_LibraryVersionInfo       "0:11"
@


1.10
log
@  Fixes for SD support
Detail:
  * Engage the GPIO controller's pull-up resistors on SDCLK, CMD and DAT0-DAT3.
    In tests, this seems to address the worst of the unreliability we have
    seen previously.
  * Remove the entry to change the bus between push-pull and open-drain modes.
    The BCM2835 simply doesn't seem to be able to do this. Fortunately, all
    the cards I have tested seem to be OK with the GPIO controller's pull-up
    on the CMD line (however strong that is - it's undocumented) engaged at
    all times.
  * Time a dummy command in order to calculate the speed of the input clock
    to the SD controller block (there doesn't appear to be any way to read
    its speed directly!) This is necessary because recent versions of the
    firmware have not only changed the default clock speed, but even made it
    a user-configurable option in config.txt. It's very important that we
    know how fast it is - if we set the dividers so SDCLK is too slow, then
    the workaround for the register write bug won't work, too fast and we
    overclock the cards, potentially damaging them.
  * Re-enable high speed mode. As long as we don't use the High Speed Enable
    bit in Host Control 1 (see change in SDIODriver 0.03) this seems to work
    for me.
Admin:
  Tested against my collection of test cards on a Raspberry Pi with the
  firmware from the 2012-06-22 commit on github, and with
  init_emmc_clock=100000000 in config.txt (though other values, or the
  absence of that line, or the entire file, should also work). The only
  issues I had appeared to be due to mechanical problems with the SD socket,
  and went away after the card was reseated one or more times.

Version 0.10. Tagged as 'BCM2835-0_10'
@
text
@d1 1
a1 1
/* (0.10)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.10
d9 1
a9 1
#define Module_Date_CMHG                01 Jul 2012
d11 2
a12 2
#define Module_MajorVersion             "0.10"
#define Module_Version                  10
d14 1
a14 1
#define Module_Date                     "01 Jul 2012"
d16 1
a16 1
#define Module_ApplicationDate          "01-Jul-12"
d21 3
a23 3
#define Module_FullVersion              "0.10"
#define Module_HelpVersion              "0.10 (01 Jul 2012)"
#define Module_LibraryVersionInfo       "0:10"
@


1.9
log
@  SD support, and miscellaneous other changes
Detail:
  * Bugfix to HAL_FIQDisableAll - it wasn't clearing the FIQ register (would
    only have caused trouble in practice if the same device was subsequently
    enabled as an IRQ).
  * Added a load of memory barriers to s.Interrupts and s.Timers to conform
    to the requirement stated in 1.3 of the datasheet.
  * Added a HAL device for the Arasan SDHCI controller. Note that this does
    not currently work reliably, and results vary from card to card. High
    speed support is currently disabled until we are able to verify that it
    works reliably.
  * Added a sprinkling of "GET Hdr:ListOpts" because the space reserved for
    the SDHCI HAL device in hdr.StaticWS is determined by including
    Hdr:HALDevice and Hdr:SDHCIDevice, which need it.
  * When support for saving "CMOS" to the SD card is added, the ROM image
    file (kernel.img) is the only one we can count on the bootloader
    installing in memory, so I think we're going to have to work using the
    table in s.CMOS. Broadcom seems to like messing around with the space
    just after the processor vector table, so rather than adding a pointer
    to the table there, I've opted to mark it using a magic word.
Admin:
  Tested on a Raspberry Pi - as noted above, there are reliability issues.

Version 0.09. Tagged as 'BCM2835-0_09'
@
text
@d1 1
a1 1
/* (0.09)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.09
d9 1
a9 1
#define Module_Date_CMHG                15 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.09"
#define Module_Version                  9
d14 1
a14 1
#define Module_Date                     "15 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "15-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.09"
#define Module_HelpVersion              "0.09 (15 Jun 2012)"
#define Module_LibraryVersionInfo       "0:9"
@


1.8
log
@Sanitise HAL_USBControllerInfo
Detail:
  s/USB - For valid controllers, HAL_USBControllerInfo now always returns the correct USB struct size and fills in the controller type. The rest of the buffer is filled in only if the supplied size is large enough. This allows for proper probing of controllers without knowing the required buffer sizes beforehand.
Admin:
  Tested in BCM2835 ROM


Version 0.08. Tagged as 'BCM2835-0_08'
@
text
@d1 1
a1 1
/* (0.08)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.08
d9 1
a9 1
#define Module_Date_CMHG                07 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.08"
#define Module_Version                  8
d14 1
a14 1
#define Module_Date                     "07 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "07-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.08"
#define Module_HelpVersion              "0.08 (07 Jun 2012)"
#define Module_LibraryVersionInfo       "0:8"
@


1.7
log
@Add USB support
Detail:
  hdr/USB - New header with definition of usbinfo struct that's used by HAL_USBControllerInfo
  hdr/BCM2835 - Add note clarifying how mailboxes are used
  s/Top - Enable power to USB on startup
  s/USB - Implement HAL_USBControllerInfo to expose Synopsys USB controller details to RISC OS
Admin:
  Tested in BCM2835 ROM with Apr 19th start.elf


Version 0.07. Tagged as 'BCM2835-0_07'
@
text
@d1 1
a1 1
/* (0.07)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.07
d9 1
a9 1
#define Module_Date_CMHG                03 Jun 2012
d11 2
a12 2
#define Module_MajorVersion             "0.07"
#define Module_Version                  7
d14 1
a14 1
#define Module_Date                     "03 Jun 2012"
d16 1
a16 1
#define Module_ApplicationDate          "03-Jun-12"
d21 3
a23 3
#define Module_FullVersion              "0.07"
#define Module_HelpVersion              "0.07 (03 Jun 2012)"
#define Module_LibraryVersionInfo       "0:7"
@


1.6
log
@  Whitespace changes
Detail:
  Substituted remaining hard spaces with normal ones and expanded tabs.
  This now matches the de facto standard for other components, and also looks
  better in the CVS web viewer.
Admin:
  No code changes

Version 0.06. Tagged as 'BCM2835-0_06'
@
text
@d1 1
a1 1
/* (0.06)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.06
d9 1
a9 1
#define Module_Date_CMHG                24 May 2012
d11 2
a12 2
#define Module_MajorVersion             "0.06"
#define Module_Version                  6
d14 1
a14 1
#define Module_Date                     "24 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "24-May-12"
d21 3
a23 3
#define Module_FullVersion              "0.06"
#define Module_HelpVersion              "0.06 (24 May 2012)"
#define Module_LibraryVersionInfo       "0:6"
@


1.5
log
@   Corrected booting issues with UseALBlob compile switch
Detail:
   s.Top
Admin:
  tested locally JB
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 0.05. Tagged as 'BCM2835-0_05'
@
text
@d1 1
a1 1
/* (0.05)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.05
d11 2
a12 2
#define Module_MajorVersion             "0.05"
#define Module_Version                  5
d21 3
a23 3
#define Module_FullVersion              "0.05"
#define Module_HelpVersion              "0.05 (24 May 2012)"
#define Module_LibraryVersionInfo       "0:5"
@


1.4
log
@  Complete rework of timer and interrupt code
Detail:
 * Moved interrupt and timer code out of s.Stubs - they're not stubs any more.
 * Rewrote timer and counter code to use GPU system timer 1 for our Timer0
   rather than the ARM timer. This is recommended in the Broadcom datasheet
   because it's driven from the APB clock and so its speed will vary in
   reduced or low power mode.
 * HAL_CounterDelay now, well, does a delay!
 * Added a Timer1, driven from GPU system timer 3 - common code with Timer0.
 * Reshuffled device numbers so the GPU interrupts are at the bottom. This
   works better for FIQs and makes Timer0 the lowest priority interrupt.
 * Higher device numbers are now consistently treated as higher priority.
 * Stopped using bits 8-31 of the basic interrupt registers. These can't be
   masked, so they cause the kernel to lock up if generated, which happens
   if the GPU interrupt which they alias is generated (which appears to
   include the timers even though this is not documented).
 * Added definitions for all the interrupts, including those redacted from the
   datasheet - we need them at least for timers, USB and SD.
 * Stopped HAL_IRQClear from doing anything - this interrupt controller
   doesn't do latching. To acknowledge timer interrupts, you should use
   HAL_TimerIRQClear (and HAL_IRQClear too for compatibility with other ports).
 * Implemented HAL_IRQStatus and all the FIQ control routines.
 * Offsets to interrupt controller registers now use symbolic names.
 * Replaced some hard spaces in sources with normal ones.
Admin:
  Tested on a beta Raspberry Pi. Confirmed that interrupt handlers for both
  ARM and GPU sources can both be operational simultaneuosly. However, the FIQ
  code has not been tested. Timer0 is verified as running at the correct
  speed and reporting a count *down* in the correct range (not a count up as
  some previous versions did). HAL_CounterDelay appears correct also.

Version 0.04. Tagged as 'BCM2835-0_04'
@
text
@d1 1
a1 1
/* (0.04)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.04
d9 1
a9 1
#define Module_Date_CMHG                23 May 2012
d11 2
a12 2
#define Module_MajorVersion             "0.04"
#define Module_Version                  4
d14 1
a14 1
#define Module_Date                     "23 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "23-May-12"
d21 3
a23 3
#define Module_FullVersion              "0.04"
#define Module_HelpVersion              "0.04 (23 May 2012)"
#define Module_LibraryVersionInfo       "0:4"
@


1.3
log
@   Boots with May17th start.elf
Detail:
   Recent changes in the broadcom startup code now accomodated. frame buffer
   will now determine whether it is L2 cached or not, and be set up accordingly.
   ATAGs not currently read, so ram size defaulted.
  ** note that there will be further updates to this over the following days
  ** trackikng startup code changes.
   added HAL_TimerIRQClear entry
Admin:
  (highlight level of testing that has taken place)
  (bugfix number if appropriate)


Version 0.03. Tagged as 'BCM2835-0_03'
@
text
@d1 1
a1 1
/* (0.03)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.03
d11 2
a12 2
#define Module_MajorVersion             "0.03"
#define Module_Version                  3
d21 3
a23 3
#define Module_FullVersion              "0.03"
#define Module_HelpVersion              "0.03 (23 May 2012)"
#define Module_LibraryVersionInfo       "0:3"
@


1.2
log
@
  Update of HAL to incorporate separate development of HAL by J Ballance
  Will now compile against initial developemnt start.elf, and against the
  start.elf in general release at this date. (compile switch UseALBlob in
  hdr.BCM2835). Extended header defs, Updated IRQ stuff, HAL_FramebufferAddress
  Reworked Timers, + a number of other bits. Still work in progress.
Detail:
  (list files and functions that have changed)
Admin:
  Compiled and working - as far as it goes -. Will enable use with the current
  start.elf, and is (subject to any minor changes introduced) ready for use with the
  version due for release shortly which will provide the correct transparency operation,
  and a better aligned frame buffer

Version 0.02. Tagged as 'BCM2835-0_02'
@
text
@d1 1
a1 1
/* (0.02)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.02
d9 1
a9 1
#define Module_Date_CMHG                20 May 2012
d11 2
a12 2
#define Module_MajorVersion             "0.02"
#define Module_Version                  2
d14 1
a14 1
#define Module_Date                     "20 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "20-May-12"
d21 3
a23 3
#define Module_FullVersion              "0.02"
#define Module_HelpVersion              "0.02 (20 May 2012)"
#define Module_LibraryVersionInfo       "0:2"
@


1.1
log
@created by srccommit.
@
text
@d1 1
a1 1
/* (0.01)
d7 1
a7 1
#define Module_MajorVersion_CMHG        0.01
d9 1
a9 1
#define Module_Date_CMHG                10 May 2012
d11 2
a12 2
#define Module_MajorVersion             "0.01"
#define Module_Version                  1
d14 1
a14 1
#define Module_Date                     "10 May 2012"
d16 1
a16 1
#define Module_ApplicationDate          "10-May-12"
d21 3
a23 3
#define Module_FullVersion              "0.01"
#define Module_HelpVersion              "0.01 (10 May 2012)"
#define Module_LibraryVersionInfo       "0:1"
@

