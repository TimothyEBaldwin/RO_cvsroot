head	1.2;
access;
symbols
	BCM2835-0_75-1:1.1.1.1
	BCM2835-0_76:1.2
	BCM2835-0_75-1_70_2_4:1.1.1.1.2.1
	BCM2835-0_75:1.1.1.1
	BCM2835-0_74:1.1.1.1
	BCM2835-0_73-1_70_2_3:1.1.1.1.2.1
	BCM2835-0_73:1.1.1.1
	BCM2835-0_72:1.1.1.1
	BCM2835-0_71-1_70_2_2:1.1.1.1.2.1
	BCM2835-0_71:1.1.1.1
	BCM2835-0_70-1_70_2_1:1.1.1.1.2.1
	SMP:1.1.1.1.0.2
	SMP_bp:1.1.1.1
	BCM2835-0_70:1.1.1.1
	BCM2835-0_69:1.1.1.1
	BCM2835-0_68:1.1.1.1
	BCM2835-0_67:1.1.1.1
	BCM2835-0_66:1.1.1.1
	BCM2835-0_65:1.1.1.1
	BCM2835-0_64:1.1.1.1
	BCM2835-0_63:1.1.1.1
	BCM2835-0_62:1.1.1.1
	BCM2835-0_61:1.1.1.1
	BCM2835-0_60:1.1.1.1
	BCM2835-0_59:1.1.1.1
	BCM2835-0_58:1.1.1.1
	BCM2835-0_57:1.1.1.1
	BCM2835-0_56:1.1.1.1
	BCM2835-0_55:1.1.1.1
	BCM2835-0_53:1.1.1.1
	BCM2835-0_52:1.1.1.1
	BCM2835-0_51:1.1.1.1
	BCM2835-0_50:1.1.1.1
	BCM2835-0_49:1.1.1.1
	BCM2835-0_48:1.1.1.1
	BCM2835-0_47:1.1.1.1
	BCM2835-0_46:1.1.1.1
	BCM2835-0_45:1.1.1.1
	BCM2835-0_44:1.1.1.1
	BCM2835-0_43:1.1.1.1
	BCM2835-0_42:1.1.1.1
	BCM2835-0_41:1.1.1.1
	BCM2835-0_40:1.1.1.1
	BCM2835-0_39:1.1.1.1
	BCM2835-0_38:1.1.1.1
	BCM2835-0_37:1.1.1.1
	BCM2835-0_36:1.1.1.1
	BCM2835-0_35:1.1.1.1
	BCM2835-0_34:1.1.1.1
	BCM2835-0_33:1.1.1.1
	BCM2835-0_32:1.1.1.1
	BCM2835-0_31:1.1.1.1
	BCM2835-0_30:1.1.1.1
	BCM2835-0_29:1.1.1.1
	BCM2835-0_28:1.1.1.1
	BCM2835-0_27:1.1.1.1
	BCM2835-0_26:1.1.1.1
	BCM2835-0_25:1.1.1.1
	BCM2835-0_24:1.1.1.1
	BCM2835-0_23:1.1.1.1
	BCM2835-0_22:1.1.1.1
	BCM2835-0_21:1.1.1.1
	BCM2835-0_20:1.1.1.1
	BCM2835-0_19:1.1.1.1
	BCM2835-0_18:1.1.1.1
	BCM2835-0_17:1.1.1.1
	BCM2835-0_16:1.1.1.1
	BCM2835-0_15:1.1.1.1
	BCM2835-0_14:1.1.1.1
	BCM2835-0_13:1.1.1.1
	BCM2835-0_12:1.1.1.1
	BCM2835-0_11:1.1.1.1
	BCM2835-0_10:1.1.1.1
	BCM2835-0_09:1.1.1.1
	BCM2835-0_08:1.1.1.1
	BCM2835-0_07:1.1.1.1
	BCM2835-0_06:1.1.1.1
	BCM2835-0_05:1.1.1.1
	BCM2835-0_04:1.1.1.1
	BCM2835-0_03:1.1.1.1
	BCM2835-0_02:1.1.1.1
	BCM2835-0_01:1.1.1.1
	initial:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2018.07.07.14.26.21;	author jlee;	state Exp;
branches;
next	1.1;
commitid	VQCRRsJLbDt0fdJA;

1.1
date	2012.05.10.14.53.41;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;
commitid	9gwxHjLZncMLBb4w;

1.1.1.1
date	2012.05.10.14.53.41;	author bavison;	state Exp;
branches
	1.1.1.1.2.1;
next	;
commitid	9gwxHjLZncMLBb4w;

1.1.1.1.2.1
date	2017.07.29.11.37.41;	author jlee;	state Exp;
branches;
next	;
commitid	leIbdlwVfACHk71A;


desc
@@


1.2
log
@Merge SMP branch to trunk
Detail:
  hdr/StaticWS - Reserve workspace for QA7 peripheral address, HAL-wide spinlock, and doorbell device
  Makefile, s/DBell - Add doorbell device implementation
  hdr/BCM2835 - Clean up dead macros, add new macros for spinlock claim/release and basic CPU detection. Define new IRQ numbers for the "QA7" peripheral.
  hdr/CastleMacros, s/Top - Generate two HAL descriptors and entry point tables: One for single-core machines and one for multi-core machines. This avoids some MP-related overheads on ARM11 models of Pi. Implement SMP HAL entry points.
  s/Interrupts - Add support for the QA7 interrupts. Although some interrupts can be flexibly routed to different cores, we currently stick with a static scheme.
  s/Messaging - Use CPUDetect macro
Admin:
  Untested
  Requires Kernel-6_09


Version 0.76. Tagged as 'BCM2835-0_76'
@
text
@; Copyright 2012 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        MACRO
        HALEntry $name
        ASSERT  (. - $table) / 4 = EntryNo_$name
        DCD     $name - $table
        MEND

        MACRO
        QA7Entry $name
        ASSERT  (. - $table) / 4 = EntryNo_$name
      [ $table_idx == 0
        DCD     ARM11_$name - $table
      |
        DCD     QA7_$name - $table
      ]
        MEND

        MACRO
        NullEntry
        DCD     HAL_Null - $table
        MEND
 
        MACRO
        CallOSM $entry, $reg
        LDR     ip, [v8, #$entry*4]
        MOV     lr, pc
        ADD     pc, v8, ip
        MEND

        MACRO
        CallOS  $entry, $tailcall
        ASSERT  $entry <= HighestOSEntry
 [ "$tailcall"=""
        MOV     lr, pc
 |
   [ "$tailcall"<>"tailcall"
        ! 0, "Unrecognised parameter to CallOS"
   ]
 ]
        LDR     pc, OSentries + 4*$entry
        MEND

        END
@


1.1
log
@Initial revision
@
text
@d18 12
a29 2
        ASSERT  (. - HAL_EntryTable) / 4 = EntryNo_$name
        DCD     $name - HAL_EntryTable
d34 1
a34 1
        DCD     HAL_Null - HAL_EntryTable
@


1.1.1.1
log
@  Initial import of BCM2835 (Raspberry Pi) HAL
Detail:
  Covers the basic functionality, but does require a customised start.elf
  to function. The vast majority is an entirely new implementation and is
  BSD licenced, but 4% (the Makefile and a handful of simple macros) are
  copied from pre-existing Castle-licenced code, so it lives under the
  "mixed" hierarchy. If other HALs are anything to go by, we'll end up
  having to add more Castle code (at least some C runtime functions) so it's
  probably juast as well.
Admin:
  Code received from Adrian Lees
@
text
@@


1.1.1.1.2.1
log
@Initial SMP support
Detail:
  hdr/BCM2835 - Delete unused timer macros. Add basic spinlock claim/release macros. Add CPUDetect macro to encapsulate ARM11 vs. A7/A53 detection. Add definitions for the "QA7" interrupts.
  Makefile, s/DBell - Add doorbell device driver
  hdr/StaticWS - Reserve workspace for doorbell device, QA7 interrupt controller ptr, spinlock
  s/Top, hdr/CastleMacros - Generate two HAL entry point tables, one for ARM11, one for A7/A53. Use CPUDetect macro. Implement new SMP-related HAL entry points.
  s/Interrupts - Implement support for the QA7 interrupt controller and the new IRQ-related HAL entry points
  s/Messaging - Use CPUDetect macro
Admin:
  Tested on Raspberry Pi 1, 2, 3


Version 0.70, 1.70.2.1. Tagged as 'BCM2835-0_70-1_70_2_1'
@
text
@d18 2
a19 12
        ASSERT  (. - $table) / 4 = EntryNo_$name
        DCD     $name - $table
        MEND

        MACRO
        QA7Entry $name
        ASSERT  (. - $table) / 4 = EntryNo_$name
      [ $table_idx == 0
        DCD     ARM11_$name - $table
      |
        DCD     QA7_$name - $table
      ]
d24 1
a24 1
        DCD     HAL_Null - $table
@

