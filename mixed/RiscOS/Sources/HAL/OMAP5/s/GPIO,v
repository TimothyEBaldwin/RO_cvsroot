head	1.2;
access;
symbols
	OMAP5-0_11:1.2
	OMAP5-0_10-1_5_2_4:1.1.1.1.2.1
	OMAP5-0_10:1.2
	OMAP5-0_09:1.2
	OMAP5-0_08:1.1.1.1
	OMAP5-0_07-1_5_2_3:1.1.1.1
	OMAP5-0_07:1.1.1.1
	OMAP5-0_06-1_5_2_2:1.1.1.1
	OMAP5-0_06-1_5_2_1:1.1.1.1
	OMAP5-0_06:1.1.1.1
	SMP:1.1.1.1.0.2
	SMP_bp:1.1.1.1
	OMAP5-0_05:1.1.1.1
	OMAP5-0_04:1.1.1.1
	OMAP5-0_03:1.1.1.1
	OMAP5-0_02:1.1.1.1
	OMAP5-0_01:1.1.1.1
	OMAP5-0_00:1.1.1.1
	wtheiss:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2018.04.14.09.35.21;	author rool;	state Exp;
branches;
next	1.1;
commitid	QEI2CGYgK5TxkoyA;

1.1
date	2015.11.28.10.02.58;	author rool;	state Exp;
branches
	1.1.1.1;
next	;
commitid	gLmEYKUnWLDNnQKy;

1.1.1.1
date	2015.11.28.10.02.58;	author rool;	state Exp;
branches
	1.1.1.1.2.1;
next	;
commitid	gLmEYKUnWLDNnQKy;

1.1.1.1.2.1
date	2018.07.07.14.57.57;	author jlee;	state Exp;
branches;
next	;
commitid	WfYWLcxZnZgPpdJA;


desc
@@


1.2
log
@OMAP5 HAL updates and tidying
Detail:
  castle.RiscOS.Sources.HAL.OMAP5.s.Boot
    use BoardType and BoardRevision instead of GPIOType and GPIORevision
  castle.RiscOS.Sources.HAL.OMAP5.s.GPIO
    corrected number of available GPIO ports
  castle.RiscOS.Sources.HAL.OMAP5.s.SDIO
    use BoardType and BoardRevision instead of GPIOType and GPIORevision
  castle.RiscOS.Sources.HAL.OMAP5.hdr.board
    added BoardType and BoardRevision values
  castle.RiscOS.Sources.HAL.OMAP5.hdr.GPIO
    removed GPIOType and GPIORevision values
  castle.RiscOS.Sources.HAL.OMAP5.hdr.Interrupts
    corrected offset for GICD_SPENDSGIR
  castle.RiscOS.Sources.HAL.OMAP5.hdr.StaticWS
    removed unused USBAllocArea
Admin:
  Submission from Willi Theiss.

Version 0.09. Tagged as 'OMAP5-0_09'
@
text
@; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ImageSize.<ImageSize>
        $GetIO
        GET     Hdr:Proc

        GET     Hdr:OSEntries
        GET     Hdr:HALEntries

        GET     hdr.omap543x
        GET     hdr.StaticWS
        GET     hdr.GPIO

        AREA    |Asm$$Code|, CODE, READONLY, PIC

        EXPORT  GPIO_Init
        EXPORT  GPIOx_SetAsOutput
        EXPORT  GPIOx_SetOutput
        EXPORT  GPIOx_SetAndEnableIRQ

GPIO_Init
        ; Don't bother resetting the controllers for now, just make sure no IRQs are enabled
        ADR     a1, L4_GPIO_Table
        MOV     a2, #(GPIO_PIN_MAX >> 5)
        MVN     a3, #0
10
        LDR     a4, [a1], #4
        SUBS    a2, a2, #1
        STR     a3, [a4, #GPIO_IRQSTATUS_CLR_0]
        BNE     %BT10
        MOV     pc, lr

        ; a1 = GPIO # (OMAP)
        ; a2 = initial value (zero or nonzero)
GPIOx_SetAsOutput
        SUBS    a3, a1, #GPIO_PIN_MAX
        MOVGE   pc, lr
        ; OMAP GPIO
        GPIO_PrepareR a3, a4, a1
        GPIO_SetAsOutput a3, a4, a1
        GPIO_SetOutput a2, a3, a4
        MOV     pc, lr

        ; a1 = GPIO # (OMAP)
        ; a2 = value (zero or nonzero)
GPIOx_SetOutput
        SUBS    a3, a1, #GPIO_PIN_MAX
        MOVGE   pc, lr
        ; OMAP GPIO
        GPIO_PrepareR a3, a4, a1
        GPIO_SetOutput a2, a3, a4
        MOV     pc, lr

        ; a1 = GPIO # (OMAP only!)
        ; a2 = IRQ type flags:
        ;      +1 = LEVELDETECT0
        ;      +2 = LEVELDETECT1
        ;      +4 = RISINGDETECT
        ;      +8 = FALLINGDETECT
GPIOx_SetAndEnableIRQ
        GPIO_PrepareR a3, a4, a1
        MRS     ip, CPSR
        ORR     a1, ip, #I32_bit ; interrupts off
        MSR     CPSR_c, a1
        MOV     a2, a2, LSL #28
        MSR     CPSR_f, a2 ; load into NZCV flags (MI EQ CS VS condition codes)
        LDR     a1, [a3, #GPIO_FALLINGDETECT]
        BICPL   a1, a1, a4
        LDR     a2, [a3, #GPIO_RISINGDETECT]
        ORRMI   a1, a1, a4
        STR     a1, [a3, #GPIO_FALLINGDETECT]
        BICNE   a2, a2, a4
        LDR     a1, [a3, #GPIO_LEVELDETECT1]
        ORREQ   a2, a2, a4
        STR     a2, [a3, #GPIO_RISINGDETECT]
        BICCC   a1, a1, a4
        LDR     a2, [a3, #GPIO_LEVELDETECT0]
        ORRCS   a1, a1, a4
        STR     a1, [a3, #GPIO_LEVELDETECT1]
        BICVC   a2, a2, a4
        LDR     a1, [a3, #GPIO_OE]
        ORRVS   a2, a2, a4
        ORR     a1, a1, a4 ; set pin as input
        STR     a2, [a3, #GPIO_LEVELDETECT0]
        STR     a1, [a3, #GPIO_OE]
        STR     a4, [a3, #GPIO_IRQSTATUS_SET_0]
        MSR     CPSR_c, ip ; interrupts restored
        MOV     pc, lr

        END
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
        MOV     a2, #6
@


1.1.1.1
log
@Import of OMAP5 HAL
Admin:
  Submission from Willi Theiss
@
text
@@


1.1.1.1.2.1
log
@Merge in latest changes from HEAD

Version 0.10, 1.5.2.4. Tagged as 'OMAP5-0_10-1_5_2_4'
@
text
@d41 1
a41 1
        MOV     a2, #(GPIO_PIN_MAX >> 5)
@

