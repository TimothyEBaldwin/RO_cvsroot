head	1.2;
access;
symbols
	OMAP5-0_11:1.2
	OMAP5-0_10-1_5_2_4:1.1.1.1.2.1
	OMAP5-0_10:1.2
	OMAP5-0_09:1.2
	OMAP5-0_08:1.1.1.1
	OMAP5-0_07-1_5_2_3:1.1.1.1
	OMAP5-0_07:1.1.1.1
	OMAP5-0_06-1_5_2_2:1.1.1.1
	OMAP5-0_06-1_5_2_1:1.1.1.1
	OMAP5-0_06:1.1.1.1
	SMP:1.1.1.1.0.2
	SMP_bp:1.1.1.1
	OMAP5-0_05:1.1.1.1
	OMAP5-0_04:1.1.1.1
	OMAP5-0_03:1.1.1.1
	OMAP5-0_02:1.1.1.1
	OMAP5-0_01:1.1.1.1
	OMAP5-0_00:1.1.1.1
	wtheiss:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2018.04.14.09.35.18;	author rool;	state Exp;
branches;
next	1.1;
commitid	QEI2CGYgK5TxkoyA;

1.1
date	2015.11.28.10.02.57;	author rool;	state Exp;
branches
	1.1.1.1;
next	;
commitid	gLmEYKUnWLDNnQKy;

1.1.1.1
date	2015.11.28.10.02.57;	author rool;	state Exp;
branches
	1.1.1.1.2.1;
next	;
commitid	gLmEYKUnWLDNnQKy;

1.1.1.1.2.1
date	2018.07.07.14.57.54;	author jlee;	state Exp;
branches;
next	;
commitid	WfYWLcxZnZgPpdJA;


desc
@@


1.2
log
@OMAP5 HAL updates and tidying
Detail:
  castle.RiscOS.Sources.HAL.OMAP5.s.Boot
    use BoardType and BoardRevision instead of GPIOType and GPIORevision
  castle.RiscOS.Sources.HAL.OMAP5.s.GPIO
    corrected number of available GPIO ports
  castle.RiscOS.Sources.HAL.OMAP5.s.SDIO
    use BoardType and BoardRevision instead of GPIOType and GPIORevision
  castle.RiscOS.Sources.HAL.OMAP5.hdr.board
    added BoardType and BoardRevision values
  castle.RiscOS.Sources.HAL.OMAP5.hdr.GPIO
    removed GPIOType and GPIORevision values
  castle.RiscOS.Sources.HAL.OMAP5.hdr.Interrupts
    corrected offset for GICD_SPENDSGIR
  castle.RiscOS.Sources.HAL.OMAP5.hdr.StaticWS
    removed unused USBAllocArea
Admin:
  Submission from Willi Theiss.

Version 0.09. Tagged as 'OMAP5-0_09'
@
text
@; Copyright 2015 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_INTERRUPTS_HDR__
        GBLL    __HAL_INTERRUPTS_HDR__

        GET     hdr.irqids543x

; Cortex-A15 contains a GICv2 implementation
;
; Memory Map of Cortex-A15 MPCore GIC
; 0x0000 - 0x0FFF Reserved
; 0x1000 - 0x1FFF Distributor
; 0x2000 - 0x3FFF CPU interface
; 0x4000 - 0x4FFF Virtual interface control (common base address)
; 0x5000 - 0x5FFF Virtual interface control (processor-specific base address)
; 0x6000 - 0x7FFF Virtual CPU interface

; offsets of GIC modules partitions (relative to INTC_MPU)
GICD_BASE               *       &1000   ; GIC Distributor base
GICC_BASE               *       &2000   ; GIC CPU interface base

; offsets of register in GIC Distributor (relative to GICD_BASE)
GICD_CTLR               *       &0000 ; Distributor Control Register
GICD_TYPER              *       &0004 ; Interrupt Controller Type Register
GICD_IIDR               *       &0008 ; Distributor Implementer Identification Reg
GICD_IGROUP             *       &0080 ; Interrupt Group Registers
GICD_ISENABLER          *       &0100 ; Interrupt Set-Enable Registers
GICD_ICENABLER          *       &0180 ; Interrupt Clear-Enable Registers
GICD_ISPENDR            *       &0200 ; Interrupt Set-Pending Registers
GICD_ICPENDR            *       &0280 ; Interrupt Clear-Pending Registers
GICD_ISACTIVER          *       &0300 ; Interrupt Set-Active Registers
GICD_ICACTIVER          *       &0380 ; Interrupt Clear-Active Registers
GICD_IPRIORITYR         *       &0400 ; Interrupt Priority Registers
GICD_ITARGETSR          *       &0800 ; Interrupt Processor Targets Registers
GICD_ICFGR              *       &0C00 ; Interrupt Configuration Registers
GICD_SGIR               *       &0F00 ; Software Generated Interrupt Register
GICD_CPENDSGIR          *       &0F10 ; SGI Clear-Pending Register
GICD_SPENDSGIR          *       &0F20 ; SGI Set-Pending Register

; bits in Distributor Control Register (ICDDCR)
ICDDCR_ENABLE_GRP0      *       (1 << 0) ; Enable Group0 signaling to CPU interface
ICDDCR_ENABLE_GRP1      *       (1 << 1) ; Enable Group1 signaling to CPU interface

; bits in Interrupt Controller Type Register (ICDICTR)
ICDICTR_IT_LINES_NUMBER *       (31 << 0)  ; maximum number of interrupts [32 * (N+1)]
ICDICTR_CPU_NUMBER      *       ( 7 << 5)  ; number of implemented CPU interfaces (-1)
ICDICTR_SECURITY_EXTN   *       ( 1 << 10) ; Security Extension implemented
ICDICTR_LSPI            *       (31 << 11) ; number of lockable SPI


; offsets of register in GIC CPU Interface (relative to GICC_BASE)
GICC_CTLR               *       &0000 ; CPU Interface Control Register
GICC_PMR                *       &0004 ; Interrupt Priority Mask Register
GICC_BPR                *       &0008 ; Binary Point Register
GICC_IAR                *       &000C ; Interrupt Acknowledge Register
GICC_EOIR               *       &0010 ; End of Interrupt Register
GICC_RPR                *       &0014 ; Running Priority Register
GICC_HPPIR              *       &0018 ; Highest Priority Pending Interrupt Register
GICC_ABPR               *       &001C ; Aliased Binary Point Register
GICC_AIAR               *       &0020 ; Aliased Interrupt Acknowledge Register
GICC_AEOIR              *       &0024 ; Aliased End of Interrupt Register
GICC_AHPPIR             *       &0028 ; Aliased Highest Priority Pending Interrupt Register
GICC_APR                *       &00D0 ; Active Priorities Registers
GICC_NSAPR              *       &00E0 ; Non-secure Active Priorities Registers
GICC_IIDR               *       &00FC ; CPU Interface Identification Register
GICC_DIR                *       &1000 ; Deactivate Interrupt Register

; bits in CPU Interface Control Register (ICCICR) [Non-secure copy]
ICCICR_ENABLE_GRP1      *       (1 << 0) ; Enable Group1 signaling of interrupts
ICCICR_FIQ_BYP_DIS_GRP1 *       (1 << 5) ; disable bypass FIQ signaling to processor
ICCICR_IRQ_BYP_DIS_GRP1 *       (1 << 6) ; disable bypass IRQ signaling to processor
ICCICR_EOI_MODE_NS      *       (1 << 9) ; controls Non-secure access to GICC_EOIR + GICC_DIR

; bits in Interrupt Acknowledge Register (ICCIAR)
ICCIAR_INTERRUPTID      *       (&3FF << 0)
ICCIAR_CPUID            *       (7 << 10)

; bits in End of Interrupt Register (ICCEOIR)
ICCEOIR_EOIINTID        *       (&3FF << 0)
ICCEOIR_CPUID           *       (7 << 10)


INTERRUPT_MAX           *       (OMAP54XX_IRQ_FIRST_ID + 160) ; 160 interrupt lines

        ] ; __HAL_INTERRUPTS_HDR__

        END
@


1.1
log
@Initial revision
@
text
@d51 1
a51 1
GICD_SPENDSGIR          *       &0F10 ; SGI Set-Pending Register
@


1.1.1.1
log
@Import of OMAP5 HAL
Admin:
  Submission from Willi Theiss
@
text
@@


1.1.1.1.2.1
log
@Merge in latest changes from HEAD

Version 0.10, 1.5.2.4. Tagged as 'OMAP5-0_10-1_5_2_4'
@
text
@d51 1
a51 1
GICD_SPENDSGIR          *       &0F20 ; SGI Set-Pending Register
@

