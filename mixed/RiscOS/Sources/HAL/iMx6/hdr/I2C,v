head	1.2;
access;
symbols
	iMx6-1_01:1.2
	iMx6-1_00:1.2
	iMx6-0_99:1.2
	iMx6-0_98:1.2
	iMx6-0_97:1.2
	iMx6-0_96-1_4_2_12:1.1.1.1.2.1
	iMx6-0_96:1.2
	iMx6-0_90-1_4_2_11:1.1.1.1.2.1
	iMx6-0_95:1.2
	iMx6-0_94:1.2
	iMx6-0_93:1.2
	iMx6-0_92:1.2
	iMx6-0_91:1.2
	iMx6-0_90-1_4_2_10:1.1.1.1.2.1
	iMx6-0_90:1.2
	iMx6-0_87-1_4_2_9:1.1.1.1.2.1
	iMx6-0_89:1.2
	iMx6-0_87-1_4_2_8:1.1.1.1.2.1
	iMx6-0_88:1.2
	iMx6-0_87-1_4_2_7:1.1.1.1.2.1
	iMx6-0_87:1.2
	iMx6-0_82-1_4_2_6:1.1.1.1.2.1
	iMx6-0_86:1.2
	iMx6-0_82-1_4_2_5:1.1.1.1.2.1
	iMx6-0_85:1.2
	iMx6-0_82-1_4_2_4:1.1.1.1.2.1
	iMx6-0_84:1.2
	iMx6-0_83:1.2
	iMx6-0_82-1_4_2_3:1.1.1.1.2.1
	iMx6-0_82:1.2
	iMx6-0_81:1.1.1.1
	iMx6-0_80-1_4_2_2:1.1.1.1
	iMx6-0_80-1_4_2_1:1.1.1.1
	iMx6-0_80:1.1.1.1
	iMx6-0_79:1.1.1.1
	SMP:1.1.1.1.0.2
	SMP_bp:1.1.1.1
	iMx6-0_78:1.1.1.1
	iMx6-0_77:1.1.1.1
	iMx6-0_76:1.1.1.1
	iMx6-0_75:1.1.1.1
	Vendor:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.08.04.17.14.38;	author jballance;	state Exp;
branches;
next	1.1;
commitid	kUu5oRdZtEsk0V1A;

1.1
date	2017.01.20.01.46.45;	author jballance;	state Exp;
branches
	1.1.1.1;
next	;
commitid	SZe1LdhMuDPoaECz;

1.1.1.1
date	2017.01.20.01.46.45;	author jballance;	state Exp;
branches
	1.1.1.1.2.1;
next	;
commitid	SZe1LdhMuDPoaECz;

1.1.1.1.2.1
date	2017.08.08.18.30.43;	author jlee;	state Exp;
branches;
next	;
commitid	60vgLLklxfzsir2A;


desc
@@


1.2
log
@  Resolve I2C error recovery abort
Detail:
  The code for unlocking stuck I2C transaction failed to get the base
  address of the I2C GPIO port. This had caused an AODT if the I2C transaction
  failed. Issue corrected
Admin:


Version 0.82. Tagged as 'iMx6-0_82'
@
text
@; Copyright 2017 Castle Technology Ltd
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;

        [       :LNOT: :DEF: __HAL_I2C_HDR__
        GBLL    __HAL_I2C_HDR__

        GET     hdr.iMx6q

; I2C registers - relative to relevant BaseAddr, etc.
I2C_SlAddr              *       I2C_IADR_OFFSET          ; Slave address
I2C_FDiv                *       I2C_IFDR_OFFSET          ; Clock divider
I2C_CR                  *       I2C_I2CR_OFFSET          ; Control Reg
I2C_SR                  *       I2C_I2SR_OFFSET
I2C_DR                  *       I2C_I2DR_OFFSET

; I2C_CR bits
I2C_CRIEN               *       (1<<7)                  ; Enable
I2C_CRIIEN              *       (1<<6)                  ; IRQ En
I2C_CRMSTA              *       (1<<5)                  ; Master/~slave
I2C_CRMTX               *       (1<<4)                  ; Tx/~Rx
I2C_CRTXAK              *       (1<<3)                  ; send rx ack bit if 0
I2C_CRRSTA              *       (1<<2)                  ; send repeat start

; I2C_SR bits
I2C_SRICF               *       (1<<7)                  ; 1 = transfer complete
I2C_SRIAAS              *       (1<<6)                  ; 1 = addressed as slave
I2C_SRIBB               *       (1<<5)                  ; 1 = bus busy
I2C_SRIAL               *       (1<<4)                  ; 1 = arbitration lost
I2C_SRSRW               *       (1<<2)                  ; 1 = slave tx mode,0=rx
I2C_SRIIF               *       (1<<1)                  ; 1 = IRQ pending
I2C_SRRXACK             *       (1<<0)                  ; 0 = rxack was rcvd



; I2C transfer block/hardware info

                ^       0
I2CBlockBase    #       0
I2C_XIONum      #       4 ; logical interface number, used for error recovery
I2C_XHW         #       4 ; Address of I2C hardware regs
I2C_XACTIONum   #       4 ; Actual I2C Channel
I2C_XIRQ        #       4 ; IRQ number
I2C_XStart      #       4 ; iic_transfer array ptr (null for idle channel)
I2C_XEnd        #       4 ; array end ptr (inclusive)
I2C_XCurrent    #       4 ; Current iic_transfer ptr
I2C_XBytes      #       4 ; Bytes transferred in current iic_transfer
I2C_XRemain     #       4 ; Bytes remaining in non-repeated start iic_transfers (RX only)
I2CBlockSize    #       0

        ] ; __HAL_I2C_HDR__

        END
@


1.1
log
@Initial revision
@
text
@d51 1
a51 1
I2C_XIONum      #       4 ; interface number, used for error recovery
d53 1
@


1.1.1.1
log
@Initial import of iMx6 HAL
@
text
@@


1.1.1.1.2.1
log
@Merge in changes since iMx6-0_80

Version 0.82, 1.4.2.3. Tagged as 'iMx6-0_82-1_4_2_3'
@
text
@d51 1
a51 1
I2C_XIONum      #       4 ; logical interface number, used for error recovery
a52 1
I2C_XACTIONum   #       4 ; Actual I2C Channel
@

