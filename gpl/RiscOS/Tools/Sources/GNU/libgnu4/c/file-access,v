head	1.1;
access;
symbols
	libgnu4-0_02:1.1;
locks; strict;
comment	@# @;


1.1
date	2017.04.15.11.17.15;	author jlee;	state Exp;
branches;
next	;
commitid	B160euyzsaSWACNz;


desc
@@


1.1
log
@GCC 4.7.4 release 3 compatibility
Detail:
  This mainly involves removing the assembler sources, to avoid having to deal with an asasm bug/limitation where it's impossible to specify a soft-float ABI variant (which then prevents the assembler files from linking with the soft-float C code)
  s/ds_getenv, c/ro_wild, h/system - Replace custom getenv() implementation with standard getenv. Contemporary C libraries have supported system variables longer than 256 bytes for quite some time now.
  s/file-access, c/file-access - Converted these SWI wrappers to C
  s/memcasecmp, h/memcasecmp - Delete memcasecmp() implementation and map it to strnicmp() instead, which should be equivalent
  s/~includes - Redundant, deleted.
  c/getline - Remove custom getline implementation which has a signaure that conflicts with UnixLib's version
  Makefile - Updated for above changes
Admin:
  Tested in BuildHost build with GCC 4.7.4r3


Version 0.02. Tagged as 'libgnu4-0_02'
@
text
@/*
 * Copyright (c) 2017, RISC OS Open Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#include <kernel.h>
#include <swis.h>

/* Return 1 if given name refers to a directory or image file */
int isdir(const char *name)
{
  int type;
  if (_swix(OS_File,_INR(0,1)|_OUT(0),17,name,&type))
  {
    return 0;
  }
  return (type>>1) & 1;
}
@
