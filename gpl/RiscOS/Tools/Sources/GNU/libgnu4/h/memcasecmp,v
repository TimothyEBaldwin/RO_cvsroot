head	1.2;
access;
symbols
	libgnu4-0_02:1.2
	libgnu4-0_01:1.1;
locks; strict;
comment	@# @;


1.2
date	2017.04.15.11.17.18;	author jlee;	state Exp;
branches;
next	1.1;
commitid	B160euyzsaSWACNz;

1.1
date	2013.07.29.23.39.25;	author jlee;	state Exp;
branches;
next	;
commitid	sKcPHhJrbk9RhqZw;


desc
@@


1.2
log
@GCC 4.7.4 release 3 compatibility
Detail:
  This mainly involves removing the assembler sources, to avoid having to deal with an asasm bug/limitation where it's impossible to specify a soft-float ABI variant (which then prevents the assembler files from linking with the soft-float C code)
  s/ds_getenv, c/ro_wild, h/system - Replace custom getenv() implementation with standard getenv. Contemporary C libraries have supported system variables longer than 256 bytes for quite some time now.
  s/file-access, c/file-access - Converted these SWI wrappers to C
  s/memcasecmp, h/memcasecmp - Delete memcasecmp() implementation and map it to strnicmp() instead, which should be equivalent
  s/~includes - Redundant, deleted.
  c/getline - Remove custom getline implementation which has a signaure that conflicts with UnixLib's version
  Makefile - Updated for above changes
Admin:
  Tested in BuildHost build with GCC 4.7.4r3


Version 0.02. Tagged as 'libgnu4-0_02'
@
text
@#ifndef memcasecmp

#include <string.h>

#define memcasecmp strnicmp

#endif
@


1.1
log
@Initial import of GCC 4 compatible version of libgnu
Detail:
  This is a copy of our libgnu library, modified to work with GCC 4.
  Only the files necessary for building the current GCC-based tools have been ported over. Unused files have been left out, and where possible code now relies on functionality provided by the official UnixLib rather than libgnu.
Admin:
  Tested with rebuild of GCC-based tools (diff, gawk, grep, sed, textutils) followed by ROM + disc image builds using those tools
  Requires GCC4-based BuildHost environment


Version 0.01. Tagged as 'libgnu4-0_01'
@
text
@d1 6
a6 6
#ifndef PARAMS
# if defined PROTOTYPES || (defined __STDC__ && __STDC__)
#  define PARAMS(Args) Args
# else
#  define PARAMS(Args) ()
# endif
a7 3

int
  memcasecmp PARAMS ((const void *vs1, const void *vs2, size_t n));
@

