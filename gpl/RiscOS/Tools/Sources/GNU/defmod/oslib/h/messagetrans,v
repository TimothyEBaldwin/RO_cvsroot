head	1.2;
access;
symbols
	defmod-6_23:1.2
	defmod-6_22:1.2
	defmod-6_21:1.1;
locks; strict;
comment	@# @;


1.2
date	2001.06.07.12.24.25;	author sbrodie;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.06.12.48.07;	author sbrodie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@  Changes to cstrong.c for UNIX compatibility.
  Switching macros inverted.
Detail:
  Tested.
Admin:
  Still works.


Version 6.22. Tagged as 'defmod-6_22'
@
text
@#ifndef messagetrans_H
#define messagetrans_H

/*OSLib---efficient, type-safe, transparent, extensible,\n"
   register-safe A P I coverage of RISC O S*/
/*Copyright © 1994 Jonathan Coxhead*/

/*
      OSLib is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 1, or (at your option)
   any later version.

      OSLib is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

      You should have received a copy of the GNU General Public License
   along with this programme; if not, write to the Free Software
   Foundation, Inc, 675 Mass Ave, Cambridge, MA 02139, U S A.
*/

#include <kernel.h>
#include <swis.h>

#ifndef types_H
   #include "types.h"
#endif

#define messagetrans_DIRECT_ACCESS (1 << 0)

typedef struct {int cb [4];} messagetrans_control_block;

#ifdef EXECUTE_ON_UNIX

extern void messagetrans_error_lookup(_kernel_oserror *, void *, _kernel_oserror *,
  int, char *, char *, char *, char *);

#else /* EXECUTE_ON_UNIX */

#define xmessagetrans_file_info(file_name, flags, size) \
  _swix (MessageTrans_FileInfo, _IN (1) | _OUT (0) | _OUT (2), \
      (char *) (file_name), (int *) (flags), (int *) (size))

#define xmessagetrans_open_file(cb, file_name, buffer) \
  _swix (MessageTrans_OpenFile, _IN (0) | _IN (1) | _IN (2), \
      (messagetrans_control_block *) (cb), (char *) (file_name), \
      (char *) (buffer))

#define xmessagetrans_lookup(cb, token, buffer, size_in, arg0, arg1, arg2, \
      arg3, result, size_out) \
  _swix (MessageTrans_Lookup, _IN (0) | _IN (1) | _IN (2) | _IN (3) | \
      _IN (4) | _IN (5) | _IN (6) | _IN (7) | _OUT (2) | _OUT (3), \
      (messagetrans_control_block *) (cb), (char *) (token), \
      (char *) (buffer), (int) (size_in), (char *) (arg0), \
      (char *) (arg1), (char *) (arg2), (char *) (arg3), \
      (char **) (result), (int *) (size_out))

#define xmessagetrans_make_menus(cb, menus, buffer, size_in, size_out) \
  _swix (MessageTrans_MakeMenus, _IN (0) | _IN (1) | _IN (2) | _IN (3) | \
      _OUT (3), \
      (messagetrans_control_block *) (cb), (char *) (menus), \
      (char *) (buffer), (int) (size_in), (int *) (size_out))

#define xmessagetrans_close_file(cb) \
  _swix (MessageTrans_CloseFile, _IN (0), \
      (messagetrans_control_block *) (cb))

#define xmessagetrans_enumerate_tokens(cb, token, buffer, size, index, \
      cont, size_out, index_out) \
   _swix (MessageTrans_EnumerateTokens, \
         _IN (0) | _IN (1) | _IN (2) | _IN (3) | _IN (4) | \
         _OUT (2) | _OUT (3) | _OUT (4), \
         (messagetrans_control_block *) (cb), (char *) (token), \
         (char *) (buffer), (int) (size), (int) (index), \
         (osbool *) (cont), (int *) (size_out), (int *) (index_out))

#define xmessagetrans_error_lookup(error, cb, buffer, size_in, arg0, arg1, \
      arg2, arg3) \
  _swix (MessageTrans_ErrorLookup, _IN (0) | _IN (1) | _IN (2) | _IN (3) | \
      _IN (4) | _IN (5) | _IN (6) | _IN (7), \
      (_kernel_oserror *) (error), (messagetrans_control_block *) (cb), \
      (char *) (buffer), (int) (size_in), (char *) (arg0), \
      (char *) (arg1), (char *) (arg2), (char *) (arg3))

#define messagetrans_error_lookup(error, cb, buffer, size_in, arg0, arg1, \
      arg2, arg3) \
  _swi (MessageTrans_ErrorLookup, _IN (0) | _IN (1) | _IN (2) | _IN (3) | \
      _IN (4) | _IN (5) | _IN (6) | _IN (7), \
      (_kernel_oserror *) (error), (messagetrans_control_block *) (cb), \
      (char *) (buffer), (int) (size_in), (char *) (arg0), \
      (char *) (arg1), (char *) (arg2), (char *) (arg3))

#define xmessagetrans_gs_lookup(cb, token, buffer, size_in, arg0, arg1, \
      arg2, arg3, result, size_out) \
  _swix (MessageTrans_GSLookup, _IN (0) | _IN (1) | _IN (2) | _IN (3) | \
      _IN (4) | _IN (5) | _IN (6) | _IN (7) | _OUT (2)  | _OUT (3), \
      (messagetrans_control_block *) (cb), (char *) (token), \
      (char *) (buffer), (int) (size_in), (char *) (arg0), \
      (char *) (arg1), (char *) (arg2), (char *) (arg3), \
      (char **) (result), (int *) (size_out))

#define xmessagetrans_copy_error(error, copy) \
   _swix (MessageTrans_CopyError, _IN (0) | _OUT (0), \
      (os_error *) (error), (os_error **) (copy))

#endif /* EXECUTE_ON_UNIX */

#endif
@


1.1
log
@  Update of defmod to the one that accompanies public version 6.21
  UNIX version.
Detail:
  This source set represents that distributed with OSLib 6.21.  I've
    fixed some faults and passed them back to the maintainers (notably
    an uncaught NULL pointer dereference in the chelp_output function).
  This application now builds on Solaris, Linux & FreeBSD.
  The bootstrap code moves to directory 'oslib' instead of 'bs' to avoid
    needing to change lots of includes between RISC OS and non-RISC OS
    variants.
Notes:
  -cstrong seems to produce empty files (on all variants) - I guess it's
    not supported any more (we don't need it either).
Admin:
  Tested on Solaris, Linux, FreeBSD and RISC OS.
  Sources re-released to maintainers as required under GPL licence.


Version 6.21. Tagged as 'defmod-6_21'
@
text
@d35 6
a40 1
#ifdef EXECUTE_ON_RISCOS
d108 1
a108 6
#else /* EXECUTE_ON_RISCOS */

extern void messagetrans_error_lookup(_kernel_oserror *, void *, _kernel_oserror *,
  int, char *, char *, char *, char *);

#endif
@

