head	1.1;
access;
symbols
	Batch6:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.12.03.18.30.41;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Clean reimport of GCC version 2.95.4.
Detail:
  Original log from 2003-12-10 reads:
  This version is suitable for use on 32-bit machines, and creates APCS-32
  code by default. It is currently marked as "experimental", although it does
  fix several bugs that we have encountered using the last "stable" release.
  This directory is equivalent to a merge of the distribution archives "cc1",
  "cc1plus", "gcc" and "gccdoc" from http://www.riscos.info/gcc/32bit.html
  with one change: a #include commented out in _G_config.h, since this prevents
  the use of the STL library unless you are linking with UnixLib.
Admin:
  Tagged as 'Batch6'
@
text
@/****************************************************************************
 *
 * $Source: /home/cvs/RiscOS/Apps/!gcc/include/unixlib/machine/h/huge_val,v $
 * $Date: 2003/12/10 18:18:02 $
 * $Revision: 1.1.1.1 $
 * $State: Exp $
 * $Author: bavison $
 *
 ***************************************************************************/

/* `HUGE_VAL' constant for IEEE 754. */

#ifndef __MACHINE_HUGE_VAL_H
#define __MACHINE_HUGE_VAL_H 1

/* IEEE positive infinity (-HUGE_VAL is negative infinity).  */

typedef union
{
  unsigned char __c[8];
  double __d;
} __huge_val_t;

extern __huge_val_t __huge_val;
#define HUGE_VAL (__huge_val.__d)


/* GNU extensions: (float) HUGE_VALF and (long double) HUGE_VALL.  */
typedef union
{
  unsigned char __c[4];
  float __f;
} __huge_valf_t;

extern __huge_valf_t __huge_valf;
#define HUGE_VALF (__huge_valf.__f)

typedef union
{
  unsigned char __c[12];
  long double __ld;
}__huge_vall_t;

extern __huge_vall_t __huge_vall;
#define HUGE_VALL (__huge_vall.__ld)

#endif
@
