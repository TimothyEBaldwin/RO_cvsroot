head	1.1;
access;
symbols
	Batch6:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.12.03.18.30.59;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Clean reimport of GCC version 2.95.4.
Detail:
  Original log from 2003-12-10 reads:
  This version is suitable for use on 32-bit machines, and creates APCS-32
  code by default. It is currently marked as "experimental", although it does
  fix several bugs that we have encountered using the last "stable" release.
  This directory is equivalent to a merge of the distribution archives "cc1",
  "cc1plus", "gcc" and "gccdoc" from http://www.riscos.info/gcc/32bit.html
  with one change: a #include commented out in _G_config.h, since this prevents
  the use of the STL library unless you are linking with UnixLib.
Admin:
  Tagged as 'Batch6'
@
text
@/****************************************************************************
 *
 * $Source: /home/cvs/RiscOS/Apps/!gcc/include/unixlib/sys/h/poll,v $
 * $Date: 2003/12/10 18:18:02 $
 * $Revision: 1.1.1.1 $
 * $State: Exp $
 * $Author: bavison $
 *
 ***************************************************************************/

/* System V poll interface.  */

#ifdef EMBED_RCSID
static const char rcs_id[] = "$Id: poll,v 1.1.1.1 2003/12/10 18:18:02 bavison Exp $";
#endif

#ifndef __SYS_POLL_H
#define __SYS_POLL_H

#ifndef __UNIXLIB_FEATURES_H
#include <unixlib/features.h>
#endif

__BEGIN_DECLS

/* Type used for the number of file descriptors.  */
typedef unsigned long int nfds_t;

/* Data structure describing a polling request.  */
struct pollfd
  {
    int fd;    /* File descriptor to poll.  */
    short int events;    /* Types of events poller cares about.  */
    short int revents;    /* Types of events that actually occurred.  */

  };

/* Event types that can be polled for.   */

/* Data to be read.  */
#define POLLIN		01
/* Urgent data to read.  */
#define POLLPRI		02
/* Writing now will not block.  */
#define POLLOUT		04

/* Event types always implicitly polled for.  */

/* Error condition.  */
#define POLLERR         010
/* Hung up.  */
#define POLLHUP         020
/* Invalid polling request.  */
#define POLLNVAL        040

/* Canonical number of polling requests to read in at a time in poll.  */
#define NPOLLFILE	30


/* Poll the file descriptors described by the NFDS structures starting at
   FDS.  If TIMEOUT is nonzero and not -1, allow TIMEOUT milliseconds for
   an event to occur; if TIMEOUT is -1, block until an event occurs.
   Returns the number of file descriptors with events, zero if timed out,
   or -1 for errors.  */

extern int poll (struct pollfd *__fds, nfds_t __nfds, int __timeout);

__END_DECLS

#endif
@
