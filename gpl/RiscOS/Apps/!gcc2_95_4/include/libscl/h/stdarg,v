head	1.1;
access;
symbols
	Batch6:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.12.03.18.30.30;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Clean reimport of GCC version 2.95.4.
Detail:
  Original log from 2003-12-10 reads:
  This version is suitable for use on 32-bit machines, and creates APCS-32
  code by default. It is currently marked as "experimental", although it does
  fix several bugs that we have encountered using the last "stable" release.
  This directory is equivalent to a merge of the distribution archives "cc1",
  "cc1plus", "gcc" and "gccdoc" from http://www.riscos.info/gcc/32bit.html
  with one change: a #include commented out in _G_config.h, since this prevents
  the use of the STL library unless you are linking with UnixLib.
Admin:
  Tagged as 'Batch6'
@
text
@/* stdarg.h

   Shared C Library support.
   Written by Nick Burrett, 1997 and 1998.  */

#ifndef __STDARG_H
#define __STDARG_H

#ifdef __cplusplus
extern "C" {
#endif


#if defined(__LCC__)
/* Definition for the LCC compiler.  */

#ifndef _VA_LIST
#define _VA_LIST
typedef char *__gnuc_va_list;
#endif

typedef __gnuc_va_list va_list;
#define va_start(list, start) ((void)((list) = (sizeof(start)<4 ? \
  (char *)((int *)&(start)+1) : (char *)(&(start)+1))))
#define va_arg(list, mode) \
  (*(mode *)(&(list += \
    ((sizeof(mode)+3U)&~3U))[-(int)((sizeof(mode)+3U)&~3U)]))
#define va_end(list) ((void)0)

/* GCC has its own private copy of stdarg.h.  */
#elif !defined(__GNUC__)

/* Place a copy of <stdarg.h> that is suitable for your compiler
   after this comment.  Then remove the #error line.  */

#error stdarg.h has not been implemented for this compiler

#elif defined(__GNUC__)
#error Incorrect stdarg.h included (shouldn't get here)
#endif

#ifdef __cplusplus
}
#endif
#endif
@
