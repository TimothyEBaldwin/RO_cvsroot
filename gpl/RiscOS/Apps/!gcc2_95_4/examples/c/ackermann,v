head	1.1;
access;
symbols
	Batch6:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.12.03.18.30.13;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.1
log
@  Clean reimport of GCC version 2.95.4.
Detail:
  Original log from 2003-12-10 reads:
  This version is suitable for use on 32-bit machines, and creates APCS-32
  code by default. It is currently marked as "experimental", although it does
  fix several bugs that we have encountered using the last "stable" release.
  This directory is equivalent to a merge of the distribution archives "cc1",
  "cc1plus", "gcc" and "gccdoc" from http://www.riscos.info/gcc/32bit.html
  with one change: a #include commented out in _G_config.h, since this prevents
  the use of the STL library unless you are linking with UnixLib.
Admin:
  Tagged as 'Batch6'
@
text
@/* Ackermann function */

#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int ack (int, int, int);

int
main (int argc, char *argv[])
{
  int a, b;

  if (argc == 1 || argc == 2)
    {
      printf ("Error. Too few parameters passed on command line\n");
      printf ("Syntax: ackermann <x> <y>\n");
      return 1;
    }

  /* Convert from strings to numbers, the two arguments passed on the
     command line.  */
  a = atoi (argv[1]);
  b = atoi (argv[2]);

  printf ("ack(%d,%d) = %d\n", a, b, ack (a, b, 0));
  printf ("Time = %d\n", clock ());
  return 0;
}

int
ack (register int x, register int y, register int acker)
{
  if (x == 0)
    {
      acker = y + 1;
    }
  else
    {
      if (y == 0)
	{
	  acker = ack (x - 1, 1, 0);
	}
      else
	{
	  acker = ack (x - 1, ack (x, y - 1, 0), 0);
	}
    }
  return acker;
}
@
