head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.06;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.06;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.03;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>How do I? - GNU gprof</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="GNU gprof">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="prev" href="Inaccuracy.html#Inaccuracy" title="Inaccuracy">
<link rel="next" href="Incompatibilities.html#Incompatibilities" title="Incompatibilities">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the gprof profiler of the GNU system.

Copyright (C) 1988, 1992, 1997, 1998, 1999, 2000, 2001, 2003,
2007, 2008, 2009 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="How-do-I%3f"></a>
<a name="How-do-I_003f"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Incompatibilities.html#Incompatibilities">Incompatibilities</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Inaccuracy.html#Inaccuracy">Inaccuracy</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="index.html#Top">Top</a>
<hr>
</div>

<h2 class="chapter">7 Answers to Common Questions</h2>

     <dl>
<dt>How can I get more exact information about hot spots in my program?<dd>
Looking at the per-line call counts only tells part of the story. 
Because <code>gprof</code> can only report call times and counts by function,
the best way to get finer-grained information on where the program
is spending its time is to re-factor large functions into sequences
of calls to smaller ones.  Beware however that this can introduce
artificial hot spots since compiling with &lsquo;<samp><span class="samp">-pg</span></samp>&rsquo; adds a significant
overhead to function calls.  An alternative solution is to use a
non-intrusive profiler, e.g. oprofile.

     <br><dt>How do I find which lines in my program were executed the most times?<dd>
Use the <code>gcov</code> program.

     <br><dt>How do I find which lines in my program called a particular function?<dd>
Use &lsquo;<samp><span class="samp">gprof -l</span></samp>&rsquo; and lookup the function in the call graph. 
The callers will be broken down by function and line number.

     <br><dt>How do I analyze a program that runs for less than a second?<dd>
Try using a shell script like this one:

     <pre class="example">          for i in `seq 1 100`; do
            fastprog
            mv gmon.out gmon.out.$i
          done
          
          gprof -s fastprog gmon.out.*
          
          gprof fastprog gmon.sum
</pre>
     <p>If your program is completely deterministic, all the call counts
will be simple multiples of 100 (i.e., a function called once in
each run will appear with a call count of 100).

</dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 12
a12 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the gprof profiler of the GNU system.
d22 1
a22 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>GNU gprof: How do I?</title>
a23 37
<meta name="description" content="GNU gprof: How do I?">
<meta name="keywords" content="GNU gprof: How do I?">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="index.html#Top" rel="up" title="Top">
<link href="Incompatibilities.html#Incompatibilities" rel="next" title="Incompatibilities">
<link href="Assumptions.html#Assumptions" rel="prev" title="Assumptions">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d25 12
a36 3
</style>


d38 3
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 4
a46 1
Next: <a href="Incompatibilities.html#Incompatibilities" accesskey="n" rel="next">Incompatibilities</a>, Previous: <a href="Inaccuracy.html#Inaccuracy" accesskey="p" rel="prev">Inaccuracy</a>, Up: <a href="index.html#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>]</p>
d48 1
a48 2
<hr>
<a name="Answers-to-Common-Questions"></a>
d51 3
a53 4
<dl compact="compact">
<dt>How can I get more exact information about hot spots in my program?</dt>
<dd>
<p>Looking at the per-line call counts only tells part of the story.
d58 1
a58 1
artificial hot spots since compiling with &lsquo;<samp>-pg</samp>&rsquo; adds a significant
d61 6
a66 10
</p>
</dd>
<dt>How do I find which lines in my program were executed the most times?</dt>
<dd>
<p>Use the <code>gcov</code> program.
</p>
</dd>
<dt>How do I find which lines in my program called a particular function?</dt>
<dd>
<p>Use &lsquo;<samp>gprof -l</samp>&rsquo; and lookup the function in the call graph.
a67 11
</p>
</dd>
<dt>How do I analyze a program that runs for less than a second?</dt>
<dd>
<p>Try using a shell script like this one:
</p>
<div class="example">
<pre class="example">for i in `seq 1 100`; do
  fastprog
  mv gmon.out gmon.out.$i
done
d69 2
a70 1
gprof -s fastprog gmon.out.*
d72 10
a81 4
gprof fastprog gmon.sum
</pre></div>

<p>If your program is completely deterministic, all the call counts
d84 1
a84 2
</p>
</dd>
d87 1
a88 4


</body>
</html>
@

