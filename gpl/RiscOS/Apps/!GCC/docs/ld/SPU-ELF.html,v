head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.05;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>SPU ELF - Untitled</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Untitled">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Machine-Dependent.html#Machine-Dependent" title="Machine Dependent">
<link rel="prev" href="PowerPC64-ELF64.html#PowerPC64-ELF64" title="PowerPC64 ELF64">
<link rel="next" href="TI-COFF.html#TI-COFF" title="TI COFF">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU linker LD
(GCCSDK GCC 4.1.2 Release 1 Development)
version 2.21.

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="SPU-ELF"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="TI-COFF.html#TI-COFF">TI COFF</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="PowerPC64-ELF64.html#PowerPC64-ELF64">PowerPC64 ELF64</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Machine-Dependent.html#Machine-Dependent">Machine Dependent</a>
<hr>
</div>

<h3 class="section">4.11 <samp><span class="command">ld</span></samp> and SPU ELF Support</h3>

<p><a name="index-SPU-ELF-options-639"></a>
     
<a name="index-SPU-plugins-640"></a>
<a name="index-g_t_002d_002dplugin-641"></a>
<dl><dt><samp><span class="option">--plugin</span></samp><dd>This option marks an executable as a PIC plugin module.

     <p><a name="index-SPU-overlays-642"></a><a name="index-g_t_002d_002dno_002doverlays-643"></a><br><dt><samp><span class="option">--no-overlays</span></samp><dd>Normally, <samp><span class="command">ld</span></samp> recognizes calls to functions within overlay
regions, and redirects such calls to an overlay manager via a stub. 
<samp><span class="command">ld</span></samp> also provides a built-in overlay manager.  This option
turns off all this special overlay handling.

     <p><a name="index-SPU-overlay-stub-symbols-644"></a><a name="index-g_t_002d_002demit_002dstub_002dsyms-645"></a><br><dt><samp><span class="option">--emit-stub-syms</span></samp><dd>This option causes <samp><span class="command">ld</span></samp> to label overlay stubs with a local
symbol that encodes the stub type and destination.

     <p><a name="index-SPU-extra-overlay-stubs-646"></a><a name="index-g_t_002d_002dextra_002doverlay_002dstubs-647"></a><br><dt><samp><span class="option">--extra-overlay-stubs</span></samp><dd>This option causes <samp><span class="command">ld</span></samp> to add overlay call stubs on all
function calls out of overlay regions.  Normally stubs are not added
on calls to non-overlay regions.

     <p><a name="index-SPU-local-store-size-648"></a><a name="index-g_t_002d_002dlocal_002dstore_003dlo_003ahi-649"></a><br><dt><samp><span class="option">--local-store=lo:hi</span></samp><dd><samp><span class="command">ld</span></samp> usually checks that a final executable for SPU fits in
the address range 0 to 256k.  This option may be used to change the
range.  Disable the check entirely with <samp><span class="option">--local-store=0:0</span></samp>.

     <p><a name="index-SPU-650"></a><a name="index-g_t_002d_002dstack_002danalysis-651"></a><br><dt><samp><span class="option">--stack-analysis</span></samp><dd>SPU local store space is limited.  Over-allocation of stack space
unnecessarily limits space available for code and data, while
under-allocation results in runtime failures.  If given this option,
<samp><span class="command">ld</span></samp> will provide an estimate of maximum stack usage. 
<samp><span class="command">ld</span></samp> does this by examining symbols in code sections to
determine the extents of functions, and looking at function prologues
for stack adjusting instructions.  A call-graph is created by looking
for relocations on branch instructions.  The graph is then searched
for the maximum stack usage path.  Note that this analysis does not
find calls made via function pointers, and does not handle recursion
and other cycles in the call graph.  Stack usage may be
under-estimated if your code makes such calls.  Also, stack usage for
dynamic allocation, e.g. alloca, will not be detected.  If a link map
is requested, detailed information about each function's stack usage
and calls will be given.

     <p><a name="index-SPU-652"></a><a name="index-g_t_002d_002demit_002dstack_002dsyms-653"></a><br><dt><samp><span class="option">--emit-stack-syms</span></samp><dd>This option, if given along with <samp><span class="option">--stack-analysis</span></samp> will result
in <samp><span class="command">ld</span></samp> emitting stack sizing symbols for each function. 
These take the form <code>__stack_&lt;function_name&gt;</code> for global
functions, and <code>__stack_&lt;number&gt;_&lt;function_name&gt;</code> for static
functions.  <code>&lt;number&gt;</code> is the section id in hex.  The value of
such symbols is the stack requirement for the corresponding function. 
The symbol size will be zero, type <code>STT_NOTYPE</code>, binding
<code>STB_LOCAL</code>, and section <code>SHN_ABS</code>. 
</dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 15
a15 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU linker LD
(GNU Binutils)
version 2.24.
d17 2
a18 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d25 13
a37 47
section entitled "GNU Free Documentation License". -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>LD: SPU ELF</title>

<meta name="description" content="LD: SPU ELF">
<meta name="keywords" content="LD: SPU ELF">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="LD-Index.html#LD-Index" rel="index" title="LD Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Machine-Dependent.html#Machine-Dependent" rel="up" title="Machine Dependent">
<link href="TI-COFF.html#TI-COFF" rel="next" title="TI COFF">
<link href="PowerPC64-ELF64.html#PowerPC64-ELF64" rel="prev" title="PowerPC64 ELF64">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>


d39 2
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 4
a46 1
Next: <a href="TI-COFF.html#TI-COFF" accesskey="n" rel="next">TI COFF</a>, Previous: <a href="PowerPC64-ELF64.html#PowerPC64-ELF64" accesskey="p" rel="prev">PowerPC64 ELF64</a>, Up: <a href="Machine-Dependent.html#Machine-Dependent" accesskey="u" rel="up">Machine Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="LD-Index.html#LD-Index" title="Index" rel="index">Index</a>]</p>
a47 3
<hr>
<a name="ld-and-SPU-ELF-Support"></a>
<h3 class="section">4.12 <code>ld</code> and SPU ELF Support</h3>
d49 11
a59 16
<a name="index-SPU-ELF-options"></a>
<dl compact="compact">
<dd>
<a name="index-SPU-plugins"></a>
<a name="index-_002d_002dplugin"></a>
</dd>
<dt><samp>--plugin</samp></dt>
<dd><p>This option marks an executable as a PIC plugin module.
</p>
<a name="index-SPU-overlays"></a>
<a name="index-_002d_002dno_002doverlays"></a>
</dd>
<dt><samp>--no-overlays</samp></dt>
<dd><p>Normally, <code>ld</code> recognizes calls to functions within overlay
regions, and redirects such calls to an overlay manager via a stub.
<code>ld</code> also provides a built-in overlay manager.  This option
d61 2
a62 6
</p>
<a name="index-SPU-overlay-stub-symbols"></a>
<a name="index-_002d_002demit_002dstub_002dsyms-2"></a>
</dd>
<dt><samp>--emit-stub-syms</samp></dt>
<dd><p>This option causes <code>ld</code> to label overlay stubs with a local
d64 2
a65 6
</p>
<a name="index-SPU-extra-overlay-stubs"></a>
<a name="index-_002d_002dextra_002doverlay_002dstubs"></a>
</dd>
<dt><samp>--extra-overlay-stubs</samp></dt>
<dd><p>This option causes <code>ld</code> to add overlay call stubs on all
d68 2
a69 6
</p>
<a name="index-SPU-local-store-size"></a>
<a name="index-_002d_002dlocal_002dstore_003dlo_003ahi"></a>
</dd>
<dt><samp>--local-store=lo:hi</samp></dt>
<dd><p><code>ld</code> usually checks that a final executable for SPU fits in
d71 3
a73 7
range.  Disable the check entirely with <samp>--local-store=0:0</samp>.
</p>
<a name="index-SPU"></a>
<a name="index-_002d_002dstack_002danalysis"></a>
</dd>
<dt><samp>--stack-analysis</samp></dt>
<dd><p>SPU local store space is limited.  Over-allocation of stack space
d76 2
a77 2
<code>ld</code> will provide an estimate of maximum stack usage.
<code>ld</code> does this by examining symbols in code sections to
d86 1
a86 1
is requested, detailed information about each function&rsquo;s stack usage
d88 3
a90 7
</p>
<a name="index-SPU-1"></a>
<a name="index-_002d_002demit_002dstack_002dsyms"></a>
</dd>
<dt><samp>--emit-stack-syms</samp></dt>
<dd><p>This option, if given along with <samp>--stack-analysis</samp> will result
in <code>ld</code> emitting stack sizing symbols for each function.
d94 1
a94 1
such symbols is the stack requirement for the corresponding function.
d96 1
a96 2
<code>STB_LOCAL</code>, and section <code>SHN_ABS</code>.
</p></dd>
d99 1
a100 11

<hr>
<div class="header">
<p>
Next: <a href="TI-COFF.html#TI-COFF" accesskey="n" rel="next">TI COFF</a>, Previous: <a href="PowerPC64-ELF64.html#PowerPC64-ELF64" accesskey="p" rel="prev">PowerPC64 ELF64</a>, Up: <a href="Machine-Dependent.html#Machine-Dependent" accesskey="u" rel="up">Machine Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="LD-Index.html#LD-Index" title="Index" rel="index">Index</a>]</p>
</div>



</body>
</html>
@

