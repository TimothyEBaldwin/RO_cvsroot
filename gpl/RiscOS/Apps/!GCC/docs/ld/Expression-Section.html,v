head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.05;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Expression Section - Untitled</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Untitled">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Expressions.html#Expressions" title="Expressions">
<link rel="prev" href="Evaluation.html#Evaluation" title="Evaluation">
<link rel="next" href="Builtin-Functions.html#Builtin-Functions" title="Builtin Functions">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU linker LD
(GCCSDK GCC 4.1.2 Release 1 Development)
version 2.21.

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Expression-Section"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Builtin-Functions.html#Builtin-Functions">Builtin Functions</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Evaluation.html#Evaluation">Evaluation</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Expressions.html#Expressions">Expressions</a>
<hr>
</div>

<h4 class="subsection">3.10.8 The Section of an Expression</h4>

<p><a name="index-expression-sections-515"></a><a name="index-absolute-expressions-516"></a><a name="index-relative-expressions-517"></a><a name="index-absolute-and-relocatable-symbols-518"></a><a name="index-relocatable-and-absolute-symbols-519"></a><a name="index-symbols_002c-relocatable-and-absolute-520"></a>Addresses and symbols may be section relative, or absolute.  A section
relative symbol is relocatable.  If you request relocatable output
using the &lsquo;<samp><span class="samp">-r</span></samp>&rsquo; option, a further link operation may change the
value of a section relative symbol.  On the other hand, an absolute
symbol will retain the same value throughout any further link
operations.

   <p>Some terms in linker expressions are addresses.  This is true of
section relative symbols and for builtin functions that return an
address, such as <code>ADDR</code>, <code>LOADADDR</code>, <code>ORIGIN</code> and
<code>SEGMENT_START</code>.  Other terms are simply numbers, or are builtin
functions that return a non-address value, such as <code>LENGTH</code>.

   <p>When the linker evaluates an expression, the result depends on where
the expression is located in a linker script.  Expressions appearing
outside an output section definitions are evaluated with all terms
first being converted to absolute addresses before applying operators,
and evaluate to an absolute address result.  Expressions appearing
inside an output section definition are evaluated with more complex
rules, but the aim is to treat terms as relative addresses and produce
a relative address result.  In particular, an assignment of a number
to a symbol results in a symbol relative to the output section with an
offset given by the number.  So, in the following simple example,

<pre class="smallexample">     SECTIONS
       {
         . = 0x100;
         __executable_start = 0x100;
         .data :
         {
           . = 0x10;
           __data_start = 0x10;
           *(.data)
         }
         ...
       }
</pre>
   <p>both <code>.</code> and <code>__executable_start</code> are set to the absolute
address 0x100 in the first two assignments, then both <code>.</code> and
<code>__data_start</code> are set to 0x10 relative to the <code>.data</code>
section in the second two assignments.

   <p>For expressions appearing inside an output section definition
involving numbers, relative addresses and absolute addresses, ld
follows these rules to evaluate terms:

     <ul>
<li>Unary operations on a relative address, and binary operations on two
relative addresses in the same section or between one relative address
and a number, apply the operator to the offset part of the address(es). 
<li>Unary operations on an absolute address, and binary operations on one
or more absolute addresses or on two relative addresses not in the
same section, first convert any non-absolute term to an absolute
address before applying the operator. 
</ul>

   <p>The result section of each sub-expression is as follows:

     <ul>
<li>An operation involving only numbers results in a number. 
<li>The result of comparisons, &lsquo;<samp><span class="samp">&amp;&amp;</span></samp>&rsquo; and &lsquo;<samp><span class="samp">||</span></samp>&rsquo; is also a number. 
<li>The result of other operations on relative addresses (after above
conversions) is a relative address in the same section as the operand(s). 
<li>The result of other operations on absolute addresses (after above
conversions) is an absolute address. 
</ul>

   <p>You can use the builtin function <code>ABSOLUTE</code> to force an expression
to be absolute when it would otherwise be relative.  For example, to
create an absolute symbol set to the address of the end of the output
section &lsquo;<samp><span class="samp">.data</span></samp>&rsquo;:
<pre class="smallexample">     SECTIONS
       {
         .data : { *(.data) _edata = ABSOLUTE(.); }
       }
</pre>
   <p class="noindent">If &lsquo;<samp><span class="samp">ABSOLUTE</span></samp>&rsquo; were not used, &lsquo;<samp><span class="samp">_edata</span></samp>&rsquo; would be relative to the
&lsquo;<samp><span class="samp">.data</span></samp>&rsquo; section.

   <p>Using <code>LOADADDR</code> also forces an expression absolute, since this
particular builtin function returns an absolute address.

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 15
a15 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU linker LD
(GNU Binutils)
version 2.24.
d17 2
a18 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d25 13
a37 47
section entitled "GNU Free Documentation License". -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>LD: Expression Section</title>

<meta name="description" content="LD: Expression Section">
<meta name="keywords" content="LD: Expression Section">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="LD-Index.html#LD-Index" rel="index" title="LD Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Expressions.html#Expressions" rel="up" title="Expressions">
<link href="Builtin-Functions.html#Builtin-Functions" rel="next" title="Builtin Functions">
<link href="Evaluation.html#Evaluation" rel="prev" title="Evaluation">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>


d39 2
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 4
a46 1
Next: <a href="Builtin-Functions.html#Builtin-Functions" accesskey="n" rel="next">Builtin Functions</a>, Previous: <a href="Evaluation.html#Evaluation" accesskey="p" rel="prev">Evaluation</a>, Up: <a href="Expressions.html#Expressions" accesskey="u" rel="up">Expressions</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="LD-Index.html#LD-Index" title="Index" rel="index">Index</a>]</p>
d48 1
a48 2
<hr>
<a name="The-Section-of-an-Expression"></a>
d50 2
a51 7
<a name="index-expression-sections"></a>
<a name="index-absolute-expressions"></a>
<a name="index-relative-expressions"></a>
<a name="index-absolute-and-relocatable-symbols"></a>
<a name="index-relocatable-and-absolute-symbols"></a>
<a name="index-symbols_002c-relocatable-and-absolute"></a>
<p>Addresses and symbols may be section relative, or absolute.  A section
d53 1
a53 1
using the &lsquo;<samp>-r</samp>&rsquo; option, a further link operation may change the
d57 2
a58 2
</p>
<p>Some terms in linker expressions are addresses.  This is true of
a62 26
One complication is that unless you set <code>LD_FEATURE (&quot;SANE_EXPR&quot;)</code>
(see <a href="Miscellaneous-Commands.html#Miscellaneous-Commands">Miscellaneous Commands</a>), numbers and absolute symbols are treated
differently depending on their location, for compatibility with older
versions of <code>ld</code>.  Expressions appearing outside an output
section definition treat all numbers as absolute addresses.
Expressions appearing inside an output section definition treat
absolute symbols as numbers.  If <code>LD_FEATURE (&quot;SANE_EXPR&quot;)</code> is
given, then absolute symbols and numbers are simply treated as numbers
everywhere.
</p>
<p>In the following simple example,
</p>
<div class="smallexample">
<pre class="smallexample">SECTIONS
  {
    . = 0x100;
    __executable_start = 0x100;
    .data :
    {
      . = 0x10;
      __data_start = 0x10;
      *(.data)
    }
    &hellip;
  }
</pre></div>
d64 25
a88 1
<p>both <code>.</code> and <code>__executable_start</code> are set to the absolute
d92 7
a98 9
</p>
<p>For expressions involving numbers, relative addresses and absolute
addresses, ld follows these rules to evaluate terms:
</p>
<ul>
<li> Unary operations on an absolute address or number, and binary
operations on two absolute addresses or two numbers, or between one
absolute address and a number, apply the operator to the value(s).
</li><li> Unary operations on a relative address, and binary operations on two
d100 17
a116 21
and a number, apply the operator to the offset part of the address(es).
</li><li> Other binary operations, that is, between two relative addresses not
in the same section, or between a relative address and an absolute
address, first convert any non-absolute term to an absolute address
before applying the operator.
</li></ul>

<p>The result section of each sub-expression is as follows:
</p>
<ul>
<li> An operation involving only numbers results in a number.
</li><li> The result of comparisons, &lsquo;<samp>&amp;&amp;</samp>&rsquo; and &lsquo;<samp>||</samp>&rsquo; is also a number.
</li><li> The result of other binary arithmetic and logical operations on two
relative addresses in the same section or two absolute addresses
(after above conversions) is also a number.
</li><li> The result of other operations on relative addresses or one
relative address and a number, is a relative address in the same
section as the relative operand(s).
</li><li> The result of other operations on absolute addresses (after above
conversions) is an absolute address.
</li></ul>
d118 1
a118 1
<p>You can use the builtin function <code>ABSOLUTE</code> to force an expression
d121 10
a130 11
section &lsquo;<samp>.data</samp>&rsquo;:
</p><div class="smallexample">
<pre class="smallexample">SECTIONS
  {
    .data : { *(.data) _edata = ABSOLUTE(.); }
  }
</pre></div>
<p>If &lsquo;<samp>ABSOLUTE</samp>&rsquo; were not used, &lsquo;<samp>_edata</samp>&rsquo; would be relative to the
&lsquo;<samp>.data</samp>&rsquo; section.
</p>
<p>Using <code>LOADADDR</code> also forces an expression absolute, since this
a131 7
</p>
<hr>
<div class="header">
<p>
Next: <a href="Builtin-Functions.html#Builtin-Functions" accesskey="n" rel="next">Builtin Functions</a>, Previous: <a href="Evaluation.html#Evaluation" accesskey="p" rel="prev">Evaluation</a>, Up: <a href="Expressions.html#Expressions" accesskey="u" rel="up">Expressions</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="LD-Index.html#LD-Index" title="Index" rel="index">Index</a>]</p>
</div>

d133 1
a134 2
</body>
</html>
@

