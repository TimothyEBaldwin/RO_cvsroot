head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.13;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.13;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.15;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>LM32-Modifiers - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="LM32-Syntax.html#LM32-Syntax" title="LM32 Syntax">
<link rel="prev" href="LM32_002dRegs.html#LM32_002dRegs" title="LM32-Regs">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="LM32-Modifiers"></a>
<a name="LM32_002dModifiers"></a>
<p>
Previous:&nbsp;<a rel="previous" accesskey="p" href="LM32_002dRegs.html#LM32_002dRegs">LM32-Regs</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="LM32-Syntax.html#LM32-Syntax">LM32 Syntax</a>
<hr>
</div>

<h5 class="subsubsection">9.18.2.2 Relocatable Expression Modifiers</h5>

<p><a name="index-LM32-modifiers-1073"></a><a name="index-syntax_002c-LM32-1074"></a>
The assembler supports several modifiers when using relocatable addresses
in LM32 instruction operands.  The general syntax is the following:

<pre class="smallexample">     modifier(relocatable-expression)
</pre>
     
<a name="index-symbol-modifiers-1075"></a>
<dl>
<dt><code>lo</code><dd>
This modifier allows you to use bits 0 through 15 of
an address expression as 16 bit relocatable expression.

     <br><dt><code>hi</code><dd>
This modifier allows you to use bits 16 through 23 of an address expression
as 16 bit relocatable expression.

     <p>For example

     <pre class="smallexample">          ori  r4, r4, lo(sym+10)
          orhi r4, r4, hi(sym+10)
</pre>
     <br><dt><code>gp</code><dd>
This modified creates a 16-bit relocatable expression that is
the offset of the symbol from the global pointer.

     <pre class="smallexample">          mva r4, gp(sym)
</pre>
     <br><dt><code>got</code><dd>
This modifier places a symbol in the GOT and creates a 16-bit
relocatable expression that is the offset into the GOT of this
symbol.

     <pre class="smallexample">          lw r4, (gp+got(sym))
</pre>
     <br><dt><code>gotofflo16</code><dd>
This modifier allows you to use the bits 0 through 15 of an
address which is an offset from the GOT.

     <br><dt><code>gotoffhi16</code><dd>
This modifier allows you to use the bits 16 through 31 of an
address which is an offset from the GOT.

     <pre class="smallexample">          orhi r4, r4, gotoffhi16(lsym)
          addi r4, r4, gotofflo16(lsym)
</pre>
     </dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 12
a12 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d14 2
a15 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d22 1
a22 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: LM32-Modifiers</title>
a23 38
<meta name="description" content="Using as: LM32-Modifiers">
<meta name="keywords" content="Using as: LM32-Modifiers">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="LM32-Syntax.html#LM32-Syntax" rel="up" title="LM32 Syntax">
<link href="LM32_002dChars.html#LM32_002dChars" rel="next" title="LM32-Chars">
<link href="LM32_002dRegs.html#LM32_002dRegs" rel="prev" title="LM32-Regs">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d25 12
a36 3
</style>


d38 3
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 3
a45 1
Next: <a href="LM32_002dChars.html#LM32_002dChars" accesskey="n" rel="next">LM32-Chars</a>, Previous: <a href="LM32_002dRegs.html#LM32_002dRegs" accesskey="p" rel="prev">LM32-Regs</a>, Up: <a href="LM32-Syntax.html#LM32-Syntax" accesskey="u" rel="up">LM32 Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a46 3
<hr>
<a name="Relocatable-Expression-Modifiers-1"></a>
<h4 class="subsubsection">9.20.2.2 Relocatable Expression Modifiers</h4>
d48 1
a48 2
<a name="index-LM32-modifiers"></a>
<a name="index-syntax_002c-LM32"></a>
d50 2
a51 1
<p>The assembler supports several modifiers when using relocatable addresses
d53 8
a60 12
</p>
<div class="smallexample">
<pre class="smallexample">modifier(relocatable-expression)
</pre></div>

<dl compact="compact">
<dd><a name="index-symbol-modifiers-1"></a>

</dd>
<dt><code>lo</code></dt>
<dd>
<p>This modifier allows you to use bits 0 through 15 of
d62 3
a64 5
</p>
</dd>
<dt><code>hi</code></dt>
<dd>
<p>This modifier allows you to use bits 16 through 23 of an address expression
d66 8
a73 12
</p>
<p>For example
</p>
<div class="smallexample">
<pre class="smallexample">ori  r4, r4, lo(sym+10)
orhi r4, r4, hi(sym+10)
</pre></div>

</dd>
<dt><code>gp</code></dt>
<dd>
<p>This modified creates a 16-bit relocatable expression that is
d75 5
a79 9
</p>
<div class="smallexample">
<pre class="smallexample">mva r4, gp(sym)
</pre></div>

</dd>
<dt><code>got</code></dt>
<dd>
<p>This modifier places a symbol in the GOT and creates a 16-bit
d82 5
a86 9
</p>
<div class="smallexample">
<pre class="smallexample">lw r4, (gp+got(sym))
</pre></div>

</dd>
<dt><code>gotofflo16</code></dt>
<dd>
<p>This modifier allows you to use the bits 0 through 15 of an
d88 3
a90 5
</p>
</dd>
<dt><code>gotoffhi16</code></dt>
<dd>
<p>This modifier allows you to use the bits 16 through 31 of an
a91 9
</p>
<div class="smallexample">
<pre class="smallexample">orhi r4, r4, gotoffhi16(lsym)
addi r4, r4, gotofflo16(lsym)
</pre></div>

</dd>
</dl>

d93 4
d98 1
a99 2
</body>
</html>
@

