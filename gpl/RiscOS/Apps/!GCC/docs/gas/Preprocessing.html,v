head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.13;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Preprocessing - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Syntax.html#Syntax" title="Syntax">
<link rel="next" href="Whitespace.html#Whitespace" title="Whitespace">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Preprocessing"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Whitespace.html#Whitespace">Whitespace</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Syntax.html#Syntax">Syntax</a>
<hr>
</div>

<h3 class="section">3.1 Preprocessing</h3>

<p><a name="index-preprocessing-114"></a>The <samp><span class="command">as</span></samp> internal preprocessor:
     
<a name="index-whitespace_002c-removed-by-preprocessor-115"></a>
<ul><li>adjusts and removes extra whitespace.  It leaves one space or tab before
the keywords on a line, and turns any other whitespace on the line into
a single space.

     <p><a name="index-comments_002c-removed-by-preprocessor-116"></a><li>removes all comments, replacing them with a single space, or an
appropriate number of newlines.

     <p><a name="index-constants_002c-converted-by-preprocessor-117"></a><li>converts character constants into the appropriate numeric values. 
</ul>

   <p>It does not do macro processing, include file handling, or
anything else you may get from your C compiler's preprocessor.  You can
do include file processing with the <code>.include</code> directive
(see <a href="Include.html#Include"><code>.include</code></a>).  You can use the <span class="sc">gnu</span> C compiler driver
to get other &ldquo;CPP&rdquo; style preprocessing by giving the input file a
&lsquo;<samp><span class="samp">.S</span></samp>&rsquo; suffix.  See <a href="../gcc/Overall-Options.html#Overall-Options">Options Controlling the Kind of Output</a>.

   <p>Excess whitespace, comments, and character constants
cannot be used in the portions of the input text that are not
preprocessed.

   <p><a name="index-turning-preprocessing-on-and-off-118"></a><a name="index-preprocessing_002c-turning-on-and-off-119"></a><a name="index-g_t_0023NO_005fAPP-120"></a><a name="index-g_t_0023APP-121"></a>If the first line of an input file is <code>#NO_APP</code> or if you use the
&lsquo;<samp><span class="samp">-f</span></samp>&rsquo; option, whitespace and comments are not removed from the input file. 
Within an input file, you can ask for whitespace and comment removal in
specific portions of the by putting a line that says <code>#APP</code> before the
text that may contain whitespace or comments, and putting a line that says
<code>#NO_APP</code> after this text.  This feature is mainly intend to support
<code>asm</code> statements in compilers whose output is otherwise free of comments
and whitespace.

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 12
a12 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d14 2
a15 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d22 1
a22 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: Preprocessing</title>
a23 38
<meta name="description" content="Using as: Preprocessing">
<meta name="keywords" content="Using as: Preprocessing">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Syntax.html#Syntax" rel="up" title="Syntax">
<link href="Whitespace.html#Whitespace" rel="next" title="Whitespace">
<link href="Syntax.html#Syntax" rel="prev" title="Syntax">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d25 12
a36 3
</style>


d38 2
a39 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a40 1
<div class="header">
d42 3
a44 1
Next: <a href="Whitespace.html#Whitespace" accesskey="n" rel="next">Whitespace</a>, Up: <a href="Syntax.html#Syntax" accesskey="u" rel="up">Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
d46 1
a46 2
<hr>
<a name="Preprocessing-1"></a>
d49 4
a52 5
<a name="index-preprocessing"></a>
<p>The <code>as</code> internal preprocessor:
</p><ul>
<li> <a name="index-whitespace_002c-removed-by-preprocessor"></a>
adjusts and removes extra whitespace.  It leaves one space or tab before
d56 1
a56 2
</li><li> <a name="index-comments_002c-removed-by-preprocessor"></a>
removes all comments, replacing them with a single space, or an
d59 2
a60 3
</li><li> <a name="index-constants_002c-converted-by-preprocessor"></a>
converts character constants into the appropriate numeric values.
</li></ul>
d62 2
a63 2
<p>It does not do macro processing, include file handling, or
anything else you may get from your C compiler&rsquo;s preprocessor.  You can
d65 1
a65 1
(see <a href="Include.html#Include"><code>.include</code></a>).  You can use the <small>GNU</small> C compiler driver
d67 3
a69 4
&lsquo;<samp>.S</samp>&rsquo; suffix.  See <a href="http://gcc.gnu.org/onlinedocs/gcc/Overall-Options.html#Overall-Options">Options Controlling the Kind of
Output</a> in <cite>Using GNU CC</cite>.
</p>
<p>Excess whitespace, comments, and character constants
d72 3
a74 7
</p>
<a name="index-turning-preprocessing-on-and-off"></a>
<a name="index-preprocessing_002c-turning-on-and-off"></a>
<a name="index-_0023NO_005fAPP"></a>
<a name="index-_0023APP"></a>
<p>If the first line of an input file is <code>#NO_APP</code> or if you use the
&lsquo;<samp>-f</samp>&rsquo; option, whitespace and comments are not removed from the input file.
a80 2
</p>

d82 1
a83 2
</body>
</html>
@

