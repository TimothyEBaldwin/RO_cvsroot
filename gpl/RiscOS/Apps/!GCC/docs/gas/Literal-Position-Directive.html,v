head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.11;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Literal Position Directive - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Xtensa-Directives.html#Xtensa-Directives" title="Xtensa Directives">
<link rel="prev" href="Literal-Directive.html#Literal-Directive" title="Literal Directive">
<link rel="next" href="Literal-Prefix-Directive.html#Literal-Prefix-Directive" title="Literal Prefix Directive">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Literal-Position-Directive"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Literal-Prefix-Directive.html#Literal-Prefix-Directive">Literal Prefix Directive</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Literal-Directive.html#Literal-Directive">Literal Directive</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Xtensa-Directives.html#Xtensa-Directives">Xtensa Directives</a>
<hr>
</div>

<h5 class="subsubsection">9.42.5.5 literal_position</h5>

<p><a name="index-g_t_0040code_007bliteral_005fposition_007d-directive-2048"></a>
When using &lsquo;<samp><span class="samp">--text-section-literals</span></samp>&rsquo; to place literals inline
in the section being assembled, the <code>.literal_position</code> directive
can be used to mark a potential location for a literal pool.

<pre class="smallexample">         .literal_position
</pre>
   <p>The <code>.literal_position</code> directive is ignored when the
&lsquo;<samp><span class="samp">--text-section-literals</span></samp>&rsquo; option is not used or when
<code>L32R</code> instructions use the absolute addressing mode.

   <p>The assembler will automatically place text section literal pools
before <code>ENTRY</code> instructions, so the <code>.literal_position</code>
directive is only needed to specify some other location for a literal
pool.  You may need to add an explicit jump instruction to skip over an
inline literal pool.

   <p>For example, an interrupt vector does not begin with an <code>ENTRY</code>
instruction so the assembler will be unable to automatically find a good
place to put a literal pool.  Moreover, the code for the interrupt
vector must be at a specific starting address, so the literal pool
cannot come before the start of the code.  The literal pool for the
vector must be explicitly positioned in the middle of the vector (before
any uses of the literals, due to the negative offsets used by
PC-relative <code>L32R</code> instructions).  The <code>.literal_position</code>
directive can be used to do this.  In the following code, the literal
for &lsquo;<samp><span class="samp">M</span></samp>&rsquo; will automatically be aligned correctly and is placed after
the unconditional jump.

<pre class="smallexample">         .global M
     code_start:
         j continue
         .literal_position
         .align 4
     continue:
         movi    a4, M
</pre>
   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d15 2
a16 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d23 1
a23 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: Literal Position Directive</title>
a24 38
<meta name="description" content="Using as: Literal Position Directive">
<meta name="keywords" content="Using as: Literal Position Directive">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Xtensa-Directives.html#Xtensa-Directives" rel="up" title="Xtensa Directives">
<link href="Literal-Prefix-Directive.html#Literal-Prefix-Directive" rel="next" title="Literal Prefix Directive">
<link href="Literal-Directive.html#Literal-Directive" rel="prev" title="Literal Directive">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d26 12
a37 3
</style>


d39 2
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 4
a46 1
Next: <a href="Literal-Prefix-Directive.html#Literal-Prefix-Directive" accesskey="n" rel="next">Literal Prefix Directive</a>, Previous: <a href="Literal-Directive.html#Literal-Directive" accesskey="p" rel="prev">Literal Directive</a>, Up: <a href="Xtensa-Directives.html#Xtensa-Directives" accesskey="u" rel="up">Xtensa Directives</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a47 4
<hr>
<a name="literal_005fposition"></a>
<h4 class="subsubsection">9.52.5.5 literal_position</h4>
<a name="index-literal_005fposition-directive"></a>
d49 4
a52 1
<p>When using &lsquo;<samp>--text-section-literals</samp>&rsquo; to place literals inline
a54 4
</p>
<div class="smallexample">
<pre class="smallexample">    .literal_position
</pre></div>
d56 4
a59 2
<p>The <code>.literal_position</code> directive is ignored when the
&lsquo;<samp>--text-section-literals</samp>&rsquo; option is not used or when
d61 2
a62 2
</p>
<p>The assembler will automatically place text section literal pools
d67 2
a68 2
</p>
<p>For example, an interrupt vector does not begin with an <code>ENTRY</code>
d77 1
a77 1
for &lsquo;<samp>M</samp>&rsquo; will automatically be aligned correctly and is placed after
a78 12
</p>
<div class="smallexample">
<pre class="smallexample">    .global M
code_start:
</pre><pre class="smallexample">    j continue
    .literal_position
    .align 4
</pre><pre class="smallexample">continue:
    movi    a4, M
</pre></div>


d80 9
a89 2
</body>
</html>
@

