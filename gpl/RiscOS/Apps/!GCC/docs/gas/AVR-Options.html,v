head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.12;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>AVR Options - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="AVR_002dDependent.html#AVR_002dDependent" title="AVR-Dependent">
<link rel="next" href="AVR-Syntax.html#AVR-Syntax" title="AVR Syntax">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="AVR-Options"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="AVR-Syntax.html#AVR-Syntax">AVR Syntax</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="AVR_002dDependent.html#AVR_002dDependent">AVR-Dependent</a>
<hr>
</div>

<h4 class="subsection">9.4.1 Options</h4>

<p><a name="index-AVR-options-_0028none_0029-661"></a><a name="index-options-for-AVR-_0028none_0029-662"></a>
     
<a name="index-g_t_0040code_007b_002dmmcu_003d_007d-command-line-option_002c-AVR-663"></a>
<dl><dt><code>-mmcu=</code><var>mcu</var><dd>Specify ATMEL AVR instruction set or MCU type.

     <p>Instruction set avr1 is for the minimal AVR core, not supported by the C
compiler, only for assembler programs (MCU types: at90s1200,
attiny11, attiny12, attiny15, attiny28).

     <p>Instruction set avr2 (default) is for the classic AVR core with up to
8K program memory space (MCU types: at90s2313, at90s2323, at90s2333, at90s2343,
attiny22, attiny26, at90s4414, at90s4433, at90s4434, at90s8515, at90c8534,
at90s8535).

     <p>Instruction set avr25 is for the classic AVR core with up to 8K program memory
space plus the MOVW instruction (MCU types: attiny13, attiny13a, attiny2313,
attiny2313a, attiny24, attiny24a, attiny4313, attiny44, attiny44a, attiny84,
attiny84a, attiny25, attiny45, attiny85, attiny261, attiny261a, attiny461,
attiny461a, attiny861, attiny861a, attiny87, attiny43u, attiny48, attiny88,
at86rf401, ata6289).

     <p>Instruction set avr3 is for the classic AVR core with up to 128K program
memory space (MCU types: at43usb355, at76c711).

     <p>Instruction set avr31 is for the classic AVR core with exactly 128K program
memory space (MCU types: atmega103, at43usb320).

     <p>Instruction set avr35 is for classic AVR core plus MOVW, CALL, and JMP
instructions (MCU types: attiny167, at90usb82, at90usb162, atmega8u2,
atmega16u2, atmega32u2).

     <p>Instruction set avr4 is for the enhanced AVR core with up to 8K program
memory space (MCU types: atmega48, atmega48a, atmega48p, atmega8, atmega88,
atmega88a, atmega88p, atmega88pa, atmega8515, atmega8535, atmega8hva, at90pwm1,
at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81).

     <p>Instruction set avr5 is for the enhanced AVR core with up to 128K program
memory space (MCU types: atmega16, atmega16a, atmega161, atmega162, atmega163,
atmega164a, atmega164p, atmega165, atmega165a, atmega165p, atmega168,
atmega168a, atmega168p, atmega169, atmega169a, atmega169p, atmega169pa,
atmega32, atmega323, atmega324a, atmega324p, atmega325, atmega325a, atmega325p,
atmega3250, atmega3250a, atmega3250p, atmega328, atmega328p, atmega329,
atmega329a, atmega329p, atmega329pa, atmega3290, atmega3290a, atmega3290p,
atmega406, atmega64, atmega640, atmega644, atmega644a, atmega644p, atmega644pa,
atmega645, atmega645a, atmega645p, atmega6450, atmega6450a, atmega6450p,
atmega649, atmega649a, atmega649p, atmega6490, atmega6490a, atmega6490p,
atmega16hva, atmega16hva2, atmega16hvb, atmega32hvb, atmega64hve, at90can32,
at90can64, at90pwm216, at90pwm316, atmega32c1, atmega64c1, atmega16m1,
atmega32m1, atmega64m1, atmega16u4, atmega32u4, atmega32u6, at90usb646,
at90usb647, at94k, at90scr100).

     <p>Instruction set avr51 is for the enhanced AVR core with exactly 128K program
memory space (MCU types: atmega128, atmega1280, atmega1281, atmega1284p,
atmega128rfa1, at90can128, at90usb1286, at90usb1287, m3000).

     <p>Instruction set avr6 is for the enhanced AVR core with a 3-byte PC (MCU types:
atmega2560, atmega2561).

     <p><a name="index-g_t_0040code_007b_002dmall_002dopcodes_007d-command-line-option_002c-AVR-664"></a><br><dt><code>-mall-opcodes</code><dd>Accept all AVR opcodes, even if not supported by <code>-mmcu</code>.

     <p><a name="index-g_t_0040code_007b_002dmno_002dskip_002dbug_007d-command-line-option_002c-AVR-665"></a><br><dt><code>-mno-skip-bug</code><dd>This option disable warnings for skipping two-word instructions.

     <p><a name="index-g_t_0040code_007b_002dmno_002dwrap_007d-command-line-option_002c-AVR-666"></a><br><dt><code>-mno-wrap</code><dd>This option reject <code>rjmp/rcall</code> instructions with 8K wrap-around.

   </dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 12
a12 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d14 2
a15 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d22 1
a22 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: AVR Options</title>
a23 38
<meta name="description" content="Using as: AVR Options">
<meta name="keywords" content="Using as: AVR Options">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="AVR_002dDependent.html#AVR_002dDependent" rel="up" title="AVR-Dependent">
<link href="AVR-Syntax.html#AVR-Syntax" rel="next" title="AVR Syntax">
<link href="AVR_002dDependent.html#AVR_002dDependent" rel="prev" title="AVR-Dependent">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d25 12
a36 3
</style>


d38 2
a39 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a40 1
<div class="header">
d42 3
a44 1
Next: <a href="AVR-Syntax.html#AVR-Syntax" accesskey="n" rel="next">AVR Syntax</a>, Up: <a href="AVR_002dDependent.html#AVR_002dDependent" accesskey="u" rel="up">AVR-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
d46 9
a54 14
<hr>
<a name="Options-4"></a>
<h4 class="subsection">9.5.1 Options</h4>
<a name="index-AVR-options-_0028none_0029"></a>
<a name="index-options-for-AVR-_0028none_0029"></a>

<dl compact="compact">
<dd>
<a name="index-_002dmmcu_003d-command-line-option_002c-AVR"></a>
</dd>
<dt><code>-mmcu=<var>mcu</var></code></dt>
<dd><p>Specify ATMEL AVR instruction set or MCU type.
</p>
<p>Instruction set avr1 is for the minimal AVR core, not supported by the C
d57 2
a58 2
</p>
<p>Instruction set avr2 (default) is for the classic AVR core with up to
d62 2
a63 2
</p>
<p>Instruction set avr25 is for the classic AVR core with up to 8K program memory
d68 3
a70 3
at86rf401).
</p>
<p>Instruction set avr3 is for the classic AVR core with up to 128K program
d72 2
a73 2
</p>
<p>Instruction set avr31 is for the classic AVR core with exactly 128K program
d75 2
a76 2
</p>
<p>Instruction set avr35 is for classic AVR core plus MOVW, CALL, and JMP
d79 2
a80 2
</p>
<p>Instruction set avr4 is for the enhanced AVR core with up to 8K program
d83 18
a100 21
at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81, ata6289).
</p>
<p>Instruction set avr5 is for the enhanced AVR core with up to 128K program
memory space (MCU types: atmega16, atmega16a, atmega161, atmega162,
atmega163, atmega164a, atmega164p, atmega165, atmega165a, atmega165p,
atmega168, atmega168a, atmega168p, atmega169, atmega169a, atmega169p,
atmega169pa, atmega32, atmega323, atmega324a, atmega324p, atmega325,
atmega325a, atmega325p, atmega325pa, atmega3250, atmega3250a,
atmega3250p, atmega3250pa, atmega328, atmega328p, atmega329,
atmega329a, atmega329p, atmega329pa, atmega3290, atmega3290a,
atmega3290p, atmega3290pa, atmega406, atmega64, atmega640, atmega644,
atmega644a, atmega644p, atmega644pa, atmega645, atmega645a,
atmega645p, atmega6450, atmega6450a, atmega6450p, atmega649,
atmega649a, atmega649p, atmega6490, atmega6490a, atmega6490p,
atmega64rfr2, atmega644rfr2, atmega16hva, atmega16hva2, atmega16hvb,
atmega16hvbrevb, atmega32hvb, atmega32hvbrevb, atmega64hve, at90can32,
at90can64, at90pwm161, at90pwm216, at90pwm316, atmega32c1, atmega64c1,
atmega16m1, atmega32m1, atmega64m1, atmega16u4, atmega32u4,
atmega32u6, at90usb646, at90usb647, at94k, at90scr100).
</p>
<p>Instruction set avr51 is for the enhanced AVR core with exactly 128K program
d102 6
a107 48
atmega128rfa1,
atmega128rfr2, atmega1284rfr2,
at90can128, at90usb1286, at90usb1287, m3000).
</p>
<p>Instruction set avr6 is for the enhanced AVR core with a 3-byte PC (MCU types:
atmega2560, atmega2561,
atmega256rfr2, atmega2564rfr2).
</p>
<p>Instruction set avrxmega2 is for the XMEGA AVR core with 8K to 64K program
memory space and less than 64K data space (MCU types: atxmega16a4, atxmega16d4,
atxmega16x1, atxmega32a4, atxmega32d4, atxmega32x1).
</p>
<p>Instruction set avrxmega3 is for the XMEGA AVR core with 8K to 64K program
memory space and greater than 64K data space (MCU types: none).
</p>
<p>Instruction set avrxmega4 is for the XMEGA AVR core with up to 64K program
memory space and less than 64K data space (MCU types: atxmega64a3, atxmega64d3).
</p>
<p>Instruction set avrxmega5 is for the XMEGA AVR core with up to 64K program
memory space and greater than 64K data space (MCU types: atxmega64a1,
atxmega64a1u).
</p>
<p>Instruction set avrxmega6 is for the XMEGA AVR core with up to 256K program
memory space and less than 64K data space (MCU types: atxmega128a3,
atxmega128d3, atxmega192a3, atxmega128b1, atxmega192d3, atxmega256a3,
atxmega256a3b, atxmega256a3bu, atxmega192d3).
</p>
<p>Instruction set avrxmega7 is for the XMEGA AVR core with up to 256K program
memory space and greater than 64K data space (MCU types: atxmega128a1,
atxmega128a1u).
</p>
<a name="index-_002dmall_002dopcodes-command-line-option_002c-AVR"></a>
</dd>
<dt><code>-mall-opcodes</code></dt>
<dd><p>Accept all AVR opcodes, even if not supported by <code>-mmcu</code>.
</p>
<a name="index-_002dmno_002dskip_002dbug-command-line-option_002c-AVR"></a>
</dd>
<dt><code>-mno-skip-bug</code></dt>
<dd><p>This option disable warnings for skipping two-word instructions.
</p>
<a name="index-_002dmno_002dwrap-command-line-option_002c-AVR"></a>
</dd>
<dt><code>-mno-wrap</code></dt>
<dd><p>This option reject <code>rjmp/rcall</code> instructions with 8K wrap-around.
</p>
</dd>
</dl>
d109 1
d111 1
a111 5
<hr>
<div class="header">
<p>
Next: <a href="AVR-Syntax.html#AVR-Syntax" accesskey="n" rel="next">AVR Syntax</a>, Up: <a href="AVR_002dDependent.html#AVR_002dDependent" accesskey="u" rel="up">AVR-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>
d113 1
d115 1
a116 2
</body>
</html>
@

