head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.13;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>String - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Pseudo-Ops.html#Pseudo-Ops" title="Pseudo Ops">
<link rel="prev" href="Stab.html#Stab" title="Stab">
<link rel="next" href="Struct.html#Struct" title="Struct">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="String"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Struct.html#Struct">Struct</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Stab.html#Stab">Stab</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Pseudo-Ops.html#Pseudo-Ops">Pseudo Ops</a>
<hr>
</div>

<h3 class="section">7.105 <code>.string</code> "<var>str</var>", <code>.string8</code> "<var>str</var>", <code>.string16</code></h3>

<p>"<var>str</var>", <code>.string32</code> "<var>str</var>", <code>.string64</code> "<var>str</var>"

   <p><a name="index-string_002c-copying-to-object-file-462"></a><a name="index-string8_002c-copying-to-object-file-463"></a><a name="index-string16_002c-copying-to-object-file-464"></a><a name="index-string32_002c-copying-to-object-file-465"></a><a name="index-string64_002c-copying-to-object-file-466"></a><a name="index-g_t_0040code_007bstring_007d-directive-467"></a><a name="index-g_t_0040code_007bstring8_007d-directive-468"></a><a name="index-g_t_0040code_007bstring16_007d-directive-469"></a><a name="index-g_t_0040code_007bstring32_007d-directive-470"></a><a name="index-g_t_0040code_007bstring64_007d-directive-471"></a>
Copy the characters in <var>str</var> to the object file.  You may specify more than
one string to copy, separated by commas.  Unless otherwise specified for a
particular machine, the assembler marks the end of each string with a 0 byte. 
You can use any of the escape sequences described in <a href="Strings.html#Strings">Strings</a>.

   <p>The variants <code>string16</code>, <code>string32</code> and <code>string64</code> differ from
the <code>string</code> pseudo opcode in that each 8-bit character from <var>str</var> is
copied and expanded to 16, 32 or 64 bits respectively.  The expanded characters
are stored in target endianness byte order.

   <p>Example:
<pre class="smallexample">     	.string32 "BYE"
     expands to:
     	.string   "B\0\0\0Y\0\0\0E\0\0\0"  /* On little endian targets.  */
     	.string   "\0\0\0B\0\0\0Y\0\0\0E"  /* On big endian targets.  */
</pre>
   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d15 2
a16 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d23 1
a23 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: String</title>
a24 38
<meta name="description" content="Using as: String">
<meta name="keywords" content="Using as: String">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Pseudo-Ops.html#Pseudo-Ops" rel="up" title="Pseudo Ops">
<link href="Struct.html#Struct" rel="next" title="Struct">
<link href="Stab.html#Stab" rel="prev" title="Stab">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d26 12
a37 3
</style>


d39 2
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 4
a46 1
Next: <a href="Struct.html#Struct" accesskey="n" rel="next">Struct</a>, Previous: <a href="Stab.html#Stab" accesskey="p" rel="prev">Stab</a>, Up: <a href="Pseudo-Ops.html#Pseudo-Ops" accesskey="u" rel="up">Pseudo Ops</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a47 15
<hr>
<a name="g_t_002estring-_0022str_0022_002c-_002estring8-_0022str_0022_002c-_002estring16"></a>
<h3 class="section">7.108 <code>.string</code> &quot;<var>str</var>&quot;, <code>.string8</code> &quot;<var>str</var>&quot;, <code>.string16</code></h3>
<p>&quot;<var>str</var>&quot;, <code>.string32</code> &quot;<var>str</var>&quot;, <code>.string64</code> &quot;<var>str</var>&quot;
</p>
<a name="index-string_002c-copying-to-object-file"></a>
<a name="index-string8_002c-copying-to-object-file"></a>
<a name="index-string16_002c-copying-to-object-file"></a>
<a name="index-string32_002c-copying-to-object-file"></a>
<a name="index-string64_002c-copying-to-object-file"></a>
<a name="index-string-directive"></a>
<a name="index-string8-directive"></a>
<a name="index-string16-directive"></a>
<a name="index-string32-directive"></a>
<a name="index-string64-directive"></a>
d49 6
a54 1
<p>Copy the characters in <var>str</var> to the object file.  You may specify more than
d56 1
a56 1
particular machine, the assembler marks the end of each string with a 0 byte.
d58 2
a59 2
</p>
<p>The variants <code>string16</code>, <code>string32</code> and <code>string64</code> differ from
a62 11
</p>
<p>Example:
</p><div class="smallexample">
<pre class="smallexample">	.string32 &quot;BYE&quot;
expands to:
	.string   &quot;B\0\0\0Y\0\0\0E\0\0\0&quot;  /* On little endian targets.  */
	.string   &quot;\0\0\0B\0\0\0Y\0\0\0E&quot;  /* On big endian targets.  */
</pre></div>



d64 7
a71 2
</body>
</html>
@

