head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.12;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Sub-Sections - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Sections.html#Sections" title="Sections">
<link rel="prev" href="As-Sections.html#As-Sections" title="As Sections">
<link rel="next" href="bss.html#bss" title="bss">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Sub-Sections"></a>
<a name="Sub_002dSections"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="bss.html#bss">bss</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="As-Sections.html#As-Sections">As Sections</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Sections.html#Sections">Sections</a>
<hr>
</div>

<h3 class="section">4.4 Sub-Sections</h3>

<p><a name="index-numbered-subsections-204"></a><a name="index-grouping-data-205"></a>Assembled bytes
conventionally
fall into two sections: text and data. 
You may have separate groups of
data in named sections
that you want to end up near to each other in the object file, even though they
are not contiguous in the assembler source.  <samp><span class="command">as</span></samp> allows you to
use <dfn>subsections</dfn> for this purpose.  Within each section, there can be
numbered subsections with values from 0 to 8192.  Objects assembled into the
same subsection go into the object file together with other objects in the same
subsection.  For example, a compiler might want to store constants in the text
section, but might not want to have them interspersed with the program being
assembled.  In this case, the compiler could issue a &lsquo;<samp><span class="samp">.text 0</span></samp>&rsquo; before each
section of code being output, and a &lsquo;<samp><span class="samp">.text 1</span></samp>&rsquo; before each group of
constants being output.

   <p>Subsections are optional.  If you do not use subsections, everything
goes in subsection number zero.

   <p>Each subsection is zero-padded up to a multiple of four bytes. 
(Subsections may be padded a different amount on different flavors
of <samp><span class="command">as</span></samp>.)

   <p>Subsections appear in your object file in numeric order, lowest numbered
to highest.  (All this to be compatible with other people's assemblers.) 
The object file contains no representation of subsections; <code>ld</code> and
other programs that manipulate object files see no trace of them. 
They just see all your text subsections as a text section, and all your
data subsections as a data section.

   <p>To specify which subsection you want subsequent statements assembled
into, use a numeric argument to specify it, in a &lsquo;<samp><span class="samp">.text
</span><var>expression</var></samp>&rsquo; or a &lsquo;<samp><span class="samp">.data </span><var>expression</var></samp>&rsquo; statement. 
When generating COFF output, you
can also use an extra subsection
argument with arbitrary named sections: &lsquo;<samp><span class="samp">.section </span><var>name</var><span class="samp">,
</span><var>expression</var></samp>&rsquo;. 
When generating ELF output, you
can also use the <code>.subsection</code> directive (see <a href="SubSection.html#SubSection">SubSection</a>)
to specify a subsection: &lsquo;<samp><span class="samp">.subsection </span><var>expression</var></samp>&rsquo;. 
<var>Expression</var> should be an absolute expression
(see <a href="Expressions.html#Expressions">Expressions</a>).  If you just say &lsquo;<samp><span class="samp">.text</span></samp>&rsquo; then &lsquo;<samp><span class="samp">.text 0</span></samp>&rsquo;
is assumed.  Likewise &lsquo;<samp><span class="samp">.data</span></samp>&rsquo; means &lsquo;<samp><span class="samp">.data 0</span></samp>&rsquo;.  Assembly
begins in <code>text 0</code>.  For instance:
<pre class="smallexample">     .text 0     # The default subsection is text 0 anyway.
     .ascii "This lives in the first text subsection. *"
     .text 1
     .ascii "But this lives in the second text subsection."
     .data 0
     .ascii "This lives in the data section,"
     .ascii "in the first data subsection."
     .text 0
     .ascii "This lives in the first text section,"
     .ascii "immediately following the asterisk (*)."
</pre>
   <p>Each section has a <dfn>location counter</dfn> incremented by one for every byte
assembled into that section.  Because subsections are merely a convenience
restricted to <samp><span class="command">as</span></samp> there is no concept of a subsection location
counter.  There is no way to directly manipulate a location counter&mdash;but the
<code>.align</code> directive changes it, and any label definition captures its
current value.  The location counter of the section where statements are being
assembled is said to be the <dfn>active</dfn> location counter.

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d15 2
a16 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d23 1
a23 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: Sub-Sections</title>
a24 38
<meta name="description" content="Using as: Sub-Sections">
<meta name="keywords" content="Using as: Sub-Sections">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Sections.html#Sections" rel="up" title="Sections">
<link href="bss.html#bss" rel="next" title="bss">
<link href="As-Sections.html#As-Sections" rel="prev" title="As Sections">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d26 12
a37 3
</style>


d39 3
a41 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a42 1
<div class="header">
d44 4
a47 1
Next: <a href="bss.html#bss" accesskey="n" rel="next">bss</a>, Previous: <a href="As-Sections.html#As-Sections" accesskey="p" rel="prev">As Sections</a>, Up: <a href="Sections.html#Sections" accesskey="u" rel="up">Sections</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
d49 1
a49 2
<hr>
<a name="Sub_002dSections-1"></a>
d52 1
a52 3
<a name="index-numbered-subsections"></a>
<a name="index-grouping-data"></a>
<p>Assembled bytes
d54 1
a54 1
fall into two sections: text and data.
d58 2
a59 2
are not contiguous in the assembler source.  <code>as</code> allows you to
use <em>subsections</em> for this purpose.  Within each section, there can be
d64 2
a65 2
assembled.  In this case, the compiler could issue a &lsquo;<samp>.text 0</samp>&rsquo; before each
section of code being output, and a &lsquo;<samp>.text 1</samp>&rsquo; before each group of
d67 2
a68 2
</p>
<p>Subsections are optional.  If you do not use subsections, everything
d70 2
a71 2
</p>
<p>Each subsection is zero-padded up to a multiple of four bytes.
d73 4
a76 4
of <code>as</code>.)
</p>
<p>Subsections appear in your object file in numeric order, lowest numbered
to highest.  (All this to be compatible with other people&rsquo;s assemblers.)
d78 1
a78 1
other programs that manipulate object files see no trace of them.
d81 4
a84 4
</p>
<p>To specify which subsection you want subsequent statements assembled
into, use a numeric argument to specify it, in a &lsquo;<samp>.text
<var>expression</var></samp>&rsquo; or a &lsquo;<samp>.data <var>expression</var></samp>&rsquo; statement.
d87 2
a88 2
argument with arbitrary named sections: &lsquo;<samp>.section <var>name</var>,
<var>expression</var></samp>&rsquo;.
d91 1
a91 1
to specify a subsection: &lsquo;<samp>.subsection <var>expression</var></samp>&rsquo;.
d93 2
a94 2
(see <a href="Expressions.html#Expressions">Expressions</a>).  If you just say &lsquo;<samp>.text</samp>&rsquo; then &lsquo;<samp>.text 0</samp>&rsquo;
is assumed.  Likewise &lsquo;<samp>.data</samp>&rsquo; means &lsquo;<samp>.data 0</samp>&rsquo;.  Assembly
d96 12
a107 14
</p><div class="smallexample">
<pre class="smallexample">.text 0     # The default subsection is text 0 anyway.
.ascii &quot;This lives in the first text subsection. *&quot;
.text 1
.ascii &quot;But this lives in the second text subsection.&quot;
.data 0
.ascii &quot;This lives in the data section,&quot;
.ascii &quot;in the first data subsection.&quot;
.text 0
.ascii &quot;This lives in the first text section,&quot;
.ascii &quot;immediately following the asterisk (*).&quot;
</pre></div>

<p>Each section has a <em>location counter</em> incremented by one for every byte
d109 1
a109 1
restricted to <code>as</code> there is no concept of a subsection location
d113 1
a113 8
assembled is said to be the <em>active</em> location counter.
</p>
<hr>
<div class="header">
<p>
Next: <a href="bss.html#bss" accesskey="n" rel="next">bss</a>, Previous: <a href="As-Sections.html#As-Sections" accesskey="p" rel="prev">As Sections</a>, Up: <a href="Sections.html#Sections" accesskey="u" rel="up">Sections</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>

d115 1
a116 2
</body>
</html>
@

