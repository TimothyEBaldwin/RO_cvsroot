head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.13;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>PowerPC-Opts - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="PPC_002dDependent.html#PPC_002dDependent" title="PPC-Dependent">
<link rel="next" href="PowerPC_002dPseudo.html#PowerPC_002dPseudo" title="PowerPC-Pseudo">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="PowerPC-Opts"></a>
<a name="PowerPC_002dOpts"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="PowerPC_002dPseudo.html#PowerPC_002dPseudo">PowerPC-Pseudo</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="PPC_002dDependent.html#PPC_002dDependent">PPC-Dependent</a>
<hr>
</div>

<h4 class="subsection">9.29.1 Options</h4>

<p><a name="index-options-for-PowerPC-1488"></a><a name="index-PowerPC-options-1489"></a><a name="index-architectures_002c-PowerPC-1490"></a><a name="index-PowerPC-architectures-1491"></a>The PowerPC chip family includes several successive levels, using the same
core instruction set, but including a few additional instructions at
each level.  There are exceptions to this however.  For details on what
instructions each variant supports, please see the chip's architecture
reference manual.

   <p>The following table lists all available PowerPC options.

     <dl>
<dt><code>-mpwrx | -mpwr2</code><dd>Generate code for POWER/2 (RIOS2).

     <br><dt><code>-mpwr</code><dd>Generate code for POWER (RIOS1)

     <br><dt><code>-m601</code><dd>Generate code for PowerPC 601.

     <br><dt><code>-mppc, -mppc32, -m603, -m604</code><dd>Generate code for PowerPC 603/604.

     <br><dt><code>-m403, -m405</code><dd>Generate code for PowerPC 403/405.

     <br><dt><code>-m440</code><dd>Generate code for PowerPC 440.  BookE and some 405 instructions.

     <br><dt><code>-m476</code><dd>Generate code for PowerPC 476.

     <br><dt><code>-m7400, -m7410, -m7450, -m7455</code><dd>Generate code for PowerPC 7400/7410/7450/7455.

     <br><dt><code>-m750cl</code><dd>Generate code for PowerPC 750CL.

     <br><dt><code>-mppc64, -m620</code><dd>Generate code for PowerPC 620/625/630.

     <br><dt><code>-me500, -me500x2</code><dd>Generate code for Motorola e500 core complex.

     <br><dt><code>-mspe</code><dd>Generate code for Motorola SPE instructions.

     <br><dt><code>-mtitan</code><dd>Generate code for AppliedMicro Titan core complex.

     <br><dt><code>-mppc64bridge</code><dd>Generate code for PowerPC 64, including bridge insns.

     <br><dt><code>-mbooke</code><dd>Generate code for 32-bit BookE.

     <br><dt><code>-ma2</code><dd>Generate code for A2 architecture.

     <br><dt><code>-me300</code><dd>Generate code for PowerPC e300 family.

     <br><dt><code>-maltivec</code><dd>Generate code for processors with AltiVec instructions.

     <br><dt><code>-mvsx</code><dd>Generate code for processors with Vector-Scalar (VSX) instructions.

     <br><dt><code>-mpower4</code><dd>Generate code for Power4 architecture.

     <br><dt><code>-mpower5</code><dd>Generate code for Power5 architecture.

     <br><dt><code>-mpower6</code><dd>Generate code for Power6 architecture.

     <br><dt><code>-mpower7</code><dd>Generate code for Power7 architecture.

     <br><dt><code>-mcell</code><dd>Generate code for Cell Broadband Engine architecture.

     <br><dt><code>-mcom</code><dd>Generate code Power/PowerPC common instructions.

     <br><dt><code>-many</code><dd>Generate code for any architecture (PWR/PWRX/PPC).

     <br><dt><code>-mregnames</code><dd>Allow symbolic names for registers.

     <br><dt><code>-mno-regnames</code><dd>Do not allow symbolic names for registers.

     <br><dt><code>-mrelocatable</code><dd>Support for GCC's -mrelocatable option.

     <br><dt><code>-mrelocatable-lib</code><dd>Support for GCC's -mrelocatable-lib option.

     <br><dt><code>-memb</code><dd>Set PPC_EMB bit in ELF flags.

     <br><dt><code>-mlittle, -mlittle-endian</code><dd>Generate code for a little endian machine.

     <br><dt><code>-mbig, -mbig-endian</code><dd>Generate code for a big endian machine.

     <br><dt><code>-msolaris</code><dd>Generate code for Solaris.

     <br><dt><code>-mno-solaris</code><dd>Do not generate code for Solaris. 
</dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 12
a12 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d14 2
a15 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d22 1
a22 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: PowerPC-Opts</title>
a23 38
<meta name="description" content="Using as: PowerPC-Opts">
<meta name="keywords" content="Using as: PowerPC-Opts">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="PPC_002dDependent.html#PPC_002dDependent" rel="up" title="PPC-Dependent">
<link href="PowerPC_002dPseudo.html#PowerPC_002dPseudo" rel="next" title="PowerPC-Pseudo">
<link href="PPC_002dDependent.html#PPC_002dDependent" rel="prev" title="PPC-Dependent">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d25 12
a36 3
</style>


d38 3
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 3
a45 1
Next: <a href="PowerPC_002dPseudo.html#PowerPC_002dPseudo" accesskey="n" rel="next">PowerPC-Pseudo</a>, Up: <a href="PPC_002dDependent.html#PPC_002dDependent" accesskey="u" rel="up">PPC-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a46 3
<hr>
<a name="Options-18"></a>
<h4 class="subsection">9.34.1 Options</h4>
d48 3
a50 5
<a name="index-options-for-PowerPC"></a>
<a name="index-PowerPC-options"></a>
<a name="index-architectures_002c-PowerPC"></a>
<a name="index-PowerPC-architectures"></a>
<p>The PowerPC chip family includes several successive levels, using the same
d53 1
a53 1
instructions each variant supports, please see the chip&rsquo;s architecture
a54 194
</p>
<p>The following table lists all available PowerPC options.
</p>
<dl compact="compact">
<dt><code>-a32</code></dt>
<dd><p>Generate ELF32 or XCOFF32.
</p>
</dd>
<dt><code>-a64</code></dt>
<dd><p>Generate ELF64 or XCOFF64.
</p>
</dd>
<dt><code>-K PIC</code></dt>
<dd><p>Set EF_PPC_RELOCATABLE_LIB in ELF flags.
</p>
</dd>
<dt><code>-mpwrx | -mpwr2</code></dt>
<dd><p>Generate code for POWER/2 (RIOS2).
</p>
</dd>
<dt><code>-mpwr</code></dt>
<dd><p>Generate code for POWER (RIOS1)
</p>
</dd>
<dt><code>-m601</code></dt>
<dd><p>Generate code for PowerPC 601.
</p>
</dd>
<dt><code>-mppc, -mppc32, -m603, -m604</code></dt>
<dd><p>Generate code for PowerPC 603/604.
</p>
</dd>
<dt><code>-m403, -m405</code></dt>
<dd><p>Generate code for PowerPC 403/405.
</p>
</dd>
<dt><code>-m440</code></dt>
<dd><p>Generate code for PowerPC 440.  BookE and some 405 instructions.
</p>
</dd>
<dt><code>-m464</code></dt>
<dd><p>Generate code for PowerPC 464.
</p>
</dd>
<dt><code>-m476</code></dt>
<dd><p>Generate code for PowerPC 476.
</p>
</dd>
<dt><code>-m7400, -m7410, -m7450, -m7455</code></dt>
<dd><p>Generate code for PowerPC 7400/7410/7450/7455.
</p>
</dd>
<dt><code>-m750cl</code></dt>
<dd><p>Generate code for PowerPC 750CL.
</p>
</dd>
<dt><code>-mppc64, -m620</code></dt>
<dd><p>Generate code for PowerPC 620/625/630.
</p>
</dd>
<dt><code>-me500, -me500x2</code></dt>
<dd><p>Generate code for Motorola e500 core complex.
</p>
</dd>
<dt><code>-me500mc</code></dt>
<dd><p>Generate code for Freescale e500mc core complex.
</p>
</dd>
<dt><code>-me500mc64</code></dt>
<dd><p>Generate code for Freescale e500mc64 core complex.
</p>
</dd>
<dt><code>-me5500</code></dt>
<dd><p>Generate code for Freescale e5500 core complex.
</p>
</dd>
<dt><code>-me6500</code></dt>
<dd><p>Generate code for Freescale e6500 core complex.
</p>
</dd>
<dt><code>-mspe</code></dt>
<dd><p>Generate code for Motorola SPE instructions.
</p>
</dd>
<dt><code>-mtitan</code></dt>
<dd><p>Generate code for AppliedMicro Titan core complex.
</p>
</dd>
<dt><code>-mppc64bridge</code></dt>
<dd><p>Generate code for PowerPC 64, including bridge insns.
</p>
</dd>
<dt><code>-mbooke</code></dt>
<dd><p>Generate code for 32-bit BookE.
</p>
</dd>
<dt><code>-ma2</code></dt>
<dd><p>Generate code for A2 architecture.
</p>
</dd>
<dt><code>-me300</code></dt>
<dd><p>Generate code for PowerPC e300 family.
</p>
</dd>
<dt><code>-maltivec</code></dt>
<dd><p>Generate code for processors with AltiVec instructions.
</p>
</dd>
<dt><code>-mvle</code></dt>
<dd><p>Generate code for Freescale PowerPC VLE instructions.
</p>
</dd>
<dt><code>-mvsx</code></dt>
<dd><p>Generate code for processors with Vector-Scalar (VSX) instructions.
</p>
</dd>
<dt><code>-mhtm</code></dt>
<dd><p>Generate code for processors with Hardware Transactional Memory instructions.
</p>
</dd>
<dt><code>-mpower4, -mpwr4</code></dt>
<dd><p>Generate code for Power4 architecture.
</p>
</dd>
<dt><code>-mpower5, -mpwr5, -mpwr5x</code></dt>
<dd><p>Generate code for Power5 architecture.
</p>
</dd>
<dt><code>-mpower6, -mpwr6</code></dt>
<dd><p>Generate code for Power6 architecture.
</p>
</dd>
<dt><code>-mpower7, -mpwr7</code></dt>
<dd><p>Generate code for Power7 architecture.
</p>
</dd>
<dt><code>-mpower8, -mpwr8</code></dt>
<dd><p>Generate code for Power8 architecture.
</p>
</dd>
<dt><code>-mcell</code></dt>
<dt><code>-mcell</code></dt>
<dd><p>Generate code for Cell Broadband Engine architecture.
</p>
</dd>
<dt><code>-mcom</code></dt>
<dd><p>Generate code Power/PowerPC common instructions.
</p>
</dd>
<dt><code>-many</code></dt>
<dd><p>Generate code for any architecture (PWR/PWRX/PPC).
</p>
</dd>
<dt><code>-mregnames</code></dt>
<dd><p>Allow symbolic names for registers.
</p>
</dd>
<dt><code>-mno-regnames</code></dt>
<dd><p>Do not allow symbolic names for registers.
</p>
</dd>
<dt><code>-mrelocatable</code></dt>
<dd><p>Support for GCC&rsquo;s -mrelocatable option.
</p>
</dd>
<dt><code>-mrelocatable-lib</code></dt>
<dd><p>Support for GCC&rsquo;s -mrelocatable-lib option.
</p>
</dd>
<dt><code>-memb</code></dt>
<dd><p>Set PPC_EMB bit in ELF flags.
</p>
</dd>
<dt><code>-mlittle, -mlittle-endian, -le</code></dt>
<dd><p>Generate code for a little endian machine.
</p>
</dd>
<dt><code>-mbig, -mbig-endian, -be</code></dt>
<dd><p>Generate code for a big endian machine.
</p>
</dd>
<dt><code>-msolaris</code></dt>
<dd><p>Generate code for Solaris.
</p>
</dd>
<dt><code>-mno-solaris</code></dt>
<dd><p>Do not generate code for Solaris.
</p>
</dd>
<dt><code>-nops=<var>count</var></code></dt>
<dd><p>If an alignment directive inserts more than <var>count</var> nops, put a
branch at the beginning to skip execution of the nops.
</p></dd>
</dl>
d56 68
d125 1
a125 5
<hr>
<div class="header">
<p>
Next: <a href="PowerPC_002dPseudo.html#PowerPC_002dPseudo" accesskey="n" rel="next">PowerPC-Pseudo</a>, Up: <a href="PPC_002dDependent.html#PPC_002dDependent" accesskey="u" rel="up">PPC-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>
d127 2
d130 1
a131 2
</body>
</html>
@

