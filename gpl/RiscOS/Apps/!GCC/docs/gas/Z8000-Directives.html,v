head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.11;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Z8000 Directives - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Z8000_002dDependent.html#Z8000_002dDependent" title="Z8000-Dependent">
<link rel="prev" href="Z8000-Syntax.html#Z8000-Syntax" title="Z8000 Syntax">
<link rel="next" href="Z8000-Opcodes.html#Z8000-Opcodes" title="Z8000 Opcodes">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Z8000-Directives"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Z8000-Opcodes.html#Z8000-Opcodes">Z8000 Opcodes</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Z8000-Syntax.html#Z8000-Syntax">Z8000 Syntax</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Z8000_002dDependent.html#Z8000_002dDependent">Z8000-Dependent</a>
<hr>
</div>

<h4 class="subsection">9.39.3 Assembler Directives for the Z8000</h4>

<p><a name="index-Z8000-directives-1868"></a><a name="index-directives_002c-Z8000-1869"></a>The Z8000 port of as includes additional assembler directives,
for compatibility with other Z8000 assemblers.  These do not begin with
&lsquo;<samp><span class="samp">.</span></samp>&rsquo; (unlike the ordinary as directives).

     
<a name="index-segm-1870"></a>
<dl><dt><code>segm</code><dd><a name="index-g_t_002ez8001-1871"></a><dt><code>.z8001</code><dd>Generate code for the segmented Z8001.

     <p><a name="index-unsegm-1872"></a><br><dt><code>unsegm</code><dd><a name="index-g_t_002ez8002-1873"></a><dt><code>.z8002</code><dd>Generate code for the unsegmented Z8002.

     <p><a name="index-name-1874"></a><br><dt><code>name</code><dd>Synonym for <code>.file</code>

     <p><a name="index-global-1875"></a><br><dt><code>global</code><dd>Synonym for <code>.global</code>

     <p><a name="index-wval-1876"></a><br><dt><code>wval</code><dd>Synonym for <code>.word</code>

     <p><a name="index-lval-1877"></a><br><dt><code>lval</code><dd>Synonym for <code>.long</code>

     <p><a name="index-bval-1878"></a><br><dt><code>bval</code><dd>Synonym for <code>.byte</code>

     <p><a name="index-sval-1879"></a><br><dt><code>sval</code><dd>Assemble a string.  <code>sval</code> expects one string literal, delimited by
single quotes.  It assembles each byte of the string into consecutive
addresses.  You can use the escape sequence &lsquo;<samp><span class="samp">%</span><var>xx</var></samp>&rsquo; (where
<var>xx</var> represents a two-digit hexadecimal number) to represent the
character whose <span class="sc">ascii</span> value is <var>xx</var>.  Use this feature to
describe single quote and other characters that may not appear in string
literals as themselves.  For example, the C statement &lsquo;<samp><span class="samp">char&nbsp;*a&nbsp;=&nbsp;"he&nbsp;said&nbsp;\"it's&nbsp;50%&nbsp;off\"";</span></samp>&rsquo;<!-- /@@w --> is represented in Z8000 assembly language
(shown with the assembler output in hex at the left) as

     <pre class="smallexample">          68652073    sval    'he said %22it%27s 50%25 off%22%00'
          61696420
          22697427
          73203530
          25206F66
          662200
</pre>
     <p><a name="index-rsect-1880"></a><br><dt><code>rsect</code><dd>synonym for <code>.section</code>

     <p><a name="index-block-1881"></a><br><dt><code>block</code><dd>synonym for <code>.space</code>

     <p><a name="index-even-1882"></a><br><dt><code>even</code><dd>special case of <code>.align</code>; aligns output to even byte boundary. 
</dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d15 2
a16 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d23 1
a23 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: Z8000 Directives</title>
a24 38
<meta name="description" content="Using as: Z8000 Directives">
<meta name="keywords" content="Using as: Z8000 Directives">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Z8000_002dDependent.html#Z8000_002dDependent" rel="up" title="Z8000-Dependent">
<link href="Z8000-Opcodes.html#Z8000-Opcodes" rel="next" title="Z8000 Opcodes">
<link href="Z8000_002dAddressing.html#Z8000_002dAddressing" rel="prev" title="Z8000-Addressing">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d26 12
a37 3
</style>


d39 2
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 4
a46 1
Next: <a href="Z8000-Opcodes.html#Z8000-Opcodes" accesskey="n" rel="next">Z8000 Opcodes</a>, Previous: <a href="Z8000-Syntax.html#Z8000-Syntax" accesskey="p" rel="prev">Z8000 Syntax</a>, Up: <a href="Z8000_002dDependent.html#Z8000_002dDependent" accesskey="u" rel="up">Z8000-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a47 3
<hr>
<a name="Assembler-Directives-for-the-Z8000"></a>
<h4 class="subsection">9.47.3 Assembler Directives for the Z8000</h4>
d49 3
a51 3
<a name="index-Z8000-directives"></a>
<a name="index-directives_002c-Z8000"></a>
<p>The Z8000 port of as includes additional assembler directives,
d53 19
a71 48
&lsquo;<samp>.</samp>&rsquo; (unlike the ordinary as directives).
</p>
<dl compact="compact">
<dd><a name="index-segm"></a>
</dd>
<dt><code>segm</code></dt>
<dd><a name="index-_002ez8001"></a>
</dd>
<dt><code>.z8001</code></dt>
<dd><p>Generate code for the segmented Z8001.
</p>
<a name="index-unsegm"></a>
</dd>
<dt><code>unsegm</code></dt>
<dd><a name="index-_002ez8002"></a>
</dd>
<dt><code>.z8002</code></dt>
<dd><p>Generate code for the unsegmented Z8002.
</p>
<a name="index-name"></a>
</dd>
<dt><code>name</code></dt>
<dd><p>Synonym for <code>.file</code>
</p>
<a name="index-global"></a>
</dd>
<dt><code>global</code></dt>
<dd><p>Synonym for <code>.global</code>
</p>
<a name="index-wval"></a>
</dd>
<dt><code>wval</code></dt>
<dd><p>Synonym for <code>.word</code>
</p>
<a name="index-lval"></a>
</dd>
<dt><code>lval</code></dt>
<dd><p>Synonym for <code>.long</code>
</p>
<a name="index-bval"></a>
</dd>
<dt><code>bval</code></dt>
<dd><p>Synonym for <code>.byte</code>
</p>
<a name="index-sval"></a>
</dd>
<dt><code>sval</code></dt>
<dd><p>Assemble a string.  <code>sval</code> expects one string literal, delimited by
d73 1
a73 1
addresses.  You can use the escape sequence &lsquo;<samp>%<var>xx</var></samp>&rsquo; (where
d75 1
a75 1
character whose <small>ASCII</small> value is <var>xx</var>.  Use this feature to
d77 1
a77 1
literals as themselves.  For example, the C statement &lsquo;<samp>char&nbsp;*a&nbsp;=&nbsp;&quot;he&nbsp;said&nbsp;\&quot;it's&nbsp;50%&nbsp;off\&quot;&quot;;</samp>&rsquo;<!-- /@@w --> is represented in Z8000 assembly language
a78 26
</p>
<div class="smallexample">
<pre class="smallexample">68652073    sval    'he said %22it%27s 50%25 off%22%00'
61696420
22697427
73203530
25206F66
662200
</pre></div>

<a name="index-rsect"></a>
</dd>
<dt><code>rsect</code></dt>
<dd><p>synonym for <code>.section</code>
</p>
<a name="index-block"></a>
</dd>
<dt><code>block</code></dt>
<dd><p>synonym for <code>.space</code>
</p>
<a name="index-even"></a>
</dd>
<dt><code>even</code></dt>
<dd><p>special case of <code>.align</code>; aligns output to even byte boundary.
</p></dd>
</dl>
d80 10
d91 2
d94 1
a95 2
</body>
</html>
@

