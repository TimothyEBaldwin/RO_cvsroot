head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.13;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>M32C-Modifiers - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="M32C_002dDependent.html#M32C_002dDependent" title="M32C-Dependent">
<link rel="prev" href="M32C_002dOpts.html#M32C_002dOpts" title="M32C-Opts">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="M32C-Modifiers"></a>
<a name="M32C_002dModifiers"></a>
<p>
Previous:&nbsp;<a rel="previous" accesskey="p" href="M32C_002dOpts.html#M32C_002dOpts">M32C-Opts</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="M32C_002dDependent.html#M32C_002dDependent">M32C-Dependent</a>
<hr>
</div>

<h4 class="subsection">9.19.2 Symbolic Operand Modifiers</h4>

<p><a name="index-M32C-modifiers-1089"></a><a name="index-syntax_002c-M32C-1090"></a>
The assembler supports several modifiers when using symbol addresses
in M32C instruction operands.  The general syntax is the following:

<pre class="smallexample">     %modifier(symbol)
</pre>
     
<a name="index-symbol-modifiers-1091"></a>
<dl>
<dt><code>%dsp8</code><dt><code>%dsp16</code><dd>
These modifiers override the assembler's assumptions about how big a
symbol's address is.  Normally, when it sees an operand like
&lsquo;<samp><span class="samp">sym[a0]</span></samp>&rsquo; it assumes &lsquo;<samp><span class="samp">sym</span></samp>&rsquo; may require the widest
displacement field (16 bits for &lsquo;<samp><span class="samp">-m16c</span></samp>&rsquo;, 24 bits for
&lsquo;<samp><span class="samp">-m32c</span></samp>&rsquo;).  These modifiers tell it to assume the address will fit
in an 8 or 16 bit (respectively) unsigned displacement.  Note that, of
course, if it doesn't actually fit you will get linker errors.  Example:

     <pre class="smallexample">          mov.w %dsp8(sym)[a0],r1
          mov.b #0,%dsp8(sym)[a0]
</pre>
     <br><dt><code>%hi8</code><dd>
This modifier allows you to load bits 16 through 23 of a 24 bit
address into an 8 bit register.  This is useful with, for example, the
M16C &lsquo;<samp><span class="samp">smovf</span></samp>&rsquo; instruction, which expects a 20 bit address in
&lsquo;<samp><span class="samp">r1h</span></samp>&rsquo; and &lsquo;<samp><span class="samp">a0</span></samp>&rsquo;.  Example:

     <pre class="smallexample">          mov.b #%hi8(sym),r1h
          mov.w #%lo16(sym),a0
          smovf.b
</pre>
     <br><dt><code>%lo16</code><dd>
Likewise, this modifier allows you to load bits 0 through 15 of a 24
bit address into a 16 bit register.

     <br><dt><code>%hi16</code><dd>
This modifier allows you to load bits 16 through 31 of a 32 bit
address into a 16 bit register.  While the M32C family only has 24
bits of address space, it does support addresses in pairs of 16 bit
registers (like &lsquo;<samp><span class="samp">a1a0</span></samp>&rsquo; for the &lsquo;<samp><span class="samp">lde</span></samp>&rsquo; instruction).  This
modifier is for loading the upper half in such cases.  Example:

     <pre class="smallexample">          mov.w #%hi16(sym),a1
          mov.w #%lo16(sym),a0
          ...
          lde.w [a1a0],r1
</pre>
     </dl>

<!-- Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, -->
<!-- 2000, 2003, 2004, 2006 -->
<!-- Free Software Foundation, Inc. -->
<!-- This is part of the GAS manual. -->
<!-- For copying conditions, see the file as.texinfo. -->
   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 12
a12 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d14 2
a15 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d22 1
a22 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: M32C-Modifiers</title>
a23 38
<meta name="description" content="Using as: M32C-Modifiers">
<meta name="keywords" content="Using as: M32C-Modifiers">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="M32C_002dSyntax.html#M32C_002dSyntax" rel="up" title="M32C-Syntax">
<link href="M32C_002dChars.html#M32C_002dChars" rel="next" title="M32C-Chars">
<link href="M32C_002dSyntax.html#M32C_002dSyntax" rel="prev" title="M32C-Syntax">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d25 12
a36 3
</style>


d38 3
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 3
a45 1
Next: <a href="M32C_002dChars.html#M32C_002dChars" accesskey="n" rel="next">M32C-Chars</a>, Up: <a href="M32C_002dSyntax.html#M32C_002dSyntax" accesskey="u" rel="up">M32C-Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a46 3
<hr>
<a name="Symbolic-Operand-Modifiers"></a>
<h4 class="subsubsection">9.21.2.1 Symbolic Operand Modifiers</h4>
d48 1
a48 2
<a name="index-M32C-modifiers"></a>
<a name="index-modifiers_002c-M32C"></a>
d50 2
a51 1
<p>The assembler supports several modifiers when using symbol addresses
d53 12
a64 17
</p>
<div class="smallexample">
<pre class="smallexample">%modifier(symbol)
</pre></div>

<dl compact="compact">
<dd><a name="index-symbol-modifiers-2"></a>

</dd>
<dt><code>%dsp8</code></dt>
<dt><code>%dsp16</code></dt>
<dd>
<p>These modifiers override the assembler&rsquo;s assumptions about how big a
symbol&rsquo;s address is.  Normally, when it sees an operand like
&lsquo;<samp>sym[a0]</samp>&rsquo; it assumes &lsquo;<samp>sym</samp>&rsquo; may require the widest
displacement field (16 bits for &lsquo;<samp>-m16c</samp>&rsquo;, 24 bits for
&lsquo;<samp>-m32c</samp>&rsquo;).  These modifiers tell it to assume the address will fit
d66 7
a72 11
course, if it doesn&rsquo;t actually fit you will get linker errors.  Example:
</p>
<div class="smallexample">
<pre class="smallexample">mov.w %dsp8(sym)[a0],r1
mov.b #0,%dsp8(sym)[a0]
</pre></div>

</dd>
<dt><code>%hi8</code></dt>
<dd>
<p>This modifier allows you to load bits 16 through 23 of a 24 bit
d74 9
a82 13
M16C &lsquo;<samp>smovf</samp>&rsquo; instruction, which expects a 20 bit address in
&lsquo;<samp>r1h</samp>&rsquo; and &lsquo;<samp>a0</samp>&rsquo;.  Example:
</p>
<div class="smallexample">
<pre class="smallexample">mov.b #%hi8(sym),r1h
mov.w #%lo16(sym),a0
smovf.b
</pre></div>

</dd>
<dt><code>%lo16</code></dt>
<dd>
<p>Likewise, this modifier allows you to load bits 0 through 15 of a 24
d84 3
a86 5
</p>
</dd>
<dt><code>%hi16</code></dt>
<dd>
<p>This modifier allows you to load bits 16 through 31 of a 32 bit
d89 1
a89 1
registers (like &lsquo;<samp>a1a0</samp>&rsquo; for the &lsquo;<samp>lde</samp>&rsquo; instruction).  This
a90 17
</p>
<div class="smallexample">
<pre class="smallexample">mov.w #%hi16(sym),a1
mov.w #%lo16(sym),a0
&hellip;
lde.w [a1a0],r1
</pre></div>

</dd>
</dl>

<hr>
<div class="header">
<p>
Next: <a href="M32C_002dChars.html#M32C_002dChars" accesskey="n" rel="next">M32C-Chars</a>, Up: <a href="M32C_002dSyntax.html#M32C_002dSyntax" accesskey="u" rel="up">M32C-Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>

d92 13
a105 2
</body>
</html>
@

