head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.11;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>i386-Float - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="i386_002dDependent.html#i386_002dDependent" title="i386-Dependent">
<link rel="prev" href="i386_002dJumps.html#i386_002dJumps" title="i386-Jumps">
<link rel="next" href="i386_002dSIMD.html#i386_002dSIMD" title="i386-SIMD">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="i386-Float"></a>
<a name="i386_002dFloat"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="i386_002dSIMD.html#i386_002dSIMD">i386-SIMD</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="i386_002dJumps.html#i386_002dJumps">i386-Jumps</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="i386_002dDependent.html#i386_002dDependent">i386-Dependent</a>
<hr>
</div>

<h4 class="subsection">9.13.10 Floating Point</h4>

<p><a name="index-i386-floating-point-953"></a><a name="index-floating-point_002c-i386-954"></a><a name="index-x86_002d64-floating-point-955"></a><a name="index-floating-point_002c-x86_002d64-956"></a>All 80387 floating point types except packed BCD are supported. 
(BCD support may be added without much difficulty).  These data
types are 16-, 32-, and 64- bit integers, and single (32-bit),
double (64-bit), and extended (80-bit) precision floating point. 
Each supported type has an instruction mnemonic suffix and a constructor
associated with it.  Instruction mnemonic suffixes specify the operand's
data type.  Constructors build these data types into memory.

   <p><a name="index-g_t_0040code_007bfloat_007d-directive_002c-i386-957"></a><a name="index-g_t_0040code_007bsingle_007d-directive_002c-i386-958"></a><a name="index-g_t_0040code_007bdouble_007d-directive_002c-i386-959"></a><a name="index-g_t_0040code_007btfloat_007d-directive_002c-i386-960"></a><a name="index-g_t_0040code_007bfloat_007d-directive_002c-x86_002d64-961"></a><a name="index-g_t_0040code_007bsingle_007d-directive_002c-x86_002d64-962"></a><a name="index-g_t_0040code_007bdouble_007d-directive_002c-x86_002d64-963"></a><a name="index-g_t_0040code_007btfloat_007d-directive_002c-x86_002d64-964"></a>
     <ul>
<li>Floating point constructors are &lsquo;<samp><span class="samp">.float</span></samp>&rsquo; or &lsquo;<samp><span class="samp">.single</span></samp>&rsquo;,
&lsquo;<samp><span class="samp">.double</span></samp>&rsquo;, and &lsquo;<samp><span class="samp">.tfloat</span></samp>&rsquo; for 32-, 64-, and 80-bit formats. 
These correspond to instruction mnemonic suffixes &lsquo;<samp><span class="samp">s</span></samp>&rsquo;, &lsquo;<samp><span class="samp">l</span></samp>&rsquo;,
and &lsquo;<samp><span class="samp">t</span></samp>&rsquo;. &lsquo;<samp><span class="samp">t</span></samp>&rsquo; stands for 80-bit (ten byte) real.  The 80387
only supports this format via the &lsquo;<samp><span class="samp">fldt</span></samp>&rsquo; (load 80-bit real to stack
top) and &lsquo;<samp><span class="samp">fstpt</span></samp>&rsquo; (store 80-bit real and pop stack) instructions.

     <p><a name="index-g_t_0040code_007bword_007d-directive_002c-i386-965"></a><a name="index-g_t_0040code_007blong_007d-directive_002c-i386-966"></a><a name="index-g_t_0040code_007bint_007d-directive_002c-i386-967"></a><a name="index-g_t_0040code_007bquad_007d-directive_002c-i386-968"></a><a name="index-g_t_0040code_007bword_007d-directive_002c-x86_002d64-969"></a><a name="index-g_t_0040code_007blong_007d-directive_002c-x86_002d64-970"></a><a name="index-g_t_0040code_007bint_007d-directive_002c-x86_002d64-971"></a><a name="index-g_t_0040code_007bquad_007d-directive_002c-x86_002d64-972"></a><li>Integer constructors are &lsquo;<samp><span class="samp">.word</span></samp>&rsquo;, &lsquo;<samp><span class="samp">.long</span></samp>&rsquo; or &lsquo;<samp><span class="samp">.int</span></samp>&rsquo;, and
&lsquo;<samp><span class="samp">.quad</span></samp>&rsquo; for the 16-, 32-, and 64-bit integer formats.  The
corresponding instruction mnemonic suffixes are &lsquo;<samp><span class="samp">s</span></samp>&rsquo; (single),
&lsquo;<samp><span class="samp">l</span></samp>&rsquo; (long), and &lsquo;<samp><span class="samp">q</span></samp>&rsquo; (quad).  As with the 80-bit real format,
the 64-bit &lsquo;<samp><span class="samp">q</span></samp>&rsquo; format is only present in the &lsquo;<samp><span class="samp">fildq</span></samp>&rsquo; (load
quad integer to stack top) and &lsquo;<samp><span class="samp">fistpq</span></samp>&rsquo; (store quad integer and pop
stack) instructions. 
</ul>

   <p>Register to register operations should not use instruction mnemonic suffixes. 
&lsquo;<samp><span class="samp">fstl %st, %st(1)</span></samp>&rsquo; will give a warning, and be assembled as if you
wrote &lsquo;<samp><span class="samp">fst %st, %st(1)</span></samp>&rsquo;, since all register to register operations
use 80-bit floating point operands. (Contrast this with &lsquo;<samp><span class="samp">fstl %st, mem</span></samp>&rsquo;,
which converts &lsquo;<samp><span class="samp">%st</span></samp>&rsquo; from 80-bit to 64-bit floating point format,
then stores the result in the 4 byte location &lsquo;<samp><span class="samp">mem</span></samp>&rsquo;)

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d15 2
a16 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d23 1
a23 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: i386-Float</title>
a24 38
<meta name="description" content="Using as: i386-Float">
<meta name="keywords" content="Using as: i386-Float">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="i386_002dDependent.html#i386_002dDependent" rel="up" title="i386-Dependent">
<link href="i386_002dSIMD.html#i386_002dSIMD" rel="next" title="i386-SIMD">
<link href="i386_002dJumps.html#i386_002dJumps" rel="prev" title="i386-Jumps">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d26 12
a37 3
</style>


d39 3
a41 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a42 1
<div class="header">
d44 4
a47 1
Next: <a href="i386_002dSIMD.html#i386_002dSIMD" accesskey="n" rel="next">i386-SIMD</a>, Previous: <a href="i386_002dJumps.html#i386_002dJumps" accesskey="p" rel="prev">i386-Jumps</a>, Up: <a href="i386_002dDependent.html#i386_002dDependent" accesskey="u" rel="up">i386-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a48 3
<hr>
<a name="Floating-Point-9"></a>
<h4 class="subsection">9.15.10 Floating Point</h4>
d50 3
a52 5
<a name="index-i386-floating-point"></a>
<a name="index-floating-point_002c-i386"></a>
<a name="index-x86_002d64-floating-point"></a>
<a name="index-floating-point_002c-x86_002d64"></a>
<p>All 80387 floating point types except packed BCD are supported.
d55 1
a55 1
double (64-bit), and extended (80-bit) precision floating point.
d57 1
a57 1
associated with it.  Instruction mnemonic suffixes specify the operand&rsquo;s
a58 46
</p>
<a name="index-float-directive_002c-i386"></a>
<a name="index-single-directive_002c-i386"></a>
<a name="index-double-directive_002c-i386"></a>
<a name="index-tfloat-directive_002c-i386"></a>
<a name="index-float-directive_002c-x86_002d64"></a>
<a name="index-single-directive_002c-x86_002d64"></a>
<a name="index-double-directive_002c-x86_002d64"></a>
<a name="index-tfloat-directive_002c-x86_002d64"></a>
<ul>
<li> Floating point constructors are &lsquo;<samp>.float</samp>&rsquo; or &lsquo;<samp>.single</samp>&rsquo;,
&lsquo;<samp>.double</samp>&rsquo;, and &lsquo;<samp>.tfloat</samp>&rsquo; for 32-, 64-, and 80-bit formats.
These correspond to instruction mnemonic suffixes &lsquo;<samp>s</samp>&rsquo;, &lsquo;<samp>l</samp>&rsquo;,
and &lsquo;<samp>t</samp>&rsquo;. &lsquo;<samp>t</samp>&rsquo; stands for 80-bit (ten byte) real.  The 80387
only supports this format via the &lsquo;<samp>fldt</samp>&rsquo; (load 80-bit real to stack
top) and &lsquo;<samp>fstpt</samp>&rsquo; (store 80-bit real and pop stack) instructions.

</li><li> <a name="index-word-directive_002c-i386"></a>
<a name="index-long-directive_002c-i386"></a>
<a name="index-int-directive_002c-i386"></a>
<a name="index-quad-directive_002c-i386"></a>
<a name="index-word-directive_002c-x86_002d64"></a>
<a name="index-long-directive_002c-x86_002d64"></a>
<a name="index-int-directive_002c-x86_002d64"></a>
<a name="index-quad-directive_002c-x86_002d64"></a>
Integer constructors are &lsquo;<samp>.word</samp>&rsquo;, &lsquo;<samp>.long</samp>&rsquo; or &lsquo;<samp>.int</samp>&rsquo;, and
&lsquo;<samp>.quad</samp>&rsquo; for the 16-, 32-, and 64-bit integer formats.  The
corresponding instruction mnemonic suffixes are &lsquo;<samp>s</samp>&rsquo; (single),
&lsquo;<samp>l</samp>&rsquo; (long), and &lsquo;<samp>q</samp>&rsquo; (quad).  As with the 80-bit real format,
the 64-bit &lsquo;<samp>q</samp>&rsquo; format is only present in the &lsquo;<samp>fildq</samp>&rsquo; (load
quad integer to stack top) and &lsquo;<samp>fistpq</samp>&rsquo; (store quad integer and pop
stack) instructions.
</li></ul>

<p>Register to register operations should not use instruction mnemonic suffixes.
&lsquo;<samp>fstl %st, %st(1)</samp>&rsquo; will give a warning, and be assembled as if you
wrote &lsquo;<samp>fst %st, %st(1)</samp>&rsquo;, since all register to register operations
use 80-bit floating point operands. (Contrast this with &lsquo;<samp>fstl %st, mem</samp>&rsquo;,
which converts &lsquo;<samp>%st</samp>&rsquo; from 80-bit to 64-bit floating point format,
then stores the result in the 4 byte location &lsquo;<samp>mem</samp>&rsquo;)
</p>
<hr>
<div class="header">
<p>
Next: <a href="i386_002dSIMD.html#i386_002dSIMD" accesskey="n" rel="next">i386-SIMD</a>, Previous: <a href="i386_002dJumps.html#i386_002dJumps" accesskey="p" rel="prev">i386-Jumps</a>, Up: <a href="i386_002dDependent.html#i386_002dDependent" accesskey="u" rel="up">i386-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>
d60 24
d85 1
a86 2
</body>
</html>
@

