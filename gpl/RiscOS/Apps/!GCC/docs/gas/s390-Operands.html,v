head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.11;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.10;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>s390 Operands - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="s390-Syntax.html#s390-Syntax" title="s390 Syntax">
<link rel="prev" href="s390-Mnemonics.html#s390-Mnemonics" title="s390 Mnemonics">
<link rel="next" href="s390-Formats.html#s390-Formats" title="s390 Formats">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="s390-Operands"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="s390-Formats.html#s390-Formats">s390 Formats</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="s390-Mnemonics.html#s390-Mnemonics">s390 Mnemonics</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="s390-Syntax.html#s390-Syntax">s390 Syntax</a>
<hr>
</div>

<h5 class="subsubsection">9.31.3.3 Instruction Operands</h5>

<p><a name="index-instruction-operands_002c-s390-1534"></a><a name="index-s390-instruction-operands-1535"></a>
Instruction operands can be grouped into three classes, operands located
in registers, immediate operands, and operands in storage.

   <p>A register operand can be located in general, floating-point, access,
or control register. The register is identified by a four-bit field. 
The field containing the register operand is called the R field.

   <p>Immediate operands are contained within the instruction and can have
8, 16 or 32 bits. The field containing the immediate operand is called
the I field. Dependent on the instruction the I field is either signed
or unsigned.

   <p>A storage operand consists of an address and a length. The address of a
storage operands can be specified in any of these ways:

     <ul>
<li>The content of a single general R
<li>The sum of the content of a general register called the base
register B plus the content of a displacement field D
<li>The sum of the contents of two general registers called the
index register X and the base register B plus the content of a
displacement field
<li>The sum of the current instruction address and a 32-bit signed
immediate field multiplied by two. 
</ul>

   <p>The length of a storage operand can be:

     <ul>
<li>Implied by the instruction
<li>Specified by a bitmask
<li>Specified by a four-bit or eight-bit length field L
<li>Specified by the content of a general register
</ul>

   <p>The notation for storage operand addresses formed from multiple fields is
as follows:

     <dl>
<dt><code>Dn(Bn)</code><dd>the address for operand number n is formed from the content of general
register Bn called the base register and the displacement field Dn. 
<br><dt><code>Dn(Xn,Bn)</code><dd>the address for operand number n is formed from the content of general
register Xn called the index register, general register Bn called the
base register and the displacement field Dn. 
<br><dt><code>Dn(Ln,Bn)</code><dd>the address for operand number n is formed from the content of general
regiser Bn called the base register and the displacement field Dn. 
The length of the operand n is specified by the field Ln. 
</dl>

   <p>The base registers Bn and the index registers Xn of a storage operand can
be skipped. If Bn and Xn are skipped, a zero will be stored to the operand
field. The notation changes as follows:

<pre class="display">
     <p><table summary=""><tr align="left"><th valign="top" width="30%">full notation </th><th valign="top" width="30%">short notation
     <br></th></tr><tr align="left"><td valign="top" width="30%">Dn(0,Bn) </td><td valign="top" width="30%">Dn(Bn)
     <br></td></tr><tr align="left"><td valign="top" width="30%">Dn(0,0) </td><td valign="top" width="30%">Dn
     <br></td></tr><tr align="left"><td valign="top" width="30%">Dn(0) </td><td valign="top" width="30%">Dn
     <br></td></tr><tr align="left"><td valign="top" width="30%">Dn(Ln,0) </td><td valign="top" width="30%">Dn(Ln)
     <br></td></tr></table>
</pre>
   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d15 2
a16 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d23 1
a23 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: s390 Operands</title>
a24 38
<meta name="description" content="Using as: s390 Operands">
<meta name="keywords" content="Using as: s390 Operands">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="s390-Syntax.html#s390-Syntax" rel="up" title="s390 Syntax">
<link href="s390-Formats.html#s390-Formats" rel="next" title="s390 Formats">
<link href="s390-Mnemonics.html#s390-Mnemonics" rel="prev" title="s390 Mnemonics">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d26 12
a37 3
</style>


d39 2
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 4
a46 1
Next: <a href="s390-Formats.html#s390-Formats" accesskey="n" rel="next">s390 Formats</a>, Previous: <a href="s390-Mnemonics.html#s390-Mnemonics" accesskey="p" rel="prev">s390 Mnemonics</a>, Up: <a href="s390-Syntax.html#s390-Syntax" accesskey="u" rel="up">s390 Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a47 5
<hr>
<a name="Instruction-Operands"></a>
<h4 class="subsubsection">9.37.3.3 Instruction Operands</h4>
<a name="index-instruction-operands_002c-s390"></a>
<a name="index-s390-instruction-operands"></a>
d49 4
a52 1
<p>Instruction operands can be grouped into three classes, operands located
d54 3
a56 3
</p>
<p>A register operand can be located in general, floating-point, access,
or control register. The register is identified by a four-bit field.
d58 2
a59 2
</p>
<p>Immediate operands are contained within the instruction and can have
d63 2
a64 2
</p>
<p>A storage operand consists of an address and a length. The address of a
d66 4
a69 4
</p>
<ul>
<li> The content of a single general R
</li><li> The sum of the content of a general register called the base
d71 1
a71 1
</li><li> The sum of the contents of two general registers called the
d74 12
a85 12
</li><li> The sum of the current instruction address and a 32-bit signed
immediate field multiplied by two.
</li></ul>

<p>The length of a storage operand can be:
</p>
<ul>
<li> Implied by the instruction
</li><li> Specified by a bitmask
</li><li> Specified by a four-bit or eight-bit length field L
</li><li> Specified by the content of a general register
</li></ul>
d87 1
a87 1
<p>The notation for storage operand addresses formed from multiple fields is
d89 5
a93 8
</p>
<dl compact="compact">
<dt><code>Dn(Bn)</code></dt>
<dd><p>the address for operand number n is formed from the content of general
register Bn called the base register and the displacement field Dn.
</p></dd>
<dt><code>Dn(Xn,Bn)</code></dt>
<dd><p>the address for operand number n is formed from the content of general
d95 4
a98 7
base register and the displacement field Dn.
</p></dd>
<dt><code>Dn(Ln,Bn)</code></dt>
<dd><p>the address for operand number n is formed from the content of general
regiser Bn called the base register and the displacement field Dn.
The length of the operand n is specified by the field Ln.
</p></dd>
d101 1
a101 1
<p>The base registers Bn and the index registers Xn of a storage operand can
a103 18
</p>
<div class="display">
<table>
<thead><tr><th width="30%"><pre class="display">full notation</pre></th><th width="30%"><pre class="display">short notation</pre></th></tr></thead>
<tr><td width="30%"><pre class="display">Dn(0,Bn)</pre></td><td width="30%"><pre class="display">Dn(Bn)</pre></td></tr>
<tr><td width="30%"><pre class="display">Dn(0,0)</pre></td><td width="30%"><pre class="display">Dn</pre></td></tr>
<tr><td width="30%"><pre class="display">Dn(0)</pre></td><td width="30%"><pre class="display">Dn</pre></td></tr>
<tr><td width="30%"><pre class="display">Dn(Ln,0)</pre></td><td width="30%"><pre class="display">Dn(Ln)</pre></td></tr>
</table>
</div>


<hr>
<div class="header">
<p>
Next: <a href="s390-Formats.html#s390-Formats" accesskey="n" rel="next">s390 Formats</a>, Previous: <a href="s390-Mnemonics.html#s390-Mnemonics" accesskey="p" rel="prev">s390 Mnemonics</a>, Up: <a href="s390-Syntax.html#s390-Syntax" accesskey="u" rel="up">s390 Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>

d105 9
a114 2
</body>
</html>
@

