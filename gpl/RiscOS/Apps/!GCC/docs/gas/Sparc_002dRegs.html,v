head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.13;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.13;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.14;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Sparc-Regs - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Sparc_002dSyntax.html#Sparc_002dSyntax" title="Sparc-Syntax">
<link rel="prev" href="Sparc_002dChars.html#Sparc_002dChars" title="Sparc-Chars">
<link rel="next" href="Sparc_002dConstants.html#Sparc_002dConstants" title="Sparc-Constants">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Sparc-Regs"></a>
<a name="Sparc_002dRegs"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Sparc_002dConstants.html#Sparc_002dConstants">Sparc-Constants</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Sparc_002dChars.html#Sparc_002dChars">Sparc-Chars</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Sparc_002dSyntax.html#Sparc_002dSyntax">Sparc-Syntax</a>
<hr>
</div>

<h5 class="subsubsection">9.35.3.2 Register Names</h5>

<p><a name="index-Sparc-registers-1639"></a><a name="index-register-names_002c-Sparc-1640"></a>
The Sparc integer register file is broken down into global,
outgoing, local, and incoming.

     <ul>
<li>The 8 global registers are referred to as &lsquo;<samp><span class="samp">%g</span><var>n</var></samp>&rsquo;.

     <li>The 8 outgoing registers are referred to as &lsquo;<samp><span class="samp">%o</span><var>n</var></samp>&rsquo;.

     <li>The 8 local registers are referred to as &lsquo;<samp><span class="samp">%l</span><var>n</var></samp>&rsquo;.

     <li>The 8 incoming registers are referred to as &lsquo;<samp><span class="samp">%i</span><var>n</var></samp>&rsquo;.

     <li>The frame pointer register &lsquo;<samp><span class="samp">%i6</span></samp>&rsquo; can be referenced using
the alias &lsquo;<samp><span class="samp">%fp</span></samp>&rsquo;.

     <li>The stack pointer register &lsquo;<samp><span class="samp">%o6</span></samp>&rsquo; can be referenced using
the alias &lsquo;<samp><span class="samp">%sp</span></samp>&rsquo;. 
</ul>

   <p>Floating point registers are simply referred to as &lsquo;<samp><span class="samp">%f</span><var>n</var></samp>&rsquo;. 
When assembling for pre-V9, only 32 floating point registers
are available.  For V9 and later there are 64, but there are
restrictions when referencing the upper 32 registers.  They
can only be accessed as double or quad, and thus only even
or quad numbered accesses are allowed.  For example, &lsquo;<samp><span class="samp">%f34</span></samp>&rsquo;
is a legal floating point register, but &lsquo;<samp><span class="samp">%f35</span></samp>&rsquo; is not.

   <p>Certain V9 instructions allow access to ancillary state registers. 
Most simply they can be referred to as &lsquo;<samp><span class="samp">%asr</span><var>n</var></samp>&rsquo; where
<var>n</var> can be from 16 to 31.  However, there are some aliases
defined to reference ASR registers defined for various UltraSPARC
processors:

     <ul>
<li>The tick compare register is referred to as &lsquo;<samp><span class="samp">%tick_cmpr</span></samp>&rsquo;.

     <li>The system tick register is referred to as &lsquo;<samp><span class="samp">%stick</span></samp>&rsquo;.  An alias,
&lsquo;<samp><span class="samp">%sys_tick</span></samp>&rsquo;, exists but is deprecated and should not be used
by new software.

     <li>The system tick compare register is referred to as &lsquo;<samp><span class="samp">%stick_cmpr</span></samp>&rsquo;. 
An alias, &lsquo;<samp><span class="samp">%sys_tick_cmpr</span></samp>&rsquo;, exists but is deprecated and should
not be used by new software.

     <li>The software interrupt register is referred to as &lsquo;<samp><span class="samp">%softint</span></samp>&rsquo;.

     <li>The set software interrupt register is referred to as &lsquo;<samp><span class="samp">%set_softint</span></samp>&rsquo;. 
The mnemonic &lsquo;<samp><span class="samp">%softint_set</span></samp>&rsquo; is provided as an alias.

     <li>The clear software interrupt register is referred to as
&lsquo;<samp><span class="samp">%clear_softint</span></samp>&rsquo;.  The mnemonic &lsquo;<samp><span class="samp">%softint_clear</span></samp>&rsquo; is provided
as an alias.

     <li>The performance instrumentation counters register is referred to as
&lsquo;<samp><span class="samp">%pic</span></samp>&rsquo;.

     <li>The performance control register is referred to as &lsquo;<samp><span class="samp">%pcr</span></samp>&rsquo;.

     <li>The graphics status register is referred to as &lsquo;<samp><span class="samp">%gsr</span></samp>&rsquo;.

     <li>The V9 dispatch control register is referred to as &lsquo;<samp><span class="samp">%dcr</span></samp>&rsquo;. 
</ul>

   <p>Various V9 branch and conditional move instructions allow
specification of which set of integer condition codes to
test.  These are referred to as &lsquo;<samp><span class="samp">%xcc</span></samp>&rsquo; and &lsquo;<samp><span class="samp">%icc</span></samp>&rsquo;.

   <p>In V9, there are 4 sets of floating point condition codes
which are referred to as &lsquo;<samp><span class="samp">%fcc</span><var>n</var></samp>&rsquo;.

   <p>Several special privileged and non-privileged registers
exist:

     <ul>
<li>The V9 address space identifier register is referred to as &lsquo;<samp><span class="samp">%asi</span></samp>&rsquo;.

     <li>The V9 restorable windows register is referred to as &lsquo;<samp><span class="samp">%canrestore</span></samp>&rsquo;.

     <li>The V9 savable windows register is referred to as &lsquo;<samp><span class="samp">%cansave</span></samp>&rsquo;.

     <li>The V9 clean windows register is referred to as &lsquo;<samp><span class="samp">%cleanwin</span></samp>&rsquo;.

     <li>The V9 current window pointer register is referred to as &lsquo;<samp><span class="samp">%cwp</span></samp>&rsquo;.

     <li>The floating-point queue register is referred to as &lsquo;<samp><span class="samp">%fq</span></samp>&rsquo;.

     <li>The V8 co-processor queue register is referred to as &lsquo;<samp><span class="samp">%cq</span></samp>&rsquo;.

     <li>The floating point status register is referred to as &lsquo;<samp><span class="samp">%fsr</span></samp>&rsquo;.

     <li>The other windows register is referred to as &lsquo;<samp><span class="samp">%otherwin</span></samp>&rsquo;.

     <li>The V9 program counter register is referred to as &lsquo;<samp><span class="samp">%pc</span></samp>&rsquo;.

     <li>The V9 next program counter register is referred to as &lsquo;<samp><span class="samp">%npc</span></samp>&rsquo;.

     <li>The V9 processor interrupt level register is referred to as &lsquo;<samp><span class="samp">%pil</span></samp>&rsquo;.

     <li>The V9 processor state register is referred to as &lsquo;<samp><span class="samp">%pstate</span></samp>&rsquo;.

     <li>The trap base address register is referred to as &lsquo;<samp><span class="samp">%tba</span></samp>&rsquo;.

     <li>The V9 tick register is referred to as &lsquo;<samp><span class="samp">%tick</span></samp>&rsquo;.

     <li>The V9 trap level is referred to as &lsquo;<samp><span class="samp">%tl</span></samp>&rsquo;.

     <li>The V9 trap program counter is referred to as &lsquo;<samp><span class="samp">%tpc</span></samp>&rsquo;.

     <li>The V9 trap next program counter is referred to as &lsquo;<samp><span class="samp">%tnpc</span></samp>&rsquo;.

     <li>The V9 trap state is referred to as &lsquo;<samp><span class="samp">%tstate</span></samp>&rsquo;.

     <li>The V9 trap type is referred to as &lsquo;<samp><span class="samp">%tt</span></samp>&rsquo;.

     <li>The V9 condition codes is referred to as &lsquo;<samp><span class="samp">%ccr</span></samp>&rsquo;.

     <li>The V9 floating-point registers state is referred to as &lsquo;<samp><span class="samp">%fprs</span></samp>&rsquo;.

     <li>The V9 version register is referred to as &lsquo;<samp><span class="samp">%ver</span></samp>&rsquo;.

     <li>The V9 window state register is referred to as &lsquo;<samp><span class="samp">%wstate</span></samp>&rsquo;.

     <li>The Y register is referred to as &lsquo;<samp><span class="samp">%y</span></samp>&rsquo;.

     <li>The V8 window invalid mask register is referred to as &lsquo;<samp><span class="samp">%wim</span></samp>&rsquo;.

     <li>The V8 processor state register is referred to as &lsquo;<samp><span class="samp">%psr</span></samp>&rsquo;.

     <li>The V9 global register level register is referred to as &lsquo;<samp><span class="samp">%gl</span></samp>&rsquo;. 
</ul>

   <p>Several special register names exist for hypervisor mode code:

     <ul>
<li>The hyperprivileged processor state register is referred to as
&lsquo;<samp><span class="samp">%hpstate</span></samp>&rsquo;.

     <li>The hyperprivileged trap state register is referred to as &lsquo;<samp><span class="samp">%htstate</span></samp>&rsquo;.

     <li>The hyperprivileged interrupt pending register is referred to as
&lsquo;<samp><span class="samp">%hintp</span></samp>&rsquo;.

     <li>The hyperprivileged trap base address register is referred to as
&lsquo;<samp><span class="samp">%htba</span></samp>&rsquo;.

     <li>The hyperprivileged implementation version register is referred
to as &lsquo;<samp><span class="samp">%hver</span></samp>&rsquo;.

     <li>The hyperprivileged system tick compare register is referred
to as &lsquo;<samp><span class="samp">%hstick_cmpr</span></samp>&rsquo;.  Note that there is no &lsquo;<samp><span class="samp">%hstick</span></samp>&rsquo;
register, the normal &lsquo;<samp><span class="samp">%stick</span></samp>&rsquo; is used. 
</ul>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d15 2
a16 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d23 1
a23 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: Sparc-Regs</title>
a24 38
<meta name="description" content="Using as: Sparc-Regs">
<meta name="keywords" content="Using as: Sparc-Regs">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Sparc_002dSyntax.html#Sparc_002dSyntax" rel="up" title="Sparc-Syntax">
<link href="Sparc_002dConstants.html#Sparc_002dConstants" rel="next" title="Sparc-Constants">
<link href="Sparc_002dChars.html#Sparc_002dChars" rel="prev" title="Sparc-Chars">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d26 12
a37 3
</style>


d39 3
a41 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a42 1
<div class="header">
d44 4
a47 1
Next: <a href="Sparc_002dConstants.html#Sparc_002dConstants" accesskey="n" rel="next">Sparc-Constants</a>, Previous: <a href="Sparc_002dChars.html#Sparc_002dChars" accesskey="p" rel="prev">Sparc-Chars</a>, Up: <a href="Sparc_002dSyntax.html#Sparc_002dSyntax" accesskey="u" rel="up">Sparc-Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a48 5
<hr>
<a name="Register-Names-14"></a>
<h4 class="subsubsection">9.41.3.2 Register Names</h4>
<a name="index-Sparc-registers"></a>
<a name="index-register-names_002c-Sparc"></a>
d50 4
a53 1
<p>The Sparc integer register file is broken down into global,
a54 3
</p>
<ul>
<li> The 8 global registers are referred to as &lsquo;<samp>%g<var>n</var></samp>&rsquo;.
d56 4
a59 1
</li><li> The 8 outgoing registers are referred to as &lsquo;<samp>%o<var>n</var></samp>&rsquo;.
d61 1
a61 1
</li><li> The 8 local registers are referred to as &lsquo;<samp>%l<var>n</var></samp>&rsquo;.
d63 1
a63 1
</li><li> The 8 incoming registers are referred to as &lsquo;<samp>%i<var>n</var></samp>&rsquo;.
d65 2
a66 2
</li><li> The frame pointer register &lsquo;<samp>%i6</samp>&rsquo; can be referenced using
the alias &lsquo;<samp>%fp</samp>&rsquo;.
d68 3
a70 3
</li><li> The stack pointer register &lsquo;<samp>%o6</samp>&rsquo; can be referenced using
the alias &lsquo;<samp>%sp</samp>&rsquo;.
</li></ul>
d72 1
a72 1
<p>Floating point registers are simply referred to as &lsquo;<samp>%f<var>n</var></samp>&rsquo;.
d77 5
a81 5
or quad numbered accesses are allowed.  For example, &lsquo;<samp>%f34</samp>&rsquo;
is a legal floating point register, but &lsquo;<samp>%f35</samp>&rsquo; is not.
</p>
<p>Certain V9 instructions allow access to ancillary state registers.
Most simply they can be referred to as &lsquo;<samp>%asr<var>n</var></samp>&rsquo; where
a84 3
</p>
<ul>
<li> The tick compare register is referred to as &lsquo;<samp>%tick_cmpr</samp>&rsquo;.
d86 5
a90 2
</li><li> The system tick register is referred to as &lsquo;<samp>%stick</samp>&rsquo;.  An alias,
&lsquo;<samp>%sys_tick</samp>&rsquo;, exists but is deprecated and should not be used
d93 2
a94 2
</li><li> The system tick compare register is referred to as &lsquo;<samp>%stick_cmpr</samp>&rsquo;.
An alias, &lsquo;<samp>%sys_tick_cmpr</samp>&rsquo;, exists but is deprecated and should
d97 1
a97 1
</li><li> The software interrupt register is referred to as &lsquo;<samp>%softint</samp>&rsquo;.
d99 2
a100 2
</li><li> The set software interrupt register is referred to as &lsquo;<samp>%set_softint</samp>&rsquo;.
The mnemonic &lsquo;<samp>%softint_set</samp>&rsquo; is provided as an alias.
d102 2
a103 2
</li><li> The clear software interrupt register is referred to as
&lsquo;<samp>%clear_softint</samp>&rsquo;.  The mnemonic &lsquo;<samp>%softint_clear</samp>&rsquo; is provided
d106 2
a107 2
</li><li> The performance instrumentation counters register is referred to as
&lsquo;<samp>%pic</samp>&rsquo;.
d109 1
a109 1
</li><li> The performance control register is referred to as &lsquo;<samp>%pcr</samp>&rsquo;.
d111 1
a111 1
</li><li> The graphics status register is referred to as &lsquo;<samp>%gsr</samp>&rsquo;.
d113 2
a114 2
</li><li> The V9 dispatch control register is referred to as &lsquo;<samp>%dcr</samp>&rsquo;.
</li></ul>
d116 1
a116 1
<p>Various V9 branch and conditional move instructions allow
d118 6
a123 6
test.  These are referred to as &lsquo;<samp>%xcc</samp>&rsquo; and &lsquo;<samp>%icc</samp>&rsquo;.
</p>
<p>In V9, there are 4 sets of floating point condition codes
which are referred to as &lsquo;<samp>%fcc<var>n</var></samp>&rsquo;.
</p>
<p>Several special privileged and non-privileged registers
a124 3
</p>
<ul>
<li> The V9 address space identifier register is referred to as &lsquo;<samp>%asi</samp>&rsquo;.
d126 2
a127 1
</li><li> The V9 restorable windows register is referred to as &lsquo;<samp>%canrestore</samp>&rsquo;.
d129 1
a129 1
</li><li> The V9 savable windows register is referred to as &lsquo;<samp>%cansave</samp>&rsquo;.
d131 1
a131 1
</li><li> The V9 clean windows register is referred to as &lsquo;<samp>%cleanwin</samp>&rsquo;.
d133 1
a133 1
</li><li> The V9 current window pointer register is referred to as &lsquo;<samp>%cwp</samp>&rsquo;.
d135 1
a135 1
</li><li> The floating-point queue register is referred to as &lsquo;<samp>%fq</samp>&rsquo;.
d137 1
a137 1
</li><li> The V8 co-processor queue register is referred to as &lsquo;<samp>%cq</samp>&rsquo;.
d139 1
a139 1
</li><li> The floating point status register is referred to as &lsquo;<samp>%fsr</samp>&rsquo;.
d141 1
a141 1
</li><li> The other windows register is referred to as &lsquo;<samp>%otherwin</samp>&rsquo;.
d143 1
a143 1
</li><li> The V9 program counter register is referred to as &lsquo;<samp>%pc</samp>&rsquo;.
d145 1
a145 1
</li><li> The V9 next program counter register is referred to as &lsquo;<samp>%npc</samp>&rsquo;.
d147 1
a147 1
</li><li> The V9 processor interrupt level register is referred to as &lsquo;<samp>%pil</samp>&rsquo;.
d149 1
a149 1
</li><li> The V9 processor state register is referred to as &lsquo;<samp>%pstate</samp>&rsquo;.
d151 1
a151 1
</li><li> The trap base address register is referred to as &lsquo;<samp>%tba</samp>&rsquo;.
d153 1
a153 1
</li><li> The V9 tick register is referred to as &lsquo;<samp>%tick</samp>&rsquo;.
d155 1
a155 1
</li><li> The V9 trap level is referred to as &lsquo;<samp>%tl</samp>&rsquo;.
d157 1
a157 1
</li><li> The V9 trap program counter is referred to as &lsquo;<samp>%tpc</samp>&rsquo;.
d159 1
a159 1
</li><li> The V9 trap next program counter is referred to as &lsquo;<samp>%tnpc</samp>&rsquo;.
d161 1
a161 1
</li><li> The V9 trap state is referred to as &lsquo;<samp>%tstate</samp>&rsquo;.
d163 1
a163 1
</li><li> The V9 trap type is referred to as &lsquo;<samp>%tt</samp>&rsquo;.
d165 1
a165 1
</li><li> The V9 condition codes is referred to as &lsquo;<samp>%ccr</samp>&rsquo;.
d167 1
a167 1
</li><li> The V9 floating-point registers state is referred to as &lsquo;<samp>%fprs</samp>&rsquo;.
d169 1
a169 1
</li><li> The V9 version register is referred to as &lsquo;<samp>%ver</samp>&rsquo;.
d171 1
a171 1
</li><li> The V9 window state register is referred to as &lsquo;<samp>%wstate</samp>&rsquo;.
d173 1
a173 1
</li><li> The Y register is referred to as &lsquo;<samp>%y</samp>&rsquo;.
d175 1
a175 1
</li><li> The V8 window invalid mask register is referred to as &lsquo;<samp>%wim</samp>&rsquo;.
d177 1
a177 1
</li><li> The V8 processor state register is referred to as &lsquo;<samp>%psr</samp>&rsquo;.
d179 1
a179 2
</li><li> The V9 global register level register is referred to as &lsquo;<samp>%gl</samp>&rsquo;.
</li></ul>
d181 2
a182 5
<p>Several special register names exist for hypervisor mode code:
</p>
<ul>
<li> The hyperprivileged processor state register is referred to as
&lsquo;<samp>%hpstate</samp>&rsquo;.
d184 1
a184 1
</li><li> The hyperprivileged trap state register is referred to as &lsquo;<samp>%htstate</samp>&rsquo;.
d186 3
a188 2
</li><li> The hyperprivileged interrupt pending register is referred to as
&lsquo;<samp>%hintp</samp>&rsquo;.
d190 1
a190 2
</li><li> The hyperprivileged trap base address register is referred to as
&lsquo;<samp>%htba</samp>&rsquo;.
d192 2
a193 2
</li><li> The hyperprivileged implementation version register is referred
to as &lsquo;<samp>%hver</samp>&rsquo;.
d195 2
a196 4
</li><li> The hyperprivileged system tick compare register is referred
to as &lsquo;<samp>%hstick_cmpr</samp>&rsquo;.  Note that there is no &lsquo;<samp>%hstick</samp>&rsquo;
register, the normal &lsquo;<samp>%stick</samp>&rsquo; is used.
</li></ul>
d198 2
a199 5
<hr>
<div class="header">
<p>
Next: <a href="Sparc_002dConstants.html#Sparc_002dConstants" accesskey="n" rel="next">Sparc-Constants</a>, Previous: <a href="Sparc_002dChars.html#Sparc_002dChars" accesskey="p" rel="prev">Sparc-Chars</a>, Up: <a href="Sparc_002dSyntax.html#Sparc_002dSyntax" accesskey="u" rel="up">Sparc-Syntax</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>
d201 4
d206 1
a207 2
</body>
</html>
@

