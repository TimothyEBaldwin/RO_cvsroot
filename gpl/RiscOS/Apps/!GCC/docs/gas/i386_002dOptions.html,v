head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.12;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.13;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>i386-Options - Using as</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using as">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="i386_002dDependent.html#i386_002dDependent" title="i386-Dependent">
<link rel="next" href="i386_002dDirectives.html#i386_002dDirectives" title="i386-Directives">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This file documents the GNU Assembler "as".

Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="i386-Options"></a>
<a name="i386_002dOptions"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="i386_002dDirectives.html#i386_002dDirectives">i386-Directives</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="i386_002dDependent.html#i386_002dDependent">i386-Dependent</a>
<hr>
</div>

<h4 class="subsection">9.13.1 Options</h4>

<p><a name="index-options-for-i386-843"></a><a name="index-options-for-x86_002d64-844"></a><a name="index-i386-options-845"></a><a name="index-x86_002d64-options-846"></a>
The i386 version of <code>as</code> has a few machine
dependent options:

     
<a name="index-g_t_0040samp_007b_002d_002d32_007d-option_002c-i386-847"></a>
<a name="index-g_t_0040samp_007b_002d_002d32_007d-option_002c-x86_002d64-848"></a>
<a name="index-g_t_0040samp_007b_002d_002d64_007d-option_002c-i386-849"></a>
<a name="index-g_t_0040samp_007b_002d_002d64_007d-option_002c-x86_002d64-850"></a>
<dl><dt><code>--32 | --64</code><dd>Select the word size, either 32 bits or 64 bits. Selecting 32-bit
implies Intel i386 architecture, while 64-bit implies AMD x86-64
architecture.

     <p>These options are only available with the ELF object file format, and
require that the necessary BFD support has been included (on a 32-bit
platform you have to add &ndash;enable-64-bit-bfd to configure enable 64-bit
usage and use x86-64 as target platform).

     <br><dt><code>-n</code><dd>By default, x86 GAS replaces multiple nop instructions used for
alignment within code sections with multi-byte nop instructions such
as leal 0(%esi,1),%esi.  This switch disables the optimization.

     <p><a name="index-g_t_0040samp_007b_002d_002ddivide_007d-option_002c-i386-851"></a><br><dt><code>--divide</code><dd>On SVR4-derived platforms, the character &lsquo;<samp><span class="samp">/</span></samp>&rsquo; is treated as a comment
character, which means that it cannot be used in expressions.  The
&lsquo;<samp><span class="samp">--divide</span></samp>&rsquo; option turns &lsquo;<samp><span class="samp">/</span></samp>&rsquo; into a normal character.  This does
not disable &lsquo;<samp><span class="samp">/</span></samp>&rsquo; at the beginning of a line starting a comment, or
affect using &lsquo;<samp><span class="samp">#</span></samp>&rsquo; for starting a comment.

     <p><a name="index-g_t_0040samp_007b_002dmarch_003d_007d-option_002c-i386-852"></a><a name="index-g_t_0040samp_007b_002dmarch_003d_007d-option_002c-x86_002d64-853"></a><br><dt><code>-march=</code><var>CPU</var><code>[+</code><var>EXTENSION</var><code>...]</code><dd>This option specifies the target processor.  The assembler will
issue an error message if an attempt is made to assemble an instruction
which will not execute on the target processor.  The following
processor names are recognized:
<code>i8086</code>,
<code>i186</code>,
<code>i286</code>,
<code>i386</code>,
<code>i486</code>,
<code>i586</code>,
<code>i686</code>,
<code>pentium</code>,
<code>pentiumpro</code>,
<code>pentiumii</code>,
<code>pentiumiii</code>,
<code>pentium4</code>,
<code>prescott</code>,
<code>nocona</code>,
<code>core</code>,
<code>core2</code>,
<code>corei7</code>,
<code>l1om</code>,
<code>k6</code>,
<code>k6_2</code>,
<code>athlon</code>,
<code>opteron</code>,
<code>k8</code>,
<code>amdfam10</code>,
<code>bdver1</code>,
<code>generic32</code> and
<code>generic64</code>.

     <p>In addition to the basic instruction set, the assembler can be told to
accept various extension mnemonics.  For example,
<code>-march=i686+sse4+vmx</code> extends <var>i686</var> with <var>sse4</var> and
<var>vmx</var>.  The following extensions are currently supported:
<code>8087</code>,
<code>287</code>,
<code>387</code>,
<code>no87</code>,
<code>mmx</code>,
<code>nommx</code>,
<code>sse</code>,
<code>sse2</code>,
<code>sse3</code>,
<code>ssse3</code>,
<code>sse4.1</code>,
<code>sse4.2</code>,
<code>sse4</code>,
<code>nosse</code>,
<code>avx</code>,
<code>noavx</code>,
<code>vmx</code>,
<code>smx</code>,
<code>xsave</code>,
<code>xsaveopt</code>,
<code>aes</code>,
<code>pclmul</code>,
<code>fsgsbase</code>,
<code>rdrnd</code>,
<code>f16c</code>,
<code>fma</code>,
<code>movbe</code>,
<code>ept</code>,
<code>clflush</code>,
<code>lwp</code>,
<code>fma4</code>,
<code>xop</code>,
<code>syscall</code>,
<code>rdtscp</code>,
<code>3dnow</code>,
<code>3dnowa</code>,
<code>sse4a</code>,
<code>sse5</code>,
<code>svme</code>,
<code>abm</code> and
<code>padlock</code>. 
Note that rather than extending a basic instruction set, the extension
mnemonics starting with <code>no</code> revoke the respective functionality.

     <p>When the <code>.arch</code> directive is used with <samp><span class="option">-march</span></samp>, the
<code>.arch</code> directive will take precedent.

     <p><a name="index-g_t_0040samp_007b_002dmtune_003d_007d-option_002c-i386-854"></a><a name="index-g_t_0040samp_007b_002dmtune_003d_007d-option_002c-x86_002d64-855"></a><br><dt><code>-mtune=</code><var>CPU</var><dd>This option specifies a processor to optimize for. When used in
conjunction with the <samp><span class="option">-march</span></samp> option, only instructions
of the processor specified by the <samp><span class="option">-march</span></samp> option will be
generated.

     <p>Valid <var>CPU</var> values are identical to the processor list of
<samp><span class="option">-march=</span><var>CPU</var></samp>.

     <p><a name="index-g_t_0040samp_007b_002dmsse2avx_007d-option_002c-i386-856"></a><a name="index-g_t_0040samp_007b_002dmsse2avx_007d-option_002c-x86_002d64-857"></a><br><dt><code>-msse2avx</code><dd>This option specifies that the assembler should encode SSE instructions
with VEX prefix.

     <p><a name="index-g_t_0040samp_007b_002dmsse_002dcheck_003d_007d-option_002c-i386-858"></a><a name="index-g_t_0040samp_007b_002dmsse_002dcheck_003d_007d-option_002c-x86_002d64-859"></a><br><dt><code>-msse-check=</code><var>none</var><dt><code>-msse-check=</code><var>warning</var><dt><code>-msse-check=</code><var>error</var><dd>These options control if the assembler should check SSE intructions. 
<samp><span class="option">-msse-check=</span><var>none</var></samp> will make the assembler not to check SSE
instructions,  which is the default.  <samp><span class="option">-msse-check=</span><var>warning</var></samp>
will make the assembler issue a warning for any SSE intruction. 
<samp><span class="option">-msse-check=</span><var>error</var></samp> will make the assembler issue an error
for any SSE intruction.

     <p><a name="index-g_t_0040samp_007b_002dmavxscalar_003d_007d-option_002c-i386-860"></a><a name="index-g_t_0040samp_007b_002dmavxscalar_003d_007d-option_002c-x86_002d64-861"></a><br><dt><code>-mavxscalar=</code><var>128</var><dt><code>-mavxscalar=</code><var>256</var><dd>This options control how the assembler should encode scalar AVX
instructions.  <samp><span class="option">-mavxscalar=</span><var>128</var></samp> will encode scalar
AVX instructions with 128bit vector length, which is the default. 
<samp><span class="option">-mavxscalar=</span><var>256</var></samp> will encode scalar AVX instructions
with 256bit vector length.

     <p><a name="index-g_t_0040samp_007b_002dmmnemonic_003d_007d-option_002c-i386-862"></a><a name="index-g_t_0040samp_007b_002dmmnemonic_003d_007d-option_002c-x86_002d64-863"></a><br><dt><code>-mmnemonic=</code><var>att</var><dt><code>-mmnemonic=</code><var>intel</var><dd>This option specifies instruction mnemonic for matching instructions. 
The <code>.att_mnemonic</code> and <code>.intel_mnemonic</code> directives will
take precedent.

     <p><a name="index-g_t_0040samp_007b_002dmsyntax_003d_007d-option_002c-i386-864"></a><a name="index-g_t_0040samp_007b_002dmsyntax_003d_007d-option_002c-x86_002d64-865"></a><br><dt><code>-msyntax=</code><var>att</var><dt><code>-msyntax=</code><var>intel</var><dd>This option specifies instruction syntax when processing instructions. 
The <code>.att_syntax</code> and <code>.intel_syntax</code> directives will
take precedent.

     <p><a name="index-g_t_0040samp_007b_002dmnaked_002dreg_007d-option_002c-i386-866"></a><a name="index-g_t_0040samp_007b_002dmnaked_002dreg_007d-option_002c-x86_002d64-867"></a><br><dt><code>-mnaked-reg</code><dd>This opetion specifies that registers don't require a &lsquo;<samp><span class="samp">%</span></samp>&rsquo; prefix. 
The <code>.att_syntax</code> and <code>.intel_syntax</code> directives will take precedent.

   </dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 12
a12 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This file documents the GNU Assembler "as".
d14 2
a15 1
Copyright (C) 1991-2013 Free Software Foundation, Inc.
d22 1
a22 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using as: i386-Options</title>
a23 38
<meta name="description" content="Using as: i386-Options">
<meta name="keywords" content="Using as: i386-Options">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="AS-Index.html#AS-Index" rel="index" title="AS Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="i386_002dDependent.html#i386_002dDependent" rel="up" title="i386-Dependent">
<link href="i386_002dDirectives.html#i386_002dDirectives" rel="next" title="i386-Directives">
<link href="i386_002dDependent.html#i386_002dDependent" rel="prev" title="i386-Dependent">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d25 12
a36 3
</style>


d38 3
a40 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a41 1
<div class="header">
d43 3
a45 1
Next: <a href="i386_002dDirectives.html#i386_002dDirectives" accesskey="n" rel="next">i386-Directives</a>, Up: <a href="i386_002dDependent.html#i386_002dDependent" accesskey="u" rel="up">i386-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
a46 3
<hr>
<a name="Options-10"></a>
<h4 class="subsection">9.15.1 Options</h4>
d48 1
a48 4
<a name="index-options-for-i386"></a>
<a name="index-options-for-x86_002d64"></a>
<a name="index-i386-options"></a>
<a name="index-x86_002d64-options"></a>
d50 2
a51 1
<p>The i386 version of <code>as</code> has a few machine
d53 11
a63 16
</p>
<dl compact="compact">
<dd><a name="index-_002d_002d32-option_002c-i386"></a>
<a name="index-_002d_002d32-option_002c-x86_002d64"></a>
<a name="index-_002d_002dx32-option_002c-i386"></a>
<a name="index-_002d_002dx32-option_002c-x86_002d64"></a>
<a name="index-_002d_002d64-option_002c-i386"></a>
<a name="index-_002d_002d64-option_002c-x86_002d64"></a>
</dd>
<dt><code>--32 | --x32 | --64</code></dt>
<dd><p>Select the word size, either 32 bits or 64 bits.  &lsquo;<samp>--32</samp>&rsquo;
implies Intel i386 architecture, while &lsquo;<samp>--x32</samp>&rsquo; and &lsquo;<samp>--64</samp>&rsquo;
imply AMD x86-64 architecture with 32-bit or 64-bit word-size
respectively.
</p>
<p>These options are only available with the ELF object file format, and
d67 2
a68 4
</p>
</dd>
<dt><code>-n</code></dt>
<dd><p>By default, x86 GAS replaces multiple nop instructions used for
d71 2
a72 5
</p>
<a name="index-_002d_002ddivide-option_002c-i386"></a>
</dd>
<dt><code>--divide</code></dt>
<dd><p>On SVR4-derived platforms, the character &lsquo;<samp>/</samp>&rsquo; is treated as a comment
d74 5
a78 9
&lsquo;<samp>--divide</samp>&rsquo; option turns &lsquo;<samp>/</samp>&rsquo; into a normal character.  This does
not disable &lsquo;<samp>/</samp>&rsquo; at the beginning of a line starting a comment, or
affect using &lsquo;<samp>#</samp>&rsquo; for starting a comment.
</p>
<a name="index-_002dmarch_003d-option_002c-i386"></a>
<a name="index-_002dmarch_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-march=<var>CPU</var>[+<var>EXTENSION</var>&hellip;]</code></dt>
<dd><p>This option specifies the target processor.  The assembler will
a99 1
<code>k1om</code>,
a106 4
<code>bdver2</code>,
<code>bdver3</code>,
<code>btver1</code>,
<code>btver2</code>,
d109 2
a110 2
</p>
<p>In addition to the basic instruction set, the assembler can be told to
a128 11
<code>avx2</code>,
<code>adx</code>,
<code>rdseed</code>,
<code>prfchw</code>,
<code>smap</code>,
<code>mpx</code>,
<code>sha</code>,
<code>avx512f</code>,
<code>avx512cd</code>,
<code>avx512er</code>,
<code>avx512pf</code>,
a130 1
<code>vmfunc</code>,
a138 1
<code>bmi2</code>,
a141 4
<code>lzcnt</code>,
<code>hle</code>,
<code>rtm</code>,
<code>invpcid</code>,
a145 1
<code>cx16</code>,
d154 1
a154 1
<code>padlock</code>.
d157 2
a158 2
</p>
<p>When the <code>.arch</code> directive is used with <samp>-march</samp>, the
d160 4
a163 8
</p>
<a name="index-_002dmtune_003d-option_002c-i386"></a>
<a name="index-_002dmtune_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-mtune=<var>CPU</var></code></dt>
<dd><p>This option specifies a processor to optimize for. When used in
conjunction with the <samp>-march</samp> option, only instructions
of the processor specified by the <samp>-march</samp> option will be
d165 5
a169 9
</p>
<p>Valid <var>CPU</var> values are identical to the processor list of
<samp>-march=<var>CPU</var></samp>.
</p>
<a name="index-_002dmsse2avx-option_002c-i386"></a>
<a name="index-_002dmsse2avx-option_002c-x86_002d64"></a>
</dd>
<dt><code>-msse2avx</code></dt>
<dd><p>This option specifies that the assembler should encode SSE instructions
d171 12
a182 23
</p>
<a name="index-_002dmsse_002dcheck_003d-option_002c-i386"></a>
<a name="index-_002dmsse_002dcheck_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-msse-check=<var>none</var></code></dt>
<dt><code>-msse-check=<var>warning</var></code></dt>
<dt><code>-msse-check=<var>error</var></code></dt>
<dd><p>These options control if the assembler should check SSE instructions.
<samp>-msse-check=<var>none</var></samp> will make the assembler not to check SSE
instructions,  which is the default.  <samp>-msse-check=<var>warning</var></samp>
will make the assembler issue a warning for any SSE instruction.
<samp>-msse-check=<var>error</var></samp> will make the assembler issue an error
for any SSE instruction.
</p>
<a name="index-_002dmavxscalar_003d-option_002c-i386"></a>
<a name="index-_002dmavxscalar_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-mavxscalar=<var>128</var></code></dt>
<dt><code>-mavxscalar=<var>256</var></code></dt>
<dd><p>These options control how the assembler should encode scalar AVX
instructions.  <samp>-mavxscalar=<var>128</var></samp> will encode scalar
AVX instructions with 128bit vector length, which is the default.
<samp>-mavxscalar=<var>256</var></samp> will encode scalar AVX instructions
d184 2
a185 31
</p>
<a name="index-_002dmevexlig_003d-option_002c-i386"></a>
<a name="index-_002dmevexlig_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-mevexlig=<var>128</var></code></dt>
<dt><code>-mevexlig=<var>256</var></code></dt>
<dt><code>-mevexlig=<var>512</var></code></dt>
<dd><p>These options control how the assembler should encode length-ignored
(LIG) EVEX instructions.  <samp>-mevexlig=<var>128</var></samp> will encode LIG
EVEX instructions with 128bit vector length, which is the default.
<samp>-mevexlig=<var>256</var></samp> and <samp>-mevexlig=<var>512</var></samp> will
encode LIG EVEX instructions with 256bit and 512bit vector length,
respectively.
</p>
<a name="index-_002dmevexwig_003d-option_002c-i386"></a>
<a name="index-_002dmevexwig_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-mevexwig=<var>0</var></code></dt>
<dt><code>-mevexwig=<var>1</var></code></dt>
<dd><p>These options control how the assembler should encode w-ignored (WIG)
EVEX instructions.  <samp>-mevexwig=<var>0</var></samp> will encode WIG
EVEX instructions with evex.w = 0, which is the default.
<samp>-mevexwig=<var>1</var></samp> will encode WIG EVEX instructions with
evex.w = 1.
</p>
<a name="index-_002dmmnemonic_003d-option_002c-i386"></a>
<a name="index-_002dmmnemonic_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-mmnemonic=<var>att</var></code></dt>
<dt><code>-mmnemonic=<var>intel</var></code></dt>
<dd><p>This option specifies instruction mnemonic for matching instructions.
d188 2
a189 7
</p>
<a name="index-_002dmsyntax_003d-option_002c-i386"></a>
<a name="index-_002dmsyntax_003d-option_002c-x86_002d64"></a>
</dd>
<dt><code>-msyntax=<var>att</var></code></dt>
<dt><code>-msyntax=<var>intel</var></code></dt>
<dd><p>This option specifies instruction syntax when processing instructions.
d192 2
a193 6
</p>
<a name="index-_002dmnaked_002dreg-option_002c-i386"></a>
<a name="index-_002dmnaked_002dreg-option_002c-x86_002d64"></a>
</dd>
<dt><code>-mnaked-reg</code></dt>
<dd><p>This opetion specifies that registers don&rsquo;t require a &lsquo;<samp>%</samp>&rsquo; prefix.
a194 16
</p>
<a name="index-_002dmadd_002dbnd_002dprefix-option_002c-i386"></a>
<a name="index-_002dmadd_002dbnd_002dprefix-option_002c-x86_002d64"></a>
</dd>
<dt><code>-madd-bnd-prefix</code></dt>
<dd><p>This option forces the assembler to add BND prefix to all branches, even
if such prefix was not explicitly specified in the source code.
</p>
</dd>
</dl>

<hr>
<div class="header">
<p>
Next: <a href="i386_002dDirectives.html#i386_002dDirectives" accesskey="n" rel="next">i386-Directives</a>, Up: <a href="i386_002dDependent.html#i386_002dDependent" accesskey="u" rel="up">i386-Dependent</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="AS-Index.html#AS-Index" title="Index" rel="index">Index</a>]</p>
</div>
d196 1
d198 1
a199 2
</body>
</html>
@

