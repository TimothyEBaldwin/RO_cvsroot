head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.17;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Traditional warnings - The C Preprocessor</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="The C Preprocessor">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Traditional-Mode.html#Traditional-Mode" title="Traditional Mode">
<link rel="prev" href="Traditional-miscellany.html#Traditional-miscellany" title="Traditional miscellany">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation.  A copy of
the license is included in the
section entitled ``GNU Free Documentation License''.

This manual contains no Invariant Sections.  The Front-Cover Texts are
(a) (see below), and the Back-Cover Texts are (b) (see below).

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.
-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Traditional-warnings"></a>
<p>
Previous:&nbsp;<a rel="previous" accesskey="p" href="Traditional-miscellany.html#Traditional-miscellany">Traditional miscellany</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Traditional-Mode.html#Traditional-Mode">Traditional Mode</a>
<hr>
</div>

<h3 class="section">10.4 Traditional warnings</h3>

<p>You can request warnings about features that did not exist, or worked
differently, in traditional C with the <samp><span class="option">-Wtraditional</span></samp> option. 
GCC does not warn about features of ISO C which you must use when you
are using a conforming compiler, such as the &lsquo;<samp><span class="samp">#</span></samp>&rsquo; and &lsquo;<samp><span class="samp">##</span></samp>&rsquo;
operators.

   <p>Presently <samp><span class="option">-Wtraditional</span></samp> warns about:

     <ul>
<li>Macro parameters that appear within string literals in the macro body. 
In traditional C macro replacement takes place within string literals,
but does not in ISO C.

     <li>In traditional C, some preprocessor directives did not exist. 
Traditional preprocessors would only consider a line to be a directive
if the &lsquo;<samp><span class="samp">#</span></samp>&rsquo; appeared in column 1 on the line.  Therefore
<samp><span class="option">-Wtraditional</span></samp> warns about directives that traditional C
understands but would ignore because the &lsquo;<samp><span class="samp">#</span></samp>&rsquo; does not appear as the
first character on the line.  It also suggests you hide directives like
&lsquo;<samp><span class="samp">#pragma</span></samp>&rsquo; not understood by traditional C by indenting them.  Some
traditional implementations would not recognize &lsquo;<samp><span class="samp">#elif</span></samp>&rsquo;, so it
suggests avoiding it altogether.

     <li>A function-like macro that appears without an argument list.  In some
traditional preprocessors this was an error.  In ISO C it merely means
that the macro is not expanded.

     <li>The unary plus operator.  This did not exist in traditional C.

     <li>The &lsquo;<samp><span class="samp">U</span></samp>&rsquo; and &lsquo;<samp><span class="samp">LL</span></samp>&rsquo; integer constant suffixes, which were not
available in traditional C.  (Traditional C does support the &lsquo;<samp><span class="samp">L</span></samp>&rsquo;
suffix for simple long integer constants.)  You are not warned about
uses of these suffixes in macros defined in system headers.  For
instance, <code>UINT_MAX</code> may well be defined as <code>4294967295U</code>, but
you will not be warned if you use <code>UINT_MAX</code>.

     <p>You can usually avoid the warning, and the related warning about
constants which are so large that they are unsigned, by writing the
integer constant in question in hexadecimal, with no U suffix.  Take
care, though, because this gives the wrong result in exotic cases. 
</ul>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
2008, 2009, 2010, 2011
d17 1
a17 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d20 1
a20 1
section entitled "GNU Free Documentation License".
d27 1
a27 1
A GNU Manual
d31 1
a31 1
You have freedom to copy and modify this GNU Manual, like GNU
d33 1
a33 43
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>The C Preprocessor: Traditional warnings</title>

<meta name="description" content="The C Preprocessor: Traditional warnings">
<meta name="keywords" content="The C Preprocessor: Traditional warnings">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Index-of-Directives.html#Index-of-Directives" rel="index" title="Index of Directives">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Traditional-Mode.html#Traditional-Mode" rel="up" title="Traditional Mode">
<link href="Implementation-Details.html#Implementation-Details" rel="next" title="Implementation Details">
<link href="Traditional-miscellany.html#Traditional-miscellany" rel="prev" title="Traditional miscellany">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d35 12
a46 3
</style>


d48 2
a49 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a50 1
<div class="header">
d52 3
a54 1
Previous: <a href="Traditional-miscellany.html#Traditional-miscellany" accesskey="p" rel="prev">Traditional miscellany</a>, Up: <a href="Traditional-Mode.html#Traditional-Mode" accesskey="u" rel="up">Traditional Mode</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Index-of-Directives.html#Index-of-Directives" title="Index" rel="index">Index</a>]</p>
d56 1
a56 2
<hr>
<a name="Traditional-warnings-1"></a>
d58 1
d60 1
a60 1
differently, in traditional C with the <samp>-Wtraditional</samp> option.
d62 1
a62 1
are using a conforming compiler, such as the &lsquo;<samp>#</samp>&rsquo; and &lsquo;<samp>##</samp>&rsquo;
d64 5
a68 5
</p>
<p>Presently <samp>-Wtraditional</samp> warns about:
</p>
<ul>
<li> Macro parameters that appear within string literals in the macro body.
d72 1
a72 1
</li><li> In traditional C, some preprocessor directives did not exist.
d74 3
a76 3
if the &lsquo;<samp>#</samp>&rsquo; appeared in column 1 on the line.  Therefore
<samp>-Wtraditional</samp> warns about directives that traditional C
understands but would ignore because the &lsquo;<samp>#</samp>&rsquo; does not appear as the
d78 2
a79 2
&lsquo;<samp>#pragma</samp>&rsquo; not understood by traditional C by indenting them.  Some
traditional implementations would not recognize &lsquo;<samp>#elif</samp>&rsquo;, so it
d82 1
a82 1
</li><li> A function-like macro that appears without an argument list.  In some
d86 1
a86 1
</li><li> The unary plus operator.  This did not exist in traditional C.
d88 2
a89 2
</li><li> The &lsquo;<samp>U</samp>&rsquo; and &lsquo;<samp>LL</samp>&rsquo; integer constant suffixes, which were not
available in traditional C.  (Traditional C does support the &lsquo;<samp>L</samp>&rsquo;
d95 1
a95 1
<p>You can usually avoid the warning, and the related warning about
d98 2
a99 9
care, though, because this gives the wrong result in exotic cases.
</p></li></ul>

<hr>
<div class="header">
<p>
Previous: <a href="Traditional-miscellany.html#Traditional-miscellany" accesskey="p" rel="prev">Traditional miscellany</a>, Up: <a href="Traditional-Mode.html#Traditional-Mode" accesskey="u" rel="up">Traditional Mode</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Index-of-Directives.html#Index-of-Directives" title="Index" rel="index">Index</a>]</p>
</div>

d101 1
a102 2
</body>
</html>
@

