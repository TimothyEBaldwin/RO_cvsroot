head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.17;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Self-Referential Macros - The C Preprocessor</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="The C Preprocessor">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Macro-Pitfalls.html#Macro-Pitfalls" title="Macro Pitfalls">
<link rel="prev" href="Duplication-of-Side-Effects.html#Duplication-of-Side-Effects" title="Duplication of Side Effects">
<link rel="next" href="Argument-Prescan.html#Argument-Prescan" title="Argument Prescan">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation.  A copy of
the license is included in the
section entitled ``GNU Free Documentation License''.

This manual contains no Invariant Sections.  The Front-Cover Texts are
(a) (see below), and the Back-Cover Texts are (b) (see below).

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.
-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Self-Referential-Macros"></a>
<a name="Self_002dReferential-Macros"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Argument-Prescan.html#Argument-Prescan">Argument Prescan</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Duplication-of-Side-Effects.html#Duplication-of-Side-Effects">Duplication of Side Effects</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Macro-Pitfalls.html#Macro-Pitfalls">Macro Pitfalls</a>
<hr>
</div>

<h4 class="subsection">3.10.5 Self-Referential Macros</h4>

<p><a name="index-self_002dreference-77"></a>
A <dfn>self-referential</dfn> macro is one whose name appears in its
definition.  Recall that all macro definitions are rescanned for more
macros to replace.  If the self-reference were considered a use of the
macro, it would produce an infinitely large expansion.  To prevent this,
the self-reference is not considered a macro call.  It is passed into
the preprocessor output unchanged.  Consider an example:

<pre class="smallexample">     #define foo (4 + foo)
</pre>
   <p class="noindent">where <code>foo</code> is also a variable in your program.

   <p>Following the ordinary rules, each reference to <code>foo</code> will expand
into <code>(4 + foo)</code>; then this will be rescanned and will expand into
<code>(4 + (4 + foo))</code>; and so on until the computer runs out of memory.

   <p>The self-reference rule cuts this process short after one step, at
<code>(4 + foo)</code>.  Therefore, this macro definition has the possibly
useful effect of causing the program to add 4 to the value of <code>foo</code>
wherever <code>foo</code> is referred to.

   <p>In most cases, it is a bad idea to take advantage of this feature.  A
person reading the program who sees that <code>foo</code> is a variable will
not expect that it is a macro as well.  The reader will come across the
identifier <code>foo</code> in the program and think its value should be that
of the variable <code>foo</code>, whereas in fact the value is four greater.

   <p>One common, useful use of self-reference is to create a macro which
expands to itself.  If you write

<pre class="smallexample">     #define EPERM EPERM
</pre>
   <p class="noindent">then the macro <code>EPERM</code> expands to <code>EPERM</code>.  Effectively, it is
left alone by the preprocessor whenever it's used in running text.  You
can tell that it's a macro with &lsquo;<samp><span class="samp">#ifdef</span></samp>&rsquo;.  You might do this if you
want to define numeric constants with an <code>enum</code>, but have
&lsquo;<samp><span class="samp">#ifdef</span></samp>&rsquo; be true for each constant.

   <p>If a macro <code>x</code> expands to use a macro <code>y</code>, and the expansion of
<code>y</code> refers to the macro <code>x</code>, that is an <dfn>indirect
self-reference</dfn> of <code>x</code>.  <code>x</code> is not expanded in this case
either.  Thus, if we have

<pre class="smallexample">     #define x (4 + y)
     #define y (2 * x)
</pre>
   <p class="noindent">then <code>x</code> and <code>y</code> expand as follows:

<pre class="smallexample">     x    ==&gt; (4 + y)
          ==&gt; (4 + (2 * x))
     
     y    ==&gt; (2 * x)
          ==&gt; (2 * (4 + y))
</pre>
   <p class="noindent">Each macro is expanded when it appears in the definition of the other
macro, but not when it indirectly appears in its own definition.

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 14
a14 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
2008, 2009, 2010, 2011
d18 1
a18 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d21 1
a21 1
section entitled "GNU Free Documentation License".
d28 1
a28 1
A GNU Manual
d32 1
a32 1
You have freedom to copy and modify this GNU Manual, like GNU
d34 1
a34 43
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>The C Preprocessor: Self-Referential Macros</title>

<meta name="description" content="The C Preprocessor: Self-Referential Macros">
<meta name="keywords" content="The C Preprocessor: Self-Referential Macros">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Index-of-Directives.html#Index-of-Directives" rel="index" title="Index of Directives">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Macro-Pitfalls.html#Macro-Pitfalls" rel="up" title="Macro Pitfalls">
<link href="Argument-Prescan.html#Argument-Prescan" rel="next" title="Argument Prescan">
<link href="Duplication-of-Side-Effects.html#Duplication-of-Side-Effects" rel="prev" title="Duplication of Side Effects">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d36 12
a47 3
</style>


d49 3
a51 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a52 1
<div class="header">
d54 4
a57 1
Next: <a href="Argument-Prescan.html#Argument-Prescan" accesskey="n" rel="next">Argument Prescan</a>, Previous: <a href="Duplication-of-Side-Effects.html#Duplication-of-Side-Effects" accesskey="p" rel="prev">Duplication of Side Effects</a>, Up: <a href="Macro-Pitfalls.html#Macro-Pitfalls" accesskey="u" rel="up">Macro Pitfalls</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Index-of-Directives.html#Index-of-Directives" title="Index" rel="index">Index</a>]</p>
d59 1
a59 2
<hr>
<a name="Self_002dReferential-Macros-1"></a>
a60 1
<a name="index-self_002dreference"></a>
d62 2
a63 1
<p>A <em>self-referential</em> macro is one whose name appears in its
d69 6
a74 8
</p>
<div class="smallexample">
<pre class="smallexample">#define foo (4 + foo)
</pre></div>

<p>where <code>foo</code> is also a variable in your program.
</p>
<p>Following the ordinary rules, each reference to <code>foo</code> will expand
d77 2
a78 2
</p>
<p>The self-reference rule cuts this process short after one step, at
d82 2
a83 2
</p>
<p>In most cases, it is a bad idea to take advantage of this feature.  A
d88 2
a89 2
</p>
<p>One common, useful use of self-reference is to create a macro which
d91 6
a96 8
</p>
<div class="smallexample">
<pre class="smallexample">#define EPERM EPERM
</pre></div>

<p>then the macro <code>EPERM</code> expands to <code>EPERM</code>.  Effectively, it is
left alone by the preprocessor whenever it&rsquo;s used in running text.  You
can tell that it&rsquo;s a macro with &lsquo;<samp>#ifdef</samp>&rsquo;.  You might do this if you
d98 5
a102 5
&lsquo;<samp>#ifdef</samp>&rsquo; be true for each constant.
</p>
<p>If a macro <code>x</code> expands to use a macro <code>y</code>, and the expansion of
<code>y</code> refers to the macro <code>x</code>, that is an <em>indirect
self-reference</em> of <code>x</code>.  <code>x</code> is not expanded in this case
a103 15
</p>
<div class="smallexample">
<pre class="smallexample">#define x (4 + y)
#define y (2 * x)
</pre></div>

<p>then <code>x</code> and <code>y</code> expand as follows:
</p>
<div class="smallexample">
<pre class="smallexample">x    &rarr; (4 + y)
     &rarr; (4 + (2 * x))

y    &rarr; (2 * x)
     &rarr; (2 * (4 + y))
</pre></div>
d105 12
a116 1
<p>Each macro is expanded when it appears in the definition of the other
a117 7
</p>
<hr>
<div class="header">
<p>
Next: <a href="Argument-Prescan.html#Argument-Prescan" accesskey="n" rel="next">Argument Prescan</a>, Previous: <a href="Duplication-of-Side-Effects.html#Duplication-of-Side-Effects" accesskey="p" rel="prev">Duplication of Side Effects</a>, Up: <a href="Macro-Pitfalls.html#Macro-Pitfalls" accesskey="u" rel="up">Macro Pitfalls</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Index-of-Directives.html#Index-of-Directives" title="Index" rel="index">Index</a>]</p>
</div>

d119 1
a120 2
</body>
</html>
@

