head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.17;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>C++ Named Operators - The C Preprocessor</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="The C Preprocessor">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Predefined-Macros.html#Predefined-Macros" title="Predefined Macros">
<link rel="prev" href="System_002dspecific-Predefined-Macros.html#System_002dspecific-Predefined-Macros" title="System-specific Predefined Macros">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation.  A copy of
the license is included in the
section entitled ``GNU Free Documentation License''.

This manual contains no Invariant Sections.  The Front-Cover Texts are
(a) (see below), and the Back-Cover Texts are (b) (see below).

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.
-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="C++-Named-Operators"></a>
<a name="C_002b_002b-Named-Operators"></a>
<p>
Previous:&nbsp;<a rel="previous" accesskey="p" href="System_002dspecific-Predefined-Macros.html#System_002dspecific-Predefined-Macros">System-specific Predefined Macros</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Predefined-Macros.html#Predefined-Macros">Predefined Macros</a>
<hr>
</div>

<h4 class="subsection">3.7.4 C++ Named Operators</h4>

<p><a name="index-named-operators-64"></a><a name="index-C_002b_002b-named-operators-65"></a><a name="index-iso646_002eh-66"></a>
In C++, there are eleven keywords which are simply alternate spellings
of operators normally written with punctuation.  These keywords are
treated as such even in the preprocessor.  They function as operators in
&lsquo;<samp><span class="samp">#if</span></samp>&rsquo;, and they cannot be defined as macros or poisoned.  In C, you
can request that those keywords take their C++ meaning by including
<samp><span class="file">iso646.h</span></samp>.  That header defines each one as a normal object-like
macro expanding to the appropriate punctuator.

   <p>These are the named operators and their corresponding punctuators:

   <p><table summary=""><tr align="left"><td valign="top">Named Operator </td><td valign="top">Punctuator
<br></td></tr><tr align="left"><td valign="top"><code>and</code>    </td><td valign="top"><code>&amp;&amp;</code>
<br></td></tr><tr align="left"><td valign="top"><code>and_eq</code> </td><td valign="top"><code>&amp;=</code>
<br></td></tr><tr align="left"><td valign="top"><code>bitand</code> </td><td valign="top"><code>&amp;</code>
<br></td></tr><tr align="left"><td valign="top"><code>bitor</code>  </td><td valign="top"><code>|</code>
<br></td></tr><tr align="left"><td valign="top"><code>compl</code>  </td><td valign="top"><code>~</code>
<br></td></tr><tr align="left"><td valign="top"><code>not</code>    </td><td valign="top"><code>!</code>
<br></td></tr><tr align="left"><td valign="top"><code>not_eq</code> </td><td valign="top"><code>!=</code>
<br></td></tr><tr align="left"><td valign="top"><code>or</code>     </td><td valign="top"><code>||</code>
<br></td></tr><tr align="left"><td valign="top"><code>or_eq</code>  </td><td valign="top"><code>|=</code>
<br></td></tr><tr align="left"><td valign="top"><code>xor</code>    </td><td valign="top"><code>^</code>
<br></td></tr><tr align="left"><td valign="top"><code>xor_eq</code> </td><td valign="top"><code>^=</code>
   <br></td></tr></table>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
2008, 2009, 2010, 2011
d17 1
a17 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d20 1
a20 1
section entitled "GNU Free Documentation License".
d27 1
a27 1
A GNU Manual
d31 1
a31 1
You have freedom to copy and modify this GNU Manual, like GNU
d33 1
a33 43
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>The C Preprocessor: C++ Named Operators</title>

<meta name="description" content="The C Preprocessor: C++ Named Operators">
<meta name="keywords" content="The C Preprocessor: C++ Named Operators">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Index-of-Directives.html#Index-of-Directives" rel="index" title="Index of Directives">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Predefined-Macros.html#Predefined-Macros" rel="up" title="Predefined Macros">
<link href="Undefining-and-Redefining-Macros.html#Undefining-and-Redefining-Macros" rel="next" title="Undefining and Redefining Macros">
<link href="System_002dspecific-Predefined-Macros.html#System_002dspecific-Predefined-Macros" rel="prev" title="System-specific Predefined Macros">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d35 12
a46 3
</style>


d48 3
a50 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a51 1
<div class="header">
d53 3
a55 1
Previous: <a href="System_002dspecific-Predefined-Macros.html#System_002dspecific-Predefined-Macros" accesskey="p" rel="prev">System-specific Predefined Macros</a>, Up: <a href="Predefined-Macros.html#Predefined-Macros" accesskey="u" rel="up">Predefined Macros</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Index-of-Directives.html#Index-of-Directives" title="Index" rel="index">Index</a>]</p>
d57 1
a57 2
<hr>
<a name="C_002b_002b-Named-Operators-1"></a>
a58 3
<a name="index-named-operators"></a>
<a name="index-C_002b_002b-named-operators"></a>
<a name="index-iso646_002eh"></a>
d60 2
a61 1
<p>In C++, there are eleven keywords which are simply alternate spellings
d64 1
a64 1
&lsquo;<samp>#if</samp>&rsquo;, and they cannot be defined as macros or poisoned.  In C, you
d66 1
a66 1
<samp>iso646.h</samp>.  That header defines each one as a normal object-like
a67 17
</p>
<p>These are the named operators and their corresponding punctuators:
</p>
<table>
<tr><td>Named Operator</td><td>Punctuator</td></tr>
<tr><td><code>and</code></td><td><code>&amp;&amp;</code></td></tr>
<tr><td><code>and_eq</code></td><td><code>&amp;=</code></td></tr>
<tr><td><code>bitand</code></td><td><code>&amp;</code></td></tr>
<tr><td><code>bitor</code></td><td><code>|</code></td></tr>
<tr><td><code>compl</code></td><td><code>~</code></td></tr>
<tr><td><code>not</code></td><td><code>!</code></td></tr>
<tr><td><code>not_eq</code></td><td><code>!=</code></td></tr>
<tr><td><code>or</code></td><td><code>||</code></td></tr>
<tr><td><code>or_eq</code></td><td><code>|=</code></td></tr>
<tr><td><code>xor</code></td><td><code>^</code></td></tr>
<tr><td><code>xor_eq</code></td><td><code>^=</code></td></tr>
</table>
d69 1
d71 13
d85 1
a86 2
</body>
</html>
@

