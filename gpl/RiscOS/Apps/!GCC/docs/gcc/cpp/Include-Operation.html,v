head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.14;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.17;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Include Operation - The C Preprocessor</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="The C Preprocessor">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Header-Files.html#Header-Files" title="Header Files">
<link rel="prev" href="Include-Syntax.html#Include-Syntax" title="Include Syntax">
<link rel="next" href="Search-Path.html#Search-Path" title="Search Path">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation.  A copy of
the license is included in the
section entitled ``GNU Free Documentation License''.

This manual contains no Invariant Sections.  The Front-Cover Texts are
(a) (see below), and the Back-Cover Texts are (b) (see below).

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.
-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Include-Operation"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Search-Path.html#Search-Path">Search Path</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Include-Syntax.html#Include-Syntax">Include Syntax</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Header-Files.html#Header-Files">Header Files</a>
<hr>
</div>

<h3 class="section">2.2 Include Operation</h3>

<p>The &lsquo;<samp><span class="samp">#include</span></samp>&rsquo; directive works by directing the C preprocessor to
scan the specified file as input before continuing with the rest of the
current file.  The output from the preprocessor contains the output
already generated, followed by the output resulting from the included
file, followed by the output that comes from the text after the
&lsquo;<samp><span class="samp">#include</span></samp>&rsquo; directive.  For example, if you have a header file
<samp><span class="file">header.h</span></samp> as follows,

<pre class="smallexample">     char *test (void);
</pre>
   <p class="noindent">and a main program called <samp><span class="file">program.c</span></samp> that uses the header file,
like this,

<pre class="smallexample">     int x;
     #include "header.h"
     
     int
     main (void)
     {
       puts (test ());
     }
</pre>
   <p class="noindent">the compiler will see the same token stream as it would if
<samp><span class="file">program.c</span></samp> read

<pre class="smallexample">     int x;
     char *test (void);
     
     int
     main (void)
     {
       puts (test ());
     }
</pre>
   <p>Included files are not limited to declarations and macro definitions;
those are merely the typical uses.  Any fragment of a C program can be
included from another file.  The include file could even contain the
beginning of a statement that is concluded in the containing file, or
the end of a statement that was started in the including file.  However,
an included file must consist of complete tokens.  Comments and string
literals which have not been closed by the end of an included file are
invalid.  For error recovery, they are considered to end at the end of
the file.

   <p>To avoid confusion, it is best if header files contain only complete
syntactic units&mdash;function declarations or definitions, type
declarations, etc.

   <p>The line following the &lsquo;<samp><span class="samp">#include</span></samp>&rsquo; directive is always treated as a
separate line by the C preprocessor, even if the included file lacks a
final newline.

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 14
a14 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
2008, 2009, 2010, 2011
d18 1
a18 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d21 1
a21 1
section entitled "GNU Free Documentation License".
d28 1
a28 1
A GNU Manual
d32 1
a32 1
You have freedom to copy and modify this GNU Manual, like GNU
d34 1
a34 43
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>The C Preprocessor: Include Operation</title>

<meta name="description" content="The C Preprocessor: Include Operation">
<meta name="keywords" content="The C Preprocessor: Include Operation">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Index-of-Directives.html#Index-of-Directives" rel="index" title="Index of Directives">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Header-Files.html#Header-Files" rel="up" title="Header Files">
<link href="Search-Path.html#Search-Path" rel="next" title="Search Path">
<link href="Include-Syntax.html#Include-Syntax" rel="prev" title="Include Syntax">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d36 12
a47 3
</style>


d49 2
a50 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a51 1
<div class="header">
d53 4
a56 1
Next: <a href="Search-Path.html#Search-Path" accesskey="n" rel="next">Search Path</a>, Previous: <a href="Include-Syntax.html#Include-Syntax" accesskey="p" rel="prev">Include Syntax</a>, Up: <a href="Header-Files.html#Header-Files" accesskey="u" rel="up">Header Files</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Index-of-Directives.html#Index-of-Directives" title="Index" rel="index">Index</a>]</p>
d58 1
a58 2
<hr>
<a name="Include-Operation-1"></a>
d61 1
a61 1
<p>The &lsquo;<samp>#include</samp>&rsquo; directive works by directing the C preprocessor to
d66 2
a67 6
&lsquo;<samp>#include</samp>&rsquo; directive.  For example, if you have a header file
<samp>header.h</samp> as follows,
</p>
<div class="smallexample">
<pre class="smallexample">char *test (void);
</pre></div>
d69 3
a71 1
<p>and a main program called <samp>program.c</samp> that uses the header file,
a72 25
</p>
<div class="smallexample">
<pre class="smallexample">int x;
#include &quot;header.h&quot;

int
main (void)
{
  puts (test ());
}
</pre></div>

<p>the compiler will see the same token stream as it would if
<samp>program.c</samp> read
</p>
<div class="smallexample">
<pre class="smallexample">int x;
char *test (void);

int
main (void)
{
  puts (test ());
}
</pre></div>
d74 22
a95 1
<p>Included files are not limited to declarations and macro definitions;
d104 2
a105 2
</p>
<p>To avoid confusion, it is best if header files contain only complete
d108 2
a109 2
</p>
<p>The line following the &lsquo;<samp>#include</samp>&rsquo; directive is always treated as a
a111 7
</p>
<hr>
<div class="header">
<p>
Next: <a href="Search-Path.html#Search-Path" accesskey="n" rel="next">Search Path</a>, Previous: <a href="Include-Syntax.html#Include-Syntax" accesskey="p" rel="prev">Include Syntax</a>, Up: <a href="Header-Files.html#Header-Files" accesskey="u" rel="up">Header Files</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Index-of-Directives.html#Index-of-Directives" title="Index" rel="index">Index</a>]</p>
</div>

d113 1
a114 2
</body>
</html>
@

