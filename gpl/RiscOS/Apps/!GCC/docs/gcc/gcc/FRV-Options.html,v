head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.19;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.19;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.27;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>FRV Options - Using the GNU Compiler Collection (GCC)</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using the GNU Compiler Collection (GCC)">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Submodel-Options.html#Submodel-Options" title="Submodel Options">
<link rel="prev" href="DEC-Alpha_002fVMS-Options.html#DEC-Alpha_002fVMS-Options" title="DEC Alpha/VMS Options">
<link rel="next" href="H8_002f300-Options.html#H8_002f300-Options" title="H8/300 Options">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with the
Invariant Sections being ``GNU General Public License'' and ``Funding
Free Software'', the Front-Cover texts being (a) (see below), and with
the Back-Cover Texts being (b) (see below).  A copy of the license is
included in the section entitled ``GNU Free Documentation License''.

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="FRV-Options"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="H8_002f300-Options.html#H8_002f300-Options">H8/300 Options</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="DEC-Alpha_002fVMS-Options.html#DEC-Alpha_002fVMS-Options">DEC Alpha/VMS Options</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Submodel-Options.html#Submodel-Options">Submodel Options</a>
<hr>
</div>

<h4 class="subsection">3.17.10 FRV Options</h4>

<p><a name="index-FRV-Options-926"></a>
     <dl>
<dt><code>-mgpr-32</code><dd><a name="index-mgpr_002d32-927"></a>
Only use the first 32 general purpose registers.

     <br><dt><code>-mgpr-64</code><dd><a name="index-mgpr_002d64-928"></a>
Use all 64 general purpose registers.

     <br><dt><code>-mfpr-32</code><dd><a name="index-mfpr_002d32-929"></a>
Use only the first 32 floating point registers.

     <br><dt><code>-mfpr-64</code><dd><a name="index-mfpr_002d64-930"></a>
Use all 64 floating point registers

     <br><dt><code>-mhard-float</code><dd><a name="index-mhard_002dfloat-931"></a>
Use hardware instructions for floating point operations.

     <br><dt><code>-msoft-float</code><dd><a name="index-msoft_002dfloat-932"></a>
Use library routines for floating point operations.

     <br><dt><code>-malloc-cc</code><dd><a name="index-malloc_002dcc-933"></a>
Dynamically allocate condition code registers.

     <br><dt><code>-mfixed-cc</code><dd><a name="index-mfixed_002dcc-934"></a>
Do not try to dynamically allocate condition code registers, only
use <code>icc0</code> and <code>fcc0</code>.

     <br><dt><code>-mdword</code><dd><a name="index-mdword-935"></a>
Change ABI to use double word insns.

     <br><dt><code>-mno-dword</code><dd><a name="index-mno_002ddword-936"></a>
Do not use double word instructions.

     <br><dt><code>-mdouble</code><dd><a name="index-mdouble-937"></a>
Use floating point double instructions.

     <br><dt><code>-mno-double</code><dd><a name="index-mno_002ddouble-938"></a>
Do not use floating point double instructions.

     <br><dt><code>-mmedia</code><dd><a name="index-mmedia-939"></a>
Use media instructions.

     <br><dt><code>-mno-media</code><dd><a name="index-mno_002dmedia-940"></a>
Do not use media instructions.

     <br><dt><code>-mmuladd</code><dd><a name="index-mmuladd-941"></a>
Use multiply and add/subtract instructions.

     <br><dt><code>-mno-muladd</code><dd><a name="index-mno_002dmuladd-942"></a>
Do not use multiply and add/subtract instructions.

     <br><dt><code>-mfdpic</code><dd><a name="index-mfdpic-943"></a>
Select the FDPIC ABI, that uses function descriptors to represent
pointers to functions.  Without any PIC/PIE-related options, it
implies <samp><span class="option">-fPIE</span></samp>.  With <samp><span class="option">-fpic</span></samp> or <samp><span class="option">-fpie</span></samp>, it
assumes GOT entries and small data are within a 12-bit range from the
GOT base address; with <samp><span class="option">-fPIC</span></samp> or <samp><span class="option">-fPIE</span></samp>, GOT offsets
are computed with 32 bits.

     <br><dt><code>-minline-plt</code><dd><a name="index-minline_002dplt-944"></a>
Enable inlining of PLT entries in function calls to functions that are
not known to bind locally.  It has no effect without <samp><span class="option">-mfdpic</span></samp>. 
It's enabled by default if optimizing for speed and compiling for
shared libraries (i.e., <samp><span class="option">-fPIC</span></samp> or <samp><span class="option">-fpic</span></samp>), or when an
optimization option such as <samp><span class="option">-O3</span></samp> or above is present in the
command line.

     <br><dt><code>-mTLS</code><dd><a name="index-TLS-945"></a>
Assume a large TLS segment when generating thread-local code.

     <br><dt><code>-mtls</code><dd><a name="index-tls-946"></a>
Do not assume a large TLS segment when generating thread-local code.

     <br><dt><code>-mgprel-ro</code><dd><a name="index-mgprel_002dro-947"></a>
Enable the use of <code>GPREL</code> relocations in the FDPIC ABI for data
that is known to be in read-only sections.  It's enabled by default,
except for <samp><span class="option">-fpic</span></samp> or <samp><span class="option">-fpie</span></samp>: even though it may help
make the global offset table smaller, it trades 1 instruction for 4. 
With <samp><span class="option">-fPIC</span></samp> or <samp><span class="option">-fPIE</span></samp>, it trades 3 instructions for 4,
one of which may be shared by multiple symbols, and it avoids the need
for a GOT entry for the referenced symbol, so it's more likely to be a
win.  If it is not, <samp><span class="option">-mno-gprel-ro</span></samp> can be used to disable it.

     <br><dt><code>-multilib-library-pic</code><dd><a name="index-multilib_002dlibrary_002dpic-948"></a>
Link with the (library, not FD) pic libraries.  It's implied by
<samp><span class="option">-mlibrary-pic</span></samp>, as well as by <samp><span class="option">-fPIC</span></samp> and
<samp><span class="option">-fpic</span></samp> without <samp><span class="option">-mfdpic</span></samp>.  You should never have to use
it explicitly.

     <br><dt><code>-mlinked-fp</code><dd><a name="index-mlinked_002dfp-949"></a>
Follow the EABI requirement of always creating a frame pointer whenever
a stack frame is allocated.  This option is enabled by default and can
be disabled with <samp><span class="option">-mno-linked-fp</span></samp>.

     <br><dt><code>-mlong-calls</code><dd><a name="index-mlong_002dcalls-950"></a>
Use indirect addressing to call functions outside the current
compilation unit.  This allows the functions to be placed anywhere
within the 32-bit address space.

     <br><dt><code>-malign-labels</code><dd><a name="index-malign_002dlabels-951"></a>
Try to align labels to an 8-byte boundary by inserting nops into the
previous packet.  This option only has an effect when VLIW packing
is enabled.  It doesn't create new packets; it merely adds nops to
existing ones.

     <br><dt><code>-mlibrary-pic</code><dd><a name="index-mlibrary_002dpic-952"></a>
Generate position-independent EABI code.

     <br><dt><code>-macc-4</code><dd><a name="index-macc_002d4-953"></a>
Use only the first four media accumulator registers.

     <br><dt><code>-macc-8</code><dd><a name="index-macc_002d8-954"></a>
Use all eight media accumulator registers.

     <br><dt><code>-mpack</code><dd><a name="index-mpack-955"></a>
Pack VLIW instructions.

     <br><dt><code>-mno-pack</code><dd><a name="index-mno_002dpack-956"></a>
Do not pack VLIW instructions.

     <br><dt><code>-mno-eflags</code><dd><a name="index-mno_002deflags-957"></a>
Do not mark ABI switches in e_flags.

     <br><dt><code>-mcond-move</code><dd><a name="index-mcond_002dmove-958"></a>
Enable the use of conditional-move instructions (default).

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mno-cond-move</code><dd><a name="index-mno_002dcond_002dmove-959"></a>
Disable the use of conditional-move instructions.

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mscc</code><dd><a name="index-mscc-960"></a>
Enable the use of conditional set instructions (default).

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mno-scc</code><dd><a name="index-mno_002dscc-961"></a>
Disable the use of conditional set instructions.

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mcond-exec</code><dd><a name="index-mcond_002dexec-962"></a>
Enable the use of conditional execution (default).

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mno-cond-exec</code><dd><a name="index-mno_002dcond_002dexec-963"></a>
Disable the use of conditional execution.

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mvliw-branch</code><dd><a name="index-mvliw_002dbranch-964"></a>
Run a pass to pack branches into VLIW instructions (default).

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mno-vliw-branch</code><dd><a name="index-mno_002dvliw_002dbranch-965"></a>
Do not run a pass to pack branches into VLIW instructions.

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mmulti-cond-exec</code><dd><a name="index-mmulti_002dcond_002dexec-966"></a>
Enable optimization of <code>&amp;&amp;</code> and <code>||</code> in conditional execution
(default).

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mno-multi-cond-exec</code><dd><a name="index-mno_002dmulti_002dcond_002dexec-967"></a>
Disable optimization of <code>&amp;&amp;</code> and <code>||</code> in conditional execution.

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mnested-cond-exec</code><dd><a name="index-mnested_002dcond_002dexec-968"></a>
Enable nested conditional execution optimizations (default).

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-mno-nested-cond-exec</code><dd><a name="index-mno_002dnested_002dcond_002dexec-969"></a>
Disable nested conditional execution optimizations.

     <p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.

     <br><dt><code>-moptimize-membar</code><dd><a name="index-moptimize_002dmembar-970"></a>
This switch removes redundant <code>membar</code> instructions from the
compiler generated code.  It is enabled by default.

     <br><dt><code>-mno-optimize-membar</code><dd><a name="index-mno_002doptimize_002dmembar-971"></a>
This switch disables the automatic removal of redundant <code>membar</code>
instructions from the generated code.

     <br><dt><code>-mtomcat-stats</code><dd><a name="index-mtomcat_002dstats-972"></a>
Cause gas to print out tomcat statistics.

     <br><dt><code>-mcpu=</code><var>cpu</var><dd><a name="index-mcpu-973"></a>
Select the processor type for which to generate code.  Possible values are
&lsquo;<samp><span class="samp">frv</span></samp>&rsquo;, &lsquo;<samp><span class="samp">fr550</span></samp>&rsquo;, &lsquo;<samp><span class="samp">tomcat</span></samp>&rsquo;, &lsquo;<samp><span class="samp">fr500</span></samp>&rsquo;, &lsquo;<samp><span class="samp">fr450</span></samp>&rsquo;,
&lsquo;<samp><span class="samp">fr405</span></samp>&rsquo;, &lsquo;<samp><span class="samp">fr400</span></samp>&rsquo;, &lsquo;<samp><span class="samp">fr300</span></samp>&rsquo; and &lsquo;<samp><span class="samp">simple</span></samp>&rsquo;.

 </dl>

 </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 14
a14 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,
1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
2010 Free Software Foundation, Inc.
d17 1
a17 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d19 4
a22 4
Invariant Sections being "Funding Free Software", the Front-Cover
Texts being (a) (see below), and with the Back-Cover Texts being (b)
(see below).  A copy of the license is included in the section entitled
"GNU Free Documentation License".
d26 1
a26 1
A GNU Manual
d30 1
a30 1
You have freedom to copy and modify this GNU Manual, like GNU
d32 36
a67 4
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using the GNU Compiler Collection (GCC): FRV Options</title>
d69 2
a70 40
<meta name="description" content="Using the GNU Compiler Collection (GCC): FRV Options">
<meta name="keywords" content="Using the GNU Compiler Collection (GCC): FRV Options">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Option-Index.html#Option-Index" rel="index" title="Option Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Submodel-Options.html#Submodel-Options" rel="up" title="Submodel Options">
<link href="GNU_002fLinux-Options.html#GNU_002fLinux-Options" rel="next" title="GNU/Linux Options">
<link href="FR30-Options.html#FR30-Options" rel="prev" title="FR30 Options">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>
d72 2
d75 2
a76 1
</head>
d78 2
a79 56
<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
<a name="FRV-Options"></a>
<div class="header">
<p>
Next: <a href="GNU_002fLinux-Options.html#GNU_002fLinux-Options" accesskey="n" rel="next">GNU/Linux Options</a>, Previous: <a href="FR30-Options.html#FR30-Options" accesskey="p" rel="prev">FR30 Options</a>, Up: <a href="Submodel-Options.html#Submodel-Options" accesskey="u" rel="up">Submodel Options</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
</div>
<hr>
<a name="FRV-Options-1"></a>
<h4 class="subsection">3.17.12 FRV Options</h4>
<a name="index-FRV-Options"></a>

<dl compact="compact">
<dt><code>-mgpr-32</code></dt>
<dd><a name="index-mgpr_002d32"></a>

<p>Only use the first 32 general-purpose registers.
</p>
</dd>
<dt><code>-mgpr-64</code></dt>
<dd><a name="index-mgpr_002d64"></a>

<p>Use all 64 general-purpose registers.
</p>
</dd>
<dt><code>-mfpr-32</code></dt>
<dd><a name="index-mfpr_002d32"></a>

<p>Use only the first 32 floating-point registers.
</p>
</dd>
<dt><code>-mfpr-64</code></dt>
<dd><a name="index-mfpr_002d64"></a>

<p>Use all 64 floating-point registers.
</p>
</dd>
<dt><code>-mhard-float</code></dt>
<dd><a name="index-mhard_002dfloat"></a>

<p>Use hardware instructions for floating-point operations.
</p>
</dd>
<dt><code>-msoft-float</code></dt>
<dd><a name="index-msoft_002dfloat-1"></a>

<p>Use library routines for floating-point operations.
</p>
</dd>
<dt><code>-malloc-cc</code></dt>
<dd><a name="index-malloc_002dcc"></a>

<p>Dynamically allocate condition code registers.
</p>
</dd>
<dt><code>-mfixed-cc</code></dt>
<dd><a name="index-mfixed_002dcc"></a>
d81 2
a82 1
<p>Do not try to dynamically allocate condition code registers, only
a83 52
</p>
</dd>
<dt><code>-mdword</code></dt>
<dd><a name="index-mdword"></a>

<p>Change ABI to use double word insns.
</p>
</dd>
<dt><code>-mno-dword</code></dt>
<dd><a name="index-mno_002ddword"></a>

<p>Do not use double word instructions.
</p>
</dd>
<dt><code>-mdouble</code></dt>
<dd><a name="index-mdouble"></a>

<p>Use floating-point double instructions.
</p>
</dd>
<dt><code>-mno-double</code></dt>
<dd><a name="index-mno_002ddouble"></a>

<p>Do not use floating-point double instructions.
</p>
</dd>
<dt><code>-mmedia</code></dt>
<dd><a name="index-mmedia"></a>

<p>Use media instructions.
</p>
</dd>
<dt><code>-mno-media</code></dt>
<dd><a name="index-mno_002dmedia"></a>

<p>Do not use media instructions.
</p>
</dd>
<dt><code>-mmuladd</code></dt>
<dd><a name="index-mmuladd"></a>

<p>Use multiply and add/subtract instructions.
</p>
</dd>
<dt><code>-mno-muladd</code></dt>
<dd><a name="index-mno_002dmuladd"></a>

<p>Do not use multiply and add/subtract instructions.
</p>
</dd>
<dt><code>-mfdpic</code></dt>
<dd><a name="index-mfdpic"></a>
d85 26
a110 1
<p>Select the FDPIC ABI, which uses function descriptors to represent
d112 1
a112 1
implies <samp>-fPIE</samp>.  With <samp>-fpic</samp> or <samp>-fpie</samp>, it
d114 1
a114 1
GOT base address; with <samp>-fPIC</samp> or <samp>-fPIE</samp>, GOT offsets
d116 7
a122 11
With a &lsquo;<samp>bfin-elf</samp>&rsquo; target, this option implies <samp>-msim</samp>.
</p>
</dd>
<dt><code>-minline-plt</code></dt>
<dd><a name="index-minline_002dplt-1"></a>

<p>Enable inlining of PLT entries in function calls to functions that are
not known to bind locally.  It has no effect without <samp>-mfdpic</samp>.
It&rsquo;s enabled by default if optimizing for speed and compiling for
shared libraries (i.e., <samp>-fPIC</samp> or <samp>-fpic</samp>), or when an
optimization option such as <samp>-O3</samp> or above is present in the
d124 13
a136 22
</p>
</dd>
<dt><code>-mTLS</code></dt>
<dd><a name="index-mTLS"></a>

<p>Assume a large TLS segment when generating thread-local code.
</p>
</dd>
<dt><code>-mtls</code></dt>
<dd><a name="index-mtls"></a>

<p>Do not assume a large TLS segment when generating thread-local code.
</p>
</dd>
<dt><code>-mgprel-ro</code></dt>
<dd><a name="index-mgprel_002dro"></a>

<p>Enable the use of <code>GPREL</code> relocations in the FDPIC ABI for data
that is known to be in read-only sections.  It&rsquo;s enabled by default,
except for <samp>-fpic</samp> or <samp>-fpie</samp>: even though it may help
make the global offset table smaller, it trades 1 instruction for 4.
With <samp>-fPIC</samp> or <samp>-fPIE</samp>, it trades 3 instructions for 4,
d138 7
a144 10
for a GOT entry for the referenced symbol, so it&rsquo;s more likely to be a
win.  If it is not, <samp>-mno-gprel-ro</samp> can be used to disable it.
</p>
</dd>
<dt><code>-multilib-library-pic</code></dt>
<dd><a name="index-multilib_002dlibrary_002dpic"></a>

<p>Link with the (library, not FD) pic libraries.  It&rsquo;s implied by
<samp>-mlibrary-pic</samp>, as well as by <samp>-fPIC</samp> and
<samp>-fpic</samp> without <samp>-mfdpic</samp>.  You should never have to use
a145 4
</p>
</dd>
<dt><code>-mlinked-fp</code></dt>
<dd><a name="index-mlinked_002dfp"></a>
d147 2
a148 1
<p>Follow the EABI requirement of always creating a frame pointer whenever
d150 1
a150 5
be disabled with <samp>-mno-linked-fp</samp>.
</p>
</dd>
<dt><code>-mlong-calls</code></dt>
<dd><a name="index-mlong_002dcalls-3"></a>
d152 2
a153 1
<p>Use indirect addressing to call functions outside the current
a155 4
</p>
</dd>
<dt><code>-malign-labels</code></dt>
<dd><a name="index-malign_002dlabels"></a>
d157 2
a158 1
<p>Try to align labels to an 8-byte boundary by inserting nops into the
d160 1
a160 1
is enabled.  It doesn&rsquo;t create new packets; it merely adds nops to
a161 112
</p>
</dd>
<dt><code>-mlibrary-pic</code></dt>
<dd><a name="index-mlibrary_002dpic"></a>

<p>Generate position-independent EABI code.
</p>
</dd>
<dt><code>-macc-4</code></dt>
<dd><a name="index-macc_002d4"></a>

<p>Use only the first four media accumulator registers.
</p>
</dd>
<dt><code>-macc-8</code></dt>
<dd><a name="index-macc_002d8"></a>

<p>Use all eight media accumulator registers.
</p>
</dd>
<dt><code>-mpack</code></dt>
<dd><a name="index-mpack"></a>

<p>Pack VLIW instructions.
</p>
</dd>
<dt><code>-mno-pack</code></dt>
<dd><a name="index-mno_002dpack"></a>

<p>Do not pack VLIW instructions.
</p>
</dd>
<dt><code>-mno-eflags</code></dt>
<dd><a name="index-mno_002deflags"></a>

<p>Do not mark ABI switches in e_flags.
</p>
</dd>
<dt><code>-mcond-move</code></dt>
<dd><a name="index-mcond_002dmove"></a>

<p>Enable the use of conditional-move instructions (default).
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mno-cond-move</code></dt>
<dd><a name="index-mno_002dcond_002dmove"></a>

<p>Disable the use of conditional-move instructions.
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mscc</code></dt>
<dd><a name="index-mscc"></a>

<p>Enable the use of conditional set instructions (default).
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mno-scc</code></dt>
<dd><a name="index-mno_002dscc"></a>

<p>Disable the use of conditional set instructions.
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mcond-exec</code></dt>
<dd><a name="index-mcond_002dexec"></a>

<p>Enable the use of conditional execution (default).
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mno-cond-exec</code></dt>
<dd><a name="index-mno_002dcond_002dexec"></a>

<p>Disable the use of conditional execution.
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mvliw-branch</code></dt>
<dd><a name="index-mvliw_002dbranch"></a>

<p>Run a pass to pack branches into VLIW instructions (default).
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mno-vliw-branch</code></dt>
<dd><a name="index-mno_002dvliw_002dbranch"></a>

<p>Do not run a pass to pack branches into VLIW instructions.
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mmulti-cond-exec</code></dt>
<dd><a name="index-mmulti_002dcond_002dexec"></a>
d163 68
a230 1
<p>Enable optimization of <code>&amp;&amp;</code> and <code>||</code> in conditional execution
d232 20
a251 2
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
a252 31
</p>
</dd>
<dt><code>-mno-multi-cond-exec</code></dt>
<dd><a name="index-mno_002dmulti_002dcond_002dexec"></a>

<p>Disable optimization of <code>&amp;&amp;</code> and <code>||</code> in conditional execution.
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mnested-cond-exec</code></dt>
<dd><a name="index-mnested_002dcond_002dexec"></a>

<p>Enable nested conditional execution optimizations (default).
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-mno-nested-cond-exec</code></dt>
<dd><a name="index-mno_002dnested_002dcond_002dexec"></a>

<p>Disable nested conditional execution optimizations.
</p>
<p>This switch is mainly for debugging the compiler and will likely be removed
in a future version.
</p>
</dd>
<dt><code>-moptimize-membar</code></dt>
<dd><a name="index-moptimize_002dmembar"></a>
d254 2
a255 1
<p>This switch removes redundant <code>membar</code> instructions from the
a256 4
</p>
</dd>
<dt><code>-mno-optimize-membar</code></dt>
<dd><a name="index-mno_002doptimize_002dmembar"></a>
d258 2
a259 1
<p>This switch disables the automatic removal of redundant <code>membar</code>
a260 17
</p>
</dd>
<dt><code>-mtomcat-stats</code></dt>
<dd><a name="index-mtomcat_002dstats"></a>

<p>Cause gas to print out tomcat statistics.
</p>
</dd>
<dt><code>-mcpu=<var>cpu</var></code></dt>
<dd><a name="index-mcpu-3"></a>

<p>Select the processor type for which to generate code.  Possible values are
&lsquo;<samp>frv</samp>&rsquo;, &lsquo;<samp>fr550</samp>&rsquo;, &lsquo;<samp>tomcat</samp>&rsquo;, &lsquo;<samp>fr500</samp>&rsquo;, &lsquo;<samp>fr450</samp>&rsquo;,
&lsquo;<samp>fr405</samp>&rsquo;, &lsquo;<samp>fr400</samp>&rsquo;, &lsquo;<samp>fr300</samp>&rsquo; and &lsquo;<samp>simple</samp>&rsquo;.
</p>
</dd>
</dl>
d262 7
a268 5
<hr>
<div class="header">
<p>
Next: <a href="GNU_002fLinux-Options.html#GNU_002fLinux-Options" accesskey="n" rel="next">GNU/Linux Options</a>, Previous: <a href="FR30-Options.html#FR30-Options" accesskey="p" rel="prev">FR30 Options</a>, Up: <a href="Submodel-Options.html#Submodel-Options" accesskey="u" rel="up">Submodel Options</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
</div>
d270 1
d272 1
a273 2
</body>
</html>
@

