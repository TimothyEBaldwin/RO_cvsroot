head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.18;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.18;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.24;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>CRIS Options - Using the GNU Compiler Collection (GCC)</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using the GNU Compiler Collection (GCC)">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Submodel-Options.html#Submodel-Options" title="Submodel Options">
<link rel="prev" href="Blackfin-Options.html#Blackfin-Options" title="Blackfin Options">
<link rel="next" href="CRX-Options.html#CRX-Options" title="CRX Options">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with the
Invariant Sections being ``GNU General Public License'' and ``Funding
Free Software'', the Front-Cover texts being (a) (see below), and with
the Back-Cover Texts being (b) (see below).  A copy of the license is
included in the section entitled ``GNU Free Documentation License''.

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="CRIS-Options"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="CRX-Options.html#CRX-Options">CRX Options</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Blackfin-Options.html#Blackfin-Options">Blackfin Options</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Submodel-Options.html#Submodel-Options">Submodel Options</a>
<hr>
</div>

<h4 class="subsection">3.17.5 CRIS Options</h4>

<p><a name="index-CRIS-Options-785"></a>
These options are defined specifically for the CRIS ports.

     <dl>
<dt><code>-march=</code><var>architecture-type</var><dt><code>-mcpu=</code><var>architecture-type</var><dd><a name="index-march-786"></a><a name="index-mcpu-787"></a>Generate code for the specified architecture.  The choices for
<var>architecture-type</var> are &lsquo;<samp><span class="samp">v3</span></samp>&rsquo;, &lsquo;<samp><span class="samp">v8</span></samp>&rsquo; and &lsquo;<samp><span class="samp">v10</span></samp>&rsquo; for
respectively ETRAX&nbsp;<!-- /@@w -->4, ETRAX&nbsp;<!-- /@@w -->100, and ETRAX&nbsp;<!-- /@@w -->100&nbsp;<!-- /@@w -->LX. 
Default is &lsquo;<samp><span class="samp">v0</span></samp>&rsquo; except for cris-axis-linux-gnu, where the default is
&lsquo;<samp><span class="samp">v10</span></samp>&rsquo;.

     <br><dt><code>-mtune=</code><var>architecture-type</var><dd><a name="index-mtune-788"></a>Tune to <var>architecture-type</var> everything applicable about the generated
code, except for the ABI and the set of available instructions.  The
choices for <var>architecture-type</var> are the same as for
<samp><span class="option">-march=</span><var>architecture-type</var></samp>.

     <br><dt><code>-mmax-stack-frame=</code><var>n</var><dd><a name="index-mmax_002dstack_002dframe-789"></a>Warn when the stack frame of a function exceeds <var>n</var> bytes.

     <br><dt><code>-melinux-stacksize=</code><var>n</var><dd><a name="index-melinux_002dstacksize-790"></a>Only available with the &lsquo;<samp><span class="samp">cris-axis-aout</span></samp>&rsquo; target.  Arranges for
indications in the program to the kernel loader that the stack of the
program should be set to <var>n</var> bytes.

     <br><dt><code>-metrax4</code><dt><code>-metrax100</code><dd><a name="index-metrax4-791"></a><a name="index-metrax100-792"></a>The options <samp><span class="option">-metrax4</span></samp> and <samp><span class="option">-metrax100</span></samp> are synonyms for
<samp><span class="option">-march=v3</span></samp> and <samp><span class="option">-march=v8</span></samp> respectively.

     <br><dt><code>-mmul-bug-workaround</code><dt><code>-mno-mul-bug-workaround</code><dd><a name="index-mmul_002dbug_002dworkaround-793"></a><a name="index-mno_002dmul_002dbug_002dworkaround-794"></a>Work around a bug in the <code>muls</code> and <code>mulu</code> instructions for CPU
models where it applies.  This option is active by default.

     <br><dt><code>-mpdebug</code><dd><a name="index-mpdebug-795"></a>Enable CRIS-specific verbose debug-related information in the assembly
code.  This option also has the effect to turn off the &lsquo;<samp><span class="samp">#NO_APP</span></samp>&rsquo;
formatted-code indicator to the assembler at the beginning of the
assembly file.

     <br><dt><code>-mcc-init</code><dd><a name="index-mcc_002dinit-796"></a>Do not use condition-code results from previous instruction; always emit
compare and test instructions before use of condition codes.

     <br><dt><code>-mno-side-effects</code><dd><a name="index-mno_002dside_002deffects-797"></a>Do not emit instructions with side-effects in addressing modes other than
post-increment.

     <br><dt><code>-mstack-align</code><dt><code>-mno-stack-align</code><dt><code>-mdata-align</code><dt><code>-mno-data-align</code><dt><code>-mconst-align</code><dt><code>-mno-const-align</code><dd><a name="index-mstack_002dalign-798"></a><a name="index-mno_002dstack_002dalign-799"></a><a name="index-mdata_002dalign-800"></a><a name="index-mno_002ddata_002dalign-801"></a><a name="index-mconst_002dalign-802"></a><a name="index-mno_002dconst_002dalign-803"></a>These options (no-options) arranges (eliminate arrangements) for the
stack-frame, individual data and constants to be aligned for the maximum
single data access size for the chosen CPU model.  The default is to
arrange for 32-bit alignment.  ABI details such as structure layout are
not affected by these options.

     <br><dt><code>-m32-bit</code><dt><code>-m16-bit</code><dt><code>-m8-bit</code><dd><a name="index-m32_002dbit-804"></a><a name="index-m16_002dbit-805"></a><a name="index-m8_002dbit-806"></a>Similar to the stack- data- and const-align options above, these options
arrange for stack-frame, writable data and constants to all be 32-bit,
16-bit or 8-bit aligned.  The default is 32-bit alignment.

     <br><dt><code>-mno-prologue-epilogue</code><dt><code>-mprologue-epilogue</code><dd><a name="index-mno_002dprologue_002depilogue-807"></a><a name="index-mprologue_002depilogue-808"></a>With <samp><span class="option">-mno-prologue-epilogue</span></samp>, the normal function prologue and
epilogue that sets up the stack-frame are omitted and no return
instructions or return sequences are generated in the code.  Use this
option only together with visual inspection of the compiled code: no
warnings or errors are generated when call-saved registers must be saved,
or storage for local variable needs to be allocated.

     <br><dt><code>-mno-gotplt</code><dt><code>-mgotplt</code><dd><a name="index-mno_002dgotplt-809"></a><a name="index-mgotplt-810"></a>With <samp><span class="option">-fpic</span></samp> and <samp><span class="option">-fPIC</span></samp>, don't generate (do generate)
instruction sequences that load addresses for functions from the PLT part
of the GOT rather than (traditional on other architectures) calls to the
PLT.  The default is <samp><span class="option">-mgotplt</span></samp>.

     <br><dt><code>-maout</code><dd><a name="index-maout-811"></a>Legacy no-op option only recognized with the cris-axis-aout target.

     <br><dt><code>-melf</code><dd><a name="index-melf-812"></a>Legacy no-op option only recognized with the cris-axis-elf and
cris-axis-linux-gnu targets.

     <br><dt><code>-melinux</code><dd><a name="index-melinux-813"></a>Only recognized with the cris-axis-aout target, where it selects a
GNU/linux-like multilib, include files and instruction set for
<samp><span class="option">-march=v8</span></samp>.

     <br><dt><code>-mlinux</code><dd><a name="index-mlinux-814"></a>Legacy no-op option only recognized with the cris-axis-linux-gnu target.

     <br><dt><code>-sim</code><dd><a name="index-sim-815"></a>This option, recognized for the cris-axis-aout and cris-axis-elf arranges
to link with input-output functions from a simulator library.  Code,
initialized data and zero-initialized data are allocated consecutively.

     <br><dt><code>-sim2</code><dd><a name="index-sim2-816"></a>Like <samp><span class="option">-sim</span></samp>, but pass linker options to locate initialized data at
0x40000000 and zero-initialized data at 0x80000000. 
</dl>

 </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 14
a14 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,
1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
2010 Free Software Foundation, Inc.
d17 1
a17 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d19 4
a22 4
Invariant Sections being "Funding Free Software", the Front-Cover
Texts being (a) (see below), and with the Back-Cover Texts being (b)
(see below).  A copy of the license is included in the section entitled
"GNU Free Documentation License".
d26 1
a26 1
A GNU Manual
d30 1
a30 1
You have freedom to copy and modify this GNU Manual, like GNU
d32 23
a54 4
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using the GNU Compiler Collection (GCC): CRIS Options</title>
d56 1
a56 40
<meta name="description" content="Using the GNU Compiler Collection (GCC): CRIS Options">
<meta name="keywords" content="Using the GNU Compiler Collection (GCC): CRIS Options">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Option-Index.html#Option-Index" rel="index" title="Option Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Submodel-Options.html#Submodel-Options" rel="up" title="Submodel Options">
<link href="CR16-Options.html#CR16-Options" rel="next" title="CR16 Options">
<link href="C6X-Options.html#C6X-Options" rel="prev" title="C6X Options">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>
d58 2
d61 6
a66 1
</head>
d68 1
a68 28
<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
<a name="CRIS-Options"></a>
<div class="header">
<p>
Next: <a href="CR16-Options.html#CR16-Options" accesskey="n" rel="next">CR16 Options</a>, Previous: <a href="C6X-Options.html#C6X-Options" accesskey="p" rel="prev">C6X Options</a>, Up: <a href="Submodel-Options.html#Submodel-Options" accesskey="u" rel="up">Submodel Options</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
</div>
<hr>
<a name="CRIS-Options-1"></a>
<h4 class="subsection">3.17.6 CRIS Options</h4>
<a name="index-CRIS-Options"></a>

<p>These options are defined specifically for the CRIS ports.
</p>
<dl compact="compact">
<dt><code>-march=<var>architecture-type</var></code></dt>
<dt><code>-mcpu=<var>architecture-type</var></code></dt>
<dd><a name="index-march-2"></a>
<a name="index-mcpu-1"></a>
<p>Generate code for the specified architecture.  The choices for
<var>architecture-type</var> are &lsquo;<samp>v3</samp>&rsquo;, &lsquo;<samp>v8</samp>&rsquo; and &lsquo;<samp>v10</samp>&rsquo; for
respectively ETRAX&nbsp;<!-- /@@w -->4, ETRAX&nbsp;<!-- /@@w -->100, and ETRAX&nbsp;<!-- /@@w -->100&nbsp;<!-- /@@w -->LX.
Default is &lsquo;<samp>v0</samp>&rsquo; except for cris-axis-linux-gnu, where the default is
&lsquo;<samp>v10</samp>&rsquo;.
</p>
</dd>
<dt><code>-mtune=<var>architecture-type</var></code></dt>
<dd><a name="index-mtune-1"></a>
<p>Tune to <var>architecture-type</var> everything applicable about the generated
d71 12
a82 21
<samp>-march=<var>architecture-type</var></samp>.
</p>
</dd>
<dt><code>-mmax-stack-frame=<var>n</var></code></dt>
<dd><a name="index-mmax_002dstack_002dframe"></a>
<p>Warn when the stack frame of a function exceeds <var>n</var> bytes.
</p>
</dd>
<dt><code>-metrax4</code></dt>
<dt><code>-metrax100</code></dt>
<dd><a name="index-metrax4"></a>
<a name="index-metrax100"></a>
<p>The options <samp>-metrax4</samp> and <samp>-metrax100</samp> are synonyms for
<samp>-march=v3</samp> and <samp>-march=v8</samp> respectively.
</p>
</dd>
<dt><code>-mmul-bug-workaround</code></dt>
<dt><code>-mno-mul-bug-workaround</code></dt>
<dd><a name="index-mmul_002dbug_002dworkaround"></a>
<a name="index-mno_002dmul_002dbug_002dworkaround"></a>
<p>Work around a bug in the <code>muls</code> and <code>mulu</code> instructions for CPU
d84 3
a86 6
</p>
</dd>
<dt><code>-mpdebug</code></dt>
<dd><a name="index-mpdebug"></a>
<p>Enable CRIS-specific verbose debug-related information in the assembly
code.  This option also has the effect to turn off the &lsquo;<samp>#NO_APP</samp>&rsquo;
d89 2
a90 5
</p>
</dd>
<dt><code>-mcc-init</code></dt>
<dd><a name="index-mcc_002dinit"></a>
<p>Do not use condition-code results from previous instruction; always emit
d92 2
a93 5
</p>
</dd>
<dt><code>-mno-side-effects</code></dt>
<dd><a name="index-mno_002dside_002deffects"></a>
<p>Do not emit instructions with side-effects in addressing modes other than
d95 2
a96 15
</p>
</dd>
<dt><code>-mstack-align</code></dt>
<dt><code>-mno-stack-align</code></dt>
<dt><code>-mdata-align</code></dt>
<dt><code>-mno-data-align</code></dt>
<dt><code>-mconst-align</code></dt>
<dt><code>-mno-const-align</code></dt>
<dd><a name="index-mstack_002dalign"></a>
<a name="index-mno_002dstack_002dalign"></a>
<a name="index-mdata_002dalign"></a>
<a name="index-mno_002ddata_002dalign"></a>
<a name="index-mconst_002dalign"></a>
<a name="index-mno_002dconst_002dalign"></a>
<p>These options (no-options) arranges (eliminate arrangements) for the
d101 2
a102 9
</p>
</dd>
<dt><code>-m32-bit</code></dt>
<dt><code>-m16-bit</code></dt>
<dt><code>-m8-bit</code></dt>
<dd><a name="index-m32_002dbit"></a>
<a name="index-m16_002dbit"></a>
<a name="index-m8_002dbit"></a>
<p>Similar to the stack- data- and const-align options above, these options
d105 3
a107 8
</p>
</dd>
<dt><code>-mno-prologue-epilogue</code></dt>
<dt><code>-mprologue-epilogue</code></dt>
<dd><a name="index-mno_002dprologue_002depilogue"></a>
<a name="index-mprologue_002depilogue"></a>
<p>With <samp>-mno-prologue-epilogue</samp>, the normal function prologue and
epilogue which set up the stack frame are omitted and no return
d112 2
a113 7
</p>
</dd>
<dt><code>-mno-gotplt</code></dt>
<dt><code>-mgotplt</code></dt>
<dd><a name="index-mno_002dgotplt"></a>
<a name="index-mgotplt"></a>
<p>With <samp>-fpic</samp> and <samp>-fPIC</samp>, don&rsquo;t generate (do generate)
d116 5
a120 6
PLT.  The default is <samp>-mgotplt</samp>.
</p>
</dd>
<dt><code>-melf</code></dt>
<dd><a name="index-melf"></a>
<p>Legacy no-op option only recognized with the cris-axis-elf and
d122 8
a129 10
</p>
</dd>
<dt><code>-mlinux</code></dt>
<dd><a name="index-mlinux"></a>
<p>Legacy no-op option only recognized with the cris-axis-linux-gnu target.
</p>
</dd>
<dt><code>-sim</code></dt>
<dd><a name="index-sim"></a>
<p>This option, recognized for the cris-axis-elf arranges
d132 3
a134 7
</p>
</dd>
<dt><code>-sim2</code></dt>
<dd><a name="index-sim2"></a>
<p>Like <samp>-sim</samp>, but pass linker options to locate initialized data at
0x40000000 and zero-initialized data at 0x80000000.
</p></dd>
d137 1
a137 7
<hr>
<div class="header">
<p>
Next: <a href="CR16-Options.html#CR16-Options" accesskey="n" rel="next">CR16 Options</a>, Previous: <a href="C6X-Options.html#C6X-Options" accesskey="p" rel="prev">C6X Options</a>, Up: <a href="Submodel-Options.html#Submodel-Options" accesskey="u" rel="up">Submodel Options</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
</div>


a138 2
</body>
</html>
@

