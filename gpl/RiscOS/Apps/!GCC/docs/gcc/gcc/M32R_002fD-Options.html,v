head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.16;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.16;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.21;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>M32R/D Options - Using the GNU Compiler Collection (GCC)</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using the GNU Compiler Collection (GCC)">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Submodel-Options.html#Submodel-Options" title="Submodel Options">
<link rel="prev" href="M32C-Options.html#M32C-Options" title="M32C Options">
<link rel="next" href="M680x0-Options.html#M680x0-Options" title="M680x0 Options">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with the
Invariant Sections being ``GNU General Public License'' and ``Funding
Free Software'', the Front-Cover texts being (a) (see below), and with
the Back-Cover Texts being (b) (see below).  A copy of the license is
included in the section entitled ``GNU Free Documentation License''.

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="M32R%2fD-Options"></a>
<a name="M32R_002fD-Options"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="M680x0-Options.html#M680x0-Options">M680x0 Options</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="M32C-Options.html#M32C-Options">M32C Options</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Submodel-Options.html#Submodel-Options">Submodel Options</a>
<hr>
</div>

<h4 class="subsection">3.17.16 M32R/D Options</h4>

<p><a name="index-M32R_002fD-options-1094"></a>
These <samp><span class="option">-m</span></samp> options are defined for Renesas M32R/D architectures:

     <dl>
<dt><code>-m32r2</code><dd><a name="index-m32r2-1095"></a>Generate code for the M32R/2.

     <br><dt><code>-m32rx</code><dd><a name="index-m32rx-1096"></a>Generate code for the M32R/X.

     <br><dt><code>-m32r</code><dd><a name="index-m32r-1097"></a>Generate code for the M32R.  This is the default.

     <br><dt><code>-mmodel=small</code><dd><a name="index-mmodel_003dsmall-1098"></a>Assume all objects live in the lower 16MB of memory (so that their addresses
can be loaded with the <code>ld24</code> instruction), and assume all subroutines
are reachable with the <code>bl</code> instruction. 
This is the default.

     <p>The addressability of a particular object can be set with the
<code>model</code> attribute.

     <br><dt><code>-mmodel=medium</code><dd><a name="index-mmodel_003dmedium-1099"></a>Assume objects may be anywhere in the 32-bit address space (the compiler
will generate <code>seth/add3</code> instructions to load their addresses), and
assume all subroutines are reachable with the <code>bl</code> instruction.

     <br><dt><code>-mmodel=large</code><dd><a name="index-mmodel_003dlarge-1100"></a>Assume objects may be anywhere in the 32-bit address space (the compiler
will generate <code>seth/add3</code> instructions to load their addresses), and
assume subroutines may not be reachable with the <code>bl</code> instruction
(the compiler will generate the much slower <code>seth/add3/jl</code>
instruction sequence).

     <br><dt><code>-msdata=none</code><dd><a name="index-msdata_003dnone-1101"></a>Disable use of the small data area.  Variables will be put into
one of &lsquo;<samp><span class="samp">.data</span></samp>&rsquo;, &lsquo;<samp><span class="samp">bss</span></samp>&rsquo;, or &lsquo;<samp><span class="samp">.rodata</span></samp>&rsquo; (unless the
<code>section</code> attribute has been specified). 
This is the default.

     <p>The small data area consists of sections &lsquo;<samp><span class="samp">.sdata</span></samp>&rsquo; and &lsquo;<samp><span class="samp">.sbss</span></samp>&rsquo;. 
Objects may be explicitly put in the small data area with the
<code>section</code> attribute using one of these sections.

     <br><dt><code>-msdata=sdata</code><dd><a name="index-msdata_003dsdata-1102"></a>Put small global and static data in the small data area, but do not
generate special code to reference them.

     <br><dt><code>-msdata=use</code><dd><a name="index-msdata_003duse-1103"></a>Put small global and static data in the small data area, and generate
special instructions to reference them.

     <br><dt><code>-G </code><var>num</var><dd><a name="index-G-1104"></a><a name="index-smaller-data-references-1105"></a>Put global and static objects less than or equal to <var>num</var> bytes
into the small data or bss sections instead of the normal data or bss
sections.  The default value of <var>num</var> is 8. 
The <samp><span class="option">-msdata</span></samp> option must be set to one of &lsquo;<samp><span class="samp">sdata</span></samp>&rsquo; or &lsquo;<samp><span class="samp">use</span></samp>&rsquo;
for this option to have any effect.

     <p>All modules should be compiled with the same <samp><span class="option">-G </span><var>num</var></samp> value. 
Compiling with different values of <var>num</var> may or may not work; if it
doesn't the linker will give an error message&mdash;incorrect code will not be
generated.

     <br><dt><code>-mdebug</code><dd><a name="index-mdebug-1106"></a>Makes the M32R specific code in the compiler display some statistics
that might help in debugging programs.

     <br><dt><code>-malign-loops</code><dd><a name="index-malign_002dloops-1107"></a>Align all loops to a 32-byte boundary.

     <br><dt><code>-mno-align-loops</code><dd><a name="index-mno_002dalign_002dloops-1108"></a>Do not enforce a 32-byte alignment for loops.  This is the default.

     <br><dt><code>-missue-rate=</code><var>number</var><dd><a name="index-missue_002drate_003d_0040var_007bnumber_007d-1109"></a>Issue <var>number</var> instructions per cycle.  <var>number</var> can only be 1
or 2.

     <br><dt><code>-mbranch-cost=</code><var>number</var><dd><a name="index-mbranch_002dcost_003d_0040var_007bnumber_007d-1110"></a><var>number</var> can only be 1 or 2.  If it is 1 then branches will be
preferred over conditional code, if it is 2, then the opposite will
apply.

     <br><dt><code>-mflush-trap=</code><var>number</var><dd><a name="index-mflush_002dtrap_003d_0040var_007bnumber_007d-1111"></a>Specifies the trap number to use to flush the cache.  The default is
12.  Valid numbers are between 0 and 15 inclusive.

     <br><dt><code>-mno-flush-trap</code><dd><a name="index-mno_002dflush_002dtrap-1112"></a>Specifies that the cache cannot be flushed by using a trap.

     <br><dt><code>-mflush-func=</code><var>name</var><dd><a name="index-mflush_002dfunc_003d_0040var_007bname_007d-1113"></a>Specifies the name of the operating system function to call to flush
the cache.  The default is <em>_flush_cache</em>, but a function call
will only be used if a trap is not available.

     <br><dt><code>-mno-flush-func</code><dd><a name="index-mno_002dflush_002dfunc-1114"></a>Indicates that there is no OS function for flushing the cache.

 </dl>

 </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 14
a14 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,
1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
2010 Free Software Foundation, Inc.
d17 1
a17 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d19 4
a22 4
Invariant Sections being "Funding Free Software", the Front-Cover
Texts being (a) (see below), and with the Back-Cover Texts being (b)
(see below).  A copy of the license is included in the section entitled
"GNU Free Documentation License".
d26 1
a26 1
A GNU Manual
d30 1
a30 1
You have freedom to copy and modify this GNU Manual, like GNU
d32 29
a60 4
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using the GNU Compiler Collection (GCC): M32R/D Options</title>
d62 2
a63 40
<meta name="description" content="Using the GNU Compiler Collection (GCC): M32R/D Options">
<meta name="keywords" content="Using the GNU Compiler Collection (GCC): M32R/D Options">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Option-Index.html#Option-Index" rel="index" title="Option Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Submodel-Options.html#Submodel-Options" rel="up" title="Submodel Options">
<link href="M680x0-Options.html#M680x0-Options" rel="next" title="M680x0 Options">
<link href="M32C-Options.html#M32C-Options" rel="prev" title="M32C Options">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>
d65 1
d67 1
a67 1
</head>
d69 1
a69 32
<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
<a name="M32R_002fD-Options"></a>
<div class="header">
<p>
Next: <a href="M680x0-Options.html#M680x0-Options" accesskey="n" rel="next">M680x0 Options</a>, Previous: <a href="M32C-Options.html#M32C-Options" accesskey="p" rel="prev">M32C Options</a>, Up: <a href="Submodel-Options.html#Submodel-Options" accesskey="u" rel="up">Submodel Options</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
</div>
<hr>
<a name="M32R_002fD-Options-1"></a>
<h4 class="subsection">3.17.22 M32R/D Options</h4>
<a name="index-M32R_002fD-options"></a>

<p>These <samp>-m</samp> options are defined for Renesas M32R/D architectures:
</p>
<dl compact="compact">
<dt><code>-m32r2</code></dt>
<dd><a name="index-m32r2"></a>
<p>Generate code for the M32R/2.
</p>
</dd>
<dt><code>-m32rx</code></dt>
<dd><a name="index-m32rx"></a>
<p>Generate code for the M32R/X.
</p>
</dd>
<dt><code>-m32r</code></dt>
<dd><a name="index-m32r"></a>
<p>Generate code for the M32R.  This is the default.
</p>
</dd>
<dt><code>-mmodel=small</code></dt>
<dd><a name="index-mmodel_003dsmall"></a>
<p>Assume all objects live in the lower 16MB of memory (so that their addresses
d71 1
a71 1
are reachable with the <code>bl</code> instruction.
d73 2
a74 2
</p>
<p>The addressability of a particular object can be set with the
d76 2
a77 5
</p>
</dd>
<dt><code>-mmodel=medium</code></dt>
<dd><a name="index-mmodel_003dmedium"></a>
<p>Assume objects may be anywhere in the 32-bit address space (the compiler
d80 2
a81 5
</p>
</dd>
<dt><code>-mmodel=large</code></dt>
<dd><a name="index-mmodel_003dlarge"></a>
<p>Assume objects may be anywhere in the 32-bit address space (the compiler
d86 4
a89 7
</p>
</dd>
<dt><code>-msdata=none</code></dt>
<dd><a name="index-msdata_003dnone-1"></a>
<p>Disable use of the small data area.  Variables will be put into
one of &lsquo;<samp>.data</samp>&rsquo;, &lsquo;<samp>bss</samp>&rsquo;, or &lsquo;<samp>.rodata</samp>&rsquo; (unless the
<code>section</code> attribute has been specified).
d91 2
a92 2
</p>
<p>The small data area consists of sections &lsquo;<samp>.sdata</samp>&rsquo; and &lsquo;<samp>.sbss</samp>&rsquo;.
d95 2
a96 5
</p>
</dd>
<dt><code>-msdata=sdata</code></dt>
<dd><a name="index-msdata_003dsdata"></a>
<p>Put small global and static data in the small data area, but do not
d98 2
a99 5
</p>
</dd>
<dt><code>-msdata=use</code></dt>
<dd><a name="index-msdata_003duse"></a>
<p>Put small global and static data in the small data area, and generate
d101 2
a102 6
</p>
</dd>
<dt><code>-G <var>num</var></code></dt>
<dd><a name="index-G"></a>
<a name="index-smaller-data-references"></a>
<p>Put global and static objects less than or equal to <var>num</var> bytes
d104 2
a105 2
sections.  The default value of <var>num</var> is 8.
The <samp>-msdata</samp> option must be set to one of &lsquo;<samp>sdata</samp>&rsquo; or &lsquo;<samp>use</samp>&rsquo;
d107 2
a108 2
</p>
<p>All modules should be compiled with the same <samp>-G <var>num</var></samp> value.
d110 1
a110 1
doesn&rsquo;t the linker will give an error message&mdash;incorrect code will not be
d112 2
a113 5
</p>
</dd>
<dt><code>-mdebug</code></dt>
<dd><a name="index-mdebug"></a>
<p>Makes the M32R specific code in the compiler display some statistics
d115 6
a120 15
</p>
</dd>
<dt><code>-malign-loops</code></dt>
<dd><a name="index-malign_002dloops"></a>
<p>Align all loops to a 32-byte boundary.
</p>
</dd>
<dt><code>-mno-align-loops</code></dt>
<dd><a name="index-mno_002dalign_002dloops"></a>
<p>Do not enforce a 32-byte alignment for loops.  This is the default.
</p>
</dd>
<dt><code>-missue-rate=<var>number</var></code></dt>
<dd><a name="index-missue_002drate_003dnumber"></a>
<p>Issue <var>number</var> instructions per cycle.  <var>number</var> can only be 1
d122 2
a123 5
</p>
</dd>
<dt><code>-mbranch-cost=<var>number</var></code></dt>
<dd><a name="index-mbranch_002dcost_003dnumber"></a>
<p><var>number</var> can only be 1 or 2.  If it is 1 then branches will be
d126 2
a127 5
</p>
</dd>
<dt><code>-mflush-trap=<var>number</var></code></dt>
<dd><a name="index-mflush_002dtrap_003dnumber"></a>
<p>Specifies the trap number to use to flush the cache.  The default is
d129 4
a132 10
</p>
</dd>
<dt><code>-mno-flush-trap</code></dt>
<dd><a name="index-mno_002dflush_002dtrap"></a>
<p>Specifies that the cache cannot be flushed by using a trap.
</p>
</dd>
<dt><code>-mflush-func=<var>name</var></code></dt>
<dd><a name="index-mflush_002dfunc_003dname"></a>
<p>Specifies the name of the operating system function to call to flush
a134 8
</p>
</dd>
<dt><code>-mno-flush-func</code></dt>
<dd><a name="index-mno_002dflush_002dfunc"></a>
<p>Indicates that there is no OS function for flushing the cache.
</p>
</dd>
</dl>
d136 1
a136 5
<hr>
<div class="header">
<p>
Next: <a href="M680x0-Options.html#M680x0-Options" accesskey="n" rel="next">M680x0 Options</a>, Previous: <a href="M32C-Options.html#M32C-Options" accesskey="p" rel="prev">M32C Options</a>, Up: <a href="Submodel-Options.html#Submodel-Options" accesskey="u" rel="up">Submodel Options</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
</div>
d138 1
d140 1
a141 2
</body>
</html>
@

