head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.15;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.15;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.19;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Bug Criteria - Using the GNU Compiler Collection (GCC)</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using the GNU Compiler Collection (GCC)">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Bugs.html#Bugs" title="Bugs">
<link rel="next" href="Bug-Reporting.html#Bug-Reporting" title="Bug Reporting">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with the
Invariant Sections being ``GNU General Public License'' and ``Funding
Free Software'', the Front-Cover texts being (a) (see below), and with
the Back-Cover Texts being (b) (see below).  A copy of the license is
included in the section entitled ``GNU Free Documentation License''.

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Bug-Criteria"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Bug-Reporting.html#Bug-Reporting">Bug Reporting</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Bugs.html#Bugs">Bugs</a>
<hr>
</div>

<h3 class="section">11.1 Have You Found a Bug?</h3>

<p><a name="index-bug-criteria-2556"></a>
If you are not sure whether you have found a bug, here are some guidelines:

     
<a name="index-fatal-signal-2557"></a>
<a name="index-core-dump-2558"></a>
<ul><li>If the compiler gets a fatal signal, for any input whatever, that is a
compiler bug.  Reliable compilers never crash.

     <p><a name="index-invalid-assembly-code-2559"></a><a name="index-assembly-code_002c-invalid-2560"></a><li>If the compiler produces invalid assembly code, for any input whatever
(except an <code>asm</code> statement), that is a compiler bug, unless the
compiler reports errors (not just warnings) which would ordinarily
prevent the assembler from being run.

     <p><a name="index-undefined-behavior-2561"></a><a name="index-undefined-function-value-2562"></a><a name="index-increment-operators-2563"></a><li>If the compiler produces valid assembly code that does not correctly
execute the input source code, that is a compiler bug.

     <p>However, you must double-check to make sure, because you may have a
program whose behavior is undefined, which happened by chance to give
the desired results with another C or C++ compiler.

     <p>For example, in many nonoptimizing compilers, you can write &lsquo;<samp><span class="samp">x;</span></samp>&rsquo;
at the end of a function instead of &lsquo;<samp><span class="samp">return x;</span></samp>&rsquo;, with the same
results.  But the value of the function is undefined if <code>return</code>
is omitted; it is not a bug when GCC produces different results.

     <p>Problems often result from expressions with two increment operators,
as in <code>f (*p++, *p++)</code>.  Your previous compiler might have
interpreted that expression the way you intended; GCC might
interpret it another way.  Neither compiler is wrong.  The bug is
in your code.

     <p>After you have localized the error to a single source line, it should
be easy to check for these things.  If your program is correct and
well defined, you have found a compiler bug.

     <li>If the compiler produces an error message for valid input, that is a
compiler bug.

     <p><a name="index-invalid-input-2564"></a><li>If the compiler does not produce an error message for invalid input,
that is a compiler bug.  However, you should note that your idea of
&ldquo;invalid input&rdquo; might be someone else's idea of &ldquo;an extension&rdquo; or
&ldquo;support for traditional practice&rdquo;.

     <li>If you are an experienced user of one of the languages GCC supports, your
suggestions for improvement of GCC are welcome in any case. 
</ul>

 </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,
1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
2010 Free Software Foundation, Inc.
d16 1
a16 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d18 4
a21 4
Invariant Sections being "Funding Free Software", the Front-Cover
Texts being (a) (see below), and with the Back-Cover Texts being (b)
(see below).  A copy of the license is included in the section entitled
"GNU Free Documentation License".
d25 1
a25 1
A GNU Manual
d29 1
a29 1
You have freedom to copy and modify this GNU Manual, like GNU
d31 13
a43 47
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using the GNU Compiler Collection (GCC): Bug Criteria</title>

<meta name="description" content="Using the GNU Compiler Collection (GCC): Bug Criteria">
<meta name="keywords" content="Using the GNU Compiler Collection (GCC): Bug Criteria">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Option-Index.html#Option-Index" rel="index" title="Option Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="Bugs.html#Bugs" rel="up" title="Bugs">
<link href="Bug-Reporting.html#Bug-Reporting" rel="next" title="Bug Reporting">
<link href="Bugs.html#Bugs" rel="prev" title="Bugs">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>


d45 2
a46 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a47 1
<div class="header">
d49 3
a51 1
Next: <a href="Bug-Reporting.html#Bug-Reporting" accesskey="n" rel="next">Bug Reporting</a>, Up: <a href="Bugs.html#Bugs" accesskey="u" rel="up">Bugs</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
d53 10
a62 11
<hr>
<a name="Have-You-Found-a-Bug_003f"></a>
<h3 class="section">12.1 Have You Found a Bug?</h3>
<a name="index-bug-criteria"></a>

<p>If you are not sure whether you have found a bug, here are some guidelines:
</p>
<ul>
<li> <a name="index-fatal-signal"></a>
<a name="index-core-dump"></a>
If the compiler gets a fatal signal, for any input whatever, that is a
d65 1
a65 3
</li><li> <a name="index-invalid-assembly-code"></a>
<a name="index-assembly-code_002c-invalid"></a>
If the compiler produces invalid assembly code, for any input whatever
d70 1
a70 4
</li><li> <a name="index-undefined-behavior"></a>
<a name="index-undefined-function-value"></a>
<a name="index-increment-operators"></a>
If the compiler produces valid assembly code that does not correctly
d73 1
a73 1
<p>However, you must double-check to make sure, because you may have a
d76 3
a78 3
</p>
<p>For example, in many nonoptimizing compilers, you can write &lsquo;<samp>x;</samp>&rsquo;
at the end of a function instead of &lsquo;<samp>return x;</samp>&rsquo;, with the same
d81 2
a82 2
</p>
<p>Problems often result from expressions with two increment operators,
d87 2
a88 2
</p>
<p>After you have localized the error to a single source line, it should
d91 2
a92 2
</p>
</li><li> If the compiler produces an error message for valid input, that is a
d95 1
a95 2
</li><li> <a name="index-invalid-input"></a>
If the compiler does not produce an error message for invalid input,
d97 1
a97 1
&ldquo;invalid input&rdquo; might be someone else&rsquo;s idea of &ldquo;an extension&rdquo; or
d100 3
a102 10
</li><li> If you are an experienced user of one of the languages GCC supports, your
suggestions for improvement of GCC are welcome in any case.
</li></ul>

<hr>
<div class="header">
<p>
Next: <a href="Bug-Reporting.html#Bug-Reporting" accesskey="n" rel="next">Bug Reporting</a>, Up: <a href="Bugs.html#Bugs" accesskey="u" rel="up">Bugs</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
</div>

d104 1
a105 2
</body>
</html>
@

