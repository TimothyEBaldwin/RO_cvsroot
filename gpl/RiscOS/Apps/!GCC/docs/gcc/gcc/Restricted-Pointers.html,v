head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.20;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.20;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.28;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Restricted Pointers - Using the GNU Compiler Collection (GCC)</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="Using the GNU Compiler Collection (GCC)">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="C_002b_002b-Extensions.html#C_002b_002b-Extensions" title="C++ Extensions">
<link rel="prev" href="Volatiles.html#Volatiles" title="Volatiles">
<link rel="next" href="Vague-Linkage.html#Vague-Linkage" title="Vague Linkage">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with the
Invariant Sections being ``GNU General Public License'' and ``Funding
Free Software'', the Front-Cover texts being (a) (see below), and with
the Back-Cover Texts being (b) (see below).  A copy of the license is
included in the section entitled ``GNU Free Documentation License''.

(a) The FSF's Front-Cover Text is:

     A GNU Manual

(b) The FSF's Back-Cover Text is:

     You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="Restricted-Pointers"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="Vague-Linkage.html#Vague-Linkage">Vague Linkage</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="Volatiles.html#Volatiles">Volatiles</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="C_002b_002b-Extensions.html#C_002b_002b-Extensions">C++ Extensions</a>
<hr>
</div>

<h3 class="section">6.2 Restricting Pointer Aliasing</h3>

<p><a name="index-restricted-pointers-2458"></a><a name="index-restricted-references-2459"></a><a name="index-restricted-this-pointer-2460"></a>
As with the C front end, G++ understands the C99 feature of restricted pointers,
specified with the <code>__restrict__</code>, or <code>__restrict</code> type
qualifier.  Because you cannot compile C++ by specifying the <samp><span class="option">-std=c99</span></samp>
language flag, <code>restrict</code> is not a keyword in C++.

 <p>In addition to allowing restricted pointers, you can specify restricted
references, which indicate that the reference is not aliased in the local
context.

<pre class="smallexample">     void fn (int *__restrict__ rptr, int &amp;__restrict__ rref)
     {
       /* <span class="roman">...</span> */
     }
</pre>
 <p class="noindent">In the body of <code>fn</code>, <var>rptr</var> points to an unaliased integer and
<var>rref</var> refers to a (different) unaliased integer.

 <p>You may also specify whether a member function's <var>this</var> pointer is
unaliased by using <code>__restrict__</code> as a member function qualifier.

<pre class="smallexample">     void T::fn () __restrict__
     {
       /* <span class="roman">...</span> */
     }
</pre>
 <p class="noindent">Within the body of <code>T::fn</code>, <var>this</var> will have the effective
definition <code>T *__restrict__ const this</code>.  Notice that the
interpretation of a <code>__restrict__</code> member function qualifier is
different to that of <code>const</code> or <code>volatile</code> qualifier, in that it
is applied to the pointer rather than the object.  This is consistent with
other compilers which implement restricted pointers.

 <p>As with all outermost parameter qualifiers, <code>__restrict__</code> is
ignored in function definition matching.  This means you only need to
specify <code>__restrict__</code> in a function definition, rather than
in a function prototype as well.

 </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 14
a14 5
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,
1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
2010 Free Software Foundation, Inc.
d17 1
a17 1
under the terms of the GNU Free Documentation License, Version 1.3 or
d19 4
a22 4
Invariant Sections being "Funding Free Software", the Front-Cover
Texts being (a) (see below), and with the Back-Cover Texts being (b)
(see below).  A copy of the license is included in the section entitled
"GNU Free Documentation License".
d26 1
a26 1
A GNU Manual
d30 1
a30 1
You have freedom to copy and modify this GNU Manual, like GNU
d32 13
a44 47
     funds for GNU development. -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>Using the GNU Compiler Collection (GCC): Restricted Pointers</title>

<meta name="description" content="Using the GNU Compiler Collection (GCC): Restricted Pointers">
<meta name="keywords" content="Using the GNU Compiler Collection (GCC): Restricted Pointers">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Option-Index.html#Option-Index" rel="index" title="Option Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="C_002b_002b-Extensions.html#C_002b_002b-Extensions" rel="up" title="C++ Extensions">
<link href="Vague-Linkage.html#Vague-Linkage" rel="next" title="Vague Linkage">
<link href="C_002b_002b-Volatiles.html#C_002b_002b-Volatiles" rel="prev" title="C++ Volatiles">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
-->
</style>


d46 2
a47 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a48 1
<div class="header">
d50 4
a53 1
Next: <a href="Vague-Linkage.html#Vague-Linkage" accesskey="n" rel="next">Vague Linkage</a>, Previous: <a href="C_002b_002b-Volatiles.html#C_002b_002b-Volatiles" accesskey="p" rel="prev">C++ Volatiles</a>, Up: <a href="C_002b_002b-Extensions.html#C_002b_002b-Extensions" accesskey="u" rel="up">C++ Extensions</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Option-Index.html#Option-Index" title="Index" rel="index">Index</a>]</p>
a54 6
<hr>
<a name="Restricting-Pointer-Aliasing"></a>
<h3 class="section">7.2 Restricting Pointer Aliasing</h3>
<a name="index-restricted-pointers"></a>
<a name="index-restricted-references"></a>
<a name="index-restricted-this-pointer"></a>
d56 4
a59 1
<p>As with the C front end, G++ understands the C99 feature of restricted pointers,
d61 1
a61 1
qualifier.  Because you cannot compile C++ by specifying the <samp>-std=c99</samp>
d63 2
a64 2
</p>
<p>In addition to allowing restricted pointers, you can specify restricted
a66 7
</p>
<div class="smallexample">
<pre class="smallexample">void fn (int *__restrict__ rptr, int &amp;__restrict__ rref)
{
  /* <span class="roman">&hellip;</span> */
}
</pre></div>
d68 6
a73 1
<p>In the body of <code>fn</code>, <var>rptr</var> points to an unaliased integer and
d75 2
a76 2
</p>
<p>You may also specify whether a member function&rsquo;s <var>this</var> pointer is
a77 7
</p>
<div class="smallexample">
<pre class="smallexample">void T::fn () __restrict__
{
  /* <span class="roman">&hellip;</span> */
}
</pre></div>
d79 6
a84 1
<p>Within the body of <code>T::fn</code>, <var>this</var> will have the effective
d90 2
a91 2
</p>
<p>As with all outermost parameter qualifiers, <code>__restrict__</code> is
a94 2
</p>

d96 1
a97 2
</body>
</html>
@

