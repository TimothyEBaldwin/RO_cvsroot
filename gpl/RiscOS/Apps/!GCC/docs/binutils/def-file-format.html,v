head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.06;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>def file format - GNU Binary Utilities</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="GNU Binary Utilities">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="dlltool.html#dlltool" title="dlltool">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="def-file-format"></a>
<p>
Up:&nbsp;<a rel="up" accesskey="u" href="dlltool.html#dlltool">dlltool</a>
<hr>
</div>

<h3 class="section">14.1 The format of the <samp><span class="command">dlltool</span></samp> <samp><span class="file">.def</span></samp> file</h3>

<p>A <samp><span class="file">.def</span></samp> file contains any number of the following commands:

     <dl>
<dt><code>NAME</code> <var>name</var> <code>[ ,</code> <var>base</var> <code>]</code><dd>The result is going to be named <var>name</var><code>.exe</code>.

     <br><dt><code>LIBRARY</code> <var>name</var> <code>[ ,</code> <var>base</var> <code>]</code><dd>The result is going to be named <var>name</var><code>.dll</code>.

     <br><dt><code>EXPORTS ( ( (</code> <var>name1</var> <code>[ = </code> <var>name2</var> <code>] ) | ( </code> <var>name1</var> <code>=</code> <var>module-name</var> <code>.</code> <var>external-name</var> <code>) ) [ == </code> <var>its_name</var> <code>]</code><br><dt><code>[</code> <var>integer</var> <code>] [ NONAME ] [ CONSTANT ] [ DATA ] [ PRIVATE ] ) *</code><dd>Declares <var>name1</var> as an exported symbol from the DLL, with optional
ordinal number <var>integer</var>, or declares <var>name1</var> as an alias
(forward) of the function <var>external-name</var> in the DLL. 
If <var>its_name</var> is specified, this name is used as string in export table. 
<var>module-name</var>.

     <br><dt><code>IMPORTS ( (</code> <var>internal-name</var> <code>=</code> <var>module-name</var> <code>.</code> <var>integer</var> <code>) | [</code> <var>internal-name</var> <code>= ]</code> <var>module-name</var> <code>.</code> <var>external-name</var> <code>) [ == ) </code><var>its_name</var><code> ] *</code><dd>Declares that <var>external-name</var> or the exported function whose
ordinal number is <var>integer</var> is to be imported from the file
<var>module-name</var>.  If <var>internal-name</var> is specified then this is
the name that the imported function will be referred to in the body of
the DLL. 
If <var>its_name</var> is specified, this name is used as string in import table.

     <br><dt><code>DESCRIPTION</code> <var>string</var><dd>Puts <var>string</var> into the output <samp><span class="file">.exp</span></samp> file in the
<code>.rdata</code> section.

     <br><dt><code>STACKSIZE</code> <var>number-reserve</var> <code>[, </code> <var>number-commit</var> <code>]</code><br><dt><code>HEAPSIZE</code> <var>number-reserve</var> <code>[, </code> <var>number-commit</var> <code>]</code><dd>Generates <code>--stack</code> or <code>--heap</code>
<var>number-reserve</var>,<var>number-commit</var> in the output <code>.drectve</code>
section.  The linker will see this and act upon it.

     <br><dt><code>CODE</code> <var>attr</var> <code>+</code><br><dt><code>DATA</code> <var>attr</var> <code>+</code><br><dt><code>SECTIONS (</code> <var>section-name</var> <var>attr</var><code> + ) *</code><dd>Generates <code>--attr</code> <var>section-name</var> <var>attr</var> in the output
<code>.drectve</code> section, where <var>attr</var> is one of <code>READ</code>,
<code>WRITE</code>, <code>EXECUTE</code> or <code>SHARED</code>.  The linker will see
this and act upon it.

   </dl>

   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 13
a13 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1991-2013 Free Software Foundation, Inc.
d20 1
a20 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>GNU Binary Utilities: def file format</title>
a21 38
<meta name="description" content="GNU Binary Utilities: def file format">
<meta name="keywords" content="GNU Binary Utilities: def file format">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Binutils-Index.html#Binutils-Index" rel="index" title="Binutils Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="dlltool.html#dlltool" rel="up" title="dlltool">
<link href="readelf.html#readelf" rel="next" title="readelf">
<link href="dlltool.html#dlltool" rel="prev" title="dlltool">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d23 12
a34 3
</style>


d36 2
a37 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a38 1
<div class="header">
d40 2
a41 1
Up: <a href="dlltool.html#dlltool" accesskey="u" rel="up">dlltool</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Binutils-Index.html#Binutils-Index" title="Index" rel="index">Index</a>]</p>
a42 3
<hr>
<a name="The-format-of-the-dlltool-_002edef-file"></a>
<h3 class="section">14.1 The format of the <code>dlltool</code> <samp>.def</samp> file</h3>
d44 10
a53 17
<p>A <samp>.def</samp> file contains any number of the following commands:
</p>
<dl compact="compact">
<dt><code>NAME</code> <var>name</var> <code>[ ,</code> <var>base</var> <code>]</code></dt>
<dd><p>The result is going to be named <var>name</var><code>.exe</code>.
</p>
</dd>
<dt><code>LIBRARY</code> <var>name</var> <code>[ ,</code> <var>base</var> <code>]</code></dt>
<dd><p>The result is going to be named <var>name</var><code>.dll</code>.
Note: If you want to use LIBRARY as name then you need to quote.  Otherwise
this will fail due a necessary hack for libtool (see PR binutils/13710 for more
details).
</p>
</dd>
<dt><code>EXPORTS ( ( (</code> <var>name1</var> <code>[ = </code> <var>name2</var> <code>] ) | ( </code> <var>name1</var> <code>=</code> <var>module-name</var> <code>.</code> <var>external-name</var> <code>) ) [ == </code> <var>its_name</var> <code>]</code></dt>
<dt><code>[</code> <var>integer</var> <code>] [ NONAME ] [ CONSTANT ] [ DATA ] [ PRIVATE ] ) *</code></dt>
<dd><p>Declares <var>name1</var> as an exported symbol from the DLL, with optional
d55 2
a56 2
(forward) of the function <var>external-name</var> in the DLL.
If <var>its_name</var> is specified, this name is used as string in export table.
d58 2
a59 7
Note: The <code>EXPORTS</code> has to be the last command in .def file, as keywords
are treated - beside <code>LIBRARY</code> - as simple name-identifiers.
If you want to use LIBRARY as name then you need to quote it.
</p>
</dd>
<dt><code>IMPORTS ( (</code> <var>internal-name</var> <code>=</code> <var>module-name</var> <code>.</code> <var>integer</var> <code>) | [</code> <var>internal-name</var> <code>= ]</code> <var>module-name</var> <code>.</code> <var>external-name</var> <code>) [ == ) <var>its_name</var> <code>]</code> *</code></dt>
<dd><p>Declares that <var>external-name</var> or the exported function whose
d63 1
a63 1
the DLL.
d65 2
a66 7
Note: The <code>IMPORTS</code> has to be the last command in .def file, as keywords
are treated - beside <code>LIBRARY</code> - as simple name-identifiers.
If you want to use LIBRARY as name then you need to quote it.
</p>
</dd>
<dt><code>DESCRIPTION</code> <var>string</var></dt>
<dd><p>Puts <var>string</var> into the output <samp>.exp</samp> file in the
d68 2
a69 5
</p>
</dd>
<dt><code>STACKSIZE</code> <var>number-reserve</var> <code>[, </code> <var>number-commit</var> <code>]</code></dt>
<dt><code>HEAPSIZE</code> <var>number-reserve</var> <code>[, </code> <var>number-commit</var> <code>]</code></dt>
<dd><p>Generates <code>--stack</code> or <code>--heap</code>
d72 2
a73 6
</p>
</dd>
<dt><code>CODE</code> <var>attr</var> <code>+</code></dt>
<dt><code>DATA</code> <var>attr</var> <code>+</code></dt>
<dt><code>SECTIONS (</code> <var>section-name</var> <var>attr</var><code> + ) *</code></dt>
<dd><p>Generates <code>--attr</code> <var>section-name</var> <var>attr</var> in the output
a76 10
</p>
</dd>
</dl>


<hr>
<div class="header">
<p>
Up: <a href="dlltool.html#dlltool" accesskey="u" rel="up">dlltool</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Binutils-Index.html#Binutils-Index" title="Index" rel="index">Index</a>]</p>
</div>
d78 1
d80 1
a81 2
</body>
</html>
@

