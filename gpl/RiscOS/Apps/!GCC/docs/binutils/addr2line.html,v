head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.2
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.08;	author jlee;	state Exp;
branches;
next	1.1.1.2;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.2
date	2017.04.15.15.12.06;	author jlee;	state Exp;
branches;
next	;
commitid	Kx60weqAWGeJSDNz;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>addr2line - GNU Binary Utilities</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="GNU Binary Utilities">
<meta name="generator" content="makeinfo 4.13">
<link title="Top" rel="start" href="index.html#Top">
<link rel="prev" href="c_002b_002bfilt.html#c_002b_002bfilt" title="c++filt">
<link rel="next" href="nlmconv.html#nlmconv" title="nlmconv">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled ``GNU Free Documentation License''.

-->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<a name="addr2line"></a>
<p>
Next:&nbsp;<a rel="next" accesskey="n" href="nlmconv.html#nlmconv">nlmconv</a>,
Previous:&nbsp;<a rel="previous" accesskey="p" href="c_002b_002bfilt.html#c_002b_002bfilt">c++filt</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="index.html#Top">Top</a>
<hr>
</div>

<h2 class="chapter">10 addr2line</h2>

<p><a name="index-addr2line-124"></a><a name="index-address-to-file-name-and-line-number-125"></a>
<!-- man title addr2line convert addresses into file names and line numbers. -->

<pre class="smallexample">     <!-- man begin SYNOPSIS addr2line -->
     addr2line [<samp><span class="option">-a</span></samp>|<samp><span class="option">--addresses</span></samp>]
               [<samp><span class="option">-b</span></samp> <var>bfdname</var>|<samp><span class="option">--target=</span></samp><var>bfdname</var>]
               [<samp><span class="option">-C</span></samp>|<samp><span class="option">--demangle</span></samp>[=<var>style</var>]]
               [<samp><span class="option">-e</span></samp> <var>filename</var>|<samp><span class="option">--exe=</span></samp><var>filename</var>]
               [<samp><span class="option">-f</span></samp>|<samp><span class="option">--functions</span></samp>] [<samp><span class="option">-s</span></samp>|<samp><span class="option">--basename</span></samp>]
               [<samp><span class="option">-i</span></samp>|<samp><span class="option">--inlines</span></samp>]
               [<samp><span class="option">-p</span></samp>|<samp><span class="option">--pretty-print</span></samp>]
               [<samp><span class="option">-j</span></samp>|<samp><span class="option">--section=</span></samp><var>name</var>]
               [<samp><span class="option">-H</span></samp>|<samp><span class="option">--help</span></samp>] [<samp><span class="option">-V</span></samp>|<samp><span class="option">--version</span></samp>]
               [addr addr ...]
     <!-- man end -->
</pre>
   <!-- man begin DESCRIPTION addr2line -->
   <p><samp><span class="command">addr2line</span></samp> translates addresses into file names and line numbers. 
Given an address in an executable or an offset in a section of a relocatable
object, it uses the debugging information to figure out which file name and
line number are associated with it.

   <p>The executable or relocatable object to use is specified with the <samp><span class="option">-e</span></samp>
option.  The default is the file <samp><span class="file">a.out</span></samp>.  The section in the relocatable
object to use is specified with the <samp><span class="option">-j</span></samp> option.

   <p><samp><span class="command">addr2line</span></samp> has two modes of operation.

   <p>In the first, hexadecimal addresses are specified on the command line,
and <samp><span class="command">addr2line</span></samp> displays the file name and line number for each
address.

   <p>In the second, <samp><span class="command">addr2line</span></samp> reads hexadecimal addresses from
standard input, and prints the file name and line number for each
address on standard output.  In this mode, <samp><span class="command">addr2line</span></samp> may be used
in a pipe to convert dynamically chosen addresses.

   <p>The format of the output is &lsquo;<samp><span class="samp">FILENAME:LINENO</span></samp>&rsquo;.  The file name and
line number for each address is printed on a separate line.  If the
<samp><span class="command">-f</span></samp> option is used, then each &lsquo;<samp><span class="samp">FILENAME:LINENO</span></samp>&rsquo; line is
preceded by a &lsquo;<samp><span class="samp">FUNCTIONNAME</span></samp>&rsquo; line which is the name of the function
containing the address.  If the <samp><span class="command">-a</span></samp> option is used, then the
address read is first printed.

   <p>If the file name or function name can not be determined,
<samp><span class="command">addr2line</span></samp> will print two question marks in their place.  If the
line number can not be determined, <samp><span class="command">addr2line</span></samp> will print 0.

<!-- man end -->
<!-- man begin OPTIONS addr2line -->
   <p>The long and short forms of options, shown here as alternatives, are
equivalent.

     <dl>
<dt><samp><span class="env">-a</span></samp><dt><samp><span class="env">--addresses</span></samp><dd>Display address before function names or file and line number
information.  The address is printed with a &lsquo;<samp><span class="samp">0x</span></samp>&rsquo; prefix to easily
identify it.

     <br><dt><samp><span class="env">-b </span><var>bfdname</var></samp><dt><samp><span class="env">--target=</span><var>bfdname</var></samp><dd><a name="index-object-code-format-126"></a>Specify that the object-code format for the object files is
<var>bfdname</var>.

     <br><dt><samp><span class="env">-C</span></samp><dt><samp><span class="env">--demangle[=</span><var>style</var><span class="env">]</span></samp><dd><a name="index-demangling-in-objdump-127"></a>Decode (<dfn>demangle</dfn>) low-level symbol names into user-level names. 
Besides removing any initial underscore prepended by the system, this
makes C++ function names readable.  Different compilers have different
mangling styles. The optional demangling style argument can be used to
choose an appropriate demangling style for your compiler. See <a href="c_002b_002bfilt.html#c_002b_002bfilt">c++filt</a>,
for more information on demangling.

     <br><dt><samp><span class="env">-e </span><var>filename</var></samp><dt><samp><span class="env">--exe=</span><var>filename</var></samp><dd>Specify the name of the executable for which addresses should be
translated.  The default file is <samp><span class="file">a.out</span></samp>.

     <br><dt><samp><span class="env">-f</span></samp><dt><samp><span class="env">--functions</span></samp><dd>Display function names as well as file and line number information.

     <br><dt><samp><span class="env">-s</span></samp><dt><samp><span class="env">--basenames</span></samp><dd>Display only the base of each file name.

     <br><dt><samp><span class="env">-i</span></samp><dt><samp><span class="env">--inlines</span></samp><dd>If the address belongs to a function that was inlined, the source
information for all enclosing scopes back to the first non-inlined
function will also be printed.  For example, if <code>main</code> inlines
<code>callee1</code> which inlines <code>callee2</code>, and address is from
<code>callee2</code>, the source information for <code>callee1</code> and <code>main</code>
will also be printed.

     <br><dt><samp><span class="env">-j</span></samp><dt><samp><span class="env">--section</span></samp><dd>Read offsets relative to the specified section instead of absolute addresses.

     <br><dt><samp><span class="env">-p</span></samp><dt><samp><span class="env">--pretty-print</span></samp><dd>Make the output more human friendly: each location are printed on one line. 
If option <samp><span class="option">-i</span></samp> is specified, lines for all enclosing scopes are
prefixed with &lsquo;<samp><span class="samp">(inlined by)</span></samp>&rsquo;. 
</dl>

<!-- man end -->
   </body></html>

@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@


1.1.1.2
log
@GCC 4.7.4 release 3
Detail:
  This is a copy of GCC 4.7.4 release 3, composed from the following packages available from riscos.info:
  * GCC4 4.7.4-Rel3-1
  Note that to avoid bloating CVS there's no C++ compiler this time, and some of the extraneous libraries (e.g. VFP/NEON optimised libs) have been deleted
Admin:
  Tagged as GCC-4_7_4_r3
@
text
@d1 14
a14 3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 1991-2013 Free Software Foundation, Inc.
d21 1
a21 5
section entitled "GNU Free Documentation License".
 -->
<!-- Created by GNU Texinfo 5.2, http://www.gnu.org/software/texinfo/ -->
<head>
<title>GNU Binary Utilities: addr2line</title>
a22 38
<meta name="description" content="GNU Binary Utilities: addr2line">
<meta name="keywords" content="GNU Binary Utilities: addr2line">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="index.html#Top" rel="start" title="Top">
<link href="Binutils-Index.html#Binutils-Index" rel="index" title="Binutils Index">
<link href="index.html#SEC_Contents" rel="contents" title="Table of Contents">
<link href="index.html#Top" rel="up" title="Top">
<link href="nlmconv.html#nlmconv" rel="next" title="nlmconv">
<link href="c_002b_002bfilt.html#c_002b_002bfilt" rel="prev" title="c++filt">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.indentedblock {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
div.smalllisp {margin-left: 3.2em}
kbd {font-style:oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nocodebreak {white-space:nowrap}
span.nolinebreak {white-space:nowrap}
span.roman {font-family:serif; font-weight:normal}
span.sansserif {font-family:sans-serif; font-weight:normal}
ul.no-bullet {list-style: none}
d24 12
a35 3
</style>


d37 2
a38 2

<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
a39 1
<div class="header">
d41 4
a44 1
Next: <a href="nlmconv.html#nlmconv" accesskey="n" rel="next">nlmconv</a>, Previous: <a href="c_002b_002bfilt.html#c_002b_002bfilt" accesskey="p" rel="prev">c++filt</a>, Up: <a href="index.html#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Binutils-Index.html#Binutils-Index" title="Index" rel="index">Index</a>]</p>
d46 1
a46 2
<hr>
<a name="addr2line-1"></a>
d49 2
a50 2
<a name="index-addr2line"></a>
<a name="index-address-to-file-name-and-line-number"></a>
d52 18
d71 3
a73 12
<div class="smallexample">
<pre class="smallexample">addr2line [<samp>-a</samp>|<samp>--addresses</samp>]
          [<samp>-b</samp> <var>bfdname</var>|<samp>--target=</samp><var>bfdname</var>]
          [<samp>-C</samp>|<samp>--demangle</samp>[=<var>style</var>]]
          [<samp>-e</samp> <var>filename</var>|<samp>--exe=</samp><var>filename</var>]
          [<samp>-f</samp>|<samp>--functions</samp>] [<samp>-s</samp>|<samp>--basename</samp>]
          [<samp>-i</samp>|<samp>--inlines</samp>]
          [<samp>-p</samp>|<samp>--pretty-print</samp>]
          [<samp>-j</samp>|<samp>--section=</samp><var>name</var>]
          [<samp>-H</samp>|<samp>--help</samp>] [<samp>-V</samp>|<samp>--version</samp>]
          [addr addr &hellip;]
</pre></div>
d75 1
d77 2
a78 13
<p><code>addr2line</code> translates addresses into file names and line numbers.
Given an address in an executable or an offset in a section of a relocatable
object, it uses the debugging information to figure out which file name and
line number are associated with it.
</p>
<p>The executable or relocatable object to use is specified with the <samp>-e</samp>
option.  The default is the file <samp>a.out</samp>.  The section in the relocatable
object to use is specified with the <samp>-j</samp> option.
</p>
<p><code>addr2line</code> has two modes of operation.
</p>
<p>In the first, hexadecimal addresses are specified on the command line,
and <code>addr2line</code> displays the file name and line number for each
d80 2
a81 2
</p>
<p>In the second, <code>addr2line</code> reads hexadecimal addresses from
d83 1
a83 1
address on standard output.  In this mode, <code>addr2line</code> may be used
a84 26
</p>
<p>The format of the output is &lsquo;<samp>FILENAME:LINENO</samp>&rsquo;.  The file name and
line number for each input address is printed on separate lines.
</p>
<p>If the <samp>-f</samp> option is used, then each &lsquo;<samp>FILENAME:LINENO</samp>&rsquo;
line is preceded by &lsquo;<samp>FUNCTIONNAME</samp>&rsquo; which is the name of the
function containing the address.
</p>
<p>If the <samp>-i</samp> option is used and the code at the given address is
present there because of inlining by the compiler then the
&lsquo;<samp>{FUNCTIONNAME} FILENAME:LINENO</samp>&rsquo; information for the inlining
function will be displayed afterwards.  This continues recursively
until there is no more inlining to report.
</p>
<p>If the <samp>-a</samp> option is used then the output is prefixed by the
input address.
</p>
<p>If the <samp>-p</samp> option is used then the output for each input
address is displayed on one, possibly quite long, line.  If
<samp>-p</samp> is not used then the output is broken up into multiple
lines, based on the paragraphs above.
</p>
<p>If the file name or function name can not be determined,
<code>addr2line</code> will print two question marks in their place.  If the
line number can not be determined, <code>addr2line</code> will print 0.
</p>
d86 15
d102 3
a104 8
<p>The long and short forms of options, shown here as alternatives, are
equivalent.
</p>
<dl compact="compact">
<dt><code>-a</code></dt>
<dt><code>--addresses</code></dt>
<dd><p>Display the address before the function name, file and line number
information.  The address is printed with a &lsquo;<samp>0x</samp>&rsquo; prefix to easily
d106 2
a107 6
</p>
</dd>
<dt><code>-b <var>bfdname</var></code></dt>
<dt><code>--target=<var>bfdname</var></code></dt>
<dd><a name="index-object-code-format-4"></a>
<p>Specify that the object-code format for the object files is
d109 2
a110 6
</p>
</dd>
<dt><code>-C</code></dt>
<dt><code>--demangle[=<var>style</var>]</code></dt>
<dd><a name="index-demangling-in-objdump-1"></a>
<p>Decode (<em>demangle</em>) low-level symbol names into user-level names.
d116 9
a124 21
</p>
</dd>
<dt><code>-e <var>filename</var></code></dt>
<dt><code>--exe=<var>filename</var></code></dt>
<dd><p>Specify the name of the executable for which addresses should be
translated.  The default file is <samp>a.out</samp>.
</p>
</dd>
<dt><code>-f</code></dt>
<dt><code>--functions</code></dt>
<dd><p>Display function names as well as file and line number information.
</p>
</dd>
<dt><code>-s</code></dt>
<dt><code>--basenames</code></dt>
<dd><p>Display only the base of each file name.
</p>
</dd>
<dt><code>-i</code></dt>
<dt><code>--inlines</code></dt>
<dd><p>If the address belongs to a function that was inlined, the source
a129 14
</p>
</dd>
<dt><code>-j</code></dt>
<dt><code>--section</code></dt>
<dd><p>Read offsets relative to the specified section instead of absolute addresses.
</p>
</dd>
<dt><code>-p</code></dt>
<dt><code>--pretty-print</code></dt>
<dd><p>Make the output more human friendly: each location are printed on one line.
If option <samp>-i</samp> is specified, lines for all enclosing scopes are
prefixed with &lsquo;<samp>(inlined by)</samp>&rsquo;.
</p></dd>
</dl>
d131 1
d133 4
d138 2
a139 7
<hr>
<div class="header">
<p>
Next: <a href="nlmconv.html#nlmconv" accesskey="n" rel="next">nlmconv</a>, Previous: <a href="c_002b_002bfilt.html#c_002b_002bfilt" accesskey="p" rel="prev">c++filt</a>, Up: <a href="index.html#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="index.html#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="Binutils-Index.html#Binutils-Index" title="Index" rel="index">Index</a>]</p>
</div>


a140 2
</body>
</html>
@

