head	1.1;
branch	1.1.1;
access;
symbols
	GCC-4_7_4_r3:1.1.1.1
	GCC-4_1_2_r2:1.1.1.1
	MAIN:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2013.07.29.22.46.20;	author jlee;	state Exp;
branches
	1.1.1.1;
next	;
commitid	Uxh7I3IiWVY2YpZw;

1.1.1.1
date	2013.07.29.22.46.20;	author jlee;	state Exp;
branches;
next	;
commitid	Uxh7I3IiWVY2YpZw;


desc
@@


1.1
log
@Initial revision
@
text
@# Probably the smallest example of how to create a module using GCCSDK.

CC          = gcc
CCFLAGS     = -mthrowback -mmodule -O3
ASM         = $(CC)
ASMFLAGS    = $(CCFLAGS)
LINK        = gcc
LINKFLAGS   = -mmodule
CMHG        = cmunge
CMHGFLAGS   = -tgcc -32bit

OBJS = gccmodule.o module.o

gccmodule: $(OBJS)
	$(LINK) $(LINKFLAGS) $(OBJS) -o $@@

.SUFFIXES:
.SUFFIXES: .c .o .h .cmhg

.c.o:;	$(CC) $(CCFLAGS) -c -o $@@ $<

# CMunge invocation rule:
.cmhg.h:;	$(CMHG) $(CMHGFLAGS) -d $@@ $<
.cmhg.o:;	$(CMHG) $(CMHGFLAGS) -o $@@ $<

# Dependencies:
gccmodule.c: module.h
@


1.1.1.1
log
@  Initial import of GCC 4
Detail:
  This is a standard copy of GCC 4.1.2 r2, straight from the packages available on riscos.info
  Installed packages are:
  * GCC4 4.1.2-Rel2-1
  * GCC4-C++ 4.1.2-Rel2-1
Admin:
  Tagged as GCC-4_1_2_r2
@
text
@@
