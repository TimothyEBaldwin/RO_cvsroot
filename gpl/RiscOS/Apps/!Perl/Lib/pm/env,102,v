head	1.1;
access;
symbols
	Perl-0_04:1.1
	Perl-2013-05-27:1.1
	Batch4:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.10.14.21.30.09;	author bavison;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Clean reimport of the build environment directories.
This represents the version released in the Batch 4 "bbe" tarfiles.
Tagged as 'Batch4'
@
text
@# Copyright 2008 Castle Technology Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
package Env;

=head1 NAME

Env - Perl module that imports environment variables

=head1 DESCRIPTION

Perl maintains environment variables in a pseudo-associative-array
named %ENV.  For when this access method is inconvenient, the Perl
module C<Env> allows environment variables to be treated as simple
variables.

The Env::import() function ties environment variables with suitable
names to global Perl variables with the same names.  By default it
does so with all existing environment variables (C<keys %ENV>).  If
the import function receives arguments, it takes them to be a list of
environment variables to tie; it's okay if they don't yet exist.

After an environment variable is tied, merely use it like a normal variable.
You may access its value 

    @@path = split(/:/, $PATH);

or modify it

    $PATH .= ":.";

however you'd like.
To remove a tied environment variable from
the environment, assign it the undefined value

    undef $PATH;

=head1 AUTHOR

Chip Salzenberg <chip@@fin.uucp>

=cut

sub import {
    my ($callpack) = caller(0);
    my $pack = shift;
    my @@vars = @@_ ? @@_ : keys(%ENV);

    foreach (@@vars) {
	tie ${"${callpack}::$_"}, Env, $_ if /^[A-Za-z_]\w*$/;
    }
}

sub TIESCALAR {
    bless \($_[1]);
}

sub FETCH {
    my ($self) = @@_;
    $ENV{$$self};
}

sub STORE {
    my ($self, $value) = @@_;
    if (defined($value)) {
	$ENV{$$self} = $value;
    } else {
	delete $ENV{$$self};
    }
}

1;
@
