head	1.5;
access;
symbols
	DDTLib-0_05:1.4
	DDTLib-0_04:1.3
	DDTLib-0_03:1.2
	RO_5_07:1.2
	DDTLib-0_02:1.2
	dellis_autobuild_BaseSW:1.2
	dcotton_autobuild_BaseSW:1.2
	DDTLib-0_01:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2015.01.10.10.32.04;	author rsprowson;	state dead;
branches;
next	1.4;
commitid	mJugV2uqyRcBTs5y;

1.4
date	2014.10.18.13.29.33;	author srevill;	state Exp;
branches;
next	1.3;
commitid	0PCeLW2jAGuTzGUx;

1.3
date	2012.10.09.10.50.52;	author srevill;	state Exp;
branches;
next	1.2;
commitid	5lBAD6gfKwAcsHnw;

1.2
date	2000.04.11.17.41.07;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.11.17.39.06;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.11.17.39.06;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Makefile recreated from fragments
Exported headers moved to 'h' directory.

Version 0.06. Tagged as 'DDTLib-0_06'
@
text
@# File:    Makefile
# Purpose: Makefile for DDTLib
# Author:  Ben Laughton
#
# History:
#
# 2000-04-10: BAL
# Created.




# ------------------------------------------------------------------------------
# Paths
#

EXP_DIR		= <Lib$Dir>.DDTLib
LIBDIR		= <Lib$Dir>



# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= mkdir -p
AS		= objasm
CC		= $(MemCheckCC) cc
C++		= c++
CMHG		= cmhg
CP		= copy
LD		= link
RM		= remove
WIPE		= x wipe
CD		= dir
CHMOD		= access
TOUCH		= create
DATA2AOF	= datatoaof
MODSQZ		= modsqz
LB		= libfile




# ------------------------------------------------------------------------------
# Flags
#

AFLAGS		= -depend !Depend $(THROWBACK) $(EXTRA_A_FLAGS) -stamp -quit
CCFLAGS		= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -c -Wsp -ffah
LDFLAGS		= -aof
CPFLAGS		= ~cfr~v
WFLAGS		= ~c~vr
LBFLAGS		= -c
CHMODFLAGS	= RW/r

DFLAGS		= $(EXTRA_C_FLAGS)

INCLUDES	= -IC:,TCPIPLibs:




# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= DDTLib
TARGET		= l.DDTLib$(LIBSUFFIX)
EXPORTS		= $(EXP_C_H).$(COMPONENT)

OBJS =\
 $(EXT).AIFHeader\
 $(EXT).DDT\
 $(EXT).DDT2\
 $(EXT).GetProc\
 $(EXT).NrSymb\
 $(EXT).Print1\
 $(EXT).SectFile\
 $(EXT).SrcPos\
 $(EXT).ThrowBack

# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES:	.o .z .od .odz .i .h .s .c
.c.i:;		$(CC)	$(CCFLAGS)	-C -E $< >> $@@
.c.o:;		$(CC)	$(CCFLAGS)	-o $@@ $<
.c.od:;		$(CC)	$(CCFLAGS)	-fn -g -o $@@ $<
.c.z:;		$(CC)	$(CCFLAGS)	-DDesk__MODULE_CLIENT -zM -o $@@ $<
.c.odz:;	$(CC)	$(CCFLAGS)	-DDesk__MODULE_CLIENT -zM -fn -g -o $@@ $<
.s.i:;		@@echo $@@
.s.o:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 0" $< $@@
.s.z:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 0" $< $@@
.s.od:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 1" $< $@@
.s.odz:;	$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 1" $< $@@




# ------------------------------------------------------------------------------
# Local build rules
#

all: $(TARGET)

debug: $(TARGET)

preprocess: $(TARGET)

$(TARGET): $(OBJS) $(LIBS) $(EXT).local_dirs
	$(MKDIR) l
	$(LB) $(LBFLAGS) -o $@@ $(OBJS)




# ------------------------------------------------------------------------------
# Common build rules

$(EXT).local_dirs:
	@@$(MKDIR) $(EXT)
	@@$(TOUCH) $@@

$(EXP_DIR).dirs:
	@@$(MKDIR) $(EXP_DIR).h
	@@$(MKDIR) $(EXP_DIR).o
	@@$(TOUCH) $@@



# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

export: export_$(PHASE)

export_hdrs: $(EXP_DIR).dirs
	@@$(CP)	Export.h	$(EXP_DIR).*		$(CPFLAGS)
	@@$(CP)	VersionNum	$(EXP_DIR).LibVersion	$(CPFLAGS)

export_libs: $(TARGET) $(EXP_DIR).dirs
	@@$(CP)	$(TARGET)	$(EXP_DIR).o.*	$(CPFLAGS)

clean:
	$(WIPE) $(EXT)			$(WFLAGS)



# ------------------------------------------------------------------------------
# RISC OS disc build rules
#

install:
	@@$(MKDIR) $(INSTDIR)
	@@$(CP)	$(EXP_DIR) $(INSTDIR).$(COMPONENT)	$(CPFLAGS)



# ------------------------------------------------------------------------------
# Dynamic dependencies:
@


1.4
log
@Added an install phase to support CTools builds.

Version 0.05. Tagged as 'DDTLib-0_05'
@
text
@@


1.3
log
@Removed lots of annoying errors during clean phase

Version 0.04. Tagged as 'DDTLib-0_04'
@
text
@a21 1

d151 9
@


1.2
log
@Modified to use srccommit.

Version 0.01. Tagged as 'DDTLib-0_01'
@
text
@d35 1
a35 1
WIPE		= -wipe
@


1.1
log
@Initial revision
@
text
@d141 2
a142 1
	@@$(CP)	Export.h	$(EXP_DIR).*	$(CPFLAGS)
@


1.1.1.1
log
@Summary:                        
  Initial import of DDTLib library into CVS.
                                
Detail:                         
  This is Julian Smith's library to extract debug information from executables,
  required by his Trace library.                      
  The build system for the main library has been restructured not to use
  Makatic.
  There may be binary-only copies of this library floating around under the
  name 'DDT', but I've taken the liberty of renaming the library DDTLib to
  avoid possible confusion with the DDT module.
                                
Admin:                          
  all, clean, and export phases tested.
  Tested using the ATM driver, which uses DebugLib, which uses Trace, which
  uses DDTLib; appears to work as previous binary-only version did.
@
text
@@
