head	1.3;
access;
symbols
	Trace-0_12:1.3
	Trace-0_11:1.3
	Trace-0_10:1.3
	Trace-0_09:1.3
	Trace-0_08:1.3
	Trace-0_07:1.2
	RO_5_07:1.2
	Trace-0_06:1.2
	Trace-0_05:1.2
	dellis_autobuild_BaseSW:1.2
	dcotton_autobuild_BaseSW:1.2
	Trace-0_04:1.2
	Trace-0_03:1.2
	Trace-0_02:1.2
	Trace-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.03.24.12.47.28;	author jlee;	state Exp;
branches;
next	1.2;
commitid	REyYcYrZVQhMu8Yv;

1.2
date	2000.04.19.16.35.05;	author kbracey;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.11.17.50.10;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.11.17.50.10;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fix asasm 2.00 errors
Detail:
  APCSCheck/s/veneer, s/AddrVen, s/Veneer - AREAs were mistakenly marked as both CODE and DATA. Corrected to only mark them as CODE.
Admin:
  Tested briefly


Version 0.08. Retagged as 'Trace-0_08'
@
text
@; 
; Copyright Julian Smith.
; 
; This file is part of Trace.
; 
; Trace is free software: you can redistribute it and/or modify it under
; the terms of the GNU Lesser General Public License as published by the
; Free Software Foundation, either version 3 of the License, or (at your
; option) any later version.
; 
; Trace is distributed in the hope that it will be useful, but WITHOUT
; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General
; Public License for more details.
; 
; You should have received a copy of the GNU Lesser General Public
; License along with Trace.  If not, see <http://www.gnu.org/licenses/>.
; 
	;
	; Example function:

	;	EQUS "Foo"
	;	EQUD &ff0000c	; length of 'Foo', rounded up to word.
	;	Foo
	;		MOV	ip, lr
	;		STMFD	sp!, { r0, fp, ip, lr, pc}
	;		...

	; This will be replaced by:
	;
	;	Foo
	;		B	HierProf__Function2_Foo
	;		STMFD	sp!, { r0, fp, ip, lr, pc}
	;		...

		; (in some malloc block)


	AREA	Trace_veneer, CODE

	GET sh.Macros

address_zero
	EXPORTGLOBAL	Trace__Function2

        MRS     ip, CPSR        ; Can't be bothered with 26-bit ARMs
        STR     ip, [sp, #-4]!  ; to store flags...
	LDR	ip, Trace__Function2_local_r14
	CMP	ip, #0

	BEQ	intercept

	; Have to restore flags - we are returning without MOVS pc, lr.
        LDR     ip, [sp], #4
        MSR     CPSR_f, ip      ; restore flags

Trace__Function2_offset_relocated_instruction1__POS
	MOV	r0, r0		; Replace with first instruction from original Foo.

Trace__Function2_offset_B_back1__POS
	B	address_zero	; Relocate to:	B	Foo + 1 instruction

intercept

        LDR     ip, [sp], #4
        MSR     CPSR_f, ip      ; restore flags

	STR	lr, Trace__Function2_local_r14

	; Call start function.
	STMFD	sp!, { a1-a4}
	ADR	a1, Trace__Function2_name

Trace__Function2_offset_BL_starthandler__POS
	BL	address_zero	; Relocate to:	BL Trace__StartHandler

	LDMFD	sp!, { a1-a4}

	; Call Foo

	; The return address in lr has to be done by hand:

	; The next two instructions put address of 'return' into lr, but with
	; the same processor mode flags as the current pc.
	; This is a fix for a bug found by Ben Laughton - previously, 'ADR lr, return'
	; was used, which resulted in a change to USR mode when lr was used to return
	; from Foo. This caused big problems when running in non-USR mode originally
	; (eg module code).

	;ADR	lr, return
	MOV	lr, #(return-.-12)
	ADD	lr, lr, pc

Trace__Function2_offset_relocated_instruction2__POS
	MOV	r0, r0		; Replace with first instruction from original Foo.

Trace__Function2_offset_B_back2__POS
	B	address_zero	; Relocate to:	BL	Foo + 1 instruction

return
	; Call Stop handler
	STMFD	sp!, { a1-a4}
	ADR	a1, Trace__Function2_name

Trace__Function2_offset_BL_stophandler__POS
	BL	address_zero	; Relocate to:	BL	Trace__StopHandler

	; Recover stored lr.
	LDR	lr, Trace__Function2_local_r14
	MOV	ip, #0
	STR	ip, Trace__Function2_local_r14

	LDMFD	sp!, { a1-a4}
     [ {CONFIG}=26
	MOVS	pc, lr	; Now restores flags... 19 Aug 1996
     |
        MOV     pc, lr
     ]

Trace__Function2_local_r14
	DCD	0


;	EXPORT	Trace__Function2_End
;Trace__Function2_End
Trace__Function2_codesize__POS

Trace__Function2_name = "Foo", 0
	ALIGN

	MakeOffset	Trace__Function2_codesize,			address_zero
	MakeOffset	Trace__Function2_offset_relocated_instruction1,	address_zero
	MakeOffset	Trace__Function2_offset_B_back1,		address_zero
	MakeOffset	Trace__Function2_offset_BL_starthandler,	address_zero
	MakeOffset	Trace__Function2_offset_relocated_instruction2,	address_zero
	MakeOffset	Trace__Function2_offset_B_back2,		address_zero
	MakeOffset	Trace__Function2_offset_BL_stophandler,		address_zero


	END
@


1.2
log
@Should hopefully be APCS-32 compatible. No longer ARM 2/3 compatible though.
Untested.

Version 0.02. Tagged as 'Trace-0_02'
@
text
@d39 1
a39 1
	AREA	Trace_veneer, CODE, DATA
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
	
d28 1
a28 1
	
d35 1
a35 1
	
d37 2
a38 2
	
	
d40 1
a40 1
	
d42 1
a42 1
	
d45 3
a47 2
	
	STMFD	sp!, { pc}	; to store flags...
d50 1
a50 1
	
d52 1
a52 1
	
d54 3
a56 3
	LDMFD	sp!, {ip}
	TEQP	pc, ip	; restore flags.
	
d59 1
a59 1
	
d62 1
a62 1
	
d64 4
a67 4
	
	LDMFD	sp!, {ip}
	TEQP	pc, ip	; restore flags. Don't really need to do this, as we return using MOVS pc,lr.
	
d69 1
a69 1
	
d73 1
a73 1
	
d76 1
a76 1
	
d78 1
a78 1
	
d80 1
a80 1
	
d82 1
a82 1
	
d86 2
a87 2
	; was used, which resulted in a change to USR mode when lr was used to return 
	; from Foo. This caused big problems when running in non-USR mode originally 
d89 1
a89 1
	
d93 1
a93 1
	
d96 1
a96 1
	
d99 1
a99 1
	
d104 1
a104 1
	
d107 1
a107 1
	
d112 1
a112 1
	
d114 1
d116 4
a119 1
	
d122 2
a123 2
	
	
d127 1
a127 1
	
d130 1
a130 1
	
d138 2
a139 2
	
	
@


1.1.1.1
log
@Summary:                        
  Initial import of Trace library into CVS.
                                
Detail:                         
  This is Julian Smith's library to automatically trace function execution.
  The build system for the main library has been restructured not to use
  Makatic, but the tests still do.
  The slightly over-the-top-for-something-this-small hierarchy of source code
  has been retained to avoid too much reorganisation, but the 'root' of this
  hierarchy has been moved up to where you'd expect to find it, not buried deep
  within places usually used for object code.
                                
Admin:                          
  all, clean, and export phases tested.
  Tested using the ATM driver, which uses DebugLib, which uses Trace.  Appears
  to work as previous binary-only version did.
@
text
@@
