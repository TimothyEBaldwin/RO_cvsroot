head	1.5;
access;
symbols
	Trace-0_12:1.5
	Trace-0_11:1.4
	Trace-0_10:1.4
	Trace-0_09:1.3
	Trace-0_08:1.3
	Trace-0_07:1.2
	RO_5_07:1.2
	Trace-0_06:1.2
	Trace-0_05:1.2
	dellis_autobuild_BaseSW:1.1.1.1
	dcotton_autobuild_BaseSW:1.2
	Trace-0_04:1.1.1.1
	Trace-0_03:1.1.1.1
	Trace-0_02:1.1.1.1
	Trace-0_01:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2015.01.10.10.23.51;	author rsprowson;	state Exp;
branches;
next	1.4;
commitid	hp6asoKx6k4MQs5y;

1.4
date	2014.10.18.13.29.47;	author srevill;	state Exp;
branches;
next	1.3;
commitid	HFgDVzlt2T1YzGUx;

1.3
date	2012.01.14.23.06.22;	author srevill;	state Exp;
branches;
next	1.2;
commitid	IwV8JaPWojrCacPv;

1.2
date	2001.06.01.10.23.41;	author nbingham;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.11.17.50.09;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.11.17.50.09;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Makefile recreated from fragments
Flattened out the sources into one 'c' and 'h' directory, while a cunning VPATH allowed the code to be compiled in situ, the link step failed because of the way the object file names are generated.
Code now uses Unix style directory referenced, rather than ^.

Version 0.12. Tagged as 'Trace-0_12'
@
text
@# Copyright RISC OS Open Limited.
# 
# This file is part of Trace.
# 
# Wild is free software: you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
# 
# Wild is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General
# Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with Trace.  If not, see <http://www.gnu.org/licenses/>.
# 
# Makefile for Trace
#

COMPONENT  = Trace
OBJS       = Stacker StackCaller StackFrames StackChunks \
             APCSVeneer APCSGetFP APCSCheck \
             Veneer AddrVen TraceAPI StartStop RTHack
HDRS       = APCSCheck FNames Stacker Trace
CDEFINES   = -DNDEBUG -DTrace_TRACE
ASMDEFINES = -pd "Desk_AS_EMBED_FNNAMES SETA 0"

include CLibrary

# Dynamic dependencies:
@


1.4
log
@Added an install phase to support CTools builds.

Version 0.10. Tagged as 'Trace-0_10'
@
text
@d1 27
a27 84
# File:    Makefile
# Purpose: Makefile for Trace
# Author:  Ben Laughton
#
# History:
#
# 2000-03-09: BAL
# Created.




# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= cdir
CP		= copy
RM		= remove
WIPE		= x wipe
STRIPDEPND	= stripdepnd



# ------------------------------------------------------------------------------
# Flags
#

CPFLAGS		= ~cfr~v
WFLAGS		= ~c~vr




# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= Trace

# C debugging and DebugLib do not map 1<->1 since DebugLib is used for other
# stuff as well.
C_DEBUG_ON	= -DDesk_DEBUG
C_DEBUG_OFF	= -DNDEBUG

INSTDIR		?= <Install$Dir>



# ------------------------------------------------------------------------------
# Build rules
#

# Local

all:
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX= EXT=o
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX=_M EXT=z
	@@echo $(COMPONENT): build complete

debug:
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXTRA_C_FLAGS=$(C_DEBUG_ON) LIBSUFFIX=_D EXT=od
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXTRA_C_FLAGS=$(C_DEBUG_ON) LIBSUFFIX=_M_D EXT=odz
	@@echo $(COMPONENT): debug build complete

preprocess:
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) EXT=i
	@@echo $(COMPONENT): preprocessing complete


export: export_$(PHASE)

export_hdrs:
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) TARGET=AvoidAMUBug EXT=AvoidAMUBug
	@@echo $(COMPONENT): export complete (hdrs)

export_libs:
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX= EXT=o
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX=_M EXT=z
	@@echo $(COMPONENT): export complete (libs)

install:
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) INSTDIR=$(INSTDIR) TARGET=AvoidAMUBug EXT=AvoidAMUBug
	@@echo $(COMPONENT): install complete
d29 1
a29 9
clean:
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXT=o
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXT=z
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXT=od
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXT=odz
	@@amu -f MainMake $(MFLAGS) $(MAKECMDGOALS) EXT=i
	@@$(WIPE) l	$(WFLAGS)
	@@$(STRIPDEPND) MainMake
	@@echo $(COMPONENT): cleaned
@


1.3
log
@Replace "-wipe" with "x wipe" in makefiles to remove annoying errors.

Version 0.08. Tagged as 'Trace-0_08'
@
text
@d46 1
d81 5
a85 1
	
@


1.2
log
@  Fixed incorrect use of MFLAGS
Admin:
  Tested on Ursula (APCS-32)

Version 0.05. Tagged as 'Trace-0_05'
@
text
@d20 1
a20 1
WIPE		= -wipe
@


1.1
log
@Initial revision
@
text
@d56 2
a57 2
	@@amu -f MainMake $(MFLAGS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX= EXT=o
	@@amu -f MainMake $(MFLAGS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX=_M EXT=z
d61 2
a62 2
	@@amu -f MainMake $(MFLAGS) EXTRA_C_FLAGS=$(C_DEBUG_ON) LIBSUFFIX=_D EXT=od
	@@amu -f MainMake $(MFLAGS) EXTRA_C_FLAGS=$(C_DEBUG_ON) LIBSUFFIX=_M_D EXT=odz
d66 1
a66 1
	@@amu -f MainMake $(MFLAGS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) EXT=i
d73 1
a73 1
	@@amu -f MainMake $(MFLAGS) TARGET=AvoidAMUBug EXT=AvoidAMUBug
d77 2
a78 2
	@@amu -f MainMake $(MFLAGS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX= EXT=o
	@@amu -f MainMake $(MFLAGS) EXTRA_C_FLAGS=$(C_DEBUG_OFF) LIBSUFFIX=_M EXT=z
d82 5
a86 5
	@@amu -f MainMake $(MFLAGS) EXT=o
	@@amu -f MainMake $(MFLAGS) EXT=z
	@@amu -f MainMake $(MFLAGS) EXT=od
	@@amu -f MainMake $(MFLAGS) EXT=odz
	@@amu -f MainMake $(MFLAGS) EXT=i
@


1.1.1.1
log
@Summary:                        
  Initial import of Trace library into CVS.
                                
Detail:                         
  This is Julian Smith's library to automatically trace function execution.
  The build system for the main library has been restructured not to use
  Makatic, but the tests still do.
  The slightly over-the-top-for-something-this-small hierarchy of source code
  has been retained to avoid too much reorganisation, but the 'root' of this
  hierarchy has been moved up to where you'd expect to find it, not buried deep
  within places usually used for object code.
                                
Admin:                          
  all, clean, and export phases tested.
  Tested using the ATM driver, which uses DebugLib, which uses Trace.  Appears
  to work as previous binary-only version did.
@
text
@@
