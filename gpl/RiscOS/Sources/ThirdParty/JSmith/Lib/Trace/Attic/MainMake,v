head	1.8;
access;
symbols
	Trace-0_11:1.7
	Trace-0_10:1.6
	Trace-0_09:1.5
	Trace-0_08:1.4
	Trace-0_07:1.4
	RO_5_07:1.4
	Trace-0_06:1.4
	Trace-0_05:1.3
	dellis_autobuild_BaseSW:1.3
	dcotton_autobuild_BaseSW:1.3
	Trace-0_04:1.3
	Trace-0_03:1.2
	Trace-0_02:1.2
	Trace-0_01:1.2
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2015.01.10.10.23.51;	author rsprowson;	state dead;
branches;
next	1.7;
commitid	hp6asoKx6k4MQs5y;

1.7
date	2014.12.14.09.22.16;	author rsprowson;	state Exp;
branches;
next	1.6;
commitid	eX2Ta0mvl7xsnZ1y;

1.6
date	2014.10.18.13.29.47;	author srevill;	state Exp;
branches;
next	1.5;
commitid	HFgDVzlt2T1YzGUx;

1.5
date	2012.10.09.10.51.20;	author srevill;	state Exp;
branches;
next	1.4;
commitid	oDTjoGGMgEKmsHnw;

1.4
date	2003.12.02.20.19.23;	author bavison;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.20.09.30.37;	author blaughto;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.11.17.52.39;	author blaughto;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.11.17.50.09;	author blaughto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.11.17.50.09;	author blaughto;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Makefile recreated from fragments
Flattened out the sources into one 'c' and 'h' directory, while a cunning VPATH allowed the code to be compiled in situ, the link step failed because of the way the object file names are generated.
Code now uses Unix style directory referenced, rather than ^.

Version 0.12. Tagged as 'Trace-0_12'
@
text
@# File:    Makefile
# Purpose: Makefile for Trace
# Author:  Ben Laughton
#
# History:
#
# 2000-03-09: BAL
# Created.




# ------------------------------------------------------------------------------
# Paths
#

EXP_DIR		= <Lib$Dir>.Trace
LIBDIR		= <Lib$Dir>




# ------------------------------------------------------------------------------
# Generic options
#

MKDIR		= mkdir -p
AS		= objasm
CC		= cc
C++		= c++
CMHG		= cmhg
CP		= copy
LD		= link
RM		= remove
WIPE		= x wipe
CD		= dir
CHMOD		= access
TOUCH		= create
DATA2AOF	= datatoaof
MODSQZ		= modsqz
LB		= libfile




# ------------------------------------------------------------------------------
# Flags
#

AFLAGS		= -depend !Depend $(THROWBACK) $(EXTRA_A_FLAGS) -stamp -quit
CCFLAGS		= -depend !Depend $(THROWBACK) $(INCLUDES) $(DFLAGS) -c -Wsp -ffah
DATA2AOFFLAGS	= -L _length -S -P -DP
LDFLAGS		= -aof
CPFLAGS		= ~cfr~v
WFLAGS		= ~c~vr
LBFLAGS		= -c
CHMODFLAGS	= RW/r

DFLAGS		= $(EXTRA_C_FLAGS) -DTrace_TRACE

INCLUDES	= -IC:,TCPIPLibs:




# ------------------------------------------------------------------------------
# Libraries
#

CLIB		= CLIB:o.stubs
RLIB		= RISCOSLIB:o.risc_oslib
RSTUBS		= RISCOSLIB:o.rstubs
ROMSTUBS	= RISCOSLIB:o.romstubs
ROMCSTUBS	= RISCOSLIB:o.romcstubs
ABSSYM		= RISC_OSLib:o.c_AbsSym

DESKLIB		= $(LIBDIR).Desk.o.Desk$(LIBSUFFIX)
MODMALLOCLIB	= $(LIBDIR).ModMalloc.o.ModMalloc
DDTLIB		= $(LIBDIR).DDTLib.o.DDTLib$(LIBSUFFIX)
WILDLIB		= $(LIBDIR).Wild.o.Wild$(LIBSUFFIX)

# When building a given variant of Trace, you may or may not want the
# corresponding variant of one of the other libraries.  The following allows
# you to control this.  If you alter things, you may need to lop off
# $(LIBSUFFIX) from the definitions above, and insert the required suffix
# into each of the definitions below.
L = $(EXTRALIBS) $(MODMALLOCLIB) $(DDTLIB) $(WILDLIB) $(DESKLIB)
L_D = $(EXTRALIBS) $(MODMALLOCLIB) $(DDTLIB) $(WILDLIB) $(DESKLIB)
L_M = $(EXTRALIBS) $(MODMALLOCLIB)zm $(DDTLIB) $(WILDLIB) $(DESKLIB)
L_M_D = $(EXTRALIBS) $(MODMALLOCLIB)zm $(DDTLIB) $(WILDLIB) $(DESKLIB)

LIBS = $(L$(LIBSUFFIX))



# ------------------------------------------------------------------------------
# Program specific options
#

COMPONENT	= Trace
TARGET		= l.Trace$(LIBSUFFIX)
EXPORTS		= $(EXP_C_H).$(COMPONENT)

OBJS =\
 APCSCheck.$(EXT).Check\
 APCSCheck.$(EXT).GetFP\
 APCSCheck.$(EXT).veneer\
 $(EXT).RTHack\
 $(EXT).StartStop\
 $(EXT).Trace\
 $(EXT).AddrVen\
 $(EXT).Veneer\
 Stacker.$(EXT).Stacker\
 Stacker.Stack.$(EXT).Chunks\
 Stacker.Stack.$(EXT).Frames\
 Stacker.Stack.$(EXT).GetCaller\


# Names to trim out of the symbol table of the partially linked build
TRIM =\
 Trace_StartHandler\
 Trace_StopHandler\
 Trace_SetHandlers\
 Trace_InterceptAllFunctions\
 Trace_IgnoreFunctions\
 Trace__InterceptFunction\
 Trace_SetAddressHandler\
 Trace_InterceptAddress\
 Trace_SetVerboseLevel\
 Trace_APCSCheck_Init\
 Trace_APCSCheck_SetAutoCorrect\
 Trace_APCSCheck_Start\
 Trace_APCSCheck_Stop\
 Trace_Stacker_StartHandler\
 Trace_Stacker_StopHandler\
 Trace_Stacker_SetOutputFunction\
 Trace_Stacker_Max_StartHandler\
 Trace_Stacker_Max_StopHandler\
 Trace_SetPrintfFn\
 Trace_SetUseRMA\
 Trace_SetNameProcessor


# ------------------------------------------------------------------------------
# Rule patterns
#

.SUFFIXES:	.o .z .od .odz .i .h .s .c
.c.i:;		$(CC)	$(CCFLAGS)	-C -E $< >> $@@
.c.o:;		$(CC)	$(CCFLAGS)	-o $@@ $<
.c.od:;		$(CC)	$(CCFLAGS)	-fn -g -o $@@ $<
.c.z:;		$(CC)	$(CCFLAGS)	-DDesk__MODULE_CLIENT -zM -o $@@ $<
.c.odz:;	$(CC)	$(CCFLAGS)	-DDesk__MODULE_CLIENT -zM -fn -g -o $@@ $<
.s.i:;		@@echo $@@
.s.o:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 0" $< $@@
.s.z:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 0" $< $@@
.s.od:;		$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 1" $< $@@
.s.odz:;	$(AS)	$(AFLAGS)	-pd "Desk_AS_EMBED_FNNAMES SETA 1" $< $@@




# ------------------------------------------------------------------------------
# Local build rules
#

all: $(TARGET)

debug: $(TARGET)

preprocess: $(TARGET)

$(TARGET): $(OBJS) $(LIBS) $(EXT).local_dirs
	$(MKDIR) l
	$(LB) $(LBFLAGS) -o $@@ $(OBJS)
	$(LD) $(LDFLAGS) -o $@@_PL $(OBJS) $(LIBS)
	$(LB) $(LBFLAGS) -o _$*_PL $@@_PL
	$(RM) _$*_PL




# ------------------------------------------------------------------------------
# Common build rules

$(EXT).local_dirs:
	@@$(MKDIR) $(EXT)
	@@$(MKDIR) APCSCheck.$(EXT)
	@@$(MKDIR) Stacker.$(EXT)
	@@$(MKDIR) Stacker.Stack.$(EXT)
	@@$(TOUCH) $@@

$(EXP_DIR).dirs:
	@@$(MKDIR) $(EXP_DIR).h
	@@$(MKDIR) $(EXP_DIR).o
	@@$(TOUCH) $@@



# ------------------------------------------------------------------------------
# RISC OS ROM build rules
#

export: export_$(PHASE)

export_hdrs: $(EXP_DIR).dirs
	@@$(CP)	Export.h	$(EXP_DIR).*		$(CPFLAGS)
	@@$(CP)	VersionNum	$(EXP_DIR).LibVersion	$(CPFLAGS)

export_libs: $(TARGET) $(EXP_DIR).dirs
	@@$(CP)	$(TARGET)	$(EXP_DIR).o.*	$(CPFLAGS)
	@@$(CP)	$(TARGET)_PL	$(EXP_DIR).o.*	$(CPFLAGS)

clean:
	$(WIPE) $(EXT)			$(WFLAGS)
	$(WIPE) APCSCheck.$(EXT)	$(WFLAGS)
	$(WIPE) Stacker.$(EXT)		$(WFLAGS)
	$(WIPE) Stacker.Stack.$(EXT)	$(WFLAGS)



# ------------------------------------------------------------------------------
# RISC OS disc build rules
#

install:
	@@$(MKDIR) $(INSTDIR)
	@@$(CP)	$(EXP_DIR) $(INSTDIR).$(COMPONENT)	$(CPFLAGS)



# ------------------------------------------------------------------------------
# Dynamic dependencies:
@


1.7
log
@Repoint ModMalloc library

Version 0.11. Tagged as 'Trace-0_11'
@
text
@@


1.6
log
@Added an install phase to support CTools builds.

Version 0.10. Tagged as 'Trace-0_10'
@
text
@d78 1
a78 1
MODMALLOCLIB	= $(LIBDIR).ModMalloc.o.Lib$(LIBSUFFIX)
d89 2
a90 2
L_M = $(EXTRALIBS) $(MODMALLOCLIB) $(DDTLIB) $(WILDLIB) $(DESKLIB)
L_M_D = $(EXTRALIBS) $(MODMALLOCLIB) $(DDTLIB) $(WILDLIB) $(DESKLIB)
@


1.5
log
@Removed lots of annoying errors during clean phase

Version 0.09. Tagged as 'Trace-0_09'
@
text
@d222 9
@


1.4
log
@No longer uses the non-32-bit TrimAOF program.

Version 0.06. Tagged as 'Trace-0_06'
@
text
@d35 1
a35 1
WIPE		= -wipe
@


1.3
log
@  Fixed typo in Makefile and problem when builidng on short-name file systems.
Detail:
  * Typo meant that all partially linked variants were always linking against
    the non-module variant of the ModMalloc library.
  * The aof2alf utility generates a temporary filename by appending an
    underscore to the input filename, which breaks for Trace_M_PL on 10 char
    limit file systems.  aof2alf is just an obey file which calls the linker
    with some canned arguments, so the makefile now just calls the linker
    directly, using a safe temporary filename.
Admin:
  Built on a long and short filename system.

Version 0.04. Tagged as 'Trace-0_04'
@
text
@a176 1
	aof.trimaof	$@@_PL $@@_PL $(TRIM)
@


1.2
log
@Modified to use srccommit.

Version 0.01. Tagged as 'Trace-0_01'
@
text
@d78 1
a78 1
MODMALLOCLIB	= $(LIBDIR).ModMalloc.o.Lib$(LIBSFFIX)
d178 2
a179 1
	aof.AOF2ALF	$@@_PL
@


1.1
log
@Initial revision
@
text
@d207 2
a208 1
	@@$(CP)	Export.h	$(EXP_DIR).*	$(CPFLAGS)
@


1.1.1.1
log
@Summary:                        
  Initial import of Trace library into CVS.
                                
Detail:                         
  This is Julian Smith's library to automatically trace function execution.
  The build system for the main library has been restructured not to use
  Makatic, but the tests still do.
  The slightly over-the-top-for-something-this-small hierarchy of source code
  has been retained to avoid too much reorganisation, but the 'root' of this
  hierarchy has been moved up to where you'd expect to find it, not buried deep
  within places usually used for object code.
                                
Admin:                          
  all, clean, and export phases tested.
  Tested using the ATM driver, which uses DebugLib, which uses Trace.  Appears
  to work as previous binary-only version did.
@
text
@@
