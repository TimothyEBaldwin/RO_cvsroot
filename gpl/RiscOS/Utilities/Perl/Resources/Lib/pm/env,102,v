head	1.1;
branch	1.1.1;
access;
symbols
	Perl-0_04:1.1.1.1
	Perl-0_03:1.1.1.1
	Perl-0_02:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.12.11.15.47.23;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.11.15.47.23;	author bavison;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@package Env;

=head1 NAME

Env - Perl module that imports environment variables

=head1 DESCRIPTION

Perl maintains environment variables in a pseudo-associative-array
named %ENV.  For when this access method is inconvenient, the Perl
module C<Env> allows environment variables to be treated as simple
variables.

The Env::import() function ties environment variables with suitable
names to global Perl variables with the same names.  By default it
does so with all existing environment variables (C<keys %ENV>).  If
the import function receives arguments, it takes them to be a list of
environment variables to tie; it's okay if they don't yet exist.

After an environment variable is tied, merely use it like a normal variable.
You may access its value 

    @@path = split(/:/, $PATH);

or modify it

    $PATH .= ":.";

however you'd like.
To remove a tied environment variable from
the environment, assign it the undefined value

    undef $PATH;

=head1 AUTHOR

Chip Salzenberg <chip@@fin.uucp>

=cut

sub import {
    my ($callpack) = caller(0);
    my $pack = shift;
    my @@vars = @@_ ? @@_ : keys(%ENV);

    foreach (@@vars) {
	tie ${"${callpack}::$_"}, Env, $_ if /^[A-Za-z_]\w*$/;
    }
}

sub TIESCALAR {
    bless \($_[1]);
}

sub FETCH {
    my ($self) = @@_;
    $ENV{$$self};
}

sub STORE {
    my ($self, $value) = @@_;
    if (defined($value)) {
	$ENV{$$self} = $value;
    } else {
	delete $ENV{$$self};
    }
}

1;
@


1.1.1.1
log
@Sources to RISC OS Perl 5 port 1.51 discovered in a dusty corner of the
Internet, given a new build structure and makefile, and knocked into C99
shape. Various functions missing from the original sources have been
recreated either in assembler or C, by disassembling the binary from
RiscOS.Apps.!Perl.Perl.
Tested in a desktop machine ROM build.
@
text
@@
