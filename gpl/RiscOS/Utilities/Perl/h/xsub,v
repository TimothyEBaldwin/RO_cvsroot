head	1.1;
branch	1.1.1;
access;
symbols
	Perl-0_04:1.1.1.1
	Perl-0_03:1.1.1.1
	Perl-0_02:1.1.1.1
	initial:1.1.1.1
	TRUNK:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.12.11.15.47.22;	author bavison;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.11.15.47.22;	author bavison;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#define ST(off) stack_base[ax + off]

#ifdef CAN_PROTOTYPE
#define XS(name) void name(CV* cv)
#else
#define XS(name) void name(cv) CV* cv;
#endif

#define dXSARGS				\
	dSP; dMARK;			\
	I32 ax = mark - stack_base + 1;	\
	I32 items = sp - mark

#define XSANY CvXSUBANY(cv)

#define dXSI32 I32 ix = XSANY.any_i32

#define XSRETURN(off) stack_sp = stack_base + ax + ((off) - 1); return

/* Simple macros to put new mortal values onto the stack.   */
/* Typically used to return values from XS functions.       */
#define XST_mIV(i,v)  ST(i)=sv_2mortal(newSViv(v));
#define XST_mNV(i,v)  ST(i)=sv_2mortal(newSVnv(v));
#define XST_mPV(i,v)  ST(i)=sv_2mortal(newSVpv(v,0));
#define XST_mNO(i)    ST(i)=sv_mortalcopy(&sv_no);
#define XST_mYES(i)   ST(i)=sv_mortalcopy(&sv_yes);
#define XST_mUNDEF(i) ST(i)=sv_newmortal();
 
#define XSRETURN_IV(v) XST_mIV(0,v);  XSRETURN(1)
#define XSRETURN_NV(v) XST_mNV(0,v);  XSRETURN(1)
#define XSRETURN_PV(v) XST_mPV(0,v);  XSRETURN(1)
#define XSRETURN_NO    XST_mNO(0);    XSRETURN(1)
#define XSRETURN_YES   XST_mYES(0);   XSRETURN(1)
#define XSRETURN_UNDEF XST_mUNDEF(0); XSRETURN(1)
@


1.1.1.1
log
@Sources to RISC OS Perl 5 port 1.51 discovered in a dusty corner of the
Internet, given a new build structure and makefile, and knocked into C99
shape. Various functions missing from the original sources have been
recreated either in assembler or C, by disassembling the binary from
RiscOS.Apps.!Perl.Perl.
Tested in a desktop machine ROM build.
@
text
@@
