head     1.1;
branch   1.1.1;
access   ;
symbols  INITIAL:1.1.1.1 HEAD:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     2006.07.31.13.55.36;  author adh;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2006.07.31.13.55.36;  author adh;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/* See md5.c for explanation and copyright information.  */

#ifndef MD5_H
#define MD5_H

/* Unlike previous versions of this code, uint32 need not be exactly
   32 bits, merely 32 bits or more.  Choosing a data type which is 32
   bits instead of 64 is not important; speed is considerably more
   important.  ANSI guarantees that "unsigned long" will be big enough,
   and always using it seems to have few disadvantages.  */
typedef unsigned long cvs_uint32;

struct cvs_MD5Context {
	cvs_uint32 buf[4];
	cvs_uint32 bits[2];
	unsigned char in[64];
};

void cvs_MD5Init PROTO ((struct cvs_MD5Context *context));
void cvs_MD5Update PROTO ((struct cvs_MD5Context *context,
			   unsigned char const *buf, unsigned len));
void cvs_MD5Final PROTO ((unsigned char digest[16],
			  struct cvs_MD5Context *context));
void cvs_MD5Transform PROTO ((cvs_uint32 buf[4], const unsigned char in[64]));

#endif /* !MD5_H */
@


1.1.1.1
log
@Initial import of CVS v1.11.22 into new CVS repository. This is the
version of CVS built on Alpha a few moments ago which is now being
used to check itself into its repository for test purposes.
@
text
@@
